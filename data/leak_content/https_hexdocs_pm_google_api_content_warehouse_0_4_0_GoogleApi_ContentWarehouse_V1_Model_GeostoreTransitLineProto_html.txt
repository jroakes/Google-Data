View Source GoogleApi.ContentWarehouse.V1.Model.GeostoreTransitLineProto (google_api_content_warehouse v0.4.0)
A transit line is a named set of transit trips that are advertised to passengers under a common name, and a number of attributes that are true for all those trips. There is no requirement for each trip to travel through the same list of stops or use the same legs, so a line can contain trips in opposite directions or with variations in the sequence of stops. See go/oysterpedia for an overview of the transit feature types. The standard feature properties are interpreted as follows: name - The names of this line, including both long and short names, if available. Short names like "10" or "Blue" should carry the FLAG_ABBREVIATED, long names like "Dublin/Pleasanton line" should not. The preferred name (one per language) for displaying the line on its own (e.g., as a search result for the line) should carry the FLAG_PREFERRED. website - The official web page describing this line. Repeated if multilingual. Line features have no geometry (neither points nor polylines nor polygons). Within Transit Oyster, geometry can be found in legs. Additional data only in Transit Oyster: child - The legs of this line, in no particular order. source_info - Specifies the GTFS routes that match this feature. Each is given as a PROVIDER_GOOGLE_TRANSIT source_info where dataset is the feed name and cookie is the route_id.
Attributes
-
agency
(type:list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t)
, default:nil
) - The transit agencies responsible for operating this line. All lines should have at least one agency, and most will have exactly one. The following cases are reasons for multiple agencies: - Code share: Two or more agencies share trips - Alternations: Each trip is run by one of multiple agencies - Additional: All trips run by one agency, but a second one sells tickets In all cases the order has no meaning. Clarification comes from the trips. -
labelBackgroundColor
(type:integer()
, default:nil
) - The background color of labels for that transit line. The encoding is like in HTML or CSS, eg. 0x11ff00 means a bit of red, full green, no blue, in sRGB color space. The most significant byte must be zero, i.e. no transparency. -
labelTextColor
(type:integer()
, default:nil
) - The text color of labels for that transit line. Encoding like label_background_color. -
stations
(type:list(GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t)
, default:nil
) - The transit stations (establishment POIs with gcid:transit_station) which this transit line can go through, in no particular order. Usage note: The source of truth are the transit leg features in Transit Oyster. In MapFacts, that information is cached in two locations: in this field, and in transit station attachments on POIs. Do not assume these locations are always up to date and/or synchronized with each other. -
vehicleType
(type:String.t
, default:nil
) - The type of vehicle that applies to all trips that use this line.
Summary
Functions
Unwrap a decoded JSON object into its complex fields.
Types
@type t() :: %GoogleApi.ContentWarehouse.V1.Model.GeostoreTransitLineProto{ agency: [GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t()] | nil, labelBackgroundColor: integer() | nil, labelTextColor: integer() | nil, stations: [GoogleApi.ContentWarehouse.V1.Model.GeostoreFeatureIdProto.t()] | nil, vehicleType: String.t() | nil }
Functions
decode(value, options)
View SourceUnwrap a decoded JSON object into its complex fields.
View Source GoogleApi.ContentWarehouse.V1.Model.GeostoreRankSignalProto (google_api_content_warehouse v0.4.0)
This message is embedded in the RankDetailsProto (below). It represents one rank signal, which is a floating point value estimating the Oyster Rank of the feature.
Attributes
-
metadata
(type:GoogleApi.ContentWarehouse.V1.Model.GeostoreFieldMetadataProto.t
, default:nil
) - Field-level metadata for this signal. -
rank
(type:number()
, default:nil
) - A value in the range [0, 1] estimating Oyster Rank according to this signal. Non-provider specific signals (e.g. SIGNAL_POPULATION) are interpreted by some common code in the ranking pipeline. Because of that, data providers should leave this field empty when setting such signals (so that the rank assignment can be uniform across all features regardless of contributing data providers). On the other hand, provider-specific signals (e.g. SIGNAL_ZENRIN_CITY_CATEGORY) are required to specify the rank field (it is not optional for them). That is because no code other than that of the provider itself will be able to fill in a meaningful value later on. We don't want clients to be reading from the raw_scalar / raw_string fields to interpret the data. -
rawScalar
(type:number()
, default:nil
) - The raw scalar value that was used to compute 'rank' above. The meaning of this attribute changes depending on the signal type. -
rawString
(type:String.t
, default:nil
) - The raw string value that was used to compute 'rank' above. The meaning of this attribute changes depending on the signal type. -
type
(type:String.t
, default:nil
) -
Summary
Functions
Unwrap a decoded JSON object into its complex fields.
Types
@type t() :: %GoogleApi.ContentWarehouse.V1.Model.GeostoreRankSignalProto{ metadata: GoogleApi.ContentWarehouse.V1.Model.GeostoreFieldMetadataProto.t() | nil, rank: number() | nil, rawScalar: number() | nil, rawString: String.t() | nil, type: String.t() | nil }
Functions
Link to this function
decode(value, options)
View SourceUnwrap a decoded JSON object into its complex fields.
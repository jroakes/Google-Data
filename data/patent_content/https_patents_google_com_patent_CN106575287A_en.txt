CN106575287A - Systems and methods for managing suggested edits in a collaborative document editing environment - Google Patents
Systems and methods for managing suggested edits in a collaborative document editing environment Download PDFInfo
- Publication number
- CN106575287A CN106575287A CN201580034716.6A CN201580034716A CN106575287A CN 106575287 A CN106575287 A CN 106575287A CN 201580034716 A CN201580034716 A CN 201580034716A CN 106575287 A CN106575287 A CN 106575287A
- Authority
- CN
- China
- Prior art keywords
- suggestion
- editor
- document
- model
- change
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/166—Editing, e.g. inserting or deleting
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/93—Document management systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/62—Protecting access to data via a platform, e.g. using keys or access control rules
- G06F21/6209—Protecting access to data via a platform, e.g. using keys or access control rules to a single file or object, e.g. in a secure envelope, encrypted and accessed using a key, or with access control rules appended to the object itself
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/166—Editing, e.g. inserting or deleting
- G06F40/169—Annotation, e.g. comment data or footnotes
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L65/00—Network arrangements, protocols or services for supporting real-time applications in data packet communication
- H04L65/40—Support for services or applications
- H04L65/403—Arrangements for multi-party communication, e.g. for conferences
Abstract
A document editor may manage suggested edits in a collaborative document. The document editor may instantiate a document model associated with the collaborative document. When a first editing suggestion is received for the collaborative document, a first suggestion command is associated with the first editing suggestion based on a type of the first editing suggestion and a type of the document model. The document editor may apply the first suggestion command on the document model to present the first editing suggestion within the collaborative document. When an acceptance indication for the first editing suggestion is received, the document model can be updated with the first suggestion command in response to the received acceptance indication.
Description
Cross reference
This application claims the U.S. Provisional Application No. 62/016,259 submitted on June 24th, 2014,62/016,262,
62/016,280th, the priority of 62/016,451,62/016,456 and No. 62/016,466.
Aforementioned application is clearly herein incorporated by reference.
Technical field
Usually, it relates to electronic document, especially, is related to for managing quilt in cooperative documents editing environment
The system and method for suggestion editor (suggested edit).
Background technology
In the exploitation of electronic document, it is often desired to allow multiple proof-readers to propose modification to the rough draft of the electronic document and comment
By.For example, author can create the initial draft of electronic document and the copy of the electronic document is sent to multiple proof-readers and use
In comment.Each proof-reader independently can propose to change or make comments in the electronic document, and should to author's return
The invulnerable release of electronic document.These steps can be repeated, until the electronic document that author and proof-reader are pleased with a version is
Only.However, this process is time-consuming and poorly efficient.
The content of the invention
System and methods described herein is proposed the document editor of editor there is provided the management in cooperative document
Platform.The document editing machine can be by the document model instantiation related to the cooperative document.When first editor's suggestion is connect
When receiving for the cooperative document, the type of type and the document model based on the first editor suggestion, the first suggestion order
It is associated with the first editor suggestion.The document editing machine can by this first suggestion order be applied to the document model, with
First amending advice is presented in the cooperative document.When the acceptance instruction for the first editor suggestion is received, in response to
The acceptance instruction for being received, it is possible to use the first suggestion order is updating the document model.
Description of the drawings
When the following detailed description is considered in conjunction with the accompanying, the features above of the disclosure and other features, including its essence
With its various advantage, will become more apparent, in the accompanying drawings：
Fig. 1 is the block diagram for providing the computerized system 100 of cooperative document environment according to one exemplary embodiment.
According to one exemplary embodiment, Fig. 2A -2B are there is provided illustrating that in document model management is proposed the aspect of editor
Exemplary logic flow chart.
Fig. 3 is patrolled there is provided the exemplary of aspect of the suggestion filter process for illustrating document model according to one exemplary embodiment
Collect figure.
Fig. 4 A-4B show and illustrate that merging is proposed the exemplary logic flow of the aspect of editor according to one exemplary embodiment
Figure 40 0.
Fig. 5 shows and document in merges suggestion to determine by the utilization priority class that check and correction manager 102 is used
The flow chart of the method 500 of order.
Fig. 6 shows showing for the aspect of the change of the omission conversion for illustrating definition document model according to one exemplary embodiment
Example property logic flow diagram 600.
Fig. 7 notifies editor with regard to being repaiied to cooperative document by partner there is provided according to illustrating for one exemplary embodiment
Exemplary logic flow Figure 70 0 of the aspect for changing.
Fig. 8 will edit exemplary logic flow Figure 80 0 for being converted to suggestion there is provided according to illustrating for one exemplary embodiment.
Fig. 9 is the schematically diagram according to the adopted exemplary computer system of one or more enforcements of the disclosure.
Specific embodiment
Understand to provide the overall of systems and methods described herein, some embodiments will now be described, including uses
In the system and method that the management in editing environment is proposed editor.However, one of ordinary skill in the art will be understood that, herein
Described system and method can be changed and be revised as the application for being suitable for being solved, and system as described herein and side
Method can be used in other appropriate applications, and these other additional and modifications will without departing from its scope.Generally, herein
Described computerized system includes one or more engines, and the engine includes processing equipment or multiple processing equipment, such as
Computer, microprocessor, logical device are configured to perform computer described herein using hardware, firmware and software
One or more of the other equipment or processor in change method.
Fig. 1 is the block diagram for providing the computerized system 100 of cooperative document environment according to one exemplary embodiment.
Three user equipmenies 109,113 and 117 that system 100 includes server 104 and connects via network 120.Server 104 includes
Electronic databank 103 and check and correction manager 102, the check and correction manager 102 manage the renewal of the various versions to main document 106.
Main document 106 can be stored in the electronic databank 103 on server 104, or is stored in single storage device.
In order that the cooperative process on electronic document is more effectively, cooperative documents editing environment is provided for integrated electricity
The modification that the cooperative of subdocument is proposed.In cooperative documents editing environment, the user at different user devices can be same
When access main document 106 with proofread document and propose modification.Each user and user type (such as such as editor, check and correction
Person or viewer) it is associated, user type defines the Permission Levels of the various versions for accessing document and to the various of document
The edit capability of version.As shown in fig. 1, the editor in user equipment 109 can be via editor's interface 110 and the main body of a court verdict
Shelves 106 are interacted, and the proof-reader in user equipment 113 can be interacted with main document 106 via proof-reader's interface 114, and place
Can interact with main document 106 via viewer's interface 118 in the viewer of user equipment 117.
The proof-reader of document can check, make and be proposed editor, and provide comment to document, but may not have
There is acceptance or refuse any license for being proposed editor.Proof-reader is can also look at by being built that other proof-readers of document provide
View editor and comment.Editor is with the document Permission Levels higher than proof-reader, and can receive or refuse any being built
View editor, and also any comment made by proof-reader can be deleted.Additionally, editor is by document direct editing or work
Go out comment, also with the entrance (access) that direct modification is made to document.From editor receive editor can be taken as by
Receive editor.The viewer of document is with the document Permission Levels lower than proof-reader, and can only check and do not include being built
View editor or any instruction, document the clean released version commented on.In this example, when editor checks document,
Editor can be checked by multiple proof-readers while the dynamic stream of the cooperative renewal made, this significantly reduces exploitation the document
Time quantum.By this way, it is compared with proof-reader independently proposes the system to the modification of document, right across proposing by allowing
Effective cooperation of one group of user of the modification of document, system and methods described herein provide significant advantage.
Using needing to allow modification to be traced as suggestion, before they are incorporated into document, them are needed to be connect
By or refusal.Performing this operation needs to take in the following manner to show these modifications：They can be from the basic of the cooperative document
Model separation, and allow different modifications to be associated with same suggestion.
Fig. 2A -2B are provided and are illustrated the example logic flow graph that the aspect for being proposed editor is managed in document model.Rise
201 are started from, document model can be instantiated as being associated with cooperative document.For example, document model can be in server (example
Such as, the 104) place in Fig. 1 is instantiated as being associated with the primary copy of electronic document.202, it is proposed that property modification can via with
Family equipment (for example, 109) receiving from user in Fig. 1.Document model can introduce documents editing pattern, wherein document modification quilt
Follow the trail of to advise, and/refusal can be received by editing machine.For example, 203, document model is able to verify that whether user has
The Permission Levels for being proposed editor are made, for example, user is proof-reader, editor or viewer, and to qualified from user
Equipment is made the user for being proposed editor of the cooperative document and provides " suggestion " option.This model can replace " only commenting on "
Model, it is allowed to which the people with comment entrance make comment and provide suggestion.Usually, the editor for being made by editor can be by
Proponent performs.
204, server can be based on editor be proposed, it is determined that the semanteme of application.For example, it is proposed that can be specific with model
Mode is showed.Generally, which of annotation model insertion deletion/modification is partly proposed showing them by.For example, for
Character string text model, reservation are proposed insertion and the scope deleted.Order is considered in certain addressable space
Action.Example includes gap character string or stereogram, for the lantern slide list that shows or shape set.Give seeking for they
Location space, can be included in the order within proponent and be illustrated in following Fig. 1：
Table 1：Example command
205, it is proposed that order can be associated with editor's suggestion.In order to support that suggestiveness is changed, each order can be with
With corresponding suggestion order.When in suggestion mode, the usual version not ordered, but the suggestiveness version quilt of order
Using.The exemplary semantic of the suggestion order that the example command shown in table 1 is obtained can be illustrated in table 2 below：
Table 2：Exemplary proposed order
It is viewed from above, it is proposed that order SuggestCreate can create object, but also be marked as being proposed slotting
Enter.This means just as being typically inserted into like that, being proposed insertion operation affects addressable space-later order to assume object
Existence.Different from generally deletion, SuggestDelete does not actually delete object, but is marked as deleting.This permission
Primary object is addressed and changes, until suggestion is accepted or rejected.SuggestModify can be with about the one of keeping object group
(parallel) is proposed attribute parallel.Notice that no framework order needs suggestiveness version.206, text model
Then can be advised so that editor is presented using the suggestion order.
Continue Fig. 2 B, 207, after editor's suggestion is presented using document model, similar to suggestion order, to each
, there is corresponding acceptance and refuse order in order.Therefore, 208, when the user feedback in response to editor's suggestion is received, such as
Fruit indicates to receive 209, then 210, document model can will be proposed editor and be converted to and be received editor, and 211
Update document model.212, based on can be issued to user by the updated document for receiving editor.Otherwise, if referred to 209
Show refusal, then 213, editor's suggestion can be removed from document.Example receive or refuse semanteme can in table 3 below quilt
Illustrate：
Table 3：Example receives/refusal semanteme
As visible in table 3, object can be cancelled and be labeled as being proposed insertion by AcceptCreate, this make it with it is usual
The object of insertion is identical.RejectCreate can delete object.Similarly, AcceptDelete deletes the object, and
RejectDelete cancellations are marked as being proposed deletion.AcceptModify receives parallel property and moves them into this
In the general property of object.This has overthrown general property, and eliminates like attribute.RejectModify can remove similar category
Property.
Each suggestion order has mark (id), so that multiple orders can be become by conceptually linking together
Single suggestion.These id are retained in model everywhere in the following form：
● when object is marked as being proposed insertion or deleting, the suggestion has depends on its mark.Object can have
There is multiple being proposed to insert or delete id.
● when the attribute of object is proposed, they are changed in parallel spatial.The space is associated (tie) with id,
So that the multiple attribute modifications in single suggestion are retained in the lump.Object can have multiple attribute modification parallel spatials.
● when suggestion is mobile, object is stopped in space, and is suggested index to annotate using new.The index with
Suggestion id is associated, so that multiple suggestion id can propose different moving indexes.
● when suggestion is replaced, original object is adjacent to, new object is inserted into, and the two is noted as mutual replacing
Change.These are replaced annotation and will be associated with suggestion id.
Additionally, the order for receiving and refusing suggestion also has id.Same deletion or same attribute modification are proposed for existing
Multiple suggestions situation, the id allow a user to specify which suggestion actually received/refused.Notice for applying mesh
, it is proposed that id be enough to recognize that what is accepted or rejected.However, it may be desirable to the order data of whole, such as interval, with
Suitably convert relative to these orders.
The example below provides example command, for SuggestCreate and SuggestDelete：
1. the insertion of certain text is advised：
a.SuggestInsertSpacers(id:“a”,index:5,spacers:“hello”)
2. the deletion of certain text is advised：
a.SuggestDeleteSpacers(id:“b”,start:10,end:20)
3. receive first to advise：
a.AcceptInsertSpacers(id:“a”,start:5,end:9)
4. refusal second is advised：
a.RejectDeleteSpacers(id:“b”,start:10,end:20)
In another example, the application of SuggestModify can be expressed in the following table：
Table 4：The example of suggestiveness function
Suggestion can be performed, receive and refuses the reverse of order.As they are generally orders, it is therefore proposed that, receive and
Refusal order needs reversely to support to cancel these operations.As shown in following table, because suggestion creates suggestion and refuses removal building
View, it is therefore proposed that and refusing to order reversely with each other.
Table 5：Example refusal is semantic
However, application may not have naturally reversely.This means to need new order to make suggestion reversely should
With.These orders do not have reverse.Alternatively, the reverse of original directive that can reversely be modeled as of acceptance adds original directive
Suggestion.Here, the good OT that the balance between number of commands can be observed to order with these is semantic.Illustrate in following table
Each take orders reverse semantic and how to be modeled as original reversely plus suggestion.
Table 6：Receive semantic example reverse
From the above, generally, SuggestModify is discretely stored with actual attribute and is suggested attribute.If however, should
Attribute includes nested type addressable space, such as list, and this is probably the presence of doubtful point.For example, ParagraphStyle in bags
Containing one group of tab stop.When someone advises insertion (or deletion) of tab stop, for very same reason, it may be necessary to general wound
Build/deletion action identical behavior.Therefore, it is suggested that the insertion operation of tab stop need to be inserted into actual list and be by
Insertion.The deletion action of suggestion tab stop needs to be marked as deleting.Therefore, only when it not nested type addressable space it
When interior, the attribute in parallel spatial can be applied using SuggestModify.Otherwise, it is using overall semantic.
Table 7：Example-tab stop
It is similar with all orders, suggestion order is created in client via editing system.One of the integrated purpose be for
Individually editor is made not know suggestion.The expense that this contributes to changing the suggestiveness of support new feature is minimum.Basic skills
It is, using by by each order of generally editor's application, to generate the suggestion version of order and alternatively apply the suggestion version.
However, this exposes problems with：The semanteme of suggestion order is not equal to the semanteme of usual order.For example, SuggestDelete
Object is not deleted actually.Therefore, editor is cannot rely upon using some orders for changing for generating ModelState.To solve
This problem, can make the copy of original ModelState, and generally editor's function can be applied to the copy.This can
To be correct with regard to any hypothesis how ModelState changes to provide by editor.So, the order being employed originally
Can be used, and generate the suggestion version of they each.However, due to different semantemes, based on suggestion life before
Order, can adjust each suggestion order.For example, advise that the order for generating can include by DragDropEdit：
1.DeleteSpacers(5,10)
2.InsertSpacers“hello”@50
The suggestion version of these orders can include:
1.SuggestDeleteSpacers(5,10)
2.SuggestInsertSpacers“hello”@56
In order to generate these order be proposed version, following operation can be performed:
1. SuggestDeleteSpacers (5,10) is generated from DeleteSpacers (5,10).
2. the conversion order being adapted to is generated from SuggestDeleteSpacers.
3. SuggestInsertSpacers " hello "@50 is generated from InsertSpacers " hello "@50.
4., relative to conversion order, SuggestInsertSpacers is converted, SuggestInsertSpacers is obtained
“hello”@56.
In a kind of enforcement, it is proposed that the example object class involved by editor's document environment can be using similar to following pseudo- generation
The form of code section：
/ * * provide suggestion editor.*/
class SuggestEditProvider(editProvider){
Edit provideEdit(context){
return new SuggestEdit(context,this.editProvider_.provide
(context.copy())
}
boolean canApply(context){
return this.editProvider_.canApply(context)
}
}
/ * * apply given editor for suggestion.*/
class SuggestEdit(context,edit){
void applyInternal(args){
Var result=this.edit_.apply (args)；
Var id=String (Math.random ())；//Some random string.
Var transformCommands=[]；
for each command in result.getCommands(){
Var suggestedCommand=this.commandSuggestor_.getSuggestedComm and
(command,id)；
Var pair=this.transformer_.transformBoth ([suggestedCommand],
transformCommands)；
TransformCommands=pair.getCommands ()；
SuggestedCommand=pair.getCommandsToWin ()；
transformCommands.push(
this.commandSuggestor_.getTransformSuggestCommand(suggestedComma nd)；
this.applyCommand(suggestedCommand)；
}}
}
/ * * create suggestion order from generally order.*/
interface CommandSuggestor{
/ * * obtain the correspondence suggestion order of given order using given suggestion id.This is by for the step in above example
Suddenly (1) and (3).*/
Command getSuggestCommand(command,id,model)
The given suggestion orders of/* *, return will be used to convert the order of the later suggestion in same editor.Such as quilt
What getSuggestCommand was returned, the order will be explained order and advise that the difference between order is semantic.This will be used for the above
The step of example (2).*/
Command getTransformSuggestCommand(suggestCommand)
Receive and refuse suggestion to be also performed via following editor：AcceptEdit and RejectEdit.These editors can
Only to be performed by editor.When selecting to receive/refuse from suggestion comment, they are triggered.Acceptance/refusal is given to editor
Advise id, then inspection model is associated with the id by it to determine which modification.Suitable refusal/take orders and then can be with
It is applied to these modifications.It is noted that because this depends on checking the model and generates acceptance and refuse order, there will be no
The general enforcement of these editors.Suggestiveness receives or refuses involved example object class can be using similar to following puppet generation
The form of code section：
In a kind of enforcement, it is proposed that person can issue SuggestDelete rather than usual Delete, so that object will be by
Labelling is used to delete, rather than is actually deleted.However, if by same user in the object being initially recommended, then permit
Permitted them and deleted the object.For example, if user's suggestion insertion " teh cat ", then they can enter and change its clerical mistake.
This is completed by returning appropriate order from getSuggestedCommand based on current context.It is more tight in order to allow
The semanteme of lattice, single delete command can be created, so that proponent issues and then using checking, to guarantee that they can not
Delete any object.
In a kind of enforcement, the accesses control list (ACL) being associated with document can be examined for advising.For example,
User under comment role is with the ability that order is applied to model, so that they can apply the position for following the trail of its comment
The order put.However, via CommandPermissionChecker interfaces, the limit of order that can be employed is existed for
System.Changed using suggestiveness, maintain the inspection be simple, because there is the specific collection of the order that proponent can issue
Close：
Suggestion order (Suggestion command), therefore they can make suggestion.
Refusal order (Rejects command), therefore therefore they can cancel suggestion and (and they can may refuse
Exhausted themselves editor).
For the special delete command deleted in suggestion.
MultiCommands and ReverseCommand (being only allowed for order including other)
·NullCommand。
This will prevent proponent from any actual modification is made to document.It is contemplated, however, that more strict ACL check machines
System, wherein proponent can be prevented from affecting mutual suggestion.This more narrow examination be not currently executed for comment-
Commentator is allowed using the order commented on for grappling, but regardless of who actually possesses the comment.Perform this more strict
Inspection will be complicated, because it will be it should be understood that who possesses each advises that id, suggestion id are not stored as the document mould
A part for type.Conversely, these orders can be relied on do not issued by UI, and can with based role non-individuals maintaining ACL
Check.
Suggestion from different user, account and/or suggestion id can be with merged.When in suggestion mode, it is not
All editors generate the order with new suggestion id.For example, sentence being input in repeatedly editing should generate single suggestion.This
It is referred to as merged suggestion.As suggestion must be received in bulk or refuse, so merge determining the granularity.Example is built
View combiner can be expressed in the following example：
1. character is input in suggestion mode:
a.SuggestInsertSpacers(id:“a”,index:5,spacers:“h”)
2. another character is input into:
a.SuggestInsertSpacers(id:“a”,index:6,spacers:“i”)
I. notice that id is identical.Twice insertion operation is a part for same suggestion now.
3. the suggestion is received:
a.AcceptInsertSpacers(id:“a”,start:5,end:6)
4. or the suggestion is refused:
a.RejectInsertSpacers(id:“a”,start:5,end:6)
Before utility command, the model can be checked to determine that the order will be merged with which suggestion (if present).
If all orders in editor obtain the suggestion id possessed by active user, then can be using these suggestions id.Otherwise, may be used
To create new suggestion id.By checking each id by this way, the situation such as dragged/put and find can be spanned and build
Discuss to replace and support.The example below describes merging process：
Table 8：Exemplary ECDC is simultaneously advised
The problem of this method is to edit the copy for being applied to ModelState due to original, so it needs to calculate
ECDC suggestion data simultaneously.Before the order being not switched on using each, ECDC suggestion data simultaneously are calculated, for example instead
To.As the order being cancelled, ECDC suggestion data simultaneously will also need to from original editor return.Implement for reverse
The mechanism of icotype can be used to calculate and return ECDC suggestion data simultaneously.For example, command preprocessor can be used
Can also be adapted for reversely in suggestion combiner, and the preprocessor.
Another example of suggestion document model is implemented to be to process synthesis suggestion.Synthesis suggestion is created in other suggestions
Suggestion.For example, a user proposes insertion sentence and a different user proposes to be inserted into word in the sentence.From editor
The visual angle of person's model sees that synthesis suggestion appears like two and generally advises：With two independences, uniquely advise id.If
There is no the special UI for synthesis, then two different suggestions during these suggestions are taken merely as comment represent, but make
For the overlapping region in cooperative document, comment on more like current overlap.Editor is possible to come independently of outermost suggestion
Receive inner most suggestion.This was just as continuing executing with just now and made their own the behavior of modification as editor.Work as spy
When different UI is used for synthesis suggestion, it is proposed that the relation between id can be stored in diverse location.For example, current UI is proposed
Synthesis suggestion is shown in single comment, therefore the relation can be stored in comment.
In order to determine be proposed editor whether should be with another Edit and Compose, it is possible to use similar to merging determined above
Mechanism.Given one group of suggestion id for each order, it is possible to use similar heuristic：If all id are identical,
And the suggestion is not possessed by active user, then specific suggestion id can be synthesized.
Another example of suggestion document model is implemented to be to process to substitute suggestion.Replacement is afoul suggestion each other.For example,
If a user proposes to delete sentence, and another user proposes to be inserted into word in the sentence.Spy for substituting is not provided
It is different to store.If it is desired to be directed to the special UI for substituting suggestion, then by checking the model, can substitute in customer side detection.
Document model can provide a user with the UI that suggestion is presented, for example, " checking " pattern.Text under " checking " pattern
Shelves model can with reading model advise state and suitably render.For example, it may determine that some intervals are to be proposed insertion,
And with make the user of the suggestion partner's color rendering they.Alternatively, it may determine that some intervals are to be proposed to delete
Remove, and with strikethrough and using appropriate color rendering them.
Suggestion is associated in comment data, and will show comment for each suggestion.Comment will storage
The following master data for being separated of suggestion id：
1. the user of the suggestion is made,
2. timestamp is advised,
3. explain that what some metadata suggestion be,
4. suggestion is received or is refused.
User is allowed to comment in suggestion, just as commenting in generally comment.Further it is proposed that will be with permission editor
Receive/refuse their control.When this happens, commenting on thread will be annotated, and extraordinary image is closed and reopens comment.Suggestion is commented
By by including explain the suggestion before behavior some texts.This will be obtained from metadata.Metadata will be structured and be to answer
With specific, although some metadata are probably general.The example of potential metadata can be using similar to following shapes
Formula：
●{type:insert,text:“hello”}
●{type:delete,text:“hello”}
●{type:style,key:“font_size”,value:15}
Other data can be stored to support synthesis suggestion.Copy and stickup have another to the behavior that comment data occurs
Outer consideration.
Another example of suggestion document model is implemented to be editing meta-data.In order to generate suggestion metadata, can wake up
EditMetadata functions, this has been served for describing this purpose of the editor of accessibility.EditMetadata is given
The details of the definite behavior before with regard to the editor.The class of each editor can be adopted, it employs EditMetadata simultaneously
Generate appropriate comment metadata.
Via document model, the usual editor in suggestion can be performed.User under edit pattern is allowed to affect any
Content, including suggestion.When editor makes modification to suggestion, modification is typically committed immediately --- and it and non-synthetic are created as
Suggestion.In order to keep the writer identity which content whom suggested to follow the trail of, it is possible to use what did before explaining editor
Some texts annotating comment.This can by create editor metadata and be appended to the comment thread of the suggestion come
Perform.
Another example of suggestion document model is implemented to be to filter suggestion.Fig. 3 is provided and is illustrated that the suggestion of document model is filtered
The example logic flow graph of the aspect of process.
Document model O 301 can provide the pattern that editor can filter suggestion.These filters can be according to
Family or suggestion type (insertion, pattern etc.).In order to allow the motility of the filter which can support definite, by applying life
The arbitrary collection of order and and then when order by back and forth transmit time-varying change client and server command, can allow filter.In order to
Filter is created, order C 302 can apply to model O 301.New model M 303 is this results in, the model can be used for
Client is checked and controller, and can allow to check identical with controller logic maintenance regardless of filtration.
When filter order C 302 is created, reverse I (C) 304 can also be created.Additionally, two models 301 and 303 can
To be maintained：Archetype 301 before filtration, and new model 303 after filtration.When conversion, the two models
Can aid in and create appropriate reverse.
Filter algorithm (can illustrate) work in a manner similar to the following in Fig. 3 (a)：
1. Command Filters order C 302 is generated,
2., via generally inverted, create filter and reversely order I (C) 304,
3. duplicating model, keeps original paper O 301 and copy M 303, and the copy will be new model,
4. to 303 utility command C 302 of new model M.
Any order generated by client-side controller may be directly applied to M.In order to send these orders to server,
They need to be transformed relative to I (C).In one example, whole algorithms can be performed (be illustrated in Fig. 3 (b)) as follows.
1. to 303 utility command X 305 of model M.This obtains new model M ' 307.
2. convert X 305 to obtain X ' 309 and I (C) ' 310 relative to I (C) 304.
3. X ' 309 is applied to archetype O 301.This obtains new archetype O 312.
4. X ' 309 is sent to server,
5. now, reversely order is I (C) ' 310 to new filter.
6., by reverse I (C) ' 310, new filter order is generated.
Similarly, any order for receiving from server can be applied directly to O 301.In order to apply these to M303
Client, they can be transformed relative to C 302.In one example, whole algorithms can perform (in Fig. 3 (c) quilt as follows
Illustrate).
1. to 301 utility command X 305 of archetype O.This obtains new archetype O ' 312.
2. convert X 305 to obtain X ' 309 and C ' 315 relative to C 302.
3. X ' 309 is applied to model M 303.This obtains new model M ' 307.
4. now, new filter order is C ' 315.
5. reversely, generate new filter and reversely order by C ' 315.
The suggestion is filtered in order to cancel, I (C) 304 can apply to model M 303, this cause the model now with it is original
Model O 301 is of equal value.Notice, but model M 303 can be replaced using archetype O 301.This
Meaning can be using I (C) 304, and therefore can be and non-return using omitting order.In this way, may be used
With the entrance for archetype not being provided to transform layer.However, filter as archetype can be used for cancelling, so it can be by
Maintenance is newest.
Another example of suggestion document model is implemented to be that service implementation device changes.Suggestion is only for edit pattern or comment mould
User under formula is visible.Check, preview and release model cannot show suggestion.This may be needed similar in server
The logic that side is filtered.Server can know how to generate the model with suggestion is stripped, and when should use the mould
Type and the usual model of non-usage.The example that suggestion can be stripped is included：
1. check, preview and release model,
2. export,
3. indexable text and thumbnail.
The few examples for more than are noticed, such as output and indexable text, depending on access level, can be with
Implement different logics to prevent from losing function.
Insertion is proposed to represent by using being proposed insertion id and carrying out the scope of retrtieval.Paragraph is inserted by similarly
Performance-line feed labelling is marked for insertion.
The following is using extensible markup language (XML) form " hello " is inserted as the example pseudo-code of tracked modification
Section.
<w:ins w:Id=" 0 " w:Author=" AUTHOR " w:Date=" 2013-09-12T10:58:00Z">
<w:r>
<w:t>hello</w:t>
</w:r>
</w:ins>
Label w:Ins is used to indicate that its content is tracked for inserting.Id (w of the label comprising modification:Id), make
Person (w:) and date (w author:data).In example more than, insertion is included with " hello " as its text (w:
T) text operation (w:r).The following is example puppet of the insertion line feed as tracked modification after " hello " in xml format
Code segment：
<w:p w:RsidR=" 009F5AAA " w:RsidRDefault=" 009F5AAA "
w:RsidP=" 009F5AAA ">
<w:pPr>
<w:rPr>
<w:ins w:Id=" 0 " w:Author=" AUTHOR " w:Date=" 2013-09-12T10:58:00Z">
</w:rPr>
</w:pPr>
<w:r>
<w:t>hello</w:t>
</w:r>
</w:p>
Using sleazy label w:Ins is tracked for inserting to indicate line feed.Id (w of the label comprising modification:
Id), author (w:) and date (w author:data).
Another example of suggestion document model is implemented to be to process Textuality to delete.Id labellings text is deleted by using being proposed
This scope is proposed deletion to show.Paragraph deletion is similarly showed-is entered a new line labelling and is marked for deleting.
The following is the example pseudo-code section that " hello " is labeled as tracked deletion in xml format.
<w:del w:Id=" 1 " w:Author=" AUTHOR " w:Date=" 2013-09-12T10:58:00Z">
<w:r w:RsidDel=" 00996D0B ">
<w:delText>hello</w:delText>
</w:r>
</w:del>
Label w:Del is used to indicate that its content is tracked for deleting.Id (w of the label comprising modification:Id), author
(w:) and date (w author:data).In example more than, insertion is included with " hello " as its text (w:
DelText text operation (w):r).The following is in xml format in " hello " labelling line feed afterwards as tracked deletion
Example pseudo-code section：
<w:p w:RsidR=" 009F5AAA " w:RsidDel=" 00635749 " w:RsidRDefault="
00635749"w:RsidP=" 009F5AAA ">
<w:pPr>
<w:rPr>
<w:del w:Id=" 1 " w:Author=" AUTHOR " w:Date=" 2013-09-12T10:58:00Z"/>
</w:rPr>
</w:pPr>
<w:r>
<w:t>Deleted</w:t>
</w:r>
</w:p>
Using sleazy label w:Idel is tracked for deleting to indicate line feed.Id of the label comprising modification
(w:Id), author (w:) and date (w author:data).
Via from suggestion id to the mapping for being proposed attribute, show and be proposed text style.The mapping is applied to text
This scope.The following is in xml format to " hello " application " runic " as tracked modification example pseudo-code section.The list
Word is italicization.
<w:r w:RsidR=" 006B2B93 " w:RsidRPr=" 006B2B93 ">
<w:rPr>
<w:b/>
<w:i/>
<w:rPrChange w:Id=" 2 " w:Author=" AUTHOR "
w:Date=" 2013-09-12T15:14:00Z">
<w:rPr>
<w:i/>
</w:rPr>
</w:rPrChange>
</w:rPr>
<w:t>hello</w:t>
</w:r>
Exist with operation attribute tags (w:) and certain text (w rPr:T) text operation (text run) (w:r).Fortune
Row attribute includes current attribute, and the current attribute includes tracked modification：Runic (w:B) with italic (w:i).It is also comprising operation
Attribute modification label (w:RPrChange), the label is included in using the attribute before tracked pattern, and the attribute is only italic
(w:i).The attribute modification label also id (w comprising the modification:Id), author (w:) and date (w author:data).
Via from suggestion id to the mapping of the attribute being proposed, show and be proposed paragraph style.The mapping is applied to
The line feed of paragraph.The following is and " center " is applied to into showing for the paragraph comprising " hello " as tracked modification in xml format
Example false code section.
<w:p w:RsidR=" 00ED223B " w:RsidRDefault=" 001243D1 " w:RsidP=" 001E67D7 "
>
<w:pPr>
<w:spacing w:Line=" 240 " w:LineRule=" auto "/>
<w:jc w:Val=" center "/>
<w:pPrChange w:Id=" 4 " w:Author=" AUTHOR "
w:Date=" 2013-09-13T16:39:00Z">
<w:pPr>
<w:spacing w:Line=" 240 " w:LineRule=" auto "/>
</w:pPr>
</w:pPrChange>
</w:pPr>
<w:r>
<w:t>hello</w:t>
</w:r>
</w:p>
Exist with paragraph properties label (w:PPr) and text operation (w:R) paragraph operation (w:p).Paragraph properties bag
Containing current attribute, the current attribute includes tracked modification：Line space (w:Spacing) and alignment (w:jc).It is also comprising fortune
Row attribute modification label (w:PPrChange), the label is included in using the attribute before tracked pattern, and the attribute is only gone
Spacing (w:spacing).The attribute modification label also id (w comprising the modification:Id), author (w:) and date (w author:
data)。
Via from suggestion id to the mapping of the attribute being proposed, show and be proposed list style.The mapping is applied to
The line feed of paragraph.Also via the mapping from suggestion id to attribute, show impact list entity is proposed modification.The mapping quilt
It is applied to list entity.
The following is the example puppet generation that the paragraph comprising " hello " is added to list in xml format as tracked modification
Code section.
<w:p w:RsidR=" 006F3E3C " w:RsidRDefault=" 006F3E3C " w:RsidP=" 006F3E3C "
>
<w:pPr>
<w:pStyle w:Val=" ListParagraph "/>
<w:numPr>
<w:ilvl w:Val=" 0 "/>
<w:numId w:Val=" 3 "/>
</w:numPr>
<w:pPrChange w:Id=" 6 " w:Author=" AUTHOR "
w:Date=" 2013-09-13T16:39:00Z">
<w:pPr/>
</w:pPrChange>
</w:pPr>
<w:r>
<w:t>five</w:t>
</w:r>
</w:p>
Exist with paragraph properties label (w:PPr) and text operation (w:R) paragraph operation (w:p).Paragraph properties bag
Containing current attribute, the attribute includes tracked modification：Using being named as pattern (w:PStyle " ListParagraph "),
And add the paragraph in nesting level " 0 " (w:Ilv1 list id " 3 " (w):numid).It is also repaiied comprising operation attribute
Change label (w:PPrChange), the label is included in using the attribute before tracked pattern, and the attribute is sky (w:pPr/).
The attribute modification label also id (w comprising the modification:Id), author (w:) and date (w author:data).
Another embodiment described herein be included in cooperative by edited in document merge be proposed editor system and
Method.Document editor can allow user to make editor as suggestion, and the suggestion with tracked, and can be merged in this
It is accepted or rejected before document.These suggestions are used as the different modifications that can be independently received or be refused to the document
Exist.When user makes unilateral act to edit document, character is such as input into, it is undesirable to which each of these behaviors is individually
Generate independent suggestion.Especially, when document proof-reader open document and establishment to document when being proposed modification, it is not all
Editor should generate the order with new suggestion identifier.For example, sentence being input in repeatedly editing should generate single building
View.Because obtaining single suggestion from repeatedly editor or change, these are referred to as merged suggestion.As suggestion must be criticized
Amount ground receives or refuses, so merging the granularity for determining suggestion.
The system and method for the 6th exemplary embodiment of the disclosure determine the current modification to model whether should with it is existing
There is suggestion to merge, or whether such modification should create new suggested.The system and method for the disclosure have sufficiently general
Property, so as to well run to the set of any modification or modification of document model.Existing system does not consider whole document mould
Type, and not being consistent property and user view.
Fig. 4 A-4B show and represent exemplary logic flow Figure 40 0 for merging the aspect for being proposed editor.Method is opened 401
Begin, in response to received editor suggestion (for example, in Fig. 2A 202), the document editor at server or user equipment can
To determine whether to advise merging with existing editor's suggestion by the editor for being received, or create new editor's suggestion.Document is compiled
Collect one or more changes that device can determine and editor's suggestion is associated.For example, via a series of gradual atomic change, can
To describe the modification to document model.In documents editing environment, such as text editor, change can include insertion character,
Delete the modification of character, Apply Styles or any other type that can be made to text document.The single of document is proposed
Editor can cause to be applied to multiple changes of model.
For example, being proposed editor can include the addition word with the insertion of multiple characters or phrase.In another example,
Being proposed editor can include replacing existing phrase using different phrases.It is such be proposed editor will be including multiple character deletions
Insert with multiple characters.In still another example, being proposed editor can include inserting one or more characters, and to being inserted
Enter character and change pattern.In each example, being inserted into editor includes the multiple changes to document.When change is by received in sequence
When, it is usually desirable to it is determined that whether current change should merge into the part of single editor, or current change with change before
Whether the part of new edited should be characterized as.
There is provided herein be used to determine whether by the current change to document with it is existing be proposed editor merge, or
It is no based on the current change generating the new system and method for being proposed editor.Document editor have based on user action and
The current state of the document editing machine come determine to the document application which change logic.
402, then document editor can define the function changed for each.Function determines that change can be with which
A little suggestions merge.The function can be defined for editing the specific change and document model in application.As an example, in document
In editing machine, insert character change can with before this is inserted into text, afterwards or surrounding generation any is proposed
Text merges.
Additionally, function can determine the merging priority of change.In this example, change is sorted according to priority orders, with
So that the larger modification to document can be considered before less modification.For example, if being proposed editor includes insertion text
Sheet and Apply Styles, then, compared with the position of pattern application, the position of insertion more likely becomes the candidate of merging.In this situation
Under, insertion change can be with more more preferential than pattern application change.
403, when change is applied to model, run function to recognize any potential merging suggestion and priority
List.405, document model may then determine whether to need from any change of the list filtering.For example, 406, do not worked as
Any suggestion that front user possesses can be removed or from list filtering.Filter list guarantees to be made by active user by this way
The suggestion for going out will not be merged with the suggestion made by other users, and alternatively create the new suggested possessed by active user.Replace
Dai Di, function can include one or more filters, so that being built by any potential merging that the function is recognized in list
View priority is only associated with active user, rather than is associated with other users.
Generally, when determining whether that merging is proposed editor, insert and delete usual text and there is highest priority.Can
Define and insert and delete the suggestion that text merges with the heuristic according to more than.Specifically, insertion is returned and is being inserted
Enter the insertion before or after position or delete the suggestion for merging.Delete return with before scope is deleted, afterwards or inside
Any insertion operation deletes the suggestion for merging.The modification related to pattern has sub-priority.For example, this includes text and section
Fall pattern, the modification to list and link.Only just merge these volumes when changing scope and being fully contained within deletion or insertion
Volume.If scope is identical or if inside other patterns and affecting same attribute, they are also proposed pattern with other
Merge.The deletion of secondary text has sub-priority, and merges with other deletions of one text.Secondary text be document body with
Outer text, it is generally related to the document, for example, such as head, footer, footnote.The insertion of secondary text has minimum preferential
Level and do not return merging suggestion.The text is always generated new suggestion (such as in the case of head and footer), or
It is related to main (primary) text (such as footnote), therefore the main text that use is merged with heuristic.
When determining how merging and being proposed editor, the method for exemplary embodiment can include that definition is associated with merging
Priority classification framework, the merging fallen within the category.Each suggestion can be allocated merging suggestion identifier,
The merging suggestion identifier identification is proposed behavior and is proposed the priority class of modification.Closed depending on editor is proposed
And according to priority, these priority class are divided into the example categories that primary and secondary and neutral priority merge.
In this example, master-priority classification includes the suggestion of the insertion and deletion at such as non-chapters and sections interval.Sub-priority class
Jian Yi not include to the different pattern of document text application, association, update or deletion entity；Or delete chapters and sections.Neutral priority
Classification suggestion includes inserting chapters and sections, increases entity and various other suggestion orders.
Continue Fig. 4 B, after being at 407 list filtered by determination, 408, check all of the existing priority of highest
It is potential to merge suggestion, to determine at 410, if should occur to merge.If all changes at the priority have phase
The suggestion of matching, then occur to merge.Otherwise, should not occur to merge, and 411, create new suggested.
If merge occurred, then 415, during systems and methods described herein determines the possibility suggestion of filter list
Which suggestion should be used for merging.Various ways can determine which suggestion should be used for merging, and described herein
Example is only used for declarative example.
In one example, more common suggestion can be preferably for merging.A kind of ad hoc fashion is preferably more
For common suggestion.Some steps can be used for implementing this point.First, create the Nogata for indicating how long each suggestion occurs
Figure.Secondly, from it is most common to least common considering change, and be able to can be made with the specific any change for advising merging
With.3rd, for any change without potential merging suggestion, then using the most commonly generation with limit priority
Suggestion.When it is determined that being advised to merge using which, 416, editor's suggestion can be with merged.
As described herein, one of purpose of the disclosure is to define across different editors to merge the mechanism of suggestion, with
And the mechanism for collecting the merging data is determined when being proposed editor and being applied to document model.Example below is provided when two
The enforcement of system when character is transfused to, and the system determines that two characters belong to same suggestion in the lump：
1. character is input under suggestion mode:
a.SuggestInsertSpacers(id:“a”,index:5,spacers:“h”)
2. another character is input into:
a.SuggestInsertSpacers(id:“a”,index:6,spacers:“i”)
I. notice that id is identical.Twice insertion is a part for same suggestion now.
3. the suggestion is received:
a.AcceptInsertSpacers(id:“a”,start:5,end:6)
4. or the suggestion is refused:
a.RejectInsertSpacers(id:“a”,start:5,end:6)
Before utility command, document model can determine that the order should be merged (if present) with which suggestion
(for example, Fig. 4 B 415).If all orders in editor are associated with the suggestion identifier possessed by active user, then
Can be using these suggestion identifiers.Otherwise, can generate and using new suggestion identifier.By performing by each identifier
This operation, including shearing/paste or search/replace modification can be efficiently implemented.
In another example, it is based on the priority class that is proposed editor is assigned to, when in scenario described below, basic
Heuristic includes the merging for completing suggestion：After the insertion/before/internal input, after deletion/before/it is internal defeated
Enter, with input before being proposed the line feed of text style, before/after in deletion/it is internal/around deletion, in insertion
Before/afterwards/internal/around delete, deleting internal input, before insertion/afterwards/internal input, changing insertion is internal
Pattern, it is applied to the pattern in interval identical with another pattern, changes other patterns deleting the internal pattern, change of changing
If internal pattern, have impact on same attribute, or change the text sample of the line feed being applied to after insertion is proposed
Formula.When in scenario described below, it is proposed that not merged：After pattern/before/internal input, before/after pattern/internal/
Around delete, before/after deletion input, before/after replacement input, before insertion/afterwards change pattern, deleting
Change pattern before/after removing, change pattern, change pattern deleted in overlap or be not at same scope in overlap insertion
Other patterns inside, before, afterwards or the place of overlapping change pattern.
There are two kinds of special cases in the consideration to line feed surrounding and text style：With the line feed for being proposed text style
It is input into before, and is applied to be proposed the text style of the line feed after inserting.These special cases are with similar to above institute
The mode of description is implemented：Whether insertion merges the logical check insertion with before being proposed the newline of text style, and
And pattern merges the line feed after whether the logical check pattern is applied to be proposed insertion operation.These situations generate several asking
The solution of topic.In one example, start dead band using the line feed do not advised to fall to not being a problem.In the second example,
" runic " is clicked on while suggestion editor pattern is proposed to line feed application.In the 3rd example, input character is before line feed
Insertion character.The suggestion of insertion character is merged with suggestion before.
Fig. 5 shows and document in merges suggestion to determine by the utilization priority class that check and correction manager 102 is used
The flow chart of the method 500 of order.Method is comprised the following steps：Any major category suggestion (determining block 502) is determined whether there is,
Any classification id command (determining block 506) is determined whether there is, and is based on these results, suitably merged and be proposed editor.
Advise if there is master-priority classification, these merging are performed (step 504).If there is sub-priority categories combination, it
Be performed (step 508).Alternatively, if there is no the suggestion of sub-priority classification, further do not merged (step
510)。
Merging includes that the editor that is proposed for inserting occurs according to some rules.In a kind of enforcement, press under comment pattern
Independent comment of the lower ENTER keys insertion for each line feed.Multiple paragraphs are input into, are obtained covering and is proposed the merged of paragraph
Editor.
In some cases, multiple users can advise the various editors to text, including afoul suggestion.In suggestion
Under afoul situation, it is proposed that single suggestion should be merged into.In some implementations, editor can have and cancel, receives
Or the ability of the editor that mutually conflicts for refusing to be proposed, and use these abilities that all of mutually conflict suggestion can be caused to disappear.
Editor is proposed to paragraph style, is treated to be located away from the editor to the paragraph text.In one example,
The title that modification is proposed does not change the pattern of paragraph entity.In another example, merge editing system and be provided with process
Wherein " addition entity " suggestion always nonjoinder problem.In the 3rd example, modification is proposed link and does not always work.
Usually, according to a series of principles completing to determine whether to merge the method for being proposed editor.Individual part is always
It is shown as single suggestion.For following operation, merging is performed：In inserting, completely pattern changes, same entity is selected
When pattern change, input is proposed the successive range of text, in the input being inserted into inside text and for can merge
Object, including inline picture, formula, AutoText, footnote and bookmark.In some insertions of table, the quilt of content
Positioning picture, head, footer and table cannot be merged with other editors.
Approach described herein has some advantages.First, the suggestion made by specific user can only with by same
The suggestion that user makes merges.Secondly, unique user action will not create more than one suggestion.3rd, in editor
Concordance is maintained between conversion.In other words, all changes or merge or be assigned to new suggested with existing suggestion.4th,
When single editor have impact on multiple existing suggestions, concordance is maintained.By building for supporting each to change and preferably merge with which
View, affects the editor of multiple suggestions to allow their change component to merge with the suggestion that they affect respectively.
Another embodiment described herein includes being applied to the projection of document model.Client or user equipment can
With with the projection for being applied to their document model.For example, projection can be used for peeling off in certain form of perhaps makes document
Some parts it is anonymous.Projection can be described according to the change of the model is applied to.When projection is applied to model, generates and become
Change, when using the change, generate the model under the projection.For example, the projection for peeling off form will be generated for each form
Delete Table change, this obtains the model for not having form.
For the partner's broadcast change to its model under projection, the change should be relative to the change for describing the projection
Change to convert.For example, to some the model broadcast insertion text change filtered by text, need relative to be filtered out
The corresponding deletion text of text changes to convert insertion text.
In addition, when broadcasting under projection, some changes should be omitted completely.For example, if projection removes table from document
Lattice, then the change for creating new form should not be sent to the client with the projection.For individually change, enforcement is
Simply.Especially, these changes of omission should be identified for some projections, and identified change should not be wide
Broadcast.
However, as later change may rely on or assume to be omitted the presence of change, so omitting some changes
Later change may be affected.For example, if, two changes of broadcast ([for example insert text, in index 200 at index 100
Place's insertion text]), then second insertion operation can be assumed.By this way, if saved
Slightly first insertion operation, and unwittingly broadcast second insertion operation, then the insertion operation being broadcasted is in mistake
Index.
To solve this problem, conversion change is omitted in definition.It is such change to omit conversion change, for such change
Change, later change needs are transformed semantic to explain the difference caused due to omission.In example more than, [at 100
Insertion text] omission conversion change be [text is deleted at 100].Convert by relative to change is deleted and [insert at 200
Enter text], [inserting text at 200] is moved back and will be in correct index.In this way, omit and become transformation
Change the projection for allowing later change to consider document, and therefore be correspondingly appropriately adjusted.
Fig. 6 shows exemplary logic flow Figure 60 0 of the aspect of the omission conversion change of express definitions document model.The skill
Art can be summarized as following steps.
601, empty set R of change is initialized.
602, generate for the set S by the change for being applied to "current" model is projected.
For each change M in the set of change to be broadcasted:
603, by relative to S-transformation M, generating M ' and S '.
605, if M ' should be omitted due to projection：
Then 606, the omission conversion change O for C ' is generated.
607, O is added to S '.
Otherwise：
608, C ' is added to R.
609, S ' is set to into new S.
R is result.
As summary, when definition projection, can define：(1) setting models, wherein which change application are projected；And
(2) it is what that should omit which change and convert changes for these omissions for changing.Once these are defined, then this public affairs
The system and method opened broadcast the change under projection in which can be used for cooperative.
Carry out solve problem by this way and there are some advantages.First, the disclosure allows projection to be entirely applied to service
Device side, it is allowed to force client to be located under some projections.Secondly, the disclosure make use of existing in real-time collaboration application
Operability semantics.
In this example, projection is applied to from the version of document obtained by viewer filter be proposed modification.The disclosure
Enable to be suitably applied the modification of the document, so that the latest edition of the document to the viewer of the document is in
It is existing.In order to from the display for being proposed modification and commenting on is removed to " the checking pattern " of the document shown in viewer, implement document
Check any combinations that the application engine of pattern can be involved the steps of.
The concept of projection can apply to document model.The example pseudo-code section of the object class of statement projection can take class
It is similar to following form：
Whether should always be filtered depending on suggestion, usage (usage) is replaced by appropriate projection is utilized.
The filtration based on accesses control list (ACL) can be used.Based on user whether with checking or compiling to document
Volume entrance, it is proposed that some usages will need the filtration of context.To achieve it, can be using agency (factory)
To construct authority.Illustrate that the example pseudo-code section of the object class filtered based on ACL can be using similar to following form：
Projection based on AccessLevel:
For editor and proof-reader (commentator), agency will return Projection.FULL, and be directed to viewer,
Projection.WITHOUT_SUGGESTIONS will be returned.Additionally, default value can be projected for Projection,
The AccessLevel that user is directed to using agency is returned correct projection by Projection.
In another embodiment, it is possible to implement change and filter.In some implementations, based on AccessLevel according to upper
It is probably inadequate hereafter to carry out filtering model.The usage for being loaded into or transmitting modification may be also required to be filtered.Following steps can be with
For filtering the order for viewer：
1. empty set R of initialization command.
2. generate for filtering the command history S that "current" model is advised.
3. for each order C in modification：
A. by relative to S-transformation C, generating C ' and S '.
If b. C ' is suggestion order：
I. generate the omission order O of C '.
Ii. O is added to into S '.
C. otherwise：
I. C ' is added to into R.
D. S ' is set to into new S.
4.R is result.
In some implementations, it is possible to use following methods are come to generate filter order (can illustrate showing for above step 2
Example false code section).
The enforcement of Projection.FULL can be always to return empty list.The enforcement of suggestion is not supported, such as
Projection.WITHOUT_SUGGESTIONS, can be returned only to sky list.In some implementations, cooperative documents editing should
With passing through to generate the command set of all suggestions of the refusal currently in the model, implement Projection.WITHOUT_
SUGGESTIONS。
In some implementations, it (can be the step of illustrating above 3.b.i that method below can be used for generating omission order
Example pseudo-code section).
The method can be implemented as follows：
1.AbstractCommand will return empty (null).
2. because in the case of being not switched on, details may not be calculated, so WrapperCommands will be to these
Calling for order reports an error.
3. suggestion order will return appropriate omission order.For example：
A. for being inserted into scope, InsertSuggestedSpacers will return DeleteSpacers.
B. same scope is directed to, MarkSpacersForDeletion will return UnmarkSpacersForDeletion.
This can be implemented in ModelStateImpl, and the order in changing for the conversion before broadcast modification, with
And it was filtered before LoadResult is returned.This can include the following modification to API modifications：
In some implementations, it is whether suggestion order and is treated differently because each order necessarily depends upon it,
So order can be opened before treatment.In some implementations, as the model in each step is not necessarily effective, therefore
Cooperative documents editing person may not use legal changer for the process.In some implementations, partner selects Changes
Using the model of the revised edition before the model of the revised edition of Changes, and preservable Changes uses.
In some implementations, the disclosure depends on conversion, so that the filter command before order is sent to viewer.
One of misgivings of the method are performance.Especially, if document has suggestion and viewer, conversion may be slowed down and may
Perform when preserving each time.In order to solve this misgivings, changer execution performance can be tested.However, because general
Method is n2, so gain may be limited.In order to avoid the scene of worst situation, the filtration life of conversion is performed relative to the order
The amount of order may be limited, and if reaching the limit, then the broadcast to viewer can be stopped.
Another misgivings are, after ModelState lockings, may to be immediately performed broadcast.To solve this misgivings, can
To use individually lock function, the wherein single lock function call broadcast, but do not prevent to grasp other of ModelState
Make.
In another enforcement, it is possible to implement identification session AccessLevel.In some implementations, in order to which meeting determined
Words need broadcast channel to filter, and the application of cooperative document editor should have the letter for indicating which the session person's of being to look at session
Breath.As the access level of user not necessarily may be matched with effective access of client, it is thus determined that user
AccessLevel may and be insufficient to.For example, editor can select to check the option of document, or school under the pattern of checking
Person can be selected to check the option of document under the pattern of checking rather than under proof-reader's pattern.In order to implement this point,
Conversation establishing function AppSessionManager can be modified to the AccessLevel for also receiving session.Can also there is knowledge
Not which session has the mechanism of given AccessLevel.
In some implementations, for practicable (populate) AccessLevel, function
SessionInitiationInterpretor can fetch the AccessLevel of the active user when session is created.If deposited
In the end (endpoint) of the@SessionInitiator that session is initiated in compulsory relatively low access level (such as checking),
So these can be covered manually.In order to cover manually, parameter can be added to the@with optimum AccessLevel
SessionInitiator, is used with substituting effective@SessionInitiator.Alternatively, obtain compulsory relatively low visit
Ask that the end of rank can be removed, so if client is able to access that, force client refreshes.
In another embodiment, usage can be classified according to herein below：
The usage of Projection.WITHOUT_SUGGESTIONS：
1. thumbnail is done.This typically should be by ModelThumbnailer process.
2. index.This typically should be by Indexer process.
3. social labelling.This typically should be by Snippeter process.
4. reptile.
5. document echoing.
6. preview and issue.
The usage of Projection.FULL：
1. legal discovery and AbuseIAM.
2. search outlet and debug end.
3. other internal usages：Check legal comment, checking, spell check, conversion.
The usage of Projection.fromAccessLevel：
1. the only available end of editor：Link editor, recovery, Maestro RPC, revision history.
2. offline synchronization：ModelAction.
3. export.This typically can be by Exporter process.
Some usages can be based on effective access of current sessions.Some mechanism can be implemented to guarantee to maintain session and visit
Ask the concordance of rank or individually process them：
1.SessionInitiator actions and their effective access：
a.fromAccessLevel：Editor, comment
b.WITHOUT_SUGGESTIONS：Check, NativeWebView
2. the usage of effective access of session is needed
A. it is initially loaded model font.
B. print and Print Preview.
C. model meets (catchup) request
D. order broadcast.
The following is some examples of techniques described herein in practice：
Example 1：Using generally order after suggestion.
Example 2：Apply after suggestion and be proposed order and generally order.
In some implementations, replace becoming using operability before viewer is sent to and bring conversion order, picked
Except before, order by anonymization, and and then can depend on client correctly to convert them.The enforcement may not be institute
It is desired, because it only relates to bigger and increasingly complex modification.Especially, anonymization can need order and the order
Model pre-application, therefore it must be performed in application time.The order that client is sent to by other paths (such as becomes
Amount changes) application will be needed.Additionally, in the case of the operability for not destroying order converts (and possible application) semanteme,
To need to set up anonymization systems.This may be to client performance (including mobile terminal) with negative effect.Especially, in client
The conversion at end may have even worse performance impact to user, and the method for appropriately processing the problem in client-side may be needed
Offline storage to be changed.
Another embodiment of system and methods described herein includes the modification for notifying user by partner to document
Informing mechanism.In online cooperative documents editing application, editor it is generally desirable to the control with the document to them and
Partner is made to process document.Editor needs to know who have modified when their document, document are changed, and repaiied
What has changed.Notify editor (and user of subscribing notification) with regard to the document to them made by partner by providing
Modification, together with modification summary mode, the system and method for the disclosure solve this problem
Fig. 7 provide illustrate notify editor with regard to by partner to the modification of cooperative document in terms of exemplary patrol
Collect flow graph 700.701, existing system can follow the trail of the modification that different user is made to document, but not provide a user with modification
Or the notice of the summary of modification.702, in one embodiment, the modification made by partner can be based on from the modification
Elapsed time amount and be batch processing.Email or message are sent to document owner and have selected the use of subscribing notification
Family.Email or message may be embodied in the modification in preset time section from multiple partners.Each modification in message
Various data, such as author, the time for making modification and the description to changing can be included.Modification can be by other editors
Person is made by the partner (such as proof-reader) for not possessing complete editing authority.Can be remembered by the modification that proof-reader makes
Record as " suggestion ", and needed to be agreed to by editor before document is applied to.In some implementations, editor can pass through
Appropriate option is selected, directly receives or refuse these modifications from mail or message.
In some implementations, when every time modification is made to document, the modification be sent to by document and receptor come
Follow the trail of the notice software system of modification event.Document owner is defaulted as subscribing notification, and other partners can also subscribing notification.
The modification made in the same area of document or in the same time can be grouped together.703, notify that software system is right
After wait configurable time quantum, whether the time quantum currently can check document based on receptor.
Once 704 through appropriate time, then 705, it is divided into for all notification events of receptor and document
It is a collection of and process.For each modification made to document, can create and list author, the time of the modification that last time is made
Stamp, and modification context-descriptive single item (706).
In certain embodiments, the disclosure is included for guaranteeing feature that editor is not excessively notified.It has been resumed
Modification and/or the modification no longer come across in the document can be ignored, and can be suppressed for these features changed.
For example, if partner is made that to the document changes and have passed through the time period, then editor can receive description should
The Email of modification.If however, partner has used cancellation function, manually cancelling the modification, or if the modification
Be resident document section is deleted by editor, then can suppress the notice changed.
Whether allow actively to check the editor of document to being made by user based on the editor for checking document
Editor take action and prevent to send redundant notification and notify in time while still sending, using the different time periods.Show at one
In example, if editor actively checks document, then the time period can be with longer, and if editor does not actively check text
Shelves, then the time period can be with shorter.
Human readable explanations of the systems and methods described herein there is provided the modification made to document, and to editor
There is provided being determined for information that is present, checking document later or never.When editor is being provided solely to necessary handss
During the timestamp of dynamic inspection, or it is necessarily dependent upon partner as editor to notify that editor has modification and modification is wrapped
During the content for including, such determination is possibly impossible.
Embodiment described herein proposes some advantages for comparing existing system.For example, notice described herein
System means that when partner makes modification editor need not be by partner manual notifications.Similarly, editor is not required to
Itself to take action to find modification, because after partner's modification, Email or message will be sent quickly.This
Outward, the description in the message including modification gives the context with regard to the modification to editor.Update of time stamp is provided only not
Whether the investigation that be enough to make editor determine modification is assured.The disclosure is provided to editor makes him preferably manage him
The information of the time between multiple tasks, the cooperation currently carried out including the document.
In some implementations, information not only can be described including text, also including in the context of the remainder of document
Modification render.For example, if partner substituted for some texts using new text, the description in message is not only informed
" utilize ' a final part of something ' replace ' end ' ", and some rows of surrounding, word or sentence in the document
During son may also be included in that the message.
In some implementations, the summary of modification can be included in message informing.Description below is for notifying to compile
The example of the process of person and subscriber with regard to changing in document of collecting.CommentNotificationListener can monitor thing
Part, if comment or reply be created, update, or delete, then the event can occur.Event can be processed, and can be with
Create and notify payload (if environment guarantee is notified).Then notifying device can notify that payload is packed and is sent to
To message system, during message system receives the payload and adds it to the container of (document, receptor).Container can be by
Maintain with configurable time quantum (for example, if such as document is closed, then 5 minutes；If document is by the use that will be notified that
Open at family, then 15 minutes).As more comments or reply are added or update, therefore they are added into (document, reception
Device) same container.When the time period is passed through, message system obtain all payload in given container and by its
Deliver to the message handling device for being configured to process the container.Container is sent to event handler by message handling device, at the event
Reason device processes notification event, the event that filtration should not be sent, is converted to by event packets and by event by commenting on id
Html and text message body.
Although having been shown that each embodiment described herein, to those skilled in the art, it is clear that these realities
Apply example to be only provided by way of example.Substantial amounts of variation, modification and replacement will be carried out by those skilled in the art now,
Without departing from the disclosure.It should be appreciated that the various replacements to embodiment of the disclosure described herein, can implement this public affairs
Adopt when opening.
Another embodiment of systems and methods described herein includes the use that the modification to document is notified by partner
The informing mechanism at family.Document editor application can allow user to make as the editor for advising, the suggestion is tracked, and
They must be accepted or rejected before being merged in the document.For this purpose, document editor needs to be transformed to any any editor
The mechanism of suggestion version.Being desired to have can usually change existing editor and turning for each editor is directed to without the need for enforcement manually
Change the automatic conversion mechanism of logic.This is allowed using all existing controller business logics, including be recorded it is any with
Logic afterwards.
As discussed together with Fig. 6, the modification to document model can be described via a series of increment type atomic change.
In word processor, change can include insertion character, delete character and Apply Styles.Unique user editor to document
It is likely to be obtained the multiple changes for being applied to model.Word processor by with the current state based on user action and application come really
Which determine change application in the business logic of model.
Fig. 8 provides exemplary logic flow Figure 80 0 for illustrating the aspect that editor is transformed to suggestion.Originate in 801,
801, the suggestiveness version of application definition its change is proposed object in application model to recognize.For example, word processor
May have insertion character change and insertion to be proposed character change.Then, using needs definition from general form to suggestion
Property form conversion function.In example before, this will be the function from insertion character to the character conversion of insertion suggestiveness.Such as
The change of fruit suggestiveness is with the application semantics different from original change, then must also provide the suggestiveness conversion change.
In order to illustrate different semantemes, these changes will be used for converting later change.For example, word processor may have
Character change is deleted, its suggestiveness version is that tab character is used to delete.However, tab character is used to delete actually not deleting
Except they-it only create deletion their suggestion.For example, user performs drag and drop, and this is represented as the cancel (CANCL) at index 100
Symbol simultaneously inserts character at index 200.Simple conversion by these be converted to the tab character at index 100 be used to deleting and
Index insertion character at 200.However, the index of original insertion operation assumes that the character is deleted.Therefore, it can be defined on
Insert character to change as suggestiveness conversion at 100.Relative to this operational transformation insert at 200 character cause the character to
Before be moved to tram for inserting.
Once these semantemes are defined for the model of given application, then can generate suggestion based on following steps：
1. M is defined as into current application model (802)
2. make the copy of M to generate M ' (802)
3. business logic of the user to the current operation of M ' is run.Using the change for being applied to M ' of the result as the logic
Collect (803) in queue A
4. define empty queue T (804).
5. each in couple A changes C:
A. via application specific function, generate the suggestiveness version of S and C
B. via application specific function, F and the suggestiveness conversion change for C are generated
C. S is converted relative to T, to generate S ' and T '
D., T=T ' is set
E. F is added to into T
F. S ' is applied to into M.
This will be applied to "current" model the suggestiveness version of change (805).After Method Of Accomplishment, "current" model will make
The suggestiveness version for obtaining user action is applied to the method.
When definition generates the function of suggestiveness change, it is considered to which the proprietary rightss of the object being affected are probably useful.Example
Such as, if user is to being proposed word backspace, then the word will be deleted；But if being proposed word backspace to non-, it
To be marked for deleting.To achieve it, the proprietorial concept of definition change.Proprietary rightss may be at three kinds of states it
One：Possessed, had part ownership or do not possessed.The step of above method in (3), shadow in a model is changed based on each
Loud object, calculates the proprietary rightss of each change.For example, if text is the suggestion proposed by active user, then delete
The change of the text will be possessed, and otherwise, not possessed；And if the only a part for being deleted text is by currently using
The suggestion that family proposes, then had part ownership.So, in step (5.a), the proprietary rightss for being expected to calculate can be in transformation process
Used in period.For delete character change, its proprietary rights can be used for clarification be converted into tab character for delete and also
It is to become deleted character.
In step (3), proprietary rightss can also be assembled across the change of similar type.By checking all of the aggregation
Power, when conversion, can make decision across separate specific change.This point is probably useful, for example, if application is examined
Consider discontinuous selection operation, expect consistently to delete the text or be used to delete by its labelling.
Solve the problem by this way to have the advantage that：
1. it is the general solution unrelated with application specific business logic.It only needs to define the change in application
Transfer function.This makes the expense of enforcement minimum.
2., because it is independently run with application specific business logic, it is utilized new business logic to expand when applying
When exhibition or modification, it needs less maintenance costs.
3. it is direct suggestion to be extended to new object in a model.Only must only define and repair for presenting to these objects
The transfer function of the change for changing.
In order to generate suggestion order, interface SuggestCommandProvider can be via CommandRegistry quilts
Introduce with registration table.Another interface SuggestTransformCommandProvider, the interface can be taken to propose establishment
Order for ordering and advising the mapping between order.Illustrate SuggestCommandProvider and
The example pseudo-code section of SuggestTransformCommandProvider can be taken similar to following form：
/ * * create the suggestion version of order.*/
interface docs.commands.SuggestCommandProvider{
/ * * obtain corresponding suggestion order using given suggestion id for given order.*/
SuggestCommand provideSuggestCommand(command,id,model)
}
interface docs.commands.SuggestTransformCommandProvider{
The given suggestiveness orders of/* *, return the order for advising after same editor's internal conversion.Should
* order the difference advised between order that will explain order and such as returned by getSuggestCommand
* it is semantic.*/
Command provideSuggestTransformCommand(command)
}
class docs.commands.CommandRegistry implements
docs.commands.SuggestCommandProvider,
docs.commands.SuggestTransformCommandProvider{
/**@override*/
Command provideSuggestCommand(command,id,model)
/**@override*/
Command provideSuggestTransformCommand(command)
}
/ * * registration SuggestCommandProvider*/
void registerSuggestCommandProvider(type,provider)
/ * * registration SuggestTransformCommandProvider*/
void registerSuggestTransformCommandProvider(type,provider)
}
The document model can make the copy of context, to apply in the case where actual ModelState is not changed
Original editor.For this purpose, the suggestion for changing the specified interface for replicating context can be created.This is not that general context is replicated
Device, because it will process the event specific to the usage in suggestiveness modification, such as creates the reverser without operation.
/ * * replicate context.*/
interface docs.edits.ContextCopier{
/ * * create the copy of the given context that will be used by SuggestEdit.*/
Context copy(context)
}
/ * * replicate the context for the document/text used in SuggestEdit.*/
class docs.text.edits.SuggestContextCopier implements
docs.edits.ContextCopier
(commandApplier,selectionTransformer){
/**@override*/
Context copy(context){
Var model=context.getModelState () .getModel () .copy ()；
Var selectionModel=new docs.text.model.SelectionModelImpl (
context.getErrorReporter(),model)；
selectionModel.setSelection(
context.getModelState().getSelectionModel().getSelection())；
Var modelState=new docs.text.edits.ModelState (
model,
selectionModel,
commandApplier,
new NoOpCommandInverter(),
selectionTransformer)；
return new docs.text.edits.Context(
modelState,
context.getLinkDefaults(),
context.getErrorReporter())；
}
interface docs.text.model.Model{
/ * * replicate model */
Model copy()
}
class docs.text.model.ModelImpl implements docs.text.model.Model{
/**@override*/
Model copy(){
Var newModel=new ModelImpl (
this.errorReporter_,
this.styleResolvers_,
this.concreteStyleUpdaters_,
this.entityConcreteStyleUpdaters_,
this.entityResolvers_,
this.enabledStyleTypes_,
this.contentClassifier_)；
this.copyTo(newModel)；
return newModel；
}
}
class docs.text.model.ModelWrapper implements docs.text.model.Model{
/**@override*/
Model copy(){
return this.modelProviderFn_.copy()；
}
}
Replicate to perform SelectionModel outlined above, SelectionTreeGenerator and
SelectionDocumentSliceGenerator will be removed from SelectionModel, and move to helper classes：
class docs.text.dom.DocumentSliceGenerator(
selectionTreeGenerator,selectionDocumentSliceGenerator){
/ * * create the documentation section of the given selection represented in setting models.*/
DocumentSlice createDocumentSlice(model,selection){
Var root=this.selectionTreeGenerator_.generateTree (
model.getSpacers(),selection.getSelectedRanges())；
return this.selectionDocumentSliceGenerator_.generate(
model,selection,root)；
}
}
In order to introduce SuggestEdit, IdUtil can be moved to docs.util from docs.text.util.Below
It is the general introduction of two new classes：
/ * * offer suggestiveness editor */
class docs.edits.SuggestEditProvider implements
docs.edits.EditProvider(
editProvider,
commandTransformer,
selectionTransformer,
suggestCommandProvider,
suggestTransformCommandProvider,
contextCopier){
Edit provideEdit(context){
return new SuggestEdit(
context,
this.editProvider_.provide(
this.contextCopier_.copy(context)),
this.commandTransformer_,
this.selectionTransformer_,
this.suggestCommandProvider_,
this.suggestTransformCommandProvider_)；
}
boolean canApply(context){
return this.editProvider_.canApply(context)
}
}
Given editor's application is suggestion by/* *.*/
class docs.edits.SuggestEdit extends docs.edits.AbstractEdit(
context,edit,commandTransformer,selectionTransformer,
suggestCommandProvider,
suggestTransformCommandProvider){
void applyInternal(args){
Var result=this.edit_.apply (args)；
Var id=docs.util.IdUtil.generateId (' suggest ')；
Var transformCommands=[]；
for each command in result.getCommands(){
// because taking provideSuggestCommand in the model, must unseal.
if(command.isWrapper()){
for each innerCommand in command.unwrap(){
this.applySuggestCommand_(innerCommand,transformCommands)；
}
}else{
this.applySuggestCommand_(command,transformCommands)；
}
}
this.applySelection(this.selectionTransformer_.transformSelection(
result.getSelectionAfter(),transformCommands))；
}
private void applySuggestCommand_(command,transformCommands){
Var suggestCommand=this.suggestCommandProvider_
.provideSuggestCommand(
command,id,model)；
Var pair=this.transformer_.transformBoth ([suggestCommand],
transformCommands)；
TransformCommands=pair.getCommands ()；
Assert (pair.getCommandsToWin () .length==1)；
Var transformedSuggestCommand=pair.getCommandsToWin () [0]；
Var newTransformCommand=
this.suggestTransformCommandProvider_.provideSuggestTransformComma nd
(
suggestCommand)；
// because the newTransformCommand will be generally NullCommand, unseal for performance.
Var newTransformCommands=newTransformCommand.isWrapper ()
newTransformCommand.unwrap():[newTransformCommand]；
goog.array.extend(transformCommands,newTransformCommands)；
this.applyCommand(transformedSuggestCommand)；
}
}
It is noted that the applySelection in SuggestEdit.applyInternal is being called irrelevantly
Propagate " being rolled into the visual field " and select to change reason.This will be solved in work afterwards, and these problems will be neglected now
Slightly.
When application is in suggestion mode, SuggestEditProvider needs to be used for encapsulation generally
EditProvider.By introducing SuggestEditApplier wrappers, this can be implemented.
/ * * provide suggestiveness editor.*/
class docs.edits.SuggestEditApplier implements docs.edits.EditApplier
(delegate,
commandTransformer,selectionTransformer,suggestCommandProvider,
suggestTransformCommandProvider,contextCopier){
/**@override*/
void apply(editProvider,args){
if(this.suggestionsMode_){
EditProvider=new SuggestEditProvider (
editProvider,
commandTransformer,
selectionTransformer,
suggestCommandProvider,
suggestTransformCommandProvider,
contextCopier)；
}
this.delegate_.apply(editProvider)；
}
void setSuggestionsMode(enabled){
This.suggestionsMode_=enabled；
}
}
This allows to intercept all editor's provider being employed, and suitably encapsulates them.Cancelling or generally reform can
Being intercepted, because correctly application to be come from the order of the result of SuggestEdit for they.Additionally, crucial
(magic) reform can be intercepted, because the provider being saved has been correct provider.In suggestion modification
After flag, SuggestEditApplier will be created in cooperative document.If user is in comment pattern, then
SetSuggestionsMode will be enabled.
Fig. 9 is the block diagram for stating exemplary computer system 900, using the system, purposes for Fig. 1-8 and in text
Management in shelves is proposed the system of editor and can be carried out.In some aspects, computer system 900 can use hardware or software
Combination with hardware is implementing, or in private server or is integrated into another entity or across multiple entities point
Cloth.
Computer system 900 includes the bus 908 or other communication mechanisms for transmission information, and processor 902 with
Bus 908 is coupled with processing information.By way of example, computer system 900 can utilize one or more processors 902
To implement.
In addition to hardware, computer system 900 can include code, and code establishing is used for discussed computer program
Performing environment, for example, constitute processor firmware, protocol stack, data base management system, operating system or they one or
The code of multiple combinations is stored in the memorizer 904 being included, such as random access storage device (RAM), flash memory,
It is read only memory (ROM), programmable read only memory (PROM), erasable PROM (EPROM), depositor, hard disk, removable
Disk, CD-ROM, DVD or any other suitably storage device, is coupled to bus 908 for storage information and will be by processor
902 instructions for performing.Processor 902 and memorizer 904 can be supplemented by logic circuit, or are incorporated in logic circuit.
Systems and methods described herein can be by server, client, fire wall, gateway, hub, route
The machine of computer program is performed on device or other this kind of computers and/or networking hardware, is deployed partly or on the whole.
Software program can be associated with server, and the server can include file server, printing server, domain server, mutually
Networked server, intranet server and other variants, such as secondary server, host server, distributed server etc..Clothes
Business device can include one or more memorizeies, processor, computer-readable medium, storage medium, port (physical port and void
Intend port), communication equipment and other servers, client, machine and equipment can be accessed by wired or wireless medium
Interface etc..As the method herein and described by other places, journey logic bomb can have server to perform.In addition, performing such as
The miscellaneous equipment needed for method described in the application is considered a part for the facility related to the server.
Server can be provided to the interface of miscellaneous equipment, including but not limited to client, other servers, printer,
Database server, printing server, file server, the communication server, distributed server etc..In addition, the coupling and/or
Link can promote the long-range configuration processor across network.In the case of the scope without departing substantially from disclosed theme, these set
Standby portion or all of networking can promote program or method in one or more positions executed in parallel.In addition, passing through
Interface is attached to any equipment of server and can be capable of depositing for storage method, program, code and/or instruction including at least one
Storage media.Central warehousing system can be provided in the programmed instruction performed on distinct device.In the enforcement medium-long range warehousing system
Can serve as the storage medium of program code, instruction and program.
Methods and systems described herein can be disposed partly or on the whole by the network facilities.The network facilities can
With including elements below, such as computing device, server, router, hub, fire wall, client, PC, communication
Equipment, routing device and other actively and passively equipment, module and/or components as known in the art.With network facilities phase
The computing device and/or non-computational equipment of pass can include the storage medium (in addition to other components), such as flash memory, slow
Deposit, stack, RAM, ROM etc..Process, method, program code, instruction herein and described by other places can be by network facilities unit
One or more execution of part.
Computer software, program code, and/or instruction can be stored on machine readable media and/or in machine readable
Access on medium, the machine readable media includes：Computer module, equipment and the calculating for keeping for some interval times
Numerical data recording medium；Semiconductor memory apparatus are considered as random access storage device (RAM)；Mass-memory unit
Be generally used for more lasting storage, the such as form of CD, magnetic storage apparatus, such as hard disk, tape, magnetic drum, magnetic card and
Other types；Processor depositor, buffer memory, volatile memory, nonvolatile memory；Light storage device, such as
CD、DVD；Removable media, such as flash memory (for example, USB stick or USB encryption devices), floppy disk, tape, paper tape,
Punched card, free-standing ram disc, zip disk drive, removable mass-memory unit, offline etc.；Other computer storage ratios
As dynamic memory, static memory, read/write store equipment, variable storage device, read only memory devices, sequentiality are accessed and deposited
Storage equipment, position addressable storage equipment, file addressable storage equipment, content addressable storage equipment, it is attached to network
Storage device, storage area network, bar code, magnetic ink etc..
Herein, including the flow chart and block diagram of throughout accompanying drawing, described element implys that patrolling between these elements
Collect boundary.However, the enforcement according to software or hardware in engineering, the element and function described in which can pass through computer
Executable medium is implemented on machine, and the machine has the processor of the programmed instruction for being able to carry out being stored thereon, the program
Instruct as monoblock type software configuration, independent software module or the module using external routine, code, service etc., or it
Combination in any, all these enforcements can be within the scope of the present disclosure.
Therefore, although in terms of aforesaid accompanying drawing and description elaborate the feature of disclosed system, but unless clearly carry
And or otherwise from context, the specific arrangements not existed for implementing the software in terms of these features should be from
These descriptions are pushed off.Similarly, it will be appreciated that the various technologies that above institute recognizes and describes can be changed, and technology
Order is adapted to the application-specific of techniques disclosed herein.All these variants and modification are intended to the sheet fallen in the disclosure
Within scope of disclosure.Thus, the description of the order of various technologies and/or description is understood not to need to perform these skills
The particular order of art, unless needed for application-specific, or clearly refer to or otherwise from context.
Method described above and/or process, and technology therein, in hardware or can be suitable for specific answering
Realize in the combination in any of hardware and software.Hardware can include general purpose computer and/or dedicated computing equipment or concrete
The particular aspects or component of computing device or concrete computing device.The process can have internal and/or outer at one or more
The microprocessor of portion's memorizer, microcontroller, embedded microcontroller, programmable digital signal processor or other programmable set
Standby middle realization.Processor is also possible that or alternatively, is embodied in integrated circuit concrete in application, programmable gate array, can compile
The combination of journey array logic or any other equipment or equipment that can be configured to process the signal of telecommunication.It will also be understood that one or
Multiple processes are implemented as the computer-readable code performed on machine readable medium.
Instruction can be stored in memorizer 904 and implement in one or more computer programs, i.e. calculate
One or more modules of machine programmed instruction are encoded on a computer-readable medium, perform for being serviced, or control clothes
The operation of business, and according to any method as well known to those skilled in the art, including but not limited to computer language, such as
Data-oriented language (for example, SQL, dBase), system language (for example, C, Objective-C, C++, compilation), schema languages
(for example, java .NET) and applicational language (for example, PHP, Ruby, Perl, Python).
Computer program is not necessarily corresponding to the file in file system as discussed herein.Program can be stored in
A part for file, this document preserve other programs or data (one or more feet for example, being stored in marking language document
This), or be stored in the single file of the program for being exclusively used in discussed, or it is stored in multiple harmony file (examples
Such as, store the file of one or more modules, subprogram or partial code) in.Computer program can be used with one
Perform on computer or on multiple computers, the plurality of computer bit is in one place or distributed across multiple places
Arrange and pass through interconnection of telecommunication network.Process and logic flow described in this specification can be calculated by one or more are performed
One or more programmable processors of machine program are performed, and implement function with by output is operated and generated to input data.
Computer system 900 also includes being coupled to bus 908 for storage information and the data storage device 906 of instruction,
Such as disk or CD.Computer system 900 can be coupled to various equipment via input/output module 910.Input/output
Module 910 can be any input/output module.Example input/output module 910 includes FPDP, such as USB port.
Input/output end port 910 is configured to connect figure module 912.Example graph module 912 includes networking interface card, such as with
Too network interface card and modem.In some aspects, input/output module 910 is configured to connect multiple equipment, and such as input sets
For 914 and/or outut device 916.Example input devices 914 include keyboard and pointing device, and for example, mouse or trace ball are led to
The input equipment is crossed, user can provide input to computer system 900.Other species of input equipment 914 can be also used for
Offer is interacted with user's, and such as tactile input device, visualization input equipment, audio input device or big brain computer are defeated
Enter equipment.For example, the feedback for being provided to user can be any type of sensory feedback, and for example, visual feedback, audition are anti-
Feedback, or touch feedback；And the input from user can be received in any form, including sound, voice, tactile or E.E.G
Input.Example output device 916 includes that voice displays to the user that the display device of information, such as CRT (cathode ray tube) or LCD
(liquid crystal display) monitor.
According to the one side of the disclosure, one or more instructions for being contained in memorizer 904 are performed in response to processor 902
One or more sequences, as shown in Fig. 2A -7 for the system for being proposed editor is managed in document model, can be with
Implemented using computer system 900.The instruction can be read from another machine readable medium, such as data storage device 906
Enter in memorizer 904.The execution for being included in the job sequence of main storage 904 causes processor 902 to perform described by text
Process.One or more processors in multiprocessing arrangement can be also used for performing the job sequence being included in memorizer 904.
At the aspect for substituting, hard-wired circuit is substituted for software instruction or combined with software instruction to implement each of the disclosure
Individual aspect.Therefore, any concrete combination of hardware circuit and software is not limited in terms of the disclosure.
The various aspects of the theme described in this specification can be implemented in computing systems, after the computing system includes
End component, such as data server or the data server including middleware component, such as application server or including
The application server of front end assemblies, the client computer for example with graphical user interface or web browser are (by the figure
Shape user interface or web browser, user can be interacted with the enforcement of theme described in this specification) or one or many
The combination in any of individual such rear end, middleware or front end assemblies.The component of system can be by appointing that digital number communicates
What form or medium (such as communication network) and be connected to each other.Communication network can include for example, Personal Area Network (PAN), local
One or more of net (LAN), campus network (CAN), Metropolitan Area Network (MAN) (MAN), wide area network (WAN), broadband networks (BBN), the Internet etc..
Additionally, communication network can including but not limited to, for example and without limitation, enterprise servers or server zone, one or many
Individual desk computer, one or more notebook computers etc..Computer system 900 can also be embedded in another starting to write, example
Such as and without limitation, mobile phone, personal digital assistant (PDA), Mobile audio player, global positioning system (GPS) connect
Receive device, video game console, and/or television set top box.
As discussed above, computing system 900 can include client and server.Client and server is typically remote
From each other, and generally pass through communication network interaction.By means of the computer program and tool that run on respective computer
There is mutual client-server contact, produce the relation of client and server.Computer system 900 can be, for example and
It is unrestricted, enterprise servers or server zone, one or more desk computers, one or more notebook computers etc..Calculate
Machine system 900 can also be embedded in another equipment, such as and unrestricted, mobile phone, personal digital assistant (PDA), shifting
Dynamic audio player, global positioning system (GPS) receptor, video game console, and/or television set top box.
As used herein term " machine-readable storage media " or " computer readable medium " refer to participation to process
Device 902 provides any medium or medium of the instruction for performing.The medium can take many forms, including but not limited to, non-
Volatile media, Volatile media and transmission medium.Non-volatile media includes such as CD or disk, and such as data are deposited
Storage equipment 906.Volatile media includes dynamic memory, such as memorizer 904.Transmission medium include announcing circuit, copper cash, with
And optical fiber, including the electric wire for constituting bus 908.The usual form of machine readable media includes, for example floppy disk, flexible disk, hard disk,
Tape, any other magnetic media, CD-ROM, DVD, any other smooth medium, punched card, paper tape, appointing with porous design
What its physical media, RAM, PROM, EPROM, flash EPROM, any other memory stick or print cartridge or computer can be from
Its any other medium for reading.Machinable medium can be machine readable storage device, machine readable storage substrate,
Memory devices, the component of the material of the machine-readable transmitting signal of impact or the combination of they one or more.
Although this specification includes many details, these details are not construed as the content to being required
Scope on restriction, but be regarded as the description of the particular implementation of theme.In this manual in the single ring implemented
Some features described in border, can be implementing in single enforcement in combination.Conversely, in the environment of single enforcement
Described in each feature, can be being come real individually or in the form of any appropriate sub-portfolio in multiple enforcements
Apply.In addition, although but feature can in being described above as combining at some action and or even initially when require thus, coming
Can delete from the combination in some cases from one or more features for the combination being required, and required combination can
To point to the variant of sub-portfolio or sub-portfolio.
Although in the accompanying drawings, operation is described with particular order, this is tied needed for being not construed as obtaining
Really, these operations are needed to perform with the shown particular order or order.Under some links, multitask and parallel processing can be with
It is favourable.Additionally, the separation of each system component in aspect described above is understood not in all sides
Face needs this separation, and it is to be understood that described program assembly and system usually can be integrated in single journey in the lump
In sequence product or it is packaged as multiple program products.
Although the theme of this specification is described according to particular aspects, can be carried out in terms of other, and
Within the scope of claims below.For example, the action described in claim can be performed in a different order, and still
Desired result is realized so.As an example, the process described in accompanying drawing not necessarily needs shown particular order or order
To realize desired result.In some enforcements, multitask and parallel processing can be favourable.Other variants are in following
Claim within the scope of.
Claims (21)
1. a kind of that the method for being proposed editor is managed in cooperative document, methods described includes：
The document model that instantiation is associated with the cooperative document；
First editor's suggestion to the cooperative document is received from first user；
The type of type and the document model based on described first editor's suggestion, the first suggestion order is compiled with described first
Collect suggestion associated；
Using the described first suggestion order on the document model, so that first editor is presented in the cooperative document
Suggestion；
Receive the acceptance instruction for described first editor's suggestion；And
In response to the received acceptance instruction, the document model is updated using the described first suggestion order.
2. the method for claim 1, also includes：
Verify the rights state of the first user, wherein the rights state include it is following any：
Proof-reader, is authorized to and checks on the cooperative document, makes being proposed and edit and provide comment；
Editor, is authorized to and receives or refuse to be proposed editor and delete the comment made by the proof-reader；Or
Viewer, is authorized to and checks not sent out including the clean of instruction for being proposed editor or comment on for the cooperative document
Cloth version.
3. the method for claim 1, wherein the first editor suggestion include it is following any：
Insert objects into the document model；
Object is deleted from the document model；
Modification is attached to the attribute of the object in the document model；
The mobile object in the document model；Or
The object in the document model is replaced using another object.
4. the method for claim 1, wherein the first suggestion order includes stating the labelling or note for being proposed editor
Release.
5. the method for claim 1, wherein receive the acceptance from the second user different from the first user to refer to
Show.
6. the method for claim 1, also includes：
Receive second editor's suggestion to the cooperative document；
Using the second suggestion order on the document model, built so that second editor is presented in the cooperative document
View；
Receive the refusal instruction for described second editor's suggestion；And
The second editor suggestion is removed from the cooperative document.
7. the method for claim 1, also includes：
Receive the filter command for the document model；
The filter command is applied on the document model to create new document model；
While the document model is kept, the view of the new document model is presented via user interface.
8. method as claimed in claim 7, wherein, the new document model is the copy of the document model.
9. the method for claim 1, also includes：
Receive second editor's suggestion to the cooperative document；
Second be associated based on the first identifier being associated with described first editor's suggestion and with described second editor's suggestion
Identifier, determines that second editor suggestion is created within described first editor's suggestion；And
Synthesize first editor suggestion and described second editor's suggestion.
10. the method for claim 1, also includes：
Receive second editor's suggestion to the cooperative document；
Determine that second editor suggestion is mutually conflicted with described first editor's suggestion；And
Via user interface, first editor suggestion and described second editor's suggestion is presented.
The method of claim 1, wherein 11. described first edit suggestion to include the letter with regard to following any content
The form of breath is presented：The identity of the first user, suggestion timestamp, explanation the first editor suggestion first number why
According to or it is described first editor suggestion acceptance or disarmed state.
12. the method for claim 1, also include：
It is determined that the change being associated with described first editor's suggestion；
Define the priority list that the potential editor merged with which is advised by the change in the document model；
The priority-level of at least one potential editor's suggestion and the change are based at least partially on, according to the priority
List checks whether the change is merged with described at least one potential editor's suggestion；
When the change will be merged, described first editor's suggestion is merged with described at least one potential editor's suggestion；
And
When the change is not merged, described first editor's suggestion is rendered as into new editor's suggestion.
13. methods as claimed in claim 12, also include：
It is determined that the first identifier being associated with described first editor's suggestion；
When described at least one potential editor's suggestion with and the first identifier identical identifier be associated when, will be described
Change is merged with described at least one potential editor's suggestion.
14. the method for claim 1, also include：
It is determined that one or more changes being associated with described first editor's suggestion；
Define and one or more of projections for changing and being associated；
The document model is updated using the projection；
From one or more of changes, it is determined that relative to the first change n of the projection；
The document model after the renewal is presented and does not apply other to change.
15. methods as claimed in claim 14, wherein, based on one or more of change applications document thereon
Model and which change omitted from one or more of changes, the projection is defined.
16. the method for claim 1, also include：
Identification comes from changing to the first of the document model for the first user；
The first modification described in batch processing is stabbed in the very first time and the notice of partner is not sent in real time；
In the second timestamp, the notice for being related to first modification is collected and sends to the partner, wherein described second
Timestamp is later than the very first time stamp.
17. methods as claimed in claim 16, also include：
Recognize the second modification between the very first time stamp and second timestamp；
Determine that first modification is offset in second modification；And
Notify to exclude first modification from described.
18. the method for claim 1, also include：
Receive the first editor in the document model；
Define the suggestion version of the change being associated with the described first editor；
Based on the suggestion version of the change, determine that the second editor advises；
Described first editor is converted to into the second editor suggestion；And
Advised using the described second editor, update the document model.
19. methods as claimed in claim 18, also include：
Based on the object in the document model, it is determined that the proprietary rightss with the change, wherein the object is by the change
Affect.
20. is a kind of for the system for being proposed editor is managed in cooperative document, and the system includes：
The device of the document model being associated with the cooperative document for instantiation；
For the device of first editor's suggestion to the cooperative document is received from first user；
For the type of type and the document model based on described first editor's suggestion, by the first suggestion order and described the
The associated device of one editor's suggestion；
For ordering using the described first suggestion on the document model, to be presented described first in the cooperative document
The device of editor's suggestion；
For receiving the device indicated for the acceptance of described first editor's suggestion；And
For in response to the received acceptance instruction, updating the dress of the document model using the described first suggestion order
Put.
A kind of 21. processors stored for managing the processor executable for being proposed editor in cooperative document are readable
Non-transitory medium, the processor executable include：
The instruction of the document model being associated with the cooperative document for instantiation；
For the instruction of first editor's suggestion to the cooperative document is received from first user；
For the type of type and the document model based on described first editor's suggestion, by the first suggestion order and described the
The associated instruction of one editor's suggestion；
For ordering using the described first suggestion on the document model, to be presented described first in the cooperative document
The instruction of editor's suggestion；
For receiving the instruction indicated for the acceptance of described first editor's suggestion；And
For in response to the received acceptance instruction, updating the finger of the document model using the described first suggestion order
Order.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
CN202210136613.2A CN114564920B (en) | 2014-06-24 | 2015-06-24 | Method, system, and computer readable medium for collaborative documents |
Applications Claiming Priority (13)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201462016259P | 2014-06-24 | 2014-06-24 | |
US201462016466P | 2014-06-24 | 2014-06-24 | |
US201462016451P | 2014-06-24 | 2014-06-24 | |
US201462016262P | 2014-06-24 | 2014-06-24 | |
US201462016456P | 2014-06-24 | 2014-06-24 | |
US201462016280P | 2014-06-24 | 2014-06-24 | |
US62/016,262 | 2014-06-24 | ||
US62/016,259 | 2014-06-24 | ||
US62/016,456 | 2014-06-24 | ||
US62/016,451 | 2014-06-24 | ||
US62/016,466 | 2014-06-24 | ||
US62/016,280 | 2014-06-24 | ||
PCT/US2015/037446 WO2015200495A1 (en) | 2014-06-24 | 2015-06-24 | Systems and methods for managing suggested edits in a collaborative document editing environment |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202210136613.2A Division CN114564920B (en) | 2014-06-24 | 2015-06-24 | Method, system, and computer readable medium for collaborative documents |
Publications (1)
Publication Number | Publication Date |
---|---|
CN106575287A true CN106575287A (en) | 2017-04-19 |
Family
ID=53718134
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201580034716.6A Pending CN106575287A (en) | 2014-06-24 | 2015-06-24 | Systems and methods for managing suggested edits in a collaborative document editing environment |
CN202210136613.2A Active CN114564920B (en) | 2014-06-24 | 2015-06-24 | Method, system, and computer readable medium for collaborative documents |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202210136613.2A Active CN114564920B (en) | 2014-06-24 | 2015-06-24 | Method, system, and computer readable medium for collaborative documents |
Country Status (5)
Country | Link |
---|---|
US (1) | US10521498B2 (en) |
EP (1) | EP3161663A1 (en) |
CN (2) | CN106575287A (en) |
DE (1) | DE202015009277U1 (en) |
WO (1) | WO2015200495A1 (en) |
Cited By (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN107656988A (en) * | 2017-09-12 | 2018-02-02 | 北京北信源软件股份有限公司 | Document edit method and system |
CN110276056A (en) * | 2019-05-28 | 2019-09-24 | 阿里巴巴集团控股有限公司 | Document edit method, device, equipment and system |
CN111989648A (en) * | 2018-07-16 | 2020-11-24 | 谷歌有限责任公司 | Embedding productivity applications into third party platforms |
CN112384926A (en) * | 2019-04-30 | 2021-02-19 | 微软技术许可有限责任公司 | Document autocompletion |
CN112667342A (en) * | 2021-01-06 | 2021-04-16 | 许继集团有限公司 | Script driving method and system for visual logic editing of relay protection device |
CN112836932A (en) * | 2021-01-04 | 2021-05-25 | 东山精密新加坡有限公司 | Employee improvement advice system |
CN113678149A (en) * | 2019-04-18 | 2021-11-19 | 微软技术许可有限责任公司 | Architecture for modeling annotation and editing relationships |
CN114026822A (en) * | 2019-05-30 | 2022-02-08 | 微软技术许可有限责任公司 | Document processing using client-side computing |
Families Citing this family (47)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10270871B2 (en) | 2014-04-08 | 2019-04-23 | Dropbox, Inc. | Browser display of native application presence and interaction data |
US10171579B2 (en) | 2014-04-08 | 2019-01-01 | Dropbox, Inc. | Managing presence among devices accessing shared and synchronized content |
US10091287B2 (en) | 2014-04-08 | 2018-10-02 | Dropbox, Inc. | Determining presence in an application accessing shared and synchronized content |
US9998555B2 (en) | 2014-04-08 | 2018-06-12 | Dropbox, Inc. | Displaying presence in an application accessing shared and synchronized content |
US10241989B2 (en) * | 2014-05-21 | 2019-03-26 | Adobe Inc. | Displaying document modifications using a timeline |
US20150379092A1 (en) * | 2014-06-26 | 2015-12-31 | Hapara Inc. | Recommending literacy activities in view of document revisions |
US9846528B2 (en) | 2015-03-02 | 2017-12-19 | Dropbox, Inc. | Native application collaboration |
US10216709B2 (en) | 2015-05-22 | 2019-02-26 | Microsoft Technology Licensing, Llc | Unified messaging platform and interface for providing inline replies |
US20160344677A1 (en) * | 2015-05-22 | 2016-11-24 | Microsoft Technology Licensing, Llc | Unified messaging platform for providing interactive semantic objects |
US11120342B2 (en) | 2015-11-10 | 2021-09-14 | Ricoh Company, Ltd. | Electronic meeting intelligence |
US10185707B2 (en) | 2015-12-16 | 2019-01-22 | Microsoft Technology Licensing, Llc | Aggregate visualizations of activities performed with respect to portions of electronic documents |
US10740297B2 (en) * | 2015-12-17 | 2020-08-11 | Box, Inc. | Adaptive tool selection for conflict resolution in a multi-session collaboration setting |
US10248933B2 (en) | 2015-12-29 | 2019-04-02 | Dropbox, Inc. | Content item activity feed for presenting events associated with content items |
US10620811B2 (en) | 2015-12-30 | 2020-04-14 | Dropbox, Inc. | Native application collaboration |
US10382502B2 (en) | 2016-04-04 | 2019-08-13 | Dropbox, Inc. | Change comments for synchronized content items |
US10592524B2 (en) * | 2016-04-19 | 2020-03-17 | Hyland Switzerland Sàrl | Systems and methods for sharing context among standalone applications |
US10346352B2 (en) * | 2016-06-06 | 2019-07-09 | Microsoft Technology Licensing, Llc | Providing notification based on destination of file operation |
US10176155B2 (en) * | 2016-08-09 | 2019-01-08 | Microsoft Technology Licensing, Llc | Modifying a document graph to reflect information relating to a document it represents |
US11307735B2 (en) | 2016-10-11 | 2022-04-19 | Ricoh Company, Ltd. | Creating agendas for electronic meetings using artificial intelligence |
US10740407B2 (en) | 2016-12-09 | 2020-08-11 | Microsoft Technology Licensing, Llc | Managing information about document-related activities |
US10798180B1 (en) * | 2017-04-11 | 2020-10-06 | Wells Fargo Bank, N.A. | Systems and methods for optimizing information collaboration |
US10223341B1 (en) | 2017-09-01 | 2019-03-05 | Adobe Inc. | Document beautification using smart feature suggestions based on textual analysis |
US20190102367A1 (en) * | 2017-10-03 | 2019-04-04 | Philip Robert Smith | Toggling between tracked markup formatting and blackline markup formatting |
US11062271B2 (en) | 2017-10-09 | 2021-07-13 | Ricoh Company, Ltd. | Interactive whiteboard appliances with learning capabilities |
US11030585B2 (en) | 2017-10-09 | 2021-06-08 | Ricoh Company, Ltd. | Person detection, person identification and meeting start for interactive whiteboard appliances |
US11093695B2 (en) * | 2017-10-18 | 2021-08-17 | Email Whisperer Inc. | Systems and methods for providing writing assistance |
US10606621B2 (en) * | 2018-05-08 | 2020-03-31 | International Business Machines Corporation | Assisting users to execute content copied from electronic document in user's computing environment |
EP3588329A1 (en) * | 2018-06-27 | 2020-01-01 | Unify Patente GmbH & Co. KG | Computer-implemented method and system for providing a review process of a document |
US10984183B1 (en) * | 2018-09-26 | 2021-04-20 | Facebook, Inc. | Systems and methods for sharing content |
WO2020102751A2 (en) * | 2018-11-15 | 2020-05-22 | Openeye Scientific Software, Inc. | Molecular structure editor with version control and simultaneous editing operations |
US11023503B2 (en) * | 2018-12-13 | 2021-06-01 | Textio, Inc. | Suggesting text in an electronic document |
US11392754B2 (en) * | 2019-03-15 | 2022-07-19 | Ricoh Company, Ltd. | Artificial intelligence assisted review of physical documents |
US11263384B2 (en) | 2019-03-15 | 2022-03-01 | Ricoh Company, Ltd. | Generating document edit requests for electronic documents managed by a third-party document management service using artificial intelligence |
US11720741B2 (en) * | 2019-03-15 | 2023-08-08 | Ricoh Company, Ltd. | Artificial intelligence assisted review of electronic documents |
US11080466B2 (en) | 2019-03-15 | 2021-08-03 | Ricoh Company, Ltd. | Updating existing content suggestion to include suggestions from recorded media using artificial intelligence |
US11270060B2 (en) | 2019-03-15 | 2022-03-08 | Ricoh Company, Ltd. | Generating suggested document edits from recorded media using artificial intelligence |
US11573993B2 (en) | 2019-03-15 | 2023-02-07 | Ricoh Company, Ltd. | Generating a meeting review document that includes links to the one or more documents reviewed |
US11194964B2 (en) | 2019-03-22 | 2021-12-07 | International Business Machines Corporation | Real-time assessment of text consistency |
US11483294B2 (en) | 2019-08-28 | 2022-10-25 | University Of Maryland, Baltimore County | Method for anonymizing network data using differential privacy |
US11714967B1 (en) * | 2019-11-01 | 2023-08-01 | Empowerly, Inc. | College admissions and career mentorship platform |
WO2021090332A1 (en) * | 2019-11-04 | 2021-05-14 | Leadstart Publishing Pvt. Ltd. | Systems and methods for providing a platform for feed-back based updateable content |
US20220171744A1 (en) * | 2020-12-01 | 2022-06-02 | Sony Interactive Entertainment LLC | Asset management between remote sites |
CN112765948B (en) * | 2020-12-31 | 2024-01-19 | 山西三友和智慧信息技术股份有限公司 | Document generation editing method |
US11546278B2 (en) | 2021-04-15 | 2023-01-03 | Microsoft Technology Licensing, Llc | Automated notification of content update providing live representation of content inline through host service endpoint(s) |
US11243824B1 (en) * | 2021-04-15 | 2022-02-08 | Microsoft Technology Licensing, Llc | Creation and management of live representations of content through intelligent copy paste actions |
US11336703B1 (en) | 2021-04-15 | 2022-05-17 | Microsoft Technology Licensing, Llc | Automated notification of content update providing live representation of content inline through host service endpoint(s) |
JP2023027467A (en) * | 2021-08-17 | 2023-03-02 | 富士フイルムビジネスイノベーション株式会社 | Information processor, information processing system, and program |
Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN1620098A (en) * | 2003-10-15 | 2005-05-25 | 株式会社理光 | Document collection manipulation |
CN1701326A (en) * | 2003-08-07 | 2005-11-23 | 国际商业机器公司 | Collaborative email |
US20090249224A1 (en) * | 2008-03-31 | 2009-10-01 | Microsoft Corporation | Simultaneous collaborative review of a document |
US20100235763A1 (en) * | 2002-10-31 | 2010-09-16 | Litera Technology Llc. | Collaborative hierarchical document development and review system |
US20120030563A1 (en) * | 2010-04-12 | 2012-02-02 | Google Inc. | Real-Time Collaboration in a Hosted Word Processor |
Family Cites Families (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP2004199401A (en) * | 2002-12-18 | 2004-07-15 | Fuji Xerox Co Ltd | File management system and method for managing shared file |
CN101057233A (en) * | 2004-11-12 | 2007-10-17 | 佳思腾软件公司 | Document processing device and document processing method |
US9176943B2 (en) * | 2008-05-12 | 2015-11-03 | Adobe Systems Incorporated | Comment presentation in electronic documents |
US8682989B2 (en) * | 2011-04-28 | 2014-03-25 | Microsoft Corporation | Making document changes by replying to electronic messages |
US20130326330A1 (en) * | 2012-06-01 | 2013-12-05 | Google Inc. | Integrating collaboratively proposed changes and publishing |
-
2015
- 2015-06-24 CN CN201580034716.6A patent/CN106575287A/en active Pending
- 2015-06-24 EP EP15741402.0A patent/EP3161663A1/en not_active Ceased
- 2015-06-24 WO PCT/US2015/037446 patent/WO2015200495A1/en active Application Filing
- 2015-06-24 US US14/749,368 patent/US10521498B2/en active Active
- 2015-06-24 DE DE202015009277.2U patent/DE202015009277U1/en active Active
- 2015-06-24 CN CN202210136613.2A patent/CN114564920B/en active Active
Patent Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20100235763A1 (en) * | 2002-10-31 | 2010-09-16 | Litera Technology Llc. | Collaborative hierarchical document development and review system |
CN1701326A (en) * | 2003-08-07 | 2005-11-23 | 国际商业机器公司 | Collaborative email |
CN1620098A (en) * | 2003-10-15 | 2005-05-25 | 株式会社理光 | Document collection manipulation |
US20090249224A1 (en) * | 2008-03-31 | 2009-10-01 | Microsoft Corporation | Simultaneous collaborative review of a document |
US20120030563A1 (en) * | 2010-04-12 | 2012-02-02 | Google Inc. | Real-Time Collaboration in a Hosted Word Processor |
Cited By (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN107656988B (en) * | 2017-09-12 | 2020-04-07 | 北京北信源软件股份有限公司 | Document editing method and system |
CN107656988A (en) * | 2017-09-12 | 2018-02-02 | 北京北信源软件股份有限公司 | Document edit method and system |
CN111989648B (en) * | 2018-07-16 | 2024-04-16 | 谷歌有限责任公司 | Embedding productivity applications into third party platforms |
CN111989648A (en) * | 2018-07-16 | 2020-11-24 | 谷歌有限责任公司 | Embedding productivity applications into third party platforms |
CN113678149A (en) * | 2019-04-18 | 2021-11-19 | 微软技术许可有限责任公司 | Architecture for modeling annotation and editing relationships |
CN113678149B (en) * | 2019-04-18 | 2023-12-26 | 微软技术许可有限责任公司 | Architecture for modeling annotation and edit relationships |
CN112384926A (en) * | 2019-04-30 | 2021-02-19 | 微软技术许可有限责任公司 | Document autocompletion |
CN110276056B (en) * | 2019-05-28 | 2023-08-22 | 创新先进技术有限公司 | Document editing method, device, equipment and system |
CN110276056A (en) * | 2019-05-28 | 2019-09-24 | 阿里巴巴集团控股有限公司 | Document edit method, device, equipment and system |
CN114026822A (en) * | 2019-05-30 | 2022-02-08 | 微软技术许可有限责任公司 | Document processing using client-side computing |
CN114026822B (en) * | 2019-05-30 | 2023-09-22 | 微软技术许可有限责任公司 | Document processing using client computing |
CN112836932A (en) * | 2021-01-04 | 2021-05-25 | 东山精密新加坡有限公司 | Employee improvement advice system |
CN112667342A (en) * | 2021-01-06 | 2021-04-16 | 许继集团有限公司 | Script driving method and system for visual logic editing of relay protection device |
Also Published As
Publication number | Publication date |
---|---|
EP3161663A1 (en) | 2017-05-03 |
US20150370769A1 (en) | 2015-12-24 |
CN114564920B (en) | 2023-05-30 |
US10521498B2 (en) | 2019-12-31 |
CN114564920A (en) | 2022-05-31 |
DE202015009277U1 (en) | 2017-01-20 |
WO2015200495A1 (en) | 2015-12-30 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN106575287A (en) | Systems and methods for managing suggested edits in a collaborative document editing environment | |
JP7460689B2 (en) | Software application development based on spreadsheets | |
US11726635B2 (en) | Customizations based on client resource values | |
US11042363B1 (en) | Systems, devices, and methods for software coding | |
US11860825B2 (en) | Collaborative document access recording and management | |
US10198411B2 (en) | Storing additional document information through change tracking | |
KR20110003490A (en) | Simultaneous collaborative review of a document | |
CN103150624A (en) | Equipment management and monitoring system based on process flow diagram | |
US20230055241A1 (en) | Digital processing systems and methods for external events trigger automatic text-based document alterations in collaborative work systems | |
US20070234201A1 (en) | Information Management Device | |
US11120200B1 (en) | Capturing unstructured information in application pages | |
WO2022153122A1 (en) | Systems, methods, and devices for enhanced collaborative work documents | |
US11210459B1 (en) | Systems, devices, and methods for software coding | |
US20220318489A1 (en) | Management of tracked changes objects for cloud document editing | |
US11868713B1 (en) | Systems, devices, and methods for software coding | |
EP1744271A1 (en) | Document processing device | |
US7730105B2 (en) | Time sharing managing apparatus, document creating apparatus, document reading apparatus, time sharing managing method, document creating method, and document reading method | |
CN107491466A (en) | client device, information processing system and information processing method | |
JP2010061200A (en) | Document management system and operation history display method | |
CN103324789A (en) | Method and device for showing ontology by utilizing modeling tool | |
Muller | Data Silences: How to Unsilence the Uncertainties in Data Science | |
Kanagasabai | Towards online, collaborative, multi-view modelling using collabCORE | |
Leonard et al. | Documenting Your Biml Solution | |
Lee | An integrated approach to version management, role-based access control and history maintenance in computer-supported collaborative writing | |
Watanabe et al. | Composition support of presentation slides based on transformation of semantic relationships into layout structure |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
CB02 | Change of applicant information |
Address after: California, USAApplicant after: Google Inc.Address before: California, USAApplicant before: Google Inc. |
|
CB02 | Change of applicant information | ||
RJ01 | Rejection of invention patent application after publication |
Application publication date: 20170419 |
|
RJ01 | Rejection of invention patent application after publication |
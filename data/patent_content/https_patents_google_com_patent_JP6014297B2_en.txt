JP6014297B2 - Communication between applications on different terminals - Google Patents
Communication between applications on different terminals Download PDFInfo
- Publication number
- JP6014297B2 JP6014297B2 JP2013555426A JP2013555426A JP6014297B2 JP 6014297 B2 JP6014297 B2 JP 6014297B2 JP 2013555426 A JP2013555426 A JP 2013555426A JP 2013555426 A JP2013555426 A JP 2013555426A JP 6014297 B2 JP6014297 B2 JP 6014297B2
- Authority
- JP
- Japan
- Prior art keywords
- appid
- application
- information
- request
- registry
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/08—Network architectures or network communication protocols for network security for authentication of entities
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/46—Multiprogramming arrangements
- G06F9/468—Specific access rights for resources, e.g. using capability register
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/46—Multiprogramming arrangements
- G06F9/54—Interprogram communication
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/10—Network architectures or network communication protocols for network security for controlling access to devices or network resources
- H04L63/101—Access control lists [ACL]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L65/00—Network arrangements, protocols or services for supporting real-time applications in data packet communication
- H04L65/10—Architectures or entities
- H04L65/1016—IP multimedia subsystem [IMS]
Description
本出願は、２０１１年１０月１８日出願の米国特許出願番号１３／２７６２１１、２０１１年１０月１８日出願の米国特許出願番号１３／２７６２２０、２０１１年１０月１８日出願の米国特許出願番号１３／２７６２２９、および２０１１年２月２４日出願の米国仮出願番号６１／４４６０４５の優先権の利益を有し、引用により本明細書に組み込まれるものとする。 This application is filed on U.S. Patent Application No. 13 / 276,221 filed October 18, 2011, U.S. Patent Application No. 13/276220, filed Oct. 18, 2011, and U.S. Patent Application No. 13 / filed on Oct. 18, 2011. No. 276229, and US Provisional Application No. 61/446045 filed Feb. 24, 2011, which are hereby incorporated by reference.
ＩＰマルチメディアサブシステム（ＩＭＳ）ネットワークアーキテクチャは、ＩＰ関連技術を用いたリアルタイムマルチメディア配信を可能にする端末間アーキテクチャの例である。これにより、インターネット、固定有線電話通信および無線通信機能が融合される。これにより、無線アクセスネットワークの異なるネットワーク間のハンドオーバやローミングなどの異種環境アクセス技術によって課せられる異なるアクセス関連制約を管理し、多種の機器がサポートされる。たとえば、テキストによるチャット、写真・映像・音楽・ファイルの転送、ライブ映像の共有、グループチャット、位置の共有、双方向またはグループ通信などの多様な通信技術をサポートする多様なアプリケーションにおいて、ネットワークを介してアプリケーション間通信を提供する必要性が高まっている。本発明は、この必要性を満足させる。 The IP Multimedia Subsystem (IMS) network architecture is an example of an end-to-end architecture that enables real-time multimedia distribution using IP related technologies. As a result, the Internet, fixed wired telephone communication, and wireless communication functions are integrated. This manages different access-related constraints imposed by heterogeneous environment access technologies such as handover and roaming between different radio access networks, and supports a variety of devices. For example, in various applications that support various communication technologies such as text chat, photo / video / music / file transfer, live video sharing, group chat, location sharing, two-way or group communication over the network The need to provide inter-application communication is increasing. The present invention satisfies this need.
いくつかの実施形態において、ネットワークを介してメディア情報を通信する方法が提示される。第１端末装置で動いている第１アプリケーションからの、第２端末装置で動いている第２アプリケーションとのメディア接続の要求に応じて、第２アプリケーションとのメディア接続の要求をネットワークを介して送信する。メディア接続要求は第１アプリケーションに関連付けられたアプリケーション識別子（ＡｐｐＩＤ）を含んでいる。第１アプリケーションによる要求に応じて、要求されたメディア接続の承認を得る承認要求がネットワークを介してアプリケーション管理サーバに送信される。承認要求は第１アプリケーションに関連付けられたＡｐｐＩＤを含んでいる。メディア接続要求に応じて、第１端末装置と第２端末装置との間に確立された制御セッションを介して制御情報が通信される。制御情報は第１アプリケーションに関連付けられたＡｐｐＩＤを含んでいる。メディア接続要求に応じて、第１端末装置と第２端末装置との間に確立されたメディアセッションを介してメディア情報が通信される。 In some embodiments, a method for communicating media information over a network is presented. A request for media connection with the second application is transmitted via the network in response to a request for media connection with the second application running on the second terminal device from the first application running on the first terminal device. To do. The media connection request includes an application identifier (AppID) associated with the first application. In response to the request by the first application, an approval request for obtaining approval of the requested media connection is transmitted to the application management server via the network. The approval request includes the AppID associated with the first application. In response to the media connection request, control information is communicated via a control session established between the first terminal device and the second terminal device. The control information includes AppID associated with the first application. In response to the media connection request, media information is communicated via a media session established between the first terminal device and the second terminal device.
以下、承認済アプリケーション間通信をマルチメディアネットワークを介して安定して確保するシステム、方法および製品アーティクルを、当業者が作成・使用できるように記載される。好ましい実施形態に対する種々の変更は当業者には容易に明らかであり、本明細書に記載される一般的原理は本発明の主旨・範囲からはずれることなく他の態様や使用に適用可能である。以下、アプリケーションやモジュールにより特定された動作を実行する１つ以上のプロセッサを構成するように、たとえば、ＲＡＭなどの揮発性記憶媒体やディスクやフラッシュなどの不揮発性記憶媒体に格納されたコンピュータプログラムコードにより構成されるアプリケーションやプロセスモジュールについて開示する。さらに、以下に、多くの詳細事項が説明のために記載されている。しかし、当業者は、それら特定の詳細事項を使用せずに本発明を実施できることを理解できるであろう。また、不要な詳細により本発明の記載が理解しにくくならないように、周知の構成やプロセスについてはブロック図形式で示している。このように、本発明は、以下に示される実施形態に限定されることなく、本明細書に開示される原理や特徴に沿った最も広い範囲として認められるべきものである。 In the following, systems, methods and product articles that stably secure approved inter-application communication over a multimedia network are described so that those skilled in the art can create and use them. Various modifications to the preferred embodiment will be readily apparent to those skilled in the art and the generic principles described herein may be applied to other aspects and uses without departing from the spirit and scope of the invention. Hereinafter, for example, computer program code stored in a volatile storage medium such as a RAM or a non-volatile storage medium such as a disk or a flash so as to constitute one or more processors that execute an operation specified by an application or a module. Disclosed are applications and process modules. In addition, many details are set forth below for purposes of illustration. However, one of ordinary skill in the art appreciates that the invention may be practiced without these specific details. In other instances, well-known structures and processes are shown in block diagram form in order not to obscure the description of the invention with unnecessary detail. As described above, the present invention should not be limited to the embodiments shown below, but should be recognized as the widest scope in accordance with the principles and features disclosed in this specification.
図１Ａはいくつかの実施形態におけるシステム１００を例示する図である。システム１００は、マルチメディアサービス配信ネットワークアーキテクチャ２０８を介して通信する第１端末装置２０２−１と第２端末装置２０２−２を備える。端末装置は、移動電話無線装置、セットトップボックス、タブレットコンピュータ、自動車ナビゲーション／娯楽システム、ゲームコンソール、パーソナルコンピュータ、またはこれらの組合せを備える。いくつかの実施形態では、ネットワークアーキテクチャ２０８はＩＭＳアーキテクチャを備える。 FIG. 1A is a diagram illustrating a system 100 in some embodiments. The system 100 includes a first terminal device 202-1 and a second terminal device 202-2 that communicate via a multimedia service distribution network architecture 208. The terminal device comprises a mobile telephone radio device, a set top box, a tablet computer, a car navigation / entertainment system, a game console, a personal computer, or a combination thereof. In some embodiments, the network architecture 208 comprises an IMS architecture.
第１および第２端末装置２０２−１、２０２−２はアプリケーション間（以下、Ａ２Ａ）通信用に構成されている。すなわち、第１装置２０２−１で動いているアプリケーションは、第２装置２０２−２で動いているアプリケーションと通信することができる。たとえば、マルチユーザＡ２Ａ通信ゲームアプリケーションによれば、ゲームの音声や映像とともにゲームデータを交換することができ、ゲーム中にユーザがお互いに話したり見たりすることができる。別の例として、マルチメディアＡ２Ａ通信メッセージングアプリケーションによれば、テキストによるチャット、写真／映像／音楽／ファイルの転送、ライブ映像の共有、グループチャット、位置の共有、またはあらゆる種類の双方向またはグループの通信を行うことができる。さらに別の例として、マルチプレーヤＡ２Ａ通信ゲームアプリケーションによれば、短い待ち時間、２者以上の間でのピアツーピアのデータ交換、および／または音声・映像またはテキストによるチャットなどの他のマルチメディア機能を含むことができる。Ａ２Ａ通信を含むアプリケーションの他の例としては、統合通信アプリケーション、顧客ケアアプリケーション、社交／交際アプリケーション、企業アプリケーションが挙げられる。これらの例示されたＡ２Ａ通信アプリケーションは、ピアツーピアのデータ交換やマルチメディアメッセージ交換（テキスト、映像、音声、写真、または他のマルチメディアタイプ）など、同様な機能を利用することができる。他のＡ２Ａ通信アプリケーションは、音声／映像会議アプリケーションを含んでいてもよい。以下に詳細に説明されるように、装置はアプリケーションが他のアプリケーションとメディアデータを通信できる１以上のメディアセッションを確立する。 The first and second terminal devices 202-1 and 202-2 are configured for communication between applications (hereinafter referred to as A2A). That is, an application running on the first device 202-1 can communicate with an application running on the second device 202-2. For example, according to the multi-user A2A communication game application, game data can be exchanged together with game sounds and videos, and users can talk and watch each other during the game. As another example, a multimedia A2A communication messaging application can be used for text chat, photo / video / music / file transfer, live video sharing, group chat, location sharing, or any kind of interactive or grouped Communication can be performed. As yet another example, the multiplayer A2A communication game application provides other multimedia features such as low latency, peer-to-peer data exchange between two or more parties, and / or voice / video or text chat Can be included. Other examples of applications that include A2A communications include integrated communications applications, customer care applications, social / dating applications, and enterprise applications. These illustrated A2A communication applications can utilize similar functions such as peer-to-peer data exchange and multimedia message exchange (text, video, audio, photo, or other multimedia types). Other A2A communication applications may include audio / video conferencing applications. As described in detail below, the device establishes one or more media sessions that allow applications to communicate media data with other applications.
Ａ２Ａアプリケーション管理サーバ１０２は、Ａ２Ａ対応アプリケーション間のメディアセッションの確立中は制御パスに配置される。サーバ１０２は、Ａ２Ａアプリケーション間のメディア接続の承認を管理する。さらに詳細には、様々な異なるＡ２Ａアプリケーションが様々な異なる端末装置で動いていてもよい。アプリケーション管理サーバ１０２は、端末装置で動くとともにＡ２Ａ通信に対応可能なアプリケーション（以下、Ａ２Ａ対応アプリケーション）間のメディア接続の承認を管理する。 The A2A application management server 102 is placed in the control path during establishment of a media session between A2A compatible applications. The server 102 manages media connection approval between A2A applications. More specifically, a variety of different A2A applications may be running on a variety of different terminal devices. The application management server 102 manages approval of media connection between applications (hereinafter referred to as A2A compatible applications) that run on the terminal device and can support A2A communication.
管理承認は、Ａ２Ａ対応アプリケーションを識別することを含む。また、管理承認は、他のＡ２Ａ対応アプリケーションとの間でＡ２Ａ通信を確立するために、表面上は識別されたＡ２Ａ対応アプリケーションから受領した要求が、その要求を送信したとされるＡ２Ａ対応アプリケーションによって実際に送信されたと確認することも含む。さらに、いくつかの実施形態では、管理承認は、要求内で特定されたユーザにアプリケーションが承認されるか否か判定するための１つ以上の規定を適用することを含む。 Management authorization includes identifying an A2A enabled application. In addition, the management approval is performed by the A2A-compatible application that is assumed that the request received from the identified A2A-compatible application is transmitted on the surface in order to establish A2A communication with another A2A-compatible application. It also includes confirming that it was actually transmitted. Further, in some embodiments, administrative approval includes applying one or more rules for determining whether the application is approved for the user identified in the request.
いくつかの実施形態では、アプリケーション管理サーバはアプリケーション登録インターフェース１１２を含み、Ａ２Ａ対応アプリケーションに関連付けられたアプリケーション識別子（ＡｐｐＩＤ）やアプリケーション秘密情報（アプリケーション秘密）などの非公開情報を指定するために使用するように、ウェブサーバ、データベース、遠隔プロセス、または分散クライアントや他のシステムに中央管理されたデータを利用可能にする他の手段として機能する。いくつかの実施形態では、開発者は、Ａ２Ａ対応アプリケーションを登録するために、アプリケーション登録インターフェース１１２を使用する。予備登録段階では、開発者は、アプリケーションをアプリケーションレジストリ１０４に登録する。ＡｐｐＩＤとアプリケーション秘密が返送されて、アプリケーションにインデックスを付ける。ＡｐｐＩＤは、メッセージ中のＡｐｐＩＤとアプリケーションのＡｐｐＩＤとの一致によってすべてのメッセージの経路を決めるために使用される。この登録は、一回限りのイベントであり、アプリケーション配備のために一回発生する。アプリケーション秘密は、動的にアプリケーショントークンを作成するために使用される。動的登録段階では、開発者は事前にアプリケーションを登録することはせず、複数のアプリケーションの動的な登録を可能にする開発者キーまたはトークンを有する。これは、プラットフォームで承認された「信任開発者」である。開発者キーは、動作中のアプリケーション登録中にパスし、バックエンドレジストリデータベース内の開発者キーのホワイトリストに対して確認される。それぞれの開発者キーには特性が関連付けられ、たとえば、動的登録または携帯電話会社により登録される個別のアプリケーションの数を制限する。他の特性も可能である。動的登録の間に、ＡｐｐＩＤおよびアプリケーション秘密を引き出すために、開発者キーはアプリケーションのスタートアップまたはインストールに進む。セッションの間またはプラットフォームにより定義される長い期間、アプリケーション秘密は有効となっている。 In some embodiments, the application management server includes an application registration interface 112 that is used to specify private information such as application identifier (AppID) and application secret information (application secret) associated with an A2A enabled application. As such, it acts as a web server, database, remote process, or other means of making centrally managed data available to distributed clients and other systems. In some embodiments, the developer uses the application registration interface 112 to register an A2A enabled application. In the preliminary registration stage, the developer registers the application in the application registry 104. The AppID and application secret are returned to index the application. The AppID is used to route all messages by matching the AppID in the message with the AppID of the application. This registration is a one-time event and occurs once for application deployment. Application secrets are used to dynamically create application tokens. In the dynamic registration phase, the developer does not register the application in advance, but has a developer key or token that allows dynamic registration of multiple applications. This is a “trusted developer” approved on the platform. The developer key is passed during registration of the running application and verified against the whitelist of developer keys in the backend registry database. Each developer key is associated with a characteristic that limits the number of individual applications registered, for example, by dynamic registration or a mobile phone company. Other characteristics are possible. During dynamic registration, the developer key goes to application startup or installation to retrieve the AppID and application secret. The application secret is valid during the session or for a long period defined by the platform.
ＡｐｐＩＤを登録するときに、開発者／アプリケーションは、どのようなタイプのメッセージがＡｐｐＩＤに対応するアプリケーションによって受信可能か特定してもよい。ここで、以下のような選択肢が考えられる。
（１）アプリケーションは、同一のアプリケーション／ＡｐｐＩＤからのメッセージのみ受信することができる。
（２）アプリケーションは、そのＡｐｐＩＤに対してアプリケーションレジストリ１０４にホワイトリストされているアプリケーションの定義されたリストからのメッセージを受信することができる。
（３）アプリケーションは、特定の開発者からのメッセージを受信することができる。
（４）アプリケーションは、たとえば特定のまたはリストされた国の携帯ネットワークなど、特定のネットワークまたはネットワークオペレータからのすべてのメッセージを受信できる。
（５）アプリケーションは、誰からもメッセージを受信することができる。
他の制約も可能であり、ＡｐｐＩＤ登録の登録パラメータに追加することができる。
When registering an AppID, the developer / application may specify what type of message can be received by the application corresponding to the AppID. Here, the following options can be considered.
(1) An application can receive only messages from the same application / AppID.
(2) An application can receive a message from a defined list of applications that are whitelisted in the application registry 104 for that AppID.
(3) The application can receive a message from a specific developer.
(4) The application can receive all messages from a particular network or network operator, for example a cellular network of a particular or listed country.
(5) The application can receive a message from anyone.
Other constraints are possible and can be added to the registration parameters for AppID registration.
ＡｐｐＩＤは、システム１００内においてＡ２Ａ対応アプリケーションを固有に識別する識別子である。言い換えれば、それぞれの異なる種類のＡ２Ａアプリケーションは、自身の固有なＡｐｐＩＤに関連付けられている。ＡｐｐＩＤは、異なる方法により生成することができ、異なるフォーマットを有することができる。異なるフォーマットには、数字の識別子（たとえば、１２３４）、英数字の識別子（たとえば、ａｃｍｅ―ａｐｐｌｉｃａｔｉｏｎ―１）、ホスト／ドメイン／パッケージの名称（たとえば、ｃｏｍ．ａｃｍｅ．ｘｙｚ）やランダムな値が含まれるがこれらには限定されない。 AppID is an identifier that uniquely identifies an A2A-compatible application in the system 100. In other words, each different type of A2A application is associated with its own unique AppID. AppIDs can be generated by different methods and can have different formats. Different formats include numeric identifiers (eg 1234), alphanumeric identifiers (eg acme-application-1), host / domain / package names (eg com.acme.xyz) and random values. However, it is not limited to these.
アプリケーション管理サーバ１０２がメディア接続要求のソースを確認する際に使用するために、Ａ２Ａ対応アプリケーションに関連付けられた秘密情報は、メディア要求の一部としてネットワーク２０８を介して送信されるトークン（シグナチャ）を生成するために使用される。いくつかの実施形態では、たとえば、ＡｐｐＩＤ、秘密情報、および要求に固有に関連付けられた他の情報（ヘッダ情報、タイムスタンプ、またはノンスなど）の機能として、トークンが動的に生成される。当然のことながら、トークンを生成するために特定の要求の特性に関連付けられた情報を使用することにより、たとえばリプレーアタックを回避しやすくなる。いくつかの実施形態では、たとえばＭＤ５ハッシュまたはＨＭＡＣ−ＳＨＡ１ハッシュなどのハッシュ技術によりトークンが生成される。トークン生成の構成は本発明の範囲に含まれない。トークンやハッシュなどを生成するいくつかの一般的な方法は、当業者には容易に利用可能である。アプリケーション管理サーバ１０２もＡｐｐＩＤに関連付けられた秘密情報を所有（共有）し、メディア接続要求がその要求を送信したとされるＡ２Ａ対応アプリケーションによって実際に送信されたことを確認するために秘密情報とトークンを使用する。このように、サーバ１０２は、ネットワーク２０８を介して秘密情報を送信する必要なしに要求を確認するためにトークンを使用する。 The secret information associated with the A2A-compliant application uses a token (signature) transmitted over the network 208 as part of the media request for use by the application management server 102 to determine the source of the media connection request. Used to generate. In some embodiments, tokens are dynamically generated, for example, as a function of AppID, secret information, and other information uniquely associated with the request (such as header information, timestamp, or nonce). Of course, the use of information associated with specific request characteristics to generate tokens, for example, makes it easier to avoid replay attacks. In some embodiments, the token is generated by a hash technique, such as an MD5 hash or an HMAC-SHA1 hash, for example. The configuration of token generation is not included in the scope of the present invention. Several common methods for generating tokens, hashes, etc. are readily available to those skilled in the art. The application management server 102 also owns (shares) the secret information associated with the AppID, and the secret information and token are used to confirm that the media connection request is actually transmitted by the A2A compatible application that is said to have transmitted the request. Is used. In this way, the server 102 uses the token to confirm the request without having to send confidential information over the network 208.
Ａ２Ａサーバ１０２は、それぞれ持続性記憶媒体内にコード化されたＡ２Ａアプリケーションレジストリ１０４とユーザプロファイルレジストリ１０６を備える。Ａ２Ａアプリケーション管理サーバ１０２は、アプリケーションサービス１０８とユーザデータ収集サービス１１０を実行する。 The A2A server 102 includes an A2A application registry 104 and a user profile registry 106, each encoded in a persistent storage medium. The A2A application management server 102 executes an application service 108 and a user data collection service 110.
表１は、いくつかの実施形態における持続性記憶媒体内にコード化されたアプリケーションレジストリ１０４の情報構造例を示す。
アプリケーションレジストリ１０４は、それぞれに異なるＡ２Ａ対応アプリケーションを固有に識別する複数のＡｐｐＩＤを含む。レジストリ内の各ＡｐｐＩＤは、メディア接続要求のソースを確認するために使用される秘密情報に関連付けられている。各ＡｐｐＩＤは、ＡｐｐＩＤに対応するＡ２Ａアプリケーションに関連付けられた規則を示すメタデータに関連付けられてもよい。 The application registry 104 includes a plurality of AppIDs that uniquely identify different A2A compatible applications. Each AppID in the registry is associated with secret information used to verify the source of the media connection request. Each AppID may be associated with metadata indicating a rule associated with the A2A application corresponding to the AppID.
表２は、いくつかの実施形態のおける持続性記憶媒体内にコード化されたユーザプロファイルレジストリ１０６の情報構造例を示す。
ユーザプロファイルレジストリ１０６は、メディア接続要求において特定されたユーザに関連付けられたユーザプロファイル情報を提供する。ユーザプロファイル情報は、サービス加入状態やユーザにより申し込まれたサービス品質の情報（最大許容ビットレートまたは許容転送量クラスなど）などの情報を含んでいてもよい。いくつかの実施形態では、アプリケーション管理サーバ１０２は、ホーム回線サーバ（ＨＳＳ）やユーザ回線関連情報を含む３Ｇネットワークのマスターデータベースなどの携帯電話会社データベースから、情報をプロファイルレジストリ１０６内に入手する。いくつかの実施形態では、ユーザプロファイルレジストリ１０６は、携帯電話会社データベースの拡張として機能する。 User profile registry 106 provides user profile information associated with the user identified in the media connection request. The user profile information may include information such as service subscription status and service quality information (maximum allowable bit rate or allowable transfer amount class) applied by the user. In some embodiments, the application management server 102 obtains information in the profile registry 106 from a mobile phone company database, such as a home line server (HSS) or a 3G network master database containing user line related information. In some embodiments, the user profile registry 106 serves as an extension of the mobile carrier database.
図１Ｂは、いくつかの実施形態において、図１Ａのアプリケーション管理サーバ１０２のアプリケーションサービス１０８を使用して実行される第１プロセス１２０の例示的なフローチャートである。特定のＡｐｐＩＤと秘密情報に関連付けられたＡ２Ａアプリケーションのインスタンスを含む第２装置２０２−２とのＡ２Ａ通信を確立するために第１端末装置２０２−１で動いているＡ２Ａアプリケーションから発せられた要求を受信すると、モジュール１２２では、アプリケーションレジストリ１０４からＡｐｐＩＤに対応する情報一式を引き出すように試みられる。いくつかの実施形態では、第１端末装置２０２−１がネットワーク２０８を介して要求を送信する。要求は、ネットワーク２０８内の後述のプロキシサーバがこの要求をアプリケーション管理サーバ１０２に転送させる命令を含む。判定モジュール１２４において、ＡｐｐＩＤが登録されているか否か、すなわち、アプリケーションレジストリ１０４がＡｐｐＩＤにより有効なＡ２Ａ対応アプリケーションを特定されていることを示すか否かを判定される。判定モジュール１２４においてＡｐｐＩＤがレジストリ１０４に格納されていないと判定された場合には、モジュール１２６において要求拒絶を示すメッセージが発せられる。いくつかの実施形態では、拒絶メッセージは、拒絶に応じて要求を第２装置２０２−２に送信しないように判定するプロキシサーバに送信される。 FIG. 1B is an exemplary flowchart of a first process 120 performed using the application service 108 of the application management server 102 of FIG. 1A in some embodiments. A request issued from the A2A application running on the first terminal device 202-1 to establish A2A communication with the second device 202-2 including an instance of the A2A application associated with the specific AppID and secret information. Upon receipt, module 122 attempts to retrieve a set of information corresponding to the AppID from application registry 104. In some embodiments, the first terminal device 202-1 sends a request over the network 208. The request includes an instruction that causes a proxy server (described later) in the network 208 to transfer the request to the application management server 102. In the determination module 124, it is determined whether AppID is registered, that is, whether the application registry 104 indicates that a valid A2A-compatible application is specified by AppID. If the determination module 124 determines that the AppID is not stored in the registry 104, a message indicating request rejection is issued in the module 126. In some embodiments, the rejection message is sent to a proxy server that determines not to send a request to the second device 202-2 in response to the rejection.
判定モジュール１２４においてＡｐｐＩＤがレジストリ１０４に格納されていると判定された場合には、制御は判定モジュール１２８に進み、要求が、実際に承認済Ａ２Ａ対応アプリケーションから発せられたことを示す有効なトークンを含んでいるか否か、そして、たとえばスパムではないか否かが判定される。トークンの確認は、アプリケーションレジストリ１０４内で要求に含まれるＡｐｐＩＤに関連付けられた秘密情報の使用を含む。いくつかの実施形態では、トークンの確認は、上述のように変換情報を生成するために要求内のヘッダ情報のハッシュを反転させることを含む。判定モジュール１２８において変換情報が識別されたＡｐｐＩＤを有する秘密情報に一致しないと判定された場合には、要求は有効なトークンを含まない。そして、上述のように、モジュール１２６において要求拒絶を示すメッセージが発せられる。いくつかの実施形態では、モジュール１２６において、要求を発した端末装置に要求が拒絶されたことを通知するメッセージがネットワークを介して送信される。 If the determination module 124 determines that the AppID is stored in the registry 104, control proceeds to the determination module 128 where a valid token indicating that the request was actually issued from an approved A2A enabled application. It is determined whether it is included and whether it is, for example, spam. The confirmation of the token includes the use of secret information associated with the AppID included in the request within the application registry 104. In some embodiments, token verification includes reversing the hash of the header information in the request to generate translation information as described above. If the determination module 128 determines that the conversion information does not match the secret information having the identified AppID, the request does not include a valid token. Then, as described above, a message indicating request rejection is issued in the module 126. In some embodiments, module 126 sends a message over the network notifying the requesting terminal device that the request has been rejected.
判定モジュール１２８において要求が有効なトークンを含んでいると判定された場合には、制御は判定モジュール１３０に進み、アプリケーションレジストリ１０４内で要求に含まれるＡｐｐＩＤに関連付けられたメタデータにより示された規則や規定に要求が適合するか否かが判定される。判定モジュール１３０においてＡｐｐＩＤに関連付けられた規則が要求を拒絶すべきことを示すと判定された場合には、モジュール１２６により要求拒絶を示すメッセージが発せられる。しかし、モジュール１３０においていずれの規則や他の基準も要求許可を妨げないと判定された場合には、モジュール１３２において要求は受諾される。いくつかの実施形態では、要求の受諾は、要求が申し込まれた端末装置にネットワークを介して要求を転送することを含む。 If the determination module 128 determines that the request contains a valid token, control proceeds to the determination module 130 where the rules indicated by the metadata associated with the AppID included in the request in the application registry 104. It is determined whether or not the requirement conforms to the regulations. If the decision module 130 determines that the rule associated with the AppID indicates that the request should be rejected, a message indicating request rejection is issued by the module 126. However, if module 130 determines that any rule or other criteria does not interfere with request authorization, module 132 accepts the request. In some embodiments, accepting the request includes forwarding the request over the network to the terminal device to which the request was applied.
図１Ｃは、いくつかの実施形態における判定モジュール１３０の詳細を示す例示的なフローチャート１４０である。判定モジュール１４２において、ＡｐｐＩＤに関連付けられたメタデータが要求の際のメッセージで特定されたユーザとの同一性に関わらず適用可能な１つ以上の規則を含んでいるか否かが判定される。本明細書で使用されているように、ユーザは、個々のユーザと、たとえば、特定のグループ、組織または組織内の部署に関連付けられたユーザなどのユーザカテゴリを含む。たとえば、Ａ２Ａ対応アプリケーションは、周知のセキュリティまたは不正の問題によりグローバルにブラックリストされているかもしれない。判定モジュール１４２において規則が要求を拒絶すべきことを示すと判定された場合には、モジュール１２６において要求拒絶を示すメッセージが発せられる。判定モジュール１４２において要求拒絶を求めるユーザに依存しない規則が存在しないと判定された場合には、制御は判定モジュール１４４に進み、ＡｐｐＩＤに関連付けられたメタデータと併せてユーザに依存する規則が承認要求を拒絶されるべきことを示すか否かが判定される。判定モジュール１４４においてユーザに依存する規則が要求を拒絶すべきことを示す場合には、モジュール１２６により要求拒絶を示すメッセージが発せられる。そうでない場合には、モジュールにおいて要求は受諾される。 FIG. 1C is an exemplary flowchart 140 illustrating details of the determination module 130 in some embodiments. In a determination module 142, it is determined whether the metadata associated with the AppID includes one or more rules that are applicable regardless of identity with the user identified in the message at the time of the request. As used herein, a user includes individual users and user categories such as, for example, users associated with a particular group, organization or department within an organization. For example, A2A enabled applications may be blacklisted globally due to known security or fraud issues. If it is determined at decision module 142 that the rule indicates that the request should be rejected, a message indicating request rejection is issued at module 126. If the determination module 142 determines that there is no user-independent rule for request rejection, control proceeds to the determination module 144 where a user-dependent rule is combined with the metadata associated with the AppID. Whether or not to indicate that it should be rejected. If the user-dependent rule in decision module 144 indicates that the request should be rejected, module 126 issues a message indicating the request rejection. Otherwise, the request is accepted at the module.
図１Ｄは、いくつかの実施形態において、判定モジュール１４４の詳細を示す例示的なフローチャート１７０である。モジュール１７２において、ＡｐｐＩＤに関連付けられたアプリケーションメタデータが取得される。モジュール１７４において、アプリケーションメタデータに関連するユーザプロファイル情報が取得される。モジュール１７６において、ユーザプロファイルとアプリケーションメタデータの機能として、１つ以上の承認規則が適用される。たとえば、Ａ２Ａ対応アプリケーションは、携帯電話契約に基づいて特定の顧客にはブラックリストされているかもしれない（たとえば、ある映像チャットアプリケーションは未成年者には利用させるべきではない）。他のＡ２Ａ対応アプリケーション（たとえば、ＨＤ品質テレビ会議）は、特別契約によってのみ利用可能かもしれない。 FIG. 1D is an exemplary flowchart 170 illustrating details of the determination module 144 in some embodiments. In module 172, application metadata associated with the AppID is obtained. In module 174, user profile information associated with application metadata is obtained. In module 176, one or more approval rules are applied as a function of the user profile and application metadata. For example, an A2A enabled application may be blacklisted for a particular customer based on a mobile phone contract (eg, a video chat application should not be used by minors). Other A2A compatible applications (eg, HD quality video conferencing) may be available only through special contracts.
したがって、第１端末装置２０２−１で動いているＡ２Ａ対応アプリケーション２０４−１によりネットワーク２０８を介して送信された、第２端末装置２０２−２で動いている他のＡ２Ａ対応アプリケーション２０４−２とのメディア通信の要求は、アプリケーションに関連付けられたメタデータおよびアプリケーションのユーザに関連付けられたプロファイル情報に基づいて承認されることが可能となる。 Therefore, with the other A2A corresponding application 204-2 running on the second terminal apparatus 202-2, transmitted via the network 208 by the A2A corresponding application 204-1 running on the first terminal apparatus 202-1. The request for media communication can be approved based on metadata associated with the application and profile information associated with the user of the application.
図１Ｅは、いくつかの実施形態において、図１Ａのアプリケーション管理サーバ１０２のユーザデータサービス１０８を使用して実行される第２プロセス１５０の例示的なフローチャートである。モジュール１５２において、ＡｐｐＩＤに関連付けられたアプリケーションメタデータが取得される。モジュール１５４において、アプリケーションメタデータに関連するユーザプロファイル情報が取得される。モジュール１５６において、ユーザプロファイルとアプリケーションメタデータの機能として、１つ以上のユーザ管理規則が適用される。たとえば、管理規則は、統計のため拒絶された要求のログを生成し、要求している装置のユーザに携帯電話会社の顧客サポートシステムを介して拒絶を通知（電子メールやＳＭＳなど）し、またはこの情報を他の手段を介してユーザに返信してもよい。別の例として、管理規則により、特定のユーザが特定のＡｐｐＩＤに関連付けられたアプリケーションにアクセスするときには特別な請求料率が適用されるように定めてもよい。たとえば、ユーザは特定のゲームアプリケーションを特別料金で使用することを申し込んでもよい。さらに別の例として、管理規則は、携帯電話会社の課金システムによって処理される請求詳細記録（ＣＤＲ）を生成してもよい。さらに別の例として、管理規則により、管理サーバ１０２が前払いの課金システムまたは他の手段（たとえば、Ｐａｙｐａｌサービスやクレジットカードなど）とやり取りするように構成されてもよい。さらに別の例として、アプリケーションレジストリ１０４とアイデンティティレジストリ１０６の一方または他方に含まれる管理規則によって、特定のＡｐｐＩＤの関連付けられたＡ２Ａ対応アプリケーションが一定のサービス品質で提供され、ユーザの同一性に関わらず、一定の料金が請求されるべきであることを定めてもよい。たとえば、緊急医療サービスの提供に含まれるアプリケーションがネットワークを介した通信において最優先で提供されてもよく、また、割増料金で提供されてもよい。 FIG. 1E is an exemplary flowchart of a second process 150 performed using the user data service 108 of the application management server 102 of FIG. 1A in some embodiments. In module 152, application metadata associated with the AppID is obtained. In module 154, user profile information associated with application metadata is obtained. In module 156, one or more user management rules are applied as a function of the user profile and application metadata. For example, an administrative rule may generate a log of requests rejected for statistics and notify the user of the requesting device via the mobile carrier's customer support system (such as email or SMS), or This information may be returned to the user via other means. As another example, administrative rules may specify that a particular billing rate applies when a particular user accesses an application associated with a particular AppID. For example, a user may apply to use a particular game application for a special fee. As yet another example, a management rule may generate a billing detail record (CDR) that is processed by a mobile carrier billing system. As yet another example, the management server 102 may be configured to interact with a prepaid billing system or other means (eg, Paypal service, credit card, etc.) according to management rules. As yet another example, a management rule included in one or the other of the application registry 104 and the identity registry 106 provides an A2A-compliant application associated with a specific AppID with a certain quality of service, regardless of user identity. , It may be determined that a certain fee should be charged. For example, an application included in the provision of emergency medical services may be provided with the highest priority in communication via a network, or may be provided at an extra charge.
図２Ａは、いくつかの実施形態において、図１のシステム１００の複数の端末装置のアプリケーション間のメディア通信を初期化する信号フロープロトコルを例示する図である。システム１００は、第１端末装置２０２−１と、第２端末装置２０２−２と、通信ネットワーク２０８を備える。第１端末装置２０２−１は、アプリケーションに関連付けられた機能を実行するために第１端末２０２−１を構成するＡ２Ａ対応アプリケーション２０４−１の第１インスタンスでコード化されたコンピュータ読み取り可能な持続性記憶媒体を含む。第２端末装置２０２−２は、同じアプリケーションに関連付けられた機能を実行するために第２端末２０２−２を構成するＡ２Ａ対応アプリケーション２０４−２の第２インスタンスでコード化されたコンピュータ読み取り可能な持続性記憶媒体を含む。 2A is a diagram illustrating a signal flow protocol for initializing media communication between applications of multiple terminal devices of the system 100 of FIG. 1 in some embodiments. The system 100 includes a first terminal device 202-1, a second terminal device 202-2, and a communication network 208. The first terminal device 202-1 is a computer readable persistence encoded with a first instance of the A2A enabled application 204-1 that constitutes the first terminal 202-1 to perform the function associated with the application. Including storage media. The second terminal device 202-2 is a computer readable persistence encoded with a second instance of the A2A enabled application 204-2 that constitutes the second terminal 202-2 to perform the function associated with the same application. Including sexual storage media.
本明細書で使用する「アプリケーション」という用語は、ユーザインターフェースを有し、メディア通信機能（たとえば、ＶＯＩＰ、映像、ピアツーピアパケットデータ通信、ファイル転送、チャットなど）を有するアプリケーションを指す。さらに、「アプリケーション」という用語は、例示的かつ非限定的に、スタンドアロンアプリケーションを含むように解釈され、複数のファイルとシステム設定、システムソフトウェア、ランタイムライブラリ、またはプラグインまたは拡張（たとえば、ブラウザプラグイン）に関連付けられていてもよい。本明細書における目的のために、アプリケーションは、ユーザインターフェースを生成する実行可能なファイルまたはファイルグループである。第１および第２のＡ２Ａ対応アプリケーションの両者が起動されると、両端末装置が同一のＡ２Ａ対応アプリケーションを実行するように構成される。第１装置２０２−１はＡ２Ａ通信エンジン２０６−１の第１インスタンスを実行するように構成され、第２装置２０２−２はＡ２Ａ通信エンジン２０６−２の第２インスタンスを実行するように構成される。 As used herein, the term “application” refers to an application having a user interface and having media communication functions (eg, VOIP, video, peer-to-peer packet data communication, file transfer, chat, etc.). Further, the term “application” is construed to include, by way of example and not limitation, a standalone application and includes multiple files and system settings, system software, runtime libraries, or plug-ins or extensions (eg, browser plug-ins). ). For purposes herein, an application is an executable file or file group that generates a user interface. When both the first and second A2A compatible applications are activated, both terminal devices are configured to execute the same A2A compatible application. The first device 202-1 is configured to execute a first instance of the A2A communication engine 206-1 and the second device 202-2 is configured to execute a second instance of the A2A communication engine 206-2. .
口語的にネットワーク「クラウド」と称されることがあるネットワーク２０８のＩＭＳ実装には、複数のＳＩＰプロキシサーバ２１０（１つが示される）とＡ２Ａアプリケーション管理サーバ１０２が含まれる。「ＳＩＰ」という用語は、セッション初期化プロトコルを意味する。「セッション」という用語は、通信する１つ以上の送信側および受信側のセットと、通信の間それらの送信側および受信側に保存されている状態を意味する。開示されている実施形態ではＳＩＰメッセージが使用されているが、スカイププロトコルなど他のメッセージプロトコル、ジングル（音声用）などのＸＭＰＰ拡張、およびピアツーピア通信を確立するための他の一般的なプロトコルを代わりに使用してもよい。「サーバ」は、たとえばコンピュータなどの機器であり、他の機器に対して情報や経路サービスを提供するように構成される。サーバへのアクセスを要求する機器（コンピュータまたはスマートホン）は機器のクライアントとみなされる。 An IMS implementation of the network 208 that may be colloquially referred to as a network “cloud” includes a plurality of SIP proxy servers 210 (one is shown) and an A2A application management server 102. The term “SIP” means session initialization protocol. The term “session” means a set of one or more senders and receivers with which to communicate and the state stored on those senders and receivers during communication. SIP messages are used in the disclosed embodiment, but replace other message protocols such as Skype protocol, XMPP extensions such as jingle (for voice), and other common protocols for establishing peer-to-peer communication. May be used for The “server” is a device such as a computer, for example, and is configured to provide information and route service to other devices. A device (computer or smart phone) that requests access to the server is considered a client of the device.
ネットワーク２０８は、典型的には基幹機器間で信号を伝達するが、セッションの間にデータ通信のための固定されたパスは構成せず、端末装置における状態は維持される。セッションの例としては、インターネット電話、マルチメディア配信、マルチメディア会議、分散型コンピュータゲームなどが挙げられる。ＳＩＰはインターネットモデルに適合する終端間信号プロトコルであり、ＳＩＰメッセージの経路を除くすべてのロジックは端末装置に格納されている。ＳＩＰプロキシサーバ２１０は、たとえば、被招待装置の現位置、承認、課金などの要素に応じて招待装置から被招待装置に送信される招待案内の経路を決定する。実際には、被招待装置の実際のネットワーク位置を認知しているＳＩＰが見つかるまで、招待装置により発信されたセッション招待案内は複数のＳＩＰプロキシサーバ２１０（１つが示されている）をしばしば通過する。そして、被招待装置はセッション招待案内を受諾あるいは拒否できる。 The network 208 typically transmits signals between backbone devices, but does not configure a fixed path for data communication during a session, and the state at the terminal device is maintained. Examples of sessions include Internet telephony, multimedia distribution, multimedia conferencing, distributed computer games, and the like. SIP is an end-to-end signaling protocol that conforms to the Internet model, and all logic except the path of the SIP message is stored in the terminal device. For example, the SIP proxy server 210 determines a route of invitation guidance transmitted from the invitation device to the invited device according to factors such as the current location of the invited device, approval, and billing. In practice, session invitations originated by the inviting device often pass through multiple SIP proxy servers 210 (one is shown) until a SIP is found that knows the actual network location of the invited device. . The invited device can accept or reject the session invitation guide.
さらに、携帯ネットワーク２０８の詳細は、使用されるアクセス技術によって変化する。さらに、ＳＩＰセッションの確立には、様々なネットワーク機器間の通信が含まれてもよい。たとえば、ＳＩＰセッションの確立には、さらに、レジストラサーバ（不図示）との通信と、ユーザからの登録を受信し、それらの現在位置（たとえば、ＩＰアドレス、ポート、およびユーザ名）に関する情報を抽出し、ＳＩＰサーバがアクセス可能な位置データベースのその情報を格納するＳＩＰ主体とが含まれてもよい。また、ＳＩＰセッションの確立には、要求を受信し、レジストラによって生成された位置データベース内で要求の意図された受領側を検索し、特定のユーザの現在位置のリストを含む返信を送り返すリダイレクトサーバ（不図示）との通信が含まれてもよい。このように、ネットワーク２０８は、多数のプロキシサーバ、リダイレクトサーバ、レジストラサーバ、および無線・電話通信・インターネット通信の使用される他の基幹機器を含んでもよい。しかし、本明細書における不要な複雑さを避けるために、ＳＩＰセッションの確立に含まれるネットワーク２０８の動作はプロキシサーバ２１０によって説明されるものとする。 Further, the details of the mobile network 208 will vary depending on the access technology used. Furthermore, establishing a SIP session may include communication between various network devices. For example, establishing a SIP session further receives communication with a registrar server (not shown) and registration from a user and extracts information about their current location (eg, IP address, port, and username). And a SIP entity that stores the information of the location database accessible by the SIP server. Also, the establishment of a SIP session involves receiving a request, searching for the intended recipient of the request in a location database generated by the registrar, and sending back a reply containing a list of the specific user's current location. Communication with (not shown) may be included. Thus, the network 208 may include a number of proxy servers, redirect servers, registrar servers, and other backbone equipment used for wireless, telephony, and Internet communications. However, to avoid unnecessary complexity herein, the operation of network 208 involved in establishing a SIP session shall be described by proxy server 210.
図２Ａは、Ａ２Ａアプリケーション２０４−１，２０４−２の第１および第２イスタンス間の通信セッションの確立に含まれるシステム１００の機器間の通信の複数の通信ステージＳ０−Ｓ５を示す。第１端末装置２０２−１と第２端末装置２０２−２間の通信の確立には、ネットワーク２０８を介して信号を送信することが含まれる。上述のように、ＳＩＰプロキシサーバ２１０は、招待端末機器から被招待端末機器にセッション招待案内を送るために使用される。図２Ａの信号フローの例において、第１端末装置２０２−１を招待装置とし、第２端末装置２０２−２を被招待装置とする。セッションの確立には、他のメッセージ伝達が追加されてもよい。しかし、そのような追加可能なメッセージ伝達の詳細は、本発明において重要ではなく当業者には容易に理解されるものである。したがって、本明細書での説明は省略する。 FIG. 2A shows a plurality of communication stages S0-S5 of communication between the devices of the system 100 involved in establishing a communication session between the first and second instances of the A2A applications 204-1, 204-2. Establishing communication between the first terminal device 202-1 and the second terminal device 202-2 includes transmitting a signal via the network 208. As described above, the SIP proxy server 210 is used to send a session invitation guide from the invited terminal device to the invited terminal device. In the signal flow example of FIG. 2A, the first terminal device 202-1 is the invitation device, and the second terminal device 202-2 is the invited device. Other messaging may be added to the session establishment. However, the details of such additional messaging are not critical to the present invention and will be readily understood by those skilled in the art. Therefore, the description in this specification is omitted.
ステージＳ０において、第２端末装置２０２−２のＡ２Ａ対応アプリケーション２０４−２の第２インスタンスとのメディアセッションを確立するために、第１端末装置２０２−１のＡ２Ａ対応アプリケーション２０４−１の第１インスタンスは装置２０２−１が要求２１２をＡ２Ａ通信エンジン２０６−１の第１インスタンスに送信するように構成する。以下に詳細に説明するように、Ａ２Ａエンジン２０６−１とＡ２Ａエンジン２０６−２はＡ２Ａ対応アプリケーションインスタンス２０４−１、２０４−２、および各通信プロトコルスタックの間のインターフェースとして動作する。いくつかの実施形態では、要求２１２は、第１装置２０２−１で動いているＡ２Ａ通信エンジン２０６−１の第１インスタンスへのメソッド呼出しを含む。いくつかの実施形態では、メソッド呼出しは、Ｃ、Ｃ＋＋、Ｊａｖａ、または他の一般的なプログラム言語またはスクリプト言語による手続き呼出しを含んでもよい。また、メソッド呼出しは、ＡＩＤＬ、ＲＭＩ、ＣＯＲＢＡ、または他の仕組みを使用した別のプロセスに対する、パイプ、キュー、ソケット、または他の遠隔手続き呼出しなどの利用可能な仕組みを使用したメッセージを含んでもよい。 In stage S0, in order to establish a media session with the second instance of the A2A compatible application 204-2 of the second terminal device 202-2, the first instance of the A2A compatible application 204-1 of the first terminal device 202-1 Configures device 202-1 to send request 212 to the first instance of A2A communication engine 206-1. As described in detail below, the A2A engine 206-1 and the A2A engine 206-2 operate as an interface between the A2A compatible application instances 204-1 and 204-2 and the respective communication protocol stacks. In some embodiments, request 212 includes a method call to a first instance of A2A communication engine 206-1 running on first device 202-1. In some embodiments, method calls may include procedure calls in C, C ++, Java, or other common programming or scripting languages. A method call may also include a message using an available mechanism such as a pipe, queue, socket, or other remote procedure call to another process using AIDL, RMI, CORBA, or other mechanism. .
図３は、メソッド呼出し要求２１２の例のデータ構成内のフィールドを例示する図である。ＳＩＰユーアールアイ（ＵＲＩ）フィールドは、被招待装置２０２−２を特定する。ＡｐｐＩＤフィールドは、要求アプリケーションを特定する。構成によっては、セキュリティ情報フィールドは、セキュリティのために使用されるトークン情報やトークンを生成するために使用される秘密情報を含んでもよい。また、発せられた要求は、たとえば、音声、映像、ファイル転送、チャット、グループチャット、リアルタイムピアツーピアデータ転送、アプリケーション配置などの１種類以上のメディアを含む、要求されたメディアセッションなどの追加情報を含んでもよい。 FIG. 3 is a diagram illustrating fields in the data structure of the example of the method call request 212. The SIP U-R (URI) field specifies the invited device 202-2. The AppID field specifies the requesting application. Depending on the configuration, the security information field may include token information used for security and secret information used to generate the token. The issued request also includes additional information such as the requested media session, including one or more types of media such as, for example, voice, video, file transfer, chat, group chat, real-time peer-to-peer data transfer, application deployment, etc. But you can.
ステージＳ１において、Ａ２Ａ通信エンジン２０６−１の第１インスタンスは、要求２１２を端末ネットワーク２０８内でＳＩＰプロキシサーバ２１０への送信に適したＳＩＰ招待メッセージ２１４に変換するインターフェースとして動作するように、第１端末装置２０２−１を構成する。上述のように、実際の送信は、たとえば、いくつかの異なるプロキシ間の往来、また場合によっては、ネットワーク２０８内のレジストラサーバ（不図示）やリダイレクトサーバ（不図示）の使用を含んでもよい。ＳＩＰメッセージ２１４の例は、第１識別子（たとえば、第１ＳＩＰ−ＵＲＩ）を有する第１端末装置から第２識別子（たとえば、第２ＳＩＰ−ＵＲＩ）を有する第２端末装置への招待を含む。 In stage S1, the first instance of the A2A communication engine 206-1 operates to serve as an interface that translates the request 212 into a SIP invite message 214 suitable for transmission to the SIP proxy server 210 within the terminal network 208. The terminal device 202-1 is configured. As described above, the actual transmission may include, for example, traffic between several different proxies, and possibly the use of a registrar server (not shown) or a redirect server (not shown) in the network 208. An example of a SIP message 214 includes an invitation from a first terminal device having a first identifier (eg, first SIP-URI) to a second terminal device having a second identifier (eg, second SIP-URI).
図４は、ＳＩＰメッセージ２１４の例の構成内のヘッダフィールドを例示する図である。「発信元」および「宛先」のアドレスフィールドは、それぞれ第１ＳＩＰ−ＵＲＩおよび第２ＳＩＰ−ＵＲＩを示す。サービスタグのフィールドは、通信タイプを「Ａｐｐ２Ａｐｐ（すなわち、アプリケーション間）」として示す。ＡｐｐＩＤフィールドは、通信セッションを介してアプリケーションの固有なタイプを特定し追跡するパラメータとして動作するグローバルに固有な識別子を提供する。いくつかの実施形態では、オプションセキュリティ情報フィールドは、メッセージを認証するために使用されるセキュリティトークンを含む。ＳＤＰフィールドは、セッション中のネゴシエーションメディア送信に使用される情報を提供する。この例では、メディアは、たとえばＨ２６４フォーマットを使用し特定のビットレート（不図示）を有する映像メディアを含む。 FIG. 4 is a diagram illustrating a header field in the configuration of the example of the SIP message 214. The “source” and “destination” address fields indicate the first SIP-URI and the second SIP-URI, respectively. The service tag field indicates the communication type as “App2App (ie, between applications)”. The AppID field provides a globally unique identifier that acts as a parameter that identifies and tracks the unique type of application through the communication session. In some embodiments, the optional security information field includes a security token that is used to authenticate the message. The SDP field provides information used for negotiation media transmission during the session. In this example, the media includes video media, for example using the H264 format and having a specific bit rate (not shown).
ステージＳ２において、メッセージがＡｐｐＩＤに関連付けられたＡ２Ａ対応アプリケーションによる要求を含むことを示すサービスタグに応じて、ＳＩＰプロキシサーバ２１０はメディアセッション要求を評価するＡ２Ａアプリケーションマネージャ１０２にメッセージ２１６を送信する。さらに詳しくは、いくつかの実施形態では、サービスタグは、プロキシサーバ２１０に対する、要求を第２端末装置２０２−２に転送する前に承認要求２１６をアプリケーション管理サーバ１０２に送信する命令として動作する。このように、要求２１４には、要求２１６を生成する命令が埋め込まれている。いくつかの実施形態では、メッセージ２１６は、図４に示され参照して説明されるヘッダ情報を含む。たとえば、特定の装置やユーザに対する、セキュリティ情報の確認、使用統計の生成、メディアセッション課金のトリガー、またはセキュリティエラーまたはＡｐｐＩＤのブラックリストによりメディアセッション要求が拒絶されるべきか否かの判定などの１つ以上の機能を実行するために、メッセージ２１６に応じて、Ａ２Ａアプリケーションマネージャ１０２は、図１Ｂから図１Ｅにより説明した第１および第２のプロセスを実行する。Ａ２Ａ対応メッセージを示すサービスタグが実質的に含まれることにより、プロキシサーバ２１０がメディア接続を確立するためにアプリケーションマネージャに対して承認を要求することになる。このように、第２端末装置２０２−２で動いているＡ２Ａ対応アプリケーション２０４−２の第２インスタンスとのメディア接続を確立する要求と、アプリケーション管理サーバ１０２に対するＳＩＰメッセージに含まれたＡｐｐＩＤを有するＡ２Ａアプリケーションの承認の要求とが、両者ともＳＩＰ招待２１４に埋め込まれている。 In stage S2, in response to a service tag indicating that the message includes a request by an A2A enabled application associated with the AppID, the SIP proxy server 210 sends a message 216 to the A2A application manager 102 that evaluates the media session request. More specifically, in some embodiments, the service tag operates as an instruction to the proxy server 210 to send an approval request 216 to the application management server 102 before forwarding the request to the second terminal device 202-2. As described above, an instruction for generating the request 216 is embedded in the request 214. In some embodiments, message 216 includes header information shown and described with reference to FIG. For example, checking security information for a specific device or user, generating usage statistics, triggering media session charging, or determining whether a media session request should be rejected due to a security error or AppID blacklist, etc. In order to perform one or more functions, in response to message 216, A2A application manager 102 performs the first and second processes described with reference to FIGS. 1B through 1E. The fact that the service tag indicating the A2A correspondence message is substantially included causes the proxy server 210 to request approval from the application manager in order to establish a media connection. In this way, A2A having a request to establish a media connection with the second instance of the A2A-compatible application 204-2 running on the second terminal device 202-2, and the AppID included in the SIP message to the application management server 102 Both application approval requests are embedded in the SIP invitation 214.
ステージＳ３において、メッセージ２１６および上述のＡ２Ａアプリケーションマネージャ動作の完了に応じて、Ａ２Ａアプリケーションマネージャ１０２は、要求されたサービス、Ａ２Ａサービス、およびＡｐｐＩＤの端末装置２０２−１、２０２−２に対する送受信を特定するとともに要求されたメディアセッションが受諾されるべきか拒絶されるべきかを示すメッセージ２１８を、プロキシサーバ２１０に送信する。いくつかの実施形態では、Ａ２Ａアプリケーションマネージャ１０２は、承認と判定されるＳＩＰメッセージ／要求をネットワーク２０８を介して第２端末装置２０２−２に転送する。要求が拒絶された場合には、Ａ２Ａアプリケーションマネージャ１０２は、要求を発した第１端末装置２０２−１に拒絶通知を送信する。ステージＳ４において、プロキシサーバ２１０は、図４の構成中の情報を含むメッセージ２２０を第２端末装置２０２−２で動いているＡ２Ａ通信エンジン２０６−２の第２インスタンスに送信する。Ａ２Ａ通信エンジン２０６−２は、メッセージ２２０中のＡｐｐＩＤに対応するアプリケーションのインスタンスが第２端末装置２０２−２にインストール済で動いているかどうかを判定する。いくつかの実施形態では、アプリケーション２０４−２のインスタンスがすでにインストール済であるが動いていない場合には、Ａ２Ａ通信エンジン２０６−２はアプリケーションを起動する。 In stage S3, in response to the completion of the message 216 and the above-described A2A application manager operation, the A2A application manager 102 specifies transmission / reception of the requested service, A2A service, and AppID to the terminal devices 202-1 and 202-2. And sends a message 218 to the proxy server 210 indicating whether the requested media session should be accepted or rejected. In some embodiments, the A2A application manager 102 forwards the SIP message / request determined to be approved to the second terminal device 202-2 via the network 208. When the request is rejected, the A2A application manager 102 transmits a rejection notice to the first terminal device 202-1 that issued the request. In stage S4, the proxy server 210 transmits a message 220 including the information in the configuration in FIG. 4 to the second instance of the A2A communication engine 206-2 running on the second terminal device 202-2. The A2A communication engine 206-2 determines whether the application instance corresponding to the AppID in the message 220 is installed and running on the second terminal device 202-2. In some embodiments, if an instance of application 204-2 is already installed but not running, A2A communication engine 206-2 launches the application.
アプリケーション２０４−２のインスタンスがインストールされていない場合、一般的には、Ａ２Ａ通信エンジン２０６−２は、端末装置２０２−２要求されたアプリケーション２０４−２のインスタンスをインストールしたか否かについての事前情報を得ることになる。しかし、いくつかの実施形態では、アプリケーションがインストールされていない場合には、Ａ２Ａ通信エンジン２０６−２は自動的に招待を拒絶する。また、いくつかの実施形態では、Ａ２Ａ通信エンジン２０６−２は、第２端末装置２０２−２に対して、失敗した招待のＡｐｐＩＤを使用して、不足しているアプリケーションのダウンロードリンクなどのメタデータが得られるアプリケーションレジストリ１０４でアプリケーションを検索して、不足しているアプリケーションをダウンロードするように促す。いくつかの実施形態では、第２端末装置２０２−２のユーザインターフェースが、装置のユーザに対して失敗した招待を示し、不足しているアプリケーションの取得方法についての情報を提供する。たとえば、「「ａｂｃ」という名称（ＡｐｐＩＤとは異なってもよい）のアプリケーションの実施の招待／申込みに失敗しました。ここをクリックしてダウンロードしてください。」のようなメッセージが提供されてもよい。 In the case where the instance of the application 204-2 is not installed, in general, the A2A communication engine 206-2 has prior information on whether or not the instance of the application 204-2 requested by the terminal device 202-2 has been installed. Will get. However, in some embodiments, the A2A communication engine 206-2 automatically rejects the invitation if the application is not installed. Further, in some embodiments, the A2A communication engine 206-2 uses the AppID of the failed invitation to the second terminal device 202-2 to use metadata such as a download link of a missing application. The application registries 104 from which the application is obtained are searched for, and the user is prompted to download the missing application. In some embodiments, the user interface of the second terminal device 202-2 indicates a failed invitation to the user of the device and provides information on how to obtain the missing application. For example, an invitation / application for an application named “abc” (which may be different from AppID) has failed. Click here to download. May be provided.
ステージＳ５において、アプリケーションがインストール済で動いている（起動している）と仮定すると、Ａ２Ａ通信エンジン２０６−２は、図４の構成内の情報を含むメッセージ２２２を第２端末装置２０２−２で動いているアプリケーション２０４−２の第２インスタンスに送信する。いくつかの実施形態では、第２端末装置のプラットフォームおよび／またはプログラム言語によっては、メッセージ２２２は、たとえば、コールバック／イベント装置、手続き呼出し、またはプロセス間通信のための他のプラットフォームに特定の手段（たとえば、アンドロイドプラットフォームの「インテント」）を介して配信されてもよい。一般的には、いくつかの実施形態では、メッセージはＳＩＰプロトコルレベルで認識される（ＡＣＫおよびＯＫメッセージ）。適用可能な場合には、タイムアウトもメッセージに関連付けられる（たとえば、ＩＮＶＩＴＥ）。ＳＩＰプロトコルによって、たとえば、「ＶＩＡ」ヘッダが、招待端末装置２０２−１にたどり着くために往来するネットワークノードを示すために使用されてもよい。タイムアウトの場合には、被招待装置２０２−２による積極的な招待拒絶とは対照的に、招待装置２０２−１は、被招待装置２０２−２が招待の受諾に失敗したと認識する。 Assuming that the application is installed and running (started) in stage S5, the A2A communication engine 206-2 sends a message 222 including information in the configuration of FIG. 4 to the second terminal device 202-2. Sent to the second instance of the running application 204-2. In some embodiments, depending on the platform and / or programming language of the second terminal device, the message 222 may be a means specific to, for example, a callback / event device, procedure call, or other platform for interprocess communication. (Eg, an “intent” on an Android platform). In general, in some embodiments, messages are recognized at the SIP protocol level (ACK and OK messages). Where applicable, a timeout is also associated with the message (eg, INVITE). By means of the SIP protocol, for example, a “VIA” header may be used to indicate the network node that travels to get to the invite terminal 202-1. In the case of a timeout, in contrast to the positive invitation rejection by the invited device 202-2, the invitation device 202-1 recognizes that the invited device 202-2 has failed to accept the invitation.
図２Ｂは、いくつかの実施形態における代替システム１６０の例示的な図である。代替システム１６０の機器は、図１Ａから図２Ａを用いて説明したものと実質的に同一である。以下、システム１００とシステム１６０の違いを説明する。具体的には、Ａ２Ａエンジン２０６−１’は、現在承認済のＡ２Ａ対応アプリケーションのＡｐｐＩＤの表示を周期的に要求するように構成される。具体的には、Ａ２Ａエンジン２０６−１’は、装置２０２−１’の現在登録済のアプリケーションのＡｐｐＩＤ承認を周期的に要求する。Ａ２Ａエンジン２０６−１’は、承認済Ａ２Ａ対応アプリケーションを示すローカル端末装置アプリケーションレジストリ１６２を維持する。関連付けられたＡｐｐＩＤを有するＡ２Ａ対応アプリケーションからの、メディアセッション確立の要求に応じて、Ａ２Ａエンジンが、レジストリ１６２の内容に基づいてＡ２Ａ対応アプリケーション２０４−１’がそのＡｐｐＩＤに基づいて承認されるか否かを決定する。このように、図２の信号フローにおけるステージＳ２とＳ３を回避することができる。第１端末装置２０２−１’は、ネットワーク（不図示）を介してＳＩＰ招待１６４を送信することができる。また、第２端末装置２０２−２’は、通信セッション確立の過程でマネージャ１０２に問い合わせる必要なしに、ネットワークを介してＳＩＰ応答１６６を送信ことができる。 FIG. 2B is an exemplary diagram of an alternative system 160 in some embodiments. The equipment of the alternative system 160 is substantially the same as that described using FIGS. 1A to 2A. Hereinafter, the difference between the system 100 and the system 160 will be described. Specifically, the A2A engine 206-1 'is configured to periodically request the AppID display of the currently approved A2A compatible application. Specifically, the A2A engine 206-1 'periodically requests AppID approval of the currently registered application of the device 202-1'. The A2A engine 206-1 ′ maintains a local terminal device application registry 162 indicating approved A2A compatible applications. In response to a request to establish a media session from an A2A capable application having an associated AppID, the A2A engine determines whether the A2A capable application 204-1 ′ is approved based on its AppID based on the contents of the registry 162. To decide. Thus, the stages S2 and S3 in the signal flow of FIG. 2 can be avoided. The first terminal device 202-1 'can transmit the SIP invitation 164 via a network (not shown). Further, the second terminal apparatus 202-2 'can transmit the SIP response 166 via the network without having to make an inquiry to the manager 102 in the process of establishing the communication session.
図５は、メディア通信の初期化が成功し、第１および第２の端末装置２０１−１、２０２−２の間でメディアデータを送信するために通信プロトコルスタック５３０−１、５３０−２が使用される、図２Ａのシステム１００の例示的な図である。通信プロトコルスタック５３０−１、５３０−２はいずれも階層プロトコルスタックである。一般的に、ネットワークプロトコルは、ネットワーク機能が層に分割されるように階層化されている。プロトコルスタックにおいて、各層は、下層のサービスに依存する明確なサービスを実行し、上層にサービスを提供する。一般に、通信プロトコルは、スタック内の１つの層で通信サービスを提供するソフトウェアシステムを規定するために使用される。結果として生じる階層化プロトコルは、プロトコルスタックと呼ばれる。プロトコルスタックは、複数のプロトコルを含むネットワーク機能を規定する。さらに詳細には、プロトコルスタック層は、持続性媒体にコード化された命令を有し、端末装置２０２−１、２０２−２およびネットワーク２０８の機器にプロトコル層によって規定されたネットワーク機構を実行させる。 FIG. 5 shows that the communication protocol stacks 530-1 and 530-2 are used to transmit the media data between the first and second terminal apparatuses 201-1 and 202-2 when the initialization of the media communication is successful 2B is an exemplary diagram of the system 100 of FIG. 2A. The communication protocol stacks 530-1 and 530-2 are both hierarchical protocol stacks. Generally, network protocols are layered so that network functions are divided into layers. In the protocol stack, each layer executes a distinct service that depends on the lower layer service and provides the service to the upper layer. In general, communication protocols are used to define software systems that provide communication services at one layer in the stack. The resulting layered protocol is called a protocol stack. The protocol stack defines network functions that include multiple protocols. More specifically, the protocol stack layer has instructions encoded in a persistent medium, causing the terminals 202-1 and 202-2 and the network 208 devices to execute network mechanisms defined by the protocol layer.
いくつかの実施形態では、第１および第２の通信プロトコルスタック５３０−１，５３０−２は、ＩＭＳネットワークアーキテクチャに準拠する。ＩＭＳプロトコルスタックは、異なる標準またはＲＦＣ（コメント要求）によって規定された異なるプロトコルを異なる層に有している。ＩＭＳネットワークアーキテクチャにおいて、典型的には、ＳＩＰは、ＲＴＰ（リアルタイム転送プロトコル）とＳＤＰ（セッション記述プロトコル）を含んで、ＩＭＳ準拠の通信プロトコルスタックの一部である他のいくつかのプロトコルと連動して使用される。典型的には、ＲＴＰは、リアルタイムマルチメディアデータ（たとえば、音声、映像共有、チャット、ファイル共有、ＸＭＰＰ準拠プロトコルおよび拡張（たとえば、ＩＰを介した音声サービスのジングル）、およびその他ピアツーピアリアルタイム通信の仕組み）をコード化してパケットに分割し、パケットをインターネットを介して転送するように使用される。典型的には、ＳＤＰは、セッション参加メンバーの能力を記述しコード化するように使用される。このような記述は、メディアをコード化するコーデックや使用する転送プロトコルなど、セッションの特徴を取り決めるために使用できる。その結果、すべての装置がセッションに参加できるようになる。もちろん、異なる特定の使用のために異なるプロトコルのオプションを使用することをＩＭＳネットワークアーキテクチャが指定してもよい。 In some embodiments, the first and second communication protocol stacks 530-1, 530-2 are compliant with the IMS network architecture. The IMS protocol stack has different protocols defined by different standards or RFCs (Request for Comments) at different layers. In an IMS network architecture, typically, SIP works with several other protocols that are part of an IMS-compliant communication protocol stack, including RTP (Real Time Transfer Protocol) and SDP (Session Description Protocol). Used. Typically, RTP provides real-time multimedia data (eg, voice, video sharing, chat, file sharing, XMPP compliant protocols and extensions (eg, jingles for voice services over IP), and other peer-to-peer real-time communication mechanisms. ) Is encoded and divided into packets and used to forward the packet over the Internet. Typically, SDP is used to describe and code the capabilities of session participants. Such a description can be used to negotiate session characteristics, such as the codec that encodes the media and the transfer protocol that is used. As a result, all devices can participate in the session. Of course, the IMS network architecture may specify that different protocol options be used for different specific uses.
図５は、図２Ａの通信プロトコルに従ってセッションの初期化成功後に第１および第２の端末装置２０２−１、２０２−２の間に１つ以上の通信セッション５３２が確立されていることを示す。また、図５は、通信セッション５３２が同一のプロトコルスタックインスタンス５３０−１，５３０−２によって特定されたプロトコルに従ってネットワーク２０８を介してデータを転送することも示す。以下の詳細に説明するように、Ａ２Ａエンジンインスタンス２０６−１、２０６−２は、インターフェースとして動作し、（１）Ａ２Ａ対応アプリケーションインスタンス２０４−１，２０４−２から受信したメソッド呼出し要求やメッセージを、ネットワーク２０８で使用可能な形式に変換し、（２）ネットワーク２０８から受信したネットワークパケットやフレームをＡ２Ａ対応アプリケーションインスタンス２０４−１、２０４−２が使用可能な形式に変換し、（３）各アプリケーションインスタンス２０４−１、２０４−２およびプロトコルスタックインスタンス５３０−１、５３０−２の間のセッション５３２中に、制御データとメディアデータをネットワーク２０８を介して送信する。 FIG. 5 shows that one or more communication sessions 532 are established between the first and second terminal devices 202-1 and 202-2 after successful session initialization according to the communication protocol of FIG. 2A. FIG. 5 also shows that the communication session 532 transfers data over the network 208 according to the protocol specified by the same protocol stack instance 530-1, 530-2. As will be described in detail below, the A2A engine instances 206-1 and 206-2 operate as interfaces, and (1) a method call request and message received from the A2A-compatible application instances 204-1 and 204-2, (2) Convert network packets and frames received from the network 208 into a format that can be used by the A2A application instances 204-1 and 204-2, and (3) each application instance. Control data and media data are transmitted over network 208 during session 532 between 204-1, 204-2 and protocol stack instances 530-1, 530-2.
図６は、図５のメディアセッション５３２の詳細を例示し、メディアセッションに関連付けられた異なるポート例を示す図である。例示されたメディアセッション５３２は、第１装置２０２−１と第２装置２０２−２の間で確立された２つの通信セッション、すなわち、メディア制御信号セッション６０２とメディア（たとえば、映像）セッション６０４を実際に含んでいる。制御信号セッション６０２は、メディアセッション６０４を確立しメディアセッション６０４によるメディア配信を制御するために使用されるＳＩＰメッセージの通信に使用される。図示された例では、メディアセッション６０４によって映像データが装置間で転送される。制御セッション６０２と映像セッション６０４のいずれも、フレーム構造６０６，６０８で情報を送信する。制御セッション６０２のフレーム構造６０６はＡｐｐＩＤ情報を含む。このＡｐｐＩＤ情報は、第１および第２のアプリケーションインスタンス２０４−１、２０４−２により共有される固有のグローバルな識別子として機能し、メディアセッション６０４が関連するＡ２Ａ対応アプリケーション２０４−１，２０４−２を示す。 FIG. 6 is a diagram illustrating details of the media session 532 of FIG. 5 and illustrating different example ports associated with the media session. The illustrated media session 532 actually implements two communication sessions established between the first device 202-1 and the second device 202-2: a media control signal session 602 and a media (eg, video) session 604. Is included. Control signal session 602 is used for communication of SIP messages used to establish media session 604 and control media delivery by media session 604. In the illustrated example, video data is transferred between devices by a media session 604. Both control session 602 and video session 604 transmit information in frame structures 606 and 608. The frame structure 606 of the control session 602 includes AppID information. This AppID information functions as a unique global identifier shared by the first and second application instances 204-1 and 204-2, and identifies the A2A compatible applications 204-1 and 204-2 with which the media session 604 is associated. Show.
セッション６０２、６０４は、多少ともソフトウェアポート番号に基づいた共有ＡｐｐＩＤに基づいて、Ａ２Ａアプリケーションインスタンス２０４−１、２０４−２に関連付けられている。このように、ポートは、事前に特定のアプリケーションに割り当てられる必要はなく、可用性などの要因に基づいてメディアセッションに関連付けられてもよい。セッション６０２、６０４は、第１および第２の装置２０２−１、２０２−２の異なるソフトウェアポートの関連付けられてもよい。この例では、メディア制御信号セッション６０２は、第１装置２０２−１のＮＸポートおよび第２装置２０２−２のＮＭポートに関連付けられている。メディアセッション６０４は、第１装置２０２−１のＮＺポートおよび第２装置２０２−２のＮＱポートに関連付けられている。 Sessions 602 and 604 are associated with A2A application instances 204-1 and 204-2 based more or less on a shared AppID based on software port numbers. In this way, a port need not be pre-assigned to a particular application and may be associated with a media session based on factors such as availability. Sessions 602, 604 may be associated with different software ports of the first and second devices 202-1, 202-2. In this example, the media control signaling session 602 is associated with the NX port of the first device 202-1 and the NM port of the second device 202-2. The media session 604 is associated with the NZ port of the first device 202-1 and the NQ port of the second device 202-2.
図７は、いくつかの実施形態において、図２Ａの通信プロトコルに従ってセッション６０２、６０４の初期化成功後に第１および第２の端末装置２０２−１、２０２−２内に１つ以上のデータバッファが割り当てられていることを示すシステム１００の例示的な図である。図示された例では、第１装置２０２−１の持続性記憶媒体内に割り当てられた第１バッファ７０２−１は、共有ＡｐｐＩＤのラベルが付けられ、制御セッション６０２を使用して通信される制御データを一時的に保存する。第２装置２０２−２の持続性記憶媒体に割り当てられた対応する第２バッファ７０２−２は、共有ＡｐｐＩＤのラベルが付けられ、制御セッション６０２を使用して通信される制御データを一時的に保存する。 FIG. 7 illustrates that in some embodiments, one or more data buffers are present in the first and second terminal devices 202-1 and 202-2 after successful initialization of the sessions 602 and 604 in accordance with the communication protocol of FIG. 2A. 1 is an exemplary diagram of system 100 showing being assigned. FIG. In the illustrated example, the first buffer 702-1 allocated within the persistent storage medium of the first device 202-1 is labeled with a shared AppID and communicated using the control session 602. Is temporarily saved. The corresponding second buffer 702-2 assigned to the persistent storage medium of the second device 202-2 is labeled with a shared AppID and temporarily stores control data communicated using the control session 602. To do.
動作中、それぞれのバッファ７０２−１、７０２−２によって受信された制御情報は、それぞれの通信スタック５３０−１、５３０−２に従って処理される。通信スタック５３０−１、５３０−２は、処理した制御情報をそれぞれのＡ２Ａエンジンに通知する。第１および第２のＡ２Ａエンジン２０６−１、２０６−２は、バッファ７０２−１、７０２−２内の情報にアクセスし、ネットワーク２０８を介して使用されバッファ７０２−１、７０２−２に格納される形式とＡ２Ａアプリケーション２０４−１、２０４−２の第１および第２のインスタンスが理解可能な形式との間における制御信号メッセージの変換を実行するそれぞれのインターフェースとして動作する。また、第１および第２のＡ２Ａエンジン２０６−１、２０６−２は、変換された制御メッセージをＡｐｐＩＤに基づいて第１および第２バッファ７０２−１，７０２−２と適切なアプリケーションインスタンス２０４−１、２０４−２の間で転送するようにＡｐｐＩＤを使用するそれぞれのインターフェースとしても動作する。 During operation, control information received by the respective buffers 702-1, 702-2 is processed according to the respective communication stacks 530-1, 530-2. The communication stacks 530-1 and 530-2 notify the processed control information to the respective A2A engines. The first and second A2A engines 206-1, 206-2 access information in the buffers 702-1, 702-2 and are used via the network 208 and stored in the buffers 702-1, 702-2. And the respective interface that performs the conversion of the control signaling message between the first and second instances of the A2A applications 204-1, 204-2. The first and second A2A engines 206-1 and 206-2 send the converted control message to the first and second buffers 702-1 and 702-2 and the appropriate application instance 204-1 based on the AppID. , 204-2 also operate as respective interfaces that use AppID to transfer between them.
同様に、第１装置２０２−１の持続性記憶媒体内に割り当てられた第３バッファ７０４−１は、共有ＡｐｐＩＤのラベルが付けられ、メディアセッション６０４を使用して通信されるメディアデータを一時的に保存する。第２装置２０２−２の持続性記憶媒体に割り当てられた対応する第４バッファ７０４−２は、共有ＡｐｐＩＤのラベルが付けられ、メディアセッション６０４を使用して通信されるメディアデータを一時的に保存する。いくつかの実施形態では、Ａ２Ａエンジンインスタンス２０６−１、２０６−２は、装置オペレーティングシステム７０８−１、７０８−２のアクセス可能なポートと装置２０２−１、２０２−２で動いているそれぞれのＡ２Ａアプリケーション２０４−１、２０４−２との間にそれぞれのメディア通信チャネル７０６−１、７０６−２を提供するようにそれぞれの端末装置２０２−１、２０２−２を構成するように動作する。これらのメディア通信チャネル７０６−１、７０６−２は、メディアデータ（たとえば、映像データ）のより高速な通信を可能にする。典型的には、Ａ２Ａ対応アプリケーションは、概してバックグラウンドプロセスとして指定される通信スタック関連プロセスよりも多くのプロセッササイクルに割り当てられるフォアグラウンドプロセスとして、オペレーティングシステムによって指定される。さらに、メディア通信チャネルによって、Ａ２Ａエンジン２０６−１、２０６−２を経由することなく、メディアセッション６０４につながるそれぞれのオペレーティングシステムレベルのポートとＡ２Ａアプリケーション２０４−１、２０４−２の第１および第２インスタンスとの間をメディアが往来することができる。その結果として、通信スタック関連プロセスとＡ２Ａ対応アプリケーションとの間でメディアデータを転送するためのプロセス間通信が不要となる。 Similarly, the third buffer 704-1 allocated in the persistent storage medium of the first device 202-1 is temporarily labeled with media data that is labeled with a shared AppID and communicated using the media session 604. Save to. The corresponding fourth buffer 704-2 assigned to the persistent storage medium of the second device 202-2 is temporarily labeled with the shared AppID and temporarily stores media data communicated using the media session 604. To do. In some embodiments, the A2A engine instances 206-1, 206-2 are accessible to the device operating systems 708-1, 708-2 and the respective A2A running on the devices 202-1, 202-2. The terminal devices 202-1 and 202-2 operate so as to provide respective media communication channels 706-1 and 706-2 between the applications 204-1 and 204-2. These media communication channels 706-1, 706-2 allow for faster communication of media data (eg, video data). Typically, A2A enabled applications are designated by the operating system as foreground processes that are allocated to more processor cycles than communication stack related processes, which are typically designated as background processes. In addition, the media communication channel and the first and second of the respective operating system level ports and A2A applications 204-1 and 204-2 that lead to the media session 604 without going through the A2A engines 206-1 and 206-2. Media can move between instances. As a result, inter-process communication for transferring media data between the communication stack related process and the A2A compatible application becomes unnecessary.
図８は、いくつかの実施形態において、Ａ２Ａ対応アプリケーションがメディアセッションを用いるプロセスを例示するフローチャートである。プロセス８００は、Ａ２Ａ対応アプリケーション２０４−１、２０４−２の第１および第２のインスタンスのいずれにも適用可能である。モジュール８０２において、図２Ａの信号プロトコルに従ってメディアセッションを確立するように、対応するＡ２Ａエンジン２０６−１、２０６−２に要求が発せられる。たとえば、ユーザは、特定のＡ２Ａアプリケーションのインスタンスが動いている装置の他のユーザ（たとえば、友人または知人）を特定するように、端末装置２０２−１に要求を入力し、そして、Ａ２Ａアプリケーションを介した通信に参加するように１人以上の他のユーザを招待する要求を装置２０２−１に入力してもよい。たとえば、Ａ２Ａアプリケーションは、映像メディア、音声メディア、およびゲームデータを含むゲームアプリケーションであってよい。いくつかの実施形態では、そのような要求は、要求しているＡ２Ａ対応アプリケーションで内部的に生成されるトークンを含む。他の実施形態では、対応するＡ２Ａエンジンがトークンを生成できるように、要求がＡ２Ａ対応アプリケーションに関連付けられた秘密情報を含んでいてもよい。判定モジュール８０４において、メディアセッションが初期化に成功したか否かを判定する。失敗した場合には、モジュール８０６において、メディアセッション初期化の失敗が報告される。判定モジュール８０８において、Ａ２Ａ対応アプリケーションが、他の装置で動いているＡ２Ａ対応アプリケーションの対応するインスタンスにメディアデータを送信するか否かを判定する。送信する場合には、モジュール８１０において、アプリケーションのＡｐｐＩＤとともにメディアデータがＡ２Ａエンジンに提供される。送信しない場合には、判定８１２において、メディアデータがすでにＡ２Ａエンジンに提供されているか否かを判定する。提供されている場合には、モジュール８１４において、メディアデータをＡ２Ａエンジンから回収する。提供されていない場合には、制御は判定モジュール８０８に戻る。さらに、各モジュール８１０、８１４に続いて、制御は判定モジュール８０８に戻る。 FIG. 8 is a flowchart illustrating a process in which an A2A enabled application uses a media session in some embodiments. Process 800 is applicable to both the first and second instances of A2A enabled applications 204-1, 204-2. In module 802, a request is made to the corresponding A2A engine 206-1, 206-2 to establish a media session according to the signaling protocol of FIG. 2A. For example, the user enters a request in terminal device 202-1 to identify other users (eg, friends or acquaintances) of the device on which a particular A2A application instance is running, and via the A2A application A request to invite one or more other users to participate in the communication may be input to the device 202-1. For example, the A2A application may be a game application including video media, audio media, and game data. In some embodiments, such a request includes a token generated internally by the requesting A2A enabled application. In other embodiments, the request may include secret information associated with the A2A enabled application so that the corresponding A2A engine can generate the token. A determination module 804 determines whether the media session has been successfully initialized. If unsuccessful, module 806 reports media session initialization failure. In the determination module 808, it is determined whether or not the A2A-compatible application transmits media data to a corresponding instance of the A2A-compatible application running on another device. For transmission, in module 810, the media data along with the AppID of the application is provided to the A2A engine. If not, a decision 812 determines whether the media data has already been provided to the A2A engine. If so, media data is retrieved from the A2A engine at module 814. If not, control returns to decision module 808. Further, following each module 810, 814, control returns to decision module 808.
図９は、いくつかの実施形態において、Ａ２ＡエンジンがＡ２Ａ対応アプリケーションおよび通信プロトコルスタックと相互作用するプロセス９００を例示する図である。プロセス９００は、Ａ２Ａエンジン２０６−１、２０６−２の第１および第２のインスタンスのいずれにも適用可能である。モジュール９０２において、アプリケーションのＡｐｐＩＤを特定するＡ２Ａ対応アプリケーションからの要求が受信される。上述のように、いくつかの実施形態では、そのような要求は、要求しているＡ２Ａ対応アプリケーションで内部的に生成されるトークンを含む。他の実施形態では、対応するＡ２Ａエンジンがトークンを生成できるように、要求がＡ２Ａ対応アプリケーションに関連付けられた秘密情報を含んでいてもよい。アプリケーションからの要求に応じて、モジュール９０２において、ＡｐｐＩＤ、セキュリティ（すなわち、ＡｐｐＩＤと秘密キーの機能として生成されるトークン）、およびメディア形式を含むＳＩＰ要求が生成され、図２Ａと図５に従って説明したように、そのＳＩＰ要求が通信プロトコルスタックに転送される。図２Ａに従って説明したように、いくつかの実施形態では、メディアセッションを確立するために異なる端末装置で動いているアプリケーションの別のインスタンスに要求を送信する前提条件としてＡ２Ａアプリケーションマネージャ１０２から承認を得るために、ＳＩＰ要求により、ネットワーク上の１つ以上のプロキシサーバからＡ２Ａアプリケーションマネージャ１０２にメッセージが送信される。モジュール９０４では、メディアセッションの初期化が成功したか失敗したかが、要求しているＡ２Ａ対応アプリケーションに報告される。初期化に失敗した場合には、判定モジュール９０６によりプロセスが終了する。初期化が成功した場合には、制御は判定モジュール９０６からモジュール９０８に進む。ここでは、オペレーティングシステム（７０８−１または７０８−２）により、メディアバッファ（７０４−１または７０４−２）が割り当てられ、メディアバッファを使用するＡ２Ａ対応アプリケーション（２０４−１または２０４−２）に直結する通信ルートが生成される。いくつかの実施形態では、一旦通信ルートが確立されると、Ａ２Ａエンジンは、Ａ２Ａアプリケーションとの間のメディア転送に関して更なる役割を有しない。モジュール９０８において、通信プロトコルスタックにより開放された制御バッファ（たとえば、バッファ７０２−１または７０２−２）が決定される。 FIG. 9 is a diagram illustrating a process 900 in which an A2A engine interacts with an A2A enabled application and communication protocol stack in some embodiments. Process 900 is applicable to both the first and second instances of A2A engines 206-1, 206-2. In module 902, a request is received from an A2A enabled application that identifies the AppID of the application. As described above, in some embodiments, such a request includes a token that is generated internally by the requesting A2A enabled application. In other embodiments, the request may include secret information associated with the A2A enabled application so that the corresponding A2A engine can generate the token. In response to a request from the application, a SIP request including AppID, security (ie, a token generated as a function of AppID and private key), and media type is generated in module 902 and described according to FIGS. 2A and 5 As such, the SIP request is forwarded to the communication protocol stack. As described in accordance with FIG. 2A, in some embodiments, an approval is obtained from the A2A application manager 102 as a prerequisite to sending a request to another instance of an application running on a different terminal device to establish a media session. Therefore, a message is transmitted to the A2A application manager 102 from one or more proxy servers on the network by the SIP request. Module 904 reports to the requesting A2A enabled application whether the media session initialization was successful or unsuccessful. If the initialization fails, the process is terminated by the determination module 906. If initialization is successful, control proceeds from decision module 906 to module 908. Here, the media buffer (704-1 or 704-2) is allocated by the operating system (708-1 or 708-2), and directly connected to the A2A compatible application (204-1 or 204-2) using the media buffer. A communication route is generated. In some embodiments, once a communication route is established, the A2A engine has no further role with respect to media transfer with the A2A application. In module 908, a control buffer (eg, buffer 702-1 or 702-2) released by the communication protocol stack is determined.
判定モジュール９１０と９１４は並行して動作する。判定モジュール９１０において、通信スタックに配信するために、ＡｐｐＩＤに関連付けられた制御情報がＡ２Ａ対応アプリケーションにより提供されているか否かが判定される。提供されている場合には、モジュール９１２において、制御情報はプロトコルスタックの使用に適した形式に変換され、制御バッファに供給するために、Ａ２Ａ対応アプリケーションから受信したＡｐｐＩＤヘッダ情報に関連付けられた変換済制御情報が通信スタックに提供される。提供されていない場合には、制御は判定モジュール９１０に戻り、制御情報がＡ２Ａ対応アプリケーションにより提供されているか否かの判定を継続する。 Decision modules 910 and 914 operate in parallel. In the determination module 910, it is determined whether or not the control information associated with AppID is provided by the A2A compatible application for distribution to the communication stack. If provided, in module 912, the control information is converted into a format suitable for use in the protocol stack and converted to the control buffer and associated with the AppID header information received from the A2A enabled application. Control information is provided to the communication stack. If not provided, control returns to decision module 910 and continues to determine whether control information is provided by the A2A enabled application.
判定モジュール９１４において、Ａ２Ａ対応アプリケーションに配信するために、関連付けられたＡｐｐＩＤヘッダ情報とともに制御情報が通信プロトコルスタックによって制御データバッファに提供されているか否かが判定される。提供されている場合には、モジュール９１６において、受信した制御情報が変換され、その制御情報は提供された制御情報に含まれているＡｐｐＩＤと同一のＡｐｐＩＤを有するＡ２Ａ対応アプリケーションに送信される。提供されていない場合には、判定モジュール９１４に戻り、制御情報が通信スタックにより提供されているか否かの判断を継続する。 In the determination module 914, it is determined whether the control information is provided to the control data buffer by the communication protocol stack together with the associated AppID header information for distribution to the A2A compatible application. If so, the module 916 converts the received control information and transmits the control information to an A2A-compatible application having the same AppID as the AppID included in the provided control information. If not, the process returns to the determination module 914 to continue determining whether the control information is provided by the communication stack.
図示された例においては、各端末装置では単一のＡ２Ａ対応アプリケーションのみが動いている。しかし、当然ながら、各端末装置で複数のＡ２Ａ対応アプリケーションが動くことも可能である。各Ａ２Ａ対応アプリケーションは、固有のＡｐｐＩＤを有している。Ａ２Ａエンジンは、通信スタックからＡｐｐＩＤに基づいて異なるＡ２Ａ対応アプリケーション制御メッセージを送信する。また、単一の制御セッションにより複数の異なるＡ２Ａ対応アプリケーションのためのメディアセッションが制御可能であることも理解される。それぞれの異なるＡ２Ａ対応アプリケーションのために、制御セッションがそのＡ２Ａ対応アプリケーション専用の１つ以上のメディアセッションを確立する。制御セッションを介して通信された情報のフレームまたはパケットは、フレームまたはパケット内に含まれたＡｐｐＩＤに基づいて異なるＡ２Ａ対応アプリケーションに送信される。さらに、本明細書における例では、同一のＡｐｐＩＤを有する２つのＡ２Ａアプリケーション間での通信について説明しているが、異なるＡｐｐＩＤを有する２つのＡ２Ａ対応アプリケーション間で通信を確立してもよい。 In the illustrated example, only a single A2A compatible application is running on each terminal device. However, as a matter of course, a plurality of A2A-compatible applications can also run on each terminal device. Each A2A compatible application has a unique AppID. The A2A engine transmits a different A2A compatible application control message based on the AppID from the communication stack. It will also be appreciated that a single control session can control media sessions for multiple different A2A capable applications. For each different A2A enabled application, the control session establishes one or more media sessions dedicated to that A2A enabled application. A frame or packet of information communicated through the control session is transmitted to a different A2A compatible application based on the AppID included in the frame or packet. Furthermore, in the example in the present specification, communication between two A2A applications having the same AppID is described. However, communication may be established between two A2A compatible applications having different AppIDs.
ハードウェアの構成例
図１０は、本明細書に記載される１つ以上の手順をコンピュータに実行させるように、命令セットが実行される端末装置として動作するコンピュータ処理システムのブロック図である。例示の処理システム１０００は、プロセッサ１００２（たとえば、中央演算装置（ＣＰＵ）、グラフィック処理装置（ＧＰＵ）、またはその両者）と、バス１００８を介して互いに通信する持続性メイン記憶媒体１００４および持続性スタティック記憶媒体１００６を備える。さらに、コンピュータ処理システム１０００は、映像ディスプレイ装置１０１０（たとえば、プラズマディスプレイ、液晶ディスプレイ（ＬＣＤ）、またはブラウン管（ＣＲＴ））を備えてもよい。また、処理システム１０００は、英数字入力装置１０１２（たとえば、キーボード）と、ユーザインターフェース（ＵＩ）ナビゲーション装置１０１４（たとえば、マウス、タッチスクリーンなど）と、ディスクドライブユニット１０１６と、信号発生装置１０１８（たとえば、スピーカ）と、ネットワークインターフェース装置１０２０とを備える。
Hardware Configuration Example FIG. 10 is a block diagram of a computer processing system that operates as a terminal device on which an instruction set is executed to cause a computer to execute one or more procedures described herein. The exemplary processing system 1000 includes a persistent main storage medium 1004 and a persistent static that communicate with each other via a bus 1008 with a processor 1002 (eg, a central processing unit (CPU), a graphics processing unit (GPU), or both). A storage medium 1006 is provided. Further, the computer processing system 1000 may include a video display device 1010 (eg, a plasma display, a liquid crystal display (LCD), or a cathode ray tube (CRT)). The processing system 1000 also includes an alphanumeric input device 1012 (eg, keyboard), a user interface (UI) navigation device 1014 (eg, mouse, touch screen, etc.), a disk drive unit 1016, and a signal generator 1018 (eg, Speaker) and a network interface device 1020.
ディスクドライブユニット１０１６は、本明細書に記載される１つ以上の手順や機能を実施または利用する１セット以上の命令とデータ構造（たとえば、ソフトウェア１０２４）が格納されたコンピュータ読み取り可能な持続性記憶装置１０２２を備える。ソフトウェア１０２４は、全体または少なくとも一部が、持続性メイン記憶装置１００４などのコンピュータ読み取り可能な記憶装置の内部、および／または、処理システム１１００、持続性メイン記憶装置１００４、およびコンピュータ読み取り可能で理解可能な媒体をも構成するプロセッサ１００２により実行中のプロセッサ１００２の内部に存在していてもよい。 The disk drive unit 1016 is a computer readable persistent storage that stores one or more sets of instructions and data structures (eg, software 1024) that perform or utilize one or more procedures or functions described herein. 1022. Software 1024 may be understood in whole or at least in part within a computer readable storage device such as persistent main storage device 1004 and / or processing system 1100, persistent main storage device 1004, and computer readable. It may exist inside the processor 1002 that is being executed by the processor 1002 that also constitutes a medium.
さらに、ソフトウェア１０２４は、多数の周知の転送プロトコル（たとえば、ＨＴＴＰ）のいずれか１つを利用するネットワークインターフェース装置１０２０によりネットワーク１１２６を介して送受信されてもよい。 Further, software 1024 may be transmitted and received over network 1126 by network interface device 1020 that utilizes any one of a number of well-known transfer protocols (eg, HTTP).
コンピュータ読み取り可能な記憶装置１０２２は、実施例では単一のメディアとして示されているが、「コンピュータ読み取り可能な記憶装置」という用語は、１セット以上の命令を格納する単一または複数の媒体（たとえば、集中型または分散型のデータベース、および／または関連するキャッシュおよびサーバ）を含むものとする。また、「コンピュータ読み取り可能な記憶装置」という用語は、コンピュータによる実行のための１セット以上の命令を格納し、コード化し、保持することが可能であって、現アプリケーションの１つ以上の手順をコンピュータに実行させる媒体、またはそのような命令セットに利用されるか関連づけられるデータ構造を格納し、コード化し、保存することが可能である媒体を含むものとする。したがって、「コンピュータ読み取り可能な記憶装置」という用語は、ソリッドステートメモリや光学および磁気媒体を含むが、これらに限定されるものではない。 Although the computer readable storage device 1022 is illustrated as a single medium in the examples, the term “computer readable storage device” refers to a single or multiple media (one or more media) that store one or more sets of instructions. For example, a centralized or distributed database and / or associated cache and server). Also, the term “computer-readable storage device” can store, encode and maintain one or more sets of instructions for execution by a computer, and can be used to describe one or more procedures of the current application. It is intended to include any medium that can be stored on, encoded on, and stored on a computer-executable medium or a data structure utilized or associated with such an instruction set. Thus, the term “computer-readable storage device” includes, but is not limited to, solid state memory and optical and magnetic media.
本明細書において単一の例として説明されている要素、動作、または構成には、複数の例が採用されてもよい。最後に、様々な要素、動作、およびデータ保存の間の境界は多少任意的であり、特定の動作は特定の例示的な構成との関連で例示される。機能の他の配分も構想されるが、それらも本発明の権利範囲に含まれるであろう。一般的に、典型的な構成において別々の要素として達成される構成や機能は、組み合わされた構成や要素として実行されてもよい。同様に、単一の要素によって達成される構成や機能は別々の要素として実行されてもよい。上記および他の変更、修正、追加、および改良は、本発明の権利範囲に属するものとする。 Multiple examples may be employed for an element, operation, or configuration described herein as a single example. Finally, the boundaries between the various elements, operations, and data storage are somewhat arbitrary, and specific operations are illustrated in the context of a particular exemplary configuration. Other distributions of functionality are envisioned, but will be within the scope of the present invention. In general, configurations and functions achieved as separate elements in a typical configuration may be implemented as a combined configuration or element. Similarly, configurations and functions achieved by a single element may be performed as separate elements. These and other changes, modifications, additions and improvements are intended to be within the scope of the present invention.
したがって、上記の実施形態の説明および図面は、単に本発明の原理を説明するためのものである。当業者によって、添付された特許請求の範囲に規定された本発明の精神および範囲からはずれることなく、上記実施形態に対して様々な修正が可能である。
Accordingly, the above description and drawings of the embodiments are merely illustrative of the principles of the invention. Various modifications may be made to the above embodiments by those skilled in the art without departing from the spirit and scope of the present invention as defined in the appended claims.
Claims (25)
第１端末装置で動いている第１アプリケーションからの、第２端末装置で動いている第２アプリケーションとのメディア接続要求に応じて、前記第１アプリケーションに関連付けられたアプリケーション識別子(ＡｐｐＩＤ)と秘密情報を含んだ要求であって、前記第２アプリケーションとのメディア接続要求をネットワークを介して送信する工程と、
前記第１アプリケーションにより生成された前記メディア接続要求は、少なくとも部分的には前記ＡｐｐＩＤおよび前記第１アプリケーションに関連付けられた秘密情報に基づいて前記第１アプリケーションにより生成されたトークンを含み、
前記第１アプリケーションによる前記要求に応じて、前記第１アプリケーションに関連付けられた前記ＡｐｐＩＤを含んだ要求であって、
前記要求されたメディア接続の承認を得る承認要求を前記ネットワークを介してアプリケーション管理サーバに送信する工程と、
前記メディア接続要求は前記トークン情報を含んだ前記承認要求を送信するためのプロキシサーバへの指示を含み、
前記メディア接続要求に応じて、前記第１アプリケーションに関連付けられた前記ＡｐｐＩＤを含んだ制御情報であって、前記第１端末装置と前記第２端末装置との間に確立された制御セッションを介して制御情報を通信する工程と、
前記メディア接続要求に応じて、前記第１端末装置と前記第２端末装置との間に確立されたメディアセッションを介してメディア情報を通信する工程と、
を含む方法。 A method of communicating media information over a network,
In response to a media connection request from a first application running on the first terminal device to a second application running on the second terminal device, an application identifier (AppID) and secret information associated with the first application Transmitting a media connection request with the second application via a network; and
The media connection request generated by the first application includes a token generated by the first application based at least in part on the AppID and secret information associated with the first application;
A request including the AppID associated with the first application in response to the request by the first application,
Transmitting an approval request for obtaining approval of the requested media connection to the application management server via the network;
The media connection request includes an instruction to a proxy server for transmitting the approval request including the token information;
Control information including the AppID associated with the first application in response to the media connection request, via a control session established between the first terminal device and the second terminal device Communicating control information;
Communicating media information via a media session established between the first terminal device and the second terminal device in response to the media connection request;
Including methods.
請求項１に記載の方法。 The media connection request generated by the first application includes the AppID.
The method of claim 1.
少なくとも部分的には前記ＡｐｐＩＤおよび前記秘密情報に基づいてトークンを生成する工程をさらに含む、
請求項１に記載の方法。 The media connection request generated by the first application includes secret information associated with the first application;
Further comprising generating a token based at least in part on the AppID and the secret information;
The method of claim 1.
請求項３に記載の方法。 The approval request includes the token;
The method of claim 3 .
メディア接続要求をネットワークを介して送信する前記工程は前記ＳＩＰ要求の送信を含む、
請求項１に記載の方法。 Converting the request from the first application into a Session Initialization Protocol (SIP) request;
Transmitting the media connection request over a network includes transmitting the SIP request;
The method of claim 1.
請求項１に記載の方法。 Further comprising allocating a buffer for transmitting and receiving control information to the first terminal device via the control session.
The method of claim 1.
請求項１に記載の方法。 Further comprising allocating to the first terminal device a buffer for transmitting and receiving media information via the media session.
The method of claim 1.
請求項１に記載の方法。 The first application and the second application are different instances of the same application and are associated with the same AppID;
The method of claim 1.
さらに、前記承認要求に対する応答を受信する工程を含み、
前記メディア接続要求を送信する工程は、前記承認要求に対する前記応答が前記第１アプリケーションが承認されたことを示す場合にのみ行われることを特徴とする、
請求項１に記載の方法。 The step of transmitting the approval request is performed prior to the transmission of the media connection request,
Further comprising receiving a response to the approval request;
The step of transmitting the media connection request is performed only when the response to the approval request indicates that the first application has been approved.
The method of claim 1.
マルチメディア情報の配信に適したネットワークにつながっている端末装置で動くのに適したアプリケーション間（Ａ２Ａ）対応の多数のアプリケーションのそれぞれに異なるアプリケーション識別子（ＡｐｐＩＤ）を指定する工程と、
承認済ＡｐｐＩＤを示すレジストリを持続性媒体に提供する工程と、
前記ネットワークを介して、ＡｐｐＩＤと少なくとも前記ＡｐｐＩＤに対応した秘密情報として生成されたトークン情報を含み第１端末装置から発せられるメディア接続の承認要求を受信する工程と、
前記承認要求に応じて、前記承認要求内の前記ＡｐｐＩＤと前記トークン情報を生成させるために使用され対応している前記秘密情報が前記レジストリ内に示される承認済ＡｐｐＩＤと承認済秘密情報に一致するか否かを判定する工程と、
前記ＡｐｐＩＤと前記秘密情報が前記レジストリ内に示された前記承認済ＡｐｐＩＤと前記秘密情報に一致しないという判定に応じて、前記承認要求を拒絶する工程と、
を含む方法。 A method for controlling communication between applications communicating over a network,
Designating a different application identifier (AppID) for each of a number of applications compatible with applications (A2A) suitable for running on a terminal device connected to a network suitable for distribution of multimedia information;
Providing a registry indicating an approved AppID to a persistent medium;
Receiving an approval request for media connection issued from the first terminal device including AppID and token information generated as secret information corresponding to at least AppID via the network;
In response to the approval request, the AppID in the approval request and the secret information used and corresponding to generate the token information match the approved AppID and approved secret information indicated in the registry. Determining whether or not,
Depending on the determination that the AppID and the secret information does not match the approved AppID and the secret information shown in the registry, a step of rejecting the approval request,
Including methods.
前記承認要求内の前記ＡｐｐＩＤに一致する前記レジストリ内のＡｐｐＩＤに関連付けられた前記ブラックリスト情報が、前記ＡｐｐＩＤに関連付けられたアプリケーションがブラックリストされていることを示すか否かを判定する工程と、
前記承認要求内の前記ＡｐｐＩＤに一致する前記レジストリ内のＡｐｐＩＤに関連付けられた前記ブラックリスト情報が、前記アプリケーションがブラックリストされていることを示すという判定に応じて、前記承認要求を拒絶する工程と、
をさらに含む方法。 11. The method of claim 10 , wherein the registry indicates respective blacklist information associated with each approved AppID.
Determining whether the blacklist information associated with the AppID in the registry that matches the AppID in the approval request indicates that the application associated with the AppID is blacklisted;
Rejecting the approval request in response to a determination that the blacklist information associated with the AppID in the registry that matches the AppID in the approval request indicates that the application is blacklisted; ,
A method further comprising:
前記承認要求内の前記ｕｓｅｒＩＤに関連付けられたユーザプロフィール情報へのアクセスを提供する工程と、
前記承認要求内の前記ＡｐｐＩＤに一致する前記レジストリ内のＡｐｐＩＤに関連付けられた前記メタデータが、得られたプロフィールを有するユーザが前記ＡｐｐＩＤに関連付けられた前記アプリケーションの使用を承認されていることを示すか否かを判定する工程と、
前記承認要求内の前記ＡｐｐＩＤに一致する前記レジストリ内のＡｐｐＩＤに関連付けられた前記メタデータが、前記得られたプロフィールを有する前記ユーザが前記ＡｐｐＩＤに関連付けられた前記アプリケーションの使用を承認されていないことを示すという判定に応じて、前記承認要求を拒絶する工程と、
をさらに含む方法。 11. The method of claim 10 , wherein the registry indicates respective metadata associated with each approved AppID, and the approval request includes token information and user identification information (userID).
Providing access to user profile information associated with the userID in the approval request;
The metadata associated with the AppID in the registry that matches the AppID in the approval request indicates that a user with the resulting profile is authorized to use the application associated with the AppID. Determining whether or not,
The metadata associated with the AppID in the registry that matches the AppID in the approval request indicates that the user with the obtained profile is not authorized to use the application associated with the AppID. Rejecting the approval request in response to determining that
A method further comprising:
それぞれの異なるＡｐｐＩＤに対してそれぞれ異なる秘密情報を指定する工程と、
変換情報を生成するために、前記トークン情報を変換する工程と、
前記承認要求内の前記ＡｐｐＩＤに一致する前記レジストリ内のＡｐｐＩＤに関連付けられた前記秘密情報が前記変換情報に一致するか否か、および前記承認要求内の前記ＡｐｐＩＤに一致する前記レジストリ内のＡｐｐＩＤに関連付けられた前記ブラックリスト情報が、前記ＡｐｐＩＤに関連付けられたアプリケーションがブラックリストされていることを示すか否かの、少なくともいずれかを判定する工程と、
前記承認要求内の前記ＡｐｐＩＤに一致する前記レジストリ内のＡｐｐＩＤに関連付けられた前記秘密情報が前記変換情報に一致しないこと、および前記承認要求内の前記ＡｐｐＩＤに一致する前記レジストリ内のＡｐｐＩＤに関連付けられた前記ブラックリスト情報が、前記アプリケーションがブラックリストされていることを示すことの、少なくともいずれかの判定に応じて、前記承認要求を拒絶する工程と、
をさらに含む方法。 The method of claim 10 , wherein the registry indicates respective secret information and blacklist information associated with each approved application identifier (AppID), and the approval request includes token information.
Designating different secret information for each different AppID;
Converting the token information to generate conversion information;
Whether the secret information associated with the AppID in the registry that matches the AppID in the approval request matches the conversion information, and the AppID in the registry that matches the AppID in the approval request Determining whether the associated blacklist information indicates that the application associated with the AppID is blacklisted; and
The secret information associated with the AppID in the registry that matches the AppID in the approval request does not match the conversion information, and is associated with the AppID in the registry that matches the AppID in the approval request. And rejecting the approval request in response to at least any determination that the blacklist information indicates that the application is blacklisted;
A method further comprising:
信を含む、請求項１０に記載の方法。 The method of claim 10 , wherein the rejecting step includes sending a message to a proxy server that is part of the network.
マルチメディア情報の配信に適したネットワークにつながっている端末装置で動くのに適したアプリケーション間（Ａ２Ａ）対応の多数のアプリケーションのそれぞれに異なるアプリケーション識別子（ＡｐｐＩＤ）と対応する秘密情報を指定する手段と、
承認済ＡｐｐＩＤおよび前記対応する秘密情報を示すレジストリを有する持続性媒体を含むアプリケーション管理サーバとを含み、
前記管理サーバは、第１端末装置から発せられるメディア接続要求の承認要求を前記ネットワークを介して受信するように構成され、
前記承認要求はＡｐｐＩＤと少なくとも前記ＡｐｐＩＤに対応した秘密情報として生成されたトークン情報を含み、
前記アプリケーション管理サーバは、前記承認要求の受信に応じて、前記承認要求内の前記ＡｐｐＩＤと前記トークンを生成させるために使用された対応する秘密情報が前記レジストリ内に示される承認済ＡｐｐＩＤと前記対応する秘密情報に一致するか否かを判定するように構成され、
前記アプリケーション管理サーバは、前記ＡｐｐＩＤと前記トークン情報を生成させるために使用された対応する秘密情報が前記レジストリ内に示された承認済ＡｐｐＩＤと前記対応する秘密情報に一致しないという判定に応じて、前記承認要求を拒絶するように構成される、
システム。 A system for controlling communication between applications communicating via a network,
Means for designating different application identifiers (AppID) and corresponding secret information for each of a number of applications compatible with applications (A2A) suitable for running on a terminal device connected to a network suitable for distribution of multimedia information; ,
And a application management server including a persistent medium having a registry indicating the approved AppID and secret information which the corresponding,
The management server is configured to receive an approval request for a media connection request issued from the first terminal device via the network;
The approval request includes an AppID and at least token information generated as secret information corresponding to the AppID ,
The application management server in response to reception of the authorization request, the the approved AppID said AppID and corresponding private information was used to generate the token in the authorization request is indicated in the registry corresponding Configured to determine whether or not the confidential information matches,
In response to a determination that the corresponding secret information used to generate the AppID and the token information does not match the approved AppID indicated in the registry and the corresponding secret information , Configured to reject the approval request;
system.
前記レジストリは、それぞれの承認済ＡｐｐＩＤに関連付けられたそれぞれの秘密情報を示し、
前記承認要求はトークン情報を含み、
前記アプリケーション管理サーバは、変換情報を生成するために前記トークン情報を変換するように構成され、
前記アプリケーション管理サーバは、前記承認要求内の前記ＡｐｐＩＤに一致する前記レジストリ内のＡｐｐＩＤに関連付けられた前記秘密情報が前記変換情報に一致するか否かを判定するように構成され、
前記アプリケーション管理サーバは、前記承認要求内の前記ＡｐｐＩＤに一致する前記レジストリ内のＡｐｐＩＤに関連付けられた前記秘密情報が前記変換情報に一致しないという判定に応じて、前記承認要求を拒絶するように構成される、
請求項１６に記載のシステム。 The designation means designates different secret information for each different application identifier (AppID),
The registry indicates respective secret information associated with each approved AppID;
The approval request includes token information;
The application management server is configured to convert the token information to generate conversion information;
The application management server is configured to determine whether the secret information associated with the AppID in the registry that matches the AppID in the approval request matches the conversion information;
The application management server is configured to reject the approval request in response to a determination that the secret information associated with the AppID in the registry that matches the AppID in the approval request does not match the conversion information. To be
The system of claim 16 .
前記アプリケーション管理サーバは、前記承認要求内の前記ＡｐｐＩＤに一致する前記レジストリ内のＡｐｐＩＤに関連付けられた前記ブラックリスト情報が、前記ＡｐｐＩＤに関連付けられたアプリケーションがブラックリストされていることを示すか否かを判定するように構成され、
前記アプリケーション管理サーバは、前記承認要求内の前記ＡｐｐＩＤに一致する前記レジストリ内のＡｐｐＩＤに関連付けられた前記ブラックリスト情報が、前記アプリケーションがブラックリストされていることを示すという判定に応じて、前記承認要求を拒絶するように構成される、
請求項１６に記載のシステム。 The registry indicates respective blacklist information associated with each approved AppID,
Whether the application management server indicates that the blacklist information associated with the AppID in the registry that matches the AppID in the approval request indicates that the application associated with the AppID is blacklisted. Is configured to determine
In response to a determination that the blacklist information associated with the AppID in the registry that matches the AppID in the approval request indicates that the application is blacklisted, the application management server Configured to reject the request,
The system of claim 16 .
前記承認要求はトークン情報とユーザ識別情報（ｕｓｅｒＩＤ）を含み、
アプリケーション管理サーバは、前記承認要求内の前記ｕｓｅｒＩＤに関連付けられたユーザプロフィール情報へのアクセスを提供するように構成され、
前記アプリケーション管理サーバは、前記承認要求内の前記ＡｐｐＩＤに一致する前記レジストリ内のＡｐｐＩＤに関連付けられたメタデータが、得られたプロフィールを有するユーザが前記ＡｐｐＩＤに関連付けられた前記アプリケーションの使用を承認されていることを示すか否か判定するように構成され、
前記アプリケーション管理サーバは、前記承認要求内の前記ＡｐｐＩＤに一致する前記レジストリ内のＡｐｐＩＤに関連付けられた前記メタデータが、前記得られたプロフィールを有する前記ユーザが前記ＡｐｐＩＤに関連付けられた前記アプリケーションの使用を承認されていないことを示すという判定に応じて、前記承認要求を拒絶するように構成される、
請求項１６に記載のシステム。 The registry indicates respective metadata associated with each approved AppID;
The approval request includes token information and user identification information (userID),
An application management server is configured to provide access to user profile information associated with the userID in the approval request;
The application management server is authorized to use the application associated with the AppID by a user having a profile with metadata associated with the AppID in the registry that matches the AppID in the approval request. Configured to determine whether or not
The application management server uses the application in which the metadata associated with the AppID in the registry that matches the AppID in the approval request has the obtained profile associated with the AppID. Is configured to reject the approval request in response to determining that it is not approved.
The system of claim 16 .
前記レジストリは、それぞれの承認済ＡｐｐＩＤに関連付けられたそれぞれ秘密情報と
ブラックリスト情報を示し、
前記承認要求はトークン情報を含み、
前記アプリケーション管理サーバは、変換情報を生成するために前記トークン情報を変換するように構成され、
前記アプリケーション管理サーバは、前記承認要求内の前記ＡｐｐＩＤに一致する前記レジストリ内のＡｐｐＩＤに関連付けられた前記秘密情報が前記変換情報に一致するか否か、および前記承認要求内の前記ＡｐｐＩＤに一致する前記レジストリ内のＡｐｐＩＤに関連付けられた前記ブラックリスト情報が、前記ＡｐｐＩＤに関連付けられたアプリケーションがブラックリストされていることを示すか否かを判定するように構成され、
前記アプリケーション管理サーバは、前記承認要求内の前記ＡｐｐＩＤに一致する前記レジストリ内のＡｐｐＩＤに関連付けられた前記秘密情報が前記変換情報に一致しないこと、および前記承認要求内の前記ＡｐｐＩＤに一致する前記レジストリ内のＡｐｐＩＤに関連付けられた前記ブラックリスト情報が、前記アプリケーションがブラックリストされていることを示すことの、少なくともいずれかの判定に応じて、前記承認要求を拒絶するように構成される、
請求項１６に記載のシステム。 The designation means designates different secret information for each different application identifier (AppID),
The registry indicates secret information and blacklist information associated with each approved AppID,
The approval request includes token information;
The application management server is configured to convert the token information to generate conversion information;
The application management server matches whether the secret information associated with the AppID in the registry that matches the AppID in the approval request matches the conversion information, and matches the AppID in the approval request Configured to determine whether the blacklist information associated with the AppID in the registry indicates that the application associated with the AppID is blacklisted;
The application management server determines that the secret information associated with the AppID in the registry that matches the AppID in the approval request does not match the conversion information, and the registry that matches the AppID in the approval request The blacklist information associated with the AppID is configured to reject the approval request in response to at least any determination that the application is blacklisted;
The system of claim 16 .
前記レジストリは、それぞれの承認済ＡｐｐＩＤに関連付けられたそれぞれ秘密情報とメタデータを示し、
前記承認要求はトークン情報とユーザ識別情報（ｕｓｅｒＩＤ）を含み、
前記アプリケーション管理サーバは、変換情報を生成するために前記トークン情報を変換するように構成され、
前記アプリケーション管理サーバは、前記承認要求内の前記ｕｓｅｒＩＤに関連付けられたユーザプロフィール情報へのアクセスを提供するように構成され、
前記アプリケーション管理サーバは、前記承認要求内の前記ＡｐｐＩＤに一致する前記レジストリ内のＡｐｐＩＤに関連付けられた前記秘密情報が前記変換情報に一致するか否か、および前記承認要求内の前記ＡｐｐＩＤに一致する前記レジストリ内のＡｐｐＩＤに関連付けられた前記メタデータが、得られたプロフィールを有するユーザが前記ＡｐｐＩＤに関連付けられた前記アプリケーションの使用を承認されていることを示すか否かを判定するように構成され、
前記アプリケーション管理サーバは、前記承認要求内の前記ＡｐｐＩＤに一致する前記レジストリ内のＡｐｐＩＤに関連付けられた前記秘密情報が前記変換情報に一致しないこと、および前記承認要求内の前記ＡｐｐＩＤに一致する前記レジストリ内のＡｐｐＩＤに関連付けられた前記メタデータが、前記得られたプロフィールを有する前記ユーザが前記ＡｐｐＩＤに関連付けられた前記アプリケーションの使用を承認されていないことを示すことの、少なくともいずれかの判定に応じて、前記承認要求を拒絶するように構成される、
請求項１６に記載のシステム。 The designation means designates different secret information for each different application identifier (AppID),
The registry indicates respective secret information and metadata associated with each approved AppID;
The approval request includes token information and user identification information (userID),
The application management server is configured to convert the token information to generate conversion information;
The application management server is configured to provide access to user profile information associated with the userID in the approval request;
The application management server matches whether the secret information associated with the AppID in the registry that matches the AppID in the approval request matches the conversion information, and matches the AppID in the approval request The metadata associated with the AppID in the registry is configured to determine whether a user with the resulting profile indicates that the user associated with the AppID is authorized to use the application. ,
The application management server determines that the secret information associated with the AppID in the registry that matches the AppID in the approval request does not match the conversion information, and the registry that matches the AppID in the approval request In response to at least one determination that the metadata associated with the AppID within indicates that the user with the obtained profile is not authorized to use the application associated with the AppID Configured to reject the approval request,
The system of claim 16 .
端末装置に登録されたアプリケーションのアプリケーション識別子（ＡｐｐＩＤ）を示すレジストリを、前記端末装置の持続性媒体に提供する工程と、
前記端末装置のレジストリ内に示されたＡｐｐＩＤのメディア接続要求を得るために、前記ネットワークを介してアプリケーション管理サーバに、前記端末レジストリ内に示された１つ以上のＡｐｐＩＤと少なくとも秘密情報の機能として生成されたトークン情報を含む承認要求を定期的に送信する工程と、
前記ネットワークを介して前記アプリケーション管理サーバからそれぞれのＡｐｐＩＤの承認指示を受信する工程と、
前記端末装置レジストリ内の対応するＡｐｐＩＤに関連付けられたそれぞれの前記受信した承認指示を示す工程と、
前記端末装置で動いている第１アプリケーションからの、異なる端末装置で動いている第２アプリケーションとのメディア接続要求であって、前記第１アプリケーションに関連付けられたＡｐｐＩＤを含んだメディア接続要求に応じて、前記メディア接続要求に含まれる前記ＡｐｐＩＤと前記トークン情報と前記端末装置レジストリ内の前記ＡｐｐＩＤに対応する承認指示に基づいて前記メディア接続を承認するか否かを判定する工程と、
前記要求に含まれる前記ＡｐｐＩＤの前記メディア接続が承認されるという判定に応じて、ネットワークを介して前記第２アプリケーションとのメディア接続要求を送信する工程と、
前記メディア接続要求に応じて、前記第１アプリケーションに関連付けられた前記ＡｐｐＩＤを含んだ制御情報であって、前記端末装置と前記異なる端末装置との間に確立された制御セッションを介して制御情報を通信する工程と、
前記メディア接続要求に応じて、前記端末装置と前記異なる端末装置との間に確立されたメディアセッションを介してメディア情報を通信する工程と、
を含む方法。 A method of communicating media information over a network,
Providing a registry indicating an application identifier (AppID) of an application registered in the terminal device to the persistent medium of the terminal device;
In order to obtain an AppID media connection request indicated in the registry of the terminal device, the application management server is made to function as one or more AppIDs indicated in the terminal registry and at least secret information via the network. Periodically sending an authorization request including the generated token information ;
Receiving an approval instruction for each AppID from the application management server via the network;
Indicating each of the received approval instructions associated with a corresponding AppID in the terminal device registry;
In response to a media connection request from a first application running on the terminal device to a second application running on a different terminal device, including an AppID associated with the first application Determining whether to approve the media connection based on the AppID, the token information included in the media connection request, and an approval instruction corresponding to the AppID in the terminal device registry;
Transmitting a media connection request with the second application via a network in response to determining that the media connection of the AppID included in the request is approved;
In response to the media connection request, the control information includes the AppID associated with the first application, and the control information is transmitted through a control session established between the terminal device and the different terminal device. Communicating, and
Communicating media information via a media session established between the terminal device and the different terminal device in response to the media connection request;
Including methods.
前記端末装置で動くように構成されたアプリケーションであって、
前記アプリケーションは秘密情報と
前記アプリケーションに関連付けられた固有のアプリケーション識別子（ＡｐｐＩＤ）を含むメソッド呼出しを送信するように構成され、異なる端末装置で動く他のアプリケーションとのメディア接続を要求するアプリケーションと、
前記メソッド呼出しを、前記ＡｐｐＩＤと少なくとも秘密情報の機能として生成されたトークン情報とを含み前記異なる端末装置とのメディア接続を要求するメディア要求と前記ＡｐｐＩＤを含みアプリケーション管理サーバからの承認を要求する承認要求とを含むネットワークメッセージに変換し、
前記ネットワークメッセージは前記トークン情報を含んだ前記承認要求を送信するためのプロキシサーバへの指示を含み、
前記ネットワークを介した送信のための前記通信プロトコルスタックに前記ネットワークメッセージを提供し、
前記通信プロトコルスタックに関連付けられたバッファからの情報であって、前記通信プロトコルスタックを使用して前記ネットワークを介して受信し、ＡｐｐＩＤ情報に関連付けられた情報にアクセスし、
前記ＡｐｐＩＤに関連付けられた前記アプリケーションに前記アクセスされた情報を送るため、前記アクセスされた情報に関連付けられた前記ＡｐｐＩＤ情報を使用するように構成されたインターフェースと、
を含む端末装置。 A terminal device comprising a processor and a persistent medium encoded by a communication protocol stack suitable for performing communication over a network,
An application configured to run on the terminal device,
The application is configured to send a method call including secret information and a unique application identifier (AppID) associated with the application, and requesting a media connection with another application running on a different terminal device;
The method call includes a media request for requesting media connection with the different terminal device including the AppID and at least token information generated as a function of secret information, and an approval for requesting approval from the application management server including the AppID. A network message containing the request,
The network message includes instructions to a proxy server to send the authorization request including the token information;
Providing the network message to the communication protocol stack for transmission over the network;
Information from a buffer associated with the communication protocol stack received via the network using the communication protocol stack and accessing information associated with AppID information;
An interface configured to use the AppID information associated with the accessed information to send the accessed information to the application associated with the AppID;
A terminal device including
前記インターフェースは、さらに、少なくとも前記ＡｐｐＩＤと前記秘密情報の機能として前記承認要求に含ませるようにトークンを生成するように構成される、
請求項２３に記載の端末装置。 The application is further configured to include secret information in the method call;
The interface is further configured to generate a token to be included in the approval request as a function of at least the AppID and the secret information.
The terminal device according to claim 23 .
前記インターフェースは、前記トークンを前記承認要求に含ませるように構成される、
請求項２４に記載の端末装置。 The application is configured to generate a token as a function of at least the AppID and the secret information associated with the application and include the token in the method call;
The interface is configured to include the token in the authorization request;
The terminal device according to claim 24.
Applications Claiming Priority (9)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201161446045P | 2011-02-24 | 2011-02-24 | |
US61/446,045 | 2011-02-24 | ||
US13/276,229 | 2011-10-18 | ||
US13/276,220 | 2011-10-18 | ||
US13/276,229 US8327006B2 (en) | 2011-02-24 | 2011-10-18 | Endpoint device and article of manufacture for application to application communication over a network |
US13/276,211 US8327005B2 (en) | 2011-02-24 | 2011-10-18 | Method to set up application to application communication over a network between applications running on endpoint devices |
US13/276,220 US8321566B2 (en) | 2011-02-24 | 2011-10-18 | System and method to control application to application communication over a network |
US13/276,211 | 2011-10-18 | ||
PCT/US2012/022555 WO2012115742A1 (en) | 2011-02-24 | 2012-01-25 | Communication between applications on different endpoint |
Publications (3)
Publication Number | Publication Date |
---|---|
JP2014514624A JP2014514624A (en) | 2014-06-19 |
JP2014514624A5 JP2014514624A5 (en) | 2015-03-19 |
JP6014297B2 true JP6014297B2 (en) | 2016-10-25 |
Family
ID=46719778
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2013555426A Active JP6014297B2 (en) | 2011-02-24 | 2012-01-25 | Communication between applications on different terminals |
Country Status (4)
Country | Link |
---|---|
US (4) | US8321566B2 (en) |
EP (1) | EP2678971A4 (en) |
JP (1) | JP6014297B2 (en) |
WO (1) | WO2012115742A1 (en) |
Families Citing this family (52)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8695076B2 (en) * | 2010-03-19 | 2014-04-08 | Oracle International Corporation | Remote registration for enterprise applications |
US8819168B2 (en) * | 2010-12-14 | 2014-08-26 | Microsoft Corporation | Link expansion service |
US8321566B2 (en) | 2011-02-24 | 2012-11-27 | Jibe Mobile | System and method to control application to application communication over a network |
US8954591B2 (en) * | 2011-03-07 | 2015-02-10 | Cisco Technology, Inc. | Resource negotiation for cloud services using a messaging and presence protocol |
US9824411B2 (en) * | 2011-09-29 | 2017-11-21 | Cerner Innovation, Inc. | Clinical framework application for mobile devices |
US10235643B2 (en) | 2011-09-29 | 2019-03-19 | Cerner Innovation, Inc. | Clinical plug-in application |
US20130103768A1 (en) * | 2011-10-24 | 2013-04-25 | Peter Freebeck | Physician mobile communications system and method |
US20130179507A1 (en) * | 2012-01-06 | 2013-07-11 | Microsoft Corporation | Communicating Media Data |
US9602634B2 (en) * | 2012-02-15 | 2017-03-21 | Avaya Inc. | Global session identifier |
US20130250734A1 (en) * | 2012-03-24 | 2013-09-26 | Arun Kishore Narasani | Suspendable alarms |
WO2013183963A1 (en) | 2012-06-07 | 2013-12-12 | Samsung Electronics Co., Ltd. | Apparatus and method for reducing power consumption in electronic device |
US9442778B2 (en) * | 2012-10-01 | 2016-09-13 | Salesforce.Com, Inc. | Method and system for secured inter-application communication in mobile devices |
JP5962493B2 (en) * | 2012-12-20 | 2016-08-03 | 富士通株式会社 | Program, information processing apparatus, and object transmission method |
US9866382B2 (en) | 2012-12-21 | 2018-01-09 | Mobile Iron, Inc. | Secure app-to-app communication |
WO2014100756A1 (en) * | 2012-12-21 | 2014-06-26 | Mobile Iron, Inc. | Secure mobile app connection bus |
US9100877B2 (en) * | 2013-02-01 | 2015-08-04 | Intel Deutschland Gmbh | Communication devices and methods for controlling a communication device |
US9225579B2 (en) | 2013-03-05 | 2015-12-29 | Qualcomm Incorporated | Renewing registrations for a plurality of client applications that are associated with the same host server via an explicit piggybacking scheme |
KR102099680B1 (en) | 2013-04-26 | 2020-05-15 | 삼성전자주식회사 | Information processing apparatus and control method thereof |
US9123063B2 (en) * | 2013-06-03 | 2015-09-01 | Tangome, Inc. | Authenticating a third-party application for enabling access to messaging functionalities |
US9923979B2 (en) | 2013-06-27 | 2018-03-20 | Google Llc | Systems and methods of determining a geographic location based conversion |
US9736130B1 (en) * | 2013-07-05 | 2017-08-15 | Sonus Networks, Inc. | Communications methods and apparatus related to web initiated sessions |
KR102121472B1 (en) | 2013-09-23 | 2020-06-17 | 삼성전자주식회사 | An apparatus and method for communication between application to application for each of devices |
US10069811B2 (en) | 2013-10-17 | 2018-09-04 | Arm Ip Limited | Registry apparatus, agent device, application providing apparatus and corresponding methods |
US9307405B2 (en) | 2013-10-17 | 2016-04-05 | Arm Ip Limited | Method for assigning an agent device from a first device registry to a second device registry |
US20150127842A1 (en) * | 2013-11-05 | 2015-05-07 | D2 Technologies Inc. | Method for Extending Application Interface for Future Applications |
WO2015072764A1 (en) * | 2013-11-13 | 2015-05-21 | 엘지전자(주) | Method and apparatus for managing connection between plurality of devices over network |
US8863158B1 (en) * | 2013-12-04 | 2014-10-14 | Google Inc. | Intents with application-specific data |
US9363254B2 (en) | 2014-06-04 | 2016-06-07 | Sonos, Inc. | Cloud queue access control |
WO2015187463A1 (en) * | 2014-06-04 | 2015-12-10 | Sonos, Inc. | Cloud queue access control |
US20150355818A1 (en) | 2014-06-04 | 2015-12-10 | Sonos, Inc. | Continuous Playback Queue |
US9720642B2 (en) | 2014-06-04 | 2017-08-01 | Sonos, Inc. | Prioritizing media content requests |
US20150370813A1 (en) * | 2014-06-23 | 2015-12-24 | Infosys Limited | Adapting services of applications |
US9912705B2 (en) * | 2014-06-24 | 2018-03-06 | Avaya Inc. | Enhancing media characteristics during web real-time communications (WebRTC) interactive sessions by using session initiation protocol (SIP) endpoints, and related methods, systems, and computer-readable media |
JP6245371B2 (en) * | 2014-07-22 | 2017-12-13 | 株式会社リコー | Control system, communication terminal, communication system, control method, and program |
JP6046673B2 (en) * | 2014-08-14 | 2016-12-21 | 株式会社ソニー・インタラクティブエンタテインメント | Information processing apparatus, shareability determination method, and information processing system |
GB2529838B (en) | 2014-09-03 | 2021-06-30 | Advanced Risc Mach Ltd | Bootstrap Mechanism For Endpoint Devices |
GB2530028B8 (en) | 2014-09-08 | 2021-08-04 | Advanced Risc Mach Ltd | Registry apparatus, agent device, application providing apparatus and corresponding methods |
JP6081973B2 (en) * | 2014-09-30 | 2017-02-15 | Kddi株式会社 | Inter-terminal communication system, inter-terminal communication method, and inter-terminal communication program |
US9626304B2 (en) * | 2014-10-21 | 2017-04-18 | Sandisk Technologies Llc | Storage module, host, and method for securing data with application information |
US9992307B2 (en) * | 2015-02-03 | 2018-06-05 | Google Llc | Interoperability of discovery and connection protocols between client devices and first screen devices |
GB2540987B (en) | 2015-08-03 | 2020-05-13 | Advanced Risc Mach Ltd | Bootstrapping without transferring private key |
GB2540989B (en) | 2015-08-03 | 2018-05-30 | Advanced Risc Mach Ltd | Server initiated remote device registration |
US11210147B2 (en) | 2016-02-03 | 2021-12-28 | Samsung Electronics Co., Ltd. | Electronic device for performing application-related interoperation, and method therefor |
US10225359B2 (en) * | 2016-09-22 | 2019-03-05 | International Business Machines Corporation | Push notifications from multiple tenant servers |
US10073767B2 (en) * | 2017-01-18 | 2018-09-11 | Pivotal Software, Inc. | Trace Management |
JP6509917B2 (en) * | 2017-01-18 | 2019-05-08 | Kddi株式会社 | Inter-terminal communication system, inter-terminal communication method, inter-terminal communication program, and communication server |
US20180285172A1 (en) * | 2017-03-28 | 2018-10-04 | Vmware, Inc. | Data exchange between applications |
US10375530B2 (en) | 2017-06-09 | 2019-08-06 | Blackberry Limited | Providing data file updates using multimedia broadcast multicast services |
US10395066B1 (en) * | 2018-09-28 | 2019-08-27 | Kromtech Alliance Corp. | Method for protecting a camera and a microphone from unauthorized access |
US11475134B2 (en) | 2019-04-10 | 2022-10-18 | Arm Limited | Bootstrapping a device |
US10896078B1 (en) * | 2019-07-24 | 2021-01-19 | Jpmorgan Chase Bank, N.A. | Method and system for implementing a multi-platform framework for shared services |
US11579945B2 (en) * | 2021-03-12 | 2023-02-14 | EMC IP Holding Company | Dynamic service mesh |
Family Cites Families (43)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4236835A (en) | 1978-12-18 | 1980-12-02 | Printronix, Inc. | Printer system with compressed print capability |
JPS6041596B2 (en) | 1980-08-14 | 1985-09-18 | 塩野義製薬株式会社 | Method for producing 2,5-diketo-D-gluconic acid |
US5941948A (en) | 1997-10-29 | 1999-08-24 | Industrial Technology Research Institute | Admission controller for network access |
US6368847B1 (en) | 1999-06-03 | 2002-04-09 | The United States Of America, As Represented By The Secretary Of Agriculture | Selective media for recovery and enumeration of campylobacters |
US6877036B1 (en) | 1999-09-24 | 2005-04-05 | Akamba Corporation | System and method for managing connections between a client and a server |
US7166215B2 (en) | 1999-10-12 | 2007-01-23 | Reid Roger P | Pressure vessel and recyclable filter cartridge |
US6961345B2 (en) * | 1999-12-28 | 2005-11-01 | Matsushita Electric Industrial Co., Ltd. | System, method and apparatus for data transmission |
US7054256B2 (en) | 2000-10-20 | 2006-05-30 | Ochoa Optics Llc | High capacity digital data storage by transmission of radiant energy through arrays of small diameter holes |
US7296275B2 (en) * | 2001-01-04 | 2007-11-13 | Sun Microsystems, Inc. | Method and system for passing objects in a distributed system using serialization contexts |
US20040006653A1 (en) | 2002-06-27 | 2004-01-08 | Yury Kamen | Method and system for wrapping existing web-based applications producing web services |
CN100448317C (en) | 2002-10-09 | 2008-12-31 | 诺基亚公司 | Communication system |
WO2004062243A2 (en) * | 2002-12-31 | 2004-07-22 | Motorola, Inc, A Corporation Of The State Of Delaware | System and method for distributed authorization for access to communications device |
US7480254B2 (en) * | 2003-05-28 | 2009-01-20 | Nokia Corporation | System, apparatus, and method for providing multi-application support using a single protocol stack |
US7085552B2 (en) * | 2003-08-18 | 2006-08-01 | Motricity, Inc. | Dispatcher for wireless device applications |
US8037515B2 (en) * | 2003-10-29 | 2011-10-11 | Qualcomm Incorporated | Methods and apparatus for providing application credentials |
FI20031860A0 (en) * | 2003-12-18 | 2003-12-18 | Nokia Corp | Monitoring of terminal applications in a network environment |
US20050135622A1 (en) | 2003-12-18 | 2005-06-23 | Fors Chad M. | Upper layer security based on lower layer keying |
JP2005217679A (en) * | 2004-01-29 | 2005-08-11 | Hitachi Ltd | Authentication server performing authentication of communication partner |
US7725329B2 (en) | 2004-04-27 | 2010-05-25 | Humana Inc. | System and method for automatic generation of a hierarchical tree network and the use of two complementary learning algorithms, optimized for each leaf of the hierarchical tree network |
GB0409496D0 (en) * | 2004-04-28 | 2004-06-02 | Nokia Corp | Subscriber identities |
US8024784B1 (en) * | 2004-09-16 | 2011-09-20 | Qurio Holdings, Inc. | Method and system for providing remote secure access to a peer computer |
JP4663383B2 (en) * | 2005-04-13 | 2011-04-06 | 株式会社日立製作所 | Home gateway device, control method for home gateway device, and control method for communication system |
JP4830503B2 (en) * | 2006-01-18 | 2011-12-07 | 株式会社日立製作所 | Communication session establishment mediating system and method protecting personal information |
US8194642B2 (en) | 2006-02-07 | 2012-06-05 | Cisco Technology, Inc. | System and method for providing multimedia services |
US8042148B2 (en) * | 2006-02-07 | 2011-10-18 | Cisco Technology, Inc. | System and method for enforcing policy in a communication network |
US20080072066A1 (en) | 2006-08-21 | 2008-03-20 | Motorola, Inc. | Method and apparatus for authenticating applications to secure services |
US8200506B2 (en) | 2006-12-19 | 2012-06-12 | Accenture Global Services Limited | Integrated health management platform |
US20080215694A1 (en) | 2007-02-16 | 2008-09-04 | Chung-Min Chen | System and method for unified messaging service |
US8638676B2 (en) | 2007-03-27 | 2014-01-28 | Blackberry Limited | Methods and systems to allow multiple SIP applications on a SIP client the ability to select specific applications and features on a SIP server |
EP1976217B1 (en) * | 2007-03-27 | 2019-10-09 | BlackBerry Limited | Methods and systems to allow multiple sip applications on a sip client enabling it to select specific applications and features on a sip server |
KR100815562B1 (en) | 2007-04-11 | 2008-03-20 | 주식회사 케이티프리텔 | Terminal unit for handling session on the basis of session initiaion protocol, method of transmitting and receiving thereof |
EP2053824A1 (en) | 2007-10-23 | 2009-04-29 | Nokia Siemens Networks Oy | User plane control in IMS |
JP4768761B2 (en) * | 2008-02-06 | 2011-09-07 | 日本電信電話株式会社 | Service providing system, service providing method, and service providing program |
EP2091192A1 (en) * | 2008-02-15 | 2009-08-19 | Nokia Siemens Networks Oy | Interworking between messaging service domains |
US8418222B2 (en) | 2008-03-05 | 2013-04-09 | Microsoft Corporation | Flexible scalable application authorization for cloud computing environments |
US8825876B2 (en) * | 2008-07-17 | 2014-09-02 | Qualcomm Incorporated | Apparatus and method for mobile virtual network operator (MVNO) hosting and pricing |
US20100278345A1 (en) * | 2009-05-04 | 2010-11-04 | Thomas Matthieu Alsina | Method and apparatus for proximity based pairing of mobile devices |
JP5184435B2 (en) * | 2009-05-12 | 2013-04-17 | 日本電信電話株式会社 | Content acquisition method, content acquisition device, content acquisition program, and recording medium |
US9160545B2 (en) | 2009-06-22 | 2015-10-13 | Beyondtrust Software, Inc. | Systems and methods for A2A and A2DB security using program authentication factors |
US8655392B2 (en) * | 2009-10-30 | 2014-02-18 | At&T Intellectual Property I, L.P. | Generic paging service for third-party applications over wireless networks |
US8479268B2 (en) * | 2009-12-15 | 2013-07-02 | International Business Machines Corporation | Securing asynchronous client server transactions |
US8850554B2 (en) * | 2010-02-17 | 2014-09-30 | Nokia Corporation | Method and apparatus for providing an authentication context-based session |
US8321566B2 (en) | 2011-02-24 | 2012-11-27 | Jibe Mobile | System and method to control application to application communication over a network |
-
2011
- 2011-10-18 US US13/276,220 patent/US8321566B2/en not_active Expired - Fee Related
- 2011-10-18 US US13/276,229 patent/US8327006B2/en not_active Expired - Fee Related
- 2011-10-18 US US13/276,211 patent/US8327005B2/en not_active Expired - Fee Related
-
2012
- 2012-01-25 WO PCT/US2012/022555 patent/WO2012115742A1/en active Application Filing
- 2012-01-25 EP EP12749681.8A patent/EP2678971A4/en not_active Withdrawn
- 2012-01-25 JP JP2013555426A patent/JP6014297B2/en active Active
- 2012-11-21 US US13/683,918 patent/US20130326590A1/en not_active Abandoned
Also Published As
Publication number | Publication date |
---|---|
EP2678971A1 (en) | 2014-01-01 |
JP2014514624A (en) | 2014-06-19 |
US8327006B2 (en) | 2012-12-04 |
US20130326590A1 (en) | 2013-12-05 |
US8321566B2 (en) | 2012-11-27 |
WO2012115742A1 (en) | 2012-08-30 |
US20120221725A1 (en) | 2012-08-30 |
US20120221738A1 (en) | 2012-08-30 |
EP2678971A4 (en) | 2017-07-12 |
US8327005B2 (en) | 2012-12-04 |
US20120221739A1 (en) | 2012-08-30 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
JP6014297B2 (en) | Communication between applications on different terminals | |
US10819757B2 (en) | System and method for real-time communication by using a client application communication protocol | |
US11399044B2 (en) | System and method for connecting a communication to a client | |
US9648006B2 (en) | System and method for communicating with a client application | |
US8970660B1 (en) | Methods and systems for authentication in secure media-based conferencing | |
WO2020063585A1 (en) | Fusion communication system and interaction method therefor | |
US8958559B2 (en) | System and method for secure instant messaging | |
CN101517963B (en) | Distributable, scalable, pluggable conferencing architecture | |
US20120311686A1 (en) | System and method for secure identity service | |
US20130244614A1 (en) | Embodiments of a system and method for securely managing multiple user handles across multiple data processing devices | |
US10630612B2 (en) | Apparatus and method for subscription to a service and use of the service | |
JP5377295B2 (en) | Group notification method in SIP-based message service | |
MX2012015175A (en) | System and method for secure messaging in a hybrid peer-to-peer net work. | |
TW200425677A (en) | Apparatus and method for controlling and managing individual directed sessions in a communications system | |
KR20120117979A (en) | Transferring multiple communication modalities during a conversation | |
TW200931917A (en) | Authentication system and method | |
EP2418913B1 (en) | Methods and system for joining group session with pre-defined joining | |
WO2020029954A1 (en) | Method and apparatus for service request, negotiation and response, and network device and system | |
JP5486078B2 (en) | Method and node for user context transmission between communication networks | |
KR20100060355A (en) | Method for generating group messaging session in communication system and system therefor | |
CN113261257A (en) | Operator integration via user network interface proxy |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
A521 | Request for written amendment filed |
Free format text: JAPANESE INTERMEDIATE CODE: A523Effective date: 20150123Free format text: JAPANESE INTERMEDIATE CODE: A821Effective date: 20150123 |
|
A621 | Written request for application examination |
Free format text: JAPANESE INTERMEDIATE CODE: A621Effective date: 20150123 |
|
A521 | Request for written amendment filed |
Free format text: JAPANESE INTERMEDIATE CODE: A821Effective date: 20150911 |
|
A871 | Explanation of circumstances concerning accelerated examination |
Free format text: JAPANESE INTERMEDIATE CODE: A871Effective date: 20150911 |
|
A977 | Report on retrieval |
Free format text: JAPANESE INTERMEDIATE CODE: A971007Effective date: 20151116 |
|
A975 | Report on accelerated examination |
Free format text: JAPANESE INTERMEDIATE CODE: A971005Effective date: 20151117 |
|
A131 | Notification of reasons for refusal |
Free format text: JAPANESE INTERMEDIATE CODE: A131Effective date: 20151125 |
|
A601 | Written request for extension of time |
Free format text: JAPANESE INTERMEDIATE CODE: A601Effective date: 20160223 |
|
A601 | Written request for extension of time |
Free format text: JAPANESE INTERMEDIATE CODE: A601Effective date: 20160323 |
|
A601 | Written request for extension of time |
Free format text: JAPANESE INTERMEDIATE CODE: A601Effective date: 20160422 |
|
A521 | Request for written amendment filed |
Free format text: JAPANESE INTERMEDIATE CODE: A821Effective date: 20160519 |
|
A711 | Notification of change in applicant |
Free format text: JAPANESE INTERMEDIATE CODE: A711Effective date: 20160519 |
|
A521 | Request for written amendment filed |
Free format text: JAPANESE INTERMEDIATE CODE: A821Effective date: 20160525Free format text: JAPANESE INTERMEDIATE CODE: A523Effective date: 20160525 |
|
A521 | Request for written amendment filed |
Free format text: JAPANESE INTERMEDIATE CODE: A821Effective date: 20160519 |
|
TRDD | Decision of grant or rejection written | ||
A01 | Written decision to grant a patent or to grant a registration (utility model) |
Free format text: JAPANESE INTERMEDIATE CODE: A01Effective date: 20160825 |
|
A61 | First payment of annual fees (during grant procedure) |
Free format text: JAPANESE INTERMEDIATE CODE: A61Effective date: 20160924 |
|
R150 | Certificate of patent or registration of utility model |
Ref document number: 6014297Country of ref document: JPFree format text: JAPANESE INTERMEDIATE CODE: R150 |
|
RD02 | Notification of acceptance of power of attorney |
Free format text: JAPANESE INTERMEDIATE CODE: R3D02 |
|
RD04 | Notification of resignation of power of attorney |
Free format text: JAPANESE INTERMEDIATE CODE: R3D04 |
|
S533 | Written request for registration of change of name |
Free format text: JAPANESE INTERMEDIATE CODE: R313533 |
|
R350 | Written notification of registration of transfer |
Free format text: JAPANESE INTERMEDIATE CODE: R350 |
|
R250 | Receipt of annual fees |
Free format text: JAPANESE INTERMEDIATE CODE: R250 |
|
R250 | Receipt of annual fees |
Free format text: JAPANESE INTERMEDIATE CODE: R250 |
|
R250 | Receipt of annual fees |
Free format text: JAPANESE INTERMEDIATE CODE: R250 |
|
R250 | Receipt of annual fees |
Free format text: JAPANESE INTERMEDIATE CODE: R250 |
|
R250 | Receipt of annual fees |
Free format text: JAPANESE INTERMEDIATE CODE: R250 |
CN113785540B - Method, medium and system for generating content promotions using machine learning nominators - Google Patents
Method, medium and system for generating content promotions using machine learning nominators Download PDFInfo
- Publication number
- CN113785540B CN113785540B CN201980096013.4A CN201980096013A CN113785540B CN 113785540 B CN113785540 B CN 113785540B CN 201980096013 A CN201980096013 A CN 201980096013A CN 113785540 B CN113785540 B CN 113785540B
- Authority
- CN
- China
- Prior art keywords
- candidate
- content item
- user
- score
- nominator
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/44—Arrangements for executing specific programs
- G06F9/451—Execution arrangements for user interfaces
- G06F9/453—Help systems
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/02—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail using automatic reactions or user delegation, e.g. automatic replies or chatbot-generated messages
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/52—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail for supporting social networking services
Abstract
Techniques are disclosed that enable candidate promotions to be generated for recommended content items using a collection of nominators. Various implementations include providing each nominator in the collection of candidate campaigns for each recommended content item. Additionally or alternatively, one of the campaigns is selected for presentation to the user based on the score determined for each candidate campaign.
Description
Background
Humans can conduct human-machine conversations using interactive software applications, referred to herein as "automated assistants" (also referred to as "digital agents," "chat robots," "interactive personal assistants," "intelligent personal assistants," "assistant applications," "conversation agents," and the like). For example, humans (which may also be referred to as "users" when they interact with an automated assistant) may use spoken natural language input (i.e., utterances) that may in some cases be converted to text and subsequently processed, and/or provide commands and/or requests to the automated assistant by providing text (e.g., typed) natural language input. The automated assistant responds to the request by providing responsive user interface outputs, which may include audible/visual interface outputs.
The automated assistant and/or other application(s) may provide recommended content to the user, including video, audio, images, web pages, news articles, videos, recipes, blog posts, electronic books, expression packs, social media posts, and/or additional types of content. In some cases, content may be recommended in response to a particular request by a user for content. Additionally or alternatively, the content may be actively rendered to the user without a specific request for the content by the user.
Disclosure of Invention
The embodiments described herein are directed to generating candidate promotions (inferences) for content items using a collection of nominators; selecting a campaign from the candidate campaigns based on the score determined for the candidate campaign; and rendering the content item with the selected promotion. A promotion is a communication (e.g., natural language communication(s) and/or additional types of communication) that indicates why a user should interact with a content item. For example, a recommendation for a smart doorbell may have a corresponding hype "users of your smart thermostat frequently use this device (you's smart thermostat user often uses the device)". The promotion may include a single phrase, a conversation having multiple turns in the conversation, and/or additional communication(s) with the user. As used herein, a "conversation session" may include a logically self-contained exchange of one or more messages between a user and a computing system, such as an automated assistant client (and in some cases other human participants). The computing system may distinguish between multiple conversations with the user based on various signals, such as passage of time, changes in user context (e.g., location, before/during/after scheduling a meeting, etc.) between the sessions, detection of one or more intervening interactions between the user and the client outside of the conversation (e.g., the user has switched applications for a while, the user walked away from the client device and then returned to the client device), locking/dormancy of the client device between sessions, changes in the client device to interface with one or more instances of the automated assistant, etc. User interactions with the content may include selecting, and viewing at least a threshold duration, and/or other interaction(s) with the content.
In various implementations, a collection of nominators may be used to determine candidate hype groups for recommended content items. As used herein, a nominator may describe various types of logical structures implemented in software, including machine learning models used in processing content items to determine candidate promotions. The nominators may include various types of nominators, each of which is used in generating different types of promotions. In many embodiments, nominator types may include recommender nominators, summary nominators, fact nominators, baseline nominators, and/or additional types of nominators.
In general, a promotion may provide some additional information related to the content item associated with the promotion. For example, the recommender nomination Fang Zai generates a hype that provides an explanation of why the recommendation engine selected the content item. In many implementations, the recommender nominator may utilize integrated path gradients, concept activation vectors, rationalized labels, and/or additional techniques that provide interpretation for a given content item. For example, the recommender nominator may generate the hype "this automated assistant client device is recommended because you own a smart thermostat (the automated assistant client is recommended because you own a smart thermostat)".
Summary nominators can be used when generating promotions by mining documents (e.g., comments on content, forum posts on content, descriptions of content, and/or additional documents related to content). For example, a summary nominator may generate the advertisement "Many reviews said this was a great restaurant for a date (many reviews say that this is a restaurant that the home is very good for an appointment)".
The fact nominator is used when generating a promotion based on facts about the content item. In various embodiments, the fact is unknown to the user. For example, a fact nominator may generate the advertisement "This movie has a lot of fun car chases (this movie has a large number of interesting car-following scenes)".
The baseline nominator is used when generating promotions based on heuristic search(s) that may be used, for example, to perform computation(s) on metadata corresponding to recommended items. For example, a promotion generated using a baseline nominator may include "80,000people liked this (there are 80000 people like this)"; "Ends in 3days (end within 3 days)"; "Hypothetical Band will be attending (assuming the band will be present)"; "You've visited this place before (You have visited this place before)"; "You have rated this place 5stars (you have scored this place as 5 stars)".
In various embodiments, a collection of nominators may include various types of nominators (e.g., the collection includes a recommendation nominator, a fact nominator, and a baseline nominator). Further, the collection of nominators may contain multiple nominators of the same type (e.g., a first fact nominator, a second fact nominator, and a third fact nominator). According to various embodiments, additional or alternative combinations of nominators may be included in a collection of nominators.
In some implementations, each nominator is used when generating a single promotion for each content item. In other implementations, each nominator is used in generating multiple campaigns for each content item (e.g., one nominator generates two campaigns, three campaigns, and/or an additional number of campaigns).
The hypes may be selected for presentation to the user based on the score determined for each candidate hype. The score may indicate a likelihood that the user will interact with the content item based on the particular candidate hype. Scoring systems that generate uniform types of scores across various types of nominators may be utilized. Different types of nominators may employ various data sources in generating candidate promotions. For example, the summarization nominator may utilize content reviews, the baseline nominator may utilize content item metadata, and so on.
In many implementations, the score of the candidate promotion may be determined using various sub-scores, such as a nominated party sub-score, a policy sub-score, an entity personalized sub-score, and/or additional sub-score(s). The nominator sub-score may indicate how relevant the nominator considers the promotion to be without using any user context (and may often be determined using the nominator itself). For example, the score of each nominator may be calibrated by using an offline process that monitors the distribution of the score across the project samples. In many implementations, the nomination sub-score depends on the hypes being scored and the items being recommended to the user.
Additionally or alternatively, policy sub-scores may predict how effective a particular promotional policy (i.e., a particular nominator) will be for a particular user. For example, one or more attributes of the user may be included in the user profile, such as attributes indicating that the user is cost-intensive. For cost-conscious users, it may be advantageous to promote price-based promotion policies. In other words, the policy sub-score may depend on the nominator that generated the promotion and the user profile of the user to whom the content is to be recommended.
In addition, the entity personalization sub-score may determine how relevant the candidate advertisement is to the particular user. In many implementations, the entity personalization sub-score may depend on the candidate hypes being scored and the user profile of the user to whom the content is being recommended. The entity personalization sub-score may capture how well the information contained in the promotion captures the user's topic interest (e.g., as indicated by the user profile).
Once a score is determined for each candidate hype, the hype may be selected to be rendered and/or verbally presented to the user with the recommended content item. In many implementations, the candidate hypes with the highest scores are selected. Additionally or alternatively, in implementations that include rendering one or more campaigns with each content item, each candidate campaign with a score above a threshold may be selected to be rendered to the user with the content item.
In many implementations, it may be determined whether a user interacts with a particular item of rendered content. Based on the determination, one or more nominators may be updated. For example, a nomination party that is used in generating a selected promotion may be updated when a user interacts with the content item and/or when a user does not interact with the content item. Additionally or alternatively, the nominator may be updated based on user interactions with the content. For example, all other nominators (excluding nominators that are used in generating the selected promotion) may be updated as the user interacts with the content item.
The recommended content may include an initial order in which to render the content items for the user. In many implementations, the score of the selected promotion corresponding to the content item may be used to change the order of the content items prior to rendering the content items.
Thus, various embodiments present techniques for enabling navigation to content desired by a user, by using a collective generated promotion of nominators, and doing so in a manner that makes navigation to that content more efficient. For example, candidate promotions may be identified based on a collective of nominators personalized for the user. These nominators may be personalized based on whether the user interacts with the content item based on the promotion. By providing a user with a promotion of content that is highly relevant to the user, the promotion may be used to more effectively identify content desired by the user.
By providing recommended content items with selected promotions, system resources (e.g., processor cycles, memory, battery power, and/or additional resources of the computing system) may be conserved. For example, a user may make a determination of whether he or she will interact with a content item more quickly, and in some cases may make a determination of whether to interact with the content item without having to select the content item. In other words, the promotion may reduce the likelihood that the user will select a content item and quickly make a determination that they do not wish to interact with the entire content item, thereby enabling the user to select additional content items. The reduction of interactions with multiple content items may shorten the duration of the overall user-system interaction, saving various resources by enabling the interaction to cease earlier. Additionally or alternatively, the time saved due to the reduced duration of the overall user-system interaction may lead to a higher satisfaction of the user with the product.
Other embodiments may include a non-transitory computer-readable storage medium storing instructions capable of being executed by one or more processors (e.g., central processor(s) (CPU (s)), graphics processing unit(s) (GPU (s)) and/or tensor processing unit(s) (TPU (s)) to perform a method such as one or more of the methods described above and/or elsewhere herein. Other embodiments may include a system of one or more computers and/or one or more robots comprising one or more processors capable of executing stored instructions to carry out methods such as one or more of the methods described above and/or elsewhere herein.
It should be appreciated that all combinations of the above concepts, as well as additional concepts described in more detail herein, are contemplated as being part of the subject matter disclosed herein. For example, all combinations of claimed subject matter appearing at the end of this disclosure are contemplated as being part of the subject matter disclosed herein.
Drawings
FIG. 1 illustrates an example environment in which various embodiments disclosed herein can be implemented.
FIG. 2 illustrates an example of generating an item promotion with a collection of nominators in accordance with various embodiments described herein.
FIG. 3 is a flowchart illustrating an example process of determining hypes to present with recommended content items according to various embodiments described herein.
FIG. 4 is a flowchart illustrating an example process of generating a candidate advertisement according to various embodiments described herein.
FIG. 5 is a flowchart illustrating an example process of scoring candidate hypes and using scores to select hypes to present with recommended content items according to various implementations described herein.
Fig. 6 illustrates another example environment in which various embodiments disclosed herein can be implemented.
FIG. 7 illustrates an example architecture of a computing device.
Detailed Description
FIG. 1 illustrates an example environment in which various embodiments disclosed herein may be implemented. The example environment of fig. 1 includes a client device 102 that may be associated with user interface input/output device(s) 104, content 118, and/or nominator 120. The client device 102 may include a recommendation engine 106 for generating recommended content items to be presented to a user of the client device, and may include a hype engine 108 for determining hypes to be presented with each recommended content item. In many implementations, the promotion engine 108 may include various additional and/or alternative engines, including a nominator engine 110, a promotion selection engine 112, a scorer engine 114, a re-ranker engine 116, and/or additional engine(s) (not depicted). The user interface input/output device(s) 104 may include, for example, a physical keyboard, a touch screen (e.g., implementing a virtual keyboard or other text input mechanism), a microphone, a camera, a display screen, speaker(s), and/or additional device(s) for capturing user input and/or rendering output for a user. The user interface input/output device 104 may be integrated with one or more client devices 102 of a user. For example, a user's mobile telephone may include user interface input/output device(s) 104; the stand-alone personal assistant hardware devices can include user interface input/output device(s) 104; or the first computing device may include user interface input device(s) 104 and the separate computing device may include user interface output device(s) 104; etc.
In some implementations, the client device 102 may include an automated assistant (not depicted), and all or more aspects of the automated assistant may be implemented on computing device(s) that are separate and apart from the computing device(s) containing the user interface input/output device(s) 104 (e.g., all or more aspects may be implemented in the "cloud"). In some of those implementations, those aspects of the automated assistant can communicate with the client device 102 via one or more networks (not depicted), such as a Local Area Network (LAN) and/or a Wide Area Network (WAN) (e.g., the internet).
Some non-limiting examples of client devices 102 that may include user interface input/output device(s) 104 include one or more of: a desktop computing device, a laptop computing device, a standalone hardware device dedicated at least in part to an automated assistant, a tablet computing device, a mobile phone computing device, a computing device of a user vehicle (e.g., an in-vehicle communication system, an in-vehicle entertainment system, an in-vehicle navigation system), or a wearable apparatus of a user that includes a computing device (e.g., a watch of a user with a computing device, glasses of a user with a computing device, virtual or augmented reality computing device). Additional and/or alternative client devices may be provided.
The client device 102 may include one or more memories for storage of data and software applications, one or more processors for accessing data and executing applications, and other components that facilitate communication over a network. The operations performed by the client device 102 may be distributed across multiple computing devices. For example, computing programs running on one or more computers in one or more locations may be coupled to each other through a network.
As shown in fig. 1, the client device 102 may determine recommended content items and promotions for those content items. The output device(s) of the user interface input/output device(s) 104 may be employed in rendering recommended content items and corresponding promotions for a user of a client device. As used herein, rendering content includes rendering the entire content item, rendering hyperlinks to the content item, rendering thumbnails identifying the content item, rendering summaries of the content item and/or additional representation(s) of the content item. The recommended content may include various digital content including: video, audio, images, web pages, news articles, videos, recipes, blog postings, electronic books, expression packs, social media postings, restaurant recommendations, and/or additional types of content that a user may interact with via the client device 102.
The recommendation engine 106 may generate one or more recommended content items, such as recommended one or more content items 108, for the user. For example, the recommendation engine may generate content 1, content 2, and content 3 as recommended content for the user. In many implementations, the recommended content items have an inherent order determined by the recommendation engine 106. In some implementations, the recommendation engine 106 can generate recommended content items in response to a request from a user (e.g., a natural language verbal request for content recommendation from a user). In additional and/or alternative implementations, the recommendation engine 106 may generate recommended content items for the user in advance. In various implementations, the recommendation engine 106 may be remote from the client device 102, such as the recommendation engine 106 determining a recommended content item via cloud computing and transmitting the recommended content item to the client device 102 via the internet. Additionally or alternatively, the recommendation engine 106 may be integrated as part of the hyping engine 108. In other words, the hype engine 108 may generate a recommended content item and determine hypes to present with the recommended content item.
Although the promotion engine 108 is shown as being integrated with the client device 102, this is not meant to be limiting. In various implementations, one or more components of the promotion engine 108 may be implemented in whole or in part on remote computing system(s) forming a "cloud" infrastructure. The hype engine 108 may include a nominator engine 110, a hype selection engine 112, a scorer engine 114, a re-ranker engine 116, and/or additional engine(s) (not depicted). The nominator engine 110 may generate candidate promotions for recommended content items using the nominator's collective 120. In some implementations, the nominator engine 110 can select a nominator collective from the nominators 120 to be employed in generating candidate promotions for recommended content items. Different nominator(s) may be associated with different types of content collectively. For example, the collective of nominators A, B, and C may be employed in generating promotions for recipe recommendations. In contrast, the collective of nominators D, E, F, and G may be employed in generating promotions for recommended news articles. Although this example illustrates non-overlapping nominator groups, nominator(s) included in the first group may overlap with nominator(s) included in the second group (e.g., nominators of the first type of content group include nominators A, B, C and D, and nominators of the second type of content group include nominators B, C, D, E and F). Additional and/or alternative nominator combinations may be included in the nominator group in accordance with the embodiments described herein.
The nominator engine 110 may employ nominator groups to generate candidate promotions for recommended content items. Each nominated party in the collection may be used to generate candidate hype(s) for each recommended content item. In many implementations, each nominated party in the collection can be used to generate a single candidate advertisement. Additionally or alternatively, in some implementations, each nominated party in the collection may be used to generate two, three, four, and/or other number(s) of candidate promotions. Further, in many embodiments, each nominated party in the collection may generate a different candidate recommendation. In some other implementations, two or more nominators may generate the same or substantially the same candidate promotions. For example, nominator A may generate a candidate advertisement "reviews say this a romantic restaurant for a date (commentary that is a romantic restaurant for a home appointment)", and nominator B may generate substantially the same advertisement "reviewers say this is a romantic restaurant for a date (commentary that is a romantic restaurant for a home appointment)".
Alternatively or additionally, the nominator engine 110 may be used to update one or more nominators in response to whether a user interacts with a recommended content item. For example, one or more parameters (e.g., one or more network weights) of one or more nominators may be updated via back propagation. In many implementations, nominators may be personalized to users by associating nominators with known profiles of users. In other words, the nominator of the user profile may be updated based on when the user associated with the profile interacted with (or did not interact with) the recommended content item. Known user profiles may be associated with a user based on one or more determined characteristics, such as voice signatures (e.g., text-independent voice identification, text-dependent voice identification, and/or other voice identification), facial recognition, image feeds, motion characteristics, and/or other data.
The hype selection engine 112 may select hypes to present with each recommended content item. The campaigns to be presented with the content item may be selected based on the score of each candidate campaign determined using the scorer engine 114 (described below). In many implementations, the hype selection engine 112 may select the candidate hype with the highest score for presentation with the recommended content item. Additionally or alternatively, the hype selection engine 112 may select more than one candidate hype to present with the recommended content item (e.g., content item A is rendered with hype 1 and hype 2). In some such implementations, the promotion selection Engine 112 may select the candidate promotion with the highest score, select all candidate promotions with scores meeting criteria (such as exceeding a threshold), and/or select candidate promotions based on other criteria.
The scorer engine 114 may determine a score for each candidate promotion according to various implementations. The score may indicate a likelihood that the user will interact with the content item based on the promotion. In many embodiments, the scores may be determined using various sub-scores, including nominated party sub-scores, policy sub-scores, entity personalized sub-scores, and/or additional sub-score(s). Utilizing various types of score information may provide a uniform score across nominators that determine candidate recommendations by accessing various different data sources. The nomination sub-score may depend on the scored candidate hypes and the content items recommended to the user. In other words, the nominator sub-score may indicate how relevant the nominator generating the candidate advertisement deems the candidate advertisement relevant. In many implementations, the nominator may itself be used to determine the nominator sub-score as part of the process of generating the candidate promotion. Additionally or alternatively, the scorer engine 114 may generate nominated party sub-scores.
The scorer engine 114 may determine policy sub-scores corresponding to candidate promotions. In many implementations, the policy sub-score may depend on the nominator generating the candidate hype and the user to whom the content is recommended. In other words, the policy sub-score provides an indication of how effective a particular promotion policy (i.e., a particular nominator) will be in generating a promotion for a particular user.
In addition, the scorer engine 114 may determine entity personalized sub-scores corresponding to the candidate promotions. In many implementations, the entity personalization sub-score may depend on the scored candidate hypes and the user profile associated with the user for whom the content is recommended. In other words, the entity personalized sub-score may provide an indication of how relevant the candidate advertisement is to a particular user.
As described above, recommending content items may include an order of how to render the content items for the user from the recommendation engine. For example, the recommendation may determine that content item A is to be rendered first, content item B is to be rendered second, and content item C is to be rendered third. The re-ranker engine 116 may utilize the score of the hypes selected to be provided with the content items to change the order in which the content items are rendered to the user. In other words, the re-ranker engine may be used to change the order in which content items are displayed to the user by first rendering the content items with which the user is more likely to interact (based on the hype score).
Additionally or alternatively, the hype engine 108 may integrate signals for other engines of the client device in scoring and/or ranking candidate hypes: including an emotion analyzer, grammar checker, consistency checker, and/or additional signals for improving the accuracy of the selected promotion and/or improving the user's ability to understand the promotion.
FIG. 2 illustrates an example of generating an item campaign utilizing nominators in a set according to various embodiments described herein. The recommendation engine 204 (which may correspond to and/or share characteristics with the recommendation engine 106 of fig. 1) selects one or more content items 202 to recommend to a user. For example, recommendation engine 204 may select item 1 206, item 2 208, and item N210. Additional and/or alternative content items may be selected for recommendation to the user. In various implementations, the recommendation engine 204 selects the content items 206, 208, 210 in response to a user request for content. For example, the user may provide a verbal request "show me devices that will work with my smart thermostat (i show a device that will work with my intelligent thermostat for me)", and recommendation engine 204 may determine items 1- "smart smoke detector (intelligent smoke detector)", item 2- "smart camera a)", and item N- "smart camera B)", as content items in response to the user request. Additionally or alternatively, the recommendation engine 204 may look ahead to determine content items to recommend to the user. For example, the system may determine that the user is in proximity to the client device and may look ahead to the recommended content items 206, 208, 210.
The recommended content items 206, 208, 210 may be processed using nominators groups such as nominator 1 212, nominator 2 214, and nominator M216. In many implementations, each nominator 212, 214, 216 can determine candidate campaigns corresponding to each recommended content item. Content item 1 and associated candidate hypes 218 may include hype 1 (determined using nominator 1 212), hype 2 (determined using nominator 2 214), and hype M (determined using nominator M216). Similarly, content item 2 and associated candidate hypes 220 may include hype 1 (determined using nominator 1 212), hype 2 (determined using nominator 2 214), and hype M (determined using nominator M216). Additionally or alternatively, content item N and associated candidate hypes 222 may include hype 1 (determined using nominator 1 212), hype 2 (determined using nominator 2 214), and hype M (determined using nominator M216).
The scorer engine 224 (which may correspond to or share characteristics with the scorer engine 114 of fig. 1) may determine a score for each candidate hype and select candidate hypes to be presented with the content item. For example, for content item 1 and corresponding candidate hypes 218, the scorer engine 224 may determine scores for candidate hype 1, candidate hype 2, and candidate hype M. Similarly, the scorer engine 224 may determine a score for each candidate hype of item 2 and corresponding candidate hype 220, and determine a score for each candidate hype of item N and corresponding candidate hype 222. In many embodiments, the score may be based on various sub-scores, including nominated party sub-scores, policy sub-scores, and entity personalization sub-scores. Determining scores for candidate promotions is described herein with respect to process 500 of fig. 5.
In many implementations, the recommended content item and the selected hype 226 may include, for example, item 1, hype i; item 2, propaganda j; and item N, promote k. The recommended content items and the selected hypes 226 may be rendered for the user via the client device.
FIG. 3 is a flowchart illustrating an example process 300 of rendering a content item and corresponding promotion, where a promotion is selected from a plurality of candidate promotions determined using a nominator group, in accordance with an embodiment disclosed herein. For convenience, the operations of the flowchart are described with reference to a system performing the operations. The system may include various components of various computer systems, such as one or more components of client device 102 of fig. 1. Furthermore, although the operations of process 300 are illustrated in a particular order, this is not meant to be limiting. One or more operations may be reordered, omitted, and/or added.
At block 302, the system receives content items recommended for a user of a client device. For example, a recommendation engine, such as recommendation engine 106 in FIG. 1 or recommendation engine 204 in FIG. 2, may be used to determine recommended content items. In many implementations, the recommendation engine is locally integrated with the system (e.g., the recommendation engine is local to the client device). Additionally or alternatively, the recommendation engine may be remote from the system (e.g., the recommendation engine is in the cloud and provides recommended content to the client device via the internet). For example, the system may receive a menu recommended for the user, such as "banana pancakes recipe (banana pancake menu)", "French toast recipe (French toast menu)", and "breakfast casserole recipe (breakfast baking menu)".
At block 304, the system determines candidate hypes for each recommended content item using the nominator group. Candidate hypes for the recommended content item may be determined using a set of nominators, where each nominator is used to determine a corresponding candidate hype. The process 400 of FIG. 4, as described herein, illustrates a process of determining candidate promotions using nominators collective. For example, the candidate promotions "this recipe was selected because you enjoy breakfast recipes (this recipe was selected because you like a breakfast recipe)", "this recipe is low in calories (this recipe is low calorie)", "this recipe was invented by Hypothetical Famous Chef (this recipe was invented by the hypothetical famous main kitchen)", and "80,000 people liked this recipe (80000 people like this recipe)" may be generated for the recommended content item "banana pancake recipe".
At block 306, the system selects a campaign to present with each content item using the score determined for each candidate campaign. In many implementations, the score for each candidate promotion may be determined based on a nominated party sub-score, a policy sub-score, an entity personalization sub-score, and/or additional factors. Determining scores for candidate promotions is described herein with respect to process 500 of fig. 5. Further, a campaign may be selected from the candidate campaigns based on the score for presentation to the user with the content item. For example, the candidate hype with the highest score may be selected for presentation with the content item. For example, candidate promotions for the recommended content item "banana pancake recipe" may be scored as: "this recipe is selected because you like breakfast recipe" -score 10; "this recipe is low calorie" -score 35; "this recipe was invented by the hypothetical well-known main kitchen" -score 30; "80000 people like this recipe" -score 21. In many implementations, the system may select the candidate hype with the highest score to present to the user with the content item (e.g., "this recipe is low calorie" because it has the highest score (35) of scores 10, 35, 30, and 21). Additionally or alternatively, the system may select the candidate hype with the lowest score to present with the content item (e.g., "this recipe is selected because you like a breakfast recipe" because it has the lowest score (10) of scores 10, 35, 30, and 21).
In various implementations, the system may select candidate promotions having a score above a threshold. For example, the system may select "this recipe is low calorie" and "this recipe was invented by a hypothetical well-known main kitchen" with a score above a threshold of 25. As another example, the system may select "this recipe is low calorie", "this recipe is invented by a hypothetical well-known main kitchen" and "80000 people like this recipe", which may be selected as a promotion because they have a score above the threshold 21.
In many implementations, a promotion to be presented with a content item may be selected to increase diversity with respect to the selected promotion. For example, the system may ensure diversity of campaigns to prevent all campaigns from being similar (e.g., to prevent each hype presented with a recommended recipe from being "low calorie" for that recipe). In many embodiments, a determinant point process may be employed for promotional diversity.
At block 308, the system renders the recommended content item and the corresponding selected hype for the user via the client device. For example, the system may render the recommended content items and the selected hypes via a screen, speakers, and/or additional user interface output device(s).
FIG. 4 is a flowchart illustrating an example process 400 of generating a candidate advertisement according to an embodiment disclosed herein. For convenience, the operations of the flowcharts are described with reference to systems performing the operations. The system may include various components of various computer systems, such as one or more components of client device 102 of fig. 1. Furthermore, although the operations of process 400 are illustrated in a particular order, this is not meant to be limiting. One or more operations may be reordered, omitted, and/or added.
At block 402, the system selects an unprocessed content item. For example, content items may be selected that do not have corresponding candidate promotions.
At block 404, the system processes the content item using the nominator to generate a candidate advertisement. For example, nominators of the nominator group that have not been used in generating candidate promotions may be selected.
At block 404, the system determines whether any nominators in the set of nominators are able to generate additional candidate promotions for the content item. If any nominators remain, the system reverts to block 402 before proceeding to block 404 and processes the content item with the unused nominators to generate additional candidate promotions and determines if any nominators in the collection have not been used. If all of the nominators in the nominator group have been used in generating the candidate advertisement, the system proceeds to block 406.
At block 406, the system determines whether any of the recommended content items have not been processed using the nominator group to generate candidate promotions. If no candidate hypes have been determined for the recommended content item(s), the system reverts back to block 402 and selects an unprocessed content item before proceeding to blocks 402, 404, and 406. If candidate promotions have been determined for all recommended content items, the system ends.
FIG. 5 is a flowchart illustrating an example process of determining scores for candidate promotions and selecting a promotion for presentation with a content item in accordance with an embodiment disclosed herein. For convenience, the operations of the flowcharts are described with reference to systems performing such operations. The system may include various components of various computer systems, such as one or more components of client device 102 of fig. 1. Furthermore, although the operations of process 500 are illustrated in a particular order, this is not meant to be limiting. One or more operations may be reordered, omitted, and/or added.
At block 502, the system selects an unprocessed recommended content item. For example, the system may determine that there are no content items for the selected promotion (e.g., content items with corresponding candidate promotions, and that a promotion to be presented with the content item has not been selected from the candidate promotions).
At block 504, the system selects unscored candidate promotions corresponding to the content item selected at block 502. As an illustrative example in accordance with many of the implementations disclosed herein, user a may be referred to content item B, where candidate hypes C are determined for the referred content item B using nominator D.
At block 506, the system determines a nominated party sub-score based on the candidate hypes and the selected content item. For example, candidate hype C and recommended content item B may be used to determine a nomination sub-score.
At block 508, the system determines a policy sub-score based on the nominator used in generating the candidate advertisement and the user's profile. For example, the policy sub-score may be determined using nominator D and one or more attributes in the user profile associated with user a.
At block 510, the system determines an entity personalization sub-score based on the candidate hypes (e.g., the candidate hypes selected at block 504) and the user's profile. For example, the entity personalization sub-score may be determined using one or more attributes in candidate advertisement C and the user profile associated with user a.
At block 512, the system determines a score for the candidate promotion using the nominated party sub-score determined at block 506, the policy sub-score determined at block 508, the entity personalization sub-score determined at block 510, and/or additional score components (e.g., additional sub-score(s), additional user information, etc.).
At block 514, the system determines whether any candidate promotions corresponding to the content item selected at block 502 have not been scored. If candidate hype(s) have not yet been scored, the system loops back to block 504 to select unscored candidate hypes before proceeding to blocks 506, 508, 510, and 512. If all candidate promotions corresponding to the selected content item have been scored, the system proceeds to block 516.
At block 516, the system uses the score of the candidate hypes corresponding to the content item to select a hype to present with the content item. For example, the system may select the candidate hype with the highest score.
At block 518, the system determines whether any recommended content items corresponding to the candidate hypes have not been processed. If so, the system reverts back to block 502 and selects an unprocessed content item with the corresponding candidate promotion before proceeding to blocks 504, 506, 508, 510, 512, and 514. If the system has selected a hype to be presented with each recommended content item, the system proceeds to block 520.
At block 520, the system renders the content item and the selected promotion for the user. Alternatively, the system may change the order in which one or more content items are rendered for the user based on the hype score of the selected hype. For example, the recommended content item may include item a, item B, and item C, where item a should be rendered first, item B should be rendered second, and item C should be rendered third. Item a may have a score of 5 for the selected hype, item B may have a score of 10 for the selected hype, and item C may have a score of 7 for the selected hype. In many implementations, the content items may be rendered in a new order based on the score of the selected promotion, with item B rendered first, item C rendered second, and item a rendered third.
Turning to fig. 6, one example environment in which embodiments disclosed herein may be implemented. Fig. 6 includes a client computing device 602 that executes an instance of an automated assistant client 604. The one or more cloud-based automation assistant components 610 can be implemented on one or more computing systems (collectively, "cloud" computing systems) communicatively coupled to the client device 602 via one or more local and/or wide area networks (e.g., the internet), indicated generally at 608.
With its interaction with one or more cloud-based automation assistant components 610, an instance of the automation assistant client 604 may appear from the perspective of the user to be a logical instance of the automation assistant 600 with which the user may conduct a human-machine conversation. Thus, it should be appreciated that in some embodiments, a user engaged with an automated assistant client 604 executing on a client device 602 may actually engage with a logical instance of his or her own automated assistant 600. For clarity and brevity, the term "automated assistant" as used herein as a "service" specific user will often refer to a combination of an automated assistant client 604 executing on a client device 602 operated by the user with one or more cloud-based automated assistant components 610 (which may be shared among the automated assistant clients of multiple client computing devices). It should also be appreciated that in some embodiments, the automated assistant 600 may respond to a request from any user, whether or not the user is actually "served" by a particular instance of the automated assistant 600.
The client computing device 602 may be, for example: a desktop computing device, a laptop computing device, a tablet computing device, a mobile phone computing device, a stand-alone interactive speaker, a smart appliance, and/or a user's wearable apparatus including a computing device (e.g., a user's watch with a computing device, a user's glasses with a computing device, a virtual or augmented reality computing device). Additional and/or alternative client computing devices may be provided. Additionally or alternatively, the operations of the client computing device 602 may be distributed among multiple computing devices. For example, one or more operations of the client computing device 602 may be distributed between the mobile smart phone and the vehicle computing device. Further, the operation of the client computing device 602 may be repeated among multiple computing devices (which may be communicatively coupled in some cases). As a further example, the mobile smart phone and the vehicle interface device may each implement operations of the automated assistant 600, such as both the mobile smart phone and the vehicle interface device including a call engine (described below). In various implementations, the client computing device 602 can optionally operate one or more other applications in addition to the automated assistant client 604, such as a message exchange client (e.g., SMS, MMS, online chat), browser, and so forth. In some of those various embodiments, one or more of the other applications may optionally interface with the automation assistant 604 (e.g., via an application programming interface), or include their own instances of the automation assistant application (which may also interface with the cloud-based automation assistant component(s) 610).
The automated assistant 600 performs a human-machine conversation with a user via user interface input and output devices (not drawn) of the client device. In order to preserve user privacy and/or conserve resources, in many cases, the user must often explicitly invoke the automated assistant 600 before the automated assistant will fully process the spoken utterance. Explicit invocation of the automated assistant 600 may occur in response to certain user interface inputs received at the client device 602. For example, invoking the user interface input of the automated assistant 600 via the client device 602 may optionally include activation of hardware and/or virtual buttons of the client device 602. Further, the automated assistant client may include one or more local engines 606, such as a call engine capable of operating to detect the presence of one or more spoken call phrases. The invocation engine may invoke the automated assistant 600 in response to detecting one or more spoken invocation phrases. For example, the invocation engine may invoke the automated Assistant 600 in response to detecting a spoken invocation phrase such as "Hey Assistant", "OK Assistant", and/or "Assistant". The invocation engine may continue processing (e.g., if not in "inactive" mode) the stream of audio data frames based on output from the one or more microphones of the client device 602 to monitor for the occurrence of spoken invocation phrases. While monitoring for the occurrence of the spoken call phrase, the call engine discards (e.g., after temporary storage in a buffer) any frames of audio data that do not include the spoken call phrase. However, when the invocation engine detects the occurrence of a spoken invocation phrase in the processed frame of audio data, the invocation engine may invoke the automated assistant 600. As used herein, "invoking" the automated assistant 600 may include causing one or more previously inactive functions of the automated assistant 600 to be activated. For example, invoking the automated assistant 600 may include causing one or more local engines 606 and/or cloud-based automated assistant components 610 to further process the audio data frames based on which invocation phrase was detected, and/or one or more subsequent audio data frames (without further processing of the audio data frames occurring prior to invocation).
The one or more logic engines 604 of the automated assistant 604 are optional and may include, for example, the invocation engine described above, a local speech-to-text (STT) engine that converts captured audio to text, a local text-to-speech (TTS) engine that converts text to speech, a local natural language processor that determines semantic meaning of audio and/or text converted from audio, and/or other local components. Because the client device 602 is relatively limited in terms of computing resources (e.g., processor cycles, memory, battery, etc.), the local engine 606 may have limited functionality relative to any counterpart included in the cloud-based automation assistant component 610.
The automated assistant client 604 may additionally include a content proxy engine (not drawn) that may be employed by the automated assistant client 604 according to various embodiments, including: generating a content proxy, determining content associated with the user request using the content proxy, determining content using the content proxy without receiving the user request, and so forth.
The cloud-based automation assistant component 610 utilizes virtually unlimited cloud resources to perform more robust and/or more accurate processing of audio data and/or other user interface inputs relative to any counterpart of the local engine(s) 606. Likewise, in various implementations, the client device 602 may provide audio data and/or other data to the cloud-based automation assistant component 610 in response to the invocation engine detecting a spoken invocation phrase, or detecting some other explicit invocation of the automation assistant 600.
The illustrated cloud-based automation assistant component 610 includes a cloud-based TTS module 612, a cloud-based STT module 614, and a natural language processor 616. In some implementations, one or more of the engines and/or modules of the automated assistant 600 may be omitted, combined, and/or implemented in a component separate from the automated assistant 600. Further, in some implementations, the automated assistant 600 may include additional and/or alternative engines and/or modules.
The cloud-based STT module 614 may convert the audio data to text, which may then be provided to the natural language processor 616. In various implementations, the cloud-based STT module 614 may convert the audio data to text based at least in part on the indication of the speaker tag and the assignment provided by the assignment engine (not shown).
The cloud-based TTS module 612 can convert text data (e.g., a natural language response expressed by the automated assistant 600) into a computer-generated speech output. In some implementations, TTS module 612 can provide the computer-generated speech output to client device 602 for direct output, e.g., using one or more speakers. In other implementations, the text data (e.g., natural language response) generated by the automated assistant 600 can be provided to one of the local engine(s) 606, which can then convert the text data into locally output computer-generated speech.
The natural language processor 616 of the automated assistant 600 processes the free-form natural language input and generates annotation output for use by one or more other components of the automated assistant 600 based on the natural language input. For example, the natural language processor 616 may process free form input of natural language as text input to the conversion of audio data provided by the user via the client device 602 by the STT module 614. The generated annotation output may include one or more annotations of the natural language input and optionally one or more (e.g., all) terms of the natural language input. In some implementations, the natural language processor 616 is configured to identify and annotate various types of grammar information in the natural language input. For example, the natural language processor 616 may include a portion of a voice annotator (not depicted) configured to annotate terms with their grammatical roles. Also, for example, in some implementations, the natural language processor 616 can additionally and/or alternatively include a dependency analyzer (not depicted) configured to determine syntactic relationships between terms in the natural language input.
In some implementations, the natural language processor 616 can additionally and/or alternatively include an entity annotator (not depicted) configured to annotate entity references in one or more segments, such as references to persons (e.g., including literature roles, celebrities, public personas, etc.), organizations, locations (real and imaginary), and so forth. The entity annotators of the natural language processor 616 can annotate references to entities at a high level of granularity (e.g., to enable identification of all references to entity categories such as people) and/or at a lower level of granularity (e.g., to enable identification of all references to specific entities such as specific people). The entity annotator can rely on the content of the natural language input to parse a particular entity and/or can optionally communicate with knowledge graphs or other entity data to parse a particular entity.
In some implementations, the natural language processor 616 can additionally and/or alternatively include a co-fingering parser (not depicted) configured to group or "cluster" references to the same entity based on one or more contextual cues. For example, the co-index parser may be used to parse the term "thers" in the natural language input "I liked Hypothetical Caf e last time we ate there (where me likes hypo-logical cafe the last time we eat there)" into "hypo-logical cafe.
In some implementations, one or more components of the natural language processor 616 may rely on annotations from one or more other components of the natural language processor 616. For example, in some implementations, a named entity annotator may rely on annotations from a co-fingering resolver and/or a dependency analyzer when annotating all of the notes for a particular entity. Moreover, for example, in some implementations, the co-fingering parser may rely on annotations from the dependency analyzer when clustering references to the same entity. In some implementations, one or more components of the natural language processor 616 can use related prior inputs and/or other related data beyond the particular natural language input to determine one or more annotations when processing the particular natural language input.
FIG. 7 is a block diagram of an example computing device 710 that may optionally be used to implement one or more aspects of the techniques described herein. In some implementations, the one or more client computing devices, and/or other component(s), may include one or more components of the example computing device 710.
User interface input devices 722 may include a keyboard, a pointing device such as a mouse, trackball, touch pad, or graphics pad, a scanner, a touch screen integrated into a display, an input device such as a voice recognition system, microphone, and/or other types of input devices. In general, use of the term "input device" is intended to include all possible types of devices and ways to input information into computing device 710 or onto a communication network.
The user interface output device 720 may include a display subsystem, a printer, a facsimile machine, or a non-visual display such as an audio output device. The display subsystem may include a Cathode Ray Tube (CRT), a flat panel device such as a Liquid Crystal Display (LCD), a projection device, or some other mechanism for creating visual images. The display subsystem may also provide for non-visual displays, such as via an audio output device. In general, use of the term "output device" is intended to include all possible types of devices and manners for outputting information from the computing device 710 to a user, or to another machine or computing device.
These software modules are typically executed by processor 714, either alone or in combination with other processors. The memory 725 used in the storage subsystem 724 may include a plurality of memories including a main Random Access Memory (RAM) 730 for storage of instructions and data during program execution and a Read Only Memory (ROM) 732 in which fixed instructions are stored. File storage subsystem 726 may provide persistent storage for program and data files, and may include a hard disk drive, a floppy disk drive along with associated removable media, a CD-ROM drive, an optical drive, or a removable media cartridge. Modules implementing the functions of certain embodiments may be stored by file storage subsystem 726 in storage subsystem 724, or other machines accessible by processor(s) 714.
Further, some implementations include one or more processors (e.g., central processor(s) (CPU (s)), graphics processing unit(s) (GPU (s)) and/or tensor processing unit(s) (TPU (s)) of one or more computing devices, wherein the one or more processors are operable to execute instructions stored in an associated memory, and wherein the instructions are configured to cause performance of any of the methods described herein. Some implementations also include one or more non-transitory computer-readable storage media storing computer instructions executable by the one or more processors to perform any of the methods described herein.
Where the system described herein gathers or may utilize personal information about a user (or "participant" as often referred to herein), the user may be provided with an opportunity to control whether programs or features gather user information (e.g., information about the user's social network, social actions or activities, profession, user preferences, or the user's current geographic location), or whether and/or how to receive content from a content server that may be more relevant to the user. Moreover, certain data may be processed in one or more ways before it is stored or used such that personally identifiable information is removed. For example, the identity of the user may be processed such that personally identifiable information cannot be determined for the user, or the geographic location of the user may be generalized (such as to a city, zip code, or state level) where location information is obtained such that a specific location of the user cannot be determined. Thus, a user may control how information about the user is collected and/or used.
In some implementations, a method implemented by one or more processors is provided that includes receiving a plurality of content items to be recommended to a user of a client device. For each content item to be recommended for the user, the method further includes determining a plurality of candidate hypes corresponding to the content item by processing the content item using a plurality of nominators, each nominator generating one of the candidate hypes, wherein each candidate hype is a natural language explanation of why the user should interact with the content item. The method further includes determining a score for each candidate hype by processing a plurality of candidate hypes corresponding to the content item using a ranking agent, wherein the score indicates a likelihood that the user will interact with the content item based on the candidate hype, and wherein the ranking agent uniformly determines the score across the plurality of nominators. The method further includes selecting a campaign from the plurality of candidate campaigns to present with the content item based on the score of each candidate campaign corresponding to the content item. The method further includes rendering, via one or more user interface output devices of the client device, the plurality of content items and the selected promotion corresponding to the plurality of items for the user.
These and other implementations of the technology disclosed herein can include one or more of the following features.
In some implementations, the plurality of nominators includes various types of nominators, and wherein each type of nominator generates the candidate advertisement based on a different corpus of information related to the content item. In some embodiments, the various types of nominators are selected from a recommender nominator, a summarization nominator, a fact nominator, and a baseline nominator. In some embodiments, the plurality of nominators comprises a plurality of nominators of the same type.
In some implementations, the natural language interpretation of why the user should interact with the content item includes a dialogue with the user via the client device.
In some implementations, the natural language interpretation of why the user should interact with the content item includes phrases rendered for the user via the client device.
In some implementations, determining the score for each candidate hype by processing a plurality of candidate hypes corresponding to the content item using a ranking agent further includes determining a nominator sub-score based on the candidate hype and the content item. In some implementations, the method further includes determining a policy sub-score based on the nominator corresponding to the candidate advertisement and a user profile associated with the user. In some implementations, the method further includes determining an entity personalized sub-score based on the candidate advertisement and a user profile associated with the user. In some implementations, the method further includes determining the score based on the nominated party sub-score, the policy sub-score, and the entity personalization sub-score.
In some implementations, selecting a campaign from the plurality of candidate campaigns based on the score of each candidate campaign corresponding to the content item to present with the content item includes selecting a campaign with a highest score value from the plurality of candidate campaigns.
In some implementations, selecting a campaign from the plurality of candidate campaigns to present with the content item based on the score of each candidate campaign corresponding to the content item further includes: a plurality of campaigns corresponding to each content item is selected, wherein each selected campaign of the plurality of campaigns has a score that exceeds a threshold.
In some implementations, the method further includes each nominator generating a plurality of candidate promotions for each content item.
In some implementations, selecting a campaign from the plurality of candidate campaigns for presentation with the content item further includes: mechanisms are utilized to ensure diversity of selected campaigns corresponding to each of the plurality of content items. In some implementations, this mechanism for ensuring diversity of selected promotions is a determinant point process.
In some implementations, the method further includes determining whether the user interacted with the particular content item determined using the particular nominator after rendering the plurality of content items and the selected promotion corresponding to the plurality of items. In some implementations, the method further includes updating the particular nominator based on user interaction with the particular content item. In some implementations, the method further includes updating each nominator of the plurality of nominators excluding the particular nominator based on user interaction with the particular content item.
In some implementations, the plurality of content items recommended to the user are determined using a recommendation agent of an automated assistant client of the client device. In some implementations, the plurality of content items recommended by the recommendation engine includes an initial order in which the plurality of content items are rendered for the user, and the method further includes reordering the content items and the selected hypes based on the determined scores before rendering the plurality of content items and the selected hypes for the user.
In some implementations, a method implemented by one or more processors is provided that includes receiving a plurality of content items to be presented to a user of a client device. For each content item to be recommended for the user, the method further includes determining a plurality of candidate hypes corresponding to the content item by processing the content item using a plurality of nominators, each nominator generating one of the candidate hypes, wherein each candidate hype provides a natural language description of information related to the content item. The method further includes determining a score for each candidate hype by processing a plurality of candidate hypes corresponding to the content item using a ranking agent, wherein the score indicates a likelihood that the user will interact with the content item based on the candidate hype, and wherein the ranking agent uniformly determines the score across the plurality of nominators. The method further includes selecting a campaign from the plurality of candidate campaigns to present with the content item based on the score of each candidate campaign corresponding to the content item. The method further includes rendering, via one or more user interface output devices of the client device, the plurality of content items and the selected promotion corresponding to the plurality of items for the user.
These and other implementations of the technology disclosed herein can include one or more of the following features.
In some implementations, the plurality of nominators includes various types of nominators, and wherein each type of nominator generates the candidate advertisement based on a different corpus of information related to the content item. In some embodiments, the various types of nominators are selected from a recommender nominator, a summarization nominator, a fact nominator, and a baseline nominator. In some embodiments, the plurality of nominators comprises a plurality of nominators of the same type.
In some implementations, the promotion includes a conversation with the user via the client device.
In some implementations, the promotion includes a phrase rendered for the user via the client device.
In some implementations, determining the score for each candidate hype by processing a plurality of candidate hypes corresponding to the content item using a ranking agent includes determining a nominated party sub-score based on the candidate hype and the content item. In some implementations, the method further includes determining a policy sub-score based on the nomadic party corresponding to the candidate advertisement and a user profile associated with the user. In some implementations, the method further includes determining an entity personalized sub-score based on the candidate advertisement and a user profile associated with the user. In some implementations, the method further includes determining the score based on the nominated party sub-score, the policy sub-score, and the entity personalization sub-score.
In some implementations, selecting a campaign from the plurality of candidate campaigns based on the score of each candidate campaign corresponding to the content item to present with the content item includes selecting a campaign with a highest score value from the plurality of candidate campaigns.
In some implementations, selecting a campaign from the plurality of candidate campaigns to present with the content item based on the score of each candidate campaign corresponding to the content item further includes: a plurality of campaigns corresponding to each content item is selected, wherein each selected campaign of the plurality of campaigns has a score that exceeds a threshold.
In some implementations, the method further includes each nominator generating a plurality of candidate promotions for each content item.
In some implementations, selecting a campaign from the plurality of candidate campaigns for presentation with the content item further includes: mechanisms are utilized to ensure diversity of selected campaigns corresponding to each of the plurality of content items. In some implementations, this mechanism for ensuring diversity of selected promotions is a determinant point process.
In some implementations, the method further includes determining whether the user interacted with the particular content item determined using the particular nominator after rendering the plurality of content items and the selected promotion corresponding to the plurality of items. In some implementations, the method further includes updating the particular nominator based on user interaction with the particular content item. In some implementations, the method further includes updating each nominator of the plurality of nominators excluding the particular nominator based on user interaction with the particular content item.
In some implementations, the plurality of content items to be presented to the user is determined using a recommendation agent of an automated assistant client of the client device. In some implementations, the plurality of content items recommended by the recommendation engine includes an initial order in which the plurality of content items are rendered for the user, and further includes reordering the plurality of content items and the selected hype before rendering the plurality of content items and the selected hype for the user.
Claims (20)
1. A method implemented by one or more processors for generating content promotions, the method comprising:
receiving a plurality of content items to be recommended for a user of a client device;
for each content item to be recommended for the user:
determining a plurality of candidate promotions corresponding to the content item by processing the content item using a plurality of nominators, each nominator generating one of the candidate promotions, wherein each candidate promotion provides a natural language description of information related to the content item;
determining a score for each candidate hype by processing the plurality of candidate hypes corresponding to the content item using a ranking agent, wherein the score indicates a likelihood that the user will interact with the content item based on the candidate hypes, and wherein the ranking agent uniformly determines the score across the plurality of nominators;
Selecting a campaign from the plurality of candidate campaigns to present with the content item based on the score for each candidate campaign corresponding to the content item; and
the plurality of content items and the selected promotions corresponding to the plurality of items are rendered to the user via one or more user interface output devices of the client device.
2. The method of claim 1, wherein the plurality of nominators comprises various types of nominators, and wherein each type of nominator generates a candidate advertisement based on a different corpus of information related to the content item.
3. The method of claim 2, wherein the various types of nominators are selected from a recommender nominator, a summarization nominator, a fact nominator, and a baseline nominator.
4. The method of claim 2, wherein the plurality of nominators comprises a plurality of nominators of the same type.
5. The method of claim 1, wherein the promotion comprises a conversation with the user via the client device.
6. The method of claim 1, wherein the promotion comprises a phrase rendered for the user via the client device.
7. The method of claim 1, wherein determining the score for each candidate hype by processing the plurality of candidate hypes corresponding to the content item using the ranking agent comprises:
determining a nominated party sub-score based on the candidate promotion and the content item;
determining a policy sub-score based on the nominator corresponding to the candidate advertisement and a user profile associated with the user;
determining an entity personalized sub-score based on the candidate hypes and the user profile associated with the user;
the score is determined based on the nominated party sub-score, the policy sub-score, and the entity personalized sub-score.
8. The method of claim 1, wherein selecting the promotion from the plurality of candidate promotions for presentation with the content item based on the score for each candidate promotion corresponding to the content item comprises:
the promotion having the highest score value of the plurality of candidate promotions is selected.
9. The method of claim 1, wherein selecting the promotion from the plurality of candidate promotions for presentation with the content item based on the score for each candidate promotion corresponding to the content item further comprises:
A plurality of campaigns corresponding to each content item is selected, wherein each selected campaign of the plurality of campaigns has a score that exceeds a threshold.
10. The method of claim 1, further comprising each nominator generating a plurality of candidate promotions for each content item.
11. The method of claim 1, wherein selecting the promotion from the plurality of candidate promotions for presentation with the content item further comprises:
mechanisms are utilized to ensure diversity of selected campaigns corresponding to each of the plurality of content items.
12. The method of claim 11, wherein the mechanism for ensuring diversity of the selected promotions is a determinant point process.
13. The method of claim 1, further comprising:
after rendering the plurality of content items and the selected promotions corresponding to the plurality of items, determining whether the user interacted with the particular content item determined using the particular nominator; and
the particular nominator is updated based on the user interacting with the particular content item.
14. The method of claim 13, further comprising:
Updating each nominator of the plurality of nominators excluding the particular nominator based on the user interacting with the particular content item.
15. The method of any of claims 1-14, wherein the plurality of content items to be presented to the user are determined using a recommendation agent of an automated assistant client of the client device.
16. The method of claim 15, wherein the plurality of content items determined by the recommendation agent includes an initial order in which the plurality of content items are rendered for the user, and further comprising:
the content items and the selected hypes are reordered based on the determined scores prior to rendering the plurality of content items and the selected hypes for the user.
17. One or more non-transitory computer-readable media comprising instructions that, when executed by one or more processors of a computing system, cause the computing system to:
receiving a plurality of content items to be recommended for a user of a client device;
for each content item to be recommended for the user:
determining a plurality of candidate promotions corresponding to the content item by processing the content item using a plurality of nominators, each nominator generating one of the candidate promotions, wherein each candidate promotion is a natural language description of information related to the content item;
Determining a score for each candidate hype by processing the plurality of candidate hypes corresponding to the content item using a ranking agent, wherein the score indicates a likelihood that the user will interact with the content item based on the candidate hypes, and wherein the ranking agent uniformly determines the score across the plurality of nominators;
selecting a campaign from the plurality of candidate campaigns to present with the content item based on the score for each candidate campaign corresponding to the content item; and
the plurality of content items and the selected promotions corresponding to the plurality of items are rendered to the user via one or more user interface output devices of the client device.
18. The one or more non-transitory computer-readable media of claim 17, wherein the plurality of nominators comprises various types of nominators, and wherein each type of nominator generates candidate promotions based on a different corpus of information related to the content item.
19. The one or more non-transitory computer-readable media of claim 18, wherein the various types of nominators are selected from a recommender nominator, a summarization nominator, a fact nominator, and a baseline nominator.
20. A system comprising one or more processors and a memory storing instructions that, in response to execution of the instructions by the one or more processors, cause the one or more processors to:
receiving a plurality of content items to be recommended for a user of a client device;
for each content item to be recommended for the user:
determining a plurality of candidate promotions corresponding to the content item by processing the content item using a plurality of nominators, each nominator generating one of the candidate promotions, wherein each candidate promotion is a natural language description of information related to the content item;
determining a score for each candidate hype by processing the plurality of candidate hypes corresponding to the content item using a ranking agent, wherein the score indicates a likelihood that the user will interact with the content item based on the candidate hypes, and wherein the ranking agent uniformly determines the score across the plurality of nominators;
selecting a campaign from the plurality of candidate campaigns to present with the content item based on the score for each candidate campaign corresponding to the content item; and
The plurality of content items and the selected promotions corresponding to the plurality of items are rendered to the user via one or more user interface output devices of the client device.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201962843886P | 2019-05-06 | 2019-05-06 | |
US62/843,886 | 2019-05-06 | ||
PCT/US2019/034926 WO2020226666A1 (en) | 2019-05-06 | 2019-05-31 | Generating content endorsements using machine learning nominator(s) |
Publications (2)
Publication Number | Publication Date |
---|---|
CN113785540A CN113785540A (en) | 2021-12-10 |
CN113785540B true CN113785540B (en) | 2023-07-07 |
Family
ID=66998498
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201980096013.4A Active CN113785540B (en) | 2019-05-06 | 2019-05-31 | Method, medium and system for generating content promotions using machine learning nominators |
Country Status (4)
Country | Link |
---|---|
US (2) | US11842206B2 (en) |
EP (1) | EP3942744A1 (en) |
CN (1) | CN113785540B (en) |
WO (1) | WO2020226666A1 (en) |
Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN101556622A (en) * | 2008-04-11 | 2009-10-14 | 纳珀企业有限责任公司 | Providing expected desirability information prior to sending a recommendation |
CN102316046A (en) * | 2010-06-29 | 2012-01-11 | 国际商业机器公司 | The method and apparatus of the user's recommendation information in social networks |
CN103229203A (en) * | 2010-11-23 | 2013-07-31 | 阿克塞尔斯普林格数字电视指导有限责任公司 | Recommender system for stimulating a user to recommend an item to a contact of the user |
CN104281962A (en) * | 2013-07-01 | 2015-01-14 | 雅虎公司 | Unified marketplace for advertisements and content in an online system |
CN104281961A (en) * | 2013-07-01 | 2015-01-14 | 雅虎公司 | Quality scoring system for advertisements and content in an online system |
CN104903929A (en) * | 2012-11-12 | 2015-09-09 | 谷歌公司 | Providing content recommendation to users on a site |
CN106469398A (en) * | 2016-09-30 | 2017-03-01 | 华南理工大学 | Method is recommended in a kind of separate type mixing moving advertising |
Family Cites Families (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6317722B1 (en) | 1998-09-18 | 2001-11-13 | Amazon.Com, Inc. | Use of electronic shopping carts to generate personal recommendations |
US8370203B2 (en) * | 2002-10-07 | 2013-02-05 | Amazon Technologies, Inc. | User interface and methods for recommending items to users |
US8260787B2 (en) * | 2007-06-29 | 2012-09-04 | Amazon Technologies, Inc. | Recommendation system with multiple integrated recommenders |
US10210536B1 (en) * | 2013-11-25 | 2019-02-19 | Groupon, Inc. | Predictive recommendation system using price boosting |
US10191927B2 (en) * | 2014-04-02 | 2019-01-29 | Facebook, Inc. | Selecting previously-presented content items for presentation to users of a social networking system |
EP3164842A4 (en) * | 2014-07-01 | 2017-11-08 | Google LLC | Systems and methods for suggesting creative types for online content items to advertiser |
US10460247B2 (en) * | 2015-12-08 | 2019-10-29 | Adobe Inc. | Attribute weighting for media content-based recommendation |
US11907272B2 (en) * | 2017-02-17 | 2024-02-20 | Microsoft Technology Licensing, Llc | Real-time personalized suggestions for communications between participants |
JP7325923B2 (en) * | 2017-08-16 | 2023-08-15 | 穂光 田中 | Flower Bed Ordering System, Flower Bed Ordering Program, and Flower Bed Ordering Method |
US20200175078A1 (en) * | 2017-09-11 | 2020-06-04 | Hitachi, Ltd. | Multiple intent interpreter and recommender |
KR20190057687A (en) * | 2017-11-20 | 2019-05-29 | 삼성전자주식회사 | Electronic device and Method for changing Chatbot |
US10657934B1 (en) * | 2019-03-27 | 2020-05-19 | Electronic Arts Inc. | Enhancements for musical composition applications |
-
2019
- 2019-05-31 US US17/608,700 patent/US11842206B2/en active Active
- 2019-05-31 EP EP19732180.5A patent/EP3942744A1/en active Pending
- 2019-05-31 WO PCT/US2019/034926 patent/WO2020226666A1/en unknown
- 2019-05-31 CN CN201980096013.4A patent/CN113785540B/en active Active
-
2023
- 2023-12-06 US US18/530,995 patent/US20240103893A1/en active Pending
Patent Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN101556622A (en) * | 2008-04-11 | 2009-10-14 | 纳珀企业有限责任公司 | Providing expected desirability information prior to sending a recommendation |
CN102316046A (en) * | 2010-06-29 | 2012-01-11 | 国际商业机器公司 | The method and apparatus of the user's recommendation information in social networks |
CN103229203A (en) * | 2010-11-23 | 2013-07-31 | 阿克塞尔斯普林格数字电视指导有限责任公司 | Recommender system for stimulating a user to recommend an item to a contact of the user |
CN104903929A (en) * | 2012-11-12 | 2015-09-09 | 谷歌公司 | Providing content recommendation to users on a site |
CN104281962A (en) * | 2013-07-01 | 2015-01-14 | 雅虎公司 | Unified marketplace for advertisements and content in an online system |
CN104281961A (en) * | 2013-07-01 | 2015-01-14 | 雅虎公司 | Quality scoring system for advertisements and content in an online system |
CN106469398A (en) * | 2016-09-30 | 2017-03-01 | 华南理工大学 | Method is recommended in a kind of separate type mixing moving advertising |
Also Published As
Publication number | Publication date |
---|---|
US20240103893A1 (en) | 2024-03-28 |
EP3942744A1 (en) | 2022-01-26 |
CN113785540A (en) | 2021-12-10 |
US20220229676A1 (en) | 2022-07-21 |
US11842206B2 (en) | 2023-12-12 |
WO2020226666A1 (en) | 2020-11-12 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11929072B2 (en) | Using textual input and user state information to generate reply content to present in response to the textual input | |
JP7443407B2 (en) | Automated assistant with conferencing capabilities | |
CN109952572B (en) | Suggested response based on message decal | |
CN109983430B (en) | Determining graphical elements included in an electronic communication | |
CN110770694B (en) | Obtaining response information from multiple corpora | |
US11200893B2 (en) | Multi-modal interaction between users, automated assistants, and other computing services | |
CN112868060A (en) | Multimodal interactions between users, automated assistants, and other computing services | |
US11036285B2 (en) | Systems and methods for mixed reality interactions with avatar | |
Glasser et al. | Accessibility for deaf and hard of hearing users: Sign language conversational user interfaces | |
Liu et al. | Visual captions: Augmenting verbal communication with on-the-fly visuals | |
US20230274090A1 (en) | Recommending action(s) based on entity or entity type | |
CN113785540B (en) | Method, medium and system for generating content promotions using machine learning nominators | |
CN113767379B (en) | Rendering content using content agents and/or stored content parameters |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
GR01 | Patent grant | ||
GR01 | Patent grant |
US9239747B1 - Image timestamp correction using metadata - Google Patents
Image timestamp correction using metadata Download PDFInfo
- Publication number
- US9239747B1 US9239747B1 US14/027,581 US201314027581A US9239747B1 US 9239747 B1 US9239747 B1 US 9239747B1 US 201314027581 A US201314027581 A US 201314027581A US 9239747 B1 US9239747 B1 US 9239747B1
- Authority
- US
- United States
- Prior art keywords
- timestamps
- timestamp
- metadata
- images
- implementations
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/07—Responding to the occurrence of a fault, e.g. fault tolerance
- G06F11/0703—Error or fault processing not based on redundancy, i.e. by taking additional measures to deal with the error or fault not making use of redundancy in operation, in hardware, or in data representation
- G06F11/0751—Error or fault detection not based on redundancy
- G06F11/0754—Error or fault detection not based on redundancy by exceeding limits
- G06F11/0757—Error or fault detection not based on redundancy by exceeding limits by exceeding a time limit, i.e. time-out, e.g. watchdogs
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/07—Responding to the occurrence of a fault, e.g. fault tolerance
- G06F11/0703—Error or fault processing not based on redundancy, i.e. by taking additional measures to deal with the error or fault not making use of redundancy in operation, in hardware, or in data representation
- G06F11/0706—Error or fault processing not based on redundancy, i.e. by taking additional measures to deal with the error or fault not making use of redundancy in operation, in hardware, or in data representation the processing taking place on a specific hardware platform or in a specific software environment
- G06F11/0709—Error or fault processing not based on redundancy, i.e. by taking additional measures to deal with the error or fault not making use of redundancy in operation, in hardware, or in data representation the processing taking place on a specific hardware platform or in a specific software environment in a distributed system consisting of a plurality of standalone computer nodes, e.g. clusters, client-server systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/50—Information retrieval; Database structures therefor; File system structures therefor of still image data
- G06F16/58—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
- G06F16/5866—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually using information manually generated, e.g. tags, keywords, comments, manually generated location and time information
Definitions
- Social network systems often enable users to upload media content such as photos, and enable users to create photo albums. Social network systems also enable users to share photos with each other.
- a user can create a photo album that is associated with the user's profile. As the owner of the photo album, the user can then allow other users to view the photo album when visiting the photo section of the user's profile.
- Photos may have associated metadata created by digital cameras and by smartphones with embedded cameras, which might not be accurate.
- Implementations generally relate to improving metadata.
- a method includes determining timestamps, where the timestamps correspond to images. The method also includes determining one or more reference times based on predetermined metadata. The method also includes detecting a timestamp error in one or more timestamps based on the one or more reference times. The method also includes adjusting each timestamp having a timestamp error based on the one or more reference times.
- the reference times include an internal clock reset time associated with a particular camera device.
- the reference times include times associated with an event.
- the predetermined metadata includes one or more of image metadata, location metadata, event metadata, and camera device metadata.
- the detecting of a timestamp error in one or more timestamps includes: comparing each timestamp to the one or more reference times; and detecting a difference between at least one timestamp and the one or more reference times, where the difference meets a predetermined difference criteria.
- the detecting of a timestamp error in one or more timestamps includes: determining timestamps associated with a sequence of images; determining one or more reference times from the tracked timestamps; and detecting jumps in time in a given timestamp from the other timestamps in the same sequence.
- the adjusting of the one or more timestamps having a timestamp error includes adjusting one or more timestamps that are related, and where the adjusted one or more timestamps are related based on one or more relationship criteria.
- the adjusting of the one or more timestamps having a timestamp error includes adjusting one or more timestamps by a constant offset.
- a method includes determining timestamps, where the timestamps correspond to images.
- the method further includes determining one or more reference times based on predetermined metadata, where the reference times include an internal clock reset time associated with a particular camera device, where the reference times include times associated with an event, and where the predetermined metadata includes one or more of image metadata, location metadata, event metadata, and camera device metadata.
- the method further includes detecting a timestamp error in one or more timestamps based on the one or more reference times.
- the method further includes adjusting each timestamp having a timestamp error based on the one or more reference times.
- the detecting of a timestamp error in one or more timestamps includes: comparing each timestamp to the one or more reference times; and detecting a difference between at least one timestamp and the one or more reference times, where the difference meets a predetermined difference criteria.
- the detecting of a timestamp error in one or more timestamps includes: tracking timestamps associated with a sequence of images; determining one or more reference times from the tracked timestamps; and detecting jumps in time in a given timestamp compared to other timestamps in the same sequence.
- the adjusting of the one or more timestamps having a timestamp error includes adjusting one or more timestamps that are related, and where the adjusted one or more timestamps are related based on one or more relationship criteria. In some implementations, the adjusting of the one or more timestamps having a timestamp error includes adjusting one or more timestamps by a constant offset.
- a system includes one or more processors, and logic encoded in one or more tangible media for execution by the one or more processors.
- the logic When executed, the logic is operable to perform operations including: determining timestamps, where the timestamps correspond to images; determining one or more reference times based on predetermined metadata; detecting a timestamp error in one or more timestamps based on the one or more reference times; and adjusting each timestamp having a timestamp error based on the one or more reference times.
- the reference times include an internal clock reset time associated with a particular camera device.
- the reference times include times associated with an event.
- the predetermined metadata includes one or more of image metadata, location metadata, event metadata, and camera device metadata.
- the logic when executed is further operable to perform operations including: comparing each timestamp to the one or more reference times; and detecting a difference between at least one timestamp and the one or more reference times, where the difference meets a predetermined difference criteria.
- the logic when executed is further operable to perform operations including: determining timestamps associated with a sequence of images; determining one or more reference times from the tracked timestamps; and detecting jumps in time in a given timestamp from the other timestamps in the same sequence.
- the logic when executed is further operable to perform operations including adjusting one or more timestamps that are related, and where the adjusted one or more timestamps are related based on one or more relationship criteria.
- FIG. 1 illustrates a block diagram of an example network environment, which may be used to implement the implementations described herein.
- FIG. 2 illustrates an example simplified flow diagram for improving metadata, according to some implementations.
- FIG. 3 illustrates an example simplified flow diagram for improving timestamp metadata, according to some implementations.
- FIG. 4 illustrates a block diagram of an example server device, which may be used to implement the implementations described herein.
- a system determines timestamps, where the timestamps correspond to image files, described herein as images. The system then determines one or more reference times based on predetermined metadata.
- the reference times may include an internal clock reset time associated with a particular camera device.
- the reference times may include times associated with an event.
- the predetermined metadata may include one or more of image metadata, location metadata, event metadata, and camera device metadata.
- the system detects a timestamp error in one or more timestamps based on the one or more reference times.
- the detecting of a timestamp error in one or more timestamps includes: comparing each timestamp to the one or more reference times; and detecting a difference between at least one timestamp and the one or more reference times, where the difference meets a predetermined difference criteria.
- the detecting of a timestamp error in one or more timestamps includes: determining timestamps associated with a sequence of images; determining one or more reference times from the tracked timestamps; and detecting jumps in time in a given timestamp compared to other timestamps in the same sequence of associated images. For example, if a given timestamp jumps significantly from other timestamps of a sequence of images, the given timestamp may be incorrect.
- the system then adjusts, for each timestamp having a timestamp error, the timestamp to substantially match at least one of the reference times.
- the adjusting of the one or more timestamps having a timestamp error includes adjusting one or more timestamps that are related, where the adjusted timestamps are related based on one or more relationship criteria.
- the adjusting of the one or more timestamps having a timestamp error includes adjusting one or more timestamps by a constant offset. For example, if a set of images have incorrect timestamps yet are off by the same amount, the system may adjust all of the incorrect timestamps using the constant offset.
- FIG. 1 illustrates a block diagram of an example network environment 100 , which may be used to implement the implementations described herein.
- network environment 100 includes a system 102 , which includes a server device 104 and a social network database 106 .
- system 102 and phrase “social network system” may be used interchangeably.
- Network environment 100 also includes client devices 110 , 120 , 130 , and 140 , which may communicate with each other via system 102 .
- Network environment 100 also includes a network 150 .
- FIG. 1 shows one block for each of system 102 , server device 104 , and social network database 106 , and shows four blocks for client devices 110 , 120 , 130 , and 140 .
- Blocks 102 , 104 , and 106 may represent multiple systems, server devices, and social network databases. Also, there may be any number of client devices.
- network environment 100 may not have all of the components shown and/or may have other elements including other types of elements instead of, or in addition to, those shown herein.
- users U 1 , U 2 , U 3 , and U 4 may communicate with each other and with system 102 using respective client devices 110 , 120 , 130 , and 140 .
- users U 1 , U 2 , U 3 , and U 4 may upload images to system 102 using respective client devices 110 , 120 , 130 , and 140 .
- processor of system 102 causes some of the elements described herein (e.g., user interface, messages, etc.) to be displayed in a user interface on one or more display screens.
- implementations are described herein in the context of a social network system, these implementations may apply in contexts other than a social network. For example, implementations may apply locally for an individual user.
- system 102 may perform the implementations described herein on a stand-alone computer, computer tablet, smartphone, etc.
- FIG. 2 illustrates an example simplified flow diagram for improving metadata, according to some implementations.
- a method is initiated in block 202 , where system 102 determines metadata associated with images.
- the metadata includes timestamps, where the timestamps correspond to images.
- system 102 determines reference metadata based.
- the metadata associated with images and the reference metadata may be exchangeable image file format metadata created by digital devices such as cameras and smartphones.
- system 102 detects one or more metadata errors in the metadata based on the reference metadata.
- system 102 then adjusts the metadata that have metadata errors based on the reference metadata.
- implementations are described in more detail in connection with FIG. 3 . While various implementations are described herein in the context of timestamps, these implementations may also apply to other types of metadata such as tags, geo-location, etc. While image files are described herein, implementations may also refer to other file types (e.g., video files, etc.).
- FIG. 3 illustrates an example simplified flow diagram for improving timestamp metadata, according to some implementations.
- a method is initiated in block 302 , where system 102 determines timestamps, where the timestamps correspond to images.
- System 102 may determine the timestamps from images as the images are uploaded to system 102 or later after the images have already been stored in system 102 .
- System 102 may scan all photos associated with a user's account, or may scan all photos in system 102 , in order to correct timestamps.
- system 102 may receive images from a user.
- the images may be received when the user uploads the images to system 102 or after the user adds the images to one or more photo albums.
- system 102 may enable a camera device (e.g., smart phone) of the user to automatically upload images to system 102 as the camera device captures photos.
- a camera device e.g., smart phone
- system 102 determines one or more reference times based on predetermined metadata.
- the reference times may include an internal clock reset time associated with a particular camera device. For example, if a particular digital camera where created on Jan. 31, 2010, the internal clock reset time may be 1/31/10 or another predetermined time following 1/31/10. As described in more detail below, system 102 may compare the timestamp to such a reference time to determine if the timestamp is reasonable. For example, if a timestamp is the same as the internal clock reset time, the timestamp is probably not correct.
- system 102 may access any suitable database or databases of internal clock reset times and corresponding camera makes and models. Such databases may be available internally to system 102 or externally (e.g., via the Internet or other network).
- the reference times include times associated with an event. For example, if there is a social event, it would be expected that many of the attendees would take photos at the event. As such, the reference times may include at least the start time and end time of the event. In some implementations, reference times may also include check in times, where one or more users check in at a particular location (e.g., restaurant, bar, hotel, etc.).
- the predetermined metadata may include one or more of image metadata, location metadata, event metadata, and camera device metadata.
- system 102 may utilize such metadata to ascertain groups of related images, sequences of images, as well as to ascertain incorrect timestamps and to ascertain correct timestamps to be used as reference times for correction purposes.
- system 102 may utilize a recognition algorithm to determine reference images with corresponding reference times.
- recognition algorithms are described in more detail below.
- system 102 may compare a given timestamp associated with an image provided by a given user with reference times from one or more reference times associated with images of other users.
- system 102 detects a timestamp error in one or more timestamps based the one or more reference times.
- system 102 compares each timestamp with a reference time, where the reference time is a predetermined internal clock reset time. System 102 determines that there is a timestamp error if the timestamp matches the predetermined internal clock reset time.
- system 102 may determine that the timestamp associated with the image is incorrect. This would be because the timestamp should be at a later date than the manufacturing date. In some scenarios, inaccurate timestamps might match a clock reset time exactly, which might not occur often. In some scenarios, inaccurate timestamps might match “near” the clock reset time.
- the internal clock of the camera may still count up from that point forward, and may be substantially off (e.g., by years, etc.).
- system 102 compares each timestamp to the one or more reference times; and detects a difference between at least one timestamp and the one or more reference times, where the difference meets a predetermined difference criteria.
- the predetermined difference criteria may include a threshold time difference between a given timestamp and other timestamps associated with the same group of images (e.g., images from a trip). Example implementations are described in detail below.
- system 102 determines timestamps associated with a sequence of images.
- the images in the sequence of images may be related based on one or more relationship criteria. For example, images may be related based on the images being captured at the same event (e.g., a wedding). Images may be related based on the images being captured at the same location (e.g., San Francisco).
- System 102 determines one or more reference times from the tracked timestamps, and then detects jumps in time in a given timestamp from the other timestamps in the same sequence. System 102 may determine that there is a timestamp error if the timestamp is substantially different from (e.g., contradicts) the other timestamps in the same sequence.
- system 102 may utilize a recognition algorithm to determine images with similar content.
- images may include the same person or group of people, same background, same objects or monuments in the background, etc.).
- recognition algorithms are described in more detail below.
- system 102 may detect highly unlikely timestamps from recent images that are periodically sent to system 102 for storage and security. Such images should be sent as images are captured, at the end of the day, or when the user logs onto the user's account while the images are still fresh. If system 102 starts identifying images going to the cloud/system 102 that are years old (years off from the current date), system 102 may determine that the images associated with those images are incorrect.
- “auto-backup enabled” accounts may be significant in the sense that the images in question were probably uploaded in some meaningful ordering, which allows system 102 to detect “jumps” in time. If the images were uploaded out of order, in general, system 102 may take into account other factors to order to infer jumps (e.g., filename semantics such as IMG_ ⁇ DATE>_ ⁇ PHOTO#>.jpg).
- system 102 may keep track of the state of a user's camera clock by analyzing his or her image upload stream and associated metadata. For example, system 102 may track a sequence of images, including file names, locations, and timestamps associated with the images. The timestamps of the images in the same set of images, whether related by file names, geo-location, etc., should increase at a relatively predictable rate. System 102 may determine that a given timestamp is incorrect if a timestamp jumps significantly (e.g., back by years), which would probably be due to the internal clock of the camera.
- system 102 may correlate geo-location information from images with flight information or other signals to verify/improve timestamps. For example, if the user is traveling, system 102 may determine the user's associated global positioning system (GPS) locations that are logged using any of the user's electronic devices (e.g., camera, smartphone, notebook computer, etc.). System 102 may also determine the user's outbound and return flight dates, destinations, etc. Between such outbound and return flight dates, images captured should have timestamps and geo-locations consistent with those flight dates and destinations. System 102 may determine that timestamps are incorrect if images match the geo-location but the timestamp dates do not fall between the outbound and return flight dates. In various implementations, system 102 may not only correct bad metadata, but may also suggest metadata where none previously existed. For example, an image could lack a timestamp or location, and system 102 may suggest one.
- GPS global positioning system
- system 102 may correlate people tags from images with geo-location information with images provided by friends in a social network to verify/improve timestamps. For example, if a group of users in a social network check in to the same location (e.g., a restaurant), timestamps of images taken at the location should be consistent. System 102 may determine that timestamps associated with such images are incorrect if the timestamps are inconsistent with the timestamps associated with images captured by the other users.
- system 102 may correlate exchangeable image file format (EXIF) metadata from other photos within the same event to detect spurious metadata. For example, if a group of users attend the same event (e.g., wedding, party, potluck, etc.), all contributing photos to the event should have timestamps that are close in time and within the duration of the event. System 102 may determine that timestamps associated with such images are incorrect if the timestamps are inconsistent with the event times and with the timestamps associate with images captured by the other users.
- EXIF exchangeable image file format
- system 102 adjusts each timestamp having a timestamp error based on the one or more reference times. In some implementations, system 102 may substantially match the timestamp having the timestamp error with at least one of the reference times.
- system 102 may adjust the one or more timestamps having a timestamp error by adjusting one or more timestamps that are related, where the adjusted timestamps are related based on one or more relationship criteria. For example, images may be deemed to be related based on common content, common geo-location, common tags, travel dates, etc.
- the newly adjusted values may be stored as separate and/or derived timestamps/metadata, and marked as such for subsequent processing. This would help prevent accidental data corruption and allow for future adjustments.
- Storing the data separately yet in association could also allow for access-control-list (ACL) limited derivations, where the information used to infer the new timestamp is not accessible to all viewers of the image. For example, if private information from other unshared photos is used to compute a new timestamp, system 102 may mark and store the new timestamp in such a way that it is inaccessible to users who should not have access. In some implementations, such data may also be encrypted to limit access.
- ACL access-control-list
- system 102 may adjust timestamps having timestamp errors by adjusting timestamps associated with related images, and adjusting the timestamps by a constant offset. For example, if a given group of timestamps are deemed to be incorrect and the first timestamps is set to a default internal clock reset time, the timestamps subsequent to the first incorrect timestamp are probably correctly spaced but based on an incorrect base time (e.g., the internal clock reset time). As such, system 102 may apply a constant offset to the incorrect timestamps.
- system 102 may flag photos that are likely to need correction. In some implementations, system 102 may automatically correct the timestamps. In some implementations, system 102 may alert the user of possible errors in timestamps.
- system 102 may alert the user of possible errors in timestamps, and enable the user to approve suggested corrections and/or enter correct timestamp information.
- system 102 may provide the user with a user interface that may enable options for the user to enter the correct date, and even to reset the internal clock on the user's camera.
- system 102 may refuse to use/ignore the incorrect dates in searches or in ranking systems. For example, in some implementations, when system 102 rounds a given timestamp, system 102 may leave undetermined metadata blank instead of zeroing the undetermined metadata. This is to prevent subsequent processing (e.g., searches) based on inaccurate metadata (even zero values). Instead, subsequent processing may simply ignore some metadata (e.g., timestamp seconds, timestamp minutes, etc.). Sometimes, a general time period (e.g., holidays) is sufficient for subsequent processing. In various implementations, system 102 may mark such fields as “derived” so downstream processing can choose whether or not to use the data.
- system 102 may mark such fields as “derived” so downstream processing can choose whether or not to use the data.
- system 102 may estimate correct times for timestamps based on one or more signals.
- signals may include, for example, reference times/timestamps of photos that are deemed to be related (e.g., same content, same event, same geo-location, etc.).
- system 102 may establish a minimum realistic timestamp for images. Where there is a group of images with incorrect timestamps, system 102 may determine that they are all off by the same amount of time and apply the same or similar adjustment to the group of timestamps.
- system 102 may apply different granularities of correction. For example, system 102 may round timestamps to the nearest hours, days, months, years, etc., depending on the accuracy of the corrections. For example, system 102 may determine that a group of incorrect timestamps are associated with a particular event occurring on a particular day but the exact times of the day are undetermined. System 102 may round the corrections to that day and leave the times blank.
- system 102 may correct metadata including timestamps for all images within a given time range by applying a constant offset.
- the offset may be defined by enabling the user to take a photo of a quick response (QR) code or any bar code.
- system 102 may generate the QR code at a known time and with a reference timestamp.
- system 102 may correct timestamps across cameras. For example, system 102 may align the timestamps of images of the user across the user's different cameras (e.g., dedicated digital camera, smartphone camera, etc.). In some implementations, system 102 may correct the timestamps across cameras based on common content, location, photo album, etc. In some implementations, system 102 may check the timestamps of images taken by a particular camera if system 102 determines that the camera as been off for more than a predetermined amount of time (e.g., 8 hours, etc.).
- a predetermined amount of time e.g. 8 hours, etc.
- system 102 may use optical character recognition (OCR) to identify “burned in” timestamps from film photos and then convert the burned in timestamps into EXIF metadata.
- OCR optical character recognition
- Implementations described herein provide various benefits. For example, implementations described herein improve overall accuracy of metadata such as timestamps associated with images. Implementations also enable users to accurately search and retrieve images based on time parameters. Implementations may also enable photos to be more accurately grouped and displayed together or arranged in a specific way (e.g., chronologically). Implementations also support both correcting bad data and appending new, suggested data where the data did not previously exist.
- correcting a timestamp of any media item e.g., image, video file, etc.
- correcting a timestamp of any media item may greatly increase the chances that the media item being found in a search or otherwise accessed (e.g., by the owner user, by other users in a social network, etc.).
- system 102 may provide missing metadata.
- System 102 may be able to provide timestamp data for the new file.
- system 102 may determine timestamps before determining reference times, as described above. In some implementations, system 102 may determine references times before determining timestamps. Other orderings of the steps are possible, depending on the particular implementation. In some particular implementations, multiple steps shown as sequential in this specification may be performed at the same time. Also, some implementations may not have all of the steps shown and/or may have other steps instead of, or in addition to, those shown herein.
- system 102 is described as performing the steps as described in the implementations herein, any suitable component or combination of components of system 102 or any suitable processor or processors associated with system 102 may perform the steps described.
- system 102 may utilize a variety of recognition algorithms to recognize faces, landmarks, objects, etc. in images. Such recognition algorithms may be integral to system 102 . System 102 may also access recognition algorithms provided by software that is external to system 102 and that system 102 accesses.
- system 102 enables users of the social network system to specify and/or consent to the use of personal information, which may include system 102 using their faces in images or using their identity information in recognizing people identified in images.
- system 102 may provide users with multiple selections directed to specifying and/or consenting to the use of personal information.
- selections with regard to specifying and/or consenting may be associated with individual images, all images, individual photo albums, all photo albums, etc.
- the selections may be implemented in a variety of ways.
- system 102 may cause buttons or check boxes to be displayed next to various selections.
- system 102 enables users of the social network to specify and/or consent to the use of using their images for facial recognition in general. Example implementations for recognizing faces and other objects are described in more detail below.
- the users may be provided with an opportunity to control whether programs or features collect user information (e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current location), or to control whether and/or how to receive content from the content server that may be more relevant to the user.
- user information e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current location
- certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information is removed.
- a user's identity may be treated so that no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined.
- location information such as to a city, ZIP code, or state level
- the user may have control over how information is collected about the user and used by a content server.
- system 102 obtains reference images of users of the social network system, where each reference image includes an image of a face that is associated with a known user.
- the user is known, in that system 102 has the user's identity information such as the user's name and other profile information.
- a reference image may be, for example, a profile image that the user has uploaded.
- a reference image may be based on a composite of a group of reference images.
- system 102 may compare the face (e.g., image of the face) and match the face to reference images of users of the social network system.
- face e.g., image of the face
- image of the face are used interchangeably.
- recognition of one face is described in some of the example implementations described herein. These implementations may also apply to each face of multiple faces to be recognized.
- system 102 may search reference images in order to identify any one or more reference images that are similar to the face in the image.
- system 102 may extract features from the image of the face in an image for analysis, and then compare those features to those of one or more reference images.
- system 102 may analyze the relative position, size, and/or shape of facial features such as eyes, nose, cheekbones, mouth, jaw, etc.
- system 102 may use data gathered from the analysis to match the face in the image to one more reference images with matching or similar features.
- system 102 may normalize multiple reference images, and compress face data from those images into a composite representation having information (e.g., facial feature data), and then compare the face in the image to the composite representation for facial recognition.
- the face in the image may be similar to multiple reference images associated with the same user. As such, there would be a high probability that the person associated with the face in the image is the same person associated with the reference images.
- the face in the image may be similar to multiple reference images associated with different users. As such, there would be a moderately high yet decreased probability that the person in the image matches any given person associated with the reference images.
- system 102 may use various types of facial recognition algorithms to narrow the possibilities, ideally down to one best candidate.
- system 102 may use geometric facial recognition algorithms, which are based on feature discrimination.
- System 102 may also use photometric algorithms, which are based on a statistical approach that distills a facial feature into values for comparison.
- a combination of the geometric and photometric approaches could also be used when comparing the face in the image to one or more references.
- system 102 may use facial recognition algorithms that use one or more of principal component analysis, linear discriminate analysis, elastic bunch graph matching, hidden Markov models, and dynamic link matching. It will be appreciated that system 102 may use other known or later developed facial recognition algorithms, techniques, and/or systems.
- system 102 may generate an output indicating a likelihood (or probability) that the face in the image matches a given reference image.
- the output may be represented as a metric (or numerical value) such as a percentage associated with the confidence that the face in the image matches a given reference image. For example, a value of 1.0 may represent 100% confidence of a match. This could occur, for example, when compared images are identical or nearly identical. The value could be lower, for example 0.5 when there is a 50% chance of a match. Other types of outputs are possible.
- the output may be a confidence score for matching.
- FIG. 4 illustrates a block diagram of an example server device 400 , which may be used to implement the implementations described herein.
- server device 400 may be used to implement server device 104 of FIG. 1 , as well as to perform the method implementations described herein.
- server device 400 includes a processor 402 , an operating system 404 , a memory 406 , and an input/output (I/O) interface 408 .
- Server device 400 also includes a social network engine 410 and a media application 412 , which may be stored in memory 406 or on any other suitable storage location or computer-readable medium.
- Media application 412 provides instructions that enable processor 402 to perform the functions described herein and other functions.
- FIG. 4 shows one block for each of processor 402 , operating system 404 , memory 406 , I/O interface 408 , social network engine 410 , and media application 412 .
- These blocks 402 , 404 , 406 , 408 , 410 , and 412 may represent multiple processors, operating systems, memories, I/O interfaces, social network engines, and media applications.
- server device 400 may not have all of the components shown and/or may have other elements including other types of elements instead of, or in addition to, those shown herein.
- routines of particular embodiments may be implemented using any suitable programming languages and programming techniques. Different programming techniques may be employed such as procedural or object-oriented.
- the routines may execute on a single processing device or multiple processors. Although the steps, operations, or computations may be presented in a specific order, the order may be changed in different particular embodiments. In some particular embodiments, multiple steps shown as sequential in this specification may be performed at the same time.
- a “processor” includes any suitable hardware and/or software system, mechanism or component that processes data, signals or other information.
- a processor may include a system with a general-purpose central processing unit, multiple processing units, dedicated circuitry for achieving functionality, or other systems. Processing need not be limited to a geographic location, or have temporal limitations. For example, a processor may perform its functions in “real-time,” “offline,” in a “batch mode,” etc. Portions of processing may be performed at different times and at different locations, by different (or the same) processing systems.
- a computer may be any processor in communication with a memory.
- the memory may be any suitable data storage, memory and/or non-transitory computer-readable storage medium, including electronic storage devices such as random-access memory (RAM), read-only memory (ROM), magnetic storage device (hard disk drive or the like), flash, optical storage device (CD, DVD or the like), magnetic or optical disk, or other tangible media suitable for storing instructions for execution by the processor.
- the software instructions can also be contained in, and provided as, an electronic signal, for example in the form of software as a service (SaaS) delivered from a server (e.g., a distributed system and/or a cloud computing system).
- SaaS software as a service
Abstract
Description
Claims (20)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/027,581 US9239747B1 (en) | 2013-09-16 | 2013-09-16 | Image timestamp correction using metadata |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/027,581 US9239747B1 (en) | 2013-09-16 | 2013-09-16 | Image timestamp correction using metadata |
Publications (1)
Publication Number | Publication Date |
---|---|
US9239747B1 true US9239747B1 (en) | 2016-01-19 |
Family
ID=55071415
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/027,581 Active 2034-02-26 US9239747B1 (en) | 2013-09-16 | 2013-09-16 | Image timestamp correction using metadata |
Country Status (1)
Country | Link |
---|---|
US (1) | US9239747B1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN111460198A (en) * | 2019-01-18 | 2020-07-28 | 阿里巴巴集团控股有限公司 | Method and device for auditing picture timestamp |
Citations (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP2004128870A (en) | 2002-10-02 | 2004-04-22 | Canon Inc | Image decoding and outputting device |
JP2004357166A (en) | 2003-05-30 | 2004-12-16 | Canon Inc | Imaging apparatus |
US7280156B2 (en) * | 2002-12-20 | 2007-10-09 | Stmicroelectronics Sa | Process and device for synchronizing presentation of audio and/or video frames |
US7626942B2 (en) * | 2006-11-22 | 2009-12-01 | Spectra Link Corp. | Method of conducting an audio communications session using incorrect timestamps |
JP4565308B2 (en) | 2001-09-13 | 2010-10-20 | ソニー株式会社 | Error detection apparatus, error detection method, recording / reproducing apparatus, and recording / reproducing method |
US8209539B2 (en) * | 2005-07-22 | 2012-06-26 | Thomson Licensing | Method for time-stamped watermarking, method and device for time stamp decoding use |
US8314726B2 (en) | 2010-04-07 | 2012-11-20 | Imec | Time stamp generation |
US8578270B2 (en) * | 2006-10-12 | 2013-11-05 | Samsung Electronics Co., Ltd. | Clock operation method and module for mobile terminal |
US20130293709A1 (en) * | 2012-05-02 | 2013-11-07 | Samsung Techwin Co. Ltd. | Time synchronization apparatus and method |
US20140006458A1 (en) * | 2012-06-04 | 2014-01-02 | Google Inc. | Systems and Methods of Increasing Database Access Concurrency Using Granular Timestamps |
US8918541B2 (en) * | 2008-02-22 | 2014-12-23 | Randy Morrison | Synchronization of audio and video signals from remote sources over the internet |
US8938636B1 (en) * | 2012-05-18 | 2015-01-20 | Google Inc. | Generating globally coherent timestamps |
-
2013
- 2013-09-16 US US14/027,581 patent/US9239747B1/en active Active
Patent Citations (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP4565308B2 (en) | 2001-09-13 | 2010-10-20 | ソニー株式会社 | Error detection apparatus, error detection method, recording / reproducing apparatus, and recording / reproducing method |
JP2004128870A (en) | 2002-10-02 | 2004-04-22 | Canon Inc | Image decoding and outputting device |
US7280156B2 (en) * | 2002-12-20 | 2007-10-09 | Stmicroelectronics Sa | Process and device for synchronizing presentation of audio and/or video frames |
JP2004357166A (en) | 2003-05-30 | 2004-12-16 | Canon Inc | Imaging apparatus |
US8209539B2 (en) * | 2005-07-22 | 2012-06-26 | Thomson Licensing | Method for time-stamped watermarking, method and device for time stamp decoding use |
US8578270B2 (en) * | 2006-10-12 | 2013-11-05 | Samsung Electronics Co., Ltd. | Clock operation method and module for mobile terminal |
US7626942B2 (en) * | 2006-11-22 | 2009-12-01 | Spectra Link Corp. | Method of conducting an audio communications session using incorrect timestamps |
US8918541B2 (en) * | 2008-02-22 | 2014-12-23 | Randy Morrison | Synchronization of audio and video signals from remote sources over the internet |
US8314726B2 (en) | 2010-04-07 | 2012-11-20 | Imec | Time stamp generation |
US20130293709A1 (en) * | 2012-05-02 | 2013-11-07 | Samsung Techwin Co. Ltd. | Time synchronization apparatus and method |
US8938636B1 (en) * | 2012-05-18 | 2015-01-20 | Google Inc. | Generating globally coherent timestamps |
US20140006458A1 (en) * | 2012-06-04 | 2014-01-02 | Google Inc. | Systems and Methods of Increasing Database Access Concurrency Using Granular Timestamps |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN111460198A (en) * | 2019-01-18 | 2020-07-28 | 阿里巴巴集团控股有限公司 | Method and device for auditing picture timestamp |
CN111460198B (en) * | 2019-01-18 | 2023-06-20 | 阿里巴巴集团控股有限公司 | Picture timestamp auditing method and device |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11263492B2 (en) | Automatic event recognition and cross-user photo clustering | |
US8718373B2 (en) | Determining the location at which a photograph was captured | |
US10318840B2 (en) | Generating a group photo collection | |
US9904723B2 (en) | Event based metadata synthesis | |
US10043059B2 (en) | Assisted photo-tagging with facial recognition models | |
US10303756B2 (en) | Creating a narrative description of media content and applications thereof | |
JP5801395B2 (en) | Automatic media sharing via shutter click | |
US8422747B1 (en) | Finding untagged images of a social network member | |
US9251854B2 (en) | Facial detection, recognition and bookmarking in videos | |
US9571726B2 (en) | Generating attention information from photos | |
US10318574B1 (en) | Generating moments | |
CN104133899A (en) | Method and device for generating picture search library and method and device for searching for picture | |
US9070024B2 (en) | Intelligent biometric identification of a participant associated with a media recording | |
WO2021027540A1 (en) | Lost person information matching method and apparatus, computer device, and storage medium | |
US20160078030A1 (en) | Mobile device smart media filtering | |
US20140233811A1 (en) | Summarizing a photo album | |
US9239747B1 (en) | Image timestamp correction using metadata | |
WO2019101002A1 (en) | Shoe data acquisition method and device, and computer storage medium | |
US9286340B2 (en) | Systems and methods for collecting information from digital media files | |
WO2015017538A1 (en) | Providing a summary presentation | |
WO2014186392A2 (en) | Summarizing a photo album | |
Deselaers et al. | Automatic correction of timestamp and location information in digital images | |
US20150097986A1 (en) | Itinerary generation apparatus, method, and non-transitory computer readable storage medium thereof |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:KULICK, MATTHEW;MURPHY-CHUTORIAN, ERIK;COHEN, DAVE;REEL/FRAME:031387/0223Effective date: 20130916 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044566/0657Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
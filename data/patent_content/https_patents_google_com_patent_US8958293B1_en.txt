US8958293B1 - Transparent load-balancing for cloud computing services - Google Patents
Transparent load-balancing for cloud computing services Download PDFInfo
- Publication number
- US8958293B1 US8958293B1 US13/312,872 US201113312872A US8958293B1 US 8958293 B1 US8958293 B1 US 8958293B1 US 201113312872 A US201113312872 A US 201113312872A US 8958293 B1 US8958293 B1 US 8958293B1
- Authority
- US
- United States
- Prior art keywords
- gateway
- virtual
- network
- address
- virtual machine
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
- H04L67/1001—Protocols in which an application is distributed across nodes in the network for accessing one among a plurality of replicated servers
Definitions
- This patent document relates to operating virtual machines in a cloud computing service.
- Cloud computing is network-based computing in which typically large collections of servers housed in data centers or “server farms” provides computational resources and data storage as needed to remote end users.
- Some cloud computing services allow entities, such as e-retailers, banks with online portals, and universities, to run server software applications (e.g., e-commerce server application, web server, or file server) in the cloud.
- Server software applications e.g., e-commerce server application, web server, or file server
- Running applications in the cloud can include running processes on virtual machines that are provided by cloud service providers.
- Data centers can use load-balancing to deal out incoming data among two or more machines.
- a type of load-balancing can be performed by using a special-purpose Open Systems Interconnection model (OSI model) layer-2 hardware device residing between an incoming network connection and a private local area network that forms a contiguous layer-2 network, where the local network includes two or more machines that are interconnected via the contiguous layer-2 network.
- OSI model Open Systems Interconnection model
- a machine can employ an Address Resolution Protocol (ARP) scheme to maintain availability of a virtual Media Access Control (MAC) address on a contiguous layer-2 network that corresponds to a load-balanced network address.
- ARP Address Resolution Protocol
- one aspect of the subject matter described in this document can be embodied in a technique that includes executing virtual machines that are each configured to communicate via a virtual network and are configured to handle requests associated with at least a destination address on a public network; and operating gateways, including a first gateway and a second gateway, that are configured to provide connectivity between the virtual network and the public network, the gateways being configured to use a consistent mapping operation to perform load-balancing among the virtual machines.
- the technique includes obtaining health information of the virtual machines; determining, based on the health information of the virtual machines, a group of healthy virtual machines comprising two or more of the virtual machines; receiving, at the first gateway, an incoming packet that includes a source address and the destination address; selecting, at the first gateway, a handling virtual machine of the group of healthy virtual machines based on an output of the consistent mapping operation given the source address, the destination address, and the group of healthy virtual machines; forwarding, at the first gateway, the incoming packet to the handling virtual machine via the virtual network; and creating, in a data structure at the first gateway, an entry reflecting a mapping between the source address and the handling virtual machine to forward one or more additional incoming packets, each including the source address and the destination address, to the handling virtual machine.
- Other embodiments of this aspect include corresponding systems, apparatus, and computer programs encoded on computer storage devices.
- the incoming packet can be a first incoming packet. Implementations can include receiving, at the second gateway, a second incoming packet that includes the same source address and the same destination address as the first incoming packet; selecting, at the second gateway, the handling virtual machine based on an output of the consistent mapping operation given the source address and the group of healthy virtual machines; forwarding the second incoming packet to the handling virtual machine via the virtual network; and creating, in a data structure at the second gateway, an entry reflecting a mapping between the source address and the handling virtual machine to forward one or more additional incoming packets to the handling virtual machine.
- Obtaining the health information can include sending packets to check respective virtual machines and receiving one or more responses to the sent packets.
- Selecting the handling virtual machine can include generating a flow identifier based on the source address, the destination address, a source port of the incoming packet, and a destination port of the incoming packet.
- Selecting the handling virtual machine can include using the flow identifier as input to a hash function to produce a hash value; and selecting a virtual machine based on the hash value.
- Selecting the handling virtual machine can include using the source address, the destination address, a source port of the incoming packet, and a destination port of the incoming packet.
- Selecting the handling virtual machine can be further based on a geographical proximity of a virtual machine to a geographical location associated with an origin of the incoming packet.
- Forwarding the incoming packet to the handling virtual machine can include sending the incoming packet to the handling virtual machine without changing the destination address.
- the virtual machines, including the handling virtual machine can include a network interface that is configured to receive packets that are addressed to the destination address. Forwarding the incoming packet to the handling virtual machine can include performing a network address translation (NAT) on the incoming packet where the destination address of the incoming packet is replaced with a network address of the handling virtual machine, the network address being private to the virtual network.
- NAT network address translation
- the virtual network is for IP based communications. Operating the gateways can include using separate IP tunnels to effect delivery of IP packets on the virtual network to the virtual machines.
- Systems can include two or more host machines that are configured to execute virtual machines that communicate via a virtual network, the virtual machines being configured to handle requests associated with at least a destination address on a public network; and two or more gateways that provide connectivity between the virtual network and the public network, the gateways being configured to use a consistent mapping operation to perform load-balancing among the virtual machines.
- the two or more gateways can be configured to obtain health information of the virtual machines, determine, based on the health information of the virtual machines, a group of healthy virtual machines comprising two or more of the virtual machines, receive an incoming packet that includes a source address and the destination address, select a handling virtual machine of the group of healthy virtual machines based on an output of the consistent mapping operation given the source address, the destination address, and the group of healthy virtual machines, forward the incoming packet to the handling virtual machine via the virtual network, and create a data structure entry reflecting a mapping between the source address and the handling virtual machine to forward one or more additional incoming packets, each including the source address and the destination address, to the handling virtual machine.
- load-balancing to a virtual network can be accomplished in ways which do not require synchronized state tables among gateways residing at a physical-to-virtual network boundary.
- Load-balancing a service resource among two or more virtual machines can increase the overall availability of the service resource.
- One or more described load-balancing techniques can be performed transparently based on one or more properties of the virtual network.
- One or more of the described load-balancing techniques can be implemented using virtual machines residing on separate layer-2 networks, and do not require a contiguous layer-2 network, broadcast mechanism, or native network support for load-balancing.
- FIG. 1 shows an example of a transparent distributed virtual machine load-balancing system.
- FIG. 2 shows another example of a transparent distributed virtual machine load-balancing system.
- FIG. 3 shows examples of packet encapsulation techniques used in a transparent distributed virtual machine load-balancing system.
- FIG. 4 shows an example of a token negotiating and message sending technique.
- FIG. 5 shows an example of an encapsulated packet.
- FIG. 6 shows an example of a packet de-encapsulation technique.
- FIG. 7 shows an example of a load-balancing process for virtual machines on a virtual network.
- FIG. 8 shows an example of a process that performs a consistent mapping operation.
- FIG. 9A shows an example of communications among a client, virtual network gateways, and virtual machines.
- FIG. 9B shows an example of a consistent hash table associated with FIG. 9A .
- FIG. 9C shows an example of a local state table associated with FIG. 9A .
- FIG. 1 shows an example of a transparent distributed virtual machine load-balancing system.
- a distributed system 100 can run virtual machines (VMs) 110 , 112 , 114 , on host machines 102 , 104 .
- the distributed system 100 can provide a virtual network 140 to the virtual machines 110 , 112 , 114 for Internet Protocol (IP) based communications.
- IP Internet Protocol
- Elements of the distributed system 100 can reside in different physical locations. For example, a first host machine 102 can reside in a first data center, while a second host machine 104 can reside in a second data center. In some implementations, these data centers can be located in different states, countries, or both.
- the virtual network 140 can interconnect virtual machines residing on geographically distributed host machines.
- the virtual machines 110 , 112 , 114 are assigned network addresses (e.g., an IPv4 address or IPv6 address) that are routable on the virtual network 140 .
- the virtual network 140 includes a private subnet (e.g., 192.168.0.0/16 or 10.0.0.0/8).
- Clients 170 can send packets to a destination address associated with the public network 150 .
- the packets can be User Datagram Protocol (UDP) based packets or Transmission Control Protocol (TCP) based packets. Other types of packets are possible.
- the clients 170 can send a request in a packet to a web site such as “www.xyz.com” using Hypertext Transfer Protocol (HTTP).
- HTTP Hypertext Transfer Protocol
- the network address associated with “www.xyz.com” can be load-balanced between virtual machines 110 , 112 , 114 interconnected via the virtual network 140 .
- the load for a web site can be distributed among multiple virtual machines such as hundred virtual machines, a thousand virtual machines, or more.
- Load balancers 161 , 163 can be configured to control virtual network gateways 160 , 162 to distribute traffic from clients 170 among the virtual machines 110 , 112 , 114 .
- virtual network gateways 160 , 162 route traffic between virtual machines 110 , 112 , 114 and the public network 150 via the virtual network 140 .
- the gateways 160 , 162 include their corresponding load balancers 161 , 163 .
- servicing a connection from a client 170 can require the use of state information, and therefore the load balancers 161 , 163 can cause the virtual network gateways 160 , 162 to consistently route IP traffic from the same client to the same virtual machine.
- a load balancer can selected a new virtual machine for servicing requests from a specific client 170 .
- virtual network gateways 160 , 162 are configurable to selectively load-balance traffic based on parameters set via an application programming interface (API). For example, a cloud service customer can use the API to select a load-balancing option for one or more network addresses. In some implementations, the load-balancing option can be applied to one or more ports such as a TCP port or UDP port.
- API application programming interface
- IP traffic on the virtual network 140 can be carried by IP tunnels.
- Machines such as host machines 102 , 104 and virtual network gateways 160 , 162 can perform IP encapsulation and de-encapsulation for IP traffic to and from each VM 110 , 112 , 114 .
- Encapsulated IP traffic from one VM is sent to another VM via IP tunneling.
- An IP tunnel provides a transport layer.
- IP tunneling can include sending an IP tunnel packet that includes an encapsulated packet.
- the encapsulated packet can be an IP packet. Other types of encapsulated packets are possible.
- an IP tunnel can originate at a virtual network gateway and terminate at a host machine.
- an IP tunnel can both originate and terminate on the same host machine (e.g., source and destination VMs are on the same host machine). In some cases, an IP tunnel can originate at one host machine and terminate at a different host machine (e.g., source and destination VMs are on different host machines). IP tunnel traffic between machines residing on separate layer-2 networks can be carried over a virtual private network (VPN) via a public network 150 such as the Internet.
- VPN virtual private network
- Host machines 102 , 104 can use a virtual network routing table to retrieve the endpoint locations of the IP tunnels.
- a virtual network routing table based on an input VM identifier or VM IP address, a virtual network routing table provides a routable IP address on network 150 that corresponds to the host machine that runs the VM associated with the input VM identifier or VM IP address.
- the host machines 102 , 104 can run multiple virtual networks. For example, two virtual machines can be on the same physical machine, but attached to different virtual networks.
- a virtual machine can have one or more virtual network interface cards (NICs) that are attached to one or more virtual networks.
- Each virtual network interface can be assigned a network address (e.g., IPv4 address, IPv6 address, or a layer-2 MAC address).
- a virtual machine stores virtual network addresses and their associated network identifiers.
- FIG. 2 shows another example of a transparent distributed virtual machine load-balancing system.
- Host machines 102 , 104 included in a distributed system 201 can contain one or more data processing apparatuses such as rack mounted servers or other computing devices.
- Host machines 102 , 104 can have different capabilities and computer architectures.
- Host machines 102 , 104 can communicate with each other through a network such as a private network 216 (e.g., dedicated or leased optical fiber or copper wires).
- Host machines 102 , 104 can also communicate with devices on public networks, such as the Internet 250 , through one or more gateways 220 , 221 which are data processing apparatus responsible for routing data communication traffic between the private network 216 and the Internet 250 .
- Other types of public networks are possible.
- the private network 216 can include one or more wired (e.g., Ethernet) or wireless (e.g., WI-FI) networks, for example.
- the private network 216 includes physical communication assets such as optical fiber or copper wire that connect two data centers.
- the private network 216 is implemented over a public network such as the Internet 250 .
- data centers have respective local area networks (LANs) that are aggregated together to form a private network 216 .
- IP traffic between data centers can be routed, for example, by using Multiprotocol Label Switching (MPLS). Other types of routing are possible.
- MPLS Multiprotocol Label Switching
- Each host machine 102 , 104 executes a host operating system 106 , 108 .
- a host operating system 106 , 108 manages host machine resources.
- host operating systems 106 , 108 run software that virtualizes the underlying host machine hardware and manages concurrent execution of one or more VMs.
- the host operating system 106 manages two VMs (VM 110 and VM 112 ), while a different host operating system 108 manages a single VM 114 .
- a host machine can, in general, manage larger quantities of virtual machines; however, the quantity may be limited based on physical resources of the host machine.
- the VMs 110 , 112 , 114 use a simulated version of an underlying host machine hardware, which can be referred to as virtual hardware (e.g., virtual hardware 110 a , 112 a and 114 a ).
- virtual hardware e.g., virtual hardware 110 a , 112 a and 114 a
- Software that is executed by the virtual hardware can be referred to as guest software.
- guest software cannot determine if it is being executed by virtual hardware or by a physical host machine. If guest software executing in a VM, or the VM itself, malfunctions or aborts, other VMs executing on the host machine will not be affected.
- a host machine's microprocessor(s) can include processor-level mechanisms to enable virtual hardware to execute software applications efficiently by allowing guest software instructions to be executed directly on the host machine's microprocessor without requiring code-rewriting, recompilation, or instruction emulation.
- Each VM (e.g., VMs 110 , 112 , and 114 ) is allocated a set of virtual memory pages from the virtual memory of the underlying host operating system and is allocated virtual disk blocks from one or more virtual disk drives for use by the guest software executing on the VM.
- host operating 106 allocates memory pages and disk blocks to VM 110 and VM 112 , and host operating system 108 does the same for VM 114 .
- a given VM cannot access the virtual memory pages assigned to other VMs.
- VM 110 cannot access memory pages that have been assigned to VM 112 .
- a virtual disk drive can be persistent across VM restarts.
- virtual disk blocks are allocated on physical disk drives coupled to host machines.
- VMs can be allocated network addresses through which their respective processes can communicate with other processes via a virtual network.
- guest software executing on VM 110 can communicate with guest software executing on VM 112 or VM 114 via the virtual network using the allocated network addresses.
- a VM's guest software can include a guest operating system (e.g., guest operating systems 110 b , 112 b , and 114 b ) which is software that controls the execution of respective guest software applications (e.g., guest applications 110 c , 112 c , and 114 c ), within the VM and provides services to those applications.
- a guest operating system can be an operating system such as a variant of the UNIX operating system. Other operating systems are possible.
- Each VM can execute the same guest operating system or different guest operating systems.
- Booting a VM can include using a virtual boot disk to load a kernel image associated with a guest operating system into memory.
- a guest operating system's access to resources such as networks and virtual disk storage is controlled by the underlying host operating system.
- the guest application 110 c or guest operating system 110 b attempts to perform an input/output operation on a virtual disk, initiate network communication, or perform a privileged operation, for example, the virtual hardware 110 a is interrupted so that the host operating system 106 can perform the action on behalf of the virtual machine 110 .
- the host operating system 106 can perform these actions with a process that executes in kernel process space 106 b , user process space 106 a , or both.
- the kernel process space 106 b is virtual memory reserved for the host operating system 106 's kernel 106 d which can include kernel extensions and device drivers, for instance.
- the kernel process space has elevated privileges (sometimes referred to as “supervisor mode”); that is, the kernel 106 d can perform certain privileged operations that are off limits to processes running in the user process space 106 a . Examples of privileged operations include access to different address spaces, access to special functional processor units in the host machine such as memory management units, and so on.
- the user process space 106 a is a separate portion of virtual memory reserved for user mode processes. User mode processes cannot perform privileged operations directly.
- a portion of VM network communication functionality is implemented in a communication process (e.g., communication process 106 c ).
- the communication process executes in the user process space (e.g., user process space 106 a ) of a host operating system (e.g., host operating system 106 ).
- the communication process can execute in the kernel process space (e.g., kernel process space 106 d ) of the host operating system.
- some portion of the communication process executes in the user process space and another portion executes in the kernel process space.
- the communication process can use a hardware level encapsulation mechanism.
- a communication process 106 c , 108 c can communicate with a VM registry service 218 to establish a virtual network pair (VNP) between two VMs.
- VNP virtual network pair
- a VNP can be used to route traffic between two endpoints using one or more virtual connections or links.
- Network traffic associated with the VNP can be carried via a local loop (e.g., if both VMs are on the same host machine) or carried via one or more networks, such as a private network 216 , Internet 250 , or a combination thereof.
- a VNP between a first virtual machine 110 and a second virtual machine 114 can be used to route packets sent between VNP endpoints managed respectively by first and second communication processes 106 c , 108 c over the private network 216 .
- a server such as a VM registry server 218 implements the functionality of the VM registry service.
- the VM registry service 218 can manage assignments of network addresses (e.g., IP addresses) to VMs, and maintain mappings between VM network addresses on a virtual network and the respective network addresses of the host machines running the VMs.
- FIG. 3 shows examples of packet encapsulation techniques used in a transparent distributed virtual machine load-balancing system.
- a distributed system can contain server systems that include host machines 315 a , 315 b , which are configured to run one or more virtual machines 320 a , 320 b , 320 c , 320 d .
- Host machines 315 a , 315 b use IP tunnels 330 a , 330 b , 330 c to carry IP traffic between the virtual machines 320 a - d as well as IP traffic between the virtual machines 320 a - d and virtual network gateways 340 a , 340 b .
- the virtual network gateways 340 a - b are configured to provide Internet 350 access to the virtual machines 320 a - d.
- the host machines 315 a , 315 b can connect to the Internet 350 via respective local area networks (LANs) 355 a , 355 b .
- LANs local area networks
- host machines 315 a - b are assigned IP addresses (e.g., 134 . 130 . 78 . 11 , 224 . 10 . 402 . 3 ) that are visible on the Internet 350 .
- Traffic on an inter-host-machine IP tunnel 330 a can be routed from the host machine 315 on a first LAN 355 a to a host machine 315 b on a second LAN 355 b via the Internet 350 (tunnel 330 a carries traffic between VM-1 320 a and VM-13 320 c ). Traffic on an intra-host-machine IP tunnel 330 b can be routed completely inside a host machine 315 a.
- Virtual network gateways 340 a - b can route traffic between the Internet 350 and the virtual network 301 by changing source or destination address information in packet headers so that the address space of the virtual network 301 is hidden behind an IP address of a gateway 340 a - b .
- packets arriving at the gateways 340 a - b from the Internet 350 and bound for the virtual network 301 have their IP datagram destination address changed from that of the gateway 340 a - b (e.g., 134.130.78.1, or 224.10.402.1) to the IP address of a destination VM (e.g., 192.138.1.10).
- Packets arriving at a gateway 340 a - b from the virtual network 301 and bound for the Internet 350 have their IP source address changed from that of a VM (e.g., 192.138.1.10) to the IP address of the virtual network gateway 340 a - b that is visible on the Internet 350 (e.g., 134.130.78.1, 224.10.402.1).
- the virtual network gateways 340 a - b can perform network address translation (NAT) to translate between private subnet addresses and public addresses.
- NAT network address translation
- Virtual machines 320 a - d running on the host machines 315 a - b can run processes such as webserver processes that interact with browser software running on clients 330 a , 330 b , 330 c .
- a client 330 a - c can be a data processing apparatus such as, for example, a server, a personal computer, a laptop computer, a smart phone, an embedded device (e.g., a smart power meter), or a tablet computer.
- client 330 c communicates with a VM (e.g., VM-21 320 d ) by sending IP packets to a virtual network gateway 340 b .
- VM e.g., VM-21 320 d
- the virtual network gateway 340 b encapsulates the packets from the client 330 c and sends the encapsulated packets to the host machine 315 b running VM-21 320 d via an IP tunnel 330 c .
- the host machine 315 b running VM-21 320 d can de-encapsulate the packets and deliver the packets to VM-21 320 d.
- Communication processes can use keys to protect IP traffic to and from VMs.
- a network agent for a VM retrieves a secret key that corresponds to the VM.
- a network agent is included in a communication process executing on the VM's host machine.
- a secret key is a piece of information that serves to uniquely identify a VM among all VMs associated with a virtual network (e.g., the virtual network 140 of FIG. 1 ).
- the secret key can be a number, a string of characters, other data, combinations of these, or any other string of bits of sufficient entropy.
- the secret key can be generated in such a way that an entity with no prior knowledge of the key has no computationally feasible way of deriving the key.
- the secret key can be generated using, for example, a cryptographically secure pseudorandom number generator.
- the secret key is assigned to a VM by a VM registry service.
- Secret keys can also be assigned by another process besides the VM registry service.
- a given VM may not know what its secret key is and does not know the secret key of other VMs.
- a communication process e.g., communication process 106 c
- a given host machine keeps track of the secret keys for VMs managed by the host operating system (e.g. host operating system 106 ).
- FIG. 4 shows an example of a token negotiating and message sending technique.
- the communication process 404 (COM-A process 404 ) on VM-A 402 's host machine can request a secret key for VM-A 402 from the VM registry service 406 by sending a message, at 412 , to the VM registry service 406 .
- the request for the secret key can be sent via a secure protocol (e.g., secure socket layer (SSL) or Diffie-Hellman) that allows the VM registry service 406 to authenticate which communication process it is communicating with.
- SSL secure socket layer
- Diffie-Hellman Diffie-Hellman
- the VM registry service 406 responds to the COM-A process 404 with a message 414 containing the secret key for VM-A.
- the communication process 408 (COM-B process 408 ) on VM-B 410 's host machine can request a secret key for VM-B 410 from the VM registry service 406 by sending a message 416 to the VM registry service 406 .
- the VM registry service 406 responds with a message 418 containing the secret key for VM-B 410 .
- a VNP between the two VMs is established.
- the communication process on a given host machine is responsible for establishing VNPs.
- Each VM can communicate with one or more other VMs using a separate VNP for each.
- VM-A 402 initiates a transmission of a packet 420 to VM-B 410 .
- the packet can include one or more headers such as an IPv4 header, IPv6 header, UDP header, or a TCP header.
- the packet is intercepted by the COM-A process 404 of the host operating system on which VM-A 402 is executing.
- the COM-A process 404 determines that a VNP between VM-A 402 and VM-B 410 has not yet been established. This being the case, the COM-A process 404 requests a token to be used to communicate with VM-B 410 from the VM registry service 406 .
- a token is required in order to establish a unidirectional VNP from a source VM to a destination VM.
- the token request 422 can contain the secret key for VM-A 402 and a network address of the destination VM-B 410 , for example.
- the VM registry service 406 uses the secret key S_a of VM-A 402 to look up or determine the following attributes of VM-A 402 : IP_VM_a, the IP address assigned to VM-A; Phys_Port_a, the UDP port assigned to VM-A on VM-A's host machine; Phys_IP_a, the IP address of VM-A's host machine; and expiry_a_b, the validity period of the token which, in some implementations, is the current time plus a time-to-live (TTL).
- TTL can be on the order of minutes (e.g., 10 minutes) or other granularities.
- expiry_a_b is set to a value (e.g., ⁇ 1) to indicate that the token never expires.
- the concatenation of Phys_Port_a and Phys_IP_a can be considered as a VM host address.
- the VM registry service 406 verifies that the request 422 was actually transmitted from Phys_IP_a and otherwise denies the request. In further implementations, the VM registry service 406 can consult a traffic policy to determine if VM-A 402 should be allowed to communicated with VM-B 410 and, if not, denies the request.
- MAC Message Authentication Code
- MAC functions are possible.
- all of the fields being concatenated are fixed size, i.e., the concatenation is uniquely determined without the need for separators.
- the fields are concatenated in a certain order, other field orderings are possible.
- the concatenation of Phys_Port_b and Phys_IP_b can be considered as a VM host address.
- a secret key ties a host machine addressing scheme (e.g., ⁇ Phys_IP, Phys_Port>) to a VNP addressing scheme (e.g., IP address of VM on a virtual network).
- a secret key ties a host machine addressing scheme (e.g., ⁇ Phys_IP, Phys_Port>) to a memory region associated with a VM via remote direct memory access (RDMA).
- RDMA remote direct memory access
- the VM registry service 406 returns the tuple (Phys_IP_b, Phys_Port_b, T_a_b, expiry_a_b) to COM-A process 404 in a response 426 to the request 422 , where Phys_IP_b is the IP address of the host machine on which VM-B 410 is executing and Phys_Port_b is the UDP port on VM-B's host machine that has been reserved for receiving traffic directed to VM-B 410 .
- the packet 420 can be encapsulated, at 428 .
- the encapsulated packet is transmitted to VM-B's host machine using the Phys_IP_b and Phys_Port_b as the destination address of the packet.
- Future packets destined for VM-B 410 can reuse the tuple information until expiry_a_b has passed. Once the expiry_a_b has passed (if it is not set to a value indicating that the token never expires), a new token can be obtained as described above, for example.
- a token can be used to establish a unidirectional VNP from VM-B 410 to VM-A 402 . The same process can be followed as outlined above or, alternatively, a packet sent from VM-A to VM-B can include the token.
- the encapsulated packet is received by the destination host machine for VM-B 410 where it is intercepted by the COM-B process 408 .
- the COM-B process 408 de-encapsulates the packet and verifies it based on VM-B's secret key.
- the COM-B process 408 sends the de-encapsulated packet to VM-B 410 . This can be done by injecting the IP packet into the network stack as an Ethernet frame, for example.
- FIG. 5 shows an example of an encapsulated packet.
- a communication process can receive an outgoing packet generated by a VM.
- the outgoing packet is encapsulated in a data portion 502 e of a UDP packet 502 .
- the data portion 502 e includes an encapsulated packet, such as an encapsulated IP packet 504 c , that includes the outgoing packet.
- the UDP packet 502 contains a header that includes a source port number 502 a (16 bits), a destination port number 502 b (16 bits), a length field 502 c (16 bits) which is the length of the data portion 502 e , and a checksum 502 d (16 bits).
- the source port 502 a is set to Phys_Port_a and the destination port 502 b is set to Phys_Port_b.
- the data portion 502 e is variable length and contains the outgoing packet.
- the data portion 502 e can be encrypted. Symmetric or asymmetric encryption key algorithms can be used to encrypt some or all of the data portion 502 e , for example.
- the encryption keys can be distributed by a VM registry service, e.g., VM registry service 218 of FIG. 2 .
- a conventional key negotiation protocol e.g., the Diffie-Hellman protocol, can be used in an encryption of the data portion 502 e.
- the UDP packet's data portion 502 e contains a VNP packet 504 .
- a VNP packet 504 can include the token T_a_b 504 a (64 bits), the expiry time expiry_a_b 504 b (32 bits), the outgoing packet 504 c (variable length), and an optional options field 504 d (variable length). Other lengths for the VNP packet fields are possible. In addition, the fields of the VNP packet 504 can occur in a different order than that which is illustrated in FIG. 5 .
- the outgoing packet is an IP packet. Other outgoing packet types are possible including, for example, Ethernet packets.
- the communication process or another process on the respective host machine's operating system can transmit the UDP packet 502 in an IP packet with a source IP address of Phys_IP_a and a destination IP address of Phys_IP_b.
- the encapsulated packet can be transmitted using a different protocol.
- the VNP packet 504 includes an options field 504 d .
- the options field 504 d allows a sending VM to convey additional information to a receiving VM. If the encapsulated packet is a UDP packet, as illustrated in FIG. 5 , the length of the options field can be calculated based on the difference of the value specified in the length 502 c field and the combined size of the token 504 a , expiry 504 b , and encapsulated IP packet 504 c fields. The size of the encapsulated IP packet 504 c is available in the header of the packet 504 c .
- the options field 504 d can be omitted from the VNP packet 504 if its inclusion would push the size of the encapsulated packet (e.g., UDP packet 502 ) above the maximum transmission unit (MTU) which would result in packet fragmentation.
- a field such as a bit flag, for example, can be added to the VNP packet 504 to indicate the presence of an options field 504 d.
- the options field 504 d can be used to send a return VNP token T_b_a to the receiving VM in order to avoid the receiving VM having to obtain a token in order to reply to the sending VM.
- the COM-A process 404 for VM-A 402 has all information on hand that is needed to compute T_b_a; in particular, the token is signed with VM-A 402 's secret key S_a.
- the return token T_b_a can likely be included in the first packet sent between VM-A 402 and VM-B 410 since, in the case of TCP, the first packet is a small SYN packet which leaves sufficient room for the options field 504 d containing the return token without the resulting encapsulated packet exceeding MTU.
- the options field 504 d can also be used to send various protocol extensions, to exchange encryption keys, to send control flow information, and so on.
- FIG. 6 shows an example of a packet de-encapsulation technique.
- a packet de-encapsulation technique 600 can be performed by the communication process 408 or another process on the destination host machine. The de-encapsulation technique 600 can be performed without the need to communicate with the VM registry service 218 .
- fields from the packet can be extracted to validate the packet (step 602 ).
- the source and destination IP addresses and ports of the UDP packet are extracted: Phys_IP_a, Phys_IP_b, Phys_Port_a, and Phys_Port_b.
- the source and destination address of the encapsulated IP datagram are also extracted: IP_VM_a, IP_VM_b.
- the token and expiry are extracted from the encapsulation header: T_a_b and expiry_a_b.
- the encapsulated packet is discarded (step 625 ).
- the skew is an estimate of likely clock skew between host machine clocks (e.g., a few seconds). The skew can be set to zero if host machine clocks are synchronized. Otherwise, if expiry_a_b is greater than the current time plus skew and TTL (step 606 ), the encapsulated packet is also discarded (step 625 ). A check is performed to verify whether the host operating system is hosting a VM having the address VM_IP_b (step 608 ). If not, the encapsulated packet is discarded (step 625 ).
- T_a_b_actual TruncMAC(S_b, Phys_IP_a
- T_a_b actual is then compared to the token T_a_b from the encapsulated packet (step 612 ). If T_a_b actual is the same as T_a_b then the encapsulated packet (e.g., encapsulated IP packet 504 c ) is extracted from the encapsulated packet (e.g., encapsulated packet 502 ) and is delivered to VM-B 410 (step 620 ). Otherwise, the encapsulated packet is discarded (step 625 ).
- the encapsulated packet e.g., encapsulated IP packet 504 c
- a gateway (e.g., gateway 220 , 221 ) can serve as an encapsulation gateway to allow virtual machines on a virtual network to communicate with endpoints on a public network such as the Internet.
- a host machine can send encapsulated packets to the gateway.
- the gateway receives encapsulated packet from a VM destined for the public network, the gateway can validate the token of the VNP packet. If the token validation fails, the packet is discarded. If validation succeeds, the encapsulated packet is de-encapsulated and the encapsulated packet is extracted and injected into the gateway's network stack where it is subject to normal routing.
- the gateway Upon receiving, from the public network, a non-encapsulated packet destined for a VM, the gateway obtains a token for the destination of the packet and then encapsulates the packet.
- obtaining a token can include communicating with a VM registry service.
- obtaining a token can include retrieving a token from a local cache of tokens. The gateway 220 , 221 then transmits the encapsulated packet to the destination VM's host machine.
- a communication process associated with a VM queries a VM registry service for a token that is for a destination computer that is not on the virtual network
- the VM registry service responds with a tuple (Phys_IP_b, Phys_Port_b, T_a_b, expiry_a_b) where Phys_IP_b, Phys_Port_b and Tab are for the gateway, rather than the ultimate destination, so that the VM's packets are routed through, and de-encapsulated by, the gateway.
- the VM can use this tuple to send packets to any destination on a public network thus avoiding having to obtain a tuple from the VM registry service for each unique destination.
- FIG. 7 shows an example of a load-balancing process for virtual machines on a virtual network.
- a load-balancing process runs virtual machines that communicate via a virtual network.
- the virtual machines can be configured to handle requests associated with at least a destination address on a public network.
- the virtual network is for IP based communications.
- Operating the gateways can include using separate IP tunnels to effect delivery of IP packets on the virtual network to the virtual machines.
- the process operates gateways that provide connectivity between the virtual network and the public network.
- the gateways can include a first gateway and a second gateway.
- the gateways can be configured to use a consistent mapping operation to perform load-balancing among the virtual machines.
- the process obtains health information of the virtual machines.
- Obtain health information for a virtual machine can include pinging a virtual machine or sending an application request (e.g., requesting the homepage of a webserver or requesting a file) to a virtual machine.
- Obtaining the health information can include sending packets to check respective virtual machines and receiving one or more responses to the sent packets.
- Receiving a response from a virtual machine in a predetermined amount of time e.g., 1 second, 2 second, or 10 seconds
- the process can routinely update virtual machine health information by scheduling periodic pings to the virtual machine (e.g., once every 10 seconds, 30 seconds, or 60 seconds).
- obtaining the health information can include periodically sending packets at predetermined intervals to check respective virtual machines and receiving one or more responses to the sent packets.
- the process determines, based on the health information of the virtual machines, a group of healthy virtual machines.
- the process receives, at the first gateway, an incoming packet that includes a source address and the destination address.
- the process selects, at the first gateway, a handling virtual machine based on an output of the consistent mapping operation given the source address, the destination address, and the group of healthy virtual machines. Selecting the handling virtual machine can include generating a flow identifier based on the source address, the destination address, a source port of the incoming packet, and a destination port of the incoming packet. Selecting the handling virtual machine can include using the flow identifier as input to a hash function to produce a hash value; and selecting a virtual machine based on the hash value.
- Selecting the handling virtual machine can be further based on a geographical proximity of a virtual machine to a geographical location associated with an origin of the incoming packet.
- the group of healthy virtual machines used in selecting the handling virtual machine is limited to a subgroup of healthy virtual machines that are geographically closest to the origin of the incoming packet. For example, if there are two healthy virtual machines in Atlanta and two healthy virtual machines in Nevada, a request which is received by a gateway located in New York may prefer to choose the pool of two Atlanta machines rather than the entire pool of four machines in order to improve response time for the request. This decision can be made on a global or per-virtual-address basis.
- the process forwards, at the first gateway, the incoming packet to the handling virtual machine via the virtual network.
- forwarding the incoming packet to the handling virtual machine includes sending the incoming packet to the handling virtual machine without changing the destination address.
- the virtual machines, including the handling virtual machine can include a network interface that is configured to receive packets that are addressed to the destination address.
- forwarding the incoming packet to the handling virtual machine includes performing a NAT operation on the incoming packet where the destination address of the incoming packet is replaced with a network address of the handling virtual machine, the network address being private to the virtual network.
- the process creates, in a data structure at the first gateway, an entry reflecting a mapping between the source address and the handling virtual machine to forward one or more additional incoming packets to the handling virtual machine.
- the entry can be indexed by the hash value of a flow identifier that is determined by an incoming packet.
- the entry can also include a network address of the handling virtual machine. In some implementations, the entry can include the flow identifier.
- FIG. 8 shows an example of a process that performs a consistent mapping operation.
- a process running at a virtual network gateway can use a consistent mapping operation such as a consistent hashing or deterministic mapping to ensure that packets from the same flow, e.g., the same TCP stream or the same UDP stream, are forwarded to the same backend (e.g., virtual machine). Ensuring that packets from the same flow arrive at that same backend can increase efficiency and can leverage previously performed operations.
- a process receives a packet of a flow such as an IP flow, a TCP flow, or a UDP flow. A flow can be identified based on the packet's flow identifier.
- an IP flow can be identified based on the 2-tuple of source IP address and destination IP address.
- a TCP flow can be identified by the packet's 4-tuple of source IP address, source TCP port, destination IP address, and destination TCP port.
- a UDP flow can be identified by a packet's 4-tuple of source IP address, source UDP port, destination IP address, and destination UDP port.
- gateways can track flows at the IP flow level rather than at the higher TCP or UDP flow levels.
- an IP flow is identified by a 3 -tuple that includes source IP address, destination IP address, and protocol identifier.
- a TCP flow is identified by a 5-tuple that includes source IP address, source TCP port, destination IP address, destination TCP port, and protocol identifier.
- the process computes a hash value based on the packet's flow identifier.
- a hash function e.g., MD5 Message-Digest Algorithm or a SHA-2 hash function
- the process looks up the flow in a state table based on the hash value. In some implementations, an entry located in a position corresponding to the hash value is retrieved at 810 to determine whether the entry contains the packet's flow identifier.
- the process determines whether the flow is in the state table. In some implementations, determining whether the flow is in the state table includes checking whether an entry contains the packet's flow identifier. If the entry containing the packet's flow identifier, then the flow is deemed to be in the state table. Based on the flow being in the state table, then, at 820 , the process retrieves a virtual machine identifier included in the state table entry. At 825 , the process sends the received packet to the virtual machine corresponding to the virtual machine identifier.
- the process determines a pool of healthy virtual machines.
- the process selects a virtual machine from the pool of healthy virtual machines via a consistent hash.
- the process creates a state table entry based on the hash value and an identifier for the selected virtual machine.
- the state table entry includes an identifier for the selected virtual machine.
- the state table entry includes the packet's flow identifier.
- the state table entry includes the hash value.
- the process sends the received packet to the selected virtual machine.
- a gateway can use consistent hashing to compute a backend array for a pool of healthy virtual machines.
- the backend array can be recomputed based on a change in the number of healthy virtual machines.
- the technique can mark additional slots as usable for load-balancing.
- Marked slots can include an IP address of the virtual machine associated with identifier K and a usability indicator.
- F(H) (H % Z), where Z is the size of the backend array.
- Other types of hash functions can be used.
- position Y is position X if the entry at position X has an entry that is marked as usable. If position X does not have an entry that is marked as usable, the gateway can iteratively step through higher ranked positions in the backend array until it locates a position Y with an entry that is marked as usable.
- FIG. 9A shows an example of communications among a client, virtual network gateways, and virtual machines.
- This example includes virtual machine A (VM-A) 905 a with a virtual network IP address of 10.1.2.3, virtual machine B (VM-B) 905 b with a virtual network IP address of 10.4.5.6, and virtual machine C (VM-C) 905 c with a virtual network IP address of 10.7.8.9.
- This example also includes a client 915 with an Internet IP address of 204.178.23.10 and two gateways 910 a , 910 b to bridge between the Internet and a virtual network.
- the gateways 910 a , 910 b are configured to advertise a route for a webserver with an Internet IP address of 123.24.99.230 and to perform load-balancing on one or more packets 930 having this address as a destination address.
- FIG. 9B shows an example of a consistent hash table associated with FIG. 9A .
- the gateways 910 a - b create a data structure called a consistent hash table 950 with M different hash values for each backend (e.g., virtual machines 905 a - c ).
- M is 5 and the consistent hash table 950 includes entries for VM-A at ⁇ 712, 1444, 1560, 2921, 3555>, entries for VM-B at ⁇ 88, 619, 1654, 2111, 2885>, and entries for VM-C at ⁇ 577, 914, 1811, 2044, 3982>.
- Other values for M and other types of data structures are possible.
- the different hash values for each backend can be generated by hashing a concatenation of the backend's IP address with different integer values (e.g., 1, 2, 3, 4, and 5). Other techniques are possible.
- An entry in a consistent hash table 950 can include a hash value, backend identifier (e.g., IP address of virtual address), and a usability indicator.
- a usability indicator denotes a health status (e.g., healthy or not-healthy) of a virtual machine associated with an entry.
- FIG. 9B shows one possible depiction of a consistent hash table 950 , other depictions and visual representations are possible.
- a consistent hash table 950 can be stored in a memory as an array.
- FIG. 9C shows an example of a local state table associated with FIG. 9A .
- FIG. 9C shows one possible depiction of a local state table 960 , other depictions and visual representations are possible.
- a gateway 910 a uses a local state table 960 to track how its load-balances incoming packets to handling virtual machines 905 a - c.
- a packet 930 such as a TCP SYN packet or a UDP packet, from the client 915 arrives at the gateway 910 a .
- the packet 930 has a source address port pair of 204.178.23.10:45128 and a destination address port pair of 123.24.99.230:80.
- the gateway 910 a can compute a hash value based on a flow identifier derived from the packet 930 .
- the flow identifier is a concatenation of source address 204.178.23.10, source port 45128 , destination address 123.24.99.230, and destination port 80 . This flow identifier hashes to a hash value, for example, of 1923.
- the next-higher value is 2111, which indicates that the packet 930 should be sent to VM-B.
- An entry is created in the local state table 960 at the gateway 910 a such that packets having the same flow identifier are forwarded to the same gateway, which in this case is VM-B.
- the local state table 960 at the gateway 910 a is not required to be propagated to other gateways.
- the gateway 910 a Based on making a routing decision using the local state table 960 , the gateway 910 a sends the packet 930 unchanged to VM-B. Note that the gateway 910 a can encapsulate the packet 930 for transport within a virtual network. In some implementations, the gateway 910 a performs a NAT operation on the packet 930 and changes its destination address of 123.24.99.230 to 10.4.5.6, where 10.4.5.6 is the private address for VM-B on the virtual network. If the gateway 910 a is configured to perform NAT, it translates packets from the virtual machine with source address and port of 10.4.5.6:80 so that the source address and port becomes 123.24.99.230:80.
- VM-B can send a response packet, such as a SYN/ACK packet, which is then received by the gateway 910 a (with source address and port of 123.24.99.230:80 and destination address and port of 204.178.23.10:45128), and is sent outbound to the client 915 .
- the client 915 sends the return ACK packet (with source address and port of 204.178.23.10:45128 and destination address and port of 123.24.99.230:80) which completes a TCP handshake.
- the flow identifier corresponding to the return ACK packet (which is the same as the original SYN packet 930 ) will be found in the local state table 960 and will be accordingly forwarded to VM-B.
- a subsequent packet in a flow may arrive at a different secondary gateway 910 b due to an event such as the primary gateway 910 a crashing or a route flap.
- an event such as the primary gateway 910 a crashing or a route flap.
- the remaining gateway 910 b may have the same health information as the crashed gateway 910 a and performs a consistent hashing operation.
- the secondary gateway 910 b use its consistent hash table 950 to perform a lookup based on the received packet to determine the handling virtual machine.
- the lookup yields a value of 1923 and the next-higher value of 2111—the same values that the crashed gateway 910 a would have computed. If the gateways 910 a - b have different health states for the virtual machines 905 a - c , the probability that the same backend will be chosen by a different gateway is 1 ⁇ (A/B), where A is the number of virtual machines whose health status has changed, and B is the number of healthy virtual machines in the system.
- the return ACK packet is received by the same gateway 910 a that saw the initial SYN packet 930 .
- This gateway 910 a finds a match for the ACK packet in its local state table 960 indicating that VM-B is handling, and sends the packet to VM-B. If the gateway 910 a would have not found a match in its local state table 960 , the consistent hash operation would have selected VM-C (based on the ACK packet's hash value of 1923, the next-higher value is now 2044 which maps the packet to VM-C).
- a computer storage device can be encoded with a computer program.
- the program can include instructions that when executed by data processing apparatus cause the data processing apparatus to perform operations.
- the operations can include obtaining health information of virtual machines that communicate via a virtual network, the virtual machines being configured to handle requests associated with at least a destination address on a public network; determining, based on the health information of the virtual machines, a group of healthy virtual machines comprising two or more of the virtual machines; receiving, from the public network, an incoming packet that includes a source address and the destination address; selecting a handling virtual machine of the group of healthy virtual machines based on an output of a consistent mapping operation given the source address, the destination address, and the group of healthy virtual machines, the consistent mapping operation being configured for load-balancing among the virtual machines; forwarding the incoming packet to the handling virtual machine via the virtual network; and creating a data structure entry that reflects a mapping between the source address and the handling virtual machine to forward one or more additional incoming packets, each including the source address and the destination address, to the handling virtual machine
- Embodiments of the subject matter and the operations described in this document can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this document and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this document can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on computer storage medium for execution by, or to control the operation of, data processing apparatus.
- the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- a computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them.
- a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal.
- the computer storage medium can also be, or be included in, one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
- the operations described in this document can be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
- the term “data processing apparatus” encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or multiple ones, or combinations, of the foregoing
- the apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them.
- the apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this document can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few.
- Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a
- Embodiments of the subject matter described in this document can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this document, or any combination of one or more such back-end, middleware, or front-end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network.
- Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- LAN local area network
- WAN wide area network
- inter-network e.g., the Internet
- peer-to-peer networks e.g., ad hoc peer-to-peer networks.
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- a server transmits data (e.g., an HTML page) to a client device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device).
- client device e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device.
- Data generated at the client device e.g., a result of the user interaction
Abstract
Description
Claims (16)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/312,872 US8958293B1 (en) | 2011-12-06 | 2011-12-06 | Transparent load-balancing for cloud computing services |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/312,872 US8958293B1 (en) | 2011-12-06 | 2011-12-06 | Transparent load-balancing for cloud computing services |
Publications (1)
Publication Number | Publication Date |
---|---|
US8958293B1 true US8958293B1 (en) | 2015-02-17 |
Family
ID=52463659
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/312,872 Active 2032-06-10 US8958293B1 (en) | 2011-12-06 | 2011-12-06 | Transparent load-balancing for cloud computing services |
Country Status (1)
Country | Link |
---|---|
US (1) | US8958293B1 (en) |
Cited By (62)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130091501A1 (en) * | 2011-10-05 | 2013-04-11 | International Business Machines Corporation | Defining And Managing Virtual Networks In Multi-Tenant Virtualized Data Centers |
US20130159487A1 (en) * | 2011-12-14 | 2013-06-20 | Microsoft Corporation | Migration of Virtual IP Addresses in a Failover Cluster |
US20130191477A1 (en) * | 2012-01-20 | 2013-07-25 | Electronics And Telecommunications Research Institute | Mapping system, network, and method for adaptation of id/loc separation to datacenter for cloud computing |
US20130227569A1 (en) * | 2012-02-23 | 2013-08-29 | Samsung Electronics Co., Ltd. | System and method for information acquisition of wireless sensor network data as cloud based service |
US20130268646A1 (en) * | 2012-04-04 | 2013-10-10 | Radware, Ltd. | Techniques for providing scalable application delivery controller services |
US20140006585A1 (en) * | 2012-06-29 | 2014-01-02 | Futurewei Technologies, Inc. | Providing Mobility in Overlay Networks |
US20140059176A1 (en) * | 2012-06-12 | 2014-02-27 | International Business Machines Corporation | Synchronization of load-balancing switches |
US20140254597A1 (en) * | 2013-03-06 | 2014-09-11 | Alibaba Group Holding Limited | Forwarding ethernet packets |
US20150046600A1 (en) * | 2013-08-08 | 2015-02-12 | Samsung Electronics Co., Ltd. | Method and apparatus for distributing data in hybrid cloud environment |
US20150281128A1 (en) * | 2014-03-31 | 2015-10-01 | Juniper Networks, Inc. | High-performance, scalable and drop-free data center switch fabric |
US20150281060A1 (en) * | 2014-03-27 | 2015-10-01 | Nicira, Inc. | Procedures for efficient cloud service access in a system with multiple tenant logical networks |
US20150312155A1 (en) * | 2014-04-25 | 2015-10-29 | Telefonaktiebolaget L M Ericsson (Publ) | System and method for efectuating packet distribution among servers in a network |
US9176889B1 (en) * | 2013-03-15 | 2015-11-03 | Google Inc. | Virtual machine memory management |
US20150350157A1 (en) * | 2014-05-27 | 2015-12-03 | Ravello Systems Ltd. | Source-destination network address translation (sdnat) proxy and method thereof |
US20160226771A1 (en) * | 2015-01-30 | 2016-08-04 | Progress Software Corporation | Load Balancing |
US20160259942A1 (en) * | 2014-10-21 | 2016-09-08 | Intellectual Ventures Hong Kong Limited | Automatic profiling framework of cross-vm covert channel capacity |
US9456030B2 (en) | 2014-09-15 | 2016-09-27 | Telefonaktiebolaget Lm Ericsson (Publ) | Methods of operating load balancing switches and controllers using modified flow entries |
US9485191B2 (en) | 2014-03-31 | 2016-11-01 | Juniper Networks, Inc. | Flow-control within a high-performance, scalable and drop-free data center switch fabric |
US9557978B2 (en) | 2011-03-16 | 2017-01-31 | Google Inc. | Selection of ranked configurations |
US9621642B2 (en) | 2013-06-17 | 2017-04-11 | Telefonaktiebolaget Lm Ericsson (Publ) | Methods of forwarding data packets using transient tables and related load balancers |
WO2017079316A1 (en) * | 2015-11-03 | 2017-05-11 | Nec Laboratories America, Inc. | Design of randomization function and its application in load balancing |
US9703743B2 (en) | 2014-03-31 | 2017-07-11 | Juniper Networks, Inc. | PCIe-based host network accelerators (HNAS) for data center overlay network |
US20170207964A1 (en) * | 2016-01-15 | 2017-07-20 | Dell Products L.P. | Systems and methods for proactively recommending input/output redirection using management controller |
US9720952B2 (en) | 2012-03-27 | 2017-08-01 | Google Inc. | Virtual block devices |
US9798567B2 (en) | 2014-11-25 | 2017-10-24 | The Research Foundation For The State University Of New York | Multi-hypervisor virtual machines |
US9841988B1 (en) | 2016-11-16 | 2017-12-12 | Red Hat Israel, Ltd. | Updating service virtual machines using a new image that is certified |
WO2017214883A1 (en) * | 2016-06-15 | 2017-12-21 | Alibaba Group Holding Limited | Network system and method for cross region virtual private network peering |
US20180007162A1 (en) * | 2016-06-29 | 2018-01-04 | Nicira, Inc. | Upgrading a proxy that decouples network connections from an application during application's downtime |
US9898317B2 (en) | 2012-06-06 | 2018-02-20 | Juniper Networks, Inc. | Physical path determination for virtual network packet flows |
US9935862B2 (en) | 2015-09-08 | 2018-04-03 | At&T Intellectual Property I, L.P. | Low-impact proactive monitoring of customer access to virtualized network elements in a cloud platform |
CN108293022A (en) * | 2015-12-30 | 2018-07-17 | 华为技术有限公司 | A kind of methods, devices and systems of message transmissions |
US20180295064A1 (en) * | 2017-04-10 | 2018-10-11 | Vmware, Inc. | Traffic optimization for multi-node applications |
US20190007322A1 (en) * | 2016-02-14 | 2019-01-03 | Huawei Technologies Co., Ltd. | Virtual network device and related method |
US10237339B2 (en) | 2016-08-19 | 2019-03-19 | Microsoft Technology Licensing, Llc | Statistical resource balancing of constrained microservices in cloud PAAS environments |
US10243840B2 (en) | 2017-03-01 | 2019-03-26 | Juniper Networks, Inc. | Network interface card switching for virtual networks |
US20190121683A1 (en) * | 2007-01-07 | 2019-04-25 | Apple Inc. | Memory management methods and systems |
US20190173780A1 (en) * | 2017-12-04 | 2019-06-06 | Nicira, Inc. | Failover of centralized routers in public cloud logical networks |
US10367655B2 (en) | 2016-01-25 | 2019-07-30 | Alibaba Group Holding Limited | Network system and method for connecting a private network with a virtual private network |
US10375158B2 (en) | 2012-04-04 | 2019-08-06 | Radware, Ltd. | Techniques for adaptive traffic direction via scalable application delivery controller services |
US10375118B2 (en) * | 2015-07-13 | 2019-08-06 | Blackridge Technology Holdings, Inc. | Method for attribution security system |
US10397189B1 (en) * | 2016-09-27 | 2019-08-27 | Amazon Technologies, Inc. | Peered virtual private network endpoint nodes |
US10491466B1 (en) | 2018-08-24 | 2019-11-26 | Vmware, Inc. | Intelligent use of peering in public cloud |
US10491516B2 (en) | 2017-08-24 | 2019-11-26 | Nicira, Inc. | Packet communication between logical networks and public cloud service providers native networks using a single network interface and a single routing table |
US10567482B2 (en) | 2017-08-24 | 2020-02-18 | Nicira, Inc. | Accessing endpoints in logical networks and public cloud service providers native networks using a single network interface and a single routing table |
US10652320B2 (en) | 2017-02-21 | 2020-05-12 | Microsoft Technology Licensing, Llc | Load balancing in distributed computing systems |
US10805330B2 (en) | 2016-08-31 | 2020-10-13 | Nicira, Inc. | Identifying and handling threats to data compute nodes in public cloud |
US10812413B2 (en) | 2016-08-27 | 2020-10-20 | Nicira, Inc. | Logical network domains stretched between public and private datacenters |
US10862753B2 (en) | 2017-12-04 | 2020-12-08 | Nicira, Inc. | High availability for stateful services in public cloud logical networks |
US10942791B2 (en) | 2018-09-17 | 2021-03-09 | Oracle International Corporation | Managing load in request processing environments |
US10999244B2 (en) | 2018-09-21 | 2021-05-04 | Microsoft Technology Licensing, Llc | Mapping a service into a virtual network using source network address translation |
US11012507B2 (en) * | 2016-08-29 | 2021-05-18 | Vmware, Inc. | High throughput layer 2 extension leveraging CPU flow affinity |
CN113254165A (en) * | 2021-07-09 | 2021-08-13 | 易纳购科技(北京)有限公司 | Load flow distribution method and device for virtual machine and container, and computer equipment |
US11182187B2 (en) | 2018-04-17 | 2021-11-23 | Red Hat Israel, Ltd. | Dynamic network connectivity verification in distributed virtual environments |
US11190435B2 (en) * | 2013-01-04 | 2021-11-30 | Nec Corporation | Control apparatus, communication system, tunnel endpoint control method, and program |
US11196591B2 (en) | 2018-08-24 | 2021-12-07 | Vmware, Inc. | Centralized overlay gateway in public cloud |
US11249937B1 (en) * | 2015-09-29 | 2022-02-15 | Amazon Technologies, Inc. | Storage adapter device for communicating with network storage |
US11343229B2 (en) | 2018-06-28 | 2022-05-24 | Vmware, Inc. | Managed forwarding element detecting invalid packet addresses |
US11374794B2 (en) | 2018-08-24 | 2022-06-28 | Vmware, Inc. | Transitive routing in public cloud |
US11593450B2 (en) | 2020-05-29 | 2023-02-28 | Bank Of America Corporation | System for dynamic generation of a transmission interface bridge for computing platforms |
US11695697B2 (en) | 2017-08-27 | 2023-07-04 | Nicira, Inc. | Performing in-line service in public cloud |
US11809891B2 (en) | 2018-06-01 | 2023-11-07 | The Research Foundation For The State University Of New York | Multi-hypervisor virtual machines that run on multiple co-located hypervisors |
US20240007377A1 (en) * | 2022-06-30 | 2024-01-04 | Microsoft Technology Licensing, Llc | Latency monitoring and reporting for distributed gateways |
Citations (166)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5463768A (en) | 1994-03-17 | 1995-10-31 | General Electric Company | Method and system for analyzing error logs for diagnostics |
US5655081A (en) | 1995-03-08 | 1997-08-05 | Bmc Software, Inc. | System for monitoring and managing computer resources and applications across a distributed computing environment using an intelligent autonomous agent architecture |
US5778444A (en) | 1996-05-06 | 1998-07-07 | Motorola, Inc. | Method and apparatus for reset-sensitive and controlled register write accesses in a data processing system with user and test modes |
US5794224A (en) | 1994-09-30 | 1998-08-11 | Yufik; Yan M. | Probabilistic resource allocation system with self-adaptive capability |
US6148368A (en) | 1997-07-31 | 2000-11-14 | Lsi Logic Corporation | Method for accelerating disk array write operations using segmented cache memory and data logging |
US6178482B1 (en) | 1997-11-03 | 2001-01-23 | Brecis Communications | Virtual register sets |
EP1130845A2 (en) | 2000-02-18 | 2001-09-05 | Agilent Technologies Inc. a Delaware Corporation | Publish/subscribe system |
US20020091902A1 (en) | 2001-01-10 | 2002-07-11 | Susumu Hirofuji | File system and data caching method thereof |
US20020097747A1 (en) | 2000-05-22 | 2002-07-25 | Kirkby Paul Anthony | Management and control of multi-layer networks |
US6449671B1 (en) | 1999-06-09 | 2002-09-10 | Ati International Srl | Method and apparatus for busing data elements |
US6490651B1 (en) | 2000-03-14 | 2002-12-03 | Maxtor Corporation | Host-based virtual disk drive for improving the performance of a hard disk drive's input/output |
US6505248B1 (en) | 1999-03-24 | 2003-01-07 | Gte Data Services Incorporated | Method and system for monitoring and dynamically reporting a status of a remote server |
US6505211B1 (en) | 1999-01-26 | 2003-01-07 | International Business Machines Corporation | Method for providing for persistence of java classes where the persistence semantics may be orthogonal to the class definition |
US6587866B1 (en) | 2000-01-10 | 2003-07-01 | Sun Microsystems, Inc. | Method for distributing packets to server nodes using network client affinity and packet distribution table |
US6598179B1 (en) | 2000-03-31 | 2003-07-22 | International Business Machines Corporation | Table-based error log analysis |
US6643613B2 (en) | 2001-07-03 | 2003-11-04 | Altaworks Corporation | System and method for monitoring performance metrics |
US20040068637A1 (en) | 2002-10-03 | 2004-04-08 | Nelson Lee L. | Virtual storage systems and virtual storage system operational methods |
US20040139368A1 (en) | 2003-01-09 | 2004-07-15 | International Business Machines Corporation | Method and apparatus for reporting error logs in a logical environment |
US20040148484A1 (en) | 2003-01-23 | 2004-07-29 | Hitachi, Ltd. | Throttling in storage systems |
US20040210653A1 (en) | 2003-04-16 | 2004-10-21 | Novadigm, Inc. | Method and system for patch management |
US6829678B1 (en) | 2000-07-18 | 2004-12-07 | International Business Machines Corporation | System for determining the order and frequency in which space is allocated on individual storage devices |
US20050010715A1 (en) | 2003-04-23 | 2005-01-13 | Dot Hill Systems Corporation | Network storage appliance with integrated server and redundant storage controllers |
US6891839B2 (en) | 1999-07-01 | 2005-05-10 | Cisco Technology, Inc. | Distributing packets among multiple tiers of network appliances |
US6898697B1 (en) | 2002-03-29 | 2005-05-24 | Advanced Micro Devices, Inc. | Efficient method for mode change detection and synchronization |
US20050166011A1 (en) | 2004-01-23 | 2005-07-28 | Burnett Robert J. | System for consolidating disk storage space of grid computers into a single virtual disk drive |
US20050196030A1 (en) | 2004-02-12 | 2005-09-08 | Nortel Networks Limited | Method and apparatus for monitoring the transportation of medical images on a communication network |
US20050216659A1 (en) | 2004-03-26 | 2005-09-29 | Hitachi, Ltd. | Storage capable of cache assignment modification |
US20050237543A1 (en) | 2000-02-29 | 2005-10-27 | Canon Kabushiki Kaisha | Network device manager |
EP1253766B1 (en) | 2001-04-24 | 2005-12-07 | Sun Microsystems, Inc. | Peer group name server |
US20050289499A1 (en) | 2004-06-25 | 2005-12-29 | Matsushita Electric Industrial Co., Ltd. | High level synthesis method for semiconductor integrated circuit |
US20060026354A1 (en) | 2004-07-27 | 2006-02-02 | Texas Instruments Incorporated | Cache memory usable as scratch pad storage |
US6996502B2 (en) | 2004-01-20 | 2006-02-07 | International Business Machines Corporation | Remote enterprise management of high availability systems |
US20060048077A1 (en) | 2004-08-31 | 2006-03-02 | International Business Machines Corporation | Method, system, program product and user interface for displaying a topology |
US20060048130A1 (en) | 2004-08-31 | 2006-03-02 | Microsoft Corporation | Patch sequencing |
US20060059228A1 (en) | 2004-08-12 | 2006-03-16 | Oracle International Corporation | Capturing and re-creating the state of a queue when migrating a session |
US20060067236A1 (en) | 2004-09-30 | 2006-03-30 | Sanyogita Gupta | Determining and provisioning paths in a network |
US20060075199A1 (en) | 2004-10-06 | 2006-04-06 | Mahesh Kallahalla | Method of providing storage to virtual computer cluster within shared computing environment |
US7043455B1 (en) | 2000-07-28 | 2006-05-09 | International Business Machines Corporation | Method and apparatus for securing session information of users in a web application server environment |
US20060098618A1 (en) * | 2003-01-31 | 2006-05-11 | Koninklijke Philips Electronics N.V. | Method and bridging device for priortizing transfer of data streams |
US7062718B2 (en) | 2001-08-14 | 2006-06-13 | National Instruments Corporation | Configuration diagram which graphically displays program relationship |
US20060136676A1 (en) | 2004-12-21 | 2006-06-22 | Park Chan-Ik | Apparatus and methods using invalidity indicators for buffered memory |
US20060153099A1 (en) | 2004-12-23 | 2006-07-13 | Carmel-Haifa University Economic Corp. Ltd. | Ad hoc communication system and method for routing speech packets therein |
US20060161753A1 (en) | 2005-01-18 | 2006-07-20 | Aschoff John G | Method, apparatus and program storage device for providing automatic performance optimization of virtualized storage allocation within a virtualized storage subsystem |
US7117243B2 (en) | 2001-10-02 | 2006-10-03 | Citrix Systems, Inc. | Methods for distributed program execution with file-type association in a client-server network |
US20060271547A1 (en) | 2005-05-25 | 2006-11-30 | Microsoft Corporation | Cluster storage collection based data management |
US20070011361A1 (en) | 2005-07-07 | 2007-01-11 | Wataru Okada | Storage management system |
US20070112956A1 (en) | 2005-11-12 | 2007-05-17 | Chapman Matthew P | Resource optimisation component |
US20070118694A1 (en) | 2004-03-23 | 2007-05-24 | Hitachi, Ltd. | Storage system |
US20070123276A1 (en) * | 2003-08-29 | 2007-05-31 | Stephen Parker | Secure valet telephone system apparatus and method |
US20070177198A1 (en) * | 2006-01-30 | 2007-08-02 | Brother Kogyo Kabushiki Kaisha | Data Processing Device for Renaming Virtual Device |
US20070199058A1 (en) | 2006-02-10 | 2007-08-23 | Secunet Security Networks Aktiengesellschaft | Method of using a security token |
US20070271604A1 (en) | 2004-03-17 | 2007-11-22 | Fidelitygenetic Ltd. | Secure Transaction of Dna Data |
US20070280243A1 (en) | 2004-09-17 | 2007-12-06 | Hewlett-Packard Development Company, L.P. | Network Virtualization |
US20070288921A1 (en) | 2006-06-13 | 2007-12-13 | King Steven R | Emulating a network-like communication connection between virtual machines on a physical device |
US20080028389A1 (en) | 2006-07-27 | 2008-01-31 | Genty Denise M | Filtering a list of available install items for an install program based on a consumer's install policy |
US7356679B1 (en) | 2003-04-11 | 2008-04-08 | Vmware, Inc. | Computer image capture, customization and deployment |
US20080086515A1 (en) | 2006-10-06 | 2008-04-10 | International Business Machines Corporation | Method and System for a Soft Error Collection of Trace Files |
US20080095176A1 (en) | 2006-10-20 | 2008-04-24 | Ciena Corporation | System and method for supporting virtualized links at an exterior network-to-network interface |
US20080107112A1 (en) | 2006-11-03 | 2008-05-08 | Hon Hai Precision Industry Co., Ltd. | Network device and packet forwarding method thereof |
US20080208681A1 (en) | 2006-09-28 | 2008-08-28 | Ayman Hammad | Payment using a mobile device |
US20080205415A1 (en) | 2007-02-28 | 2008-08-28 | Morales Henry N Jerez | Access, Connectivity and Interoperability for Devices and Services |
US20080215796A1 (en) | 2003-12-08 | 2008-09-04 | The Board Of Trustees Of The Leland Stanford Junior University | Virtual Appliance Management |
US20080222246A1 (en) | 2006-06-15 | 2008-09-11 | International Business Machines Corporation | Method and Apparatus for Localized Adaptation of Client Devices Based on Correlation or Learning at Remote Server |
US20080222375A1 (en) | 2007-02-21 | 2008-09-11 | Deutsche Telekom Ag | Method and system for the transparent migration of virtual machines storage |
US20080244471A1 (en) | 1999-02-05 | 2008-10-02 | Killian Earl A | System and method of customizing an existing processor design having an existing processor instruction set architecture with instruction extensions |
US20080244030A1 (en) | 2007-03-30 | 2008-10-02 | Gregory Leitheiser | Methods and apparatus to perform file transfers in distributed file systems |
US20080250407A1 (en) | 2007-04-05 | 2008-10-09 | Microsoft Corporation | Network group name for virtual machines |
US20080270704A1 (en) | 2007-04-30 | 2008-10-30 | He Dingshan | Cache arrangement for improving raid i/o operations |
US20080304516A1 (en) | 2007-06-06 | 2008-12-11 | Hanhua Feng | Distributed Joint Admission Control And Dynamic Resource Allocation In Stream Processing Networks |
US20080307258A1 (en) | 2007-06-11 | 2008-12-11 | International Business Machines Corporation | Distributed Job Manager Recovery |
US7466703B1 (en) * | 1998-05-01 | 2008-12-16 | Alcatel-Lucent Usa Inc. | Scalable high speed router apparatus |
US20080313241A1 (en) | 2007-06-15 | 2008-12-18 | Microsoft Corporation | Distributed data storage using erasure resilient coding |
US7478388B1 (en) | 2004-04-21 | 2009-01-13 | Vmware, Inc. | Switching between multiple software entities using different operating modes of a processor in a computer system |
US7500262B1 (en) | 2002-04-29 | 2009-03-03 | Aol Llc | Implementing single sign-on across a heterogeneous collection of client/server and web-based applications |
US20090097657A1 (en) | 2007-10-05 | 2009-04-16 | Scheidt Edward M | Constructive Channel Key |
US7529836B1 (en) | 2004-01-08 | 2009-05-05 | Network Appliance, Inc. | Technique for throttling data access requests |
US20090150629A1 (en) | 2007-12-05 | 2009-06-11 | Fujitsu Limited | Storage management device, storage system control device, storage medium storing storage management program, and storage system |
US20090199177A1 (en) | 2004-10-29 | 2009-08-06 | Hewlett-Packard Development Company, L.P. | Virtual computing infrastructure |
US7584467B2 (en) | 2003-03-17 | 2009-09-01 | Microsoft Corporation | Software updating system and method |
US20090222815A1 (en) | 2008-02-29 | 2009-09-03 | Steven Dake | Fault tolerant virtual machine |
US20090235358A1 (en) | 2004-12-10 | 2009-09-17 | Microsoft Corporation | Systems and methods for attaching a virtual machine virtual hard disk to a host machine |
US20090240744A1 (en) | 2008-03-21 | 2009-09-24 | Qualcomm Incorporated | Pourover journaling |
US20090241108A1 (en) | 2004-10-29 | 2009-09-24 | Hewlett-Packard Development Company, L.P. | Virtual computing infrastructure |
US7596620B1 (en) | 2008-11-04 | 2009-09-29 | Aptana, Inc. | System and method for developing, deploying, managing and monitoring a web application in a single environment |
US20090249440A1 (en) | 2008-03-30 | 2009-10-01 | Platt Darren C | System, method, and apparatus for managing access to resources across a network |
US20090276771A1 (en) | 2005-09-15 | 2009-11-05 | 3Tera, Inc. | Globally Distributed Utility Computing Cloud |
US20090282266A1 (en) | 2008-05-08 | 2009-11-12 | Microsoft Corporation | Corralling Virtual Machines With Encryption Keys |
US20090300641A1 (en) | 2008-05-30 | 2009-12-03 | Novell, Inc. | System and method for supporting a virtual appliance |
US20090300605A1 (en) | 2004-10-29 | 2009-12-03 | Hewlett-Packard Development Company, L.P. | Virtual computing infrastructure |
US20090310554A1 (en) | 2008-06-16 | 2009-12-17 | Qualcomm Incorporated | Jamming graph and its application in network resource assignment |
US7650331B1 (en) | 2004-06-18 | 2010-01-19 | Google Inc. | System and method for efficient large-scale data processing |
US20100017859A1 (en) | 2003-12-23 | 2010-01-21 | Wells Fargo Bank, N.A. | Authentication system for networked computer applications |
US7653833B1 (en) | 2006-10-31 | 2010-01-26 | Hewlett-Packard Development Company, L.P. | Terminating a non-clustered workload in response to a failure of a system with a clustered workload |
US20100023582A1 (en) | 2006-04-12 | 2010-01-28 | Pedersen Brad J | Systems and Methods for Accelerating Delivery of a Computing Environment to a Remote User |
US20100046426A1 (en) | 2008-05-02 | 2010-02-25 | Rochester Institute Of Technology | Methods for providing an ad hoc mobile communication network and systems thereof |
US20100057913A1 (en) | 2008-08-29 | 2010-03-04 | Dehaan Michael Paul | Systems and methods for storage allocation in provisioning of virtual machines |
US20100071035A1 (en) | 2008-09-12 | 2010-03-18 | Renata Budko | Methods and systems for securely managing virtualization platform |
US20100094999A1 (en) | 2008-10-10 | 2010-04-15 | Netapp Inc. | Limiting simultaneous data transfers and efficient throttle management |
US20100095000A1 (en) | 2008-10-14 | 2010-04-15 | Kevin Kettler | Enabling Throttling of Resources on a Virtualization Enabled Information Handling System |
US7761573B2 (en) | 2005-12-07 | 2010-07-20 | Avaya Inc. | Seamless live migration of virtual machines across optical networks |
US20100199089A1 (en) | 2009-02-05 | 2010-08-05 | Wwpass Corporation | Centralized authentication system with safe private data storage and method |
US20100215050A1 (en) * | 2009-02-20 | 2010-08-26 | Hitachi, Ltd. | Packet processing device by multiple processor cores and packet processing method by the same |
US20100217927A1 (en) | 2004-12-21 | 2010-08-26 | Samsung Electronics Co., Ltd. | Storage device and user device including the same |
US20100235649A1 (en) | 2009-03-13 | 2010-09-16 | Microsoft Corporation | Portable secure data files |
US7804862B1 (en) | 2004-05-25 | 2010-09-28 | Qlogic, Corporation | Token ID mechanism for network data transfer |
US20100274984A1 (en) | 2009-04-22 | 2010-10-28 | Hitachi, Ltd. | Management server device for managing virtual storage device, and method for managing virtual storage device |
US20100287548A1 (en) | 2009-05-06 | 2010-11-11 | Vmware, Inc. | Long Distance Virtual Machine Migration |
US7836285B2 (en) | 2007-08-08 | 2010-11-16 | Analog Devices, Inc. | Implementation of variable length instruction encoding using alias addressing |
US20100293285A1 (en) | 2001-04-18 | 2010-11-18 | Hitachi, Ltd. | Method of translating protocol at translator, method of providing protocol translation information at translation server, and address translation server |
US20100303241A1 (en) | 2009-06-02 | 2010-12-02 | Oliver Breyel | Automatic change of symmetrical encryption key |
US20110010483A1 (en) | 2007-06-28 | 2011-01-13 | Nokia Corporation | Memory protection unit in a virtual processing environment |
US20110022812A1 (en) | 2009-05-01 | 2011-01-27 | Van Der Linden Rob | Systems and methods for establishing a cloud bridge between virtual storage resources |
US20110055361A1 (en) | 2009-08-31 | 2011-03-03 | Dehaan Michael Paul | Systems and methods for generating management agent installations |
US20110060882A1 (en) | 2009-09-04 | 2011-03-10 | Petros Efstathopoulos | Request Batching and Asynchronous Request Execution For Deduplication Servers |
US20110078363A1 (en) | 2009-09-30 | 2011-03-31 | Phison Electronics Corp. | Block management method for a flash memory and flash memory controller and storage system using the same |
US20110085563A1 (en) | 2009-10-14 | 2011-04-14 | Dell Products, Lp | Virtualization Aware Network Switch |
US20110103389A1 (en) | 2009-11-03 | 2011-05-05 | Blade Network Technologies, Inc. | Method and apparatus for switching traffic between virtual machines |
US20110153838A1 (en) | 2009-12-18 | 2011-06-23 | Microsoft Corporation | Session monitoring of virtual desktops in a virtual machine farm |
US20110153697A1 (en) | 2005-09-15 | 2011-06-23 | Computer Assoicates Think, Inc. | Automated Filer Technique for Use in Virtualized Appliances and Applications |
US20110179412A1 (en) | 2007-05-23 | 2011-07-21 | Nec Corporation | Information sharing system, computer, project managing server, and information sharing method used in them |
US20110191768A1 (en) | 2010-02-03 | 2011-08-04 | Xobni Corporation | Systems and Methods to Identify Users Using an Automated Learning Process |
US20110191485A1 (en) | 2010-02-03 | 2011-08-04 | Os Nexus, Inc. | Role based access control utilizing scoped permissions |
WO2011095516A1 (en) | 2010-02-05 | 2011-08-11 | St-Ericsson Sa | Method and system for mass storage on flash memory |
US20110197024A1 (en) | 2010-02-10 | 2011-08-11 | International Business Machines Corporation | Providing redundancy in a virtualized storage system for a computer system |
US20110231280A1 (en) | 2010-03-17 | 2011-09-22 | Siamak Farah | Cloud-based desktop and subscription application platform apparatuses, methods and systems |
US20110246767A1 (en) | 2010-03-30 | 2011-10-06 | Pradeep Kumar Chaturvedi | Secure virtual machine memory |
US20110258441A1 (en) | 2010-04-20 | 2011-10-20 | International Business Machines Corporation | Secure Access to a Virtual Machine |
US8051414B2 (en) | 2005-08-01 | 2011-11-01 | Siemens Aktiengesellschaft | Method and system for remote software updating of a medical device |
US8065717B2 (en) | 2002-11-27 | 2011-11-22 | Activcard | Automated security token administrative services |
US20110296157A1 (en) | 2010-05-28 | 2011-12-01 | Dell Products, Lp | System and Method for Supporting Secure Subsystems in a Client Hosted Virtualization System |
US20110302415A1 (en) | 2010-06-02 | 2011-12-08 | Vmware, Inc. | Securing customer virtual machines in a multi-tenant cloud |
US20110302400A1 (en) | 2010-06-07 | 2011-12-08 | Maino Fabio R | Secure virtual machine bootstrap in untrusted cloud infrastructures |
US8103771B2 (en) | 2004-02-03 | 2012-01-24 | Sony Corporation | Distributing processing apparatus, method, and system |
US8108903B2 (en) | 2003-06-18 | 2012-01-31 | Telefonaktiebolaget Lm Ericsson (Publ) | Arrangement and a method relating to IP network access |
US8127295B1 (en) | 2007-08-03 | 2012-02-28 | Oracle America, Inc. | Scalable resource allocation |
US20120060018A1 (en) | 2010-09-02 | 2012-03-08 | International Business Machines Corporation | Collective Operations in a File System Based Execution Model |
US20120063458A1 (en) | 2010-09-15 | 2012-03-15 | International Business Machines Corporation | Multiple virtual machines sharing a single ip address |
US8146147B2 (en) | 2008-03-27 | 2012-03-27 | Juniper Networks, Inc. | Combined firewalls |
US20120084570A1 (en) | 2010-09-30 | 2012-04-05 | Microsoft Corporation | Remote Resources Single Sign On |
US20120084768A1 (en) | 2010-09-30 | 2012-04-05 | International Business Machines Corporation | Capturing Multi-Disk Virtual Machine Images Automatically |
US20120089981A1 (en) | 2008-06-30 | 2012-04-12 | Oracle America Inc. | Method and system for power management in a virtual machine environment without disrupting network connectivity |
US20120159634A1 (en) | 2010-12-15 | 2012-06-21 | International Business Machines Corporation | Virtual machine migration |
US20120173866A1 (en) | 2010-12-31 | 2012-07-05 | International Business Machines Corporation | System for securing virtual machine disks on a remote shared storage subsystem |
US8219777B2 (en) | 2002-10-03 | 2012-07-10 | Hewlett-Packard Development Company, L.P. | Virtual storage systems, virtual storage methods and methods of over committing a virtual raid storage system |
US20120179796A1 (en) | 2010-06-24 | 2012-07-12 | Ashwath Nagaraj | Routing and service performance management in an application acceleration environment |
US20120185688A1 (en) | 2011-01-13 | 2012-07-19 | Google Inc. | Processor mode locking |
US20120191912A1 (en) | 2011-01-20 | 2012-07-26 | Google Inc. | Storing data on storage nodes |
US8261295B1 (en) | 2011-03-16 | 2012-09-04 | Google Inc. | High-level language for specifying configurations of cloud-based deployments |
US20120233678A1 (en) | 2011-03-10 | 2012-09-13 | Red Hat, Inc. | Securely and automatically connecting virtual machines in a public cloud to corporate resource |
US20120233705A1 (en) | 2009-12-01 | 2012-09-13 | Andre Michel Boysen | System and methods for identity attribute validation |
US8276140B1 (en) | 2011-11-14 | 2012-09-25 | Google Inc. | Adjustable virtual network performance |
US20120246637A1 (en) * | 2011-03-22 | 2012-09-27 | Cisco Technology, Inc. | Distributed load balancer in a virtual machine environment |
US8296459B1 (en) | 2010-06-30 | 2012-10-23 | Amazon Technologies, Inc. | Custom routing decisions |
US20130047151A1 (en) * | 2011-08-16 | 2013-02-21 | Microsoft Corporation | Virtualization gateway between virtualized and non-virtualized networks |
US20130074181A1 (en) | 2011-09-19 | 2013-03-21 | Cisco Technology, Inc. | Auto Migration of Services Within a Virtual Data Center |
US8407687B2 (en) | 2000-09-22 | 2013-03-26 | Lumension Security, Inc. | Non-invasive automatic offsite patch fingerprinting and updating system and method |
US20130081014A1 (en) | 2011-09-23 | 2013-03-28 | Google Inc. | Bandwidth throttling of virtual disks |
US8423993B2 (en) | 2008-02-29 | 2013-04-16 | Red Hat, Inc. | Systems and methods for managing software patches |
US20130117801A1 (en) | 2011-11-03 | 2013-05-09 | Choung-Yaw Michael Shieh | Virtual security boundary for physical or virtual network devices |
US8468535B1 (en) | 2008-09-23 | 2013-06-18 | Gogrid, LLC | Automated system and method to provision and allocate hosting resources |
US8484353B1 (en) | 2010-09-28 | 2013-07-09 | Amazon Technologies, Inc. | Resource placement templates for virtual networks |
US8504844B2 (en) | 2008-12-19 | 2013-08-06 | Teradata Us, Inc. | System, method, and computer-readable medium for cryptographic key rotation in a database system |
US20130212709A1 (en) | 2010-10-31 | 2013-08-15 | Temporal Defense Systems, Llc | System and Method for Securing Virtual Computing Environments |
US20130227303A1 (en) | 2012-02-24 | 2013-08-29 | Google Inc. | Log structured volume encryption for virtual machines |
US8533796B1 (en) | 2011-03-16 | 2013-09-10 | Google Inc. | Providing application programs with access to secured resources |
US20130276068A1 (en) | 2010-10-19 | 2013-10-17 | ArulMurugan Alwar | Methods and systems for generation of authorized virtual appliances |
-
2011
- 2011-12-06 US US13/312,872 patent/US8958293B1/en active Active
Patent Citations (167)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5463768A (en) | 1994-03-17 | 1995-10-31 | General Electric Company | Method and system for analyzing error logs for diagnostics |
US5794224A (en) | 1994-09-30 | 1998-08-11 | Yufik; Yan M. | Probabilistic resource allocation system with self-adaptive capability |
US5655081A (en) | 1995-03-08 | 1997-08-05 | Bmc Software, Inc. | System for monitoring and managing computer resources and applications across a distributed computing environment using an intelligent autonomous agent architecture |
US5778444A (en) | 1996-05-06 | 1998-07-07 | Motorola, Inc. | Method and apparatus for reset-sensitive and controlled register write accesses in a data processing system with user and test modes |
US6148368A (en) | 1997-07-31 | 2000-11-14 | Lsi Logic Corporation | Method for accelerating disk array write operations using segmented cache memory and data logging |
US6178482B1 (en) | 1997-11-03 | 2001-01-23 | Brecis Communications | Virtual register sets |
US7466703B1 (en) * | 1998-05-01 | 2008-12-16 | Alcatel-Lucent Usa Inc. | Scalable high speed router apparatus |
US6505211B1 (en) | 1999-01-26 | 2003-01-07 | International Business Machines Corporation | Method for providing for persistence of java classes where the persistence semantics may be orthogonal to the class definition |
US20080244471A1 (en) | 1999-02-05 | 2008-10-02 | Killian Earl A | System and method of customizing an existing processor design having an existing processor instruction set architecture with instruction extensions |
US6505248B1 (en) | 1999-03-24 | 2003-01-07 | Gte Data Services Incorporated | Method and system for monitoring and dynamically reporting a status of a remote server |
US6449671B1 (en) | 1999-06-09 | 2002-09-10 | Ati International Srl | Method and apparatus for busing data elements |
US6891839B2 (en) | 1999-07-01 | 2005-05-10 | Cisco Technology, Inc. | Distributing packets among multiple tiers of network appliances |
US6587866B1 (en) | 2000-01-10 | 2003-07-01 | Sun Microsystems, Inc. | Method for distributing packets to server nodes using network client affinity and packet distribution table |
EP1130845A2 (en) | 2000-02-18 | 2001-09-05 | Agilent Technologies Inc. a Delaware Corporation | Publish/subscribe system |
US20050237543A1 (en) | 2000-02-29 | 2005-10-27 | Canon Kabushiki Kaisha | Network device manager |
US6490651B1 (en) | 2000-03-14 | 2002-12-03 | Maxtor Corporation | Host-based virtual disk drive for improving the performance of a hard disk drive's input/output |
US6598179B1 (en) | 2000-03-31 | 2003-07-22 | International Business Machines Corporation | Table-based error log analysis |
US20020097747A1 (en) | 2000-05-22 | 2002-07-25 | Kirkby Paul Anthony | Management and control of multi-layer networks |
US6829678B1 (en) | 2000-07-18 | 2004-12-07 | International Business Machines Corporation | System for determining the order and frequency in which space is allocated on individual storage devices |
US7043455B1 (en) | 2000-07-28 | 2006-05-09 | International Business Machines Corporation | Method and apparatus for securing session information of users in a web application server environment |
US8407687B2 (en) | 2000-09-22 | 2013-03-26 | Lumension Security, Inc. | Non-invasive automatic offsite patch fingerprinting and updating system and method |
US20020091902A1 (en) | 2001-01-10 | 2002-07-11 | Susumu Hirofuji | File system and data caching method thereof |
US20100293285A1 (en) | 2001-04-18 | 2010-11-18 | Hitachi, Ltd. | Method of translating protocol at translator, method of providing protocol translation information at translation server, and address translation server |
EP1253766B1 (en) | 2001-04-24 | 2005-12-07 | Sun Microsystems, Inc. | Peer group name server |
US6643613B2 (en) | 2001-07-03 | 2003-11-04 | Altaworks Corporation | System and method for monitoring performance metrics |
US7062718B2 (en) | 2001-08-14 | 2006-06-13 | National Instruments Corporation | Configuration diagram which graphically displays program relationship |
US7117243B2 (en) | 2001-10-02 | 2006-10-03 | Citrix Systems, Inc. | Methods for distributed program execution with file-type association in a client-server network |
US6898697B1 (en) | 2002-03-29 | 2005-05-24 | Advanced Micro Devices, Inc. | Efficient method for mode change detection and synchronization |
US7500262B1 (en) | 2002-04-29 | 2009-03-03 | Aol Llc | Implementing single sign-on across a heterogeneous collection of client/server and web-based applications |
US20040068637A1 (en) | 2002-10-03 | 2004-04-08 | Nelson Lee L. | Virtual storage systems and virtual storage system operational methods |
US8219777B2 (en) | 2002-10-03 | 2012-07-10 | Hewlett-Packard Development Company, L.P. | Virtual storage systems, virtual storage methods and methods of over committing a virtual raid storage system |
US8065717B2 (en) | 2002-11-27 | 2011-11-22 | Activcard | Automated security token administrative services |
US20040139368A1 (en) | 2003-01-09 | 2004-07-15 | International Business Machines Corporation | Method and apparatus for reporting error logs in a logical environment |
US20040148484A1 (en) | 2003-01-23 | 2004-07-29 | Hitachi, Ltd. | Throttling in storage systems |
US20060098618A1 (en) * | 2003-01-31 | 2006-05-11 | Koninklijke Philips Electronics N.V. | Method and bridging device for priortizing transfer of data streams |
US7584467B2 (en) | 2003-03-17 | 2009-09-01 | Microsoft Corporation | Software updating system and method |
US7356679B1 (en) | 2003-04-11 | 2008-04-08 | Vmware, Inc. | Computer image capture, customization and deployment |
US20040210653A1 (en) | 2003-04-16 | 2004-10-21 | Novadigm, Inc. | Method and system for patch management |
US20050010715A1 (en) | 2003-04-23 | 2005-01-13 | Dot Hill Systems Corporation | Network storage appliance with integrated server and redundant storage controllers |
US8108903B2 (en) | 2003-06-18 | 2012-01-31 | Telefonaktiebolaget Lm Ericsson (Publ) | Arrangement and a method relating to IP network access |
US20070123276A1 (en) * | 2003-08-29 | 2007-05-31 | Stephen Parker | Secure valet telephone system apparatus and method |
US20080215796A1 (en) | 2003-12-08 | 2008-09-04 | The Board Of Trustees Of The Leland Stanford Junior University | Virtual Appliance Management |
US20100017859A1 (en) | 2003-12-23 | 2010-01-21 | Wells Fargo Bank, N.A. | Authentication system for networked computer applications |
US7529836B1 (en) | 2004-01-08 | 2009-05-05 | Network Appliance, Inc. | Technique for throttling data access requests |
US6996502B2 (en) | 2004-01-20 | 2006-02-07 | International Business Machines Corporation | Remote enterprise management of high availability systems |
US20050166011A1 (en) | 2004-01-23 | 2005-07-28 | Burnett Robert J. | System for consolidating disk storage space of grid computers into a single virtual disk drive |
US8103771B2 (en) | 2004-02-03 | 2012-01-24 | Sony Corporation | Distributing processing apparatus, method, and system |
US20050196030A1 (en) | 2004-02-12 | 2005-09-08 | Nortel Networks Limited | Method and apparatus for monitoring the transportation of medical images on a communication network |
US20070271604A1 (en) | 2004-03-17 | 2007-11-22 | Fidelitygenetic Ltd. | Secure Transaction of Dna Data |
US20070118694A1 (en) | 2004-03-23 | 2007-05-24 | Hitachi, Ltd. | Storage system |
US20050216659A1 (en) | 2004-03-26 | 2005-09-29 | Hitachi, Ltd. | Storage capable of cache assignment modification |
US7478388B1 (en) | 2004-04-21 | 2009-01-13 | Vmware, Inc. | Switching between multiple software entities using different operating modes of a processor in a computer system |
US7804862B1 (en) | 2004-05-25 | 2010-09-28 | Qlogic, Corporation | Token ID mechanism for network data transfer |
US7650331B1 (en) | 2004-06-18 | 2010-01-19 | Google Inc. | System and method for efficient large-scale data processing |
US20050289499A1 (en) | 2004-06-25 | 2005-12-29 | Matsushita Electric Industrial Co., Ltd. | High level synthesis method for semiconductor integrated circuit |
US20060026354A1 (en) | 2004-07-27 | 2006-02-02 | Texas Instruments Incorporated | Cache memory usable as scratch pad storage |
US20060059228A1 (en) | 2004-08-12 | 2006-03-16 | Oracle International Corporation | Capturing and re-creating the state of a queue when migrating a session |
US20060048130A1 (en) | 2004-08-31 | 2006-03-02 | Microsoft Corporation | Patch sequencing |
US20060048077A1 (en) | 2004-08-31 | 2006-03-02 | International Business Machines Corporation | Method, system, program product and user interface for displaying a topology |
US20070280243A1 (en) | 2004-09-17 | 2007-12-06 | Hewlett-Packard Development Company, L.P. | Network Virtualization |
US20060067236A1 (en) | 2004-09-30 | 2006-03-30 | Sanyogita Gupta | Determining and provisioning paths in a network |
US20060075199A1 (en) | 2004-10-06 | 2006-04-06 | Mahesh Kallahalla | Method of providing storage to virtual computer cluster within shared computing environment |
US20090300605A1 (en) | 2004-10-29 | 2009-12-03 | Hewlett-Packard Development Company, L.P. | Virtual computing infrastructure |
US20090199177A1 (en) | 2004-10-29 | 2009-08-06 | Hewlett-Packard Development Company, L.P. | Virtual computing infrastructure |
US20090241108A1 (en) | 2004-10-29 | 2009-09-24 | Hewlett-Packard Development Company, L.P. | Virtual computing infrastructure |
US20090235358A1 (en) | 2004-12-10 | 2009-09-17 | Microsoft Corporation | Systems and methods for attaching a virtual machine virtual hard disk to a host machine |
US20100217927A1 (en) | 2004-12-21 | 2010-08-26 | Samsung Electronics Co., Ltd. | Storage device and user device including the same |
US20060136676A1 (en) | 2004-12-21 | 2006-06-22 | Park Chan-Ik | Apparatus and methods using invalidity indicators for buffered memory |
US20060153099A1 (en) | 2004-12-23 | 2006-07-13 | Carmel-Haifa University Economic Corp. Ltd. | Ad hoc communication system and method for routing speech packets therein |
US20060161753A1 (en) | 2005-01-18 | 2006-07-20 | Aschoff John G | Method, apparatus and program storage device for providing automatic performance optimization of virtualized storage allocation within a virtualized storage subsystem |
US20060271547A1 (en) | 2005-05-25 | 2006-11-30 | Microsoft Corporation | Cluster storage collection based data management |
US20070011361A1 (en) | 2005-07-07 | 2007-01-11 | Wataru Okada | Storage management system |
US8051414B2 (en) | 2005-08-01 | 2011-11-01 | Siemens Aktiengesellschaft | Method and system for remote software updating of a medical device |
US20090276771A1 (en) | 2005-09-15 | 2009-11-05 | 3Tera, Inc. | Globally Distributed Utility Computing Cloud |
US20110153697A1 (en) | 2005-09-15 | 2011-06-23 | Computer Assoicates Think, Inc. | Automated Filer Technique for Use in Virtualized Appliances and Applications |
US20070112956A1 (en) | 2005-11-12 | 2007-05-17 | Chapman Matthew P | Resource optimisation component |
US7761573B2 (en) | 2005-12-07 | 2010-07-20 | Avaya Inc. | Seamless live migration of virtual machines across optical networks |
US20070177198A1 (en) * | 2006-01-30 | 2007-08-02 | Brother Kogyo Kabushiki Kaisha | Data Processing Device for Renaming Virtual Device |
US20070199058A1 (en) | 2006-02-10 | 2007-08-23 | Secunet Security Networks Aktiengesellschaft | Method of using a security token |
US20100023582A1 (en) | 2006-04-12 | 2010-01-28 | Pedersen Brad J | Systems and Methods for Accelerating Delivery of a Computing Environment to a Remote User |
US20070288921A1 (en) | 2006-06-13 | 2007-12-13 | King Steven R | Emulating a network-like communication connection between virtual machines on a physical device |
US20080222246A1 (en) | 2006-06-15 | 2008-09-11 | International Business Machines Corporation | Method and Apparatus for Localized Adaptation of Client Devices Based on Correlation or Learning at Remote Server |
US20080028389A1 (en) | 2006-07-27 | 2008-01-31 | Genty Denise M | Filtering a list of available install items for an install program based on a consumer's install policy |
US20080208681A1 (en) | 2006-09-28 | 2008-08-28 | Ayman Hammad | Payment using a mobile device |
US20080086515A1 (en) | 2006-10-06 | 2008-04-10 | International Business Machines Corporation | Method and System for a Soft Error Collection of Trace Files |
US20080095176A1 (en) | 2006-10-20 | 2008-04-24 | Ciena Corporation | System and method for supporting virtualized links at an exterior network-to-network interface |
US7653833B1 (en) | 2006-10-31 | 2010-01-26 | Hewlett-Packard Development Company, L.P. | Terminating a non-clustered workload in response to a failure of a system with a clustered workload |
US20080107112A1 (en) | 2006-11-03 | 2008-05-08 | Hon Hai Precision Industry Co., Ltd. | Network device and packet forwarding method thereof |
US20080222375A1 (en) | 2007-02-21 | 2008-09-11 | Deutsche Telekom Ag | Method and system for the transparent migration of virtual machines storage |
US20080205415A1 (en) | 2007-02-28 | 2008-08-28 | Morales Henry N Jerez | Access, Connectivity and Interoperability for Devices and Services |
US20080244030A1 (en) | 2007-03-30 | 2008-10-02 | Gregory Leitheiser | Methods and apparatus to perform file transfers in distributed file systems |
US20080250407A1 (en) | 2007-04-05 | 2008-10-09 | Microsoft Corporation | Network group name for virtual machines |
US20080270704A1 (en) | 2007-04-30 | 2008-10-30 | He Dingshan | Cache arrangement for improving raid i/o operations |
US20110179412A1 (en) | 2007-05-23 | 2011-07-21 | Nec Corporation | Information sharing system, computer, project managing server, and information sharing method used in them |
US20080304516A1 (en) | 2007-06-06 | 2008-12-11 | Hanhua Feng | Distributed Joint Admission Control And Dynamic Resource Allocation In Stream Processing Networks |
US20080307258A1 (en) | 2007-06-11 | 2008-12-11 | International Business Machines Corporation | Distributed Job Manager Recovery |
US20080313241A1 (en) | 2007-06-15 | 2008-12-18 | Microsoft Corporation | Distributed data storage using erasure resilient coding |
US20110010483A1 (en) | 2007-06-28 | 2011-01-13 | Nokia Corporation | Memory protection unit in a virtual processing environment |
US8127295B1 (en) | 2007-08-03 | 2012-02-28 | Oracle America, Inc. | Scalable resource allocation |
US7836285B2 (en) | 2007-08-08 | 2010-11-16 | Analog Devices, Inc. | Implementation of variable length instruction encoding using alias addressing |
US20090097657A1 (en) | 2007-10-05 | 2009-04-16 | Scheidt Edward M | Constructive Channel Key |
US20090150629A1 (en) | 2007-12-05 | 2009-06-11 | Fujitsu Limited | Storage management device, storage system control device, storage medium storing storage management program, and storage system |
US20090222815A1 (en) | 2008-02-29 | 2009-09-03 | Steven Dake | Fault tolerant virtual machine |
US8423993B2 (en) | 2008-02-29 | 2013-04-16 | Red Hat, Inc. | Systems and methods for managing software patches |
US20090240744A1 (en) | 2008-03-21 | 2009-09-24 | Qualcomm Incorporated | Pourover journaling |
US8146147B2 (en) | 2008-03-27 | 2012-03-27 | Juniper Networks, Inc. | Combined firewalls |
US20090249440A1 (en) | 2008-03-30 | 2009-10-01 | Platt Darren C | System, method, and apparatus for managing access to resources across a network |
US20100046426A1 (en) | 2008-05-02 | 2010-02-25 | Rochester Institute Of Technology | Methods for providing an ad hoc mobile communication network and systems thereof |
US20090282266A1 (en) | 2008-05-08 | 2009-11-12 | Microsoft Corporation | Corralling Virtual Machines With Encryption Keys |
US20090300641A1 (en) | 2008-05-30 | 2009-12-03 | Novell, Inc. | System and method for supporting a virtual appliance |
US20090310554A1 (en) | 2008-06-16 | 2009-12-17 | Qualcomm Incorporated | Jamming graph and its application in network resource assignment |
US20120089981A1 (en) | 2008-06-30 | 2012-04-12 | Oracle America Inc. | Method and system for power management in a virtual machine environment without disrupting network connectivity |
US20100057913A1 (en) | 2008-08-29 | 2010-03-04 | Dehaan Michael Paul | Systems and methods for storage allocation in provisioning of virtual machines |
US20100071035A1 (en) | 2008-09-12 | 2010-03-18 | Renata Budko | Methods and systems for securely managing virtualization platform |
US8468535B1 (en) | 2008-09-23 | 2013-06-18 | Gogrid, LLC | Automated system and method to provision and allocate hosting resources |
US20100094999A1 (en) | 2008-10-10 | 2010-04-15 | Netapp Inc. | Limiting simultaneous data transfers and efficient throttle management |
US20100095000A1 (en) | 2008-10-14 | 2010-04-15 | Kevin Kettler | Enabling Throttling of Resources on a Virtualization Enabled Information Handling System |
US7596620B1 (en) | 2008-11-04 | 2009-09-29 | Aptana, Inc. | System and method for developing, deploying, managing and monitoring a web application in a single environment |
US8504844B2 (en) | 2008-12-19 | 2013-08-06 | Teradata Us, Inc. | System, method, and computer-readable medium for cryptographic key rotation in a database system |
US20100199089A1 (en) | 2009-02-05 | 2010-08-05 | Wwpass Corporation | Centralized authentication system with safe private data storage and method |
US20100215050A1 (en) * | 2009-02-20 | 2010-08-26 | Hitachi, Ltd. | Packet processing device by multiple processor cores and packet processing method by the same |
US20100235649A1 (en) | 2009-03-13 | 2010-09-16 | Microsoft Corporation | Portable secure data files |
US20100274984A1 (en) | 2009-04-22 | 2010-10-28 | Hitachi, Ltd. | Management server device for managing virtual storage device, and method for managing virtual storage device |
US20110022812A1 (en) | 2009-05-01 | 2011-01-27 | Van Der Linden Rob | Systems and methods for establishing a cloud bridge between virtual storage resources |
US20100287548A1 (en) | 2009-05-06 | 2010-11-11 | Vmware, Inc. | Long Distance Virtual Machine Migration |
US20100303241A1 (en) | 2009-06-02 | 2010-12-02 | Oliver Breyel | Automatic change of symmetrical encryption key |
US20110055361A1 (en) | 2009-08-31 | 2011-03-03 | Dehaan Michael Paul | Systems and methods for generating management agent installations |
US20110060882A1 (en) | 2009-09-04 | 2011-03-10 | Petros Efstathopoulos | Request Batching and Asynchronous Request Execution For Deduplication Servers |
US20110078363A1 (en) | 2009-09-30 | 2011-03-31 | Phison Electronics Corp. | Block management method for a flash memory and flash memory controller and storage system using the same |
US20110085563A1 (en) | 2009-10-14 | 2011-04-14 | Dell Products, Lp | Virtualization Aware Network Switch |
US20110103389A1 (en) | 2009-11-03 | 2011-05-05 | Blade Network Technologies, Inc. | Method and apparatus for switching traffic between virtual machines |
US20120233705A1 (en) | 2009-12-01 | 2012-09-13 | Andre Michel Boysen | System and methods for identity attribute validation |
US20110153838A1 (en) | 2009-12-18 | 2011-06-23 | Microsoft Corporation | Session monitoring of virtual desktops in a virtual machine farm |
US20110191768A1 (en) | 2010-02-03 | 2011-08-04 | Xobni Corporation | Systems and Methods to Identify Users Using an Automated Learning Process |
US20110191485A1 (en) | 2010-02-03 | 2011-08-04 | Os Nexus, Inc. | Role based access control utilizing scoped permissions |
WO2011095516A1 (en) | 2010-02-05 | 2011-08-11 | St-Ericsson Sa | Method and system for mass storage on flash memory |
US20110197024A1 (en) | 2010-02-10 | 2011-08-11 | International Business Machines Corporation | Providing redundancy in a virtualized storage system for a computer system |
US20110231280A1 (en) | 2010-03-17 | 2011-09-22 | Siamak Farah | Cloud-based desktop and subscription application platform apparatuses, methods and systems |
US20110246767A1 (en) | 2010-03-30 | 2011-10-06 | Pradeep Kumar Chaturvedi | Secure virtual machine memory |
US20110258441A1 (en) | 2010-04-20 | 2011-10-20 | International Business Machines Corporation | Secure Access to a Virtual Machine |
US20110296157A1 (en) | 2010-05-28 | 2011-12-01 | Dell Products, Lp | System and Method for Supporting Secure Subsystems in a Client Hosted Virtualization System |
US20110302415A1 (en) | 2010-06-02 | 2011-12-08 | Vmware, Inc. | Securing customer virtual machines in a multi-tenant cloud |
US20110302400A1 (en) | 2010-06-07 | 2011-12-08 | Maino Fabio R | Secure virtual machine bootstrap in untrusted cloud infrastructures |
US20120179796A1 (en) | 2010-06-24 | 2012-07-12 | Ashwath Nagaraj | Routing and service performance management in an application acceleration environment |
US8296459B1 (en) | 2010-06-30 | 2012-10-23 | Amazon Technologies, Inc. | Custom routing decisions |
US20120060018A1 (en) | 2010-09-02 | 2012-03-08 | International Business Machines Corporation | Collective Operations in a File System Based Execution Model |
US20120063458A1 (en) | 2010-09-15 | 2012-03-15 | International Business Machines Corporation | Multiple virtual machines sharing a single ip address |
US8484353B1 (en) | 2010-09-28 | 2013-07-09 | Amazon Technologies, Inc. | Resource placement templates for virtual networks |
US20120084768A1 (en) | 2010-09-30 | 2012-04-05 | International Business Machines Corporation | Capturing Multi-Disk Virtual Machine Images Automatically |
US20120084570A1 (en) | 2010-09-30 | 2012-04-05 | Microsoft Corporation | Remote Resources Single Sign On |
US20130276068A1 (en) | 2010-10-19 | 2013-10-17 | ArulMurugan Alwar | Methods and systems for generation of authorized virtual appliances |
US20130212709A1 (en) | 2010-10-31 | 2013-08-15 | Temporal Defense Systems, Llc | System and Method for Securing Virtual Computing Environments |
US20120159634A1 (en) | 2010-12-15 | 2012-06-21 | International Business Machines Corporation | Virtual machine migration |
US20120173866A1 (en) | 2010-12-31 | 2012-07-05 | International Business Machines Corporation | System for securing virtual machine disks on a remote shared storage subsystem |
US20120185688A1 (en) | 2011-01-13 | 2012-07-19 | Google Inc. | Processor mode locking |
US20120191912A1 (en) | 2011-01-20 | 2012-07-26 | Google Inc. | Storing data on storage nodes |
US20120233678A1 (en) | 2011-03-10 | 2012-09-13 | Red Hat, Inc. | Securely and automatically connecting virtual machines in a public cloud to corporate resource |
US20120266159A1 (en) | 2011-03-16 | 2012-10-18 | Pankaj Risbood | Selection of Ranked Configurations |
US8533796B1 (en) | 2011-03-16 | 2013-09-10 | Google Inc. | Providing application programs with access to secured resources |
US8261295B1 (en) | 2011-03-16 | 2012-09-04 | Google Inc. | High-level language for specifying configurations of cloud-based deployments |
US20120246637A1 (en) * | 2011-03-22 | 2012-09-27 | Cisco Technology, Inc. | Distributed load balancer in a virtual machine environment |
US20130047151A1 (en) * | 2011-08-16 | 2013-02-21 | Microsoft Corporation | Virtualization gateway between virtualized and non-virtualized networks |
US20130074181A1 (en) | 2011-09-19 | 2013-03-21 | Cisco Technology, Inc. | Auto Migration of Services Within a Virtual Data Center |
US20130081014A1 (en) | 2011-09-23 | 2013-03-28 | Google Inc. | Bandwidth throttling of virtual disks |
US20130117801A1 (en) | 2011-11-03 | 2013-05-09 | Choung-Yaw Michael Shieh | Virtual security boundary for physical or virtual network devices |
US8276140B1 (en) | 2011-11-14 | 2012-09-25 | Google Inc. | Adjustable virtual network performance |
US20130227303A1 (en) | 2012-02-24 | 2013-08-29 | Google Inc. | Log structured volume encryption for virtual machines |
Non-Patent Citations (82)
Title |
---|
"Generic Routing Encapsulation". Creativecommons.org [online]. Creative Commons Attribution-Share Alike 3.0 Unported, Nov. 12, 2010; [Retrieved on Jan. 14, 2011]; Retrieved from the Internet: ; pp. 1-5. |
"Generic Routing Encapsulation". Creativecommons.org [online]. Creative Commons Attribution-Share Alike 3.0 Unported, Nov. 12, 2010; [Retrieved on Jan. 14, 2011]; Retrieved from the Internet: <URL: http://en.wikipedia.org/w/index.php?oldid=396280384>; pp. 1-5. |
"IPsec". Creativecommons.org [online]. Creative Commons Attribution-Share Alike 3.0 Unported, Nov. 11, 2010; [Retrieved on Jan. 14, 2011] Retrieved from the Internet: ; pp. 1-8. |
"IPsec". Creativecommons.org [online]. Creative Commons Attribution-Share Alike 3.0 Unported, Nov. 11, 2010; [Retrieved on Jan. 14, 2011] Retrieved from the Internet: <URL: http://en.wikipedia.org/w/index.php?oldid=396193389>; pp. 1-8. |
‘Nagios’ [online]. "Monitoring Linux/Unix Machines," 2011, [retrieved on Feb. 3, 2011]. Retrieved from the Internet: URL: <http://nagios.sourceforge.net/docs/3—0/monitoring-linux.html > 1 page. |
‘Nagios’ [online]. "Nagios Plugins," 2011, [retrieved on Feb. 3, 2011]. Retrieved from the Internet: URL: <http://nagios.sourceforge.net/docs/3—0/plugins.html > 2 pages. |
‘Zabbix’ [online]. "Zabbix 1.8: The Ultimate Open Source Monitoring Solution," 2001-2012, [retrieved on Feb. 3, 2011]. Retrieved from the Internet: URL: <http://www.zabbix.com/features.php.> 1 page. |
Abdull , AlastairIrvine, et al. "Generic Routing Encapsulation", [online] [retrieved on Jan. 4, 2011]. Retrieved from the Internet: , 5 pages. |
Abdull , AlastairIrvine, et al. "Generic Routing Encapsulation", [online] [retrieved on Jan. 4, 2011]. Retrieved from the Internet: <URL: http:/ / creativecommons. org/ licenses/ by-sa/ 3.0/>, 5 pages. |
Alpern, B., "The Jalapeno virtual machine," IBM Systems Journal, 2000, vol. 39, Issue 1, pp. 211-238. |
Amazon Auto Scaling-Developer Guide-API Version Aug. 1, 2010. Amazon Web Services LLC 2011, 62 pages. |
Amazon Auto Scaling-Getting Started Guide-API Version Aug. 1, 2010. Amazon Web Services LLC, 2010, 20 pages. |
Amazon CloudWatch-Developer Guide-API Version Aug. 1, 2010. Amazon Web Services LLC, 2010, 75 pages. |
Amazon Elastic Compute Cloud, User Guide, API Version Mar. 1, 2012, pp. 97-103, downloaded from http://docs.amazonwebservices.com/AWSEC2/latest/UserGuide/AESDG-chapter-instancedata.html?r=4276 on Mar. 18, 2012. |
Apache HTTP Server Version 2.0. "Log Files." [Retrieved on Feb. 15, 2011]. Retrieved from the Internet , 7 pages. |
Apache HTTP Server Version 2.0. "Log Files." [Retrieved on Feb. 15, 2011]. Retrieved from the Internet <URL: http://httpd.apache.org/docs/2.0/logs.html>, 7 pages. |
Benincosa. "Ganglia and Nagios, Part 2: Monitor enterprise clusters with Nagios-Install Nagios to effectively monitor a data center; make Ganglia and Nagios work together," 2009, 20 pages. |
Bucket Explorer. "What is my AWS Access and Secret Key." [Retrieved Apr. 26, 2011]. Retrieved from the Internet <URL: http://www.bucketexplorer.com/documentation/amazon-s3-what-is-my-aws-access-and-secret-key.html>, 1 page. |
Cabellos et al., LISPmob: Mobile Networking through LISP, Apr. 2, 2012, 8 pages. |
Cala et al., "Automatic Software Deployment in the Azure Cloud", IFIP International Federation for Information Processing, 2010, pp. 1-14. |
Chen, Per M., et al., : "Maximizing Performance in a Striped Disk Array", 17th Annual International Symposium on Computer Architecture (SIGARCH 1990), 18 pages. |
Cloud Computing Course, Part 2: Amazon's EC2, Marcel Gagne, Jun. 13, 2011. Retrieved from the Internet: , 6 pages. |
Cloud Computing Course, Part 2: Amazon's EC2, Marcel Gagne, Jun. 13, 2011. Retrieved from the Internet: <URL: http://marcelgagne.com/content/cloud-computing-course-part-2-amazons-ec2>, 6 pages. |
Eng, Lili, Australian Government, IP Australia, Examiner's First Report for 2012200562, dated Jun. 4, 2012, 2 pages. |
Farinacci et al., "RFC 2784: Generic Routing Encapsulation (GRE)", Mar. 2000, The Internet Society, 10 pages. |
Gowalla. "API Documentation-Oauth." [Retrieved on Apr. 26, 2011]. Retrieved from the Internet , 4 pages. |
Gowalla. "API Documentation—Oauth." [Retrieved on Apr. 26, 2011]. Retrieved from the Internet <URL: http://gowalla.com/api/docs/oauth>, 4 pages. |
Hehn, Eva, Authorized Office for European Patent Office, International Search Report and Written Opinion for PCT/US2013/027456, completed Jun. 24, 2013, 11 pages. |
Hongkiat. "Amazon S3-The Beginner's Guide." [Retrieved on Apr. 26, 2011]. Retrieved from the Internet , 9 pages. |
Hongkiat. "Amazon S3—The Beginner's Guide." [Retrieved on Apr. 26, 2011]. Retrieved from the Internet <URL: http://www.hongkiat.com/blog/amazon-s3-the-beginners-guide/>, 9 pages. |
How to: Getting Started With Amazon EC2, Paul Stamatiou, Apr. 5, 2008. Retrieved from the Internet: , 25 pages. |
How to: Getting Started With Amazon EC2, Paul Stamatiou, Apr. 5, 2008. Retrieved from the Internet: <URL:http//paulstamatiou.com/how-to-getting-started-with-amazon-ec2>, 25 pages. |
Hyun, Ahn Ji, Authorized Officer for Korean Intellectual Property Office, International Search Report and Written Opinion for PCT/US2012/021846, International Search Report completed May 25, 2012, 8 pages. |
Kent et al., "RFC 4301: Security Architecture for the Internet Protocol", Dec. 2005, The Internet Society, 102 pages. |
Key Management in Cloud Datacenters, Security Stackexchange.com, Retrieved from the Internet on Nov. 18, 2011; Retrieved from: , 2 pages. |
Key Management in Cloud Datacenters, Security Stackexchange.com, Retrieved from the Internet on Nov. 18, 2011; Retrieved from: <URL: http://security.stackexchange.com/questions/2514/key-management-in-cloud-datacenters>, 2 pages. |
L. Gommans, et al., Token-Based Authorization of Connection Oriented Network Resources, 1st International Workshop on Networks for Grid Applications (GridNets 2004), Oct. 29, 2004; 8 pages. |
Laitinen, Aapo et al., Network Address Translation [Retrieved on Oct. 10, 2011] Retrieved from the Internet: <URL: http://en.wikipedia.org/wiki/Networkpages-Address-and-Port-Translation>, 11 pages. |
Live Migration of Virtual Machines, Clark et al., University of Cambridge Laboratory, Department of Computer Science; University of Copenhagen, Denmark, 2005; 14 pages. |
Making Services Easy to Migrate, Debian Administration, System Administration Tips and Resources, Jan. 1, 2005, 5 pages. |
Managing Amazon EC2-SSH Login and Protecting Your Instances, Everyday's Findings, Monday, May 18, 2009, Retrieved from the Internet on Nov. 18, 2011; Retrieved from: <URL: http://blog.taggesell.de/index.php?/aarchives/73-Managing-Amazon-EC2., 6 pages. |
Microsoft Support. "How to view and manage event logs in Event Viewer in Windows XP." May 7, 2007, version 3.5 [Retrieved on Feb. 15, 2011]. Retrieved from the Internet , 6 pages. |
Microsoft Support. "How to view and manage event logs in Event Viewer in Windows XP." May 7, 2007, version 3.5 [Retrieved on Feb. 15, 2011]. Retrieved from the Internet <URL: http://support.microsoft.com/kb/308427>, 6 pages. |
Moller, Jan, et al., "Internal Network Security", Feb. 1, 2000-May 18, 2001, Retrieved from the Internet: , 183 pages. |
Moller, Jan, et al., "Internal Network Security", Feb. 1, 2000-May 18, 2001, Retrieved from the Internet: <URL: http://www.daimi.au.dk/˜fwiffo/thesis/>, 183 pages. |
MSDN. "Visual Basic Concepts, Visual Studio 6.0: Centralized Error Handling." [Retrieved on Feb. 15, 2011]. Retrieved from the Internet , 4 pages. |
MSDN. "Visual Basic Concepts, Visual Studio 6.0: Centralized Error Handling." [Retrieved on Feb. 15, 2011]. Retrieved from the Internet <URL: http://msdn.microsoft.com/en-us/library/aa240795(d=printer, v=vs.60).aspx>, 4 pages. |
Myerson, Judith. "Creating Applications with Amazon EC2 and S3." O'ReillyOnLamp.com, May 13, 2008 [Retrieved on Apr. 26, 2011]. Retrieved from the Internet , 8 pages. |
Myerson, Judith. "Creating Applications with Amazon EC2 and S3." O'ReillyOnLamp.com, May 13, 2008 [Retrieved on Apr. 26, 2011]. Retrieved from the Internet <URL: http://onlamp.com/pub/a/onlamp/2008/05/13/creating-applications-with-amazon-ec2-and-s3.html>, 8 pages. |
Na, Lee Da, Authorized Officer for Korean Intellectual Property Office, International Search Report and Written Opinion for PCT/US2012/020954, International Search Report completed Aug. 23, 2012, 10 pages. |
'Nagios' [online]. "Monitoring Linux/Unix Machines," 2011, [retrieved on Feb. 3, 2011]. Retrieved from the Internet: URL: 1 page. |
'Nagios' [online]. "Nagios Plugins," 2011, [retrieved on Feb. 3, 2011]. Retrieved from the Internet: URL: 2 pages. |
OMG, Deployment and Configuration of Component-based Distributed Applications Specification-Version 4.0, OMG, 2006, pp. 1-160. |
Paravirtualization, Wikipedia Article, downloaded from http://en.wikipedia.org/wiki/Paravirtualization on Mar. 18, 2012. |
Paravirtualized File Systems, Eric Van Hensbergen, downloaded from http://www.slideshare.net/ericvh/9p-on-kvm on Mar. 18, 2012. |
Primet, Pascale, et al.., "HIPCAL: State of the Art of OS and Network virtualization solutions for Grids", Sep. 14, 2007, 38 pages. |
RSA Laboratories, "PKCS #11 v2.20: Cryptographic Token Interface Standard," Jun. 28, 2004, RSA Security Inc. (407 pages). |
Sarhan, Nabil J., et al., "Caching and Scheduling in NAD-Based Multimedia Servers"; IEEE Computer Society, IEEE Transactions on Parallel and Distributed Systems, vol. 15, No. 10, Oct. 2004; pp. 921-933. |
Steinmetz, Christof, Authorized Office for European Patent Office, International Search Report and Written Opinion for PCT/US2013/034140, completed Jun. 25, 2013, 21 pages. |
Travostino, Franco, et al., Seamless Live Migration of Virtual Machines over the MAN/WAN, 2006, Elsevier Future Generation Computer Systems 2006, 10 pages. |
Uploading Personal ssh Keys to Amazon EC2, Eric Hammond, Oct. 14, 2010. Retrieved from the Internet: , 3 pages. |
Uploading Personal ssh Keys to Amazon EC2, Eric Hammond, Oct. 14, 2010. Retrieved from the Internet: <URL:http://alestic.com/2010/10/ec2-ssh-keys>, 3 pages. |
Using and Managing AWS-Part 6: SSH Key Pairs, Top WordPress, May 26, 2009, Retrieved from the Internet: , 5 pages. |
Using and Managing AWS—Part 6: SSH Key Pairs, Top WordPress, May 26, 2009, Retrieved from the Internet: <URL: http://clouddb.info/2009/05/26/using-and-managing-aws-part-6-ssh-key-pairs>, 5 pages. |
Vazhkudai, Sudharshan S., et al.; "Constructing Collaborative Desktop Storage Caches for Large Scientific Datasets"; ACM Journal Name, vol. V, No. N, Jun. 2006, 34 pages. |
VMCI Datagram API [Retrieved on Jun. 8, 2011], Retrieved from the Internet: , 1 page. |
VMCI Datagram API [Retrieved on Jun. 8, 2011], Retrieved from the Internet: <URL: http://pubs.vmware.com/vmci-sdk/datagram.html>, 1 page. |
VMCI Datagram-SendTo [Retrieved on Jun. 8, 2011], Retrieved from the Internet: , 1 page. |
VMCI Datagram—SendTo [Retrieved on Jun. 8, 2011], Retrieved from the Internet: <URL: http://pubs.vmware.com/vmci-sdk/functions/VMCIDatagram—SendTo.html>, 1 page. |
VMCI Overview [Retrieved on Jun. 8, 2011] Retrieved from the Internet: , 3 pages. |
VMCI Overview [Retrieved on Jun. 8, 2011] Retrieved from the Internet: <URL: http://pubs.vmware.com/vmci-sdk/VMCI—intro.html>, 3 pages. |
VMCIDs-Lookup [Retrieved on Jun. 8, 2011], Retrieved from the Internet: , 2 pages. |
VMCIDs—Lookup [Retrieved on Jun. 8, 2011], Retrieved from the Internet: <URL: http://pubs.vmware.com/vmci-sdk/functions/VMCIDs—Lookup.html>, 2 pages. |
VMware vSphere [Retrieved on Jun. 8, 2011] Retrieved from the Internet: , 2 pages. |
VMware vSphere [Retrieved on Jun. 8, 2011] Retrieved from the Internet: <URL: http://www.vmware.com/products/vmotion/overview.html>, 2 pages. |
Wikipedia, "Domain Name System" [online]; Feb. 4, 2012; [Retrieved on Feb. 4, 2012]. Retrieved from the Internet: , 16 pages. |
Wikipedia, "Domain Name System" [online]; Feb. 4, 2012; [Retrieved on Feb. 4, 2012]. Retrieved from the Internet: <URL: http://en.wikipedia.org/wiki/Domain—Name—System>, 16 pages. |
Wikipedia. "OAuth." [online], Dec. 12, 2010; [Retrieved on Jan. 20, 2011] Retrieved from the Internet ; 3 pages. |
Wikipedia. "OAuth." [online], Dec. 12, 2010; [Retrieved on Jan. 20, 2011] Retrieved from the Internet <URL: http://en.wikipedia.org/wiki/OAuth>; 3 pages. |
Wikipedia., Anycast [Retrieved on Oct. 10, 2011] Retrieved from the Internet: URL, 5 pages. |
Wikipedia., Anycast [Retrieved on Oct. 10, 2011] Retrieved from the Internet: URL<http://en.wikipedia.org/wiki/Anycast>, 5 pages. |
'Zabbix' [online]. "Zabbix 1.8: The Ultimate Open Source Monitoring Solution," 2001-2012, [retrieved on Feb. 3, 2011]. Retrieved from the Internet: URL: 1 page. |
Cited By (99)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20190121683A1 (en) * | 2007-01-07 | 2019-04-25 | Apple Inc. | Memory management methods and systems |
US10802895B2 (en) * | 2007-01-07 | 2020-10-13 | Apple Inc. | Memory management methods and systems |
US11513874B2 (en) | 2007-01-07 | 2022-11-29 | Apple Inc. | Memory management methods and systems |
US10241770B2 (en) | 2011-03-16 | 2019-03-26 | Google Llc | Cloud-based deployment using object-oriented classes |
US9870211B2 (en) | 2011-03-16 | 2018-01-16 | Google Inc. | High-level language for specifying configurations of cloud-based deployments |
US9557978B2 (en) | 2011-03-16 | 2017-01-31 | Google Inc. | Selection of ranked configurations |
US11237810B2 (en) | 2011-03-16 | 2022-02-01 | Google Llc | Cloud-based deployment using templates |
US20130091501A1 (en) * | 2011-10-05 | 2013-04-11 | International Business Machines Corporation | Defining And Managing Virtual Networks In Multi-Tenant Virtualized Data Centers |
US20130159487A1 (en) * | 2011-12-14 | 2013-06-20 | Microsoft Corporation | Migration of Virtual IP Addresses in a Failover Cluster |
US20130191477A1 (en) * | 2012-01-20 | 2013-07-25 | Electronics And Telecommunications Research Institute | Mapping system, network, and method for adaptation of id/loc separation to datacenter for cloud computing |
US20130227569A1 (en) * | 2012-02-23 | 2013-08-29 | Samsung Electronics Co., Ltd. | System and method for information acquisition of wireless sensor network data as cloud based service |
US9547509B2 (en) * | 2012-02-23 | 2017-01-17 | Samsung Electronics Co., Ltd. | System and method for information acquisition of wireless sensor network data as cloud based service |
US9720952B2 (en) | 2012-03-27 | 2017-08-01 | Google Inc. | Virtual block devices |
US20130268646A1 (en) * | 2012-04-04 | 2013-10-10 | Radware, Ltd. | Techniques for providing scalable application delivery controller services |
US10375158B2 (en) | 2012-04-04 | 2019-08-06 | Radware, Ltd. | Techniques for adaptive traffic direction via scalable application delivery controller services |
US9386085B2 (en) * | 2012-04-04 | 2016-07-05 | Radware, Ltd. | Techniques for providing scalable application delivery controller services |
US9898317B2 (en) | 2012-06-06 | 2018-02-20 | Juniper Networks, Inc. | Physical path determination for virtual network packet flows |
US10565001B2 (en) | 2012-06-06 | 2020-02-18 | Juniper Networks, Inc. | Distributed virtual network controller |
US9253076B2 (en) * | 2012-06-12 | 2016-02-02 | International Business Machines Corporation | Synchronization of load-balancing switches |
US20140059176A1 (en) * | 2012-06-12 | 2014-02-27 | International Business Machines Corporation | Synchronization of load-balancing switches |
US20140006585A1 (en) * | 2012-06-29 | 2014-01-02 | Futurewei Technologies, Inc. | Providing Mobility in Overlay Networks |
US11190435B2 (en) * | 2013-01-04 | 2021-11-30 | Nec Corporation | Control apparatus, communication system, tunnel endpoint control method, and program |
US10608866B2 (en) | 2013-03-06 | 2020-03-31 | Alibaba Group Holding Limited | Forwarding Ethernet packets |
US9985818B2 (en) * | 2013-03-06 | 2018-05-29 | Alibaba Group Holding Limited | Forwarding ethernet packets |
US20140254597A1 (en) * | 2013-03-06 | 2014-09-11 | Alibaba Group Holding Limited | Forwarding ethernet packets |
US9176889B1 (en) * | 2013-03-15 | 2015-11-03 | Google Inc. | Virtual machine memory management |
US9621642B2 (en) | 2013-06-17 | 2017-04-11 | Telefonaktiebolaget Lm Ericsson (Publ) | Methods of forwarding data packets using transient tables and related load balancers |
US20150046600A1 (en) * | 2013-08-08 | 2015-02-12 | Samsung Electronics Co., Ltd. | Method and apparatus for distributing data in hybrid cloud environment |
US20150281060A1 (en) * | 2014-03-27 | 2015-10-01 | Nicira, Inc. | Procedures for efficient cloud service access in a system with multiple tenant logical networks |
US9338091B2 (en) * | 2014-03-27 | 2016-05-10 | Nicira, Inc. | Procedures for efficient cloud service access in a system with multiple tenant logical networks |
US9703743B2 (en) | 2014-03-31 | 2017-07-11 | Juniper Networks, Inc. | PCIe-based host network accelerators (HNAS) for data center overlay network |
US10382362B2 (en) | 2014-03-31 | 2019-08-13 | Juniper Networks, Inc. | Network server having hardware-based virtual router integrated circuit for virtual networking |
US9485191B2 (en) | 2014-03-31 | 2016-11-01 | Juniper Networks, Inc. | Flow-control within a high-performance, scalable and drop-free data center switch fabric |
US9479457B2 (en) * | 2014-03-31 | 2016-10-25 | Juniper Networks, Inc. | High-performance, scalable and drop-free data center switch fabric |
US9954798B2 (en) | 2014-03-31 | 2018-04-24 | Juniper Networks, Inc. | Network interface card having embedded virtual router |
US20150281128A1 (en) * | 2014-03-31 | 2015-10-01 | Juniper Networks, Inc. | High-performance, scalable and drop-free data center switch fabric |
US9485183B2 (en) * | 2014-04-25 | 2016-11-01 | Telefonaktiebolaget Lm Ericsson (Publ) | System and method for efectuating packet distribution among servers in a network |
US20150312155A1 (en) * | 2014-04-25 | 2015-10-29 | Telefonaktiebolaget L M Ericsson (Publ) | System and method for efectuating packet distribution among servers in a network |
US9648121B2 (en) * | 2014-05-27 | 2017-05-09 | Ravello Systems Ltd. | Source-destination network address translation (SDNAT) proxy and method thereof |
US20150350157A1 (en) * | 2014-05-27 | 2015-12-03 | Ravello Systems Ltd. | Source-destination network address translation (sdnat) proxy and method thereof |
US9456030B2 (en) | 2014-09-15 | 2016-09-27 | Telefonaktiebolaget Lm Ericsson (Publ) | Methods of operating load balancing switches and controllers using modified flow entries |
US20160259942A1 (en) * | 2014-10-21 | 2016-09-08 | Intellectual Ventures Hong Kong Limited | Automatic profiling framework of cross-vm covert channel capacity |
US11003485B2 (en) | 2014-11-25 | 2021-05-11 | The Research Foundation for the State University | Multi-hypervisor virtual machines |
US9798567B2 (en) | 2014-11-25 | 2017-10-24 | The Research Foundation For The State University Of New York | Multi-hypervisor virtual machines |
US10437627B2 (en) | 2014-11-25 | 2019-10-08 | The Research Foundation For The State University Of New York | Multi-hypervisor virtual machines |
US20160226771A1 (en) * | 2015-01-30 | 2016-08-04 | Progress Software Corporation | Load Balancing |
US10375118B2 (en) * | 2015-07-13 | 2019-08-06 | Blackridge Technology Holdings, Inc. | Method for attribution security system |
US10999179B2 (en) | 2015-09-08 | 2021-05-04 | At&T Intellectual Property I, L.P. | Low-impact proactive monitoring of customer access to virtualized network elements in a cloud platform |
US10554529B2 (en) | 2015-09-08 | 2020-02-04 | At&T Intellectual Property I, L.P. | Low-impact proactive monitoring of customer access to virtualized network elements in a cloud platform |
US9935862B2 (en) | 2015-09-08 | 2018-04-03 | At&T Intellectual Property I, L.P. | Low-impact proactive monitoring of customer access to virtualized network elements in a cloud platform |
US11249937B1 (en) * | 2015-09-29 | 2022-02-15 | Amazon Technologies, Inc. | Storage adapter device for communicating with network storage |
WO2017079316A1 (en) * | 2015-11-03 | 2017-05-11 | Nec Laboratories America, Inc. | Design of randomization function and its application in load balancing |
CN108293022B (en) * | 2015-12-30 | 2020-10-09 | 华为技术有限公司 | Method, device and system for transmitting message |
US10757072B2 (en) * | 2015-12-30 | 2020-08-25 | Huawei Technologies Co., Ltd. | Packet transmission method, apparatus, and system |
CN108293022A (en) * | 2015-12-30 | 2018-07-17 | 华为技术有限公司 | A kind of methods, devices and systems of message transmissions |
US20180309718A1 (en) * | 2015-12-30 | 2018-10-25 | Huawei Technologies Co., Ltd. | Packet Transmission Method, Apparatus, and System |
US20170207964A1 (en) * | 2016-01-15 | 2017-07-20 | Dell Products L.P. | Systems and methods for proactively recommending input/output redirection using management controller |
US10069682B2 (en) * | 2016-01-15 | 2018-09-04 | Dell Products L.P. | Systems and methods for proactively recommending input/output redirection using management controller |
US10367655B2 (en) | 2016-01-25 | 2019-07-30 | Alibaba Group Holding Limited | Network system and method for connecting a private network with a virtual private network |
US20190007322A1 (en) * | 2016-02-14 | 2019-01-03 | Huawei Technologies Co., Ltd. | Virtual network device and related method |
US10812394B2 (en) * | 2016-02-14 | 2020-10-20 | Huawei Technologies Co., Ltd. | Virtual network device and related method |
WO2017214883A1 (en) * | 2016-06-15 | 2017-12-21 | Alibaba Group Holding Limited | Network system and method for cross region virtual private network peering |
US10868883B2 (en) * | 2016-06-29 | 2020-12-15 | Nicira, Inc. | Upgrading a proxy that decouples network connections from an application during application's downtime |
US20180007162A1 (en) * | 2016-06-29 | 2018-01-04 | Nicira, Inc. | Upgrading a proxy that decouples network connections from an application during application's downtime |
US10237339B2 (en) | 2016-08-19 | 2019-03-19 | Microsoft Technology Licensing, Llc | Statistical resource balancing of constrained microservices in cloud PAAS environments |
US11792138B2 (en) | 2016-08-27 | 2023-10-17 | Nicira, Inc. | Centralized processing of north-south traffic for logical network in public cloud |
US10924431B2 (en) | 2016-08-27 | 2021-02-16 | Nicira, Inc. | Distributed processing of north-south traffic for logical network in public cloud |
US10812413B2 (en) | 2016-08-27 | 2020-10-20 | Nicira, Inc. | Logical network domains stretched between public and private datacenters |
US11018993B2 (en) | 2016-08-27 | 2021-05-25 | Nicira, Inc. | Distributed network encryption for logical network implemented in public cloud |
US11012507B2 (en) * | 2016-08-29 | 2021-05-18 | Vmware, Inc. | High throughput layer 2 extension leveraging CPU flow affinity |
US10805330B2 (en) | 2016-08-31 | 2020-10-13 | Nicira, Inc. | Identifying and handling threats to data compute nodes in public cloud |
US10397189B1 (en) * | 2016-09-27 | 2019-08-27 | Amazon Technologies, Inc. | Peered virtual private network endpoint nodes |
US10887284B1 (en) | 2016-09-27 | 2021-01-05 | Amazon Technologies, Inc. | Peered virtual private network endpoint nodes |
US9841988B1 (en) | 2016-11-16 | 2017-12-12 | Red Hat Israel, Ltd. | Updating service virtual machines using a new image that is certified |
US10652320B2 (en) | 2017-02-21 | 2020-05-12 | Microsoft Technology Licensing, Llc | Load balancing in distributed computing systems |
US10243840B2 (en) | 2017-03-01 | 2019-03-26 | Juniper Networks, Inc. | Network interface card switching for virtual networks |
US10567275B2 (en) | 2017-03-01 | 2020-02-18 | Juniper Networks, Inc. | Network interface card switching for virtual networks |
US10827042B2 (en) * | 2017-04-10 | 2020-11-03 | Vmware, Inc. | Traffic optimization for multi-node applications |
US20180295064A1 (en) * | 2017-04-10 | 2018-10-11 | Vmware, Inc. | Traffic optimization for multi-node applications |
US10567482B2 (en) | 2017-08-24 | 2020-02-18 | Nicira, Inc. | Accessing endpoints in logical networks and public cloud service providers native networks using a single network interface and a single routing table |
US11115465B2 (en) | 2017-08-24 | 2021-09-07 | Nicira, Inc. | Accessing endpoints in logical networks and public cloud service providers native networks using a single network interface and a single routing table |
US10491516B2 (en) | 2017-08-24 | 2019-11-26 | Nicira, Inc. | Packet communication between logical networks and public cloud service providers native networks using a single network interface and a single routing table |
US11695697B2 (en) | 2017-08-27 | 2023-07-04 | Nicira, Inc. | Performing in-line service in public cloud |
US20190173780A1 (en) * | 2017-12-04 | 2019-06-06 | Nicira, Inc. | Failover of centralized routers in public cloud logical networks |
US10862753B2 (en) | 2017-12-04 | 2020-12-08 | Nicira, Inc. | High availability for stateful services in public cloud logical networks |
US10601705B2 (en) * | 2017-12-04 | 2020-03-24 | Nicira, Inc. | Failover of centralized routers in public cloud logical networks |
US11182187B2 (en) | 2018-04-17 | 2021-11-23 | Red Hat Israel, Ltd. | Dynamic network connectivity verification in distributed virtual environments |
US11809891B2 (en) | 2018-06-01 | 2023-11-07 | The Research Foundation For The State University Of New York | Multi-hypervisor virtual machines that run on multiple co-located hypervisors |
US11343229B2 (en) | 2018-06-28 | 2022-05-24 | Vmware, Inc. | Managed forwarding element detecting invalid packet addresses |
US11196591B2 (en) | 2018-08-24 | 2021-12-07 | Vmware, Inc. | Centralized overlay gateway in public cloud |
US10491466B1 (en) | 2018-08-24 | 2019-11-26 | Vmware, Inc. | Intelligent use of peering in public cloud |
US11374794B2 (en) | 2018-08-24 | 2022-06-28 | Vmware, Inc. | Transitive routing in public cloud |
US10942791B2 (en) | 2018-09-17 | 2021-03-09 | Oracle International Corporation | Managing load in request processing environments |
US10999244B2 (en) | 2018-09-21 | 2021-05-04 | Microsoft Technology Licensing, Llc | Mapping a service into a virtual network using source network address translation |
US11593450B2 (en) | 2020-05-29 | 2023-02-28 | Bank Of America Corporation | System for dynamic generation of a transmission interface bridge for computing platforms |
CN113254165A (en) * | 2021-07-09 | 2021-08-13 | 易纳购科技(北京)有限公司 | Load flow distribution method and device for virtual machine and container, and computer equipment |
CN113254165B (en) * | 2021-07-09 | 2021-10-08 | 易纳购科技(北京)有限公司 | Load flow distribution method and device for virtual machine and container, and computer equipment |
US20240007377A1 (en) * | 2022-06-30 | 2024-01-04 | Microsoft Technology Licensing, Llc | Latency monitoring and reporting for distributed gateways |
US11876694B1 (en) * | 2022-06-30 | 2024-01-16 | Microsoft Technology Licensing, Llc | Latency monitoring and reporting for distributed gateways |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8958293B1 (en) | Transparent load-balancing for cloud computing services | |
US11321110B1 (en) | Virtual network for virtual machine communication and migration | |
US11909712B2 (en) | Network address translation for virtual machines | |
US9740516B1 (en) | Virtual network protocol | |
US8533343B1 (en) | Virtual network pairs | |
Kumar et al. | Implementation and analysis of QUIC for MQTT | |
US10951586B2 (en) | Providing location-specific network access to remote services | |
US10498708B2 (en) | Scaling IPSEC processing on a virtual machine | |
US10868715B2 (en) | Providing local secure network access to remote services | |
US11902264B2 (en) | Path selection for data packets encrypted based on an IPSEC protocol | |
US8972603B1 (en) | Managing encoded multi-part communications | |
US9521037B2 (en) | Providing access to configurable private computer networks | |
US8396946B1 (en) | Managing integration of external nodes into provided computer networks | |
US9282027B1 (en) | Managing use of alternative intermediate destination computing nodes for provided computer networks | |
US9619662B1 (en) | Virtual network pairs | |
US8645508B1 (en) | Managing external communications for provided computer networks | |
WO2021073565A1 (en) | Service providing method and system | |
US10659440B2 (en) | Optimizing utilization of security parameter index (SPI) space | |
US9419921B1 (en) | Network address translation for virtual machines | |
US20220231993A1 (en) | Security association bundling for an interface | |
US20240031336A1 (en) | Virtual private network enhancement using multiple cores | |
Thielens | Master thesis: LISP Privacy: An addressless approach to client-server communication | |
Phung | Enriching the internet control-plane for improved traffic engineering | |
Komu | A consolidated namespace for network applications, developers, administrators and users | |
Thielens et al. | University of Liege |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:ANDERSON, EVAN K.;REEL/FRAME:027578/0810Effective date: 20111206 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044334/0466Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
US8775556B1 - Automated segmentation and processing of web site traffic data over a rolling window of time - Google Patents
Automated segmentation and processing of web site traffic data over a rolling window of time Download PDFInfo
- Publication number
- US8775556B1 US8775556B1 US13/187,459 US201113187459A US8775556B1 US 8775556 B1 US8775556 B1 US 8775556B1 US 201113187459 A US201113187459 A US 201113187459A US 8775556 B1 US8775556 B1 US 8775556B1
- Authority
- US
- United States
- Prior art keywords
- time
- tracking data
- event tracking
- real
- data
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0201—Market modelling; Market analysis; Collecting market data
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/958—Organisation or management of web site content, e.g. publishing, maintaining pages or automatic linking
Definitions
- Web site analytics involves the analysis and reporting of web site traffic data to an associated publisher.
- a publisher is an entity that owns and/or manages a particular web site. The publisher can monitor web site analytics data related to user visits and links to the web site by using web site analytics tools provided by third parties.
- the subject technology provides for segmenting event tracking data to report real-time analytics data over a rolling window of time.
- An event tracking data communication associated with a time stamp is received.
- the event tracking data communication includes event tracking data for tracking an activity associated with a source of the event tracking data communication, and the event tracking data includes respective characteristics in a set of categories.
- Event tracking data from the event tracking data communication is segmented for placement into one or more aggregation tables.
- Each aggregation table corresponds with a period of time according to the time stamp, and each aggregation table includes event tracking data organized by a subset of the categories.
- the one or more aggregation tables are then updated with the segmented event tracking data.
- Another aspect of the subject technology provides for segmenting and storing event tracking data over a rolling window of time.
- An event tracking data communication is received in which the event tracking data communication includes event tracking data for tracking an activity associated with a source of the event tracking data communication, and the event tracking data includes respective characteristics in a set of categories.
- the subject technology determines a time stamp for the received event tracking data communication. A position in an array is determined based on the time stamp for the received event tracking data communication. The time stamp is compared with a stored time stamp at the position in the array.
- the event tracking data communication is then stored in an aggregation table referenced from the position in the array if the time stamp matches the stored time stamp in which the aggregation table corresponds with a period of time according to the time stamp, and the aggregation table includes event tracking data organized by a subset of the categories.
- the subject technology further provides for receiving an event tracking data communication associated with a time stamp in which the event tracking data communication includes event tracking data for tracking an activity associated with a source of the event tracking data communication, and the event tracking data includes respective characteristics in a set of categories.
- the event tracking data is segmented from the event tracking data communication for placement into one or more aggregation tables in which each aggregation table corresponds with a time interval over a rolling window of time according to the time stamp, and each aggregation table includes event tracking data organized by a subset of the categories.
- the one or more aggregation tables are updated corresponding with the time interval with the segmented event tracking data.
- the subject technology provides a system for automated segmentation of event tracking data to report real-time analytics data over a rolling window of time.
- the system includes a buffer module configured to queue and transmit event tracking data included in one or more event tracking data communications in which each event tracking data communication includes event tracking data for tracking an activity associated with a source of the event tracking data communication, and the event tracking data includes respective characteristics in a set of categories.
- the system further includes a real-time analytics query engine configured to segment the event tracking data from the one or more event tracking data communications received from the buffer module, and to place the segmented event tracking data into one or more aggregation tables.
- Each aggregation table corresponds with a period of time according to the time stamp, and each aggregation table includes event tracking data organized by a subset of the categories. Additionally, the system includes a real-time analytics data storage module configured to store the one or more aggregation tables from the real-time analytics query engine.
- FIG. 1 illustrates an exemplary architecture diagram of a multi-tiered real-time analytics system of some configurations.
- FIG. 2 conceptually illustrates an exemplary process for routing an event tracking data communication for persistent and temporary storage of some configurations.
- FIG. 3 conceptually illustrates an exemplary process for processing an event tracking data communication in a real-time server of some configurations.
- FIG. 4 conceptually illustrates different attributes and data structures that are included in some configurations of the multi-tiered real-time analytics system.
- FIG. 5 conceptually illustrates an exemplary process for segmenting event tracking data over a rolling period of time for real-time analytics reporting of some configurations.
- FIG. 6 conceptually illustrates exemplary data structures for one or more aggregations tables over a rolling window of time of some configurations.
- FIG. 7 conceptually illustrates an exemplary process for chronologically segmenting event tracking data of some configurations.
- FIG. 8 conceptually illustrates exemplary data structures for segmented event tracking data and an associated aggregation table of some configurations.
- FIG. 9 conceptually illustrates an exemplary software architecture of an real-time server of some configurations.
- FIG. 10 conceptually illustrates an electronic system in which some configurations are implemented.
- a real-time analytics system for receiving and reporting web site traffic data with low latency. More specifically, the real-time analytics system aggregates and reports web site traffic data by segmenting web site traffic data into one or more aggregation tables for presenting the web site traffic data in a useful and substantially real-time manner.
- a real-time server performs automated segmenting of tracking data included in an event tracking data communication over a rolling window of time.
- the real-time server 1) segments the event tracking data communication according to one or more aggregation tables and 2) stores and/or updates the included tracking data (e.g., a user identifier, an event statistic(s), such as a timestamp of the current web page event tracking data communication, and user data, such a city or other geographical location of the user) into one or more aggregation table(s) according to a predetermined query.
- the real-time server of some configurations can also perform an additional operation(s) on the segmented data, such as continually sorting the segments of tracking data within each of the aggregation tables to report the top segments of the tracking data from those aggregation tables.
- the real-time server can store the tracking data by time stamp in an array data structure, and for each array element include a pointer or hash key to a respective aggregation table.
- Data in the aggregation table can include any associated data included with the tracking data.
- the aggregation table can include data representing 1) a geo-location and 2) a number of associated hits in each row that is segmented by a predetermined time (e.g., seconds).
- the real-time server can then rank the data in the aggregation table based on a particular criterion or criteria and select particular rows of the table for presentation (e.g., to a web front-end or any other type client).
- a publisher typically provides tracking instructions embedded in the web site's web pages (alternatively or conjunctively, by providing code in its web page that requests the tracking instructions from an analytics server).
- the tracking instructions are a small region of JavaScriptTM code that the publisher includes in each page of the publisher's web site for which traffic is to be tracked.
- a web page is rendered by a user device and/or client (e.g., web browsers, mobile devices, tablet devices, thin clients, thick clients, etc.)
- the tracking instructions are executed, which collects visitor data related to one or more different user sessions and sends it back to a real-time analytics server in the form of an event tracking data communication for processing.
- One method of sending the event tracking data communication is to send it as part of a Hypertext Transfer Protocol (HTTP) request.
- HTTP Hypertext Transfer Protocol
- Web site traffic data can be in the form of the aforementioned event tracking data communications (e.g., Hypertext Transfer Protocol (HTTP) requests that are generated from various user devices and/or clients).
- HTTP Hypertext Transfer Protocol
- Each event tracking data communication can be triggered upon loading of a web page or resource (e.g., image file, banner ad, audio file, etc.) on the web site by a particular visitor to a publisher's web site.
- a web page or resource e.g., image file, banner ad, audio file, etc.
- the associated event tracking data (e.g., included in associated HTTP requests) can include a web property ID (e.g., an account identifier that identifies a publisher's analytics account of a particular web site), visitor identity data (i.e., corresponding to a particular user session), an event statistic(s) (such as a timestamp of the current web page communication), and user data such as location data (i.e., geographical information) associated with the visitor to the publisher's web site.
- the amount and types of events/information that are reported in the tracking data can be specified by the publisher (e.g., to account for particular information that a publisher wishes to track as web site analytics data).
- an event tracking data communication is described as including web site traffic data, an event tracking data communication is not limited to including web site traffic data.
- an event tracking data communication can include data from any source (e.g., application, platform, etc.) that for tracking an activity associated with the source.
- an event tracking data communication can include event tracking data that tracks an event associated with an activity within the mobile application platform.
- the event tracking data associated with the mobile application platform may not include web site traffic data because the mobile application platform does not require the use of a client such as a web browser.
- aspects of the multi-tiered real-time analytics system therefore can be configured to receive and process an event tracking data communication(s) including different forms of event tracking data that are outside the scope of web site tracking data.
- a multi-tiered real-time analytics system as described herein can be configured to receive and process incoming event tracking data communications as described above to enable real-time reporting of web site analytics data with low latency.
- the term “real-time” corresponds with reporting web site analytics data within a specified deadline by pushing/transmitting the web site analytics data through different tiers of the multi-tiered real-time analytics system.
- the expression “low latency” as used herein can be therefore understood as a measurement of time that covers a time period from the reception of an event tracking data communication to the real-time reporting of the web site analytics data included therein. As illustrated in FIG. 1 and described in further detail below, the flow of event tracking data goes through several tiers for real-time web site analytics processing and reporting.
- a real-time system is subject to a “real-time constraint” that can impose operational deadlines from an event to a system response.
- a real-time system operates within constraints on response time.
- the flow of event tracking data through different tiers of the system is required to meet deadlines in order to report the data within a specified period of time (e.g., in a real-time manner with low latency).
- the real-time analytics system imposes a respective one second deadline for processing event tracking data within each tier of the system.
- a logging server e.g., in a logging tier described further below
- a real-time server e.g., in a real-time analytics tier described below
- the event tracking data communication is dropped (e.g., discarded) by the logging server and no further processing occurs for that event tracking data communication.
- the real-time server receives the event tracking data communication from the logging server, the real-time server must forward the event tracking data communication to another real-time server or a front-end server (as described below) within a one second deadline.
- the real-time server similarly discards the event tracking data communication if it can not meet the one second deadline.
- the one second deadline discussed above is just one example of the specified period of time. Other periods of time may be specified.
- each tier of the real-time analytics system may have a different specified period of time for processing an event tracking data communication.
- FIG. 1 illustrates an exemplary architecture diagram of a multi-tiered real-time analytics system 100 for receiving and reporting web site traffic data in the form of event tracking data communications.
- the multi-tiered real-time analytics system 100 receives such event tracking data communications from a network 105 and routes the received communications for persistent and temporary storage to enable web analytics processing by the system.
- the network 105 can include, but is not limited to, a local network, remote network, or an interconnected network of networks (e.g., Internet as shown in FIG. 1 ).
- the multi-tiered real-time analytics system 100 may further include a collecting tier 110 , a logging tier 120 , a persistent tier 130 , a real-time analytics tier 140 and a front-end tier 150 .
- Each of the aforementioned tiers can include a respective cluster of servers/computers that perform a same set of functions in a distributed and/or load balanced manner.
- a cluster can be understood as a group of servers/computers that are linked together to seamlessly perform the same set of functions, which can provide performance, reliability and availability advantages over a single server/computer architecture.
- each illustrated tier depicts several number of servers. However, one of ordinary skill in the art would realize that the illustrated tiers could include any number of servers and still be within the scope of the subject technology. The descriptions of the various tiers of the system 100 are explained in further detail below.
- the collecting tier 110 receives incoming event tracking data communications from the network 105 .
- the collecting tier 110 includes at least one collecting server that is configured to receive and forward the event tracking data communication.
- Each collecting server of the collecting tier 110 can process an incoming event tracking data communication to determine a particular server in the logging tier 120 to route the event tracking data communication.
- the collecting server can utilize a load balancing technique to determine which logging server in the logging tier 120 to route the event tracking data communication.
- the load balancing technique can be based upon different factors such as server load, network load, and/or any other suitable computing metric for measuring resource utilization at a particular server.
- the logging tier 120 can receive a routed event tracking data communication from a particular collecting server of the collecting tier 110 .
- the subsequent tasks of the logging tier 120 can be understood as being two-fold: 1) route received event tracking data communications to the persistent tier 130 for persistent storage and 2) route received event tracking data communication to the real-time analytics tier 140 for temporary storage.
- the logging tier 120 includes at least one logging server that is configured to receive the routed event tracking data communication from the collecting server.
- the logging server aggregates incoming event tracking data communications and then periodically routes the aggregated event tracking data communications to the persistent tier 130 for persistent storage.
- Each event tracking data communication is associated with a particular web site of a publisher and the aggregated event tracking data communications can originate from disparate associated web sites and/or the same web site.
- the logging server can be further configured to verify each routed event tracking data communication to guarantee delivery of the event tracking data communications to a particular long-term storage server in the persistent tier 130 .
- the persistent tier 130 of some configurations can include at least one long-term storage server.
- Each long-term storage server includes a non-volatile storage device(s), a database(s), or other similar non-volatile storage medium for persistent storage of an incoming event tracking data communication.
- Persistent storage as used herein can be understood as referring to a type of non-volatile storage that stores the event tracking data in a reliable manner.
- persistent storage can include lossless or near-lossless storage in which the data is stored without being deleted and/or replaced at a subsequent time period.
- persistent storage can be characterized as storing event tracking data in a form of historical records so that the system can extract the stored tracking data at a later period of time.
- the stored event tracking data can be modified at a later time period.
- the stored event tracking data can be in the form of immutable records (i.e., data that is not modified after being stored).
- some implementations of the persistent tier 130 can replicate the stored event tracking data across another long-term storage server so that the tracking data is mirrored in at least one other long-term storage server.
- the long-term storage server that receives a particular event tracking data communication can then undergo a replication process (either initiated by the long-term storage server itself, a second long-term storage server, or another server in the multi-tiered system) to copy (i.e., replicate) the particular event tracking data to another long-term storage server.
- Data redundancy can therefore can be provided to enable fault tolerance in the event the data stored at one long-term storage server is corrupted and/or lost.
- the system can employ a lossy scheme for reporting web site traffic data in which some loss of event tracking data is tolerated.
- the multi-tiered real-time analytics system can adopt certain trade-offs for the sake of minimizing latency when routing the event tracking data to the real-time analytics tier as described further below.
- Each logging server of the logging tier 120 is further configured to route event tracking data communications to the real-time analytics tier 140 for temporary storage.
- each logging server can be configured to route the event tracking data communications to the real-time analytics tier 140 at a greater frequency than routing the communications to the persistent tier 130 .
- routing the tracking data communications to the real-time analytics tier 140 can be understood as occurring asynchronously with routing the communications to the persistent tier 130 .
- the real-time analytics tier 140 includes at least one real-time server that is configured to receive the routed event tracking data communication from the logging tier 120 .
- the real-time server in some implementations is configured to aggregate and/or sort the event tracking data according to one or more predetermined criteria for real-time reporting of the web site analytics data to a publisher.
- each event tracking data communication can include visitor identity data corresponding to a user session, location data associated with the user/visitor, and a timestamp corresponding to the visitor action.
- the real-time server of some implementations can process the aforementioned data to generate real-time analytics data for temporary storage. For instance, the real-time server can aggregate and sort the location data according to the timestamp of the visitor action and then temporarily store the aggregated and/or sorted real-time analytics data.
- the real-time server sends the aggregated and/or sorted real-time analytics data to the front-end tier 150 for reporting the real-time analytics data.
- temporary storage can be understood as providing volatile, quick access to data (in comparison to persistent storage) stored in a storage device such as volatile memory (e.g., random access memory).
- the front-end tier 150 in one aspect can run queries on the stored real-time analytics data to report to the publisher with low latency.
- the real-time server can be configured to process incoming queries from the front-end tier on the stored real-time analytics data.
- the real-time server can return matching real-time analytics data based on the queries to the front-end tier 150 for real-time presentation with low latency.
- the system 100 includes the front-end tier 150 , which includes at least one front-end server configured to report the real-time analytics data with low latency.
- the front-end server of some implementations is configured to receive real-time analytics data from the real-time server.
- the front-end server can receive real-time web analytics data associated with a particular location (e.g., city, state, country, etc.) over a predetermined time period for presentation at a front-end interface (i.e., graphical user interface) to an end-user.
- a front-end interface i.e., graphical user interface
- system 100 includes several tiers
- respective tiers could be combined to function as a single tier and still be within the scope of the subject technology.
- the above described collecting and logging tiers could be implemented as a single tier that perform a combined set of functions.
- the respective tiers can be configured to communication over a type of network, such as a local area network, a wide area network, or an interconnected network of networks (e.g., the Internet) and by using any sort of network/communications protocol (Transmission Control Protocol and Internet Protocol (TCP/IP), HTTP, etc.).
- a type of network such as a local area network, a wide area network, or an interconnected network of networks (e.g., the Internet) and by using any sort of network/communications protocol (Transmission Control Protocol and Internet Protocol (TCP/IP), HTTP, etc.).
- TCP/IP Transmission Control Protocol and Internet Protocol
- different configurations of the multi-tiered system can be organized in different ways. For instance, different tiers could be located in different geographical locations. Each geographical location can be associated with a respective data center that includes one or more servers associated with a particular tier. Alternatively or conjunctively, the respective servers in one particular tier could be located in one or more different geographical locations and/or data centers. This flexibility in organizing the multi-tiered system provides an advantage of increasing the scalability of the system to include servers across potentially disparate physical locations.
- FIG. 2 conceptually illustrates an exemplary process 200 for routing an event tracking data communication for persistent and temporary storage of some configurations. More specifically, FIG. 2 illustrates the process performed by a logging server to route event tracking data communications to a persistent tier and to a real-time analytics tier. The process 200 of FIG. 2 will be described by reference to corresponding portions of FIG. 1 .
- the process 200 starts when an event tracking data communication is received at 205 .
- the logging server in the logging tier 120 receives the event tracking data communication from a collecting server in the collecting tier 110 .
- the logging server can receive the web site communication when pushed from the collecting server.
- the tracking data communication is pushed as a server push from the collecting server to the logging server.
- the latency of receiving the event tracking data communication is decreased because the aforementioned data flow reduces the typical overhead associated with a traditional request/response communication flow.
- the process 200 can then perform the task of routing the received web site to separate tiers.
- the event tracking data communication is routed to a long-term storage server (e.g., in the persistent tier 130 from FIG. 1 ) for persistent storage.
- the logging server in the logging tier 120 routes the event tracking data communication to the long-term storage server in persistent tier 130 .
- the logging server can queue several received event tracking data communications for routing the tracking data communications in a batch manner.
- some implementations can further verify the delivery of the event tracking data communication to the long-term storage server in order to guarantee the delivery of the communication.
- the process 200 then continues to 215 to route the event tracking data communication to a selected real-time server.
- the real-time analytics tier 140 can include several real-time servers.
- the logging server in the logging tier 130 can arbitrarily select a real-time server to route the event tracking data communication.
- latency in reporting real-time analytics data can be decreased because the process 200 does not rely on any particular real-time server to process the tracking data communication.
- the arbitrary selection of the real-time server by the process 200 also alleviates potential processing bottlenecks by impartially distributing the event tracking data communications across the real-time servers in the real-time analytics tier 140 from FIG. 1 .
- the real-time server can be selected based on different criteria. For example, the logging server can select the real-time server using a randomized selection in which a particular real-time server is randomly selected from among more than one different real-time servers. In yet other configurations, the logging server can select the real-time server based on load-balancing requirements in which one or more particular computing metrics are utilized to determine the real-time server to receive the event tracking data communication.
- the process 200 at 215 can route the event tracking data communication at a greater frequency than routing the communication to the long-term storage server. For example, when the logging server receives the event tracking data communication, the logging server can queue several tracking data communications before sending them to the long-term storage server because low latency is not a factor for the aspect of the multi-tiered system dealing with persistent storage of the event tracking data. In one aspect, the logging server can immediately or in a shorter time period route the event tracking data communication to the randomly selected real-time analytics server to ensure that the requirement of low latency processing, storing and reporting of the real-time analytics data is met. After routing the event tracking data communication to the long-term storage server and the real-time server, the process 200 then ends.
- routing to the long-term storage server occurs before routing to the real-time server
- routing the described order is one exemplar and some implementations could reverse the order of the previously described routing without departing from the scope of the invention.
- some implementations could route the event tracking data communication to the real-time server before routing the communication to the long-term storage server.
- routing the communication to the long-term storage server and the real-time server occurs in a simultaneous and/or synchronous manner.
- FIG. 3 conceptually illustrates an exemplary process 300 for processing an event tracking data communication in a real-time server.
- the process 300 begins when a routed event tracking data communication is received at 305 in a selected real-time server.
- the real-time server can receive the event tracking data communication when the communication is pushed from the logging server to the real-time server.
- the logging server can employ a push technique to push event tracking data communications to the arbitrarily selected real-time server. In other words, by pushing the event tracking data communication, the logging server initiates a communication flow without requiring an initial request from the recipient (i.e., the arbitrarily selected real-time server).
- an associated overhead of a typical request/request communication flow can be eliminated in the multi-tiered system. As a result, latency is reduced in the system for processing and reporting real-time analytics data.
- the process 300 determines the real-time server(s) associated with the event tracking data communication.
- a real-time server(s) can be associated with a web site of a particular publisher.
- the real-time server can consult a table, list or other suitable data structure that indicates one or more real-time servers that are associated with the publisher's web site.
- the associated one or more real-time servers therefore can be considered an “owner” of any event tracking data communication for that publisher's web site.
- the associated real-time server is required to process each event tracking data communication for that publisher's web site.
- the process 300 can decide at 320 whether a different real-time server is associated with the received event tracking data communication.
- the process 300 determines at 320 that the real-time server is not associated with the event tracking data communication, the process 300 continues to 330 .
- the process 300 routes the event tracking data communication to one or more real-time servers associated with the event tracking data communication based on the determination at 310 .
- the real-time server can route the event tracking data communication to the associated one or more real-time servers in the real-time analytics tier 140 .
- the process 300 then ends.
- the process 300 determines at 320 that the real-time server is associated with the event tracking data communication, the process 300 continues to 340 to temporarily store real-time analytics data based on the event tracking data communication.
- the process 300 temporarily stores the real-time analytics data in non-persistent storage (e.g., volatile memory, RAM, etc.). After storing the event tracking data communication, the process 300 then ends.
- process 300 determines an associated owner of the event tracking data communication at 320
- this step is not performed (i.e., process 300 foregoes 310 - 330 ) and the process 300 immediately proceeds to 340 to store the event tracking data communication.
- the real-time server that receives the communication assumes ownership of the received communication.
- An associated real-time server can temporarily store such attributes and data structures illustrated in FIG. 4 for reporting real-time analytics data.
- FIG. 4 conceptually illustrates different attributes and data structures that are included in some configurations of the multi-tiered real-time analytics system. More specifically, FIG. 4 depicts exemplar attributes and data structures of a real-time analytics data structure 465 that are based on event tracking data communications.
- an event tracking data communication can include data for identifying a user session of a visitor, a location of the visitor, and other real-time analytics attributes.
- a real-time server can temporarily store the real-time analytics attributes and data structures shown in FIG. 4 based on the aforementioned data included in the event tracking data communication.
- the real-time analytics data structure 465 can be understood as a container that is a collection of the various attributes and data structures based on one or more event tracking data communication(s). As shown in FIG. 4 , the real-time analytics data structure 465 includes an associated web property identity (WPID) data structure 470 , associated WPID attribute 475 , hit data structure 480 , hit data element 485 and hit real-time data attributes 490 . Although these attributes and data structures are represented as included in a single data structure, some implementations can store each of the attributes and data structures in separate data structures that include any combination of data attributes. The aforementioned attributes and data structures are described in further detail as set forth below.
- WPID web property identity
- the associated web property identity (WPID) data structure 470 includes one or more associated WPID attributes.
- Each associated WPID attribute can represent a publisher of a web site which is associated with the real-time server.
- the associated WPID attribute 475 corresponds with a publisher with a “WPID 1” that represents a unique string ID for the publisher.
- WPID 1 represents a unique string ID for the publisher.
- the unique string ID could be formed from any combination of alphanumeric characters and/or symbols.
- each associated WPID attribute can include a reference to the hit data structure 480 .
- the hit data structure 480 includes attributes for each event tracking data communication for the publisher. As shown, the hit data structure 480 includes hit data element 485 corresponding to a particular event tracking data communication “X” for the publisher corresponding with associated WPID attribute 475 . The hit data element 485 is shown in more detail in breakout section 490 .
- the hit data element 485 can include the real-time data attributes 490 corresponding to a visitor ID, a last timestamp, location data and campaign data.
- the visitor ID attribute represents a unique ID string associated with a unique visitor session.
- the visitor ID attribute does not necessarily identify a particular end-user but instead corresponds with a particular user session on the publisher's web site.
- the visitor ID can be a randomized identifier that is determined based on different information such as the visitor's web browser or client, the timestamp associated with the visitor's session, and/or the visitor's hostname, etc.
- the location data does not identify the visitor's personal address, but is related to a geographical location (e.g., city) that can be determined based on the IP address assigned to the visitor (e.g., by an Internet service provider).
- the last timestamp attribute of the real-time data attributes 490 represents the most recent timestamp in which the unique visitor visited the publisher's web site.
- a timestamp in some implementations is a sequence of alphanumeric characters that denotes the date and/or time in which a particular event occurred.
- the location data attribute represents the geographical location of the unique visitor, such as a specified city, state, county, country, zip code, global positioning system coordinates, and/or geographical coordinates (e.g., latitude, longitude, elevation), etc.
- the campaign attribute identifies a particular marketing campaign corresponding with a set of associated marketing activities. For instance, the associated marketing activities can respectively correspond to a set of web pages on the publisher's web site. Any visitor activity/action related to the set of web pages on the publisher's web page can then be associated with the marketing campaign. In this manner, the campaign attribute can identify the marketing campaign associated with the visitor action.
- the real-time analytics data structure 465 of some configurations can be implemented as a collection of tree data structures, otherwise known as a “forest.”
- a root node of a particular tree corresponds with a particular WPID (i.e., publisher identity) and each direct child of the root node can represent multiple visitor nodes that are associated with respective visitors to the publisher's web site.
- WPID i.e., publisher identity
- each direct child of the root node can represent multiple visitor nodes that are associated with respective visitors to the publisher's web site.
- visitor specific attributes are stored.
- Each visitor node can have multiple direct child nodes that represent the associated visitor's actions based on a timestamp. The timestamp of the last action for the associated visitor can also be stored with the parent associated visitor node described above.
- certain visitor attributes can be implemented as discrete nodes, such as a node including a city identifier with respective direct child nodes corresponding to a city name and geographical coordinates (e.g., latitude, longitude, etc.).
- the following description describes an exemplary process for segmenting incoming event tracking data communications according to a predetermined aggregation table over a rolling window of time.
- an administrator of the multi-tiered analytics system can set one or more different aggregation tables for storing different data from the incoming communications received during a specified period of time.
- Incoming event tracking data communications can be processed in order to extract relevant data into such aggregation tables.
- Each aggregation table can include corresponding event tracking data that is frequently searched/queried in reporting real-time analytics data.
- data related to a derived location e.g., based from an associated Internet Protocol address from an Internet service provider
- a uniform resource locator or identifier e.g., a web page address
- an ad source e.g., referrer
- an administrator of the multi-tiered analytics system can set the order in which the aggregation tables are searched.
- the administrator can configure the system so that aggregation tables containing data that is reported more often are searched before aggregation tables containing data that is searched and reported less frequently.
- system latency can be reduced because more frequently reported data is initially searched and/or located, which reduces processing time because the system forgoes searching unlikely matching data.
- the multi-tiered analytics system enables prioritization in searching/querying of the event tracking data to improve latency in reporting the web analytics data.
- a predetermined query can be configured by a publisher for segmenting event tracking data from incoming event tracking data communications according to different needs of the publisher.
- the utilization of the predetermined query can require the creation of a custom aggregation table for storing the type of data according to the predetermined query.
- the exemplary process described below can place the segmented tracking data into one or more different aggregation tables (e.g., tables that are created before the predetermined query as described above).
- the publisher can configure the predetermined query to segment the event tracking data according to different user information and/or different visitor actions.
- the publisher could be interested in segmenting each geographical location associated with respective web page requests or segmenting the event tracking data to track a number of requests to a particular web page resource (e.g., banner ad, image, etc.).
- the segmented event tracking data based on the predetermined query can be subsequently reported to the publisher in a real-time manner.
- time can be saved in reporting event tracking data by reducing the administrative costs with managing the real-time analytics system.
- FIG. 5 conceptually illustrates an exemplary process 500 for segmenting event tracking data over a rolling period of time for real-time analytics reporting of some configurations. More specifically, over a rolling period of time, the process 500 continuously segments the event tracking data included in incoming event tracking data communications into one or more aggregation tables.
- the rolling period of time represents one or more contiguous time intervals in which the event tracking data is received and reported by the multi-tiered analytics system. Each time interval can correspond with a respective duration of time such as a number of milliseconds, seconds, minutes, etc.
- the exemplary process in FIG. 5 can be implemented by a real-time server to segment real-time analytics data into an aggregation table(s) corresponding to a particular span of time.
- the process 500 starts when an event tracking data communication is received at 505 during a span of time.
- the span of time in some configurations corresponds with a time interval during which web traffic data in the form of an event tracking data communication(s) is received by the multi-tiered analytics system.
- a real-time server in the real-time analytics tier 140 receives the event tracking data communication from a logging server in the logging tier 120 .
- the real-time server can receive the event tracking data communication when pushed from the logging server as mentioned before.
- the real-time server can receive the communication from the logging server, one of ordinary skill in the art would recognize that the event tracking data communication can be received from other sources and still be within the scope of the subject technology.
- the real-time server can receive the event tracking data communication from another real-time server.
- the process 500 can store the event tracking data into a master table for a particular span of time.
- the master table of some configurations includes all data from the event tracking data communication that could be utilized for real-time analytics reporting.
- the process 500 could utilize the master table for different operations. For instance, in a scenario in which the process 500 requires different data than data currently included in existing aggregation tables (e.g., to satisfy a new user-defined query), the process 500 could search the master table for such data and form a new aggregation table to hold the data.
- the process 500 at 515 segments the event tracking data communication into one or more aggregation tables.
- the process 500 can extract corresponding event tracking data included in the communication and place the extracted data into one or more aggregation tables.
- each aggregation table can include commonly search for data for real-time analytics reporting, or include data according to a respective predetermined query (i.e., a user-defined query).
- the predetermined query of some configurations organizes the event tracking data based on one or more different criterion for an associated web property ID of a publisher's web site. For instance, the predetermined query can be based on user data, such as a city or other geographical location of the user.
- the process 500 of some configurations segments the event tracking data communication according to a predetermined period of time for a respective associated web property ID of a publisher.
- the process 500 can utilize a time stamp of the event tracking data communication in order to determine the one or more aggregation tables in which the tracking data is segmented.
- the process 500 at 520 updates the one or more aggregation tables with the segmented event tracking data. For instance, the process 500 can update one or more different entries in a particular aggregation table. In an example in which the particular aggregation table tracks a number of occurrences for a particular event or visitor action, the process 500 can increment a respective number/count for a particular tracked event such as a number of hits in a corresponding entry of the aggregation table. For each incoming event tracking data communication over the rolling window of time, the process 500 continuously updates corresponding entries in one or more aggregation tables to facilitate real-time analytics reporting of the event tracking data with low latency.
- the process 500 then continues to 525 to determine whether an additional operation(s) is to be performed on the event tracking data. If an additional operation is performed, then the process 500 continues to 530 to perform the additional operation, otherwise the process 500 ends.
- Some configurations can perform filtering (e.g., removing/reducing data), sorting (e.g., ranking) and other types of processing operations on the event tracking data. For instance, the process 500 can rank the segmented event tracking data to organize the event tracking data into a specified order (e.g., most occurrence, most significant, etc.) by sorting the segmented web site track data.
- the process 500 can sort the segmented event tracking data according to the number of hits (e.g., ascending or descending numerical order). Alternatively, the process 500 can sort the segmented event tracking data based on a non-numerical criterion (e.g., alphabetical order), such as sorting the geographical locations respectively associated with the event tracking data in the aggregation table.
- a non-numerical criterion e.g., alphabetical order
- the process 500 of some configurations can employ intelligent ranking at 530 by computing and/or assigning weights to the segmented data.
- One or more different factors can determine an assigned weight such as a web page associated with the visitor activity (e.g., more important pages get assigned higher/greater weight), the type of visitor activity (e.g., browsing, commenting, etc.), referrer (e.g., where the visitor came from), etc.
- the event tracking data can be qualitatively ranked according to one or more different assigned weights to respective data.
- the process 500 can perform qualitative ranking of the segmented data in addition or alternatively to the quantitative ranking described above.
- the process 500 can transmit at 530 the segmented event tracking data in the corresponding aggregation table to a front-end server for reporting the event tracking data.
- the process 500 can receive a query from the front-end server for the event tracking data and, in response, can transmit data that matches the query to the front-end server.
- the process 500 can be configured to push data from one or more aggregation tables to the front-end server without requiring the front-end server to request the data. The process 500 then ends.
- process 500 is described in FIG. 5 as performing the one or more additional operations after updating the aggregation tables at 520 , one of ordinary skill in the art would appreciate that any of the aforementioned additional operations could be performed after receiving the event tracking data communication at 505 and/or before segmenting the event tracking data at 515 .
- another operation could be performed in lieu of segmenting the event tracking data at 515 .
- the process 500 could instead filter the event tracking data to remove data according to one or more different filter criteria. In this fashion, the process 500 could reduce the amount of event tracking data that is to be segmented at 515 to enable more efficient processing of the data.
- the multi-tiered real-time analytics system can temporally use corresponding aggregation tables for reporting the event tracking data with respect to a span of time.
- FIG. 6 conceptually illustrates exemplary data structures for one or more aggregation tables over a rolling window of time of some configurations.
- FIG. 6 depicts a continuous timeline 605 divided into different time intervals 610 , 615 and 620 (shown as Time 1 to Time X, where X is a positive integer) in which each respective time interval has associated aggregation tables for a given web property ID.
- Each associated aggregation table corresponds with a given time interval and includes data for one or more dimensions.
- a dimension can be understood as including data organized by a particular characteristic in a respective category in which the characteristic can fall under the respective category.
- aggregation tables can include respective dimensions related to geographical location, web page, browser, ad source, time, type of visitor activity, etc.
- data that indicates the browser is “Internet Explorer” could be a characteristic that falls under the browser category.
- Each time interval shown in FIG. 6 can represent a span of time such as, but not limited to, a number of milliseconds, seconds, minutes, etc., in which incoming event tracking data communications are segmented and processed.
- the real-time analytics system can configure the time interval for processing incoming event tracking data communications based on particular characteristics of the publisher's web site, and each time interval could represent the same or non-equal periods of time depending on these characteristics. For example, for a given web site with a pattern of web site traffic, a shorter time interval(s) can be set for time periods with more web site traffic while a longer time interval(s) can be set for time periods with less web site traffic.
- the time intervals 615 to 620 are shown in FIG. 6 as contiguous time intervals, some configurations can include overlapping time intervals.
- the time interval 610 has several associated aggregation tables 630 , 635 , 640 and a master table 625 .
- the master table 625 is formed during the time interval 610 to store all data from each received event tracking data communication during the time interval 610 .
- the real-time analytics system can utilize the master table in the event that the desired event tracking data is not available in any other associated aggregation table for the time interval 610 .
- the real-time analytics system can search/query the master table to create a new aggregation table to store this newly segmented data.
- an analogous new aggregation table is created for the each of the remaining time intervals. For example, new respective analogous aggregation tables in the time intervals 615 to 620 can be subsequently created by searching corresponding master tables for the desired event tracking data.
- the associated aggregation tables 630 , 635 and 640 represent exemplary data structures for storing portions of data (i.e., segmented data) also included in the master table 625 .
- Each aggregation table can include segmented data extracted from incoming event tracking data communications.
- the aggregation tables 630 , 635 and 640 respectively include tracking data related to a city (e.g., geographical location), web page (e.g., URL/URI string indicating a web address) and source of a referral (e.g., an ad source, HTTP referrer, etc.).
- the exemplary aggregation tables in FIG. 6 can include one or more entries.
- the aggregation tables 630 , 635 and 640 respectively include N, M and O number of entries, where N, M and O are respective non-zero integer values. More specifically, the aggregation table 630 includes entries C1-C4 up to N entries for respective cities, the aggregation table 635 includes entries P1-P4 up to M entries for respective pages, and the aggregation table 640 includes entries S1-S4 up to O entries for respective sources.
- aggregation tables 650 , 655 and 660 in the time interval 615 and aggregation tables 670 , 675 and 680 in the time interval 620 respectively represent analogous data structures to the aggregation tables 630 , 635 and 640 in the prior time interval 610 .
- the aggregation tables 650 , 655 and 660 respectively include P, Q and R number of entries, where P, Q and R are respective non-zero integer values.
- the aggregation table 650 includes entries C1-C4 up to P entries that represent respective cities
- the aggregation table 655 includes entries P1-P4 up to Q entries that represent respective pages
- the aggregation table 660 includes entries S1-S4 up to R entries that represent respective sources.
- the aggregation table 670 includes entries C1-C4 up to S entries that represent respective cities
- the aggregation table 675 includes entries P1-P4 up to T entries that represent respective pages
- the aggregation table 660 includes entries S1-S4 up to U entries that represent respective sources.
- FIG. 6 describes exemplary aggregation tables
- any type of aggregation table (which includes event tracking data in one or more dimensions) could be utilized by the multi-tiered analytics system for reporting real-time analytics data.
- the multi-tiered analytics system can dynamically create additional aggregation tables according to new queries and/or to report new or different types of visitor activity and web traffic data.
- the following description discusses an exemplary process for segmenting event tracking data in discrete units of time according to some configurations. Segmenting the data according to units of time enables the multi-tiered analytics system to report real-time analytics data in a finely granulated manner. In other words, the real-time web site analytics data can be reported in segments corresponding to smaller units of time.
- FIG. 7 conceptually illustrates an exemplary process 700 for chronologically segmenting event tracking data of some configurations. More specifically, the process 700 can be implemented by a real-time server to segment incoming event tracking data communications into respective aggregation tables based on a respective period of time.
- the process 700 starts when an event tracking data communication is received at 705 .
- a real-time server in the real-time analytics tier 140 receives the event tracking data communication from a logging server in the logging tier 120 .
- the real-time server can receive the event tracking data communication when pushed from the logging server as mentioned before. Additionally, one of ordinary skill in the art would realize that the event tracking data communication can be received from other sources and still be within the scope of the subject technology. In some configurations, the real-time server can receive the event tracking data communication from another real-time server.
- the process 700 determines a time stamp for the event tracking data communication.
- time stamp can be understood as a sequence of characters and/or symbols that indicates the date and/or time at which a particular event or visitor action occurred.
- the process 700 can determine the time stamp as it is included in the event tracking data communication as part of the incoming request.
- the process 700 continues to 715 to determine a position in an array based on the time stamp for the received event tracking data communication.
- the position in the array is determined by performing a modulo n operation on the time stamp, where n represents the size of the array.
- n represents the size of the array.
- the position in the array can be determined by performing a modulo 60 operation on the time stamp.
- the array includes sixty positions in which each position logically represents a respective second within a minute time period.
- the process 700 of some configurations therefore enables segmentation of the event tracking data according to the size of the array, where each position in the array can be a logical representation of a specific division of time (e.g., second, minute, hour, etc.).
- the process 700 at 720 compares the time stamp with a stored time stamp at the determined position in the array. For instance, some configurations respectively store associated time stamps for one or more positions in the array for incoming event tracking data communications. Each stored time stamp can reference one or more different aggregation tables that segment the event tracking data according to different respective predetermined queries.
- the process 700 can decide at 725 whether the time stamps match. In an instance in which the time stamps match one another, the process 700 continues to 745 to store the event tracking data communication based on a particular predetermined query in an aggregation table referenced from the position in the array. Further, as discussed above in reference to FIG. 5 , after the event tracking data communication is stored in the aggregation table, the tracking data stored in the aggregation table can be sorted (i.e., ranked according to a specified ordering scheme) according to one or more predetermined criteria (e.g., a number of hits, geographical location, etc.). The process 700 then ends.
- predetermined criteria e.g., a number of hits, geographical location, etc.
- the process 700 continues to 735 to clear (i.e., erase or delete) one or more (if any) stored web site traffic data entries in the aggregation table referenced from the position in the array.
- the process 700 at 740 stores the time stamp at the position in the array.
- the process 700 then stores the web site traffic data communication in the aggregation table referenced from the position in the array according to the predetermined query. The process 700 then ends.
- the array is referenced from an associative array with one or more entries.
- One form of an associative array can be a hash table with one or more entries. Each hash table entry can represent a respective web property identity for a particular publisher.
- the expression “hash table” as used herein can be understood as a data structure including one or more unique keys and corresponding one or more values in which each key is associated with one or more values. In this manner, a hash table of web property identities can be provided to enable segmenting the data according to an associated publishers web property identity (e.g., for a particular web site).
- FIG. 8 conceptually illustrates exemplary data structures for segmented event tracking data and an associated aggregation table of some configurations. More specifically, FIG. 8 depicts an exemplary array of time stamps and a corresponding aggregation table referenced from one particular time stamp entry in the array. The illustrated data structures of FIG. 8 will be described by reference to corresponding portions of FIG. 6 .
- an array 810 includes 1 to N time stamp entries.
- the array 810 conceptually represents a city by second array in which each time stamp entry includes a reference to an aggregation table that segments the event tracking data according to a geographical location (i.e., the city) and tracks associated hits for each respective geographical location associated with the event tracking data.
- Some configurations can include an array with sixty entries in which each entry/position in the array logically represents a different second within a minute.
- a particular entry in the array 810 can include a reference to a corresponding aggregation table.
- the entry representing “Time Stamp 4 ” includes a reference/pointer to an aggregation table 820 .
- each entry in the aforementioned array 810 can reference a corresponding aggregation table in the time intervals 610 - 620 .
- each array entry can reference a corresponding aggregation table in a respective time interval in the timeline 605 corresponding to a respective second within a minute.
- the aggregation table 820 includes segmented event tracking data based on the geographical location (i.e., the city) associated with the event tracking data.
- the aggregation table 820 includes two columns for 1 to Y entries corresponding to respective geographical locations and an associated number/count of hits.
- the aggregation table 820 keeps a count of hits/requests for each geographical location.
- the process 500 can update the aggregation table at 520 to increment the count as shown in the aggregation table 820 in FIG. 8 and then sort the entries in the aggregation table 820 to rank the entries in a specified order (e.g., ascending or descending). As depicted in FIG.
- the aggregation table 820 ranks the entries in ascending order by the number of hits.
- the aggregation table 820 can be included in a corresponding time interval (i.e., one of the time intervals 610 - 620 ) in the timeline 605 .
- the aggregation table 820 can be included the time interval 620 .
- All event tracking data included in the aggregation 820 can also be included in the master table 665 in the time interval 620 .
- analogous tables to the aggregation table 820 can be included in each of the remaining time intervals in the timeline 605 .
- the following section describes a software architecture of a real-time server that can implement the above described processes and data structures as a computer program running on a particular machine, such as a computer, or stored as instructions in a computer readable medium.
- FIG. 9 conceptually illustrates an exemplary software architecture of a real-time server 905 of some configurations.
- FIG. 9 shows various modules and components of the real-time server 905 for implementing the above described processes in FIGS. 2 , 3 , 5 and 7 and the data structures in FIGS. 4 , 6 and 8 .
- the software architecture of the real-time server is part of a server-based implementation running a particular machine connected to a network.
- the real-time server 905 can include a request router module 910 for parsing and routing event tracking data, a hit accumulator module 920 for buffering and querying real-time analytics data, and a real-time analytics data storage 930 for temporarily storing real-time analytics data.
- the real-time analytics data storage 930 in some implementations is a type of volatile and non-persistent storage (e.g., RAM). The operation of the aforementioned modules of the real-time server 905 are discussed in the following description.
- the real-time server 905 can receive event tracking data 902 in a request router module 910 .
- the event tracking data 902 can be in the form of an event tracking data communication that is received over a network 950 .
- the request router module 910 includes a parser module 912 and an ownership module 914 .
- the parser module 912 of some implementations can parse the event tracking data to extract real-time analytics data and to subsequently transmit the real-time analytics data to the ownership module 914 .
- the ownership module 914 determines a set of associated real-time servers that are owners of the event tracking data corresponding with a publisher's web site.
- the request router module 910 can route the event tracking data 902 over the network 950 to other associated real-time servers. As shown in FIG. 9 , additional real-time servers 960 and 970 are connected to the network 950 . Alternatively, in the event that the ownership module 914 determines that the real-time server 905 is associated with the event tracking data 902 , the request router module 910 routes (i.e., sends) the event tracking data to the hit accumulator module 920 for further processing and temporary storage.
- the hit accumulator module 920 receives the event tracking data routed from the request router module 910 .
- the hit accumulator module 920 includes a buffer module 922 as shown for queuing/aggregating the event tracking data.
- the buffer module 922 can be implemented in different ways. For instance, the buffer module 922 could utilize a first-in first-out (FIFO) scheme in which the earliest received event tracking data is transferred out before later received data. In other instances, the buffer module 922 could employ a last-in first-out (LIFO) scheme that is analogous to a stack in which the later received data is transferred out before earlier received data.
- FIFO first-in first-out
- LIFO last-in first-out
- the buffer module 922 then sends event tracking data to a real-time analytics query engine 924 in the hit accumulator module 920 .
- the real-time analytics query engine 924 of some configurations performs query processing and data management of the real-time analytics data storage 930 .
- the real-time analytics query engine 924 can perform write and/or update operations to temporarily store the event tracking data to the real-time analytics data storage 930 .
- the real-time analytics data storage 930 can be implemented to provide fast access to stored real-time analytics data.
- the real-time analytics data storage 930 can be implemented as fast non-persistent/volatile memory that is periodically flushed and/or overwritten with more recent event tracking data. In this manner, the overhead of managing the data in the real-time analytics data storage 930 is reduced because longevity of the data is not a primary objective.
- the hit accumulator module 920 can execute queries for sorting and/or aggregating the received event tracking data for temporary storage in the real-time analytics data storage 930 .
- a real-time server from the real-time analytics tier 140 can aggregate and sort the real-time analytics data according to one or more predetermined queries for temporary storage and then send the aggregated and/or sorted real-time analytics data to the front-end tier 150 for reporting the real-time analytics data.
- the real-time analytics query engine 924 of hit accumulator module 920 can execute the queries in order to sort and/or aggregate the received event tracking data before temporarily storing the real-time analytics data in the real-time analytics data storage 930 .
- the real-time server 905 can then send the stored aggregated and/or sorted real-time analytics data to a front-end server for reporting and/or presenting real-time analytics data to an end-user.
- the hit accumulator module 920 can be configured to segment the received event tracking data into one or more different aggregation tables. For instance, referring back to FIG. 5 , the process 500 at 515 segments the event tracking data communication into one or more aggregation tables. As shown in FIG. 9 , the real-time analytics query engine 924 of hit accumulator module 920 can extract event tracking data from the buffer module 922 for placement into one or more different aggregation tables in the real-time analytics data storage 930 . Referring to FIG. 6 , the one or more aggregation tables can correspond to the different tables in the time intervals 610 - 620 shown in the timeline 605 .
- Computer readable storage medium also referred to as computer readable medium.
- processing unit(s) e.g., one or more processors, cores of processors, or other processing units
- processing unit(s) e.g., one or more processors, cores of processors, or other processing units
- Examples of computer readable media include, but are not limited to, CD-ROMs, flash drives, RAM chips, hard drives, EPROMs, etc.
- the computer readable media does not include carrier waves and electronic signals passing wirelessly or over wired connections.
- the term “software” is meant to include firmware residing in read-only memory or applications stored in magnetic storage, which can be read into memory for processing by a processor.
- multiple software inventions can be implemented as sub-parts of a larger program while remaining distinct software inventions.
- multiple software inventions can also be implemented as separate programs.
- any combination of separate programs that together implement a software invention described here is within the scope of the invention.
- the software programs when installed to operate on one or more systems, define one or more specific machine implementations that execute and perform the operations of the software programs.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- FIG. 10 conceptually illustrates a system 1000 with which some implementations of the subject technology may be implemented.
- the system 1000 can be a computer, phone, PDA, or any other sort of electronic device. Such a system includes various types of computer readable media and interfaces for various other types of computer readable media.
- the system 1000 includes a bus 1005 , processing unit(s) 1010 , a system memory 1015 , a read-only memory 1020 , a storage device 1025 , an optional input interface 1030 , an optional output interface 1035 , and a network interface 1040 .
- the bus 1005 collectively represents all system, peripheral, and chipset buses that communicatively connect the numerous internal devices of the system 1000 .
- the bus 1005 communicatively connects the processing unit(s) 1010 with the read-only memory 1020 , the system memory 1015 , and the storage device 1025 .
- the processing unit(s) 1010 retrieves instructions to execute and data to process in order to execute the processes of the invention.
- the processing unit(s) can be a single processor or a multi-core processor in different implementations.
- the read-only-memory (ROM) 1020 stores static data and instructions that are needed by the processing unit(s) 1010 and other modules of the system 1000 .
- the storage device 1025 is a read-and-write memory device. This device is a non-volatile memory unit that stores instructions and data even when the system 1000 is off. Some implementations of the invention use a mass-storage device (such as a magnetic or optical disk and its corresponding disk drive) as the storage device 1025 .
- the system memory 1015 is a read-and-write memory device. However, unlike storage device 1025 , the system memory 1015 is a volatile read-and-write memory, such a random access memory.
- the system memory 1015 stores some of the instructions and data that the processor needs at runtime.
- the invention's processes are stored in the system memory 1015 , the storage device 1025 , and/or the read-only memory 1020 .
- the various memory units include instructions for processing multimedia items in accordance with some implementations. From these various memory units, the processing unit(s) 1010 retrieves instructions to execute and data to process in order to execute the processes of some implementations.
- the bus 1005 also connects to the optional input and output interfaces 1030 and 1035 .
- the optional input interface 1030 enables the user to communicate information and select commands to the system.
- the optional input interface 1030 can interface with alphanumeric keyboards and pointing devices (also called “cursor control devices”).
- the optional output interface 1035 can provide display images generated by the system 1000 .
- the optional output interface 1035 can interface with printers and display devices, such as cathode ray tubes (CRT) or liquid crystal displays (LCD). Some implementations can interface with devices such as a touchscreen that functions as both input and output devices.
- CTR cathode ray tubes
- LCD liquid crystal displays
- bus 1005 also couples system 1000 to a network interface 1040 through a network adapter (not shown).
- the computer can be a part of a network of computers (such as a local area network (“LAN”), a wide area network (“WAN”), or an Intranet, or an interconnected network of networks, such as the Internet. Any or all components of system 1000 can be used in conjunction with the invention.
- Some implementations include electronic components, such as microprocessors, storage and memory that store computer program instructions in a machine-readable or computer-readable medium (alternatively referred to as computer-readable storage media, machine-readable media, or machine-readable storage media).
- computer-readable media include RAM, ROM, read-only compact discs (CD-ROM), recordable compact discs (CD-R), rewritable compact discs (CD-RW), read-only digital versatile discs (e.g., DVD-ROM, dual-layer DVD-ROM), a variety of recordable/rewritable DVDs (e.g., DVD-RAM, DVD-RW, DVD+RW, etc.), flash memory (e.g., SD cards, mini-SD cards, micro-SD cards, etc.), magnetic and/or solid state hard drives, read-only and recordable Blu-Ray® discs, ultra density optical discs, any other optical or magnetic media, and floppy disks.
- CD-ROM compact discs
- CD-R recordable compact discs
- the computer-readable media can store a computer program that is executable by at least one processing unit and includes sets of instructions for performing various operations.
- Examples of computer programs or computer code include machine code, such as is produced by a compiler, and files including higher-level code that are executed by a computer, an electronic component, or a microprocessor using an interpreter.
- ASICs application specific integrated circuits
- FPGAs field programmable gate arrays
- integrated circuits execute instructions that are stored on the circuit itself.
- the terms “computer”, “server”, “processor”, and “memory” all refer to electronic or other technological devices. These terms exclude people or groups of people.
- display or displaying means displaying on an electronic device.
- computer readable medium and “computer readable media” are entirely restricted to tangible, physical objects that store information in a form that is readable by a computer. These terms exclude any wireless signals, wired download signals, and any other ephemeral signals.
- implementations of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- a computer can interact with a user by sending documents to and receiving documents from a device that is used
- Configurations of the subject matter described in this specification can be implemented in a computing system that includes a back end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back end, middleware, or front end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network.
- Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- LAN local area network
- WAN wide area network
- inter-network e.g., the Internet
- peer-to-peer networks e.g., ad hoc peer-to-peer networks.
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- a server transmits data (e.g., an HTML page) to a client device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device).
- client device e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device.
- Data generated at the client device e.g., a result of the user interaction
- any specific order or hierarchy of steps in the processes disclosed is an illustration of exemplary approaches. Based upon design preferences, it is understood that the specific order or hierarchy of steps in the processes may be rearranged, or that all illustrated steps be performed. Some of the steps may be performed simultaneously. For example, in certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the configurations described above should not be understood as requiring such separation in all configurations, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
- a phrase such as an “aspect” does not imply that such aspect is essential to the subject technology or that such aspect applies to all configurations of the subject technology.
- a disclosure relating to an aspect may apply to all configurations, or one or more configurations.
- a phrase such as an aspect may refer to one or more aspects and vice versa.
- a phrase such as a “configuration” does not imply that such configuration is essential to the subject technology or that such configuration applies to all configurations of the subject technology.
- a disclosure relating to a configuration may apply to all configurations, or one or more configurations.
- a phrase such as a configuration may refer to one or more configurations and vice versa.
Abstract
Description
Claims (18)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/187,459 US8775556B1 (en) | 2011-07-20 | 2011-07-20 | Automated segmentation and processing of web site traffic data over a rolling window of time |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/187,459 US8775556B1 (en) | 2011-07-20 | 2011-07-20 | Automated segmentation and processing of web site traffic data over a rolling window of time |
Publications (1)
Publication Number | Publication Date |
---|---|
US8775556B1 true US8775556B1 (en) | 2014-07-08 |
Family
ID=51031937
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/187,459 Expired - Fee Related US8775556B1 (en) | 2011-07-20 | 2011-07-20 | Automated segmentation and processing of web site traffic data over a rolling window of time |
Country Status (1)
Country | Link |
---|---|
US (1) | US8775556B1 (en) |
Cited By (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20140059200A1 (en) * | 2012-08-21 | 2014-02-27 | Cisco Technology, Inc. | Flow de-duplication for network monitoring |
US20140214752A1 (en) * | 2013-01-31 | 2014-07-31 | Facebook, Inc. | Data stream splitting for low-latency data access |
US20150207709A1 (en) * | 2014-01-21 | 2015-07-23 | Oracle International Corporation | Logging incident manager |
US9100205B1 (en) * | 2011-07-20 | 2015-08-04 | Google Inc. | System for validating site configuration based on real-time analytics data |
US20150347439A1 (en) * | 2014-05-28 | 2015-12-03 | Yahoo! Inc. | Incremental data processing |
CN105224552A (en) * | 2014-06-10 | 2016-01-06 | 腾讯科技（北京）有限公司 | The disposal route of the network information, device and system |
US20160378630A1 (en) * | 2015-06-25 | 2016-12-29 | Dell Products L.P. | Port monitoring system |
US20170142143A1 (en) * | 2013-12-19 | 2017-05-18 | Splunk Inc. | Identifying notable events based on execution of correlation searches |
CN107193839A (en) * | 2016-03-15 | 2017-09-22 | 阿里巴巴集团控股有限公司 | Data aggregation method and device |
US20180107706A1 (en) * | 2016-10-17 | 2018-04-19 | Amazon Technologies, Inc. | Determining the state of data in database applications |
US10581957B2 (en) * | 2013-01-31 | 2020-03-03 | Facebook, Inc. | Multi-level data staging for low latency data access |
US10732928B1 (en) * | 2014-11-03 | 2020-08-04 | Google Llc | Data flow windowing and triggering |
US10929497B2 (en) * | 2013-08-23 | 2021-02-23 | Huawei Device Co., Ltd. | Replacing a web page while maintaining a communication link |
US11036610B2 (en) * | 2019-05-31 | 2021-06-15 | Apple Inc. | Logging techniques for third party application data |
US20220232032A1 (en) * | 2021-01-16 | 2022-07-21 | Vmware, Inc. | Performing cybersecurity operations based on impact scores of computing events over a rolling time interval |
Citations (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020042821A1 (en) * | 1999-10-04 | 2002-04-11 | Quantified Systems, Inc. | System and method for monitoring and analyzing internet traffic |
US6460067B1 (en) * | 1999-06-07 | 2002-10-01 | Sun Microsystems, Inc. | Using time stamps to improve efficiency in marking fields within objects |
-
2011
- 2011-07-20 US US13/187,459 patent/US8775556B1/en not_active Expired - Fee Related
Patent Citations (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6460067B1 (en) * | 1999-06-07 | 2002-10-01 | Sun Microsystems, Inc. | Using time stamps to improve efficiency in marking fields within objects |
US20020042821A1 (en) * | 1999-10-04 | 2002-04-11 | Quantified Systems, Inc. | System and method for monitoring and analyzing internet traffic |
Non-Patent Citations (15)
Title |
---|
"Adobe SiteCatalyst-Actionable Web Analytics," Online Analytics-Web Analytics-SiteCatalyst-Online Optimization by Omniture, http://www.omniture.com/en/products/online-analytics/sitecatalyst. |
"Features Overview," Features Overview-Woopra, http://www.woopra.com/features/. |
"Interaction Manager Overview," Toovio-Real-Time Marketing, Simplified, http://www.toovio.com/Interaction-Manager-Overview. |
"Real Time Web Analytics," Web Analytics in Real Time-Clicky, http://getclicky.com/. |
"Real-Time Event Tracking. Measure Actions, Not Page Views." Mixpanel-Real-Time Web Analytics, Funnel Analysis, http://mixpanel.com/. |
"The Web Doesn't Wait-Neither Should You," Chartbeat-Real-Time Website Analytics and Uptime Monitoring, http://chartbeat.com/. |
"Your Dots, Connected," Webtrends, Analytics, http://www.webtrends.com/Products/Analytics. |
"Adobe SiteCatalyst—Actionable Web Analytics," Online Analytics—Web Analytics—SiteCatalyst—Online Optimization by Omniture, http://www.omniture.com/en/products/online—analytics/sitecatalyst. |
"Features Overview," Features Overview—Woopra, http://www.woopra.com/features/. |
"Interaction Manager Overview," Toovio—Real-Time Marketing, Simplified, http://www.toovio.com/Interaction-Manager-Overview. |
"Real Time Web Analytics," Web Analytics in Real Time—Clicky, http://getclicky.com/. |
"Real-Time Event Tracking. Measure Actions, Not Page Views." Mixpanel—Real-Time Web Analytics, Funnel Analysis, http://mixpanel.com/. |
"The Web Doesn't Wait—Neither Should You," Chartbeat—Real-Time Website Analytics and Uptime Monitoring, http://chartbeat.com/. |
A. Himel, "Building Realtime Insights," Building Realtime Insights-Facebook, Mar. 15, 2011, https://www.facebook.com/note.php?note-id=10150103900258920. |
A. Himel, "Building Realtime Insights," Building Realtime Insights—Facebook, Mar. 15, 2011, https://www.facebook.com/note.php?note—id=10150103900258920. |
Cited By (30)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9100205B1 (en) * | 2011-07-20 | 2015-08-04 | Google Inc. | System for validating site configuration based on real-time analytics data |
US9628355B1 (en) | 2011-07-20 | 2017-04-18 | Google Inc. | System for validating site configuration based on real-time analytics data |
US9548908B2 (en) * | 2012-08-21 | 2017-01-17 | Cisco Technology, Inc. | Flow de-duplication for network monitoring |
US20140059200A1 (en) * | 2012-08-21 | 2014-02-27 | Cisco Technology, Inc. | Flow de-duplication for network monitoring |
US20140214752A1 (en) * | 2013-01-31 | 2014-07-31 | Facebook, Inc. | Data stream splitting for low-latency data access |
US10581957B2 (en) * | 2013-01-31 | 2020-03-03 | Facebook, Inc. | Multi-level data staging for low latency data access |
US10223431B2 (en) * | 2013-01-31 | 2019-03-05 | Facebook, Inc. | Data stream splitting for low-latency data access |
US10929497B2 (en) * | 2013-08-23 | 2021-02-23 | Huawei Device Co., Ltd. | Replacing a web page while maintaining a communication link |
US20170142143A1 (en) * | 2013-12-19 | 2017-05-18 | Splunk Inc. | Identifying notable events based on execution of correlation searches |
US11196756B2 (en) * | 2013-12-19 | 2021-12-07 | Splunk Inc. | Identifying notable events based on execution of correlation searches |
US20150207709A1 (en) * | 2014-01-21 | 2015-07-23 | Oracle International Corporation | Logging incident manager |
US9742624B2 (en) * | 2014-01-21 | 2017-08-22 | Oracle International Corporation | Logging incident manager |
US10013422B2 (en) * | 2014-05-28 | 2018-07-03 | Oath Inc. | Incremental data processing |
US10409774B2 (en) * | 2014-05-28 | 2019-09-10 | Oath Inc. | Incremental data processing |
US20150347439A1 (en) * | 2014-05-28 | 2015-12-03 | Yahoo! Inc. | Incremental data processing |
US11636065B2 (en) * | 2014-05-28 | 2023-04-25 | Yahoo Assets Llc | Incremental data processing |
CN105224552A (en) * | 2014-06-10 | 2016-01-06 | 腾讯科技（北京）有限公司 | The disposal route of the network information, device and system |
CN105224552B (en) * | 2014-06-10 | 2020-02-11 | 腾讯科技（北京）有限公司 | Network information processing method, device and system |
US10732928B1 (en) * | 2014-11-03 | 2020-08-04 | Google Llc | Data flow windowing and triggering |
US20160378630A1 (en) * | 2015-06-25 | 2016-12-29 | Dell Products L.P. | Port monitoring system |
CN107193839A (en) * | 2016-03-15 | 2017-09-22 | 阿里巴巴集团控股有限公司 | Data aggregation method and device |
EP3432158A4 (en) * | 2016-03-15 | 2019-01-23 | Alibaba Group Holding Limited | Data aggregation method and device |
TWI748989B (en) * | 2016-03-15 | 2021-12-11 | 香港商阿里巴巴集團服務有限公司 | Data aggregation method and device |
US20180107706A1 (en) * | 2016-10-17 | 2018-04-19 | Amazon Technologies, Inc. | Determining the state of data in database applications |
US10635660B2 (en) * | 2016-10-17 | 2020-04-28 | Amazon Technologies, Inc. | Determining the state of data in database applications |
US11036610B2 (en) * | 2019-05-31 | 2021-06-15 | Apple Inc. | Logging techniques for third party application data |
US11294785B2 (en) | 2019-05-31 | 2022-04-05 | Apple Inc. | Visualization techniques for third party application data |
US11720467B2 (en) | 2019-05-31 | 2023-08-08 | Apple Inc. | Logging techniques for third party application data |
US20220232032A1 (en) * | 2021-01-16 | 2022-07-21 | Vmware, Inc. | Performing cybersecurity operations based on impact scores of computing events over a rolling time interval |
US11689545B2 (en) * | 2021-01-16 | 2023-06-27 | Vmware, Inc. | Performing cybersecurity operations based on impact scores of computing events over a rolling time interval |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8606825B1 (en) | Query response streams based on dynamic query library | |
US8775556B1 (en) | Automated segmentation and processing of web site traffic data over a rolling window of time | |
US8880996B1 (en) | System for reconfiguring a web site or web page based on real-time analytics data | |
US8775941B1 (en) | System for monitoring and reporting deviations of real-time analytics data from expected analytics data | |
US9628355B1 (en) | System for validating site configuration based on real-time analytics data | |
US8869036B1 (en) | System for troubleshooting site configuration based on real-time analytics data | |
US8782166B1 (en) | System for generating a site pathing report based on real-time analytics data | |
US11176146B2 (en) | Determining indications of unique values for fields | |
US20210342337A1 (en) | Dynamically monitoring an information technology networked entity | |
US10121169B2 (en) | Table level distributed database system for big data storage and query | |
CN107077691B (en) | Age-based policy for determining database cache hits | |
US9235628B2 (en) | Generating and using temporal metadata partitions | |
RU2516762C2 (en) | Providing user with customised information based on trend identification | |
US9305053B2 (en) | Dynamic sessionization of analytics data | |
US8775611B1 (en) | System for displaying a web page with real time analytics data overlay | |
US8782162B1 (en) | System for merging and comparing real-time analytics data with conventional analytics data | |
US20090248711A1 (en) | System and method for optimizing the storage of data | |
JP2014528126A (en) | Distributing multi-source push notifications to multiple targets | |
US11449509B2 (en) | Workflow driven database partitioning | |
US20180248977A1 (en) | Selective distribution of messages in a publish-subscribe system | |
US20180204248A1 (en) | Web page viewership prediction | |
US8606907B1 (en) | Multi-tiered system for receiving and reporting web site traffic data | |
US8560685B1 (en) | Probabilistic data storage owner election and replication protocol | |
RU2609078C2 (en) | Control system of indexing of partner advertisements | |
US10565611B2 (en) | Controlling real-time execution of internet communication campaigns with parameterizable flow control structures |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:MATTHEWS, JACOB BURTON;DESHPANDE, MAYUR VENKTESH;MARIFET, KASEM;AND OTHERS;SIGNING DATES FROM 20110824 TO 20110908;REEL/FRAME:026930/0076 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044277/0001Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551)Year of fee payment: 4 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20220708 |
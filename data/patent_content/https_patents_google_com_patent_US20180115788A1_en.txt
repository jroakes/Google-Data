US20180115788A1 - Timeline-Video Relationship Processing for Alert Events - Google Patents
Timeline-Video Relationship Processing for Alert Events Download PDFInfo
- Publication number
- US20180115788A1 US20180115788A1 US15/335,396 US201615335396A US2018115788A1 US 20180115788 A1 US20180115788 A1 US 20180115788A1 US 201615335396 A US201615335396 A US 201615335396A US 2018115788 A1 US2018115788 A1 US 2018115788A1
- Authority
- US
- United States
- Prior art keywords
- video
- frames
- implementations
- event
- devices
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N7/00—Television systems
- H04N7/18—Closed-circuit television [CCTV] systems, i.e. systems in which the video signal is not broadcast
- H04N7/183—Closed-circuit television [CCTV] systems, i.e. systems in which the video signal is not broadcast for receiving images from a single remote source
- H04N7/185—Closed-circuit television [CCTV] systems, i.e. systems in which the video signal is not broadcast for receiving images from a single remote source from a mobile camera, e.g. for remote control
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/50—Context or environment of the image
- G06V20/52—Surveillance or monitoring of activities, e.g. for recognising suspicious objects
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/85—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using pre-processing or post-processing specially adapted for video compression
-
- G06K9/00718—
-
- G06K9/00771—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/40—Scenes; Scene-specific elements in video content
- G06V20/41—Higher-level, semantic clustering, classification or understanding of video scenes, e.g. detection, labelling or Markovian modelling of sport events or news items
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N7/00—Television systems
- H04N7/18—Closed-circuit television [CCTV] systems, i.e. systems in which the video signal is not broadcast
- H04N7/183—Closed-circuit television [CCTV] systems, i.e. systems in which the video signal is not broadcast for receiving images from a single remote source
-
- G06K2009/00738—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/40—Scenes; Scene-specific elements in video content
- G06V20/44—Event detection
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/17—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object
- H04N19/172—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object the region being a picture, frame or field
Definitions
- the disclosed implementations relate generally to video monitoring, including, but not limited, to monitoring and reviewing video feeds, events, and corresponding timelines.
- Such methods optionally complement or replace conventional methods for presenting live and/or saved video from video streams.
- a method includes, at an electronic device having a display, one or more processors, and memory storing one or more programs for execution by the one or more processors: displaying, via the display of the electronic device, a user interface having a first region and a second region; receiving, and displaying in the first region of the user interface, a live video stream of a physical environment captured by a video camera located remotely from the electronic device, wherein at least some of the live video stream is recorded at a remote server; displaying, in the second region of the user interface, a timeline corresponding to a timespan for a first portion of a duration during which the live video stream may have been recorded; in response to receiving a user interaction indicating a desire to move the timespan to a second portion of the duration during which the live video stream may have been recorded, transitioning the displayed timeline to a new timeline that corresponds to the timespan for the second portion, and while transitioning the displayed timeline to the new timeline, displaying, in the first region of the user interface, a sub
- an electronic device includes a display, one or more processors, and memory storing one or more programs to be executed by the one or more processors.
- the one or more programs include instructions for: displaying, via the display of the electronic device, a user interface having a first region and a second region; receiving, and displaying in the first region of the user interface, a live video stream of a physical environment captured by a video camera located remotely from the electronic device, wherein at least some of the live video stream is recorded at a remote server; displaying, in the second region of the user interface, a timeline corresponding to a timespan for a first portion of a duration during which the live video stream may have been recorded; in response to receiving a user interaction indicating a desire to move the timespan to a second portion of the duration during which the live video stream may have been recorded, transitioning the displayed timeline to a new timeline that corresponds to the timespan for the second portion, and while transitioning the displayed timeline to the new timeline, displaying, in the first region of the user interface
- a non-transitory computer readable storage medium stores one or more programs.
- the one or more programs include instructions, which, when executed by an electronic device with a display and one or more processors, cause the electronic device to perform operations including: displaying, via the display of the electronic device, a user interface having a first region and a second region; receiving, and displaying in the first region of the user interface, a live video stream of a physical environment captured by a video camera located remotely from the electronic device, wherein at least some of the live video stream is recorded at a remote server; displaying, in the second region of the user interface, a timeline corresponding to a timespan for a first portion of a duration during which the live video stream may have been recorded; in response to receiving a user interaction indicating a desire to move the timespan to a second portion of the duration during which the live video stream may have been recorded, transitioning the displayed timeline to a new timeline that corresponds to the timespan for the second portion, and while transitioning the displayed timeline to the new timeline
- a method includes, at a server system: receiving a video stream from a remote video camera, wherein the video stream comprises a plurality of video frames; selecting a plurality of non-contiguous frames from the video stream, the plurality of non-contiguous frames being associated with a predetermined time interval; encoding the plurality of non-contiguous frames as a compressed video segment associated with the time interval; receiving a request from an application running on a client device to review video from the remote video camera for the time interval; and in response to the request, transmitting the video segment to the client device for viewing in the application.
- a computer system includes one or more processors and memory storing one or more programs to be executed by the one or more processors.
- the one or more programs include instructions for: receiving a video stream from a remote video camera, wherein the video stream comprises a plurality of video frames; selecting a plurality of non-contiguous frames from the video stream, the plurality of non-contiguous frames being associated with a predetermined time interval; encoding the plurality of non-contiguous frames as a compressed video segment associated with the time interval; receiving a request from an application running on a client device to review video from the remote video camera for the time interval; and in response to the request, transmitting the video segment to the client device for viewing in the application.
- a non-transitory computer readable storage medium stores one or more programs.
- the one or more programs include instructions, which, when executed by a computer system with one or more processors, cause the computer system to perform operations including: receiving a video stream from a remote video camera, wherein the video stream comprises a plurality of video frames; selecting a plurality of non-contiguous frames from the video stream, the plurality of non-contiguous frames being associated with a predetermined time interval; encoding the plurality of non-contiguous frames as a compressed video segment associated with the time interval; receiving a request from an application running on a client device to review video from the remote video camera for the time interval; and in response to the request, transmitting the video segment to the client device for viewing in the application.
- computing systems are provided with more efficient methods for presenting live and/or saved video and related information, thereby increasing the effectiveness, efficiency, and user satisfaction with such systems.
- Such methods may complement or replace conventional methods for presenting live and/or saved video.
- FIG. 1 is an example smart home environment, in accordance with some implementations.
- FIG. 2 is a block diagram illustrating an example network architecture that includes a smart home network, in accordance with some implementations.
- FIG. 3 illustrates a network-level view of an extensible devices and services platform with which the smart home environment of FIG. 1 is integrated, in accordance with some implementations.
- FIG. 4 illustrates an abstracted functional view of the extensible devices and services platform of FIG. 3 , with reference to a processing engine as well as devices of the smart home environment, in accordance with some implementations.
- FIG. 5A is a representative operating environment in which a hub device server system interacts with client devices and hub devices communicatively coupled to local smart devices, in accordance with some implementations.
- FIG. 5B is a representative operating environment in which a video server system interacts with client devices and hub devices communicatively coupled to local smart devices, in accordance with some implementations.
- FIG. 6 is a block diagram illustrating a representative hub device, in accordance with some implementations.
- FIG. 7A is a block diagram illustrating a representative hub device server system, in accordance with some implementations.
- FIGS. 7B-7C are block diagrams illustrating a representative video server system, in accordance with some implementations.
- FIG. 7D is a block diagram illustrating a representative client interface server, in accordance with some implementations.
- FIG. 7E is a block diagram illustrating a representative camera interface server, in accordance with some implementations.
- FIG. 8A-8B are block diagrams illustrating a representative client device associated with a user account, in accordance with some implementations.
- FIG. 9A is a block diagram illustrating a representative smart device, in accordance with some implementations.
- FIG. 9B is a block diagram illustrating a representative video capturing device (e.g., a camera) in accordance with some implementations.
- a representative video capturing device e.g., a camera
- FIG. 10 is a block diagram illustrating a representative smart home provider server system, in accordance with some implementations.
- FIG. 11A illustrates a representative system architecture, in accordance with some implementations.
- FIG. 11B illustrates a representative processing pipeline, in accordance with some implementations.
- FIGS. 12A-12M illustrate example user interfaces on a client device for presenting a timeline-video relationship in accordance with some implementations.
- FIG. 13 illustrates a flowchart diagram of a method for presenting a timeline-video relationship, in accordance with some implementations.
- FIGS. 14A-14L illustrate example screenshots of user interfaces on a client device in accordance with some implementations.
- FIG. 15 is a block diagram illustrating an example operating environment in which a server system interacts with client devices and smart devices, in accordance with some implementations.
- FIGS. 16A-16B illustrate a flow diagram of an example process for generating extracted-frames video in accordance with some implementations.
- FIG. 17 illustrates a flow diagram of an example process for displaying extracted-frames video in accordance with some implementations.
- FIGS. 18A-18D illustrate diagrams showing an example frame extraction arrangement for a video feed segment and a frames arrangement in the corresponding extracted-frames video, in accordance with some implementations.
- FIG. 19 is a flow diagram illustrating a method of generating and transmitting video for viewing at a client device, in accordance with some implementations.
- FIG. 1 is an example smart home environment 100 in accordance with some implementations.
- Smart home environment 100 includes a structure 150 (e.g., a house, office building, garage, or mobile home) with various integrated devices. It will be appreciated that devices may also be integrated into a smart home environment 100 that does not include an entire structure 150 , such as an apartment, condominium, or office space. Further, the smart home environment 100 may control and/or be coupled to devices outside of the actual structure 150 . Indeed, one or more devices in the smart home environment 100 need not be physically within the structure 150 . For example, a device controlling a pool heater 114 or irrigation system 116 may be located outside of the structure 150 .
- a pool heater 114 or irrigation system 116 may be located outside of the structure 150 .
- the depicted structure 150 includes a plurality of rooms 152 , separated at least partly from each other via walls 154 .
- the walls 154 may include interior walls or exterior walls.
- Each room may further include a floor 156 and a ceiling 158 .
- Devices may be mounted on, integrated with and/or supported by a wall 154 , floor 156 or ceiling 158 .
- the integrated devices of the smart home environment 100 include intelligent, multi-sensing, network-connected devices that integrate seamlessly with each other in a smart home network (e.g., 202 FIG. 2 ) and/or with a central server or a cloud-computing system to provide a variety of useful smart home functions.
- a smart home network e.g., 202 FIG. 2
- a central server or a cloud-computing system to provide a variety of useful smart home functions.
- the smart home environment 100 may include one or more intelligent, multi-sensing, network-connected thermostats 102 (hereinafter referred to as “smart thermostats 102 ”), one or more intelligent, network-connected, multi-sensing hazard detection units 104 (hereinafter referred to as “smart hazard detectors 104 ”), one or more intelligent, multi-sensing, network-connected entryway interface devices 106 and 120 (hereinafter referred to as “smart doorbells 106 ” and “smart door locks 120 ”), and one or more intelligent, multi-sensing, network-connected alarm systems 122 (hereinafter referred to as “smart alarm systems 122 ”).
- the one or more smart thermostats 102 detect ambient climate characteristics (e.g., temperature and/or humidity) and control a HVAC system 103 accordingly.
- a respective smart thermostat 102 includes an ambient temperature sensor.
- the one or more smart hazard detectors 104 may include thermal radiation sensors directed at respective heat sources (e.g., a stove, oven, other appliances, a fireplace, etc.).
- a smart hazard detector 104 in a kitchen 153 includes a thermal radiation sensor directed at a stove/oven 112 .
- a thermal radiation sensor may determine the temperature of the respective heat source (or a portion thereof) at which it is directed and may provide corresponding blackbody radiation data as output.
- the smart doorbell 106 and/or the smart door lock 120 may detect a person's approach to or departure from a location (e.g., an outer door), control doorbell/door locking functionality (e.g., receive user inputs from a portable electronic device 166 - 1 to actuate bolt of the smart door lock 120 ), announce a person's approach or departure via audio or visual means, and/or control settings on a security system (e.g., to activate or deactivate the security system when occupants go and come).
- a location e.g., an outer door
- control doorbell/door locking functionality e.g., receive user inputs from a portable electronic device 166 - 1 to actuate bolt of the smart door lock 120
- announce a person's approach or departure via audio or visual means e.g., to activate or deactivate the security system when occupants go and come.
- the smart alarm system 122 may detect the presence of an individual within close proximity (e.g., using built-in IR sensors), sound an alarm (e.g., through a built-in speaker, or by sending commands to one or more external speakers), and send notifications to entities or users within/outside of the smart home network 100 .
- the smart alarm system 122 also includes one or more input devices or sensors (e.g., keypad, biometric scanner, NFC transceiver, microphone) for verifying the identity of a user, and one or more output devices (e.g., display, speaker).
- the smart alarm system 122 may also be set to an “armed” mode, such that detection of a trigger condition or event causes the alarm to be sounded unless a disarming action is performed.
- the smart home environment 100 includes one or more intelligent, multi-sensing, network-connected wall switches 108 (hereinafter referred to as “smart wall switches 108 ”), along with one or more intelligent, multi-sensing, network-connected wall plug interfaces 110 (hereinafter referred to as “smart wall plugs 110 ”).
- the smart wall switches 108 may detect ambient lighting conditions, detect room-occupancy states, and control a power and/or dim state of one or more lights. In some instances, smart wall switches 108 may also control a power state or speed of a fan, such as a ceiling fan.
- the smart wall plugs 110 may detect occupancy of a room or enclosure and control supply of power to one or more wall plugs (e.g., such that power is not supplied to the plug if nobody is at home).
- the smart home environment 100 of FIG. 1 includes a plurality of intelligent, multi-sensing, network-connected appliances 112 (hereinafter referred to as “smart appliances 112 ”), such as refrigerators, stoves, ovens, televisions, washers, dryers, lights, stereos, intercom systems, garage-door openers, floor fans, ceiling fans, wall air conditioners, pool heaters, irrigation systems, security systems, space heaters, window AC units, motorized duct vents, and so forth.
- an appliance may announce itself to the smart home network, such as by indicating what type of appliance it is, and it may automatically integrate with the controls of the smart home.
- the smart home may also include a variety of non-communicating legacy appliances 140 , such as old conventional washer/dryers, refrigerators, and the like, which may be controlled by smart wall plugs 110 .
- the smart home environment 100 may further include a variety of partially communicating legacy appliances 142 , such as infrared (“IR”) controlled wall air conditioners or other IR-controlled devices, which may be controlled by IR signals provided by the smart hazard detectors 104 or the smart wall switches 108 .
- IR infrared
- the smart home environment 100 includes one or more network-connected cameras 118 that are configured to provide video monitoring and security in the smart home environment 100 .
- cameras 118 also capture video when other conditions or hazards are detected, in order to provide visual monitoring of the smart home environment 100 when those conditions or hazards occur.
- the cameras 118 may be used to determine occupancy of the structure 150 and/or particular rooms 152 in the structure 150 , and thus may act as occupancy sensors.
- video captured by the cameras 118 may be processed to identify the presence of an occupant in the structure 150 (e.g., in a particular room 152 ). Specific individuals may be identified based, for example, on their appearance (e.g., height, face) and/or movement (e.g., their walk/gait).
- cameras 118 may additionally include one or more sensors (e.g., IR sensors, motion detectors), input devices (e.g., microphone for capturing audio), and output devices (e.g., speaker for outputting audio).
- the smart home environment 100 may additionally or alternatively include one or more other occupancy sensors (e.g., the smart doorbell 106 , smart door locks 120 , touch screens, IR sensors, microphones, ambient light sensors, motion detectors, smart nightlights 170 , etc.).
- the smart home environment 100 includes radio-frequency identification (RFID) readers (e.g., in each room 152 or a portion thereof) that determine occupancy based on RFID tags located on or embedded in occupants.
- RFID readers may be integrated into the smart hazard detectors 104 .
- the smart home environment 100 may include one or more sound and/or vibration sensors for detecting abnormal sounds and/or vibrations. These sensors may be integrated with any of the devices described above.
- the sound sensors detect sound above a decibel threshold.
- the vibration sensors detect vibration above a threshold directed at a particular area (e.g., vibration on a particular window when a force is applied to break the window).
- Conditions detected by the devices described above may be referred to collectively as alert events.
- the smart home environment 100 may also include communication with devices outside of the physical home but within a proximate geographical range of the home.
- the smart home environment 100 may include a pool heater monitor 114 that communicates a current pool temperature to other devices within the smart home environment 100 and/or receives commands for controlling the pool temperature.
- the smart home environment 100 may include an irrigation monitor 116 that communicates information regarding irrigation systems within the smart home environment 100 and/or receives control information for controlling such irrigation systems.
- one or more of the smart home devices of FIG. 1 may further allow a user to interact with the device even if the user is not proximate to the device.
- a user may communicate with a device using a computer (e.g., a desktop computer, laptop computer, or tablet) or other portable electronic device 166 (e.g., a mobile phone, such as a smart phone).
- a webpage or application may be configured to receive communications from the user and control the device based on the communications and/or to present information about the device's operation to the user.
- the user may view a current set point temperature for a device (e.g., a stove) and adjust it using a computer.
- the user may be in the structure during this remote communication or outside the structure.
- users may control smart devices in the smart home environment 100 using a network-connected computer or portable electronic device 166 .
- some or all of the occupants e.g., individuals who live in the home
- Such registration may be made at a central server to authenticate the occupant and/or the device as being associated with the home and to give permission to the occupant to use the device to control the smart devices in the home.
- An occupant may use their registered device 166 to remotely control the smart devices of the home, such as when the occupant is at work or on vacation.
- the occupant may also use their registered device to control the smart devices when the occupant is actually located inside the home, such as when the occupant is sitting on a couch inside the home.
- the smart home environment 100 may make inferences about which individuals live in the home and are therefore occupants and which devices 166 are associated with those individuals. As such, the smart home environment may “learn” who is an occupant and permit the devices 166 associated with those individuals to control the smart devices of the home.
- devices 102 , 104 , 106 , 108 , 110 , 112 , 114 , 116 , 118 , 120 , and/or 122 are capable of data communications and information sharing with other smart devices, a central server or cloud-computing system, and/or other devices that are network-connected.
- Data communications may be carried out using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) and/or any of a variety of custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document.
- custom or standard wireless protocols e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.
- any of a variety of custom or standard wired protocols e.g., Ethernet, HomePlug, etc.
- the smart devices serve as wireless or wired repeaters.
- a first one of the smart devices communicates with a second one of the smart devices via a wireless router.
- the smart devices may further communicate with each other via a connection (e.g., network interface 160 ) to a network, such as the Internet 162 .
- a network such as the Internet 162 .
- the smart devices may communicate with a smart home provider server system 164 (also called a central server system and/or a cloud-computing system herein).
- the smart home provider server system 164 may be associated with a manufacturer, support entity, or service provider associated with the smart device(s).
- a user is able to contact customer support using a smart device itself rather than needing to use other communication means, such as a telephone or Internet-connected computer.
- software updates are automatically sent from the smart home provider server system 164 to smart devices (e.g., when available, when purchased, or at routine intervals).
- the network interface 160 includes a conventional network device (e.g., a router), and the smart home environment 100 of FIG. 1 includes a hub device 180 that is communicatively coupled to the network(s) 162 directly or via the network interface 160 .
- the hub device 180 is further communicatively coupled to one or more of the above intelligent, multi-sensing, network-connected devices (e.g., smart devices of the smart home environment 100 ).
- Each of these smart devices optionally communicates with the hub device 180 using one or more radio communication networks available at least in the smart home environment 100 (e.g., ZigBee, Z-Wave, Insteon, Bluetooth, Wi-Fi and other radio communication networks).
- the hub device 180 and devices coupled with/to the hub device can be controlled and/or interacted with via an application running on a smart phone, household controller, laptop, tablet computer, game console or similar electronic device.
- a user of such controller application can view status of the hub device or coupled smart devices, configure the hub device to interoperate with smart devices newly introduced to the home network, commission new smart devices, and adjust or view settings of connected smart devices, etc.
- the hub device extends capabilities of low capability smart device to match capabilities of the highly capable smart devices of the same type, integrates functionality of multiple different device types—even across different communication protocols, and is configured to streamline adding of new devices and commissioning of the hub device.
- FIG. 2 is a block diagram illustrating an example network architecture 200 that includes a smart home network 202 in accordance with some implementations.
- the smart devices 204 in the smart home environment 100 e.g., devices 102 , 104 , 106 , 108 , 110 , 112 , 114 , 116 , 118 , 120 , and/or 122
- the hub device 180 combine with the hub device 180 to create a mesh network in smart home network 202 .
- one or more smart devices 204 in the smart home network 202 operate as a smart home controller.
- hub device 180 operates as the smart home controller.
- a smart home controller has more computing power than other smart devices.
- a smart home controller processes inputs (e.g., from smart devices 204 , electronic device 166 , and/or smart home provider server system 164 ) and sends commands (e.g., to smart devices 204 in the smart home network 202 ) to control operation of the smart home environment 100 .
- some of the smart devices 204 in the smart home network 202 e.g., in the mesh network
- are “spokesman” nodes e.g., 204 - 1
- others are “low-powered” nodes (e.g., 204 - 9 ).
- Some of the smart devices in the smart home environment 100 are battery powered, while others have a regular and reliable power source, such as by connecting to wiring (e.g., to 120V line voltage wires) behind the walls 154 of the smart home environment.
- the smart devices that have a regular and reliable power source are referred to as “spokesman” nodes. These nodes are typically equipped with the capability of using a wireless protocol to facilitate bidirectional communication with a variety of other devices in the smart home environment 100 , as well as with the smart home provider server system 164 .
- one or more “spokesman” nodes operate as a smart home controller.
- the devices that are battery powered are the “low-power” nodes. These nodes tend to be smaller than spokesman nodes and typically only communicate using wireless protocols that require very little power, such as Zigbee, 6LoWPAN, etc.
- some low-power nodes are incapable of bidirectional communication. These low-power nodes send messages, but they are unable to “listen”. Thus, other devices in the smart home environment 100 , such as the spokesman nodes, cannot send information to these low-power nodes.
- some low-power nodes are capable of only a limited bidirectional communication. For example, other devices are able to communicate with the low-power nodes only during a certain time period.
- the smart devices serve as low-power and spokesman nodes to create a mesh network in the smart home environment 100 .
- individual low-power nodes in the smart home environment regularly send out messages regarding what they are sensing, and the other low-powered nodes in the smart home environment—in addition to sending out their own messages—forward the messages, thereby causing the messages to travel from node to node (i.e., device to device) throughout the smart home network 202 .
- the spokesman nodes in the smart home network 202 which are able to communicate using a relatively high-power communication protocol, such as IEEE 802.11, are able to switch to a relatively low-power communication protocol, such as IEEE 802.15.4, to receive these messages, translate the messages to other communication protocols, and send the translated messages to other spokesman nodes and/or the smart home provider server system 164 (using, e.g., the relatively high-power communication protocol).
- a relatively high-power communication protocol such as IEEE 802.11
- a relatively low-power communication protocol such as IEEE 802.15.4
- the mesh network enables the smart home provider server system 164 to regularly receive data from most or all of the smart devices in the home, make inferences based on the data, facilitate state synchronization across devices within and outside of the smart home network 202 , and send commands to one or more of the smart devices to perform tasks in the smart home environment.
- the spokesman nodes and some of the low-powered nodes are capable of “listening.” Accordingly, users, other devices, and/or the smart home provider server system 164 may communicate control commands to the low-powered nodes.
- a user may use the electronic device 166 (e.g., a smart phone) to send commands over the Internet to the smart home provider server system 164 , which then relays the commands to one or more spokesman nodes in the smart home network 202 .
- the spokesman nodes may use a low-power protocol to communicate the commands to the low-power nodes throughout the smart home network 202 , as well as to other spokesman nodes that did not receive the commands directly from the smart home provider server system 164 .
- a smart nightlight 170 ( FIG. 1 ), which is an example of a smart device 204 , is a low-power node.
- the smart nightlight 170 houses an occupancy sensor, such as an ultrasonic or passive IR sensor, and an ambient light sensor, such as a photo resistor or a single-pixel sensor that measures light in the room.
- the smart nightlight 170 is configured to activate the light source when its ambient light sensor detects that the room is dark and when its occupancy sensor detects that someone is in the room.
- the smart nightlight 170 is simply configured to activate the light source when its ambient light sensor detects that the room is dark.
- the smart nightlight 170 includes a low-power wireless communication chip (e.g., a ZigBee chip) that regularly sends out messages regarding the occupancy of the room and the amount of light in the room, including instantaneous messages coincident with the occupancy sensor detecting the presence of a person in the room.
- these messages may be sent wirelessly (e.g., using the mesh network) from node to node (i.e., smart device to smart device) within the smart home network 202 as well as over the Internet 162 to the smart home provider server system 164 .
- low-power nodes include battery-operated versions of the smart hazard detectors 104 .
- These smart hazard detectors 104 are often located in an area without access to constant and reliable power and may include any number and type of sensors, such as smoke/fire/heat sensors (e.g., thermal radiation sensors), carbon monoxide/dioxide sensors, occupancy/motion sensors, ambient light sensors, ambient temperature sensors, humidity sensors, and the like.
- smart hazard detectors 104 may send messages that correspond to each of the respective sensors to the other devices and/or the smart home provider server system 164 , such as by using the mesh network as described above.
- spokesman nodes include smart doorbells 106 , smart thermostats 102 , smart wall switches 108 , and smart wall plugs 110 . These devices are often located near and connected to a reliable power source, and therefore may include more power-consuming components, such as one or more communication chips capable of bidirectional communication in a variety of protocols.
- the smart home environment 100 includes service robots 168 ( FIG. 1 ) that are configured to carry out, in an autonomous manner, any of a variety of household tasks.
- the smart home environment 100 of FIG. 1 includes a hub device 180 that is communicatively coupled to the network(s) 162 directly or via the network interface 160 .
- the hub device 180 is further communicatively coupled to one or more of the smart devices using a radio communication network that is available at least in the smart home environment 100 .
- Communication protocols used by the radio communication network include, but are not limited to, ZigBee, Z-Wave, Insteon, EuOcean, Thread, OSIAN, Bluetooth Low Energy and the like.
- the hub device 180 not only converts the data received from each smart device to meet the data format requirements of the network interface 160 or the network(s) 162 , but also converts information received from the network interface 160 or the network(s) 162 to meet the data format requirements of the respective communication protocol associated with a targeted smart device. In some implementations, in addition to data format conversion, the hub device 180 further processes the data received from the smart devices or information received from the network interface 160 or the network(s) 162 preliminary.
- the hub device 180 can integrate inputs from multiple sensors/connected devices (including sensors/devices of the same and/or different types), perform higher level processing on those inputs—e.g., to assess the overall environment and coordinate operation among the different sensors/devices—and/or provide instructions to the different devices based on the collection of inputs and programmed processing.
- the network interface 160 and the hub device 180 are integrated to one network device. Functionality described herein is representative of particular implementations of smart devices, control application(s) running on representative electronic device(s) (such as a smart phone), hub device(s) 180 , and server(s) coupled to hub device(s) via the Internet or other Wide Area Network.
- All or a portion of this functionality and associated operations can be performed by any elements of the described system—for example, all or a portion of the functionality described herein as being performed by an implementation of the hub device can be performed, in different system implementations, in whole or in part on the server, one or more connected smart devices and/or the control application, or different combinations thereof.
- FIG. 3 illustrates a network-level view of an extensible devices and services platform with which the smart home environment of FIG. 1 is integrated, in accordance with some implementations.
- the extensible devices and services platform 300 includes smart home provider server system 164 .
- Each of the intelligent, network-connected devices described with reference to FIG. 1 e.g., 102 , 104 , 106 , 108 , 110 , 112 , 114 , 116 and 118 , identified simply as “devices” in FIGS. 2-4 ) may communicate with the smart home provider server system 164 .
- a connection to the Internet 162 may be established either directly (for example, using 3G/4G connectivity to a wireless carrier), or through a network interface 160 (e.g., a router, switch, gateway, hub device, or an intelligent, dedicated whole-home controller node), or through any combination thereof.
- a network interface 160 e.g., a router, switch, gateway, hub device, or an intelligent, dedicated whole-home controller node
- the devices and services platform 300 communicates with and collects data from the smart devices of the smart home environment 100 .
- the devices and services platform 300 communicates with and collects data from a plurality of smart home environments across the world.
- the smart home provider server system 164 collects home data 302 from the devices of one or more smart home environments 100 , where the devices may routinely transmit home data or may transmit home data in specific instances (e.g., when a device queries the home data 302 ).
- Example collected home data 302 includes, without limitation, power consumption data, blackbody radiation data, occupancy data, HVAC settings and usage data, carbon monoxide levels data, carbon dioxide levels data, volatile organic compounds levels data, sleeping schedule data, cooking schedule data, inside and outside temperature humidity data, television viewership data, inside and outside noise level data, pressure data, video data, etc.
- the smart home provider server system 164 provides one or more services 304 to smart homes and/or third parties.
- Example services 304 include, without limitation, software updates, customer support, sensor data collection/logging, remote access, remote or distributed control, and/or use suggestions (e.g., based on collected home data 302 ) to improve performance, reduce utility cost, increase safety, etc.
- data associated with the services 304 is stored at the smart home provider server system 164 , and the smart home provider server system 164 retrieves and transmits the data at appropriate times (e.g., at regular intervals, upon receiving a request from a user, etc.).
- the extensible devices and services platform 300 includes a processing engine 306 , which may be concentrated at a single server or distributed among several different computing entities without limitation.
- the processing engine 306 includes engines configured to receive data from the devices of smart home environments 100 (e.g., via the Internet 162 and/or a network interface 160 ), to index the data, to analyze the data and/or to generate statistics based on the analysis or as part of the analysis.
- the analyzed data is stored as derived home data 308 .
- Results of the analysis or statistics may thereafter be transmitted back to the device that provided home data used to derive the results, to other devices, to a server providing a webpage to a user of the device, or to other non-smart device entities.
- usage statistics, usage statistics relative to use of other devices, usage patterns, and/or statistics summarizing sensor readings are generated by the processing engine 306 and transmitted.
- the results or statistics may be provided via the Internet 162 .
- the processing engine 306 may be configured and programmed to derive a variety of useful information from the home data 302 .
- a single server may include one or more processing engines.
- the derived home data 308 may be used at different granularities for a variety of useful purposes, ranging from explicit programmed control of the devices on a per-home, per-neighborhood, or per-region basis (for example, demand-response programs for electrical utilities), to the generation of inferential abstractions that may assist on a per-home basis (for example, an inference may be drawn that the homeowner has left for vacation and so security detection equipment may be put on heightened sensitivity), to the generation of statistics and associated inferential abstractions that may be used for government or charitable purposes.
- processing engine 306 may generate statistics about device usage across a population of devices and send the statistics to device users, service providers or other entities (e.g., entities that have requested the statistics and/or entities that have provided monetary compensation for the statistics).
- the devices and services platform 300 exposes a range of application programming interfaces (APIs) 310 to third parties, such as charities 314 , governmental entities 316 (e.g., the Food and Drug Administration or the Environmental Protection Agency), academic institutions 318 (e.g., university researchers), businesses 320 (e.g., providing device warranties or service to related equipment, targeting advertisements based on home data), utility companies 324 , and other third parties.
- the APIs 310 are coupled to and permit third-party systems to communicate with the smart home provider server system 164 , including the services 304 , the processing engine 306 , the home data 302 , and the derived home data 308 .
- the APIs 310 allow applications executed by the third parties to initiate specific data processing tasks that are executed by the smart home provider server system 164 , as well as to receive dynamic updates to the home data 302 and the derived home data 308 .
- third parties may develop programs and/or applications (e.g., web applications or mobile applications) that integrate with the smart home provider server system 164 to provide services and information to users.
- programs and applications may be, for example, designed to help users reduce energy consumption, to preemptively service faulty equipment, to prepare for high service demands, to track past service performance, etc., and/or to perform other beneficial functions or tasks.
- FIG. 4 illustrates an abstracted functional view 400 of the extensible devices and services platform 300 of FIG. 3 , with reference to a processing engine 306 as well as devices of the smart home environment, in accordance with some implementations.
- the devices may be thought of as sharing common characteristics in that each device is a data consumer 402 (DC), a data source 404 (DS), a services consumer 406 (SC), and a services source 408 (SS).
- DC data consumer 402
- DS data source 404
- SC services consumer 406
- SS services source 408
- the extensible devices and services platform 300 may also be configured to use the large amount of data that is generated by these devices.
- the extensible devices and services platform 300 may be directed to “repurpose” that data in a variety of automated, extensible, flexible, and/or scalable ways to achieve a variety of useful objectives. These objectives may be predefined or adaptively identified based on, e.g., usage patterns, device efficiency, and/or user input (e.g., requesting specific functionality).
- FIG. 4 shows processing engine 306 as including a number of processing paradigms 410 .
- processing engine 306 includes a managed services paradigm 410 a that monitors and manages primary or secondary device functions.
- the device functions may include ensuring proper operation of a device given user inputs, estimating that (e.g., and responding to an instance in which) an intruder is or is attempting to be in a dwelling, detecting a failure of equipment coupled to the device (e.g., a light bulb having burned out), implementing or otherwise responding to energy demand response events, providing a heat-source alert, and/or alerting a user of a current or predicted future event or characteristic.
- processing engine 306 includes an advertising/communication paradigm 410 b that estimates characteristics (e.g., demographic information), desires and/or products of interest of a user based on device usage. Services, promotions, products or upgrades may then be offered or automatically provided to the user.
- processing engine 306 includes a social paradigm 410 c that uses information from a social network, provides information to a social network (for example, based on device usage), and/or processes data associated with user and/or device interactions with the social network platform. For example, a user's status as reported to their trusted contacts on the social network may be updated to indicate when the user is home based on light detection, security system inactivation or device usage detectors. As another example, a user may be able to share device-usage statistics with other users. In yet another example, a user may share HVAC settings that result in low power bills and other users may download the HVAC settings to their smart thermostat 102 to reduce their power bills.
- characteristics e.g., demographic information
- processing engine 306 includes a social paradigm 410 c that uses
- processing engine 306 includes a challenges/rules/compliance/rewards paradigm 410 d that informs a user of challenges, competitions, rules, compliance regulations and/or rewards and/or that uses operation data to determine whether a challenge has been met, a rule or regulation has been complied with and/or a reward has been earned.
- the challenges, rules, and/or regulations may relate to efforts to conserve energy, to live safely (e.g., reducing the occurrence of heat-source alerts) (e.g., reducing exposure to toxins or carcinogens), to conserve money and/or equipment life, to improve health, etc.
- one challenge may involve participants turning down their thermostat by one degree for one week.
- Those participants that successfully complete the challenge are rewarded, such as with coupons, virtual currency, status, etc.
- an example involves a rental-property owner making a rule that no renters are permitted to access certain owner's rooms.
- the devices in the room having occupancy sensors may send updates to the owner when the room is accessed.
- processing engine 306 integrates or otherwise uses extrinsic information 412 from extrinsic sources to improve the functioning of one or more processing paradigms.
- Extrinsic information 412 may be used to interpret data received from a device, to determine a characteristic of the environment near the device (e.g., outside a structure that the device is enclosed in), to determine services or products available to the user, to identify a social network or social-network information, to determine contact information of entities (e.g., public-service entities such as an emergency-response team, the police or a hospital) near the device, to identify statistical or environmental conditions, trends or other information associated with a home or neighborhood, and so forth.
- entities e.g., public-service entities such as an emergency-response team, the police or a hospital
- FIG. 5A illustrates a representative operating environment 500 in which a hub device server system 508 provides data processing for monitoring and facilitating review of alert events (e.g., motion events) in video streams captured by video cameras 118 .
- the hub device server system 508 receives video data from video sources 522 (including cameras 118 ) located at various physical locations (e.g., inside homes, restaurants, stores, streets, parking lots, and/or the smart home environments 100 of FIG. 1 ).
- Each video source 522 may be bound to one or more user (e.g., reviewer) accounts, and the hub device server system 508 provides video monitoring data for the video source 522 to client devices 504 associated with the reviewer accounts.
- the portable electronic device 166 is an example of a client device 504 .
- the smart home provider server system 164 or a component thereof serves as the hub device server system 508 ; the hub device server system 508 is a part or component of the smart home provider server system 164 .
- the hub device server system 508 is a dedicated video processing server that provides video processing services to video sources and client devices 504 independent of other services provided by the hub device server system 508 .
- An example of a video processing server is described below with reference to FIG. 5B .
- each of the video sources 522 includes one or more video cameras 118 that capture video and send the captured video to the hub device server system 508 substantially in real-time.
- each of the video sources 522 optionally includes a controller device (not shown) that serves as an intermediary between the one or more cameras 118 and the hub device server system 508 .
- the controller device receives the video data from the one or more cameras 118 , optionally performs some preliminary processing on the video data, and sends the video data to the hub device server system 508 on behalf of the one or more cameras 118 substantially in real-time.
- each camera has its own on-board processing capabilities to perform some preliminary processing on the captured video data before sending the processed video data (along with metadata obtained through the preliminary processing) to the controller device and/or the hub device server system 508 .
- a camera 118 of a video source 522 captures video at a first resolution (e.g., 720P and/or 1080P) and/or a first frame rate (24 frames per second), and sends the captured video to the hub device server system 508 at both the first resolution (e.g., the original capture resolution(s), the high-quality resolution(s) such as 1080P and/or 720P) and the first frame rate, and at a second, different resolution (e.g., 180P) and/or a second frame rate (e.g., 5 frames per second or 10 frames per second).
- a first resolution e.g., 720P and/or 1080P
- a first frame rate 24 frames per second
- the camera 118 captures a video 523 - 1 at 720P and/or 1080P resolution (the camera 118 may capture a video at 1080P and create a downscaled 720P version, or capture at both 720P and 1080P).
- the video source 522 creates a second (or third), rescaled (and optionally at a different frame rate than the version 523 - 1 ) version 525 - 1 of the captured video at 180P resolution, and transmits both the original captured version 523 - 1 (i.e., 1080P and/or 720P) and the rescaled version 525 - 1 (i.e., the 180P version) to the hub device server system 508 for storage.
- the rescaled version has a lower resolution, and optionally a lower frame rate, than the original captured video.
- the hub device server system 508 transmits the original captured version or the rescaled version to a client 504 , depending on the context. For example, the hub device server system 508 transmits the rescaled version when transmitting multiple videos to the same client device 504 for concurrent monitoring by the user, and transmits the original captured version in other contexts. In some implementations, the hub device server system 508 downscales the original captured version to a lower resolution, and transmits the downscaled version.
- a camera 118 of a video source 522 captures video at a first resolution (e.g., 720P and/or 1080P) and/or a first frame rate, and sends the captured video to the hub device server system 508 at the first resolution (e.g., the original capture resolution(s); the high-quality resolution(s) such as 1080P and/or 720P) and first frame rate for storage.
- the hub device server system 508 may downscale the video to a second, lower resolution (e.g., 180P) and/or second, lower frame rate for the transmission, depending on the context.
- the hub device server system 508 transmits the downscaled version when transmitting multiple videos to the same client device 504 for concurrent monitoring by the user, and transmits the original captured version in other contexts.
- each of the client devices 504 includes a client-side module 502 .
- the client-side module 502 communicates with a server-side module 506 executed on the hub device server system 508 through the one or more networks 162 .
- the client-side module 502 provides client-side functionalities for the event monitoring and review processing and communications with the server-side module 506 .
- the server-side module 506 provides server-side functionalities for event monitoring and review processing for any number of client-side modules 502 each residing on a respective client device 504 .
- the server-side module 506 also provides server-side functionalities for video processing and camera control for any number of the video sources 522 , including any number of control devices and the cameras 118 .
- the server-side module 506 includes one or more processors 512 , a video storage database 514 , device and account databases 516 , an I/O interface to one or more client devices 518 , and an I/O interface to one or more video sources 520 .
- the I/O interface to one or more clients 518 facilitates the client-facing input and output processing for the server-side module 506 .
- the I/O interface to clients 518 or a transcoding proxy computer (not shown) rescales (e.g., downscales) and/or changes the frame rate of video for transmission to a client 504 .
- the databases 516 store a plurality of profiles for reviewer accounts registered with the video processing server, where a respective user profile includes account credentials for a respective reviewer account, and one or more video sources linked to the respective reviewer account.
- the I/O interface to one or more video sources 520 facilitates communications with one or more video sources 522 (e.g., groups of one or more cameras 118 and associated controller devices).
- the video storage database 514 stores raw video data received from the video sources 522 , as well as various types of metadata, such as motion events, event categories, event category models, event filters, and event masks, for use in data processing for event monitoring and review for each reviewer account.
- the video storage database 514 also includes in some implementations a collection of curated and condensed video frames (e.g., extracted-frames video, described further below) covering hours or days of stored raw video to facilitate fast, seamless user review/scrubbing using a client side module 502 through key events/cuepoints that occurred in those hours and days of stored video without needing to download to or review on a client device 504 the raw video directly.
- curated and condensed video frames e.g., extracted-frames video, described further below
- the server-side module 506 receives information regarding alert events detected by other smart devices 204 (e.g., hazards, sound, vibration, motion). In accordance with the alert event information, the server-side module 506 instructs one or more video sources 522 in the smart home environment 100 where the alert event is detected to capture video and/or associate with the alert event video, received from the video sources 522 in the same smart home environment 100 , that is contemporaneous or proximate in time with the alert event.
- alert events detected by other smart devices 204 e.g., hazards, sound, vibration, motion.
- the server-side module 506 instructs one or more video sources 522 in the smart home environment 100 where the alert event is detected to capture video and/or associate with the alert event video, received from the video sources 522 in the same smart home environment 100 , that is contemporaneous or proximate in time with the alert event.
- Examples of a representative client device 504 include, but are not limited to, a handheld computer, a wearable computing device, a personal digital assistant (PDA), a tablet computer, a laptop computer, a desktop computer, a cellular telephone, a smart phone, an enhanced general packet radio service (EGPRS) mobile phone, a media player, a navigation device, a game console, a television, a remote control, a point-of-sale (POS) terminal, vehicle-mounted computer, an ebook reader, or a combination of any two or more of these data processing devices or other data processing devices.
- client devices 504 - 1 , 504 - 2 , and 504 - m are a smart phone, a tablet computer, and a laptop computer, respectively.
- Examples of the one or more networks 162 include local area networks (LAN) and wide area networks (WAN) such as the Internet.
- the one or more networks 162 are, optionally, implemented using any known network protocol, including various wired or wireless protocols, such as Ethernet, Universal Serial Bus (USB), FIREWIRE, Long Term Evolution (LTE), Global System for Mobile Communications (GSM), Enhanced Data GSM Environment (EDGE), code division multiple access (CDMA), time division multiple access (TDMA), Bluetooth, Wi-Fi, voice over Internet Protocol (VoIP), Wi-MAX, or any other suitable communication protocol.
- USB Universal Serial Bus
- FIREWIRE Long Term Evolution
- LTE Long Term Evolution
- GSM Global System for Mobile Communications
- EDGE Enhanced Data GSM Environment
- CDMA code division multiple access
- TDMA time division multiple access
- Bluetooth Wi-Fi
- Wi-Fi voice over Internet Protocol
- Wi-MAX wireless wide area network
- the hub device server system 508 is implemented on one or more standalone data processing apparatuses or a distributed network of computers. In some implementations, the hub device server system 508 also employs various virtual devices and/or services of third party service providers (e.g., third-party cloud service providers) to provide the underlying computing resources and/or infrastructure resources of the hub device server system 508 . In some implementations, the hub device server system 508 includes, but is not limited to, a handheld computer, a tablet computer, a laptop computer, a desktop computer, or a combination of any two or more of these data processing devices or other data processing devices.
- third party service providers e.g., third-party cloud service providers
- the server-client environment 500 shown in FIG. 5A includes both a client-side portion (e.g., the client-side module 502 ) and a server-side portion (e.g., the server-side module 506 ).
- the division of functionalities between the client and server portions of operating environment 500 can vary in different implementations.
- the division of functionalities between the video source 522 and the hub device server system 508 can vary in different implementations.
- client-side module 502 is a thin-client that provides only user-facing input and output processing functions, and delegates all other data processing functionalities to a backend server (e.g., the hub device server system 508 ).
- a respective one of the video sources 522 is a simple video capturing device that continuously captures and streams video data to the hub device server system 508 with no or limited local preliminary processing on the video data.
- the corresponding actions performed by the client device 504 and/or the video sources 522 would be apparent to ones skilled in the art without any creative efforts.
- some aspects of the present technology may be described from the perspective of the client device or the video source, and the corresponding actions performed by the video server would be apparent to ones skilled in the art without any creative efforts.
- some aspects of the present technology may be performed by the hub device server system 508 , the client device 504 , and the video sources 522 cooperatively.
- operating environment 500 that involves the hub device server system 508 , the video sources 522 and the video cameras 118 is merely an example. Many aspects of operating environment 500 are generally applicable in other operating environments in which a server system provides data processing for monitoring and facilitating review of data captured by other types of electronic devices (e.g., smart thermostats 102 , smart hazard detectors 104 , smart doorbells 106 , smart wall plugs 110 , appliances 112 and the like).
- smart thermostats 102 e.g., smart thermostats 102 , smart hazard detectors 104 , smart doorbells 106 , smart wall plugs 110 , appliances 112 and the like.
- the electronic devices, the client devices or the server system communicate with each other using the one or more communication networks 162 .
- two or more devices e.g., the network interface device 160 , the hub device 180 , and the client devices 504 - m
- the Bluetooth PAN is optionally established based on classical Bluetooth technology or Bluetooth Low Energy (BLE) technology.
- This smart home environment further includes one or more other radio communication networks 162 B through which at least some of the electronic devices of the video sources 522 - n exchange data with the hub device 180 .
- some of the electronic devices of the video sources 522 - n communicate with the network interface device 160 directly via the same sub-network 162 A that couples devices 160 , 180 and 504 - m .
- both the client device 504 - m and the electronic devices of the video sources 522 - n communicate directly via the network(s) 162 without passing the network interface device 160 or the hub device 180 .
- the network interface device 160 and the hub device 180 communicate with each other to form a network gateway through which data are exchanged with the electronic device of the video sources 522 - n .
- the network interface device 160 and the hub device 180 optionally communicate with each other via a sub-network 162 A.
- the hub device 180 is omitted, and the functionality of the hub device 180 is performed by the hub device server system 508 , video server system 552 , or smart home provider server system 164 .
- the hub device server system 508 is, or includes, a dedicated video processing server.
- FIG. 5B illustrates a representative operating environment 550 in which a video server system 552 serves as a dedicated video processing server and provides data processing for monitoring and facilitating review of alert events (e.g., motion events) in video streams captured by video cameras 118 .
- the video server system 552 receives video data from video sources 522 (including cameras 118 ) located at various physical locations (e.g., inside homes, restaurants, stores, streets, parking lots, and/or the smart home environments 100 of FIG. 1 ).
- Each video source 522 may be bound to one or more user (e.g., reviewer) accounts, and the video server system 552 provides video monitoring data for the video source 522 to client devices 504 associated with the reviewer accounts.
- the portable electronic device 166 is an example of the client device 504 .
- the smart home provider server system 164 or a component thereof serves as the video server system 552 ; the video server system 552 is a part or component of the smart home provider server system 164 .
- the video server system 552 is separate from the smart home provider server system 164 , and provides video processing services to video sources 522 and client devices 504 independent of other services provided by the smart home provider server system 164 .
- the smart home provider server system 164 and the video server system 552 are separate but communicate information with each other to provide functionality to users.
- a detection of a hazard may be communicated by the smart home provider server system 164 to the video server system 552 , and the video server system 552 , in accordance with the communication regarding the detection of the hazard, records, processes, and/or provides video associated with the detected hazard.
- each of the video sources 522 includes one or more video cameras 118 that capture video and send the captured video to the video server system 552 substantially in real-time.
- each of the video sources 522 optionally includes a controller device (not shown) that serves as an intermediary between the one or more cameras 118 and the video server system 552 .
- the controller device receives the video data from the one or more cameras 118 , optionally, performs some preliminary processing on the video data, and sends the video data to the video server system 552 on behalf of the one or more cameras 118 substantially in real-time.
- each camera has its own on-board processing capabilities to perform some preliminary processing on the captured video data before sending the processed video data (along with metadata obtained through the preliminary processing) to the controller device and/or the video server system 552 .
- a camera 118 of a video source 522 captures video at a first resolution (e.g., 720P and/or 1080P) and/or a first frame rate (24 frames per second), and sends the captured video to the video server system 552 at both the first resolution (e.g., the original capture resolution(s), the high-quality resolution(s)) and the first frame rate, and a second, different resolution (e.g., 180P) and/or a second frame rate (e.g., 5 frames per second or 10 frames per second).
- a first resolution e.g., 720P and/or 1080P
- a first frame rate 24 frames per second
- the camera 118 captures a video 523 - 1 at 720P and/or 1080P resolution (the camera 118 may capture a video at 1080P and create a downscaled 720P version, or capture at both 720P and 1080P).
- the video source 522 creates a second (or third), rescaled (and optionally at a different frame rate than the version 523 - 1 ) version 525 - 1 of the captured video at 180P resolution, and transmits both the original captured version 523 - 1 (i.e., 1080P and/or 720P) and the rescaled version 525 - 1 (i.e., the 180P version) to the video server system 552 for storage.
- the rescaled version has a lower resolution, and optionally a lower frame rate, than the original captured video.
- the video server system 552 transmits the original captured version or the rescaled version to a client 504 , depending on the context. For example, the video server system 552 transmits the rescaled version when transmitting multiple videos to the same client device 504 for concurrent monitoring by the user, and transmits the original captured version in other contexts. In some implementations, the video server system 552 downscales the original captured version to a lower resolution, and transmits the downscaled version.
- a camera 118 of a video source 522 captures video at a first resolution (e.g., 720P and/or 1080P)) and/or a first frame rate, and sends the captured video to the video server system 552 at the first resolution (e.g., the original capture resolution(s), the high-quality resolution(s) such as 1080P and/or 720P) and the first fame rate for storage.
- the video server system 552 may downscale the video to a second, lower resolution (e.g., 180P) and/or second, lower frame rate for the transmission, depending on the context.
- the video server system 552 transmits the downscaled version when transmitting multiple videos to the same client device 504 for concurrent monitoring by the user, and transmits the original captured version in other contexts.
- each of the client devices 504 includes a client-side module 502 .
- the client-side module 502 communicates with the video server system 552 through the one or more networks 162 .
- the video server system 552 includes a video server 552 , a client interface server 556 , and a camera interface server 558 .
- the video server 552 includes the server-side module 506 and its components and modules ( FIG. 5A ) or one or more respective components and/or modules of the server-side module 506 .
- the client-side module 502 provides client-side functionalities for the event monitoring and review processing and communications with the video server system 552 .
- the video server system 552 provides server-side functionalities for event monitoring and review processing for any number of client-side modules 502 each residing on a respective client device 504 .
- the video server system 556 also provides server-side functionalities for video processing and camera control for any number of the video sources 522 , including any number of control devices and the cameras 118 .
- the video server 554 includes one or more processors 512 , a video storage database 514 , and device and account databases 516 .
- the video server system 552 also includes a client interface server 556 and a camera interface server 558 .
- the client interface server 556 provides an I/O interface to one or more client devices 504
- the camera interface server 558 provides an I/O interface to one or more video sources 520 .
- the client interface server 556 facilitates the client-facing input and output processing for the video server system 552 .
- the client interface server 556 generates web pages for reviewing and monitoring video captured by the video sources 522 in a web browser application at a client 504 .
- the client interface server 556 or a transcoding proxy computer rescales (e.g., downscales) and/or changes the frame rate of video for transmission to a client 504 .
- the client interface server 504 also serves as the transcoding proxy.
- the databases 516 store a plurality of profiles for reviewer accounts registered with the video processing server, where a respective user profile includes account credentials for a respective reviewer account, and one or more video sources linked to the respective reviewer account.
- the camera interface server 558 facilitates communications with one or more video sources 522 (e.g., groups of one or more cameras 118 and associated controller devices).
- the video storage database 514 stores raw video data received from the video sources 522 , as well as various types of metadata, such as motion events, event categories, event category models, event filters, event masks, alert events, and camera histories, for use in data processing for event monitoring and review for each reviewer account.
- metadata such as motion events, event categories, event category models, event filters, event masks, alert events, and camera histories, for use in data processing for event monitoring and review for each reviewer account.
- the video server system 552 receives information regarding alert events detected by other smart devices 204 (e.g., hazards, sound, vibration, motion.
- the video server system 552 instructs one or more video sources 522 in the smart home environment 100 where the alert event is detected to capture video and/or associate with the alert event video, received from the video sources 522 in the same smart home environment 100 , that is contemporaneous or proximate in time with the alert event.
- Examples of a representative client device 504 include, but are not limited to, a handheld computer, a wearable computing device, a personal digital assistant (PDA), a tablet computer, a laptop computer, a desktop computer, a cellular telephone, a smart phone, an enhanced general packet radio service (EGPRS) mobile phone, a media player, a navigation device, a game console, a television, a remote control, a point-of-sale (POS) terminal, vehicle-mounted computer, an ebook reader, or a combination of any two or more of these data processing devices or other data processing devices.
- client devices 504 - 1 , 504 - 2 , and 504 - m are a smart phone, a tablet computer, and a laptop computer, respectively.
- Examples of the one or more networks 162 include local area networks (LAN) and wide area networks (WAN) such as the Internet.
- the one or more networks 162 are, optionally, implemented using any known network protocol, including various wired or wireless protocols, such as Ethernet, Universal Serial Bus (USB), FIREWIRE, Long Term Evolution (LTE), Global System for Mobile Communications (GSM), Enhanced Data GSM Environment (EDGE), code division multiple access (CDMA), time division multiple access (TDMA), Bluetooth, Wi-Fi, voice over Internet Protocol (VoIP), Wi-MAX, or any other suitable communication protocol.
- USB Universal Serial Bus
- FIREWIRE Long Term Evolution
- LTE Long Term Evolution
- GSM Global System for Mobile Communications
- EDGE Enhanced Data GSM Environment
- CDMA code division multiple access
- TDMA time division multiple access
- Bluetooth Wi-Fi
- Wi-Fi voice over Internet Protocol
- Wi-MAX wireless wide area network
- the video server system 552 is implemented on one or more standalone data processing apparatuses or a distributed network of computers.
- the video server 554 , the client interface server 556 , and the camera interface server 558 are each respectively implemented on one or more standalone data processing apparatuses or a distributed network of computers.
- the video server system 552 also employs various virtual devices and/or services of third party service providers (e.g., third-party cloud service providers) to provide the underlying computing resources and/or infrastructure resources of the video server system 552 .
- the video server system 552 includes, but is not limited to, a handheld computer, a tablet computer, a laptop computer, a desktop computer, or a combination of any two or more of these data processing devices or other data processing devices.
- the server-client environment 550 shown in FIG. 5B includes both a client-side portion (e.g., the client-side module 502 ) and a server-side portion (e.g., the components and modules in the video server system 552 ).
- the division of functionalities between the client and server portions of operating environment 550 can vary in different implementations.
- the division of functionalities between the video source 522 and the video server system 552 can vary in different implementations.
- client-side module 502 is a thin-client that provides only user-facing input and output processing functions, and delegates all other data processing functionalities to a backend server (e.g., the video server system 552 ).
- a respective one of the video sources 522 is a simple video capturing device that continuously captures and streams video data to the video server system 552 with no or limited local preliminary processing on the video data.
- the corresponding actions performed by the client device 504 and/or the video sources 522 would be apparent to ones skilled in the art without any creative efforts.
- some aspects of the present technology may be described from the perspective of the client device or the video source, and the corresponding actions performed by the video server would be apparent to ones skilled in the art without any creative efforts.
- some aspects of the present technology may be performed by the video server system 552 , the client device 504 , and the video sources 522 cooperatively.
- operating environment 550 that involves the video server system 552 , the video sources 522 and the video cameras 118 is merely an example. Many aspects of operating environment 550 are generally applicable in other operating environments in which a server system provides data processing for monitoring and facilitating review of data captured by other types of electronic devices (e.g., smart thermostats 102 , smart hazard detectors 104 , smart doorbells 106 , smart wall plugs 110 , appliances 112 and the like).
- smart thermostats 102 e.g., smart thermostats 102 , smart hazard detectors 104 , smart doorbells 106 , smart wall plugs 110 , appliances 112 and the like.
- the electronic devices, the client devices or the server system communicate with each other using the one or more communication networks 162 .
- two or more devices e.g., the network interface device 160 , the hub device 180 , and the client devices 504 - m
- the Bluetooth PAN is optionally established based on classical Bluetooth technology or Bluetooth Low Energy (BLE) technology.
- This smart home environment further includes one or more other radio communication networks 162 B through which at least some of the electronic devices of the video sources 522 - n exchange data with the hub device 180 .
- some of the electronic devices of the video sources 522 - n communicate with the network interface device 160 directly via the same sub-network 162 A that couples devices 160 , 180 and 504 - m .
- both the client device 504 - m and the electronic devices of the video sources 522 - n communicate directly via the network(s) 162 without passing the network interface device 160 or the hub device 180 .
- the network interface device 160 and the hub device 180 communicate with each other to form a network gateway through which data are exchanged with the electronic device of the video sources 522 - n .
- the network interface device 160 and the hub device 180 optionally communicate with each other via a sub-network 162 A.
- a video source 522 may be private (e.g., its captured videos and history are accessible only to the associated user/account), public (e.g., its captured videos and history are accessible by anyone), or shared (e.g., its captured videos and history are accessible only to the associated user/account and other specific users/accounts with whom the associated user has authorized access (e.g., by sharing with the other specific users)). Whether a video source 522 is private, public, or shared is configurable by the associated user.
- the camera 118 also performs preliminary motion detection on video captured by the camera 118 .
- the camera 118 analyzes the captured video for significant changes in pixels.
- the camera 118 transmits information to the hub device server system 508 or video server system 552 informing the server system of the preliminary detected motion.
- the hub device server system 508 or video server system 552 in accordance with the information of the detected motion, may activate sending of a motion detection notification to a client device 504 , log the preliminary detected motion as an alert event, and/or perform additional analysis of the captured video to confirm and/or classify the preliminary detected motion.
- FIG. 6 is a block diagram illustrating a representative hub device 180 in accordance with some implementations.
- the hub device 180 includes one or more processing units (e.g., CPUs, ASICs, FPGAs, microprocessors, and the like) 602 , one or more communication interfaces 604 , memory 606 , radios 640 , and one or more communication buses 608 for interconnecting these components (sometimes called a chipset).
- the hub device 180 includes one or more input devices 610 such as one or more buttons for receiving input.
- the hub device 180 includes one or more output devices 612 such as one or more indicator lights, a sound card, a speaker, a small display for displaying textual information and error codes, etc.
- the hub device 180 uses a microphone and voice recognition or a camera and gesture recognition to supplement or replace the keyboard.
- the hub device 180 includes a location detection device 614 , such as a GPS (global positioning satellite) or other geo-location receiver, for determining the location of the hub device 180 .
- a location detection device 614 such as a GPS (global positioning satellite) or other geo-location receiver, for determining the location of the hub device 180 .
- the hub device 180 optionally includes one or more built-in sensors (not shown), including, for example, one or more thermal radiation sensors, ambient temperature sensors, humidity sensors, IR sensors, occupancy sensors (e.g., using RFID sensors), ambient light sensors, motion detectors, accelerometers, and/or gyroscopes.
- built-in sensors including, for example, one or more thermal radiation sensors, ambient temperature sensors, humidity sensors, IR sensors, occupancy sensors (e.g., using RFID sensors), ambient light sensors, motion detectors, accelerometers, and/or gyroscopes.
- the radios 640 enables one or more radio communication networks in the smart home environments, and allows a hub device to communicate with smart devices.
- the radios 640 are capable of data communications using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), and/or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document.
- custom or standard wireless protocols e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.
- custom or standard wired protocols e.g., Ethernet, HomePlug, etc.
- Communication interfaces 604 include, for example, hardware capable of data communications using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) and/or any of a variety of custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document.
- custom or standard wireless protocols e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.
- any of a variety of custom or standard wired protocols e.g., Ethernet, HomePlug, etc.
- Memory 606 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.
- Memory 606 or alternatively the non-volatile memory within memory 606 , includes a non-transitory computer readable storage medium.
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices (e.g., the memory of any of the smart devices in smart home environment 100 , FIG. 1 ), and corresponds to a set of instructions for performing a function described above.
- the above identified modules or programs i.e., sets of instructions
- memory 606 optionally, stores a subset of the modules and data structures identified above.
- memory 606 optionally, stores additional modules and data structures not described above.
- FIG. 7A is a block diagram illustrating the hub device server system 508 in accordance with some implementations.
- the hub device server system 508 typically, includes one or more processing units (CPUs) 702 , one or more network interfaces 704 (e.g., including an I/O interface to one or more client devices and an I/O interface to one or more electronic devices), memory 706 , and one or more communication buses 708 for interconnecting these components (sometimes called a chipset).
- Memory 706 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.
- Memory 706 optionally, includes one or more storage devices remotely located from one or more processing units 702 .
- Memory 706 or alternatively the non-volatile memory within memory 706 , includes a non-transitory computer readable storage medium.
- memory 706 or the non-transitory computer readable storage medium of memory 706 , stores the following programs, modules, and data structures, or a subset or superset thereof:
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above.
- the above identified modules or programs i.e., sets of instructions
- memory 706 optionally, stores a subset of the modules and data structures identified above.
- memory 706 optionally, stores additional modules and data structures not described above.
- FIGS. 7B-7C are block diagrams illustrating the video server 554 in accordance with some implementations.
- the video server 554 typically, includes one or more processing units (CPUs) 718 , one or more network interfaces 720 , memory 722 , and one or more communication buses 724 for interconnecting these components (sometimes called a chipset).
- Memory 722 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.
- Memory 722 optionally, includes one or more storage devices remotely located from one or more processing units 718 .
- Memory 722 or alternatively the non-volatile memory within memory 722 , includes a non-transitory computer readable storage medium.
- memory 722 or the non-transitory computer readable storage medium of memory 722 , stores the following programs, modules, and data structures, or a subset or superset thereof:
- Video data stored in the video storage database 7320 includes high-quality versions 7321 and low-quality versions 7322 of videos associated with each of the video sources 522 .
- High-quality video 7321 includes video in relatively high resolutions (e.g., 720P and/or 1080P) and relatively high frame rates (e.g., 24 frames per second).
- Low-quality video 7322 includes video in relatively low resolutions (e.g., 180P) and relatively low frame rates (e.g., 5 frames per second, 10 frames per second).
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above.
- the above identified modules or programs i.e., sets of instructions
- memory 722 optionally, stores a subset of the modules and data structures identified above.
- memory 722 optionally, stores additional modules and data structures not described above.
- FIG. 7D is a block diagram illustrating the client interface server 556 in accordance with some implementations.
- the client interface server 556 typically, includes one or more processing units (CPUs) 734 , one or more network interfaces 736 , memory 738 , and one or more communication buses 740 for interconnecting these components (sometimes called a chipset).
- Memory 738 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.
- Memory 738 optionally, includes one or more storage devices remotely located from one or more processing units 734 .
- Memory 738 or alternatively the non-volatile memory within memory 738 , includes a non-transitory computer readable storage medium.
- memory 738 or the non-transitory computer readable storage medium of memory 738 , stores the following programs, modules, and data structures, or a subset or superset thereof:
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above.
- the above identified modules or programs i.e., sets of instructions
- memory 738 optionally, stores a subset of the modules and data structures identified above.
- memory 738 optionally, stores additional modules and data structures not described above.
- FIG. 7E is a block diagram illustrating the camera interface server 558 in accordance with some implementations.
- the camera interface server 558 typically, includes one or more processing units (CPUs) 748 , one or more network interfaces 750 , memory 752 , and one or more communication buses 754 for interconnecting these components (sometimes called a chipset).
- Memory 752 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.
- Memory 752 optionally, includes one or more storage devices remotely located from one or more processing units 748 .
- Memory 752 or alternatively the non-volatile memory within memory 752 , includes a non-transitory computer readable storage medium.
- memory 752 or the non-transitory computer readable storage medium of memory 752 , stores the following programs, modules, and data structures, or a subset or superset thereof:
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above.
- the above identified modules or programs i.e., sets of instructions
- memory 752 optionally, stores a subset of the modules and data structures identified above.
- memory 752 optionally, stores additional modules and data structures not described above.
- At least some of the functions of the video server 554 , client interface server 556 , and camera interface server 558 are performed by the hub device server system 508 , and the corresponding modules and sub-modules of these functions may be included in the hub device server system 508 . In some implementations, at least some of the functions of the hub device server system 508 are performed by the video server 554 , client interface server 556 , and/or camera interface server 558 , and the corresponding modules and sub-modules of these functions may be included in the video server 554 , client interface server 556 , and/or camera interface server 558 .
- FIGS. 8A-8B are block diagrams illustrating a representative client device 504 associated with a user (e.g., reviewer) account in accordance with some implementations.
- the client device 504 typically, includes one or more processing units (CPUs) 802 , one or more network interfaces 804 , memory 806 , and one or more communication buses 808 for interconnecting these components (sometimes called a chipset).
- the client device also includes a user interface 810 and one or more built-in sensors 890 (e.g., accelerometer 892 and gyroscope 894 ).
- User interface 810 includes one or more output devices 812 that enable presentation of media content, including one or more speakers and/or one or more visual displays.
- User interface 810 also includes one or more input devices 814 , including user interface components that facilitate user input such as a keyboard, a mouse, a voice-command input unit or microphone, a touch screen display, a touch-sensitive input pad, a gesture capturing camera, or other input buttons or controls.
- the client device 504 optionally uses a microphone and voice recognition or a camera and gesture recognition to supplement or replace the keyboard.
- the client device 504 optionally uses the accelerometer to detect changes in the orientation of the client device 504 , and in particular applications and contexts interpret the change in orientation detected by the accelerometer as user input.
- the client device 504 includes one or more cameras, scanners, or photo sensor units for capturing images (not shown).
- the client device 504 optionally includes a location detection device 816 , such as a GPS (global positioning satellite) or other geo-location receiver, for determining the location of the client device 504 .
- Memory 806 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.
- Memory 806 optionally, includes one or more storage devices remotely located from one or more processing units 802 .
- Memory 806 or alternatively the non-volatile memory within memory 806 , includes a non-transitory computer readable storage medium.
- memory 806 or the non-transitory computer readable storage medium of memory 806 , stores the following programs, modules, and data structures, or a subset or superset thereof:
- Video data cache 8304 includes cached video/image data for respective cameras associated with a user of the client device 804 .
- the video data cache 8304 includes cached video/image data 8304 - 1 for a first camera, cached video/image data 8304 - 2 for a second camera, up to cached video/image data 8304 - p for a p-th camera.
- video data cache 8304 may not have cached video/image data for a given camera (e.g., due to the camera being newly associated with the user, due to the cache being cleared, due to the cached video/image data being expired and removed from the cache).
- Blurred image data 832 includes sets of progressively blurred images for respective cameras.
- the blurred image data 832 includes blurred image data (e.g., a set of progressively blurred images) 832 - 1 for the first camera, blurred image data 832 - 2 for the second camera, up to blurred image data 832 - p for the p-th camera.
- blurred image data e.g., a set of progressively blurred images
- the client device 504 caches camera history as well as video data 8304 . For example, whenever the client device 504 receives camera events history 7328 data from the video server 554 , the most recent camera events history (e.g., history from the past two hours, the most recent 20 events) is cached at the client device (e.g., in client data 830 ). This cached history data may be accessed for quick display of camera history information.
- the most recent camera events history e.g., history from the past two hours, the most recent 20 events
- This cached history data may be accessed for quick display of camera history information.
- the client-side module 502 and user interface module 826 are parts, modules, or components of a particular application 824 (e.g., a smart home management application).
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above.
- the above identified modules or programs i.e., sets of instructions
- memory 806 optionally, stores a subset of the modules and data structures identified above.
- memory 806 optionally, stores additional modules and data structures not described above.
- At least some of the functions of the hub device server system 508 or the video server system 552 are performed by the client device 504 , and the corresponding sub-modules of these functions may be located within the client device 504 rather than the hub device server system 508 or video server system 552 . In some implementations, at least some of the functions of the client device 504 are performed by the hub device server system 508 or video server system 552 , and the corresponding sub-modules of these functions may be located within the hub device server system 508 or video server system 552 rather than the client device 504 .
- the client device 504 and the hub device server system 508 or video server system 552 shown in FIGS. 7A-8 , respectively, are merely illustrative, and different configurations of the modules for implementing the functions described herein are possible in various implementations.
- FIG. 9A is a block diagram illustrating a representative smart device 204 in accordance with some implementations.
- the smart device 204 e.g., any devices of a smart home environment 100 , FIGS. 1 and 2
- the smart device 204 includes one or more processing units (e.g., CPUs, ASICs, FPGAs, microprocessors, and the like) 902 , one or more communication interfaces 904 , memory 906 , radios 940 , and one or more communication buses 908 for interconnecting these components (sometimes called a chipset).
- user interface 910 includes one or more output devices 912 that enable presentation of media content, including one or more speakers and/or one or more visual displays.
- user interface 910 also includes one or more input devices 914 , including user interface components that facilitate user input such as a keyboard, a mouse, a voice-command input unit or microphone, a touch screen display, a touch-sensitive input pad, a gesture capturing camera, or other input buttons or controls.
- some smart devices 204 use a microphone and voice recognition or a camera and gesture recognition to supplement or replace the keyboard.
- the smart device 204 includes one or more image/video capture devices 918 (e.g., cameras, video cameras, scanners, photo sensor units).
- the client device includes a location detection device 916 , such as a GPS (global positioning satellite) or other geo-location receiver, for determining the location of the smart device 204 .
- the built-in sensors 990 include, for example, one or more thermal radiation sensors, ambient temperature sensors, humidity sensors, IR sensors, occupancy sensors (e.g., using RFID sensors), ambient light sensors, motion detectors, accelerometers, and/or gyroscopes.
- the radios 940 enable one or more radio communication networks in the smart home environments, and allow a smart device 204 to communicate with other devices.
- the radios 940 are capable of data communications using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), and/or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document.
- custom or standard wireless protocols e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.
- custom or standard wired protocols e.g., Ethernet, HomePlug, etc.
- Communication interfaces 904 include, for example, hardware capable of data communications using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) and/or any of a variety of custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document.
- custom or standard wireless protocols e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.
- any of a variety of custom or standard wired protocols e.g., Ethernet, HomePlug, etc.
- Memory 906 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.
- Memory 906 or alternatively the non-volatile memory within memory 906 , includes a non-transitory computer readable storage medium.
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above.
- the above identified modules or programs i.e., sets of instructions
- memory 906 optionally, stores a subset of the modules and data structures identified above.
- memory 906 optionally, stores additional modules and data structures not described above.
- FIG. 9B is a block diagram illustrating a representative camera 118 in accordance with some implementations.
- the camera 118 includes one or more processing units (e.g., CPUs, ASICs, FPGAs, microprocessors, and the like) 942 , one or more communication interfaces 944 , memory 946 , and one or more communication buses 948 for interconnecting these components (sometimes called a chipset).
- the camera 118 includes one or more input devices 950 such as one or more buttons for receiving input and one or more microphones.
- the camera 118 includes one or more output devices 952 such as one or more indicator lights, a sound card, a speaker, a small display for displaying textual information and error codes, playing audio, etc.
- the camera 118 optionally includes a location detection device 954 , such as a GPS (global positioning satellite) or other geo-location receiver, for determining the location of the camera 118 .
- Communication interfaces 944 include, for example, hardware capable of data communications using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) and/or any of a variety of custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document.
- custom or standard wireless protocols e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.
- any of a variety of custom or standard wired protocols e.g., Ethernet, HomePlug, etc.
- Memory 946 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.
- Memory 946 or alternatively the non-volatile memory within memory 946 , includes a non-transitory computer readable storage medium.
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above.
- the above identified modules or programs i.e., sets of instructions
- memory 946 optionally, stores a subset of the modules and data structures identified above.
- memory 946 optionally, stores additional modules and data structures not described above.
- camera 118 being an example of a smart device 204 , optionally includes components and modules included in smart device 204 as shown in FIG. 9A that are not shown in FIG. 9B .
- FIG. 10 is a block diagram illustrating the smart home provider server system 164 in accordance with some implementations.
- the smart home provider server system 164 typically, includes one or more processing units (CPUs) 1002 , one or more network interfaces 1004 (e.g., including an I/O interface to one or more client devices and an I/O interface to one or more electronic devices), memory 1006 , and one or more communication buses 1008 for interconnecting these components (sometimes called a chipset).
- Memory 1006 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.
- Memory 1006 optionally, includes one or more storage devices remotely located from one or more processing units 1002 .
- Memory 1006 or alternatively the non-volatile memory within memory 1006 , includes a non-transitory computer readable storage medium.
- memory 1006 or the non-transitory computer readable storage medium of memory 1006 , stores the following programs, modules, and data structures, or a subset or superset thereof:
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above.
- the above identified modules or programs i.e., sets of instructions
- memory 1006 optionally, stores a subset of the modules and data structures identified above.
- memory 1006 optionally, stores additional modules and data structures not described above.
- any of the devices and systems described herein e.g., hub device 180 , hub device server system 508 , video server system 552 , client device 504 , smart device 204 , camera 118 , smart home provider server system 164
- the functions of any of the devices and systems described herein are interchangeable with one another and may be performed by any other devices or systems, where the corresponding sub-modules of these functions may additionally and/or alternatively be located within and executed by any of the devices and systems.
- generating of user interfaces may be performed by the user interface module 74610 (which may be located at the client interface server 556 or at the video server 554 ) or by the user interface module 826 , depending on whether the user is accessing the video feeds and corresponding histories through a web browser 823 or an application 824 (e.g., a dedicated smart home management application) at the client device 504 .
- a web browser 823 or an application 824 e.g., a dedicated smart home management application
- FIG. 11A illustrates a representative system architecture 1100 and FIG. 11B illustrates a corresponding data processing pipeline 1112 .
- the server system 508 or 552 includes functional modules for an event processor 11060 , an event categorizer 11080 , and a user-facing frontend 11100 .
- the event processor 11060 e.g., event detection module 7306 , FIG. 7B
- obtains the motion event candidates e.g., by processing the video stream or by receiving the motion start information from the video source 522 .
- the event categorizer 11080 e.g., event categorization module 7308 , FIG. 7B ) categorizes the motion event candidates into different event categories.
- the user-facing frontend 11100 e.g., alert events module 73022 , FIG.
- the server system 508 / 522 also includes a video and source data database 1106 , event categorization modules database 1108 , and event data and event masks database 1110 . In some implementations, each of these databases is part of the server database 732 .
- the server system 508 / 552 also includes a frame extractor and encoder 11300 .
- the frame extractor and encoder e.g., frame extraction module 73026 , encoding module 73028 ; FIG. 7B ) extracts frames from raw video (e.g., video stream 1104 ) and encodes the extracted frames into an extracted-frames video.
- the frame extractor and encoder 11300 extracts frames at a predefined rate or a lower rate for portions of the video stream without alert events, and extracts frames at a higher rate for portions with alert events (e.g., the portion with the alert event and bracketing portions before and after the portion with the alert event).
- the overall, average rate at which the frames are extracted is a predefined rate (e.g., 20 frames per 20 minutes, 60 frames per hour, 1 frame per minute).
- the server system 508 / 522 also includes an extracted frames and extracted-frames videos 1130 database.
- extracted frames and extracted-frames videos 1130 are part of the server database 732 (e.g., extracted frames and extracted-frames videos database 7330 , FIG. 7C ).
- the server system 508 / 522 receives the video stream 1104 from the video source 522 and optionally receives motion event candidate information 1102 such as motion start information and video source information 1103 such as device settings for camera 118 .
- the event processor sub-module 11060 communicates with the video source 522 .
- the server system sends alerts for motion (and other) events 1105 and event timeline information 1107 to the client device 504 .
- the server system 508 / 522 optionally receives user information from the client device 504 such as edits on event categories 1109 and zone definitions 1111 .
- the server system also sends to the client device 504 video 1136 (which may be the video stream 1104 or a modified version thereof) and, on request by the client device 504 , extracted-frames video 1138 .
- the data processing pipeline 1112 processes a live video feed received from a video source 522 (e.g., including a camera 118 and an optional controller device) in real-time to identify and categorize motion events in the live video feed, and sends real-time event alerts and a refreshed event timeline to a client device 504 associated with a reviewer account bound to the video source 522 .
- the data processing pipeline 1112 also processes stored video feeds from a video source 522 to reevaluate and/or re-categorize motion events as necessary, such as when new information is obtained regarding the motion event and/or when new information is obtained regarding motion event categories (e.g., a new activity zone is obtained from the user).
- video data is captured at the video source 522 ( 1113 )
- the video data is processed to determine if any potential motion event candidates are present in the video stream.
- a potential motion event candidate detected in the video data is also sometimes referred to as a cuepoint.
- Motion start detection ( 1114 ) triggers performance of a more thorough event identification process on a video segment (also sometimes called a “video slice” or “slice”) corresponding to the motion event candidate.
- the video data is initially processed at the video source 522 .
- the video source sends motion event candidate information, such as motion start information, to the server system 508 .
- the video data is processed at the server system 508 for motion start detection.
- the video stream is stored on server system 508 (e.g., in video and source data database 1106 ).
- the video stream is stored on a server distinct from server system 508 .
- the relevant portion of the video stream is retrieved from storage (e.g., from video and source data database 1106 ).
- the more thorough event identification process includes segmenting ( 1115 ) the video stream into multiple segments then categorizing the motion event candidate within each segment ( 1116 ).
- categorizing the motion event candidate includes an aggregation of background factors, motion entity detection identification, motion vector generation for each motion entity, motion entity features, and scene features to generate motion features ( 11166 ) for the motion event candidate.
- the more thorough event identification process further includes categorizing each segment ( 11167 ), generating or updating a motion event log ( 11168 ) based on categorization of a segment, generating an alert for the motion event ( 11169 ) based on categorization of a segment, categorizing the complete motion event ( 1119 ), updating the motion event log ( 1120 ) based on the complete motion event, and generating an alert for the motion event ( 1121 ) based on the complete motion event.
- a categorization is based on a determination that the motion event candidate is within a particular zone of interest.
- a categorization is based on a determination that the motion event candidate involves one or more particular zones of interest.
- Frames are extracted from the video ( 1132 ) and an extracted-frames video is encoded from the extracted frames ( 1134 ).
- more frames are extracted per unit time of video from portions of the video during and proximate to the start and end of alert events (e.g., proximate to cuepoints) than from portions of the video without alert events.
- portions of the extracted-frames video without alert events have less frames per unit time than portions of the extracted-frames video with alert events.
- the event analysis and categorization process may be performed by the video source 522 and the server system 508 / 552 cooperatively, and the division of the tasks may vary in different implementations, for different equipment capability configurations, and/or for different network and server load situations.
- the server system 508 categorizes the motion event candidate
- the result of the event detection and categorization may be sent to a reviewer associated with the video source 522 .
- the server system 508 / 522 also determines an event mask for each motion event candidate and caches the event mask for later use in event retrieval based on selected zone(s) of interest.
- the server system 508 / 522 stores raw or compressed video data (e.g., in a video and source data database 1106 ), event categorization models (e.g., in an event categorization model database 1108 ), and event masks and other event metadata (e.g., in an event data and event mask database 1110 ) for each of the video sources 522 .
- the video data is stored at one or more display resolutions such as 480p, 780p, 1080i, 1080p, and the like.
- the server system 508 / 522 also stores the extracted-frames video in the same or a similar database (e.g., in an extracted frames and extracted-frames video database 1130 ).
- FIGS. 11A-11B refer to motion events
- the system architecture 1100 and the data processing pipeline 1112 apply similarly to other types of events or alerts (e.g., alerts or events from other smart devices 204 , such as hazard alerts). Indeed, such alerts and events may be processed together alongside motion events in the same system architecture 1100 and pipeline 1112 .
- one or more of the modules and data stores associated with server system 508 or 552 ( FIGS. 5A-5B ) or 1501 ( FIG. 15 ) may be located in the camera (e.g., camera 118 ) itself and/or in a computing device or system local to the camera (e.g., a server or digital video recorder device or hub device (e.g., hub device 180 ) located in the same house as the camera 118 ).
- a server or digital video recorder device or hub device e.g., hub device 180
- one or more of the operations that are described as being performed at or by the server system 508 or 552 or 1501 may be performed by the camera itself and/or by the computing device or system local to the camera.
- the camera and/or the local device/system may include analogous modules and data stores for processing the video feed captured by the camera to detect alert events and to identify frames in the video feed for extraction (e.g., analogue to video data receiving module, event detection module 7306 , etc.), storing the video feed (e.g., analogue to video storage database 7320 ), extracting the identified frames (e.g., analogue to frame extraction module 73026 ), encoding the extracted frames into extracted-frames video (e.g., analogue to encoding module 73028 ), storing the extracted frames video (e.g., analogue to extracted frames and extracted-frames video database 7330 ), and receiving requests from a client device for the video feed and/or extracted-frames video and transmitting the video feed and/or extracted-frames video to the client device (e.g., analogue to I/O interface to clients 516 or client interface server 556 or front-end 1508 ).
- analogous modules and data stores for processing the video
- FIGS. 12A-12M illustrate example user interfaces on a client device for monitoring and reviewing video feeds in accordance with some implementations.
- FIG. 12A illustrates a client device 504 (e.g., a mobile device, such as a smart phone) with a touch screen 12002 and optionally an accelerometer 892 and/or a gyroscope 894 ( FIG. 8A ).
- a user interface 12004 of an application 824 is displayed on the touch screen 12002 .
- the application is a dedicated smart home management application (also referred to below as a “smart home application”), and the user interface 12004 is a home page or screen of the smart home management application.
- the user interface 12004 includes multiple user interface objects (e.g., buttons, icons, etc.) that display information associated with a smart home environment 100 associated with the user and/or that serve as affordances with which a user may interact to access functionalities associated with the smart home application.
- the user interface 12004 includes a menu object 12006 , a settings object 12008 , a mode icon 12009 and corresponding label 12010 , one or more thermostat objects 12012 , a “Protect” object 12014 , and one or more camera objects 12016 with respective corresponding labels 12018 .
- FIGS. 11B, 14A, 14F, 14H, 14I, 14N-14R, and 14Y-14Z of U.S. patent application Ser. No. 15/208,578, which is incorporated by reference in its entirety.
- the menu and settings objects 12006 and 12008 when activated by the user, provide access to an options menu or interface and a settings menu or interface for the smart home application, respectively.
- the menu object 12006 is displayed as a “hamburger menu” icon consisting of three parallel lines (e.g., as shown in FIG. 12A ), and the settings icon is displayed as a gear icon (e.g., as shown in FIG. 12A ).
- the mode icon 12009 and label 12010 indicates the operating mode of the smart home environment 100 with which the information displayed in user interface 12004 is associated (e.g., the user's home). For example, the smart home environment 100 may operate in a “Home” mode and an “Away” mode.
- the user In the “Home” mode, the user is presumed to be in the smart home environment 100 (e.g., within the structure 150 ). In the “Away” mode, the user is presumed to be remote from the smart home environment 100 . Smart devices 204 may operate differently in the “Home” mode than in the “Away” mode, and certain notifications of events may be elided when in “Home” mode. The user may access a menu to change the mode by activating the mode icon 12009 (e.g., by tapping on the mode icon 12009 with a single tap gesture).
- Thermostat objects 12012 -A and 12012 -B correspond to respective smart thermostats 102 in the smart home environment 100 and display the current detected temperatures and/or the set temperatures at the corresponding smart thermostats 102 .
- “Protect” object 12014 provides access to a history of alert events (e.g., detected hazards, detected sounds, detected vibrations, operation of smart door lock 120 , etc.) associated with the smart home environment 100 .
- the user accesses the “Protect” history by activating the “Protect” object 12014 (e.g., by tapping on the “Protect” object 12014 on the touch screen 12002 ).
- the camera objects 12016 -A, 12016 -B, and 12016 -C correspond to respective video sources 522 (or, more particularly, respective cameras 118 ) within the smart home environment 100 .
- the labels 12018 -A, 12018 -B, and 12018 -C indicate the respective video sources 522 to which the respective camera objects 12016 correspond.
- the camera object 12016 -A corresponds to a camera 118 labeled “Outside” 12018 -A.
- a view of a video feed or stream from the corresponding camera is displayed.
- a view 12020 of the video feed from the “Outside” 12018 -A camera is displayed in camera object 12016 -A
- a view 12022 of the video feed from the “Front door” 12018 -B camera is displayed in camera object 12016 -B
- a view 12024 of the video feed from the “Dining room” 12018 -C camera is displayed in camera object 12016 -C.
- the view of a video feed is displayed in a camera object 12016 as a real-time (or near real-time) live video stream from the corresponding camera or as periodically refreshed (e.g., at a rate less than typical frame rates for video) still images from the corresponding camera.
- the view is displayed at a resolution different from the original resolution and/or frame rate in which the video was captured.
- the video views displayed in the camera objects 12016 are displayed at an 180P ( 180 horizontal lines progressive scan) resolution and at a frame rate of 5 or 10 frames per second, which is different from the original capture resolution (e.g., 720P, 1080P, 4K resolution) and the original frame rate.
- the view displayed in a camera object 12016 is cropped from the original video to fit the size and shape of the camera object 12016 , and the cropping is positioned to focus on a particular portion of the video for display.
- view 12020 is cropped to view 12020 - 1 to fit into circle-shaped object 12016 -A
- view 12022 is cropped to view 12022 - 1 to fit into circle-shaped object 12016 -B
- view 12024 is cropped to view 12024 - 1 to fit into circle-shaped object 12016 -C.
- the camera objects 12016 are shown in the drawings as having a circular shape, the camera objects 12016 may be in other shapes (e.g., square, rectangle, etc.) or each camera object 12016 may have a distinct shape (e.g., one camera object 12016 has a circular shape, another camera object 12016 has a square shape, and so on).
- Each of the camera objects 12016 are associated with a respective camera and its corresponding video feed.
- a user may perform a gesture on one of the camera objects 12016 to access a user interface that shows the video corresponding to that camera object uncropped and alert event information associated with the corresponding video feed. For example, in FIG. 12A a single tap gesture with contact 12026 is detected on the camera object 12016 -C. In response to detection of the gesture, user interface 12028 is displayed on the touch screen 1102 , replacing user interface 12004 , as shown in FIG. 12B .
- User interface 12028 includes a camera name 12030 (e.g., indicating or identifying the camera 118 for which a video feed is shown in the interface 12028 ) and optionally a description, a backtracking affordance 12032 to backtrack to a previous user interface (e.g., back to user interface 12004 ), a settings affordance 12034 , a live video indicator 12036 , and a video region 12038 .
- a video feed from a camera 118 e.g., the video feed from the “Dining room” 12018 -C camera corresponding to the tapped-upon camera object 12016 -C
- a date description or indicator 12052 indicates the date of a frame of the video feed currently shown in the video region 12038 .
- a timeline region 12040 Also displayed in the user interface 12028 is a timeline region 12040 .
- a microphone icon 12042 corresponds to an affordance for activating audio capability between the device 504 and the camera 118 for which the video feed is displayed in the video region 12038 (if the camera 118 is equipped and configured for audio input and/or output).
- the video clip creation icon 12044 corresponds to an affordance for starting a process to save a portion of the video feed as a user-created video clip.
- the timeline event filtering icon 12046 corresponds to an affordance for filtering alert events displayed in the timeline by, for example, alert event type and/or the zone in which an alert event was detected.
- the timeline region 12040 displays a timeline of the video feed displayed in the video region 12038 ; the timeline of the video feed corresponds to the date and time of the video feed displayed in the video region 12038 .
- the timeline region 12040 includes a time position marker 12048 and time increment markers 12050 .
- the time position marker 12048 marks a time in the timeline to which the portion of the video feed currently displayed in the video region 12038 corresponds; the time position marker 12048 marks the current position in the video feed on the timeline.
- the time position marker 12048 is also a “scrubber” for the video feed displayed in the video region 12038 ; the user may move the time position marker 12048 relative to the timeline or the timeline relative to the time position marker 12048 to “scrub” through the video feed in order to locate a particular portion of or to go to a particular time in the video feed.
- a date indicator 12052 is displayed in the user interface 12028 (e.g., proximate to the timeline region 12040 ). The date indicator 12052 indicates the date to which the time marked by the time position marker 12048 , and optionally the portion of the timeline displayed in the timeline region 12040 , corresponds.
- a count of events (not shown) associated with the video feed is displayed along with the date indicator 12052 .
- Time increment markers 12050 indicate time units or increments on the timeline. For example, time increment marker 12050 -A marks 10 AM of a certain day on the timeline, time increment marker 12050 -B marks 9 AM on the timeline, time increment marker 12050 -C marks 8 AM on the timeline, time increment marker 12050 -D marks 7 AM on the timeline, and time increment marker 12050 -E marks 6 AM on the timeline. Thus, the time increment markers 12050 , as shown in FIG. 12B , indicate one-hour increments on the timeline. In some implementations, the increments may be of another size (e.g., two-hour increments, half-hour increments, 10-minute increments, etc.).
- the smart home application either in the user interface 12048 or elsewhere, includes an affordance for changing the time unit or increment size of the timeline (e.g., changing form one-hour increments as shown in FIG. 12B to another increment size).
- the timeline may be zoomed in or out by the user, thus changing the time increment size.
- the time unit or increment size is independent of how much display length (e.g., in pixels) on the timeline an increment occupies on the timeline, further details of which are described below.
- indicators of alert events associated with the video feed displayed in the video region 12038 are displayed on the timeline in the timeline region 12040 .
- alert event indicators 12054 , 12056 , 12058 , and 12060 are displayed on the timeline.
- information regarding alert events is obtained from smart devices 204 . Further details regarding these alert event indicators are described below.
- time increments on the timeline during which one or more alert events occurred or were otherwise detected by a smart device occupy more display length on the timeline than time increments in which no alert event occurred or was detected, as indicated by the lack of alert event indicators in those time increments. For example, one or more alert events occurred during the 9 AM-10 AM hour (the “9-AM increment”) between time increment markers 12050 -A and 12050 -B, as indicated by alert event indicators 12054 , 12056 , 12058 , and 12060 displayed in that time increment.
- the display length between time increment markers 12050 -A and 12050 -B is longer than any of the respective display lengths between time increment markers 12050 -B and 12050 -C (the 8-AM increment), time increment markers 12050 -C and 12050 -D (the 7-AM increment), and time increment markers 12050 -D and 12050 -E (the 6-AM increment), where no alert event had occurred or were detected.
- increments that have alert events respectively have one display length
- increments that do not have alert events respective have another, shorter display length. For example, increments that have alert events respectively have lengths of X pixels on the timeline, and increments that do not have alert events respectively have lengths of X/4 pixels on the timeline.
- the term “occur” or “occurrence” is used to collectively refer to occurrence of an alert event or detection of the alert event by a smart device.
- a time increment during which one or more alert events occurred and was detected by a smart device is described in this specification as a time increment with an alert event.
- a time increment during which no alert event occurred or was detected by a smart device is described as a time increment without an alert event.
- the timeline in the timeline region 12040 is arranged vertically, with the direction of time from past to present going from bottom to top on the timeline, as shown in FIG. 12B .
- the timeline is arranged vertically, but the direction of time from past to present goes from top to bottom.
- the timeline in the timeline region is arranged horizontally and the direction of time from past to present goes from, depending on the particular implementation, left to right or right to left. It should be appreciated that in this specification, the “length” of the timeline is parallel to the direction-of-time orientation of the timeline. For example, if the timeline is vertically arranged, as with the timeline in the timeline region 12040 as shown in FIG.
- the “length” of the timeline is the vertical dimension of the timeline.
- the timeline is an overlay over the video region 12038 as opposed to being a distinct region.
- the video region 12038 may be sized to fit the width of the display, and the timeline is a vertically arranged timeline overlaid on one side (e.g., the right side) of the video region 12038 and displayed semi-transparently or translucently.
- the video feed playing in the video region 12038 is a live or approximately live video stream originally captured by the camera 118 and received through a server system 508 or 552 (e.g., video 7321 , FIG. 7C ).
- the timeline in the timeline region 12040 scrolls, relative to the time position marker 12048 , at the same rate as and in accordance with real-time.
- the video feed is live, as indicated by live video indicator 12036 .
- the timeline in the timeline region 12040 moves in direction 12062 , in accordance with the actual passage of time and playback of the video feed, such that the time position marker 12048 continually marks approximately the present time on the timeline.
- the video feed plays in the video region 12038 along with the scrolling timeline and the position of the time position marker 12048 relative to the timeline.
- the time position marker 12048 is stationary within the timeline region 12040 ; the user sees the time position marker 12048 remaining in place while respective time increments in the timeline scroll by.
- respective time increments in the timeline that are further in the past are scrolled out of display and respective time increments closer to the present are scrolled into display.
- the 6-AM increment, the 7-AM increment, and the 8-AM increment have scrolled out of display
- the 10-AM increment between time increment markers 12050 -A and 12050 -F have scrolled completely into display.
- portions of the 9-AM increment have scrolled out of display.
- the 11-AM increment between time increment markers 12050 -F and 12050 -G, the 12-PM increment between time increment markers 12050 -G and 12050 -H, the 1-PM increment between time increment markers 12050 -H and 12050 -I, and the 2-PM increment between time increment markers 12050 -I and 12050 -J scroll into display, as shown in FIG. 12D .
- the video feed is encoded (e.g., by server system 508 ; by video server system 552 ) such that portions of the video feed corresponding to time increments with an alert event have more frames per unit time than portions of video feed corresponding to time increments without an alert event.
- the differences in timeline display length between time increments with an alert event and time increments without an alert event is associated with the difference in frames per unit time between time increments with an alert event and time increments without an alert event. As the timeline scrolls, when the time position marker 12048 is located over a time increment without an alert event, the video plays at less frames per unit time than when the time position marker 12048 is located over a time increment with an alert event.
- portions of the video feed corresponding to the 9-AM increment and the 10-AM increment have more frames per unit time (e.g., frames per hour, frames per second) than the 6-AM increment, the 7-AM increment, the 8-AM increment, the 11-AM increment, the 12-PM increment, the 1-PM increment, or the 2-PM increment.
- the video feed plays in the video region 12038 in accordance with these different frame rates.
- the time position marker 12048 displays digitally the time corresponding to the current location of the time position marker 12048 relative to the timeline. For example, in FIG. 12B , the time position marker 12048 shows the time marked by the time position marker 12048 as “10:15:17 AM.” In some implementations, the time position marker 12048 displays the time corresponding to the current location of the time position marker 12048 relative to the timeline in analog form (e.g., with a graphic or icon resembling an analog clock). For example, the time position marker 12048 as shown in FIG. 12E includes an analog clock icon that shows the time marked by the time position marker 12048 . The analog clock icon has hour and minute hands that show the time marked by the time position marker 12048 . In implementations where the time position marker 12048 includes the analog clock icon or graphic, the date indicator 12052 may include, along with the date, the time marked by the time position marker 12048 in digital form, as shown in FIG. 12E for example.
- the timeline scrolls backward or forward in time in accordance with a manual user input.
- the user may perform a gesture on the touch screen 12002 over the timeline region 12040 .
- the smart home application detects the gesture, and scrolls the timeline in accordance with the detected gesture. For example, as shown in FIG. 12F , a gesture with contact 12064 (hereinafter “gesture 12064 ” for convenience) is detected in timeline region 12040 .
- the gesture 12064 moves in direction 12066 .
- the timeline scrolls in direction 12067 , backwards toward past time, as shown in FIG. 12G for example.
- time position marker 12048 remains stationary, thus marking a new time by virtue of the timeline scrolling relative to the time position marker 12048 , thus positioning the time position marker 12048 at a new location on the timeline.
- live video indicator 12036 indicates that the video feed content displayed in video region 12038 is not live; the timeline has scrolled backward to a past time corresponding to historical video content in the video feed.
- the recorded video feed corresponding to that past time will be requested and subsequently displayed in video region 12038 .
- the user can access the recorded video feed backward or forward in time in order to find a desired portion for viewing, where the recorded video feed could be recorded locally (e.g., on the camera, such as camera 118 , or another electronic storage device in proximity to the camera) or remotely (e.g., on a server system remote from the camera, such as server system 508 , 552 , or 1501 ).
- the video feed resumes playback from the approximate time on the timeline where the scrolling stopped.
- the user can also scroll the timeline all the way forward in time to resume live video in the video region 12038 .
- the client device 504 may request the live video feed from the camera (e.g., camera 118 ) itself or a server system remote from the camera (e.g., server system 508 , 552 , or 1501 ).
- the camera e.g., camera 118
- a server system remote from the camera e.g., server system 508 , 552 , or 1501 .
- the video content displayed in the video region 12038 is an extracted-frames video (e.g., extracted-frames video from database 7330 ) version of the video feed, encoded (e.g., by server system 508 / 552 ) from frames extracted from the original video from the camera 118 (e.g., high-quality video 7321 ).
- an extracted-frames video e.g., extracted-frames video from database 7330
- server system 508 / 552 encoded from frames extracted from the original video from the camera 118 (e.g., high-quality video 7321 ).
- the extracted-frames video averages a predefined frame rate (e.g., 20 frames per 20 minutes, 60 frames per hour, 1 frame per minute), but the frame rate between portions of the extracted-frames video may vary, with the portions of the extracted-frames video corresponding to an alert event having more frames per unit time than portions without an alert event.
- Frames are extracted from the video feed for generation of the extracted-frames video, such that frames are extracted closer together (e.g., frames extracted at higher than the average rate) from portions of the video feed in proximity to an alert event (e.g., a cuepoint) than from portions of the video feed without an alert event (e.g., frames extracted at or lower than the average rate).
- the portions of the extracted-frames video with an alert event have frames closer together in time than the portions of the extracted-frames video without an alert event.
- frames from the extracted-frames video are displayed in the video region 12038 , instead of frames from the original version of the video feed that plays when the timeline is not being manually scrolled.
- the original video feed is not displayed while the user is scrubbing the video feed—rather, only a subset of frames from the original video feed are displayed.
- frames of the extracted-frames video may be requested from the server system (e.g., server system 508 or 552 , a server or recording/storage device local to the camera 118 ) as the user scrolls the timeline.
- the server system e.g., server system 508 or 552 , a server or recording/storage device local to the camera 118
- the extracted-frames video operationally is more akin to a set of still images or a time-lapse video; the still images or time-lapse frames (e.g., the frames in the extracted-frames video) are displayed as the user scrubs the video feed.
- the client device 504 while a user scrolls through the timeline of a recorded video feed, only a subset of frames from the original video feed are displayed rather than the actual recorded video feed. Once the user stops scrolling, however, or otherwise indicates a desire to playback the original video feed at a particular historical time, the client device 504 will request and display the recorded video feed from that historical time on. In some implementations, the client device 504 may not request or display the recorded video feed in such an instance. For example, a user account may have one of a number of a different subscription tiers. Different qualities or amounts of recorded video feed may be provided to the user based on their subscription tier.
- the client device 504 may give the user the full experience of subsets of frames while scrolling and then the full recorded video feed on response to the user selecting a particular time in history to begin playback.
- the client device 504 may not actually playback any video.
- the client device 504 may playback historical video for only a select number of hours (e.g., 1, 3, 12, etc.) or days (e.g., 1, 7, 30, etc.).
- a still image from the subset of frames may be displayed instead of the recorded video stream.
- a message indicating different subscription plans are available may be displayed or superimposed on the still image.
- the subsets of frames may be displayed only for historical times during which an event occurred. E.g., the subsets of frames may be displayed during the time a particular event occurred, and a still image or message may be displayed during the time that no events have occurred.
- the timeline may include one or more alert event indicators (e.g., alert event indicators 12054 , 12056 , 12058 , 12060 ). These alert event indicators indicate on the timeline occurrences of alert events detected by smart devices.
- alert event indicators indicate alert events corresponding to any of multiple types, including for example: motion events in a user-defined or automatically generated zone in the field of view captured by the camera 118 and shown in the video feed, motion events in the field of view generally or not in any user-defined or automatically generated zone, hazard events (e.g., hazards detected by a hazard (e.g., smoke, carbon monoxide) detector), a window or door activity event (e.g., detection of a window or door being opened or closed), a door lock event (e.g., detection of a door lock being engaged or disengaged), and a thermostat or HVAC event (e.g., a thermostat temperature change, activation of thermostat programming, the thermostat turning on or off, etc.).
- additional indicators e.g., a thermostat
- an alert event indicator is displayed as a graphical object (e.g., a “pill” graphical object, called such because its shape and rounded ends resemble a medicine pill) with a display length parallel to the timeline; the display length is based on the duration of the alert event.
- alert event indicators 12054 and 12056 FIG. 12B
- Alert event indicators corresponding to alert events associated with a toggle event or a state change event may have a default or nominal display length independent of duration (e.g., as with indicator 12060 ).
- Alert event indicators are displayed on the timeline in a manner that indicates approximate start and end times of the respective corresponding alert events based on their respective locations on the timeline and optionally their lengths. For example, the alert event corresponding to alert event indicator 12054 starts sometime after 9 AM and lasts until sometime after 10 AM.
- the timeline region 12040 includes multiple sub-regions or sub-sections or columns (for a vertically oriented timeline) or rows (for a horizontally oriented timeline) 12068 running parallel to the timeline.
- FIGS. 12G and 12H show sub-sections 12068 -A, 12068 -B, 12068 -C, and 12068 -D in timeline region 12040 , running parallel to the timeline. It should be appreciated that the dotted lines dividing the sub-sections 12068 in FIGS. 12G and 12H are shown in the figures for illustrative purposes only, and are not actually displayed in the user interface 12028 and are not otherwise visible to users.
- Alert event indicators and other information from smart devices are displayed in respective sub-sections 12068 based on the alert event type or information type. For example, alert event indicators corresponding to motion events in a “Table” zone (e.g., indicator 12054 ) are displayed in sub-section 12068 -A. Alert event indicators corresponding to motion events in a “Window” zone (e.g., indicators 12056 and 12070 ) are displayed in sub-section 12068 -B. Alert event indicators corresponding to motion events in a “Door” zone (e.g., indicator 12058 ) are displayed in sub-section 12068 -C. Alert event indicators corresponding to door lock events for a respective door lock (e.g., indicator 12060 ) are displayed in sub-section 12068 -D.
- a “Table” zone e.g., indicator 12054
- Alert event indicators corresponding to motion events in a “Window” zone e.g., indicators 12056 and 12070
- the number of sub-sections 12068 is limited (e.g., four as shown in FIGS. 12G and 12H ) due to display space and legibility considerations; multiple alert event types may be assigned the same sub-section.
- sub-section 12068 -A may be shared by alert event indicators corresponding to “Table” zone motion events and alert event indicators corresponding to motion events not in any of the user-created or automatically generated zones.
- one sub-section 12068 may be shared by non-motion events (e.g., hazard alerts) and motion events not in any user-created or automatically created zone, and other sub-sections 12068 are reserved for motion events in respective zones.
- one or more of the sub-regions/sub-sections/columns display other information from smart devices.
- the ambient temperature as detected by the thermostat or HVAC system may be plotted as a line graph in one of the sub-sections.
- Locations on the timeline with alert event indicators may correspond to portions of the video feed that were captured and recorded while the respective corresponding alert events were detected.
- the time position marker 12048 overlaps one or more alert event indicators on the timeline, the video feed portion that is played or displayed in the video region 12038 was captured concurrently with detection of the corresponding alert events. For example, as shown in FIGS. 12G and 12H , the time position marker overlaps alert event indicators 12054 , 12056 , and 12058 .
- Indicator 12054 corresponds to a motion event in a “Table” zone, e.g., a person 12072 moving in a zone named “Table.”
- Indicator 12056 corresponds to a motion event in a “Window” zone, e.g., a person 12074 moving in a zone named “Window.”
- Indicator 12058 corresponds to a motion event in a “Door” zone, e.g., a person 12076 moving in a zone named “Door.”
- different portions of the video feed portion may be recorded and accessible. These may be accessible based on, e.g., a subscription tier associated with the user. For example, in accordance with one subscription tier, video may be recorded and accessible only during the time that an event occurs. In some embodiments, the full video may not be available but rather only a subset of the frames corresponding to that event. In accordance with another subscription tier, video may be recorded and accessible not only during events but also when events do not occur. Depending on the particular subscription tier, the amount of recorded video recorded and/or accessible may be different, e.g., a certain number of hours or a certain number of days, weeks, or years.
- the alert event indicators have different visual characteristics based on the corresponding alert event type.
- the different visual characteristic may be different colors, for example.
- indicators corresponding to “Table” zone motion events e.g., indicator 12054
- indicators corresponding to “Window” zone motion events e.g., indicators 12056 and 12070
- indicators corresponding to “Door” zone motion events e.g., indicator 12058
- the different colors are represented in the figures by the different fill patterns in the alert event indicators.
- the zone(s) in which the motion event(s) were detected are highlighted in the video feed portion. For example, as shown in FIG. 12H , “Table” zone 12078 , “Window” zone 12080 , and “Door” zone 12082 are highlighted. In some implementations, the respective zones are highlighted with the same respective colors as their respective corresponding alert event indicators.
- the order in which alert event types corresponding to motion events in zones are assigned, relative to each other, to respective sub-sections 12068 is based on the order of the zones in the field of view of the camera 118 .
- “Table” zone 12078 , “Window” zone 12080 , and “Door” zone 12082 had been defined in the field of view of the video feed, in the order from left to right as shown in the figure.
- indicators for “Table” zone motion events are assigned to sub-section 12068 -A
- indicators for “Window” zone motion events are assigned to sub-section 12068 -B
- indicators for “Door” zone motion events are assigned to sub-section 12068 -C.
- FIG. 12I illustrates user interface 12028 with a “Condense” affordance 12084 (e.g., a virtual button or other user interface object) displayed amongst multiple consecutive time increments without an alert event (e.g., the 8-AM increment, the 7-AM increment, etc.).
- consecutive time increments without alert events may be condensed on the timeline. For example, by activating the “Condense” affordance 12084 (e.g., tapping on the “Condense” affordance with a tap gesture 12086 , as shown in FIG.
- the respective one-hour time increments between time increment markers 12050 -B and 12050 -C, 12050 -C and 12050 -D, 12050 -D and 12050 -E, 12050 -E and 12050 -K, 12050 -K and 12050 -L, and 12050 -L and 12050 -M are condensed or collapsed into one multi-hour time increment represented by multi-hour marker 12092 ( FIG. 12K ).
- activation of the “Condense” affordance also causes other consecutive time increments without alert events elsewhere in the timeline to condense or collapse. The condensing pulls other time increments, and any alert event indicators within these other time increments, into view.
- one or more other alert event indicators (alert event indicators 12070 and 12090 ) and associated time increments (e.g., the time increment between multi-hour marker 12092 and time increment marker 12050 -N) are pulled into view by the condensing of the increments between time increment markers 12050 -M and 12050 -B.
- an “Expand” affordance 12088 e.g., a virtual button or other user interface object
- the condensing may be reversed by activation of the “Expand” affordance 12088 in a similar manner as activation of the “Condense” affordance 12084 (e.g., with a tap gesture).
- FIG. 12L-12M illustrate examples in which additional information is displayed in the timeline.
- alert event indicators 12102 , 12104 , and 12106 are aligned in one sub-section (the sub-section delineations not shown in the FIG. 12L ) within the timeline region 12040
- alert event indicators 12108 and 12110 are aligned in another sub-section in the timeline region 12040
- alert event indicators 12112 and 12114 are aligned in a third sub-section in the timeline region 12040 .
- a “Live” label in time position marker 12048 indicates that the video feed displayed in the video region 12038 is the live video feed. While the live video feed is played, microphone icon 12128 (similar in function to microphone icon 12042 ) is displayed; a user may activate the microphone icon 12128 to activate audio capability between the device 504 and the camera 118 .
- event thumbnails 12116 , 12118 , and 12120 may be displayed in the timeline region 12040 .
- Lines 12122 , 12124 , and 12126 visually connect the event thumbnails 12116 , 12118 , and 12120 to respective associated alert event indicators.
- thumbnail 12116 is associated with alert event indicator 12108
- thumbnail 12118 is associated with alert event indicator 12104
- thumbnail 12120 is associated with alert event indicator 12114 .
- the associated event thumbnail is a frame from the portion of the video feed associated with the alert event indicator.
- the user may interact with an event thumbnail.
- the user may tap on an event thumbnail displayed on the touch screen 12002 to jump in the timeline to the time corresponding to the beginning of the video portion with which the tapped event thumbnail is associated.
- the client device 504 may request the stored video associated with that event thumbnail and begin playing back the video stored at that time in the video region 12038 .
- the thumbnail may not be a thumbnail image of the entire frame from the video feed, but rather may be a thumbnail image illustrating only a portion of a frame from the video feed.
- the thumbnail image may be an image portion associated with a zone in which motion was detected.
- the thumbnail image may be an image portion associated with a person, pet, object, or other entity that was detected by way of classification mechanisms or otherwise.
- the thumbnail image may be an image portion associated with an event such as fire or smoke.
- the thumbnail image may be an image portion associated with other sensors located within field of view or otherwise associated with the camera and in response to sensor detections. For example, an image portion associated with the door in response to the door lock being actuated. Or an image portion associated with a window which is monitored by a window sensor in response to the window sensor being actuated (e.g., detecting a window break).
- alert event indicators 12202 , 12204 , 12206 , and 12208 are aligned in one sub-section (the sub-section delineations not shown in the FIG. 12M ) within the timeline region 12040
- alert event indicators 12210 and 12212 are aligned in another sub-section in the timeline region 12040
- alert event indicators 12114 and 12116 are aligned in a third sub-section in the timeline region 12040 .
- a time is shown digitally on time position marker 12048 , indicating that the video feed displayed in the video region 12038 is non-live, historical video. While the non-live video feed is shown, a “go live” button or icon 12218 is displayed; the user may activate the “go live” button 12218 to jump to the current time in the timeline and live video in the video region 12038 .
- event thumbnails 12220 , 12222 , and 12224 and event category icons 12226 , 12228 , 12230 , 12232 , and 12234 are displayed in the timeline region 12040 .
- the event category icons indicate a type or category of an alert event (e.g., motion event, hazard event, sound event, thermostat event).
- Each of the event thumbnails is associated with an alert event indicator.
- Each of the event category icons is associated with an alert event indicator.
- the event thumbnails and the event category icons are visually linked to their associated alert event indicators by lines.
- line 12236 connects event category icon 12226 to alert event indicator 12202
- line 12238 connects event thumbnail 12220 to alert event indicator 12210
- line 12240 connects event category icon 12228 and event thumbnail 12222 to alert event indicator 12212
- line 12242 connects event category icon 12230 to alert event indicator 12204
- line 12244 connects event category icon 12232 and event thumbnail 12224 to alert event indicator 12206
- line 12246 connects event category icon 12234 to alert event indicator 12208 .
- viewing of the video feed e.g., how much the user can view, what the user can do with the video feed
- other functionality may be restricted based on whether the user has a paid subscription. For example, viewing of historical content of the video feed beyond a certain day and/or time (e.g., viewing portions of the video feed that are older than six hours from the current time) may be restricted to subscribed users.
- the smart home application may attempt to promote paid subscriptions to the user.
- the user interface 12028 may display a prompt, pop-up, or other message to the user, informing the user that portions of the video feed beyond the restriction point is limited to paid subscribers and promoting a paid subscription to the user.
- additional functionality limitations may be imposed on non-subscribers. For example, snapshots of event activity (e.g., frames from portions of the video feed with an alert event) are displayed in the video region 12038 to non-subscribers instead of playback of the video feed.
- there are multiple subscription tiers for the service and the functionality and storage limitations and restrictions depend on the particular subscription tier (e.g., the number of days for which video is retained and stored depends on the particular subscription tier).
- a user may scroll the timeline backwards or forwards with a gesture on the timeline region 12040 .
- the scrolling is based also on the type of gesture detected by the smart home application.
- the gesture may be a dragging gesture or a swipe (or flick) gesture.
- a drag gesture the contact stays on and moves on the touch screen 12002 , and the timeline scrolls in accordance with the movement of the contact, as if the contact is dragging the timeline along.
- a swipe or flick gesture the contact moves on and releases from the touch screen 12002 quickly, and the timeline scrolls in the direction of the contact's movement with a decaying speed, e.g., the timeline scrolls with inertial scrolling.
- frames of the extracted-frames video version of the video feed may be displayed in the video region 12038 as the timeline scrolls relative to the time position marker 12048 .
- some frames of the extracted-frames video may be omitted from display as the timeline scrolls past the time position marker 12048 , so that the display of the frames can keep pace with the scrolling of the timeline.
- frames of the extracted-frames video are displayed in the video region 12038 as the timeline scrolls, with inertial scrolling, relative to the time position marker 12048 .
- some frames of the extracted-frames video may be omitted from display as the timeline scrolls past the time position marker 12048 .
- less frames need to be omitted as the display of the frames of the extracted-frames video are better able to keep pace with the scrolling of the timeline.
- an alert events summary view may be displayed. This view may be activated by activation of a predefined affordance (e.g., date indicator 12052 , FIG. 12B ).
- the summary view shows thumbnails of video portions corresponding to alert events arranged chronologically. As the view is scrolled up or down, the video portions are played one at a time.
- the summary view shows the timeline in miniature and thumbnails of video portions corresponding to alert events grouped by zone or event type. Within a respective zone or type, video portion thumbnails are ordered chronologically.
- video feeds from multiple cameras 118 are displayed concurrently.
- video feeds from up to four cameras 118 may be displayed in a two-by-two arrangement on a display (e.g., a display of a tablet computer device).
- a shared timeline for the video feeds may be displayed.
- the shared timeline includes a respective sub-section 12068 for each of the video feeds displayed.
- an event thumbnail shows a cropped and zoomed-in version of the frame selected for the event thumbnail.
- the event thumbnail is cropped and zoomed-in to focus on an area of interest in the frame (e.g., motion activity).
- FIG. 13 illustrates a flowchart diagram of a method 1300 for presenting a timeline-video relationship in accordance with some implementations.
- the method 1400 is performed at an electronic device with one or more processors, memory, a display (e.g., a computer display, a television display, a mobile device display, a touchscreen display), and optionally a touch-sensitive surface (e.g., a touchscreen display, a touchpad), an accelerometer, and/or an audio input device.
- the method 1400 is performed by a client device 504 ( FIGS. 5A-5B and 8A-8B ) or 1504 ( FIG.
- the method 1400 is governed by instructions that are stored in a non-transitory computer readable storage medium (e.g., the memory 806 ) and the instructions are executed by one or more processors of the electronic device (e.g., the CPUs 802 ).
- a non-transitory computer readable storage medium e.g., the memory 806
- the instructions are executed by one or more processors of the electronic device (e.g., the CPUs 802 ).
- the electronic device displays, via the display of the electronic device, a user interface having a first region and a second region ( 1302 ).
- the client device 504 displays a user interface 12028 on the touch screen 12002 .
- the user interface 12028 includes a video region 12038 and a timeline region 12040 .
- the electronic device receives, and displays in the first region of the user interface, a live video stream of a physical environment captured by a video camera located remotely from the electronic device, wherein at least some of the live video stream is recorded at a remote server ( 1304 ).
- the client device 504 receives a video feed (e.g., video captured by camera 118 ) from a server system 508 / 552 ; the camera 118 transmits captured video to the server system 508 / 552 , which stores the at least some of the video and transmits at least some of the video to the client device 504 .
- the video feed is displayed in video region 12038 of the user interface 12028 .
- the video feed includes a live video stream.
- the video feed includes recorded video of the live video stream (e.g., past recordings of the live video stream).
- the video feed is video of a physical environment captured by the camera 118 , which is located remotely from the client device 504 .
- the server 508 / 552 is also remotely located from the client device 504 .
- the electronic device displays, in the second region of the user interface, a timeline corresponding to a timespan for a first portion of a duration during which the live video stream may have been recorded ( 1306 ).
- the client device 504 displays in the timeline region 12040 of the user interface 12028 a timeline.
- the timeline includes multiple time increments 12050 .
- the portion of the timeline displayed in the timeline region 12040 at a given instance, represented by the time increments 12050 displayed in the region 12040 at the given instance, corresponds to a timespan for a portion of a duration (e.g., a continuous time duration) during which the video feed may have been recorded (e.g., during the continuous time duration, video feed from the camera 118 may be recorded at the server system 508 / 552 or not recorded (e.g., because the camera 118 was turned off, camera 118 lost network connectivity, recording was beyond limits of the associated user's subscription tier)).
- the timespan is an amount or span of time (e.g., some number of hours) at a certain point in history (e.g., the duration).
- the span of time between 3 AM to 10 AM on a certain day is a different timespan from the span of time between 10 AM to 3 PM on the same day, or from 3 AM to 10 AM on another day.
- a timespan in the timeline is the amount of time corresponding to the portion of the timeline that is displayed in the timeline region 12040 at any given moment.
- the electronic device transitions ( 1310 ) the displayed timeline to a new timeline that corresponds to the timespan for the second portion, and while transitioning the displayed timeline to the new timeline, displays ( 1312 ), in the first region of the user interface, a subset of video frames representing the first and/or second portion of the duration during which the live video stream may have been recorded.
- the client device 504 transitions the displayed timeline to another timespan with another set of time increments 12050 (e.g., scroll the timeline such that another timespan is displayed in the timeline region 12040 ).
- the client device 504 displays in the video region 12038 frames from the extracted-frames video(s) for the time duration portion(s) displayed in the timeline region 12040 during the transition; frames from the extracted-frames videos are displayed in the video region 12038 for the time period displayed in the timeline region 12040 while the timeline scrolls in accordance with the gesture.
- the electronic device obtains the subset of video frames separately from receiving the live video stream.
- the client device 504 obtains the extracted-frames video separately from the video feed.
- the video feed and the extracted-frames video are separate transmissions from the server system 508 / 552 to the client device 504 .
- the electronic device displays in the first region a recorded portion of the live video stream recorded during the second portion of the duration.
- the client device 504 plays the video feed in the video region 12038 (e.g., resume playback of the video feed) instead of displaying frames from the extracted-frames video.
- the portion of video feed where playback is resumed from is a portion associated with the time duration portion displayed in the timeline at the end of the scrolling.
- the second portion of the duration includes the current time
- displaying in the first region a recorded portion of the live video stream includes displaying in the first region the live video stream. If the transition (e.g., the timeline scrolling) transitions the timeline to the current time (i.e., the end of the timeline closest to the current or present time), the client device 504 plays the live video stream in the video region 12038 .
- the user interaction includes a gesture (e.g., a gesture on touchscreen display 12002 ) configured to activate a scrolling effect on the timeline.
- a gesture e.g., a gesture on touchscreen display 12002
- the user interaction indicating the desire to move the span may be a gesture that activates a scrolling effect on the timeline.
- the gesture is one of a swipe gesture or a dragging gesture.
- the scrolling gesture may be a swipe gesture or a dragging gesture in the timeline region 12040 .
- Other gestures that may be configured to activate the scrolling effect include a flick gesture in the timeline region 12040 or a tap gesture on a predefined portion of the user interface 12028 (e.g., tap on the top of the user interface 12028 near the top edge of the touch screen 12002 or on a displayed affordance (e.g., “Go Live” affordance 12218 ) to have the timeline automatically scroll to the current time, tap on the bottom of the user interface 12028 near the bottom edge of the touch screen 12002 to have the timeline scroll automatically to the back limit of the timeline (e.g., time corresponding to the limit of possible video recording and storage time based on the user's subscription tier)).
- the electronic device receives information indicating one or more alert events within the timespan, and in accordance with the alert events information, displays on the timeline an alert event indicator for each of the alert events within the timespan.
- the client device 504 receives alerts events information or data from the server system 508 / 552 .
- the alert events information is received in the form of metadata.
- the alert events information include data indicating alert events that were detected by smart devices in the operating environment 500 / 550 during the time duration in the timeline.
- Alert event indicators e.g., alert event indicators 12054 , 12056 , 12058 , 12060 , etc.
- alert event indicators are displayed in the timeline for each alert event in the time duration in the timeline.
- the subset of video frames includes a first sub-subset of video frames and a second sub-subset of video frames distinct from the first sub-subset, the first sub-subset of video frames is associated with an alert event of the alert events, the second sub-subset of video frames is associated with no alert event, the first sub-subset has a first frame rate, and the second sub-subset has a second frame rate lower than the first frame rate.
- frames may be extracted at different rates depending on whether a frame is around or proximate in time to an alert event or cuepoint (e.g., associated with an alert event).
- Frames around or proximate in time to an alert event or cuepoint are extracted at a higher rate than frames not around or proximate to an alert event or cuepoint.
- the frames that were extracted at a higher rate become a set of frames within the extracted-frames video with a higher frame rate (i.e., more frames per unit time; the frames are denser) than the set of frames that were extracted at the lower rate (i.e., less frames per unit time; the frames are less dense).
- the timeline when the timeline moves, in response to a timespan-moving user interaction, to a time with an alert event, more frames may be displayed than when the timeline moves in response to a timespan-moving user interaction to a time without an alert event; the higher frame rate in the set of frames proximate to the alert event/cuepoint supplies more frames for display than the lower frame rate set of frames not proximate to any alert event/cuepoint.
- the alert event indicator for an alert event includes a pill object, the pill object has a length parallel to the timeline, and the length represents the duration of the alert event.
- the alert event indicator may be displayed as a pill graphical object with a length parallel to the timeline.
- FIG. 12B shows alert event indicators 12054 , 12056 , 12058 , and 12050 as pill objects with different lengths. The lengths represents the durations of the corresponding events.
- an alert event indicator indicates an event without a specific duration or where duration is not relevant (e.g., a toggle from one state to another)
- the alert event indicator may be displayed as a pill object with a default length or as a pill object that has devolved into another shape (e.g., circular shape as with alert event indicator 12060 ).
- the alert events include alert events of one or more alert event types, the types including one or more of: motion events in a defined zone, motion events not in a defined zone, hazard events, sound events, thermostat events, and door events.
- the alert events detected by the smart devices in the environment belong to one of multiple types, which may include motion events in a zone defined by a user (and, in some implementations, where motion in each defined zone is its own type), motion events not in a defined zone, hazard events (e.g., smoke, fire, gas leak, carbon monoxide), sound events (e.g., sudden sounds over a decibel threshold), thermostat events (e.g., change in ambient temperature, change in temperature settings), and door events (e.g., smart door lock engaged/disengaged, door open/closed).
- hazard events e.g., smoke, fire, gas leak, carbon monoxide
- sound events e.g., sudden sounds over a decibel threshold
- thermostat events e.g., change in ambient temperature,
- an alert event indicator for an alert event of a first type of the alert event types differs from an alert event indicator for an alert event of a second type of the alert event types in at least one visual characteristic.
- the differing visual characteristic is color.
- Alert event indicators corresponding to different alert event types may be distinguished visually in the timeline region 12040 by differences in a visual characteristic. For example, alert event indicators may differ in color, where the color represents a respective alert event type.
- alert event indicators of alert events types have different visual characteristics based on the smart device that detected the alert event. For example, alert events indicators for alert events detected by one smart device may have one color, and alert events indicators for alert events detected by another smart device may have a different color.
- alert event indicators for alert events of a first type of the alert event types are arranged along a first linear path, parallel to the timeline, in the second region; alert event indicators for alert events of a second type of the alert event types are arranged along a second linear path, parallel to the first linear path and to the timeline, in the second region; and the first linear path and the second linear path are parallel to each other and to the timeline.
- Alert event indicators of different types may be arranged in respective parallel linear paths (e.g., columns) by alert event type in the timeline region 12040 . For example, FIG.
- each linear path or column has its own sub-section (e.g., sub-sections 12068 , FIG. 12G ) in the timeline region 12040 .
- the electronic device 504 displays in the second region one or more event type icons.
- Each event type icon is associated with an alert event indicator and indicating an event type of an alert event to which the alert event indicator corresponds. Icons identifying alert event types (e.g., icons 12226 , 12228 , 12230 , 12232 , and 12234 , FIG. 12M ) may be displayed in the timeline region 12040 .
- Each event type icon is associated with a respective alert event indicator, and is visually linked to the associated alert event indicator by a line (e.g., line 12236 , 12242 , 12246 ).
- displaying the timeline includes displaying a plurality of consecutive time increments, the plurality of consecutive time increments corresponding to a cumulative time duration and not associated with any alert event. Further, while displaying the plurality of consecutive time increments, the electronic device displays in the second region a first affordance to collapse the plurality of consecutive time increments into a cumulative time increment in the timeline, the cumulative time increment corresponding to the cumulative time duration. The electronic device detects a user interaction activating the first affordance, and in response to detecting the user interaction activating the first affordance, replaces display of the plurality of consecutive time increments with display of the cumulative time increment.
- the client device 504 displays time increments in the timeline. For example, in FIG.
- one-hour increments are displayed in the timeline in the timeline region 12040 .
- an increment with one or more alert events e.g., the 9 AM increment starting at marker 12050 -B in FIG. 12I
- takes up more space in the timeline region 12040 than a time increment without an alert event e.g., the 3 AM increment between markers 12050 -M and 12050 -L in FIG. 12I .
- there are multiple consecutive time increments that do not have alert events e.g., the six one-hour increments between markers 12050 -B and 12050 -M, FIGS.
- an affordance e.g., affordance 12084 for condensing or collapsing these increments into one increment equivalent in time (e.g., condense the six one-hour increments into a 6-hour increment corresponding to marker 12092 , FIG. 12K ) is displayed.
- the client device 504 determines whether there are multiple consecutive time increments without alert events.
- the consecutive increments are replaced in the timeline region 12040 with an equivalent increment (e.g., the six one-hour increments are replaced with a 6-hour increment corresponding to marker 12092 , FIG. 12K ).
- the electronic device while displaying the cumulative time increment, displays in the second region a second affordance to expand the cumulative time increment into the plurality of consecutive time increments, detects a user interaction activating the second affordance, and in response to detecting the user interaction activating the second affordance, replaces display of the cumulative time increment with display of the plurality of consecutive time increments.
- a second affordance to expand is displayed in the timeline region 12040 (e.g., in proximity to the equivalent increment in the timeline).
- the equivalent increment is replaced in the timeline region 12040 with the consecutive increments (e.g., the 6-hour increment corresponding to marker 12092 is replaced with the six one-hour increments between markers 12050 -M and 12050 -B).
- the electronic device displays in the second region a thumbnail associated with a first alert event indicator of the alert event indicators, where the thumbnail is displayed proximate to the first alert event indicator, and the thumbnail includes a frame from a recorded portion of the live video stream proximate in time to an alert event to which the first alert event indicator corresponds.
- One or more thumbnails e.g., thumbnails 12116 , 12118 , 12120 , FIG. 12L ; thumbnails 12220 , 12222 , 12224 , FIG. 12M ) may be displayed in the timeline region 12040 .
- Each displayed thumbnail is associated with a respective alert event indicator and displayed in proximity to the associated alert event indicator (e.g., in FIG.
- thumbnail 12116 is associated with alert event indicator 12108 ), and a thumbnail is visually linked to its associated alert event indicator by a line (e.g., thumbnail 12116 is linked to alert event indicator 12108 by line 12122 ).
- Each thumbnail includes a frame from a portion of the video feed proximate in time to the alert event of the associated alert event indicator. In some implementations, the frame in a thumbnail may be different from the frames in the extracted-frames video for the same time period.
- the electronic device displays in the second region, for a predefined time increment unit on the timeline, up to a predefined number of thumbnails associated with respective alert event indicators. For example, for a one-hour increment in the timeline, there may be a limit of up to two thumbnails that may be displayed for alert event indicators in that one-hour increment.
- the limit is predefined (e.g., coded into the application).
- the limit scales based on the screen size (e.g., size of touch screen 12002 , which depends on the particular client device) and how much of the screen space is occupied by the timeline region 12040 .
- the electronic device displays a time marker on the timeline.
- the client device 504 displays a time position marker 12048 in the timeline region 12040 .
- the time displayed with the time position marker 12048 and optionally with the date indicator 12052 is the time closest to the time on the timeline corresponding to the pixel position of the time position marker 12048 relative to the timeline. For example, if there are 360 pixels between a 10-PM-and-11-PM increment, if the time position marker 12048 aligns with the 180th pixel, the time “10:30:00 PM” is displayed as the time marked by the time position marker 12048 . In some implementations, when the video feed is being played in the video region 12038 , the time displayed is the timestamp of the frame of the video feed being played.
- the pixel position of the time position marker 12048 relative to the timeline governs the time that is displayed with the time position marker 12048 .
- the client device 504 in accordance with a determination that a time on the timeline marked by the time position marker 12048 corresponds to a respective alert event (e.g., the time position marker 12048 intersects with an alert event indicator) and the alert event is motion in a defined zone, the client device 504 highlights the defined zone while playing the portion of the video feed with the alert event. For example, in FIG. 12H , zones 12078 , 12090 , and 12082 are highlighted in the playing video feed in the video region 12038 when the time position marker 12048 intersects with alert event indicators 12054 , 12056 , and 12058 .
- the client device 504 requests frames of the extracted-frames video(s) from the server 508 / 552 as the user interacts with the timeline to move the timespan.
- the client device 504 may request frames from the server as needed or in blocks or intervals (e.g., 20-minutes blocks, one-hour blocks).
- frames of the extracted-frames video are requested based on a sliding window around the current manual scrolling position; the frames are decoded for display based on the sliding window as well.
- frames of the extracted-frames video are requested independently of the scrolling position (e.g., continuously or periodically requested and streamed to the client device).
- the timespan moves along automatically; the timeline scrolls automatically as the video feed plays.
- the time position marker 12048 acts as a position marker in the video feed.
- the frames displayed while the video feed is played are frames of the video feed.
- the ordering of the linear paths/columns/sub-sections of alert event indicators in the timeline region 12040 correspond to the ordering of defined zones in the video feed. For example, if there are three zones in the video feed going in a certain order from left to right, the columns for the alert event indicators corresponding to these zones have the same relative order going from left to right within the timeline region 12040 .
- a time increment with alert event(s) has a longer display length (e.g., the increment between markers 12050 -A and 12050 -B, FIG. 12B ) in the timeline region 12040 than an increment without alert event(s) (e.g., the increment between markers 12050 -B and 12050 -C, FIG. 12B ).
- FIGS. 14A-14L illustrate example screenshots of user interfaces on a client device in accordance with some implementations.
- the user interfaces depicted in FIGS. 14A-14L are user interfaces for a smart home application on a client device (e.g., client device 504 ), such as a smart phone or a tablet computer.
- client device 504 such as a smart phone or a tablet computer.
- FIG. 14A illustrates a user interface with a video region and a timeline in a timeline region.
- the flow of time in the timeline goes from top to bottom.
- the timeline is being manipulated by the user, and the time position marker is marking a time in the past that doesn't have an alert event.
- the 8-AM to 9-AM increment which includes an alert event, occupies more display length than the 9-AM to 10-AM segment, which does not include an alert event.
- FIG. 14B illustrates the timeline being manipulated by the user, such that the time position marker is marking a time in the past with an alert event; the time position marker overlaps with an alert event indicator. The zone corresponding to the alert event is highlighted in the video.
- FIG. 14C illustrates the time position marker is marking a time in the past with multiple, concurrent alert events; the time position marker overlaps with multiple alert event indicators. The zones corresponding to the concurrent alert events are highlighted in the video.
- FIG. 14D illustrates the time position marker is marking the present time; the video is a live video stream.
- FIG. 14E illustrates an alert events summary, or “daily brief” view, which includes the timeline in miniature and to the side, and a summary of alert events for a time period (e.g., the last 24 hours, the current calendar day, etc.).
- the summary of alert events is presented as one or more sets of thumbnails of portions of the video feed that correspond to alert events. Each set corresponds to a by event type (where motion in a zone may count as an individual type). Within a set, the video feed portion thumbnails may be ordered chronologically or by importance of the alert event as determined by the server system.
- this summary view may be activated by the client-side module 502 (e.g., event review interface module 82810 ) at the client device (e.g., client device 504 ) in response to activation of a predefined affordance in the user interface at the client device by a user.
- client-side module 502 e.g., event review interface module 82810
- client device e.g., client device 504
- this summary view may be activated by the client-side module 502 (e.g., event review interface module 82810 ) at the client device (e.g., client device 504 ) in response to activation of a predefined affordance in the user interface at the client device by a user.
- FIG. 14F illustrates a user interface with a video region and a timeline in a timeline region. The flow of time in the timeline goes from bottom to top. A “condense” affordance is displayed for a set of consecutive time increments without an alert event.
- FIG. 14G illustrates the consecutive time increments without an alert event collapsed into an equivalent time increment marker as a result of activation of the “condense” affordance.
- An “expand” affordance is displayed for the collapsed equivalent time increment. Activation of the “expand” affordance reverses the collapsing.
- FIG. 14H illustrates respective alert event indicators corresponding to respective alert events displayed on the timeline, and thumbnails of respective video portions corresponding to the respective alert events displayed adjacent to the corresponding alert event indicators.
- FIG. 14I illustrates another example alert events summary view, with video portions corresponding to alert events ordered chronologically. The videos are played one at a time as the summary view is scrolled up or down.
- FIG. 14J illustrates a video view in landscape orientation, with the timeline as an overlay on the right side.
- FIG. 14K illustrates a user interface with a video region and a timeline in a timeline region.
- event thumbnails are displayed along with alert event indicators.
- Each displayed thumbnail is associated with an alert event indicator, and is connected to that alert event indicator visually by a line.
- There are multiple columns of alert event indicators, and with different colors for the alert event indicators of each column e.g., alert event indicators of a first column are colored gray, alert event indicators of a second column are colored red, and alert event indicators of a third column are colored light green).
- FIG. 14L illustrates a user interface with a video region and a timeline in a timeline region.
- event category icons as well as alert event indicators and event thumbnails, are displayed.
- Each displayed event category icon is associated with an alert event indicator and optionally a displayed event thumbnail, and is connected to that alert event indicator (and the optionally associated event thumbnail) visually by a line.
- FIG. 15 illustrates an operating environment with a server system in communication with client devices and smart devices, in accordance with some implementations.
- the operating environment 1500 includes a server system 1501 that includes multiple modules. In some implementations, these modules may themselves be implemented as server systems.
- video server system 552 and/or hub device server system 508 are implemented as server system 1501 .
- operating environment 500 or 550 may be implemented in the form of operating environment 1500 .
- server system 1501 is communicatively coupled to one or more smart devices 1502 (e.g., smart devices 204 , including camera 118 ) and one or more client devices 1504 (e.g., client device 504 ) with a client side module 1506 (e.g., client side module 502 ).
- the communicative coupling may be through one or more networks (e.g., networks 162 ), not shown in FIG. 15 for sake of convenience and brevity.
- the server system 1501 is remote from the smart device(s) 1502 and the client device(s) 1504 .
- the smart device(s) 1502 and the client device 1504 are associated with a user and the use's corresponding user account.
- the camera 118 when powered on and video capture is enabled, continuously captures video at a predetermined resolution (e.g., 1080P, 4K). In some implementations, the camera 118 also performs motion detection pre-processing and/or other pre-processing on the captured video. If the camera performs pre-processing on the video, the camera 118 generates metadata associated with the captured video in accordance with the pre-processing.
- a predetermined resolution e.g. 1080P, 4K.
- the camera 118 also performs motion detection pre-processing and/or other pre-processing on the captured video. If the camera performs pre-processing on the video, the camera 118 generates metadata associated with the captured video in accordance with the pre-processing.
- the camera 118 transmits the captured video (raw or pre-processed) and the metadata ( 15102 ) to the server system 1501 .
- Other smart devices 1502 e.g., hazard detector, thermostat
- the metadata transmitted by the other devices include information on detected alerts or events.
- the received video and metadata are received by a front end 1508 .
- the front end 1508 transmits the received captured video and metadata ( 15104 ) to the video processing and event notification system 1512 for further processing, and ( 15106 ) to the storage system 1514 (e.g., a database system) for storage.
- the storage system 1514 e.g., a database system
- the video processing and event notification system 1512 performs various processing on the video.
- the video processing and event notification system 1512 also processes the received metadata to identify alerts and events.
- the video processing and event notification system 1512 processes the video to further detect alerts and events, such as motion events, and to correlate events identified from the metadata to portions of the video.
- the video processing and event notification system 1512 also selects frames of the video for use in event thumbnails, and generates the thumbnails from the selected frames.
- the video processing and event notification system 1512 also generates event notifications, in accordance with the events information contained in the metadata and obtained from the video processing, and transmits the event notifications ( 15108 ) to the client device 1504 . Further, in some implementations, the video processing and event notification system 1512 identifies frames for extraction by the frame extraction and encoding system 1516 based on the events information.
- the video processing and event notification system 1512 transmits the events information and the generated thumbnails ( 15110 ) to the storage database 1514 for storage. In some implementations, the video processing and event notification system 1512 also generates frames information based on the events information; the frames information indicates timestamps of frames to be extracted for use in the generation of extracted-frames videos.
- the captured video and corresponding metadata and event information that are stored in the storage system 1514 has a upper limit. What the upper limit is for the given camera 118 depends on whether the user account with which the camera 118 is associated includes a subscription to a video service with which the server system 1501 is associated. If the user account includes a subscription, the upper limit is higher than if the user account does not includes a subscription (e.g., the last 30 days with a subscription vs. the last 10 days without a subscription).
- the front end 1508 transmits captured video retrieved ( 15106 ) from the storage system 1514 , and events information and event thumbnails obtained ( 15112 ) from the video processing and events notification system 1512 to the client 1504 ( 15114 ).
- the frame extraction and encoding system 1516 extracts frames from the captured video and encodes the extracted frames into extracted-frames videos.
- the frame extraction and encoding system 1516 retrieves the captured video 15116 from storage system 1514 (or the front end 1518 transmits the captured video to the frame extraction and encoding system 1516 as well as to storage system 1514 and video processing and event notification system 1512 ), and extracts frames from the captured video.
- the frame extraction and encoding system 1516 generates extracted-frames video by encoding the extracted frames in a predetermined format (e.g., H.264) and stores the extracted-frames video in extracted-frames video storage system 1518 ( 15122 ).
- a predetermined format e.g., H.264
- the frame extraction and encoding system 1516 extracts frames from captured video (retrieved from storage system 1514 ) based on frames indicated by the video processing and event notification system 1512 .
- the frame extraction and encoding system 1516 requests frames information ( 15118 ) from the video processing and event notification system 1512 , and in response to the request, the video processing and event notification system 1512 transmits frames information ( 15120 ) to the frame extraction and encoding system 1516 .
- the frame extraction and encoding system 1516 extracts the frames from the captured video in accordance with the frames information and encodes the frames to generate the extracted-frames videos.
- the client-side module 1506 makes a request for extracted-frames video ( 15124 ) to the server system 1501 through an application programming interface 1510 .
- the client-side module 1506 makes the request in response to a timeline scrolling input by a user.
- the front end 1508 transmits the request ( 15126 ) to the frame extraction and encoding system 1516 , which retrieves the extracted-frames video ( 15122 ) from the extracted-frames video storage 1518 , and transmits the extracted-frames video ( 15128 ) to the front end 1508 , which transmits the extracted-frames video ( 15130 ) to the client device 1504 .
- the video processing and event notification system 1512 also selects frames from the video to serve as event thumbnails (e.g., event thumbnails 12116 , 12118 , 12120 , 12220 , 12222 , 12224 ) for events.
- the video processing and event notification system 1512 processes the video and the metadata to identify event cuepoints and significant changes or transitions in the video, among other things. Based on identified cuepoints and significant changes, the video processing and event notification system 1512 selects, for an event, a frame to be a representative for the event, and generates the event thumbnail from the selected frame.
- the server system 1501 generates extracted-frames videos from the original video feeds. Extracted-frames video is displayed at the client device 1504 whenever a user is manually scrolling the timeline (including inertial scrolling stemming from manual scrolling, e.g., inertial scrolling from a swipe gesture), i.e., scrubbing the video feed, on the client device 1504 .
- the user is not scrolling the timeline (i.e., the video is left to play back automatically), the captured video is played.
- FIGS. 16A-16B illustrate a flow diagram of an example process 1600 for generating extracted-frames video in accordance with some implementations.
- the process 1600 is implemented in operating environment 1500 .
- the front end 1508 receives ( 1602 ) captured video and metadata from smart devices 1502 .
- the front end 1508 receives raw or pre-processed captured video from a camera 118 .
- the front end 1508 also receives event metadata from the camera 118 and other smart devices.
- the front end 1508 transmits ( 1604 ) the video and the metadata to the video processing and event notification system 1512 (hereinafter “video processing system” for convenience).
- video processing system for convenience
- the front end 1508 also transmits the video and optionally the metadata to a storage system 1514 for storage.
- the video processing system 1512 receives ( 1606 ) captured video and metadata, and processes ( 1608 ) the video and the metadata.
- the video processing system 1512 analyzes the video to detect motion events (e.g., by determining cuepoints corresponding to motion events), and correlates portions of the video to events indicated in the metadata.
- the video processing system 1512 generates ( 1610 ) frames information based on the processing of the video and the metadata.
- the video processing system 1512 generates frames information that identifies the frames for extraction in order to generate extracted-frames video.
- the frames information includes timestamps of the frames to be extracted.
- blocks 1602 , 1604 , 1606 , 1608 , and 1610 are repeated periodically as video and metadata is continuously received from smart devices 1502 .
- the frame extraction and encoding system 1516 periodically requests ( 1612 ) frames information from the video processing system 1512 . For example, requests may be made every minute, in order to generate extracted-frames video that covers up to the current time.
- the video processing system 1512 receives ( 1614 ) the request and transmits ( 1616 ) the frames information to the frame extraction and encoding system 1516 .
- the frame extraction and encoding system 1516 receives ( 1618 ) the frames information, and extracts ( 1620 ) frames from video retrieved from the storage system 1512 in accordance with the frames information.
- the frame extraction and encoding system 1516 encodes ( 1622 ) the extracted frames into extracted-frames video, which is stored in extracted-frames video storage system 1518 .
- FIG. 17 illustrates a flow diagram of an example process 1700 for displaying extracted-frames video in accordance with some implementations.
- the process 1700 is implemented in operating environment 1500 .
- the front end 1508 transmits ( 1702 ) video and events information to a client device 1504 .
- a live video feed and events information for display in a timeline format is streamed to the client device 1504 .
- event thumbnails are also transmitted to the client device 1504 .
- the client device 1504 receives ( 1704 ) the video and events information, and displays ( 1706 ) the video and a timeline.
- the video is played back, and a timeline is displayed in accordance with the events information (e.g., the timeline is populated with alert events indicators and optionally event thumbnails, as in FIGS. 12B-12M ).
- the client device 1504 makes ( 1708 ) a request to the front end 1508 for extracted-frames video.
- the request is made through an API 1510 .
- the request may be made periodically (e.g., every minute, every 20 minutes, every hour) and/or on-demand whenever user scrolling of the timeline is detected.
- the request is for the extracted-frames video for a certain time period or for a particular frame from the extracted-frames video for a certain time period.
- the front end 1508 receives the request and transmits ( 1710 ) the request to the frame extraction and encoding system 1516 .
- the frame extraction and encoding system 1516 receives ( 1712 ) the request, retrieves the requested extracted-frames video from the extracted-frames video storage system 1518 , and transmits ( 1714 ) the retrieved video to the front end 1508 .
- the front end 1508 receives the video and transmits ( 1716 ) the video to the client device 1504 .
- the client device 1504 receives ( 1718 ) the extracted-frames video, and decodes and displays ( 1720 ) the extracted-frames video whenever the user scrolls the timeline. Extracted-frames video received by the client device 1504 may be cached (e.g., memory 806 as cached extracted-frames videos 836 ), so that multiple downloads of the same extracted-frames videos are reduced.
- FIGS. 18A-18D illustrate diagrams showing an example frame extraction arrangement for a video feed segment and a frames arrangement in the corresponding extracted-frames video, in accordance with some implementations.
- extracted-frames video covering a predefined time period up to approximately the current time is stored in the extracted-frames video storage 1518 .
- the predefined time period is the last 24 hours.
- extracted-frames video is generated from the video feed in segments, of predefined time length, of the predefined time period. In some implementations, each segment is 20 minutes long. In some implementations, each segment is 1 hour long.
- FIG. 18A is a diagram illustrating the last 24 hours of a video feed 1800 divided into past segments 1802 - 12 through 1802 - n and a live segment 1804 . Extracted-frames video is generated for each of these segments 1802 and 1804 .
- an extracted-frames video for the live segment 1804 is generated and periodically updated (e.g., re-encoded with additional and possibly different frames in accordance with additional events information) until the extracted-frames video for the live segment 1804 covers the predefined segment time length.
- the extracted-frames video for the live segment 1804 may have different frames minute-by-minute.
- the extracted-frames video for the live segment 1804 When the extracted-frame video for the live segment covers the predefined segment time length, the extracted-frames video for the live segment 1804 is completed and becomes an extracted-frames video for a past segment 1802 (i.e., no longer updated); the live segments 1804 becomes the most recent past segment 1802 . A new extracted-frames video for a new live segment 1804 is generated.
- the extracted-frames video for the live segment 1804 may be thought of as a cup that starts empty and is periodically being filled with water. When the cup is completely filled, the cup is moved aside and no longer being filled, and a new empty cup takes its place.
- each of the extracted-frames videos for the past segments 1802 is an extracted-frames video for a previously live segment, where the extracted-frames video has since been “locked-in” once the live segment becomes a past segment.
- the predefined segment length is 20 minutes; the extracted-frames videos corresponding to the past segments 1802 are each 20 minutes long, and the extracted-frames video corresponding to the live segment 1804 grows from 0 minutes long until 20 minutes long. In some implementations, the predefined segment length is 60 minutes; the extracted-frames videos corresponding to the past segments 1802 are each 60 minutes long, and the extracted-frames video corresponding to the live segment 1804 grows from 0 minutes long until 60 minutes long.
- frames are extracted from the video feed, for encoding of extracted-frames video, at a predefined average rate.
- the predefined average rate is, for example, 20 frames per 20 minutes or 60 frames per 60 minutes. Thus, if there are no events, a frame is extracted from the original video per minute.
- the predefined average rate of frame extraction described above is also the constant rate of frame extraction.
- frames are extracted at the rate regardless of whether a frame is in proximity to a detected event or not.
- frame may be extracted without first requesting frames information from the video processing system 1512 since the extraction rate is a predefined constant.
- frames are extracted at variable rates based on events detected in the video feed and by other smart devices 204 , such that more frames are extracted from the video feed in proximity to a detected event, while maintaining the predefined average rate.
- an alert event e.g., near a cuepoint
- frames are extracted closer together.
- frames are extracted farther apart in portions without alert events.
- FIG. 18B includes a diagram 1806 illustrating frames of a segment (e.g., segment 1802 - 2 ) of the video feed 1800 that are indicated for extraction.
- segment 1802 - 2 cuepoints 1811 and 1813 were detected by the video processing system 1512 .
- frame sets 1808 , 1810 , 1812 , and 1814 are indicated for extraction in frames information generated by the video processing system 1512 .
- the video processing system 1512 generates frames information that indicates the timestamps of each frame in the frame sets 1808 , 1810 , 1812 , and 1814 for extraction.
- Frame sets 1810 and 1814 are in proximity to cuepoints 1811 and 1813 , respectively, and thus the frames in those frame sets are closer together than the frames in frame sets 1808 and 1812 .
- the frames not in proximity to detected events/cuepoints may be extracted at the predefined average rate, or at a rate even less than the predefined average rate (for a smoother transition between frames not in proximity to an event/cuepoint to frames in proximity to an event/cuepoint, and vice versa).
- the encoding is done using the H.264 format. It should be appreciated that other encoding formats are possible.
- FIG. 18C includes a diagram illustrating a GOP 1816 for the extracted-frames video encoded from frames extracted from segment 1802 - 2 in accordance with the frame indications in diagram 1806 .
- the GOP 1816 includes an I-frame 1818 and P-frames 1820 .
- the frames indicated in diagram 1806 are encoded into either an I-frame or a P-frame.
- the I-frame 1818 may be any one of the indicated frames in diagram 1806 .
- the I-frame 1818 and P-frames 1820 follow the time spacing of the frame sets 1808 , 1810 , 1812 , and 1814 as shown in FIG.
- a P-frame expresses a delta or a difference from the I-frame; higher compression rates may be achieved by encoding the extracted-frames video as including a reference frame (the I-frame) and deltas from the reference frame (the P-frames).
- a GOP may have multiple I-frames, and the P-frames within the GOP refer to a different I-frame within the GOP depending on their respective positions within the GOP.
- a GOP has a single I-frame and the P-frames within the GOP refer to the single I-frame.
- FIG. 18D illustrates a set of extracted-frames videos 1850 corresponding to the last 24 hours of the video feed 1800 diagrammed in FIG. 18A .
- the extracted-frames videos 1850 include static (i.e., no longer updated) extracted-frames videos 1852 corresponding to the past segments 1802 and dynamic (i.e., periodically updated until grown to the predefined segment time length) extracted-frames video 1852 corresponding to the live segment 1804 .
- Static extracted-frames video 1852 - 2 corresponds to segment 1802 - 2 ; static extracted-frames video 1852 - 2 includes the GOP 1816 .
- the other static extracted-frames videos 1852 also include their respective GOPs
- the dynamic extracted-frames video 1854 also includes a GOP.
- Extracted-frames video 1854 is periodically re-encoded by the frame extraction and encoding system 1516 to include additional frames and possibly different frames until the length of the extracted-frames video 1854 has grown to the predefined segment time length.
- FIG. 19 is a flow diagram illustrating a method 1900 of generating and transmitting video for viewing at a client device, in accordance with some implementations.
- the method 1900 is implemented at a server system 1501 in an operating environment 1500 .
- the server system receives ( 1902 ) a video stream from a remote video camera, where the video stream comprises a plurality of video frames.
- the server system 1502 e.g., the front end 1508 ) receives a video feed (e.g., captured video) from a camera 118 .
- the video feed includes many video frames (e.g., the video feed received is 1080P video at 24 frames per second).
- the server system 1501 also receives metadata from the camera 118 and other smart devices 1502 .
- the server system selects ( 1904 ) a plurality of non-contiguous frames from the video stream, the plurality of non-contiguous frames being associated with a predetermined time interval.
- the video processing system 1512 processes the video feed and metadata to select and identify certain frames within a time interval (e.g., the interval corresponding to the current live segment 1804 ; the interval is predetermined at least to the extent that the interval has a predefined maximum length and the interval corresponds to a particular interval of actual time and date) for extraction.
- the frames are identified in accordance of an average rate of 1 frame per minute. Thus, at least some of the identified frames are non-contiguous, in that the identified frames are frames that do not immediately succeed one another in sequence in the video feed.
- the video processing system 1512 generates frames information with the selected and identified frames.
- the server system encodes ( 1906 ) the plurality of non-contiguous frames as a compressed video segment associated with the time interval.
- the frame extraction and encoding system 1516 extracts the selected frames from the video feed and encodes the extracted frames, using a video compression format (e.g., H.264), into an extracted-frames video.
- the extracted-frames video has a lower resolution than the original video feed (e.g., 360P for the extracted-frames video vs. 1080P for the original video feed).
- the extracted-frames video has the same resolution than the original video feed.
- multiple versions of the extracted-frames video are encoded—one version with lower resolution than the original video feed and one with the same resolution as the original video feed.
- the server system receives ( 1908 ) a request from an application running on a client device to review video from the remote video camera for the time interval.
- the front end 1508 receives a request from the client-side module 1506 of a client device 1504 for extracted-frames video associated with the camera 118 for the time interval.
- the request is made through an API 1510 .
- the server system transmits ( 1910 ) the video segment to the client device for viewing in the application.
- the server system 1501 transmits the extracted-frames video to the client device 1504 , where the client-side module 1506 can decode the extracted-frames video for display in a user interface of the module.
- the predetermined time interval has a length of one hour. In some implementations, the predetermined time interval has a length of twenty minutes.
- the extracted-frames video corresponds to a segment of the video feed with a predefined length of 20 minutes or an hour (or up to that predefined length if the segment is the live segment).
- the non-contiguous frames are spaced evenly. If the frames are extracted at a constant rate (i.e., the frame selection does not take into account whether a frame is in proximity to a detected event/cuepoint), then the selected frames will be evenly spaced.
- the non-contiguous frames are variably spaced in time, with frames in proximity to an event occurring in the video segment being spaced more closely than frames not in proximity to an event.
- the event may be a motion event detected in the video feed by the video processing system 1512 and/or camera 118 or an alert event such as hazard alarm as indicated in metadata transmitted by a smart device 1502 .
- Frames selected for extraction may be closer together if the frames are in proximity to a detected event/cuepoint (e.g., frame sets 1810 and 1814 , FIG. 18B ).
- the server system prior to the encoding, processes the video stream to identify events; and in accordance with the processing, identifies one or more events, identifies a first time interval that includes at least a portion of an identified event, and identifies a second time interval that does not include any of the identified events, where both the first time interval and the second time interval have the same length.
- the video processing system 1512 processes the video feed and the metadata to identify events associated with the video (e.g., motion events in the video).
- the identified events are correlated to segments of the video feed, and certain segments may have one or more events and other segments may have no events.
- the server system for the first time interval, encodes a first number of non-contiguous frames as a compressed video segment associated with the first time interval; and for the second time interval, encodes a second number of non-contiguous frames as a compressed video segment associated with the second time interval, where the second number is less than the first number.
- the frame extraction and encoding system 1516 encodes extracted-frames video for a segment with one or more events to include more frames than for a segment without an event. More generally, in some implementations, more frames are extracted from portions of the video feed with an alert event (e.g., in proximity to an event/cuepoint) than from portions with an alert event. Thus, the portion of the extracted-frames video corresponding to the video feed portion with the alert event will have more frames than the portion of the extracted-frames video corresponding to the video feed portion without the alert event.
- the server system for the first time interval, encodes a plurality of contiguous frames as a compressed video segment associated with the first time interval, and for the second time interval, encodes a plurality of non-contiguous frames as a compressed video segment associated with the second time interval.
- the server system receives event information from one or more of: the remote video camera, and one or more smart devices, and identifying one or more events includes identifying one or more events in accordance with the processing and the received event information.
- the server system 1501 receives metadata from camera 118 and other smart devices 1502 .
- the metadata include information that indicates detected events or markers of events in the video or otherwise associated with the video (e.g., markers of detected motion in the video, alerts triggered).
- the server system prior to the encoding, receives event information from the remote video camera, wherein the event information is generated by the remote video camera processing the video stream.
- the camera 118 may pre-process the video feed to detect motion, and transmit metadata indicating the detected motion to the server system 1501 .
- the server system prior to the encoding, receives event information from one or more smart devices.
- Other smart devices 1502 in the operating environment 1500 transmit metadata indicating events (e.g., alerts triggered) to the server system 1501 .
- the metadata from the camera 118 and smart devices 1502 are used by the video processing system 1512 to detect and identify events and to correlate them with the video feed.
- transmitting the video segment to the client device includes transmitting frames of the video segment, a plurality of frames of an immediately preceding video segment, and a plurality of frames of an immediately succeeding video segment.
- the extracted-frames video may be requested by the client module 1506 in sliding windows; wherever the marked time on the timeline is based on the user's scrolling of the timeline, the client module 1506 requests extracted-frames video frames for the marked time and some number of frames immediately before and some number for frames immediately after.
- the extracted-frames video is requested independently of the user's scrolling of the timeline. For example, the client device 1504 may periodically or continuously request frames of the extracted-frames video.
- transmitting the video segment to the client device includes transmitting the frames corresponding to the video segment associated with the requested time interval.
- the extracted-frames video may be requested by the client module 1506 on demand; wherever the marked time on the timeline is based on the user's scrolling of the timeline, the client module 1506 requests extracted-frames video frames for the marked time as the user scrolls the timeline.
- the video segment (e.g., the extracted-frames video) is encoded using a H.264 video compression format, and the encoded video segment includes I-frames and P-frames.
- the original video feed is also encoded using the H.264 video compression format; the original video feed also includes I-frames and P-frames.
- the server system in response to a user ceasing to manually scrub through the video from the remote video camera at the client device, transmits an I-frame and P-frames of the original video feed to the client device for resumption of playback of the video feed at the client device; playback of the original video feed resumes from approximately the time corresponding to where the user ceased scrubbing on the timeline by decoding the nearest I-frame before that time and continuing from there.
- the server system transmits I-frames and P-frames of the extracted-frames video by request of the client device (e.g., in a sliding window around the scrubbing position or independently of the scrubbing position).
- I-frames and P-frames of the extracted-frames video are decoded for display.
- an I-frame of the extracted-frames video that is close in time to an I-frame of the original video feed is displayed in the video region 12038 before playback of the video feed resumes, so that playback of the video feed can be smoothly resumed from the last shown scrubbing position.
- the corresponding I-frame may be transmitted also since I-frame is needed for decoding of the P-frame.
- frames in the extracted-frames video are encoded in reverse chronological order (i.e., from more recent to less recent).
- the frame closest to the present time is encoded as an I-frame
- frames preceding that frame in time are encoded in the reverse chronological order as P-frames.
- the ordering of the I-frames and P-frames in the extracted-frames video is consistent with backwards-in-time scrubbing by a user, which may reduce the number of requests for frames in the extracted-frames video whenever the user scrubs backwards in time.
- the initial extracted-frames video frame(s) that are requested and displayed in the video region 12038 to the user depends on the direction of the user scrubbing.
- the frames requested are behind the direction of the user scrubbing. For example, if the scrubbing is going forward in time, the frames requested are a sequence of frames nearest to the scrubbing position that are backwards in time from to the scrubbing position. If the scrubbing is going backwards in time, the frames requested are a sequence of frames nearest to the scrubbing position that are forward in time from to the scrubbing position.
- the video processing system 1512 processes the video feed and received metadata to detect and identify events (e.g., cuepoints in the video feed indicative of events). Using the information on the detected events, the video processing system 1512 selects and identifies frames of the video feed for extraction by the frame extraction and encoding system 1516 , as well as selecting frames from which event thumbnails are generated. In some implementations, the processing performed by the video processing system 1512 includes detecting specifically persons (e.g., detecting faces) and detecting particular objects, as well as detecting anomalies between frames. Individual frames may be scored based on these detections. Based on the scores, cuepoints and event thumbnail frames are identified.
- events e.g., cuepoints in the video feed indicative of events.
- the video processing system 1512 selects and identifies frames of the video feed for extraction by the frame extraction and encoding system 1516 , as well as selecting frames from which event thumbnails are generated.
- the processing performed by the video processing system 1512 includes detecting specifically persons (e.g.
- frames that are extracted for encoding into extracted-frames video are I-frames in the original video feed (which in some implementations is also encoded in accordance with the H.264 format and thus includes I-frames and P-frames), and P-frames in the video feed are excluded from the extraction and encoding of the extracted-frames video.
- the video feed resumes playback from the video feed I-frame that was displayed as an extracted-frames video frame when the scrubbing ceased. In this way, resumption of video feed playback from a stop in the scrubbing is smoother.
- the I-frames of the video feed are identified by the server system 508 / 552 / 1501 (e.g., video processing and event notification system 1512 ) for extraction by the frame extraction and encoding system 1516 .
- the I-frames of the video feed are scored in isolation by the video processing and event notification system 1512 based on one or more criteria (e.g., detection of person, detection of object of interest, detection of motion, position of the person/object/motion in the frame, etc.).
- criteria e.g., detection of person, detection of object of interest, detection of motion, position of the person/object/motion in the frame, etc.
- the criteria for identifying frames for extraction include, in order of priority, (1) the best scoring I-frames, (2) even spacing (i.e., constant frame extraction rate), and (3) coverage of alert events/cuepoints (e.g., each alert event/cuepoint has at least one frame identified for extraction).
- the even spacing criterion may be traded off for higher frame rate in proximity or around an alert event/cuepoint.
- the identification of frames for extraction is performed using a greedy algorithm that optimizes the identified frames under one or more constraints.
- the constraints include minimum delta between frame times (two frames has to be at least a certain amount of time apart), minimizing gaps between frames, maximizing quality (e.g., best scoring), selecting frames from cuepoints, and choosing available frames.
- a thumbnail is cropped and zoomed-in to focus on content of interest in the thumbnail.
- Frames of the video feed may be scored based on detection of faces, persons, and objects of interest in the frames.
- the server system 508 / 552 / 1501 e.g., a frame scoring module within the video server 554 , not shown, event detection module 7306 ) scores frames of the video feed on faces, persons, and objects of interest detected in the frames. This may include detecting the face, person, or object in a frame, determining a bounding box around the face/person/object, and scoring the bounding box.
- the best scoring frame for an alert event is selected by the server system 508 / 552 for use as the thumbnail to be displayed with the corresponding alert event indicator, and the thumbnail may be cropped and zoomed-in to focus on the bounding box.
- alert event indicators there is a limit to how many thumbnails can be displayed for alert event indicators (e.g., up to two thumbnails per one-hour increment on the timeline).
- Alert events/cuepoints may be scored for importance by the server system 508 / 552 / 1501 based on one or more criteria, and thumbnails are displayed for the alert event indicators for the highest-importance alert events in accordance with the limit to how many thumbnails can be displayed. In this way, the user can see in the timeline visualizations of the highest-importance alert events.
- importance of alert events/cuepoints may also be used for the issuance of alert event notifications (e.g., emphasize notifying on alert events with high importance).
- the criteria for determining or scoring importance include one or more of:
- the server system 508 / 552 / 1501 has (e.g., in memory 722 ) profiles of cameras 118 .
- the profile of a camera 118 includes an aggregation of historical data for the camera 118 , including historical data for detection of persons and activity (e.g., motion), amount of activity, and time of activity.
- the alert event or cuepoint may be compared to the profile to determine whether a person or activity is anomalous, and the alert event/cuepoint is scored accordingly. For example, if the profile for a camera 118 indicates that persons rarely enter into the view of the camera 118 , then a person detected in a cuepoint may be determined to be anomalous.
- a thumbnail is guaranteed to be displayed for certain types of alert events.
- a hazard event e.g., smoke, carbon monoxide
- the guaranteed thumbnail may be displayed at the expense of a thumbnail for an alert event/cuepoint that was otherwise scored highly.
- Similar thumbnail guarantee priority may be assigned by device in the operating environment (e.g., to a particular camera 118 , to a particular smart device). In some implementations, the thumbnail guarantee priority (whether it be by alert event type or by device) is configurable by the user.
- the position, on the timeline, of a line connecting a thumbnail to an alert event indicator corresponds to a cuepoint associated with the alert event indicator.
- a thumbnail that is displayed in the timeline region 12040 may be displayed in a manner such that the thumbnail is centered (vertically if the timeline is vertical, horizontally if the timeline is horizontal) about a cuepoint (e.g., the line connecting the thumbnail to an associated alert event indicator).
- the position of the line 12122 on the timeline corresponds to a cuepoint
- the thumbnail 12116 is vertically centered about the line 12122 (i.e., the line 12122 and the vertical center of the thumbnail 12116 are aligned).
- the position of the line 12238 on the timeline corresponds to a cuepoint, and the thumbnail 12220 is vertically centered about the line 12238 (i.e., the line 12238 and the vertical center of the thumbnail 12220 are aligned).
- one or more of the thumbnails may be displayed in a manner such that they are not centered about their associated cuepoints (e.g., in FIG. 12M , line 12240 and the vertical center of thumbnail 12222 are not aligned), while the locations of the cuepoints are maintained. In this way, the likelihood of displayed thumbnails overlapping with each other due to the centering and other factors, such as screen size constraints and the density of cuepoints on the timeline, is reduced.
- the client device 504 e.g., the client module 502
- the client device 504 may maximize the number of thumbnails that are centered, and minimize the number of thumbnails that are not centered. In some implementations, the client device 504 may maximize the number of thumbnails that are centered and located at the edges of the screen or of the timeline region 12040 , while allowing thumbnails in the middle of the screen or of the timeline region 12040 to float (e.g., be not centered). In some implementations, the client device 504 may adjust the positioning of the thumbnails so that they are equally spaced from one another regardless of whether they are centered. In some implementations, the client device 504 may optimize the positions of the thumbnails so that the thumbnails are equally spaced and are centered.
- the detection of alert events/cuepoints includes generating a confidence level that expresses a measure of confidence that the detected event, motion, person, object, etc. is a true positive (e.g., for person detection, the confidence level expresses a measure of how confident the video processing system 1512 is that the detected person is detected correctly).
- the confidence level may be a criterion in the score for determining cuepoint importance.
- a notification of an alert event includes an indication of the confidence level of detection of the alert event. For example, if the event is that a person is in the room, and the confidence level is very high (e.g., 99-100%), the notification may say “person in room,” and if the confidence is lower (e.g., 80%), the notification may say “person may be in room.”
- first, second, etc. are, in some instances, used herein to describe various elements, these elements should not be limited by these terms. These terms are only used to distinguish one element from another.
- a first user interface could be termed a second user interface, and, similarly, a second user interface could be termed a first user interface, without departing from the scope of the various described implementations.
- the first user interface and the second user interface are both types of user interfaces, but they are not the same user interface.
- the term “if” is, optionally, construed to mean “when” or “upon” or “in response to determining” or “in response to detecting” or “in accordance with a determination that,” depending on the context.
- the phrase “if it is determined” or “if [a stated condition or event] is detected” is, optionally, construed to mean “upon determining” or “in response to determining” or “upon detecting [the stated condition or event]” or “in response to detecting [the stated condition or event]” or “in accordance with a determination that [a stated condition or event] is detected,” depending on the context.
- “smart home environments” may refer to smart environments for homes such as a single-family house, but the scope of the present teachings is not so limited.
- the present teachings are also applicable, without limitation, to duplexes, townhomes, multi-unit apartment buildings, hotels, retail stores, office buildings, industrial buildings, and more generally any living space or work space.
- the customer may be the landlord with respect to purchasing the unit
- the installer may be a local apartment supervisor
- a first user may be the tenant
- a second user may again be the landlord with respect to remote control functionality.
- identity of the person performing the action may be germane to a particular advantage provided by one or more of the implementations, such identity should not be construed in the descriptions that follow as necessarily limiting the scope of the present teachings to those particular individuals having those particular identities.
- the users may be provided with an opportunity to opt in/out of programs or features that may collect personal information (e.g., information about a user's preferences or usage of a smart device).
- personal information e.g., information about a user's preferences or usage of a smart device.
- certain data may be anonymized in one or more ways before it is stored or used, so that personally identifiable information is removed.
- a user's identity may be anonymized so that the personally identifiable information cannot be determined for or associated with the user, and so that user preferences or user interactions are generalized (for example, generalized based on user demographics) rather than associated with a particular user.
- stages that are not order dependent may be reordered and other stages may be combined or broken out. While some reordering or other groupings are specifically mentioned, others will be obvious to those of ordinary skill in the art, so the ordering and groupings presented herein are not an exhaustive list of alternatives. Moreover, it should be recognized that the stages could be implemented in hardware, firmware, software or any combination thereof.
Abstract
Description
- This application is related to the following applications, which are hereby incorporated by reference in their entirety:
- U.S. patent application Ser. No. ______, titled “Timeline-Video Relationship Presentation for Alert Events,” attorney docket no. 104248-5121-US, filed ______, 2016;
- U.S. patent application Ser. No. 15/208,578, titled “Methods and Systems for Presenting Smart Home Information in a User Interface,” filed Jul. 12, 2016; and
- U.S. patent application Ser. No. 15/208,585, titled “Methods and Devices for Presenting Video Feeds in a User Interface,” filed Jul. 12, 2016.
- The disclosed implementations relate generally to video monitoring, including, but not limited, to monitoring and reviewing video feeds, events, and corresponding timelines.
- The advancement of internet and mobile technologies has enabled the adoption of remote video surveillance by users. Users can now monitor an area under video surveillance using a website or a mobile application. Such websites or mobile apps typically allow a user to view live video and/or saved video recordings, but otherwise provide little or no additional information regarding the videos. Furthermore, the user interfaces for viewing these live or saved videos have a user control flow that does not provide adequate context or information to the user. Thus, more efficient, informative, and user-friendly presentations of live and saved video surveillance are needed.
- Accordingly, there is a need for presentations of live and/or saved video with a more efficient user control flow and more useful information. Such methods optionally complement or replace conventional methods for presenting live and/or saved video from video streams.
- In accordance with some implementations, a method includes, at an electronic device having a display, one or more processors, and memory storing one or more programs for execution by the one or more processors: displaying, via the display of the electronic device, a user interface having a first region and a second region; receiving, and displaying in the first region of the user interface, a live video stream of a physical environment captured by a video camera located remotely from the electronic device, wherein at least some of the live video stream is recorded at a remote server; displaying, in the second region of the user interface, a timeline corresponding to a timespan for a first portion of a duration during which the live video stream may have been recorded; in response to receiving a user interaction indicating a desire to move the timespan to a second portion of the duration during which the live video stream may have been recorded, transitioning the displayed timeline to a new timeline that corresponds to the timespan for the second portion, and while transitioning the displayed timeline to the new timeline, displaying, in the first region of the user interface, a subset of video frames representing the first and/or second portion of the duration during which the live video stream may have been recorded.
- In accordance with some implementations, an electronic device includes a display, one or more processors, and memory storing one or more programs to be executed by the one or more processors. The one or more programs include instructions for: displaying, via the display of the electronic device, a user interface having a first region and a second region; receiving, and displaying in the first region of the user interface, a live video stream of a physical environment captured by a video camera located remotely from the electronic device, wherein at least some of the live video stream is recorded at a remote server; displaying, in the second region of the user interface, a timeline corresponding to a timespan for a first portion of a duration during which the live video stream may have been recorded; in response to receiving a user interaction indicating a desire to move the timespan to a second portion of the duration during which the live video stream may have been recorded, transitioning the displayed timeline to a new timeline that corresponds to the timespan for the second portion, and while transitioning the displayed timeline to the new timeline, displaying, in the first region of the user interface, a subset of video frames representing the first and/or second portion of the duration during which the live video stream may have been recorded.
- In accordance with some implementations, a non-transitory computer readable storage medium stores one or more programs. The one or more programs include instructions, which, when executed by an electronic device with a display and one or more processors, cause the electronic device to perform operations including: displaying, via the display of the electronic device, a user interface having a first region and a second region; receiving, and displaying in the first region of the user interface, a live video stream of a physical environment captured by a video camera located remotely from the electronic device, wherein at least some of the live video stream is recorded at a remote server; displaying, in the second region of the user interface, a timeline corresponding to a timespan for a first portion of a duration during which the live video stream may have been recorded; in response to receiving a user interaction indicating a desire to move the timespan to a second portion of the duration during which the live video stream may have been recorded, transitioning the displayed timeline to a new timeline that corresponds to the timespan for the second portion, and while transitioning the displayed timeline to the new timeline, displaying, in the first region of the user interface, a subset of video frames representing the first and/or second portion of the duration during which the live video stream may have been recorded.
- In accordance with some implementations, a method includes, at a server system: receiving a video stream from a remote video camera, wherein the video stream comprises a plurality of video frames; selecting a plurality of non-contiguous frames from the video stream, the plurality of non-contiguous frames being associated with a predetermined time interval; encoding the plurality of non-contiguous frames as a compressed video segment associated with the time interval; receiving a request from an application running on a client device to review video from the remote video camera for the time interval; and in response to the request, transmitting the video segment to the client device for viewing in the application.
- In accordance with some implementations, a computer system includes one or more processors and memory storing one or more programs to be executed by the one or more processors. The one or more programs include instructions for: receiving a video stream from a remote video camera, wherein the video stream comprises a plurality of video frames; selecting a plurality of non-contiguous frames from the video stream, the plurality of non-contiguous frames being associated with a predetermined time interval; encoding the plurality of non-contiguous frames as a compressed video segment associated with the time interval; receiving a request from an application running on a client device to review video from the remote video camera for the time interval; and in response to the request, transmitting the video segment to the client device for viewing in the application.
- In accordance with some implementations, a non-transitory computer readable storage medium stores one or more programs. The one or more programs include instructions, which, when executed by a computer system with one or more processors, cause the computer system to perform operations including: receiving a video stream from a remote video camera, wherein the video stream comprises a plurality of video frames; selecting a plurality of non-contiguous frames from the video stream, the plurality of non-contiguous frames being associated with a predetermined time interval; encoding the plurality of non-contiguous frames as a compressed video segment associated with the time interval; receiving a request from an application running on a client device to review video from the remote video camera for the time interval; and in response to the request, transmitting the video segment to the client device for viewing in the application.
- Thus, computing systems are provided with more efficient methods for presenting live and/or saved video and related information, thereby increasing the effectiveness, efficiency, and user satisfaction with such systems. Such methods may complement or replace conventional methods for presenting live and/or saved video.
- The patent or application file contains at least one drawing executed in color. Copies of this patent or patent application publication with color drawing(s) will be provided by the Office upon request and payment of the necessary fee.
- For a better understanding of the various described implementations, reference should be made to the Description of Implementations below, in conjunction with the following drawings in which like reference numerals refer to corresponding parts throughout the figures.
-
FIG. 1 is an example smart home environment, in accordance with some implementations. -
FIG. 2 is a block diagram illustrating an example network architecture that includes a smart home network, in accordance with some implementations. -
FIG. 3 illustrates a network-level view of an extensible devices and services platform with which the smart home environment ofFIG. 1 is integrated, in accordance with some implementations. -
FIG. 4 illustrates an abstracted functional view of the extensible devices and services platform ofFIG. 3 , with reference to a processing engine as well as devices of the smart home environment, in accordance with some implementations. -
FIG. 5A is a representative operating environment in which a hub device server system interacts with client devices and hub devices communicatively coupled to local smart devices, in accordance with some implementations. -
FIG. 5B is a representative operating environment in which a video server system interacts with client devices and hub devices communicatively coupled to local smart devices, in accordance with some implementations. -
FIG. 6 is a block diagram illustrating a representative hub device, in accordance with some implementations. -
FIG. 7A is a block diagram illustrating a representative hub device server system, in accordance with some implementations. -
FIGS. 7B-7C are block diagrams illustrating a representative video server system, in accordance with some implementations. -
FIG. 7D is a block diagram illustrating a representative client interface server, in accordance with some implementations. -
FIG. 7E is a block diagram illustrating a representative camera interface server, in accordance with some implementations. -
FIG. 8A-8B are block diagrams illustrating a representative client device associated with a user account, in accordance with some implementations. -
FIG. 9A is a block diagram illustrating a representative smart device, in accordance with some implementations. -
FIG. 9B is a block diagram illustrating a representative video capturing device (e.g., a camera) in accordance with some implementations. -
FIG. 10 is a block diagram illustrating a representative smart home provider server system, in accordance with some implementations. -
FIG. 11A illustrates a representative system architecture, in accordance with some implementations. -
FIG. 11B illustrates a representative processing pipeline, in accordance with some implementations. -
FIGS. 12A-12M illustrate example user interfaces on a client device for presenting a timeline-video relationship in accordance with some implementations. -
FIG. 13 illustrates a flowchart diagram of a method for presenting a timeline-video relationship, in accordance with some implementations. -
FIGS. 14A-14L illustrate example screenshots of user interfaces on a client device in accordance with some implementations. -
FIG. 15 is a block diagram illustrating an example operating environment in which a server system interacts with client devices and smart devices, in accordance with some implementations. -
FIGS. 16A-16B illustrate a flow diagram of an example process for generating extracted-frames video in accordance with some implementations. -
FIG. 17 illustrates a flow diagram of an example process for displaying extracted-frames video in accordance with some implementations. -
FIGS. 18A-18D illustrate diagrams showing an example frame extraction arrangement for a video feed segment and a frames arrangement in the corresponding extracted-frames video, in accordance with some implementations. -
FIG. 19 is a flow diagram illustrating a method of generating and transmitting video for viewing at a client device, in accordance with some implementations. - Like reference numerals refer to corresponding parts throughout the several views of the drawings.
- Reference will now be made in detail to implementations, examples of which are illustrated in the accompanying drawings. In the following detailed description, numerous specific details are set forth in order to provide a thorough understanding of the various described implementations. However, it will be apparent to one of ordinary skill in the art that the various described implementations may be practiced without these specific details. In other instances, well-known methods, procedures, components, circuits, and networks have not been described in detail so as not to unnecessarily obscure aspects of the implementations.
-
FIG. 1 is an examplesmart home environment 100 in accordance with some implementations.Smart home environment 100 includes a structure 150 (e.g., a house, office building, garage, or mobile home) with various integrated devices. It will be appreciated that devices may also be integrated into asmart home environment 100 that does not include anentire structure 150, such as an apartment, condominium, or office space. Further, thesmart home environment 100 may control and/or be coupled to devices outside of theactual structure 150. Indeed, one or more devices in thesmart home environment 100 need not be physically within thestructure 150. For example, a device controlling apool heater 114 orirrigation system 116 may be located outside of thestructure 150. - The depicted
structure 150 includes a plurality ofrooms 152, separated at least partly from each other viawalls 154. Thewalls 154 may include interior walls or exterior walls. Each room may further include afloor 156 and aceiling 158. Devices may be mounted on, integrated with and/or supported by awall 154,floor 156 orceiling 158. - In some implementations, the integrated devices of the
smart home environment 100 include intelligent, multi-sensing, network-connected devices that integrate seamlessly with each other in a smart home network (e.g., 202FIG. 2 ) and/or with a central server or a cloud-computing system to provide a variety of useful smart home functions. Thesmart home environment 100 may include one or more intelligent, multi-sensing, network-connected thermostats 102 (hereinafter referred to as “smart thermostats 102”), one or more intelligent, network-connected, multi-sensing hazard detection units 104 (hereinafter referred to as “smart hazard detectors 104”), one or more intelligent, multi-sensing, network-connectedentryway interface devices 106 and 120 (hereinafter referred to as “smart doorbells 106” and “smart door locks 120”), and one or more intelligent, multi-sensing, network-connected alarm systems 122 (hereinafter referred to as “smart alarm systems 122”). - In some implementations, the one or more
smart thermostats 102 detect ambient climate characteristics (e.g., temperature and/or humidity) and control aHVAC system 103 accordingly. For example, a respectivesmart thermostat 102 includes an ambient temperature sensor. - The one or more
smart hazard detectors 104 may include thermal radiation sensors directed at respective heat sources (e.g., a stove, oven, other appliances, a fireplace, etc.). For example, asmart hazard detector 104 in a kitchen 153 includes a thermal radiation sensor directed at a stove/oven 112. A thermal radiation sensor may determine the temperature of the respective heat source (or a portion thereof) at which it is directed and may provide corresponding blackbody radiation data as output. - The
smart doorbell 106 and/or thesmart door lock 120 may detect a person's approach to or departure from a location (e.g., an outer door), control doorbell/door locking functionality (e.g., receive user inputs from a portable electronic device 166-1 to actuate bolt of the smart door lock 120), announce a person's approach or departure via audio or visual means, and/or control settings on a security system (e.g., to activate or deactivate the security system when occupants go and come). - The
smart alarm system 122 may detect the presence of an individual within close proximity (e.g., using built-in IR sensors), sound an alarm (e.g., through a built-in speaker, or by sending commands to one or more external speakers), and send notifications to entities or users within/outside of thesmart home network 100. In some implementations, thesmart alarm system 122 also includes one or more input devices or sensors (e.g., keypad, biometric scanner, NFC transceiver, microphone) for verifying the identity of a user, and one or more output devices (e.g., display, speaker). In some implementations, thesmart alarm system 122 may also be set to an “armed” mode, such that detection of a trigger condition or event causes the alarm to be sounded unless a disarming action is performed. - In some implementations, the
smart home environment 100 includes one or more intelligent, multi-sensing, network-connected wall switches 108 (hereinafter referred to as “smart wall switches 108”), along with one or more intelligent, multi-sensing, network-connected wall plug interfaces 110 (hereinafter referred to as “smart wall plugs 110”). The smart wall switches 108 may detect ambient lighting conditions, detect room-occupancy states, and control a power and/or dim state of one or more lights. In some instances, smart wall switches 108 may also control a power state or speed of a fan, such as a ceiling fan. The smart wall plugs 110 may detect occupancy of a room or enclosure and control supply of power to one or more wall plugs (e.g., such that power is not supplied to the plug if nobody is at home). - In some implementations, the
smart home environment 100 ofFIG. 1 includes a plurality of intelligent, multi-sensing, network-connected appliances 112 (hereinafter referred to as “smart appliances 112”), such as refrigerators, stoves, ovens, televisions, washers, dryers, lights, stereos, intercom systems, garage-door openers, floor fans, ceiling fans, wall air conditioners, pool heaters, irrigation systems, security systems, space heaters, window AC units, motorized duct vents, and so forth. In some implementations, when plugged in, an appliance may announce itself to the smart home network, such as by indicating what type of appliance it is, and it may automatically integrate with the controls of the smart home. Such communication by the appliance to the smart home may be facilitated by either a wired or wireless communication protocol. The smart home may also include a variety ofnon-communicating legacy appliances 140, such as old conventional washer/dryers, refrigerators, and the like, which may be controlled by smart wall plugs 110. Thesmart home environment 100 may further include a variety of partially communicatinglegacy appliances 142, such as infrared (“IR”) controlled wall air conditioners or other IR-controlled devices, which may be controlled by IR signals provided by thesmart hazard detectors 104 or the smart wall switches 108. - In some implementations, the
smart home environment 100 includes one or more network-connectedcameras 118 that are configured to provide video monitoring and security in thesmart home environment 100. In some implementations,cameras 118 also capture video when other conditions or hazards are detected, in order to provide visual monitoring of thesmart home environment 100 when those conditions or hazards occur. Thecameras 118 may be used to determine occupancy of thestructure 150 and/orparticular rooms 152 in thestructure 150, and thus may act as occupancy sensors. For example, video captured by thecameras 118 may be processed to identify the presence of an occupant in the structure 150 (e.g., in a particular room 152). Specific individuals may be identified based, for example, on their appearance (e.g., height, face) and/or movement (e.g., their walk/gait). For example,cameras 118 may additionally include one or more sensors (e.g., IR sensors, motion detectors), input devices (e.g., microphone for capturing audio), and output devices (e.g., speaker for outputting audio). - The
smart home environment 100 may additionally or alternatively include one or more other occupancy sensors (e.g., thesmart doorbell 106, smart door locks 120, touch screens, IR sensors, microphones, ambient light sensors, motion detectors,smart nightlights 170, etc.). In some implementations, thesmart home environment 100 includes radio-frequency identification (RFID) readers (e.g., in eachroom 152 or a portion thereof) that determine occupancy based on RFID tags located on or embedded in occupants. For example, RFID readers may be integrated into thesmart hazard detectors 104. - The
smart home environment 100 may include one or more sound and/or vibration sensors for detecting abnormal sounds and/or vibrations. These sensors may be integrated with any of the devices described above. The sound sensors detect sound above a decibel threshold. The vibration sensors detect vibration above a threshold directed at a particular area (e.g., vibration on a particular window when a force is applied to break the window). - Conditions detected by the devices described above (e.g., motion, sound, vibrations, hazards) may be referred to collectively as alert events.
- The
smart home environment 100 may also include communication with devices outside of the physical home but within a proximate geographical range of the home. For example, thesmart home environment 100 may include a pool heater monitor 114 that communicates a current pool temperature to other devices within thesmart home environment 100 and/or receives commands for controlling the pool temperature. Similarly, thesmart home environment 100 may include anirrigation monitor 116 that communicates information regarding irrigation systems within thesmart home environment 100 and/or receives control information for controlling such irrigation systems. - By virtue of network connectivity, one or more of the smart home devices of
FIG. 1 may further allow a user to interact with the device even if the user is not proximate to the device. For example, a user may communicate with a device using a computer (e.g., a desktop computer, laptop computer, or tablet) or other portable electronic device 166 (e.g., a mobile phone, such as a smart phone). A webpage or application may be configured to receive communications from the user and control the device based on the communications and/or to present information about the device's operation to the user. For example, the user may view a current set point temperature for a device (e.g., a stove) and adjust it using a computer. The user may be in the structure during this remote communication or outside the structure. - As discussed above, users may control smart devices in the
smart home environment 100 using a network-connected computer or portableelectronic device 166. In some examples, some or all of the occupants (e.g., individuals who live in the home) may register theirdevice 166 with thesmart home environment 100. Such registration may be made at a central server to authenticate the occupant and/or the device as being associated with the home and to give permission to the occupant to use the device to control the smart devices in the home. An occupant may use theirregistered device 166 to remotely control the smart devices of the home, such as when the occupant is at work or on vacation. The occupant may also use their registered device to control the smart devices when the occupant is actually located inside the home, such as when the occupant is sitting on a couch inside the home. It should be appreciated that instead of or in addition to registeringdevices 166, thesmart home environment 100 may make inferences about which individuals live in the home and are therefore occupants and whichdevices 166 are associated with those individuals. As such, the smart home environment may “learn” who is an occupant and permit thedevices 166 associated with those individuals to control the smart devices of the home. - In some implementations, in addition to containing processing and sensing capabilities,
devices - In some implementations, the smart devices serve as wireless or wired repeaters. In some implementations, a first one of the smart devices communicates with a second one of the smart devices via a wireless router. The smart devices may further communicate with each other via a connection (e.g., network interface 160) to a network, such as the
Internet 162. Through theInternet 162, the smart devices may communicate with a smart home provider server system 164 (also called a central server system and/or a cloud-computing system herein). The smart homeprovider server system 164 may be associated with a manufacturer, support entity, or service provider associated with the smart device(s). In some implementations, a user is able to contact customer support using a smart device itself rather than needing to use other communication means, such as a telephone or Internet-connected computer. In some implementations, software updates are automatically sent from the smart homeprovider server system 164 to smart devices (e.g., when available, when purchased, or at routine intervals). - In some implementations, the
network interface 160 includes a conventional network device (e.g., a router), and thesmart home environment 100 ofFIG. 1 includes ahub device 180 that is communicatively coupled to the network(s) 162 directly or via thenetwork interface 160. Thehub device 180 is further communicatively coupled to one or more of the above intelligent, multi-sensing, network-connected devices (e.g., smart devices of the smart home environment 100). Each of these smart devices optionally communicates with thehub device 180 using one or more radio communication networks available at least in the smart home environment 100 (e.g., ZigBee, Z-Wave, Insteon, Bluetooth, Wi-Fi and other radio communication networks). In some implementations, thehub device 180 and devices coupled with/to the hub device can be controlled and/or interacted with via an application running on a smart phone, household controller, laptop, tablet computer, game console or similar electronic device. In some implementations, a user of such controller application can view status of the hub device or coupled smart devices, configure the hub device to interoperate with smart devices newly introduced to the home network, commission new smart devices, and adjust or view settings of connected smart devices, etc. In some implementations the hub device extends capabilities of low capability smart device to match capabilities of the highly capable smart devices of the same type, integrates functionality of multiple different device types—even across different communication protocols, and is configured to streamline adding of new devices and commissioning of the hub device. -
FIG. 2 is a block diagram illustrating anexample network architecture 200 that includes asmart home network 202 in accordance with some implementations. In some implementations, thesmart devices 204 in the smart home environment 100 (e.g.,devices hub device 180 to create a mesh network insmart home network 202. In some implementations, one or moresmart devices 204 in thesmart home network 202 operate as a smart home controller. Additionally and/or alternatively,hub device 180 operates as the smart home controller. In some implementations, a smart home controller has more computing power than other smart devices. In some implementations, a smart home controller processes inputs (e.g., fromsmart devices 204,electronic device 166, and/or smart home provider server system 164) and sends commands (e.g., tosmart devices 204 in the smart home network 202) to control operation of thesmart home environment 100. In some implementations, some of thesmart devices 204 in the smart home network 202 (e.g., in the mesh network) are “spokesman” nodes (e.g., 204-1) and others are “low-powered” nodes (e.g., 204-9). Some of the smart devices in thesmart home environment 100 are battery powered, while others have a regular and reliable power source, such as by connecting to wiring (e.g., to 120V line voltage wires) behind thewalls 154 of the smart home environment. The smart devices that have a regular and reliable power source are referred to as “spokesman” nodes. These nodes are typically equipped with the capability of using a wireless protocol to facilitate bidirectional communication with a variety of other devices in thesmart home environment 100, as well as with the smart homeprovider server system 164. In some implementations, one or more “spokesman” nodes operate as a smart home controller. On the other hand, the devices that are battery powered are the “low-power” nodes. These nodes tend to be smaller than spokesman nodes and typically only communicate using wireless protocols that require very little power, such as Zigbee, 6LoWPAN, etc. - In some implementations, some low-power nodes are incapable of bidirectional communication. These low-power nodes send messages, but they are unable to “listen”. Thus, other devices in the
smart home environment 100, such as the spokesman nodes, cannot send information to these low-power nodes. - In some implementations, some low-power nodes are capable of only a limited bidirectional communication. For example, other devices are able to communicate with the low-power nodes only during a certain time period.
- As described, in some implementations, the smart devices serve as low-power and spokesman nodes to create a mesh network in the
smart home environment 100. In some implementations, individual low-power nodes in the smart home environment regularly send out messages regarding what they are sensing, and the other low-powered nodes in the smart home environment—in addition to sending out their own messages—forward the messages, thereby causing the messages to travel from node to node (i.e., device to device) throughout thesmart home network 202. In some implementations, the spokesman nodes in thesmart home network 202, which are able to communicate using a relatively high-power communication protocol, such as IEEE 802.11, are able to switch to a relatively low-power communication protocol, such as IEEE 802.15.4, to receive these messages, translate the messages to other communication protocols, and send the translated messages to other spokesman nodes and/or the smart home provider server system 164 (using, e.g., the relatively high-power communication protocol). Thus, the low-powered nodes using low-power communication protocols are able to send and/or receive messages across the entiresmart home network 202, as well as over theInternet 162 to the smart homeprovider server system 164. In some implementations, the mesh network enables the smart homeprovider server system 164 to regularly receive data from most or all of the smart devices in the home, make inferences based on the data, facilitate state synchronization across devices within and outside of thesmart home network 202, and send commands to one or more of the smart devices to perform tasks in the smart home environment. - As described, the spokesman nodes and some of the low-powered nodes are capable of “listening.” Accordingly, users, other devices, and/or the smart home
provider server system 164 may communicate control commands to the low-powered nodes. For example, a user may use the electronic device 166 (e.g., a smart phone) to send commands over the Internet to the smart homeprovider server system 164, which then relays the commands to one or more spokesman nodes in thesmart home network 202. The spokesman nodes may use a low-power protocol to communicate the commands to the low-power nodes throughout thesmart home network 202, as well as to other spokesman nodes that did not receive the commands directly from the smart homeprovider server system 164. - In some implementations, a smart nightlight 170 (
FIG. 1 ), which is an example of asmart device 204, is a low-power node. In addition to housing a light source, thesmart nightlight 170 houses an occupancy sensor, such as an ultrasonic or passive IR sensor, and an ambient light sensor, such as a photo resistor or a single-pixel sensor that measures light in the room. In some implementations, thesmart nightlight 170 is configured to activate the light source when its ambient light sensor detects that the room is dark and when its occupancy sensor detects that someone is in the room. In some implementations, thesmart nightlight 170 is simply configured to activate the light source when its ambient light sensor detects that the room is dark. Further, in some implementations, thesmart nightlight 170 includes a low-power wireless communication chip (e.g., a ZigBee chip) that regularly sends out messages regarding the occupancy of the room and the amount of light in the room, including instantaneous messages coincident with the occupancy sensor detecting the presence of a person in the room. As mentioned above, these messages may be sent wirelessly (e.g., using the mesh network) from node to node (i.e., smart device to smart device) within thesmart home network 202 as well as over theInternet 162 to the smart homeprovider server system 164. - Other examples of low-power nodes include battery-operated versions of the
smart hazard detectors 104. Thesesmart hazard detectors 104 are often located in an area without access to constant and reliable power and may include any number and type of sensors, such as smoke/fire/heat sensors (e.g., thermal radiation sensors), carbon monoxide/dioxide sensors, occupancy/motion sensors, ambient light sensors, ambient temperature sensors, humidity sensors, and the like. Furthermore,smart hazard detectors 104 may send messages that correspond to each of the respective sensors to the other devices and/or the smart homeprovider server system 164, such as by using the mesh network as described above. - Examples of spokesman nodes include
smart doorbells 106,smart thermostats 102, smart wall switches 108, and smart wall plugs 110. These devices are often located near and connected to a reliable power source, and therefore may include more power-consuming components, such as one or more communication chips capable of bidirectional communication in a variety of protocols. - In some implementations, the
smart home environment 100 includes service robots 168 (FIG. 1 ) that are configured to carry out, in an autonomous manner, any of a variety of household tasks. - As explained above with reference to
FIG. 1 , in some implementations, thesmart home environment 100 ofFIG. 1 includes ahub device 180 that is communicatively coupled to the network(s) 162 directly or via thenetwork interface 160. Thehub device 180 is further communicatively coupled to one or more of the smart devices using a radio communication network that is available at least in thesmart home environment 100. Communication protocols used by the radio communication network include, but are not limited to, ZigBee, Z-Wave, Insteon, EuOcean, Thread, OSIAN, Bluetooth Low Energy and the like. In some implementations, thehub device 180 not only converts the data received from each smart device to meet the data format requirements of thenetwork interface 160 or the network(s) 162, but also converts information received from thenetwork interface 160 or the network(s) 162 to meet the data format requirements of the respective communication protocol associated with a targeted smart device. In some implementations, in addition to data format conversion, thehub device 180 further processes the data received from the smart devices or information received from thenetwork interface 160 or the network(s) 162 preliminary. For example, thehub device 180 can integrate inputs from multiple sensors/connected devices (including sensors/devices of the same and/or different types), perform higher level processing on those inputs—e.g., to assess the overall environment and coordinate operation among the different sensors/devices—and/or provide instructions to the different devices based on the collection of inputs and programmed processing. It is also noted that in some implementations, thenetwork interface 160 and thehub device 180 are integrated to one network device. Functionality described herein is representative of particular implementations of smart devices, control application(s) running on representative electronic device(s) (such as a smart phone), hub device(s) 180, and server(s) coupled to hub device(s) via the Internet or other Wide Area Network. All or a portion of this functionality and associated operations can be performed by any elements of the described system—for example, all or a portion of the functionality described herein as being performed by an implementation of the hub device can be performed, in different system implementations, in whole or in part on the server, one or more connected smart devices and/or the control application, or different combinations thereof. -
FIG. 3 illustrates a network-level view of an extensible devices and services platform with which the smart home environment ofFIG. 1 is integrated, in accordance with some implementations. The extensible devices andservices platform 300 includes smart homeprovider server system 164. Each of the intelligent, network-connected devices described with reference toFIG. 1 (e.g., 102, 104, 106, 108, 110, 112, 114, 116 and 118, identified simply as “devices” inFIGS. 2-4 ) may communicate with the smart homeprovider server system 164. For example, a connection to theInternet 162 may be established either directly (for example, using 3G/4G connectivity to a wireless carrier), or through a network interface 160 (e.g., a router, switch, gateway, hub device, or an intelligent, dedicated whole-home controller node), or through any combination thereof. - In some implementations, the devices and
services platform 300 communicates with and collects data from the smart devices of thesmart home environment 100. In addition, in some implementations, the devices andservices platform 300 communicates with and collects data from a plurality of smart home environments across the world. For example, the smart homeprovider server system 164 collectshome data 302 from the devices of one or moresmart home environments 100, where the devices may routinely transmit home data or may transmit home data in specific instances (e.g., when a device queries the home data 302). Example collectedhome data 302 includes, without limitation, power consumption data, blackbody radiation data, occupancy data, HVAC settings and usage data, carbon monoxide levels data, carbon dioxide levels data, volatile organic compounds levels data, sleeping schedule data, cooking schedule data, inside and outside temperature humidity data, television viewership data, inside and outside noise level data, pressure data, video data, etc. - In some implementations, the smart home
provider server system 164 provides one ormore services 304 to smart homes and/or third parties.Example services 304 include, without limitation, software updates, customer support, sensor data collection/logging, remote access, remote or distributed control, and/or use suggestions (e.g., based on collected home data 302) to improve performance, reduce utility cost, increase safety, etc. In some implementations, data associated with theservices 304 is stored at the smart homeprovider server system 164, and the smart homeprovider server system 164 retrieves and transmits the data at appropriate times (e.g., at regular intervals, upon receiving a request from a user, etc.). - In some implementations, the extensible devices and
services platform 300 includes aprocessing engine 306, which may be concentrated at a single server or distributed among several different computing entities without limitation. In some implementations, theprocessing engine 306 includes engines configured to receive data from the devices of smart home environments 100 (e.g., via theInternet 162 and/or a network interface 160), to index the data, to analyze the data and/or to generate statistics based on the analysis or as part of the analysis. In some implementations, the analyzed data is stored as derivedhome data 308. - Results of the analysis or statistics may thereafter be transmitted back to the device that provided home data used to derive the results, to other devices, to a server providing a webpage to a user of the device, or to other non-smart device entities. In some implementations, usage statistics, usage statistics relative to use of other devices, usage patterns, and/or statistics summarizing sensor readings are generated by the
processing engine 306 and transmitted. The results or statistics may be provided via theInternet 162. In this manner, theprocessing engine 306 may be configured and programmed to derive a variety of useful information from thehome data 302. A single server may include one or more processing engines. - The derived
home data 308 may be used at different granularities for a variety of useful purposes, ranging from explicit programmed control of the devices on a per-home, per-neighborhood, or per-region basis (for example, demand-response programs for electrical utilities), to the generation of inferential abstractions that may assist on a per-home basis (for example, an inference may be drawn that the homeowner has left for vacation and so security detection equipment may be put on heightened sensitivity), to the generation of statistics and associated inferential abstractions that may be used for government or charitable purposes. For example,processing engine 306 may generate statistics about device usage across a population of devices and send the statistics to device users, service providers or other entities (e.g., entities that have requested the statistics and/or entities that have provided monetary compensation for the statistics). - In some implementations, to encourage innovation and research and to increase products and services available to users, the devices and
services platform 300 exposes a range of application programming interfaces (APIs) 310 to third parties, such ascharities 314, governmental entities 316 (e.g., the Food and Drug Administration or the Environmental Protection Agency), academic institutions 318 (e.g., university researchers), businesses 320 (e.g., providing device warranties or service to related equipment, targeting advertisements based on home data),utility companies 324, and other third parties. TheAPIs 310 are coupled to and permit third-party systems to communicate with the smart homeprovider server system 164, including theservices 304, theprocessing engine 306, thehome data 302, and the derivedhome data 308. In some implementations, theAPIs 310 allow applications executed by the third parties to initiate specific data processing tasks that are executed by the smart homeprovider server system 164, as well as to receive dynamic updates to thehome data 302 and the derivedhome data 308. - For example, third parties may develop programs and/or applications (e.g., web applications or mobile applications) that integrate with the smart home
provider server system 164 to provide services and information to users. Such programs and applications may be, for example, designed to help users reduce energy consumption, to preemptively service faulty equipment, to prepare for high service demands, to track past service performance, etc., and/or to perform other beneficial functions or tasks. -
FIG. 4 illustrates an abstractedfunctional view 400 of the extensible devices andservices platform 300 ofFIG. 3 , with reference to aprocessing engine 306 as well as devices of the smart home environment, in accordance with some implementations. Even though devices situated in smart home environments will have a wide variety of different individual capabilities and limitations, the devices may be thought of as sharing common characteristics in that each device is a data consumer 402 (DC), a data source 404 (DS), a services consumer 406 (SC), and a services source 408 (SS). Advantageously, in addition to providing control information used by the devices to achieve their local and immediate objectives, the extensible devices andservices platform 300 may also be configured to use the large amount of data that is generated by these devices. In addition to enhancing or optimizing the actual operation of the devices themselves with respect to their immediate functions, the extensible devices andservices platform 300 may be directed to “repurpose” that data in a variety of automated, extensible, flexible, and/or scalable ways to achieve a variety of useful objectives. These objectives may be predefined or adaptively identified based on, e.g., usage patterns, device efficiency, and/or user input (e.g., requesting specific functionality). -
FIG. 4 showsprocessing engine 306 as including a number of processing paradigms 410. In some implementations,processing engine 306 includes a managedservices paradigm 410 a that monitors and manages primary or secondary device functions. The device functions may include ensuring proper operation of a device given user inputs, estimating that (e.g., and responding to an instance in which) an intruder is or is attempting to be in a dwelling, detecting a failure of equipment coupled to the device (e.g., a light bulb having burned out), implementing or otherwise responding to energy demand response events, providing a heat-source alert, and/or alerting a user of a current or predicted future event or characteristic. In some implementations,processing engine 306 includes an advertising/communication paradigm 410 b that estimates characteristics (e.g., demographic information), desires and/or products of interest of a user based on device usage. Services, promotions, products or upgrades may then be offered or automatically provided to the user. In some implementations,processing engine 306 includes asocial paradigm 410 c that uses information from a social network, provides information to a social network (for example, based on device usage), and/or processes data associated with user and/or device interactions with the social network platform. For example, a user's status as reported to their trusted contacts on the social network may be updated to indicate when the user is home based on light detection, security system inactivation or device usage detectors. As another example, a user may be able to share device-usage statistics with other users. In yet another example, a user may share HVAC settings that result in low power bills and other users may download the HVAC settings to theirsmart thermostat 102 to reduce their power bills. - In some implementations,
processing engine 306 includes a challenges/rules/compliance/rewards paradigm 410 d that informs a user of challenges, competitions, rules, compliance regulations and/or rewards and/or that uses operation data to determine whether a challenge has been met, a rule or regulation has been complied with and/or a reward has been earned. The challenges, rules, and/or regulations may relate to efforts to conserve energy, to live safely (e.g., reducing the occurrence of heat-source alerts) (e.g., reducing exposure to toxins or carcinogens), to conserve money and/or equipment life, to improve health, etc. For example, one challenge may involve participants turning down their thermostat by one degree for one week. Those participants that successfully complete the challenge are rewarded, such as with coupons, virtual currency, status, etc. Regarding compliance, an example involves a rental-property owner making a rule that no renters are permitted to access certain owner's rooms. The devices in the room having occupancy sensors may send updates to the owner when the room is accessed. - In some implementations,
processing engine 306 integrates or otherwise usesextrinsic information 412 from extrinsic sources to improve the functioning of one or more processing paradigms.Extrinsic information 412 may be used to interpret data received from a device, to determine a characteristic of the environment near the device (e.g., outside a structure that the device is enclosed in), to determine services or products available to the user, to identify a social network or social-network information, to determine contact information of entities (e.g., public-service entities such as an emergency-response team, the police or a hospital) near the device, to identify statistical or environmental conditions, trends or other information associated with a home or neighborhood, and so forth. -
FIG. 5A illustrates arepresentative operating environment 500 in which a hubdevice server system 508 provides data processing for monitoring and facilitating review of alert events (e.g., motion events) in video streams captured byvideo cameras 118. As shown inFIG. 5A , the hubdevice server system 508 receives video data from video sources 522 (including cameras 118) located at various physical locations (e.g., inside homes, restaurants, stores, streets, parking lots, and/or thesmart home environments 100 ofFIG. 1 ). Eachvideo source 522 may be bound to one or more user (e.g., reviewer) accounts, and the hubdevice server system 508 provides video monitoring data for thevideo source 522 toclient devices 504 associated with the reviewer accounts. For example, the portableelectronic device 166 is an example of aclient device 504. - In some implementations, the smart home
provider server system 164 or a component thereof serves as the hubdevice server system 508; the hubdevice server system 508 is a part or component of the smart homeprovider server system 164. In some implementations, the hubdevice server system 508 is a dedicated video processing server that provides video processing services to video sources andclient devices 504 independent of other services provided by the hubdevice server system 508. An example of a video processing server is described below with reference toFIG. 5B . - In some implementations, each of the
video sources 522 includes one ormore video cameras 118 that capture video and send the captured video to the hubdevice server system 508 substantially in real-time. In some implementations, each of thevideo sources 522 optionally includes a controller device (not shown) that serves as an intermediary between the one ormore cameras 118 and the hubdevice server system 508. The controller device receives the video data from the one ormore cameras 118, optionally performs some preliminary processing on the video data, and sends the video data to the hubdevice server system 508 on behalf of the one ormore cameras 118 substantially in real-time. In some implementations, each camera has its own on-board processing capabilities to perform some preliminary processing on the captured video data before sending the processed video data (along with metadata obtained through the preliminary processing) to the controller device and/or the hubdevice server system 508. - In some implementations, a
camera 118 of avideo source 522 captures video at a first resolution (e.g., 720P and/or 1080P) and/or a first frame rate (24 frames per second), and sends the captured video to the hubdevice server system 508 at both the first resolution (e.g., the original capture resolution(s), the high-quality resolution(s) such as 1080P and/or 720P) and the first frame rate, and at a second, different resolution (e.g., 180P) and/or a second frame rate (e.g., 5 frames per second or 10 frames per second). For example, thecamera 118 captures a video 523-1 at 720P and/or 1080P resolution (thecamera 118 may capture a video at 1080P and create a downscaled 720P version, or capture at both 720P and 1080P). Thevideo source 522 creates a second (or third), rescaled (and optionally at a different frame rate than the version 523-1) version 525-1 of the captured video at 180P resolution, and transmits both the original captured version 523-1 (i.e., 1080P and/or 720P) and the rescaled version 525-1 (i.e., the 180P version) to the hubdevice server system 508 for storage. In some implementations, the rescaled version has a lower resolution, and optionally a lower frame rate, than the original captured video. The hubdevice server system 508 transmits the original captured version or the rescaled version to aclient 504, depending on the context. For example, the hubdevice server system 508 transmits the rescaled version when transmitting multiple videos to thesame client device 504 for concurrent monitoring by the user, and transmits the original captured version in other contexts. In some implementations, the hubdevice server system 508 downscales the original captured version to a lower resolution, and transmits the downscaled version. - In some implementations, a
camera 118 of avideo source 522 captures video at a first resolution (e.g., 720P and/or 1080P) and/or a first frame rate, and sends the captured video to the hubdevice server system 508 at the first resolution (e.g., the original capture resolution(s); the high-quality resolution(s) such as 1080P and/or 720P) and first frame rate for storage. When the hubdevice server system 508 transmits the video to a client device, the hubdevice server system 508 may downscale the video to a second, lower resolution (e.g., 180P) and/or second, lower frame rate for the transmission, depending on the context. For example, the hubdevice server system 508 transmits the downscaled version when transmitting multiple videos to thesame client device 504 for concurrent monitoring by the user, and transmits the original captured version in other contexts. - As shown in
FIG. 5A , in accordance with some implementations, each of theclient devices 504 includes a client-side module 502. The client-side module 502 communicates with a server-side module 506 executed on the hubdevice server system 508 through the one ormore networks 162. The client-side module 502 provides client-side functionalities for the event monitoring and review processing and communications with the server-side module 506. The server-side module 506 provides server-side functionalities for event monitoring and review processing for any number of client-side modules 502 each residing on arespective client device 504. The server-side module 506 also provides server-side functionalities for video processing and camera control for any number of thevideo sources 522, including any number of control devices and thecameras 118. - In some implementations, the server-
side module 506 includes one ormore processors 512, avideo storage database 514, device and account databases 516, an I/O interface to one ormore client devices 518, and an I/O interface to one ormore video sources 520. The I/O interface to one ormore clients 518 facilitates the client-facing input and output processing for the server-side module 506. In some implementations, the I/O interface toclients 518 or a transcoding proxy computer (not shown) rescales (e.g., downscales) and/or changes the frame rate of video for transmission to aclient 504. The databases 516 store a plurality of profiles for reviewer accounts registered with the video processing server, where a respective user profile includes account credentials for a respective reviewer account, and one or more video sources linked to the respective reviewer account. The I/O interface to one ormore video sources 520 facilitates communications with one or more video sources 522 (e.g., groups of one ormore cameras 118 and associated controller devices). Thevideo storage database 514 stores raw video data received from thevideo sources 522, as well as various types of metadata, such as motion events, event categories, event category models, event filters, and event masks, for use in data processing for event monitoring and review for each reviewer account. Thevideo storage database 514 also includes in some implementations a collection of curated and condensed video frames (e.g., extracted-frames video, described further below) covering hours or days of stored raw video to facilitate fast, seamless user review/scrubbing using aclient side module 502 through key events/cuepoints that occurred in those hours and days of stored video without needing to download to or review on aclient device 504 the raw video directly. - In some implementations, the server-
side module 506 receives information regarding alert events detected by other smart devices 204 (e.g., hazards, sound, vibration, motion). In accordance with the alert event information, the server-side module 506 instructs one ormore video sources 522 in thesmart home environment 100 where the alert event is detected to capture video and/or associate with the alert event video, received from thevideo sources 522 in the samesmart home environment 100, that is contemporaneous or proximate in time with the alert event. - Examples of a
representative client device 504 include, but are not limited to, a handheld computer, a wearable computing device, a personal digital assistant (PDA), a tablet computer, a laptop computer, a desktop computer, a cellular telephone, a smart phone, an enhanced general packet radio service (EGPRS) mobile phone, a media player, a navigation device, a game console, a television, a remote control, a point-of-sale (POS) terminal, vehicle-mounted computer, an ebook reader, or a combination of any two or more of these data processing devices or other data processing devices. For example, client devices 504-1, 504-2, and 504-m are a smart phone, a tablet computer, and a laptop computer, respectively. - Examples of the one or
more networks 162 include local area networks (LAN) and wide area networks (WAN) such as the Internet. The one ormore networks 162 are, optionally, implemented using any known network protocol, including various wired or wireless protocols, such as Ethernet, Universal Serial Bus (USB), FIREWIRE, Long Term Evolution (LTE), Global System for Mobile Communications (GSM), Enhanced Data GSM Environment (EDGE), code division multiple access (CDMA), time division multiple access (TDMA), Bluetooth, Wi-Fi, voice over Internet Protocol (VoIP), Wi-MAX, or any other suitable communication protocol. - In some implementations, the hub
device server system 508 is implemented on one or more standalone data processing apparatuses or a distributed network of computers. In some implementations, the hubdevice server system 508 also employs various virtual devices and/or services of third party service providers (e.g., third-party cloud service providers) to provide the underlying computing resources and/or infrastructure resources of the hubdevice server system 508. In some implementations, the hubdevice server system 508 includes, but is not limited to, a handheld computer, a tablet computer, a laptop computer, a desktop computer, or a combination of any two or more of these data processing devices or other data processing devices. - The server-
client environment 500 shown inFIG. 5A includes both a client-side portion (e.g., the client-side module 502) and a server-side portion (e.g., the server-side module 506). The division of functionalities between the client and server portions of operatingenvironment 500 can vary in different implementations. Similarly, the division of functionalities between thevideo source 522 and the hubdevice server system 508 can vary in different implementations. For example, in some implementations, client-side module 502 is a thin-client that provides only user-facing input and output processing functions, and delegates all other data processing functionalities to a backend server (e.g., the hub device server system 508). Similarly, in some implementations, a respective one of thevideo sources 522 is a simple video capturing device that continuously captures and streams video data to the hubdevice server system 508 with no or limited local preliminary processing on the video data. Although many aspects of the present technology are described from the perspective of the hubdevice server system 508, the corresponding actions performed by theclient device 504 and/or thevideo sources 522 would be apparent to ones skilled in the art without any creative efforts. Similarly, some aspects of the present technology may be described from the perspective of the client device or the video source, and the corresponding actions performed by the video server would be apparent to ones skilled in the art without any creative efforts. Furthermore, some aspects of the present technology may be performed by the hubdevice server system 508, theclient device 504, and thevideo sources 522 cooperatively. - It should be understood that operating
environment 500 that involves the hubdevice server system 508, thevideo sources 522 and thevideo cameras 118 is merely an example. Many aspects of operatingenvironment 500 are generally applicable in other operating environments in which a server system provides data processing for monitoring and facilitating review of data captured by other types of electronic devices (e.g.,smart thermostats 102,smart hazard detectors 104,smart doorbells 106, smart wall plugs 110,appliances 112 and the like). - The electronic devices, the client devices or the server system communicate with each other using the one or
more communication networks 162. In an example smart home environment, two or more devices (e.g., thenetwork interface device 160, thehub device 180, and the client devices 504-m) are located in close proximity to each other, such that they could be communicatively coupled in thesame sub-network 162A via wired connections, a WLAN or a Bluetooth Personal Area Network (PAN). The Bluetooth PAN is optionally established based on classical Bluetooth technology or Bluetooth Low Energy (BLE) technology. This smart home environment further includes one or more otherradio communication networks 162B through which at least some of the electronic devices of the video sources 522-n exchange data with thehub device 180. Alternatively, in some situations, some of the electronic devices of the video sources 522-n communicate with thenetwork interface device 160 directly via thesame sub-network 162A that couplesdevices network 162C), both the client device 504-m and the electronic devices of the video sources 522-n communicate directly via the network(s) 162 without passing thenetwork interface device 160 or thehub device 180. - In some implementations, during normal operation, the
network interface device 160 and thehub device 180 communicate with each other to form a network gateway through which data are exchanged with the electronic device of the video sources 522-n. As explained above, thenetwork interface device 160 and thehub device 180 optionally communicate with each other via asub-network 162A. - In some implementations, the
hub device 180 is omitted, and the functionality of thehub device 180 is performed by the hubdevice server system 508,video server system 552, or smart homeprovider server system 164. - In some implementations, the hub
device server system 508 is, or includes, a dedicated video processing server.FIG. 5B illustrates arepresentative operating environment 550 in which avideo server system 552 serves as a dedicated video processing server and provides data processing for monitoring and facilitating review of alert events (e.g., motion events) in video streams captured byvideo cameras 118. As shown inFIG. 5B , thevideo server system 552 receives video data from video sources 522 (including cameras 118) located at various physical locations (e.g., inside homes, restaurants, stores, streets, parking lots, and/or thesmart home environments 100 ofFIG. 1 ). Eachvideo source 522 may be bound to one or more user (e.g., reviewer) accounts, and thevideo server system 552 provides video monitoring data for thevideo source 522 toclient devices 504 associated with the reviewer accounts. For example, the portableelectronic device 166 is an example of theclient device 504. - In some implementations, the smart home
provider server system 164 or a component thereof serves as thevideo server system 552; thevideo server system 552 is a part or component of the smart homeprovider server system 164. In some implementations, thevideo server system 552 is separate from the smart homeprovider server system 164, and provides video processing services tovideo sources 522 andclient devices 504 independent of other services provided by the smart homeprovider server system 164. In some implementations, the smart homeprovider server system 164 and thevideo server system 552 are separate but communicate information with each other to provide functionality to users. For example, a detection of a hazard may be communicated by the smart homeprovider server system 164 to thevideo server system 552, and thevideo server system 552, in accordance with the communication regarding the detection of the hazard, records, processes, and/or provides video associated with the detected hazard. - In some implementations, each of the
video sources 522 includes one ormore video cameras 118 that capture video and send the captured video to thevideo server system 552 substantially in real-time. In some implementations, each of thevideo sources 522 optionally includes a controller device (not shown) that serves as an intermediary between the one ormore cameras 118 and thevideo server system 552. The controller device receives the video data from the one ormore cameras 118, optionally, performs some preliminary processing on the video data, and sends the video data to thevideo server system 552 on behalf of the one ormore cameras 118 substantially in real-time. In some implementations, each camera has its own on-board processing capabilities to perform some preliminary processing on the captured video data before sending the processed video data (along with metadata obtained through the preliminary processing) to the controller device and/or thevideo server system 552. - In some implementations, a
camera 118 of avideo source 522 captures video at a first resolution (e.g., 720P and/or 1080P) and/or a first frame rate (24 frames per second), and sends the captured video to thevideo server system 552 at both the first resolution (e.g., the original capture resolution(s), the high-quality resolution(s)) and the first frame rate, and a second, different resolution (e.g., 180P) and/or a second frame rate (e.g., 5 frames per second or 10 frames per second). For example, thecamera 118 captures a video 523-1 at 720P and/or 1080P resolution (thecamera 118 may capture a video at 1080P and create a downscaled 720P version, or capture at both 720P and 1080P). Thevideo source 522 creates a second (or third), rescaled (and optionally at a different frame rate than the version 523-1) version 525-1 of the captured video at 180P resolution, and transmits both the original captured version 523-1 (i.e., 1080P and/or 720P) and the rescaled version 525-1 (i.e., the 180P version) to thevideo server system 552 for storage. In some implementations, the rescaled version has a lower resolution, and optionally a lower frame rate, than the original captured video. Thevideo server system 552 transmits the original captured version or the rescaled version to aclient 504, depending on the context. For example, thevideo server system 552 transmits the rescaled version when transmitting multiple videos to thesame client device 504 for concurrent monitoring by the user, and transmits the original captured version in other contexts. In some implementations, thevideo server system 552 downscales the original captured version to a lower resolution, and transmits the downscaled version. - In some implementations, a
camera 118 of avideo source 522 captures video at a first resolution (e.g., 720P and/or 1080P)) and/or a first frame rate, and sends the captured video to thevideo server system 552 at the first resolution (e.g., the original capture resolution(s), the high-quality resolution(s) such as 1080P and/or 720P) and the first fame rate for storage. When thevideo server system 552 transmits the video to a client device, thevideo server system 552 may downscale the video to a second, lower resolution (e.g., 180P) and/or second, lower frame rate for the transmission, depending on the context. For example, thevideo server system 552 transmits the downscaled version when transmitting multiple videos to thesame client device 504 for concurrent monitoring by the user, and transmits the original captured version in other contexts. - As shown in
FIG. 5B , in accordance with some implementations, each of theclient devices 504 includes a client-side module 502. The client-side module 502 communicates with thevideo server system 552 through the one ormore networks 162. In some implementations, thevideo server system 552 includes avideo server 552, aclient interface server 556, and acamera interface server 558. In some implementations, thevideo server 552 includes the server-side module 506 and its components and modules (FIG. 5A ) or one or more respective components and/or modules of the server-side module 506. The client-side module 502 provides client-side functionalities for the event monitoring and review processing and communications with thevideo server system 552. Thevideo server system 552 provides server-side functionalities for event monitoring and review processing for any number of client-side modules 502 each residing on arespective client device 504. Thevideo server system 556 also provides server-side functionalities for video processing and camera control for any number of thevideo sources 522, including any number of control devices and thecameras 118. - In some implementations, the
video server 554 includes one ormore processors 512, avideo storage database 514, and device and account databases 516. In some implementations, thevideo server system 552 also includes aclient interface server 556 and acamera interface server 558. Theclient interface server 556 provides an I/O interface to one ormore client devices 504, and thecamera interface server 558 provides an I/O interface to one ormore video sources 520. Theclient interface server 556 facilitates the client-facing input and output processing for thevideo server system 552. For example, theclient interface server 556 generates web pages for reviewing and monitoring video captured by thevideo sources 522 in a web browser application at aclient 504. In some implementations, theclient interface server 556 or a transcoding proxy computer rescales (e.g., downscales) and/or changes the frame rate of video for transmission to aclient 504. In some implementations, theclient interface server 504 also serves as the transcoding proxy. The databases 516 store a plurality of profiles for reviewer accounts registered with the video processing server, where a respective user profile includes account credentials for a respective reviewer account, and one or more video sources linked to the respective reviewer account. Thecamera interface server 558 facilitates communications with one or more video sources 522 (e.g., groups of one ormore cameras 118 and associated controller devices). Thevideo storage database 514 stores raw video data received from thevideo sources 522, as well as various types of metadata, such as motion events, event categories, event category models, event filters, event masks, alert events, and camera histories, for use in data processing for event monitoring and review for each reviewer account. - In some implementations, the
video server system 552 receives information regarding alert events detected by other smart devices 204 (e.g., hazards, sound, vibration, motion. In accordance with the alert event information, thevideo server system 552 instructs one ormore video sources 522 in thesmart home environment 100 where the alert event is detected to capture video and/or associate with the alert event video, received from thevideo sources 522 in the samesmart home environment 100, that is contemporaneous or proximate in time with the alert event. - Examples of a
representative client device 504 include, but are not limited to, a handheld computer, a wearable computing device, a personal digital assistant (PDA), a tablet computer, a laptop computer, a desktop computer, a cellular telephone, a smart phone, an enhanced general packet radio service (EGPRS) mobile phone, a media player, a navigation device, a game console, a television, a remote control, a point-of-sale (POS) terminal, vehicle-mounted computer, an ebook reader, or a combination of any two or more of these data processing devices or other data processing devices. For example, client devices 504-1, 504-2, and 504-m are a smart phone, a tablet computer, and a laptop computer, respectively. - Examples of the one or
more networks 162 include local area networks (LAN) and wide area networks (WAN) such as the Internet. The one ormore networks 162 are, optionally, implemented using any known network protocol, including various wired or wireless protocols, such as Ethernet, Universal Serial Bus (USB), FIREWIRE, Long Term Evolution (LTE), Global System for Mobile Communications (GSM), Enhanced Data GSM Environment (EDGE), code division multiple access (CDMA), time division multiple access (TDMA), Bluetooth, Wi-Fi, voice over Internet Protocol (VoIP), Wi-MAX, or any other suitable communication protocol. - In some implementations, the
video server system 552 is implemented on one or more standalone data processing apparatuses or a distributed network of computers. In some implementations, thevideo server 554, theclient interface server 556, and thecamera interface server 558 are each respectively implemented on one or more standalone data processing apparatuses or a distributed network of computers. In some implementations, thevideo server system 552 also employs various virtual devices and/or services of third party service providers (e.g., third-party cloud service providers) to provide the underlying computing resources and/or infrastructure resources of thevideo server system 552. In some implementations, thevideo server system 552 includes, but is not limited to, a handheld computer, a tablet computer, a laptop computer, a desktop computer, or a combination of any two or more of these data processing devices or other data processing devices. - The server-
client environment 550 shown inFIG. 5B includes both a client-side portion (e.g., the client-side module 502) and a server-side portion (e.g., the components and modules in the video server system 552). The division of functionalities between the client and server portions of operatingenvironment 550 can vary in different implementations. Similarly, the division of functionalities between thevideo source 522 and thevideo server system 552 can vary in different implementations. For example, in some implementations, client-side module 502 is a thin-client that provides only user-facing input and output processing functions, and delegates all other data processing functionalities to a backend server (e.g., the video server system 552). Similarly, in some implementations, a respective one of thevideo sources 522 is a simple video capturing device that continuously captures and streams video data to thevideo server system 552 with no or limited local preliminary processing on the video data. Although many aspects of the present technology are described from the perspective of thevideo server system 552, the corresponding actions performed by theclient device 504 and/or thevideo sources 522 would be apparent to ones skilled in the art without any creative efforts. Similarly, some aspects of the present technology may be described from the perspective of the client device or the video source, and the corresponding actions performed by the video server would be apparent to ones skilled in the art without any creative efforts. Furthermore, some aspects of the present technology may be performed by thevideo server system 552, theclient device 504, and thevideo sources 522 cooperatively. - It should be understood that operating
environment 550 that involves thevideo server system 552, thevideo sources 522 and thevideo cameras 118 is merely an example. Many aspects of operatingenvironment 550 are generally applicable in other operating environments in which a server system provides data processing for monitoring and facilitating review of data captured by other types of electronic devices (e.g.,smart thermostats 102,smart hazard detectors 104,smart doorbells 106, smart wall plugs 110,appliances 112 and the like). - The electronic devices, the client devices or the server system communicate with each other using the one or
more communication networks 162. In an example smart home environment, two or more devices (e.g., thenetwork interface device 160, thehub device 180, and the client devices 504-m) are located in close proximity to each other, such that they could be communicatively coupled in thesame sub-network 162A via wired connections, a WLAN or a Bluetooth Personal Area Network (PAN). The Bluetooth PAN is optionally established based on classical Bluetooth technology or Bluetooth Low Energy (BLE) technology. This smart home environment further includes one or more otherradio communication networks 162B through which at least some of the electronic devices of the video sources 522-n exchange data with thehub device 180. Alternatively, in some situations, some of the electronic devices of the video sources 522-n communicate with thenetwork interface device 160 directly via thesame sub-network 162A that couplesdevices network 162C), both the client device 504-m and the electronic devices of the video sources 522-n communicate directly via the network(s) 162 without passing thenetwork interface device 160 or thehub device 180. - In some implementations, during normal operation, the
network interface device 160 and thehub device 180 communicate with each other to form a network gateway through which data are exchanged with the electronic device of the video sources 522-n. As explained above, thenetwork interface device 160 and thehub device 180 optionally communicate with each other via asub-network 162A. - In some implementations, a
video source 522 may be private (e.g., its captured videos and history are accessible only to the associated user/account), public (e.g., its captured videos and history are accessible by anyone), or shared (e.g., its captured videos and history are accessible only to the associated user/account and other specific users/accounts with whom the associated user has authorized access (e.g., by sharing with the other specific users)). Whether avideo source 522 is private, public, or shared is configurable by the associated user. - In some implementations, the
camera 118 also performs preliminary motion detection on video captured by thecamera 118. For example, thecamera 118 analyzes the captured video for significant changes in pixels. When motion is detected by the preliminary motion detection, thecamera 118 transmits information to the hubdevice server system 508 orvideo server system 552 informing the server system of the preliminary detected motion. The hubdevice server system 508 orvideo server system 552, in accordance with the information of the detected motion, may activate sending of a motion detection notification to aclient device 504, log the preliminary detected motion as an alert event, and/or perform additional analysis of the captured video to confirm and/or classify the preliminary detected motion. -
FIG. 6 is a block diagram illustrating arepresentative hub device 180 in accordance with some implementations. In some implementations, thehub device 180 includes one or more processing units (e.g., CPUs, ASICs, FPGAs, microprocessors, and the like) 602, one ormore communication interfaces 604,memory 606,radios 640, and one ormore communication buses 608 for interconnecting these components (sometimes called a chipset). In some implementations, thehub device 180 includes one ormore input devices 610 such as one or more buttons for receiving input. In some implementations, thehub device 180 includes one ormore output devices 612 such as one or more indicator lights, a sound card, a speaker, a small display for displaying textual information and error codes, etc. Furthermore, in some implementations, thehub device 180 uses a microphone and voice recognition or a camera and gesture recognition to supplement or replace the keyboard. In some implementations, thehub device 180 includes alocation detection device 614, such as a GPS (global positioning satellite) or other geo-location receiver, for determining the location of thehub device 180. - The
hub device 180 optionally includes one or more built-in sensors (not shown), including, for example, one or more thermal radiation sensors, ambient temperature sensors, humidity sensors, IR sensors, occupancy sensors (e.g., using RFID sensors), ambient light sensors, motion detectors, accelerometers, and/or gyroscopes. - The
radios 640 enables one or more radio communication networks in the smart home environments, and allows a hub device to communicate with smart devices. In some implementations, theradios 640 are capable of data communications using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), and/or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document. - Communication interfaces 604 include, for example, hardware capable of data communications using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) and/or any of a variety of custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document.
-
Memory 606 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.Memory 606, or alternatively the non-volatile memory withinmemory 606, includes a non-transitory computer readable storage medium. In some implementations,memory 606, or the non-transitory computer readable storage medium ofmemory 606, stores the following programs, modules, and data structures, or a subset or superset thereof: -
-
Operating logic 616 including procedures for handling various basic system services and for performing hardware dependent tasks; - Hub
device communication module 618 for connecting to and communicating with other network devices (e.g.,network interface 160, such as a router that provides Internet connectivity, networked storage devices, network routing devices,server system 508, etc.) connected to one ormore networks 162 via one or more communication interfaces 604 (wired or wireless); -
Radio Communication Module 620 for connecting thehub device 180 to other devices (e.g., controller devices,smart devices 204 insmart home environment 100, client devices 504) via one or more radio communication devices (e.g., radios 640); - User interface module 622 for providing and displaying a user interface in which settings, captured data, and/or other data for one or more devices (e.g.,
smart devices 204 in smart home environment 100) can be configured and/or viewed; and -
Hub device database 624, including but not limited to:-
Sensor information 6240 for storing and managing data received, detected, and/or transmitted by one or more sensors of thehub device 180 and/or one or more other devices (e.g.,smart devices 204 in smart home environment 100); -
Device settings 6242 for storing operational settings for one or more devices (e.g., coupledsmart devices 204 in smart home environment 100); and - Communication protocol information 6244 for storing and managing protocol information for one or more protocols (e.g., standard wireless protocols, such as ZigBee, Z-Wave, etc., and/or custom or standard wired protocols, such as Ethernet).
-
-
- Each of the above identified elements (e.g., modules stored in memory 206 of hub device 180) may be stored in one or more of the previously mentioned memory devices (e.g., the memory of any of the smart devices in
smart home environment 100,FIG. 1 ), and corresponds to a set of instructions for performing a function described above. The above identified modules or programs (i.e., sets of instructions) need not be implemented as separate software programs, procedures, or modules, and thus various subsets of these modules may be combined or otherwise re-arranged in various implementations. In some implementations,memory 606, optionally, stores a subset of the modules and data structures identified above. Furthermore,memory 606, optionally, stores additional modules and data structures not described above. -
FIG. 7A is a block diagram illustrating the hubdevice server system 508 in accordance with some implementations. The hubdevice server system 508, typically, includes one or more processing units (CPUs) 702, one or more network interfaces 704 (e.g., including an I/O interface to one or more client devices and an I/O interface to one or more electronic devices),memory 706, and one ormore communication buses 708 for interconnecting these components (sometimes called a chipset).Memory 706 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.Memory 706, optionally, includes one or more storage devices remotely located from one ormore processing units 702.Memory 706, or alternatively the non-volatile memory withinmemory 706, includes a non-transitory computer readable storage medium. In some implementations,memory 706, or the non-transitory computer readable storage medium ofmemory 706, stores the following programs, modules, and data structures, or a subset or superset thereof: -
-
Operating system 710 including procedures for handling various basic system services and for performing hardware dependent tasks; -
Network communication module 712 for connecting the hubdevice server system 508 to other systems and devices (e.g., client devices, electronic devices, and systems connected to one ormore networks 162,FIGS. 1-5B ) via one or more network interfaces 704 (wired or wireless); - Server-
side module 714, which provides server-side functionalities for device control, data processing and data review, including but not limited to:-
Data receiving module 7140 for receiving data from electronic devices (e.g., video data from acamera 118,FIG. 1 ) via thehub device 180, and preparing the received data for further processing and storage in thedata storage database 7160; - Hub and device control module 7142 for generating and sending server-initiated control commands to modify operation modes of electronic devices (e.g., devices of a smart home environment 100), and/or receiving (e.g., from client devices 504) and forwarding user-initiated control commands to modify operation modes of the electronic devices;
-
Data processing module 7144 for processing the data provided by the electronic devices, and/or preparing and sending processed data to a device for review (e.g.,client devices 504 for review by a user); and
-
-
Server database 716, including but not limited to:-
Data storage database 7160 for storing data associated with each electronic device (e.g., each camera) of each user account, as well as data processing models, processed data results, and other relevant metadata (e.g., names of data results, location of electronic device, creation time, duration, settings of the electronic device, etc.) associated with the data, wherein (optionally) all or a portion of the data and/or processing associated with thehub device 180 or smart devices are stored securely; -
Account database 7162 for storing account information for user accounts, including user account information, information and settings for linked hub devices and electronic devices (e.g., hub device identifications), hub device specific secrets, relevant user and hardware characteristics (e.g., service tier, device model, storage capacity, processing capabilities, etc.), user interface settings, data review preferences, etc., where the information for associated electronic devices includes, but is not limited to, one or more device identifiers (e.g., MAC address and UUID), device specific secrets, and displayed titles; and -
Device Information Database 7164 for storing device information related to one or more hub devices, e.g., device identifiers and hub device specific secrets, independently of whether the corresponding hub devices have been associated with any user account.
-
-
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above. The above identified modules or programs (i.e., sets of instructions) need not be implemented as separate software programs, procedures, or modules, and thus various subsets of these modules may be combined or otherwise re-arranged in various implementations. In some implementations,
memory 706, optionally, stores a subset of the modules and data structures identified above. Furthermore,memory 706, optionally, stores additional modules and data structures not described above. -
FIGS. 7B-7C are block diagrams illustrating thevideo server 554 in accordance with some implementations. Thevideo server 554, typically, includes one or more processing units (CPUs) 718, one ormore network interfaces 720,memory 722, and one ormore communication buses 724 for interconnecting these components (sometimes called a chipset).Memory 722 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.Memory 722, optionally, includes one or more storage devices remotely located from one ormore processing units 718.Memory 722, or alternatively the non-volatile memory withinmemory 722, includes a non-transitory computer readable storage medium. In some implementations,memory 722, or the non-transitory computer readable storage medium ofmemory 722, stores the following programs, modules, and data structures, or a subset or superset thereof: -
-
Operating system 726 including procedures for handling various basic system services and for performing hardware dependent tasks; -
Network communication module 728 for connecting thevideo server 554 to other systems and devices (e.g., client devices, electronic devices, and systems connected to one ormore networks 162,FIGS. 1-5B ) via one or more network interfaces 720 (wired or wireless); -
Video server module 730, which provides server-side data processing and functionalities for video and event monitoring and review, including but not limited to:-
Account administration module 7300 for creating reviewer accounts, performing camera registration processing to establish associations between video sources to their respective reviewer accounts, and providing account login-services to theclient devices 504; - Video
data receiving module 7302 for receiving raw video data from thevideo sources 522, and preparing the received video data for event processing and long-term storage in thevideo storage database 514; -
Camera control module 7304 for generating and sending server-initiated control commands to modify the operation modes of the video sources, and/or receiving and forwarding user-initiated control commands to modify the operation modes of thevideo sources 522; -
Event detection module 7306 for detecting motion event candidates in video streams from each of thevideo sources 522, including motion track identification, false positive suppression, and event mask generation and caching; -
Event categorization module 7308 for categorizing motion events detected in received video streams; -
Zone creation module 73010 for generating zones of interest in accordance with user input; -
Person identification module 73012 for identifying characteristics associated with presence of humans in the received video streams; -
Filter application module 73014 for selecting event filters (e.g., event categories, zones of interest, a human filter, etc.) and applying the selected event filter to past and new motion events detected in the video streams; -
Zone monitoring module 73016 for monitoring motions within selected zones of interest and generating notifications for new motion events detected within the selected zones of interest, where the zone monitoring takes into account changes in surrounding context of the zones and is not confined within the selected zones of interest; - Real-time motion
event presentation module 73018 for dynamically changing characteristics of event indicators displayed in user interfaces as new event filters, such as new event categories or new zones of interest, are created, and for providing real-time notifications as new motion events are detected in the video streams; and - Event post-processing module 3020 for providing summary time-lapse for past motion events detected in video streams, and providing event and category editing functions to user for revising past event categorization results;
-
Alert events module 73022 for receiving information on alert events (e.g., detected hazards, detected sounds, etc.), instructingcameras 118 to capture video in accordance with alert event information, and determining chronologies of alert events; -
Camera events module 73024 for associating captured video with alert events, from the samesmart home environment 100, that are proximate or contemporaneous in time, and logging camera histories of camera events; -
Frame extraction module 73026 for extracting frames from raw video data from thevideo sources 522; -
Encoding module 73028 for encoding extracted-frames video using frames extracted by theframe extraction module 73026; and -
Thumbnails module 73030 for selecting frames for and generating thumbnails for respective portions of video corresponding to events or alerts; and
-
-
Server database 732, including but not limited to:-
Video storage database 7320 storing raw video data associated with each of the video sources 522 (each including one or more cameras 118) of each reviewer account, as well as event categorization models (e.g., event clusters, categorization criteria, etc.), event categorization results (e.g., recognized event categories, and assignment of past motion events to the recognized event categories, representative events for each recognized event category, etc.), event masks for past motion events, video segments for each past motion event, preview video (e.g., sprites) of past motion events, and other relevant metadata (e.g., names of event categories, location of thecameras 118, creation time, duration, etc.) associated with the motion events; -
Account database 7324 for storing account information for user accounts, including user account information, information and settings for linked hub devices and electronic devices (e.g., hub device identifications), hub device specific secrets, relevant user and hardware characteristics (e.g., service tier, device model, storage capacity, processing capabilities, etc.), user interface settings, data review preferences, etc., where the information for associated electronic devices includes, but is not limited to, one or more device identifiers (e.g., MAC address and UUID), device specific secrets, and displayed titles; -
Device Information Database 7326 for storing device information related to one or more hub devices, e.g., device identifiers and hub device specific secrets, independently of whether the corresponding hub devices have been associated with any user account; -
Camera events history 7328 for storing per-camera histories of camera events, including alert events, chronologies of alert events, and references to associated videos in thevideo storage database 7320; - Extracted frames and extracted-frames videos database 7330 for storing frames extracted from videos received from cameras 118 (e.g., extracted from high quality videos 7321) and for storing extracted-frames video generated by encoding
module 73028 by encoding (e.g., in H.264 encoding format) series of extracted frames; and -
Event thumbnails 7332 for storing thumbnails representative of portions of videos corresponding to events or alerts.
-
-
- Video data stored in the
video storage database 7320 includes high-quality versions 7321 and low-quality versions 7322 of videos associated with each of the video sources 522. High-quality video 7321 includes video in relatively high resolutions (e.g., 720P and/or 1080P) and relatively high frame rates (e.g., 24 frames per second). Low-quality video 7322 includes video in relatively low resolutions (e.g., 180P) and relatively low frame rates (e.g., 5 frames per second, 10 frames per second). - Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above. The above identified modules or programs (i.e., sets of instructions) need not be implemented as separate software programs, procedures, or modules, and thus various subsets of these modules may be combined or otherwise re-arranged in various implementations. In some implementations,
memory 722, optionally, stores a subset of the modules and data structures identified above. Furthermore,memory 722, optionally, stores additional modules and data structures not described above. -
FIG. 7D is a block diagram illustrating theclient interface server 556 in accordance with some implementations. Theclient interface server 556, typically, includes one or more processing units (CPUs) 734, one ormore network interfaces 736,memory 738, and one ormore communication buses 740 for interconnecting these components (sometimes called a chipset).Memory 738 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.Memory 738, optionally, includes one or more storage devices remotely located from one ormore processing units 734.Memory 738, or alternatively the non-volatile memory withinmemory 738, includes a non-transitory computer readable storage medium. In some implementations,memory 738, or the non-transitory computer readable storage medium ofmemory 738, stores the following programs, modules, and data structures, or a subset or superset thereof: -
-
Operating system 742 including procedures for handling various basic system services and for performing hardware dependent tasks; -
Network communication module 744 for connecting theclient interface server 556 to other systems and devices (e.g., client devices,video server 554, and systems connected to one ormore networks 162,FIGS. 1-5B ) via one or more network interfaces 740 (wired or wireless); -
Client interface module 746, which provides an I/O interface betweenclient devices 504 and thevideo server 554, including but not limited to:-
Video feed module 7462 for transmitting videos from the video server system, or images extracted from same videos, to client devices as video streams or periodically refreshed images, and optionally transmitting particular views of videos or images from videos; -
Transcode module 7464 for rescaling (e.g., downscaling from 720P to 180P) video for transmission toclient devices 504; -
Client input module 7466 for receiving and processing input commands from client devices (e.g., client device 504) 504 to change the video view being transmitted or controlling avideo source 522; -
Camera view module 7468 for determining which views of videos or images from videos are to be transmitted to client devices; and - User interface module 74610 for generating user interfaces (e.g., web pages), transmitted to
client devices 504, for viewing video feeds and corresponding event histories.
-
-
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above. The above identified modules or programs (i.e., sets of instructions) need not be implemented as separate software programs, procedures, or modules, and thus various subsets of these modules may be combined or otherwise re-arranged in various implementations. In some implementations,
memory 738, optionally, stores a subset of the modules and data structures identified above. Furthermore,memory 738, optionally, stores additional modules and data structures not described above. -
FIG. 7E is a block diagram illustrating thecamera interface server 558 in accordance with some implementations. Thecamera interface server 558, typically, includes one or more processing units (CPUs) 748, one ormore network interfaces 750,memory 752, and one ormore communication buses 754 for interconnecting these components (sometimes called a chipset).Memory 752 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.Memory 752, optionally, includes one or more storage devices remotely located from one ormore processing units 748.Memory 752, or alternatively the non-volatile memory withinmemory 752, includes a non-transitory computer readable storage medium. In some implementations,memory 752, or the non-transitory computer readable storage medium ofmemory 752, stores the following programs, modules, and data structures, or a subset or superset thereof: -
-
Operating system 756 including procedures for handling various basic system services and for performing hardware dependent tasks; -
Network communication module 758 for connecting thecamera interface server 558 to other systems and devices (e.g., client devices,video server 554, and systems connected to one ormore networks 162,FIGS. 1-5B ) via one or more network interfaces 754 (wired or wireless); and -
Camera interface module 760 for providing an I/O interface betweenvideo sources 522 and thevideo server 554.
-
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above. The above identified modules or programs (i.e., sets of instructions) need not be implemented as separate software programs, procedures, or modules, and thus various subsets of these modules may be combined or otherwise re-arranged in various implementations. In some implementations,
memory 752, optionally, stores a subset of the modules and data structures identified above. Furthermore,memory 752, optionally, stores additional modules and data structures not described above. - In some implementations, at least some of the functions of the
video server 554,client interface server 556, andcamera interface server 558 are performed by the hubdevice server system 508, and the corresponding modules and sub-modules of these functions may be included in the hubdevice server system 508. In some implementations, at least some of the functions of the hubdevice server system 508 are performed by thevideo server 554,client interface server 556, and/orcamera interface server 558, and the corresponding modules and sub-modules of these functions may be included in thevideo server 554,client interface server 556, and/orcamera interface server 558. -
FIGS. 8A-8B are block diagrams illustrating arepresentative client device 504 associated with a user (e.g., reviewer) account in accordance with some implementations. Theclient device 504, typically, includes one or more processing units (CPUs) 802, one ormore network interfaces 804,memory 806, and one ormore communication buses 808 for interconnecting these components (sometimes called a chipset). The client device also includes a user interface 810 and one or more built-in sensors 890 (e.g.,accelerometer 892 and gyroscope 894). User interface 810 includes one ormore output devices 812 that enable presentation of media content, including one or more speakers and/or one or more visual displays. User interface 810 also includes one ormore input devices 814, including user interface components that facilitate user input such as a keyboard, a mouse, a voice-command input unit or microphone, a touch screen display, a touch-sensitive input pad, a gesture capturing camera, or other input buttons or controls. Furthermore, theclient device 504 optionally uses a microphone and voice recognition or a camera and gesture recognition to supplement or replace the keyboard. Further, theclient device 504 optionally uses the accelerometer to detect changes in the orientation of theclient device 504, and in particular applications and contexts interpret the change in orientation detected by the accelerometer as user input. In some implementations, theclient device 504 includes one or more cameras, scanners, or photo sensor units for capturing images (not shown). In some implementations, theclient device 504 optionally includes alocation detection device 816, such as a GPS (global positioning satellite) or other geo-location receiver, for determining the location of theclient device 504. -
Memory 806 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.Memory 806, optionally, includes one or more storage devices remotely located from one ormore processing units 802.Memory 806, or alternatively the non-volatile memory withinmemory 806, includes a non-transitory computer readable storage medium. In some implementations,memory 806, or the non-transitory computer readable storage medium ofmemory 806, stores the following programs, modules, and data structures, or a subset or superset thereof: -
-
Operating system 818 including procedures for handling various basic system services and for performing hardware dependent tasks; -
Network communication module 820 for connecting theclient device 504 to other systems and devices (e.g., hubdevice server system 508,video server system 552, video sources 522) connected to one ormore networks 162 via one or more network interfaces 804 (wired or wireless); -
Presentation module 821 for enabling presentation of information (e.g., user interfaces for application(s) 824 andweb browser module 823 or the client-side module 502, widgets, websites and web pages thereof, and/or games, audio and/or video content, text, etc.) at theclient device 504 via the one or more output devices 812 (e.g., displays, speakers, etc.) associated with the user interface 810; -
Input processing module 822 for detecting one or more user inputs or interactions from one of the one ormore input devices 814 and optionally theaccelerometer 892 and interpreting the detected input or interaction; -
Web browser module 823 for navigating, requesting (e.g., via HTTP), and displaying websites and web pages thereof, including a web interface for logging into a reviewer account, controlling the video sources associated with the reviewer account, establishing and selecting event filters, and editing and reviewing motion events detected in the video streams of the video sources; - One or
more applications 824 for execution by the client device 504 (e.g., games, social network applications, smart home applications, and/or other web or non-web based applications), for controlling devices (e.g., sending commands, configuring settings, etc. to hub devices and/or other client or electronic devices), and for reviewing data captured by the devices (e.g., device status and settings, captured data, or other information regarding the hub device or other connected devices); - User interface module 826 for providing and displaying a user interface in which settings, captured data, and/or other data for one or more devices (e.g.,
smart devices 204 in smart home environment 100) can be configured and/or viewed; - Client-
side module 502, which provides client-side data processing and functionalities for device control, data processing, data review, and monitoring and reviewing videos from one or more video sources and camera events, including but not limited to:- Hub device and
device control module 8280 for generating control commands for modifying an operating mode of the hub device or the electronic devices in accordance with user inputs; and -
Data review module 8282 for providing user interfaces for reviewing data processed by the hubdevice server system 508 orvideo server system 552; -
Account registration module 8284 for establishing a reviewer account and registering one or more video sources with the hubdevice server system 508 orvideo server system 552; -
Camera setup module 8286 for setting up one or more video sources within a local area network, and enabling the one or more video sources to access the hubdevice server system 508 orvideo server system 552 on the Internet through the local area network; -
Camera control module 8288 for generating control commands for modifying an operating mode of the one or more video sources in accordance with user input; - Event
review interface module 82810 for providing user interfaces for reviewing event timelines, camera histories with camera events, editing event categorization results, selecting event filters, presenting real-time filtered motion events based on existing and newly created event filters (e.g., event categories, zones of interest, a human filter, etc.), presenting real-time notifications (e.g., pop-ups) for newly detected motion events, and presenting smart time-lapse of selected motion events; -
Zone creation module 82814 for providing a user interface for creating zones of interest for each video stream in accordance with user input, and sending the definitions of the zones of interest to the hubdevice server system 508 orvideo server system 552; -
Notification module 82814 for generating real-time notifications for all or selected alert events or motion events on theclient device 504 outside of the event review user interface; -
Camera view module 82816 for generating control commands for modifying a view of a video transmitted to theclient device 504 in accordance with user input; -
Timeline module 82818 for presenting information corresponding to video transmitted to theclient device 504 in a timeline format, facilitating user manipulation of the information displayed in timeline format, and facilitating manipulation of display of the video in accordance with user manipulation of the information, including requesting additional video from the hubdevice server system 508 orvideo server system 552 in accordance with the user manipulation; and -
Decoding module 82820 for decoding extracted-frames video;
- Hub device and
-
Client data 830 storing data associated with the user account, electronic devices, andvideo sources 522, including, but is not limited to:-
Account data 8300 storing information related to both user accounts loaded on theclient device 504 and electronic devices (e.g., of the video sources 522) associated with the user accounts, wherein such information includes cached login credentials, hub device identifiers (e.g., MAC addresses and UUIDs), electronic device identifiers (e.g., MAC addresses and UUIDs), user interface settings, display preferences, authentication tokens and tags, password keys, etc.; - Local
data storage database 8302 for selectively storing raw or processed data associated with electronic devices (e.g., of thevideo sources 522, such as a camera 118); and -
Video data cache 8304 for caching video and image data from video feeds;
-
-
Blurred image data 832; - Blurring algorithms and
parameters 834, for generatingblurred image data 832 from video/image data invideo data cache 8304; - Cached extracted-
frames videos 836 for storing or caching extracted-frames videos received from thevideo server 554; and -
Cached event thumbnails 838 for storing or caching event thumbnails received from thevideo server 554.
-
-
Video data cache 8304 includes cached video/image data for respective cameras associated with a user of theclient device 804. For example, as shown inFIG. 8B , thevideo data cache 8304 includes cached video/image data 8304-1 for a first camera, cached video/image data 8304-2 for a second camera, up to cached video/image data 8304-p for a p-th camera. At a given moment,video data cache 8304 may not have cached video/image data for a given camera (e.g., due to the camera being newly associated with the user, due to the cache being cleared, due to the cached video/image data being expired and removed from the cache). -
Blurred image data 832 includes sets of progressively blurred images for respective cameras. For example, as shown inFIG. 8B , theblurred image data 832 includes blurred image data (e.g., a set of progressively blurred images) 832-1 for the first camera, blurred image data 832-2 for the second camera, up to blurred image data 832-p for the p-th camera. - In some implementations, the
client device 504 caches camera history as well asvideo data 8304. For example, whenever theclient device 504 receivescamera events history 7328 data from thevideo server 554, the most recent camera events history (e.g., history from the past two hours, the most recent 20 events) is cached at the client device (e.g., in client data 830). This cached history data may be accessed for quick display of camera history information. - In some implementations, the client-
side module 502 and user interface module 826 are parts, modules, or components of a particular application 824 (e.g., a smart home management application). - Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above. The above identified modules or programs (i.e., sets of instructions) need not be implemented as separate software programs, procedures, modules or data structures, and thus various subsets of these modules may be combined or otherwise re-arranged in various implementations. In some implementations,
memory 806, optionally, stores a subset of the modules and data structures identified above. Furthermore,memory 806, optionally, stores additional modules and data structures not described above. - In some implementations, at least some of the functions of the hub
device server system 508 or thevideo server system 552 are performed by theclient device 504, and the corresponding sub-modules of these functions may be located within theclient device 504 rather than the hubdevice server system 508 orvideo server system 552. In some implementations, at least some of the functions of theclient device 504 are performed by the hubdevice server system 508 orvideo server system 552, and the corresponding sub-modules of these functions may be located within the hubdevice server system 508 orvideo server system 552 rather than theclient device 504. Theclient device 504 and the hubdevice server system 508 orvideo server system 552 shown inFIGS. 7A-8 , respectively, are merely illustrative, and different configurations of the modules for implementing the functions described herein are possible in various implementations. -
FIG. 9A is a block diagram illustrating a representativesmart device 204 in accordance with some implementations. In some implementations, the smart device 204 (e.g., any devices of asmart home environment 100,FIGS. 1 and 2 ) includes one or more processing units (e.g., CPUs, ASICs, FPGAs, microprocessors, and the like) 902, one ormore communication interfaces 904,memory 906,radios 940, and one ormore communication buses 908 for interconnecting these components (sometimes called a chipset). In some implementations, user interface 910 includes one ormore output devices 912 that enable presentation of media content, including one or more speakers and/or one or more visual displays. In some implementations, user interface 910 also includes one ormore input devices 914, including user interface components that facilitate user input such as a keyboard, a mouse, a voice-command input unit or microphone, a touch screen display, a touch-sensitive input pad, a gesture capturing camera, or other input buttons or controls. Furthermore, somesmart devices 204 use a microphone and voice recognition or a camera and gesture recognition to supplement or replace the keyboard. In some implementations, thesmart device 204 includes one or more image/video capture devices 918 (e.g., cameras, video cameras, scanners, photo sensor units). Optionally, the client device includes a location detection device 916, such as a GPS (global positioning satellite) or other geo-location receiver, for determining the location of thesmart device 204. - The built-in
sensors 990 include, for example, one or more thermal radiation sensors, ambient temperature sensors, humidity sensors, IR sensors, occupancy sensors (e.g., using RFID sensors), ambient light sensors, motion detectors, accelerometers, and/or gyroscopes. - The
radios 940 enable one or more radio communication networks in the smart home environments, and allow asmart device 204 to communicate with other devices. In some implementations, theradios 940 are capable of data communications using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), and/or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document. - Communication interfaces 904 include, for example, hardware capable of data communications using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) and/or any of a variety of custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document.
-
Memory 906 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.Memory 906, or alternatively the non-volatile memory withinmemory 906, includes a non-transitory computer readable storage medium. In some implementations,memory 906, or the non-transitory computer readable storage medium ofmemory 906, stores the following programs, modules, and data structures, or a subset or superset thereof: -
-
Operating logic 920 including procedures for handling various basic system services and for performing hardware dependent tasks; -
Device communication module 922 for connecting to and communicating with other network devices (e.g.,network interface 160, such as a router that provides Internet connectivity, networked storage devices, network routing devices,server system 508, etc.) connected to one ormore networks 162 via one or more communication interfaces 904 (wired or wireless); -
Radio Communication Module 924 for connecting thesmart device 204 to other devices (e.g., controller devices,smart devices 204 insmart home environment 100, client devices 504) via one or more radio communication devices (e.g., radios 940) -
Input processing module 926 for detecting one or more user inputs or interactions from the one ormore input devices 914 and interpreting the detected inputs or interactions; - User interface module 928 for providing and displaying a user interface in which settings, captured data, and/or other data for one or more devices (e.g., the
smart device 204, and/or other devices in smart home environment 100) can be configured and/or viewed; - One or
more applications 930 for execution by the smart device 930 (e.g., games, social network applications, smart home applications, and/or other web or non-web based applications) for controlling devices (e.g., executing commands, sending commands, and/or configuring settings of thesmart device 204 and/or other client/electronic devices), and for reviewing data captured by devices (e.g., device status and settings, captured data, or other information regarding thesmart device 204 and/or other client/electronic devices); - Device-
side module 932, which provides device-side functionalities for device control, data processing and data review, including but not limited to:-
Command receiving module 9320 for receiving, forwarding, and/or executing instructions and control commands (e.g., from aclient device 504, from a smart homeprovider server system 164, from user inputs detected on the user interface 910, etc.) for operating thesmart device 204; - Data processing module 9322 for processing data captured or received by one or more inputs (e.g.,
input devices 914, image/video capture devices 918, location detection device 916), sensors (e.g., built-in sensors 990), interfaces (e.g., communication interfaces 904, radios 940), and/or other components of thesmart device 204, and for preparing and sending processed data to a device for review (e.g.,client devices 504 for review by a user); and
-
-
Device data 934 storing data associated with devices (e.g., the smart device 204), including, but is not limited to:-
Account data 9340 storing information related to user accounts loaded on thesmart device 204, wherein such information includes cached login credentials, smart device identifiers (e.g., MAC addresses and UUIDs), user interface settings, display preferences, authentication tokens and tags, password keys, etc.; and - Local data storage database 9342 for selectively storing raw or processed data associated with the smart device 204 (e.g., video surveillance footage captured by a camera 118).
-
-
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above. The above identified modules or programs (i.e., sets of instructions) need not be implemented as separate software programs, procedures, or modules, and thus various subsets of these modules may be combined or otherwise re-arranged in various implementations. In some implementations,
memory 906, optionally, stores a subset of the modules and data structures identified above. Furthermore,memory 906, optionally, stores additional modules and data structures not described above. -
FIG. 9B is a block diagram illustrating arepresentative camera 118 in accordance with some implementations. In some implementations, thecamera 118 includes one or more processing units (e.g., CPUs, ASICs, FPGAs, microprocessors, and the like) 942, one ormore communication interfaces 944,memory 946, and one ormore communication buses 948 for interconnecting these components (sometimes called a chipset). In some implementations, thecamera 118 includes one ormore input devices 950 such as one or more buttons for receiving input and one or more microphones. In some implementations, thecamera 118 includes one ormore output devices 952 such as one or more indicator lights, a sound card, a speaker, a small display for displaying textual information and error codes, playing audio, etc. In some implementations, thecamera 118 optionally includes alocation detection device 954, such as a GPS (global positioning satellite) or other geo-location receiver, for determining the location of thecamera 118. - Communication interfaces 944 include, for example, hardware capable of data communications using any of a variety of custom or standard wireless protocols (e.g., IEEE 802.15.4, Wi-Fi, ZigBee, 6LoWPAN, Thread, Z-Wave, Bluetooth Smart, ISA100.11a, WirelessHART, MiWi, etc.) and/or any of a variety of custom or standard wired protocols (e.g., Ethernet, HomePlug, etc.), or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document.
-
Memory 946 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.Memory 946, or alternatively the non-volatile memory withinmemory 946, includes a non-transitory computer readable storage medium. In some implementations,memory 946, or the non-transitory computer readable storage medium ofmemory 946, stores the following programs, modules, and data structures, or a subset or superset thereof: -
-
Operating system 956 including procedures for handling various basic system services and for performing hardware dependent tasks; -
Network communication module 958 for connecting thecamera 118 to other computing devices (e.g., hubdevice server system 508,video server system 552, theclient device 504, network routing devices, one or more controller devices, and networked storage devices) connected to the one ormore networks 162 via the one or more communication interfaces 944 (wired or wireless); -
Video control module 960 for modifying the operation mode (e.g., zoom level, resolution, frame rate, recording and playback volume, lighting adjustment, AE and IR modes, etc.) of thecamera 118, enabling/disabling the audio and/or video recording functions of thecamera 118, changing the pan and tilt angles of thecamera 118, resetting thecamera 118, and/or the like; -
Video capturing module 964 for capturing and generating a video stream and sending the video stream to the hubdevice server system 508 orvideo server system 552 as a continuous feed or in short bursts, and optionally generating a rescaled version of the video stream and sending the video stream at the original captured resolution and the rescaled resolution; -
Video caching module 966 for storing some or all captured video data locally at one or more local storage devices (e.g., memory, flash drives, internal hard disks, portable disks, etc.); - Local
video processing module 968 for performing preliminary processing of the captured video data locally at thecamera 118, including for example, compressing and encrypting the captured video data for network transmission, preliminary motion event detection, preliminary false positive suppression for motion event detection, preliminary motion vector generation, etc.; and -
Camera data 970 storing data, including but not limited to:-
Camera settings 972, including network settings, camera operation settings, camera storage settings, etc.; and -
Video data 974, including video segments and motion vectors for detected motion event candidates to be sent to the hubdevice server system 508 orvideo server system 552.
-
-
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above. The above identified modules or programs (i.e., sets of instructions) need not be implemented as separate software programs, procedures, or modules, and thus various subsets of these modules may be combined or otherwise re-arranged in various implementations. In some implementations,
memory 946, optionally, stores a subset of the modules and data structures identified above. Furthermore,memory 946, optionally, stores additional modules and data structures not described above. Additionally,camera 118, being an example of asmart device 204, optionally includes components and modules included insmart device 204 as shown inFIG. 9A that are not shown inFIG. 9B . -
FIG. 10 is a block diagram illustrating the smart homeprovider server system 164 in accordance with some implementations. The smart homeprovider server system 164, typically, includes one or more processing units (CPUs) 1002, one or more network interfaces 1004 (e.g., including an I/O interface to one or more client devices and an I/O interface to one or more electronic devices),memory 1006, and one ormore communication buses 1008 for interconnecting these components (sometimes called a chipset).Memory 1006 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM, or other random access solid state memory devices; and, optionally, includes non-volatile memory, such as one or more magnetic disk storage devices, one or more optical disk storage devices, one or more flash memory devices, or one or more other non-volatile solid state storage devices.Memory 1006, optionally, includes one or more storage devices remotely located from one ormore processing units 1002.Memory 1006, or alternatively the non-volatile memory withinmemory 1006, includes a non-transitory computer readable storage medium. In some implementations,memory 1006, or the non-transitory computer readable storage medium ofmemory 1006, stores the following programs, modules, and data structures, or a subset or superset thereof: -
-
Operating system 1010 including procedures for handling various basic system services and for performing hardware dependent tasks; -
Network communication module 1012 for connecting the smart homeprovider server system 164 to other systems and devices (e.g., client devices, electronic devices, hubdevice server system 508,video server system 552, and systems connected to one ormore networks 162,FIGS. 1-5B ) via one or more network interfaces 1004 (wired or wireless); - Server-
side module 1014, which provides server-side functionalities for device control, data processing and data review, including but not limited to:-
Data receiving module 10140 for receiving data from electronic devices (e.g., video data from acamera 118,FIG. 1 ), and preparing the received data for further processing and storage in thedata storage database 10160; -
Device control module 10142 for generating and sending server-initiated control commands to modify operation modes of electronic devices (e.g., devices of a smart home environment 100), and/or receiving (e.g., from client devices 504) and forwarding user-initiated control commands to modify operation modes of the electronic devices; -
Data processing module 10144 for processing the data provided by the electronic devices, and/or preparing and sending processed data to a device for review (e.g.,client devices 504 for review by a user); and
-
-
Server database 1016, including but not limited to:-
Data storage database 10160 for storing data associated with each electronic device (e.g., each camera) of each user account, as well as data processing models, processed data results, and other relevant metadata (e.g., names of data results, location of electronic device, creation time, duration, settings of the electronic device, etc.) associated with the data, wherein (optionally) all or a portion of the data and/or processing associated with the electronic devices are stored securely; and -
Account database 10162 for storing account information for user accounts, including user account information, information and settings for linked hub devices and electronic devices (e.g., hub device identifications), hub device specific secrets, relevant user and hardware characteristics (e.g., service tier, device model, storage capacity, processing capabilities, etc.), user interface settings, data review preferences, etc., where the information for associated electronic devices includes, but is not limited to, one or more device identifiers (e.g., MAC address and UUID), device specific secrets, and displayed titles.
-
-
- Each of the above identified elements may be stored in one or more of the previously mentioned memory devices, and corresponds to a set of instructions for performing a function described above. The above identified modules or programs (i.e., sets of instructions) need not be implemented as separate software programs, procedures, or modules, and thus various subsets of these modules may be combined or otherwise re-arranged in various implementations. In some implementations,
memory 1006, optionally, stores a subset of the modules and data structures identified above. Furthermore,memory 1006, optionally, stores additional modules and data structures not described above. - Furthermore, in some implementations, the functions of any of the devices and systems described herein (e.g.,
hub device 180, hubdevice server system 508,video server system 552,client device 504,smart device 204,camera 118, smart home provider server system 164) are interchangeable with one another and may be performed by any other devices or systems, where the corresponding sub-modules of these functions may additionally and/or alternatively be located within and executed by any of the devices and systems. As one example, generating of user interfaces may be performed by the user interface module 74610 (which may be located at theclient interface server 556 or at the video server 554) or by the user interface module 826, depending on whether the user is accessing the video feeds and corresponding histories through aweb browser 823 or an application 824 (e.g., a dedicated smart home management application) at theclient device 504. The devices and systems shown in and described with respect toFIGS. 6-10 are merely illustrative, and different configurations of the modules for implementing the functions described herein are possible in various implementations. -
FIG. 11A illustrates arepresentative system architecture 1100 andFIG. 11B illustrates a correspondingdata processing pipeline 1112. - In some implementations, the
server system event processor 11060, anevent categorizer 11080, and a user-facingfrontend 11100. The event processor 11060 (e.g.,event detection module 7306,FIG. 7B ) obtains the motion event candidates (e.g., by processing the video stream or by receiving the motion start information from the video source 522). The event categorizer 11080 (e.g.,event categorization module 7308,FIG. 7B ) categorizes the motion event candidates into different event categories. The user-facing frontend 11100 (e.g.,alert events module 73022,FIG. 7B ) generates event alerts and facilitates review of the motion events by a reviewer through a review interface on aclient device 504. The client facing frontend also receives user edits on the event categories, user preferences for alerts and event filters, and zone definitions for zones of interest. The event categorizer optionally revises event categorization models and results based on the user edits received by the user-facing frontend. Theserver system 508/522 also includes a video andsource data database 1106, eventcategorization modules database 1108, and event data andevent masks database 1110. In some implementations, each of these databases is part of theserver database 732. - In some implementations, the
server system 508/552 also includes a frame extractor andencoder 11300. The frame extractor and encoder (e.g.,frame extraction module 73026,encoding module 73028;FIG. 7B ) extracts frames from raw video (e.g., video stream 1104) and encodes the extracted frames into an extracted-frames video. In some implementations, the frame extractor andencoder 11300 extracts frames at a predefined rate or a lower rate for portions of the video stream without alert events, and extracts frames at a higher rate for portions with alert events (e.g., the portion with the alert event and bracketing portions before and after the portion with the alert event). In some implementations, the overall, average rate at which the frames are extracted is a predefined rate (e.g., 20 frames per 20 minutes, 60 frames per hour, 1 frame per minute). Theserver system 508/522 also includes an extracted frames and extracted-frames videos 1130 database. In some implementations, extracted frames and extracted-frames videos 1130 are part of the server database 732 (e.g., extracted frames and extracted-frames videos database 7330,FIG. 7C ). - The
server system 508/522 receives thevideo stream 1104 from thevideo source 522 and optionally receives motionevent candidate information 1102 such as motion start information andvideo source information 1103 such as device settings forcamera 118. In some implementations, theevent processor sub-module 11060 communicates with thevideo source 522. The server system sends alerts for motion (and other)events 1105 andevent timeline information 1107 to theclient device 504. Theserver system 508/522 optionally receives user information from theclient device 504 such as edits on event categories 1109 andzone definitions 1111. The server system also sends to theclient device 504 video 1136 (which may be thevideo stream 1104 or a modified version thereof) and, on request by theclient device 504, extracted-frames video 1138. - The
data processing pipeline 1112 processes a live video feed received from a video source 522 (e.g., including acamera 118 and an optional controller device) in real-time to identify and categorize motion events in the live video feed, and sends real-time event alerts and a refreshed event timeline to aclient device 504 associated with a reviewer account bound to thevideo source 522. Thedata processing pipeline 1112 also processes stored video feeds from avideo source 522 to reevaluate and/or re-categorize motion events as necessary, such as when new information is obtained regarding the motion event and/or when new information is obtained regarding motion event categories (e.g., a new activity zone is obtained from the user). - After video data is captured at the video source 522 (1113), the video data is processed to determine if any potential motion event candidates are present in the video stream. A potential motion event candidate detected in the video data is also sometimes referred to as a cuepoint. Thus, the initial detection of a motion event candidate is referred to as motion start detection and/or cuepoint detection. Motion start detection (1114) triggers performance of a more thorough event identification process on a video segment (also sometimes called a “video slice” or “slice”) corresponding to the motion event candidate. In some implementations, the video data is initially processed at the
video source 522. Thus, in some implementations, the video source sends motion event candidate information, such as motion start information, to theserver system 508. In some implementations, the video data is processed at theserver system 508 for motion start detection. In some implementations, the video stream is stored on server system 508 (e.g., in video and source data database 1106). In some implementations, the video stream is stored on a server distinct fromserver system 508. In some implementations, after a cuepoint is detected, the relevant portion of the video stream is retrieved from storage (e.g., from video and source data database 1106). - In some implementations, the more thorough event identification process includes segmenting (1115) the video stream into multiple segments then categorizing the motion event candidate within each segment (1116). In some implementations, categorizing the motion event candidate includes an aggregation of background factors, motion entity detection identification, motion vector generation for each motion entity, motion entity features, and scene features to generate motion features (11166) for the motion event candidate. In some implementations, the more thorough event identification process further includes categorizing each segment (11167), generating or updating a motion event log (11168) based on categorization of a segment, generating an alert for the motion event (11169) based on categorization of a segment, categorizing the complete motion event (1119), updating the motion event log (1120) based on the complete motion event, and generating an alert for the motion event (1121) based on the complete motion event. In some implementations, a categorization is based on a determination that the motion event candidate is within a particular zone of interest. In some implementations, a categorization is based on a determination that the motion event candidate involves one or more particular zones of interest.
- Frames are extracted from the video (1132) and an extracted-frames video is encoded from the extracted frames (1134). In some implementations, more frames are extracted per unit time of video from portions of the video during and proximate to the start and end of alert events (e.g., proximate to cuepoints) than from portions of the video without alert events. Thus, portions of the extracted-frames video without alert events have less frames per unit time than portions of the extracted-frames video with alert events.
- The event analysis and categorization process may be performed by the
video source 522 and theserver system 508/552 cooperatively, and the division of the tasks may vary in different implementations, for different equipment capability configurations, and/or for different network and server load situations. After theserver system 508 categorizes the motion event candidate, the result of the event detection and categorization may be sent to a reviewer associated with thevideo source 522. - In some implementations, the
server system 508/522 also determines an event mask for each motion event candidate and caches the event mask for later use in event retrieval based on selected zone(s) of interest. - In some implementations, the
server system 508/522 stores raw or compressed video data (e.g., in a video and source data database 1106), event categorization models (e.g., in an event categorization model database 1108), and event masks and other event metadata (e.g., in an event data and event mask database 1110) for each of the video sources 522. In some implementations, the video data is stored at one or more display resolutions such as 480p, 780p, 1080i, 1080p, and the like. In some implementations, theserver system 508/522 also stores the extracted-frames video in the same or a similar database (e.g., in an extracted frames and extracted-frames video database 1130). - It should be appreciated that while the description of
FIGS. 11A-11B refer to motion events, thesystem architecture 1100 and thedata processing pipeline 1112 apply similarly to other types of events or alerts (e.g., alerts or events from othersmart devices 204, such as hazard alerts). Indeed, such alerts and events may be processed together alongside motion events in thesame system architecture 1100 andpipeline 1112. - In some implementations, one or more of the modules and data stores associated with
server system 508 or 552 (FIGS. 5A-5B ) or 1501 (FIG. 15 ) may be located in the camera (e.g., camera 118) itself and/or in a computing device or system local to the camera (e.g., a server or digital video recorder device or hub device (e.g., hub device 180) located in the same house as the camera 118). In some implementations, one or more of the operations that are described as being performed at or by theserver system event detection module 7306, etc.), storing the video feed (e.g., analogue to video storage database 7320), extracting the identified frames (e.g., analogue to frame extraction module 73026), encoding the extracted frames into extracted-frames video (e.g., analogue to encoding module 73028), storing the extracted frames video (e.g., analogue to extracted frames and extracted-frames video database 7330), and receiving requests from a client device for the video feed and/or extracted-frames video and transmitting the video feed and/or extracted-frames video to the client device (e.g., analogue to I/O interface to clients 516 orclient interface server 556 or front-end 1508). -
FIGS. 12A-12M illustrate example user interfaces on a client device for monitoring and reviewing video feeds in accordance with some implementations.FIG. 12A illustrates a client device 504 (e.g., a mobile device, such as a smart phone) with atouch screen 12002 and optionally anaccelerometer 892 and/or a gyroscope 894 (FIG. 8A ). Auser interface 12004 of anapplication 824 is displayed on thetouch screen 12002. In some implementations, the application is a dedicated smart home management application (also referred to below as a “smart home application”), and theuser interface 12004 is a home page or screen of the smart home management application. Theuser interface 12004 includes multiple user interface objects (e.g., buttons, icons, etc.) that display information associated with asmart home environment 100 associated with the user and/or that serve as affordances with which a user may interact to access functionalities associated with the smart home application. For example, theuser interface 12004 includes amenu object 12006, asettings object 12008, amode icon 12009 andcorresponding label 12010, one or more thermostat objects 12012, a “Protect”object 12014, and one or more camera objects 12016 with respectivecorresponding labels 12018. - Other examples of a user interface that is a home page or screen of a smart home application are shown in FIGS. 11B, 14A, 14F, 14H, 14I, 14N-14R, and 14Y-14Z of U.S. patent application Ser. No. 15/208,578, which is incorporated by reference in its entirety.
- The menu and
settings objects menu object 12006 is displayed as a “hamburger menu” icon consisting of three parallel lines (e.g., as shown inFIG. 12A ), and the settings icon is displayed as a gear icon (e.g., as shown inFIG. 12A ). Themode icon 12009 andlabel 12010 indicates the operating mode of thesmart home environment 100 with which the information displayed inuser interface 12004 is associated (e.g., the user's home). For example, thesmart home environment 100 may operate in a “Home” mode and an “Away” mode. In the “Home” mode, the user is presumed to be in the smart home environment 100 (e.g., within the structure 150). In the “Away” mode, the user is presumed to be remote from thesmart home environment 100.Smart devices 204 may operate differently in the “Home” mode than in the “Away” mode, and certain notifications of events may be elided when in “Home” mode. The user may access a menu to change the mode by activating the mode icon 12009 (e.g., by tapping on themode icon 12009 with a single tap gesture). - Thermostat objects 12012-A and 12012-B correspond to respective
smart thermostats 102 in thesmart home environment 100 and display the current detected temperatures and/or the set temperatures at the correspondingsmart thermostats 102. “Protect”object 12014 provides access to a history of alert events (e.g., detected hazards, detected sounds, detected vibrations, operation ofsmart door lock 120, etc.) associated with thesmart home environment 100. The user accesses the “Protect” history by activating the “Protect” object 12014 (e.g., by tapping on the “Protect”object 12014 on the touch screen 12002). - The camera objects 12016-A, 12016-B, and 12016-C correspond to respective video sources 522 (or, more particularly, respective cameras 118) within the
smart home environment 100. The labels 12018-A, 12018-B, and 12018-C indicate therespective video sources 522 to which the respective camera objects 12016 correspond. For example, the camera object 12016-A corresponds to acamera 118 labeled “Outside” 12018-A. - Within a
respective camera object 12016, a view of a video feed or stream from the corresponding camera is displayed. For example, a view 12020 of the video feed from the “Outside” 12018-A camera is displayed in camera object 12016-A, a view 12022 of the video feed from the “Front door” 12018-B camera is displayed in camera object 12016-B, and a view 12024 of the video feed from the “Dining room” 12018-C camera is displayed in camera object 12016-C. In some implementations, the view of a video feed is displayed in acamera object 12016 as a real-time (or near real-time) live video stream from the corresponding camera or as periodically refreshed (e.g., at a rate less than typical frame rates for video) still images from the corresponding camera. In some implementations, the view is displayed at a resolution different from the original resolution and/or frame rate in which the video was captured. For example, the video views displayed in the camera objects 12016 are displayed at an 180P (180 horizontal lines progressive scan) resolution and at a frame rate of 5 or 10 frames per second, which is different from the original capture resolution (e.g., 720P, 1080P, 4K resolution) and the original frame rate. - In some implementations, the view displayed in a
camera object 12016 is cropped from the original video to fit the size and shape of thecamera object 12016, and the cropping is positioned to focus on a particular portion of the video for display. For example, view 12020 is cropped to view 12020-1 to fit into circle-shaped object 12016-A, view 12022 is cropped to view 12022-1 to fit into circle-shaped object 12016-B, and view 12024 is cropped to view 12024-1 to fit into circle-shaped object 12016-C. - It should be appreciated that while the camera objects 12016 are shown in the drawings as having a circular shape, the camera objects 12016 may be in other shapes (e.g., square, rectangle, etc.) or each
camera object 12016 may have a distinct shape (e.g., onecamera object 12016 has a circular shape, anothercamera object 12016 has a square shape, and so on). - Each of the camera objects 12016 are associated with a respective camera and its corresponding video feed. A user may perform a gesture on one of the camera objects 12016 to access a user interface that shows the video corresponding to that camera object uncropped and alert event information associated with the corresponding video feed. For example, in
FIG. 12A a single tap gesture withcontact 12026 is detected on the camera object 12016-C. In response to detection of the gesture,user interface 12028 is displayed on thetouch screen 1102, replacinguser interface 12004, as shown inFIG. 12B . -
User interface 12028 includes a camera name 12030 (e.g., indicating or identifying thecamera 118 for which a video feed is shown in the interface 12028) and optionally a description, a backtrackingaffordance 12032 to backtrack to a previous user interface (e.g., back to user interface 12004), asettings affordance 12034, alive video indicator 12036, and avideo region 12038. Within thevideo region 12038, a video feed from a camera 118 (e.g., the video feed from the “Dining room” 12018-C camera corresponding to the tapped-upon camera object 12016-C) is displayed. A date description orindicator 12052 indicates the date of a frame of the video feed currently shown in thevideo region 12038. - Also displayed in the
user interface 12028 is atimeline region 12040. In some implementations, one or more of amicrophone icon 12042, a videoclip creation icon 12044, and a timelineevent filtering icon 12046 are also displayed in theuser interface 12028. Themicrophone icon 12042 corresponds to an affordance for activating audio capability between thedevice 504 and thecamera 118 for which the video feed is displayed in the video region 12038 (if thecamera 118 is equipped and configured for audio input and/or output). The videoclip creation icon 12044 corresponds to an affordance for starting a process to save a portion of the video feed as a user-created video clip. The timelineevent filtering icon 12046 corresponds to an affordance for filtering alert events displayed in the timeline by, for example, alert event type and/or the zone in which an alert event was detected. - The
timeline region 12040 displays a timeline of the video feed displayed in thevideo region 12038; the timeline of the video feed corresponds to the date and time of the video feed displayed in thevideo region 12038. Thetimeline region 12040 includes atime position marker 12048 andtime increment markers 12050. Thetime position marker 12048 marks a time in the timeline to which the portion of the video feed currently displayed in thevideo region 12038 corresponds; thetime position marker 12048 marks the current position in the video feed on the timeline. In some implementations, thetime position marker 12048 is also a “scrubber” for the video feed displayed in thevideo region 12038; the user may move thetime position marker 12048 relative to the timeline or the timeline relative to thetime position marker 12048 to “scrub” through the video feed in order to locate a particular portion of or to go to a particular time in the video feed. In some implementations, adate indicator 12052 is displayed in the user interface 12028 (e.g., proximate to the timeline region 12040). Thedate indicator 12052 indicates the date to which the time marked by thetime position marker 12048, and optionally the portion of the timeline displayed in thetimeline region 12040, corresponds. In some implementations, a count of events (not shown) associated with the video feed is displayed along with thedate indicator 12052. -
Time increment markers 12050 indicate time units or increments on the timeline. For example, time increment marker 12050-A marks 10 AM of a certain day on the timeline, time increment marker 12050-B marks 9 AM on the timeline, time increment marker 12050-C marks 8 AM on the timeline, time increment marker 12050-D marks 7 AM on the timeline, and time increment marker 12050-E marks 6 AM on the timeline. Thus, thetime increment markers 12050, as shown inFIG. 12B , indicate one-hour increments on the timeline. In some implementations, the increments may be of another size (e.g., two-hour increments, half-hour increments, 10-minute increments, etc.). In some implementations, the smart home application, either in theuser interface 12048 or elsewhere, includes an affordance for changing the time unit or increment size of the timeline (e.g., changing form one-hour increments as shown inFIG. 12B to another increment size). In some implementations, the timeline may be zoomed in or out by the user, thus changing the time increment size. In some implementations, the time unit or increment size is independent of how much display length (e.g., in pixels) on the timeline an increment occupies on the timeline, further details of which are described below. - In some implementations, indicators of alert events associated with the video feed displayed in the
video region 12038 are displayed on the timeline in thetimeline region 12040. For example, inFIG. 12B ,alert event indicators smart devices 204. Further details regarding these alert event indicators are described below. - In some implementations, time increments on the timeline during which one or more alert events occurred or were otherwise detected by a smart device, as indicated by alert event indicators in those time increments (e.g.,
alert event indicators alert event indicators - For convenience, in this specification, the term “occur” or “occurrence” is used to collectively refer to occurrence of an alert event or detection of the alert event by a smart device. A time increment during which one or more alert events occurred and was detected by a smart device is described in this specification as a time increment with an alert event. Conversely, a time increment during which no alert event occurred or was detected by a smart device is described as a time increment without an alert event.
- In some implementations, the timeline in the
timeline region 12040 is arranged vertically, with the direction of time from past to present going from bottom to top on the timeline, as shown inFIG. 12B . In some implementations, the timeline is arranged vertically, but the direction of time from past to present goes from top to bottom. In some implementations, the timeline in the timeline region is arranged horizontally and the direction of time from past to present goes from, depending on the particular implementation, left to right or right to left. It should be appreciated that in this specification, the “length” of the timeline is parallel to the direction-of-time orientation of the timeline. For example, if the timeline is vertically arranged, as with the timeline in thetimeline region 12040 as shown inFIG. 12B , the “length” of the timeline is the vertical dimension of the timeline. In some implementations, the timeline is an overlay over thevideo region 12038 as opposed to being a distinct region. For example, thevideo region 12038 may be sized to fit the width of the display, and the timeline is a vertically arranged timeline overlaid on one side (e.g., the right side) of thevideo region 12038 and displayed semi-transparently or translucently. - In some implementations, the video feed playing in the
video region 12038 is a live or approximately live video stream originally captured by thecamera 118 and received through aserver system 508 or 552 (e.g.,video 7321,FIG. 7C ). Correspondingly, while the video feed is playing, the timeline in thetimeline region 12040 scrolls, relative to thetime position marker 12048, at the same rate as and in accordance with real-time. For example, as shown inFIGS. 12B-12D , the video feed is live, as indicated bylive video indicator 12036. The timeline in thetimeline region 12040 moves indirection 12062, in accordance with the actual passage of time and playback of the video feed, such that thetime position marker 12048 continually marks approximately the present time on the timeline. Concurrently, the video feed plays in thevideo region 12038 along with the scrolling timeline and the position of thetime position marker 12048 relative to the timeline. In some implementations, thetime position marker 12048 is stationary within thetimeline region 12040; the user sees thetime position marker 12048 remaining in place while respective time increments in the timeline scroll by. - As the timeline scrolls, respective time increments in the timeline that are further in the past are scrolled out of display and respective time increments closer to the present are scrolled into display. For example, in
FIG. 12C , the 6-AM increment, the 7-AM increment, and the 8-AM increment have scrolled out of display, and the 10-AM increment between time increment markers 12050-A and 12050-F have scrolled completely into display. As the timeline scrolls further, portions of the 9-AM increment have scrolled out of display. The 11-AM increment between time increment markers 12050-F and 12050-G, the 12-PM increment between time increment markers 12050-G and 12050-H, the 1-PM increment between time increment markers 12050-H and 12050-I, and the 2-PM increment between time increment markers 12050-I and 12050-J scroll into display, as shown inFIG. 12D . - In some implementations, the video feed is encoded (e.g., by
server system 508; by video server system 552) such that portions of the video feed corresponding to time increments with an alert event have more frames per unit time than portions of video feed corresponding to time increments without an alert event. In some implementations, the differences in timeline display length between time increments with an alert event and time increments without an alert event is associated with the difference in frames per unit time between time increments with an alert event and time increments without an alert event. As the timeline scrolls, when thetime position marker 12048 is located over a time increment without an alert event, the video plays at less frames per unit time than when thetime position marker 12048 is located over a time increment with an alert event. Thus, for example, portions of the video feed corresponding to the 9-AM increment and the 10-AM increment have more frames per unit time (e.g., frames per hour, frames per second) than the 6-AM increment, the 7-AM increment, the 8-AM increment, the 11-AM increment, the 12-PM increment, the 1-PM increment, or the 2-PM increment. When the timeline is scrolling, the video feed plays in thevideo region 12038 in accordance with these different frame rates. - In some implementations, the
time position marker 12048 displays digitally the time corresponding to the current location of thetime position marker 12048 relative to the timeline. For example, inFIG. 12B , thetime position marker 12048 shows the time marked by thetime position marker 12048 as “10:15:17 AM.” In some implementations, thetime position marker 12048 displays the time corresponding to the current location of thetime position marker 12048 relative to the timeline in analog form (e.g., with a graphic or icon resembling an analog clock). For example, thetime position marker 12048 as shown inFIG. 12E includes an analog clock icon that shows the time marked by thetime position marker 12048. The analog clock icon has hour and minute hands that show the time marked by thetime position marker 12048. In implementations where thetime position marker 12048 includes the analog clock icon or graphic, thedate indicator 12052 may include, along with the date, the time marked by thetime position marker 12048 in digital form, as shown inFIG. 12E for example. - In some implementations, the timeline scrolls backward or forward in time in accordance with a manual user input. The user may perform a gesture on the
touch screen 12002 over thetimeline region 12040. The smart home application detects the gesture, and scrolls the timeline in accordance with the detected gesture. For example, as shown inFIG. 12F , a gesture with contact 12064 (hereinafter “gesture 12064” for convenience) is detected intimeline region 12040. Thegesture 12064 moves indirection 12066. In accordance with thegesture 12064 and itsdirection 12066, the timeline scrolls indirection 12067, backwards toward past time, as shown inFIG. 12G for example. Meanwhile,time position marker 12048 remains stationary, thus marking a new time by virtue of the timeline scrolling relative to thetime position marker 12048, thus positioning thetime position marker 12048 at a new location on the timeline. As shown inFIG. 12G ,live video indicator 12036 indicates that the video feed content displayed invideo region 12038 is not live; the timeline has scrolled backward to a past time corresponding to historical video content in the video feed. In some embodiments, in response to thetime position marker 12048 being moved to a past time, the recorded video feed corresponding to that past time will be requested and subsequently displayed invideo region 12038. Thus, by scrolling the timeline, the user can access the recorded video feed backward or forward in time in order to find a desired portion for viewing, where the recorded video feed could be recorded locally (e.g., on the camera, such ascamera 118, or another electronic storage device in proximity to the camera) or remotely (e.g., on a server system remote from the camera, such asserver system video region 12038. In which case, e.g., theclient device 504 may request the live video feed from the camera (e.g., camera 118) itself or a server system remote from the camera (e.g.,server system - In some implementations, while the user is moving in time through the video feed (e.g., with gesture 12064), the video content displayed in the
video region 12038 is an extracted-frames video (e.g., extracted-frames video from database 7330) version of the video feed, encoded (e.g., byserver system 508/552) from frames extracted from the original video from the camera 118 (e.g., high-quality video 7321). In some implementations, the extracted-frames video averages a predefined frame rate (e.g., 20 frames per 20 minutes, 60 frames per hour, 1 frame per minute), but the frame rate between portions of the extracted-frames video may vary, with the portions of the extracted-frames video corresponding to an alert event having more frames per unit time than portions without an alert event. Frames are extracted from the video feed for generation of the extracted-frames video, such that frames are extracted closer together (e.g., frames extracted at higher than the average rate) from portions of the video feed in proximity to an alert event (e.g., a cuepoint) than from portions of the video feed without an alert event (e.g., frames extracted at or lower than the average rate). When the user scrubs the timeline (i.e., moves in time through the recorded video feed), the portions of the extracted-frames video with an alert event have frames closer together in time than the portions of the extracted-frames video without an alert event. As the user scrubs the video feed, frames from the extracted-frames video are displayed in thevideo region 12038, instead of frames from the original version of the video feed that plays when the timeline is not being manually scrolled. In other words, in some implementations, the original video feed is not displayed while the user is scrubbing the video feed—rather, only a subset of frames from the original video feed are displayed. Further, in some implementations, frames of the extracted-frames video may be requested from the server system (e.g.,server system server system 508/522. In some implementations, the extracted-frames video operationally is more akin to a set of still images or a time-lapse video; the still images or time-lapse frames (e.g., the frames in the extracted-frames video) are displayed as the user scrubs the video feed. In at least one embodiment, while a user scrolls through the timeline of a recorded video feed, only a subset of frames from the original video feed are displayed rather than the actual recorded video feed. Once the user stops scrolling, however, or otherwise indicates a desire to playback the original video feed at a particular historical time, theclient device 504 will request and display the recorded video feed from that historical time on. In some implementations, theclient device 504 may not request or display the recorded video feed in such an instance. For example, a user account may have one of a number of a different subscription tiers. Different qualities or amounts of recorded video feed may be provided to the user based on their subscription tier. For example, on a paid subscription, theclient device 504 may give the user the full experience of subsets of frames while scrolling and then the full recorded video feed on response to the user selecting a particular time in history to begin playback. For an unpaid subscription, however, while theclient device 504 may give the user the experience of subsets of frames while scrolling, in response to the user selecting a particular time in history to begin playback theclient device 504 may not actually playback any video. In some embodiments, and in accordance with different subscription tiers, theclient device 504 may playback historical video for only a select number of hours (e.g., 1, 3, 12, etc.) or days (e.g., 1, 7, 30, etc.). In some embodiments, a still image from the subset of frames may be displayed instead of the recorded video stream. In some embodiments, a message indicating different subscription plans are available may be displayed or superimposed on the still image. In some embodiments, the subsets of frames may be displayed only for historical times during which an event occurred. E.g., the subsets of frames may be displayed during the time a particular event occurred, and a still image or message may be displayed during the time that no events have occurred. - As described above, the timeline may include one or more alert event indicators (e.g.,
alert event indicators camera 118 and shown in the video feed, motion events in the field of view generally or not in any user-defined or automatically generated zone, hazard events (e.g., hazards detected by a hazard (e.g., smoke, carbon monoxide) detector), a window or door activity event (e.g., detection of a window or door being opened or closed), a door lock event (e.g., detection of a door lock being engaged or disengaged), and a thermostat or HVAC event (e.g., a thermostat temperature change, activation of thermostat programming, the thermostat turning on or off, etc.). In some implementations, additional indicators or information from the smart devices may be displayed on the timeline along with alert event indicators. For example, the ambient temperature as detected by the thermostat or HVAC system may be plotted as a line graph on the timeline. - In some implementations, an alert event indicator is displayed as a graphical object (e.g., a “pill” graphical object, called such because its shape and rounded ends resemble a medicine pill) with a display length parallel to the timeline; the display length is based on the duration of the alert event. For example,
alert event indicators 12054 and 12056 (FIG. 12B ) have different display lengths, and correspondingly reflect different durations. Alert event indicators corresponding to alert events associated with a toggle event or a state change event (e.g., a simple on-to-off event or vice versa, a door lock changing state from engaged to disengaged) may have a default or nominal display length independent of duration (e.g., as with indicator 12060). Alert event indicators are displayed on the timeline in a manner that indicates approximate start and end times of the respective corresponding alert events based on their respective locations on the timeline and optionally their lengths. For example, the alert event corresponding to alertevent indicator 12054 starts sometime after 9 AM and lasts until sometime after 10 AM. - In some implementations, the
timeline region 12040 includes multiple sub-regions or sub-sections or columns (for a vertically oriented timeline) or rows (for a horizontally oriented timeline) 12068 running parallel to the timeline. For example,FIGS. 12G and 12H show sub-sections 12068-A, 12068-B, 12068-C, and 12068-D intimeline region 12040, running parallel to the timeline. It should be appreciated that the dotted lines dividing thesub-sections 12068 inFIGS. 12G and 12H are shown in the figures for illustrative purposes only, and are not actually displayed in theuser interface 12028 and are not otherwise visible to users. Alert event indicators and other information from smart devices are displayed inrespective sub-sections 12068 based on the alert event type or information type. For example, alert event indicators corresponding to motion events in a “Table” zone (e.g., indicator 12054) are displayed in sub-section 12068-A. Alert event indicators corresponding to motion events in a “Window” zone (e.g.,indicators 12056 and 12070) are displayed in sub-section 12068-B. Alert event indicators corresponding to motion events in a “Door” zone (e.g., indicator 12058) are displayed in sub-section 12068-C. Alert event indicators corresponding to door lock events for a respective door lock (e.g., indicator 12060) are displayed in sub-section 12068-D. In some implementations, the number ofsub-sections 12068 is limited (e.g., four as shown inFIGS. 12G and 12H ) due to display space and legibility considerations; multiple alert event types may be assigned the same sub-section. For example, sub-section 12068-A may be shared by alert event indicators corresponding to “Table” zone motion events and alert event indicators corresponding to motion events not in any of the user-created or automatically generated zones. As another example, onesub-section 12068 may be shared by non-motion events (e.g., hazard alerts) and motion events not in any user-created or automatically created zone, andother sub-sections 12068 are reserved for motion events in respective zones. - In some implementations, one or more of the sub-regions/sub-sections/columns display other information from smart devices. For example, the ambient temperature as detected by the thermostat or HVAC system may be plotted as a line graph in one of the sub-sections.
- Locations on the timeline with alert event indicators may correspond to portions of the video feed that were captured and recorded while the respective corresponding alert events were detected. When the
time position marker 12048 overlaps one or more alert event indicators on the timeline, the video feed portion that is played or displayed in thevideo region 12038 was captured concurrently with detection of the corresponding alert events. For example, as shown inFIGS. 12G and 12H , the time position marker overlapsalert event indicators Indicator 12054 corresponds to a motion event in a “Table” zone, e.g., aperson 12072 moving in a zone named “Table.”Indicator 12056 corresponds to a motion event in a “Window” zone, e.g., aperson 12074 moving in a zone named “Window.”Indicator 12058 corresponds to a motion event in a “Door” zone, e.g., aperson 12076 moving in a zone named “Door.” - In some implementations, different portions of the video feed portion may be recorded and accessible. These may be accessible based on, e.g., a subscription tier associated with the user. For example, in accordance with one subscription tier, video may be recorded and accessible only during the time that an event occurs. In some embodiments, the full video may not be available but rather only a subset of the frames corresponding to that event. In accordance with another subscription tier, video may be recorded and accessible not only during events but also when events do not occur. Depending on the particular subscription tier, the amount of recorded video recorded and/or accessible may be different, e.g., a certain number of hours or a certain number of days, weeks, or years.
- In some implementations, the alert event indicators have different visual characteristics based on the corresponding alert event type. The different visual characteristic may be different colors, for example. For example, indicators corresponding to “Table” zone motion events (e.g., indicator 12054) have a first color, indicators corresponding to “Window” zone motion events (e.g.,
indicators 12056 and 12070) have a second color, indicators corresponding to “Door” zone motion events (e.g., indicator 12058) have a third color, indicators corresponding to door lock events for a particular door (e.g., indicator 12060) have a fourth color, and so on. InFIGS. 12G-12H , the different colors are represented in the figures by the different fill patterns in the alert event indicators. - In some implementations, when the video feed portion that is being played or displayed corresponds to a portion with one or more alert events corresponding to motion events in zones (i.e., the
time position marker 12048 overlaps one or more alert event indicators corresponding to motion events in zones), the zone(s) in which the motion event(s) were detected are highlighted in the video feed portion. For example, as shown inFIG. 12H , “Table”zone 12078, “Window”zone 12080, and “Door”zone 12082 are highlighted. In some implementations, the respective zones are highlighted with the same respective colors as their respective corresponding alert event indicators. - In some implementations, the order in which alert event types corresponding to motion events in zones are assigned, relative to each other, to
respective sub-sections 12068 is based on the order of the zones in the field of view of thecamera 118. For example, as shown inFIG. 12H , “Table”zone 12078, “Window”zone 12080, and “Door”zone 12082 had been defined in the field of view of the video feed, in the order from left to right as shown in the figure. Following that ordering, indicators for “Table” zone motion events are assigned to sub-section 12068-A, indicators for “Window” zone motion events are assigned to sub-section 12068-B, and indicators for “Door” zone motion events are assigned to sub-section 12068-C. -
FIG. 12I illustratesuser interface 12028 with a “Condense” affordance 12084 (e.g., a virtual button or other user interface object) displayed amongst multiple consecutive time increments without an alert event (e.g., the 8-AM increment, the 7-AM increment, etc.). In some implementations, consecutive time increments without alert events may be condensed on the timeline. For example, by activating the “Condense” affordance 12084 (e.g., tapping on the “Condense” affordance with atap gesture 12086, as shown inFIG. 12J ), the respective one-hour time increments between time increment markers 12050-B and 12050-C, 12050-C and 12050-D, 12050-D and 12050-E, 12050-E and 12050-K, 12050-K and 12050-L, and 12050-L and 12050-M are condensed or collapsed into one multi-hour time increment represented by multi-hour marker 12092 (FIG. 12K ). In some implementations, activation of the “Condense” affordance also causes other consecutive time increments without alert events elsewhere in the timeline to condense or collapse. The condensing pulls other time increments, and any alert event indicators within these other time increments, into view. For example, one or more other alert event indicators (alert event indicators 12070 and 12090) and associated time increments (e.g., the time increment betweenmulti-hour marker 12092 and time increment marker 12050-N) are pulled into view by the condensing of the increments between time increment markers 12050-M and 12050-B. After the condensing, an “Expand” affordance 12088 (e.g., a virtual button or other user interface object) is displayed over the multi-hour marker 12092 (e.g., as shown inFIG. 12K ). The condensing may be reversed by activation of the “Expand”affordance 12088 in a similar manner as activation of the “Condense” affordance 12084 (e.g., with a tap gesture). -
FIG. 12L-12M illustrate examples in which additional information is displayed in the timeline. InFIG. 12L , in thetimeline region 12040,alert event indicators FIG. 12L ) within thetimeline region 12040,alert event indicators timeline region 12040, andalert event indicators timeline region 12040. A “Live” label intime position marker 12048 indicates that the video feed displayed in thevideo region 12038 is the live video feed. While the live video feed is played, microphone icon 12128 (similar in function to microphone icon 12042) is displayed; a user may activate themicrophone icon 12128 to activate audio capability between thedevice 504 and thecamera 118. - Along with the
alert event indicators event thumbnails timeline region 12040.Lines event thumbnails thumbnail 12116 is associated withalert event indicator 12108,thumbnail 12118 is associated withalert event indicator 12104, andthumbnail 12120 is associated withalert event indicator 12114. In some implementations, for a respective alert event indicator, the associated event thumbnail is a frame from the portion of the video feed associated with the alert event indicator. In some implementations, the user may interact with an event thumbnail. For example, the user may tap on an event thumbnail displayed on thetouch screen 12002 to jump in the timeline to the time corresponding to the beginning of the video portion with which the tapped event thumbnail is associated. In other words, in response to a user selection of a particular event thumbnail, theclient device 504 may request the stored video associated with that event thumbnail and begin playing back the video stored at that time in thevideo region 12038. In some implementations, up to a predefined number (e.g., two) of event thumbnails are displayed per one-hour increment; the predefined number ultimately depends on the visual size (e.g., pixel size) of the time increments on the time line and the size of the display (e.g., touch screen 12002), as the limit on the number of event thumbnails to be displayed is an accommodation to limited on-screen display space. In some embodiments, the thumbnail may not be a thumbnail image of the entire frame from the video feed, but rather may be a thumbnail image illustrating only a portion of a frame from the video feed. For example, the thumbnail image may be an image portion associated with a zone in which motion was detected. For another example, the thumbnail image may be an image portion associated with a person, pet, object, or other entity that was detected by way of classification mechanisms or otherwise. For another example, the thumbnail image may be an image portion associated with an event such as fire or smoke. For another example, the thumbnail image may be an image portion associated with other sensors located within field of view or otherwise associated with the camera and in response to sensor detections. For example, an image portion associated with the door in response to the door lock being actuated. Or an image portion associated with a window which is monitored by a window sensor in response to the window sensor being actuated (e.g., detecting a window break). - In
FIG. 12M , in thetimeline region 12040,alert event indicators FIG. 12M ) within thetimeline region 12040,alert event indicators timeline region 12040, andalert event indicators timeline region 12040. A time is shown digitally ontime position marker 12048, indicating that the video feed displayed in thevideo region 12038 is non-live, historical video. While the non-live video feed is shown, a “go live” button oricon 12218 is displayed; the user may activate the “go live”button 12218 to jump to the current time in the timeline and live video in thevideo region 12038. - Along with the
alert event indicators event thumbnails event category icons timeline region 12040. The event category icons indicate a type or category of an alert event (e.g., motion event, hazard event, sound event, thermostat event). Each of the event thumbnails is associated with an alert event indicator. Each of the event category icons is associated with an alert event indicator. The event thumbnails and the event category icons are visually linked to their associated alert event indicators by lines. For example,line 12236 connectsevent category icon 12226 to alertevent indicator 12202,line 12238 connectsevent thumbnail 12220 to alertevent indicator 12210,line 12240 connectsevent category icon 12228 andevent thumbnail 12222 to alertevent indicator 12212,line 12242 connectsevent category icon 12230 to alertevent indicator 12204,line 12244 connectsevent category icon 12232 andevent thumbnail 12224 to alertevent indicator 12206, andline 12246 connectsevent category icon 12234 to alertevent indicator 12208. - In some implementations, and as previously disclosed, viewing of the video feed (e.g., how much the user can view, what the user can do with the video feed) and other functionality may be restricted based on whether the user has a paid subscription. For example, viewing of historical content of the video feed beyond a certain day and/or time (e.g., viewing portions of the video feed that are older than six hours from the current time) may be restricted to subscribed users. When the user tries to view restricted content without a paid subscription, the smart home application may attempt to promote paid subscriptions to the user. For example, when the user tries to scroll the timeline past the restriction point, so that the
time position marker 12048 marks a time past the restriction point, instead of displaying the corresponding portion of the video feed in thevideo region 12038, theuser interface 12028 may display a prompt, pop-up, or other message to the user, informing the user that portions of the video feed beyond the restriction point is limited to paid subscribers and promoting a paid subscription to the user. Further, in some implementations, additional functionality limitations may be imposed on non-subscribers. For example, snapshots of event activity (e.g., frames from portions of the video feed with an alert event) are displayed in thevideo region 12038 to non-subscribers instead of playback of the video feed. In some implementations, there are multiple subscription tiers for the service, and the functionality and storage limitations and restrictions depend on the particular subscription tier (e.g., the number of days for which video is retained and stored depends on the particular subscription tier). - As described above with reference to
FIG. 12F , a user may scroll the timeline backwards or forwards with a gesture on thetimeline region 12040. In some implementations, the scrolling is based also on the type of gesture detected by the smart home application. For example, the gesture may be a dragging gesture or a swipe (or flick) gesture. In a drag gesture, the contact stays on and moves on thetouch screen 12002, and the timeline scrolls in accordance with the movement of the contact, as if the contact is dragging the timeline along. In a swipe or flick gesture, the contact moves on and releases from thetouch screen 12002 quickly, and the timeline scrolls in the direction of the contact's movement with a decaying speed, e.g., the timeline scrolls with inertial scrolling. - When the gesture is a dragging gesture, frames of the extracted-frames video version of the video feed may be displayed in the
video region 12038 as the timeline scrolls relative to thetime position marker 12048. In some implementations, depending on the speed of the gesture (and thus the speed of the scrolling), some frames of the extracted-frames video may be omitted from display as the timeline scrolls past thetime position marker 12048, so that the display of the frames can keep pace with the scrolling of the timeline. - When the gesture is a swipe gesture, frames of the extracted-frames video are displayed in the
video region 12038 as the timeline scrolls, with inertial scrolling, relative to thetime position marker 12048. In some implementations, as with the scrolling caused by a dragging gesture, some frames of the extracted-frames video may be omitted from display as the timeline scrolls past thetime position marker 12048. Further, as the inertial scrolling of the timeline decays, less frames need to be omitted as the display of the frames of the extracted-frames video are better able to keep pace with the scrolling of the timeline. - In some implementations, an alert events summary view may be displayed. This view may be activated by activation of a predefined affordance (e.g.,
date indicator 12052,FIG. 12B ). In some implementations, the summary view shows thumbnails of video portions corresponding to alert events arranged chronologically. As the view is scrolled up or down, the video portions are played one at a time. In some implementations, the summary view shows the timeline in miniature and thumbnails of video portions corresponding to alert events grouped by zone or event type. Within a respective zone or type, video portion thumbnails are ordered chronologically. - In some implementations, video feeds from
multiple cameras 118 are displayed concurrently. For example, video feeds from up to fourcameras 118 may be displayed in a two-by-two arrangement on a display (e.g., a display of a tablet computer device). A shared timeline for the video feeds may be displayed. The shared timeline includes arespective sub-section 12068 for each of the video feeds displayed. - In some implementations, an event thumbnail shows a cropped and zoomed-in version of the frame selected for the event thumbnail. The event thumbnail is cropped and zoomed-in to focus on an area of interest in the frame (e.g., motion activity).
-
FIG. 13 illustrates a flowchart diagram of amethod 1300 for presenting a timeline-video relationship in accordance with some implementations. In some implementations, the method 1400 is performed at an electronic device with one or more processors, memory, a display (e.g., a computer display, a television display, a mobile device display, a touchscreen display), and optionally a touch-sensitive surface (e.g., a touchscreen display, a touchpad), an accelerometer, and/or an audio input device. For example, in some implementations, the method 1400 is performed by a client device 504 (FIGS. 5A-5B and 8A-8B ) or 1504 (FIG. 15 ) in an operating environment (e.g.,environment side module 502,presentation module 821,input processing module 822,web browser module 823,application 824, user interface module 826). In some implementations, the method 1400 is governed by instructions that are stored in a non-transitory computer readable storage medium (e.g., the memory 806) and the instructions are executed by one or more processors of the electronic device (e.g., the CPUs 802). - The electronic device displays, via the display of the electronic device, a user interface having a first region and a second region (1302). The
client device 504 displays auser interface 12028 on thetouch screen 12002. Theuser interface 12028 includes avideo region 12038 and atimeline region 12040. - The electronic device receives, and displays in the first region of the user interface, a live video stream of a physical environment captured by a video camera located remotely from the electronic device, wherein at least some of the live video stream is recorded at a remote server (1304). The
client device 504 receives a video feed (e.g., video captured by camera 118) from aserver system 508/552; thecamera 118 transmits captured video to theserver system 508/552, which stores the at least some of the video and transmits at least some of the video to theclient device 504. The video feed is displayed invideo region 12038 of theuser interface 12028. In some implementations, the video feed includes a live video stream. In some implementations, the video feed includes recorded video of the live video stream (e.g., past recordings of the live video stream). The video feed is video of a physical environment captured by thecamera 118, which is located remotely from theclient device 504. Theserver 508/552 is also remotely located from theclient device 504. - The electronic device displays, in the second region of the user interface, a timeline corresponding to a timespan for a first portion of a duration during which the live video stream may have been recorded (1306). The
client device 504 displays in thetimeline region 12040 of the user interface 12028 a timeline. The timeline includesmultiple time increments 12050. The portion of the timeline displayed in thetimeline region 12040 at a given instance, represented by thetime increments 12050 displayed in theregion 12040 at the given instance, corresponds to a timespan for a portion of a duration (e.g., a continuous time duration) during which the video feed may have been recorded (e.g., during the continuous time duration, video feed from thecamera 118 may be recorded at theserver system 508/552 or not recorded (e.g., because thecamera 118 was turned off,camera 118 lost network connectivity, recording was beyond limits of the associated user's subscription tier)). In some implementations, the timespan is an amount or span of time (e.g., some number of hours) at a certain point in history (e.g., the duration). For example, the span of time between 3 AM to 10 AM on a certain day is a different timespan from the span of time between 10 AM to 3 PM on the same day, or from 3 AM to 10 AM on another day. A timespan in the timeline is the amount of time corresponding to the portion of the timeline that is displayed in thetimeline region 12040 at any given moment. - In response to receiving a user interaction indicating a desire to move the timespan to a second portion of the duration during which the live video stream may have been recorded (1308), the electronic device transitions (1310) the displayed timeline to a new timeline that corresponds to the timespan for the second portion, and while transitioning the displayed timeline to the new timeline, displays (1312), in the first region of the user interface, a subset of video frames representing the first and/or second portion of the duration during which the live video stream may have been recorded. In response to a user interaction (e.g., a
gesture 12064 on touchscreen display 12002) to move the timespan of the timeline to a second portion of the duration (e.g., to have timeline in thetimeline region 12040 show another timespan with another set oftime increments 12050; the user “scrubs” or scrolls the timeline), theclient device 504 transitions the displayed timeline to another timespan with another set of time increments 12050 (e.g., scroll the timeline such that another timespan is displayed in the timeline region 12040). While transitioning the timeline, theclient device 504 displays in thevideo region 12038 frames from the extracted-frames video(s) for the time duration portion(s) displayed in thetimeline region 12040 during the transition; frames from the extracted-frames videos are displayed in thevideo region 12038 for the time period displayed in thetimeline region 12040 while the timeline scrolls in accordance with the gesture. - In some implementations, the electronic device obtains the subset of video frames separately from receiving the live video stream. The
client device 504 obtains the extracted-frames video separately from the video feed. The video feed and the extracted-frames video are separate transmissions from theserver system 508/552 to theclient device 504. - In some implementations, after the transitioning, the electronic device displays in the first region a recorded portion of the live video stream recorded during the second portion of the duration. After the transitioning (e.g., after the scrolling ends), the
client device 504 plays the video feed in the video region 12038 (e.g., resume playback of the video feed) instead of displaying frames from the extracted-frames video. The portion of video feed where playback is resumed from is a portion associated with the time duration portion displayed in the timeline at the end of the scrolling. - In some implementations, the second portion of the duration includes the current time, and displaying in the first region a recorded portion of the live video stream includes displaying in the first region the live video stream. If the transition (e.g., the timeline scrolling) transitions the timeline to the current time (i.e., the end of the timeline closest to the current or present time), the
client device 504 plays the live video stream in thevideo region 12038. - In some implementations, the user interaction includes a gesture (e.g., a gesture on touchscreen display 12002) configured to activate a scrolling effect on the timeline. The user interaction indicating the desire to move the span may be a gesture that activates a scrolling effect on the timeline.
- In some implementations, the gesture is one of a swipe gesture or a dragging gesture. The scrolling gesture may be a swipe gesture or a dragging gesture in the
timeline region 12040. Other gestures that may be configured to activate the scrolling effect include a flick gesture in thetimeline region 12040 or a tap gesture on a predefined portion of the user interface 12028 (e.g., tap on the top of theuser interface 12028 near the top edge of thetouch screen 12002 or on a displayed affordance (e.g., “Go Live” affordance 12218) to have the timeline automatically scroll to the current time, tap on the bottom of theuser interface 12028 near the bottom edge of thetouch screen 12002 to have the timeline scroll automatically to the back limit of the timeline (e.g., time corresponding to the limit of possible video recording and storage time based on the user's subscription tier)). - In some implementations, the electronic device receives information indicating one or more alert events within the timespan, and in accordance with the alert events information, displays on the timeline an alert event indicator for each of the alert events within the timespan. The
client device 504 receives alerts events information or data from theserver system 508/552. In some implementations, the alert events information is received in the form of metadata. The alert events information include data indicating alert events that were detected by smart devices in the operatingenvironment 500/550 during the time duration in the timeline. Alert event indicators (e.g.,alert event indicators - In some implementations, the subset of video frames includes a first sub-subset of video frames and a second sub-subset of video frames distinct from the first sub-subset, the first sub-subset of video frames is associated with an alert event of the alert events, the second sub-subset of video frames is associated with no alert event, the first sub-subset has a first frame rate, and the second sub-subset has a second frame rate lower than the first frame rate. When frames are extracted from the video feed, frames may be extracted at different rates depending on whether a frame is around or proximate in time to an alert event or cuepoint (e.g., associated with an alert event). Frames around or proximate in time to an alert event or cuepoint are extracted at a higher rate than frames not around or proximate to an alert event or cuepoint. When these frames are encoded into an extracted-frames video, the frames that were extracted at a higher rate become a set of frames within the extracted-frames video with a higher frame rate (i.e., more frames per unit time; the frames are denser) than the set of frames that were extracted at the lower rate (i.e., less frames per unit time; the frames are less dense). In some implementations, due to this difference in frame rate, when the timeline moves, in response to a timespan-moving user interaction, to a time with an alert event, more frames may be displayed than when the timeline moves in response to a timespan-moving user interaction to a time without an alert event; the higher frame rate in the set of frames proximate to the alert event/cuepoint supplies more frames for display than the lower frame rate set of frames not proximate to any alert event/cuepoint.
- In some implementations, the alert event indicator for an alert event includes a pill object, the pill object has a length parallel to the timeline, and the length represents the duration of the alert event. The alert event indicator may be displayed as a pill graphical object with a length parallel to the timeline. For example,
FIG. 12B showsalert event indicators - In some implementations, the alert events include alert events of one or more alert event types, the types including one or more of: motion events in a defined zone, motion events not in a defined zone, hazard events, sound events, thermostat events, and door events. The alert events detected by the smart devices in the environment belong to one of multiple types, which may include motion events in a zone defined by a user (and, in some implementations, where motion in each defined zone is its own type), motion events not in a defined zone, hazard events (e.g., smoke, fire, gas leak, carbon monoxide), sound events (e.g., sudden sounds over a decibel threshold), thermostat events (e.g., change in ambient temperature, change in temperature settings), and door events (e.g., smart door lock engaged/disengaged, door open/closed).
- In some implementations, an alert event indicator for an alert event of a first type of the alert event types differs from an alert event indicator for an alert event of a second type of the alert event types in at least one visual characteristic. In some implementations, the differing visual characteristic is color. Alert event indicators corresponding to different alert event types may be distinguished visually in the
timeline region 12040 by differences in a visual characteristic. For example, alert event indicators may differ in color, where the color represents a respective alert event type. - In some implementations, alert event indicators of alert events types have different visual characteristics based on the smart device that detected the alert event. For example, alert events indicators for alert events detected by one smart device may have one color, and alert events indicators for alert events detected by another smart device may have a different color.
- In some implementations, alert event indicators for alert events of a first type of the alert event types are arranged along a first linear path, parallel to the timeline, in the second region; alert event indicators for alert events of a second type of the alert event types are arranged along a second linear path, parallel to the first linear path and to the timeline, in the second region; and the first linear path and the second linear path are parallel to each other and to the timeline. Alert event indicators of different types may be arranged in respective parallel linear paths (e.g., columns) by alert event type in the
timeline region 12040. For example,FIG. 12L showsindicators 12102, 12104, and 12106 (corresponding to one alert event type) in one linear path parallel to the timeline,indicators 12108 and 12110 (corresponding to another alert event type) in another linear path parallel to the timeline, andindicators 12112 and 12114 (corresponding to yet another alert event type) in yet another linear path parallel to the timeline. In some implementations, each linear path or column has its own sub-section (e.g.,sub-sections 12068,FIG. 12G ) in thetimeline region 12040. - In some implementations, the
electronic device 504 displays in the second region one or more event type icons. Each event type icon is associated with an alert event indicator and indicating an event type of an alert event to which the alert event indicator corresponds. Icons identifying alert event types (e.g.,icons FIG. 12M ) may be displayed in thetimeline region 12040. Each event type icon is associated with a respective alert event indicator, and is visually linked to the associated alert event indicator by a line (e.g.,line - In some implementations, displaying the timeline includes displaying a plurality of consecutive time increments, the plurality of consecutive time increments corresponding to a cumulative time duration and not associated with any alert event. Further, while displaying the plurality of consecutive time increments, the electronic device displays in the second region a first affordance to collapse the plurality of consecutive time increments into a cumulative time increment in the timeline, the cumulative time increment corresponding to the cumulative time duration. The electronic device detects a user interaction activating the first affordance, and in response to detecting the user interaction activating the first affordance, replaces display of the plurality of consecutive time increments with display of the cumulative time increment. The
client device 504 displays time increments in the timeline. For example, inFIG. 12I , one-hour increments are displayed in the timeline in thetimeline region 12040. In some implementations, an increment with one or more alert events (e.g., the 9 AM increment starting at marker 12050-B inFIG. 12I ) takes up more space in thetimeline region 12040 than a time increment without an alert event (e.g., the 3 AM increment between markers 12050-M and 12050-L inFIG. 12I ). When there are multiple consecutive time increments that do not have alert events (e.g., the six one-hour increments between markers 12050-B and 12050-M, FIGS. 12I-12J), an affordance (e.g., affordance 12084) for condensing or collapsing these increments into one increment equivalent in time (e.g., condense the six one-hour increments into a 6-hour increment corresponding tomarker 12092,FIG. 12K ) is displayed. In some implementations, theclient device 504 determines whether there are multiple consecutive time increments without alert events. In response to a user interaction on thetouch screen 12002 to activate the affordance (e.g.,gesture 12086 ontouchscreen display 12002 overaffordance 12084,FIG. 12J ), the consecutive increments are replaced in thetimeline region 12040 with an equivalent increment (e.g., the six one-hour increments are replaced with a 6-hour increment corresponding tomarker 12092,FIG. 12K ). - In some implementations, while displaying the cumulative time increment, the electronic device displays in the second region a second affordance to expand the cumulative time increment into the plurality of consecutive time increments, detects a user interaction activating the second affordance, and in response to detecting the user interaction activating the second affordance, replaces display of the cumulative time increment with display of the plurality of consecutive time increments. For example, as shown in
FIG. 12K , while the equivalent increment is displayed asmarker 12092, anaffordance 12088 to expand is displayed in the timeline region 12040 (e.g., in proximity to the equivalent increment in the timeline). In response to a user interaction on thetouch screen 12002 to activate the affordance (e.g., a tap gesture ontouchscreen display 12002 over affordance 12088), the equivalent increment is replaced in thetimeline region 12040 with the consecutive increments (e.g., the 6-hour increment corresponding tomarker 12092 is replaced with the six one-hour increments between markers 12050-M and 12050-B). - In some implementations, the electronic device displays in the second region a thumbnail associated with a first alert event indicator of the alert event indicators, where the thumbnail is displayed proximate to the first alert event indicator, and the thumbnail includes a frame from a recorded portion of the live video stream proximate in time to an alert event to which the first alert event indicator corresponds. One or more thumbnails (e.g.,
thumbnails FIG. 12L ;thumbnails FIG. 12M ) may be displayed in thetimeline region 12040. Each displayed thumbnail is associated with a respective alert event indicator and displayed in proximity to the associated alert event indicator (e.g., inFIG. 12L ,thumbnail 12116 is associated with alert event indicator 12108), and a thumbnail is visually linked to its associated alert event indicator by a line (e.g.,thumbnail 12116 is linked to alertevent indicator 12108 by line 12122). Each thumbnail includes a frame from a portion of the video feed proximate in time to the alert event of the associated alert event indicator. In some implementations, the frame in a thumbnail may be different from the frames in the extracted-frames video for the same time period. - In some implementations, the electronic device displays in the second region, for a predefined time increment unit on the timeline, up to a predefined number of thumbnails associated with respective alert event indicators. For example, for a one-hour increment in the timeline, there may be a limit of up to two thumbnails that may be displayed for alert event indicators in that one-hour increment. In some implementations, the limit is predefined (e.g., coded into the application). In some implementations, the limit scales based on the screen size (e.g., size of
touch screen 12002, which depends on the particular client device) and how much of the screen space is occupied by thetimeline region 12040. - In some implementations, the electronic device displays a time marker on the timeline. The
client device 504 displays atime position marker 12048 in thetimeline region 12040. - In some implementations, the time displayed with the
time position marker 12048 and optionally with thedate indicator 12052 is the time closest to the time on the timeline corresponding to the pixel position of thetime position marker 12048 relative to the timeline. For example, if there are 360 pixels between a 10-PM-and-11-PM increment, if thetime position marker 12048 aligns with the 180th pixel, the time “10:30:00 PM” is displayed as the time marked by thetime position marker 12048. In some implementations, when the video feed is being played in thevideo region 12038, the time displayed is the timestamp of the frame of the video feed being played. In some implementations, while the user is interacting with the timeline to move the timespan (e.g., manually scrolling the timeline with a gesture on the touch screen 12002), there is no relationship between the time displayed with thetime position marker 12048 and the frame of the extracted-frames video being displayed invideo region 12038; the pixel position of thetime position marker 12048 relative to the timeline governs the time that is displayed with thetime position marker 12048. - In some implementations, in accordance with a determination that a time on the timeline marked by the
time position marker 12048 corresponds to a respective alert event (e.g., thetime position marker 12048 intersects with an alert event indicator) and the alert event is motion in a defined zone, theclient device 504 highlights the defined zone while playing the portion of the video feed with the alert event. For example, inFIG. 12H ,zones video region 12038 when thetime position marker 12048 intersects withalert event indicators - In some implementations, the
client device 504 requests frames of the extracted-frames video(s) from theserver 508/552 as the user interacts with the timeline to move the timespan. Theclient device 504 may request frames from the server as needed or in blocks or intervals (e.g., 20-minutes blocks, one-hour blocks). In some implementations, frames of the extracted-frames video are requested based on a sliding window around the current manual scrolling position; the frames are decoded for display based on the sliding window as well. In some implementations, frames of the extracted-frames video are requested independently of the scrolling position (e.g., continuously or periodically requested and streamed to the client device). - In some implementations, when the video feed is playing in the video region 12038 (i.e., whenever the user is not interacting with the timeline to move the timespan and the video feed is not paused), the timespan moves along automatically; the timeline scrolls automatically as the video feed plays. The
time position marker 12048, based on its position relative to the timeline, acts as a position marker in the video feed. The frames displayed while the video feed is played are frames of the video feed. - In some implementations, the ordering of the linear paths/columns/sub-sections of alert event indicators in the
timeline region 12040 correspond to the ordering of defined zones in the video feed. For example, if there are three zones in the video feed going in a certain order from left to right, the columns for the alert event indicators corresponding to these zones have the same relative order going from left to right within thetimeline region 12040. - In some implementations, a time increment with alert event(s) has a longer display length (e.g., the increment between markers 12050-A and 12050-B,
FIG. 12B ) in thetimeline region 12040 than an increment without alert event(s) (e.g., the increment between markers 12050-B and 12050-C,FIG. 12B ). -
FIGS. 14A-14L illustrate example screenshots of user interfaces on a client device in accordance with some implementations. In some implementations, the user interfaces depicted inFIGS. 14A-14L are user interfaces for a smart home application on a client device (e.g., client device 504), such as a smart phone or a tablet computer. -
FIG. 14A illustrates a user interface with a video region and a timeline in a timeline region. The flow of time in the timeline goes from top to bottom. The timeline is being manipulated by the user, and the time position marker is marking a time in the past that doesn't have an alert event. The 8-AM to 9-AM increment, which includes an alert event, occupies more display length than the 9-AM to 10-AM segment, which does not include an alert event. -
FIG. 14B illustrates the timeline being manipulated by the user, such that the time position marker is marking a time in the past with an alert event; the time position marker overlaps with an alert event indicator. The zone corresponding to the alert event is highlighted in the video. -
FIG. 14C illustrates the time position marker is marking a time in the past with multiple, concurrent alert events; the time position marker overlaps with multiple alert event indicators. The zones corresponding to the concurrent alert events are highlighted in the video. -
FIG. 14D illustrates the time position marker is marking the present time; the video is a live video stream. -
FIG. 14E illustrates an alert events summary, or “daily brief” view, which includes the timeline in miniature and to the side, and a summary of alert events for a time period (e.g., the last 24 hours, the current calendar day, etc.). The summary of alert events is presented as one or more sets of thumbnails of portions of the video feed that correspond to alert events. Each set corresponds to a by event type (where motion in a zone may count as an individual type). Within a set, the video feed portion thumbnails may be ordered chronologically or by importance of the alert event as determined by the server system. In some implementations, this summary view may be activated by the client-side module 502 (e.g., event review interface module 82810) at the client device (e.g., client device 504) in response to activation of a predefined affordance in the user interface at the client device by a user. -
FIG. 14F illustrates a user interface with a video region and a timeline in a timeline region. The flow of time in the timeline goes from bottom to top. A “condense” affordance is displayed for a set of consecutive time increments without an alert event. -
FIG. 14G illustrates the consecutive time increments without an alert event collapsed into an equivalent time increment marker as a result of activation of the “condense” affordance. An “expand” affordance is displayed for the collapsed equivalent time increment. Activation of the “expand” affordance reverses the collapsing. -
FIG. 14H illustrates respective alert event indicators corresponding to respective alert events displayed on the timeline, and thumbnails of respective video portions corresponding to the respective alert events displayed adjacent to the corresponding alert event indicators. -
FIG. 14I illustrates another example alert events summary view, with video portions corresponding to alert events ordered chronologically. The videos are played one at a time as the summary view is scrolled up or down. -
FIG. 14J illustrates a video view in landscape orientation, with the timeline as an overlay on the right side. -
FIG. 14K illustrates a user interface with a video region and a timeline in a timeline region. In the timeline region, event thumbnails are displayed along with alert event indicators. Each displayed thumbnail is associated with an alert event indicator, and is connected to that alert event indicator visually by a line. There are multiple columns of alert event indicators, and with different colors for the alert event indicators of each column (e.g., alert event indicators of a first column are colored gray, alert event indicators of a second column are colored red, and alert event indicators of a third column are colored light green). -
FIG. 14L illustrates a user interface with a video region and a timeline in a timeline region. In the timeline region, event category icons, as well as alert event indicators and event thumbnails, are displayed. Each displayed event category icon is associated with an alert event indicator and optionally a displayed event thumbnail, and is connected to that alert event indicator (and the optionally associated event thumbnail) visually by a line. -
FIG. 15 illustrates an operating environment with a server system in communication with client devices and smart devices, in accordance with some implementations. Theoperating environment 1500 includes aserver system 1501 that includes multiple modules. In some implementations, these modules may themselves be implemented as server systems. In some implementations,video server system 552 and/or hubdevice server system 508 are implemented asserver system 1501. In some implementations, operatingenvironment operating environment 1500. - In the
operating environment 1500,server system 1501 is communicatively coupled to one or more smart devices 1502 (e.g.,smart devices 204, including camera 118) and one or more client devices 1504 (e.g., client device 504) with a client side module 1506 (e.g., client side module 502). The communicative coupling may be through one or more networks (e.g., networks 162), not shown inFIG. 15 for sake of convenience and brevity. Theserver system 1501 is remote from the smart device(s) 1502 and the client device(s) 1504. The smart device(s) 1502 and theclient device 1504 are associated with a user and the use's corresponding user account. - The
camera 118, when powered on and video capture is enabled, continuously captures video at a predetermined resolution (e.g., 1080P, 4K). In some implementations, thecamera 118 also performs motion detection pre-processing and/or other pre-processing on the captured video. If the camera performs pre-processing on the video, thecamera 118 generates metadata associated with the captured video in accordance with the pre-processing. - The
camera 118 transmits the captured video (raw or pre-processed) and the metadata (15102) to theserver system 1501. Other smart devices 1502 (e.g., hazard detector, thermostat) also transmit metadata (15102) to theserver system 1501. The metadata transmitted by the other devices include information on detected alerts or events. - At the
server system 1501, the received video and metadata are received by afront end 1508. Thefront end 1508 transmits the received captured video and metadata (15104) to the video processing andevent notification system 1512 for further processing, and (15106) to the storage system 1514 (e.g., a database system) for storage. - The video processing and
event notification system 1512 performs various processing on the video. The video processing andevent notification system 1512 also processes the received metadata to identify alerts and events. The video processing andevent notification system 1512 processes the video to further detect alerts and events, such as motion events, and to correlate events identified from the metadata to portions of the video. The video processing andevent notification system 1512 also selects frames of the video for use in event thumbnails, and generates the thumbnails from the selected frames. The video processing andevent notification system 1512 also generates event notifications, in accordance with the events information contained in the metadata and obtained from the video processing, and transmits the event notifications (15108) to theclient device 1504. Further, in some implementations, the video processing andevent notification system 1512 identifies frames for extraction by the frame extraction andencoding system 1516 based on the events information. - In some implementations, the video processing and
event notification system 1512 transmits the events information and the generated thumbnails (15110) to thestorage database 1514 for storage. In some implementations, the video processing andevent notification system 1512 also generates frames information based on the events information; the frames information indicates timestamps of frames to be extracted for use in the generation of extracted-frames videos. - In some implementations, for a given
camera 118, the captured video and corresponding metadata and event information that are stored in thestorage system 1514 has a upper limit. What the upper limit is for the givencamera 118 depends on whether the user account with which thecamera 118 is associated includes a subscription to a video service with which theserver system 1501 is associated. If the user account includes a subscription, the upper limit is higher than if the user account does not includes a subscription (e.g., the last 30 days with a subscription vs. the last 10 days without a subscription). - At the
client device 1504, when a user is viewing the timeline for thecamera 118 in the client-side module 1506 without manual scrubbing, thefront end 1508 transmits captured video retrieved (15106) from thestorage system 1514, and events information and event thumbnails obtained (15112) from the video processing andevents notification system 1512 to the client 1504 (15114). - The frame extraction and
encoding system 1516 extracts frames from the captured video and encodes the extracted frames into extracted-frames videos. The frame extraction andencoding system 1516 retrieves the capturedvideo 15116 from storage system 1514 (or thefront end 1518 transmits the captured video to the frame extraction andencoding system 1516 as well as tostorage system 1514 and video processing and event notification system 1512), and extracts frames from the captured video. The frame extraction andencoding system 1516 generates extracted-frames video by encoding the extracted frames in a predetermined format (e.g., H.264) and stores the extracted-frames video in extracted-frames video storage system 1518 (15122). - In some implementations, the frame extraction and
encoding system 1516 extracts frames from captured video (retrieved from storage system 1514) based on frames indicated by the video processing andevent notification system 1512. The frame extraction andencoding system 1516 requests frames information (15118) from the video processing andevent notification system 1512, and in response to the request, the video processing andevent notification system 1512 transmits frames information (15120) to the frame extraction andencoding system 1516. The frame extraction andencoding system 1516 extracts the frames from the captured video in accordance with the frames information and encodes the frames to generate the extracted-frames videos. - The client-
side module 1506 makes a request for extracted-frames video (15124) to theserver system 1501 through anapplication programming interface 1510. In some implementations, the client-side module 1506 makes the request in response to a timeline scrolling input by a user. Thefront end 1508 transmits the request (15126) to the frame extraction andencoding system 1516, which retrieves the extracted-frames video (15122) from the extracted-frames video storage 1518, and transmits the extracted-frames video (15128) to thefront end 1508, which transmits the extracted-frames video (15130) to theclient device 1504. - In some implementations, the video processing and
event notification system 1512 also selects frames from the video to serve as event thumbnails (e.g.,event thumbnails event notification system 1512 processes the video and the metadata to identify event cuepoints and significant changes or transitions in the video, among other things. Based on identified cuepoints and significant changes, the video processing andevent notification system 1512 selects, for an event, a frame to be a representative for the event, and generates the event thumbnail from the selected frame. - As described above, the
server system 1501 generates extracted-frames videos from the original video feeds. Extracted-frames video is displayed at theclient device 1504 whenever a user is manually scrolling the timeline (including inertial scrolling stemming from manual scrolling, e.g., inertial scrolling from a swipe gesture), i.e., scrubbing the video feed, on theclient device 1504. When the user is not scrolling the timeline (i.e., the video is left to play back automatically), the captured video is played. -
FIGS. 16A-16B illustrate a flow diagram of anexample process 1600 for generating extracted-frames video in accordance with some implementations. In some implementations, theprocess 1600 is implemented inoperating environment 1500. - The
front end 1508 receives (1602) captured video and metadata fromsmart devices 1502. Thefront end 1508 receives raw or pre-processed captured video from acamera 118. Thefront end 1508 also receives event metadata from thecamera 118 and other smart devices. Thefront end 1508 transmits (1604) the video and the metadata to the video processing and event notification system 1512 (hereinafter “video processing system” for convenience). Thefront end 1508 also transmits the video and optionally the metadata to astorage system 1514 for storage. - The
video processing system 1512 receives (1606) captured video and metadata, and processes (1608) the video and the metadata. Thevideo processing system 1512 analyzes the video to detect motion events (e.g., by determining cuepoints corresponding to motion events), and correlates portions of the video to events indicated in the metadata. - The
video processing system 1512 generates (1610) frames information based on the processing of the video and the metadata. Thevideo processing system 1512 generates frames information that identifies the frames for extraction in order to generate extracted-frames video. In some implementations, the frames information includes timestamps of the frames to be extracted. - In some implementations, blocks 1602, 1604, 1606, 1608, and 1610 are repeated periodically as video and metadata is continuously received from
smart devices 1502. - The frame extraction and
encoding system 1516 periodically requests (1612) frames information from thevideo processing system 1512. For example, requests may be made every minute, in order to generate extracted-frames video that covers up to the current time. - The
video processing system 1512 receives (1614) the request and transmits (1616) the frames information to the frame extraction andencoding system 1516. The frame extraction andencoding system 1516 receives (1618) the frames information, and extracts (1620) frames from video retrieved from thestorage system 1512 in accordance with the frames information. The frame extraction andencoding system 1516 encodes (1622) the extracted frames into extracted-frames video, which is stored in extracted-framesvideo storage system 1518. -
FIG. 17 illustrates a flow diagram of anexample process 1700 for displaying extracted-frames video in accordance with some implementations. In some implementations, theprocess 1700 is implemented inoperating environment 1500. - The
front end 1508 transmits (1702) video and events information to aclient device 1504. For example, a live video feed and events information for display in a timeline format is streamed to theclient device 1504. In some implementations, event thumbnails are also transmitted to theclient device 1504. - The
client device 1504 receives (1704) the video and events information, and displays (1706) the video and a timeline. The video is played back, and a timeline is displayed in accordance with the events information (e.g., the timeline is populated with alert events indicators and optionally event thumbnails, as inFIGS. 12B-12M ). - The
client device 1504 makes (1708) a request to thefront end 1508 for extracted-frames video. In some implementations, the request is made through anAPI 1510. The request may be made periodically (e.g., every minute, every 20 minutes, every hour) and/or on-demand whenever user scrolling of the timeline is detected. In some implementations, the request is for the extracted-frames video for a certain time period or for a particular frame from the extracted-frames video for a certain time period. - The
front end 1508 receives the request and transmits (1710) the request to the frame extraction andencoding system 1516. The frame extraction andencoding system 1516 receives (1712) the request, retrieves the requested extracted-frames video from the extracted-framesvideo storage system 1518, and transmits (1714) the retrieved video to thefront end 1508. Thefront end 1508 receives the video and transmits (1716) the video to theclient device 1504. Theclient device 1504 receives (1718) the extracted-frames video, and decodes and displays (1720) the extracted-frames video whenever the user scrolls the timeline. Extracted-frames video received by theclient device 1504 may be cached (e.g.,memory 806 as cached extracted-frames videos 836), so that multiple downloads of the same extracted-frames videos are reduced. -
FIGS. 18A-18D illustrate diagrams showing an example frame extraction arrangement for a video feed segment and a frames arrangement in the corresponding extracted-frames video, in accordance with some implementations. For a givencamera 118, extracted-frames video covering a predefined time period up to approximately the current time is stored in the extracted-frames video storage 1518. In some implementations, the predefined time period is the last 24 hours. Thus, there is extracted-frames video corresponding to the last 24 hours of the video feed. - In some implementations, extracted-frames video is generated from the video feed in segments, of predefined time length, of the predefined time period. In some implementations, each segment is 20 minutes long. In some implementations, each segment is 1 hour long.
-
FIG. 18A is a diagram illustrating the last 24 hours of avideo feed 1800 divided into past segments 1802-12 through 1802-n and alive segment 1804. Extracted-frames video is generated for each of thesesegments camera 118, an extracted-frames video for thelive segment 1804 is generated and periodically updated (e.g., re-encoded with additional and possibly different frames in accordance with additional events information) until the extracted-frames video for thelive segment 1804 covers the predefined segment time length. As the extracted-frames video for thelive segment 1804 is periodically updated with new frames, the extracted-frames video for thelive segment 1804 may have different frames minute-by-minute. When the extracted-frame video for the live segment covers the predefined segment time length, the extracted-frames video for thelive segment 1804 is completed and becomes an extracted-frames video for a past segment 1802 (i.e., no longer updated); thelive segments 1804 becomes the most recentpast segment 1802. A new extracted-frames video for a newlive segment 1804 is generated. As an analogy, the extracted-frames video for thelive segment 1804 may be thought of as a cup that starts empty and is periodically being filled with water. When the cup is completely filled, the cup is moved aside and no longer being filled, and a new empty cup takes its place. Thus, each of the extracted-frames videos for thepast segments 1802 is an extracted-frames video for a previously live segment, where the extracted-frames video has since been “locked-in” once the live segment becomes a past segment. - In some implementations, the predefined segment length is 20 minutes; the extracted-frames videos corresponding to the
past segments 1802 are each 20 minutes long, and the extracted-frames video corresponding to thelive segment 1804 grows from 0 minutes long until 20 minutes long. In some implementations, the predefined segment length is 60 minutes; the extracted-frames videos corresponding to thepast segments 1802 are each 60 minutes long, and the extracted-frames video corresponding to thelive segment 1804 grows from 0 minutes long until 60 minutes long. - In some implementations, frames are extracted from the video feed, for encoding of extracted-frames video, at a predefined average rate. The predefined average rate is, for example, 20 frames per 20 minutes or 60 frames per 60 minutes. Thus, if there are no events, a frame is extracted from the original video per minute.
- In some implementations, the predefined average rate of frame extraction described above is also the constant rate of frame extraction. In these implementations, frames are extracted at the rate regardless of whether a frame is in proximity to a detected event or not. Also, in these implementations, frame may be extracted without first requesting frames information from the
video processing system 1512 since the extraction rate is a predefined constant. - In some implementations, frames are extracted at variable rates based on events detected in the video feed and by other
smart devices 204, such that more frames are extracted from the video feed in proximity to a detected event, while maintaining the predefined average rate. Thus, in proximity to an alert event (e.g., near a cuepoint), frames are extracted closer together. To maintain the average rate, frames are extracted farther apart in portions without alert events. -
FIG. 18B includes a diagram 1806 illustrating frames of a segment (e.g., segment 1802-2) of thevideo feed 1800 that are indicated for extraction. In diagram 1806, cuepoints 1811 and 1813 were detected by thevideo processing system 1512. For the segment 1802-2, frame sets 1808, 1810, 1812, and 1814 are indicated for extraction in frames information generated by thevideo processing system 1512. Thevideo processing system 1512 generates frames information that indicates the timestamps of each frame in the frame sets 1808, 1810, 1812, and 1814 for extraction. Frame sets 1810 and 1814 are in proximity tocuepoints - In some implementations, the encoding is done using the H.264 format. It should be appreciated that other encoding formats are possible.
- The extracted-frames video, when encoded using the H.264 format, includes a “group of pictures” (“GOP”).
FIG. 18C includes a diagram illustrating aGOP 1816 for the extracted-frames video encoded from frames extracted from segment 1802-2 in accordance with the frame indications in diagram 1806. TheGOP 1816 includes an I-frame 1818 and P-frames 1820. The frames indicated in diagram 1806 are encoded into either an I-frame or a P-frame. The I-frame 1818 may be any one of the indicated frames in diagram 1806. The I-frame 1818 and P-frames 1820 follow the time spacing of the frame sets 1808, 1810, 1812, and 1814 as shown inFIG. 18B ; frames in proximity to a detected event/cuepoint are closer together than frames not in proximity to a detected event/cuepoint. In some implementations, a P-frame expresses a delta or a difference from the I-frame; higher compression rates may be achieved by encoding the extracted-frames video as including a reference frame (the I-frame) and deltas from the reference frame (the P-frames). - In some implementations, a GOP may have multiple I-frames, and the P-frames within the GOP refer to a different I-frame within the GOP depending on their respective positions within the GOP. In some implementations, a GOP has a single I-frame and the P-frames within the GOP refer to the single I-frame.
-
FIG. 18D illustrates a set of extracted-frames videos 1850 corresponding to the last 24 hours of thevideo feed 1800 diagrammed inFIG. 18A . The extracted-frames videos 1850 include static (i.e., no longer updated) extracted-frames videos 1852 corresponding to thepast segments 1802 and dynamic (i.e., periodically updated until grown to the predefined segment time length) extracted-frames video 1852 corresponding to thelive segment 1804. Static extracted-frames video 1852-2 corresponds to segment 1802-2; static extracted-frames video 1852-2 includes theGOP 1816. Similarly, the other static extracted-frames videos 1852 also include their respective GOPs, and the dynamic extracted-frames video 1854 also includes a GOP. Extracted-frames video 1854 is periodically re-encoded by the frame extraction andencoding system 1516 to include additional frames and possibly different frames until the length of the extracted-frames video 1854 has grown to the predefined segment time length. -
FIG. 19 is a flow diagram illustrating amethod 1900 of generating and transmitting video for viewing at a client device, in accordance with some implementations. In some implementations, themethod 1900 is implemented at aserver system 1501 in anoperating environment 1500. - The server system receives (1902) a video stream from a remote video camera, where the video stream comprises a plurality of video frames. The server system 1502 (e.g., the front end 1508) receives a video feed (e.g., captured video) from a
camera 118. The video feed includes many video frames (e.g., the video feed received is 1080P video at 24 frames per second). Theserver system 1501 also receives metadata from thecamera 118 and othersmart devices 1502. - The server system selects (1904) a plurality of non-contiguous frames from the video stream, the plurality of non-contiguous frames being associated with a predetermined time interval. The
video processing system 1512 processes the video feed and metadata to select and identify certain frames within a time interval (e.g., the interval corresponding to the currentlive segment 1804; the interval is predetermined at least to the extent that the interval has a predefined maximum length and the interval corresponds to a particular interval of actual time and date) for extraction. The frames are identified in accordance of an average rate of 1 frame per minute. Thus, at least some of the identified frames are non-contiguous, in that the identified frames are frames that do not immediately succeed one another in sequence in the video feed. Thevideo processing system 1512 generates frames information with the selected and identified frames. - The server system encodes (1906) the plurality of non-contiguous frames as a compressed video segment associated with the time interval. The frame extraction and
encoding system 1516 extracts the selected frames from the video feed and encodes the extracted frames, using a video compression format (e.g., H.264), into an extracted-frames video. In some implementations, the extracted-frames video has a lower resolution than the original video feed (e.g., 360P for the extracted-frames video vs. 1080P for the original video feed). In some implementations, the extracted-frames video has the same resolution than the original video feed. In some implementations, multiple versions of the extracted-frames video are encoded—one version with lower resolution than the original video feed and one with the same resolution as the original video feed. - The server system receives (1908) a request from an application running on a client device to review video from the remote video camera for the time interval. The
front end 1508 receives a request from the client-side module 1506 of aclient device 1504 for extracted-frames video associated with thecamera 118 for the time interval. In some implementations, the request is made through anAPI 1510. - In response to the request, the server system transmits (1910) the video segment to the client device for viewing in the application. The
server system 1501 transmits the extracted-frames video to theclient device 1504, where the client-side module 1506 can decode the extracted-frames video for display in a user interface of the module. - In some implementations, the predetermined time interval has a length of one hour. In some implementations, the predetermined time interval has a length of twenty minutes. The extracted-frames video corresponds to a segment of the video feed with a predefined length of 20 minutes or an hour (or up to that predefined length if the segment is the live segment).
- In some implementations, the non-contiguous frames are spaced evenly. If the frames are extracted at a constant rate (i.e., the frame selection does not take into account whether a frame is in proximity to a detected event/cuepoint), then the selected frames will be evenly spaced.
- In some implementations, the non-contiguous frames are variably spaced in time, with frames in proximity to an event occurring in the video segment being spaced more closely than frames not in proximity to an event. The event may be a motion event detected in the video feed by the
video processing system 1512 and/orcamera 118 or an alert event such as hazard alarm as indicated in metadata transmitted by asmart device 1502. Frames selected for extraction may be closer together if the frames are in proximity to a detected event/cuepoint (e.g., frame sets 1810 and 1814,FIG. 18B ). - In some implementations, the server system, prior to the encoding, processes the video stream to identify events; and in accordance with the processing, identifies one or more events, identifies a first time interval that includes at least a portion of an identified event, and identifies a second time interval that does not include any of the identified events, where both the first time interval and the second time interval have the same length. The
video processing system 1512 processes the video feed and the metadata to identify events associated with the video (e.g., motion events in the video). The identified events are correlated to segments of the video feed, and certain segments may have one or more events and other segments may have no events. - In some implementations, the server system, for the first time interval, encodes a first number of non-contiguous frames as a compressed video segment associated with the first time interval; and for the second time interval, encodes a second number of non-contiguous frames as a compressed video segment associated with the second time interval, where the second number is less than the first number. The frame extraction and
encoding system 1516 encodes extracted-frames video for a segment with one or more events to include more frames than for a segment without an event. More generally, in some implementations, more frames are extracted from portions of the video feed with an alert event (e.g., in proximity to an event/cuepoint) than from portions with an alert event. Thus, the portion of the extracted-frames video corresponding to the video feed portion with the alert event will have more frames than the portion of the extracted-frames video corresponding to the video feed portion without the alert event. - In some implementations, the server system, for the first time interval, encodes a plurality of contiguous frames as a compressed video segment associated with the first time interval, and for the second time interval, encodes a plurality of non-contiguous frames as a compressed video segment associated with the second time interval.
- In some implementations, the server system receives event information from one or more of: the remote video camera, and one or more smart devices, and identifying one or more events includes identifying one or more events in accordance with the processing and the received event information. The
server system 1501 receives metadata fromcamera 118 and othersmart devices 1502. The metadata include information that indicates detected events or markers of events in the video or otherwise associated with the video (e.g., markers of detected motion in the video, alerts triggered). - In some implementations, the server system, prior to the encoding, receives event information from the remote video camera, wherein the event information is generated by the remote video camera processing the video stream. The
camera 118 may pre-process the video feed to detect motion, and transmit metadata indicating the detected motion to theserver system 1501. - In some implementations, the server system, prior to the encoding, receives event information from one or more smart devices. Other
smart devices 1502 in theoperating environment 1500 transmit metadata indicating events (e.g., alerts triggered) to theserver system 1501. The metadata from thecamera 118 andsmart devices 1502 are used by thevideo processing system 1512 to detect and identify events and to correlate them with the video feed. - In some implementations, transmitting the video segment to the client device includes transmitting frames of the video segment, a plurality of frames of an immediately preceding video segment, and a plurality of frames of an immediately succeeding video segment. The extracted-frames video may be requested by the
client module 1506 in sliding windows; wherever the marked time on the timeline is based on the user's scrolling of the timeline, theclient module 1506 requests extracted-frames video frames for the marked time and some number of frames immediately before and some number for frames immediately after. In some implementations, the extracted-frames video is requested independently of the user's scrolling of the timeline. For example, theclient device 1504 may periodically or continuously request frames of the extracted-frames video. - In some implementations, transmitting the video segment to the client device includes transmitting the frames corresponding to the video segment associated with the requested time interval. The extracted-frames video may be requested by the
client module 1506 on demand; wherever the marked time on the timeline is based on the user's scrolling of the timeline, theclient module 1506 requests extracted-frames video frames for the marked time as the user scrolls the timeline. - In some implementations, the video segment (e.g., the extracted-frames video) is encoded using a H.264 video compression format, and the encoded video segment includes I-frames and P-frames. In some implementations, the original video feed is also encoded using the H.264 video compression format; the original video feed also includes I-frames and P-frames. The server system, in response to a user ceasing to manually scrub through the video from the remote video camera at the client device, transmits an I-frame and P-frames of the original video feed to the client device for resumption of playback of the video feed at the client device; playback of the original video feed resumes from approximately the time corresponding to where the user ceased scrubbing on the timeline by decoding the nearest I-frame before that time and continuing from there. For extracted-frames videos, the server system transmits I-frames and P-frames of the extracted-frames video by request of the client device (e.g., in a sliding window around the scrubbing position or independently of the scrubbing position). As the user continues scrubbing the video feed, I-frames and P-frames of the extracted-frames video are decoded for display. In some implementations, when scrubbing is stopped, an I-frame of the extracted-frames video that is close in time to an I-frame of the original video feed is displayed in the
video region 12038 before playback of the video feed resumes, so that playback of the video feed can be smoothly resumed from the last shown scrubbing position. - In some implementations, if the frame for the marked time is a P-frame, the corresponding I-frame may be transmitted also since I-frame is needed for decoding of the P-frame.
- In some implementations, frames in the extracted-frames video are encoded in reverse chronological order (i.e., from more recent to less recent). For example, in an extracted-frames video that is encoded in reverse order, the frame closest to the present time is encoded as an I-frame, and frames preceding that frame in time are encoded in the reverse chronological order as P-frames. In this way, the ordering of the I-frames and P-frames in the extracted-frames video is consistent with backwards-in-time scrubbing by a user, which may reduce the number of requests for frames in the extracted-frames video whenever the user scrubs backwards in time.
- In some implementations, when the user scrubs the timeline, the initial extracted-frames video frame(s) that are requested and displayed in the
video region 12038 to the user depends on the direction of the user scrubbing. The frames requested are behind the direction of the user scrubbing. For example, if the scrubbing is going forward in time, the frames requested are a sequence of frames nearest to the scrubbing position that are backwards in time from to the scrubbing position. If the scrubbing is going backwards in time, the frames requested are a sequence of frames nearest to the scrubbing position that are forward in time from to the scrubbing position. - As described above, the
video processing system 1512 processes the video feed and received metadata to detect and identify events (e.g., cuepoints in the video feed indicative of events). Using the information on the detected events, thevideo processing system 1512 selects and identifies frames of the video feed for extraction by the frame extraction andencoding system 1516, as well as selecting frames from which event thumbnails are generated. In some implementations, the processing performed by thevideo processing system 1512 includes detecting specifically persons (e.g., detecting faces) and detecting particular objects, as well as detecting anomalies between frames. Individual frames may be scored based on these detections. Based on the scores, cuepoints and event thumbnail frames are identified. - In some implementations, frames that are extracted for encoding into extracted-frames video are I-frames in the original video feed (which in some implementations is also encoded in accordance with the H.264 format and thus includes I-frames and P-frames), and P-frames in the video feed are excluded from the extraction and encoding of the extracted-frames video. When the user stops scrubbing (e.g., ceases the scrubbing input), the video feed resumes playback from the video feed I-frame that was displayed as an extracted-frames video frame when the scrubbing ceased. In this way, resumption of video feed playback from a stop in the scrubbing is smoother.
- In some implementations, the I-frames of the video feed are identified by the
server system 508/552/1501 (e.g., video processing and event notification system 1512) for extraction by the frame extraction andencoding system 1516. The I-frames of the video feed are scored in isolation by the video processing andevent notification system 1512 based on one or more criteria (e.g., detection of person, detection of object of interest, detection of motion, position of the person/object/motion in the frame, etc.). When frames are requested for extraction, the I-frames are identified for extraction based multiple criteria. In some implementations, the criteria for identifying frames for extraction include, in order of priority, (1) the best scoring I-frames, (2) even spacing (i.e., constant frame extraction rate), and (3) coverage of alert events/cuepoints (e.g., each alert event/cuepoint has at least one frame identified for extraction). In some implementations, the even spacing criterion may be traded off for higher frame rate in proximity or around an alert event/cuepoint. - In some implementations, the identification of frames for extraction is performed using a greedy algorithm that optimizes the identified frames under one or more constraints. In some implementations, the constraints include minimum delta between frame times (two frames has to be at least a certain amount of time apart), minimizing gaps between frames, maximizing quality (e.g., best scoring), selecting frames from cuepoints, and choosing available frames.
- In some implementations, a thumbnail is cropped and zoomed-in to focus on content of interest in the thumbnail. Frames of the video feed may be scored based on detection of faces, persons, and objects of interest in the frames. The
server system 508/552/1501 (e.g., a frame scoring module within thevideo server 554, not shown, event detection module 7306) scores frames of the video feed on faces, persons, and objects of interest detected in the frames. This may include detecting the face, person, or object in a frame, determining a bounding box around the face/person/object, and scoring the bounding box. The best scoring frame for an alert event is selected by theserver system 508/552 for use as the thumbnail to be displayed with the corresponding alert event indicator, and the thumbnail may be cropped and zoomed-in to focus on the bounding box. - As described above, in some implementations, there is a limit to how many thumbnails can be displayed for alert event indicators (e.g., up to two thumbnails per one-hour increment on the timeline). Alert events/cuepoints may be scored for importance by the
server system 508/552/1501 based on one or more criteria, and thumbnails are displayed for the alert event indicators for the highest-importance alert events in accordance with the limit to how many thumbnails can be displayed. In this way, the user can see in the timeline visualizations of the highest-importance alert events. In some implementations, importance of alert events/cuepoints may also be used for the issuance of alert event notifications (e.g., emphasize notifying on alert events with high importance). - In some implementations, the criteria for determining or scoring importance include one or more of:
-
- recent importance scores (e.g., a cuepoint is less important if a recent cuepoint was important);
- likelihood (e.g., how rare is a cuepoint at this time of the week);
- face/person/object detected;
- anomaly (e.g., how rare are appearances of persons for this device or camera view);
- motion probability (e.g., how much motion there was, likelihood the detected motion is a true positive, confidence that the detected motion is a true positive);
- whether a notification or alert was sent for the alert event;
- user implicit feedback (e.g., more scrubbing and other interaction on certain cuepoints vs. others); and
- user explicit feedback.
- In some implementations, the
server system 508/552/1501 has (e.g., in memory 722) profiles ofcameras 118. The profile of acamera 118 includes an aggregation of historical data for thecamera 118, including historical data for detection of persons and activity (e.g., motion), amount of activity, and time of activity. When scoring an alert event or cuepoint in video captured by thecamera 118, the alert event or cuepoint may be compared to the profile to determine whether a person or activity is anomalous, and the alert event/cuepoint is scored accordingly. For example, if the profile for acamera 118 indicates that persons rarely enter into the view of thecamera 118, then a person detected in a cuepoint may be determined to be anomalous. - In some implementations, a thumbnail is guaranteed to be displayed for certain types of alert events. For example, a hazard event (e.g., smoke, carbon monoxide) in the timeline may be guaranteed to have a thumbnail. In accordance with the limit on the number of thumbnails in a time increment, the guaranteed thumbnail may be displayed at the expense of a thumbnail for an alert event/cuepoint that was otherwise scored highly. Similar thumbnail guarantee priority may be assigned by device in the operating environment (e.g., to a
particular camera 118, to a particular smart device). In some implementations, the thumbnail guarantee priority (whether it be by alert event type or by device) is configurable by the user. - In some implementations, in the
timeline region 12040, the position, on the timeline, of a line connecting a thumbnail to an alert event indicator corresponds to a cuepoint associated with the alert event indicator. In some implementations, a thumbnail that is displayed in thetimeline region 12040 may be displayed in a manner such that the thumbnail is centered (vertically if the timeline is vertical, horizontally if the timeline is horizontal) about a cuepoint (e.g., the line connecting the thumbnail to an associated alert event indicator). For example, inFIG. 12L , the position of theline 12122 on the timeline corresponds to a cuepoint, and thethumbnail 12116 is vertically centered about the line 12122 (i.e., theline 12122 and the vertical center of thethumbnail 12116 are aligned). As another example, inFIG. 12M , the position of theline 12238 on the timeline corresponds to a cuepoint, and thethumbnail 12220 is vertically centered about the line 12238 (i.e., theline 12238 and the vertical center of thethumbnail 12220 are aligned). - In some implementations, one or more of the thumbnails may be displayed in a manner such that they are not centered about their associated cuepoints (e.g., in
FIG. 12M ,line 12240 and the vertical center ofthumbnail 12222 are not aligned), while the locations of the cuepoints are maintained. In this way, the likelihood of displayed thumbnails overlapping with each other due to the centering and other factors, such as screen size constraints and the density of cuepoints on the timeline, is reduced. The client device 504 (e.g., the client module 502) may use any of multiple strategies to adjust the centering (and/or other positioning parameters) of the thumbnails in thetimeline region 12040 to reduce the likelihood of thumbnail overlap. For example, in some implementations, theclient device 504 may maximize the number of thumbnails that are centered, and minimize the number of thumbnails that are not centered. In some implementations, theclient device 504 may maximize the number of thumbnails that are centered and located at the edges of the screen or of thetimeline region 12040, while allowing thumbnails in the middle of the screen or of thetimeline region 12040 to float (e.g., be not centered). In some implementations, theclient device 504 may adjust the positioning of the thumbnails so that they are equally spaced from one another regardless of whether they are centered. In some implementations, theclient device 504 may optimize the positions of the thumbnails so that the thumbnails are equally spaced and are centered. - In some implementations, the detection of alert events/cuepoints includes generating a confidence level that expresses a measure of confidence that the detected event, motion, person, object, etc. is a true positive (e.g., for person detection, the confidence level expresses a measure of how confident the
video processing system 1512 is that the detected person is detected correctly). The confidence level may be a criterion in the score for determining cuepoint importance. - In some implementations, a notification of an alert event includes an indication of the confidence level of detection of the alert event. For example, if the event is that a person is in the room, and the confidence level is very high (e.g., 99-100%), the notification may say “person in room,” and if the confidence is lower (e.g., 80%), the notification may say “person may be in room.”
- It will also be understood that, although the terms first, second, etc. are, in some instances, used herein to describe various elements, these elements should not be limited by these terms. These terms are only used to distinguish one element from another. For example, a first user interface could be termed a second user interface, and, similarly, a second user interface could be termed a first user interface, without departing from the scope of the various described implementations. The first user interface and the second user interface are both types of user interfaces, but they are not the same user interface.
- The terminology used in the description of the various described implementations herein is for the purpose of describing particular implementations only and is not intended to be limiting. As used in the description of the various described implementations and the appended claims, the singular forms “a”, “an” and “the” are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will also be understood that the term “and/or” as used herein refers to and encompasses any and all possible combinations of one or more of the associated listed items. It will be further understood that the terms “includes,” “including,” “comprises,” and/or “comprising,” when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and/or groups thereof.
- As used herein, the term “if” is, optionally, construed to mean “when” or “upon” or “in response to determining” or “in response to detecting” or “in accordance with a determination that,” depending on the context. Similarly, the phrase “if it is determined” or “if [a stated condition or event] is detected” is, optionally, construed to mean “upon determining” or “in response to determining” or “upon detecting [the stated condition or event]” or “in response to detecting [the stated condition or event]” or “in accordance with a determination that [a stated condition or event] is detected,” depending on the context.
- It is to be appreciated that “smart home environments” may refer to smart environments for homes such as a single-family house, but the scope of the present teachings is not so limited. The present teachings are also applicable, without limitation, to duplexes, townhomes, multi-unit apartment buildings, hotels, retail stores, office buildings, industrial buildings, and more generally any living space or work space.
- It is also to be appreciated that while the terms user, customer, installer, homeowner, occupant, guest, tenant, landlord, repair person, and the like may be used to refer to the person or persons acting in the context of some particularly situations described herein, these references do not limit the scope of the present teachings with respect to the person or persons who are performing such actions. Thus, for example, the terms user, customer, purchaser, installer, subscriber, and homeowner may often refer to the same person in the case of a single-family residential dwelling, because the head of the household is often the person who makes the purchasing decision, buys the unit, and installs and configures the unit, and is also one of the users of the unit. However, in other scenarios, such as a landlord-tenant environment, the customer may be the landlord with respect to purchasing the unit, the installer may be a local apartment supervisor, a first user may be the tenant, and a second user may again be the landlord with respect to remote control functionality. Importantly, while the identity of the person performing the action may be germane to a particular advantage provided by one or more of the implementations, such identity should not be construed in the descriptions that follow as necessarily limiting the scope of the present teachings to those particular individuals having those particular identities.
- For situations in which the systems discussed above collect information about users, the users may be provided with an opportunity to opt in/out of programs or features that may collect personal information (e.g., information about a user's preferences or usage of a smart device). In addition, in some implementations, certain data may be anonymized in one or more ways before it is stored or used, so that personally identifiable information is removed. For example, a user's identity may be anonymized so that the personally identifiable information cannot be determined for or associated with the user, and so that user preferences or user interactions are generalized (for example, generalized based on user demographics) rather than associated with a particular user.
- Although some of various drawings illustrate a number of logical stages in a particular order, stages that are not order dependent may be reordered and other stages may be combined or broken out. While some reordering or other groupings are specifically mentioned, others will be obvious to those of ordinary skill in the art, so the ordering and groupings presented herein are not an exhaustive list of alternatives. Moreover, it should be recognized that the stages could be implemented in hardware, firmware, software or any combination thereof.
- The foregoing description, for purpose of explanation, has been described with reference to specific implementations. However, the illustrative discussions above are not intended to be exhaustive or to limit the scope of the claims to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The implementations were chosen in order to best explain the principles underlying the claims and their practical applications, to thereby enable others skilled in the art to best use the implementations with various modifications as are suited to the particular uses contemplated.
Claims (20)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/335,396 US11238290B2 (en) | 2016-10-26 | 2016-10-26 | Timeline-video relationship processing for alert events |
US17/649,285 US20220215664A1 (en) | 2016-10-26 | 2022-01-28 | Timeline-Video Relationship Processing for Alert Events |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/335,396 US11238290B2 (en) | 2016-10-26 | 2016-10-26 | Timeline-video relationship processing for alert events |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US17/649,285 Continuation US20220215664A1 (en) | 2016-10-26 | 2022-01-28 | Timeline-Video Relationship Processing for Alert Events |
Publications (2)
Publication Number | Publication Date |
---|---|
US20180115788A1 true US20180115788A1 (en) | 2018-04-26 |
US11238290B2 US11238290B2 (en) | 2022-02-01 |
Family
ID=61970047
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/335,396 Active 2038-11-03 US11238290B2 (en) | 2016-10-26 | 2016-10-26 | Timeline-video relationship processing for alert events |
US17/649,285 Pending US20220215664A1 (en) | 2016-10-26 | 2022-01-28 | Timeline-Video Relationship Processing for Alert Events |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US17/649,285 Pending US20220215664A1 (en) | 2016-10-26 | 2022-01-28 | Timeline-Video Relationship Processing for Alert Events |
Country Status (1)
Country | Link |
---|---|
US (2) | US11238290B2 (en) |
Cited By (53)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20170048482A1 (en) * | 2014-03-07 | 2017-02-16 | Dean Drako | High definition surveillance image storage optimization apparatus and methods of retention triggering |
US20180276474A1 (en) * | 2017-03-21 | 2018-09-27 | Beijing Xiaomi Mobile Software Co., Ltd. | Method, apparatus for controlling a smart device and computer storge medium |
CN108833963A (en) * | 2018-05-31 | 2018-11-16 | 腾讯科技（上海）有限公司 | Method, computer equipment, readable storage medium storing program for executing and the system of display interface picture |
US20190199763A1 (en) * | 2017-12-22 | 2019-06-27 | mindHIVE Inc. | Systems and methods for previewing content |
US20190287376A1 (en) * | 2018-03-14 | 2019-09-19 | Safely You Inc. | System and Method for Detecting, Recording and Communicating Events in the Care and Treatment of Cognitively Impaired Persons |
US20190342621A1 (en) * | 2018-05-07 | 2019-11-07 | Apple Inc. | User interfaces for viewing live video feeds and recorded video |
US20190348076A1 (en) * | 2018-05-11 | 2019-11-14 | Axon Enterprise, Inc. | Systems and methods for cross-redaction |
US20190370552A1 (en) * | 2018-05-30 | 2019-12-05 | Logitech Europe S.A. | Video content activity regions |
US10635303B2 (en) | 2016-06-12 | 2020-04-28 | Apple Inc. | User interface for managing controllable external devices |
US20200162528A1 (en) * | 2018-11-15 | 2020-05-21 | Bose Corporation | Controlling Streaming Media Players |
US10708635B2 (en) | 2017-03-02 | 2020-07-07 | Ricoh Company, Ltd. | Subsumption architecture for processing fragments of a video stream |
US10713391B2 (en) | 2017-03-02 | 2020-07-14 | Ricoh Co., Ltd. | Tamper protection and video source identification for video processing pipeline |
US10720182B2 (en) | 2017-03-02 | 2020-07-21 | Ricoh Company, Ltd. | Decomposition of a video stream into salient fragments |
US10719552B2 (en) * | 2017-03-02 | 2020-07-21 | Ricoh Co., Ltd. | Focalized summarizations of a video stream |
US10779085B1 (en) | 2019-05-31 | 2020-09-15 | Apple Inc. | User interfaces for managing controllable external devices |
US10838611B1 (en) * | 2019-05-03 | 2020-11-17 | Google Llc | Navigation system on the infinite scroll |
US10902266B1 (en) * | 2017-05-10 | 2021-01-26 | Vivint, Inc. | Variable rate time-lapse with saliency |
US10929707B2 (en) | 2017-03-02 | 2021-02-23 | Ricoh Company, Ltd. | Computation of audience metrics focalized on displayed content |
US10929685B2 (en) | 2017-03-02 | 2021-02-23 | Ricoh Company, Ltd. | Analysis of operator behavior focalized on machine events |
US10943122B2 (en) | 2017-03-02 | 2021-03-09 | Ricoh Company, Ltd. | Focalized behavioral measurements in a video stream |
US10949705B2 (en) | 2017-03-02 | 2021-03-16 | Ricoh Company, Ltd. | Focalized behavioral measurements in a video stream |
US10949463B2 (en) | 2017-03-02 | 2021-03-16 | Ricoh Company, Ltd. | Behavioral measurements in a video stream focalized on keywords |
US10956773B2 (en) | 2017-03-02 | 2021-03-23 | Ricoh Company, Ltd. | Computation of audience metrics focalized on displayed content |
US10956494B2 (en) | 2017-03-02 | 2021-03-23 | Ricoh Company, Ltd. | Behavioral measurements in a video stream focalized on keywords |
US10956495B2 (en) | 2017-03-02 | 2021-03-23 | Ricoh Company, Ltd. | Analysis of operator behavior focalized on machine events |
US10965899B1 (en) * | 2017-04-17 | 2021-03-30 | Alarm.Com Incorporated | System and method for integration of a television into a connected-home monitoring system |
WO2021081653A1 (en) * | 2019-10-31 | 2021-05-06 | Genetec Inc. | Facilitating video monitoring of at least one location |
US20210142788A1 (en) * | 2019-11-13 | 2021-05-13 | Lg Electronics Inc. | Method of controlling intelligent security device |
US11022337B2 (en) * | 2017-11-20 | 2021-06-01 | Carrier Corporation | Air conditioning system |
US11032345B2 (en) * | 2018-05-10 | 2021-06-08 | Microsoft Technology Licensing, Llc | Client side data stream processing |
US11079913B1 (en) | 2020-05-11 | 2021-08-03 | Apple Inc. | User interface for status indicators |
US11123876B2 (en) * | 2017-04-12 | 2021-09-21 | Caterpillar Inc. | Method for sensor data processing |
US11140547B2 (en) * | 2016-11-26 | 2021-10-05 | Huawei Technologies Co., Ltd. | Method for securely controlling smart home, and terminal device |
US11151383B2 (en) * | 2017-01-09 | 2021-10-19 | Allegro Artificial Intelligence Ltd | Generating visual event detectors |
US11156325B2 (en) | 2017-05-25 | 2021-10-26 | Google Llc | Stand assembly for an electronic device providing multiple degrees of freedom and built-in cables |
US11164006B2 (en) * | 2017-03-30 | 2021-11-02 | Nec Corporation | Information processing apparatus, control method, and program |
US11182622B2 (en) * | 2016-12-05 | 2021-11-23 | Google Llc | Systems and methods for locating image data for selected regions of interest |
US20220057929A1 (en) * | 2018-02-23 | 2022-02-24 | Samsung Electronics Co., Ltd. | Electronic device displaying interface for editing video data and method for controlling same |
US11303632B1 (en) * | 2018-06-08 | 2022-04-12 | Wells Fargo Bank, N.A. | Two-way authentication system and method |
US11343551B1 (en) * | 2019-07-23 | 2022-05-24 | Amazon Technologies, Inc. | Bandwidth estimation for video streams |
US11363071B2 (en) | 2019-05-31 | 2022-06-14 | Apple Inc. | User interfaces for managing a local network |
US20220269256A1 (en) * | 2017-10-06 | 2022-08-25 | Johnson Controls Tyco IP Holdings LLP | Building management system with alarm generation, cloud storage, and visualization |
US20220303615A1 (en) * | 2017-09-19 | 2022-09-22 | Rovi Guides, Inc. | Systems and methods for navigating internet appliances using a media guidance application |
US20220335795A1 (en) * | 2021-04-16 | 2022-10-20 | Dice Corporation | Hyperlinked digital video alarm electronic document |
US20220345772A1 (en) * | 2018-02-02 | 2022-10-27 | Comcast Cable Communications, Llc | Image Selection Using Motion Data |
US11589010B2 (en) | 2020-06-03 | 2023-02-21 | Apple Inc. | Camera and visitor user interfaces |
US11609684B2 (en) | 2016-10-26 | 2023-03-21 | Google Llc | Timeline-video relationship presentation for alert events |
GB2612118A (en) * | 2021-10-22 | 2023-04-26 | Milestone Systems As | Computer-implemented method and computer program for generating a thumbnail from a video stream or file, and video surveillance system |
WO2023076627A1 (en) * | 2021-10-28 | 2023-05-04 | Noiseaware Inc. | System and method for monitoring and classifying smoking events in monitored spaces |
US11657614B2 (en) | 2020-06-03 | 2023-05-23 | Apple Inc. | Camera and visitor user interfaces |
US11689784B2 (en) | 2017-05-25 | 2023-06-27 | Google Llc | Camera assembly having a single-piece cover element |
US11785277B2 (en) | 2020-09-05 | 2023-10-10 | Apple Inc. | User interfaces for managing audio for media items |
US11968412B1 (en) | 2022-05-23 | 2024-04-23 | Amazon Technologies, Inc. | Bandwidth estimation for video streams |
Families Citing this family (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10621444B1 (en) * | 2019-10-25 | 2020-04-14 | 7-Eleven, Inc. | Action detection during image tracking |
EP3989537B1 (en) * | 2020-10-23 | 2023-05-03 | Axis AB | Alert generation based on event detection in a video feed |
US11477616B2 (en) | 2020-11-30 | 2022-10-18 | Getac Technology Corporation | Safety detection controller |
US11271810B1 (en) | 2020-11-30 | 2022-03-08 | Getac Technology Corporation | Heterogeneous cross-cloud service interoperability |
US11720414B2 (en) | 2020-11-30 | 2023-08-08 | Whp Workflow Solutions, Inc. | Parallel execution controller for partitioned segments of a data model |
US11540027B2 (en) | 2020-11-30 | 2022-12-27 | Getac Technology Corporation | Performant ad hoc data ingestion |
US11630677B2 (en) | 2020-11-30 | 2023-04-18 | Whp Workflow Solutions, Inc. | Data aggregation with self-configuring drivers |
US11604773B2 (en) | 2020-11-30 | 2023-03-14 | Whp Workflow Solutions, Inc. | Hierarchical data ingestion in a universal schema |
US11468671B2 (en) | 2020-11-30 | 2022-10-11 | Getac Technology Corporation | Sentiment analysis for situational awareness |
US11977993B2 (en) | 2020-11-30 | 2024-05-07 | Getac Technology Corporation | Data source correlation techniques for machine learning and convolutional neural models |
US11605288B2 (en) * | 2020-11-30 | 2023-03-14 | Whp Workflow Solutions, Inc. | Network operating center (NOC) workspace interoperability |
US11424945B1 (en) * | 2021-06-30 | 2022-08-23 | Dropbox, Inc. | Techniques for avoiding conflicting user actions during a video collaboration session |
US11863600B2 (en) | 2021-06-30 | 2024-01-02 | Dropbox, Inc. | Techniques for efficient communication during a video collaboration session |
Citations (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040177149A1 (en) * | 2003-03-05 | 2004-09-09 | Zullo Paul F. | System and method for presentation at the election of a user of media event information and further media event information of media events all related to a preselected time period |
US20050289615A1 (en) * | 2004-06-25 | 2005-12-29 | Seiko Epson Corporation | Video distribution system, video distribution device, video reception device, video distribution method, video reception method, video distribution program, and video reception program |
US20060288392A1 (en) * | 2005-05-31 | 2006-12-21 | Canon Kabushiki Kaisha | Frame scattering for video scrubbing |
US20070025688A1 (en) * | 2005-07-27 | 2007-02-01 | Sassan Pejhan | Video encoding and transmission technique for efficient, multi-speed fast forward and reverse playback |
US20080181498A1 (en) * | 2007-01-25 | 2008-07-31 | Swenson Erik R | Dynamic client-server video tiling streaming |
US20090220206A1 (en) * | 2005-06-29 | 2009-09-03 | Canon Kabushiki Kaisha | Storing video data in a video file |
US20150117513A1 (en) * | 2013-10-29 | 2015-04-30 | Google Inc. | Bandwidth reduction system and method |
US9158974B1 (en) * | 2014-07-07 | 2015-10-13 | Google Inc. | Method and system for motion vector-based video monitoring and event categorization |
Family Cites Families (313)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5625410A (en) | 1993-04-21 | 1997-04-29 | Kinywa Washino | Video monitoring and conferencing system |
US5765485A (en) | 1995-07-21 | 1998-06-16 | Trinity Industries, Inc. | Insulated composite railway boxcar and method |
USD424036S (en) | 1996-07-29 | 2000-05-02 | NetObjects, Inc. | Computer generated icon of primary and secondary navigator bars for a display screen |
USD403313S (en) | 1997-08-14 | 1998-12-29 | MY-CD, Inc. | Custom information delivery system on a computer screen |
US6593956B1 (en) | 1998-05-15 | 2003-07-15 | Polycom, Inc. | Locating an audio source |
US20140098247A1 (en) | 1999-06-04 | 2014-04-10 | Ip Holdings, Inc. | Home Automation And Smart Home Control Using Mobile Devices And Wireless Enabled Electrical Switches |
US6948131B1 (en) | 2000-03-08 | 2005-09-20 | Vidiator Enterprises Inc. | Communication system and method including rich media tools |
US7796162B2 (en) | 2000-10-26 | 2010-09-14 | Front Row Technologies, Llc | Providing multiple synchronized camera views for broadcast from a live venue activity to remote viewers |
US6954498B1 (en) | 2000-10-24 | 2005-10-11 | Objectvideo, Inc. | Interactive video manipulation |
US6516268B2 (en) | 2001-02-16 | 2003-02-04 | Wizeguides.Com Inc. | Bundled map guide |
USD456293S1 (en) | 2001-06-28 | 2002-04-30 | Fujitec Co., Ltd. | Indicator cover |
JP4003591B2 (en) | 2002-07-11 | 2007-11-07 | ソニー株式会社 | Monitoring system, monitoring method and program |
USD500047S1 (en) | 2002-12-31 | 2004-12-21 | Gem-E-Wizard Ltd. | User interface for a gem grading display screen |
US7047092B2 (en) | 2003-04-08 | 2006-05-16 | Coraccess Systems | Home automation contextual user interface |
US8462244B2 (en) | 2003-08-27 | 2013-06-11 | Hewlett-Packard Development Company, L.P. | Adaptively reading one or more but fewer than all pixels of image sensor |
US20050104958A1 (en) | 2003-11-13 | 2005-05-19 | Geoffrey Egnal | Active camera video-based surveillance systems and methods |
WO2006120596A2 (en) | 2005-05-10 | 2006-11-16 | Koninklijke Philips Electronics N.V. | Remote control through orientation change of handheld |
US7404152B2 (en) | 2005-06-03 | 2008-07-22 | Research In Motion Limited | Displaying messages on handheld devices |
US7996771B2 (en) | 2005-06-17 | 2011-08-09 | Fuji Xerox Co., Ltd. | Methods and interfaces for event timeline and logs of video streams |
USD550227S1 (en) | 2005-07-14 | 2007-09-04 | Brother Industries, Ltd. | Graphic user interface for handheld terminal |
WO2007009238A1 (en) | 2005-07-19 | 2007-01-25 | March Networks Corporation | Temporal data previewing system |
US20070024706A1 (en) | 2005-08-01 | 2007-02-01 | Brannon Robert H Jr | Systems and methods for providing high-resolution regions-of-interest |
US20070250898A1 (en) | 2006-03-28 | 2007-10-25 | Object Video, Inc. | Automatic extraction of secondary video streams |
US7945142B2 (en) | 2006-06-15 | 2011-05-17 | Microsoft Corporation | Audio/visual editing tool |
US7468662B2 (en) | 2006-06-16 | 2008-12-23 | International Business Machines Corporation | Method for spatio-temporal event detection using composite definitions for camera systems |
US8564544B2 (en) | 2006-09-06 | 2013-10-22 | Apple Inc. | Touch screen device, method, and graphical user interface for customizing display of content category icons |
JP2010515392A (en) | 2007-01-04 | 2010-05-06 | ブリティッシュ・テレコミュニケーションズ・パブリック・リミテッド・カンパニー | Video signal encoding |
US7903115B2 (en) | 2007-01-07 | 2011-03-08 | Apple Inc. | Animations |
EP1959238B1 (en) | 2007-02-13 | 2018-05-23 | Harman Becker Automotive Systems GmbH | Method for inputting a destination in a navigation unit and nagivation system therefor |
US8959448B2 (en) | 2007-04-17 | 2015-02-17 | Emd Millipore Corporation | Graphical user interface for analysis and comparison of location-specific multiparameter data sets |
US7595815B2 (en) | 2007-05-08 | 2009-09-29 | Kd Secure, Llc | Apparatus, methods, and systems for intelligent security and safety |
USD590416S1 (en) | 2007-05-17 | 2009-04-14 | Pelco, Inc. | Icon for a display screen |
US8171432B2 (en) | 2008-01-06 | 2012-05-01 | Apple Inc. | Touch screen device, method, and graphical user interface for displaying and selecting application options |
US8675074B2 (en) | 2007-07-20 | 2014-03-18 | Honeywell International Inc. | Custom video composites for surveillance applications |
CN102749997B (en) | 2007-09-18 | 2016-06-22 | 微软技术许可有限责任公司 | The method of the operation of mobile terminal and this mobile terminal of control |
KR101615472B1 (en) | 2007-09-24 | 2016-04-25 | 애플 인크. | Embedded authentication systems in an electronic device |
WO2009045218A1 (en) | 2007-10-04 | 2009-04-09 | Donovan John J | A video surveillance, storage, and alerting system having network management, hierarchical data storage, video tip processing, and vehicle plate analysis |
US8013738B2 (en) | 2007-10-04 | 2011-09-06 | Kd Secure, Llc | Hierarchical storage manager (HSM) for intelligent storage of large volumes of data |
USD607004S1 (en) | 2007-12-19 | 2009-12-29 | Yahoo! Inc. | Graphical user interface for a display panel |
WO2009086194A2 (en) | 2007-12-19 | 2009-07-09 | Nevins David C | Apparatus, system, and method for organizing information by time and place |
USD597101S1 (en) | 2008-01-08 | 2009-07-28 | Apple Inc. | Animated image for a portion of a display screen |
WO2009121053A2 (en) | 2008-03-28 | 2009-10-01 | On-Net Surveillance Systems, Inc. | Method and systems for video collection and analysis thereof |
USD597864S1 (en) | 2008-04-23 | 2009-08-11 | Yokogawa Electric Corporation | Digital indicating controller |
US8339456B2 (en) | 2008-05-15 | 2012-12-25 | Sri International | Apparatus for intelligent and autonomous video content generation and streaming |
DE202009019125U1 (en) | 2008-05-28 | 2016-12-05 | Google Inc. | Motion-controlled views on mobile computing devices |
WO2010057170A1 (en) | 2008-11-17 | 2010-05-20 | Cernium Corporation | Analytics-modulated coding of surveillance video |
US20100131457A1 (en) | 2008-11-26 | 2010-05-27 | Microsoft Corporation | Flattening multi-dimensional data sets into de-normalized form |
US9955332B2 (en) | 2009-01-28 | 2018-04-24 | Headwater Research Llc | Method for child wireless device activation to subscriber account of a master wireless device |
US8589374B2 (en) | 2009-03-16 | 2013-11-19 | Apple Inc. | Multifunction device with integrated search and application selection |
US8340654B2 (en) | 2009-05-26 | 2012-12-25 | Lextech Labs Llc | Apparatus and method for video display and control for portable device |
US10241644B2 (en) | 2011-06-03 | 2019-03-26 | Apple Inc. | Actionable reminder entries |
US8665375B2 (en) | 2009-06-22 | 2014-03-04 | Wsi Corporation | Apparatus and method for tracking the location of a pointing element in a cropped video field |
USD619612S1 (en) | 2009-07-07 | 2010-07-13 | Yahoo! Inc. | Display screen with video search graphical interface |
CA3149767A1 (en) | 2009-07-16 | 2011-01-20 | Bluefin Labs, Inc. | Estimating and displaying social interest in time-based media |
USD621730S1 (en) | 2009-08-12 | 2010-08-17 | Newall Measurement Systems Limited | Digital read-out unit |
USD686221S1 (en) | 2009-09-30 | 2013-07-16 | Htc Corporation | Display screen with graphic user interface |
USD626131S1 (en) | 2010-02-04 | 2010-10-26 | Microsoft Corporation | Animated user interface for a display screen |
USD645871S1 (en) | 2010-04-13 | 2011-09-27 | Vivotech, Inc. | Graphical user interface for a display screen or portion thereof |
AU2011250886A1 (en) | 2010-05-10 | 2013-01-10 | Icontrol Networks, Inc | Control system user interface |
EP2397868A1 (en) | 2010-06-15 | 2011-12-21 | The European Union, represented by the European Commission | Method of providing an authenticable time-and-location indication |
USD661701S1 (en) | 2010-06-18 | 2012-06-12 | Pathogen Detection Systems, Inc. | Display screen with graphical user interface |
US20110316697A1 (en) | 2010-06-29 | 2011-12-29 | General Electric Company | System and method for monitoring an entity within an area |
US8468465B2 (en) | 2010-08-09 | 2013-06-18 | Apple Inc. | Two-dimensional slider control |
US9076041B2 (en) | 2010-08-26 | 2015-07-07 | Blast Motion Inc. | Motion event recognition and video synchronization system and method |
USD696677S1 (en) | 2011-10-14 | 2013-12-31 | Nest Labs, Inc. | Display screen or portion thereof with a graphical user interface |
USD697930S1 (en) | 2011-10-14 | 2014-01-21 | Nest Labs, Inc. | Display screen or portion thereof with a graphical user interface |
US8843239B2 (en) | 2010-11-19 | 2014-09-23 | Nest Labs, Inc. | Methods, systems, and related architectures for managing network connected thermostats |
USD662508S1 (en) | 2010-09-17 | 2012-06-26 | Kyu-Sung Kim | Graphic user interface for a mobile terminal |
USD678898S1 (en) | 2010-11-01 | 2013-03-26 | Adobe Systems Incorporated | Context-adaptive user interface for a portion of a display screen |
US8375118B2 (en) | 2010-11-18 | 2013-02-12 | Verizon Patent And Licensing Inc. | Smart home device management |
US10346275B2 (en) | 2010-11-19 | 2019-07-09 | Google Llc | Attributing causation for energy usage and setpoint changes with a network-connected thermostat |
US9453655B2 (en) | 2011-10-07 | 2016-09-27 | Google Inc. | Methods and graphical user interfaces for reporting performance information for an HVAC system controlled by a self-programming network-connected thermostat |
USD647809S1 (en) | 2010-12-08 | 2011-11-01 | Newall Measurement Systems Limited | Digital readout |
US9244606B2 (en) | 2010-12-20 | 2016-01-26 | Apple Inc. | Device, method, and graphical user interface for navigation of concurrently open software applications |
JP6062864B2 (en) | 2010-12-31 | 2017-01-18 | グーグル インコーポレイテッド | Intelligent thermostat and intelligent thermostat controlled HVAC system |
US9417637B2 (en) | 2010-12-31 | 2016-08-16 | Google Inc. | Background schedule simulations in an intelligent, network-connected thermostat |
US20120232969A1 (en) | 2010-12-31 | 2012-09-13 | Nest Labs, Inc. | Systems and methods for updating climate control algorithms |
US8615511B2 (en) | 2011-01-22 | 2013-12-24 | Operational Transparency LLC | Data visualization interface |
USD694255S1 (en) | 2011-01-22 | 2013-11-26 | Operational Transparency LLC | Portion of display screen with graphical user interface for visualizing data |
USD681653S1 (en) | 2011-01-24 | 2013-05-07 | Microsoft Corporation | Display screen with graphical user interface |
USD670726S1 (en) | 2011-01-24 | 2012-11-13 | Microsoft Corporation | Display screen with animated graphical user interface |
US9053510B2 (en) | 2011-04-04 | 2015-06-09 | David L. McEwan | Shopping apparatus and methods |
USD664978S1 (en) | 2011-05-27 | 2012-08-07 | Microsoft Corporation | Display screen with graphical user interface |
USD658674S1 (en) | 2011-05-27 | 2012-05-01 | Microsoft Corporation | Display screen with animated user interface |
USD672364S1 (en) | 2011-05-31 | 2012-12-11 | Fanhattan Llc | Portion of a display with a user interface |
US8782270B2 (en) | 2011-06-07 | 2014-07-15 | Smith Micro Software, Inc. | Method and system for streaming live teleconferencing feeds to mobile client devices |
USD684164S1 (en) | 2011-06-09 | 2013-06-11 | Sony Corporation | Audio video display device with user interface |
US8184069B1 (en) | 2011-06-20 | 2012-05-22 | Google Inc. | Systems and methods for adaptive transmission of data |
US8935259B2 (en) | 2011-06-20 | 2015-01-13 | Google Inc | Text suggestions for images |
US9158455B2 (en) | 2011-07-12 | 2015-10-13 | Apple Inc. | Multifunctional environment for image cropping |
US8832301B2 (en) | 2011-07-21 | 2014-09-09 | Parlant Technology | System and method for enhanced event participation |
CA144600S (en) | 2011-09-12 | 2012-11-22 | Microsoft Corp | Display screen |
USD664966S1 (en) | 2011-09-12 | 2012-08-07 | Microsoft Corporation | Display screen with user interface |
US20130067365A1 (en) | 2011-09-13 | 2013-03-14 | Microsoft Corporation | Role based user interface for limited display devices |
US20130072308A1 (en) | 2011-09-15 | 2013-03-21 | Qonqr, Llc | Location-Based Multiplayer Game System and Method |
US8893032B2 (en) | 2012-03-29 | 2014-11-18 | Google Inc. | User interfaces for HVAC schedule display and modification on smartphone or other space-limited touchscreen device |
US9222693B2 (en) | 2013-04-26 | 2015-12-29 | Google Inc. | Touchscreen device user interface for remote control of a thermostat |
US9269243B2 (en) | 2011-10-07 | 2016-02-23 | Siemens Aktiengesellschaft | Method and user interface for forensic video search |
CA2853033C (en) | 2011-10-21 | 2019-07-16 | Nest Labs, Inc. | User-friendly, network connected learning thermostat and related systems and methods |
WO2013070091A2 (en) | 2011-11-09 | 2013-05-16 | Mark Ross Hampton | Improvements in and in relation to a lens system for a camera |
KR20130056583A (en) | 2011-11-22 | 2013-05-30 | 삼성전자주식회사 | Method and apparatus for managing of time limited contents in electric device |
US9602738B2 (en) | 2011-11-23 | 2017-03-21 | Avigilon Fortress Corporation | Automatic event detection, text generation, and use thereof |
USD717809S1 (en) | 2011-12-27 | 2014-11-18 | Mitsubishi Electric Corporation | Display panel with information display for railroads |
USD677269S1 (en) | 2012-01-06 | 2013-03-05 | Microsoft Corporation | Display screen with graphical user interface |
KR101995775B1 (en) | 2012-01-06 | 2019-07-03 | 삼성전자 주식회사 | Searching Support Method For a plurality of Item and Device supporting the same |
USD736792S1 (en) | 2012-01-13 | 2015-08-18 | Htc Corporation | Display screen with graphical user interface |
US20150058709A1 (en) | 2012-01-26 | 2015-02-26 | Michael Edward Zaletel | Method of creating a media composition and apparatus therefore |
USD721382S1 (en) | 2012-02-22 | 2015-01-20 | Htc Corporation | Display screen with graphical user interface |
US8830193B2 (en) | 2012-02-23 | 2014-09-09 | Honeywell International Inc. | Controlling views in display device with touch screen |
USD708197S1 (en) | 2012-02-23 | 2014-07-01 | Microsoft Corporation | Display screen with graphical user interface |
USD708204S1 (en) | 2012-02-23 | 2014-07-01 | Microsoft Corporation | Display screen with graphical user interface |
USD726735S1 (en) | 2012-03-30 | 2015-04-14 | Sony Corporation | Display screen with graphical user interface |
US9223496B2 (en) | 2012-05-18 | 2015-12-29 | Ebay Inc. | User interface for comparing items using gestures |
USD702700S1 (en) | 2012-05-29 | 2014-04-15 | Microsoft Corporation | Display screen with icon group |
KR101952702B1 (en) | 2012-06-01 | 2019-02-28 | 삼성전자주식회사 | User terminal device providing service based on personal information and methods thereof |
US9241131B2 (en) | 2012-06-08 | 2016-01-19 | Samsung Electronics Co., Ltd. | Multiple channel communication using multiple cameras |
US9430120B2 (en) | 2012-06-08 | 2016-08-30 | Apple Inc. | Identification of recently downloaded content |
USD715835S1 (en) | 2012-06-14 | 2014-10-21 | Microsoft Corporation | Display screen with icon group |
US20140012574A1 (en) | 2012-06-21 | 2014-01-09 | Maluuba Inc. | Interactive timeline for presenting and organizing tasks |
USD737278S1 (en) | 2012-06-28 | 2015-08-25 | Samsung Electronics Co., Ltd. | Portable electronic device with animated GUI |
USD737131S1 (en) | 2012-07-03 | 2015-08-25 | SMCP ApS | Clamp for installing pipes |
US10437454B2 (en) | 2012-07-09 | 2019-10-08 | Facebook, Inc. | Dynamically scaled navigation system for social network data |
US20140189586A1 (en) | 2012-12-28 | 2014-07-03 | Spritz Technology Llc | Methods and systems for displaying text using rsvp |
KR102005315B1 (en) | 2012-07-23 | 2019-07-30 | 삼성전자 주식회사 | Support System And Method For Cloud Service |
US9888214B2 (en) | 2012-08-10 | 2018-02-06 | Logitech Europe S.A. | Wireless video camera and connection methods including multiple video streams |
JP5594850B2 (en) | 2012-08-17 | 2014-09-24 | 独立行政法人理化学研究所 | Alternative reality system control apparatus, alternative reality system, alternative reality system control method, program, and recording medium |
US8781293B2 (en) | 2012-08-20 | 2014-07-15 | Gorilla Technology Inc. | Correction method for object linking across video sequences in a multiple camera video surveillance system |
USD692450S1 (en) | 2012-08-22 | 2013-10-29 | Nike, Inc. | Display screen with graphical user interface |
CN102843315A (en) | 2012-08-31 | 2012-12-26 | 鸿富锦精密工业（深圳）有限公司 | Intelligent home network system and intelligent gateway thereof |
US20150035987A1 (en) | 2012-09-07 | 2015-02-05 | Jose Mario Fernandez | Method and apparatus for unlocking/locking a door and enabling two-way communications with a door security system via a smart phone |
USD716334S1 (en) | 2012-09-07 | 2014-10-28 | Lg Electronics Inc. | Display of mobile phone with transitional graphical user interface |
IL221863A (en) | 2012-09-10 | 2014-01-30 | Elbit Systems Ltd | Digital system for surgical video capturing and display |
USD720766S1 (en) | 2012-09-10 | 2015-01-06 | Lookout, Inc. | Mobile communication device display with graphical user interface comprising security and privacy advisor screens |
USD720765S1 (en) | 2012-09-10 | 2015-01-06 | Lookout, Inc. | Mobile communication device display with graphical user interface comprising a dashboard |
USD712928S1 (en) | 2012-09-12 | 2014-09-09 | Greenroad Driving Technologies Ltd. | Mobile phone with graphical user interface |
USD711415S1 (en) | 2012-09-28 | 2014-08-19 | Nests Labs, Inc. | Display screen or portion thereof with graphical user interface |
USD707245S1 (en) | 2012-09-28 | 2014-06-17 | Nest Labs, Inc. | Display screen or portion thereof with graphical user interface |
US10057726B2 (en) | 2012-10-02 | 2018-08-21 | Razer (Asia-Pacific) Pte. Ltd. | Managing user data on an electronic device |
USD724603S1 (en) | 2012-10-10 | 2015-03-17 | Citrix Systems, Inc. | Display screen with animated user interface |
USD689895S1 (en) | 2012-10-22 | 2013-09-17 | Lux Products Corporation | Animated thermostat panel for a display screen or a portion thereof |
USD702704S1 (en) | 2012-10-26 | 2014-04-15 | Microsoft Corporation | Display screen with graphical user interface |
JP1470731S (en) | 2012-11-16 | 2016-05-23 | ||
USD740300S1 (en) | 2012-11-30 | 2015-10-06 | Samsung Electronics Co., Ltd. | Display screen or portion thereof with generated image |
KR102058918B1 (en) | 2012-12-14 | 2019-12-26 | 삼성전자주식회사 | Home monitoring method and apparatus |
USD714334S1 (en) | 2012-12-20 | 2014-09-30 | Proteus Digital Health, Inc. | Display screen portion having a graphical user interface for patient monitoring |
USD745527S1 (en) | 2012-12-27 | 2015-12-15 | Lenovo (Beijing) Co., Ltd. | Display screen or a portion of a display screen with graphical user interface |
KR102049977B1 (en) | 2012-12-31 | 2019-11-28 | 엘지전자 주식회사 | Mobile terminal |
AU350149S (en) | 2013-01-09 | 2013-08-13 | Samsung Electronics Co Ltd | Display screen for an electronic device |
US20160139671A1 (en) | 2013-01-15 | 2016-05-19 | Samsung Electronics Co., Ltd. | Method for providing haptic effect in electronic device, machine-readable storage medium, and electronic device |
CA2899730A1 (en) | 2013-02-03 | 2014-08-07 | Study Outloud Llc | System and methods for contextual text to speech conversion |
USD727928S1 (en) | 2013-02-15 | 2015-04-28 | dotloop, Inc. | Display screen with animated user interface |
USD727336S1 (en) | 2013-02-15 | 2015-04-21 | dotloop, Inc. | Display screen with animated user interface |
US9218729B2 (en) | 2013-02-20 | 2015-12-22 | Honeywell International Inc. | System and method of monitoring the video surveillance activities |
KR20150125947A (en) | 2013-03-08 | 2015-11-10 | 톰슨 라이센싱 | Method and apparatus for using a list driven selection process to improve video and media time based editing |
USD717823S1 (en) | 2013-03-14 | 2014-11-18 | iJET International, Inc | Display screen or portion thereof with graphical user interface |
WO2014144419A2 (en) | 2013-03-15 | 2014-09-18 | Master Lock Company | Networked security system |
USD725666S1 (en) | 2013-03-15 | 2015-03-31 | Facebook, Inc. | Display screen with graphical user interface |
US8917274B2 (en) | 2013-03-15 | 2014-12-23 | Palantir Technologies Inc. | Event matrix based on integrated data |
US9807099B2 (en) | 2013-03-15 | 2017-10-31 | Google Inc. | Utility portals for managing demand-response events |
USD739864S1 (en) | 2013-04-24 | 2015-09-29 | Samsung Electronics Co., Ltd. | Display screen or portion thereof with graphical user interface |
US9779183B2 (en) | 2014-05-20 | 2017-10-03 | Allied Telesis Holdings Kabushiki Kaisha | Sensor management and sensor analytics system |
US20150248275A1 (en) | 2013-05-23 | 2015-09-03 | Allied Telesis Holdings Kabushiki Kaisha | Sensor Grouping for a Sensor Based Detection System |
USD739429S1 (en) | 2013-05-28 | 2015-09-22 | Exfo Inc. | Display screen or portion thereof with graphical user interface |
US9247317B2 (en) * | 2013-05-30 | 2016-01-26 | Sonic Ip, Inc. | Content streaming with client device trick play index |
USD738905S1 (en) | 2013-06-09 | 2015-09-15 | Apple Inc. | Display screen or portion thereof with animated graphical user interface |
USD752072S1 (en) | 2013-06-21 | 2016-03-22 | Tencent Technology (Shenzhen) Company Limited | Portion of a display screen with animated graphical user interface |
US20140375819A1 (en) | 2013-06-24 | 2014-12-25 | Pivotal Vision, Llc | Autonomous video management system |
EP3022934A1 (en) | 2013-07-19 | 2016-05-25 | Google Technology Holdings LLC | Small-screen movie-watching using a viewport |
USD762655S1 (en) | 2013-08-02 | 2016-08-02 | Guangzhou Ucweb Computer Technology Co., Ltd. | Electronic display with animated graphical user interface |
US10282068B2 (en) | 2013-08-26 | 2019-05-07 | Venuenext, Inc. | Game event display with a scrollable graphical game play feed |
USD737283S1 (en) | 2013-08-30 | 2015-08-25 | SkyBell Technologies, Inc. | Display screen or portion thereof with a graphical user interface |
USD781299S1 (en) | 2013-09-03 | 2017-03-14 | Samsung Electronics Co., Ltd. | Display screen or portion thereof with graphical user interface |
USD752107S1 (en) | 2013-09-03 | 2016-03-22 | Samsung Electronics Co., Ltd. | Display screen or portion thereof with icon |
AP00648S1 (en) | 2013-09-03 | 2014-12-10 | Ji Hye Myung | Series of graphical user interfaces for display screens or portions thereof |
CN105794170B (en) | 2013-10-07 | 2019-11-15 | 谷歌有限责任公司 | For establishing wired home device and online management account matching method and system |
CA2926463A1 (en) | 2013-10-07 | 2015-04-16 | Google Inc. | Smart-home hazard detector providing useful follow up communications to detection events |
USD747333S1 (en) | 2013-10-17 | 2016-01-12 | Microsoft Corporation | Display screen with graphical user interface |
US9058096B2 (en) | 2013-10-21 | 2015-06-16 | Google Inc. | Methods and systems for indicating application data use and providing data according to permissions |
KR102085181B1 (en) | 2013-10-23 | 2020-03-05 | 삼성전자주식회사 | Method and device for transmitting data and method and device for receiving data |
USD753703S1 (en) | 2013-11-18 | 2016-04-12 | Salesforce.Com, Inc. | Display screen or portion thereof with animated graphical user interface |
US10754511B2 (en) | 2013-11-20 | 2020-08-25 | Google Llc | Multi-view audio and video interactive playback |
USD748666S1 (en) | 2013-11-21 | 2016-02-02 | Microsoft Corporation | Display screen with graphical user interface |
USD746849S1 (en) | 2013-11-22 | 2016-01-05 | Apple Inc. | Display screen or portion thereof with graphical user interface |
USD755193S1 (en) | 2013-12-02 | 2016-05-03 | Tencent Technology (Shenzhen) Company Limited | Display screen with graphical user interface |
USD769930S1 (en) | 2013-12-18 | 2016-10-25 | Aliphcom | Display screen or portion thereof with animated graphical user interface |
USD753708S1 (en) | 2013-12-30 | 2016-04-12 | Beijing Qihoo Technology Co. Ltd | Display screen or portion thereof with animated graphical user interface |
USD758422S1 (en) | 2013-12-30 | 2016-06-07 | Beijing Qihoo Technology Co. Ltd | Display screen with graphical user interface |
USD760769S1 (en) | 2014-01-03 | 2016-07-05 | Sony Corporation | Display panel or screen with graphical user interface |
USD760792S1 (en) | 2014-01-03 | 2016-07-05 | Yahoo! Inc. | Animated graphical user interface for a display screen or portion thereof |
US20150193127A1 (en) | 2014-01-07 | 2015-07-09 | Opentv Inc. | Systems and methods of displaying integrated home automation modules |
USD765718S1 (en) | 2014-01-17 | 2016-09-06 | Beats Music, Llc | Display screen or portion thereof with animated graphical user interface |
USD757784S1 (en) | 2014-02-11 | 2016-05-31 | Samsung Electronics Co., Ltd. | Display screen or portion thereof with graphical user interface |
USD776126S1 (en) | 2014-02-14 | 2017-01-10 | Samsung Electronics Co., Ltd. | Display screen or portion thereof with a transitional graphical user interface |
USD753151S1 (en) | 2014-02-21 | 2016-04-05 | Samsung Electronics Co., Ltd. | Display screen or portion thereof with transitional graphical user interface |
USD752061S1 (en) | 2014-02-21 | 2016-03-22 | Samsung Electronics Co., Ltd. | Display screen or portion thereof with transitional graphical user interface |
USD757746S1 (en) | 2014-02-21 | 2016-05-31 | Samsung Electronics Co., Ltd. | Display screen or portion thereof with transitional graphical user interface |
USD763306S1 (en) | 2014-02-21 | 2016-08-09 | Samsung Electronics Co., Ltd. | Display screen or portion thereof with transitional graphical user interface |
US10346023B2 (en) | 2014-02-27 | 2019-07-09 | Dropbox, Inc. | Selectively emphasizing digital content |
US9495126B2 (en) | 2014-02-28 | 2016-11-15 | Hypnalgesics, LLC | Self sedation and suggestion system |
USD759688S1 (en) | 2014-03-12 | 2016-06-21 | Tencent Technology (Shenzhen) Company Limited | Portion of a display screen with graphical user interface |
US20150269643A1 (en) | 2014-03-24 | 2015-09-24 | Industrial Generosity Inc. | Systems, articles and methods related to retail framed image ordering and fulfillment, employing wireless communications |
USD753132S1 (en) | 2014-04-03 | 2016-04-05 | Google Inc. | Portion of a display panel with an animated computer icon |
US9672728B2 (en) | 2014-04-07 | 2017-06-06 | Google Inc. | Smart hazard detector drills |
USD752605S1 (en) | 2014-04-25 | 2016-03-29 | Tencent Technology (Shenzhen) Company Limited | Portion of a display screen with a graphical user interface |
USD758386S1 (en) | 2014-04-29 | 2016-06-07 | Tencent Technology (Shenzhen) Company Limited | Portion of a display screen with an animated graphical user interface |
USD777744S1 (en) | 2014-05-01 | 2017-01-31 | Beijing Qihoo Technology Co. Ltd | Display screen with an animated graphical user interface |
USD770517S1 (en) | 2014-05-01 | 2016-11-01 | Beijing Qihoo Technology Co. Ltd., Beijing | Display screen with an animated graphical user interface |
USD763869S1 (en) | 2014-05-01 | 2016-08-16 | Beijing Qihoo Technology Co. Ltd | Display screen with a graphical user interface |
USD775165S1 (en) | 2014-05-22 | 2016-12-27 | Beijing Qihoo Technology Co. Ltd | Display screen with a graphical user interface |
USD772257S1 (en) | 2014-05-28 | 2016-11-22 | Ricoh Company, Ltd. | Display screen with graphical user interface |
USD757747S1 (en) | 2014-05-30 | 2016-05-31 | Microsoft Corporation | Display screen with animated graphical user interface |
USD756379S1 (en) | 2014-06-01 | 2016-05-17 | Apple Inc. | Display screen or portion thereof with animated graphical user interface |
US20150350266A1 (en) | 2014-06-01 | 2015-12-03 | Apple Inc. | Region based image sharing |
USD754714S1 (en) | 2014-06-17 | 2016-04-26 | Tencent Technology (Shenzhen) Company Limited | Portion of a display screen with animated graphical user interface |
USD754713S1 (en) | 2014-06-17 | 2016-04-26 | Tencent Technology (Shenzhen) Company Limited | Portion of a display screen with animated graphical user interface |
USD763308S1 (en) | 2014-06-18 | 2016-08-09 | Beijing Qihoo Technology Co. Ltd | Display screen with an animated graphical user interface |
USD751090S1 (en) | 2014-06-26 | 2016-03-08 | Xiaomi Inc. | Display screen or portion thereof with a graphical user interface |
USD756401S1 (en) | 2014-07-02 | 2016-05-17 | Aliphcom | Display screen or portion thereof with animated graphical user interface |
US9420331B2 (en) | 2014-07-07 | 2016-08-16 | Google Inc. | Method and system for categorizing detected motion events |
USD783641S1 (en) | 2014-07-17 | 2017-04-11 | Delighted Inc. | Display screen or portion thereof with graphical user interface |
KR20160014226A (en) | 2014-07-29 | 2016-02-11 | 엘지전자 주식회사 | Mobile terminal and method for controlling the same |
US9898175B2 (en) | 2014-08-05 | 2018-02-20 | Fibar Group S.A. | Home network manager for home automation |
AU361975S (en) | 2014-08-27 | 2015-05-27 | Janssen Pharmaceutica Nv | Display screen with icon |
USD765674S1 (en) | 2014-09-02 | 2016-09-06 | Samsung Electronics Co., Ltd. | Display screen or portion thereof with transitional graphical user interface |
USD771645S1 (en) | 2014-09-19 | 2016-11-15 | Xerox Corporation | Display screen with graphical user interface of menu for an office multifunction machine |
CN106201161B (en) | 2014-09-23 | 2021-09-03 | 北京三星通信技术研究有限公司 | Display method and system of electronic equipment |
US20160088326A1 (en) | 2014-09-23 | 2016-03-24 | Watchcorp Holdings LLC | Distributed recording, managing, and accessing of surveillance data within a networked video surveillance system |
USD776690S1 (en) | 2014-09-24 | 2017-01-17 | Uber Technologies, Inc. | Display screen with graphical user interface |
US20170308390A1 (en) | 2014-10-08 | 2017-10-26 | Shane Venis | Data-rich icon |
USD769897S1 (en) | 2014-10-14 | 2016-10-25 | Tencent Technology (Shenzhen) Company Limited | Display screen or portion thereof with sequential graphical user interface |
USD772894S1 (en) | 2014-10-17 | 2016-11-29 | Zte Corporation | Electronic device display screen with graphical user interface |
US10140365B2 (en) | 2014-10-21 | 2018-11-27 | Escapex Limited | System and method for facilitating co-play and download of artist specific client applications via user-provided playlists |
USD784400S1 (en) | 2014-11-04 | 2017-04-18 | Workplace Dynamics, LLC | Display screen or portion thereof with rating scale graphical user interface |
USD779504S1 (en) | 2014-11-14 | 2017-02-21 | Dexcom, Inc. | Display screen or portion thereof with graphical user interface for presentation of analyte data |
US10281507B2 (en) | 2014-11-21 | 2019-05-07 | Kohler Co. | Generator sizing |
KR102397602B1 (en) | 2014-11-25 | 2022-05-16 | 삼성전자 주식회사 | Method for providing graphical user interface and electronic device for supporting the same |
US9471452B2 (en) | 2014-12-01 | 2016-10-18 | Uptake Technologies, Inc. | Adaptive handling of operating data |
JP2016115208A (en) | 2014-12-16 | 2016-06-23 | シャープ株式会社 | Input device, wearable terminal, portable terminal, control method of input device, and control program for controlling operation of input device |
USD763271S1 (en) | 2015-01-02 | 2016-08-09 | Samsung Electronics Co., Ltd. | Display screen or portion thereof with animated graphical user interface |
USD795292S1 (en) | 2015-01-05 | 2017-08-22 | Nike, Inc. | Display screen with graphical user interface |
USD776130S1 (en) | 2015-01-15 | 2017-01-10 | Adp, Llc | Display screen with a dashboard for a user interface |
USD763888S1 (en) | 2015-01-30 | 2016-08-16 | PayRange Inc. | Display screen or portion thereof with graphical user interface |
US10796797B2 (en) | 2015-01-30 | 2020-10-06 | Moxxly, LLC | Sensor network for breast pumping mothers |
USD775658S1 (en) | 2015-02-04 | 2017-01-03 | Sengled Optoelectronics Co., Ltd | Display screen with graphical user interface |
USD768687S1 (en) | 2015-02-27 | 2016-10-11 | Samsung Electronics Co., Ltd. | Display screen or portion thereof with transitional graphical user interface |
USD776680S1 (en) | 2015-02-27 | 2017-01-17 | Samsung Electronics Co., Ltd. | Display screen or portion thereof with animated graphical user interface |
US10216351B2 (en) | 2015-03-08 | 2019-02-26 | Apple Inc. | Device configuration user interface |
USD761277S1 (en) | 2015-03-16 | 2016-07-12 | Nike, Inc. | Display screen with animated graphical user interface |
USD800747S1 (en) | 2015-03-17 | 2017-10-24 | Samsung Electronics Co., Ltd. | Display screen or portion thereof with animated graphical user interface |
USD779533S1 (en) | 2015-04-13 | 2017-02-21 | Lemobile Information Technology (Beijing) Co., Ltd. | Display screen or portion thereof with animated graphical user interface |
USD784363S1 (en) | 2015-04-22 | 2017-04-18 | Zynga Inc. | Portion of display having graphical user interface with transitional icon |
US20160335139A1 (en) | 2015-05-11 | 2016-11-17 | Google Inc. | Activity triggers |
USD766958S1 (en) | 2015-05-21 | 2016-09-20 | Elemica, Inc. | Display with graphical user interface |
US10643442B2 (en) | 2015-06-05 | 2020-05-05 | Withings | Video monitoring system |
DK179292B1 (en) | 2015-06-07 | 2018-04-09 | Apple Inc | Devices, methods and graphical user interfaces for providing and interacting with notifications |
US9386230B1 (en) | 2015-06-12 | 2016-07-05 | Google Inc. | Day and night detection based on one or more of illuminant detection, lux level detection, and tiling |
US9454820B1 (en) | 2015-06-12 | 2016-09-27 | Google Inc. | Using a scene illuminating infrared emitter array in a video monitoring camera for depth determination |
US9361011B1 (en) | 2015-06-14 | 2016-06-07 | Google Inc. | Methods and systems for presenting multiple live video feeds in a user interface |
USD807376S1 (en) | 2015-06-14 | 2018-01-09 | Google Inc. | Display screen with animated graphical user interface for smart home automation system having a multifunction status |
US10133443B2 (en) | 2015-06-14 | 2018-11-20 | Google Llc | Systems and methods for smart home automation using a multifunction status and entry point icon |
USD803241S1 (en) | 2015-06-14 | 2017-11-21 | Google Inc. | Display screen with animated graphical user interface for an alert screen |
USD796540S1 (en) | 2015-06-14 | 2017-09-05 | Google Inc. | Display screen with graphical user interface for mobile camera history having event-specific activity notifications |
USD809522S1 (en) | 2015-06-14 | 2018-02-06 | Google Inc. | Display screen with animated graphical user interface for an alert screen |
USD765678S1 (en) | 2015-06-29 | 2016-09-06 | Timothy Gayle Goux | Display screen of a computing device with a graphical user interface |
US10345869B2 (en) | 2015-06-30 | 2019-07-09 | Verizon Patent And Licensing Inc. | Wearable device having at least one interchangeable touch user interface |
US10228831B2 (en) | 2015-07-09 | 2019-03-12 | Samsung Electronics Co., Ltd. | Sharing cards to a target application |
KR102409782B1 (en) | 2015-07-14 | 2022-06-17 | 삼성전자주식회사 | Method for initial setup and electronic device thereof |
EP4145263A1 (en) | 2015-07-17 | 2023-03-08 | Crown Equipment Corporation | Processing device having a graphical user interface for industrial vehicle |
US10782863B2 (en) | 2015-07-17 | 2020-09-22 | Samsung Electronics Co., Ltd. | Control interface |
USD776702S1 (en) | 2015-07-28 | 2017-01-17 | Tencent Technology (Shenzhen) Company Limited | Portion of a display screen with animated graphical user interface |
CN105120191A (en) | 2015-07-31 | 2015-12-02 | 小米科技有限责任公司 | Video recording method and device |
USD791806S1 (en) | 2015-08-08 | 2017-07-11 | Youfolo, Inc. | Display screen or portion thereof with animated graphical user interface |
USD786932S1 (en) | 2015-08-12 | 2017-05-16 | Samsung Electronics Co., Ltd. | Display screen or portion thereof with animated graphical user interface |
USD821407S1 (en) | 2015-08-14 | 2018-06-26 | Sonos, Inc. | Display screen or portion thereof with animated graphical user interface element incorporating warped circles |
USD803233S1 (en) | 2015-08-14 | 2017-11-21 | Sonos, Inc. | Display device with animated graphical user interface element |
CA2901477C (en) | 2015-08-25 | 2023-07-18 | Evolution Optiks Limited | Vision correction system, method and graphical user interface for implementation on electronic devices having a graphical display |
USD783652S1 (en) | 2015-10-05 | 2017-04-11 | Lucis Technologies Holdings Limited | Phone with graphical user interface |
USD800752S1 (en) | 2015-10-08 | 2017-10-24 | Smule, Inc. | Display screen or portion thereof with animated graphical user interface |
USD773531S1 (en) | 2015-10-22 | 2016-12-06 | Gamblit Gaming, Llc | Display screen with animated graphical user interface |
USD794048S1 (en) | 2015-11-18 | 2017-08-08 | Samsung Electronics Co., Ltd. | Display screen or portion thereof with graphical user interface |
USD795919S1 (en) | 2015-12-17 | 2017-08-29 | The Procter & Gamble Company | Display screen with icon |
USD795927S1 (en) | 2015-12-17 | 2017-08-29 | The Procter & Gamble Company | Display screen with animated user interface |
USD806114S1 (en) | 2015-12-24 | 2017-12-26 | Samsung Electronics Co., Ltd. | Display screen or portion thereof with transitional graphical user interface |
KR20170076992A (en) | 2015-12-26 | 2017-07-05 | 삼성전자주식회사 | Refrigerator |
USD781907S1 (en) | 2016-01-19 | 2017-03-21 | Apple Inc. | Display screen or portion thereof with graphical user interface |
USD842874S1 (en) | 2016-02-25 | 2019-03-12 | Mitsubishi Electric Corporation | Display screen with graphical user interface |
USD794047S1 (en) | 2016-03-24 | 2017-08-08 | Adp, Llc | Display screen with graphical user interface |
TWD188687S (en) | 2016-03-29 | 2018-02-21 | 戴森科技有限公司 | Graphical user interfaces |
US10423292B2 (en) | 2016-05-17 | 2019-09-24 | Google Llc | Managing messages in vehicles |
DK201670616A1 (en) | 2016-06-12 | 2018-01-22 | Apple Inc | Devices and Methods for Accessing Prevalent Device Functions |
USD817337S1 (en) | 2016-07-07 | 2018-05-08 | Baidu Usa Llc | Display screen or portion thereof with graphical user interface |
US20180018081A1 (en) | 2016-07-12 | 2018-01-18 | Google Inc. | Methods and Systems for Presenting Smart Home Information in a User Interface |
US10263802B2 (en) | 2016-07-12 | 2019-04-16 | Google Llc | Methods and devices for establishing connections with remote cameras |
USD810124S1 (en) | 2016-07-22 | 2018-02-13 | Sonos, Inc. | Display screen or portion thereof with animated graphical user interface elements incorporating overlapping circles |
USD805548S1 (en) | 2016-08-05 | 2017-12-19 | Microsoft Corporation | Display screen with animated graphical user interface |
USD824416S1 (en) | 2016-09-09 | 2018-07-31 | Royal Master Grinders, Inc. | Display screen with animated graphical user interface |
USD823867S1 (en) | 2016-09-13 | 2018-07-24 | Facebook, Inc. | Display screen having a graphical user interface for messaging |
USD819075S1 (en) | 2016-09-29 | 2018-05-29 | Intuit Inc. | Display screen or portion thereof with an animated graphical user interface |
USD837237S1 (en) | 2016-10-28 | 2019-01-01 | General Electric Company | Display screen or portion thereof with graphical user interface |
KR102186286B1 (en) | 2016-11-10 | 2020-12-03 | 엘지전자 주식회사 | Mobile terminal performing method of registering and searching recipe of beer brewed by beer maker, recording medium recording program performing the method |
KR20180055231A (en) | 2016-11-16 | 2018-05-25 | 삼성전자주식회사 | Electronic device and method for displaying execution screen of application using icon |
AU2017363273A1 (en) | 2016-11-23 | 2019-06-06 | Alarm.Com Incorporated | Detection of authorized user presence and handling of unauthenticated monitoring system commands |
USD815144S1 (en) | 2016-12-23 | 2018-04-10 | Beijing Kingsoft Internet Security Software Co., Ltd. | Mobile terminal display screen with a graphical user interface |
USD818000S1 (en) | 2016-12-28 | 2018-05-15 | Samsung Electronics Co., Ltd. | Display screen or portion thereof with icon |
USD821443S1 (en) | 2016-12-28 | 2018-06-26 | Samsung Electronics Co., Ltd. | Display screen or portion thereof with animated graphical user interface |
CN106658049B (en) | 2016-12-31 | 2019-08-30 | 深圳市优必选科技有限公司 | A kind of video playing way to play for time and system |
US20180187954A1 (en) | 2017-01-03 | 2018-07-05 | Samsung Electronics Co., Ltd. | Home appliance, mobile device and control method of the same |
USD842867S1 (en) | 2017-01-24 | 2019-03-12 | Google Llc | Display screen or portion thereof with a transitional graphical user interface |
USD823891S1 (en) | 2017-01-27 | 2018-07-24 | Google Llc | Computer display screen portion with a transitional graphical user interface |
USD824926S1 (en) | 2017-04-27 | 2018-08-07 | United Services Automobile Association (Usaa) | Display screen or portion thereof with an animated graphical user interface |
USD849030S1 (en) | 2017-04-27 | 2019-05-21 | Deere & Company | Display screen with graphical user interface |
US10369470B2 (en) | 2017-04-28 | 2019-08-06 | PlayFusion Limited | User interface control cluster for enhancing a gaming experience |
USD831673S1 (en) | 2017-05-15 | 2018-10-23 | Facebook, Inc. | Display screen with animated graphical user interface |
-
2016
- 2016-10-26 US US15/335,396 patent/US11238290B2/en active Active
-
2022
- 2022-01-28 US US17/649,285 patent/US20220215664A1/en active Pending
Patent Citations (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040177149A1 (en) * | 2003-03-05 | 2004-09-09 | Zullo Paul F. | System and method for presentation at the election of a user of media event information and further media event information of media events all related to a preselected time period |
US20050289615A1 (en) * | 2004-06-25 | 2005-12-29 | Seiko Epson Corporation | Video distribution system, video distribution device, video reception device, video distribution method, video reception method, video distribution program, and video reception program |
US20060288392A1 (en) * | 2005-05-31 | 2006-12-21 | Canon Kabushiki Kaisha | Frame scattering for video scrubbing |
US20090220206A1 (en) * | 2005-06-29 | 2009-09-03 | Canon Kabushiki Kaisha | Storing video data in a video file |
US20070025688A1 (en) * | 2005-07-27 | 2007-02-01 | Sassan Pejhan | Video encoding and transmission technique for efficient, multi-speed fast forward and reverse playback |
US20080181498A1 (en) * | 2007-01-25 | 2008-07-31 | Swenson Erik R | Dynamic client-server video tiling streaming |
US20150117513A1 (en) * | 2013-10-29 | 2015-04-30 | Google Inc. | Bandwidth reduction system and method |
US9158974B1 (en) * | 2014-07-07 | 2015-10-13 | Google Inc. | Method and system for motion vector-based video monitoring and event categorization |
Cited By (85)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10341684B2 (en) * | 2014-03-07 | 2019-07-02 | Eagle Eye Networks, Inc. | High definition surveillance image storage optimization apparatus and methods of retention triggering |
US20170048482A1 (en) * | 2014-03-07 | 2017-02-16 | Dean Drako | High definition surveillance image storage optimization apparatus and methods of retention triggering |
US10635303B2 (en) | 2016-06-12 | 2020-04-28 | Apple Inc. | User interface for managing controllable external devices |
US11947780B2 (en) | 2016-10-26 | 2024-04-02 | Google Llc | Timeline-video relationship processing for alert events |
US11609684B2 (en) | 2016-10-26 | 2023-03-21 | Google Llc | Timeline-video relationship presentation for alert events |
US11140547B2 (en) * | 2016-11-26 | 2021-10-05 | Huawei Technologies Co., Ltd. | Method for securely controlling smart home, and terminal device |
US11721107B2 (en) * | 2016-12-05 | 2023-08-08 | Google Llc | Systems and methods for locating image data for selected regions of interest |
US11182622B2 (en) * | 2016-12-05 | 2021-11-23 | Google Llc | Systems and methods for locating image data for selected regions of interest |
US20220027638A1 (en) * | 2016-12-05 | 2022-01-27 | Google Llc | Systems and Methods for Locating Image Data for Selected Regions of Interest |
US11151383B2 (en) * | 2017-01-09 | 2021-10-19 | Allegro Artificial Intelligence Ltd | Generating visual event detectors |
US11398253B2 (en) | 2017-03-02 | 2022-07-26 | Ricoh Company, Ltd. | Decomposition of a video stream into salient fragments |
US10929707B2 (en) | 2017-03-02 | 2021-02-23 | Ricoh Company, Ltd. | Computation of audience metrics focalized on displayed content |
US10713391B2 (en) | 2017-03-02 | 2020-07-14 | Ricoh Co., Ltd. | Tamper protection and video source identification for video processing pipeline |
US10720182B2 (en) | 2017-03-02 | 2020-07-21 | Ricoh Company, Ltd. | Decomposition of a video stream into salient fragments |
US10719552B2 (en) * | 2017-03-02 | 2020-07-21 | Ricoh Co., Ltd. | Focalized summarizations of a video stream |
US10708635B2 (en) | 2017-03-02 | 2020-07-07 | Ricoh Company, Ltd. | Subsumption architecture for processing fragments of a video stream |
US10956495B2 (en) | 2017-03-02 | 2021-03-23 | Ricoh Company, Ltd. | Analysis of operator behavior focalized on machine events |
US10956494B2 (en) | 2017-03-02 | 2021-03-23 | Ricoh Company, Ltd. | Behavioral measurements in a video stream focalized on keywords |
US10956773B2 (en) | 2017-03-02 | 2021-03-23 | Ricoh Company, Ltd. | Computation of audience metrics focalized on displayed content |
US10949463B2 (en) | 2017-03-02 | 2021-03-16 | Ricoh Company, Ltd. | Behavioral measurements in a video stream focalized on keywords |
US10949705B2 (en) | 2017-03-02 | 2021-03-16 | Ricoh Company, Ltd. | Focalized behavioral measurements in a video stream |
US10943122B2 (en) | 2017-03-02 | 2021-03-09 | Ricoh Company, Ltd. | Focalized behavioral measurements in a video stream |
US10929685B2 (en) | 2017-03-02 | 2021-02-23 | Ricoh Company, Ltd. | Analysis of operator behavior focalized on machine events |
US20180276474A1 (en) * | 2017-03-21 | 2018-09-27 | Beijing Xiaomi Mobile Software Co., Ltd. | Method, apparatus for controlling a smart device and computer storge medium |
US11074449B2 (en) * | 2017-03-21 | 2021-07-27 | Beijing Xiaomi Mobile Software Co., Ltd. | Method, apparatus for controlling a smart device and computer storge medium |
US11164006B2 (en) * | 2017-03-30 | 2021-11-02 | Nec Corporation | Information processing apparatus, control method, and program |
US20220044028A1 (en) * | 2017-03-30 | 2022-02-10 | Nec Corporation | Information processing apparatus, control method, and program |
US11776274B2 (en) * | 2017-03-30 | 2023-10-03 | Nec Corporation | Information processing apparatus, control method, and program |
US11123876B2 (en) * | 2017-04-12 | 2021-09-21 | Caterpillar Inc. | Method for sensor data processing |
US10965899B1 (en) * | 2017-04-17 | 2021-03-30 | Alarm.Com Incorporated | System and method for integration of a television into a connected-home monitoring system |
US10902266B1 (en) * | 2017-05-10 | 2021-01-26 | Vivint, Inc. | Variable rate time-lapse with saliency |
US11156325B2 (en) | 2017-05-25 | 2021-10-26 | Google Llc | Stand assembly for an electronic device providing multiple degrees of freedom and built-in cables |
US11680677B2 (en) | 2017-05-25 | 2023-06-20 | Google Llc | Compact electronic device with thermal management |
US11689784B2 (en) | 2017-05-25 | 2023-06-27 | Google Llc | Camera assembly having a single-piece cover element |
US11353158B2 (en) | 2017-05-25 | 2022-06-07 | Google Llc | Compact electronic device with thermal management |
US20220303615A1 (en) * | 2017-09-19 | 2022-09-22 | Rovi Guides, Inc. | Systems and methods for navigating internet appliances using a media guidance application |
US20220269256A1 (en) * | 2017-10-06 | 2022-08-25 | Johnson Controls Tyco IP Holdings LLP | Building management system with alarm generation, cloud storage, and visualization |
US11927947B2 (en) * | 2017-10-06 | 2024-03-12 | Johnson Controls Tyco IP Holdings LLP | Building management system and method with timeseries sample feedback control |
US11022337B2 (en) * | 2017-11-20 | 2021-06-01 | Carrier Corporation | Air conditioning system |
US20190199763A1 (en) * | 2017-12-22 | 2019-06-27 | mindHIVE Inc. | Systems and methods for previewing content |
US20220345772A1 (en) * | 2018-02-02 | 2022-10-27 | Comcast Cable Communications, Llc | Image Selection Using Motion Data |
US20220057929A1 (en) * | 2018-02-23 | 2022-02-24 | Samsung Electronics Co., Ltd. | Electronic device displaying interface for editing video data and method for controlling same |
US11803296B2 (en) * | 2018-02-23 | 2023-10-31 | Samsung Electronics Co., Ltd. | Electronic device displaying interface for editing video data and method for controlling same |
US20190287376A1 (en) * | 2018-03-14 | 2019-09-19 | Safely You Inc. | System and Method for Detecting, Recording and Communicating Events in the Care and Treatment of Cognitively Impaired Persons |
US20220114874A1 (en) * | 2018-03-14 | 2022-04-14 | Safelyyou Inc. | System and method for detecting, recording and communicating events in the care and treatment of cognitively impaired persons |
US11900782B2 (en) * | 2018-03-14 | 2024-02-13 | Safely You Inc. | System and method for detecting, recording and communicating events in the care and treatment of cognitively impaired persons |
US11232694B2 (en) * | 2018-03-14 | 2022-01-25 | Safely You Inc. | System and method for detecting, recording and communicating events in the care and treatment of cognitively impaired persons |
US10904628B2 (en) * | 2018-05-07 | 2021-01-26 | Apple Inc. | User interfaces for viewing live video feeds and recorded video |
US20190342621A1 (en) * | 2018-05-07 | 2019-11-07 | Apple Inc. | User interfaces for viewing live video feeds and recorded video |
US20240040198A1 (en) * | 2018-05-07 | 2024-02-01 | Apple Inc. | User interfaces for viewing live video feeds and recorded video |
JP2021515344A (en) * | 2018-05-07 | 2021-06-17 | アップル インコーポレイテッドＡｐｐｌｅ Ｉｎｃ． | User interface for viewing live video feeds and recorded videos |
US10820058B2 (en) | 2018-05-07 | 2020-10-27 | Apple Inc. | User interfaces for viewing live video feeds and recorded video |
JP7098752B2 (en) | 2018-05-07 | 2022-07-11 | アップル インコーポレイテッド | User interface for viewing live video feeds and recorded videos |
US11032345B2 (en) * | 2018-05-10 | 2021-06-08 | Microsoft Technology Licensing, Llc | Client side data stream processing |
US11158343B2 (en) * | 2018-05-11 | 2021-10-26 | Axon Enterprise, Inc. | Systems and methods for cross-redaction |
US10825479B2 (en) * | 2018-05-11 | 2020-11-03 | Axon Enterprise, Inc. | Systems and methods for cross-redaction |
US20190348076A1 (en) * | 2018-05-11 | 2019-11-14 | Axon Enterprise, Inc. | Systems and methods for cross-redaction |
US10878245B2 (en) * | 2018-05-30 | 2020-12-29 | Logitech Europe S.A. | Video content activity regions |
US20190370552A1 (en) * | 2018-05-30 | 2019-12-05 | Logitech Europe S.A. | Video content activity regions |
CN108833963A (en) * | 2018-05-31 | 2018-11-16 | 腾讯科技（上海）有限公司 | Method, computer equipment, readable storage medium storing program for executing and the system of display interface picture |
US11924204B1 (en) | 2018-06-08 | 2024-03-05 | Wells Fargo Bank, N.A. | Two-way authentication system and method |
US11303632B1 (en) * | 2018-06-08 | 2022-04-12 | Wells Fargo Bank, N.A. | Two-way authentication system and method |
US20200162528A1 (en) * | 2018-11-15 | 2020-05-21 | Bose Corporation | Controlling Streaming Media Players |
US10838611B1 (en) * | 2019-05-03 | 2020-11-17 | Google Llc | Navigation system on the infinite scroll |
US11363071B2 (en) | 2019-05-31 | 2022-06-14 | Apple Inc. | User interfaces for managing a local network |
US11785387B2 (en) | 2019-05-31 | 2023-10-10 | Apple Inc. | User interfaces for managing controllable external devices |
US10904029B2 (en) | 2019-05-31 | 2021-01-26 | Apple Inc. | User interfaces for managing controllable external devices |
US11824898B2 (en) | 2019-05-31 | 2023-11-21 | Apple Inc. | User interfaces for managing a local network |
US10779085B1 (en) | 2019-05-31 | 2020-09-15 | Apple Inc. | User interfaces for managing controllable external devices |
US11343551B1 (en) * | 2019-07-23 | 2022-05-24 | Amazon Technologies, Inc. | Bandwidth estimation for video streams |
US11622091B2 (en) * | 2019-10-31 | 2023-04-04 | Genetec Inc. | Facilitating video monitoring of at least one location |
WO2021081653A1 (en) * | 2019-10-31 | 2021-05-06 | Genetec Inc. | Facilitating video monitoring of at least one location |
US11574626B2 (en) * | 2019-11-13 | 2023-02-07 | Lg Electronics Inc. | Method of controlling intelligent security device |
US20210142788A1 (en) * | 2019-11-13 | 2021-05-13 | Lg Electronics Inc. | Method of controlling intelligent security device |
US11513667B2 (en) | 2020-05-11 | 2022-11-29 | Apple Inc. | User interface for audio message |
US11079913B1 (en) | 2020-05-11 | 2021-08-03 | Apple Inc. | User interface for status indicators |
US11657614B2 (en) | 2020-06-03 | 2023-05-23 | Apple Inc. | Camera and visitor user interfaces |
US11937021B2 (en) | 2020-06-03 | 2024-03-19 | Apple Inc. | Camera and visitor user interfaces |
US11589010B2 (en) | 2020-06-03 | 2023-02-21 | Apple Inc. | Camera and visitor user interfaces |
US11785277B2 (en) | 2020-09-05 | 2023-10-10 | Apple Inc. | User interfaces for managing audio for media items |
US20220335795A1 (en) * | 2021-04-16 | 2022-10-20 | Dice Corporation | Hyperlinked digital video alarm electronic document |
EP4171023A1 (en) * | 2021-10-22 | 2023-04-26 | Milestone Systems A/S | Computer-implemented method and computer program for generating a thumbnail from a video stream or file, and video surveillance system |
GB2612118A (en) * | 2021-10-22 | 2023-04-26 | Milestone Systems As | Computer-implemented method and computer program for generating a thumbnail from a video stream or file, and video surveillance system |
WO2023076627A1 (en) * | 2021-10-28 | 2023-05-04 | Noiseaware Inc. | System and method for monitoring and classifying smoking events in monitored spaces |
US11968412B1 (en) | 2022-05-23 | 2024-04-23 | Amazon Technologies, Inc. | Bandwidth estimation for video streams |
Also Published As
Publication number | Publication date |
---|---|
US11238290B2 (en) | 2022-02-01 |
US20220215664A1 (en) | 2022-07-07 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11947780B2 (en) | Timeline-video relationship processing for alert events | |
US20220215664A1 (en) | Timeline-Video Relationship Processing for Alert Events | |
US11599259B2 (en) | Methods and systems for presenting alert event indicators | |
US20200211347A1 (en) | Automatic detection of zones of interest in a video | |
US20220329762A1 (en) | Methods and Systems for Presenting Smart Home Information in a User Interface | |
US20210216787A1 (en) | Methods and Systems for Presenting Image Data for Detected Regions of Interest | |
US11721107B2 (en) | Systems and methods for locating image data for selected regions of interest | |
US10263802B2 (en) | Methods and devices for establishing connections with remote cameras | |
US20180330169A1 (en) | Methods and Systems for Presenting Image Data for Detected Regions of Interest | |
WO2018208365A1 (en) | Methods and systems for presenting image data for detected regions of interest |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:BURNS, CHRISTOPHER CHARLES;HEITZ, GEORGE ALBAN, III;STEWART, JAMES EDWARD;AND OTHERS;SIGNING DATES FROM 20161021 TO 20161024;REEL/FRAME:040149/0322 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044567/0001Effective date: 20170929 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: FINAL REJECTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: FINAL REJECTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE AFTER FINAL ACTION FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: ADVISORY ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: PUBLICATIONS -- ISSUE FEE PAYMENT VERIFIED |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
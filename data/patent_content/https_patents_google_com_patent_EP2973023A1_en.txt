EP2973023A1 - Scoring concept terms using a deep network - Google Patents
Scoring concept terms using a deep networkInfo
- Publication number
- EP2973023A1 EP2973023A1 EP14716710.0A EP14716710A EP2973023A1 EP 2973023 A1 EP2973023 A1 EP 2973023A1 EP 14716710 A EP14716710 A EP 14716710A EP 2973023 A1 EP2973023 A1 EP 2973023A1
- Authority
- EP
- European Patent Office
- Prior art keywords
- resource
- training
- concept
- features
- feature
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Ceased
Links
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/08—Learning methods
- G06N3/084—Backpropagation, e.g. using gradient descent
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/35—Clustering; Classification
- G06F16/353—Clustering; Classification into predefined classes
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/04—Architecture, e.g. interconnection topology
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/04—Architecture, e.g. interconnection topology
- G06N3/042—Knowledge-based neural networks; Logical representations of neural networks
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/08—Learning methods
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
Definitions
- Internet resources may include content that describes any of a wide variety of concepts.
- This specification relates to identifying concept terms that are relevant to resources using a deep network.
- a method performed by one or more computers comprising: receiving an input comprising a plurality of features of a resource, wherein each feature is a value of a respective attribute of the resource; processing each of the features using a respective embedding function to generate one or more numeric values; processing the numeric values to generate an alternative representation of the features of the resource, wherein processing the numeric values comprises applying one or more non-linear transformations to the numeric values; and processing the alternative representation of the input to generate a respective relevance score for each concept term in a pre-determined set of concept terms, wherein each of the respective relevance scores measures a predicted relevance of the corresponding concept term to the resource.
- each of the embedding functions is specific to features of a respective feature type, and wherein each of the embedding functions receives a feature of the respective type and applies a transformation to the feature that maps the feature into a numeric representation in accordance with a set of embedding function parameters.
- Aspect 3 according to any one of aspects 1 to 2, further comprising: obtaining the plurality of features of the resource in response to receiving an indication that an online advertisement auction is to be conducted to select one or more advertisements for inclusion in a particular presentation of the resource.
- Aspect 4 according to any one of aspects 1 to 3, further comprising: selecting one or more of the concept terms as advertising keywords to be used in selecting candidate advertisements for participation in the online advertisement auction based on the relevance scores.
- Aspect 5 according to any one of aspects 1 to 4, further comprising: filtering out concept terms that are not in the same language as the resource.
- Aspect 6 according to any one of aspects 1 to 5, further comprising: filtering out concept terms that have a Term Frequency Inverse Document Frequency (TF-IDF) score that exceeds a threshold value.
- TF-IDF Term Frequency Inverse Document Frequency
- Aspect 7 according to any one of aspects 1 to 6, wherein the numeric values are floating point values.
- Aspect 8 according to any one of aspects 1 to 7, wherein the numeric values are quantized integer values, and wherein an encoding of the quantized integer values represents floating point values.
- a computer-implemented method for training a system for predicting a relevance of each of a set of pre-determined concept terms to resources wherein the system includes an embedding function layer, one or more neural network layers, and a classifier, and wherein the method comprises: obtaining data identifying training resources and one or more respective associated concept terms for each of the training resources; specifying output criteria for a respective predicted output generated by the classifier for each of the training resources; and training the embedding function layer, the neural network layers, and the classifier based on respective features of each the training resources and on the specified output criteria, wherein each feature is a value of a respective attribute of the resource.
- specifying the output criteria comprises: specifying that, for each training resource, relevance scores generated for concept terms associated with the training resource should exceed relevance scores generated for a random sample of other concept terms in the plurality of concept terms that are not associated with the training resource.
- Aspect 1 1 according to any one of aspects 9 to 10, further comprising: obtaining data identifying a training resource viewed by a user; obtaining data identifying an advertisement in a first resource selected by the user within a threshold time window of viewing the training resource; and associating a keyword used in placing the
- a deep network can be effectively and reliably used to predict concept terms that are relevant to a resource. Once trained, the deep network can be used to predict relevant concept terms for novel resources, i.e., resources that were not previously known to the deep network. The deep network may thereby employ machine learning schemes for faster and more efficient processing of novel data resources. For example, the deep network can be used to select keywords (e.g., advertising keywords) that are relevant to a resource.
- keywords e.g., advertising keywords
- Using the deep network to select the keywords may result in more relevant search results (e.g., advertisements) being included in the resource, e.g., by increasing the relevance to the resource of the results (e.g., advertisements) selected for participation in an online content selection process (e.g., advertising auction) conducted to place one or more results (e.g., advertisements) in the resource.
- results e.g., advertisements
- an online content selection process e.g., advertising auction
- FIG. 1 is a block diagram of an example concept term scoring system.
- FIG. 2 is a flow diagram of an example process for scoring concept terms.
- FIG. 3 is a flow diagram of an example process for training a concept term scoring system.
- FIG. 1 is a block diagram of an example concept term scoring system 100.
- the concept term scoring system 100 is an example of a system implemented as computer programs on one or more computers in one or more locations, in which the systems, components, and techniques described below can be implemented.
- the concept term scoring system 100 receives an input and generates a predicted output based on the received input.
- the input is a set of features of a resource and the output generated by the concept term scoring system 100 based on the input is a respective score for each of a set of concept terms.
- the set of concept terms is predetermined and represents concepts that have been determined to be relevant to the system or to a collection of resources.
- the scores generated for the concept terms are predictions of how relevant each of the concept terms is to the resource.
- the concept terms may be keywords that are used to select advertisements for participation in online advertisement auctions.
- the features of the resource are values of respective attributes of the resource that characterize the resource in some way and can include features of multiple respective categorically distinct feature types.
- a feature of a particular type is a list of one or more active feature elements, i.e., a list of tokens or of token-value pairs, selected from a vocabulary of possible active feature elements of the feature type.
- the tokens may be words in a natural language, e.g., English
- the vocabulary for the feature type may be the known words in the natural language.
- the vocabularies for the feature types may be overlapping or non-overlapping and the list for a given feature type may be ordered or unordered.
- the concept term scoring system 100 can receive features 120 from a feature data store 102.
- the features 120 can be features of various feature types that have been extracted from a particular resource in response to receiving an indication that an online advertisement auction is to be conducted to select one or more advertisements to be included in a particular presentation of the resource.
- the features of the resource can include, e.g., any of: the uniform resource locator (URL) of the resource, the domain name of the resource, an identifier of the publisher of the resource, data obtained by the concept scoring system 100 that identifies the categories or entity types that are relevant to the resource, terms that appear most frequently in the resource, and so on.
- the features of the resource can also include features obtained from other systems or services that summarize the content or the utility of the resource, e.g., systems that attempt to identify the most important terms in the resource, systems that identify entities that are relevant to the resource, and so on.
- the concept term scoring system 100 uses the received input features to predict an output.
- the output can be stored in a scored concept term data store 114 or used for some immediate purpose.
- the output is a vector of scores that includes a respective score for each of the set of concept terms.
- the concept term scoring system 100 can generate a score for each of a set of concept terms that may be used as advertising keywords for selecting advertisements for participation in the auction.
- the concept term scoring system 100 includes a deep network 106 and a classifier 112.
- the deep network uses a set of machine learning algorithms that attempt to model or mimic structures or abstractions in data by using architectures composed of one or more non-linear transformations.
- a deep network is a machine learning system that includes one or more hidden layers between the input and output layers. Each of the hidden layers applies a respective non-linear transformation to an input received from a previous layer in the deep network in accordance with a set of parameters and provides the result of the non-linear transformation to a next layer in the deep network.
- the hidden layers provide levels of abstraction, thus increasing the modeling capability of the deep network.
- the deep network 106 includes a set of embedding functions 108 and one or more hidden artificial neural network layers 1 10, each having a respective set of parameters.
- Each of the embedding functions 108 receives a respective feature of a respective type and, in accordance with a set of parameters, applies a transformation to the feature that maps the feature into a numeric representation.
- the embedding functions 108 can apply a transformation to the features 120 to map the features into floating point representations 122. Embedding functions will be described in more detail below with reference to FIG. 2.
- An initial layer of the neural network layers 1 10 receives as an input the floating point representations of the input features generated by the embedding functions and the neural network layers 1 10 each apply one or more respective non-linear transformations to the floating point representations to generate an alternative representation of the input.
- the alternative representation is a numeric representation of the input that has been generated by applying one or more non-linear transformations to an initial numeric representation of the input, e.g., the representation generated by the embedding functions
- the neural network layers 1 10 can generate alternative representation
- Each neural network layer is a collection of artificial nodes that receive input and compute an output from the input, i.e., by applying a non-linear transformation to the input, in accordance with a set of parameters. The output is then fed through to other neural network layers or to other components of the deep network.
- the deep network 106 may include another group of layers that applies successive linear or non-linear transformations over some or all of the floating point representations generated by the embedding functions 108.
- the classifier 112 receives the alternative representation generated by the deep network 106 and predicts a value for each field of a concept score vector in accordance with values of parameters of the classifier 112. Each of the fields in the concept score vector corresponds to a respective concept term in the set of concept terms.
- the classifier 1 12 can generate a concept score vector 126 from the alternative representation 124.
- the classifier 112 can be any multiclass or multilabel classifier, e.g., a multiclass logistic regression classifier, a multiclass support vector machine classifier, a Bayesian classifier, and so on.
- the concept term scoring system 100 can include a ranking function that orders the concept terms based on the alternative representation 124.
- the ranking function may be, e.g., a hinge-loss ranking function, a pairwise ranking function, and so on.
- FIG. 2 is a flow diagram of an example process 200 for scoring concept terms.
- the process 200 will be described as being performed by a system of one or more computers located in one or more locations.
- a concept term scoring system e.g., the concept term scoring system 100 of FIG. 1, appropriately programmed, can perform the process 200.
- the system obtains features of a resource (step 202).
- the features are either an ordered or unordered list of tokens or of token-value pairs.
- Each feature is of a respective feature type, i.e., the list of tokens or token- value pairs that makes up the feature is selected from a vocabulary of possible active feature elements of the feature type.
- the system processes each feature using the embedded function for the feature type of the feature (step 204) to generate a floating-point vector representation of the feature.
- the embedding function for a given feature type can be any of a variety of embedding functions.
- the system determines the type of the feature by parsing the raw input data received by the system for each resource. For example, if a portion of the raw input data for a given resource is "URL: www.examplesite.com," the system can parse the input data to determine that one of the resource features is www.examplesite.com and that the feature is of a URL feature type.
- the embedding function may be a simple embedding function.
- a simple embedding function maps a single token to a floating point vector, i.e., a vector of floating point values.
- the simple embedding function may map the token "cat" to a vector [0.1, 0.5, 0.2] and the token "tablet" to a vector [0.3, 0.9, 0.0], based on current parameter values of the embedding function, e.g., as stored in a lookup table.
- the embedding function may be a parallel embedding function.
- a parallel embedding function maps each token in a list of tokens to a respective floating point vector and outputs a single vector that is a concatenation of the respective floating point vectors. For example, for an ordered list of tokens "Atlanta,” "Hotel” ⁇ , the parallel embedding function may map "Atlanta” to a vector [0.1, 0.2, 0.3] and "Hotel" to [0.4, 0.5,
- the parallel embedding function may use a single lookup table or multiple different lookup tables.
- the embedding function may be a combining embedding function.
- a combining embedding function maps each token in the list to a respective floating point vector and then merges the respective floating point vectors into a single merged vector.
- the combining embedding function can merge the respective floating point vector using a linear function, e.g., a sum, average, or weighted linear combination of the respective floating point vectors, or using a nonlinear function, e.g., a componentwise maximum or a norm-constrained linear combination, for example.
- the parallel embedding function may use a single lookup table or multiple different lookup tables.
- the parallel embedding function may map "Atlanta” to a vector [0.1, 0.2, 0.3] and "Hotel” to [0.4, 0.5, 0.6], and then output the sum of the two vectors,
- the embedding function may be a mixed embedding function.
- a mixed embedding function maps each token in a list of tokens to a respective floating point vector and generates an initial vector that is the concatenation of the respective floating point vectors.
- the mixed embedding function then merges the respective floating point vectors into a merged vector and concatenates the merged vector with the initial vector.
- the mixed embedding function may output a concatenation of the vectors output by the parallel embedding function and the combining embedded function, i.e., [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.5, 0.7, 0.9].
- the system may utilize two different kinds of embedding functions for two different feature types, and the two embedding functions may or may not share parameters.
- the system may utilize a combining embedding function for a first feature type and a mixed embedding function for a second feature type.
- the system uses a hashing function to hash each non-discrete feature.
- the system can then partition each hashed feature into one of a predetermined set of partitions, and process a value corresponding to the partition using the embedding function for the feature. Additionally, if a particular feature cannot be obtained for a given resource, that system can map that feature to a pre-determined value.
- a given embedding function may generate a different kind of numeric values.
- the embedding function may generate quantized integer values whose encoding represents floating point values.
- the system processes the floating-point vector representations using one or more neural network layers (step 206).
- the one or more neural network layers include one or more layers of non-linear transformations, with each transformation being defined based on values of a respective set of parameters.
- the one or more neural network layers generate an alternative representation of the input based on the floating-point vector representations of the features of the input.
- the system can then process the alternative representation using a sparse binary output layer, e.g., a layer that outputs a vector that is 0 or 1 at every position.
- a sparse binary output layer e.g., a layer that outputs a vector that is 0 or 1 at every position.
- Approximate Reasoning 50 (2009) 969-978.
- many different techniques and mechanisms for processing the representations using neural network layers can be used.
- the system processes the alternative representation of the input using a classifier (step 208) to predict an output for each of a set of concept terms.
- the classifier predicts the output based on values of a set of parameters and the alternative representation.
- the output for a given concept term is a prediction of the value of a variable that corresponds to the concept term, e.g., a score for the concept term that represents the predicted relevance of the concept described by the term to the resource.
- the system can process the alternative representation of the input using a ranking function instead of a classifier to predict a ranking of the concept terms according to their predicted relevance to the concept.
- the system can store the scores in a data store or use the scores for another immediate purpose.
- the system can select a specified number of one or more highest-scoring concept terms or each concept term having a score that satisfies a threshold value as advertising keywords to be used in selecting candidate advertisements for participation in an online advertising auction.
- the selected keywords are used in combination with keywords produced using other techniques to select the candidate advertisements.
- the system can filter out any concept terms that fail to meet one or more selection criteria.
- the system may filter out concept terms that are in a language that does not match the language of the resource, e.g., by comparing data that identifies the language of the resource to data identifying the language of the concept term and filtering out the concept term when the data does not indicate a match.
- the system may filter out concept terms that have a Term Frequency Inverse Document Frequency (TF-IDF) score that exceeds a threshold value. That is, the system may filter out concept terms that have a high likelihood of being selected because they are popular terms rather than because they are particularly relevant to the resource.
- TF-IDF Term Frequency Inverse Document Frequency
- the process 200 can be performed to predict scores for concept terms for an input for which the desired scores are not known.
- the process 200 can also be performed on inputs in a set of training data, i.e., a set of inputs for which the output that should be predicted by the system is known, in order to train the system, i.e., to determine optimal values for the parameters of the classifier and the deep network.
- the process 200 can be performed repeatedly on inputs selected from a set of training data as part of a backpropagation training technique that determines optimal values for each of the parameters. Training a concept term scoring system will be described in more detail below with reference to FIG. 3.
- FIG. 3 is a flow diagram of an example process 300 for training a concept term scoring system.
- the process 300 will be described as being performed by a system of one or more computers located in one or more locations.
- a concept term scoring system e.g., the concept term scoring system 100 of FIG. 1, appropriately programmed, can perform the process 300.
- the system obtains data identifying training resources and associated concept terms for each of the training resources (step 302).
- a concept term may be associated with a resource based on data that identifies advertisements that received a user selection within a pre-determined time window of viewing the resource.
- the advertising keyword used to place the advertisement in the auction that resulted in the advertisement being presented to the user can be associated with the resource as a concept term.
- the system specifies criteria for the predicted output for each of the training resources based on parameters (step 304). That is, for each resource, the system specifies criteria for the concept term scores generated by the system based on the parameters.
- the parameters may specify that, for any training resource, the scores for the concept terms associated with the resource should be higher than any score for any other concept term in the set of concept terms or a randomly selected sample of the other concept terms in the set of concept terms.
- the parameters may require that the scores for the concept terms associated with the resource exceed the other scores by a threshold value.
- the parameters may specify that, for any training resource, the scores for the concept terms associated with the resource should each be higher than a specified threshold value.
- the parameters may specify that the concept terms associated with the resource should all be in a specified number of highest-scoring concept terms.
- the parameters used to generate the criteria can be provided to the system, e.g., by a system administrator, and may be static, i.e., predetermined at the beginning of the training, or dynamic, i.e., can be automatically adjusted throughout the training of the system. For example, the parameters may be relaxed during training until the performance of the system degrades, and then made more stringent.
- the system performs a training process to train the classifier (step 306) using the specified criteria and features of the training resources for the parameters and a set of training data. Additionally, the training process uses the method of backpropagation to adjust the parameters of all the components of a deep network, e.g., the deep network 106 of FIG. 1.
- the classifier will adjust its parameters so as to reduce the expected error on that particular input using conventional gradient based methods. Furthermore, as part of the backpropagation method, the classifier sends an error signal to the deep network, which allows the deep network to adjust the parameters of its internal components and of the set of embedding functions though successive stages of backpropagation.
- the training process can be parallelized in any of a variety of ways.
- the training process can be parallelized using one or more of the techniques for parallelizing the training of a machine learning model described in "Large Scale Distributed Deep Networks,” Jeffrey Dean, et al., Neural Information Processing Systems Conference. 2012.
- Embodiments of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry, in tangibly-embodied computer software or firmware, in computer hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions encoded on a tangible non transitory program carrier for execution by, or to control the operation of, data processing apparatus.
- the program instructions can be encoded on an artificially generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- the computer storage medium can be a machine-readable storage device, a machine-readable storage substrate, a random or serial access memory device, or a combination of one or more of them.
- data processing apparatus encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers.
- the apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.
- a computer program (which may also be referred to or described as a program, software, a software application, a module, a software module, a script, or code) can be written in any form of programming language, including compiled or interpreted languages, or declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data, e.g., one or more scripts stored in a markup language document, in a single file dedicated to the program in question, or in multiple coordinated files, e.g., files that store one or more modules, sub programs, or portions of code.
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and
- the processes and logic flows described in this specification can be performed by one or more programmable computers executing one or more computer programs to perform functions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit).
- special purpose logic circuitry e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit).
- Computers suitable for the execution of a computer program include, by way of example, can be based on general or special purpose microprocessors or both, or any other kind of central processing unit.
- a central processing unit will receive instructions and data from a read only memory or a random access memory or both.
- the essential elements of a computer are a central processing unit for performing or executing instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device, e.g., a universal serial bus (USB) flash drive, to name just a few.
- PDA personal digital assistant
- GPS Global Positioning System
- USB universal serial bus
- Computer readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto optical disks; and CD ROM and DVD-ROM disks.
- semiconductor memory devices e.g., EPROM, EEPROM, and flash memory devices
- magnetic disks e.g., internal hard disks or removable disks
- magneto optical disks e.g., CD ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back end, middleware, or front end components.
- the components of the system can be
- Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), e.g., the Internet.
- LAN local area network
- WAN wide area network
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
Abstract
Description
Claims
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/802,184 US9141906B2 (en) | 2013-03-13 | 2013-03-13 | Scoring concept terms using a deep network |
PCT/US2014/026352 WO2014160344A1 (en) | 2013-03-13 | 2014-03-13 | Scoring concept terms using a deep network |
Publications (1)
Publication Number | Publication Date |
---|---|
EP2973023A1 true EP2973023A1 (en) | 2016-01-20 |
Family
ID=50478596
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP14716710.0A Ceased EP2973023A1 (en) | 2013-03-13 | 2014-03-13 | Scoring concept terms using a deep network |
Country Status (5)
Country | Link |
---|---|
US (2) | US9141906B2 (en) |
EP (1) | EP2973023A1 (en) |
CN (1) | CN105144164B (en) |
AU (1) | AU2014201827B2 (en) |
WO (1) | WO2014160344A1 (en) |
Families Citing this family (53)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9150450B2 (en) | 2005-12-06 | 2015-10-06 | Corning Incorporated | System and method for frit sealing glass packages |
US11048765B1 (en) | 2008-06-25 | 2021-06-29 | Richard Paiz | Search engine optimizer |
US10936687B1 (en) | 2010-04-21 | 2021-03-02 | Richard Paiz | Codex search patterns virtual maestro |
US11423018B1 (en) | 2010-04-21 | 2022-08-23 | Richard Paiz | Multivariate analysis replica intelligent ambience evolving system |
US11379473B1 (en) | 2010-04-21 | 2022-07-05 | Richard Paiz | Site rank codex search patterns |
US9141916B1 (en) * | 2012-06-29 | 2015-09-22 | Google Inc. | Using embedding functions with a deep network |
US11741090B1 (en) | 2013-02-26 | 2023-08-29 | Richard Paiz | Site rank codex search patterns |
US11809506B1 (en) | 2013-02-26 | 2023-11-07 | Richard Paiz | Multivariant analyzing replicating intelligent ambience evolving system |
US9147154B2 (en) | 2013-03-13 | 2015-09-29 | Google Inc. | Classifying resources using a deep network |
US9141906B2 (en) | 2013-03-13 | 2015-09-22 | Google Inc. | Scoring concept terms using a deep network |
US9519859B2 (en) | 2013-09-06 | 2016-12-13 | Microsoft Technology Licensing, Llc | Deep structured semantic model produced using click-through data |
US9535960B2 (en) * | 2014-04-14 | 2017-01-03 | Microsoft Corporation | Context-sensitive search using a deep learning model |
US10089580B2 (en) | 2014-08-11 | 2018-10-02 | Microsoft Technology Licensing, Llc | Generating and using a knowledge-enhanced model |
US9563825B2 (en) * | 2014-11-20 | 2017-02-07 | Adobe Systems Incorporated | Convolutional neural network using a binarized convolution layer |
US9418319B2 (en) | 2014-11-21 | 2016-08-16 | Adobe Systems Incorporated | Object detection using cascaded convolutional neural networks |
US10339440B2 (en) * | 2015-02-19 | 2019-07-02 | Digital Reasoning Systems, Inc. | Systems and methods for neural language modeling |
US9632999B2 (en) | 2015-04-03 | 2017-04-25 | Klangoo, Sal. | Techniques for understanding the aboutness of text based on semantic analysis |
US11188844B2 (en) | 2015-09-10 | 2021-11-30 | International Business Machines Corporation | Game-based training for cognitive computing systems |
US10896377B2 (en) | 2015-09-10 | 2021-01-19 | International Business Machines Corporation | Categorizing concept terms for game-based training in cognitive computing systems |
US20170126484A1 (en) * | 2015-10-29 | 2017-05-04 | International Business Machines Corporation | Providing recommended resolutions for events |
CN108431832B (en) * | 2015-12-10 | 2022-09-13 | 渊慧科技有限公司 | Augmenting neural networks with external memory |
EP3188086B1 (en) * | 2015-12-30 | 2020-02-19 | Facebook, Inc. | Identifying entities using a deep-learning model |
US10402750B2 (en) | 2015-12-30 | 2019-09-03 | Facebook, Inc. | Identifying entities using a deep-learning model |
US10685281B2 (en) | 2016-02-12 | 2020-06-16 | Microsoft Technology Licensing, Llc | Automated predictive modeling and framework |
US10909450B2 (en) | 2016-03-29 | 2021-02-02 | Microsoft Technology Licensing, Llc | Multiple-action computational model training and operation |
US11461919B2 (en) | 2016-04-21 | 2022-10-04 | Ramot At Tel Aviv University Ltd. | Cascaded neural network |
GB2549554A (en) * | 2016-04-21 | 2017-10-25 | Ramot At Tel-Aviv Univ Ltd | Method and system for detecting an object in an image |
KR102648770B1 (en) * | 2016-07-14 | 2024-03-15 | 매직 립, 인코포레이티드 | Deep neural network for iris identification |
EP3273380B1 (en) * | 2016-07-20 | 2018-12-12 | Siemens Healthcare GmbH | Protecting data exchanged between a service user and a service provider |
EP3497629B1 (en) * | 2016-09-06 | 2020-11-04 | Deepmind Technologies Limited | Generating audio using neural networks |
US11080591B2 (en) | 2016-09-06 | 2021-08-03 | Deepmind Technologies Limited | Processing sequences using convolutional neural networks |
EP3516566A1 (en) | 2016-09-22 | 2019-07-31 | nference, inc. | Systems, methods, and computer readable media for visualization of semantic information and inference of temporal signals indicating salient associations between life science entities |
WO2018064794A1 (en) * | 2016-10-05 | 2018-04-12 | Intel Corporation | General purpose input/output data capture and neural cache system for autonomous machines |
CN106528647B (en) * | 2016-10-15 | 2019-07-23 | 传神语联网网络科技股份有限公司 | One kind carrying out the matched method of term based on cedar even numbers group dictionary tree algorithm |
US10068557B1 (en) * | 2017-08-23 | 2018-09-04 | Google Llc | Generating music with deep neural networks |
CN108764339B (en) * | 2018-05-29 | 2022-04-15 | 北京理工大学 | Product concept feasibility judgment method based on knowledge base |
US11593657B2 (en) * | 2018-06-05 | 2023-02-28 | Samsung Electronics Co., Ltd. | Machine learning device and machine learning method of machine learning device |
US11106859B1 (en) * | 2018-06-26 | 2021-08-31 | Facebook, Inc. | Systems and methods for page embedding generation |
US11514313B2 (en) * | 2018-09-27 | 2022-11-29 | Google Llc | Sampling from a generator neural network using a discriminator neural network |
US11074266B2 (en) | 2018-10-11 | 2021-07-27 | International Business Machines Corporation | Semantic concept discovery over event databases |
CN109285263B (en) * | 2018-10-17 | 2020-10-13 | 重庆扬升信息技术有限公司 | Big data-based paperless conference voting prediction method |
TWI706334B (en) * | 2018-12-13 | 2020-10-01 | 鴻海精密工業股份有限公司 | Storage device, electronic device and method for classifying images |
CN110175857B (en) * | 2019-03-25 | 2023-06-02 | 创新先进技术有限公司 | Method and device for determining optimal service |
EP3987426A4 (en) | 2019-06-21 | 2023-07-26 | nference, inc. | Systems and methods for computing with private healthcare data |
US11487902B2 (en) | 2019-06-21 | 2022-11-01 | nference, inc. | Systems and methods for computing with private healthcare data |
CN112446483B (en) * | 2019-08-30 | 2024-04-23 | 阿里巴巴集团控股有限公司 | Computing method and computing unit based on machine learning |
US20210224610A1 (en) * | 2020-01-17 | 2021-07-22 | Insurance Services Office, Inc. | Systems and Methods for Disentangling Factors of Variation in Computer Vision Systems Using Cycle-Consistent Variational Auto-Encoders |
US11748776B2 (en) * | 2020-02-19 | 2023-09-05 | Stackadapt Inc. | Systems and methods of generating context specification for contextualized searches and content delivery |
US11663273B2 (en) | 2020-06-30 | 2023-05-30 | International Business Machines Corporation | Cognitive horizon surveillance |
DE102021101356A1 (en) | 2021-01-22 | 2022-07-28 | Amazonen-Werke H. Dreyer SE & Co. KG | Method for evaluating a processing operation carried out on an agricultural area |
US11694018B2 (en) * | 2021-01-29 | 2023-07-04 | Salesforce, Inc. | Machine-learning based generation of text style variations for digital content items |
EP4079384A1 (en) | 2021-04-22 | 2022-10-26 | Morai Sp. z o.o. | A method of creating ranking, a system for creating ranking and a ranking |
US11409800B1 (en) | 2021-07-23 | 2022-08-09 | Bank Of America Corporation | Generating search queries for database searching |
Family Cites Families (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6044375A (en) | 1998-04-30 | 2000-03-28 | Hewlett-Packard Company | Automatic extraction of metadata using a neural network |
US20030225763A1 (en) | 2002-04-15 | 2003-12-04 | Microsoft Corporation | Self-improving system and method for classifying pages on the world wide web |
AU2003263736A1 (en) * | 2002-05-10 | 2003-11-11 | Pharmacia Corp | Peptide compounds and their use as protease substrates |
US7287012B2 (en) * | 2004-01-09 | 2007-10-23 | Microsoft Corporation | Machine-learned approach to determining document relevance for search over large electronic collections of documents |
US7716225B1 (en) * | 2004-06-17 | 2010-05-11 | Google Inc. | Ranking documents based on user behavior and/or feature data |
US7694188B2 (en) * | 2007-02-05 | 2010-04-06 | Microsoft Corporation | Disk failure prevention and error correction |
US7895148B2 (en) | 2007-04-30 | 2011-02-22 | Microsoft Corporation | Classifying functions of web blocks based on linguistic features |
US8180754B1 (en) | 2008-04-01 | 2012-05-15 | Dranias Development Llc | Semantic neural network for aggregating query searches |
US20100057717A1 (en) | 2008-09-02 | 2010-03-04 | Parashuram Kulkami | System And Method For Generating A Search Ranking Score For A Web Page |
US20100121706A1 (en) | 2008-11-12 | 2010-05-13 | Yahoo! Inc. | Method and system for selecting advertisements |
US8725660B2 (en) | 2009-07-30 | 2014-05-13 | Hewlett-Packard Development Company, L.P. | Applying non-linear transformation of feature values for training a classifier |
US8473439B2 (en) * | 2010-12-08 | 2013-06-25 | International Business Machines Corporation | Integrate and fire electronic neurons |
US20130066814A1 (en) | 2011-09-12 | 2013-03-14 | Volker Bosch | System and Method for Automated Classification of Web pages and Domains |
US8873813B2 (en) * | 2012-09-17 | 2014-10-28 | Z Advanced Computing, Inc. | Application of Z-webs and Z-factors to analytics, search engine, learning, recognition, natural language, and other utilities |
US9218573B1 (en) * | 2012-05-22 | 2015-12-22 | Google Inc. | Training a model using parameter server shards |
US9141916B1 (en) * | 2012-06-29 | 2015-09-22 | Google Inc. | Using embedding functions with a deep network |
US9037464B1 (en) * | 2013-01-15 | 2015-05-19 | Google Inc. | Computing numeric representations of words in a high-dimensional space |
US9141906B2 (en) * | 2013-03-13 | 2015-09-22 | Google Inc. | Scoring concept terms using a deep network |
US9147154B2 (en) * | 2013-03-13 | 2015-09-29 | Google Inc. | Classifying resources using a deep network |
US9372914B1 (en) * | 2014-01-14 | 2016-06-21 | Google Inc. | Determining computing device characteristics from computer network activity |
-
2013
- 2013-03-13 US US13/802,184 patent/US9141906B2/en active Active
-
2014
- 2014-03-13 CN CN201480023391.7A patent/CN105144164B/en active Active
- 2014-03-13 WO PCT/US2014/026352 patent/WO2014160344A1/en active Application Filing
- 2014-03-13 EP EP14716710.0A patent/EP2973023A1/en not_active Ceased
- 2014-03-13 AU AU2014201827A patent/AU2014201827B2/en active Active
-
2015
- 2015-09-21 US US14/860,462 patent/US9514405B2/en active Active
Non-Patent Citations (2)
Title |
---|
None * |
See also references of WO2014160344A1 * |
Also Published As
Publication number | Publication date |
---|---|
US20140279773A1 (en) | 2014-09-18 |
CN105144164B (en) | 2020-10-27 |
AU2014201827B2 (en) | 2015-03-26 |
US9514405B2 (en) | 2016-12-06 |
US20160012331A1 (en) | 2016-01-14 |
WO2014160344A1 (en) | 2014-10-02 |
CN105144164A (en) | 2015-12-09 |
US9141906B2 (en) | 2015-09-22 |
AU2014201827A1 (en) | 2014-10-02 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9514405B2 (en) | Scoring concept terms using a deep network | |
US9449271B2 (en) | Classifying resources using a deep network | |
US11954597B2 (en) | Using embedding functions with a deep network | |
US11853879B2 (en) | Generating vector representations of documents | |
US20200372359A1 (en) | Wide and deep machine learning models | |
US11868724B2 (en) | Generating author vectors | |
US10102482B2 (en) | Factorized models | |
US10803380B2 (en) | Generating vector representations of documents | |
US20190197116A1 (en) | Intelligent Routing Services and Systems | |
US20220188366A1 (en) | Combined Wide And Deep Machine Learning Models For Automated Database Element Processing Systems, Methods And Apparatuses | |
US10755171B1 (en) | Hiding and detecting information using neural networks |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: REQUEST FOR EXAMINATION WAS MADE |
|
17P | Request for examination filed |
Effective date: 20150914 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
AX | Request for extension of the european patent |
Extension state: BA ME |
|
DAX | Request for extension of the european patent (deleted) | ||
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC |
|
APBK | Appeal reference recorded |
Free format text: ORIGINAL CODE: EPIDOSNREFNE |
|
APBN | Date of receipt of notice of appeal recorded |
Free format text: ORIGINAL CODE: EPIDOSNNOA2E |
|
APBR | Date of receipt of statement of grounds of appeal recorded |
Free format text: ORIGINAL CODE: EPIDOSNNOA3E |
|
APAF | Appeal reference modified |
Free format text: ORIGINAL CODE: EPIDOSCREFNE |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R003 |
|
APBT | Appeal procedure closed |
Free format text: ORIGINAL CODE: EPIDOSNNOA9E |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE APPLICATION HAS BEEN REFUSED |
|
18R | Application refused |
Effective date: 20211014 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230519 |
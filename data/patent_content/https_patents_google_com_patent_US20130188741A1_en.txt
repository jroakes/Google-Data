US20130188741A1 - Devices and methods for sample adaptive offset coding and/or selection of band offset parameters - Google Patents
Devices and methods for sample adaptive offset coding and/or selection of band offset parameters Download PDFInfo
- Publication number
- US20130188741A1 US20130188741A1 US13/734,765 US201313734765A US2013188741A1 US 20130188741 A1 US20130188741 A1 US 20130188741A1 US 201313734765 A US201313734765 A US 201313734765A US 2013188741 A1 US2013188741 A1 US 2013188741A1
- Authority
- US
- United States
- Prior art keywords
- values
- range
- offset
- value
- video
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
Images
Classifications
-
- H04N19/00903—
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/46—Embedding additional information in the video signal during the compression process
- H04N19/463—Embedding additional information in the video signal during the compression process by compressing encoding parameters before transmission
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/80—Details of filtering operations specially adapted for video compression, e.g. for pixel interpolation
- H04N19/82—Details of filtering operations specially adapted for video compression, e.g. for pixel interpolation involving filtering within a prediction loop
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/85—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using pre-processing or post-processing specially adapted for video compression
- H04N19/86—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using pre-processing or post-processing specially adapted for video compression involving reduction of coding artifacts, e.g. of blockiness
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/117—Filters, e.g. for pre-processing or post-processing
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/136—Incoming video signal characteristics or properties
- H04N19/14—Coding unit complexity, e.g. amount of activity or edge presence estimation
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/146—Data rate or code amount at the encoder output
- H04N19/147—Data rate or code amount at the encoder output according to rate distortion criteria
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/17—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object
- H04N19/176—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object the region being a block, e.g. a macroblock
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/189—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the adaptation method, adaptation tool or adaptation type used for the adaptive coding
- H04N19/19—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the adaptation method, adaptation tool or adaptation type used for the adaptive coding using optimisation based on Lagrange multipliers
Definitions
- the disclosure relates generally to the field of video coding, and more specifically to systems, devices and methods for sample adaptive offset (SAO) coding and/or selection of band offset (BO) parameters.
- SAO sample adaptive offset
- BO band offset
- Video compression uses block processing for many operations.
- a block of neighboring pixels is grouped into a coding unit and compression operations treat this group of pixels as one unit to take advantage of correlations among neighboring pixels within the coding unit.
- Block-based processing often includes prediction coding and transform coding.
- Transform coding with quantization is a type of data compression which is commonly “lossy” as the quantization of a transform block taken from a source picture often discards data associated with the transform block in the source picture, thereby lowering its bandwidth requirement but often also resulting in quality loss in reproducing of the original transform block from the source picture.
- MPEG-4 AVC also known as H.264
- H.264 is an established video compression standard that uses transform coding in block processing.
- a picture is divided into macroblocks (MBs) of 16 ⁇ 16 pixels.
- MB macroblocks
- Each MB is often further divided into smaller blocks.
- Blocks equal in size to or smaller than a MB are predicted using intra-/inter-picture prediction, and a spatial transform along with quantization is applied to the prediction residuals.
- the quantized transform coefficients of the residuals are commonly encoded using entropy coding methods (e.g., variable length coding or arithmetic coding).
- Context Adaptive Binary Arithmetic Coding was introduced in H.264 to provide a substantially lossless compression efficiency by combining an adaptive binary arithmetic coding technique with a set of context models.
- Context model selection plays a role in CABAC in providing a degree of adaptation and redundancy reduction.
- H.264 specifies two kinds of scan patterns over 2D blocks. A zigzag scan is used for pictures coded with progressive video compression techniques and an alternative scan is for pictures coded with interlaced video compression techniques.
- HEVC High Efficiency Video Coding
- HD high definition
- FIG. 1A is a video system in which the various embodiments of the disclosure may be used
- FIG. 1B is a computer system on which embodiments of the disclosure may be implemented
- FIGS. 2A , 2 B, 3 A and 3 B illustrate certain video encoding principles according to embodiments of the disclosure
- FIGS. 4A and 4B show possible architectures for an encoder and a decoder according to embodiments of the disclosure
- FIGS. 5A and 5B illustrate further video coding principles according to an embodiments of the disclosure
- FIG. 6 illustrates an example band offset specification according to embodiments of the disclosure
- FIG. 7 illustrates an example band offset specification having a distribution of values according to embodiments of the disclosure
- FIG. 8 illustrates an example band offset specification according to embodiments of the disclosure
- FIG. 9 illustrates an example architecture for coding of offsets according to embodiments of the disclosure.
- FIG. 10 illustrates an example band offset specification according to embodiments of the disclosure.
- a method for encoding sample adaptive offset (SAO) values in a video encoding process comprising: selecting a band offset type; determining a range of values associated with the selected band offset type, the range of values not being transmitted during encoding; generating one or more offset values for the selected band offset type; and optionally applying an offset value to at least a current pixel value to form an SAO compensated value.
- the range of values is determined based on a subset of pixel values in a unit.
- the subset of pixels in a unit is selected from the group consisting of: alternating samples, single quarter pixel samples, and corner and center samples of the unit.
- the band offset type is defined by the determined range of values.
- the range of values is specified by a start value and an end value.
- the range of values is partitioned into a number of sub-classes.
- the range of values is partitioned uniformly into a number of sub-classes, each sub-class having an equal width.
- the range of values determined by the video coding system is based in part on data in a video block.
- the range of values is based in part on rate-distortion considerations. In an embodiment of the first aspect, the range of values is determined from a maximum value and a minimum value derived from data in the video block. In an embodiment of the first aspect, the range of values is a statistical distribution of values within the range determined from the minimum value and maximum value. In an embodiment of the first aspect, the minimum value and maximum value is derived from a function or transformation of data in the video block. In an embodiment of the first aspect, the minimum value and maximum value is derived from the mean value of data in the video block.
- the method further comprises: determining one or more sub-classes for at least one band offset type, wherein the number of sub-classes are specified relative to the mean value.
- the one or more sub-classes are centered or shifted about the mean value.
- the band offset type includes a portion of the band defined by the range of values and a portion of the band on either edge of the range of values, wherein the offset value is applied to all portions of the band.
- the range of values is specified by a start value and an end value and wherein the offset value applied to the band that is proximate to the start value, but not included in the range of values, is the same offset applied to the range of values at the start value.
- the range of values is specified by a start value and an end value and wherein the offset value applied to the band that is proximate to the end value, but not included in the range of values, is the same offset applied to the range of values at the end value.
- the method further comprises: partitioning video data into blocks, wherein each of the blocks is equal to or smaller than a picture; applying SAO compensation to each of the pixels in a processed video block.
- the method is implemented on a computer having a processor and a memory coupled to said processor, wherein at least some of steps are performed using said processor.
- an apparatus configured to encode sample adaptive offset (SAO) values in a video coding process, the apparatus comprising: a video encoder configured to: partition video data into blocks, wherein each of the blocks is equal to or smaller than a picture; select a band offset type; determine a range of values associated with the selected band offset type, the range of values not being transmitted during encoding; generate one or more offset values for the selected band offset type; and apply the offset value to at least a current pixel value to form an SAO compensated value.
- SAO sample adaptive offset
- a method for decoding sample adaptive offset (SAO) values in a video decoding process comprising: (a) obtaining processed video data from a video bitstream; (b) partitioning the processed video data into blocks, wherein each of the blocks is equal to or smaller than a picture; (c) deriving an SAO type from the video bitstream for each of the blocks, wherein the SAO type is selected from the group consisting of one or more edge offset (EO) types and one or more band offset (BO) types; (d) determining an SAO sub-class associated with the BO type, wherein the sub-class is defined by a range of values that is derived from the processed video data, wherein the range of values is not transmitted to the decoding process; (e) deriving intensity offset from the video bitstream for the sub-class associated with the SAO type; and (f) applying SAO compensation to each of the pixels in a processed video block, wherein the SAO compensation is based on the intensity offset of step (e).
- SAO sample adaptive offset
- the range of values is determined from a maximum value and a minimum value derived from data in the video block. In an embodiment of the third aspect, the range of values is a statistical distribution of values within the range determined from the minimum value and maximum value. In an embodiment of the third aspect, the minimum value and maximum value is derived from a function or transformation of data in the video block. In an embodiment of the third aspect, the minimum value and maximum value is derived from the mean value of data in the video block. In an embodiment of the third aspect, the band offset type includes a portion of a band defined by the range of values and a portion of the band on either edge of the range of values, wherein the intensity offset is applied to all portions of the band.
- the range of values is specified by a start value and an end value and wherein the intensity offset is applied to the band that is proximate to the start value, but not included in the range of values, is the same offset applied to the range of values at the start value.
- the range of values is specified by a start value and an end value and wherein the intensity offset applied to the band that is proximate to the end value, but not included in the range of values, is the same offset applied to the range of values at the end value.
- the method is implemented on a computer having a processor and a memory coupled to said processor, wherein at least some of steps (a) through (f) are performed using said processor.
- an apparatus configured to decode sample adaptive offset (SAO) values in a video decoding process
- the apparatus comprising: a video decoder configured to: partition video data into blocks, wherein each of the blocks is equal to or smaller than a picture; derive an SAO type from the video bitstream for each of the blocks, wherein the SAO type is selected from the group consisting of one or more edge offset (EO) types and one or more band offset (BO) types; determine an SAO sub-class associated with the BO type; derive intensity offset from the video bitstream for the sub-class associated with the BO type, wherein the sub-class is defined by a range of values that is derived from the processed video data, wherein the range of values is not transmitted to the decoding process; and apply SAO compensation to each of the pixels in a processed video block, wherein the SAO compensation is based on the intensity offset.
- the apparatus comprises at least one of: an integrated circuit; a microprocessor; and a wireless communication device that includes the
- coding refers to encoding that occurs at the encoder or decoding that occurs at the decoder.
- coder refers to an encoder, a decoder, or a combined encoder/decoder (CODEC).
- CODEC combined encoder/decoder
- a video system may include a head end 100 of a cable television network.
- the head end 100 may be configured to deliver video content to neighborhoods 129 , 130 and 131 .
- the head end 100 may operate within a hierarchy of head ends, with the head ends higher in the hierarchy generally having greater functionality.
- the head end 100 may be communicatively linked to a satellite dish 112 and receive video signals for non-local programming from it.
- the head end 100 may also be communicatively linked to a local station 114 that delivers local programming to the head end 100 .
- the head end 100 may include a decoder 104 that decodes the video signals received from the satellite dish 112 , an off-air receiver 106 that receives the local programming from the local station 114 , a switcher 102 that routes data traffic among the various components of the head end 100 , encoders 116 that encode video signals for delivery to customers, modulators 118 that modulate signals for delivery to customers, and a combiner 120 that combines the various signals into a single, multi-channel transmission.
- a decoder 104 that decodes the video signals received from the satellite dish 112
- an off-air receiver 106 that receives the local programming from the local station 114
- a switcher 102 that routes data traffic among the various components of the head end 100
- encoders 116 that encode video signals for delivery to customers
- modulators 118 that modulate signals for delivery to customers
- a combiner 120 that combines the various signals into a single, multi-channel transmission.
- the head end 100 may also be communicatively linked to a hybrid fiber cable (HFC) network 122 .
- the HFC network 122 may be communicatively linked to a plurality of nodes 124 , 126 , and 128 .
- Each of the nodes 124 , 126 , and 128 may be linked by coaxial cable to one of the neighborhoods 129 , 130 and 131 and deliver cable television signals to that neighborhood.
- One of the neighborhoods 130 of FIG. 1A is shown in more detail.
- the neighborhood 130 may include a number of residences, including a home 132 shown in FIG. 1A . Within the home 132 may be a set-top box 134 communicatively linked to a video display 136 .
- the set-top box 134 may include a first decoder 138 and a second decoder 140 .
- the first and second decoders 138 and 140 may be communicatively linked to a user interface 142 and a mass storage device 144 .
- the user interface 142 may be communicatively linked to the video display 136 .
- head end 100 may receive local and nonlocal programming video signals from the satellite dish 112 and the local station 114 .
- the nonlocal programming video signals may be received in the form of a digital video stream, while the local programming video signals may be received as an analog video stream.
- local programming may also be received as a digital video stream.
- the digital video stream may be decoded by the decoder 104 and sent to the switcher 102 in response to customer requests.
- the head end 100 may also include a server 108 communicatively linked to a mass storage device 110 .
- the mass storage device 110 may store various types of video content, including video on demand (VOD), which the server 108 may retrieve and provide to the switcher 102 .
- VOD video on demand
- the switcher 102 may route local programming directly to the modulators 118 , which modulate the local programming, and route the non-local programming (including any VOD) to the encoders 116 .
- the encoders 116 may digitally encode the non-local programming.
- the encoded non-local programming may then be transmitted to the modulators 118 .
- the combiner 120 may be configured to receive the modulated analog video data and the modulated digital video data, combine the video data and transmit it via multiple radio frequency (RF) channels to the HFC network 122 .
- RF radio frequency
- the HFC network 122 may transmit the combined video data to the nodes 124 , 126 and 128 , which may retransmit the data to their respective neighborhoods 129 , 130 and 131 .
- the home 132 may receive this video data at the set-top box 134 , more specifically at the first decoder 138 and the second decoder 140 .
- the first and second decoders 138 and 140 may decode the digital portion of the video data and provide the decoded data to the user interface 142 , which then may provide the decoded data to the video display 136 .
- the encoders 116 and the decoders 138 and 140 of FIG. 1A may be implemented as computer code comprising computer readable instructions stored on a computer readable storage device, such as memory or another type of storage device.
- the computer code may be executed on a computer system by a processor, such as an application-specific integrated circuit (ASIC), or other type of circuit.
- ASIC application-specific integrated circuit
- computer code for implementing the encoders 116 may be executed on a computer system (such as a server) residing in the headend 100 .
- Computer code for the decoders 138 and 140 may be executed on the set-top box 134 , which constitutes a type of computer system.
- the code may exist as software programs comprised of program instructions in source code, object code, executable code or other formats. It should be appreciated that the computer code for the various components shown in FIG. 1A may reside anywhere in system 10 or elsewhere (such as in a cloud network), that is determined to be desirable or advantageous. Furthermore, the computer code may be located in one or more components, provided the instructions may be effectively performed by the one or more components.
- FIG. 1B shows an example of a computer system on which computer code for the encoders 116 and the decoders 138 and 140 may be executed.
- the computer system generally labeled 400 , includes a processor 401 , or processing circuitry, that may implement or execute software instructions performing some or all of the methods, functions and other steps described herein. Commands and data from processor 401 may be communicated over a communication bus 403 , for example.
- Computer system 400 may also include a computer readable storage device 402 , such as random access memory (RAM), where the software and data for processor 401 may reside during runtime. Storage device 402 may also include non-volatile data storage.
- Computer system 400 may include a network interface 404 for connecting to a network.
- the computer system 400 may reside in the headend 100 and execute the encoders 116 , and may also be embodied in the set-top box 134 to execute the decoders 138 and 140 . Additionally, the computer system 400 may reside in places other than the headend 100 and the set-top box 134 , and may be miniaturized so as to be integrated into a smartphone or tablet computer.
- Video encoding systems achieve compression by removing redundancy in the video data, e.g., by removing those elements that can be discarded without adversely affecting reproduction fidelity. Because video signals take place in time and space, most video encoding systems exploit both temporal and spatial redundancy present in these signals. Typically, there is high temporal correlation between successive frames. This is also true in the spatial domain for pixels which are close to each other. Thus, high compression gains are achieved by carefully exploiting these spatio-temporal correlations.
- HEVC High Efficiency Video Coding
- LCUs largest coding units
- CTUs coding tree units
- An LCU can be divided into four square blocks, called CUs (coding units), which are a quarter of the size of the LCU.
- CUs coding units
- Each CU can be further split into four smaller CUs, which are a quarter of the size of the original CU. The splitting process can be repeated until certain criteria are met.
- FIG. 3A shows an example of LCU partitioned into CUs.
- a flag is set to “1” if the node is further split into sub-nodes. Otherwise, the flag is unset at “0.”
- the LCU partition of FIG. 3A can be represented by the quadtree of FIG. 3B .
- These “split flags” may be jointly coded with other flags in the video bitstream, including a skip mode flag, a merge mode flag, and a predictive unit (PU) mode flag, and the like.
- the split flags 10100 could be coded as overhead along with the other flags. Syntax information for a given CU may be defined recursively, and may depend on whether the CU is split into sub-CUs.
- a CU that is not split may include one or more prediction units (PUs).
- PUs prediction units
- a PU represents all or a portion of the corresponding CU, and includes data for retrieving a reference sample for the PU for purposes of performing prediction for the CU.
- a final CU of 2N ⁇ 2N can possess one of four possible patterns (N ⁇ N, N ⁇ 2N, 2N ⁇ N and 2N ⁇ 2N), as shown in FIG. 2B . While shown for a 2N ⁇ 2N CU, other PUs having different dimensions and corresponding patterns (e.g., square or rectangular) may be used.
- a CU can be either spatially or temporally predictive coded. If a CU is coded in intra mode, each PU of the CU can have its own spatial prediction direction. If a CU is coded in inter mode, each PU of the CU can have its own motion vector(s) and associated reference picture(s).
- the data defining the motion vector may describe, for example, a horizontal component of the motion vector, a vertical component of the motion vector, a resolution for the motion vector (e.g., one-quarter pixel precision or one-eighth pixel precision), a reference frame to which the motion vector points, and/or a reference list (e.g., list 0 or list 1) for the motion vector.
- Data for the CU defining the one or more PUs of the CU may also describe, for example, partitioning of the CU into the one or more PUs. Partitioning modes may differ between whether the CU is uncoded, intra-prediction mode encoded, or inter-prediction mode encoded.
- the prediction can be formed by a weighted average of the previously encoded samples, located above and to the left of the current block.
- the encoder may select the mode that minimizes the difference or cost between the original and the prediction and signals this selection in the control data.
- inter-prediction encoding video sequences have high temporal correlation between frames, enabling a block in the current frame to be accurately described by a region in the previous coded frames, which are known as reference frames.
- Inter-prediction utilizes previously encoded and reconstructed reference frames to develop a prediction using a block-based motion estimation and compensation technique.
- Quantization generally refers to a process in which transform coefficients are quantized to possibly reduce the amount of data used to represent the coefficients, e.g., by converting high precision transform coefficients into a finite number of possible values.
- Each CU can also be divided into transform units (TUs) by application of a block transform operation.
- a block transform operation tends to decorrelate the pixels within the block and compact the block energy into the low order coefficients of the transform block.
- one transform of 8 ⁇ 8 or 4 ⁇ 4 may be applied.
- a set of block transforms of different sizes may be applied to a CU, as shown in FIG. 5A where the left block is a CU partitioned into PUs and the right block is the associated set of transform units (TUs).
- the size and location of each block transform within a CU is described by a separate quadtree, called RQT.
- FIG. 5B shows the quadtree representation of TUs for the CU in the example of FIG. 5A . In this example, 11000 is coded and transmitted as part of the overhead.
- the TUs and PUs of any given CU may be used for different purposes.
- TUs are typically used for transformation, quantizing and coding operations
- PUs are typically used for spatial and temporal prediction. There is not necessarily a direct relationship between the number of PUs and the number of TUs for a given CU.
- Video blocks may comprise blocks of pixel data in the pixel domain, or blocks of transform coefficients in the transform domain, e.g., following application of a transform, such as a discrete cosine transform (DCT), an integer transform, a wavelet transform, or a conceptually similar transform to residual data for a given video block, wherein the residual data represents pixel differences between video data for the block and predictive data generated for the block.
- video blocks may comprise blocks of quantized transform coefficients in the transform domain, wherein, following application of a transform to residual data for a given video block, the resulting transform coefficients are also quantized.
- quantization is the step that introduces loss, so that a balance between bitrate and reconstruction quality can be established.
- Block partitioning serves an important purpose in block-based video coding techniques. Using smaller blocks to code video data may result in better prediction of the data for locations of a video frame that include high levels of detail, and may therefore reduce the resulting error (e.g., deviation of the prediction data from source video data), represented as residual data.
- prediction exploits the spatial or temporal redundancy in a video sequence by modeling the correlation between sample blocks of various dimensions, such that only a small difference between the actual and the predicted signal needs to be encoded. A prediction for the current block is created from the samples which have already been encoded. While potentially reducing the residual data, such techniques may, however, require additional syntax information to indicate how the smaller blocks are partitioned relative to a video frame, and may result in an increased coded video bitrate. Accordingly, in some techniques, block partitioning may depend on balancing the desirable reduction in residual data against the resulting increase in bitrate of the coded video data due to the additional syntax information.
- blocks and the various partitions thereof may be considered video blocks.
- a slice may be considered to be a plurality of video blocks (e.g., macroblocks, or coding units), and/or sub-blocks (partitions of macroblocks, or sub-coding units).
- Each slice may be an independently decodable unit of a video frame.
- frames themselves may be decodable units, or other portions of a frame may be defined as decodable units.
- a GOP also referred to as a group of pictures, may be defined as a decodable unit.
- the encoders 116 may be, according to an embodiment of the disclosure, composed of several functional modules as shown in FIG. 4A . These modules may be implemented as hardware, software, or any combination of the two. Given a current PU, x, a prediction PU, x′, may first be obtained through either spatial prediction or temporal prediction. This spatial or temporal prediction may be performed by a spatial prediction module 129 or a temporal prediction module 130 respectively.
- the spatial prediction module 129 can perform per PU, including horizontal, vertical, 45-degree diagonal, 135-degree diagonal, DC, Planar, etc.
- an additional mode called IntraFromLuma
- a syntax indicates the spatial prediction direction per PU.
- the encoder 116 may perform temporal prediction through motion estimation operation. Specifically, the temporal prediction module 130 ( FIG. 4A ) may search for a best match prediction for the current PU over reference pictures.
- the best match prediction may be described by motion vector (MV) and associated reference picture (refIdx).
- MV motion vector
- refIdx reference picture
- a PU in B pictures can have up to two MVs. Both MV and refIdx may be part of the syntax in the bitstream.
- the prediction PU may then be subtracted from the current PU, resulting in the residual PU, e.
- the residual PU, e may then be transformed by a transform module 117 , one transform unit (TU) at a time, resulting in the residual PU in the transform domain, E.
- the transform module 117 may use e.g., either a square or a non-square block transform.
- the transform coefficients E may then be quantized by a quantizer module 118 , converting the high precision transform coefficients into a finite number of possible values.
- the quantization process may reduce the bit depth associated with some or all of the coefficients. For example, an n-bit value may be rounded down to an m-bit value during quantization, where n is greater than m.
- external boundary conditions are used to produce modified one or more transform coefficients. For example, a lower range or value may be used in determining if a transform coefficient is given a nonzero value or just zeroed out.
- quantization is a lossy operation and the loss by quantization generally cannot be recovered.
- the quantized coefficients may then be entropy coded by an entropy coding module 120 , resulting in the final compression bits.
- the specific steps performed by the entropy coding module 120 will be discussed below in more detail.
- the encoder 116 may also take the quantized transform coefficients E and dequantize them with a dequantizer module 122 resulting in the dequantized transform coefficients E′.
- the dequantized transform coefficients are then inverse transformed by an inverse transform module 124 , resulting in the reconstructed residual PU, e′.
- the reconstructed residual PU, e′ is then added to the corresponding prediction, x′, either spatial or temporal, to form a reconstructed PU, x”.
- a deblocking filter (DBF) operation may be performed on the reconstructed PU, x′′, first to reduce blocking artifacts.
- a sample adaptive offset (SAO) process may be conditionally performed after the completion of the deblocking filter process for the decoded picture, which compensates the pixel value offset between reconstructed pixels and original pixels.
- both the DBF operation and SAO process are implemented by adaptive loop filter functions, which may be performed conditionally by a loop filter module 126 over the reconstructed PU.
- the adaptive loop filter functions minimize the coding distortion between the input and output pictures.
- loop filter module 126 operates during an inter-picture prediction loop. If the reconstructed pictures are reference pictures, they may be stored in a reference buffer 128 for future temporal prediction.
- HEVC specifies two loop filters that are applied in order with the de-blocking filter (DBF) applied first and the sample adaptive offset (SAO) filter applied afterwards.
- the DBF is similar to the one used by H.264/MPEG-4 AVC but with a simpler design and better support for parallel processing.
- the DBF only applies to an 8 ⁇ 8 sample grid while with H.264/MPEG-4 AVC the DBF applies to a 4 ⁇ 4 sample grid.
- DBF uses an 8 ⁇ 8 sample grid since it causes no noticeable degradation and significantly improves parallel processing because the DBF no longer causes cascading interactions with other operations.
- Another change is that HEVC only allows for three DBF strengths of 0 to 2.
- HEVC also requires that the DBF first apply horizontal filtering for vertical edges to the picture and only after that does it apply vertical filtering for horizontal edges to the picture. This allows for multiple parallel threads to be used for the DBF.
- the SAO filter process is applied after the DBF and is made to allow for better reconstruction of the original signal amplitudes by using e.g., a look up table that includes some parameters that are based on a histogram analysis made by the encoder.
- the SAO filter has two basic types which are the edge offset (EO) type and the band offset (BO) type.
- One of the SAO types can be applied per coding tree block (CTB).
- the edge offset (EO) type has four sub-types corresponding to processing along four possible directions (e.g., horizontal, vertical, 135 degree, and 45 degree). For a given EO sub-type, the edge offset (EO) processing operates by comparing the value of a pixel to two of its neighbors using one of four different gradient patterns.
- An offset is applied to pixels in each of the four gradient patterns. For pixel values that are not in one of the gradient patterns, no offset is applied.
- the band offset (BO) processing is based directly on the sample amplitude which is split into 32 bands.
- An offset is applied to pixels in 16 of the 32 bands, where a group of 16 bands corresponds to a BO sub-type.
- the SAO filter process was designed to reduce distortion compared to the original signal by adding an offset to sample values. It can increase edge sharpness and reduce ringing and impulse artifacts. Further detail on the SAO process will be discussed below with reference to FIGS. 6-10 .
- intra pictures such as an I picture
- inter pictures such as P pictures or B pictures
- An intra picture may be coded without referring to other pictures.
- spatial prediction may be used for a CU/PU inside an intra picture.
- An intra picture provides a possible point where decoding can begin.
- an inter picture generally aims for high compression.
- Inter picture supports both intra and inter prediction.
- a CU/PU in inter picture is either spatially or temporally predictive coded. Temporal references are the previously coded intra or inter pictures.
- the entropy coding module 120 takes the quantized matrix of coefficients received from the quantizer module 118 and uses it to generate a sign matrix that represents the signs of all of the quantized coefficients and to generate a significance map.
- a significance map may be a matrix in which each element specifies the position(s) of the non-zero quantized coefficient(s) within the quantized coefficient matrix. Specifically, given a quantized 2D transformed matrix, if the value of a quantized coefficient at a position (y, x) is non-zero, it may be considered as significant and a “1” is assigned for the position (y, x) in the associated significance map. Otherwise, a “0” is assigned to the position (y, x) in the significance map.
- the entropy coding module 120 may code the significance map. In one embodiment, this is accomplished by using a context-based adaptive binary arithmetic coding (CABAC) technique. In doing so, the entropy coding module 120 scans the significance map along a scanning line and, for each entry in the significance map, the coding module chooses a context model for that entry. The entropy coding module 120 then codes the entry based on the chosen context model. That is, each entry is assigned a probability based on the context model (the mathematical probability model) being used. The probabilities are accumulated until the entire significance map has been encoded.
- CABAC context-based adaptive binary arithmetic coding
- the value output by the entropy coding module 120 as well as the entropy encoded signs, significance map and non-zero coefficients may be inserted into the bitstream by the encoder 116 ( FIG. 1A ). This bitstream may be sent to the decoders 138 and 140 over the HFC network 122 .
- prediction, transform, and quantization described above may be performed for any block of video data, e.g., to a PU and/or TU of a CU, or to a macroblock, depending on the specified coding standard.
- An entropy decoding module 146 of the decoder 145 may decode the sign values, significance map and non-zero coefficients to recreate the quantized and transformed coefficients.
- the entropy decoding module 146 may perform the reverse of the procedure described in conjunction with the entropy coding module 120 —decoding the significance map along a scanning pattern made up of scanning lines.
- the entropy decoding module 146 then may provide the coefficients to a dequantizer module 147 , which dequantizes the matrix of coefficients, resulting in E′.
- the dequantizer module 147 may provide the dequantized coefficients to an inverse transform module 149 .
- the inverse transform module 149 may perform an inverse transform operation on the coefficients resulting in e′. Filtering and spatial prediction may be applied in a manner described in conjunction with FIG. 4A .
- an encoder categorizes the pixels into one of six possible types (both types and sub-types are collectively referred to as types here): four edges offset (EO) types E0, E1, E2, E3 and two band offset (BO) types B0, B1.
- EO edges offset
- BO band offset
- the pixels are further sub-categorized into one of five possible sub-classes based upon local behavior along the EO type direction. These five sub-classes are described in further detail below.
- the pixels are further sub-categorized into one of sixteen possible sub-classes based upon intensity.
- the same offset is applied for a given sub-class of pixels within an SAO type. For example, if the offset for sub-class i is o i , then the SAO output corresponding to an input of p i will be p i +o i .
- the encoder may signal to the decoder the SAO type per partition and the corresponding offsets per sub-class, and the decoder may perform the classification for the SAO type and applies the offsets per sub-class to each pixel.
- the SAO type can be signaled per color component, or a given type can be signaled and used for more than one color component. In some embodiments, it is also possible for the encoder to not use or turn off SAO, and this can also be signaled to the decoder.
- HE high efficiency
- LC low complexity
- VLCs variable length codewords
- CABAC context-based adaptive binary arithmetic coding
- an encoder may signal the SAO type using a unary code, for example (0's and 1's can be interchanged) as shown in Table 1:
- units or digits within a codeword may be referred to as “bits” for LC and “bins” for HE.
- bits for LC
- bins for HE.
- the difference in terminology is a result of applying CABAC to the codeword in the HE method.
- units includes both bins and bits in codewords.
- SAO uses two fixed band types, B0 and B1, covering the entire intensity range, with each band further dividing the respective intensity range into 16 equal sub-classes.
- An offset can be signaled for each of the sub-classes. Because the statistics of a given picture may not fall nicely into one of the two existing band types, B0 and B1, it may be preferable to combine or merge the bands.
- one band type can be used, where the range of values to apply an offset can be specified, and a number of sub-classes for the range can be specified, e.g., using a uniform sub-partitioning. An example of such partitioning using a single band type is illustrated in FIG. 6 .
- the range of values define the one or more sub-classes.
- the range of values where the offset is applied can be determined based on the data and on rate-distortion considerations.
- the offsets may generally be applied to values where the distortion can be reduced.
- SAO selection type need not be performed, such as when there is a single band type and no other SAO type. In such instances, the single band type is used without the additional steps associated with SAO selection.
- the start of the band is specified by b s , and N s sub-classes of width w s can be used.
- four offsets can be signaled to the decoder for the four sub-classes.
- the last sub-class exceeds the maximum intensity range, the last sub-class can end at the maximum value or wrap around to zero. Additional discussion on BO sub-classes can be found in U.S.
- b s is transmitted from the encoder to the decoder.
- N s is transmitted from the encoder to the decoder.
- w s is transmitted from the encoder to the decoder.
- a fixed set of values of b s , N s and/or w s can be specified and agreed upon at the encoder and/or decoder.
- only some parameters e.g., the unspecified values
- these parameters can be signaled to the decoder and can be determined for e.g., per partition, LCU, slice (or other unit), picture, group of pictures, sequence, etc.
- a unit refers to data that both the encoder and decoder have and are configured to derive SAO parameters from.
- a unit may refer to an LCU, slice, picture, etc.
- the unit may be specified implicitly (e.g., fixed, slice-dependent, prediction list-based, etc.) or explicitly (e.g., in sequence or slice header, etc.).
- the range of reconstructed values can be determined after the unit is encoded or decoded, and the BO type may be derived from this range.
- the unit can be signaled from the encoder to the decoder, or derived from other coding parameters.
- Examples of the unit can include an LCU, slice, picture, or group of pictures.
- the set of values for which SAO is applied can be determined from the unit or a portion of the unit.
- the set of values can be determined from a subset of samples in the unit, e.g. alternating samples, the first quarter LCU pixel samples (e.g., top left quarter of the unit), the four corner and center samples of the unit, pixel samples that are not affected by the deblocking filter, etc.
- an SAO unit size may be selected that is suitable for typical data, which yields good performance given the number of offsets applied, without requiring too much buffer, delay, etc.
- an LCU unit in the range of 16 ⁇ 16 to 128 ⁇ 128 may be generally suitable for one or more processes described herein.
- the encoder and decoder can decode an LCU and determine the range of values [min, max] in the LCU.
- a BO type (or types) can then be defined based on the range of values [min, max]. That is, the range of values [b s , e s ] in FIG. 6 for a BO type can be derived based on [min, max], with b s denoting the start of the BO type and e s denoting the end of the BO type.
- the band can be divided into N s sub-classes (note that N s can be different for different BO types), for example, N s sub-classes of equal width w s .
- the number of sub-classes N s or width w s may be agreed upon at the encoder and decoder, as described above, or it can be transmitted for the LCU, at LCU level, slice level picture level, etc. for one or more color planes.
- Four BO types are defined by B 0 , B 1 , B 2 , and B 3 (in general BO types can cover overlapping or non-overlapping pixel values.).
- N i sub-classes can be defined by uniform or non-uniform partitioning of the B i range.
- the sub-classes can be distributed among the two intervals shown.
- the additional information about the BO types and sub-classes shown in FIG. 7 can either be transmitted to the decoder or agreed upon the encoder and decoder. Alternatively, they can be derived (and not transmitted) based upon statistical properties of the values, such as the mean, variance, etc.
- the b s and e s values can be obtained from the minimum and maximum values in the subset of samples.
- the b s and e s values may be determined based on a function or transformation of the samples.
- a transformation such as a DCT can be used, and b s and e s can be derived from the transformed values, e.g. DC coefficient, AC coefficient, etc.
- w i and v i can be, for example, DCT coefficients.
- the mean of the values may be used to specify the location of sub-class intervals for a BO type.
- the mean may be computed on a subset of values within the unit (e.g., LCU) and the subset of values can be in a certain region in the unit, alternating samples (or every n th sample horizontally and mth sample vertically), etc.
- a benefit of computing the mean value is that only one addition per pixel is performed in the subset of unit (e.g., LCU) and a division operation, or if the number of samples is 2 n , a shift of the final total by n bits. For example, if the number of samples over which the mean (average) value is computed is a power of two, then the division by that number can be achieved by a bit shift, which can require less computation than a general division operation.
- a BO type and/or set of sub-classes can then be derived based on the mean value. For example, a number of sub-classes can be specified relative to the mean value. The sub-classes can be centered or shifted about the mean and can cover a limited range or extended to cover the entire range (e.g., by extending the range of the first and last sub-classes as explained in further detail below).
- FIG. 8 shows an example where a BO type is specified using the mean value (m) and a width (w s ) for a case of 4 sub-classes with extended first and last sub-classes.
- the mean can be the center (or approximately the center) of that span.
- the mean can indicate the center (or approximately the center) of all sub-classes.
- the entire range may be divided into fixed intervals.
- the sub-class can be defined as the interval in which the mean value is located.
- adjacent intervals can be chosen, for example, centered about the interval with the mean value.
- This mapping may be achieved using a look-up table or by other means (e.g., binary-shift of pixels values).
- each pixel value may be shifted by 3 binary positions to the right to get the band-index.
- the band-index is useful is determining which offset should be applied to each pixel.
- a combination of pixel value shift and merging offsets may be used to map pixel values in non-uniform and/or discontinuous situations.
- the finest granularity of offset-intervals may be defined by shift and they may then be merged based on min-max or some other conditions to include only N contiguous offset.
- 4 offsets are transmitted, to be applied to 4 regions which are not necessarily uniform or contiguous.
- the BO type parameters need not be transmitted, thereby saving on overhead bits.
- the BO parameters for a current unit can be determined based on a unit previously available to the encoder and decoder. Using previously available unit parameters may reduce latency so that SAO processing can begin on the first sample in the unit without needing to process the unit to determine the BO type parameters.
- a collocated unit or motion-compensated unit from a previously coded picture can be used to determine the BO parameters for a current unit.
- sub-classes with no pixels in the respective intensity range there may be many sub-classes with no pixels in the respective intensity range (e.g., also known as empty sub-classes).
- these sub-classes with a zero offset in some embodiments, only the offset values for those sub-classes that have pixel intensity values are encoded and signaled.
- Such encoding of sub-classes that have pixel intensity values may be achieved by additionally encoding an escape code or end-of-offset code to signal no more offset values. This escape code can be, for example, a value that is larger than the maximum offset value used.
- This approach can be beneficial when there are many empty sub-classes; however, in cases where there are not many empty sub-classes, a combination of only encoding sub-classes having intensity pixel values and encoding sub-classes with a zero offset may be implemented.
- the approach can be used for signaling of offsets in both band offset and edge offset types. For the case of edge offset types, an empty sub-class corresponds to the case where there are no pixels with the respective gradient pattern. Additional discussion on offset for empty sub-classes can be found in U.S. patent application Ser. Nos. 13/672,476 and 13/672,484, previously incorporated by reference in their entirety.
- the decoder receives information on a band offset specification type such as shown in FIG. 6 .
- the decoder classifies the reconstructed pixel values into the sub-classes according to their intensities.
- the decoder receives the sequences of offset values, it can assign the offsets to each sub-class according to where pixel intensities exist in the sub-class.
- FIG. 9 illustrates this as an example.
- FIG. 9 shows an example of BO with eight sub-classes 0 - 7 .
- the locations of the eight sub-classes or range of pixel amplitudes can be signaled to the decoder using methods previously described.
- there are only pixel intensities in sub-classes 1 and 6 while there are no pixel intensities in sub-classes 0 , 2 , 3 , 4 , 5 , and 7 .
- the latter sub-classes are empty and so no offsets need to be signaled.
- the offset value of 2 for sub-class 1 and value of ⁇ 1 for sub-class 6 can be signaled, followed by an optional escape value signaling no more offset values. If the escape value is not signaled, then it is assumed that the decoder performs pixel classification into sub-classes prior to parsing the offset values. After the decoder receives the information specifying the BO sub-classes using methods such as previously described, it can classify the pixel intensities. After classifying the pixel intensities, the decoder assigns the first offset value of 2 to the first non-empty sub-class of 1 and the second offset value of ⁇ 1 to the second non-empty sub-class of 6.
- the interval can then be partitioned into sub-classes.
- FIG. 6 shows the sub-classes of equal intervals, although this need not be the case.
- no offset is transmitted or applied for values outside the range from b s to e s .
- values may occur outside the range if b s and e s are determined from a subset of samples in the unit, while the offset is applied to all the samples in the unit or to samples outside the subset. In such instances, it may be beneficial to apply an offset (e.g., non-zero) to these values outside the range.
- FIG. 10 illustrates a method for applying an offset to values outside the b s and e s ranges, where the first and last sub-classes are extended to the smallest and largest possible values (e.g. 0 and 255, respectively). This is one example of non-uniform interval BO sub-classes, and other examples are possible.
- the offsets for each sub-class can be determined based on e.g., RD optimization of a subset of samples or for all the samples in the unit.
- the complexity of SAO BO can be reduced.
- the additional out of range checks are not needed.
- the first and last sub-classes in a BO type can be extended to cover more pixel values with the potential to increase coding efficiency and/or reduce complexity.
- the “first” boundary (after 0) can be specified as b_s+w_s
- the “last” boundary (before 255) can be specified as e_s ⁇ w_s, with N_s ⁇ 2 intervals in between.
- the modifications described herein may allow for less overhead, computation, and latency for specification and processing using SAO BO.
- the BO can be specified and applied to any or all color components, and the number of offsets can be different for each color component. For example, luma BO may have 4 offsets and chroma BO may have 2 offsets.
- SAO band types and offsets described herein can be signaled at a partition, LCU, slice, picture, group of pictures, or sequence level. They can also be combined with EO types and offsets signaled at the partition, LCU, slice, picture, group of pictures, or sequence level.
Abstract
Description
- The present application claims the benefit of U.S. provisional patent application No. 61/589,298, entitled “Modified SAO Band Offset Type and Classes” filed Jan. 21, 2012, U.S. provisional patent application No. 61/597,041, entitled “Modifications to SAO Band Offset and Edge Offset” filed Feb. 9, 2012, U.S. provisional patent application No. 61/616,373, entitled “Modifications to SAO Band Offset” filed Mar. 27, 2012, and U.S. provisional patent application No. 61/619,916, entitled “Modifications to SAO Band Offset” filed Apr. 3, 2012, which are incorporated herein by reference in their entirety.
- The disclosure relates generally to the field of video coding, and more specifically to systems, devices and methods for sample adaptive offset (SAO) coding and/or selection of band offset (BO) parameters.
- Video compression uses block processing for many operations. In block processing, a block of neighboring pixels is grouped into a coding unit and compression operations treat this group of pixels as one unit to take advantage of correlations among neighboring pixels within the coding unit. Block-based processing often includes prediction coding and transform coding. Transform coding with quantization is a type of data compression which is commonly “lossy” as the quantization of a transform block taken from a source picture often discards data associated with the transform block in the source picture, thereby lowering its bandwidth requirement but often also resulting in quality loss in reproducing of the original transform block from the source picture.
- MPEG-4 AVC, also known as H.264, is an established video compression standard that uses transform coding in block processing. In H.264, a picture is divided into macroblocks (MBs) of 16×16 pixels. Each MB is often further divided into smaller blocks. Blocks equal in size to or smaller than a MB are predicted using intra-/inter-picture prediction, and a spatial transform along with quantization is applied to the prediction residuals. The quantized transform coefficients of the residuals are commonly encoded using entropy coding methods (e.g., variable length coding or arithmetic coding). Context Adaptive Binary Arithmetic Coding (CABAC) was introduced in H.264 to provide a substantially lossless compression efficiency by combining an adaptive binary arithmetic coding technique with a set of context models. Context model selection plays a role in CABAC in providing a degree of adaptation and redundancy reduction. H.264 specifies two kinds of scan patterns over 2D blocks. A zigzag scan is used for pictures coded with progressive video compression techniques and an alternative scan is for pictures coded with interlaced video compression techniques.
- HEVC (High Efficiency Video Coding), an international video coding standard developed to succeed H.264, extends transform block sizes to 16×16 and 32×32 pixels to benefit high definition (HD) video coding.
- The details of the present disclosure, both as to its structure and operation, may be understood in part by study of the accompanying drawings, in which like reference numerals refer to like parts. The drawings are not necessarily to scale, emphasis instead being placed upon illustrating the principles of the disclosure.
-
FIG. 1A is a video system in which the various embodiments of the disclosure may be used; -
FIG. 1B is a computer system on which embodiments of the disclosure may be implemented; -
FIGS. 2A , 2B, 3A and 3B illustrate certain video encoding principles according to embodiments of the disclosure; -
FIGS. 4A and 4B show possible architectures for an encoder and a decoder according to embodiments of the disclosure; -
FIGS. 5A and 5B illustrate further video coding principles according to an embodiments of the disclosure; -
FIG. 6 illustrates an example band offset specification according to embodiments of the disclosure; -
FIG. 7 illustrates an example band offset specification having a distribution of values according to embodiments of the disclosure; -
FIG. 8 illustrates an example band offset specification according to embodiments of the disclosure; -
FIG. 9 illustrates an example architecture for coding of offsets according to embodiments of the disclosure; -
FIG. 10 illustrates an example band offset specification according to embodiments of the disclosure. - Accordingly, there is provided herein systems and methods that improve video quality by selection, coding, and signaling of parameters in a sample adaptive offset (SAO) process. The methods and systems described herein generally pertain to video processing such as video encoders and decoders.
- In a first aspect, a method for encoding sample adaptive offset (SAO) values in a video encoding process is provided, the method comprising: selecting a band offset type; determining a range of values associated with the selected band offset type, the range of values not being transmitted during encoding; generating one or more offset values for the selected band offset type; and optionally applying an offset value to at least a current pixel value to form an SAO compensated value. In an embodiment of the first aspect, the range of values is determined based on a subset of pixel values in a unit. In an embodiment of the first aspect, the subset of pixels in a unit is selected from the group consisting of: alternating samples, single quarter pixel samples, and corner and center samples of the unit. In an embodiment of the first aspect, the band offset type is defined by the determined range of values. In an embodiment of the first aspect, the range of values is specified by a start value and an end value. In an embodiment of the first aspect, the range of values is partitioned into a number of sub-classes. In an embodiment of the first aspect, the range of values is partitioned uniformly into a number of sub-classes, each sub-class having an equal width. In an embodiment of the first aspect, the range of values determined by the video coding system is based in part on data in a video block.
- In an embodiment of the first aspect, the range of values is based in part on rate-distortion considerations. In an embodiment of the first aspect, the range of values is determined from a maximum value and a minimum value derived from data in the video block. In an embodiment of the first aspect, the range of values is a statistical distribution of values within the range determined from the minimum value and maximum value. In an embodiment of the first aspect, the minimum value and maximum value is derived from a function or transformation of data in the video block. In an embodiment of the first aspect, the minimum value and maximum value is derived from the mean value of data in the video block. In an embodiment of the first aspect, the method further comprises: determining one or more sub-classes for at least one band offset type, wherein the number of sub-classes are specified relative to the mean value. In an embodiment of the first aspect, the one or more sub-classes are centered or shifted about the mean value. In an embodiment of the first aspect, the band offset type includes a portion of the band defined by the range of values and a portion of the band on either edge of the range of values, wherein the offset value is applied to all portions of the band. In an embodiment of the first aspect, the range of values is specified by a start value and an end value and wherein the offset value applied to the band that is proximate to the start value, but not included in the range of values, is the same offset applied to the range of values at the start value. In an embodiment of the first aspect, the range of values is specified by a start value and an end value and wherein the offset value applied to the band that is proximate to the end value, but not included in the range of values, is the same offset applied to the range of values at the end value. In an embodiment of the first aspect, the method further comprises: partitioning video data into blocks, wherein each of the blocks is equal to or smaller than a picture; applying SAO compensation to each of the pixels in a processed video block. In an embodiment of the first aspect, the method is implemented on a computer having a processor and a memory coupled to said processor, wherein at least some of steps are performed using said processor.
- In a second aspect, an apparatus configured to encode sample adaptive offset (SAO) values in a video coding process is provided, the apparatus comprising: a video encoder configured to: partition video data into blocks, wherein each of the blocks is equal to or smaller than a picture; select a band offset type; determine a range of values associated with the selected band offset type, the range of values not being transmitted during encoding; generate one or more offset values for the selected band offset type; and apply the offset value to at least a current pixel value to form an SAO compensated value.
- In a third aspect, a method for decoding sample adaptive offset (SAO) values in a video decoding process is provided, the method comprising: (a) obtaining processed video data from a video bitstream; (b) partitioning the processed video data into blocks, wherein each of the blocks is equal to or smaller than a picture; (c) deriving an SAO type from the video bitstream for each of the blocks, wherein the SAO type is selected from the group consisting of one or more edge offset (EO) types and one or more band offset (BO) types; (d) determining an SAO sub-class associated with the BO type, wherein the sub-class is defined by a range of values that is derived from the processed video data, wherein the range of values is not transmitted to the decoding process; (e) deriving intensity offset from the video bitstream for the sub-class associated with the SAO type; and (f) applying SAO compensation to each of the pixels in a processed video block, wherein the SAO compensation is based on the intensity offset of step (e). In an embodiment of the third aspect, the range of values is determined from a maximum value and a minimum value derived from data in the video block. In an embodiment of the third aspect, the range of values is a statistical distribution of values within the range determined from the minimum value and maximum value. In an embodiment of the third aspect, the minimum value and maximum value is derived from a function or transformation of data in the video block. In an embodiment of the third aspect, the minimum value and maximum value is derived from the mean value of data in the video block. In an embodiment of the third aspect, the band offset type includes a portion of a band defined by the range of values and a portion of the band on either edge of the range of values, wherein the intensity offset is applied to all portions of the band. In an embodiment of the third aspect, the range of values is specified by a start value and an end value and wherein the intensity offset is applied to the band that is proximate to the start value, but not included in the range of values, is the same offset applied to the range of values at the start value. In an embodiment of the third aspect, wherein the range of values is specified by a start value and an end value and wherein the intensity offset applied to the band that is proximate to the end value, but not included in the range of values, is the same offset applied to the range of values at the end value. In an embodiment of the third aspect, the method is implemented on a computer having a processor and a memory coupled to said processor, wherein at least some of steps (a) through (f) are performed using said processor.
- In a fourth aspect, an apparatus configured to decode sample adaptive offset (SAO) values in a video decoding process is provided, the apparatus comprising: a video decoder configured to: partition video data into blocks, wherein each of the blocks is equal to or smaller than a picture; derive an SAO type from the video bitstream for each of the blocks, wherein the SAO type is selected from the group consisting of one or more edge offset (EO) types and one or more band offset (BO) types; determine an SAO sub-class associated with the BO type; derive intensity offset from the video bitstream for the sub-class associated with the BO type, wherein the sub-class is defined by a range of values that is derived from the processed video data, wherein the range of values is not transmitted to the decoding process; and apply SAO compensation to each of the pixels in a processed video block, wherein the SAO compensation is based on the intensity offset. In an embodiment of the fourth aspect, the apparatus comprises at least one of: an integrated circuit; a microprocessor; and a wireless communication device that includes the video decoder.
- In this disclosure, the term “coding” refers to encoding that occurs at the encoder or decoding that occurs at the decoder. Similarly, the term coder refers to an encoder, a decoder, or a combined encoder/decoder (CODEC). The terms coder, encoder, decoder and CODEC all refer to specific machines designed for the coding (encoding and/or decoding) of video data consistent with this disclosure.
- The present discussion begins with a very brief overview of some terms and techniques known in the art of digital image compression. This overview is not meant to teach the known art in any detail. Those skilled in the art know how to find greater details in textbooks and in the relevant standards.
- An example of a video system in which an embodiment of the disclosure may be used will now be described. It is understood that elements depicted as function blocks in the figures may be implemented as hardware, software, or a combination thereof. Furthermore, embodiments of the disclosure may also be employed on other systems, such as on a personal computer, smartphone or tablet computer.
- Referring to
FIG. 1A , a video system, generally labeled 10, may include ahead end 100 of a cable television network. Thehead end 100 may be configured to deliver video content toneighborhoods head end 100 may operate within a hierarchy of head ends, with the head ends higher in the hierarchy generally having greater functionality. Thehead end 100 may be communicatively linked to asatellite dish 112 and receive video signals for non-local programming from it. Thehead end 100 may also be communicatively linked to alocal station 114 that delivers local programming to thehead end 100. Thehead end 100 may include adecoder 104 that decodes the video signals received from thesatellite dish 112, an off-air receiver 106 that receives the local programming from thelocal station 114, aswitcher 102 that routes data traffic among the various components of thehead end 100,encoders 116 that encode video signals for delivery to customers,modulators 118 that modulate signals for delivery to customers, and acombiner 120 that combines the various signals into a single, multi-channel transmission. - The
head end 100 may also be communicatively linked to a hybrid fiber cable (HFC)network 122. TheHFC network 122 may be communicatively linked to a plurality ofnodes nodes neighborhoods neighborhoods 130 ofFIG. 1A is shown in more detail. Theneighborhood 130 may include a number of residences, including ahome 132 shown inFIG. 1A . Within thehome 132 may be a set-top box 134 communicatively linked to avideo display 136. The set-top box 134 may include afirst decoder 138 and asecond decoder 140. The first andsecond decoders user interface 142 and amass storage device 144. Theuser interface 142 may be communicatively linked to thevideo display 136. - During operation,
head end 100 may receive local and nonlocal programming video signals from thesatellite dish 112 and thelocal station 114. The nonlocal programming video signals may be received in the form of a digital video stream, while the local programming video signals may be received as an analog video stream. In some embodiments, local programming may also be received as a digital video stream. The digital video stream may be decoded by thedecoder 104 and sent to theswitcher 102 in response to customer requests. Thehead end 100 may also include aserver 108 communicatively linked to amass storage device 110. Themass storage device 110 may store various types of video content, including video on demand (VOD), which theserver 108 may retrieve and provide to theswitcher 102. Theswitcher 102 may route local programming directly to themodulators 118, which modulate the local programming, and route the non-local programming (including any VOD) to theencoders 116. Theencoders 116 may digitally encode the non-local programming. The encoded non-local programming may then be transmitted to themodulators 118. Thecombiner 120 may be configured to receive the modulated analog video data and the modulated digital video data, combine the video data and transmit it via multiple radio frequency (RF) channels to theHFC network 122. - The
HFC network 122 may transmit the combined video data to thenodes respective neighborhoods home 132 may receive this video data at the set-top box 134, more specifically at thefirst decoder 138 and thesecond decoder 140. The first andsecond decoders user interface 142, which then may provide the decoded data to thevideo display 136. - The
encoders 116 and thedecoders FIG. 1A (as well as all of the other steps and functions described herein) may be implemented as computer code comprising computer readable instructions stored on a computer readable storage device, such as memory or another type of storage device. The computer code may be executed on a computer system by a processor, such as an application-specific integrated circuit (ASIC), or other type of circuit. For example, computer code for implementing theencoders 116 may be executed on a computer system (such as a server) residing in theheadend 100. Computer code for thedecoders top box 134, which constitutes a type of computer system. The code may exist as software programs comprised of program instructions in source code, object code, executable code or other formats. It should be appreciated that the computer code for the various components shown inFIG. 1A may reside anywhere insystem 10 or elsewhere (such as in a cloud network), that is determined to be desirable or advantageous. Furthermore, the computer code may be located in one or more components, provided the instructions may be effectively performed by the one or more components. -
FIG. 1B shows an example of a computer system on which computer code for theencoders 116 and thedecoders processor 401, or processing circuitry, that may implement or execute software instructions performing some or all of the methods, functions and other steps described herein. Commands and data fromprocessor 401 may be communicated over acommunication bus 403, for example.Computer system 400 may also include a computerreadable storage device 402, such as random access memory (RAM), where the software and data forprocessor 401 may reside during runtime.Storage device 402 may also include non-volatile data storage.Computer system 400 may include anetwork interface 404 for connecting to a network. Other known electronic components may be added or substituted for the components depicted in thecomputer system 400. Thecomputer system 400 may reside in theheadend 100 and execute theencoders 116, and may also be embodied in the set-top box 134 to execute thedecoders computer system 400 may reside in places other than theheadend 100 and the set-top box 134, and may be miniaturized so as to be integrated into a smartphone or tablet computer. - Video encoding systems achieve compression by removing redundancy in the video data, e.g., by removing those elements that can be discarded without adversely affecting reproduction fidelity. Because video signals take place in time and space, most video encoding systems exploit both temporal and spatial redundancy present in these signals. Typically, there is high temporal correlation between successive frames. This is also true in the spatial domain for pixels which are close to each other. Thus, high compression gains are achieved by carefully exploiting these spatio-temporal correlations.
- A high-level description of how video data gets encoded and decoded by the
encoders 116 and thedecoders FIG. 2A . Unlike other video coding standards, in which the basic coding unit is a macroblock of 16×16 pixels, in HEVC, the LCU can be as large as 128×128 pixels. An LCU can be divided into four square blocks, called CUs (coding units), which are a quarter of the size of the LCU. Each CU can be further split into four smaller CUs, which are a quarter of the size of the original CU. The splitting process can be repeated until certain criteria are met.FIG. 3A shows an example of LCU partitioned into CUs. - How a particular LCU is split into CUs can be represented by a quadtree. At each node of the quadtree, a flag is set to “1” if the node is further split into sub-nodes. Otherwise, the flag is unset at “0.” For example, the LCU partition of
FIG. 3A can be represented by the quadtree ofFIG. 3B . These “split flags” may be jointly coded with other flags in the video bitstream, including a skip mode flag, a merge mode flag, and a predictive unit (PU) mode flag, and the like. In the case of the quadtree ofFIG. 3B , the split flags 10100 could be coded as overhead along with the other flags. Syntax information for a given CU may be defined recursively, and may depend on whether the CU is split into sub-CUs. - A CU that is not split (e.g., a CU corresponding a terminal, or “leaf” node in a given quadtree) may include one or more prediction units (PUs). In general, a PU represents all or a portion of the corresponding CU, and includes data for retrieving a reference sample for the PU for purposes of performing prediction for the CU. Thus, at each leaf of a quadtree, a final CU of 2N×2N can possess one of four possible patterns (N×N, N×2N, 2N×N and 2N×2N), as shown in
FIG. 2B . While shown for a 2N×2N CU, other PUs having different dimensions and corresponding patterns (e.g., square or rectangular) may be used. A CU can be either spatially or temporally predictive coded. If a CU is coded in intra mode, each PU of the CU can have its own spatial prediction direction. If a CU is coded in inter mode, each PU of the CU can have its own motion vector(s) and associated reference picture(s). The data defining the motion vector may describe, for example, a horizontal component of the motion vector, a vertical component of the motion vector, a resolution for the motion vector (e.g., one-quarter pixel precision or one-eighth pixel precision), a reference frame to which the motion vector points, and/or a reference list (e.g.,list 0 or list 1) for the motion vector. Data for the CU defining the one or more PUs of the CU may also describe, for example, partitioning of the CU into the one or more PUs. Partitioning modes may differ between whether the CU is uncoded, intra-prediction mode encoded, or inter-prediction mode encoded. - In general, in intra-prediction encoding, a high level of spatial correlation is present between neighboring blocks in a frame. Consequently, a block can be predicted from the nearby encoded and reconstructed blocks, giving rise to the intra prediction. In some embodiments, the prediction can be formed by a weighted average of the previously encoded samples, located above and to the left of the current block. The encoder may select the mode that minimizes the difference or cost between the original and the prediction and signals this selection in the control data.
- In general, in inter-prediction encoding, video sequences have high temporal correlation between frames, enabling a block in the current frame to be accurately described by a region in the previous coded frames, which are known as reference frames. Inter-prediction utilizes previously encoded and reconstructed reference frames to develop a prediction using a block-based motion estimation and compensation technique.
- Following intra-predictive or inter-predictive encoding to produce predictive data and residual data, and following any transforms (such as the 4×4 or 8×8 integer transform used in H.264/AVC or a discrete cosine transform (DCT)) to produce transform coefficients, quantization of transform coefficients may be performed. Quantization generally refers to a process in which transform coefficients are quantized to possibly reduce the amount of data used to represent the coefficients, e.g., by converting high precision transform coefficients into a finite number of possible values. These steps will be discussed in more detail below.
- Each CU can also be divided into transform units (TUs) by application of a block transform operation. A block transform operation tends to decorrelate the pixels within the block and compact the block energy into the low order coefficients of the transform block. In some embodiments, one transform of 8×8 or 4×4 may be applied. In other embodiments, a set of block transforms of different sizes may be applied to a CU, as shown in
FIG. 5A where the left block is a CU partitioned into PUs and the right block is the associated set of transform units (TUs). The size and location of each block transform within a CU is described by a separate quadtree, called RQT.FIG. 5B shows the quadtree representation of TUs for the CU in the example ofFIG. 5A . In this example, 11000 is coded and transmitted as part of the overhead. - The TUs and PUs of any given CU may be used for different purposes. TUs are typically used for transformation, quantizing and coding operations, while PUs are typically used for spatial and temporal prediction. There is not necessarily a direct relationship between the number of PUs and the number of TUs for a given CU.
- Video blocks may comprise blocks of pixel data in the pixel domain, or blocks of transform coefficients in the transform domain, e.g., following application of a transform, such as a discrete cosine transform (DCT), an integer transform, a wavelet transform, or a conceptually similar transform to residual data for a given video block, wherein the residual data represents pixel differences between video data for the block and predictive data generated for the block. In some cases, video blocks may comprise blocks of quantized transform coefficients in the transform domain, wherein, following application of a transform to residual data for a given video block, the resulting transform coefficients are also quantized. In video encoding, quantization is the step that introduces loss, so that a balance between bitrate and reconstruction quality can be established. These steps will be discussed further below.
- Block partitioning serves an important purpose in block-based video coding techniques. Using smaller blocks to code video data may result in better prediction of the data for locations of a video frame that include high levels of detail, and may therefore reduce the resulting error (e.g., deviation of the prediction data from source video data), represented as residual data. In general, prediction exploits the spatial or temporal redundancy in a video sequence by modeling the correlation between sample blocks of various dimensions, such that only a small difference between the actual and the predicted signal needs to be encoded. A prediction for the current block is created from the samples which have already been encoded. While potentially reducing the residual data, such techniques may, however, require additional syntax information to indicate how the smaller blocks are partitioned relative to a video frame, and may result in an increased coded video bitrate. Accordingly, in some techniques, block partitioning may depend on balancing the desirable reduction in residual data against the resulting increase in bitrate of the coded video data due to the additional syntax information.
- In general, blocks and the various partitions thereof (e.g., sub-blocks) may be considered video blocks. In addition, a slice may be considered to be a plurality of video blocks (e.g., macroblocks, or coding units), and/or sub-blocks (partitions of macroblocks, or sub-coding units). Each slice may be an independently decodable unit of a video frame. Alternatively, frames themselves may be decodable units, or other portions of a frame may be defined as decodable units. Furthermore, a GOP, also referred to as a group of pictures, may be defined as a decodable unit.
- The encoders 116 (
FIG. 1A ) may be, according to an embodiment of the disclosure, composed of several functional modules as shown inFIG. 4A . These modules may be implemented as hardware, software, or any combination of the two. Given a current PU, x, a prediction PU, x′, may first be obtained through either spatial prediction or temporal prediction. This spatial or temporal prediction may be performed by aspatial prediction module 129 or atemporal prediction module 130 respectively. - There are several possible spatial prediction directions that the
spatial prediction module 129 can perform per PU, including horizontal, vertical, 45-degree diagonal, 135-degree diagonal, DC, Planar, etc. Including the Luma intra modes, an additional mode, called IntraFromLuma, may be used for the Chroma intra prediction mode. A syntax indicates the spatial prediction direction per PU. - The encoder 116 (
FIG. 1A ) may perform temporal prediction through motion estimation operation. Specifically, the temporal prediction module 130 (FIG. 4A ) may search for a best match prediction for the current PU over reference pictures. The best match prediction may be described by motion vector (MV) and associated reference picture (refIdx). Generally, a PU in B pictures can have up to two MVs. Both MV and refIdx may be part of the syntax in the bitstream. - The prediction PU may then be subtracted from the current PU, resulting in the residual PU, e. The residual PU, e, may then be transformed by a
transform module 117, one transform unit (TU) at a time, resulting in the residual PU in the transform domain, E. To accomplish this task, thetransform module 117 may use e.g., either a square or a non-square block transform. - Referring back to
FIG. 4A , the transform coefficients E, may then be quantized by aquantizer module 118, converting the high precision transform coefficients into a finite number of possible values. The quantization process may reduce the bit depth associated with some or all of the coefficients. For example, an n-bit value may be rounded down to an m-bit value during quantization, where n is greater than m. In some embodiments, external boundary conditions are used to produce modified one or more transform coefficients. For example, a lower range or value may be used in determining if a transform coefficient is given a nonzero value or just zeroed out. As should be appreciated, quantization is a lossy operation and the loss by quantization generally cannot be recovered. - The quantized coefficients may then be entropy coded by an
entropy coding module 120, resulting in the final compression bits. The specific steps performed by theentropy coding module 120 will be discussed below in more detail. - To facilitate temporal and spatial prediction, the
encoder 116 may also take the quantized transform coefficients E and dequantize them with adequantizer module 122 resulting in the dequantized transform coefficients E′. The dequantized transform coefficients are then inverse transformed by aninverse transform module 124, resulting in the reconstructed residual PU, e′. The reconstructed residual PU, e′, is then added to the corresponding prediction, x′, either spatial or temporal, to form a reconstructed PU, x”. - Referring still to
FIG. 4A , a deblocking filter (DBF) operation may be performed on the reconstructed PU, x″, first to reduce blocking artifacts. A sample adaptive offset (SAO) process may be conditionally performed after the completion of the deblocking filter process for the decoded picture, which compensates the pixel value offset between reconstructed pixels and original pixels. In some embodiments, both the DBF operation and SAO process are implemented by adaptive loop filter functions, which may be performed conditionally by aloop filter module 126 over the reconstructed PU. In some embodiments, the adaptive loop filter functions minimize the coding distortion between the input and output pictures. In some embodiments,loop filter module 126 operates during an inter-picture prediction loop. If the reconstructed pictures are reference pictures, they may be stored in areference buffer 128 for future temporal prediction. - HEVC specifies two loop filters that are applied in order with the de-blocking filter (DBF) applied first and the sample adaptive offset (SAO) filter applied afterwards. The DBF is similar to the one used by H.264/MPEG-4 AVC but with a simpler design and better support for parallel processing. In HEVC the DBF only applies to an 8×8 sample grid while with H.264/MPEG-4 AVC the DBF applies to a 4×4 sample grid. DBF uses an 8×8 sample grid since it causes no noticeable degradation and significantly improves parallel processing because the DBF no longer causes cascading interactions with other operations. Another change is that HEVC only allows for three DBF strengths of 0 to 2. HEVC also requires that the DBF first apply horizontal filtering for vertical edges to the picture and only after that does it apply vertical filtering for horizontal edges to the picture. This allows for multiple parallel threads to be used for the DBF.
- The SAO filter process is applied after the DBF and is made to allow for better reconstruction of the original signal amplitudes by using e.g., a look up table that includes some parameters that are based on a histogram analysis made by the encoder. The SAO filter has two basic types which are the edge offset (EO) type and the band offset (BO) type. One of the SAO types can be applied per coding tree block (CTB). The edge offset (EO) type has four sub-types corresponding to processing along four possible directions (e.g., horizontal, vertical, 135 degree, and 45 degree). For a given EO sub-type, the edge offset (EO) processing operates by comparing the value of a pixel to two of its neighbors using one of four different gradient patterns. An offset is applied to pixels in each of the four gradient patterns. For pixel values that are not in one of the gradient patterns, no offset is applied. The band offset (BO) processing is based directly on the sample amplitude which is split into 32 bands. An offset is applied to pixels in 16 of the 32 bands, where a group of 16 bands corresponds to a BO sub-type. The SAO filter process was designed to reduce distortion compared to the original signal by adding an offset to sample values. It can increase edge sharpness and reduce ringing and impulse artifacts. Further detail on the SAO process will be discussed below with reference to
FIGS. 6-10 . - In an embodiment of the disclosure, intra pictures (such as an I picture) and inter pictures (such as P pictures or B pictures) are supported by the encoder 116 (
FIG. 1A ). An intra picture may be coded without referring to other pictures. Hence, spatial prediction may be used for a CU/PU inside an intra picture. An intra picture provides a possible point where decoding can begin. On the other hand, an inter picture generally aims for high compression. Inter picture supports both intra and inter prediction. A CU/PU in inter picture is either spatially or temporally predictive coded. Temporal references are the previously coded intra or inter pictures. - The operation of the entropy coding module 120 (
FIG. 4A ) according to an embodiment will now be described in more detail. Theentropy coding module 120 takes the quantized matrix of coefficients received from thequantizer module 118 and uses it to generate a sign matrix that represents the signs of all of the quantized coefficients and to generate a significance map. A significance map may be a matrix in which each element specifies the position(s) of the non-zero quantized coefficient(s) within the quantized coefficient matrix. Specifically, given a quantized 2D transformed matrix, if the value of a quantized coefficient at a position (y, x) is non-zero, it may be considered as significant and a “1” is assigned for the position (y, x) in the associated significance map. Otherwise, a “0” is assigned to the position (y, x) in the significance map. - Once the
entropy coding module 120 has created the significance map, it may code the significance map. In one embodiment, this is accomplished by using a context-based adaptive binary arithmetic coding (CABAC) technique. In doing so, theentropy coding module 120 scans the significance map along a scanning line and, for each entry in the significance map, the coding module chooses a context model for that entry. Theentropy coding module 120 then codes the entry based on the chosen context model. That is, each entry is assigned a probability based on the context model (the mathematical probability model) being used. The probabilities are accumulated until the entire significance map has been encoded. - The value output by the
entropy coding module 120 as well as the entropy encoded signs, significance map and non-zero coefficients may be inserted into the bitstream by the encoder 116 (FIG. 1A ). This bitstream may be sent to thedecoders HFC network 122. - It should be noted that the prediction, transform, and quantization described above may be performed for any block of video data, e.g., to a PU and/or TU of a CU, or to a macroblock, depending on the specified coding standard.
- When the
decoders 138 and 140 (FIG. 1A ) receive the bitstream, they perform the functions shown in e.g.,FIG. 4B . Anentropy decoding module 146 of thedecoder 145 may decode the sign values, significance map and non-zero coefficients to recreate the quantized and transformed coefficients. In decoding the significance map, theentropy decoding module 146 may perform the reverse of the procedure described in conjunction with theentropy coding module 120—decoding the significance map along a scanning pattern made up of scanning lines. Theentropy decoding module 146 then may provide the coefficients to adequantizer module 147, which dequantizes the matrix of coefficients, resulting in E′. Thedequantizer module 147 may provide the dequantized coefficients to aninverse transform module 149. Theinverse transform module 149 may perform an inverse transform operation on the coefficients resulting in e′. Filtering and spatial prediction may be applied in a manner described in conjunction withFIG. 4A . - In an SAO process, an offset is added to each pixel to reduce the distortion of the reconstructed pixel relative to the original pixel. In one embodiment, for a partition in a luma or chroma component, an encoder categorizes the pixels into one of six possible types (both types and sub-types are collectively referred to as types here): four edges offset (EO) types E0, E1, E2, E3 and two band offset (BO) types B0, B1. For the EO types, the pixels are further sub-categorized into one of five possible sub-classes based upon local behavior along the EO type direction. These five sub-classes are described in further detail below. For the BO types, the pixels are further sub-categorized into one of sixteen possible sub-classes based upon intensity. In some embodiments, for a given sub-class of pixels within an SAO type, the same offset is applied. For example, if the offset for sub-class i is oi, then the SAO output corresponding to an input of pi will be pi+oi. The encoder typically selects the SAO type per sub-class to minimize a cost function. For example, if the distortion for a given type t and set of offsets ot,i is Dt,i and the corresponding bitrate is Rt,i, then the cost function can be Jt,i=Dt,i+lambda*Rt,i, where lambda is a weighting factor. The encoder may signal to the decoder the SAO type per partition and the corresponding offsets per sub-class, and the decoder may perform the classification for the SAO type and applies the offsets per sub-class to each pixel. The SAO type can be signaled per color component, or a given type can be signaled and used for more than one color component. In some embodiments, it is also possible for the encoder to not use or turn off SAO, and this can also be signaled to the decoder.
- Coding of SAO type
- For coding of SAO type, there are generally two coding methods: high efficiency (HE) and low complexity (LC). In LC, variable length codewords (VLCs) or binarized codewords are assigned to the SAO types; while in HE, the binarized codeword typically assigned to the type is followed by context-based adaptive binary arithmetic coding (CABAC). For the HE case, an encoder may signal the SAO type using a unary code, for example (0's and 1's can be interchanged) as shown in Table 1:
-
TABLE 1 SAO type Code Off 0 E0 10 E1 110 E2 1110 E3 11110 B0 111110 B1 1111110 - In Table 1, when SAO type is Off, no SAO is applied and the corresponding codeword is 0. The other codewords correspond to the other EO and BO types.
- It may be noted that the units or digits within a codeword may be referred to as “bits” for LC and “bins” for HE. The difference in terminology is a result of applying CABAC to the codeword in the HE method. As used herein, “units” includes both bins and bits in codewords.
- Currently, SAO uses two fixed band types, B0 and B1, covering the entire intensity range, with each band further dividing the respective intensity range into 16 equal sub-classes. An offset can be signaled for each of the sub-classes. Because the statistics of a given picture may not fall nicely into one of the two existing band types, B0 and B1, it may be preferable to combine or merge the bands. In some embodiments, one band type can be used, where the range of values to apply an offset can be specified, and a number of sub-classes for the range can be specified, e.g., using a uniform sub-partitioning. An example of such partitioning using a single band type is illustrated in
FIG. 6 . In some embodiments, the range of values define the one or more sub-classes. - In some embodiments, the range of values where the offset is applied can be determined based on the data and on rate-distortion considerations. The offsets may generally be applied to values where the distortion can be reduced.
- In some embodiments, SAO selection type need not be performed, such as when there is a single band type and no other SAO type. In such instances, the single band type is used without the additional steps associated with SAO selection.
- As shown in
FIG. 6 , the start of the band is specified by bs, and Ns sub-classes of width ws can be used.FIG. 6 shows one embodiment where four (Ns=4) sub-classes of equal width (ws) adjoining each other, where the first sub-class starts at bs. In this case, four offsets can be signaled to the decoder for the four sub-classes. In one example, if the last sub-class exceeds the maximum intensity range, the last sub-class can end at the maximum value or wrap around to zero. Additional discussion on BO sub-classes can be found in U.S. patent application Ser. No. 13/672,476, entitled “Devices and Methods for Sample Adaptive Offset Coding and/or Signaling,” filed on Nov. 8, 2012, and U.S. patent application Ser. No. 13/672,484, entitled “Devices and Methods for Sample Adaptive Offset Coding and/or Signaling,” filed on Nov. 8, 2012, incorporated herein by reference in their entirety. - In some embodiments, bs is transmitted from the encoder to the decoder. In some embodiments, Ns is transmitted from the encoder to the decoder. In some embodiments, ws is transmitted from the encoder to the decoder.
- Alternatively, a fixed set of values of bs, Ns and/or ws can be specified and agreed upon at the encoder and/or decoder. In such embodiments, only some parameters (e.g., the unspecified values) may need to be transmitted from the encoder to decoder. For example, these parameters can be signaled to the decoder and can be determined for e.g., per partition, LCU, slice (or other unit), picture, group of pictures, sequence, etc.
- The specified values need not be transmitted to the decoder, assuming that both encoder and decoder are using the same unit. As used herein, a unit refers to data that both the encoder and decoder have and are configured to derive SAO parameters from. For example, a unit may refer to an LCU, slice, picture, etc. The unit may be specified implicitly (e.g., fixed, slice-dependent, prediction list-based, etc.) or explicitly (e.g., in sequence or slice header, etc.). In such instances, the range of reconstructed values can be determined after the unit is encoded or decoded, and the BO type may be derived from this range.
- In some embodiments, the unit can be signaled from the encoder to the decoder, or derived from other coding parameters. Examples of the unit can include an LCU, slice, picture, or group of pictures.
- For each BO type, the set of values for which SAO is applied can be determined from the unit or a portion of the unit. For example, the set of values can be determined from a subset of samples in the unit, e.g. alternating samples, the first quarter LCU pixel samples (e.g., top left quarter of the unit), the four corner and center samples of the unit, pixel samples that are not affected by the deblocking filter, etc.
- It has been discovered that because natural images tend to exhibit high spatial correlation, a smaller unit may tend to have a smaller dynamic range of intensity values, thereby requiring fewer sub-classes or offsets. In other words, an SAO unit size may be selected that is suitable for typical data, which yields good performance given the number of offsets applied, without requiring too much buffer, delay, etc. In order to strike a balance between coding efficiency, parallel processing, delay, buffering, etc., an LCU unit in the range of 16×16 to 128×128 may be generally suitable for one or more processes described herein.
- For example, in some embodiments, the encoder and decoder can decode an LCU and determine the range of values [min, max] in the LCU. A BO type (or types) can then be defined based on the range of values [min, max]. That is, the range of values [bs, es] in
FIG. 6 for a BO type can be derived based on [min, max], with bs denoting the start of the BO type and es denoting the end of the BO type. In one example, the values can be chosen to be bs=min and es=max. Once bs and es are determined, the band can be divided into Ns sub-classes (note that Ns can be different for different BO types), for example, Ns sub-classes of equal width ws. The number of sub-classes Ns or width ws may be agreed upon at the encoder and decoder, as described above, or it can be transmitted for the LCU, at LCU level, slice level picture level, etc. for one or more color planes. - More generally, one or more BO types can be defined based on [min, max] and/or other statistical features of pixels within a corresponding area. For example, they can be defined based upon the statistical distribution of values within the range, such as illustrated in
FIG. 7 , which plots a distribution (e.g., histogram) of values. InFIG. 7 , bs=min and es<max, so that no offset is applied to values larger than es. Four BO types are defined by B0, B1, B2, and B3 (in general BO types can cover overlapping or non-overlapping pixel values.). For each type Bi, Ni sub-classes can be defined by uniform or non-uniform partitioning of the Bi range. For the case of B1, the sub-classes can be distributed among the two intervals shown. The additional information about the BO types and sub-classes shown inFIG. 7 can either be transmitted to the decoder or agreed upon the encoder and decoder. Alternatively, they can be derived (and not transmitted) based upon statistical properties of the values, such as the mean, variance, etc. - In some embodiments, for a set of values specified by the range [min, max], the bs and es values can be obtained from the minimum and maximum values in the subset of samples. Alternatively, in some embodiments, the bs and es values may be determined based on a function or transformation of the samples. For example, a transformation such as a DCT can be used, and bs and es can be derived from the transformed values, e.g. DC coefficient, AC coefficient, etc. More generally, bs and es, or the range of values for the BO type, can be derived from samples wi and vi, for example bs=f(w0, w1, . . . , wn) and es=g(v0, v1, . . . , vm), where f(wi) and g(vi) are functions of the values wi and vi. The values wi and vi can be, for example, DCT coefficients. By determining the range of values based on a smaller subset of values in the unit, less computation may be required.
- In some embodiments, other statistics of the values in a unit can be used to specify a BO type. For example, the mean of the values may be used to specify the location of sub-class intervals for a BO type. In some embodiments, the mean may be computed on a subset of values within the unit (e.g., LCU) and the subset of values can be in a certain region in the unit, alternating samples (or every nth sample horizontally and mth sample vertically), etc. A benefit of computing the mean value is that only one addition per pixel is performed in the subset of unit (e.g., LCU) and a division operation, or if the number of samples is 2n, a shift of the final total by n bits. For example, if the number of samples over which the mean (average) value is computed is a power of two, then the division by that number can be achieved by a bit shift, which can require less computation than a general division operation.
- Once the mean value is computed or obtained, a BO type and/or set of sub-classes can then be derived based on the mean value. For example, a number of sub-classes can be specified relative to the mean value. The sub-classes can be centered or shifted about the mean and can cover a limited range or extended to cover the entire range (e.g., by extending the range of the first and last sub-classes as explained in further detail below).
-
FIG. 8 shows an example where a BO type is specified using the mean value (m) and a width (ws) for a case of 4 sub-classes with extended first and last sub-classes. For the case of only one sub-class (one offset) with a limited range or span, the mean can be the center (or approximately the center) of that span. For more sub-classes, the mean can indicate the center (or approximately the center) of all sub-classes. In another example, the entire range may be divided into fixed intervals. For the case of one sub-class, the sub-class can be defined as the interval in which the mean value is located. For additional sub-classes, adjacent intervals can be chosen, for example, centered about the interval with the mean value. - In some embodiments, it may be preferable to perform operations by shift, e.g., by mapping a pixel value to a band index. This mapping may be achieved using a look-up table or by other means (e.g., binary-shift of pixels values). In an example, if the 0-255 pixel range is divided into 32 uniformly spaced bands (corresponding to 32 offsets), then each pixel value may be shifted by 3 binary positions to the right to get the band-index. As is known, the band-index is useful is determining which offset should be applied to each pixel.
- In other words, to categorize a pixel value into a sub-class to determine what offset should be applied, one can perform a simple bit shift operation and the result can be used to index the offset value. Merging can be used to combine bins to share a given number of offsets. Consequently, in some embodiments, a combination of pixel value shift and merging offsets may be used to map pixel values in non-uniform and/or discontinuous situations. In such instances, for example, the finest granularity of offset-intervals may be defined by shift and they may then be merged based on min-max or some other conditions to include only N contiguous offset. In one example, 4 offsets are transmitted, to be applied to 4 regions which are not necessarily uniform or contiguous. Each region may be formed by merging uniform bands on a finer granularity (in the finest granularity, there are 32 uniformly spaced bands). Based on statistics (e.g., min-max) or instructions, the 4 offsets are duplicated to some of the finer-uniform bands and assigned an offset of zero to the rest of finer-uniform bands. By this approach, the pixel values may be shifted to find the offset without the need to send all offsets at finest granularity precision (e.g., in this example transmitting 4 offsets instead of 32 offsets). It should be appreciated, for the case of only one sub-class (N=1), there is no need to calculate min and max and only the offset needs to be transmitted.
- By determining the set of values for the BO type based on the unit or portion of the unit, the BO type parameters need not be transmitted, thereby saving on overhead bits. In some embodiments, the BO parameters for a current unit can be determined based on a unit previously available to the encoder and decoder. Using previously available unit parameters may reduce latency so that SAO processing can begin on the first sample in the unit without needing to process the unit to determine the BO type parameters. In one example, a collocated unit or motion-compensated unit from a previously coded picture can be used to determine the BO parameters for a current unit.
- In some embodiments, for the existing B0 and B1 band offset types and/or for a single merged band offset type, there may be many sub-classes with no pixels in the respective intensity range (e.g., also known as empty sub-classes). Although it is possible to encode these sub-classes with a zero offset, in some embodiments, only the offset values for those sub-classes that have pixel intensity values are encoded and signaled. Such encoding of sub-classes that have pixel intensity values may be achieved by additionally encoding an escape code or end-of-offset code to signal no more offset values. This escape code can be, for example, a value that is larger than the maximum offset value used. This approach can be beneficial when there are many empty sub-classes; however, in cases where there are not many empty sub-classes, a combination of only encoding sub-classes having intensity pixel values and encoding sub-classes with a zero offset may be implemented. The approach can be used for signaling of offsets in both band offset and edge offset types. For the case of edge offset types, an empty sub-class corresponds to the case where there are no pixels with the respective gradient pattern. Additional discussion on offset for empty sub-classes can be found in U.S. patent application Ser. Nos. 13/672,476 and 13/672,484, previously incorporated by reference in their entirety.
- As is appreciated, in one embodiment the decoder receives information on a band offset specification type such as shown in
FIG. 6 . The decoder classifies the reconstructed pixel values into the sub-classes according to their intensities. When the decoder receives the sequences of offset values, it can assign the offsets to each sub-class according to where pixel intensities exist in the sub-class. - In some embodiments, sub-classes where there are no pixel intensities will have no offset signaled.
FIG. 9 illustrates this as an example.FIG. 9 shows an example of BO with eight sub-classes 0-7. The locations of the eight sub-classes or range of pixel amplitudes can be signaled to the decoder using methods previously described. In the example, there are only pixel intensities insub-classes sub-classes sub-class 1 and value of −1 forsub-class 6 can be signaled, followed by an optional escape value signaling no more offset values. If the escape value is not signaled, then it is assumed that the decoder performs pixel classification into sub-classes prior to parsing the offset values. After the decoder receives the information specifying the BO sub-classes using methods such as previously described, it can classify the pixel intensities. After classifying the pixel intensities, the decoder assigns the first offset value of 2 to the first non-empty sub-class of 1 and the second offset value of −1 to the second non-empty sub-class of 6. - Referring back to
FIG. 6 , a BO type is specified by bs, es, and Ns (e.g. Ns=4), which represent the start of the BO, end of the BO, and the number of sub-classes, respectively. The values for bs and es can be determined from min and max, respectively, e.g. bs=min and es=max. The interval can then be partitioned into sub-classes.FIG. 6 shows the sub-classes of equal intervals, although this need not be the case. - In
FIG. 6 , no offset is transmitted or applied for values outside the range from bs to es. However, values may occur outside the range if bs and es are determined from a subset of samples in the unit, while the offset is applied to all the samples in the unit or to samples outside the subset. In such instances, it may be beneficial to apply an offset (e.g., non-zero) to these values outside the range.FIG. 10 illustrates a method for applying an offset to values outside the bs and es ranges, where the first and last sub-classes are extended to the smallest and largest possible values (e.g. 0 and 255, respectively). This is one example of non-uniform interval BO sub-classes, and other examples are possible. The offsets for each sub-class can be determined based on e.g., RD optimization of a subset of samples or for all the samples in the unit. - In addition to possible RD performance improvements with the proposed approach, the complexity of SAO BO can be reduced. In
FIG. 6 , it may be necessary to check whether a pixel value is inside the BO offset range or not. On the other hand, in the scheme illustrated inFIG. 10 , the additional out of range checks are not needed. - This is because, in some embodiments, the first and last sub-classes in a BO type can be extended to cover more pixel values with the potential to increase coding efficiency and/or reduce complexity. For example, in one embodiment, the “first” boundary (after 0) can be specified as b_s+w_s, and the “last” boundary (before 255) can be specified as e_s−w_s, with N_s−2 intervals in between.
- For example, in one implementation, the band offset oi corresponding to
FIG. 10 for 4 sub-classes can be applied to a pixel value p with the following logic statement, where a0, a1, and a2 represent the three boundaries, and a0=bs+ws, a1=bs+2ws, and a2=bs+3ws: -
if (p < a0) apply offset o0 else if (p < a1) apply offset o1 else if (p < a2) apply offset o2 else apply offset o3 - In this case of 4 sub-class BO, at most 3 comparison operations are needed, as opposed to the 5 operations corresponding to a scheme represented in
FIG. 6 . Because the comparisons are generally performed per pixel, the reduction in operations/time can be significant. For the case of 2 sub-class BO, only 1 comparison operation is needed as opposed to 3 operations, and the operations may be reduced by 67% to a single comparison per pixel. This is because without the sub-class extension, 3 comparison operations are needed, whereas with the extension, only 1 comparison operation is needed. - The modifications described herein may allow for less overhead, computation, and latency for specification and processing using SAO BO. Note that the BO can be specified and applied to any or all color components, and the number of offsets can be different for each color component. For example, luma BO may have 4 offsets and chroma BO may have 2 offsets.
- It should also be appreciated that the SAO band types and offsets described herein can be signaled at a partition, LCU, slice, picture, group of pictures, or sequence level. They can also be combined with EO types and offsets signaled at the partition, LCU, slice, picture, group of pictures, or sequence level.
- The above description of the disclosed embodiments is provided to enable any person skilled in the art to make or use the disclosure. Various modifications to these embodiments will be readily apparent to those skilled in the art, and the generic principles described herein can be applied to other embodiments without departing from the spirit or scope of the disclosure. Thus, it is to be understood that the description and drawings presented herein represent exemplary embodiments of the disclosure and are therefore representative of the subject matter which is broadly contemplated by the present disclosure. It is further understood that the scope of the present disclosure fully encompasses other embodiments and that the scope of the present disclosure is accordingly limited by nothing other than the appended claims.
Claims (32)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/734,765 US20130188741A1 (en) | 2012-01-21 | 2013-01-04 | Devices and methods for sample adaptive offset coding and/or selection of band offset parameters |
PCT/US2013/020390 WO2013109419A1 (en) | 2012-01-21 | 2013-01-04 | Devices and methods for sample adaptive offset coding and/or selection of band offset parameters |
Applications Claiming Priority (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201261589298P | 2012-01-21 | 2012-01-21 | |
US201261597041P | 2012-02-09 | 2012-02-09 | |
US201261619916P | 2012-04-03 | 2012-04-03 | |
US13/734,765 US20130188741A1 (en) | 2012-01-21 | 2013-01-04 | Devices and methods for sample adaptive offset coding and/or selection of band offset parameters |
Publications (1)
Publication Number | Publication Date |
---|---|
US20130188741A1 true US20130188741A1 (en) | 2013-07-25 |
Family
ID=48797204
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/734,765 Abandoned US20130188741A1 (en) | 2012-01-21 | 2013-01-04 | Devices and methods for sample adaptive offset coding and/or selection of band offset parameters |
Country Status (1)
Country | Link |
---|---|
US (1) | US20130188741A1 (en) |
Cited By (24)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120328012A1 (en) * | 2011-06-24 | 2012-12-27 | Hisao Sasai | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US20130114678A1 (en) * | 2011-11-08 | 2013-05-09 | General Instrument Corporation | Devices and methods for sample adaptive offset coding and/or signaling |
US20130114909A1 (en) * | 2011-11-08 | 2013-05-09 | Texas Instruments Incorporated | Method and Apparatus for Image and Video Coding Using Hierarchical Sample Adaptive Band Offset |
US20130202052A1 (en) * | 2012-02-06 | 2013-08-08 | Nokia Corporation | Method for coding and an apparatus |
US20150271486A1 (en) * | 2014-03-20 | 2015-09-24 | Mediatek Inc. | Method of signaling for mode selection in 3d and multi-view video coding |
US20150281715A1 (en) * | 2014-03-25 | 2015-10-01 | Sean J. Lawrence | Object tracking in encoded video streams |
US9154783B2 (en) | 2011-06-27 | 2015-10-06 | Panasonic Intellectual Property Corporation Of America | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US9154780B2 (en) | 2011-06-30 | 2015-10-06 | Panasonic Intellectual Property Corporation Of America | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US9264727B2 (en) | 2011-06-29 | 2016-02-16 | Panasonic Intellectual Property Corporation Of America | Image decoding method including determining a context for a current block according to a signal type under which a control parameter for the current block is classified |
US9363525B2 (en) | 2011-06-28 | 2016-06-07 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US20160286213A1 (en) * | 2013-12-12 | 2016-09-29 | Samsung Electronics Co., Ltd. | Video encoding method and apparatus, and video decoding method and apparatus, for signaling sao parameter |
US9462282B2 (en) | 2011-07-11 | 2016-10-04 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US9549176B2 (en) | 2012-04-06 | 2017-01-17 | Google Technology Holdings LLC | Devices and methods for signaling sample adaptive offset (SAO) parameters |
US9584817B2 (en) | 2014-03-31 | 2017-02-28 | Sony Corporation | Video transmission system with color prediction and method of operation thereof |
US9716882B2 (en) | 2012-01-05 | 2017-07-25 | Google Technology Holdings LLC | Devices and methods for sample adaptive offset coding and/or selection of edge offset parameters |
US20170230656A1 (en) * | 2016-02-05 | 2017-08-10 | Apple Inc. | Sample adaptive offset systems and methods |
US9794578B2 (en) | 2011-06-24 | 2017-10-17 | Sun Patent Trust | Coding method and coding apparatus |
US9955153B2 (en) | 2012-01-05 | 2018-04-24 | Google Technology Holdings LLC | Devices and methods for sample adaptive offset coding |
TWI626843B (en) * | 2013-10-03 | 2018-06-11 | 南韓商三星顯示器有限公司 | Decoder, encoder, and the method for using the same |
USRE47366E1 (en) | 2011-06-23 | 2019-04-23 | Sun Patent Trust | Image decoding method and apparatus based on a signal type of the control parameter of the current block |
WO2019075638A1 (en) * | 2017-10-17 | 2019-04-25 | 北京金山云网络技术有限公司 | Coding and decoding method and apparatus, coder, decoder, and storage medium |
USRE47537E1 (en) | 2011-06-23 | 2019-07-23 | Sun Patent Trust | Image decoding method and apparatus based on a signal type of the control parameter of the current block |
US10439637B2 (en) | 2011-06-30 | 2019-10-08 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US10893282B2 (en) * | 2012-05-25 | 2021-01-12 | Velos Media, Llc | Image coding method, image coding apparatus, image decoding method, image decoding apparatus, and image coding and decoding apparatus |
Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130022103A1 (en) * | 2011-06-22 | 2013-01-24 | Texas Instruments Incorporated | Method and apparatus for sample adaptive offset parameter estimationfor image and video coding |
US20130114674A1 (en) * | 2011-11-04 | 2013-05-09 | Qualcomm Incorporated | Adaptive center band offset filter for video coding |
US20130208788A1 (en) * | 2012-02-10 | 2013-08-15 | Broadcom Corporation | Sample adaptive offset (SAO) in accordance with video coding |
US20140177704A1 (en) * | 2012-12-21 | 2014-06-26 | Qualcomm Incorporated | Multi-type parallelized sample adaptive offset in video coding |
US20140334559A1 (en) * | 2012-02-27 | 2014-11-13 | Texas Instruments Incorporated | Sample Adaptive Offset (SAO) Parameter Signaling |
US9161035B2 (en) * | 2012-01-20 | 2015-10-13 | Sony Corporation | Flexible band offset mode in sample adaptive offset in HEVC |
-
2013
- 2013-01-04 US US13/734,765 patent/US20130188741A1/en not_active Abandoned
Patent Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130022103A1 (en) * | 2011-06-22 | 2013-01-24 | Texas Instruments Incorporated | Method and apparatus for sample adaptive offset parameter estimationfor image and video coding |
US20130114674A1 (en) * | 2011-11-04 | 2013-05-09 | Qualcomm Incorporated | Adaptive center band offset filter for video coding |
US9161035B2 (en) * | 2012-01-20 | 2015-10-13 | Sony Corporation | Flexible band offset mode in sample adaptive offset in HEVC |
US20130208788A1 (en) * | 2012-02-10 | 2013-08-15 | Broadcom Corporation | Sample adaptive offset (SAO) in accordance with video coding |
US20140334559A1 (en) * | 2012-02-27 | 2014-11-13 | Texas Instruments Incorporated | Sample Adaptive Offset (SAO) Parameter Signaling |
US20140177704A1 (en) * | 2012-12-21 | 2014-06-26 | Qualcomm Incorporated | Multi-type parallelized sample adaptive offset in video coding |
Cited By (70)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
USRE47547E1 (en) | 2011-06-23 | 2019-07-30 | Sun Patent Trust | Image decoding method and apparatus based on a signal type of the control parameter of the current block |
USRE49906E1 (en) | 2011-06-23 | 2024-04-02 | Sun Patent Trust | Image decoding method and apparatus based on a signal type of the control parameter of the current block |
USRE47366E1 (en) | 2011-06-23 | 2019-04-23 | Sun Patent Trust | Image decoding method and apparatus based on a signal type of the control parameter of the current block |
USRE48810E1 (en) | 2011-06-23 | 2021-11-02 | Sun Patent Trust | Image decoding method and apparatus based on a signal type of the control parameter of the current block |
USRE47537E1 (en) | 2011-06-23 | 2019-07-23 | Sun Patent Trust | Image decoding method and apparatus based on a signal type of the control parameter of the current block |
US9049462B2 (en) * | 2011-06-24 | 2015-06-02 | Panasonic Intellectual Property Corporation Of America | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US9794578B2 (en) | 2011-06-24 | 2017-10-17 | Sun Patent Trust | Coding method and coding apparatus |
US11457225B2 (en) | 2011-06-24 | 2022-09-27 | Sun Patent Trust | Coding method and coding apparatus |
US10182246B2 (en) * | 2011-06-24 | 2019-01-15 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US11758158B2 (en) | 2011-06-24 | 2023-09-12 | Sun Patent Trust | Coding method and coding apparatus |
US20170188053A1 (en) * | 2011-06-24 | 2017-06-29 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US9271002B2 (en) * | 2011-06-24 | 2016-02-23 | Panasonic Intellectual Property Corporation Of America | Coding method and coding apparatus |
US11109043B2 (en) | 2011-06-24 | 2021-08-31 | Sun Patent Trust | Coding method and coding apparatus |
US20160127726A1 (en) * | 2011-06-24 | 2016-05-05 | Panasonic Intellectual Property Corporation Of America | Coding and decoding apparatus |
US9635361B2 (en) * | 2011-06-24 | 2017-04-25 | Sun Patent Trust | Decoding method and decoding apparatus |
US10200696B2 (en) | 2011-06-24 | 2019-02-05 | Sun Patent Trust | Coding method and coding apparatus |
US10638164B2 (en) * | 2011-06-24 | 2020-04-28 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US20120328012A1 (en) * | 2011-06-24 | 2012-12-27 | Hisao Sasai | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US9154783B2 (en) | 2011-06-27 | 2015-10-06 | Panasonic Intellectual Property Corporation Of America | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US10687074B2 (en) | 2011-06-27 | 2020-06-16 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US9591311B2 (en) | 2011-06-27 | 2017-03-07 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US9912961B2 (en) | 2011-06-27 | 2018-03-06 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US10750184B2 (en) | 2011-06-28 | 2020-08-18 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US9363525B2 (en) | 2011-06-28 | 2016-06-07 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US10154264B2 (en) | 2011-06-28 | 2018-12-11 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US10652584B2 (en) | 2011-06-29 | 2020-05-12 | Sun Patent Trust | Image decoding method including determining a context for a current block according to a signal type under which a control parameter for the current block is classified |
US9264727B2 (en) | 2011-06-29 | 2016-02-16 | Panasonic Intellectual Property Corporation Of America | Image decoding method including determining a context for a current block according to a signal type under which a control parameter for the current block is classified |
US10237579B2 (en) | 2011-06-29 | 2019-03-19 | Sun Patent Trust | Image decoding method including determining a context for a current block according to a signal type under which a control parameter for the current block is classified |
US9525881B2 (en) | 2011-06-30 | 2016-12-20 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US9794571B2 (en) | 2011-06-30 | 2017-10-17 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US10382760B2 (en) | 2011-06-30 | 2019-08-13 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US10439637B2 (en) | 2011-06-30 | 2019-10-08 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US10595022B2 (en) | 2011-06-30 | 2020-03-17 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US10903848B2 (en) | 2011-06-30 | 2021-01-26 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US9154780B2 (en) | 2011-06-30 | 2015-10-06 | Panasonic Intellectual Property Corporation Of America | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US11356666B2 (en) | 2011-06-30 | 2022-06-07 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US11792400B2 (en) | 2011-06-30 | 2023-10-17 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US10165277B2 (en) | 2011-06-30 | 2018-12-25 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US9462282B2 (en) | 2011-07-11 | 2016-10-04 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US9854257B2 (en) | 2011-07-11 | 2017-12-26 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US10154270B2 (en) | 2011-07-11 | 2018-12-11 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US11770544B2 (en) | 2011-07-11 | 2023-09-26 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US11343518B2 (en) | 2011-07-11 | 2022-05-24 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US10575003B2 (en) | 2011-07-11 | 2020-02-25 | Sun Patent Trust | Image decoding method, image coding method, image decoding apparatus, image coding apparatus, and image coding and decoding apparatus |
US9277194B2 (en) * | 2011-11-08 | 2016-03-01 | Texas Instruments Incorporated | Method and apparatus for image and video coding using hierarchical sample adaptive band offset |
US10791335B2 (en) | 2011-11-08 | 2020-09-29 | Texas Instruments Incorporated | Method and apparatus for image and video coding using hierarchical sample adaptive band offset |
US9774853B2 (en) | 2011-11-08 | 2017-09-26 | Google Technology Holdings LLC | Devices and methods for sample adaptive offset coding and/or signaling |
US20130114678A1 (en) * | 2011-11-08 | 2013-05-09 | General Instrument Corporation | Devices and methods for sample adaptive offset coding and/or signaling |
US10194159B2 (en) | 2011-11-08 | 2019-01-29 | Texas Instruments Incorporated | Method and apparatus for image and video coding using hierarchical sample adaptive band offset |
US11792414B2 (en) | 2011-11-08 | 2023-10-17 | Texas Instruments Incorporated | Method and apparatus for image and video coding using hierarchical sample adaptive band offset |
US9392270B2 (en) * | 2011-11-08 | 2016-07-12 | Google Technology Holdings LLC | Devices and methods for sample adaptive offset coding and/or signaling |
US20130114909A1 (en) * | 2011-11-08 | 2013-05-09 | Texas Instruments Incorporated | Method and Apparatus for Image and Video Coding Using Hierarchical Sample Adaptive Band Offset |
US9716882B2 (en) | 2012-01-05 | 2017-07-25 | Google Technology Holdings LLC | Devices and methods for sample adaptive offset coding and/or selection of edge offset parameters |
US9955153B2 (en) | 2012-01-05 | 2018-04-24 | Google Technology Holdings LLC | Devices and methods for sample adaptive offset coding |
US10349052B2 (en) * | 2012-02-06 | 2019-07-09 | Nokia Technologies Oy | Method for coding and an apparatus |
US9210423B2 (en) * | 2012-02-06 | 2015-12-08 | Nokia Technologies Oy | Method for coding and an apparatus |
US20130202052A1 (en) * | 2012-02-06 | 2013-08-08 | Nokia Corporation | Method for coding and an apparatus |
US9549176B2 (en) | 2012-04-06 | 2017-01-17 | Google Technology Holdings LLC | Devices and methods for signaling sample adaptive offset (SAO) parameters |
US10893282B2 (en) * | 2012-05-25 | 2021-01-12 | Velos Media, Llc | Image coding method, image coding apparatus, image decoding method, image decoding apparatus, and image coding and decoding apparatus |
TWI626843B (en) * | 2013-10-03 | 2018-06-11 | 南韓商三星顯示器有限公司 | Decoder, encoder, and the method for using the same |
US10728547B2 (en) * | 2013-12-12 | 2020-07-28 | Samsung Electronics Co., Ltd. | Video encoding method and apparatus, and video decoding method and apparatus, for signaling SAO parameter |
US20160286213A1 (en) * | 2013-12-12 | 2016-09-29 | Samsung Electronics Co., Ltd. | Video encoding method and apparatus, and video decoding method and apparatus, for signaling sao parameter |
US20150271486A1 (en) * | 2014-03-20 | 2015-09-24 | Mediatek Inc. | Method of signaling for mode selection in 3d and multi-view video coding |
US9716884B2 (en) * | 2014-03-20 | 2017-07-25 | Hfi Innovation Inc. | Method of signaling for mode selection in 3D and multi-view video coding |
US9589363B2 (en) * | 2014-03-25 | 2017-03-07 | Intel Corporation | Object tracking in encoded video streams |
US20150281715A1 (en) * | 2014-03-25 | 2015-10-01 | Sean J. Lawrence | Object tracking in encoded video streams |
US9584817B2 (en) | 2014-03-31 | 2017-02-28 | Sony Corporation | Video transmission system with color prediction and method of operation thereof |
US10728546B2 (en) | 2016-02-05 | 2020-07-28 | Apple Inc. | Sample adaptive offset systems and methods |
US20170230656A1 (en) * | 2016-02-05 | 2017-08-10 | Apple Inc. | Sample adaptive offset systems and methods |
WO2019075638A1 (en) * | 2017-10-17 | 2019-04-25 | 北京金山云网络技术有限公司 | Coding and decoding method and apparatus, coder, decoder, and storage medium |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9888249B2 (en) | Devices and methods for sample adaptive offset coding and/or selection of edge offset parameters | |
US9955153B2 (en) | Devices and methods for sample adaptive offset coding | |
US9774853B2 (en) | Devices and methods for sample adaptive offset coding and/or signaling | |
US20130188741A1 (en) | Devices and methods for sample adaptive offset coding and/or selection of band offset parameters | |
US9565435B2 (en) | Devices and methods for context reduction in last significant coefficient position coding | |
US9872034B2 (en) | Devices and methods for signaling sample adaptive offset (SAO) parameters | |
US9813701B2 (en) | Devices and methods for context reduction in last significant coefficient position coding | |
US20140146894A1 (en) | Devices and methods for modifications of syntax related to transform skip for high efficiency video coding (hevc) | |
US20140029670A1 (en) | Devices and methods for processing of partition mode in high efficiency video coding | |
US20140140406A1 (en) | Devices and methods for processing of non-idr related syntax for high efficiency video coding (hevc) | |
US20140092975A1 (en) | Devices and methods for using base layer motion vector for enhancement layer motion vector prediction | |
US11039166B2 (en) | Devices and methods for using base layer intra prediction mode for enhancement layer intra mode prediction | |
WO2013109419A1 (en) | Devices and methods for sample adaptive offset coding and/or selection of band offset parameters |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GENERAL INSTRUMENT CORPORATION, PENNSYLVANIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:MINOO, KOOHYAR;BAYLON, DAVID;YU, YUE;AND OTHERS;SIGNING DATES FROM 20130221 TO 20130225;REEL/FRAME:029871/0429 |
|
AS | Assignment |
Owner name: GENERAL INSTRUMENT HOLDINGS, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT CORPORATION;REEL/FRAME:033776/0421Effective date: 20140915Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT HOLDINGS, INC.;REEL/FRAME:033776/0520Effective date: 20140915 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034274/0290Effective date: 20141028 |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
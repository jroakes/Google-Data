US8645199B1 - Using application characteristics for ad pricing - Google Patents
Using application characteristics for ad pricing Download PDFInfo
- Publication number
- US8645199B1 US8645199B1 US13/076,933 US201113076933A US8645199B1 US 8645199 B1 US8645199 B1 US 8645199B1 US 201113076933 A US201113076933 A US 201113076933A US 8645199 B1 US8645199 B1 US 8645199B1
- Authority
- US
- United States
- Prior art keywords
- application
- mobile
- pricing
- applications
- score
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
- G06Q30/0273—Determination of fees for advertising
Definitions
- the present disclosure relates to content presentation.
- Advertisers provide advertisements in different forms in order to attract consumers.
- Ads can be provided in electronic form.
- online ads can be provided as banner ads on a web page, as ads presented with search results, or as ads presented in a mobile application.
- This specification describes technologies relating to content presentation.
- one aspect of the subject matter described in this specification can be embodied in methods that include the actions of receiving, for each of a plurality of mobile applications, application data associated with a respective mobile application of the plurality of mobile applications, the application data including different user interaction data associated the respective mobile application; clustering applications of the plurality of mobile applications according to a similar classification; logging user interactions with each application of a cluster of applications for a plurality of users; generating an initial score for a first application in the cluster according to the logged interactions; and calculating pricing for content items served to the first application based on the initial score and an average score for applications in the cluster.
- Other embodiments of this aspect include corresponding systems, apparatus, and computer program products.
- the method further includes serving one or more content items to the first application according to the calculated application pricing.
- the one or more content items are advertisements.
- the data further include data associated with application information received from non-user sources.
- the application information includes one or more of a type of application or a country of prevalence for the application.
- Calculating application pricing for content items served to the first application includes increasing a pricing when the initial score for the first application is greater than the average score.
- Calculating application pricing for content items served to the first application includes decreasing a pricing when the initial score for the first application is less than the average score.
- the method further includes logging user interaction with the first application over time; periodically calculating a new score based on the logging; and calculating the pricing based on the new score.
- ⁇ ⁇ ⁇ S i a classification score for an application i in the cluster
- U i the user interaction score for an average user for an application i in the cluster
- n a number of applications in the cluster.
- the user interaction data is associated with a plurality of usage characteristics of the respective mobile application.
- the usage characteristics include user inputs to the mobile application.
- the usage characteristics include a duration of use for the mobile application.
- the duration of use is for each invocation of the mobile application.
- the duration of use is a total time over a specified time period.
- the method further includes classifying each application of the plurality of mobile application according to the received application data. Clustering includes clustering applications according to a similar classification.
- a content pricing model for mobile applications can be tailored to a quality measure of the mobile applications derived from different data associated with the mobile applications.
- the pricing model aims to provide an optimal pricing for advertisements that generates value for both publishers and advertisers.
- the content pricing model provides a higher pricing for higher quality applications relative to lower quality application.
- the content pricing model can increase return on investment for paying content providers. For example, a conversion rate for presented content can be increased when presented in mobile applications with a higher user interaction rate. Additionally, the content pricing model can be used to adjust price for different geographic locations or markets (e.g., according to competition levels). The pricing model also provides an incentive to application developers to produce higher quality mobile applications.
- FIG. 1 is a block diagram of an example advertising system.
- FIG. 2 is a block diagram of an example system including a mobile device application.
- FIG. 3 is a block diagram of an example system including an ad system and one or more mobile devices.
- FIG. 4 is a flow chart of an example method for determining content pricing for a mobile application.
- FIG. 5 is a block diagram of an example system for storing mobile application information.
- FIG. 6 is a flow diagram of an example method for determining the quality of a mobile application.
- Mobile devices can include mobile applications for providing content to a user, e.g., news, games, and other information.
- Content items e.g., ads
- Providing content items for display within the mobile application includes determining a pricing model for the mobile application.
- the pricing model is used to determine how much to charge a content provider (e.g., an advertiser) for content items served to the mobile application.
- various application data including usage characteristics can be used to evaluate the quality of the mobile application (e.g., a quality score for an application can be determined based on a set of data such as type/frequency of user interaction with the application, number of downloads, premium/free version, etc.).
- a pricing function for the content items can be calculated based on the quality of the mobile application. Additionally, the pricing function can be specific to the application across all users of the application or can be specific to particular users based on the user's usage of the mobile application.
- the user interactions for a group of users of a single application are used to determine a pricing function for content items presented on that application. For example, interactions from each of the group of users of the application can be aggregated. The aggregated user interactions can then be used to determine a pricing model for the single application.
- the pricing function can be based on user interactions with a group of similar applications.
- FIG. 1 is a block diagram of an example advertising system 100 .
- one or more advertisers 102 can directly, or indirectly, enter, maintain, and log ad information in an advertising management system 104 .
- advertising other forms of content, including other forms of sponsored content, can be delivered by the advertising system 100 .
- the ads can be in the form of graphical ads, such as banner ads, text only ads, image ads, barcode ads (e.g., ads including one or more barcodes for use in redeeming the ads), audio ads, video ads, ads combining one or more of any of such components, etc.
- the ads can also include embedded information, such as links, meta-information, and/or machine executable instructions.
- One or more publishers 106 can submit requests for ads to the advertising management system 104 .
- the advertising management system 104 responds by sending ads to the requesting publisher 106 for placement on or association with one or more of the publisher's content items (e.g., web properties).
- Example web properties can include web pages, television and radio advertising slots, and even print media space.
- Other entities e.g., users 108 and the advertisers 102
- This usage information can include measured or observed user behavior related to ads that have been served.
- the advertising management system 104 can perform financial transactions, for example, crediting the publishers 106 and charging the advertisers 102 based on the usage information.
- a computer network 110 e.g., a local area network (LAN), wide area network (WAN), the Internet, or a combination thereof, connects the advertisers 102 , the advertising management system 104 , the publishers 106 , and the users 108 .
- LAN local area network
- WAN wide area network
- the Internet or a combination thereof, connects the advertisers 102 , the advertising management system 104 , the publishers 106 , and the users 108 .
- One example publisher 106 is a general content server that receives requests for content (e.g., articles, discussion threads, music, video, graphics, search results, web page listings, information feeds, etc.), and retrieves the requested content in response to the request.
- the content server can submit a request for ads to an advertisement server in the advertising management system 104 .
- the ad request can include the number of ads desired.
- the ad request can also include content request information.
- This information can include the content itself (e.g., page, video broadcast, radio show, or other type of content), a category corresponding to the content or the content request (e.g., arts, business, computers, arts-movies, arts-music, etc.), part or all of the content request, content age, content type (e.g., text, graphics, video, audio, mixed media, etc.), geo-location information, etc.
- content e.g., page, video broadcast, radio show, or other type of content
- a category corresponding to the content or the content request e.g., arts, business, computers, arts-movies, arts-music, etc.
- content age e.g., text, graphics, video, audio, mixed media, etc.
- geo-location information e.g., geo-location information, etc.
- the content server or a client browser combines the requested content with one or more of the ads provided by the advertising management system 104 .
- the content and ads can be received separately and rendered together contemporaneously or as content is received.
- the combined content and ads e.g., from a content provider
- content and ads are requested separately by the users 108 (e.g., received content can include code for requesting ads when rendered by a browser or other application or ads can be incorporated in content as received from an ad system).
- the content server can transmit information about the ads back to the advertisement server, including information describing how, when, and/or where the ads are to be rendered (e.g., in HTML or JavaScriptTM).
- search service can receive queries for search results.
- the search service can retrieve relevant search results from an index of documents (e.g., from an index of web pages).
- Search results can include, for example, lists of web page titles, snippets of text extracted from those web pages, and hypertext links to those web pages, and may be grouped into a predetermined number of (e.g., ten) search results.
- the search service can submit a request for ads to the advertising management system 104 .
- the request can include a number of ads desired. This number can depend on the search results, the amount of screen or page space occupied by the search results, the amount of screen or page space available for the search results and the ads, the size and shape of the ads, etc.
- the request for ads can also include the query (as entered or parsed), information based on the query (such as geo-location information, whether the query came from an affiliate and an identifier of such an affiliate), and/or information associated with, or based on, the search results.
- the information can include, for example, identifiers related to the search results (e.g., document identifiers or “docIDs”), scores related to the search results (e.g., information retrieval (“IR”) scores), snippets of text extracted from identified documents (e.g., web pages), full text of identified documents, feature vectors of identified documents, etc.
- IR scores are computed from, for example, dot products of feature vectors corresponding to a query and a document, page rank scores, and/or combinations of IR scores and page rank scores, etc.
- the advertising management system 104 includes an auction process to select ads from the advertisers 102 .
- the advertisers 102 may be permitted to select, or bid, an amount the advertisers 102 are willing to pay for each presentation of or interaction with (e.g., click) of an ad, e.g., a cost-per-click amount an advertiser pays when, for example, a user clicks on an ad.
- the cost-per-click can include a maximum cost-per-click, e.g., the maximum amount the advertiser is willing to pay for each click of an ad based on a keyword, e.g., a word or words in a query.
- Other bid types can also be used. Based on these bids, ads can be selected and ranked for presentation.
- the search service can combine the search results with one or more of the ads provided by the advertising management system 104 . This combined information can then be forwarded to the users 108 that requested the content.
- the search results can be maintained as distinct from the ads, so as not to confuse the user between paid ads and presumably neutral search results.
- one or more of the publishers 106 submit requests for ads to the advertising management system 104 .
- the advertising management system 104 responds by sending ads to the requesting publisher 106 for placement on one or more of the publisher's web properties (e.g., websites and other network-distributed content) that are relevant to the web property. For example, if one of the publishers 106 publishes a sports-related web site, the advertising management system 104 can provide sports-related ads to the publisher 106 .
- the requests are executed by devices associated with the user 108 , e.g., by the execution of a javascript when the publishers web page is loading on a client device.
- a loading web page can include scripts to request one or more ads for placement within the rendered web page.
- the browser or other application can send an ad request in response and incorporate received ads into the web page.
- a mobile application is an application specifically designed for operation on a mobile device (e.g., a smartphone).
- the mobile application can also include one or more ads positioned within the content of the mobile application.
- the ads can be received from the advertising management system 104 for placement in the mobile application when accessed by a user (e.g., when a particular page of a mobile application is loaded on the mobile device).
- Mobile applications are described in greater detail below with respect to FIG. 2 .
- FIG. 2 is a block diagram of an example of a system 200 including a mobile device application.
- a developer system 202 can be used by a developer to create program content such as applications for one or more mobile devices 204 .
- the mobile devices 204 can include, for example, a cellular telephone, a personal digital assistant or any other type of mobile device.
- the developer can create an application 206 such as by generating program code and compiling it into an executable program compatible with the mobile device 204 .
- the application 206 can be formulated so that it presents one or more pages 208 in a graphical user interface 210 of the mobile device 204 , such as on a display screen.
- Individual systems and/or components can be implemented using hardware, firmware, software, or combinations thereof, and can be divided or joined into different number of units. Examples below will illustrate how the developer can configure the application 206 so that content 212 , for example, as an advertisement from a third party, can be presented on the page(s) 208 when the application 206 is being executed.
- a software development kit 214 can be provided to the developer for creating the application 206 and/or other programs.
- the software development kit 214 can provide editors for code and/or pseudocode, one or more compiling functions, emulating functions for previewing display content, and a debugging function, to name just a few examples.
- the software development kit 214 is also configured to provide the developer a convenient way of adding third-party content such as advertisements to a program created for mobile devices.
- the software development kit 214 can provide the developer with the necessary code and/or other application content so that advertisements are requested, displayed to a user, and that any interaction between the user and the ad is logged.
- the software development kit 214 can provide one or more objects 216 .
- the developer incorporates the object 216 in the code when creating the application.
- the software development kit 214 can provide the object(s) 216 on a screen, such as where the developer generates the overall application content, in a way that the developer can select the object and include the corresponding material in the application 206 as it is being created.
- the software development kit 214 can be configured so that the application(s) 206 can be created according to a particular platform 218 .
- the platform 218 is targeted to mobile devices, such as to the type of the mobile device 204 which can include a cell phone, a handheld device, or a personal digital assistant, to name just a few examples.
- the platform 218 can be a platform created or supported by the Open Handset Alliance.
- the object 216 is included before the application code is compiled into an executable program.
- the object 216 can be incorporated as an integrated part of the application by inserting code before compilation.
- the object 216 can perform one or more functions.
- the object 216 causes third party content such as the advertisement(s) 212 , to appear on the mobile device 204 .
- the object 216 can be responsible for requesting relevant ad(s), displaying the ad(s) in the right manner to the user, and logging whether the user clicks on the ad or otherwise interacts with the ad.
- the object 216 is a Java object that is configured to be added to a user interface of the application 206 and handle fetching and rendering of, and interaction with, content such as advertisements.
- the developer can implement a view object that extends a view class associated with the application 206 .
- an advertising view object could include the following: GoogleBaseAdView(String client).
- This object can represent a base class to create an advertisement view.
- a constructor can set the client parameter in a content ads request that can include a URL for a frontend involved in content requests.
- the above object can extend a more general view class, e.g., as a WebView class, and can in some implementations be extended by other more specific classes directed at advertising. In some examples, such an extension can use void setAdLayoutType(int placement) to specify top and/or bottom placement of the view that requests the content.
- Other ways of displaying the content e.g., an ad
- One or more functions can be used with the object 216 .
- Such function(s) can customize the look and feel of the content when it is displayed.
- such function(s) set one or more CGI parameters in a content request.
- An application program interface (API) 220 can be used with the object 216 .
- the API 220 is a Java API that a developer can call when incorporating content such as advertisements into the application 206 .
- the object 216 can include a Java code snippet that uses the Java API so that the developer can insert the code into the application 206 .
- a code snippet can construct a request for content such as an ad based on a developer's customization, fetch the content and write it to the user interface of the application 206 .
- the ad 212 can include a number of different types of content.
- ad types including, but not limited to, text ads, image ads (including static and animated images) and video ads can be used.
- the ad can provide for user navigation (e.g., a link) to other content associated with the advertiser.
- Other types of content are possible (e.g., non-advertising content).
- An advertisement distributor system 222 can be used to forward any type of content such as the ad 212 to the mobile device 204 and/or the developer system 202 .
- the advertisement distributor system 222 is configured to receive request(s) for content from the mobile device 204 , fetch one or more matching ads or other content from a repository 224 , and forward the matching content to the mobile device 204 .
- the matching of the ad 212 can be performed using a context component 226 that can provide one or more context parameters associated with the application 206 configured for identifying matching content/advertisements.
- the developer system 202 , the mobile device 204 and/or the advertisement distributor system 222 can be connected using any kind of network 223 , such as the Internet.
- the developer system 202 and the advertisement distributor system 222 can communicate using the TCP/IP suite of protocols and the mobile device 204 can communicate using any kind of wireless protocol, such as IEEE 802.11, wireless application protocol (WAP) and/or Bluetooth.
- WAP wireless application protocol
- Relevant context of the application 206 and/or the mobile device 204 can be shared in different ways.
- the developer can share context including metadata about the application 206 with the advertisement distributor system 222 .
- a context sharing component 228 in the software development kit 214 can allow the developer to enter one or more keywords that the developer decides are relevant for retrieving and presenting content such as advertisements.
- the developer who creates the application can submit the keyword(s) using the context sharing component 228 for receipt by the context component 226 for storage.
- monitoring can be performed to determine how well the submitted metadata correlates with the application 206 and if necessary, modifications in the used context parameter(s) can be made.
- context can be shared by the developer submitting the application 206 to the advertisement distributor system 222 .
- the context sharing component 228 can be used in submitting some or all of the application 206 for use in evaluating context. This can be done as part of a setup process so that the advertisement distributor system 222 can examine the application to determine the context of the content/ads to be forwarded. Examples of aspects that can be taken into account include, but are not limited to, textual content of a previous screen or page on the mobile device 204 , a content of the entire application 206 , and/or content of other view objects such as sibling objects.
- Analysis of the application 206 can include analyzing the code (such as by static analysis), determining a general context of the application 206 , or determining the specific context of one or more of the particular pages 208 . This can require the context component 226 to determine which of the pages 208 is currently active in the mobile device 204 . For example, this can be done using a version of the application 206 provided by the developer. If or when the application 206 is later updated, a revised version can be forwarded to the advertisement distributor system 222 , for example using the context sharing component 228 , so that the context can be updated if necessary.
- context can be determined by providing that the developer can specify one or more hooks in the code of the application 206 .
- the software development kit 214 and/or the platform 218 can provide such feature(s).
- a global variable can be made to change state at one or more stages of the application 206 .
- Such a variable can be read by the object 216 , such as by a snippet of Java code.
- Context parameter(s) for use in finding matching content can be stored in any of a variety of forms.
- the context component 226 can store one or more keywords, categories, labels, topics, context information and/or any other kind of parameter for use by the advertisement distributor system 222 .
- a developer can create the application 206 intended for the mobile device 204 using the software development kit 214 .
- the application 206 can be created according to the platform 218 and can include the object 216 .
- the developer can forward the application 206 to the mobile device 204 for use, for example when the mobile device 204 is initially sold or as a later update, such as by a download process.
- the developer can also provide context relating to the application 206 , such as by submitting one or more keywords and/or providing a version of the application 206 , using the context sharing component 228 .
- One or more context parameters can be registered at the advertisement distributor system 222 .
- content such as one or more ads 212 can be presented on the page(s) 208 .
- the content can be selected for presentation by the advertisement distributor system 222 based on the context parameter(s).
- the user can interact with the ad(s) 212 in one or more ways, such as by clicking on the ad 212 , performing a developer-specified combination of key presses (e.g., tapping a single key twice, or tapping two keys in rapid succession), or tapping on the ad on a touchscreen device.
- Content can be retrieved in any of a variety of ways.
- content can be retrieved essentially according to an on-demand approach.
- ads or other content can be requested from the advertisement distributor system 222 and forwarded from there for display.
- Such implementations can have the advantage that the ad that is displayed to the user can be very current to the particular state of the application 206 and/or the mobile device 204 .
- a pre-fetch approach is used.
- a developer can configure the application 206 such that multiple content portions such as ads are requested from the advertisement distributor system 222 .
- the ads can be stored at a suitable location, such as on the mobile device 204 and/or on another computer device such as a server that communicates with the mobile device 204 .
- the ad(s) can be displayed on the mobile device 204 , for example when it returns to an online mode after having been offline.
- the developer can provide for reporting of which contents/ads have been displayed, for example by incorporating a feature from the software development kit 214 into the application 206 .
- client-side frequency capping is used, for example by having a class associated with content/ad presentation, logging previously served content/ads, and ensuring that the same content/ad is presented according to a rule (e.g., not more than a predetermined number of times per session).
- a rule e.g., not more than a predetermined number of times per session.
- a new content portion such as the ad 212 can be presented when an activity that uses the class associated with content/ad presentation is displayed for the first time.
- the new ad/content can be presented when the activity has been removed from an activity stack in the mobile device 204 .
- a content/ad can be presented if a previous ad/content has been displayed for a predetermined amount of time if the mobile device 204 continues to be active (e.g., if a backlight of the display on the device remains on).
- the developer can facilitate user-initiated refresh of content/ads using a class responsible for generating gallery views, for example to provide a carousel-style browsing of ads.
- the software development kit 214 has been mentioned in examples above.
- the software development kit 214 can be extended or enhanced using a wizard in an interface directed toward publishers.
- the advertisement distributor system 222 can provide a user interface where publishers can establish an account to become affiliated with an advertising program, and this interface can feature the wizard as a way for the developer(s) to customize the look and feel of content/ads to be displayed in connection with the application 206 .
- this is implemented as a self-service sign-up process for developers, for example to allow the opportunity to enhance their application offering with ads and/or other content.
- an interface can provide reporting statistics on ad clicks, impressions, queries, revenue and/or other aspects to the advertisement distributor system 222 .
- FIG. 3 is a block diagram of an example system 300 including an ad system and one or more mobile devices.
- the mobile devices each have one or more applications having an associated API.
- the API allows for interaction with the ad system in order to request and/or receive ads for presentation in the application as well as allowing the ad system to capture data from the application for use in an ad pricing engine.
- the system 300 includes one or more mobile devices 302 a - c .
- Each of the mobile devices 302 a - c can be a cellular telephone, a smart phone, a netbook, a tablet device, or a personal digital assistant.
- one or more of the mobile devices 302 a - c is a desktop computer, a server, or a laptop.
- Each of the mobile devices 302 a - c can present content to a user.
- one or more mobile applications 304 a - c running on the mobile devices 302 a - c respectively, can present content to a user.
- the mobile applications 304 a - c can include, for example, one or more news applications, games, productivity applications, social networking applications, browsers, or utility applications.
- the mobile applications 304 a - c are the same application running on different devices, e.g., the mobile devices 302 a - c respectively.
- Each of the mobile applications 304 a - c is associated with an API 306 a - c .
- the APIs 306 a - c can request and receive content from an external system.
- the APIs 306 a - c can request an ad from an ad system 308 .
- the APIs 306 a - c can request content from a publisher (not shown) or a data storage system.
- the requested content includes a web page, productivity application data, game data, or social networking data.
- Each of the mobile devices 302 a - c can connect to the ad system 308 through a network 310 .
- the network 310 can be a local area network, a wide area network, the Internet, or any combination thereof.
- Each of the mobile devices 302 a - c can connect to the network 310 using a type of wireless protocol, e.g., IEEE 802.11, WAP and/or Bluetooth.
- one or more of the mobile devices 302 a - c is coupled to the network 310 using one or more physical cables (e.g., when the mobile device is a desktop computer).
- the ad system 308 can serve one or more ads 312 to the mobile devices 302 a - c .
- the API 306 a can request an ad from the ad system 308 .
- the ad system 308 can serve one of the ads 312 to the API 306 a , and the API 306 a can present the received ad in the mobile application 304 a .
- each of the mobile applications 304 a - c request ads using the APIs 306 a - c respectively. For example, based on ad script in html in a web page being loaded into a web browser, the web browser can request an ad from the ad system 308 using an API.
- the ad system 308 can include an ad presentation manager 314 .
- the ad presentation manager 314 can determine which of the ads 312 to serve to the mobile devices 302 a - c .
- the ad presentation manager 314 can identify and rank the ads 312 based on particular criteria in order to match the ads 312 with the requested content, the requesting API, and/or the requesting user.
- the ad presentation manager 314 can identify ads based on keywords associated with the ads 312 that correspond with the requested content in which the ads are to be presented (e.g., matching ad keywords to keywords in requested content or query terms).
- the ad presentation manager 314 uses information about the user (e.g., user profile information) to identify ads.
- the ad presentation manager 314 can send a social networking application ads based on the specific application requesting the ads (e.g., the ads are for products or services that appeal to a typical user of the social networking application).
- each of the APIs 306 a - c logs a user's interaction with the mobile applications 304 a - c , respectively.
- the mobile device 302 a can receive input from a user by one or more input sensors.
- Input sensors can include a touch screen display, a trackball, a keyboard, a microphone, and one or more buttons on the mobile device 302 a .
- the mobile device 302 a can determine that the received input is associated with the mobile application 304 a and provide the API 306 a with the received input.
- the API 306 a can log the received inputs over time.
- the received inputs are aggregated so that individually identifying information is anonymized while still maintaining the attributes or characteristics associated with particular inputs.
- the received inputs are anonymized (so that the originating mobile device or mobile device user is unidentifiable) before transmission to the system that analyzes the received inputs. In this way, the actions of individual users can be obscured or unobservable while still permitting analysis of mobile applications based on user interactions with the mobile applications. Additionally or optionally, users can be provided with an opportunity to opt in/out of programs or features that may collect personal information, including, for example, the collection or logging of user interaction information.
- each of the APIs 306 a - c can log the duration of use of each of the mobile applications 304 a - c , respectively.
- the API 306 b can log the total time a user runs the mobile application 304 b on the mobile device 302 b .
- the API 306 c logs the duration of each use of the mobile application 304 c on the mobile device 302 c .
- the API 306 a logs the duration between users of the mobile application 304 a .
- each of the APIs 306 a - c log the average usage time of each of the mobile applications 304 a - c , respectively.
- each of the APIs 306 a - c log the time of day that each of the mobile applications 304 a - c respectively is running. For example, the API 306 a can log whether the mobile application 304 a is typically run during the day or evening. In some implementations, each of the APIs 306 a - c log the total time that the mobile applications 304 a - c , respectively, are presented on a portion of a screen of the mobile devices 302 a - c and not the time that the mobile applications 304 a - c is running but not presented (e.g., when the mobile applications 304 a - c are running in the background).
- the mobile application 304 a can be a media player and the API 306 a can determine that the media player typically receives little input from a user.
- the media player can present movies to a user, and on average receive input from the user once an hour (e.g., pausing the movie).
- the media player can play songs and receive input from the user frequently (e.g., selecting a song to play).
- the mobile application 304 b can be a poker game and the API 306 b can frequently receive input from a user (e.g., selecting a card to play).
- each of the APIs 306 a - c provides the ad system 308 with logged data associated with various application information.
- each of the APIs 306 a - c provides the ad system 308 with a unique identifier associated with the mobile applications 304 a - c when providing application information.
- the APIs 306 a - c can provide an ad pricing engine 316 , included in the ad system 308 , with application interaction data.
- the ad pricing engine 316 can store various types of application data 318 including interaction or usage data from APIs 306 a - c and other application data (e.g., a number of downloads), in a database in the ad system 308 .
- application data 318 including interaction or usage data from APIs 306 a - c and other application data (e.g., a number of downloads), in a database in the ad system 308 .
- the APIs 306 a - c provide specific information or data relating to a user interaction with a mobile application (e.g., a user entered their status into a social networking application with a voice command).
- the APIs 306 a - c provide general application information (e.g., a user updated their status).
- the type of information provided by each of the APIs 306 a - c is implementation specific. For example, different types of APIs can request and receive ads from the ad system 308 .
- a developer can select settings for an API determining the type and frequency of information provided to the ad system 308 by the API.
- Other types of user interaction data that can be obtained include a frequency of invocation for the mobile application and accelerometer/GPS data (e.g., types of movement associated with using the application).
- the APIs 306 a - c can provide the application interaction data to the ad pricing engine 316 on a schedule (e.g., once a week), or at specified times (e.g., according to particular criteria, for example, when a user exits a mobile application).
- a schedule e.g., once a week
- specified times e.g., according to particular criteria, for example, when a user exits a mobile application.
- each of the APIs 306 a - c continuously provides application interaction data to the ad pricing engine 316 .
- the API 306 c can provide interaction data to the ad pricing engine 316 when the API 306 c identifies the user interaction.
- the APIs 306 a - c provide application interaction data to the ad system 308 and the ad system 308 logs the application interaction data. For example, when one of the APIs 306 a - c receives interaction data (e.g., total usage time), the API 306 a - c can send the application interaction data to the ad system 308 without logging the application interaction data.
- the application interaction data provided to the ad system 308 can be from many different mobile devices and/or mobile applications.
- the ad pricing engine 316 pre-processes the application data 318 , e.g., to remove outliers. For example, the ad pricing engine 316 can determine that particular interaction data was caused by a user dropping a mobile device and was not intended input for a mobile application on the mobile device. Thus, the ad pricing engine 316 can discard interaction data determined to be erroneous. In some implementations, the ad pricing engine 316 can group application usage data by the application associated with the usage data. For example, the ad pricing engine 316 can group usage data received by the same news application together.
- the ad pricing engine 316 can compare the grouped usage data and discard interaction data determined to be significantly different from the other interaction data in the group relating to the news application. For example, the ad pricing engine 316 can discard, or otherwise not take into consideration, application interaction data received from a user who installed and used the news application once.
- the ad pricing engine 316 can store the pre-processed application data in the same database as the application data 318 received from the mobile devices 302 a - c . In some implementations, the ad pricing engine 316 stores the pre-processed application data in another database separate from the database storing the application data 318 .
- the application usage data 318 can also include other application data not specific to individual user interaction with the application, for example, a number of downloads of the application, the type of the application, whether the application was free or a premium version purchased by the user.
- the ad pricing engine 316 includes an application classifier 320 that classifies applications based on the application data 318 .
- the application classifier 320 can map cluster names to application names in an application information table 322 , as described in greater detail below.
- the application information table 322 can include the names of the applications that use an API to request and receive ads from the ad system 308 .
- the API can be provided by the ad system 308 to developers of applications and allow the applications to request ads from the ad system 308 .
- the application information table 322 can include a unique identifier for each of the applications.
- the application classifier 320 can determine one or more application clusters that the mobile applications 304 a - c are associated with using a classification of the mobile applications, and map the cluster name to the application name or the unique identifier in the application information table 322 .
- the application classifier 320 forms clusters of applications that are similarly classified (e.g., a same or related classification). For example, clusters can be determined based on an intended functionality of the application according to the application content (e.g., game, news, productivity) or finer levels within a category, (e.g., games (arcade), games (strategy), and games (puzzles)).
- an application publisher can provide tags indicating a type of application content.
- clusters are determined using online learning based on keywords key words used in ad requests from the application, semantic analysis of an application description page in an application store (e.g., for purchasing and or downloading applications), or from manual analysis of the applications.
- other information can be used by the application classifier including time of day when mobile application usage is higher, updated rate for new versions by users, and whether or application is a premium or free version.
- no classifier is used. Instead, the pricing model is determined using user interactions for a single application.
- the ad pricing engine 316 includes a scoring engine 324 that determines an application score for each application in a cluster.
- the scoring engine 324 can use the application cluster and the application data 318 to determine a score for an application, as described in greater detail below.
- the score e.g., a quality score
- the score can provide an indication of a quality of the mobile application. For example, a particular mobile application installed on one thousand mobile devices can have a higher application score than another mobile application installed on thirteen mobile devices because higher use can indicate higher quality. Similarly, higher usage of an application by users can indicate a higher quality application.
- the application score can be used to determine an ad pricing model for advertising in the mobile application. For example, advertising in a mobile application with a higher score can cost more than advertising in a mobile application with a lower score.
- the application score can indicate an expected return on investment for advertising in a mobile application. For example, an ad presented in a mobile application with a higher application score can be expected to have a higher conversion rate than the same ad presented in a mobile application with a lower application score.
- the scoring engine 324 can store the score of each application in the application information table 322 .
- FIG. 4 is a flow chart of an example method 400 for determining content pricing for a mobile application.
- An ad system e.g., the ad system 308
- the method 400 can be performed by one or more other systems in conjunction with or instead of the ad system.
- Interaction data are received from a collection of applications ( 402 ).
- the ad system can receive application interaction data from one or more APIs (e.g., the APIs 306 a - c ) associated with one or more mobile applications (e.g., the mobile applications 304 a - c ).
- the interaction data includes information relating to user interaction with the mobile application.
- the interaction data includes information relating to the usage of the mobile application (e.g., the total time a user has spent interacting with the mobile application).
- Application data (e.g., the application data 318 ) can be stored in a database on the ad system.
- the data can include information indicating the application they are associated with, e.g., an application title or a unique identifier for the application.
- the application data includes the interaction data received from each of a collection of applications.
- the application data can also optionally include other received application data, for example, a number of downloads of the application.
- Applications are classified based on the application data ( 404 ).
- the data obtained from applications are used to build features that are used by to classify and score the applications.
- an application classifier e.g., the application classifier 320
- the application classifier can cluster applications with a similar classification.
- the application classifier can store the classification information in an application information table (e.g., the application information table 322 ) mapping the classification to the application name.
- the application classifier classifies applications after a specified amount of information relating to an application has been logged. For example, when the ad system receives application signals for a mobile application from a predetermined number of mobile devices (e.g., sixty-five) then the application classifier can determine the classification of the mobile application.
- a predetermined number of mobile devices e.g., sixty-five
- An initial score is generated for each application with a similar classification ( 406 ).
- a scoring engine e.g., the scoring engine 324
- the scoring engine can store the score, for example, in the application information table.
- the scoring engine uses one or more weights associated with different types of application data. For example, the total usage of an application can have a greater weight value than the type of input received by the application (e.g., gesture input or keyboard input).
- the scoring engine determines a user interaction score for each application in a cluster.
- the user interaction score can be based on the user interaction signals received from an API associated with an application.
- the initial score for each application is compared with an average score for applications with the similar classification ( 408 ).
- an ad pricing engine e.g., the ad pricing engine 316
- an indication to increase the price of presenting an ad in the application can be generated.
- an indication to lower the price of purchasing ad space in the application can be generated.
- the scoring engine determines a price indicator ⁇ A for an application A using the following equation:
- S i is the classification score for applications i in the cluster of application A
- U i is the score (e.g., user interaction score) for an average user for each application i in the cluster of application A
- n is the number applications in the same cluster as the application A.
- S A and U A are the respective scores for the application A. This identifies a price indicator when applications belong to a single category.
- an application can belong to multiple clusters. Assume that there are K categories/clusters in the system, ⁇ C 0 , C 1 , C K-1 ⁇ . An application A belongs to each of them with an associated weight W(A, C k ) for all k. The weight W(A, C k ) can be zero for some k's (e.g., not a member of that category). The relative score of application A in category C k is:
- the overall pricing indicator for A can be computed as:
- Content pricing for each application is calculated based on the comparison ( 410 ).
- the ad pricing engine can calculate ad pricing for each application in the same cluster.
- the ad pricing engine can store ad pricing information in the application information table. Calculating ad pricing for each application can include adjusting an existing pricing or calculating an initial pricing.
- the data (e.g., user interaction data) for each application continues to be logged and the score is periodically adjusted ( 412 ).
- the ad pricing engine can continue to receive application interaction data from APIs requesting ads from the ad system.
- the scoring engine can periodically adjust the classification score and/or the score (e.g., user interaction score) for an application.
- the ad pricing engine can determine an updated price for advertising in the application based on the adjusted scores.
- the score is updated based on a schedule (e.g., monthly, seasonally, or quarterly). In some implementations, the score is updated when the ad pricing engine receives a predetermined amount of additional application data. In some implementations, the ad pricing engine adjusts the price of advertising in an application when the developer of the application requests that the advertising price be updated.
- a schedule e.g., monthly, seasonally, or quarterly.
- the system determines a pricing model for an application based on user interactions for each individual application across multiple users of that application.
- user interaction data can be logged for a number of users of that application.
- the logged user interactions can be aggregated across users.
- a pricing model can be determined based on the aggregated user interactions, for example, the level of user interactions or the particular types of user interactions. For example, a high level of user interactions (e.g., as compared to some average or baseline value, for example, derived from collected user interaction data across applications) can indicate a higher pricing for ads.
- certain types of user interactions e.g., active touch inputs, can indicate higher pricing than other types of interactions.
- FIG. 5 is a block diagram of an example system 500 for storing mobile application information.
- An application developer 502 can use a developer system (e.g., the developer system 202 ) to create a mobile application 504 .
- the mobile application 504 can include an API that allows the mobile application 504 to request ads from an ad system (e.g., the advertisement distributor system 222 ).
- the application developer 502 can provide a data store 506 with application profile data.
- the application profile data can include pricing information for presenting advertisements in the mobile application 504 .
- the data store 506 can be included in an ad system, e.g., the ad system the mobile application 504 requests ads from.
- the data store 506 can include the application data 318 and the application information table 322 .
- the data store 506 provides information to the ad system in order to provide directed advertising in the mobile application 504 .
- the mobile application 504 can provide the data store 506 with application usage and profiling data.
- the API included in the mobile application 504 can provide usage information to the data store 506 .
- the mobile application 504 requests ads from the data store 506 for presentation in the mobile application 504 .
- An end user 508 can install the mobile application 504 on a mobile device (e.g., the mobile device 302 a ).
- the end user 508 can interact with and/or view content in the mobile application 504 .
- User interaction data can be sent to the data store 506 .
- the API included in the mobile application 504 can receive user input information from the mobile device and provide the user input information to the data store 506 .
- the data store 506 can provide ad presentation information (e.g., information identifying where to direct the particular advertisement, for example, demographics or keywords) and pricing data to an ad publisher 510 .
- ad presentation information e.g., information identifying where to direct the particular advertisement, for example, demographics or keywords
- pricing data can be provided to an ad publisher 510 .
- the ad publisher 510 can determine to purchase advertising space in one or more mobile applications.
- the ad presentation information and pricing data can provide the ad publisher 510 with information relating to the expected return on investment. For example, the ad publisher 510 can determine an expected conversion rate of ad impressions to the end user 508 for ads presented in the mobile application 504 .
- FIG. 6 is a flow diagram 600 for determining the quality of a mobile application.
- Flow diagram 600 includes, for example, various actions and/or operations relative to a mobile application 604 .
- An application is created by a developer ( 602 ). For example, the developer can create the mobile application 604 .
- a user interacts with the application ( 606 ).
- a user of a mobile device can install the mobile application 604 on a mobile device.
- the mobile application 604 can be installed on a mobile device before the mobile device is sold to the user.
- One or more user interactions 608 are received by the mobile application 604 .
- the mobile device can determine that the user interactions 608 are associated with the mobile application 604 .
- Application profiling data is generated ( 610 ).
- an application classifier e.g., the application classifier 320
- An API in the mobile application 604 can provide the application data to the application classifier.
- User profiling data is generated based on the interactions ( 612 ).
- the application classifier can generate user profiling data based on the user interactions 608 .
- the user interactions 608 can be provided to the application classifier by the API.
- Advertisements are presented in the mobile application ( 614 ).
- an ad publisher can purchase advertising space in the mobile application 604 .
- An ad presented in the mobile application 604 can be an ad directed to users of the mobile application 604 .
- the mobile application 604 can be a productivity application and the ad can be for another productivity application associated with the mobile application 604 .
- the ad can be for a product or service that is not necessarily related to the mobile application 604 but is frequently purchased by users of the mobile application 604 .
- the application profiling data, the user profiling data, and the ad publisher data are combined ( 616 ).
- a scoring engine e.g., the scoring engine 324
- Application price and/or quality predictors are generated ( 618 ).
- the scoring engine can generate a price predictor for the mobile application 604 .
- the price predictor can be a recommended price for selling advertising space in the mobile application 604 .
- the price predictor can be based on the cost of advertising space in application similar to the mobile application 604 , e.g., based on applications that are in the same cluster as the mobile application 604 .
- the scoring engine provides the developer with feedback relating to the application pricing. Additionally, in some implementations, the scoring engine provides the ad publisher with an indication of the ad pricing information. The scoring engine can determine which ad publishers to provide ad pricing information to based on the profiles of the ad publishers. For example, an ad publisher profile can include information indicating a type of mobile application in which the ad publishers typically purchases advertising space.
- the scoring engine generates a quality indicator.
- the quality indicator can be a representation of how much a typical user of a mobile application interacts with the mobile application.
- the quality indicator can be related to the conversion rate of ads presented in the mobile application.
- the scoring engine provides the quality indicator to the developer and/or one or more ad publishers.
- Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on a computer storage media for execution by, or to control the operation of, data processing apparatus.
- the computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them.
- data processing apparatus encompasses all apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers.
- the apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, or declarative or procedural languages, and it can be deployed in any form, including as a stand alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment.
- a computer program does not necessarily correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit).
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, to name just a few.
- PDA personal digital assistant
- GPS Global Positioning System
- Computer readable media suitable for storing computer program instructions and data include all forms of non volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto optical disks; and CD ROM and DVD ROM disks.
- semiconductor memory devices e.g., EPROM, EEPROM, and flash memory devices
- magnetic disks e.g., internal hard disks or removable disks
- magneto optical disks e.g., CD ROM and DVD ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- embodiments of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described is this specification, or any combination of one or more such back end, middleware, or front end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), e.g., the Internet.
- LAN local area network
- WAN wide area network
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.
Abstract
Description
is a classification score for an application i in the cluster, Ui is the user interaction score for an average user for an application i in the cluster and n is a number of applications in the cluster. The user interaction data is associated with a plurality of usage characteristics of the respective mobile application. The usage characteristics include user inputs to the mobile application. The usage characteristics include a duration of use for the mobile application. The duration of use is for each invocation of the mobile application. The duration of use is a total time over a specified time period. The method further includes classifying each application of the plurality of mobile application according to the received application data. Clustering includes clustering applications according to a similar classification.
The overall pricing indicator for A, can be computed as:
Claims (48)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/076,933 US8645199B1 (en) | 2011-03-31 | 2011-03-31 | Using application characteristics for ad pricing |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/076,933 US8645199B1 (en) | 2011-03-31 | 2011-03-31 | Using application characteristics for ad pricing |
Publications (1)
Publication Number | Publication Date |
---|---|
US8645199B1 true US8645199B1 (en) | 2014-02-04 |
Family
ID=50001780
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/076,933 Active 2031-12-10 US8645199B1 (en) | 2011-03-31 | 2011-03-31 | Using application characteristics for ad pricing |
Country Status (1)
Country | Link |
---|---|
US (1) | US8645199B1 (en) |
Cited By (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130297407A1 (en) * | 2012-05-04 | 2013-11-07 | Research In Motion Limited | Interactive advertising on a mobile device |
US20140047005A1 (en) * | 2012-08-13 | 2014-02-13 | Olivier Jacques Alexandre Radar | Targeted content streaming banners |
US20140280267A1 (en) * | 2013-03-14 | 2014-09-18 | Fotofad, Inc. | Creating real-time association interaction throughout digital media |
US20140304079A1 (en) * | 2013-04-09 | 2014-10-09 | Daum Communications Corp. | Contents and advertisement providing method and contents provision apparatus |
US20150095166A1 (en) * | 2013-02-19 | 2015-04-02 | ORIOLE MEDIA CORPORATION dbc Juice Mobile | System, method and computer program for providing qualitative ad bidding |
US20150143340A1 (en) * | 2012-03-12 | 2015-05-21 | Korea Advanced Institute Of Science And Technology | Method of classifying application in android operating system and computer-readable recording medium having program for classifying application in android operating system recorded thereon |
US20150348135A1 (en) * | 2014-05-30 | 2015-12-03 | Facebook, Inc. | Bidding for position of installed application in an interface of a mobile device |
US20160092897A1 (en) * | 2014-09-30 | 2016-03-31 | International Business Machines Corporation | Pricing an api in an api marketplace |
US20160292746A1 (en) * | 2015-04-02 | 2016-10-06 | Vungle, Inc. | Systems and methods for autonomous bids of advertisement inventory |
US10929899B2 (en) * | 2017-12-18 | 2021-02-23 | International Business Machines Corporation | Dynamic pricing of application programming interface services |
US20220067797A1 (en) * | 2020-06-09 | 2022-03-03 | At&T Intellectual Property I, L.P. | Advertising experience enabler |
Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080109285A1 (en) * | 2006-10-26 | 2008-05-08 | Mobile Content Networks, Inc. | Techniques for determining relevant advertisements in response to queries |
-
2011
- 2011-03-31 US US13/076,933 patent/US8645199B1/en active Active
Patent Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080109285A1 (en) * | 2006-10-26 | 2008-05-08 | Mobile Content Networks, Inc. | Techniques for determining relevant advertisements in response to queries |
Cited By (16)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20150143340A1 (en) * | 2012-03-12 | 2015-05-21 | Korea Advanced Institute Of Science And Technology | Method of classifying application in android operating system and computer-readable recording medium having program for classifying application in android operating system recorded thereon |
US20130297407A1 (en) * | 2012-05-04 | 2013-11-07 | Research In Motion Limited | Interactive advertising on a mobile device |
US9607313B2 (en) * | 2012-08-13 | 2017-03-28 | Blackberry Limited | Targeted content streaming banners |
US20140047005A1 (en) * | 2012-08-13 | 2014-02-13 | Olivier Jacques Alexandre Radar | Targeted content streaming banners |
US20150095166A1 (en) * | 2013-02-19 | 2015-04-02 | ORIOLE MEDIA CORPORATION dbc Juice Mobile | System, method and computer program for providing qualitative ad bidding |
US20140280267A1 (en) * | 2013-03-14 | 2014-09-18 | Fotofad, Inc. | Creating real-time association interaction throughout digital media |
US20140304079A1 (en) * | 2013-04-09 | 2014-10-09 | Daum Communications Corp. | Contents and advertisement providing method and contents provision apparatus |
US10262338B2 (en) * | 2014-05-30 | 2019-04-16 | Facebook, Inc. | Bidding for position of installed application in an interface of a mobile device |
US20150348135A1 (en) * | 2014-05-30 | 2015-12-03 | Facebook, Inc. | Bidding for position of installed application in an interface of a mobile device |
US20160092897A1 (en) * | 2014-09-30 | 2016-03-31 | International Business Machines Corporation | Pricing an api in an api marketplace |
US20160292746A1 (en) * | 2015-04-02 | 2016-10-06 | Vungle, Inc. | Systems and methods for autonomous bids of advertisement inventory |
US9792630B2 (en) * | 2015-04-02 | 2017-10-17 | Vungle, Inc. | Systems and methods for autonomous bids of advertisement inventory |
US20180040033A1 (en) * | 2015-04-02 | 2018-02-08 | Vungle, Inc. | Systems and methods for autonomous bids of advertisement inventory |
US10692117B2 (en) * | 2015-04-02 | 2020-06-23 | Vungle, Inc. | Systems and methods for autonomous bids of advertisement inventory |
US10929899B2 (en) * | 2017-12-18 | 2021-02-23 | International Business Machines Corporation | Dynamic pricing of application programming interface services |
US20220067797A1 (en) * | 2020-06-09 | 2022-03-03 | At&T Intellectual Property I, L.P. | Advertising experience enabler |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8645199B1 (en) | Using application characteristics for ad pricing | |
US20200090230A1 (en) | Systems and methods for suggesting creative types for online content items to an advertiser | |
JP5899275B2 (en) | System and method for scoring quality of advertisement and content in online system | |
US11295339B1 (en) | Tracking user conversions across mobile applications and browsers | |
US8452650B2 (en) | Dynamic pricing for content presentations | |
CA2803786C (en) | Ad privacy management | |
US7921107B2 (en) | System for generating query suggestions using a network of users and advertisers | |
US20080249855A1 (en) | System for generating advertising creatives | |
US20110288931A1 (en) | Microsite models | |
US20120072270A1 (en) | Ad Wallet | |
US20090024700A1 (en) | Ad targeting using reference page information | |
US20110307323A1 (en) | Content items for mobile applications | |
US20180300768A1 (en) | Automatic bid generation | |
US20140214883A1 (en) | Keyword trending data | |
US20170193564A1 (en) | Determining whether to send a call-out to a bidder in an online content auction | |
US20150310483A1 (en) | Determining application conversions | |
US11138368B1 (en) | Increasing comment visibility | |
US11818221B1 (en) | Transferring a state of user interaction with an online content item to a computer program | |
US9720983B1 (en) | Extracting mobile application keywords | |
US20170249658A1 (en) | Displaying estimation of content viewership | |
US9984159B1 (en) | Providing information about content distribution |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:SARKAR, SUBHADIP;DEWAN, RAJAT;SHAW, SATYAM;REEL/FRAME:026420/0190Effective date: 20110609 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0299Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
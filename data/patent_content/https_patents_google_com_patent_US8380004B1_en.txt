US8380004B1 - Object image matching and applications thereof - Google Patents
Object image matching and applications thereof Download PDFInfo
- Publication number
- US8380004B1 US8380004B1 US12/477,746 US47774609A US8380004B1 US 8380004 B1 US8380004 B1 US 8380004B1 US 47774609 A US47774609 A US 47774609A US 8380004 B1 US8380004 B1 US 8380004B1
- Authority
- US
- United States
- Prior art keywords
- object image
- list
- face
- images
- image
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V40/00—Recognition of biometric, human-related or animal-related patterns in image or video data
- G06V40/10—Human or animal bodies, e.g. vehicle occupants or pedestrians; Body parts, e.g. hands
- G06V40/16—Human faces, e.g. facial parts, sketches or expressions
- G06V40/172—Classification, e.g. identification
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/30—Scenes; Scene-specific elements in albums, collections or shared content, e.g. social network photos or video
Definitions
- This invention generally relates to image recognition.
- An individual may share digital photos via photo sharing web sites, such as the PICASSAWEB site available from Google Inc.
- Some photo sharing sites enable a user to name an object, such as a face, that appears in one or more photos. Naming each face in a large photo collection can be tedious and time-consuming for a user.
- Embodiments of this invention relate to matching object images, such as face images.
- a method matches object images from a set of object images to a root object image.
- a set of object image lists, ordered according to the relative similarity of the object images, is determined.
- Each face in the set of object images is at the origin of one of the object image lists.
- On a computing device at least one element from each of the object image lists is applied to an object extraction data structure.
- a range of object images in the object image list is determined according to elements flagged within the object extraction data structure having a particular pattern. The range of object images matches the root object image.
- a system matches object images from a set of object images to a root object image.
- the system includes a processor and a memory, coupled to the processor, that stores an object extraction module, a data structure generator module, and a shape detector module.
- the object extraction module receives a set of object image lists ordered according to the relative similarity of the object images. Each face in the set of object images is at the origin of one of the object image lists.
- the matrix generator module applies at least one element from each of the object image lists to an object extraction data structure.
- a shape detector module determines a range of object images in the object image list according to elements flagged within the object extraction data structure having a particular pattern. The range of object images matches the root object image.
- a method determines the relative similarity of object images.
- a computing device an object similarity matrix with a first axis and a second axis is determined.
- a value at a position (x, y) represents a degree of similarity between an object image x and an object image y.
- a score is determined for each unsorted object image on the first axis.
- values on both axes of the similarity matrix corresponding to the object image are swapped with values on both axes corresponding to the face with the highest score determined by the score evaluator module with an unsorted object image, sorting the previously unsorted object image. Finally, the scoring and swapping are repeated to sort each object image in the object similarity matrix.
- a system determines the relative similarity of object images.
- the system includes a processor and a memory, coupled to the processor, that stores an object similarity module, a score evaluator module, a swap module, and an object ordering module.
- the object similarity module determines an object similarity matrix with a first axis and a second axis.
- a value at a position (x, y) represents a degree of similarity between an object image x and an object image y.
- the score evaluator module determines a score for each unsorted object image on the first axis.
- FIG. 1 is a diagram illustrating a system for matching face images according to an embodiment of the present invention.
- FIG. 2 is a flowchart illustrating a face ordering method, which may be used in operation of the system in FIG. 1 .
- FIGS. 4A-F illustrate an example operation of the method in FIG. 2 .
- FIGS. 5A-F illustrate another example operation of the method in FIG. 2 .
- FIGS. 6A-E illustrate an example operation of the method in FIG. 3 .
- the present invention relates to matching object images, including face images. From a face with a known identity, embodiments can identify other faces having the same identity. As an advantage, some embodiments can identify any number of faces from a group of faces having any size. Thus, embodiments of the present invention offer a scalable way to match object images.
- FIG. 1 illustrates a system 100 for matching face images according to an embodiment of the present invention.
- System 100 includes a face database 110 , a face processing server 102 , a matched face database 150 , and a face web server 152 .
- Face processing server 102 is coupled between face database 110 and matched face database 150 .
- Face web server 152 is coupled to matched face database 150 .
- Face web server 152 is coupled to matched face database 150 .
- a user client 170 may be coupled to the face web server 152 via one or more networks 160 , such as the Internet.
- Face processing server 102 receives a root face 190 and a set of unknown faces 182 .
- Face processing server 102 may receive set of unknown faces 182 from face database 110 .
- Root face 190 may, for example, be a face image having a known identity.
- Face processing server 102 determines one or more matched faces 188 that are a set of face images from set of unknown faces 182 that match root face 190 .
- face processing server 102 may determine matched faces 188 that have the same identity as root face 190 .
- Face processing server 102 stores the matched faces 188 to a matched face database 150 .
- Face processing server 102 identifies faces from set of unknown faces 182 that match root face 190 and returns them as matched faces 188 .
- Face processing server 102 includes a face similarity module 104 , a face ordering module 120 , and a face extraction module 130 . The operation of face processing server 102 is described generally below with respect to FIG. 1 and is described in more detail with respect to FIGS. 2 and 3 .
- Face processing server 102 may, for example, receive set of unknown faces 182 or root face 190 using a SQL select statement. Alternatively, set of unknown faces 182 or root face 190 may be pushed to face processing server 102 via, for example, a web service. These examples are merely illustrative.
- Face processing server 102 determines a faces similarity matrix 184 describing the relative similarity of every face image (including root face 190 and unknown faces 182 ) to every other face image.
- matrix generally describes any data structure that includes elements addressable with at least two indexes. Other data structures may be used as would be recognized by a person of skill in the art. Row zero and column zero in the root face may correspond to the root face and each additional row and column may correspond to one of the unknown faces 182 .
- Each value at position (x, y) in face similarity matrix 184 may represent a degree of similarity between a face image x and a face image y. Faces similarity matrix 184 may determine the degree of similarity by applying any one of well-known similarity algorithms. In one illustrative example, a similarity algorithm may operate by identifying a feature vector corresponding to each image and determining a Euclidean distance between the feature vectors.
- face ordering module 120 determines face lists 186 ordered according to the relative similarity of the various faces.
- Face ordering module 120 includes a score evaluator module 122 and a swap module 124 .
- Score evaluator module 122 determines a score based on face similarity matrix 184 .
- Swap module 124 reorders the values in face similarity matrix 184 based on the score determined by score evaluator module 122 .
- Face ordering module 120 controls score evaluator module 122 and swap module 124 and signals the modules to repeatedly score and swap data values to order the values in face similarity matrix 184 . How the faces may be ordered is described in more detail below with respect to FIG. 2 .
- face lists are captured and sent to face extraction module 130 as face lists 186 .
- Each face list is an ordered list of face images.
- Each face list in face lists 186 may have a different face at its origin.
- each face list may have an unknown face or root face at its origin.
- each face list may include every face ordered according to the faces' relative similarity. For example, suppose R is a root face and A-F are unknown faces. There may be face lists starting with each of A-F and R. Further, each face list includes A-F and R, and is ordered according to the similarity of the face at the origin to each of the other faces.
- Example face lists are illustrated in FIG. 6A and described further below.
- face extraction module 130 identifies matched faces 188 that match root face 190 .
- face extraction module 130 uses a matrix generator module 132 and a square detector module 154 .
- Matrix generator module 132 may create and initialize a face extraction matrix. As mentioned earlier, use of a matrix is merely illustrative, other data structures may be used as would be recognized by a person skilled in the art given this description. Matrix generator module 132 may repeatedly apply an element from each of the face lists 186 to the face extraction matrix by, for example, flagging cells in the matrix.
- Square detector module 154 evaluates the cells flagged in the face extraction matrix. When the cells flagged in the face extraction matrix resemble a square positioned toward the origin of the face extraction matrix, then face extraction module returns the corresponding faces as matched faces 188 . Other shapes or patterns may be detected aside from a square. Matched faces 188 may be, for example, the faces corresponding to the columns or rows occupied to by the square detected by square detector module 154 .
- detector module 154 may detect a pattern by determining a range value.
- the portions of the face lists running to the range value may result in a maximum similarity value when applied to a similarity function.
- the range of face images in the face image list beginning with the root object image the range running to the range value may be the matching face images.
- Face processing server 102 may store matched faces 188 in matched face database 150 , or face processing server 102 may send matched faces 188 directly to face web server 152 to be formatted for display on user client 170 .
- Each of face similarity module 104 , face ordering module 120 , score evaluator module 122 , swap module 124 , face extraction module 130 , matrix generator module 132 and square detector module 154 may be implemented in hardware, software, firmware or any combination thereof.
- Face processing server 102 , face web server 152 and user client 170 may be implemented on any type of computing device.
- Such computing device can include, but is not limited to, a personal computer, mobile device such as a mobile phone, workstation, embedded system, game console, television, set-top box, or any other computing device.
- a computing device can include, but is not limited to, a device having a processor and memory for executing and storing instructions.
- Software may include one or more applications and an operating system.
- Hardware can include, but is not limited to, a processor, memory and graphical user interface display.
- the computing device may also have multiple processors and multiple shared or separate memory components.
- the computing device may be a clustered computing environment or server farm.
- Face web server 152 may be, for example, a photo sharing site, such as a PICASSAWEB site. Face web server 152 may include a web server that responds to a hypertext transfer protocol (HTTP) request with an HTTP reply.
- HTTP hypertext transfer protocol
- the web server may be, without limitation, Apache HTTP Server, Apache Tomcat, MICROSOFT Internet Information Server, JBoss Application Server, WEBLOGIC Application Server, or SUN Java System Web Server.
- the web server may serve content such as hypertext markup language (HTML), extendable markup language (XML), documents, videos, images, multimedia features, or any combination thereof. These examples are strictly illustrative and do not limit the present invention.
- Face web server 152 may send content to user client 170 .
- User client 170 may include a browser, such as a web browser, that communicates with face web server 152 to display content to a user.
- User client 170 may also accept input from a user and send data to face web server 152 .
- user client 170 may display matched faces, such as matched faces 188 , to a user.
- system 100 identifies faces in set of unknown faces 182 that match root face 190 and displays the matched faces to the user.
- system 100 executes a face ordering method and a face extraction method.
- a face ordering method is described with respect to FIG. 2
- a face extraction method is described with respect to FIG. 3 .
- FIG. 2 is a flowchart illustrating a face ordering method 200 .
- method 200 is described with respect to illustrative examples on FIGS. 4A-F and 5 A-F. However, the method should not be limited thereto. A person skilled in the art given this description would recognize other applications of face ordering method 200 .
- Method 200 begins by determining a face similarity matrix at step 202 .
- An example face similarity matrix is illustrated in example 400 in FIG. 4A .
- FIG. 4A shows an initial face similarity matrix 402 that illustrates a degree of similarity between each of faces A-F and R.
- Face R may be a root face and faces A-F may be unknown faces.
- each cell (x, y) has a value between zero and one denoting a degree of similarity between a face x and a face y.
- the degree of similarity may be determined using known similarity functions.
- face similarity matrix 402 the degree of similarity between face A and face R is 0.35.
- the degree of similarity between face A and face D is 0.78.
- the diagonal of the matrix is the maximum similarity value (in this case one) because for those cells faces are compared with themselves.
- the degree of similarity may be determined by applying any one of well-known similarity algorithms.
- a similarity algorithm may operate by identifying a feature vector corresponding to each image and determining a Euclidean distance between the feature vectors.
- Similarity values for the root face are at the origin of each axis. In other words, each value having a row or column zero compares a face with the root face.
- the root face may be a face image having a known identity. In the case where multiple face images have the known identity (for example multiple faces that the user has identified as being “John Doe”), the root face may be a composite face.
- the similarity values for the root face may be an aggregate (such as an average or median) of the similarity values for several known face images. For example, suppose the user had identified two face images as being “John Doe”.
- the face similarity function may be applied to the first known face and face B yielding a value of 0.57, and the face similarity function may be applied to the second known face and face B yielding a value of 0.67.
- the values 0.57 and 0.67 may be averaged to determine the similarity value between face B and the root face R.
- the similarity value may be 0.62.
- method 200 enters into an outer and inner loop.
- a loop index “c” for the inner loop is set to one at step 204 .
- a score is determined according to a function f(0 . . . c-1, r) for each row r starting at c. Although other functions may be used, in examples herein f(0 . . . c-1, r) for a given r is simply the sum of all the values in the columns from column 0 to column c-1 for row r.
- the row and column with the maximum score are swapped with row and column c.
- the value c is incremented.
- the inner loop may be repeated until c is greater than or equal to the number of columns.
- An example operation of the inner loop is illustrated in FIGS. 4B-F .
- the first iteration of the inner loop is illustrated by a diagram 410 in FIG. 4B .
- the loop index c is set to 1.
- all the values in the columns from column 0 to column c-1 for the row r are summed. With c being one, the sum runs from column 0 to column 0. In other words, for the first iteration, no sum is required.
- the score for each row is simply the value of the row at column 0.
- face similarity matrix 402 in FIG. 4A the scores for the rows corresponding to faces A, B, C, D, E, and F are 0.35, 0.62, 0.43, 0.52, 0.12, and 0.17 respectively.
- the row corresponding to face B has the highest score.
- the row and column corresponding to face B is swapped with row and column 1.
- the resulting matrix is illustrated by a face similarity matrix 412 in FIG. 4B .
- the loop index c is incremented to 2.
- the second iteration is illustrated in diagrams 420 and 430 in FIGS. 4C and 4D .
- the score for each row starting at row 2 is determined as at step 206 .
- the sum of the values in for columns 0-1 are taken for that row. For example, in row 2, the values at columns 0 and 1 are 0.35 and 0.92. The sum of 0.35 and 0.92 is 1.27.
- the score for row 2 is 1.27.
- the scores for each row are illustrated in diagram 420 at column 424 .
- a face image corresponding to the row with the maximum score is determined.
- the face's corresponding row and column are swapped with row and column 2 at step 208 .
- row 2 has the highest score. Since step 208 would effectively swap row and column 2 with itself, no swap is necessary. This is illustrated in diagram 430 in FIG. 4D .
- a face similarity matrix 432 has not undergone a swap.
- FIGS. 4E-F illustrate a third iteration of the inner loop in diagrams 440 and 450 .
- the loop index c is incremented to 3.
- the scores are calculated at column 444 .
- Row 4 has the highest score. So, row and column 4 is swapped with row and column 3 as illustrated in diagram 450 .
- decision block 212 repeats the inner loop at steps 206 - 210 until the loop index c is equal to the number of columns.
- the faces in the matrix are sorted generally according to the degree of similarity to the root face R. So, the row and column of values corresponding to the root face R would be at row 0 and column 0 in the face similarity matrix.
- the order of the faces in the matrix is captured.
- the face list begins with a root face R.
- the captured face list may be “R, B, C, A, D, E, F”.
- steps 204 - 214 are repeated for different face similarity matrixes having different faces at their origin.
- a new face similarity matrix is determined with values corresponding to an unknown face at row and column zero.
- Decision block 216 repeats the process until face lists are captured having every face at an origin. An example of how steps 204 - 214 are repeated is illustrated in FIGS. 5A-F .
- FIG. 5A shows a diagram 500 with an example face similarity matrix 502 .
- Face similarity matrix 502 has values corresponding to an unknown face A at row and column zero.
- FIGS. 5B-F illustrate iterations of the inner loop to sort the face similarity matrix.
- the inner loop operates in much the same way as described with respect to FIGS. 4B-F .
- a row from row 1-6 is determined having the maximum score.
- the corresponding row and column are swapped with row and column 1 of face similarity matrix 502 .
- the score f(column 0 . . . 1, row n) is evaluated for columns 0 . . . 1 and each row n, where n goes from 2-6.
- the row and column with the maximum score are swapped with row and column 2.
- row n is evaluated for columns 0 . . . 2 and each row n, where n goes from 3-6.
- row and column with the maximum score are swapped with row and column 3.
- each face is at the origin of one captured face list.
- Example face lists are illustrated in FIG. 6A . How the captured face lists may be used to determine matching faces is illustrated in FIG. 3 .
- FIG. 3 is a flowchart illustrating a method 300 for determining matching faces using the face lists, such as those captured in method 200 in FIG. 2 .
- method 300 is described with respect to examples in FIGS. 6A-E . However, method 300 should not be limited thereto.
- Method 300 begins by receiving a set of face lists. Each face, including the root face and each unknown face, is at the origin of one face list in the set of face lists.
- An example set of face lists is illustrated in diagram 608 in FIG. 6A .
- Diagram 608 shows a set of face lists 602 .
- the set of face lists 602 are reordered at 604 according to the order of faces in the root face list. This reordering set is optional and is shown here to make the remaining steps of method 300 easier to follow.
- FIG. 6B shows an example face extraction matrix 610 indexed according to the root face list. Each row and column corresponds to a face and is ordered according to the face list that starts with the root face—“R, B, C, A, D, E, F”.
- method 300 enters a loop.
- the loop index n is set to one at step 306 .
- the nth element of each face list is applied to the face extraction matrix.
- the nth element of each face list may be applied by flagging the value of the matrix that has a column corresponding to the first element of the face list and a row corresponding to the nth face of the face list.
- the flagged elements are examined to see if they resemble a particular shape.
- the shape may be a square positioned towards the origin of the face extraction matrix.
- the square may have elements missing.
- the square may be a requisite size.
- the square may have to be larger than 2 by 2.
- a square smaller than or equal to the requisite size may be acceptable only if no larger square is detected.
- method 300 may be repeated to look for a different shape. An example operation of method 300 is illustrated in FIGS. 6B-E .
- FIG. 6B shows face extraction matrix 610 where the first element of each face list has been applied.
- the nth element of each face list is applied by flagging the value of the matrix that has a column corresponding to the first element of the face list and a row corresponding to the nth face of the face list.
- the first element of each face list is applied by flagging the value of the matrix that has a column corresponding to the first element of the face list and a row corresponding to the first face of the face list.
- the cell (x, x) is flagged.
- the first iteration results in a diagonal across face extraction matrix 610 .
- no square is detected in face extraction matrix 610 , so the loop repeats for a second iteration.
- FIG. 6B shows face extraction matrix 620 where the second element of each face list has been applied.
- face extraction matrix 620 the second element of each face list is applied by flagging the value of the matrix that has a column corresponding to the first element of the face list and a row corresponding to the second face of the face list.
- the face list for root face R has as its second element unknown face B.
- the element of face extraction matrix 610 at column zero corresponding to face R and row one corresponding to face B is flagged.
- the face list for unknown face D has as its second element unknown face E.
- the element of face extraction matrix 610 at column four corresponding to unknown face D and row five corresponding to face E is flagged.
- a third iteration of the loop is illustrated with a face extraction matrix 640 in FIG. 6D .
- the third element of each face list has been applied to face extraction matrix 640 in much the same way as described for previous iterations.
- the elements flagged in the face extraction matrix 640 still do not resemble a square positioned at the matrix's origin.
- the loop repeats for a fourth iteration as illustrated at a face extraction matrix 650 in FIG. 6E .
- face extraction matrix 650 a shape 652 is detected.
- Shape 652 need not be a perfect square. In this example, shape 652 only resembles a square as it has an element 654 that is not flagged. In other examples, an entire row or column of the shape may not be flagged.
- faces corresponding to shape 652 are returned as the faces matching the root face R.
- shape 652 occupies columns 0-3 corresponding to faces R, B, C, and A.
- faces A, B, and C match root face R.
- the face matching process described for FIGS. 2-3 is scalable.
- the matrix may be expanded to search any number of unknown faces with any number of matching faces.
- the face matching process described for FIGS. 2-3 may not diminish in accuracy as the number of unknown and matching faces grow.
- the accuracy of the face matching process may actually improve as the pool of faces grows. This effect may be due to the way the process aggregates similarity values in scoring and sorting faces.
- FIG. 7 is a diagram 700 illustrating an example user interface, which may be used by system 100 in FIG. 1 .
- the example user interface may be, for example, a user interface of a photo sharing website.
- screenshot 702 may be a main page for the photo sharing website.
- the user may navigate to a face naming interface at a display view 704 .
- Display view 704 includes a listing of unnamed face images.
- the face images may be, for example, detected and parsed out of a photographs uploaded by a user.
- the face matching algorithm described above with respect to FIGS. 2-3 may be executed to determine other matching face images.
- the root face may be the face selected by the user and the unknown faces may be the other unnamed face images that are displayed in display view 704 .
- the matching face images may be displayed in a region 716 in a display view 706 .
- the root face image is also displayed at a region 714 .
- the user can manually prune or grow the matched faces using another display view 708 .
Abstract
Description
Claims (14)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/477,746 US8380004B1 (en) | 2009-06-03 | 2009-06-03 | Object image matching and applications thereof |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/477,746 US8380004B1 (en) | 2009-06-03 | 2009-06-03 | Object image matching and applications thereof |
Publications (1)
Publication Number | Publication Date |
---|---|
US8380004B1 true US8380004B1 (en) | 2013-02-19 |
Family
ID=47682886
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/477,746 Expired - Fee Related US8380004B1 (en) | 2009-06-03 | 2009-06-03 | Object image matching and applications thereof |
Country Status (1)
Country | Link |
---|---|
US (1) | US8380004B1 (en) |
Cited By (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20140123040A1 (en) * | 2012-10-25 | 2014-05-01 | Sony Corporation | Information processing apparatus, method, and program |
US20150023601A1 (en) * | 2013-07-19 | 2015-01-22 | Omnivision Technologies, Inc. | Robust analysis for deformable object classification and recognition by image sensors |
US9444999B2 (en) | 2014-08-05 | 2016-09-13 | Omnivision Technologies, Inc. | Feature detection in image capture |
US10990811B2 (en) * | 2005-09-28 | 2021-04-27 | Avigilon Patent Holding 1 Corporation | Image classification and information retrieval over wireless digital networks and the internet |
Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5261007A (en) * | 1990-11-09 | 1993-11-09 | Visidyne, Inc. | Frequency division, energy comparison signal processing system |
US20040037474A1 (en) * | 2002-06-03 | 2004-02-26 | Omnigon Technologies Ltd. | Method of detecting, interpreting, recognizing, identifying and comparing n-dimensional shapes, partial shapes, embedded shapes and shape collages using multidimensional attractor tokens |
US20050271297A1 (en) * | 2004-05-04 | 2005-12-08 | Zbilut Joseph P | Methods using recurrence quantification analysis to analyze and generate images |
US7120278B2 (en) * | 2001-08-24 | 2006-10-10 | Kabushiki Kaisha Toshiba | Person recognition apparatus |
US7274822B2 (en) | 2003-06-30 | 2007-09-25 | Microsoft Corporation | Face annotation for photo management |
US20070286531A1 (en) * | 2006-06-08 | 2007-12-13 | Hsin Chia Fu | Object-based image search system and method |
-
2009
- 2009-06-03 US US12/477,746 patent/US8380004B1/en not_active Expired - Fee Related
Patent Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5261007A (en) * | 1990-11-09 | 1993-11-09 | Visidyne, Inc. | Frequency division, energy comparison signal processing system |
US7120278B2 (en) * | 2001-08-24 | 2006-10-10 | Kabushiki Kaisha Toshiba | Person recognition apparatus |
US20040037474A1 (en) * | 2002-06-03 | 2004-02-26 | Omnigon Technologies Ltd. | Method of detecting, interpreting, recognizing, identifying and comparing n-dimensional shapes, partial shapes, embedded shapes and shape collages using multidimensional attractor tokens |
US7274822B2 (en) | 2003-06-30 | 2007-09-25 | Microsoft Corporation | Face annotation for photo management |
US20050271297A1 (en) * | 2004-05-04 | 2005-12-08 | Zbilut Joseph P | Methods using recurrence quantification analysis to analyze and generate images |
US20070286531A1 (en) * | 2006-06-08 | 2007-12-13 | Hsin Chia Fu | Object-based image search system and method |
Non-Patent Citations (3)
Title |
---|
Sorting [online], www.dfstermole.net, 2007 [retrieved on Jun. 21, 2012]. Retrieved from the Internet: , pp. 1-6. * |
Sorting [online], www.dfstermole.net, 2007 [retrieved on Jun. 21, 2012]. Retrieved from the Internet: <URL: http://web.archive.org/web/20070206174635/http://www.dfstermole.net/Pascal/hsorting.html>, pp. 1-6. * |
Zhang, L., et al., "Efficient Propagation for Face Annotation in Family Albums" Proceedings of the 12th ACM International Conference on Multimedia, Oct. 10-16, 2004, 8 pages. |
Cited By (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10990811B2 (en) * | 2005-09-28 | 2021-04-27 | Avigilon Patent Holding 1 Corporation | Image classification and information retrieval over wireless digital networks and the internet |
US20140123040A1 (en) * | 2012-10-25 | 2014-05-01 | Sony Corporation | Information processing apparatus, method, and program |
US20150023601A1 (en) * | 2013-07-19 | 2015-01-22 | Omnivision Technologies, Inc. | Robust analysis for deformable object classification and recognition by image sensors |
US9444999B2 (en) | 2014-08-05 | 2016-09-13 | Omnivision Technologies, Inc. | Feature detection in image capture |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10210179B2 (en) | Dynamic feature weighting | |
CN106547744B (en) | Image retrieval method and system | |
US8880566B2 (en) | Assembler and method thereof for generating a complex signature of an input multimedia data element | |
US9031999B2 (en) | System and methods for generation of a concept based database | |
JP5282658B2 (en) | Image learning, automatic annotation, search method and apparatus | |
CN102422319B (en) | Image retrieval method and image registration method | |
US20120093375A1 (en) | Identifying images using face recognition | |
CN108334644B (en) | Image-recognizing method and device | |
US20220222918A1 (en) | Image retrieval method and apparatus, storage medium, and device | |
CN110503076B (en) | Video classification method, device, equipment and medium based on artificial intelligence | |
CN110162665B (en) | Video searching method, computer device and storage medium | |
US20100042646A1 (en) | System and Methods Thereof for Generation of Searchable Structures Respective of Multimedia Data Content | |
CN110717527A (en) | Method for determining target detection model by combining void space pyramid structure | |
CN108197669B (en) | Feature training method and device of convolutional neural network | |
CN111797326A (en) | False news detection method and system fusing multi-scale visual information | |
CN112101437A (en) | Fine-grained classification model processing method based on image detection and related equipment thereof | |
US8380004B1 (en) | Object image matching and applications thereof | |
CN110059212A (en) | Image search method, device, equipment and computer readable storage medium | |
CN116612324A (en) | Small sample image classification method and device based on semantic self-adaptive fusion mechanism | |
CN115115825A (en) | Method and device for detecting object in image, computer equipment and storage medium | |
CN111680183B (en) | Object retrieval method and device, storage medium and electronic equipment | |
WO2022134104A1 (en) | Systems and methods for image-to-video re-identification | |
CN112348008A (en) | Certificate information identification method and device, terminal equipment and storage medium | |
CN112149747A (en) | Hyperspectral image classification method based on improved Ghost3D module and covariance pooling | |
CN116628263A (en) | Video retrieval method and device based on multiple modes, electronic equipment and storage medium |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOFFAT, BRIAN;REEL/FRAME:029614/0260Effective date: 20050801 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0299Effective date: 20170929 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20210219 |
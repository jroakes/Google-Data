US10706840B2 - Encoder-decoder models for sequence to sequence mapping - Google Patents
Encoder-decoder models for sequence to sequence mapping Download PDFInfo
- Publication number
- US10706840B2 US10706840B2 US15/846,634 US201715846634A US10706840B2 US 10706840 B2 US10706840 B2 US 10706840B2 US 201715846634 A US201715846634 A US 201715846634A US 10706840 B2 US10706840 B2 US 10706840B2
- Authority
- US
- United States
- Prior art keywords
- neural network
- recurrent neural
- output
- sequence
- training
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
- 238000013507 mapping Methods 0.000 title description 4
- 238000013528 artificial neural network Methods 0.000 claims abstract description 245
- 230000000306 recurrent effect Effects 0.000 claims abstract description 171
- 238000000034 method Methods 0.000 claims abstract description 82
- 238000013518 transcription Methods 0.000 claims abstract description 46
- 230000035897 transcription Effects 0.000 claims abstract description 46
- 230000008569 process Effects 0.000 claims abstract description 43
- 238000012549 training Methods 0.000 claims description 91
- 230000006870 function Effects 0.000 claims description 48
- 238000012545 processing Methods 0.000 claims description 46
- 238000004364 calculation method Methods 0.000 claims description 21
- 238000009826 distribution Methods 0.000 claims description 21
- 230000007704 transition Effects 0.000 claims description 17
- 230000001419 dependent effect Effects 0.000 claims description 9
- 239000013598 vector Substances 0.000 description 38
- 238000004590 computer program Methods 0.000 description 12
- 230000001537 neural effect Effects 0.000 description 12
- 230000009471 action Effects 0.000 description 8
- 238000010586 diagram Methods 0.000 description 8
- 238000012805 post-processing Methods 0.000 description 7
- 238000004891 communication Methods 0.000 description 5
- 230000000644 propagated effect Effects 0.000 description 5
- 230000003287 optical effect Effects 0.000 description 4
- 230000007246 mechanism Effects 0.000 description 3
- 238000003062 neural network model Methods 0.000 description 3
- 230000004044 response Effects 0.000 description 3
- 238000005070 sampling Methods 0.000 description 3
- 230000026676 system process Effects 0.000 description 3
- 230000004913 activation Effects 0.000 description 2
- 230000003993 interaction Effects 0.000 description 2
- 230000001902 propagating effect Effects 0.000 description 2
- 238000013515 script Methods 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 239000007787 solid Substances 0.000 description 2
- 230000002123 temporal effect Effects 0.000 description 2
- 238000012614 Monte-Carlo sampling Methods 0.000 description 1
- 238000013459 approach Methods 0.000 description 1
- 230000009286 beneficial effect Effects 0.000 description 1
- 230000002457 bidirectional effect Effects 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 238000004422 calculation algorithm Methods 0.000 description 1
- 238000013527 convolutional neural network Methods 0.000 description 1
- 238000013500 data storage Methods 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000007726 management method Methods 0.000 description 1
- 229920001690 polydopamine Polymers 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/08—Speech classification or search
- G10L15/16—Speech classification or search using artificial neural networks
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/04—Architecture, e.g. interconnection topology
- G06N3/044—Recurrent networks, e.g. Hopfield networks
-
- G06N3/0445—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/04—Architecture, e.g. interconnection topology
- G06N3/045—Combinations of networks
-
- G06N3/0454—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/08—Learning methods
- G06N3/084—Backpropagation, e.g. using gradient descent
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/08—Speech classification or search
- G10L15/14—Speech classification or search using statistical models, e.g. Hidden Markov Models [HMMs]
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/22—Procedures used during a speech recognition process, e.g. man-machine dialogue
-
- G06N7/005—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N7/00—Computing arrangements based on specific mathematical models
- G06N7/01—Probabilistic graphical models, e.g. probabilistic networks
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/02—Feature extraction for speech recognition; Selection of recognition unit
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/06—Creation of reference templates; Training of speech recognition systems, e.g. adaptation to the characteristics of the speaker's voice
- G10L15/063—Training
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/08—Speech classification or search
- G10L15/18—Speech classification or search using natural language modelling
- G10L15/183—Speech classification or search using natural language modelling using context dependencies, e.g. language models
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/02—Feature extraction for speech recognition; Selection of recognition unit
- G10L2015/025—Phonemes, fenemes or fenones being the recognition units
Definitions
- This specification relates to neural networks and speech recognition systems.
- a recurrent neural network model can be used as an end-to-end speech recognition system.
- the model can be trained to perform a sequence mapping task, with the model estimating an alignment between an input sequence, e.g., frames of audio data, and an output target sequence, e.g., graphemes.
- the sequence of graphemes that is indicted by the model can then be used to provide a transcription for speech.
- the recurrent neural network model can use an encoder and a decoder that are implemented using recurrent neural networks.
- This type of model is referred to below as a Recurrent Neural Aligner (RNA) speech recognition system.
- the RNA speech recognition system can be used for sequence to sequence mapping tasks, such as the determination of a sequence of graphemes corresponding to audio data.
- the decoder neural network included in the RNA speech recognition system does not make a conditional independence assumption for label predictions. In other words, the decoder does not assume that each output is independent of the previous outputs. For example, the decoder can use a predicted label for time index t ⁇ 1 as an additional input to the model when predicting the label for time index t.
- RNA speech recognition system provides additional context, enabling the RNA speech recognition system to accurately recognize and transcribe audio.
- the use of feedback in providing label selection decisions to the decoder allows the system to recognize speech without the need for external language models.
- there is significant flexibility in processing the output of the decoder for example, using a simple selection of the highest-likelihood label for each frame, or using a beam search process.
- the decoder is configured to predict labels from among a predetermined set of labels.
- the set of labels can include labels corresponding to different linguistic units.
- different labels may represent different graphemes.
- Graphemes can represent different units of written language. Each grapheme can be a letter or a combination of letters that represent a sound, e.g., a phoneme, in a word.
- labels that are predicted may represent punctuation, such as a space, period, comma, or other punctuation.
- the set of labels can also include a “blank” label that does not indicate acoustic properties of audio data or written output representing the audio data.
- the blank label can act as a placeholder that does not specify an output classification.
- the input sequence provided to the decoder e.g., a sequence of acoustic feature vectors, is longer than the output sequence, e.g., a sequence of phone label predictions.
- the decoder can use the blank label to fill in gaps or act as padding between instances of output labels specifying phones or other acoustic content.
- the decoder can also use the blank label to defer a classification decision, by a variable amount of delay, until the decoder receives a sufficient amount of input data to make an appropriate prediction. For example, even after receiving input data representing the sounds of a spoken word, the decoder may indicate blank labels as output and delay indicating the graphemes of the word until receiving input representing the content of the next word in the sequence. In this manner, the decoder is not required to specify a classification or prediction for each time step or input vector. The decoder can wait to receive a variable amount of additional input data before providing a classification result.
- the decoder may also be configured to provide label predictions according to other constraints used by CTC models.
- the decoder can also be trained to indicate the occurrence of graphemes or other linguistic units in the same order that the corresponding phones are represented in the input data.
- the decoder may be trained to indicate the occurrence of a phone with the corresponding label at only single time step, even if the duration of the phone spans multiple time steps. For example, even if an “a” sound occurs over three frames or time steps, the decoder may indicate the output label representing that instance of the “a” sound only once in the output sequence.
- Recurrent neural networks can store information about prior data processed in the network, for example, through a directed cycle or memory elements. Notwithstanding this memory about previous inputs and processed data, CTC models typically do not receive and use input about the classification result for the previous time step as input to the input layer during processing for the current time step. Indeed, when a model generates an output distribution over various possible labels, the selection of a particular output label is typically not indicated to the model.
- the model discussed below can receive data indicating a previously selected output label, such as the output label for the immediately previous time step. The model can use this information to increase the accuracy of speech recognition results. Depending on the implementation, other data indicative of the results of prior classification may additionally or alternatively be provided.
- the encoder and/or decoder may receive, as input, a score associated with a previously selected output label, an indication of multiple candidate output labels that are predicted to be the most likely (e.g., the top 3 or top 10 labels with the highest likelihood), classifications and/or associated scores for multiple prior time steps, or other data that includes or is derived from outputs of the decoder.
- one innovative aspect of the subject matter described in this specification can be embodied in methods performed by one or more computers of a speech recognition system, the methods including the actions of obtaining, by the one or more computers, acoustic data representing an utterance, the acoustic data corresponding to time steps in a series of time steps; processing, by the one or more computers, scores indicative of the acoustic data using a recurrent neural network to generate a sequence of outputs, wherein the sequence of outputs indicates likely output labels from among a predetermined set of output labels, wherein the predetermined set of output labels includes output labels that respectively correspond to different linguistic units and to a placeholder label that does not represent a classification of acoustic data, wherein the recurrent neural network is configured to use an output label indicated from a previous time step to determine an output label for the current time step; processing the generated sequence of outputs to generate a transcription of the utterance; and providing, by the one or more computers, the generated transcription of the utterance as output of the speech
- inventions of this aspect include corresponding computer systems, apparatus, and computer programs recorded on one or more computer storage devices, each configured to perform the actions of the methods.
- a system of one or more computers can be configured to perform particular operations or actions by virtue of software, firmware, hardware, or any combination thereof installed on the system that in operation may cause the system to perform the actions.
- One or more computer programs can be configured to perform particular operations or actions by virtue of including instructions that, when executed by data processing apparatus, cause the apparatus to perform the actions.
- processing the generated sequence of outputs to generate a transcription of the utterance comprises determining a most likely output sequence of linguistic units.
- determining the most likely output sequence comprises applying one or more of (i) beam search processing, (ii) a language model, and (iii) one or more linguistic rules.
- processing the generated sequence of outputs to generate a transcription of the utterance comprises: removing, from a sequence of output labels that the outputs of the recurrent neural network indicate to be most likely, output labels corresponding to the placeholder output label; and concatenating graphemes indicated by the remaining output labels in the sequence of output labels that the outputs of the recurrent neural network indicate to be most likely.
- the recurrent neural network comprises one or more recurrent neural network layers and an output layer.
- the output layer estimates a conditional probability distribution representing the probability of an alignment between the scores indicative of the acoustic data and the sequence of outputs, wherein the conditional probability distribution comprises a product of output conditional probabilities for each time step, each output conditional probability representing the probability of an output for a respective time step given (i) the score for the respective time step, and (ii) an output for a preceding time step.
- the one or more recurrent neural network layers comprises LSTM neural network layers and the output layer comprises a softmax output layer.
- the output for the first time step in the series of time steps is defined as an output label representing the placeholder label.
- the recurrent neural network has been trained to process received input acoustic sequences and generate sequences of outputs, the training comprising: obtaining a plurality of training examples, each training example comprising (i) an input acoustic sequence of scores indicative of the acoustic data at each of multiple time steps in a series of time steps, the input acoustic sequence representing a known utterance, and (ii) a corresponding target sequence of linguistic units representing a transcription of the utterance; training the recurrent neural network to minimize a log likelihood loss function using the plurality of training examples; and training the recurrent neural network to minimize an expected loss function using the plurality of training examples.
- training the recurrent neural network to minimize a negative log likelihood loss function using the plurality of training examples comprises, for each training example: representing possible alignments between the input acoustic sequence and the target sequence of linguistic units as a lattice, each node in the lattice represents a respective state of the recurrent neural network, each state of the recurrent neural network being dependent on a respective time step from the series of time steps and a respective position in the target sequence of linguistic units, and wherein transitions between nodes in the lattice represent probabilities of observing respective subsequent linguistic units or placeholder labels in the target sequence of linguistic units; performing forward calculations through the lattice to update each recurrent neural network state; approximating the log likelihood loss function using the updated recurrent neural network states; and performing back propagation techniques using the approximated log likelihood function to adjust recurrent neural network parameters to trained recurrent neural network parameters.
- the possible alignments are constrained to allow placeholder label repetitions only.
- performing forward calculations through the lattice to update each recurrent neural network state comprises determining values of multiple forward variables, wherein each forward variable corresponds to a respective time step from ⁇ 1, . . . , t ⁇ and represents a probability of outputting a particular sequence of n linguistic units up to the respective time step.
- performing forward calculations through the lattice to update each recurrent neural network state comprises: determining that two different transitions between start node (t ⁇ 1, n ⁇ 1) and end node (t, n) exist in the lattice, the two different transitions comprising a first transition through a first intermediate node (t, n ⁇ 1) and a second transition through a second intermediate node (t ⁇ 1, n); updating the recurrent neural network state for the end node to equal a recurrent neural network state corresponding to the start node (t ⁇ 1, n ⁇ 1) if the product of (i) a forward variable for node (t ⁇ 1, n ⁇ 1), and (ii) probability of outputting a linguistic unit at node (t ⁇ 1, n ⁇ 1) is greater than the product of (i) a forward variable for node (t ⁇ 1, n), and (ii) probability of outputting a placeholder label at node (t ⁇ 1, n); and updating the recurrent neural network state for the end node to equal
- the method further comprises defining multiple backward variables as the probability of outputting a particular sequence of N-n linguistic units from the particular time t.
- performing forward calculations through the lattice to update each recurrent neural network state comprises defining the first unit in the sequence of outputs as the placeholder label.
- training the recurrent neural network to minimize the expected loss function using the plurality of training examples comprises performing back propagation techniques using the expected loss function to adjust recurrent neural network parameters to trained recurrent neural network parameters.
- the linguistic units are context-dependent phones.
- a speech recognition system may be trained to perform end-to-end speech recognition at high accuracy without requiring or using an external language model or beam search decoding.
- a neural network model is trained to predict output labels representing graphemes and a blank label
- the transcription can be obtained by removing the blank labels from the output sequence and concatenating the graphemes. Because each grapheme can represent a letter or combination of letters, the graphemes concatenate to form words directly.
- the system avoids the computational expense of training, storing, and operating a language model.
- the system can also avoid the computational expense of beam search processing over output sequences.
- a grapheme or other unit can be selected from the output probability distribution provided by the decoder for each frame.
- a language model and/or beam search process can be used to form words of a transcription.
- the computational resources required to train the speech recognition system may also be fewer than those required to train other speech recognition systems.
- the encoder and decoder can be trained jointly, unlike some approaches where an acoustic model and a separate decoder are required.
- approximation techniques such as approximations of log-likelihood loss and expected loss via sampling can be used to further reduce the number of alignments over which the system needs to be trained.
- a speech recognition system trained to perform speech recognition using the techniques described in this application may achieve increased speech recognition accuracy. For example, by applying multiple training processes, the speech recognition system's ability to recognize given audio may be fine-tuned and improved.
- a recurrent neural aligner speech recognition system, as described in this specification, may perform speech recognition in real time since no attention mechanism is required.
- FIGS. 1A and 1B show an example recurrent neural aligner speech recognition system.
- FIG. 2 shows an example illustration of the conditional dependence assumption of a decoder neural network.
- FIG. 3A shows an example alignment lattice.
- FIG. 3B shows an example of collapsing equivalent paths in a portion of an alignment lattice.
- FIG. 4 is a flow diagram of an example process for processing acoustic data using a recurrent neural aligner speech recognition system.
- FIG. 5 is a flow diagram of an example process for training a recurrent neural aligner decoder.
- FIG. 6 is a flow diagram of an example process for training a recurrent neural aligner decoder on a training example using a log likelihood loss function.
- RNA Recurrent Neural Aligner
- CTC connectionist temporal classification
- the RNA system defines a probability distribution over target label sequences, including blank labels.
- Each element from an input sequence e.g., input acoustic data for a series of time steps, can result in a corresponding output label or probability distribution over the output labels.
- the probability of an output label sequence is calculated by marginalizing over all possible blank label positions.
- the RNA speech recognition system does not make a conditional independence assumption for label predictions. For example, the RNA speech recognition system uses a predicted label at time t ⁇ 1 as an additional input to a decoder neural network included in the RNA speech recognition system when predicting the label at time t.
- the model can be applied to end-to-end speech recognition, handwriting recognition, and other sequence training tasks.
- an RNA speech recognition system may be capable of streaming speech recognition since the decoder neural network does not employ an attention mechanism. Without an attention mechanism, the model does not require an indication of which portion of the input data is most significant.
- the model itself evaluates the input data sets using the model parameters learned through the training process.
- the RNA speech recognition system may be trained on transcribed acoustic data to predict graphemes, and in at least some configurations, no external language and pronunciation models are required for decoding.
- the training process includes an approximate dynamic programming method that optimizes a negative log likelihood and a sampling-based sequence discriminative training technique to fine-tune the model to minimize expected word error rate.
- the resulting trained RNA speech recognition process achieves high accuracy without requiring or using an external language model nor performing beam search decoding.
- FIG. 1 is a diagram of an example of a system 100 for training and using a speech recognition system.
- the system includes a computing system 110 , which can represent one or more computers which may be at a single location or distributed over multiple locations.
- the example of FIG. 1A shows the computing system training a recurrent neural aligner (RNA) speech recognition system 150 from a set of training data 121 .
- the computing system 110 uses the trained RNA speech recognition system 150 to perform speech recognition for speech provided by a user device 160 over a network 170 .
- RNA recurrent neural aligner
- the RNA speech recognition system 150 is a system that can be trained end-to-end to map input sequences to target sequences.
- the input sequence can be a sequence of vectors that each represent a different frame of audio data (e.g., representing 25 milliseconds of audio, or another amount of audio).
- Each input vector can indicate speech features, such as mel-frequency ceptral coefficients, log-mel filterbank energies, etc. for the corresponding time period of an audio segment.
- the output sequence can be a sequence of graphemes and optionally other written elements such as spaces or punctuation. Since the sounds represented by a grapheme typically have a duration of multiple frames, there will often be more elements in the input sequence than in the target output sequence.
- the system 150 can be configured to output a blank label (e.g., indicate that the blank label is most probable) as padding. This allows the system 150 to indicate an output label for each input vector to the model, while still indicating each instance of a grapheme only once.
- the presence of the blank labels also gives the system 150 flexibility in aligning the grapheme output labels with the input frames, which can allow an appropriate and variable amount of context to be considered before making a grapheme prediction.
- the target sequence N may represent a predicted transcription of the audio data and where graphemes included in the sequence of outputs may include alphabetic letters or numerical digits.
- Blank output labels which do not represent acoustic or written content, can be used to fill in the spaces between predicted graphemes and increase the number of output labels to the number of input vectors T.
- the RNA speech recognition system 150 defines a conditional probability distribution P(z
- x) where z (z 1 , . . . , z T ) represents a sequence of units of length T—possibly including blank units. In cases where the sequence of units z includes blank units, removing the blank units gives the above described sequence of linguistic units y. Therefore, z may represent one of multiple possible alignments between the input sequence x and the sequence of linguistic units y. The RNA speech recognition system then marginalizes over all possible alignments ⁇ z ⁇ to estimate a probability distribution of the target sequence of linguistic units y given the input sequence x, that is P ( y
- x ) ⁇ z P ( z
- the RNA speech recognition system 150 includes an encoder neural network 130 and a decoder neural network 145 .
- the decoder neural network 145 receives information indicating the label selection decision for the previous time step or frame, but the encoder neural network 130 does not.
- the output of the encoder neural network 130 may represent an encoding representing acoustic characteristics.
- the decoder neural network 145 can learn to perform a function similar to a language model using the feedback from the prior label selection decisions. This can allow the RNA speech recognition system 150 to operate without separately training or using a dedicated language model to process the outputs of the decoder neural network 145 .
- the encoder neural network 130 may be a unidirectional or bidirectional recurrent neural network. In other implementations the encoder neural network 130 may be a convolutional neural network or any other neural network that is configured to encode audio inputs into encodings.
- the encoder neural network 130 receives input sequences x of real-valued vectors representing characteristics of audio data 122 .
- each vector input to the encoder neural network 122 can include speech feature scores, such as mel-frequency ceptral coefficients, log-mel filterbank energies, etc. for the corresponding time period of the audio data 122 .
- the input to the encoder neural network can be vectors representing raw audio samples of the audio data 122 .
- the input sequences of real-valued vectors for the encoder neural network 130 can be received during training (e.g., representing training examples) or when performing speech recognition tasks (e.g., representing speech to be recognized).
- the encoder neural network 130 may receive audio data 122 included in the training data 121 during training, or may receive audio data 164 from the user device 160 during an inferential speech recognition process.
- the encoder neural network 130 processes received input sequences and generates as output, encoded representations of the received input sequences, e.g., acoustic encodings 142 . Outputs generated by the encoder neural network 130 are provided as input to the decoder neural network 145 .
- the encoder neural network 130 can be a recurrent neural network, and as a result can indicate contextual aspects of an observed sequence. For example, rather than indicate an encoding that represents only data derived from the current input to the encoder neural network 130 , the output can represent data derived from data stored in the network about previous inputs in the sequence.
- the decoder neural network 145 may be a recurrent neural network, e.g., including one or more Long-Short Term Memory (LSTM) neural network layers.
- the decoder neural network 145 may further include a softmax output layer.
- the softmax output layer may include L+1 units, where L is the number of linguistic units in the decoder neural network output space and the additional unit represents a blank unit, e.g., a null prediction. Including a blank unit enables the RNA speech recognition system 150 to output a unit for each input vector in a sequence of input vectors.
- the decoder neural network 145 receives acoustic encodings 142 output by the encoder neural network 130 .
- Each acoustic encoding 142 represents the output of the encoder neural network 130 for a single time step or frame of the audio data 122 .
- the decoder neural network 145 may receive acoustic encodings from the encoder neural network 130 that correspond to audio data from the training data 121 .
- the decoder neural network 145 may receive acoustic encodings from the encoder neural network 130 that correspond to audio data 164 received from user device 160 during an inferential speech recognition process.
- the decoder neural network 145 does not make a conditional independence assumption when processing received input acoustic sequences of acoustic encodings. That is, the decoder neural network 145 further receives previously generated outputs, e.g., previously generated output 146 , as input. For example, when processing an input acoustic feature representation corresponding to a t-th time step, the decoder neural network further receives a previously generated output corresponding to the t ⁇ 1-th time step.
- the conditional dependence assumption used by the decoder neural network when processing received inputs is described in more detail below with reference to FIG. 2 .
- each output is a set of scores indicating a probability distribution over a predetermined set of output labels, e.g., with a likelihood score for each of the labels in the predetermined set of output labels that are possible.
- each output can indicate a score for each of multiple graphemes as well as a blank label, each score indicating a likelihood that the corresponding grapheme output label or blank label represents the input acoustic sequence at the respective time step.
- each output in the sequence of outputs may include a vector of length L+1, where L is the number of graphemes or other linguistic units that are possible outputs.
- each vector respectively indicate probabilities that linguistic units or the blank unit represent the corresponding received acoustic encoding.
- the decoder neural network 145 can be trained to provide probability distributions for labels representing other types of linguistic units, such as context-dependent phones, context-independent phones, partial words, or full words.
- the decoder neural network 145 provides an output vector to the post-processing module 148 for each time step or frame of the audio data 122 .
- Each output vector can represent a probability distribution over a predetermined set of labels.
- the output vector may have a value corresponding to each grapheme label for a language as well as a value corresponding to the blank label.
- the values in the vector indicate the relative probabilities that the labels should be selected for the current time step or frame.
- the label having the highest corresponding value in the vector may be one indicated as the best output for the current time step or frame.
- the post-processing module 148 is configured to analyze output vectors from the decoder neural network 145 and select a label for the current time-step or frame. In some implementations, the post-processing module 148 simply selects the label with the value in the output vector representing the highest probability. In other words, the highest-scoring output label for each time step or frame is selected. The selection by the post-processing module 148 is provided as input to the decoder neural network 145 for processing with the acoustic encoding 142 for the next time step or frame. In this manner, the label decisions for a first time step are provided to the decoder neural network 145 for generating the probability distribution for a second time step that immediately follows.
- the data indicating the selected label for the previous time step can be provided as a one-hot encoded vector, e.g., a vector in which all values are zero except for a value for the position in the vector corresponding to the selected label.
- the post-processing module 148 or another module can generate a transcription 166 from the label decisions of the post-processing module 148 .
- the blank labels are removed from the sequence of selected labels.
- the graphemes indicated by the remaining output labels are concatenated to form the transcription 166 for the audio data 122 .
- Transcriptions formed may therefore include a sequence of graphemes that is shorter in length than the length of the received sequence of output vectors from the decoder neural network 145 .
- the RNA speech recognition system 150 performs a more complex process to generate the transcription 166 .
- the system 150 can use beam search or other techniques to evaluate multiple paths involving different selections of labels.
- multiple instances of the decoder neural network 145 can be operated in parallel to represent paths including different combinations of label selections.
- the post processing module 148 can select the n-best labels according to the output vector of the decoder neural network 145 . For example, the top 3, 5, or 10 highest-scoring (e.g., most probable) labels may be selected.
- Each of these n-best labels can be provided to a different instance of the decoder neural network 145 along with the acoustic encoding 142 for the next time step.
- different instances of the decoder neural network 145 follow paths representing different labels selections (e.g., with one representing a label sequence “abc” and another representing a label sequence “abd”). Because the number of different paths can increase exponentially, the paths can be pruned at each label selection decision. Using beam search or other techniques, different paths can be given a score representing a full-path probability from the beginning of the sequence up to the current decision. The paths can be pruned down to a maximum number of paths to continue for additional processing.
- the current memory state of the decoder neural network 145 (e.g., information stored in LSTM blocks) can be copied or otherwise propagated to the other instances. For example, if the top three labels represent “a,” “e,” and the blank unit, three instances of the decoder neural network 145 all having the same, current memory state can be used for receiving the next acoustic encoding 142 .
- the training state of the decoder neural network 145 may be the same for all instances of the decoder neural network 145 when recognizing speech. Nevertheless, as label selection paths diverge, the memory state of different instances of the neural network 145 can vary so that different instances have different memory states.
- the highest-likelihood path is selected for the transcription 166 .
- the blank labels are removed, and the remaining linguistic units can be concatenated to form the transcription.
- the units are graphemes, words, or partial words, no additional language model may be needed.
- the labels represent context-independent phones, context-dependent phones, or other units, and a language model may be used thereafter to translate the selected units into written language sequences.
- the computing system 110 accesses one or more data storage devices 120 that store training data 121 .
- the training data 121 includes audio data 122 and transcriptions 123 for the audio data.
- the training data 121 may include multiple training examples, each training example including (i) audio data representing an utterance, the audio data including multiple frames corresponding to multiple time steps in a series of time steps, and (ii) a corresponding target sequence of outputs representing a transcription of the utterance.
- the computing system 110 uses the training data 121 to adjust decoder neural network weights from initial values to trained values.
- training the decoder neural network 145 may include applying two training processes—a first training process (A) that minimizes a log likelihood loss function and a second training process (B) that minimizes an expected loss function.
- training the decoder neural network to minimize a log likelihood loss function includes generating an alignment lattice, as described in more detail in FIG. 3 . Processes for training a decoder neural network are described in more detail below with reference to FIGS. 5 and 6 .
- the computing system 110 can use the RNA speech recognition system 150 for speech recognition.
- the computing system 110 can provide the trained RNA speech recognition system 150 to another device or system to use for speech recognition.
- a user 162 speaks an utterance and a user device 160 records the audio.
- the user device 160 sends audio data 164 for the utterance to the computing system 110 over a network 170 .
- the computing system 110 may divide the audio data 164 into frames, and determine a set of values for each frame. For example, the values can be log-Mel frequency cepstral coefficients.
- the computing system 110 provides the sets of values as input to the RNA speech recognition system 150 and receives, as output of the RNA speech recognition system 150 , a transcription representing the audio data.
- the computing system 110 provides the transcription to the client device 160 over the network 170 .
- the transcription can then be displayed, added to a document, submitted to an application, or otherwise used by the client device 170 .
- FIG. 1B is a diagram that further illustrates a process of speech recognition that can be performed by the system 150 .
- audio data 182 representing a spoken word 180 , e.g., “action,” is received.
- the system 150 determines audio feature scores for different segments of the audio data 182 , which are shown as audio feature vectors 184 .
- Phonemes 186 corresponding to the feature vectors 184 and the audio data 182 are also shown.
- the feature vectors 184 are provided sequentially to the encoder neural network 130 , which produces an encoding for each input vector.
- Each encoding, along with data indicating a previous output label, are provided to the decoder neural network 145 .
- the decoder neural network 145 then provides one or more outputs indicating a predicted output label.
- output labels 190 show the output label indicated most likely by the output for each time index.
- the other output labels represent blank labels, showing that no grapheme or classification of acoustic data is indicated at those outputs.
- the indicated output label can have an alignment determined by the model.
- the indication of a grapheme may not match up exactly with the start or end of each corresponding phone of the audio data 182 . Nevertheless, the identity and sequence of the graphemes indicated can nevertheless provide an accurate transcription of the audio data 182 .
- FIG. 2 shows an example illustration of a conditional dependence assumption of a decoder neural network 145 , as described above with reference to the RNA speech recognition system 150 of FIG. 1A .
- the decoder neural network 145 may include a recurrent neural network 202 , e.g., including one or more Long-Short Term Memory (LSTM) neural network layers.
- the recurrent neural network 202 is configured to process received inputs in sequence. At each time step in a series of time steps, the recurrent neural network 202 processes (i) an acoustic encoding for the time step, and (ii) a generated output for the previous time step. For example, as shown in FIG.
- the recurrent neural network 202 processes an acoustic encoding x t for the time step, the hidden state h t of the recurrent neural network 202 (since the neural network 202 is a recurrent neural network), and the output z t generated by the recurrent neural network 202 at the previous time step t ⁇ 1.
- the recurrent neural network 202 may receive as input an acoustic encoding x 0 for the time step, an initial hidden state h 0 of the recurrent neural network and an output z 0 defined to be a one-hot encoded vector representing the blank unit.
- FIG. 3A shows an example alignment lattice 300 .
- the example alignment lattice 300 is an example of an alignment lattice that represents possible alignments between elements of an input acoustic sequence representing an utterance and elements of a target sequence of outputs representing a transcription of the utterance.
- the example alignment lattice 300 may be used when training a decoder neural network 145 included in the RNA speech recognition system 100 of FIG. 1A . Training a decoder neural network using an alignment lattice is described in more detail below with reference to FIGS. 5 and 6 .
- the horizontal axis 302 shown in the example alignment lattice 300 represents a sequence of encoded inputs.
- Each node (t, n) in the example alignment lattice 300 represents a hidden state of the decoder neural network 145 (e.g., a hidden state of the recurrent neural network 202 of FIG. 2 ).
- Horizontal transitions between nodes represent the decoder neural network 145 outputting a blank unit prediction and allow the recurrent neural network to delay predictions in the target sequence while processing more acoustic encodings.
- Diagonal transitions between nodes represent linguistic unit predictions generated by the decoder neural network 145 .
- Each path through the example alignment lattice 300 represents a possible alignment between the corresponding input acoustic sequence and target sequence of outputs.
- the path between node (0, 1) and node (6, 3) represented by solid arrows in example alignment lattice 300 represents the alignment ⁇ blank> a ⁇ blank> b c ⁇ blank>.
- other alignments between node (0, 1) and node (6, 3) exist.
- other possible alignments include, but are not limited to, ⁇ blank> ⁇ blank> a b c ⁇ blank> or ⁇ blank> a ⁇ blank> b ⁇ blank> c.
- the number of paths, and in turn the number of possible alignments scales exponentially with the length of the input acoustic sequence and target sequence of outputs.
- training a decoder neural network 145 included in the RNA speech recognition system 100 of FIG. 1A may include training the decoder neural network on one or more training examples using a log likelihood loss function. This may include representing all possible alignments between an input sequence of acoustic encodings and a target output sequence as an alignment lattice similar to that of example alignment lattice 300 .
- forward calculations are used to update recurrent neural network hidden states h represented by nodes in the alignment lattice, which in turn may be used to approximate the log likelihood.
- This includes performing a forward calculation for a current node, e.g., node (t ⁇ 1, n ⁇ 1) to generate a corresponding updated state of the decoder neural network h t ⁇ 1, n ⁇ 1 .
- the updated state is propagated to at least two next nodes—a node (t+1, n+1) corresponding to a next label prediction and a node (t+1, n) corresponding to a blank label prediction.
- two distinct decoder neural network nodes may merge into a subsequent node.
- an updated state from node (2, 0) corresponding to a next label prediction “a” may merge with an updated state from node (2, 1) corresponding to a blank label prediction at node (3, 1).
- to update the state corresponding to node (3, 1) only one of the input states from nodes (2, 0) or (2, 1) may be used. That is, equivalent paths in the alignment lattice may be collapsed into one path. An example collapsing of equivalent paths in an alignment lattice is shown below with reference to FIG. 3B .
- FIG. 3B shows an example of collapsing equivalent paths in a portion 350 of an alignment lattice.
- the portion 350 shows two possible paths between a first node corresponding to time t ⁇ 2 and position n ⁇ 2 and a second node corresponding to time t and position n.
- a first path is illustrated using solid arrows and represents an alignment a ⁇ blank>.
- a second path is illustrated using dashed arrows and represents an alignment ⁇ blank> a. Processing these paths to generate a transcription of a portion of an utterance corresponding to the portion 350 of the alignment lattice may include removing blank labels. Therefore, both paths are equivalent since removal of the blank label results in a corresponding transcription “a”.
- one path is chosen to generate a collapsed portion 360 of the alignment lattice. Determining which path to keep and which path to collapse is described in detail below with reference to FIG. 6 .
- FIG. 4 is a flow diagram of an example process 400 for processing acoustic data using a speech recognition system.
- the process 400 will be described as being performed by a system of one or more computers located in one or more locations.
- a computing system e.g., the computing system 110 of FIG. 1 , appropriately programmed, can perform the process 400 .
- the system obtains acoustic data representing an utterance (step 402 ).
- the acoustic data corresponds to time steps in a series of time steps.
- the system processes encodings indicative of the acoustic data using a recurrent neural network to generate a respective sequence of outputs (step 404 ).
- the respective sequence of outputs indicates likely outputs from labels from among a predetermined set of output labels, where the predetermined set of output labels includes output labels that respectively correspond to different linguistic units and to a placeholder label that does not represent a classification of acoustic data.
- each output in the sequence of outputs may include an L+1 by 1 vector whose L+1 entries indicate probabilities that L respective linguistic units or the blank unit represent the corresponding acoustic feature representation.
- the system performs the following steps for each time step that is not the first time step in the series of time steps.
- the system may define a corresponding output as an output that represents the blank unit, e.g., a one-hot L+1 by 1 vector with the value corresponding to the blank unit set as “1.”
- the system provides (i) an acoustic feature encoding for the time step, and (ii) a generated output for the previous time step as input to the recurrent neural network (step 406 ). For example, for a second time step in the series of time steps, the system provides (i) an acoustic feature encoding for the second time step, and (ii) the predefined output that represents the blank unit as input to the recurrent neural network.
- the system processes the input using the recurrent neural network to generate an output for the time step (step 408 ).
- the generated output indicates a likely label output from among a predetermined set of output labels for the time step.
- the recurrent neural network may include one or more recurrent neural network layers, e.g., LSTM layer, and an output neural network layer e.g., a softmax output layer.
- the output layer includes L+1 units, where L represents a number of linguistic units and the additional unit corresponds to the blank output.
- the output layer estimates a conditional probability distribution representing the probability of an alignment z between the input acoustic sequence x and the sequence of outputs given the input acoustic sequence P(z
- the conditional probability distribution is equal to a product of output conditional probabilities for each time step, each conditional probability representing the probability of an output for a respective time step given the acoustic feature representation for the respective time step and an output for a preceding time step, namely P ( z
- x ) ⁇ t P ( z t
- z t represents an alignment for time step t.
- An alignment between the input acoustic sequence x and the sequence of outputs includes a sequence of vectors indicating likelihoods of the linguistic units or blank unit.
- processing the generated sequence of outputs to generate a transcription of the utterance may include analyzing each output in the sequence of outputs to determine a most likely output sequence of linguistic units. For example, for each output, the system may analyze the set of scores for each of the multiple linguistic units and blank unit and select a highest scoring unit as a representation of the utterance for the time step corresponding to the output.
- selecting a unit as a representation of the utterance for a time step may include applying one or more of (i) beam search techniques, (ii) a language model, and (iii) one or more linguistic rules.
- linguistic rules or language models may be used to ensure that sequences of selected units do not include highly unlikely or forbidden sequences of units, e.g., rules or models indicating that a sequence of units should not have more than three consonants in a row, or that the letter “q” should only be followed by a “u.”
- the generated transcription of the utterance includes a sequence of linguistic units and does not include blank units. Therefore, processing the sequence of outputs generated by the recurrent neural network may include removing outputs corresponding to selected blank units.
- the system provides the generated transcription of the utterance as output of the speech recognition system ( 412 ).
- the audio data is received from a client device over computer network, and the data indicating the transcription is provided to the client device over the computer network.
- providing the data indicating the transcription involves live streaming speech recognition results such that the data indicating the transcription is provided while audio data for an additional portion of the utterance is concurrently received.
- FIG. 5 is a flow diagram of an example process 500 for training a recurrent neural aligner decoder neural network.
- the process 500 will be described as being performed by a system of one or more computers located in one or more locations.
- a computing system e.g., computing system 110 of FIG. 1A , appropriately programmed, can perform the process 500 .
- the target sequence of linguistic units may include alphabetic letters or characters but does not include blank labels or units. Therefore, in some implementations the length T of an input acoustic sequence may be larger than the length N of a corresponding target sequence of linguistic units.
- the system trains the recurrent neural network to minimize a log likelihood loss function using the multiple training examples (step 504 ).
- the training may include providing an input acoustic sequence x from a training example as input to the recurrent neural network and propagating the input acoustic sequence through the recurrent neural network to generate a corresponding recurrent neural network output z.
- the generated recurrent neural network output z may then be compared to the target sequence of linguistic units from the training example using a log likelihood loss function to determine errors associated with parameters or units in the recurrent neural network layers. Gradients of the log likelihood loss function are calculated using the determined errors and backpropagated through the recurrent neural network to determine trained values of recurrent neural network parameters.
- the log likelihood loss function used by the system to train the recurrent neural network may be given by
- x) ⁇ z P(z
- x) must be determined, where z represents all possible alignments of linguistic units including blank units that, after removing blank units, gives y and where each P(z
- the system may therefore apply an approximate forward-backward algorithm to estimate the log likelihood loss function, as described in more detail below with reference to FIG. 6 .
- the system trains the recurrent neural network to minimize an expected loss function for linguistic unit predictions using the multiple training examples (step 506 ).
- the training process described above with reference to step 504 is used to optimize the probability that linguistic unit sequences estimated by the recurrent neural aligner speech recognition system are accurate.
- WER word error rate
- the system therefore performs a second training process using a sequence level discriminative loss function—an expected loss for the distribution over alignments z given an input acoustic sequence x.
- the sequence level discriminative loss function may be given by
- L ⁇ z ⁇ P ⁇ ( z
- x) represents the probability of an alignment z as estimated from the recurrent neural network
- loss(x, z, y) represents a calculated sequence level loss, optionally including an edit distance between the known linguistic unit sequence y and the alignment z after removing the blank units.
- the training may include providing an input acoustic sequence from a training example as input to the recurrent neural network and propagating the input acoustic sequence through the recurrent neural network to generate a corresponding recurrent neural network output.
- the generated recurrent neural network output may then be compared to the target sequence of linguistic units from the training example using the sequence level discriminative loss function to determine errors associated with units in the recurrent neural network layers. Gradients of the sequence level discriminative loss function are calculated using the determined errors and backpropagated through the recurrent neural network to determine trained values of recurrent neural network parameters.
- the system may apply Monte-Carlo sampling to approximate the calculation of the sequence level discriminative loss function.
- the derivative of the loss function may be approximated as
- FIG. 6 is a flow diagram of an example process 600 for training a recurrent neural aligner decoder neural network using a log likelihood loss function.
- the process 600 is described as being performed for a given training example, the training example including an input acoustic sequence of acoustic encodings at each of multiple time steps in a series of time steps and a corresponding target sequence of linguistic units.
- the process 600 will be described as being performed by a system of one or more computers located in one or more locations.
- a computing system e.g., the computing system 110 of FIG. 1A , appropriately programmed, can perform the process 600 .
- the system represents possible alignments z between the input acoustic sequence x and the target sequence of linguistic units y as a lattice, where the possible alignments include blank units (step 602 ).
- Each node in the lattice represents a respective state of the neural network, each state of the neural network being dependent on a respective time step from the series of time steps and a respective position in the target sequence of linguistic units. Transitions between nodes in the lattice represent probabilities of observing respective subsequent linguistic units or the blank unit at a subsequent time step.
- the possible alignments represented in the lattice are constrained to allow blank unit repetitions only. An example lattice is shown and described above with reference to FIG. 3 .
- the system performs forward calculations through the lattice to update each recurrent neural network state (step 604 ).
- the system may perform a forward calculation for time t and unit position n by providing an input pair (x t , y n+1 ) and recurrent neural network state at (t, n) to the recurrent neural network and processing the provided inputs to generate a new, updated recurrent neural network state at (t+1, n+1) corresponding to a next unit prediction at position n+1.
- the output of the recurrent neural network is an activation for all the units and defines a probability that the next unit in the alignment is y n+1 .
- the system may perform a forward calculation for time t and unit position n by providing an input pair (x t , ⁇ ) and recurrent neural network state at (t+1, n) to the recurrent neural network and processing the provided inputs to generate a new, updated recurrent neural network state at (t+1, n) corresponding to a blank unit prediction at position n+1.
- the output of the recurrent neural network is an activation for all the units and defines probability that the next unit in the alignment is a blank unit ⁇ .
- the updated recurrent neural network states are propagated to a subsequent node.
- the system may perform a forward calculation for time t+1 and position n+1 by providing an input pair (x t+1 , y n+2 ) and recurrent neural network state at (t+1, n+1) to the recurrent neural network and processing the provided inputs to generate a new, updated recurrent neural network state at (t+2, n+2), and by providing an input pair (x t+1 , ⁇ ) and recurrent neural network state at (t+1, n) to the recurrent neural network and processing the provided inputs to generate a new, updated recurrent neural network state at (t+2, n+1).
- two distinct recurrent neural network states can lead to a same node since two different paths in the lattice may merge at the node.
- the system selects one of the recurrent neural network states.
- the system defines (i) a forward variable ⁇ (t, n) as the probability of outputting linguistic units y 1 . y 2 , . . .
- the system selects the recurrent neural network state corresponding to the (t ⁇ 1, n ⁇ 1) node. In response to determining that the inequality is not satisfied, the system selects the recurrent neural network state corresponding to the (t ⁇ 1, n) node. The system may then continue performing forward calculations through the lattice using the selected recurrent neural network state.
- the probability of the target label sequence y is estimated by marginalizing the conditional distribution p(z
- x) ⁇ z p(z
- x) and fully evaluate all possible alignments. This technique allows the loss function, e.g., L ⁇ log(p(y
- x)) ⁇ z P(z
- the system further defines backward variables ⁇ (t, n) representing the probability of outputting y n+1 . y n+2 , . . . y N starting from time t.
- the system may then estimate the probability for the target linguistic sequence y by summing the path probabilities through the lattice, which is given by ⁇ (0,0): P ( y
- x ) ⁇ z P ( z
- x ) ⁇ (0,0).
- the system approximates the log likelihood loss function using the updated recurrent neural network states (step 606 ).
- x )) ⁇ log ⁇ z p ( z
- x ) ⁇ log ⁇ (0,0).
- the system performs backpropagation techniques using the approximated log likelihood function to adjust recurrent neural network parameters to trained recurrent neural network parameters (step 608 ).
- performing backpropagation techniques may include calculating a gradient of the log likelihood loss function. Using the forward and backward variables defined above with reference to steps 604 and 606 , the gradient of the log likelihood loss function may be given by
- Embodiments of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry, in tangibly-embodied computer software or firmware, in computer hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions encoded on a tangible non transitory program carrier for execution by, or to control the operation of, data processing apparatus.
- the program instructions can be encoded on an artificially generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- the computer storage medium can be a machine-readable storage device, a machine-readable storage substrate, a random or serial access memory device, or a combination of one or more of them. The computer storage medium is not, however, a propagated signal.
- data processing apparatus encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers.
- the apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit).
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.
- a computer program (which may also be referred to or described as a program, software, a software application, a module, a software module, a script, or code) can be written in any form of programming language, including compiled or interpreted languages, or declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data, e.g., one or more scripts stored in a markup language document, in a single file dedicated to the program in question, or in multiple coordinated files, e.g., files that store one or more modules, sub programs, or portions of code.
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- an “engine,” or “software engine,” refers to a software implemented input/output system that provides an output that is different from the input.
- An engine can be an encoded block of functionality, such as a library, a platform, a software development kit (“SDK”), or an object.
- SDK software development kit
- Each engine can be implemented on any appropriate type of computing device, e.g., servers, mobile phones, tablet computers, notebook computers, music players, e-book readers, laptop or desktop computers, PDAs, smart phones, or other stationary or portable devices, that includes one or more processors and computer readable media. Additionally, two or more of the engines may be implemented on the same computing device, or on different computing devices.
- the processes and logic flows described in this specification can be performed by one or more programmable computers executing one or more computer programs to perform functions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit).
- special purpose logic circuitry e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit).
- Computers suitable for the execution of a computer program include, by way of example, can be based on general or special purpose microprocessors or both, or any other kind of central processing unit.
- a central processing unit will receive instructions and data from a read only memory or a random access memory or both.
- the essential elements of a computer are a central processing unit for performing or executing instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device, e.g., a universal serial bus (USB) flash drive, to name just a few.
- PDA personal digital assistant
- GPS Global Positioning System
- USB universal serial bus
- Computer readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto optical disks; and CD ROM and DVD-ROM disks.
- semiconductor memory devices e.g., EPROM, EEPROM, and flash memory devices
- magnetic disks e.g., internal hard disks or removable disks
- magneto optical disks e.g., CD ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back end, middleware, or front end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), e.g., the Internet.
- LAN local area network
- WAN wide area network
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
Abstract
Description
P(y|x)=Σz P(z|x).
The estimated probability distribution is used to generate, as output the target sequence of linguistic units.
P(z|x)=Πt P(z t |z t−1 ,x).
where zt represents an alignment for time step t. An alignment between the input acoustic sequence x and the sequence of outputs includes a sequence of vectors indicating likelihoods of the linguistic units or blank unit.
where (x, y) represents one of the multiple training examples.
wherein P(z|x) represents the probability of an alignment z as estimated from the recurrent neural network, and loss(x, z, y) represents a calculated sequence level loss, optionally including an edit distance between the known linguistic unit sequence y and the alignment z after removing the blank units.
where zi represents an alignment unit sequence obtained by sampling the linguistic units and blank unit from the output distribution of the recurrent neural aligner speech recognition system at each time step of input, N represents the sample size, P(l|t) represents the probability of the linguistic unit l at time t in the sample zt, and
α(t−1,n−1)P(y n |t−1,n−1)>α(t−1,n)P(ϵ|t−1,n).
α(t,n)=α(t−1,n−1)P(y n |t−1,n−1)+α(t−1,n)P(ϵ|t−1,n).
β(t,n)=β(t+1,n+ 1)P(y n+1 |t,n)+β(t+1,n)P(ϵ|t,n).
P(y|x)=Σz P(z|x)=β(0,0).
L=−log(p(y|x))=−log Σz p(z|x)=−log β(0,0).
Claims (17)
Priority Applications (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/846,634 US10706840B2 (en) | 2017-08-18 | 2017-12-19 | Encoder-decoder models for sequence to sequence mapping |
US16/886,278 US11776531B2 (en) | 2017-08-18 | 2020-05-28 | Encoder-decoder models for sequence to sequence mapping |
US18/460,017 US20230410796A1 (en) | 2017-08-18 | 2023-09-01 | Encoder-decoder models for sequence to sequence mapping |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201762547659P | 2017-08-18 | 2017-08-18 | |
US15/846,634 US10706840B2 (en) | 2017-08-18 | 2017-12-19 | Encoder-decoder models for sequence to sequence mapping |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US16/886,278 Continuation US11776531B2 (en) | 2017-08-18 | 2020-05-28 | Encoder-decoder models for sequence to sequence mapping |
Publications (2)
Publication Number | Publication Date |
---|---|
US20190057683A1 US20190057683A1 (en) | 2019-02-21 |
US10706840B2 true US10706840B2 (en) | 2020-07-07 |
Family
ID=65361116
Family Applications (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/846,634 Active 2038-03-09 US10706840B2 (en) | 2017-08-18 | 2017-12-19 | Encoder-decoder models for sequence to sequence mapping |
US16/886,278 Active 2039-07-21 US11776531B2 (en) | 2017-08-18 | 2020-05-28 | Encoder-decoder models for sequence to sequence mapping |
US18/460,017 Pending US20230410796A1 (en) | 2017-08-18 | 2023-09-01 | Encoder-decoder models for sequence to sequence mapping |
Family Applications After (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US16/886,278 Active 2039-07-21 US11776531B2 (en) | 2017-08-18 | 2020-05-28 | Encoder-decoder models for sequence to sequence mapping |
US18/460,017 Pending US20230410796A1 (en) | 2017-08-18 | 2023-09-01 | Encoder-decoder models for sequence to sequence mapping |
Country Status (1)
Country | Link |
---|---|
US (3) | US10706840B2 (en) |
Cited By (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20200090642A1 (en) * | 2018-09-13 | 2020-03-19 | Samsung Electronics Co., Ltd. | Method and apparatus with speech recognition |
US11004443B2 (en) * | 2018-08-30 | 2021-05-11 | Tencent America LLC | Multistage curriculum training framework for acoustic-to-word speech recognition |
US20210312905A1 (en) * | 2020-04-03 | 2021-10-07 | Microsoft Technology Licensing, Llc | Pre-Training With Alignments For Recurrent Neural Network Transducer Based End-To-End Speech Recognition |
US20210350794A1 (en) * | 2020-05-07 | 2021-11-11 | Google Llc | Emitting Word Timings with End-to-End Models |
US11189268B2 (en) * | 2019-06-11 | 2021-11-30 | Lg Electronics Inc. | Method and apparatus for selecting voice-enabled device and intelligent computing device for controlling the same |
US20220093106A1 (en) * | 2020-09-24 | 2022-03-24 | Synaptics Incorporated | Generalized negative log-likelihood loss for speaker verification |
US11450310B2 (en) * | 2020-08-10 | 2022-09-20 | Adobe Inc. | Spoken language understanding |
US20230108574A1 (en) * | 2021-10-01 | 2023-04-06 | International Business Machines Corporation | Dynamic contraction and expansion of heuristic beam width based on predicted probabilities |
Families Citing this family (38)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10431207B2 (en) * | 2018-02-06 | 2019-10-01 | Robert Bosch Gmbh | Methods and systems for intent detection and slot filling in spoken dialogue systems |
US20210097401A1 (en) * | 2018-02-09 | 2021-04-01 | Deepmind Technologies Limited | Neural network systems implementing conditional neural processes for efficient learning |
US11107463B2 (en) | 2018-08-01 | 2021-08-31 | Google Llc | Minimum word error rate training for attention-based sequence-to-sequence models |
US10804938B2 (en) * | 2018-09-25 | 2020-10-13 | Western Digital Technologies, Inc. | Decoding data using decoders and neural networks |
US11176935B2 (en) * | 2019-02-15 | 2021-11-16 | Wipro Limited | System and method for controlling devices through voice interaction |
US11100920B2 (en) * | 2019-03-25 | 2021-08-24 | Mitsubishi Electric Research Laboratories, Inc. | System and method for end-to-end speech recognition with triggered attention |
CN109961357B (en) * | 2019-03-25 | 2021-09-03 | 上海拉扎斯信息科技有限公司 | User data processing method and device, electronic equipment and storage medium |
US11501159B2 (en) * | 2019-03-26 | 2022-11-15 | Alibaba Group Holding Limited | Methods and systems for text sequence style transfer by two encoder decoders |
CN109978141B (en) * | 2019-03-28 | 2022-11-25 | 腾讯科技（深圳）有限公司 | Neural network model training method and device, and natural language processing method and device |
US11475880B2 (en) * | 2019-04-16 | 2022-10-18 | Google Llc | Joint endpointing and automatic speech recognition |
CN110163181B (en) * | 2019-05-29 | 2021-07-06 | 中国科学技术大学 | Sign language identification method and device |
US11205420B1 (en) * | 2019-06-10 | 2021-12-21 | Amazon Technologies, Inc. | Speech processing using a recurrent neural network |
CN110377902B (en) * | 2019-06-21 | 2023-07-25 | 北京百度网讯科技有限公司 | Training method and device for descriptive text generation model |
US11551393B2 (en) * | 2019-07-23 | 2023-01-10 | LoomAi, Inc. | Systems and methods for animation generation |
KR20210014949A (en) | 2019-07-31 | 2021-02-10 | 삼성전자주식회사 | Decoding method and apparatus in artificial neural network for speech recognition |
US11532310B2 (en) | 2019-08-13 | 2022-12-20 | Samsung Electronics Co., Ltd. | System and method for recognizing user's speech |
WO2021029643A1 (en) | 2019-08-13 | 2021-02-18 | Samsung Electronics Co., Ltd. | System and method for modifying speech recognition result |
WO2021029627A1 (en) | 2019-08-13 | 2021-02-18 | Samsung Electronics Co., Ltd. | Server that supports speech recognition of device, and operation method of the server |
CN110689110B (en) * | 2019-08-28 | 2023-06-02 | 创新先进技术有限公司 | Method and device for processing interaction event |
CN110473529B (en) * | 2019-09-09 | 2021-11-05 | 北京中科智极科技有限公司 | Stream type voice transcription system based on self-attention mechanism |
CN110929733A (en) * | 2019-12-09 | 2020-03-27 | 上海眼控科技股份有限公司 | Denoising method and device, computer equipment, storage medium and model training method |
CN111312228A (en) * | 2019-12-09 | 2020-06-19 | 中国南方电网有限责任公司 | End-to-end-based voice navigation method applied to electric power enterprise customer service |
EP4078573A1 (en) * | 2020-01-22 | 2022-10-26 | Google LLC | Attention-based joint acoustic and text on-device end-to-end model |
US11145309B1 (en) * | 2020-03-18 | 2021-10-12 | Sas Institute Inc. | Dynamic model selection in speech-to-text processing |
WO2022198474A1 (en) * | 2021-03-24 | 2022-09-29 | Sas Institute Inc. | Speech-to-analytics framework with support for large n-gram corpora |
US11049502B1 (en) | 2020-03-18 | 2021-06-29 | Sas Institute Inc. | Speech audio pre-processing segmentation |
KR20220010259A (en) * | 2020-07-17 | 2022-01-25 | 삼성전자주식회사 | Natural language processing method and apparatus |
JP7445089B2 (en) * | 2020-10-20 | 2024-03-06 | グーグル エルエルシー | Fast-emission low-latency streaming ASR using sequence-level emission regularization |
US11715461B2 (en) * | 2020-10-21 | 2023-08-01 | Huawei Technologies Co., Ltd. | Transformer-based automatic speech recognition system incorporating time-reduction layer |
CN112599195B (en) * | 2020-11-30 | 2024-04-19 | 中国科学院深圳先进技术研究院 | Gene sequence splicing method and application |
CN112735467A (en) * | 2020-12-28 | 2021-04-30 | 福州数据技术研究院有限公司 | Fan blade sound boundary positioning method based on sequence neural network automatic coding decoder and storage device |
CN112818098B (en) * | 2021-01-29 | 2023-11-24 | 深圳平安智慧医健科技有限公司 | Knowledge base-based dialogue generation method, device, terminal and storage medium |
KR102277643B1 (en) * | 2021-02-05 | 2021-07-14 | 한국기술교육대학교 산학협력단 | Data classification method and apparatus for hierarchical multi-lable classification |
CN113327585B (en) * | 2021-05-31 | 2023-05-12 | 杭州芯声智能科技有限公司 | Automatic voice recognition method based on deep neural network |
CN113485829B (en) * | 2021-07-02 | 2022-08-09 | 深圳万顺叫车云信息技术有限公司 | Identification value generation method for data increment step of microservice cluster |
WO2024054556A2 (en) * | 2022-09-07 | 2024-03-14 | Google Llc | Generating audio using auto-regressive generative neural networks |
CN115881097B (en) * | 2023-02-22 | 2023-07-18 | 深圳市友杰智新科技有限公司 | Speech recognition result confirmation method and device, computer equipment and storage medium |
CN116468071B (en) * | 2023-04-24 | 2024-04-05 | 北京百度网讯科技有限公司 | Model training method, device, equipment and storage medium |
Citations (126)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4799262A (en) | 1985-06-27 | 1989-01-17 | Kurzweil Applied Intelligence, Inc. | Speech recognition |
US4868867A (en) | 1987-04-06 | 1989-09-19 | Voicecraft Inc. | Vector excitation speech or audio coder for transmission or storage |
US5150449A (en) | 1988-05-18 | 1992-09-22 | Nec Corporation | Speech recognition apparatus of speaker adaptation type |
US5444488A (en) | 1992-06-30 | 1995-08-22 | International Business Machines Corporation | Method and apparatus for coding digital data using vector quantizing techniques |
US5465318A (en) | 1991-03-28 | 1995-11-07 | Kurzweil Applied Intelligence, Inc. | Method for generating a speech recognition model for a non-vocabulary utterance |
US5481644A (en) | 1992-08-06 | 1996-01-02 | Seiko Epson Corporation | Neural network speech recognition apparatus recognizing the frequency of successively input identical speech data sequences |
US5509103A (en) | 1994-06-03 | 1996-04-16 | Motorola, Inc. | Method of training neural networks used for speech recognition |
EP0715298A1 (en) | 1994-11-30 | 1996-06-05 | International Business Machines Corporation | Reduction of search space in speech recognition using phone boundaries and phone ranking |
US5542006A (en) | 1994-06-21 | 1996-07-30 | Eastman Kodak Company | Neural network based character position detector for use in optical character recognition |
US5600753A (en) | 1991-04-24 | 1997-02-04 | Nec Corporation | Speech recognition by neural network adapted to reference pattern learning |
US5627939A (en) | 1993-09-03 | 1997-05-06 | Microsoft Corporation | Speech recognition system and method employing data compression |
US5680508A (en) | 1991-05-03 | 1997-10-21 | Itt Corporation | Enhancement of speech coding in background noise for low-rate speech coder |
US5745872A (en) | 1996-05-07 | 1998-04-28 | Texas Instruments Incorporated | Method and system for compensating speech signals using vector quantization codebook adaptation |
US5749066A (en) | 1995-04-24 | 1998-05-05 | Ericsson Messaging Systems Inc. | Method and apparatus for developing a neural network for phoneme recognition |
US5937384A (en) | 1996-05-01 | 1999-08-10 | Microsoft Corporation | Method and system for speech recognition using continuous density hidden Markov models |
US6038528A (en) | 1996-07-17 | 2000-03-14 | T-Netix, Inc. | Robust speech processing with affine transform replicated data |
US6067517A (en) | 1996-02-02 | 2000-05-23 | International Business Machines Corporation | Transcription of speech data with segments from acoustically dissimilar environments |
US6188982B1 (en) | 1997-12-01 | 2001-02-13 | Industrial Technology Research Institute | On-line background noise adaptation of parallel model combination HMM with discriminative learning using weighted HMM for noisy speech recognition |
US20010001141A1 (en) | 1998-02-04 | 2001-05-10 | Sih Gilbert C. | System and method for noise-compensated speech recognition |
US6236965B1 (en) | 1998-11-11 | 2001-05-22 | Electronic Telecommunications Research Institute | Method for automatically generating pronunciation dictionary in speech recognition system |
US6260013B1 (en) | 1997-03-14 | 2001-07-10 | Lernout & Hauspie Speech Products N.V. | Speech recognition system employing discriminatively trained models |
US20020049591A1 (en) | 2000-08-31 | 2002-04-25 | Siemens Aktiengesellschaft | Assignment of phonemes to the graphemes producing them |
US6397179B2 (en) | 1997-12-24 | 2002-05-28 | Nortel Networks Limited | Search optimization system and method for continuous speech recognition |
US6411932B1 (en) | 1998-06-12 | 2002-06-25 | Texas Instruments Incorporated | Rule-based learning of word pronunciations from training corpora |
US6434520B1 (en) | 1999-04-16 | 2002-08-13 | International Business Machines Corporation | System and method for indexing and querying audio archives |
US20020116196A1 (en) | 1998-11-12 | 2002-08-22 | Tran Bao Q. | Speech recognizer |
US20020165715A1 (en) | 2000-12-19 | 2002-11-07 | Soren Riis | Speech recognition method and system |
WO2002093934A1 (en) | 2001-05-14 | 2002-11-21 | Salgen Systems Limited | Image compression and transmission |
US20030033143A1 (en) | 2001-08-13 | 2003-02-13 | Hagai Aronowitz | Decreasing noise sensitivity in speech processing under adverse conditions |
US20030088411A1 (en) | 2001-11-05 | 2003-05-08 | Changxue Ma | Speech recognition by dynamical noise model adaptation |
US6577999B1 (en) | 1999-03-08 | 2003-06-10 | International Business Machines Corporation | Method and apparatus for intelligently managing multiple pronunciations for a speech recognition vocabulary |
US20030120482A1 (en) | 2001-11-12 | 2003-06-26 | Jilei Tian | Method for compressing dictionary data |
US6631348B1 (en) | 2000-08-08 | 2003-10-07 | Intel Corporation | Dynamic speech recognition pattern switching for enhanced speech recognition accuracy |
US6668243B1 (en) | 1998-11-25 | 2003-12-23 | Microsoft Corporation | Network and language models for use in a speech recognition system |
US20040138882A1 (en) | 2002-10-31 | 2004-07-15 | Seiko Epson Corporation | Acoustic model creating method, speech recognition apparatus, and vehicle having the speech recognition apparatus |
US20040162722A1 (en) | 2001-05-22 | 2004-08-19 | Rex James Alexander | Speech quality indication |
US20040181408A1 (en) | 2003-03-13 | 2004-09-16 | Microsoft Corporation | Method for training of subspace coded gaussian models |
US20040230424A1 (en) | 2003-05-15 | 2004-11-18 | Microsoft Corporation | Adaptation of compressed acoustic models |
US20040260546A1 (en) | 2003-04-25 | 2004-12-23 | Hiroshi Seo | System and method for speech recognition |
US6876966B1 (en) | 2000-10-16 | 2005-04-05 | Microsoft Corporation | Pattern recognition training method and apparatus using inserted noise followed by noise reduction |
US20060053008A1 (en) | 2004-09-03 | 2006-03-09 | Microsoft Corporation | Noise robust speech recognition with a switching linear dynamic model |
US7062442B2 (en) | 2001-02-23 | 2006-06-13 | Popcatcher Ab | Method and arrangement for search and recording of media signals |
US7065487B2 (en) | 2000-10-23 | 2006-06-20 | Seiko Epson Corporation | Speech recognition method, program and apparatus using multiple acoustic models |
US20060149558A1 (en) | 2001-07-17 | 2006-07-06 | Jonathan Kahn | Synchronized pattern recognition source data processed by manual or automatic means for creation of shared speaker-dependent speech user profile |
US20060184362A1 (en) | 2005-02-15 | 2006-08-17 | Bbn Technologies Corp. | Speech analyzing system with adaptive noise codebook |
US20060195317A1 (en) | 2001-08-15 | 2006-08-31 | Martin Graciarena | Method and apparatus for recognizing speech in a noisy environment |
US20060195319A1 (en) | 2005-02-28 | 2006-08-31 | Prous Institute For Biomedical Research S.A. | Method for converting phonemes to written text and corresponding computer system and computer program |
US20070088552A1 (en) | 2005-10-17 | 2007-04-19 | Nokia Corporation | Method and a device for speech recognition |
US20070118373A1 (en) | 2005-11-23 | 2007-05-24 | Wise Gerald B | System and method for generating closed captions |
US7424426B2 (en) | 2003-09-12 | 2008-09-09 | Sadaoki Furui And Ntt Docomo, Inc. | Noise adaptation system of speech model, noise adaptation method, and noise adaptation program for speech recognition |
US20080300875A1 (en) | 2007-06-04 | 2008-12-04 | Texas Instruments Incorporated | Efficient Speech Recognition with Cluster Methods |
US20090254343A1 (en) | 2008-04-04 | 2009-10-08 | Intuit Inc. | Identifying audio content using distorted target patterns |
US20100057452A1 (en) | 2008-08-28 | 2010-03-04 | Microsoft Corporation | Speech interfaces |
US7756708B2 (en) | 2006-04-03 | 2010-07-13 | Google Inc. | Automatic language model update |
US7826945B2 (en) | 2005-07-01 | 2010-11-02 | You Zhang | Automobile speech-recognition interface |
US7844466B2 (en) | 2002-06-28 | 2010-11-30 | Conceptual Speech, Llc | Conceptual analysis driven data-mining and dictation system and method |
US20100318354A1 (en) | 2009-06-12 | 2010-12-16 | Microsoft Corporation | Noise adaptive training for speech recognition |
US20110103614A1 (en) | 2003-04-15 | 2011-05-05 | Ipventure, Inc. | Hybrid audio delivery system and method therefor |
US20110173208A1 (en) | 2010-01-13 | 2011-07-14 | Rovi Technologies Corporation | Rolling audio recognition |
US20110238412A1 (en) | 2010-03-26 | 2011-09-29 | Antoine Ezzat | Method for Constructing Pronunciation Dictionaries |
US20110238416A1 (en) | 2010-03-24 | 2011-09-29 | Microsoft Corporation | Acoustic Model Adaptation Using Splines |
US20110307253A1 (en) | 2010-06-14 | 2011-12-15 | Google Inc. | Speech and Noise Models for Speech Recognition |
US20120004909A1 (en) | 2010-06-30 | 2012-01-05 | Beltman Willem M | Speech audio processing |
US8126710B2 (en) | 2005-06-01 | 2012-02-28 | Loquendo S.P.A. | Conservative training method for adapting a neural network of an automatic speech recognition device |
US20120065976A1 (en) | 2010-09-15 | 2012-03-15 | Microsoft Corporation | Deep belief network for large vocabulary continuous speech recognition |
EP2431969A1 (en) | 2010-09-15 | 2012-03-21 | Svox AG | Speech recognition with small CPU footprint and reduced quantization error |
US20120143604A1 (en) | 2010-12-07 | 2012-06-07 | Rita Singh | Method for Restoring Spectral Components in Denoised Speech Signals |
US8239195B2 (en) | 2008-09-23 | 2012-08-07 | Microsoft Corporation | Adapting a compressed model for use in speech recognition |
EP2507790A1 (en) | 2011-06-06 | 2012-10-10 | Bridge Mediatech, S.L. | Method and system for robust audio hashing |
US8340308B2 (en) | 2006-10-20 | 2012-12-25 | Panasonic Corporation | Method and apparatus for automatic noise compensation used with audio reproduction equipment |
US8442125B2 (en) | 2005-11-29 | 2013-05-14 | Google Inc. | Determining popularity ratings using social and interactive applications for mass media |
US20130138436A1 (en) | 2011-11-26 | 2013-05-30 | Microsoft Corporation | Discriminative pretraining of deep neural networks |
US8463719B2 (en) | 2009-03-11 | 2013-06-11 | Google Inc. | Audio classification for information retrieval using sparse features |
US20130225128A1 (en) | 2012-02-24 | 2013-08-29 | Agnitio Sl | System and method for speaker recognition on mobile devices |
US20130223645A1 (en) | 2012-02-16 | 2013-08-29 | Qnx Software Systems Limited | System and method for dynamic residual noise shaping |
US20130238324A1 (en) | 2012-03-07 | 2013-09-12 | International Business Machines Corporation | Local peak weighted-minimum mean square error (lpw-mmse) estimation for robust speech |
US20130297299A1 (en) | 2012-05-07 | 2013-11-07 | Board Of Trustees Of Michigan State University | Sparse Auditory Reproducing Kernel (SPARK) Features for Noise-Robust Speech and Speaker Recognition |
US20130325473A1 (en) | 2012-05-31 | 2013-12-05 | Agency For Science, Technology And Research | Method and system for dual scoring for text-dependent speaker verification |
US20130343641A1 (en) | 2012-06-22 | 2013-12-26 | Google Inc. | System and method for labelling aerial images |
US20140142929A1 (en) | 2012-11-20 | 2014-05-22 | Microsoft Corporation | Deep neural networks training for speech and pattern recognition |
US20140156575A1 (en) | 2012-11-30 | 2014-06-05 | Nuance Communications, Inc. | Method and Apparatus of Processing Data Using Deep Belief Networks Employing Low-Rank Matrix Factorization |
US8782012B2 (en) | 2010-08-27 | 2014-07-15 | International Business Machines Corporation | Network analysis |
US20140257803A1 (en) | 2013-03-06 | 2014-09-11 | Microsoft Corporation | Conservatively adapting a deep neural network in a recognition system |
US20140257804A1 (en) | 2013-03-07 | 2014-09-11 | Microsoft Corporation | Exploiting heterogeneous data in deep neural network-based speech recognition systems |
US20140278426A1 (en) * | 2013-03-13 | 2014-09-18 | Nuance Communications, Inc. | Data shredding for speech recognition acoustic model training under data retention restrictions |
US20140372112A1 (en) | 2013-06-18 | 2014-12-18 | Microsoft Corporation | Restructuring deep neural network acoustic models |
US8930192B1 (en) | 2010-07-27 | 2015-01-06 | Colvard Learning Systems, Llc | Computer-based grapheme-to-speech conversion using a pointing device |
US8965112B1 (en) | 2013-12-09 | 2015-02-24 | Google Inc. | Sequence transcription with deep neural networks |
US20150066499A1 (en) | 2012-03-30 | 2015-03-05 | Ohio State Innovation Foundation | Monaural speech filter |
US20150100530A1 (en) | 2013-10-08 | 2015-04-09 | Google Inc. | Methods and apparatus for reinforcement learning |
US20150127594A1 (en) | 2013-11-04 | 2015-05-07 | Google Inc. | Transfer learning for deep neural network based hotword detection |
US20150127327A1 (en) | 2013-11-01 | 2015-05-07 | Google Inc. | Context-dependent state tying using a neural network |
US20150127342A1 (en) | 2013-11-04 | 2015-05-07 | Google Inc. | Speaker identification |
EP2905780A1 (en) | 2014-02-11 | 2015-08-12 | Malaspina Labs (Barbados) Inc. | Voiced sound pattern detection |
US9123338B1 (en) | 2012-06-01 | 2015-09-01 | Google Inc. | Background audio identification for speech disambiguation |
US20150255069A1 (en) | 2014-03-04 | 2015-09-10 | Amazon Technologies, Inc. | Predicting pronunciation in speech recognition |
US20150340034A1 (en) * | 2014-05-22 | 2015-11-26 | Google Inc. | Recognizing speech using neural networks |
US20150371633A1 (en) | 2012-11-01 | 2015-12-24 | Google Inc. | Speech recognition using non-parametric models |
US20160034814A1 (en) | 2014-08-01 | 2016-02-04 | University Of Southern California | Noise-boosted back propagation and deep learning neural networks |
US9263036B1 (en) | 2012-11-29 | 2016-02-16 | Google Inc. | System and method for speech recognition using deep recurrent neural networks |
US9299347B1 (en) | 2014-10-22 | 2016-03-29 | Google Inc. | Speech recognition using associative mapping |
US20160093294A1 (en) | 2014-09-25 | 2016-03-31 | Google Inc. | Acoustic model training corpus selection |
US20160299685A1 (en) * | 2015-04-10 | 2016-10-13 | Google Inc. | Neural network for keyboard input decoding |
US20160351188A1 (en) | 2015-05-26 | 2016-12-01 | Google Inc. | Learning pronunciations from acoustic sequences |
US20170040016A1 (en) | 2015-04-17 | 2017-02-09 | International Business Machines Corporation | Data augmentation method based on stochastic feature mapping for automatic speech recognition |
US20170103312A1 (en) * | 2015-10-08 | 2017-04-13 | Via Alliance Semiconductor Co., Ltd. | Neural network unit with output buffer feedback and masking capability with processing unit groups that operate as recurrent neural network lstm cells |
US20170148433A1 (en) * | 2015-11-25 | 2017-05-25 | Baidu Usa Llc | Deployed end-to-end speech recognition |
US20170178346A1 (en) * | 2015-12-16 | 2017-06-22 | High School Cube, Llc | Neural network architecture for analyzing video data |
US20170200066A1 (en) * | 2016-01-13 | 2017-07-13 | Adobe Systems Incorporated | Semantic Natural Language Vector Space |
US20170200065A1 (en) * | 2016-01-13 | 2017-07-13 | Adobe Systems Incorporated | Image Captioning with Weak Supervision |
US20170344829A1 (en) * | 2016-05-31 | 2017-11-30 | Microsoft Technology Licensing, Llc | Skeleton -based action detection using recurrent neural network |
US20180060666A1 (en) * | 2016-08-29 | 2018-03-01 | Nec Laboratories America, Inc. | Video system using dual stage attention based recurrent neural network for future event prediction |
US20180174576A1 (en) * | 2016-12-21 | 2018-06-21 | Google Llc | Acoustic-to-word neural network speech recognizer |
US20180190268A1 (en) * | 2017-01-04 | 2018-07-05 | Samsung Electronics Co., Ltd. | Speech recognizing method and apparatus |
US10032463B1 (en) * | 2015-12-29 | 2018-07-24 | Amazon Technologies, Inc. | Speech processing with learned representation of user interaction history |
US20180268286A1 (en) * | 2017-03-20 | 2018-09-20 | International Business Machines Corporation | Neural network cooperation |
US20180330718A1 (en) * | 2017-05-11 | 2018-11-15 | Mitsubishi Electric Research Laboratories, Inc. | System and Method for End-to-End speech recognition |
US20180351786A1 (en) * | 2017-06-02 | 2018-12-06 | Sas Institute Inc. | Techniques for multi-stage analysis of measurement data with event stream processing |
US20190013015A1 (en) * | 2017-07-10 | 2019-01-10 | Sony Interactive Entertainment Inc. | Initialization of ctc speech recognition with standard hmm |
US20190051292A1 (en) * | 2017-08-14 | 2019-02-14 | Samsung Electronics Co., Ltd. | Neural network method and apparatus |
US20190139092A1 (en) * | 2011-04-19 | 2019-05-09 | Jagadeshwar Nomula | Advanced techniques to improve content presentation experiences for businesses and users |
US20190139540A1 (en) * | 2016-06-09 | 2019-05-09 | National Institute Of Information And Communications Technology | Speech recognition device and computer program |
US20190244119A1 (en) * | 2016-10-11 | 2019-08-08 | Koninklijke Philips N.V. | Patient-centric clinical knowledge discovery system |
US10388274B1 (en) * | 2016-03-31 | 2019-08-20 | Amazon Technologies, Inc. | Confidence checking for speech processing and query answering |
US20190332919A1 (en) * | 2017-02-24 | 2019-10-31 | Google Llc | Sequence processing using online attention |
US20190371025A1 (en) * | 2017-02-09 | 2019-12-05 | Google Llc | Agent navigation using visual inputs |
Family Cites Families (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20030222977A1 (en) * | 2002-06-03 | 2003-12-04 | Kazutora Yoshino | Intelligent system and 3D virtual object generator |
US9153231B1 (en) * | 2013-03-15 | 2015-10-06 | Amazon Technologies, Inc. | Adaptive neural network speech recognition models |
US9928342B1 (en) * | 2015-02-06 | 2018-03-27 | Brain Trust Innovations I, Llc | System, medical item including RFID chip, server and method for capturing medical data |
US10157309B2 (en) * | 2016-01-14 | 2018-12-18 | Nvidia Corporation | Online detection and classification of dynamic gestures with recurrent convolutional neural networks |
US10176802B1 (en) * | 2016-03-21 | 2019-01-08 | Amazon Technologies, Inc. | Lattice encoding using recurrent neural networks |
WO2017203262A2 (en) * | 2016-05-25 | 2017-11-30 | Metail Limited | Method and system for predicting garment attributes using deep learning |
US10403273B2 (en) * | 2016-09-09 | 2019-09-03 | Oath Inc. | Method and system for facilitating a guided dialog between a user and a conversational agent |
US10582907B2 (en) * | 2016-10-31 | 2020-03-10 | Siemens Healthcare Gmbh | Deep learning based bone removal in computed tomography angiography |
JP6958027B2 (en) * | 2017-07-03 | 2021-11-02 | 富士通株式会社 | Arithmetic processing unit and control method of arithmetic processing unit |
US10839826B2 (en) * | 2017-08-03 | 2020-11-17 | Spotify Ab | Extracting signals from paired recordings |
-
2017
- 2017-12-19 US US15/846,634 patent/US10706840B2/en active Active
-
2020
- 2020-05-28 US US16/886,278 patent/US11776531B2/en active Active
-
2023
- 2023-09-01 US US18/460,017 patent/US20230410796A1/en active Pending
Patent Citations (135)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4799262A (en) | 1985-06-27 | 1989-01-17 | Kurzweil Applied Intelligence, Inc. | Speech recognition |
US4868867A (en) | 1987-04-06 | 1989-09-19 | Voicecraft Inc. | Vector excitation speech or audio coder for transmission or storage |
US5150449A (en) | 1988-05-18 | 1992-09-22 | Nec Corporation | Speech recognition apparatus of speaker adaptation type |
US5465318A (en) | 1991-03-28 | 1995-11-07 | Kurzweil Applied Intelligence, Inc. | Method for generating a speech recognition model for a non-vocabulary utterance |
US5600753A (en) | 1991-04-24 | 1997-02-04 | Nec Corporation | Speech recognition by neural network adapted to reference pattern learning |
US5680508A (en) | 1991-05-03 | 1997-10-21 | Itt Corporation | Enhancement of speech coding in background noise for low-rate speech coder |
US5444488A (en) | 1992-06-30 | 1995-08-22 | International Business Machines Corporation | Method and apparatus for coding digital data using vector quantizing techniques |
US5481644A (en) | 1992-08-06 | 1996-01-02 | Seiko Epson Corporation | Neural network speech recognition apparatus recognizing the frequency of successively input identical speech data sequences |
US5627939A (en) | 1993-09-03 | 1997-05-06 | Microsoft Corporation | Speech recognition system and method employing data compression |
US5509103A (en) | 1994-06-03 | 1996-04-16 | Motorola, Inc. | Method of training neural networks used for speech recognition |
US5542006A (en) | 1994-06-21 | 1996-07-30 | Eastman Kodak Company | Neural network based character position detector for use in optical character recognition |
EP0715298A1 (en) | 1994-11-30 | 1996-06-05 | International Business Machines Corporation | Reduction of search space in speech recognition using phone boundaries and phone ranking |
US5729656A (en) | 1994-11-30 | 1998-03-17 | International Business Machines Corporation | Reduction of search space in speech recognition using phone boundaries and phone ranking |
US5864803A (en) | 1995-04-24 | 1999-01-26 | Ericsson Messaging Systems Inc. | Signal processing and training by a neural network for phoneme recognition |
US5809462A (en) | 1995-04-24 | 1998-09-15 | Ericsson Messaging Systems Inc. | Method and apparatus for interfacing and training a neural network for phoneme recognition |
US5867816A (en) | 1995-04-24 | 1999-02-02 | Ericsson Messaging Systems Inc. | Operator interactions for developing phoneme recognition by neural networks |
US5749066A (en) | 1995-04-24 | 1998-05-05 | Ericsson Messaging Systems Inc. | Method and apparatus for developing a neural network for phoneme recognition |
US6067517A (en) | 1996-02-02 | 2000-05-23 | International Business Machines Corporation | Transcription of speech data with segments from acoustically dissimilar environments |
US5937384A (en) | 1996-05-01 | 1999-08-10 | Microsoft Corporation | Method and system for speech recognition using continuous density hidden Markov models |
US5745872A (en) | 1996-05-07 | 1998-04-28 | Texas Instruments Incorporated | Method and system for compensating speech signals using vector quantization codebook adaptation |
US6038528A (en) | 1996-07-17 | 2000-03-14 | T-Netix, Inc. | Robust speech processing with affine transform replicated data |
US6260013B1 (en) | 1997-03-14 | 2001-07-10 | Lernout & Hauspie Speech Products N.V. | Speech recognition system employing discriminatively trained models |
US6188982B1 (en) | 1997-12-01 | 2001-02-13 | Industrial Technology Research Institute | On-line background noise adaptation of parallel model combination HMM with discriminative learning using weighted HMM for noisy speech recognition |
US6397179B2 (en) | 1997-12-24 | 2002-05-28 | Nortel Networks Limited | Search optimization system and method for continuous speech recognition |
US20010001141A1 (en) | 1998-02-04 | 2001-05-10 | Sih Gilbert C. | System and method for noise-compensated speech recognition |
US6381569B1 (en) | 1998-02-04 | 2002-04-30 | Qualcomm Incorporated | Noise-compensated speech recognition templates |
US6411932B1 (en) | 1998-06-12 | 2002-06-25 | Texas Instruments Incorporated | Rule-based learning of word pronunciations from training corpora |
US6236965B1 (en) | 1998-11-11 | 2001-05-22 | Electronic Telecommunications Research Institute | Method for automatically generating pronunciation dictionary in speech recognition system |
US20020116196A1 (en) | 1998-11-12 | 2002-08-22 | Tran Bao Q. | Speech recognizer |
US6668243B1 (en) | 1998-11-25 | 2003-12-23 | Microsoft Corporation | Network and language models for use in a speech recognition system |
US6577999B1 (en) | 1999-03-08 | 2003-06-10 | International Business Machines Corporation | Method and apparatus for intelligently managing multiple pronunciations for a speech recognition vocabulary |
US6434520B1 (en) | 1999-04-16 | 2002-08-13 | International Business Machines Corporation | System and method for indexing and querying audio archives |
US6631348B1 (en) | 2000-08-08 | 2003-10-07 | Intel Corporation | Dynamic speech recognition pattern switching for enhanced speech recognition accuracy |
US20020049591A1 (en) | 2000-08-31 | 2002-04-25 | Siemens Aktiengesellschaft | Assignment of phonemes to the graphemes producing them |
US6876966B1 (en) | 2000-10-16 | 2005-04-05 | Microsoft Corporation | Pattern recognition training method and apparatus using inserted noise followed by noise reduction |
US7065487B2 (en) | 2000-10-23 | 2006-06-20 | Seiko Epson Corporation | Speech recognition method, program and apparatus using multiple acoustic models |
US20020165715A1 (en) | 2000-12-19 | 2002-11-07 | Soren Riis | Speech recognition method and system |
US7062442B2 (en) | 2001-02-23 | 2006-06-13 | Popcatcher Ab | Method and arrangement for search and recording of media signals |
WO2002093934A1 (en) | 2001-05-14 | 2002-11-21 | Salgen Systems Limited | Image compression and transmission |
US20040162722A1 (en) | 2001-05-22 | 2004-08-19 | Rex James Alexander | Speech quality indication |
US20060149558A1 (en) | 2001-07-17 | 2006-07-06 | Jonathan Kahn | Synchronized pattern recognition source data processed by manual or automatic means for creation of shared speaker-dependent speech user profile |
US20030033143A1 (en) | 2001-08-13 | 2003-02-13 | Hagai Aronowitz | Decreasing noise sensitivity in speech processing under adverse conditions |
US20060195317A1 (en) | 2001-08-15 | 2006-08-31 | Martin Graciarena | Method and apparatus for recognizing speech in a noisy environment |
US20030088411A1 (en) | 2001-11-05 | 2003-05-08 | Changxue Ma | Speech recognition by dynamical noise model adaptation |
US20030120482A1 (en) | 2001-11-12 | 2003-06-26 | Jilei Tian | Method for compressing dictionary data |
US7844466B2 (en) | 2002-06-28 | 2010-11-30 | Conceptual Speech, Llc | Conceptual analysis driven data-mining and dictation system and method |
US20040138882A1 (en) | 2002-10-31 | 2004-07-15 | Seiko Epson Corporation | Acoustic model creating method, speech recognition apparatus, and vehicle having the speech recognition apparatus |
US20040181408A1 (en) | 2003-03-13 | 2004-09-16 | Microsoft Corporation | Method for training of subspace coded gaussian models |
US20110103614A1 (en) | 2003-04-15 | 2011-05-05 | Ipventure, Inc. | Hybrid audio delivery system and method therefor |
US8849185B2 (en) | 2003-04-15 | 2014-09-30 | Ipventure, Inc. | Hybrid audio delivery system and method therefor |
US20040260546A1 (en) | 2003-04-25 | 2004-12-23 | Hiroshi Seo | System and method for speech recognition |
US20040230424A1 (en) | 2003-05-15 | 2004-11-18 | Microsoft Corporation | Adaptation of compressed acoustic models |
US7424426B2 (en) | 2003-09-12 | 2008-09-09 | Sadaoki Furui And Ntt Docomo, Inc. | Noise adaptation system of speech model, noise adaptation method, and noise adaptation program for speech recognition |
US20060053008A1 (en) | 2004-09-03 | 2006-03-09 | Microsoft Corporation | Noise robust speech recognition with a switching linear dynamic model |
US20060184362A1 (en) | 2005-02-15 | 2006-08-17 | Bbn Technologies Corp. | Speech analyzing system with adaptive noise codebook |
US20060195319A1 (en) | 2005-02-28 | 2006-08-31 | Prous Institute For Biomedical Research S.A. | Method for converting phonemes to written text and corresponding computer system and computer program |
US8126710B2 (en) | 2005-06-01 | 2012-02-28 | Loquendo S.P.A. | Conservative training method for adapting a neural network of an automatic speech recognition device |
US7826945B2 (en) | 2005-07-01 | 2010-11-02 | You Zhang | Automobile speech-recognition interface |
US20070088552A1 (en) | 2005-10-17 | 2007-04-19 | Nokia Corporation | Method and a device for speech recognition |
US20070118373A1 (en) | 2005-11-23 | 2007-05-24 | Wise Gerald B | System and method for generating closed captions |
US8442125B2 (en) | 2005-11-29 | 2013-05-14 | Google Inc. | Determining popularity ratings using social and interactive applications for mass media |
US7756708B2 (en) | 2006-04-03 | 2010-07-13 | Google Inc. | Automatic language model update |
US8340308B2 (en) | 2006-10-20 | 2012-12-25 | Panasonic Corporation | Method and apparatus for automatic noise compensation used with audio reproduction equipment |
US20080300875A1 (en) | 2007-06-04 | 2008-12-04 | Texas Instruments Incorporated | Efficient Speech Recognition with Cluster Methods |
US8615397B2 (en) | 2008-04-04 | 2013-12-24 | Intuit Inc. | Identifying audio content using distorted target patterns |
US20090254343A1 (en) | 2008-04-04 | 2009-10-08 | Intuit Inc. | Identifying audio content using distorted target patterns |
US20100057452A1 (en) | 2008-08-28 | 2010-03-04 | Microsoft Corporation | Speech interfaces |
US8239195B2 (en) | 2008-09-23 | 2012-08-07 | Microsoft Corporation | Adapting a compressed model for use in speech recognition |
US8463719B2 (en) | 2009-03-11 | 2013-06-11 | Google Inc. | Audio classification for information retrieval using sparse features |
US20100318354A1 (en) | 2009-06-12 | 2010-12-16 | Microsoft Corporation | Noise adaptive training for speech recognition |
US20110173208A1 (en) | 2010-01-13 | 2011-07-14 | Rovi Technologies Corporation | Rolling audio recognition |
US20110238416A1 (en) | 2010-03-24 | 2011-09-29 | Microsoft Corporation | Acoustic Model Adaptation Using Splines |
US20110238412A1 (en) | 2010-03-26 | 2011-09-29 | Antoine Ezzat | Method for Constructing Pronunciation Dictionaries |
US20110307253A1 (en) | 2010-06-14 | 2011-12-15 | Google Inc. | Speech and Noise Models for Speech Recognition |
US20120004909A1 (en) | 2010-06-30 | 2012-01-05 | Beltman Willem M | Speech audio processing |
US8930192B1 (en) | 2010-07-27 | 2015-01-06 | Colvard Learning Systems, Llc | Computer-based grapheme-to-speech conversion using a pointing device |
US8782012B2 (en) | 2010-08-27 | 2014-07-15 | International Business Machines Corporation | Network analysis |
EP2431969A1 (en) | 2010-09-15 | 2012-03-21 | Svox AG | Speech recognition with small CPU footprint and reduced quantization error |
US20120065976A1 (en) | 2010-09-15 | 2012-03-15 | Microsoft Corporation | Deep belief network for large vocabulary continuous speech recognition |
US20120143604A1 (en) | 2010-12-07 | 2012-06-07 | Rita Singh | Method for Restoring Spectral Components in Denoised Speech Signals |
US20190139092A1 (en) * | 2011-04-19 | 2019-05-09 | Jagadeshwar Nomula | Advanced techniques to improve content presentation experiences for businesses and users |
EP2507790A1 (en) | 2011-06-06 | 2012-10-10 | Bridge Mediatech, S.L. | Method and system for robust audio hashing |
US20140188487A1 (en) | 2011-06-06 | 2014-07-03 | Bridge Mediatech, S.L. | Method and system for robust audio hashing |
US20130138436A1 (en) | 2011-11-26 | 2013-05-30 | Microsoft Corporation | Discriminative pretraining of deep neural networks |
US20130223645A1 (en) | 2012-02-16 | 2013-08-29 | Qnx Software Systems Limited | System and method for dynamic residual noise shaping |
US20130225128A1 (en) | 2012-02-24 | 2013-08-29 | Agnitio Sl | System and method for speaker recognition on mobile devices |
US20130238324A1 (en) | 2012-03-07 | 2013-09-12 | International Business Machines Corporation | Local peak weighted-minimum mean square error (lpw-mmse) estimation for robust speech |
US20150066499A1 (en) | 2012-03-30 | 2015-03-05 | Ohio State Innovation Foundation | Monaural speech filter |
US20130297299A1 (en) | 2012-05-07 | 2013-11-07 | Board Of Trustees Of Michigan State University | Sparse Auditory Reproducing Kernel (SPARK) Features for Noise-Robust Speech and Speaker Recognition |
US20130325473A1 (en) | 2012-05-31 | 2013-12-05 | Agency For Science, Technology And Research | Method and system for dual scoring for text-dependent speaker verification |
US9123338B1 (en) | 2012-06-01 | 2015-09-01 | Google Inc. | Background audio identification for speech disambiguation |
US20130343641A1 (en) | 2012-06-22 | 2013-12-26 | Google Inc. | System and method for labelling aerial images |
US20150371633A1 (en) | 2012-11-01 | 2015-12-24 | Google Inc. | Speech recognition using non-parametric models |
US20140142929A1 (en) | 2012-11-20 | 2014-05-22 | Microsoft Corporation | Deep neural networks training for speech and pattern recognition |
US9263036B1 (en) | 2012-11-29 | 2016-02-16 | Google Inc. | System and method for speech recognition using deep recurrent neural networks |
US20140156575A1 (en) | 2012-11-30 | 2014-06-05 | Nuance Communications, Inc. | Method and Apparatus of Processing Data Using Deep Belief Networks Employing Low-Rank Matrix Factorization |
US20140257803A1 (en) | 2013-03-06 | 2014-09-11 | Microsoft Corporation | Conservatively adapting a deep neural network in a recognition system |
US20140257804A1 (en) | 2013-03-07 | 2014-09-11 | Microsoft Corporation | Exploiting heterogeneous data in deep neural network-based speech recognition systems |
US20140278426A1 (en) * | 2013-03-13 | 2014-09-18 | Nuance Communications, Inc. | Data shredding for speech recognition acoustic model training under data retention restrictions |
US20140372112A1 (en) | 2013-06-18 | 2014-12-18 | Microsoft Corporation | Restructuring deep neural network acoustic models |
US20150100530A1 (en) | 2013-10-08 | 2015-04-09 | Google Inc. | Methods and apparatus for reinforcement learning |
US20150127327A1 (en) | 2013-11-01 | 2015-05-07 | Google Inc. | Context-dependent state tying using a neural network |
US20150127594A1 (en) | 2013-11-04 | 2015-05-07 | Google Inc. | Transfer learning for deep neural network based hotword detection |
US20150127342A1 (en) | 2013-11-04 | 2015-05-07 | Google Inc. | Speaker identification |
US8965112B1 (en) | 2013-12-09 | 2015-02-24 | Google Inc. | Sequence transcription with deep neural networks |
EP2905780A1 (en) | 2014-02-11 | 2015-08-12 | Malaspina Labs (Barbados) Inc. | Voiced sound pattern detection |
US20150255069A1 (en) | 2014-03-04 | 2015-09-10 | Amazon Technologies, Inc. | Predicting pronunciation in speech recognition |
US20150340034A1 (en) * | 2014-05-22 | 2015-11-26 | Google Inc. | Recognizing speech using neural networks |
US20160034814A1 (en) | 2014-08-01 | 2016-02-04 | University Of Southern California | Noise-boosted back propagation and deep learning neural networks |
US20160093294A1 (en) | 2014-09-25 | 2016-03-31 | Google Inc. | Acoustic model training corpus selection |
US9299347B1 (en) | 2014-10-22 | 2016-03-29 | Google Inc. | Speech recognition using associative mapping |
US20160171977A1 (en) | 2014-10-22 | 2016-06-16 | Google Inc. | Speech recognition using associative mapping |
US20160299685A1 (en) * | 2015-04-10 | 2016-10-13 | Google Inc. | Neural network for keyboard input decoding |
US20170040016A1 (en) | 2015-04-17 | 2017-02-09 | International Business Machines Corporation | Data augmentation method based on stochastic feature mapping for automatic speech recognition |
US20160351188A1 (en) | 2015-05-26 | 2016-12-01 | Google Inc. | Learning pronunciations from acoustic sequences |
US20170103312A1 (en) * | 2015-10-08 | 2017-04-13 | Via Alliance Semiconductor Co., Ltd. | Neural network unit with output buffer feedback and masking capability with processing unit groups that operate as recurrent neural network lstm cells |
US20170148433A1 (en) * | 2015-11-25 | 2017-05-25 | Baidu Usa Llc | Deployed end-to-end speech recognition |
US20170178346A1 (en) * | 2015-12-16 | 2017-06-22 | High School Cube, Llc | Neural network architecture for analyzing video data |
US10032463B1 (en) * | 2015-12-29 | 2018-07-24 | Amazon Technologies, Inc. | Speech processing with learned representation of user interaction history |
US20170200066A1 (en) * | 2016-01-13 | 2017-07-13 | Adobe Systems Incorporated | Semantic Natural Language Vector Space |
US20170200065A1 (en) * | 2016-01-13 | 2017-07-13 | Adobe Systems Incorporated | Image Captioning with Weak Supervision |
US10388274B1 (en) * | 2016-03-31 | 2019-08-20 | Amazon Technologies, Inc. | Confidence checking for speech processing and query answering |
US20170344829A1 (en) * | 2016-05-31 | 2017-11-30 | Microsoft Technology Licensing, Llc | Skeleton -based action detection using recurrent neural network |
US20190139540A1 (en) * | 2016-06-09 | 2019-05-09 | National Institute Of Information And Communications Technology | Speech recognition device and computer program |
US20180060666A1 (en) * | 2016-08-29 | 2018-03-01 | Nec Laboratories America, Inc. | Video system using dual stage attention based recurrent neural network for future event prediction |
US20190244119A1 (en) * | 2016-10-11 | 2019-08-08 | Koninklijke Philips N.V. | Patient-centric clinical knowledge discovery system |
US20180174576A1 (en) * | 2016-12-21 | 2018-06-21 | Google Llc | Acoustic-to-word neural network speech recognizer |
US20180190268A1 (en) * | 2017-01-04 | 2018-07-05 | Samsung Electronics Co., Ltd. | Speech recognizing method and apparatus |
US20190371025A1 (en) * | 2017-02-09 | 2019-12-05 | Google Llc | Agent navigation using visual inputs |
US20190332919A1 (en) * | 2017-02-24 | 2019-10-31 | Google Llc | Sequence processing using online attention |
US20180268286A1 (en) * | 2017-03-20 | 2018-09-20 | International Business Machines Corporation | Neural network cooperation |
US20180330718A1 (en) * | 2017-05-11 | 2018-11-15 | Mitsubishi Electric Research Laboratories, Inc. | System and Method for End-to-End speech recognition |
US20180351786A1 (en) * | 2017-06-02 | 2018-12-06 | Sas Institute Inc. | Techniques for multi-stage analysis of measurement data with event stream processing |
US20190013015A1 (en) * | 2017-07-10 | 2019-01-10 | Sony Interactive Entertainment Inc. | Initialization of ctc speech recognition with standard hmm |
US20190051292A1 (en) * | 2017-08-14 | 2019-02-14 | Samsung Electronics Co., Ltd. | Neural network method and apparatus |
Non-Patent Citations (158)
Title |
---|
"Artificial neural network," From Wikipedia, the free encyclopedia, last modified on Oct. 4, 2015 [retrieved on Oct. 8, 2015]. Retrieved from the Internet: URL<https://en.wikipedia.org/wiki/Artificial_neural_network>, 14 pages. |
"Automatic captions in YouTube," from Google Official Blog, Nov. 19, 2009, [retrieved on Nov. 28, 2017] Retrieved from Internet: URLhttps://googleblog.blogspot.com/2009/11/automatic-captions-in-youtube.html > 5 pages. |
"Bidirectional recurrent neural networks," From Wikipedia, the free encyclopedia, last modified on Feb. 17, 2017, [retrieved on Nov. 28, 2017] Retrieved from Internet: URL<https://en.wikipedia.org/wiki/Bidirectional_recurrent_neural_networks> 3 pages. |
"Convolutional neural network," From Wikipedia, the free encyclopedia, last modified on Sep. 10, 2015 [retrieved on Oct. 8, 2015]. Retrieved from the Internet: URL<https://en.wikipedia.org/wiki/Convolutional_neural_network>, 9 pages. |
"Locality-Sensitivity Hashing," Wikipedia, downloaded from the internet on Jun. 16, 2014, 7 pages, http://en.wikipedia.org/wiki/Locality-sensitive_hashing. |
"Long short-term memory," From Wikipedia, the free encyclopedia, last modified on Oct. 5, 2015 [retrieved on Oct. 8, 2015]. Retrieved from the Internet: URL<https://en.wikipedia.org/wiki/Long_short-term_memory>, 4 pages. |
"Recurrent neural network," From Wikipedia, the free encyclopedia, last modified on Sep. 30, 2015 [retrieved on Oct. 8, 2015]. Retrieved from the Internet: URL<https://en.wikipedia.org/wiki/Recurrent_neural_network>, 9 pages. |
"Speech recognition," From Wikipedia, the free encyclopedia, last modified on Oct. 1, 2015 [retrieved on Oct. 8, 2015]. Retrieved from the Internet: URL<https://en.wikipedia.org/wiki/Speech_recognition>, 16 pages. |
"Time delay neural network," From Wikipedia, the free encyclopedia, last modified on Mar. 23, 2015 [retrieved on Oct. 8, 2015]. Retrieved from the Internet: URL <https://en.wikipedia.org/wiki/Time_delay_neural_network>, 1 page. |
Amodei et al. "Deep Speech 2: End-to-End speech recognition in English and Mandarin," Proceedings of the International Conference on Machine Learning, Jun. 11, 2016, 10 pages. |
Aronowitz et al., "New developments in voice biometrics for user Authentication," in Interspeech, Aug. 2011, pp. 17-20. |
Aronowitz, "Text-dependent speaker verification using a small development set," in Proc. Odyssey Speaker and Language Recognition Workshop, 2012, 28 pages. |
Auckenthaler et al., "Score normalization for text-independent speaker verification systems," Digital Signal Processing, 10: 42-54, 2000. |
Bahdanau et al. "End-to-end attention-based large vocabulary speech recognition," Proceedings of the International Conference in Acoustics, Speech and Signal Processing, Mar. 2016, 8 pages. |
Bahdanau et al. "Neural machine translation by jointly learning to align and translate," arXiv 1409.0473v7, May 19, 2016, 15 pages. |
Bahdanau, Dzmitry, et al. "End-to-end attention-based large vocabulary speech recognition." IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP), p. 4945-4949, May 2016. (Year: 2016). * |
Bahl et al., "Context Dependent Modeling of Phones in Continuous Speech Using Decision Trees," HLT '91 Proceedings of the workshop on Speech and Natural Language, pp. 264-269, 1991. |
Bennani et al., "Connectionist approaches for automatic speaker recognition," in ESCA Workshop on Automatic Speaker Recognition, Identification and Verification, 1990, 265-268. |
Bluche et al. "Framewise and CTC Training of Neural Networks for Handwriting Recognition," 13th international conference on documents analysis and recognition, Aug. 23, 2015, 5 pages. |
Brants et al., "Large language models in machine translation," in EMNLP, Jun. 2007, pp. 858-867. |
Breuel. "Benchmarking of LSTM networks," arXiv preprint arXiv 1508.02774v1, Aug. 11, 2015, 17 pages. |
Bucilua et al., "Model compression." Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining. ACM, 2006, 7 pages. |
Chan et al. "Listen, attend and spell: A Neural network for large vocabulary conversational speech recognition," Proceedings of the International Conference on Acoustics, Speech and Signal Processing, Mar. 2016, 5 pages. |
Chen et al, "Joint sequence training of phone and grapheme acoustic model based on multi-task learning Deep Neural Networks," Sep. 14-18, 2014, in Proceedings of Interspeech, 2014, pp. 1083-1087. |
Cho et al. "Learning phrase representations using rnn encoder-decoder for statistical machine translation," arXiv 1406.1078v3, Sep. 3, 2014, 15 pages. |
Chorowski et al. "End-to-end continuous speech recognition using attention-based recurrent nn: First results," arXiv 1412.1602v1, Dec. 4, 2014, 10 pages. |
Chou, "Optimal partitioning for classification and regression trees," IEEE Trans. on Pattern Analysis and Machine Intelligence, vol. 13, No. 4, pp. 340-354, Apr. 1991. |
Coates and Ng, "The importance of encoding versus training with sparse coding and vector quantization," in Proceedings of the 28th International Conference on Machine Learning (ICML-11), Jun. 2011, pp. 921-928. |
Dahl et al "Context-Dependent Pre-Trained Deep Neural Networks for Large-Vocabulary Speech Recognition", IEEE, Trans., ASLP vol. 20 No. 1, Jan. 2012, 13 pages. |
Dahl et al., "Improving deep neural networks for LVCSR using rectified linear units and dropout," in Proc. ICASSP, 2013, 5 pages. |
Dean et al., "Large Scale Distributed Deep Networks," Proc. Neural Information Processing Systems, pp. 1232-1240, Dec. 2012. |
Decadt et al "Phoneme-to-Grapheme Conversion for Out-of-Vocabulary Words in Large Vocabulary Speech Recognition", IEEE Automatic Speech Recognition and Understanding Workshop 2001, 4 pages. |
Dehak et al., "Front-end factor analysis for speaker verification," IEEE Transactions on Audio, Speech, and Language Processing, 19: 788-798, 2011. |
Deng et al., "Roles of pre-training and fine-tuning in context-dependent DBN-HMMs for real-world speech recognition," in NIPS, 2010, 8 pages. |
Donahue et al. "Decaf: A deep convolutional activation feature for generic visual recognition." arXiv preprint arXiv:1310.1531 Oct. 2013, 10 pages. |
Doss et al, "Phoneme-grapheme based speech recognition system," 2003 IEEE Workshop on Automatic Speech Recognition and Understanding (IEEE Cat. No. 03EX721), 2003, pp. 94-98. |
Eyben et al., "From Speech to Letters-Using a Novel Neural Network Architecture for Grapheme Based ASR," Automatic Speech Recognition & Understanding, 2009, ASRU 2009, IEEE Workshop on, pp. 376-380, 2009. |
Eyben et al., "From Speech to Letters—Using a Novel Neural Network Architecture for Grapheme Based ASR," Automatic Speech Recognition & Understanding, 2009, ASRU 2009, IEEE Workshop on, pp. 376-380, 2009. |
Fernandez et al., "Phoneme recognition in TIMIT with BLSTM-CTC," Technical Report No. IDSIA-04-08, Apr. 2008, 7 pages. |
Finan et al., "Comparison of multilayer and radial basis function neural networks for text-dependent speaker recognition," Neural Networks, 1996, IEEE International Conference on. vol. 4. IEEE, 1996, pp. 1992-1997. |
Fiscus, "A post-processing system to yield reduced word error rates: Recognizer output voting error reduction (ROVER)," in IEEE Automatic Speech Recognition and Understanding Workshop (ASRU), pp. 347-354, Dec. 1997. |
Garimella et al., "Factor analysis of auto-associative neural networks with application in speaker verification," IEEE transactions on neural networks and learning systems 24(4):522-528. Apr. 2013. |
Glass, "Towards Unsupervised Speech Processing," The 11th International Conference on Information Sciences, Signal Processing and their Applications: Main Tracks, Jul. 2012, pp. 1-4. |
Goffin et al., "The AT&T Watson Speech Recognizer," in Proceedings of ICASSP 2005, 4 pages. |
Goodfellow et al. "Maxout networks," in Proc. JMLR, 2013, 1319-1327. |
Graves "Sequence Transduction with Recurrent Neural Networks", Proceedings of the 29th International Conference on Machine Learning, 2012, 8 pages. |
Graves et al, "Connectionist Temporal Classification: Labelling Unsegmented Sequence Data With Recurrent Neural Networks." Proceedings of the 23rd International Conference on Machine Learning, Association for Computer Machinery, pp. 369-376, 2006. (Year: 2006). * |
Graves et al. "Connectionist Temporal Classification: Labelling Unsegmented Sequence Data with Recurrent Neural Networks," Proceedings of the 23rd International Conference on Machine Learning, Jun. 25, 2006, 8 pages. |
Graves et al. "Hybrid Speech Recognition with Deep Biderectional LSTM," IEEE Workshop on Automatic Speech Recognition and Understanding, Dec. 2013, 6 pages. |
Graves et al. "Multi-dimensional recurrent neural networks," Proc. ICANN, Sep. 2007, 10 pages. |
Graves et al. "Speech Recognition with Deep Recurrent Neural Networks," arXiv Preprint arXiv 1303.5778v1, Mar. 22, 2013, 5 pages. |
Graves et al., "A Novel Connectionist System for Unconstrained Handwriting Recognition," Pattern Analysis and Machine Intelligence, IEEE Transactions on, 31(5):855-868, May 2008. |
Graves et al., "Framewise Phoneme Classification with Bidirectional LSTM and Other Neural Network Architectures," Neural Networks, 18(5):602-610, Aug. 2005. |
Graves et al., "Towards end-to-end speech recognition with recurrent neural networks", Jun. 21-26, 2014, In Proceedings of the 31st International Conference on Machine Learning (ICML-14), pp. 1764-1772. |
Graves, "Supervised Sequence Labelling with Recurrent Neural Networks," Studies in Computational Intelligence, vol. 385, 137 pages, 2012. |
Grosz et al., "A Sequence Training Method for Deep Rectifier Neural Networks in Speech Recognition," Speech and Computer. Springer International Publishing, 2014, pp. 81-88. |
Hannun et al, "First-pass large vocabulary continuous speech recognition using bi-directional recurrent DNNs", 2014, In ArXiv 1408.2873v2 Dec. 2014, pp. 1-7. |
Hartman, "Training feed-forward neural networks with gain constraints," Neural Computation, 12(4):811-829, Apr. 2000, Abstract only, 1 page. |
Hassibi et al., "Second order derivatives for network pruning: Optimal brain surgeon," in Advances in Neural Information Processing Systems 5, 1993, pp. 164-171. |
Hermansky et al., "Tandem connectionist feature extraction for conventional HMM systems," in IEEE International Conference on Acoustics, Speech, and Signal Processing (ICASSP), pp. 1635-1638, Jun. 2000. |
Hinton et al "Deep Neural Networks for Acoustic Modeling in Speech Recognition" IEEE Signal Processing Magazine vol. 29, No. 6 Oct. 2012, 16 pages. |
Hinton et al., "Distilling the Knowledge in a Neural Network," arXiv preprint arXiv:1503.02531, Mar. 2015, 9 pages. |
Hinton et al., "Improving neural networks by preventing co-adaptation of feature detectors," in arXive preprint, Jul. 2012, 1-18. |
Hochreiter and Schmidhuber, "Long short-term memory," Neural Computation, 9(8):1735-1780, Nov. 1997, 32 pages. |
Huang et al., "Semi-supervised GMM and DNN acoustic model training with multi-system combination and confidence re-calibration," in Interspeech, Aug. 2013, pp. 2360-2364. |
Jaitly et al. "A neural transducer," arXiv 1511.04868v4 Aug. 4, 2016, 10 pages. |
Jaitly et al., "Application of pretrained deep neural networks to large vocabulary speech recognition," in Interspeech, 2012, 4 pages. |
Jarrett et al., "What is the best multi-stage architecture for object recognition?" in ICCV. IEEE, 2009, pp. 2146-2153. |
Jiang, "Confidence measures for speech recognition: A survey," Speech Communication, vol. 45, No. 4, pp. 455-470, Apr. 2005. |
Kalchbrenner et al. "Grid long short term memory," arXiv 1507.01526v3, Jan. 7, 2016, 15 pages. |
Kapralova et al. "A big data approach to acoustic model training corpus selection," Proceedings of the Fifteenth Annual Conference of the International Speech Communication Associates, 2014, 5 pages. |
Kenny et al., "A study of interspeaker variability in speaker verification," IEEE Transactions on Audio, Speech, and Language Processing, 16: 980-988, 2008. |
Kenny et al., "Joint Factor Analysis versus Eigenchannels in Speaker Recognition," IEEE Transactions on Audio, Speech, and Language Processing, 15: 1435-1447, 2007. |
Kenny et al., "Speaker and session variability in GMM-based speaker verification," IEEE Transactions on Audio, Speech, and Language Processing, 15: 1448-1460, 2007. |
Kenny, "Bayesian speaker verification with heavy-tailed priors," in Proc. Odyssey Speaker and Language Recognition Workshop, 2010, 10 pages. |
Killer et al., "Grapheme Based Speech Recognition," Eurospeech 2003, pp. 3141-3144, 2014. |
Kinnunen et al., "Real-time speaker identification and verification," IEEE Transactions on Audio, Speech and Language Processing, Jan. 1, 2006, 14(1) 13 pages. |
Kuo et al. "Active learning with minimum expected error for spoken language understanding," in Interspeech, Sep. 2005, pp. 437-440. |
Kuznetsov et al. "Learning N-gram language models from uncertain data," Proceedings Interspeech, 2016, 5 pages. |
Lamel et al., "Lightly supervised and unsupervised acoustic model training," Computer Speech and Language, vol. 16, No. 1, pp. 115-229, Jan. 2002. |
Lang et al. "A time-delay neural network architecture of isolated word recognition," Neural Networks, 3(1), Dec. 1990, 21 pages. |
Larcher et al. "Phonetically-constrained PLDA modeling for text-dependent speaker verification with multiple short utterances," in Proc. ICASSP, May 26-31, 2013, 7673-7677. |
LeCun et al, "A tutorial on energy-based learning," in Predicting Structured Data,MIT Press, 2006, pp. 1-59. |
LeCun et al., "Gradient-based learning applied to document recognition," Proceedings of the IEEE, vol. 86, No. 11, Nov. 1998, 46 pages. |
LeCun et al., "Learning methods for generic object recognition with invariance to pose and lighting," in Computer Vision and Pattern Recognition, 2004. CVPR 2004. Proceedings of the 2004 IEEE Computer Society Conference on, vol. 2. IEEE, Jul. 2004, 8 pages. |
Lee et al., "Unsupervised feature learning for audio classification using convolutional deep belief networks," in NIPS, 2009, pp. 1096-1104. |
Lei et al., "Application of convolutional neural networks to language identification in noisy conditions," in Proc. Speaker Odyssey Workshop (submitted), 2014, 6 pages. |
Liao et al., "Large scale deep neural network acoustic modeling with semi-supervised training data for youtube video transcription," in Workshop on Automatic Speech Recognition and Understanding (ASRU), 2013, 6 pages. |
Liao et al., "Large vocabulary automatic speech recognition for children," Interspeech 2015, pp. 1611-1615, Sep. 2015. |
Lu et al. "A study of the recurrent neural network encoder-decoder for large vocabulary speech recognition," Interspeech, 2015, 6 pages. |
Lu et al. "On training the recurrent neural network encoder-decoder for large vocabulary conversational speech recognition," Proceedings International Conference on Acoustics, Speech and Signal Processing, Mar. 2016, 5 pages. |
Lu et al. "Segmental recurrent neural networks for end-to-end speech recognition," arXiv 1603.00223, Mar. 1, 2016, 5 pages. |
Lu et al., "On training the recurrent neural network encoder-decoder for large vocabulary end-to-end speech recognition." IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP), p. 5060-5064, May 2016. (Year: 2016). * |
Ma and Schwartz, "Unsupervised versus supervised training of acoustic models," in Interspeech, Sep. 2008, pp. 2374-2377. |
Maas et al. "Lexicon-Free Conversational Speech Recognition with Neural Networks," Proceedings of the 2015 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, 2015, 10 pages. |
MathWorks Support Team, "Is it possible to impose constraints on a neural network using Neural Network Toolbox?" MATLAB Answers™, Jun. 27, 2009 [retrieved on Oct. 8, 2015]. Retrieved from the Internet: URL<http://www.mathworks.com/matlabcentral/answers/99132-is-it-possible-to-impose-constraints-on-a-neural-network-using-neural-network-toolbox>, 3 pages. |
McLaren et al., "Application of convolutional neural networks to speaker recognition in noisy conditions," in 15th Annual Conference of the International Speech Communication Association, Sep. 2014, pp. 686-690. |
Miao et al. "EESEN: End-to-end speech recognition using dep RNN models and WFST-based decoding," Proceedings of Automatic Speech Recognition and Understanding, Dec. 2015, 8 pages. |
Miao, Yajie, Mohammad Gowayyed, and Florian Metze. "EESEN: End-to-end speech recognition using deep RNN models and WFST-based decoding." 2015 IEEE Workshop on Automatic Speech Recognition and Understanding (ASRU). IEEE, 2015. (Year: 2015). * |
Mohamed et al., "Deep Belief Networks for phone recognition," ICASSP, 2011, pp. 1-9. |
Mohri et al., "Weighted Finite-State Transducers in Speech Recognition," Computer Speech and Language, vol. 16, issue 1, Jan. 2002, 26 pages. |
Morgan et al., "Continuous speech recognition: An introduction to the hybrid HMM/connectionist approach," IEEE Signal Processing Magazine, vol. 12, No. 3, 1995, 40 pages. |
Nair et al., "Rectified linear units improve restricted Boltzmann machines," in ICML, 2010, 8 pages. |
Oglesby et al., "Optimisation of neural models for speaker identification," in Proc. ICASSP, Apr. 3-6, 1990, 1:261-264. |
Panayotov et al. "LibriSpeech: an ASR corpus based on public domain audio books," Proceedings International Conference on Acoustics, Speech and Signal Processing, Apr. 2015, 5 pages. |
Pennlio, "Fully-connected, locally-connected and shared weights layer in neural networks," Peng' s Blog, Apr. 11, 2014 [retrieved on Sep. 8, 2015]. Retrieved from the Internet: URL<https://pennlio.wordpress.com/?s=fully-connected%2C+locally-connected>, 4 pages. |
Prabhavalkar et al., "Automatic gain control and multi-style training for robust small-footprint keyword spotting with deep neural networks," Acoustics, Speech and Signal Processing (ICASSP), 2015 IEEE International Conference on, Apr. 2015, pp. 4704-4708. |
Pundak, Golan, and Tara Sainath. "Lower frame rate neural network acoustic models." (2016). Retrieved from "https://storage.googleapis.com/pub-tools-public-publication-data/pdf/45555.pdf" on Mar. 11, 2020. (Year: 2016). * |
Ramaswamy, Ganesh N. et al., "Compression of Acoustic Features for Speech Recognition In Network Environments," ICASSP 1998, 4 pages. |
Ranzato et al. "Sequence level training with recurrent neural networks," arXiv 1511.06732v7, May 6, 2016, 16 pages. |
Rao, "Grapheme-To-Phoneme Conversion Using Long Short-Term Memory Recurrent Neural Networks," 40th IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP) 2015, Apr. 2015, Brisbane, Australia, 5 pages. |
Reddy, "Learning pronunciations from unlabeled evidence," Doctoral Dissertation, University of Chicago, 2012, abstract only, 1 page. |
Reynolds et al., "Speaker Verification Using Adapted Gaussian Mixture Models," Digital Signal Processing 10, 19-41 (2000). |
Robinson et al., "A recurrent error propagation network speech recognition system," Computer Speech and Language, 5(3):259-274, Jul. 1991. |
Rumelhart et al "Learning representations by back-propagating errors" Nature vol. 323, Oct. 9, 1986, 4 pages. |
Rybach et al., "Direct construction of compact context-dependency transducers from data," Computer Speech and Language, vol. 28, issue 1, , Jan. 2014, 4 pages. |
Sainath et al., "Auto-encoder bottleneck features using deep belief networks," in IEEE International Conference on Acoustics, Speech, and Signal Processing (ICASSP), pp. 4153-4156, Mar. 2012. |
Sainath et al., "Convolutional, long short-term memory, fully connected deep neural networks," in IEEE International Conference on Acoustics, Speech, and Signal Processing (ICASSP), pp. 4580-4584, Apr. 2015. |
Sainath et al., "Deep Convolutional Neural Networks for LVCSR," Acoustics, Speech and Signal Processing (ICASSP), 2013 IEEE International Conference on, pp. 8614-8618, Dec. 2013. |
Sainath. "Towards End-to-End Speech Recognition Using Deep Neural Networks," Powerpoint presentation, Deep Learning Workshop, ICML, Jul. 10, 2015, 51 slides. |
Sak et al., "Fast and accurate recurrent neural network acoustic models for speech recognition," arXiv preprint arXiv:1507.06947, Jul. 2015, 5 pages. |
Sak et al., "Language model verbalization for automatic speech recognition," in Acoustics, Speech and Signal Processing (ICASSP), 2013 IEEE International Conference on, IEEE, pp. 8262-8266, May 2013. |
Sak et al., "Learning Acoustic Frame Labeling for Speech Recognition with Recurrent Neural Networks," 2015 IEEE International Conference on Acoustics, Speech and Signal Processing, Apr. 19, 2015, 5 pages. |
Sak et al., "Long Short-Term Memory Recurrent Neural Network Architectures for Large Scale Acoustic Modeling," Interspeech 2014, Sep. 2014, pp. 338-342. |
Sak et al., "Sequence discriminative distributed training of long short-term memory recurrent neural networks," in Interspeech, 2014, pp. 1209-1213. |
Saon et al., "The IBM 2015 English conversational telephone speech recognition system," arXiv preprint arXiv:1505.05899, May 2015, 5 pages. |
Schalkwyk et al., ""your word is my command": Google search by voice: A case study," in Advances in Speech Recognition, Springer, Aug. 2010, pp. 61-90. |
Schuster et al. "Bidirectional Recurrent Neural Networks," IEEE Transactions on Signal Processing, 45(11): 2673-2681, Nov. 1997, 9 pages. |
Schwarz et al. "Hierarchical Structures of Neural Networks for Phoneme Recognition," 2006 IEEE International Conference on Acoustics Speech and Signal Processing Proceedings, Toulouse, 2006, pp. 1-1. |
Senior et al., "Context dependent phone models for LSTM RNN acoustic modelling," in Acoustics, Speech and Signal Processing (ICASSP), 2015 IEEE International Conference on, pp. 4585-4589, Apr. 2015. |
Senior et al., "GMM-free DNN acoustic model training," in Acoustics, Speech and Signal Processing (ICASSP), 2014 IEEE International Conference on. IEEE, pp. 5602-5606, Apr. 2014. |
Sercu et al. "HPC Project: CTC loss for RNN speech recognition," May 2015, 8 pages. |
Shannon. "Optimizing expected word error rate via sampling for speech recognition," arXiv 1706.02776v1, Jun. 8, 2017, 5 pages. |
Siohan, "Training data selection based on context-dependent state matching," in ICASSP, 2014. |
Soltau et al. "Neural Speech recognizer: Acoustic-to-word LSTM model for large vocabulary speech recognition," arXiv 1610.09975v1, Oct. 31, 2016, 6 pages. |
Song et al., "End-to-End Deep Neural Network for Automatic Speech Recognition," Stanford University, CS224d: Deep Learning for Natural Language Processing, 2015 Report, pp. 1-8. |
Soong et al., "A Vector Quantization Approach to Speaker Recognition," 1985 IEEE International Conference on Acoustics, Speech, and Signal Processing, vol. 10, Apr. 1985, 387-390. |
Stafylakis et al., "Preliminary investigation of Boltzmann machine classifiers for speaker recognition," in Proc. Odyssey Speaker and Language Recognition Workshop, 2012, 8 pages. |
Stafylakis et al., "Text-dependent speaker recognition using PLDA with uncertainty propagation," in Proc. Interspeech, 2013, 5 pages. |
Sundermeyer et al., "LSTM Neural Networks for Language Modeling," 13th Annual Conference of the International Speech Communication Association, Interspeech 2012, Sep. 2012, pp. 194-197. |
Tomar et al., "Efficient manifold learning for speech recognition using locality sensitive hashing," Acoustics, Speech and Signal Processing (ICASSP), 2013 IEEE International Conference on. IEEE, 2013, pp. 6995-6999. |
Unknown Author, "Unsupervised Feature Learning and Deep Learning Tutorial: Convolutional Neural Network," Stanford University, publically available before Jun. 12, 2015 [retrieved on Sep. 8, 2015]. Retrieved from the Internet: URL<http://ufldl.stanford.edu/tutorial/supervised/ConvolutionalNeuralNetwork/>, 2 pages. |
Vanhoucke et al., "Improving the speed of neural networks on CPUs," Deep Learning and Unsupervised Feature Learning Workshop, NIPS 2011, pp. 1-8, 2011. |
Varadarajan et al., "Unsupervised Learning of Acoustic Sub-word Units," Proceedings of ACL-08: HLT, Short Papers (Companion Volume), pp. 165-168, 2008. |
Variani et al., "Deep neural networks for small footprint text-dependent speaker verification," in Acoustics, Speech and Signal Processing (ICASSP), 2014 IEEE International Conference on. IEEE, May 2014, pp. 4080-4084. |
Vasilakakis et al., "Speaker recognition by means of deep belief networks." (2013). (Published Oct. 2013; Presented on Oct. 14-15, 2013), 7 pages. |
Vesely et al. "Sequence-discriminative training of deep neural networks," in Interspeech, Aug. 2013, 5 pages. |
Wang and Lee, "Supervised Detection and Unsupervised Discovery of Pronunciation Error Patterns for Computer-Assisted Language Learning," Audio, Speech, and Language Processing, IEEE/ACM Transactions on, 23(3):564-579, Mar. 2015. |
White et al., "Unsupervised Pronunciation Validation," ICASSP '09 Proceedings of the 2009 IEEE International Conference on Acoustics, Speech and Signal Processing, pp. 4301-4304, 2009. |
Williams, Gethin, et al. "Speech/Music Discrimination Based on Posterior Probability Features," Submitted to Eurospeech '99, Budapest, 4 pages. |
Wollmer et al., "Probabilistic ASR Feature Extraction Applying Context-Sensitive Connectionist Temporal Classification Networks," Acoustics, Speech and Signal Processing (ICASSP), 2013 IEEE International Conference on, pp. 7125-7129, 2013. |
Yegnanarayana et al., "AANN: an alternative to GMM for pattern recognition," Neural Networks, 15(3):459-469, 2002. |
Young et al., "Tree-based state tying for high accuracy acoustic modelling," in Proc. ARPA Human Language Technology Workshop, pp. 307-312, Mar. 1994. |
Yu et al., "Exploiting Sparseness In Deep Neural Networks For Large Vocabulary Speech Recognition," in ICASSP 2012. IEEE SPS, Mar. 2012, pp. 4409-4412. |
Yu et al., "Unsupervised training and directed manual transcription for LVCSR," Speech Communication, vol. 52, No. 7-8, pp. 652-663, Jul. 2010. |
Zeiler et al., "On rectified linear units for speech processing," in 38th International Conference on Acoustics, Speech and Signal Processing (ICASSP), 2013. |
Zhang et al. "Towards end-to-end speech recognition with deep convolutional neural networks," arXiv preprint 1701.02720v1, Jan. 10, 2017, 5 pages. |
Zweig et al. "Advances in All-Neural Speech Recognition," arXiv 1609.05935v2, Jan. 25, 2017, 5 pages. |
Cited By (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11004443B2 (en) * | 2018-08-30 | 2021-05-11 | Tencent America LLC | Multistage curriculum training framework for acoustic-to-word speech recognition |
US20200090642A1 (en) * | 2018-09-13 | 2020-03-19 | Samsung Electronics Co., Ltd. | Method and apparatus with speech recognition |
US11189268B2 (en) * | 2019-06-11 | 2021-11-30 | Lg Electronics Inc. | Method and apparatus for selecting voice-enabled device and intelligent computing device for controlling the same |
US20210312905A1 (en) * | 2020-04-03 | 2021-10-07 | Microsoft Technology Licensing, Llc | Pre-Training With Alignments For Recurrent Neural Network Transducer Based End-To-End Speech Recognition |
US11657799B2 (en) * | 2020-04-03 | 2023-05-23 | Microsoft Technology Licensing, Llc | Pre-training with alignments for recurrent neural network transducer based end-to-end speech recognition |
US20210350794A1 (en) * | 2020-05-07 | 2021-11-11 | Google Llc | Emitting Word Timings with End-to-End Models |
US11580956B2 (en) * | 2020-05-07 | 2023-02-14 | Google Llc | Emitting word timings with end-to-end models |
US11450310B2 (en) * | 2020-08-10 | 2022-09-20 | Adobe Inc. | Spoken language understanding |
US20220093106A1 (en) * | 2020-09-24 | 2022-03-24 | Synaptics Incorporated | Generalized negative log-likelihood loss for speaker verification |
US11328733B2 (en) * | 2020-09-24 | 2022-05-10 | Synaptics Incorporated | Generalized negative log-likelihood loss for speaker verification |
US20230108574A1 (en) * | 2021-10-01 | 2023-04-06 | International Business Machines Corporation | Dynamic contraction and expansion of heuristic beam width based on predicted probabilities |
US11966708B2 (en) * | 2021-10-01 | 2024-04-23 | International Business Machines Corporation | Dynamic contraction and expansion of heuristic beam width based on predicted probabilities |
Also Published As
Publication number | Publication date |
---|---|
US20200365142A1 (en) | 2020-11-19 |
US20190057683A1 (en) | 2019-02-21 |
US20230410796A1 (en) | 2023-12-21 |
US11776531B2 (en) | 2023-10-03 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11776531B2 (en) | Encoder-decoder models for sequence to sequence mapping | |
US11900915B2 (en) | Multi-dialect and multilingual speech recognition | |
US20180174576A1 (en) | Acoustic-to-word neural network speech recognizer | |
US20200335093A1 (en) | Latency constraints for acoustic modeling | |
US11854534B1 (en) | Asynchronous optimization for sequence training of neural networks | |
US11646019B2 (en) | Minimum word error rate training for attention-based sequence-to-sequence models | |
US11335333B2 (en) | Speech recognition with sequence-to-sequence models | |
US11093813B2 (en) | Answer to question neural networks | |
US20210217408A1 (en) | Dialogue systems | |
US11210475B2 (en) | Enhanced attention mechanisms | |
US10431206B2 (en) | Multi-accent speech recognition | |
US11080589B2 (en) | Sequence processing using online attention | |
EP3948850B1 (en) | System and method for end-to-end speech recognition with triggered attention | |
CN109074517B (en) | Global normalized neural network | |
JP2020505650A (en) | Voice recognition system and voice recognition method | |
US20210183373A1 (en) | System and Method for Streaming end-to-end Speech Recognition with Asynchronous Decoders | |
US11521071B2 (en) | Utilizing deep recurrent neural networks with layer-wise attention for punctuation restoration | |
KR20220130565A (en) | Keyword detection method and apparatus thereof | |
KR102409873B1 (en) | Method and system for training speech recognition models using augmented consistency regularization | |
US20210049324A1 (en) | Apparatus, method, and program for utilizing language model | |
Li et al. | A joint multi-task learning framework for spoken language understanding | |
US20240161732A1 (en) | Multi-dialect and multilingual speech recognition |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
FEPP | Fee payment procedure |
Free format text: ENTITY STATUS SET TO UNDISCOUNTED (ORIGINAL EVENT CODE: BIG.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:SAK, HASIM;SHANNON, SEAN MATTHEW;SIGNING DATES FROM 20171129 TO 20171219;REEL/FRAME:044447/0054 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: FINAL REJECTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE AFTER FINAL ACTION FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
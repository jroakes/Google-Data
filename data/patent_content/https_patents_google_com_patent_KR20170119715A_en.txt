KR20170119715A - Optional reminders to allow you to complete interrupted tasks - Google Patents
Optional reminders to allow you to complete interrupted tasks Download PDFInfo
- Publication number
- KR20170119715A KR20170119715A KR1020177026921A KR20177026921A KR20170119715A KR 20170119715 A KR20170119715 A KR 20170119715A KR 1020177026921 A KR1020177026921 A KR 1020177026921A KR 20177026921 A KR20177026921 A KR 20177026921A KR 20170119715 A KR20170119715 A KR 20170119715A
- Authority
- KR
- South Korea
- Prior art keywords
- user
- application
- task
- reminder
- complete
- Prior art date
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/10—Office automation; Time management
- G06Q10/109—Time management, e.g. calendars, reminders, meetings or time accounting
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/24—Classification techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/46—Multiprogramming arrangements
- G06F9/461—Saving or restoring of program or task context
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/46—Multiprogramming arrangements
- G06F9/48—Program initiating; Program switching, e.g. by interrupt
- G06F9/4806—Task transfer initiation or dispatching
- G06F9/4843—Task transfer initiation or dispatching by program, e.g. task dispatcher, supervisor, operating system
- G06F9/485—Task life-cycle, e.g. stopping, restarting, resuming execution
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N20/00—Machine learning
-
- G06N99/005—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/06—Resources, workflows, human or project management; Enterprise or organisation planning; Enterprise or organisation modelling
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/06—Resources, workflows, human or project management; Enterprise or organisation planning; Enterprise or organisation modelling
- G06Q10/063—Operations research, analysis or management
- G06Q10/0631—Resource planning, allocation, distributing or scheduling for enterprises or organisations
- G06Q10/06311—Scheduling, planning or task assignment for a person or group
- G06Q10/063114—Status monitoring or status determination for a person or group
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/06—Resources, workflows, human or project management; Enterprise or organisation planning; Enterprise or organisation modelling
- G06Q10/063—Operations research, analysis or management
- G06Q10/0631—Resource planning, allocation, distributing or scheduling for enterprises or organisations
- G06Q10/06316—Sequencing of tasks or work
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/10—Office automation; Time management
Abstract
컴퓨팅 디바이스 상에서 실행되는 애플리케이션과의 사용자에 의한 상호작용을 표시하는 사용자 상호작용 데이터를 획득하는 것; 사용자 상호작용 데이터에 근거하여, 사용자가 컴퓨팅 디바이스 상에서 실행되는 애플리케이션으로 시작한 작업을 사용자가 완료하는데 실패했을 가능성을 결정하는 것; 그리고 이러한 가능성에 근거하여, 작업-완료 미리알림이 과거 미리알림 소비에 적어도 부분적으로 근거하여 선택되는 방식으로 사용자에게 선택적으로 제시되도록 하는 것을 수행하기 위한 방법들, 장치들, 시스템들, 및 컴퓨터-판독가능 매체들이 제공된다.Obtaining user interaction data indicative of user interaction with an application running on the computing device; Determining, based on the user interaction data, the likelihood that the user has failed to complete a task initiated by an application running on the computing device; And methods, apparatuses, systems, and computer-readable media for performing, on the basis of this possibility, a task-complete reminder being selectively presented to a user in a manner selected based at least in part on past reminder consumption. Readable media are provided.
Description
스마트폰(smart phones), 태블릿 컴퓨터(tablet computers), 및 착용가능 컴퓨팅 디바이스(earable computing devices)와 같은 모바일 컴퓨팅 디바이스(mobile computing devices)는 광범위한 작업(tasks)을 수행하기 위해 사용될 수 있다. 이러한 작업은, 이메일(emails) 및 텍스트 메시지(text messages)의 초안(draft)을 작성하는 것, 음성 및 화상 전화 호출(voice and video phone calls)를 하는 것, 작업 및 캘린더 입력(calendar entries)을 생성하는 것, 소셜 네트워크 상태(social network status)를 업데이트(updating)하는 것, 게임을 하는 것, 등을 포함할 수 있지만 이러한 것으로만 한정되는 것은 아니다. 하지만, 사용자의 작업은 작업-중간에 중단(interrupt)될 수 있고, 일부 사례(instance)들에서, 사용자는 다른 것을 하는데 집중하게 될 수 있는데, 이것은 결과적으로 이후 사용자로 하여금 해당 작업을 완료하는 것을 잊어버리게 할 수 있다. 예를 들어, 사용자가 캘린더 입력을 생성하는 동안 (예를 들어, 전화 호출에 의해) 사용자의 작업은 중단될 수 있고, 이에 따라, 예컨대, 캘린더 입력은 사건 제목 및 날짜는 갖지만 아마도 다른 필수적인 데이터 포인트(data point)들, 예를 들어, 위치 및 시작 시간과 같은 것은 갖지 못하게 된다. 또 하나의 다른 예로서, 사용자가 자신의 상태를 업데이트하기 위해 소셜 네트워킹 애플리케이션(social networking application)을 동작시키는 동안 작업이 중단된 경우, 사용자는 이후 다시 돌아와 자신의 상태 업데이트를 완료/제출하는 것을 잊어버릴 수 있다. 전형적으로 특히 모바일 컴퓨팅 디바이스들은, 전형적으로 복수의 애플리케이션들을 한번에 디스플레이하는 더 큰 스크린(screen)들을 갖는 컴퓨팅 디바이스들과는 반대로, (예를 들어, 하나의 애플리케이션으로부터 또 하나의 다른 애플리케이션으로의) 맥락(context)들 간의 전환(switching)을 상당히 극적으로 행하는 상대적으로 작은 소형 디스플레이들을 포함한다. 따라서, 모바일 컴퓨팅 디바이스 상에서의 애플리케이션들의 전환(예를 들어, 착신 전화 호출을 받기 위한 전환)은 결과적으로 사용자로 하여금 임의의 작업을 완료하는 것을 잊어버리게 할 가능성이 더 크다.Mobile computing devices, such as smart phones, tablet computers, and earable computing devices, can be used to perform a wide range of tasks. These tasks include creating drafts of emails and text messages, making voice and video phone calls, working and calendar entries. Updating the social network status, playing a game, and the like, but is not limited to this. However, the user's work may be interrupted in the middle of work, and in some instances, the user may be focused on doing something, which in turn may cause the user to later complete the task It can be forgotten. For example, a user's work may be interrupted while the user is creating a calendar entry (e.g., by a phone call), so that, for example, the calendar entry may have an event title and date, such as data points, e.g., location and start time. As another example, if a task is interrupted while the user is operating a social networking application to update his status, the user may come back later and forget to complete / submit his status update You can throw away. Typically, and in particular mobile computing devices, contrary to computing devices with larger screens, which typically display a plurality of applications at one time, the context (e.g., from one application to another application) Which are relatively small, which makes the switching between the display devices very dramatically. Thus, the switching of applications on the mobile computing device (e.g., switching to receive an incoming phone call) is more likely to result in the user forgetting to complete any task.
본 개시내용은 일반적으로, 사용자가 컴퓨팅 디바이스 상에서 실행되는 애플리케이션을 사용하여 임의의 작업을 수행하는 동안 작업을 중단했음을 시사(suggestive)할 수 있는 하나 이상의 사건(event)들을 식별하기 위해 컴퓨팅 디바이스 상에서 실행되는 애플리케이션과의 사용자에 의한 상호작용(interaction)을 표시하는 사용자 상호작용 데이터(user interaction data)를 분석하기 위한 기술적 특징들에 관한 것이다. 사용자가 작업을 완료하는데 실패했을 가능성(likelihood)이, 예를 들어, 사용자 상호작용 데이터 및/또는 과거 사용자 상호작용 데이터(historical user interaction data)에 근거하여 결정될 수 있다. 작업-완료 미리알림(task-completion reminder)이, 이러한 가능성에 근거하여, 예를 들어, 과거 소비 데이터(historical consumption data)에 근거하여 선택되는 방식으로, 사용자에게 선택적으로 출력될 수 있다.This disclosure is generally directed to a method and system for executing on a computing device to identify one or more events that may suggest that a user has interrupted a task while performing an operation using an application running on the computing device And to technical features for analyzing user interaction data indicating an interaction by a user with an application that is being executed. The likelihood that the user has failed to complete the task may be determined based on, for example, user interaction data and / or historical user interaction data. A task-completion reminder may be selectively output to the user in a manner that is selected based on this possibility, for example, based on historical consumption data.
사용자의 중단된 컴퓨터-관련 작업들을 식별하는 것, 그리고 사용자에게 이러한 작업들을 완료하도록 선택적으로 미리 알려주는 것은 다양한 기술적 이점들을 일으킬 수 있다. 작업-완료 미리알림들(혹은 "해야할 일(to do)" 목록(list)들)을 생성 및 유지하기 위해 상당량의 사용자 오버헤드(user overhead)를 요구하는 기존의 시스템들과는 대조적으로, 본 명세서에서 설명되는 기법들을 이용하는 시스템들은, 미완료 작업(incomplete task)들을 자동적으로 식별하는 방법 및 작업-완료 미리알림들을 사용자들에게 제시하는 방법을 시간 경과에 따라 "학습(learn)"할 수 있고, 이것은 사용자 오버헤드를 감소시키게 된다. 추가적으로 본 명세서에서 설명되는 기법들은 애플리케이션 경계(application boundaries)를 넘어 동작할 수 있고, 이것은 작업-완료 미리알림들을 애플리케이션별로 관리하기 위해 요구되었을 수 있는 전산 자원(computational resources)(예를 들어, 메모리, 프로세서 싸이클(processor cycles), 배터리 전력, 등)을 최소화시킨다. 추가적으로, 사용자가 이미-시작된-하지만 완료되지 않은 작업에 대해, 그 작업을 처음부터 다시 시작하는 것이 아니라, 미리알림에 응답하여 완료하는 경우, 메모리 및 컴퓨팅 싸이클과 같은 컴퓨팅 자원(computing resources)은 절약될 수 있는데, 왜냐하면 예를 들어, 사용자는 동일한 작업을 완료하기 위해 복수의 문서들(예컨대, 이메일들, 텍스트들)을 생성시키는 것을 피할 수 있기 때문이다. 더욱이, 사용자들에게 미완료 작업들을 완료하도록 미리 알려주는 것은 사용자들이 무심코 동일한 작업을 여러 번 완료할 가능성을 감소시킬 수 있고, 이것은 전산 자원 사용을 감소시킨다. 또한, 만약 애플리케이션이 완전히 셧다운(shut down)되기 전에(그리고 애플리케이션에 할당된 메모리가 해제(free)되기 전에) 사용자가 특정 애플리케이션으로 수행된 작업을 완료하도록 미리알림을 받는다면, 해당 애플리케이션이 휘발성 메모리에 여전히 로딩(loading)되어 있는 동안(예를 들어, 배경(background)에서 동작하는 동안) 그 애플리케이션을 다시 활성화시키는 것은 비휘발성 저장소로부터 해당 애플리케이션을 완전히 다시 로딩하는 것보다 더 적은 자원들을 사용할 수 있다.Identifying the user's interrupted computer-related tasks, and optionally reminding the user to complete these tasks, can cause a variety of technical advantages. In contrast to existing systems that require a significant amount of user overhead to create and maintain job-completion reminders (or "to do" lists) Systems using the techniques described may "learn" over time, how to automatically identify incomplete tasks and how to present job-completion reminders to users, Thereby reducing the overhead. In addition, the techniques described herein may operate across application boundaries, which may include computational resources (e.g., memory, memory, etc.) that may be required to manage job- Processor cycles, battery power, etc.). Additionally, computing resources such as memory and computing cycles are saved when a user completes an already-initiated but not completed task in response to a reminder, rather than resuming the operation from the beginning. For example, because the user can avoid creating multiple documents (e. G., E-mails, texts) to complete the same task. Moreover, predicting users to complete incomplete tasks can reduce the likelihood that users will unintentionally complete the same task multiple times, which reduces the use of computational resources. In addition, if the user is reminded to complete a task performed with a particular application before the application is completely shut down (and before the memory allocated to the application is freed) Reactivating the application while it is still being loaded (e.g., while operating in the background) may use fewer resources than completely reloading the application from the non-volatile store .
일부 구현예들에서, 컴퓨터로 구현되는 방법이 제공될 수 있으며, 이러한 방법은, 컴퓨팅 시스템에 의해, 컴퓨팅 디바이스 상에서 실행되는 애플리케이션과의 사용자에 의한 상호작용을 표시하는 사용자 상호작용 데이터를 획득하는 단계; 사용자 상호작용 데이터에 근거하여 컴퓨팅 시스템에 의해, 사용자가 컴퓨팅 디바이스 상에서 실행되는 애플리케이션으로 시작한 작업을 사용자가 완료하는데 실패했을 가능성을 결정하는 단계; 그리고 이러한 가능성에 적어도 부분적으로 근거하여 컴퓨팅 시스템에 의해, 선택적으로 작업-완료 미리알림이 사용자에게 제공되도록 하는 단계를 포함한다.In some implementations, a computer-implemented method may be provided, wherein the method comprises, by a computing system, obtaining user interaction data indicative of user interaction with an application executing on the computing device ; Determining, by a computing system based on user interaction data, the likelihood that the user has failed to complete a task initiated by an application running on a computing device; And optionally providing a task-completion reminder to the user, by the computing system, based at least in part on this possibility.
이러한 방법, 그리고 본 명세서에서 개시되는 기술의 다른 구현예들은 각각 다음의 특징들 중 하나 이상의 특징을 선택에 따라 포함할 수 있다.This method, and other implementations of the techniques disclosed herein, may optionally include one or more of the following features.
다양한 구현예들에서, 본 방법은 또한, 작업-완료 미리알림이 사용자에게 제시되는 방식을 과거 미리알림 소비(historical reminder consumption)에 적어도 부분적으로 근거하여 선택하는 것을 포함할 수 있다. 다양한 구현예들에서, 앞서의 가능성을 결정하는 단계는, 애플리케이션과 관련된 상태 기계(state machine)가 특정 상태에 도달했음을 결정하는 것을 포함할 수 있다. 다양한 구현예들에서, 사용자 상호작용 데이터는, 애플리케이션의 하나 이상의 스냅샷(snapshot)들을 포함할 수 있다. 다양한 구현예들에서, 앞서의 가능성을 결정하는 단계는, 애플리케이션과 관련된 과거 애플리케이션 상호작용 데이터에 근거하여 가능성을 결정하는 것을 포함할 수 있다. 다양한 구현예들에서, 앞서의 가능성을 결정하는 단계는, 기계 학습 분류기(machine learning classifier)를 사용하여 수행될 수 있다. 다양한 구현예들에서, 이러한 분류기는 미완료된 작업(incomplete task)들과 관련되는 것으로 알려진 애플리케이션과의 사용자 상호작용의 복수의 사례(instance)들에 관해 훈련될 수 있다.In various implementations, the method may also include selecting, based at least in part on historical reminder consumption, the manner in which the task-complete reminder is presented to the user. In various implementations, determining the foregoing possibilities may include determining that a state machine associated with the application has reached a particular state. In various implementations, the user interaction data may include one or more snapshots of the application. In various implementations, determining the above possibilities may include determining a likelihood based on past application interaction data associated with the application. In various implementations, determining the above possibilities may be performed using a machine learning classifier. In various implementations, this classifier may be trained on multiple instances of user interaction with applications known to be associated with incomplete tasks.
다양한 구현예들에서, 본 방법은 또한, 이러한 가능성의 정확도(accuracy)를 표시하는 사용자로부터의 피드백(feedback)에 근거하여 기계 학습 분류기를 수정(modifying)하는 것을 포함할 수 있다. 다양한 구현예들에서, 앞서의 가능성을 결정하는 단계는, 애플리케이션을 사용하여 사용자에 의해 작성(author)된 하나 이상의 문장 조각(sentence fragment)들을 식별하기 위해 사용자에 의해 애플리케이션에 입력된 텍스트(text)에 관해 자연 언어 프로세싱(natural language processing)을 수행하는 것을 포함할 수 있다. 다양한 구현예들에서, 본 방법은, 작업-완료 미리알림이 사용자에게 제시되는 방식을 기계 학습 분류기를 사용하여 선택하는 것을 포함할 수 있다. 다양한 구현예들에서, 기계 학습 분류기는 작업-완료 미리알림 소비(task-completion reminder consumption)의 복수의 사례들에 관해 훈련될 수 있다. 다양한 구현예들에서, 본 방법은 또한, 작업-완료 미리알림의 사용자에 의한 소비를 표시하는 피드백에 근거하여 기계 학습 분류기를 수정하는 것을 포함할 수 있다.In various implementations, the method may also include modifying the machine learning classifier based on feedback from the user indicating the accuracy of such a possibility. In various implementations, the step of determining the likelihood may include determining texts entered into the application by a user to identify one or more sentence fragments authored by the user using the application, For example, performing natural language processing on the subject. In various implementations, the method may include selecting, using a machine learning classifier, the manner in which the task-complete reminder is presented to the user. In various implementations, the machine learning classifier may be trained on multiple instances of task-completion reminder consumption. In various implementations, the method may also include modifying the machine learning classifier based on feedback indicating consumption by a user of a task-complete reminder.
다양한 구현예들에서, 애플리케이션은 제 1 애플리케이션일 수 있고, 앞서의 획득하는 단계 및 결정하는 단계의 동작들은 제 1 애플리케이션과는 별개의 애플리케이션인 제 2 애플리케이션에 의해 수행될 수 있다.In various implementations, the application may be a first application, and the operations of the preceding acquiring and determining steps may be performed by a second application that is an application separate from the first application.
다른 구현예들은 앞에서 설명된 방법들 중 하나 이상의 방법과 같은 그러한 방법을 수행하기 위해 프로세서에 의해 실행가능한 명령들을 저장하는 비-일시적 컴퓨터 판독가능 저장 매체를 포함할 수 있다. 또 하나의 다른 구현예는 메모리 및 하나 이상의 프로세서들을 포함하는 시스템을 포함할 수 있고, 여기서 하나 이상의 프로세서들은 메모리에 저장된 명령들을 실행하도록 동작가능하고, 명령들은 앞에서 설명된 방법들 중 하나 이상의 방법과 같은 그러한 방법을 단독으로 혹은 집합적으로 수행하는 하나 이상의 모듈(module)들 혹은 엔진(engine)들을 구현하기 위한 것이다.Other implementations may include a non-transitory computer readable storage medium that stores instructions executable by a processor to perform such a method as one or more of the methods described above. Yet another alternative embodiment may include a system comprising a memory and one or more processors, wherein the one or more processors are operable to execute instructions stored in a memory, the instructions comprising one or more of the methods described above And to implement one or more modules or engines that perform such a method singly or collectively.
앞서의 개념들과 그리고 본 명세서에서 더 상세히 설명되는 추가적인 개념들의 모든 조합들은 본 명세서에서 개시되는 주된 내용의 일부인 것으로서 고려됨을 이해해야 한다. 예를 들어, 본 개시내용의 끝부분에서 나타나는 청구항의 주된 내용의 모든 조합들은 본 명세서에서 개시되는 주된 내용의 일부인 것으로서 고려된다.It is to be understood that the foregoing concepts and all combinations of the additional concepts described in greater detail herein are considered to be part of the main content disclosed herein. For example, all combinations of the subject matter of the claims appearing at the end of this disclosure are considered to be part of the main content disclosed herein.
도 1은 다양한 구현예들에 따른, 완료 및/또는 미완료 작업들이 식별될 수 있고 그리고 작업-완료 미리알림들이 발생되어 사용자들에게 제공될 수 있는 예시적 환경을 도식적으로 나타낸 것이다.
도 2는 다양한 구현예들에 따른, 작업-완료 미리알림을 발생시켜 전송할지 여부를 결정하기 위해 사용자 상호작용 데이터가 어떻게 분석될 수 있는 지에 관한 하나의 예를 도시한다.
도 3은 다양한 구현예들에 따른, 작업이 미완료 상태로 남겨졌음을 결정하기 위해 분석될 수 있는 애플리케이션 인터페이스의 예시적 스냅샷을 도시한다.
도 4는 다양한 구현예들에 따른, 미완료 작업일 가능성을 결정하고 이에 관한 미리알림을 선택적으로 제공하는 예시적 방법을 도식적으로 나타낸 것이다.
도 5는 컴퓨터 시스템의 예시적 아키텍처를 도시적으로 나타낸 것이다.1 is a diagrammatic representation of an exemplary environment in which completed and / or incomplete tasks can be identified and task-completion reminders can be generated and provided to users, in accordance with various implementations.
FIG. 2 illustrates an example of how user interaction data can be analyzed to determine whether to generate and send a task-complete reminder, in accordance with various implementations.
Figure 3 illustrates an exemplary snapshot of an application interface that may be analyzed to determine that an operation has been left in an incomplete state, in accordance with various implementations.
4 is a diagrammatic representation of an exemplary method for determining the likelihood of an incomplete task and selectively providing reminders therefor, in accordance with various implementations.
Figure 5 is an illustration of an exemplary architecture of a computer system.
도 1은 클라이언트 디바이스(client device)(102) 및 지식 시스템(knowledge system)(104)을 포함하는 예시적 환경을 예시한다. 도 1에 도시된 환경과 같은 그러한 환경에서, 클라이언트 디바이스(102) 상에서 실행되는 하나 이상의 애플리케이션들과의 사용자 상호작용은, 사용자가 애플리케이션을 사용하여 임의의 작업을 수행하는 동안 작업을 중단했을 가능성, 사용자가 작업을 완료하는데 실패했을 가능성, 그리고/또는 미완료 작업을 완료하도록 하는 미리알림을 사용자에게 제공하는 방식을 결정하기 위해 분석될 수 있다.Figure 1 illustrates an exemplary environment including a
클라이언트 디바이스(102)는 로컬 영역 네트워크(Local Area Network, LAN) 혹은 와이드 영역 네트워크(Wide Area Network, WAN)(예컨대, 인터넷(Internet))과 같은 네트워크(미도시)를 통해 지식 시스템(104)에 통신가능하게 결합되는 컴퓨터일 수 있다. 클라이언트 디바이스(102)는 예를 들어, 데스크탑 컴퓨팅 디바이스(desktop computing device), 랩탑 컴퓨팅 디바이스(laptop computing device), 태블릿 컴퓨팅 디바이스(tablet computing device), 모바일 전화 컴퓨팅 디바이스(mobile phone computing device), 사용자의 차량의 컴퓨팅 디바이스(예를 들어, 차량-내 통신 시스템(in-vehicle communications system), 차량-내 오락 시스템( an in-vehicle entertainment system), 차량-내 경로안내 시스템(in-vehicle navigation system)), 또는 컴퓨팅 디바이스를 포함하는 사용자의 착용가능 장치(예를 들어, 컴퓨팅 디바이스를 구비한 사용자의 시계, 컴퓨팅 디바이스를 구비한 사용자의 안경)일 수 있다. 추가적인 그리고/또는 대안적인 클라이언트 디바이스들이 제공될 수 있다. 클라이언트 디바이스(102)는 다양한 작업들의 수행을 용이하게 하기 위해 하나 이상의 애플리케이션들(혹은 "앱(app)들")을 포함할 수 있다. 예를 들어, 클라이언트 디바이스(102)는 캘린더 애플리케이션(calendar application)(106), 이메일 애플리케이션(email application)(108), 텍스트 메시징 애플리케이션(text messaging application)(110), 전화 애플리케이션(telephone application)(112), 등을 실행시킬 수 있다.The
클라이언트 디바이스(102) 및 지식 시스템(104)은 각각 데이터 및 소프트웨어 애플리케이션들의 저장을 위한 메모리, 데이터에 액세스하고 애플리케이션들을 실행시키기 위한 하나 이상의 프로세서들, 그리고 네트워크를 통한 통신을 용이하게 하는 컴포넌트들을 포함할 수 있다. 일부 구현예들에서, 클라이언트 디바이스(102) 및/또는 지식 시스템(104)에 의해 수행되는 동작들은 복수의 컴퓨터 시스템들에 걸쳐 분산될 수 있다. 지식 시스템(104)은 예를 들어, 네트워크(미도시)를 통해 서로 통신가능하게 결합되는 (하나 이상의 위치들에 있는) 하나 이상의 컴퓨터들 상에서 실행되는 컴퓨터 프로그램들로서 구현될 수 있다.The
다양한 구현예들에서, 클라이언트 디바이스(102)는 클라이언트 디바이스(102) 상에서 실행되는 하나 이상의 애플리케이션들(예를 들어, 106 내지 112)을 사용하여 (사용자에 의해 시작된) 미완료(가능하게는-중단된) 작업들의 식별을 용이하게 하도록 구성된 하나 이상의 애플리케이션들을 실행시킬 수 있다. 예를 들어, 도 1에서, 클라이언트 디바이스(102)는 작업중단 식별 엔진(interruption identification engine)(114) 및 사용자 활동 모니터링 엔진(user activity monitoring engine)(116)을 동작시킨다. 다양한 구현예들에서, 이러한 애플리케이션들은 애플리케이션들(106 내지 112)과는 별개로 존재할 수 있고, 그리고/또는 애플리케이션들(106 내지 112)과는 분리되어 동작할 수 있다. 다른 구현예들에서, 엔진들(1114 및 116) 중 하나 이상은 생략될 수 있고, 단일 엔진으로 결합될 수 있고, 그리고/또는 다른 곳에서(예컨대, 지식 시스템(104) 상에서) 동작될 수 있다.In various implementations, the
다양한 구현예들에서, 작업중단 식별 엔진(114)은 클라이언트 디바이스(102)와의 사용자 상호작용에 근거하여, 사용자가 클라이언트 디바이스(102) 상에서 실행되는 하나 이상의 애플리케이션들(예를 들어, 106 내지 112)과 관련된 작업을 수행하는 동안 작업을 중단했음을 시사하는 사건의 발생을 식별하도록 구성될 수 있다. 작업중단 식별 엔진(114)은 과거 데이터(historical data) 및/또는 사용자 선호도(user preference)들과 같은 다양한 데이터에 근거하여 사용자-중단유발 사건(user-interrupting event)들을 식별할 수 있다. 예를 들어, 만약 일반적인 사용자들(혹은 특정된 하나의 사용자)이 제 1 애플리케이션(예를 들어, 이메일 애플리케이션(108))으로부터 제 2 애플리케이션(예를 들어, 전화 애플리케이션(112))으로 전이(transitioning)한 후 곧 바로 제 1 애플리케이션을 차후 다시방문하는 경향이 있다면, 이것은 제 1 애플리케이션을 동작시킨 사용자들이 제 2 애플리케이션에 의해 종종 작업을 중단함을 시사할 수 있다. 일부 구현예들에서, 작업중단 식별 엔진(114)은 사용자가 임의의 작업을 수행하는 동안 작업을 중단했음을 시사하는 사건의 발생을 식별하기 위해, 알려진 사용자 작업중단의 사례들에 관해 훈련되는 하나 이상의 기계 학습 분류기들을 이용할 수 있다.In various implementations, the outage identification engine 114 may be configured to allow one or more applications (e.g., 106 to 112) to run on the
다양한 타입 사건들이 사용자가 임의의 작업을 수행하는 동안 작업을 중단했음을 시사할 수 있다. 앞에서 언급된 바와 같이, 이러한 사건의 한 가지 타입은 클라이언트 디바이스(102) 상의 애플리케이션들 간의 전이(transition)이다. 예를 들어, 임의의 텍스트의 초안을 작성하기 위해 텍스트 메시징 애플리케이션(110)을 동작시키는 사용자는 전화 호출(phone call)을 수신할 수 있다. 사용자는 텍스트 메시지를 완료함이 없이 전화 호출에 참여하기 위해 텍스트 메시징 애플리케이션(110)으로부터 전화 애플리케이션(122)으로 전환할 수 있다. 사용자 작업중단을 시사할 수 있는 또 하나의 다른 타입의 사건은 애플리케이션과의 사용자 상호작용 없이 적어도 임의의 미리결정된 시간 간격(time interval)의 경과이다. 예를 들어, 사용자는 캘린더 입력을 생성하는 과정에 있을 수 있고, 하지만 그 입력을 저장하기 전에 예를 들어, 지나가는 누군가에게 말하기 위해 몇 분 동안 멈출 수 있다. 사용자 작업중단을 시사할 수 있는 또 다른 타입의 사건은 클라이언트 디바이스(102)의 대기 상태(standby state)로의 전이이다. 이것은 예를 들어, 사용자가 임의의 미리결정된 시간 간격 동안 클라이언트 디바이스(102)의 임의의 입력을 동작시키는데 실패한 경우(이것은 클라이언트 디바이스(102)로 하여금 전력 절약을 위해 자동으로 대기 모드로 전이하도록 함) 일어날 수 있고, 또는 (예를 들어, 영화관 내의 조명이 어두워 질 때, 혹은 이륙(takeoff) 전에) 사용자가 의도적으로 클라이언트 디바이스(102)를 대기 모드로 전이시킴으로써 일어날 수 있다. 또 다른 타입의 사건은 예를 들어, 사용자가 자신을 자신의 "홈(home)" 스크린으로 이동시키는 소프트 키(soft key)를 클릭(clicking)하는 것이다.Various types of events may indicate that the user has stopped working while performing any task. As noted above, one type of such event is the transition between applications on the
사용자 활동 모니터링 엔진(116)은 하나 이상의 애플리케이션들(예를 들어, 106 내지 112)과의 사용자 상호작용을 표시하는 데이터를 수집하도록 구성될 수 있다. 다양한 구현예들에서, 클라이언트 디바이스(102)의 사용자는, 이러한 모니터링에 참여할 수 있는데(혹은 이러한 모니터링으로부터 탈퇴할 수 있는데), 예를 들어, 애플리케이션별로 참여(혹은 탈퇴)할 수 있고, 특정 시간 간격들 동안(예를 들어, 업무 시간 동안) 참여(혹은 탈퇴)할 수 있고, 네트워크 통신 상태에 있을 때(예를 들어, 셀룰러(cellular) 혹은 와이-파이(Wi-Fi) 신호가 이용가능할 때) 참여(혹은 탈퇴)할 수 있는 등등이다. 다양한 구현예들에서, 사용자는 사용자 활동 모니터링 엔진(116)에 의해 수행되는 모니터링에 관한 다양한 파라미터(parameter)들을 조정할 수 있다. 예를 들어, 사용자는 지식 시스템(104)에 궁극적으로 전달되는 개인적 정보 그리고 본 명세서에서 설명되는 다양한 기법들에서 사용되는 개인적 정보를 검열(censor), 암호화(encrypt), 혹은 그렇지 않으면 스크램블(scramble)하도록 사용자 활동 모니터링 엔진(116)을 구성할 수 있다. 추가적으로, 다양한 구현예들에서, 지식 시스템(104)과 클라이언트 디바이스(102) 간에 전달되는 데이터는, 특히 이러한 데이터가 개인적 정보 혹은 그렇지 않으면 사생활 정보를 포함할 수 있는 경우, 암호화될 수 있고, 스크램블될 수 있고, 검열될 수 있고, 기타 등등일 수 있다. 더욱이, 다양한 구현예들에서, 본 명세서에서 설명되는 임의의 컴포넌트들(이들은 클라이언트 디바이스(102) 상에 혹은 지식 시스템(104) 상에 있을 수 있음)에 의해 수행되는 임의의 학습은, 사용자 콘텐츠(user content)를 모니터링하는 것에 기반을 두는 것과는 반대로, 사용자 활동(user activity)(예를 들어, 애플리케이션들을 전환시키는 것, 대기 상태로 전이시키는 것, 특정 시간 간격 동안 유휴(idle) 상태로 유지시키는 것, 등)을 모니터링하는 것에 기반을 둘 수 있다.The user activity monitoring engine 116 may be configured to collect data indicative of user interaction with one or more applications (e.g., 106-112). In various implementations, a user of the
일부 구현예들에서, 사용자 활동 모니터링 엔진(116)에 의해 수집된 데이터는 일반적으로 애플리케이션 혹은 클라이언트 디바이스(102)의 상태들 그리고/또는 애플리케이션과의 사용자 상호작용의 하나 이상의 스냅샷들의 형태로 나타날 수 있다. 예를 들어, 일부 구현예들에서, 사용자 활동 모니터링 엔진(116)은 애플리케이션과의 사용자 상호작용을 보여주는 하나 이상의 스냅샷들을 획득할 수 있다. 다른 구현예들에서, 사용자 활동 모니터링 엔진(116)은 애플리케이션의 상태의 하나 이상의 스냅샷들을 획득하기 위해 애플리케이션 프로그래밍 인터페이스(Application Programming Interface)("API")와 인터페이싱(interfacing)할 수 있다. 일부 구현예들에서, 사용자 활동 모니터링 엔진(116)은 애플리케이션과의 사용자 상호작용에 대한 정보를 획득하기 위해 접근성 API(accessibility API)(예를 들어, 시각장애인을 위한 스크린 판독기(screen readers))와 인터페이싱할 수 있다.In some implementations, the data collected by the user activity monitoring engine 116 may generally appear in the form of one or more snapshots of the state of the application or
사용자 활동 모니터링 엔진(116)은 사용자 상호작용 데이터를 연속적으로 수집할 수 있거나, 혹은 다양한 자극에 응답하여 수집할 수 있다. 예를 들어, 도 1에 도시된 구현예에서, 사용자 활동 모니터링 엔진(116)은, 사용자가 작업을 중단한 것 같다는 작업중단 식별 엔진(114)으로부터의 신호에 응답하여, 애플리케이션과의 사용자 상호작용을 표시하는 하나 이상의 스냅샷들을 획득할 수 있다. 다른 구현예들에서, 사용자 활동 모니터링 엔진(116)은 사용자 상호작용 데이터를 연속적으로 수집할 수 있다. 일부 이러한 구현예들에서, 사용자 활동 모니터링 엔진(116)은 사용자 상호작용 데이터의 타임라인(timeline) 상에 최근 사용자 상호작용 데이터의 "슬라이딩 윈도우(sliding window)"를 유지시킬 수 있다. 슬라이딩 윈도우가 진행함에 따라 슬라이딩 윈도우의 바깥쪽에서 일어나는(즉, 전에 일어나는) 사용자 상호작용 데이터는 폐기(discard)될 수 있다. 일부 구현예들에서, 최근 사용자 상호작용 데이터의 슬라이딩 윈도우는 최근 사용자 상호작용 데이터를 저장하는데 할당된 메모리의 양에 근거하여 그 크기가 조정될 수 있다. 다른 구현예들에서, 최근 사용자 상호작용 데이터의 슬라이딩 윈도우는 사용자 상호작용 데이터의 미리결정된 시간 간격의 분량(worth)(예를 들어, 2분)을 유지하도록 그 크기가 조정될 수 있다.The user activity monitoring engine 116 may continuously collect user interaction data or may collect in response to various stimuli. 1, the user activity monitoring engine 116 is responsive to a signal from the operation interruption identification engine 114 that the user is likely to have interrupted the operation, Lt; RTI ID = 0.0 > snapshots < / RTI > In other implementations, the user activity monitoring engine 116 may continuously collect user interaction data. In some such implementations, the user activity monitoring engine 116 may maintain a "sliding window" of recent user interaction data on the timeline of the user interaction data. As the sliding window progresses, user interaction data that occurs outside of the sliding window (i.e., occurs before) can be discarded. In some implementations, the sliding window of recent user interaction data may be resized based on the amount of memory allocated to store recent user interaction data. In other implementations, the sliding window of recent user interaction data may be resized to maintain a predetermined (e.g., two minute) time interval of user interaction data.
사용자 활동 모니터링 엔진(116)은 사용자 상호작용 데이터를 작업중단 식별 엔진(114)과 같은 그리고/또는 지식 시스템(104)의 하나 이상의 컴포넌트들과 같은 그러한 하나 이상의 다른 컴포넌트들에게 제공할 수 있거나, 혹은 그렇지 않으면 사용자 상호작용 데이터가 이러한 컴포넌트들에게 이용가능하게 할 수 있다. 일부 구현예들에서, 사용자 활동 모니터링 엔진(116)은, 작업중단이 일어난 것 같은 그러한 중단이 검출되었다는 작업중단 식별 엔진(114)으로부터의 신호의 수신(예를 들어, 사용자 활동 모니터링 엔진(116)에 의한 수신)에 응답하여, 사용자 상호작용 데이터를 지식 시스템(104)에게 제공할 수 있다.The user activity monitoring engine 116 may provide the user interaction data to one or more other components, such as the one or more components of the knowledge system 104, such as the pause identification engine 114 and / Otherwise, user interaction data may be made available to these components. In some implementations, the user activity monitoring engine 116 may be configured to receive signals from the work breakdown identification engine 114 (e.g., the user activity monitoring engine 116) The user interaction data may be provided to the knowledge system 104. In response,
다양한 구현예들에서, 작업중단 식별 엔진(114) 및 사용자 활동 모니터링 엔진(116) 중 하나 이상은 애플리케이션별로 자신들의 작업을 수행할 수 있다. 일부 이와 같은 구현예들에서, 이러한 컴포넌트들은 사용자가 명시적으로 승인(permission)을 제공하지 않는 한 특정 애플리케이션과 관련하여 동작하지 않을 수 있다. 예를 들어, 사용자가 자신의 스마트폰에 새로운 애플리케이션을 설치하고 있다고 가정한다. 이러한 설치 동안, 사용자는 해당 애플리케이션에게 다양한 컴포넌트들(예를 들어, 사용자의 위치, 사용자의 캘린더, 등)에 대한 액세스 권한을 제공하기 위한 사용자의 승인을 요구하는 인터페이스를 제시받을 수 있다. 다양한 구현예들에서, 이러한 인터페이스는 또한, 설치되고 있는 애플리케이션에 대한 액세스 권한을 작업중단 식별 엔진(114), 사용자 활동 모니터링 엔진(116), 및/또는 지식 시스템(104)의 하나 이상의 컴포넌트들에게 제공하기 위한 사용자의 승인을 요구할 수 있다. 애플리케이션에 대한 액세스는, 해당 애플리케이션의 스냅샷들(예를 들어, 스크린 샷들(screen shots))을 획득하는 능력, 그리고/또는 해당 애플리케이션의 API와 인터페이싱하는 능력을 포함할 수 있지만, 이러한 것으로만 한정되는 것은 아니다.In various implementations, one or more of the task abort identification engine 114 and the user activity monitoring engine 116 may perform their tasks on an application-by-application basis. In some such implementations, these components may not work with respect to a particular application unless the user explicitly provides the permission. For example, assume that a user is installing a new application on his or her smartphone. During this installation, the user may be presented with an interface requesting the user's approval to provide access to various components (e.g., user's location, user's calendar, etc.) to the application. In various implementations, such an interface may also provide access rights to the application being installed to one or more components of the downtime identification engine 114, the user activity monitoring engine 116, and / or the knowledge system 104 And may require the user's approval to provide it. Access to an application may include, but is not limited to, the ability to obtain snapshots of the application (e.g., screen shots) and / or the ability of the application to interface with the API It is not.
일부 구현예들의 경우, (일부 사례들에서 통합 클라이언트 애플리케이션(integral client application)으로서 함께 패키징(packaging)될 수 있는) 작업중단 식별 엔진(114) 및 사용자 활동 모니터링 엔진(116) 중 하나 이상은 미완료 작업들의 "해야할 일" 목록들과 같은 다양한 사용자 인터페이스들을 제공할 수 있고, 이러한 인터페이스들은 일부 구현예들에서 사용자의 홈 스크린(home screen) 상에 제시될 수 있다. 일부 구현예들에서, 작업중단 식별 엔진(114) 및/또는 사용자 활동 모니터링 엔진(116)은 클라이언트 디바이스(102)로 하여금 사용자가 자신은 임의의 작업을 완료하는데 실패했다는 것을 명시적으로 표시하도록 동작할 수 있게 하는 그러한 사용자 인터페이스 컴포넌트를 제공하게 할 수 있다. 예를 들어, 하나의 컴포넌트 혹은 양쪽 컴포넌트들은 사용자의 스마트폰 상에 하나 이상의 소프트 키들을 구성할 수 있고(또는 터치 스크린 상에 그래픽 사용자 인터페이스 컴포넌트를 생성할 수 있고), 이에 따라 이들이 동작되는 경우 작업이 미완료 상태라는 지정(designation)이 발생 및 저장되게 된다. 이러한 방식으로 미완료 작업들을 명시적으로 지정할 수 있게 하는 것은 예를 들어, 작업이 미완료 상태로 남아 있게 될 가능성들을 결정하도록 설계된 (아래에서 설명되는) 하나 이상의 기계 학습 분류기들의 훈련을 용이하게 할 수 있다. 일부 구현예들에서는, 음성 명령들(voice commands), 모바일 전화기를 사용하여 행해지는 사용자 제스처들(user gestures), 등과 같은 다른 사용자 입력들이 임의의 작업을 미완료 작업으로서 명시적으로 지정하기 위해 사용될 수 있다.In some implementations, one or more of the task abort identification engine 114 (which may be packaged together as an integral client application in some cases) and the user activity monitoring engine 116 may perform an incomplete task Such as "to do" lists, which may in some implementations be presented on the user ' s home screen. In some implementations, the operation interruption identification engine 114 and / or the user activity monitoring engine 116 may cause the
지식 시스템(104)을 참조하면, 사용자 상호작용 데이터 프로세싱 엔진(user interaction data processing engine)(124)은, 클라이언트 디바이스(102)로부터 수신되는 사용자 상호작용 데이터에 관한 다양한 타입의 프로세싱을 수행하여 그 데이터를 다운스트림 컴포넌트들(downstream components)(예컨대, 자연 언어 프로세싱 엔진(natural language processing engine)(126), 완료 작업 예측 엔진(complete task prediction engine)(128), 그리고/또는 작업 미리알림 엔진(task reminder engine)(132))에 의한 분석을 위해 준비하도록 구성될 수 있다. 사용자 상호작용 데이터가 임의의 애플리케이션(예를 들어, 106 내지 112)과의 사용자의 상호작용의 하나 이상의 스크린샷(screenshot)들을 포함하는 구현예들에서, 사용자 상호작용 데이터 프로세싱 엔진(124)은 그 하나 이상의 스크린샷들로부터 텍스트를 추출하기 위해 광학 문자 인식(Optical Character Recognition)("OCR")을 수행할 수 있다. 사용자 상호작용 데이터가 다른 타입의 데이터(예컨대, 애플리케이션의 API를 통해, 예를 들어, 사용자 활동 모니터링 엔진(116)에 의해 획득되는 애플리케이션의 상태의 스냅샷들과 같은 것)를 포함하는 구현예들에서, 사용자 상호작용 데이터 프로세싱 엔진(124)은 다른 타입의 프로세싱을 수행하여 그 사용자 상호작용 데이터를 다운스트림 컴포넌트들에 의한 분석을 위해 준비할 수 있다.Referring to the knowledge system 104, a user interaction
자연 언어 프로세싱 엔진(126)은, 미완료 작업들을 표시하는 텍스트(예를 들어, 사용자에 의해 작성된 문장 조각들(sentence fragments)/미완성 문장들(incomplete sentences))를 식별하기 위해, 예를 들어, 사용자 상호작용 데이터 프로세싱 엔진(124)에 의해 추출된 텍스트에 관해 자연 언어 프로세싱을 수행하도록 구성될 수 있다. 자연 언어 프로세싱 엔진(126)은 텍스트를 추출하기 위해 그리고/또는 사용자 상호작용 데이터에 주석을 달기(annotate)위해 다양한 기법들을 이용할 수 있는데, 이러한 기법들은 동일-지시관계 해결(co-reference resolution), 문법(grammars), 정규 표현(regular expressions), 결함 완성(objection completion), 텍스트 재작성(textual rewrites), 휴리스틱(heuristics), 기계 학습(machine learning), 등을 포함하지만, 이러한 것으로만 한정되는 것은 아니다.The natural language processing engine 126 may use the natural language processing engine 126 to identify, for example, a user (e.g., a user), to identify incomplete tasks (e.g., user generated sentence fragments / incomplete sentences) May be configured to perform natural language processing on the text extracted by the interaction data processing engine (124). The natural language processing engine 126 may use various techniques for extracting text and / or annotating user interaction data, such as co-reference resolution, But are not limited to, grammars, regular expressions, objection completion, textual rewrites, heuristics, machine learning, and the like. no.
완료 작업 예측 엔진(128)은, 예를 들어, 과거 애플리케이션 상호작용 데이터를 저장할 수 있는 인덱스(index)(130)와 통신가능하게 결합될 수 있다. 이러한 과거 애플리케이션 상호작용 데이터에 근거하여, 완료 작업 예측 엔진(128)은, 사용자 활동 모니터링 엔진(116)에 의해 수집된, 그리고/또는 사용자 상호작용 데이터 프로세싱 엔진(124)에 의해 프로세싱된, 그리고/또는 자연 언어 프로세싱 엔진(126)에 의해 주석이 달리는 사용자 상호작용 데이터를 검사(examine)하도록 구성될 수 있다. 그 다음에, 완료 작업 예측 엔진(128)은 사용자가 클라이언트 디바이스(102) 상에서 실행되는 애플리케이션으로 시작한 작업을 사용자가 완료하는데 실패했을(혹은 완료했을) 가능성을 결정할 수 있다.The completion
완료 작업 예측 엔진(128)은 미완료 작업일 가능성을 예측하기 위해 다양한 기법들을 이용할 수 있다. 예를 들어, 일부 구현예들에서, 완료 작업 예측 엔진(128)은 하나 이상의 기계 학습 분류기들을 이용할 수 있다. 이러한 분류기들은 예를 들어, 미완료 작업들과 관련된 것으로 알려진 임의의 애플리케이션과의 사용자 상호작용의 복수의 사례들에 관해 훈련될 수 있다. 예를 들어, 이메일 애플리케이션과 관련된 과거 애플리케이션 상호작용 데이터는, 일련의 알파뉴메릭 문자(alphanumeric character)들의 사용자 입력에 후속하여 어떤 중간 사건(예를 들어, 애플리케이션들의 전환, 대기 상태가 되는 것, 등)이 "보내기(send)" 명령의 활성화 없이 일어난다면, 그 사용자 입력은 미완료 작업을 표시하는 것이라고 기계 학습 분류기를 훈련시키는데 사용될 수 있다.The completion
완료 작업 예측 엔진(128)은 완료/미완료 작업일 가능성을 결정하기 위해 다양한 방식으로 사용자 상호작용 데이터를 검사할 수 있다. 일부 구현예들에서, 완료 작업 예측 엔진(128)은 특정 애플리케이션과 관련된 상태 기계가 특정 상태에 도달했음을 결정할 수 있다. 예를 들어, 전화 애플리케이션(112)에서, 착신 호출(incoming call)이 무시되고 있으며, 그 착신 호출은 (예를 들어, 호출 이력(call history), 조직 관계(institutional relationship), 개인 관계(personal relationship) 등에 근거하여) 특정 사용자에게 중요한 것으로 고려되는 누군가로부터의 호출이라고 가정한다. 전화 애플리케이션(112)의 이러한 특정 상태에 근거하여, 완료 작업 예측 엔진(128)은 처리되지 않은 미완료 작업(놓쳐 버린 호출자에게 다시 전화 거는 거)이 존재할 가능성이 특히 존재한다고 결정할 수 있다.The completion
일부 구현예들에서, 완료 작업 예측 엔진(128)은 완료/미완료 작업일 가능성을 결정하기 위해 임의의 애플리케이션의 하나 이상의 스냅샷들의 콘텐츠들을 검사할 수 있다. 예를 들어, 사용자가 소셜 네트워킹 애플리케이션에서 상태 업데이트를 작성하기 시작함, 하지만 그 작성을 중단함, 그리고 임의의 문장을 완성하는데 실패함이라고 가정한다. 사용자 상호작용 데이터 프로세싱 엔진(124)은 소셜 네트워킹 애플리케이션의 하나 이상의 스크린샷들로부터 그 미완성 문장의 텍스트를 추출할 수 있다. 자연 언어 프로세싱 엔진(126)은 문장 조각을 식별할 수 있다(그리고 일부 구현예들에서는, 그 문장 조각에 주석을 달 수 있음). 식별된/주석이 달린 문장 조각에 근거하여(가능하게는 사용자가 "제출(submit)"을 누르는 것에 실패한 것과 결합되어), 완료 작업 예측 엔진(128)은 사용자가 자신의 소셜 네트워킹 상태를 업데이트하는 작업을 완료하는데 실패했을 가능성이 상대적으로 높다고 결정할 수 있다.In some implementations, the completion
완료 작업 예측 엔진(128)이 기계 분류기들을 이용하는 일부 구현예들에서, 데이터를 훈련하는 것은 작업들이 미완료 작업들인지 여부에 관한 명시적 및/또는 암시적 사용자 표시들에 기반을 둘 수 있다. 예를 들어, 앞에서 언급된 바와 같이, 작업중단 식별 엔진(114) 및/또는 사용자 활동 모니터링 엔진(116)은 예를 들어, 알려진 작업 미완료의 사례를 생성하기 위해, 사용자가 일하고 있는 작업을 중단하고 있고 따라서 해당 작업은 미완료 상태로 남게 될 것임을 명시적으로 표시하도록 사용자에 의해 동작가능한 임의의 인터페이스를 제공할 수 있다. 추가적으로 혹은 대안적으로, 작업 미완료를 시사할 수 있는 사건들에 의해 사용자가 작업을 중단하는 하나 이상의 사례들은 작업 미완료인 것으로 추론되는 사례를 생성할 수 있다. 일부 구현예들에서, 작업 미완료인 것으로 추론되는 사례들은 명시적 사례들보다 더 적은 가중치(weight)를 할당받을 수 있다.In some implementations where the completed
일부 구현예들에서, 기계 학습 분류기들은 훈련 예제(training example)들에 근거하여 훈련될 수 있는데, 여기서 훈련 예제들 각각은, 임의의 애플리케이션에서의 작업 미완료를 표시하는 출력 파라미터를 갖고, 아울러 작업 미완료가 표시된 때 혹은 작업 미완료가 표시되기 전 애플리케이션의 하나 이상의 파라미터들 및/또는 컴퓨팅 디바이스의 다른 측면(aspect)과 관련된 하나 이상의 입력 파라미터들의 벡터(vector)를 갖는다. 예를 들어, 임의의 애플리케이션이 x개의 상이한 상태들을 갖는다고 가정한다. 훈련 예제를 위한 하나의 입력 파라미터는 애플리케이션의 x개의 가능한 상태들 중 (작업 미완료가 표시된 때 혹은 추론된 때의) 현재 상태일 수 있다. 또 하나의 다른 입력 파라미터는 사용자가 작업을 어떻게 중단했는 지(예를 들어, 애플리케이션들을 전환했는지, 전화 호출을 수신했는지, 묵음 모드(silent mode)로 전이했는지, 등)일 수 있다. 또 하나의 다른 입력 파라미터는 애플리케이션에서의 특정 변수의 값(예를 들어, 임의의 텍스트 입력 필드(text entry field) 내의 텍스트, 임의의 선택된 필드의 선택된 값, 등)일 수 있다. (지정된 문장 조각과 같은) 하나 이상의 자연 언어 프로세싱 주석(natural language processing annotation)이 또 하나의 다른 입력 파라미터일 수 있다. 예를 들어, 자연 언어 프로세싱 주석은 애플리케이션의 하나 이상의 입력 필드들 내에 미완성 문장이 존재하는지 여부를 표시할 수 있다. 애플리케이션 및/또는 컴퓨팅 디바이스의 다른 상태와 관련된 추가적인 그리고/또는 대안적인 입력 파라미터들이 제공될 수 있다.In some implementations, the machine learning classifiers may be trained based on training examples, where each of the training examples has an output parameter indicating an incomplete task in any application, Or a vector of one or more input parameters associated with one or more parameters of the application and / or another aspect of the computing device before the job is marked incomplete. For example, it is assumed that any application has x different states. One input parameter for the training example may be the current state of the application's x possible states (when the task is incomplete or when inferred). Another input parameter may be how the user stopped the job (e.g., switched applications, received a phone call, transferred to silent mode, etc.). Another input parameter may be a value of a particular variable in the application (e.g., text in any text entry field, a selected value of any selected field, etc.). One or more natural language processing annotations (such as specified sentence fragments) may be another input parameter. For example, a natural language processing annotation may indicate whether an incomplete sentence exists in one or more input fields of the application. Additional and / or alternative input parameters associated with the application and / or other states of the computing device may be provided.
사용자가 특정 애플리케이션을 사용하여 임의의 작업을 수행하는 동안 작업을 중단함, 그리고 사용자가 예를 들어, 소프트 키 혹은 그래픽 사용자 인터페이스 아이콘(graphical user interface icon)을 사용하여 해당 작업을 완료하는데 실패했다고 사용자가 명시적으로 표시함을 가정한다. 완료 작업 예측 엔진(128)이 이러한 명시적 미완료 작업을 기계 학습 분류기를 위한 훈련 데이터로서 사용함(예를 들어, 입력 파라미터들의 벡터의 형태(<P1, P2, P3, P4>)로 사용함)을 가정한다. 동일한 애플리케이션의 후속 스냅샷들을 분석할 때, 작업 완료 예측 엔진(128)은 후속 스냅샷들과 관련된 벡터들의 얼마나 많은 파라미터들이 훈련 데이터에 대응하는지, 그리고/또는 이러한 파라미터들이 훈련 데이터에 얼마나 가깝게 대응하는지에 기반을 둔 임의의 가능성을 출력할 수 있다. 예를 들어, 애플리케이션의 제 1 후속 스냅샷이, 또 하나의 다른 스냅샷과 비교하여, 긍정적인 훈련 예제들에 더 가깝게 대응하는 입력 벡터를 포함하는 경우, 애플리케이션의 이러한 제 1 후속 스냅샷은 미완료 작업에 대응할 가능성이 더 높은 것으로 고려될 수 있다.The user interrupts the operation while performing a certain operation using the specific application, and the user fails to complete the operation using, for example, a soft key or graphical user interface icon Is explicitly indicated. The finished
완료 작업 예측 엔진(128)은, 사용자 피드백에 근거하여, 그리고/또는 미완료 작업 가능성 예측의 정확도를 표시하는 다른 데이터에 근거하여, 인덱스(130) 내에 저장된 과거 애플리케이션 상호작용 데이터를 업데이트하도록 구성될 수 있다. 예를 들어, 완료 작업 예측 엔진(128)에 의해 수행된 결정들에 근거하여 제공되는 작업 미리알림들을 사용자가 소비한 것 혹은 소비하지 않은 것은, 하나 이상의 기계 학습 분류기들을 수정하는데 사용될 수 있는 긍정적 피드백 혹은 부정적 피드백을 구성할 수 있다.The completion
작업 미리알림 엔진(132)은 과거 미리알림 소비 데이터를 저장하는 인덱스(134)와 통신가능하게 결합될 수 있다. 과거 미리알림 소비 데이터는 예를 들어, 다양한 애플리케이션들과 관련된 작업 미리알림들의 예전의 사용자 소비를 표시하는 데이터를 포함할 수 있다. 완료 작업 예측 엔진(128)에 의해 결정된 미완료 작업 가능성들에 근거하여, 작업 미리알림 엔진(132)은 이러한 과거 미리알림 소비 데이터에 적어도 부분적으로 근거하여 선택되는 방식으로 작업-완료 미리알림들을 사용자들에게 선택적으로 발생시키고 그리고/또는 제시하도록 구성될 수 있다.The
작업 미리알림 엔진(132)은 작업 미리알림들이 사용자들에게 어떻게 제시될 지를 선택하기 위해 다양한 기법들을 이용할 수 있다. 일부 구현예들에서, 작업 미리알림 엔진(132)은 하나 이상의 기계 학습 분류기들을 사용하여 작업-완료 미리알림이 사용자에게 제시되는 방식을 선택할 수 있다. 다양한 구현예들에서, 하나 이상의 기계 학습 분류기들은, 예를 들어, 인덱스(134) 내에 과거 미리알림 소비 데이터로서 저장된 작업-완료 미리알림 소비의 복수의 사례들에 관해 훈련될 수 있다.The
작업 미리알림 엔진(132)이 기계 학습 분류기들을 이용하는 일부 구현예들에서, 작업 완료 미리알림 소비의 사례들 각각은 입력 파라미터들의 벡터를 포함할 수 있다. 이러한 입력 파라미터들은 광범위하게 다양할 수 있으며, 작업 완료 미리알림이 어떻게 소비되었는지, 소비 이후 작업이 완료되는데 얼마나 오랜 시간이 걸렸는지, 완료 작업 예측 엔진(128)에 의해 출력되는 하나 이상의 가능성들, (예를 들어, 소프트 키 혹은 그래픽 사용자 인터페이스 아이콘을 사용하여) 사용자가 미리알림을 명시적을 좋아했는지 아니면 싫어했는지, 등을 포함할 수 있지만, 이러한 것으로만 한정되는 것은 아니다.In some implementations where the
다양한 구현예들에서, 작업 미리알림 엔진(132)과 관련된 기계 학습 분류기는 다양한 출력을 제공할 수 있다. 일부 구현예들에서, 이러한 기계 학습 분류기는 예를 들어, 작업 미리알림 엔진(132)에 의해 해싱(hasing)될 수 있는 임의의 값을 출력할 수 있고, 이후 그 해시(hash)는 작업을 완료하도록 사용자에게 미리알려주기 위한 복수의 가능한 방식들(예를 들어, 이메일, 텍스트, 스크린 통지, 등) 중 하나 이상의 방식에 매칭(matching)될 수 있다. 일부 구현예들에서, 기계 학습 분류기는 작업-완료 미리알림이 제시되는 정도인 임의 레벨의 특출성(prominence)과 (예를 들어, 작업 미리알림 엔진(132) 혹은 또 하나의 다른 컴포넌트에 의해) 관련될 수 있는 값을 출력할 수 있다. 완료 작업 예측 엔진(128)이, 제 1 작업이 미완료 상태로 남게 되었을 가능성은 상대적으로 높지만 제 2 작업이 미완료 상태로 남게 되었을 가능성은 상대적으로 낮음을 출력한다고 가정한다. 작업 미리알림 엔진(132)은 제 1 작업에 대한 작업-완료 미리알림을 제 2 작업에 대한 작업-완료 미리알림(예를 들어, 이메일)보다 더 높은 레벨의 특출성을 갖도록 제시할 수 있다(예를 들어, 청취가능한 그리고/또는 촉각적인 피드백과 결합된 스크린 통지를 제시할 수 있음).In various implementations, the machine learning classifier associated with
일부 구현예들에서, 작업-완료 미리알림이 제공되기 전 임의의 시간이 또한, 작업 미리알림 엔진(132) 및/또는 완료 작업 예측 엔진(128)과 관련된 하나 이상의 기계 학습 분류기들의 다양한 출력들에 근거하여 선택될 수 있다. 완료 작업 예측 엔진(128)이, 제 1 작업이 미완료 상태로 남게 되었을 가능성은 상대적으로 높지만 제 2 작업이 미완료 상태로 남게 되었을 가능성은 상대적으로 낮음을 출력한다고 가정한다. 작업 미리알림 엔진(132)은 제 1 작업에 대한 작업-완료 미리알림 제시를 제 2 작업에 대한 작업-완료 미리알림 제시(예를 들어, 몇 시간 이후 혹은 며칠 이후 제시하는 것)보다 더 급박하게 수행할 수 있다(예를 들어, 몇 분 이후 제시할 수 있음).In some implementations, any time before a task-complete reminder is provided may also be provided to the various outputs of one or more machine learning classifiers associated with the
일부 구현예들에서는, 별개의 기계 학습 분류기들이 애플리케이션(예를 들어, 106 내지 112)별로, 그리고/또는 사용자별로 훈련 및/또는 이용될 수 있다. 다양한 구현예들에서, 작업 미리알림 엔진(132)은 작업-완료 미리알림들이 사용자들에 의해 소비된 것을 표시하는 (예를 들어, 사용자들로부터의) 피드백에 근거하여 하나 이상의 기계 학습 분류기들을 수정할 수 있다. 예를 들어, 만약 사용자가 특정 애플리케이션에 관한 특정 작업을 완료하도록 사용자들에게 미리 알려주는 텍스트 메시지들은 일반적으로 무시하지만, 스크린 통지들에 대해서는 더 많은 반응을 보인다면, 작업 미리알림 엔진(132)은 전방으로 나오는 스크린 통지들을 선호할 수 있다.In some implementations, separate machine learning classifiers may be trained and / or utilized for each application (e.g., 106-112) and / or user. In various implementations, the
작업-완료 미리알림들은 다양한 형태들을 가질 수 있고, 작업-완료 미리알림의 형태는, 텍스트 메시지들, 스크린 통지들(예를 들어, 잠금 상태의 스크린 상에서의 스크린 통지들 그리고/또는 홈 스크린 상에서의 스크린 통지들), 팝-업 윈도우들(pop-up windows), 오디오 통지들(audio notifications)(예를 들어, 비프음(beeps), 울림(tones), 등), 촉각적 피드백(예를 들어, 진동(vibrations)), 이메일들, 음성메일들, 소셜 네트워킹 메시지들, 등을 포함하지만, 이러한 것으로만 한정되는 것은 아니다. 일부 구현예들에서, 미완료 작업이 있는 것으로 검출된 애플리케이션은, 예를 들어, 작업 미리알림 엔진(132)에 의해, 혹은 작업 미리알림 엔진(132)의 요청시 애플리케이션 자체에 의해, 일정 시간 이후 자동적으로 열려 사용자에게 작업을 완료하게 촉구하도록 스케줄링될 수 있다.Task-completion reminders may have various forms, and the form of the task-complete reminder may include text messages, screen notifications (e.g., screen notifications on a locked screen and / Screen notifications), pop-up windows, audio notifications (e.g., beeps, tones, etc.), tactile feedback (e.g., , Vibrations, emails, voice mails, social networking messages, and the like. In some implementations, an application detected as having an incomplete task may be automatically updated, for example, by the
다양한 컴포넌트들이 도 1에서 클라이언트 디바이스(102) 혹은 지식 시스템(104)의 일부인 것으로서 도시되고 있지만, 이러한 것으로만 한정되는 것으로 의도되지 않았다. 다양한 컴포넌트들이, 그 제시된 것과는 다르게 추가, 생략, 혹은 구현될 수 있다. 예를 들어, 도 1에서 지식 시스템(104)의 일부인 것으로서 도시된 하나 이상의 컴포넌트들, 예컨대, 사용자 상호작용 데이터 프로세싱 엔진(124), 자연 언어 프로세싱 엔진(126), 완료 작업 예측 엔진(128), 및/또는 작업 미리알림 엔진(132)은 클라이언트 디바이스(102) 상에서 구현될 수 있고, 그리고/또는 클라이언트 디바이스(102)와 지식 시스템(104) 양쪽 모두에서 구현될 수 있다. 마찬가지로, 도 1에서 클라이언트 디바이스(102) 상에서 구현되는 것으로서 도시된 컴포넌트들, 예컨대, 작업중단 식별 엔진(114) 및/또는 사용자 활동 모니터링 엔진(116)은 지식 시스템(104) 상에서 전체적으로 혹은 부분적으로 구현될 수 있다. 다양한 구현예들에서, 클라이언트 디바이스(102) 및/또는 지식 시스템(104)의 다양한 컴포넌트들(예컨대, 114, 116, 124, 126, 128, 및/또는 132 중 하나 이상의 것)은 소프트웨어를 사용하여, 혹은 하드웨어를 사용하여(예를 들어, 애플리케이션-특정 집적 회로(Application-Specific Integrated Circuit, 또는 "ASIC")), 혹은 소프트웨어와 하드웨어의 임의의 조합을 사용하여 구현될 수 있다.While the various components are shown as being part of the
도 2는 다양한 구현예들에 따른, 사용자 상호작용 데이터가 지식 시스템(104)의 다양한 컴포넌트들에 의해 어떻게 프로세싱될 수 있는 지에 관한 하나의 예를 도시한다. 사용자 상호작용 데이터 프로세싱 엔진(124)은 사용자 상호작용 데이터를 완료 작업 예측 엔진(128)에게 제공할 수 있다. 본 예에서는 도시되지 않았지만, 일부 구현예들에서, 자연 언어 프로세싱 엔진(126)은 사용자 상호작용 데이터가 완료 작업 예측 엔진(128)에 도달하기 전에 사용자 상호작용 데이터를 또한 프로세싱하는 것 및 사용자 상호작용 데이터에 주석을 다는 것을 수행할 수 있다.FIG. 2 illustrates one example of how user interaction data may be processed by the various components of the knowledge system 104, in accordance with various implementations. The user interaction
이러한 예에서, 완료 작업 예측 엔진(128)은 복수의 프로세싱 파이프라인들(processing pipelines)(252a 내지 252n)(총괄하여, "프로세싱 파이프라인들(252)"로 지칭됨)을 포함한다. 일부 구현예들에서, 각각의 프로세싱 파이프라인(252)은 개별적인 애플리케이션(예를 들어, 106 내지 112)과 관련될 수 있다. 각각의 프로세스 파이프라인(252)은 사용자가 특정 애플리케이션에서의 작업을 완료하는데 실패했을 가능성을 결정하기 위해서 사용자 상호작용 데이터를 분석하기 위한 임의의 알고리즘을 나타낼 수 있다. 예를 들어, 제 1 프로세싱 파이프라인(252a)은 사용자들이 캘린더 애플리케이션(106)과 관련된 작업들을 완료하는데 실패했을 가능성들을 결정하도록 설계된 알고리즘을 포함할 수 있다. 제 2 프로세싱 파이프라인(252b)은 사용자들이 이메일 애플리케이션(108)과 관련된 작업들을 완료하는데 실패했을 가능성들을 결정하도록 설계된 알고리즘을 포함할 수 있다. 기타 등등이 있을 수 있다.In this example, the
일부 구현예들에서, 각각의 프로세싱 파이프라인(252)은 인덱스(134) 내에 저장된 과거 애플리케이션 상호작용 데이터에 관해 훈련된 개별적인 기계 학습 분류기를 포함할 수 있다. 일부 구현예들에서, 동일한 사용자 상호작용 데이터는 복수의 프로세싱 파이프라인들에 의해 병렬로 프로세싱될 수 있다. 사용자 상호작용 데이터와 전체적으로 관련되어 있지 않은 애플리케이션과 관련된 파이프라인은 미완료 작업일 가능성이 상대적으로 낮은 그러한 가능성을 생성하게 될 것임이 추정될 수 있다.In some implementations, each processing pipeline 252 may include a separate machine learning classifier trained on historical application interaction data stored in the
일부 구현예들에서, 하나의 파이프라인(252)으로부터의 출력은, 예를 들어, 작업 미리알림 엔진(132)과 같은 다운스트림 컴포넌트들에 제공되는 것에 추가하여 혹은 그 대신에, 화살표(280)에 의해 표시되는 바와 같이 또 하나의 다른 파이프라인에 제공될 수 있다. 예를 들어, 제 1 파이프라인(252)은 사용자가 하나의 애플리케이션과 관련된 작업을 완료하는데 실패했을 가능성을 중간-레벨(즉, 50%)이라고 출력하지만, 제 2 파이프라인(252)은 사용자가 또 하나의 다른 애플리케이션과 관련된 작업을 완료하는데 실패했을 가능성을 상대적으로 높다라고 출력함을 가정한다. 제 2 파이프라인(252)에 의해 출력된 상대적으로 높은 가능성은 제 1 파이프라인(252)에 대한 입력으로서 제공될 수 있고, 이것은 제 1 파이프라인으로 하여금 자신의 결정된 가능성을 증가 혹은 감소시키도록 할 수 있다.In some implementations, the output from one pipeline 252 may be displayed in the form of an
하나의 파이프라인(252)으로부터의 출력은 또한 다른 이유로 또 하나의 다른 파이프라인에 제공될 수 있다. 복수의 사용자들에 의해 생성되는 원시 사용자 상호작용 데이터(raw user interaction data)의 양(volume)은 매우 클 가능성이 높다. 이에 따라, 일부 구현예들에서, 하나 이상의 기본적인 데이터 프로세싱 파이프라인들(252)이 예를 들어, "유용한 것(wheat)"과 "유용하지 않은 것(chaff)"을 분리해 내기 위해, 사용자 상호작용 데이터로부터 상대적으로 레벨이 높은 정보(예를 들어, 신호들)를 획득(harvest)하도록 제공될 수 있다. 일부 구현예들에서, 이러한 파이프라인들은 사용자 상호작용 데이터 프로세싱 엔진(124) 및/또는 자연 언어 프로세싱 엔진(126)에 의해 수행되는 것으로서 앞에서 설명된 하나 이상의 동작들을 수행할 수 있다. 예를 들어, 임의의 파이프라인은 하나 이상의 애플리케이션들과의 사용자 상호작용의 스냅샷들과 같은 레벨이 높은 신호들을 추출할 수 있다. 이러한 기본적인 데이터 프로세싱 파이프라인들(252)의 출력은 예를 들어, 화살표(280)에 의해 표시된 바와 같이 다른 파이프라인들(252)에 제공될 수 있다. 이러한 다른 파이프라인들(252)은 사용자들이 애플리케이션들과 관련된 작업들을 완료하는데 실패했을 가능성들을 결정하기 위해 기계 학습 모델들 등과 같은 다양한 기법들을 이용할 수 있다.The output from one pipeline 252 may also be provided to another pipeline for another reason. The volume of raw user interaction data generated by a plurality of users is likely to be very large. Thus, in some implementations, one or more of the basic data processing pipelines 252 may be used to separate, for example, "wheat" and "chaff" May be provided to harvest relatively high level information (e.g., signals) from the action data. In some implementations, such pipelines may perform one or more of the operations described above as being performed by the user interaction
완료 작업 예측 엔진(128)의 출력은 작업 미리알림 엔진(132)에게 제공될 수 있다. 도 2에서 점선 화살표들에 의해 표시된 바와 같이, 일부 구현예들에서, 완료 작업 예측 엔진(128)은 사용자들이 작업들을 완료하는데 실패했을 가능성들을 표시하는 출력을 선택적으로 제공할 수 있다. 예를 들어, 임의의 주어진 프로세싱 파이프라인(252)에 대해, 완료 작업 예측 엔진(128)은, 만약 결정된 가능성이 임계치를 만족시킨다면, 오로지 작업 미리알림 엔진(132)에게만 출력을 제공할 수 있다. 다른 구현예들에서는, 모든 가능성들이, 그것인 얼마나 낮은지에 상관없이, 작업 미리알림 엔진(132)에게 제공될 수 있다.The output of the completed
작업 미리알림 엔진(132)은 완료 작업 예측 엔진(128)에 의해 제공되는 출력을 분석할 수 있고, 이에 응답하여 (일부 경우들에서는 수신된 가능성들에 선택적으로 근거하여) 작업-완료 미리알림들이, 인덱스(134) 내에 저장된 과거 미리알림 소비 데이터에 적어도 부분적으로 근거하여 선택되는 방식으로, 사용자들에게 제시되도록 할 수 있다. 예를 들어, 일부 구현예들에서, 작업 미리알림 엔진(132)은 클라이언트 디바이스(102)를 동작시키는 사용자에게 하나 이상의 작업 미리알림들을 제시하도록 하는 하나 이상의 커맨드(command)들을 다양한 다운스트림 컴포넌트들, 예컨대, 클라이언트 디바이스(102) 상에서 실행되는 애플리케이션들(106 내지 112)에게 제공할 수 있다.The
완료 작업 예측 엔진(128) 및/또는 작업 미리알림 엔진(132)은 이들이 다양한 소스(source)들로부터 수행한 결정들에 대한 피드백을 수신할 수 있다. 이러한 컴포넌트들 중 하나 혹은 양쪽 모두가 기계 학습 분류기들을 이용하는 구현예들에서, 이러한 피드백은 긍정적인 피드백, 중립적인 피드백, 및/또는 부정적인 피드백의 형태를 가질 수 있다. 도 3에서 보여지는 바와 같이, 피드백은 클라이언트 디바이스(102)로부터 예를 들어, 하나 이상의 애플리케이션들(106 내지 112)을 통해 올 수 있다.The completion
예를 들어, 임의의 모바일 전화기 상에서, 사용자가 캘린더 애플리케이션(106)을 동작시켜 캘린더 입력을 생성함에 있어 날짜 및 제목 그리고 위치는 입력했지만 시작 시간 혹은 종료 시간은 입력하지 않음에 응답하여, 캘린더 입력을 완료하도록 하는 청취가능 통지(예를 들어, 비프음)가 모바일 전화기 상에서 제공되는 그러한 모바일 전화기가 클라이언트 디바이스(102)라고 가정한다. 또한, 사용자가 캘린더 입력을 완료하기 위해 캘린더 애플리케이션(106)을 여는 것을 전혀 하지 않고 해당 통지를 (예를 들어, 해당 통지를 없애버림(swiping away)으로써) 묵살한다고 가정한다. 사용자의 이러한 묵살은 완료 작업 예측 엔진(128)에 대해, 예를 들어, 사용자는 캘린더 입력을 사실 완료했음 그리고 사용자는 시작 시간 및 종료 시간을 캘린더 입력의 필수적인 특징들인 것으로 고려하고 있지 않음을 표시하는 부정적인 피드백을 구성할 수 있다. 이러한 피드백은 예를 들어, 완료 작업 예측 엔진(128)에 의해 인덱스(134) 내에 다양한 형태로 저장될 수 있다.For example, on any mobile phone, in response to a user entering a date and title and a location but not a start time or end time in operating the
대안적으로, 사용자가 해당 통지를 없애버렸지만 이후 임의의 시간에 캘린더 입력을 완료한다고 가정한다. 이때, 사용자의 묵살은 적어도 특정의 청취가능 통지와 관련하여 작업 미리알림 엔진(132)에 대해 부정적인 피드백을 구성할 수 있다. 아마도 사용자는 청취가능 미리알림들을 싫어하는 것이다. 하지만, 사용자가 나중에 작업을 완료했다는 사실은 또한 작업 미리알림 엔진(132)에게 어느 정도의 건설적인 피드백을 제공할 수 있는데, 예를 들어, 사용자가 청취가능 미리알림들을 좋아하지 않지만 아마도 더 미묘한(subtle) 미리알림(예를 들어, 시각적 통지, 점멸하는 불빛, 등)은 더 잘 수용될 수 있다는 피드백을 제공할 수 있다. 추가적으로, 캘린더 입력을 나중에 완료하는 것은 완료 작업 예측 엔진(128)에 대해 긍정적인 피드백을 구성할 수 있다. 캘린더 입력을 결국 완성하는 이러한 특정 사용자에게 시작 시간 및 종료 시간은 필수적인 것일 수 있다.Alternatively, it is assumed that the user has cleared the notification, but completes the calendar entry at any time thereafter. At this point, ignoring the user may at least constitute negative feedback to the
도 3은 캘린더 입력을 생성 및/또는 편집하기 위한 예시적인 사용자 인터페이스(300)를 도시한다. 인터페이스(300)는 다양한 필드들을 포함하는데, 예컨대, 사용자가 하나 이상의 날짜를 선택하도록 동작할 수 있는 상호작용형 캘린더(302), 사건 제목 필드(304), 사건 위치 필드(306), 시작 시간 필드(308), 및 종료 시간 필드(310)를 포함한다. 인터페이스(300)는 단지 설명 목적으로만 제시되는 것이지, 한정의 의미로 의도된 것이 아니다. 다양한 캘린더 애플리케이션들은 캘린더 입력들을 생성 및/또는 편집하기 위해 더 많은 혹은 더 적은 데이터 입력 필드들을 포함할 수 있다.FIG. 3 illustrates an
이러한 예에서, 사건 날짜(1월 21일)가 선택되었고, 사건 제목이 사건 제목 필드(304)에 입력되었고, 위치가 위치 필드(306)에 입력되었고, 그리고 시작 시간이 시작 시간 필드(308)에 입력되었다. 하지만, 종료 시간 필드(310)는 비어 있는 상태로 남아 있고, 제공된 위치("핫 윙 플레이스 바이 리버(Hot wing place by river)")는 (우편 주소(postal address)와 같은 알려진 위치, 또는 사람, 장소, 사건 등과 같은 개체들(entities)에 관한 지식 기반으로부터 식별가능한 것과는 반대로) 구어체 형태(colloquial form)를 갖고 있다. 이제, 사용자 인터페이스(300)는 닫혔고, 또 하나의 다른 애플리케이션으로 교체되었고, 그리고/또는 이러한 완성되지 않은 필드들이 완성되기 전에 임의의 미리결정된 시간 간격 동안 변경되지 않은 상태로 남아 있게 된다고 가정한다. 종료 시간에 대한 임의의 데이터를 제공하는데 실패한 것 그리고/또는 구어체 형태의 위치에 관한 더 "완벽한" 형태를 제공하는데 실패한 것에 근거하여, 완료 작업 예측 엔진(128)은 사용자가 이러한 캘린더 입력을 완료하는데 실패했을 가능성 결정할 수 있다. 만약 이러한 가능성이 하나 이상의 임계치들을 만족시킨다면, 작업 미리알림 엔진(132)은 작업-완료 미리알림이 사용자에게 제시되도록 할 수 있다.In this example, if the event date (Jan. 21) was selected, the event title was entered in the
이제 도 4를 참조하면, 본 명세서에서 설명되는 다양한 기법들을 포함하는 예시적인 방법(400)이 도시된다. 편의상, 흐름도의 동작들은 해당 동작들을 수행하는 시스템을 참조하여 설명된다. 이러한 시스템은 본 명세서에서 설명되는 다양한 엔진들을 포함하는 다양한 컴퓨터 시스템들의 다양한 컴포넌트들을 포함할 수 있다. 더욱이, 방법(400)의 동작들이 특정 순서로 보여지고 있지만, 이러한 것은 한정의 의미로 의도된 것이 아니다. 하나 이상의 동작들이 재정리, 생략, 혹은 추가될 수 있다.Referring now to FIG. 4, an
블록(402)에서, 시스템은 클라이언트 디바이스(102)와 같은 컴퓨팅 디바이스와의 사용자의 상호작용을 표시하는 사용자 상호작용 데이터를 획득할 수 있다. 예를 들어, 시스템은 사용자가 임의의 애플리케이션으로 임의의 작업을 수행하는 동안 사용자의 작업중단 가능을 시사하는 사건들에 대해 모니터링할 수 있다. 이러한 사건들은, 애플리케이션들을 전환하는 것(특히, 클라이언트 디바이스(102)가 한번에 하나의 애플리케이션을 디스플레이하도록 구성되는 작은 스크린을 갖는 모바일 전화기 혹은 태블릿 컴퓨터인 경우), 임의의 시간 간격 동안 유휴 상태로 유지시키는 것, 임의의 애플리케이션과의 사용자 상호작용 없이 적어도 임의의 미리결정된 시간 간격이 경과하는 것, 클라이언트 디바이스(102)를 대기 모드로 전이시키는 것, 모바일 전화기를 묵음 모드 혹은 진동 모드로 바꾸는 것, 등을 포함할 수 있지만, 이러한 것으로만 한정되는 것은 아니다. 블록(404)에서, 시스템은 예를 들어, 블록(402)에서 획득된 컴퓨팅 디바이스와의 사용자 상호작용을 표시하는 데이터에 근거하여, 이러한 사건의 발생을 검출할 수 있다.At
블록(406)에서, 시스템은 블록(404)에서 검출된 사건 발생과 동시에 일어난 특정 애플리케이션(예를 들어, 도 1에서의 106 내지 112)과의 사용자 상호작용을 표시하는 사용자 상호작용 데이터를 획득할 수 있다. 예를 들어, 사용자 활동 모니터링 엔진(116)은, 도 3의 도시된 상태에 있는 도 3의 캘린더 입력 사용자 인터페이스(300)의 스냅샷과 같은, 애플리케이션과의 사용자 상호작용의 하나 이상의 스냅샷들(예를 들어, 스크린샷들, API로부터 획득되는 애플리케이션의 상태들, 등)을 획득할 수 있다.At
블록(406)에서 획득된 사용자 상호작용 데이터에 근거하여, 블록(408)에서, 시스템은 사용자가 특정 애플리케이션으로 시작한 작업을 완료하는데 실패했을 가능성을 결정할 수 있다. 예를 들어, 완료 작업 예측 엔진(128)은 알려진 미완료 작업들의 예전 사례들에 근거하여 이러한 특정 캘린더 입력이 완료되지 않았을 가능성을 결정하기 위해 사용자 인터페이스(300)의 비어 있는 그리고/또는 완성되지 않은 필드들을 분석할 수 있다.Based on the user interaction data obtained at
블록(408)에서 결정된 가능성에 근거하여, 블록(410)에서, 시스템은 작업-완료 미리알림이 사용자에게 선택적으로 제시되도록 할 수 있다. 다양한 구현예들에서, 시스템은 블록(408)에서 결정된 가능성이 하나 이상의 미리결정된 임계치들을 만족시킬 때 (예를 들어, 작업 미리알림 엔진(132)을 통해) 작업-완료 미리알림이 제시되도록 할 수 있다. 다양한 구현예들에서, 시스템은 예를 들어, 인덱스(134) 내에 저장된 과거 소비 데이터에 근거하여 시스템이 선택하는 방식으로 (예를 들어, 작업 미리알림 엔진(132)을 통해) 작업-완료 미리알림이 제시되도록 한다. 예를 들어, 만약 이메일 사용자들이 과거 자료에 비추어 촉각적 미리알림들(예를 들어, 전화기 진동)에 반응하는 것보다 이메일 형태의 작업-완료 미리알림들에 더 많이 반응한다면, 시스템은 작업-완료 미리알림을 이메일을 통해 제공하는 것을 선택할 수 있다.Based on the likelihood determined at
블록(412)에서, 시스템은 블록(408)에서 결정된 가능성과 관련된 피드백을 예를 들어, 애플리케이션들(106 내지 112)로부터 혹은 다른 소스들로부터 획득할 수 있다. 일부 구현예들에서, 사용자는 이러한 가능성에 대한 명시적 피드백을 제공할 수 있다. 예를 들어, 작업-완료 미리알림을 수신한 이후, 사용자는 (작업-완료 미리알림 상에서 혹은 다른 곳에서) 임의의 사용자 인터페이스를 동작시켜 자신이 작업을 완료하는데 사실 실패했음을 자신은 동의한다 혹은 동의하지 않는다는 표시를 제공할 수 있다. 도 3에 도시된 캘린더 입력 상에서의 채워진 정보가 특정 사용자에 대해 충분하다고 가정한다. 아마도, 사용자는 "핫 윙 플레이스 바이 더 리버"가 어디에 위치하고 있는지를 정확히 알고 있는 것이고, 사건의 종료 시간에 대해 신경 쓰지 않는 것이다(예를 들어, 사건의 종료 시간은 정해지지 않은 개방형(open-ended)일 수 있음). 캘린더 입력을 완료하도록 하는 미리알림을 제시받는 경우, 사용자는, 자신은 캘린더 사건이 완료된 것으로 고려하고 있음을 표시하도록 구성된 하나 이상의 그래픽 사용자 인터페이스 요소들(예를 들어, "이미 완료됨"으로 표시된 버튼)을 동작시킬 수 있다. 예를 들어, 이것은 사용자(혹은 일반적인 사용자들)가 캘린더 입력들을 완료하는데 실패했을 가능성들을 결정하도록 구성된 기계 학습 분류기에 부정적인 피드백을 제공할 수 있다. 다른 구현예들에서, 사용자 피드백은 암시적일 수 있다. 예를 들어, 앞에서 언급된 바와 같이, 만약 사용자가 작업을 완료하기 위해 다시 돌아옴이 전혀 없이 작업-완료 미리알림을 묵살한다면, 이것은 암묵적인 부정적 피드백을 구성할 수 있다. 블록(414)에서, 시스템은 해당하는 특정 애플리케이션과 관련된 과거 애플리케이션 상호작용 데이터(이것은 예를 들어, 인덱스(134) 내에 저장될 수 있음)를 피드백에 근거하여 업데이트할 수 있다.At
블록(416)에서, 시스템은 예를 들어, 애플리케이션들(106 내지 112)로부터 혹은 다른 소스들로부터, 블록(410)에서 제시된 작업-완료 미리알림의 사용자 소비에 관련된 피드백들 획득할 수 있다. 일부 구현예들에서, 사용자는 사용자가 작업-완료 미리알림을 수신한 방식에 대한 명시적 피드백을 제공할 수 있다. 예를 들어, 작업-완료 미리알림이 사용자에게 제시된 방식을 사용자가 좋아했음 혹은 좋아하지 않았음의 표시를 제공하기 위해 사용자는 작업-완료 미리알림 상에서 혹은 다른 곳에서 사용자 인터페이스를 동작시킬 수 있다. 사용자가 개인 이메일 어드레스(personal email address)에 전달되는 이메일로서 작업-완료 미리알림을 수신한다고 가정한다. 사용자는, 자신은 자신의 개인 이메일 어드레스에서 작업-완료 미리알림들을 수신하고 싶지 않음을 표시하기 위해 (예를 들어, 작업중단 식별 엔진(114) 혹은 사용자 활동 모니터링 엔진(116)에 의해 또는 이들을 위해 클라이언트 디바이스(102) 상에서 렌더링(rendering)되는) 사용자 인터페이스를 동작시킬 수 있다. 일부 구현예들에서, 사용자는 또한, 다른 방식으로, 예를 들어, 텍스트 메시지를 통해, 혹은 업무용 이메일 어드레스에서, 혹은 모바일 전화기 스크린 상의 통지들로서 작업-완료 통지들을 수신하는 것을 선호한다고 표시하기 위해 사용자 인터페이스를 동작시킬 수 있다.At
다양한 구현예들에서, 작업 미리알림들의 사용자 소비와 관련된 사용자 피드백은 추가적으로 혹은 대안적으로 암시적일 수 있다. 예를 들어, 사용자가 작업-완료 미리알림을 묵살하고, 그 다음에 일정 시간 간격(예를 들어, 1시간 이상, 하루 이상) 이후 (아마도, 상이한 형태로 된 또 하나의 다른 작업-완료 미리알림을 소비한 이후) 다시 되돌아와서 작업을 완료한다고 가정한다. 이것은 사용자가 작업을 완료하도록 미리알림을 받고 싶어함, 하지만 초기에 제시된 작업-완료 미리알림의 방식이 아닌 방식으로 받고 싶어함을 표시할 수 있다. 블록(418)에서, 시스템은 블록(416)에서 수신된 피드백에 근거하여 특정 사용자 혹은 일반적인 사용자와 관련된 과거 미리알림 소비 데이터를 업데이트할 수 있고, 이것은 일부 구현예들에서, 인덱스(134) 내에 저장될 수 있다.In various implementations, user feedback associated with user consumption of job reminders may additionally or alternatively be implicit. For example, if a user ignores a task-completed reminder and then after a certain time interval (e.g., one hour or more, one day or more) (possibly another job-completion reminder in a different form) ), And then return back to complete the task. This may indicate that the user wants to be reminded to complete the task, but wants to receive it in a manner other than the work-completion reminder presented earlier. At
도 5는 예시적 컴퓨터 시스템(510)의 블록도이다. 컴퓨터 시스템(510)은 전형적으로 적어도 하나의 프로세서(514)를 포함하고, 이러한 프로세서(514)는 버스 서브시스템(bus subsystem)(512)을 통해 다수의 주변 디바이스들과 통신한다. 이러한 주변 디바이스들은 (예를 들어, 메모리 서브시스템(memory subsystem)(525) 및 파일 저장 서브시스템(file storage subsystem)(526)을 포함하는) 저장 서브시스템(storage subsystem)(524), 사용자 인터페이스 출력 디바이스들(user interface output devices)(520), 사용자 인터페이스 입력 디바이스들(user interface input devices)(522), 그리고 네트워크 인터페이스 서브시스템(network interface subsystem)(516)을 포함할 수 있다. 입력 및 출력 디바이스들은 컴퓨터 시스템(510)과의 사용자 상호작용을 가능하게 한다. 네트워크 인터페이스 서브시스템(516)은 외부 네트워크들에 대한 인터페이스를 제공하고, 그리고 다른 컴퓨터 시스템들 내의 대응하는 인터페이스 디바이스들과 결합된다.5 is a block diagram of an
사용자 인터페이스 입력 디바이스들(522)은 키보드, 포인팅 디바이스들(예컨대, 마우스, 트랙볼, 터치패드, 혹은 그래픽 태블릿), 스캐너, 디스플레이에 통합된 터치스크린, 오디오 입력 디바이스들(예컨대, 음성 인식 시스템들, 마이크로폰들), 그리고/또는 다른 타입의 입력 디바이스들을 포함할 수 있다. 일반적으로, 용어 "입력 디바이스"의 사용은 컴퓨터 시스템(510) 안으로 혹은 통신 네트워크 상으로 정보를 입력하기 위한 모든 가능한 타입의 디바이스들 및 방식들을 포함하도록 의도된 것이다.The user
사용자 인터페이스 출력 디바이스들(520)은 디스플레이 서브시스템, 프린터, 팩스 머신, 혹은 비-시각적 디바이스들(예컨대, 오디오 출력 디바이스들)을 포함할 수 있다. 디스플레이 서브시스템은 음극선관(Cathode Ray Tube, CRT), 평판 디바이스(예컨대, 액정 디스플레이(Liquid Crystal Display, LCD)), 프로젝션 디바이스, 혹은 시각적 이미지를 생성하기 위한 어떤 다른 메커니즘을 포함할 수 있다. 디스플레이 서브시스템은 또한 예컨대 오디오 출력 디바이스들을 통해 비-시각적 디스플레이를 제공할 수 있다. 일반적으로, 용어 "출력 디바이스"의 사용은 컴퓨터 시스템(510)으로부터의 정보를 사용자에게 혹은 또 하나의 다른 머신에게 혹은 컴퓨터 시스템에게 출력하기 위한 모든 가능한 타입의 디바이스들 및 방식들을 포함하도록 의도된 것이다.The user
저장 서브시스템(524)은 본 명세서에서 설명되는 모듈들 중 일부 혹은 모두의 기능을 제공하는 프로그래밍 및 데이터 구조들을 저장한다. 예를 들어, 저장 서브시스템(524)은, 방법(400)의 선택된 실시형태들을 수행하기 위한 로직을 포함할 수 있고, 그리고/또는 작업중단 식별 엔진(114), 사용자 활동 모니터링 엔진(116), 사용자 상호작용 데이터 프로세싱 엔진(124), 자연 언어 프로세싱 엔진(126), 완료 작업 예측 엔진(128), 및/또는 작업 미리알림 엔진(132) 중 하나 이상을 구현하기 위한 로직을 포함할 수 있다.The
이러한 소프트웨어 모듈들은 일반적으로 프로세서(514)에 의해 단독으로 혹은 다른 프로세서들과 결합되어 실행된다. 저장 서브시스템(524) 내에서 사용되는 메모리(525)는 다수의 메모리들을 포함할 수 있으며, 이러한 메모리들에는 프로그램 실행 동안 명령들 및 데이터를 저장하기 위한 메인 랜덤 액세스 메모리(Random Access Memory, RAM)(530), 그리고 고정된 명령들이 저장되는 판독 전용 메모리(Read Only Memory, ROM)(532)가 포함된다. 파일 저장 서브시스템(526)은 프로그램 및 데이터 파일들을 위한 영구적 저장을 제공할 수 있고, 그리고 하드 디스크 드라이브, 플로피 디스크 드라이브(및 관련된 탈착가능 매체들), CD-ROM 드라이브, 광학 드라이브, 혹은 탈착가능 미디어 카트리지들을 포함할 수 있다. 특정 구현예들의 기능을 구현하는 모듈들은 저장 서브시스템(524) 내의 파일 저장 서브시스템(526)에 의해 저장될 수 있거나, 혹은 프로세서(들)(514)에 의해 액세스가능한 다른 머신들 내에 저장될 수 있다.These software modules are typically executed by
버스 서브시스템(512)은 컴퓨터 시스템(510)의 다양한 컴포넌트들과 서브시스템들이 서로 의도된 대로 통신하도록 하기 위한 메커니즘을 제공한다. 비록 버스 서브시스템(512)이 단일 버스로서 도식적으로 보여지고 있지만, 버스 서브시스템의 대안적 구현예들은 복수의 버스들을 사용할 수 있다.
컴퓨터 시스템(510)은 다양한 타입들을 가질 수 있고, 여기에는 워크스테이션, 서버, 컴퓨팅 클러스터, 블레이드 서버, 서버 팜, 또는 임의의 다른 데이터 프로세싱 시스템 혹은 컴퓨팅 디바이스가 포함된다. 컴퓨터들 및 네트워크들의 끊임없이-변하는 성질로 인해, 도 5에 도시된 컴퓨터 시스템(510)의 설명은 오로지 일부 구현예들을 예시할 목적으로 특정 사례로서 의도된 것이다. 도 5에 도시된 컴퓨터 시스템보다 더 많거나 더 적은 컴포넌트들을 가질 수 있는, 컴퓨터 시스템(510)의 다수의 다른 구성들이 가능하다.The
본 명세서에 설명되는 시스템들이 사용자들에 대한 개인적 정보를 수집하거나, 혹은 개인적 정보를 이용할 수 있는 상황들에서, 사용자들은 프로그램들 혹은 특징부들이 사용자 정보(예를 들어, 사용자의 소셜 네트워크, 소셜 동작들 혹은 활동들, 직업, 사용자의 선호도, 또는 사용자의 현재 지리적 위치에 대한 정보)를 수집할지 여부를 제어할 기회를 제공받을 수 있고, 또는 사용자와 더 관련되어 있을 수 있는 콘텐츠 서버로부터 콘텐츠를 수신할지 여부 그리고/또는 어떻게 수신할지를 제어할 기회를 제공받을 수 있다. 또한, 특정 데이터는 그 저장 혹은 사용 전에 하나 이상의 방식들로 처리될 수 있고, 이에 따라 개인적인 식별가능한 정보는 제거되게 된다. 예를 들어, 사용자의 신분은 처리될 수 있고, 이에 따라 사용자에 대한 어떠한 개인적인 식별가능한 정보도 결정될 수 없게 되며, 또는 그래픽 위치 정보가 획득되게 되는 사용자의 지리적 위치는 (예를 들어, 도시 레벨로, 우편번호(ZIP 코드) 레벨로, 혹은 주(state) 레벨로) 일반화될 수 있고, 이에 따라 사용자의 특정 지리적 위치는 결정될 수 없게 된다. 따라서, 사용자는 사용자에 대한 정보가 어떻게 수집되고 그리고/또는 사용되는지에 관해 제어할 수 있다.In situations in which the systems described herein collect personal information about users, or where personal information may be available, users may find that the programs or features are not user information (e.g., a user's social network, Or information about the user's current geographic location), or may be provided with an opportunity to receive content from a content server that may be more relevant to the user And / or how to receive it. In addition, the particular data may be processed in one or more ways before its storage or use, so that the personally identifiable information is removed. For example, the identity of the user may be processed, so that no personally identifiable information about the user can be determined, or the geographic location of the user from which the graphical location information is to be obtained (e.g., , A ZIP code (ZIP code) level, or a state level), so that the user's specific geographical location can not be determined. Thus, the user can control how information about the user is collected and / or used.
수 개의 구현예들이 본 명세서에서 설명되었고 예시되었지만, 본 명세서에서 설명되는 기능 수행 그리고/또는 결과 획득 및/또는 하나 이상의 장점 획득을 위해 다양한 다른 수단 및/또는 구조가 이용될 수 있고, 이러한 변형들 및/또는 수정들 각각은 본 명세서에서 설명되는 구현들의 범위 내에 있는 것으로 고려된다. 더 일반적으로 말하면, 본 명세서에서 설명되는 모든 파라미터들, 치수들, 물질들, 및 구성들은 예시적으로 의도된 것이고, 그리고 실제 파라미터들, 치수들, 물질들, 및 구성들은 본 명세서의 가르침들이 사용되게 되는 특정 애플리케이션 혹은 애플리케이션들에 따라 달라질 것이다. 본 발명의 기술분야에서 숙련된 사람들은 본 명세서에서 설명되는 특정 구현들에 대한 다수의 등가물들 및 단지 통상적 실험의 사용을 인식할 것이고 또는 알 수 있을 것이다. 따라서, 앞서의 구현예들은 단지 예시로서 제시된 것이고, 첨부되는 특허청구범위 및 그 등가물들 내에서 그 구현들이 본 명세서에서 특정적으로 설명되고 기재된 것과는 다르게 실시될 수 있음을 이해해야 한다. 본 개시내용의 구현예들은 본 명세서에서 설명되는 각각의 개별적 특징, 시스템, 품목, 물질, 키트, 및/또는 방법과 관련된 것이다. 추가적으로, 둘 이상의 이러한 특징들, 시스템들, 품목들, 물질들, 키트들 및/또는 방법들의 임의의 조합은, 만약 이러한 특징들, 시스템들, 품목들, 물질들, 키트들 및/또는 방법들이 상호 간에 서로 부합하지 않는 것이 아니라면, 본 개시내용의 범위 내에 포함된다.Although several implementations have been described and illustrated herein, various other means and / or structures may be utilized to perform the functions described herein and / or obtain results and / or one or more advantages, And / or modifications are each considered to be within the scope of the implementations described herein. More generally, all parameters, dimensions, materials, and configurations described herein are intended to be exemplary and that the actual parameters, dimensions, materials, and configurations are used in the teachings of the present specification Depending on the particular application or application being rendered. Those skilled in the art will recognize, or be able to ascertain using no more than routine experimentation with many equivalents to the specific embodiments described herein. It is therefore to be understood that the foregoing embodiments have been presented by way of example only and that embodiments within the scope of the appended claims and their equivalents may be practiced otherwise than as specifically described and illustrated herein. Embodiments of the present disclosure relate to each individual feature, system, item, substance, kit, and / or method described herein. Additionally, any combination of two or more of these features, systems, items, materials, kits, and / or methods is intended to cover any such features, systems, items, materials, kits and / Unless they are mutually incompatible, are included within the scope of this disclosure.
Claims (23)
컴퓨팅 디바이스(computing device)로부터의 하나 이상의 프로세서(processor)들에 의해, 상기 컴퓨팅 디바이스 상에서 실행되는 애플리케이션(application)과의 사용자에 의한 상호작용(interaction)을 표시하는 사용자 상호작용 데이터(user interaction data)를 획득하는 단계;
상기 사용자 상호작용 데이터에 근거하여 상기 하나 이상의 프로세스들에 의해, 상기 사용자가 상기 컴퓨팅 디바이스 상에서 실행되는 상기 애플리케이션으로 시작한 작업(task)을 상기 사용자가 완료하는데 실패했을 가능성(likelihood)을 결정하는 단계; 그리고
상기 가능성에 적어도 부분적으로 근거하여 상기 하나 이상의 프로세서들에 의해, 선택적으로 작업-완료 미리알림(task-completion reminder)이 상기 컴퓨팅 디바이스 상에서의 출력으로서 상기 사용자에게 제공되도록 하는 단계를 포함하는 것을 특징으로 하는 컴퓨터로 구현되는 방법.A computer-implemented method,
There is provided a computer program for causing a computer to function as user interaction data for indicating an interaction by a user with an application executing on the computing device by one or more processors from a computing device, ;
Determining, by the one or more processes based on the user interaction data, a likelihood that the user has failed to complete a task started with the application running on the computing device; And
Selectively causing a task-completion reminder to be provided to the user as an output on the computing device, by the one or more processors based at least in part on the probabilities. Lt; / RTI >
상기 하나 이상의 프로세서들에 의해, 상기 작업-완료 미리알림이 상기 사용자에게 제시되는 방식을 과거 미리알림 소비(historical reminder consumption)에 적어도 부분적으로 근거하여 선택하는 단계를 더 포함하는 것을 특징으로 하는 컴퓨터로 구현되는 방법.The method according to claim 1,
Further comprising, by the one or more processors, selecting the manner in which the task-complete reminder is presented to the user based at least in part on historical reminder consumption. How it is implemented.
상기 가능성을 결정하는 단계는, 상기 애플리케이션과 관련된 상태 기계(state machine)가 특정 상태에 도달했음을 결정하는 것을 포함하는 것을 특징으로 하는 컴퓨터로 구현되는 방법.The method according to claim 1,
Wherein determining the likelihood comprises determining that a state machine associated with the application has reached a particular state.
상기 사용자 상호작용 데이터는, 상기 애플리케이션의 하나 이상의 스냅샷(snapshot)들을 포함하는 것을 특징으로 하는 컴퓨터로 구현되는 방법.The method according to claim 1,
Wherein the user interaction data comprises one or more snapshots of the application.
상기 가능성을 결정하는 단계는, 상기 애플리케이션과 관련된 과거 애플리케이션 상호작용 데이터에 근거하여 상기 가능성을 결정하는 것을 포함하는 것을 특징으로 하는 컴퓨터로 구현되는 방법.The method according to claim 1,
Wherein determining the likelihood comprises determining the probability based on past application interaction data associated with the application.
상기 가능성을 결정하는 단계는, 기계 학습 분류기(machine learning classifier)를 사용하여 수행되는 것을 특징으로 하는 컴퓨터로 구현되는 방법.6. The method of claim 5,
Wherein determining the likelihood is performed using a machine learning classifier. ≪ Desc / Clms Page number 22 >
상기 분류기는 미완료 작업(incomplete task)들과 관련되는 것으로 알려진 상기 애플리케이션과의 사용자 상호작용의 복수의 사례(instance)들에 관해 훈련되는 것을 특징으로 하는 컴퓨터로 구현되는 방법.The method according to claim 6,
Wherein the classifier is trained on a plurality of instances of user interaction with the application known to be associated with incomplete tasks.
상기 하나 이상의 프로세서들에 의해, 상기 가능성의 정확도(accuracy)를 표시하는 상기 사용자로부터의 피드백(feedback)에 근거하여 상기 기계 학습 분류기를 수정(modifying)하는 단계를 더 포함하는 것을 특징으로 하는 컴퓨터로 구현되는 방법.8. The method of claim 7,
Further comprising modifying, by the one or more processors, the machine learning classifier based on feedback from the user indicating accuracy of the probability. ≪ Desc / How it is implemented.
상기 가능성을 결정하는 단계는, 상기 애플리케이션을 사용하여 상기 사용자에 의해 작성(author)된 하나 이상의 문장 조각(sentence fragment)들을 식별하기 위해 상기 사용자에 의해 상기 애플리케이션에 입력된 텍스트(text)에 관해 자연 언어 프로세싱(natural language processing)을 수행하는 것을 포함하는 것을 특징으로 하는 컴퓨터로 구현되는 방법.The method according to claim 1,
The method of claim 1, wherein determining the likelihood comprises: determining whether the text entered into the application by the user to identify one or more sentence fragments authored by the user using the application; And performing natural language processing. ≪ Desc / Clms Page number 22 >
상기 하나 이상의 프로세서들에 의해, 상기 작업-완료 미리알림이 상기 사용자에게 제시되는 방식을 기계 학습 분류기를 사용하여 선택하는 단계를 더 포함하는 것을 특징으로 하는 컴퓨터로 구현되는 방법.3. The method of claim 2,
Further comprising, by the one or more processors, selecting, using a machine-learning classifier, the manner in which the task-complete reminder is presented to the user.
상기 기계 학습 분류기는 작업-완료 미리알림 소비(task-completion reminder consumption)의 복수의 사례들에 관해 훈련되는 것을 특징으로 하는 컴퓨터로 구현되는 방법.11. The method of claim 10,
Wherein the machine learning classifier is trained on a plurality of instances of task-completion reminder consumption.
상기 하나 이상의 프로세서들에 의해, 상기 작업-완료 미리알림의 상기 사용자에 의한 소비를 표시하는 피드백에 근거하여 상기 기계 학습 분류기를 수정하는 단계를 더 포함하는 것을 특징으로 하는 컴퓨터로 구현되는 방법.11. The method of claim 10,
Further comprising modifying, by the one or more processors, the machine learning classifier based on feedback indicating consumption by the user of the task-complete reminder.
상기 애플리케이션은 제 1 애플리케이션이고, 상기 획득하는 단계 및 상기 결정하는 단계의 동작들은 상기 제 1 애플리케이션과는 별개의 애플리케이션인 제 2 애플리케이션에 의해 수행되는 것을 특징으로 하는 컴퓨터로 구현되는 방법.The method according to claim 1,
Wherein the application is a first application and the operations of obtaining and determining are performed by a second application that is an application separate from the first application.
상기 하나 이상의 프로세스들은 상기 메모리에 저장된 명령들을 실행하도록 동작가능하고, 상기 명령들은,
컴퓨팅 디바이스와의 사용자 상호작용에 근거하여, 사용자가 상기 컴퓨팅 디바이스 상에서 실행되는 애플리케이션과 관련된 작업을 수행하는 동안 작업을 중단했음을 시사(suggest)하는 사건(event)의 발생을 검출하는 것;
상기 애플리케이션과 관련된 작업을 완료하는데 실패했음을 결정하는 것; 그리고
과거 미리알림 소비에 적어도 부분적으로 근거하여 선택되는 방식으로 상기 사용자에게 작업-완료 미리알림을 제시하는 것을 수행하기 위한 명령들을 포함하는 것을 특징으로 하는 시스템.A system comprising a memory and one or more processors,
Wherein the one or more processes are operable to execute instructions stored in the memory,
Detecting an occurrence of an event that suggests that the user has stopped working while performing a task associated with an application running on the computing device, based on user interaction with the computing device;
Determining that the task associated with the application has failed to complete; And
And presenting a task-completion reminder to the user in a manner selected based at least in part on past reminder consumption.
상기 애플리케이션과의 상기 사용자에 의한 상호작용을 표시하는 사용자 상호작용 데이터를 획득하는 것; 그리고
상기 사용자 상호작용 데이터를 원격 컴퓨팅 시스템(remote computing system)에 제공하는 것을 수행하기 위한 명령들을 더 포함하고,
상기 결정하는 것은 상기 사용자가 상기 애플리케이션과 관련된 상기 작업을 완료하는데 실패했다는 표시를 상기 원격 컴퓨팅 시스템으로부터 수신하는 것을 포함하는 것을 특징으로 하는 시스템.15. The method of claim 14,
Obtaining user interaction data indicative of interaction by the user with the application; And
Further comprising instructions for performing the providing of the user interaction data to a remote computing system,
Wherein the determining comprises receiving from the remote computing system an indication that the user has failed to complete the task associated with the application.
상기 명령들은 또한,
상기 애플리케이션과의 상기 사용자에 의한 상호작용을 표시하는 사용자 상호작용 데이터를 획득하는 것; 그리고
상기 사용자 상호작용 데이터에 근거하여, 상기 사용자가 상기 애플리케이션과 관련된 상기 작업을 완료하는데 실패했을 가능성을 결정하는 것을 수행하기 위한 명령들을 포함하는 것을 특징으로 하는 시스템.15. The method of claim 14,
The instructions may also be &
Obtaining user interaction data indicative of interaction by the user with the application; And
And based on the user interaction data, determining whether the user has failed to complete the task associated with the application.
상기 발생을 검출하는 것은 기계 학습 분류기를 사용하여 수행되는 것을 특징으로 하는 시스템.15. The method of claim 14,
Wherein detecting the occurrence is performed using a machine learning classifier.
상기 기계 학습 분류기는 알려진 사용자 작업중단의 복수의 사례들에 관해 훈련되는 것을 특징으로 하는 시스템.18. The method of claim 17,
Wherein the machine learning classifier is trained on a plurality of instances of known user task interruptions.
상기 사건은, 상기 컴퓨팅 디바이스 상의 애플리케이션들 간의 천이(transition), 상기 애플리케이션과의 사용자 상호작용 없이 적어도 특정 시간 간격(time interval)의 경과(passage), 및 상기 컴퓨팅 디바이스의 대기 상태(standby state)로의 전이 중 하나 이상의 것을 포함하는 것을 특징으로 하는 시스템.15. The method of claim 14,
The event comprising at least one of a transition between applications on the computing device, at least a passage of a time interval without user interaction with the application, and a standby state of the computing device ≪ RTI ID = 0.0 > transition. ≪ / RTI >
상기 애플리케이션은 제 1 애플리케이션이고, 상기 검출하는 것 및 상기 결정하는 것은 상기 제 1 애플리케이션과는 별개의 애플리케이션인 제 2 애플리케이션에 의해 수행되는 것을 특징으로 하는 시스템.15. The method of claim 14,
Wherein the application is a first application and the detecting and determining is performed by a second application that is an application separate from the first application.
컴퓨팅 디바이스 상에서 실행되는 애플리케이션과의 사용자에 의한 상호작용을 표시하는 사용자 상호작용 데이터를 획득하기 위한 사용자 상호작용 데이터 프로세싱 엔진(user interaction data processing engine);
상기 사용자 상호작용 데이터에 근거하여, 상기 사용자가 상기 컴퓨팅 디바이스 상에서 실행되는 상기 애플리케이션으로 시작한 작업을 상기 사용자가 완료하는데 실패했을 가능성을 결정하기 위한 완료 작업 예측 엔진(complete task prediction engine); 그리고
상기 가능성에 근거하여, 작업-완료 미리알림이 과거 미리알림 소비에 적어도 부분적으로 근거하여 선택되는 방식으로 상기 사용자에게 선택적으로 제시되도록 하기 위한 작업 미리알림 엔진(task reminder engine)을 포함하는 것을 특징으로 하는 시스템.As a system,
A user interaction data processing engine for obtaining user interaction data indicative of user interaction with an application running on a computing device;
A complete task prediction engine for determining, based on the user interaction data, a likelihood that the user has failed to complete a task initiated by the application running on the computing device; And
And a task reminder engine for causing the task-completion reminder to be selectively presented to the user in a manner that is selected based at least in part on the past reminder consumption, based on the likelihood System.
상기 완료 작업 예측 엔진은, 미완료 작업들과 관련되는 것으로 알려진 상기 애플리케이션과의 사용자 상호작용의 복수의 사례들에 관해 훈련되는 기계 학습 분류기를 포함하는 것을 특징으로 하는 시스템.22. The method of claim 21,
Wherein the complete task prediction engine comprises a machine learning classifier trained on a plurality of instances of user interaction with the application known to be associated with incomplete tasks.
상기 작업 미리알림 엔진은, 작업-완료 미리알림 소비의 복수의 사례들에 관해 훈련되는 기계 학습 분류기를 포함하는 것을 특징으로 하는 시스템.22. The method of claim 21,
Wherein the task reminder engine comprises a machine learning classifier trained on a plurality of instances of task-complete reminder consumption.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/629,242 | 2015-02-23 | ||
US14/629,242 US10671954B2 (en) | 2015-02-23 | 2015-02-23 | Selective reminders to complete interrupted tasks |
PCT/US2016/018079 WO2016137781A1 (en) | 2015-02-23 | 2016-02-16 | Selective reminders to complete interrupted tasks |
Publications (2)
Publication Number | Publication Date |
---|---|
KR20170119715A true KR20170119715A (en) | 2017-10-27 |
KR101984252B1 KR101984252B1 (en) | 2019-05-30 |
Family
ID=55485340
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
KR1020177026921A KR101984252B1 (en) | 2015-02-23 | 2016-02-16 | Optional reminders to allow you to complete interrupted tasks |
Country Status (8)
Country | Link |
---|---|
US (2) | US10671954B2 (en) |
EP (1) | EP3262577A1 (en) |
JP (1) | JP2018511118A (en) |
KR (1) | KR101984252B1 (en) |
CN (2) | CN107257983B (en) |
DE (1) | DE112016000860T5 (en) |
GB (1) | GB2550524A (en) |
WO (1) | WO2016137781A1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
KR20210002724A (en) * | 2018-05-07 | 2021-01-08 | 구글 엘엘씨 | Deciding whether to automatically resume the 1st automation assistant session when the 2nd session interrupt is interrupted |
Families Citing this family (34)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2015057586A1 (en) | 2013-10-14 | 2015-04-23 | Yahoo! Inc. | Systems and methods for providing context-based user interface |
US20160260047A1 (en) * | 2015-03-03 | 2016-09-08 | BetterWorks Systems, Inc. | Monitoring individual and aggregate progress of multiple team members |
KR101769423B1 (en) * | 2016-11-08 | 2017-08-22 | 최재호 | Reminder method and apparatus based on chatting room |
US20170004396A1 (en) * | 2015-06-30 | 2017-01-05 | Microsoft Technology Licensing, Llc | User-specific task reminder engine |
US11282515B2 (en) | 2015-08-31 | 2022-03-22 | Hand Held Products, Inc. | Multiple inspector voice inspection |
US10845949B2 (en) * | 2015-09-28 | 2020-11-24 | Oath Inc. | Continuity of experience card for index |
US10521070B2 (en) | 2015-10-23 | 2019-12-31 | Oath Inc. | Method to automatically update a homescreen |
US10831766B2 (en) | 2015-12-21 | 2020-11-10 | Oath Inc. | Decentralized cards platform for showing contextual cards in a stream |
US20180097753A1 (en) * | 2016-09-30 | 2018-04-05 | Microsoft Technology Licensing, Llc | Reminder Completion Assistance in Group Conversation |
CN106686228A (en) * | 2016-12-26 | 2017-05-17 | 珠海市魅族科技有限公司 | Item prompting method and item promoting device |
US10754685B2 (en) * | 2017-03-03 | 2020-08-25 | Microsoft Technology Licensing Llc | Cross-device task registration and resumption |
KR102298947B1 (en) * | 2017-04-28 | 2021-09-08 | 삼성전자주식회사 | Voice data processing method and electronic device supporting the same |
US20190012629A1 (en) * | 2017-07-10 | 2019-01-10 | Findo, Inc. | Team performance supervisor |
US20180349499A1 (en) * | 2017-06-01 | 2018-12-06 | Facebook Inc. | Real-time Counters for Search Results on Online Social Networks |
US11449764B2 (en) | 2018-06-27 | 2022-09-20 | Microsoft Technology Licensing, Llc | AI-synthesized application for presenting activity-specific UI of activity-specific content |
US11354581B2 (en) | 2018-06-27 | 2022-06-07 | Microsoft Technology Licensing, Llc | AI-driven human-computer interface for presenting activity-specific views of activity-specific content for multiple activities |
US10990421B2 (en) | 2018-06-27 | 2021-04-27 | Microsoft Technology Licensing, Llc | AI-driven human-computer interface for associating low-level content with high-level activities using topics as an abstraction |
CN109345098A (en) * | 2018-09-20 | 2019-02-15 | 武汉斗鱼网络科技有限公司 | A kind of task recommendation method, apparatus, server and storage medium |
US10705891B2 (en) * | 2018-10-26 | 2020-07-07 | International Business Machines Corporation | Cognitive agent for persistent multi-platform reminder provision |
US11095596B2 (en) * | 2018-10-26 | 2021-08-17 | International Business Machines Corporation | Cognitive request management |
US11049042B2 (en) * | 2018-11-05 | 2021-06-29 | Convr Inc. | Systems and methods for extracting specific data from documents using machine learning |
US11270213B2 (en) | 2018-11-05 | 2022-03-08 | Convr Inc. | Systems and methods for extracting specific data from documents using machine learning |
US20200184963A1 (en) * | 2018-12-07 | 2020-06-11 | At&T Intellectual Property I, L.P. | Virtual assistant augmentation system |
JP2020134956A (en) * | 2019-02-12 | 2020-08-31 | 株式会社メルカリ | Information processing method, information processing program, information processing device, and information processing terminal |
US11262979B2 (en) * | 2019-09-18 | 2022-03-01 | Bank Of America Corporation | Machine learning webpage accessibility testing tool |
US11636438B1 (en) | 2019-10-18 | 2023-04-25 | Meta Platforms Technologies, Llc | Generating smart reminders by assistant systems |
US11567788B1 (en) | 2019-10-18 | 2023-01-31 | Meta Platforms, Inc. | Generating proactive reminders for assistant systems |
US20210157795A1 (en) * | 2019-11-22 | 2021-05-27 | 4F Applied Technologies, LLC | System and Method of Tracking Data and Providing a Digital Logbook and Database |
CN111061544A (en) * | 2019-12-30 | 2020-04-24 | 联想(北京)有限公司 | Processing method and electronic equipment |
CN111314208A (en) * | 2020-01-20 | 2020-06-19 | 维沃移动通信有限公司 | Information prompting method and electronic equipment |
US20220083986A1 (en) * | 2020-09-14 | 2022-03-17 | Apple Inc. | Digital assistant-enabled daily briefings |
US20230004476A1 (en) * | 2021-07-01 | 2023-01-05 | Hewlett-Packard Development Company, L.P. | Application failure tracking features |
US20230063503A1 (en) * | 2021-09-02 | 2023-03-02 | International Business Machines Corporation | Event-based calendar entry notifications |
WO2023115309A1 (en) * | 2021-12-21 | 2023-06-29 | Citrix Systems, Inc. | User interface for reminding user of incomplete tasks in inactive application windows |
Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20070166672A1 (en) * | 2006-01-03 | 2007-07-19 | General Electric Company | System and method for just-in-time training in software applications |
US20070192174A1 (en) * | 2005-12-30 | 2007-08-16 | Bischoff Brian J | Monitoring task performance |
KR20140056753A (en) * | 2012-10-31 | 2014-05-12 | 에스케이플래닛 주식회사 | Apparatus and method for syntactic parsing based on syntactic preprocessing |
Family Cites Families (39)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5737617A (en) * | 1995-06-06 | 1998-04-07 | International Business Machines Corporation | Method and system for English text analysis |
FI101661B (en) | 1996-01-08 | 1998-07-31 | Nokia Mobile Phones Ltd | Activate the phone's own answering machine according to the caller's number |
GB0005026D0 (en) | 2000-03-03 | 2000-04-26 | Hewlett Packard Co | Generating and logging reminders whilst mobile |
US7233933B2 (en) * | 2001-06-28 | 2007-06-19 | Microsoft Corporation | Methods and architecture for cross-device activity monitoring, reasoning, and visualization for providing status and forecasts of a users' presence and availability |
AU2003219422A1 (en) | 2003-04-17 | 2004-11-04 | Nokia Corporation | Reminder handling |
US7360151B1 (en) * | 2003-05-27 | 2008-04-15 | Walt Froloff | System and method for creating custom specific text and emotive content message response templates for textual communications |
US7720675B2 (en) * | 2003-10-27 | 2010-05-18 | Educational Testing Service | Method and system for determining text coherence |
JP2006113744A (en) | 2004-10-13 | 2006-04-27 | Sony Corp | Information processing apparatus and method, and program |
US7240353B2 (en) | 2004-11-24 | 2007-07-03 | General Electric Company | Functionality recommendation system |
EP1669896A3 (en) * | 2004-12-03 | 2007-03-28 | Panscient Pty Ltd. | A machine learning system for extracting structured records from web pages and other text sources |
US7233229B2 (en) | 2005-03-01 | 2007-06-19 | Microsoft Corporation | Actionable communication reminders |
US7565340B2 (en) * | 2006-01-09 | 2009-07-21 | The State Of Oregon Acting By And Through The State Board Of Higher Education On Behalf Of Oregon State University | Methods for assisting computer users performing multiple tasks |
US20070300225A1 (en) * | 2006-06-27 | 2007-12-27 | Microsoft Coporation | Providing user information to introspection |
US7761393B2 (en) * | 2006-06-27 | 2010-07-20 | Microsoft Corporation | Creating and managing activity-centric workflow |
US7970637B2 (en) * | 2006-06-27 | 2011-06-28 | Microsoft Corporation | Activity-centric granular application functionality |
US7797267B2 (en) * | 2006-06-30 | 2010-09-14 | Microsoft Corporation | Methods and architecture for learning and reasoning in support of context-sensitive reminding, informing, and service facilitation |
US20080004926A1 (en) | 2006-06-30 | 2008-01-03 | Microsoft Corporation | Methods and architectures for context-sensitive reminders and service facilitation |
US9524355B2 (en) * | 2007-01-22 | 2016-12-20 | Mozy, Inc. | Methods for delivering task-related digital content based on task-oriented user activity |
US7996338B2 (en) | 2008-06-27 | 2011-08-09 | Mircrosoft Corporation | Combining predictive models of forgetting, relevance, and cost of interruption to guide automated reminding |
US8190213B2 (en) | 2008-12-23 | 2012-05-29 | Motorola Mobility, Inc. | Method and apparatus for one-click reminder creation |
US8352561B1 (en) | 2009-07-24 | 2013-01-08 | Google Inc. | Electronic communication reminder technology |
US9754240B2 (en) * | 2009-11-20 | 2017-09-05 | Palo Alto Research Center Incorporated | Method for quickly recovering from task interruption |
CN101702127B (en) | 2009-11-27 | 2013-01-09 | 华为终端有限公司 | User task reminding method and device thereof |
US8825836B1 (en) * | 2010-01-18 | 2014-09-02 | Symantec Corporation | Systems and methods for managing notification messages generated by one or more applications |
US20110196853A1 (en) * | 2010-02-08 | 2011-08-11 | International Business Machines Corporation | System, method, and apparatus for generating a script to perform a task at a target web interface instance |
US9105008B2 (en) * | 2010-11-29 | 2015-08-11 | Yahoo! Inc. | Detecting controversial events |
US20120159341A1 (en) * | 2010-12-21 | 2012-06-21 | Microsoft Corporation | Interactions with contextual and task-based computing environments |
US8766793B2 (en) * | 2011-03-25 | 2014-07-01 | Microsoft Corporation | Contextually-appropriate task reminders |
US9330378B2 (en) * | 2012-04-03 | 2016-05-03 | International Business Machines Corporation | Management and synchronization of related electronic communications |
US20130297468A1 (en) * | 2012-04-13 | 2013-11-07 | CreativeWork Corporation | Systems and methods for tracking time |
CN102801856A (en) | 2012-07-30 | 2012-11-28 | 上海华勤通讯技术有限公司 | Method for executing task in accordance with position |
US20140218385A1 (en) * | 2012-09-10 | 2014-08-07 | Applitools Ltd. | System and method for visual segmentation of application screenshots |
US20140115456A1 (en) * | 2012-09-28 | 2014-04-24 | Oracle International Corporation | System for accessing software functionality |
US9069604B2 (en) * | 2013-03-04 | 2015-06-30 | Yagi Corp. | Activity interruption management |
JP5599537B1 (en) | 2013-07-31 | 2014-10-01 | 楽天株式会社 | Insurance application system, insurance application method, program and information storage medium |
US9471912B2 (en) * | 2014-02-06 | 2016-10-18 | Verto Analytics Oy | Behavioral event measurement system and related method |
US9129327B1 (en) * | 2014-02-18 | 2015-09-08 | Splendid Labs, Inc. | Screenshot-based e-commerce |
US20160191338A1 (en) * | 2014-12-29 | 2016-06-30 | Quixey, Inc. | Retrieving content from an application |
US9767091B2 (en) * | 2015-01-23 | 2017-09-19 | Microsoft Technology Licensing, Llc | Methods for understanding incomplete natural language query |
-
2015
- 2015-02-23 US US14/629,242 patent/US10671954B2/en active Active
-
2016
- 2016-02-16 GB GB1712664.0A patent/GB2550524A/en not_active Withdrawn
- 2016-02-16 EP EP16708541.4A patent/EP3262577A1/en not_active Withdrawn
- 2016-02-16 DE DE112016000860.0T patent/DE112016000860T5/en active Pending
- 2016-02-16 WO PCT/US2016/018079 patent/WO2016137781A1/en active Application Filing
- 2016-02-16 CN CN201680011423.0A patent/CN107257983B/en active Active
- 2016-02-16 KR KR1020177026921A patent/KR101984252B1/en active IP Right Grant
- 2016-02-16 JP JP2017544601A patent/JP2018511118A/en active Pending
- 2016-02-16 CN CN202110284585.4A patent/CN113128947A/en active Pending
-
2020
- 2020-04-28 US US16/860,314 patent/US20200258022A1/en active Pending
Patent Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20070192174A1 (en) * | 2005-12-30 | 2007-08-16 | Bischoff Brian J | Monitoring task performance |
US20070166672A1 (en) * | 2006-01-03 | 2007-07-19 | General Electric Company | System and method for just-in-time training in software applications |
KR20140056753A (en) * | 2012-10-31 | 2014-05-12 | 에스케이플래닛 주식회사 | Apparatus and method for syntactic parsing based on syntactic preprocessing |
Cited By (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
KR20210002724A (en) * | 2018-05-07 | 2021-01-08 | 구글 엘엘씨 | Deciding whether to automatically resume the 1st automation assistant session when the 2nd session interrupt is interrupted |
US20220108696A1 (en) | 2018-05-07 | 2022-04-07 | Google Llc | Determining whether to automatically resume first automated assistant session upon cessation of interrupting second session |
US11830491B2 (en) | 2018-05-07 | 2023-11-28 | Google Llc | Determining whether to automatically resume first automated assistant session upon cessation of interrupting second session |
Also Published As
Publication number | Publication date |
---|---|
US20160247110A1 (en) | 2016-08-25 |
DE112016000860T5 (en) | 2017-11-09 |
GB2550524A (en) | 2017-11-22 |
KR101984252B1 (en) | 2019-05-30 |
WO2016137781A1 (en) | 2016-09-01 |
CN113128947A (en) | 2021-07-16 |
CN107257983A (en) | 2017-10-17 |
GB201712664D0 (en) | 2017-09-20 |
US20200258022A1 (en) | 2020-08-13 |
US10671954B2 (en) | 2020-06-02 |
CN107257983B (en) | 2021-03-26 |
JP2018511118A (en) | 2018-04-19 |
EP3262577A1 (en) | 2018-01-03 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
KR101984252B1 (en) | Optional reminders to allow you to complete interrupted tasks | |
US20200334420A1 (en) | Contextual language generation by leveraging language understanding | |
US11379529B2 (en) | Composing rich content messages | |
EP3513534B1 (en) | Proactive provision of new content to group chat participants | |
US10642830B2 (en) | Context aware chat history assistance using machine-learned models | |
Turner et al. | Interruptibility prediction for ubiquitous systems: conventions and new directions from a growing field | |
CN108370347B (en) | Predictive response method and system for incoming communications | |
EP3433729B1 (en) | Contextual task shortcuts | |
Iqbal et al. | Disruption and recovery of computing tasks: field study, analysis, and directions | |
TWI390894B (en) | Positioning and rendering notification heralds based on user's focus of attention and activity | |
US11586341B2 (en) | Structured response summarization of electronic messages | |
US20190347621A1 (en) | Predicting task durations | |
US11665010B2 (en) | Intelligent meeting recording using artificial intelligence algorithms | |
CN113454666A (en) | Prediction and support for email deferral | |
CN107111633B (en) | Context-based inference of saved locations | |
US20160313910A1 (en) | Method and device for organizing a plurality of items on an electronic device | |
WO2022265799A1 (en) | Smart notifications based upon comment intent classification | |
US20230033536A1 (en) | Automatic performance of computer action(s) responsive to satisfaction of machine-learning based condition(s) | |
US11775324B2 (en) | Automated content switching rule for controlling access to interactive content on a computing device | |
US20240104510A1 (en) | Reduced user availability |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
A201 | Request for examination | ||
E902 | Notification of reason for refusal | ||
E701 | Decision to grant or registration of patent right |
WO2019036080A1 - Constrained motion field estimation for inter prediction - Google Patents
Constrained motion field estimation for inter prediction Download PDFInfo
- Publication number
- WO2019036080A1 WO2019036080A1 PCT/US2018/032599 US2018032599W WO2019036080A1 WO 2019036080 A1 WO2019036080 A1 WO 2019036080A1 US 2018032599 W US2018032599 W US 2018032599W WO 2019036080 A1 WO2019036080 A1 WO 2019036080A1
- Authority
- WO
- WIPO (PCT)
- Prior art keywords
- frame
- block
- motion vector
- current
- reference frame
- Prior art date
Links
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
- H04N19/513—Processing of motion vectors
- H04N19/517—Processing of motion vectors by encoding
- H04N19/52—Processing of motion vectors by encoding by predictive encoding
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
- H04N19/523—Motion estimation or motion compensation with sub-pixel accuracy
Definitions
- Digital video streams may represent video using a sequence of frames or still images.
- Digital video can be used for various applications including, for example, video conferencing, high definition video entertainment, video advertisements, or sharing of user- generated videos.
- a digital video stream can contain a large amount of data and consume a significant amount of computing or communication resources of a computing device for processing, transmission, or storage of the video data.
- Various approaches have been proposed to reduce the amount of data in video streams, including encoding or decoding techniques.
- a method for coding a current block of a current frame includes identifying the current block as a projection of a first reference block of a first reference frame onto the current frame.
- the projection uses a first motion vector of the first reference block with respect to a second reference frame.
- the method also includes determining a temporal motion vector candidate for the current block by projecting the current block onto a third reference frame.
- the temporal motion vector candidate identifies a second reference block in the third reference frame.
- the method also includes selecting a motion vector from a motion vector candidate list, generating a prediction block using the selected motion vector, and coding the current block using the prediction block.
- An apparatus for decoding a current block of a current frame includes a processor configured to execute instructions stored in a non-transitory memory.
- the instructions include instructions to select reference blocks of a first reference frame, where the reference blocks constitute a subset of blocks of the first reference frame, determine temporal motion vector candidates for the current block using respective motion vectors of the reference blocks, select a motion vector from a motion vector candidate list, generate a prediction block using the selected motion vector, and decode, from an encoded bitstream, the current block using the prediction block.
- Another aspect is an apparatus for decoding an encoded block of an encoded frame processed in processing units according to an implementation of this disclosure comprises a processor configured to execute instructions stored in a non-transitory memory.
- the instructions include instructions to select motion vectors corresponding to blocks of an extended collocated processing unit in a first reference frame, identify a block of the blocks, such that the encoded block is a projection, using a motion vector of the block, onto the encoded frame, and, on a condition that a block is identified, determine a temporal motion vector candidate for the encoded block in a second reference frame using a motion vector of the identified block, and add the temporal motion vector candidate to a motion vector candidate list.
- the instructions also include instructions to select a motion vector from the motion vector candidate list, generate a prediction block using the selected motion vector, and decode the encoded block using the prediction block.
- Another aspect is an apparatus for coding a current block of a current frame, the apparatus comprising a processor configured to execute instructions stored in a non-transitory memory.
- the instructions include instructions to identify the current block as a projection of a first reference block of a first reference frame onto the current frame, wherein the projection uses a first motion vector of the first reference block with respect to a second reference frame; determine a temporal motion vector candidate for the current block by projecting the current block onto a third reference frame, wherein the temporal motion vector candidate identifies a second reference block in the third reference frame; select a motion vector from a motion vector candidate list; generate a prediction block using the selected motion vector; and code the current block using the prediction block.
- FIG. 1 is a schematic of a video encoding and decoding system.
- FIG. 2 is a block diagram of an example of a computing device that can implement a transmitting station or a receiving station.
- FIG. 3 is a diagram of a video stream to be encoded and subsequently decoded.
- FIG. 4 is a block diagram of an encoder according to implementations of this disclosure.
- FIG. 5 is a block diagram of a decoder according to implementations of this disclosure.
- FIG. 6 is a flowchart diagram of an example of a technique for encoding or decoding a video block using dynamic motion vector referencing.
- FIG. 7 is an illustration of an example of data used to indicate a display order of video frames of a video sequence.
- FIG. 8 is a diagram of an example of using a motion trajectory for a current frame to predict motion of a current block.
- FIG. 9 is a diagram of an example of using multiple motion trajectories to predict motion of a current block.
- FIG. 10 is a flowchart diagram of an example of a technique for coding a current block of a current frame according to an implementation of this disclosure.
- FIG. 11 is a diagram of projecting motion vectors of blocks of a reference frame onto a current frame according to implementations of this disclosure.
- FIG. 12 is a diagram of a motion vector referencing region for a processing unit according to implementations of this disclosure.
- FIG. 13 is a flowchart diagram of an example of a technique for decoding an encoded block of an encoded frame according to an implementation of this disclosure.
- Video compression schemes may include breaking respective images, or video frames, into smaller portions, such as video blocks, and generating an encoded bitstream using techniques to limit the information included for respective video blocks thereof.
- the encoded bitstream can be decoded to re-create the source images from the limited information.
- Encoding or decoding a video block can include predicting motion within that video block, such as with respect to one or more other video blocks in the same video frame or in a different video frame.
- Encoding a video stream, or a portion thereof, such as a frame or a block can include using temporal or spatial similarities in the video stream to improve coding efficiency.
- a current block of a video stream may be encoded based on identifying a difference (residual) between the previously coded pixel values, or between a combination of previously coded pixel values, and those in the current block.
- Intra prediction can attempt to predict the pixel values of a block of a frame of a video stream using pixels peripheral to the block; that is, using pixels that are in the same frame as the block but that are outside the block.
- a prediction block resulting from intra prediction is referred to herein as an intra predictor.
- Intra prediction can be performed along a direction of prediction where each direction can correspond to an intra prediction mode. The intra prediction mode can be signalled by an encoder to a decoder.
- a prediction block resulting from intra prediction is referred to herein as intra predictor.
- Inter prediction can attempt to predict the pixel values of a block using a possibly displaced block or blocks from a temporally nearby frame (i.e., reference frame) or frames.
- a temporally nearby frame is a frame that appears earlier or later in time in the video stream than the frame of the block being encoded.
- a prediction block resulting from inter prediction is referred to herein as inter predictor.
- a motion vector used to generate a prediction block refers to a frame other than a current frame, i.e., a reference frame. Reference frames can be located before or after the current frame in the sequence of the video stream. Some codecs use up to eight reference frames, which can be stored in a frame buffer.
- the motion vector can refer to (i.e., use) one of the reference frames of the frame buffer. For a current block being encoded or decoded (i.e., a coding block), the motion vector describes a vertical offset and a horizontal offset in the reference frame of a collocated reference block.
- Two predictor blocks can be combined to form a compound predictor for a block or region of a video image.
- a compound predictor can be created by combining two or more predictors determined using, for example, the aforementioned prediction methods (i.e., inter and/or intra prediction).
- a compound predictor can be combination of a first predictor and a second predictor which can be two intra predictors (i.e., intra+intra), an intra predictor and an inter predictor (i.e., intra+inter) or two inter predictors (i.e., inter+inter).
- compound inter prediction can employ a first motion vector to obtain a predictor from a first reference frame, and a second motion vector to obtain a predictor from a second reference frame.
- the reference frames can both be in the past, both in the future, or some combination thereof.
- the second motion vector can be independent of, or derived from, the first motion vector.
- compound prediction can employ a first predictor generated by an intra prediction operation and a second predictor generated by an inter prediction operation.
- a prediction block is generated and can be subtracted from the block to be encoded to form the residual block representing the difference between the blocks.
- Encoding a current block in a compressed bitstream can mean encoding the residual of the current block in the compressed bitstream.
- Decoding a current block from a compressed bitstream can mean decoding the residual of the current block from the compressed bitstream.
- a search is performed for a reference block in the reference frame.
- the reference block can be used for generating a prediction block.
- the search for the reference block is typically performed in a relatively small window around the collocated block of the coding block.
- inter-prediction may be largely limited to tracking consistent and slow motion activities from one frame (e.g., a reference frame) to another (e.g., a coding frame).
- motion trajectories with high velocities can present difficulty (e.g., sub-optimal compression performance) for codecs that use motion vector referencing systems (i.e., inter-prediction). That is, predicting the motion within a video block can be complicated by changes in the speed of motion, such as over multiple video frames in a video sequence. For example, an object moving between a series of consecutive frames may move more quickly between video frames of a first half of that series and more slowly between video frames of a second half of that series. Similarly, different portions of a frame, such as a block of the frame, can exhibit the same behavior. Different blocks of a frame can have different trajectories between consecutive frames.
- Implementations according to this disclosure use motion field estimation to improve the compression performance of objects and/or blocks of a frame that exhibit motion trajectories with high velocities.
- motion field estimation refers to the projection of the motion vectors of reference blocks from a reference frame to build a set of motion trajectories that go through the current coding frame. While a linear projection is described herein, any mapping (i.e., projection) from a frame to another can be used. Motion field estimation can be used to trace the motion trajectory of blocks in the current coding frame to estimate their motion vectors. As described herein, a current frame (i.e., a frame being coded) can have available multiple reference frames.
- the coding of a current frame using motion field estimation can start by projecting (i.e., intersecting) the blocks of one reference frame onto the current frame to find a corresponding projected current block.
- the projected current block can then be projected onto the current block's other reference frames. The intersection can be performed for all the reference frames of the current coding frame.
- Information indicating a display order of the video frames of that series may be useful in determining which of the video frames may be used to predict motion within a given video block. However, that information is not typically made available to a decoder.
- a decoder implemented according to this disclosure can receive via, e.g., header information (encoded by an encoder) syntax information from which the decoder can determine the display order of the received frames.
- header information encoded by an encoder
- relative frame distances can be directly derived from the syntax information.
- Implementations of this disclosure can also include using a dynamic motion vector referencing to predict motion within video blocks of a video sequence to be encoded or decoded.
- the dynamic motion vector referencing selects one motion vector from a list of spatial and/or temporal motion vector candidates to predict motion within a video block.
- the motion vector candidates may be determined, for example, based on a motion trajectory indicated between one or more reference frames of the video sequence and a current frame including the video block to encode or decode.
- the motion trajectory is determined based on a reference motion vector used for encoding or decoding one or more reference frames of the current frame.
- One or more temporal motion vector candidates are then determined for predicting motion within the video block based on the motion trajectory.
- a motion vector is selected from a motion vector candidate list including the one or more temporal motion vector candidates and used to generate a prediction block.
- the prediction block is then used to encode or decode the video block.
- the motion trajectory is based on an order of video frames indicated by frame offset values encoded to a bitstream.
- the motion vector candidate list may include one or more spatial motion vector candidates.
- the coding of a current frame using motion field estimation can start by projecting (i.e., intersecting) the blocks of one or more reference frames onto the current frame to find corresponding projected current blocks.
- projecting a reference block of the reference frame onto the current frame uses the motion vector of the reference block.
- the motion vector information of the reference block is used in the projection operation.
- motion vector information of reference blocks are retained so that they can subsequently be used in the projecting of current blocks.
- the motion vector information can be retained in a low-cost and high-capacity memory, such as dynamic random-access memory (DRAM).
- DRAM dynamic random-access memory
- motion vector information of reference blocks can be retrieved from the DRAM into a faster but more expensive memory, such as static random-access memory (SRAM).
- SRAM static random-access memory
- Implementations according to this disclosure can include limiting the reference motion vector information that is used in generating temporal motion vector candidates by limiting the projection of a reference block onto the current block to be within a certain range. Limiting the projections to be within a certain range results in limiting the motion vector information that is retrieved from DRAM into SRAM.
- a current frame is typically encoded in processing units. The range can relate to the size of the processing unit.
- Projecting a block means projecting the offset (i.e., row and col offsets) identified by the motion vector associated with the block.
- Projecting a motion vector means projecting the offset (i.e., row and col offsets) identified by the motion vector that is associated with the block.
- motion field estimation as described herein can result in compression improvements.
- the motion field estimation herein is particularly beneficial for hardware efficiency, but can be adapted to software-implemented codecs.
- FIG. 1 is a schematic of a video encoding and decoding system 100.
- a transmitting station 102 can be, for example, a computer having an internal configuration of hardware such as that described in FIG.
- the processing of the transmitting station 102 can be distributed among multiple devices.
- a network 104 can connect the transmitting station 102 and a receiving station 106 for encoding and decoding of the video stream.
- the video stream can be encoded in the transmitting station 102, and the encoded video stream can be decoded in the receiving station 106.
- the network 104 can be, for example, the Internet.
- the network 104 can also be a local area network (LAN), wide area network (WAN), virtual private network (VPN), cellular telephone network, or any other means of transferring the video stream from the transmitting station 102 to, in this example, the receiving station 106.
- the receiving station 106 in one example, can be a computer having an internal configuration of hardware such as that described in FIG. 2. However, other suitable implementations of the receiving station 106 are possible. For example, the processing of the receiving station 106 can be distributed among multiple devices.
- a video stream can be encoded and then stored for transmission at a later time to the receiving station 106 or any other device having memory.
- the receiving station 106 receives (e.g., via the network 104, a computer bus, and/or some communication pathway) the encoded video stream and stores the video stream for later decoding.
- a real-time transport protocol RTP
- a transport protocol other than RTP may be used, e.g., a Hypertext Transfer Protocol (HTTP) based video streaming protocol).
- HTTP Hypertext Transfer Protocol
- the transmitting station 102 and/or the receiving station 106 may include the ability to both encode and decode a video stream as described below.
- the receiving station 106 could be a video conference participant who receives an encoded video bitstream from a video conference server (e.g., the transmitting station 102) to decode and view and further encodes and transmits his or her own video bitstream to the video conference server for decoding and viewing by other participants.
- FIG. 2 is a block diagram of an example of a computing device 200 that can implement a transmitting station or a receiving station.
- the computing device 200 can implement one or both of the transmitting station 102 and the receiving station 106 of FIG. 1.
- the computing device 200 can be in the form of a computing system including multiple computing devices, or in the form of one computing device, for example, a mobile phone, a tablet computer, a laptop computer, a notebook computer, a desktop computer, and the like.
- a processor 202 in the computing device 200 can be a conventional central processing unit.
- the processor 202 can be another type of device, or multiple devices, capable of manipulating or processing information now existing or hereafter developed.
- the disclosed implementations can be practiced with one processor as shown (e.g., the processor 202), advantages in speed and efficiency can be achieved by using more than one processor.
- a memory 204 in computing device 200 can be a read only memory (ROM) device or a random access memory (RAM) device in an implementation. However, other suitable types of storage device can be used as the memory 204.
- the memory 204 can include code and data 206 that is accessed by the processor 202 using a bus 212.
- the memory 204 can further include an operating system 208 and application programs 210, the application programs 210 including at least one program that permits the processor 202 to perform the techniques described herein.
- the application programs 210 can include applications 1 through N, which further include a video coding application that performs the techniques described herein.
- the computing device 200 can also include a secondary storage 214, which can, for example, be a memory card used with a mobile computing device.
- the video communication sessions may contain a significant amount of information, they can be stored in whole or in part in the secondary storage 214 and loaded into the memory 204 as needed for processing.
- the computing device 200 can also include one or more output devices, such as a display 218.
- the display 218 may be, in one example, a touch sensitive display that combines a display with a touch sensitive element that is operable to sense touch inputs.
- the display 218 can be coupled to the processor 202 via the bus 212.
- Other output devices that permit a user to program or otherwise use the computing device 200 can be provided in addition to or as an alternative to the display 218.
- the output device is or includes a display
- the display can be implemented in various ways, including by a liquid crystal display (LCD), a cathode-ray tube (CRT) display, or a light emitting diode (LED) display, such as an organic LED (OLED) display.
- LCD liquid crystal display
- CRT cathode-ray tube
- LED light emitting diode
- OLED organic LED
- the computing device 200 can also include or be in communication with an image-sensing device 220, for example, a camera, or any other image-sensing device 220 now existing or hereafter developed that can sense an image such as the image of a user operating the computing device 200.
- the image-sensing device 220 can be positioned such that it is directed toward the user operating the computing device 200.
- the position and optical axis of the image-sensing device 220 can be configured such that the field of vision includes an area that is directly adjacent to the display 218 and from which the display 218 is visible.
- the computing device 200 can also include or be in communication with a sound- sensing device 222, for example, a microphone, or any other sound-sensing device now existing or hereafter developed that can sense sounds near the computing device 200.
- the sound-sensing device 222 can be positioned such that it is directed toward the user operating the computing device 200 and can be configured to receive sounds, for example, speech or other utterances, made by the user while the user operates the computing device 200.
- FIG. 2 depicts the processor 202 and the memory 204 of the computing device 200 as being integrated into one unit, other configurations can be utilized.
- the operations of the processor 202 can be distributed across multiple machines (wherein individual machines can have one or more processors) that can be coupled directly or across a local area or other network.
- the memory 204 can be distributed across multiple machines such as a network-based memory or memory in multiple machines performing the operations of the computing device 200.
- the bus 212 of the computing device 200 can be composed of multiple buses.
- the secondary storage 214 can be directly coupled to the other components of the computing device 200 or can be accessed via a network and can comprise an integrated unit such as a memory card or multiple units such as multiple memory cards.
- the computing device 200 can thus be implemented in a wide variety of configurations.
- FIG. 3 is a diagram of an example of a video stream 300 to be encoded and subsequently decoded.
- the video stream 300 includes a video sequence 302.
- the video sequence 302 includes a number of adjacent frames 304. While three frames are depicted as the adjacent frames 304, the video sequence 302 can include any number of adjacent frames 304.
- the adjacent frames 304 can then be further subdivided into individual frames, for example, a frame 306.
- the frame 306 can be divided into a series of planes or segments 308.
- the segments 308 can be subsets of frames that permit parallel processing, for example.
- the segments 308 can also be subsets of frames that can separate the video data into separate colors.
- a frame 306 of color video data can include a luminance plane and two chrominance planes.
- the segments 308 may be sampled at different resolutions.
- the frame 306 may be further subdivided into blocks 310, which can contain data corresponding to, for example, 16x16 pixels in the frame 306.
- the blocks 310 can also be arranged to include data from one or more segments 308 of pixel data.
- the blocks 310 can also be of any other suitable size such as 4x4 pixels, 8x8 pixels, 16x8 pixels, 8x16 pixels, 16x16 pixels, or larger. Unless otherwise noted, the terms block and macroblock are used interchangeably herein.
- FIG. 4 is a block diagram of an encoder 400 according to implementations of this disclosure.
- the encoder 400 can be implemented, as described above, in the transmitting station 102, such as by providing a computer software program stored in memory, for example, the memory 204.
- the computer software program can include machine instructions that, when executed by a processor such as the processor 202, cause the transmitting station 102 to encode video data in the manner described in FIG. 4.
- the encoder 400 can also be implemented as specialized hardware included in, for example, the transmitting station 102. In one particularly desirable implementation, the encoder 400 is a hardware encoder.
- the encoder 400 has the following stages to perform the various functions in a forward path (shown by the solid connection lines) to produce an encoded or compressed bitstream 420 using the video stream 300 as input: an intra/inter prediction stage 402, a transform stage 404, a quantization stage 406, and an entropy encoding stage 408.
- the encoder 400 may also include a reconstruction path (shown by the dotted connection lines) to reconstruct a frame for encoding of future blocks.
- the encoder 400 has the following stages to perform the various functions in the reconstruction path: a dequantization stage 410, an inverse transform stage 412, a reconstruction stage 414, and a loop filtering stage 416.
- Other structural variations of the encoder 400 can be used to encode the video stream 300.
- respective adjacent frames 304 can be processed in units of blocks.
- respective blocks can be encoded using intra-frame prediction (also called intra- prediction) or inter- frame prediction (also called inter-prediction).
- intra-frame prediction also called intra- prediction
- inter-prediction also called inter-prediction
- a prediction block can be formed.
- intra-prediction a prediction block may be formed from samples in the current frame that have been previously encoded and reconstructed.
- inter-prediction a prediction block may be formed from samples in one or more previously constructed reference frames.
- the prediction block can be subtracted from the current block at the intra/inter prediction stage 402 to produce a residual block (also called a residual).
- the transform stage 404 transforms the residual into transform coefficients in, for example, the frequency domain using block-based transforms.
- the quantization stage 406 converts the transform coefficients into discrete quantum values, which are referred to as quantized transform coefficients, using a quantizer value or a quantization level. For example, the transform coefficients may be divided by the quantizer value and truncated.
- the quantized transform coefficients are then entropy encoded by the entropy encoding stage 408.
- the entropy-encoded coefficients, together with other information used to decode the block (which may include, for example, syntax elements such as used to indicate the type of prediction used, transform type, motion vectors, a quantizer value, or the like), are then output to the compressed bitstream 420.
- the compressed bitstream 420 can be formatted using various techniques, such as variable length coding (VLC) or arithmetic coding.
- VLC variable length coding
- the compressed bitstream 420 can also be referred to as an encoded video stream or encoded video bitstream, and the terms will be used interchangeably herein.
- the reconstruction path (shown by the dotted connection lines) can be used to ensure that the encoder 400 and a decoder 500 (described below with respect to FIG. 5) use the same reference frames to decode the compressed bitstream 420.
- the reconstruction path performs functions that are similar to functions that take place during the decoding process (described below with respect to FIG. 5), including dequantizing the quantized transform coefficients at the dequantization stage 410 and inverse transforming the dequantized transform coefficients at the inverse transform stage 412 to produce a derivative residual block (also called a derivative residual).
- the prediction block that was predicted at the intra/inter prediction stage 402 can be added to the derivative residual to create a reconstructed block.
- the loop filtering stage 416 can be applied to the reconstructed block to reduce distortion such as blocking artifacts.
- a non-transform based encoder can quantize the residual signal directly without the transform stage 404 for certain blocks or frames.
- an encoder can have the quantization stage 406 and the dequantization stage 410 combined in a common stage.
- FIG. 5 is a block diagram of a decoder 500 according to implementations of this disclosure.
- the decoder 500 can be implemented in the receiving station 106, for example, by providing a computer software program stored in the memory 204.
- the computer software program can include machine instructions that, when executed by a processor such as the processor 202, cause the receiving station 106 to decode video data in the manner described in FIG. 5.
- the decoder 500 can also be implemented in hardware included in, for example, the transmitting station 102 or the receiving station 106.
- the decoder 500 similar to the reconstruction path of the encoder 400 discussed above, includes in one example the following stages to perform various functions to produce an output video stream 516 from the compressed bitstream 420: an entropy decoding stage 502, a dequantization stage 504, an inverse transform stage 506, an intra/inter prediction stage 508, a reconstruction stage 510, a loop filtering stage 512, and a deblocking filtering stage 514.
- stages to perform various functions to produce an output video stream 516 from the compressed bitstream 420 includes in one example the following stages to perform various functions to produce an output video stream 516 from the compressed bitstream 420: an entropy decoding stage 502, a dequantization stage 504, an inverse transform stage 506, an intra/inter prediction stage 508, a reconstruction stage 510, a loop filtering stage 512, and a deblocking filtering stage 514.
- Other structural variations of the decoder 500 can be used to decode the compressed bitstream 420.
- the data elements within the compressed bitstream 420 can be decoded by the entropy decoding stage 502 to produce a set of quantized transform coefficients.
- the dequantization stage 504 dequantizes the quantized transform coefficients (e.g., by multiplying the quantized transform coefficients by the quantizer value), and the inverse transform stage 506 inverse transforms the dequantized transform coefficients to produce a derivative residual that can be identical to that created by the inverse transform stage 412 in the encoder 400.
- the decoder 500 can use the intra/inter prediction stage 508 to create the same prediction block as was created in the encoder 400 (e.g., at the intra/inter prediction stage 402).
- the prediction block can be added to the derivative residual to create a reconstructed block.
- the loop filtering stage 512 can be applied to the reconstructed block to reduce blocking artifacts.
- Other filtering can be applied to the reconstructed block.
- the deblocking filtering stage 514 is applied to the reconstructed block to reduce blocking distortion, and the result is output as the output video stream 516.
- the output video stream 516 can also be referred to as a decoded video stream, and the terms will be used interchangeably herein.
- Other variations of the decoder 500 can be used to decode the compressed bitstream 420. In some implementations, the decoder 500 can produce the output video stream 516 without the deblocking filtering stage 514.
- FIG. 6 is a flowchart diagram of an example of a technique 600 for encoding or decoding a video block using dynamic motion vector referencing.
- the technique 600 and other techniques described herein can be implemented, for example, as a software program that may be executed by computing devices such as the transmitting station 102 or the receiving station 106.
- the software program can include machine-readable instructions that may be stored in a memory such as the memory 204 or the secondary storage 214, and that, when executed by a processor, such as the processor 202, may cause the computing device to perform the technique 600.
- the technique 600 can be implemented using specialized hardware or firmware.
- some computing devices may have multiple memories or processors, and the operations described in the techniques described herein can be distributed using multiple processors, memories, or both.
- a motion trajectory is determined.
- the motion trajectory is a trajectory of motion between video frames of a video sequence including a current video block to encode or decode.
- the motion trajectory can, for example, show the motion of an object from a first reference frame to a current video frame including the current video block, and then from the current video frame to a second reference frame, such as where the first reference frame is a past frame with respect to the current video frame (e.g., such that the second reference frame comes before the current video frame in a display order) or a future frame with respect to that current video frame (e.g., such that the second reference frame comes after the current video frame in the display order).
- the motion trajectory indicates how one or more objects move or other motion occurs between the video frames based on a path of the motion from one of the video frames to one or more of the others.
- the motion trajectory may be based on or otherwise indicative of a display order of the video sequence.
- the display order of the video sequence is known to an encoder performing the technique 600 based on the input video stream received by the encoder.
- a decoder performing the technique 600 does not receive an input video stream and therefore is not typically aware of the display order of the video sequence it decodes. Instead, the decoder receives an encoded bitstream indicating a coding order of the video sequence.
- the display order and the coding order for a video sequence are typically different.
- a display order for a video sequence including eight frames may be 1, 2, 3, 4, 5, 6, 7, and 8.
- a coding order for that video sequence may, for example, instead be 1, 5, 4, 6, 3, 7, 8, and 2, such as where a hierarchical framework is used for encoding and decoding the frames of the video sequence.
- the encoder and the decoder may both know which reference frames of the video sequence are usable for encoding or decoding the current video block; however, without further information being provided to the decoder, the decoder cannot leverage information about the display order of the video sequence to decode the current video block.
- the frames of a video may be grouped into groups of pictures (GOPs).
- Each group of pictures (GOP) can include a number of frames (e.g., 8 or 16 frames). Coding a frame of a GOP can use frames that are prior (i.e., past frames) or subsequent (i.e., future frames) to the frame in the display order in the GOP. For example, given the coding sequence above (i.e., 1, 5, 4, 6,
- coding the fourth frame uses the past frame 1 and the future frame 5.
- Certain video frames included in the coding order may not be included in the display order. Such video frames, referred to as alternative reference frames, are decoded, but not displayed as part of an output video sequence. Instead, alternative reference frames remain in the reference frame buffer for use in predicting motion in video blocks of video frames that are output for display.
- An encoder may encode one or more syntax elements to a bitstream to indicate the locations of alternative reference frames in a coding order for a video sequence.
- a decoder can decode those one or more syntax elements to determine to use an alternative reference frame from the reference frame buffer rather than use a frame for display.
- Data usable to determine the display order of the video sequence may be received by a decoder to determine the display order of the video sequence to decode the current video block. That data may include one or more frame offset values that indicate respective locations of video frames in a display order of a video sequence.
- a frame offset value for a video frame is determined based on a frame index for that video frame and a number of packet stamps after which the video frame will be displayed.
- the frame index of a video frame reflects the location of that video frame in a display order, as known to the encoder (e.g., based on an input video stream received for encoding by the encoder).
- the encoder determines the frame indexes of the video frames in the video sequence being encoded.
- the first frame in the display order of the video sequence has an index of 1, and the Nth frame in that display order has an index of N.
- the next video frame to be encoded may be a video frame located in the middle of the video sequence.
- the data indicative of the encoded video frame can be stored in a packet.
- a packet includes information about one or more video frames of a video sequence. One of those video frames is a displayable video frame to be displayed subsequent to decoding using a decoder. The others of those video frames are reference frames used to decode the video frame to be displayed.
- the number of jumps for a packet reflects the number of video frames that have to be decoded by a decoder in order to display the displayable video frame, such as by outputting the displayable video frame to an output video stream. For example, when a decoder receives a packet including N video frames, the decoder decodes the first N-l video frames and uses those as reference frames for decoding the Nth video frame, which Nth video frame is then output for display.
- the number of packet stamps for a packet indicates the total number of video frames displayed after that packet has been decoded.
- the encoder can determine the number of packet stamps based on the number of reference frames used to encode a given video frame.
- the frame offset value is calculated as the difference between the frame index and the number of packet stamps. For example, for a video frame having a frame index of 1 and 1 packet stamp, the frame offset value is 0. In another example, for a video frame having a frame index of 8 and 2 packet stamps, the frame offset value is 6. In yet another example, for a video frame having a frame index of 2 and 2 packet stamps, the frame offset value is 0. Examples of relationships between frame indexes, numbers of packet stamps, and frame offset values are described below with respect to FIG. 7.
- the motion trajectory is determined for the current video frame based on a reference motion vector used for coding one or more reference frames of the current video frame.
- the reference motion vector may be a motion vector indicating or otherwise used to predict motion between one of reference frames usable to predict motion of the current video block and a reference frame used to encode or decode one or more video blocks in that one of the reference frames.
- the order of those reference frames for predicting motion therebetween can be indicated to an encoder based on an input video stream and to a decoder based on frame offset values. Based on that order, a linear interpolation can be performed using the reference motion vector against a reference frame usable for encoding or decoding the current video block and a reference frame used for encoding or decoding that reference frame.
- Performing the linear interpolation against those frames can include projecting a group of pixels of one reference frame from a location of that reference frame to a location within another reference frame.
- a 4x4 or 8x8 block of pixels located at a position within a first reference frame can be projected to a position within a second reference frame.
- the first reference frame is a reference frame used to encode or decode one or more video blocks of the second reference frame
- the second reference frame is a reference frame usable to predict motion of the current video block.
- the first reference frame may be a past frame and the second reference frame may be a future frame.
- There may be one or more other reference frames intermediate to the first reference frame and the current video frame. Examples of motion trajectories are described below with respect to FIGS. 8 and 9.
- Determining the reference motion vector can include processing regions of a first reference frame usable to predict motion within the current video block.
- processing the regions of the first reference frame can include comparing different groups of pixel values (e.g., 4x4 blocks, 8x8 blocks, or the like) of the first reference frame to same- dimensioned groups of pixel values in a second reference frame used to predict the motion of the first reference frame.
- encoding or decoding a current frame may first include processing some or all 4x4, 8x8, or other-dimensioned blocks within some or all reference frames usable to predict motion within that current frame.
- the reference motion vector is projected to the current video frame to determine where the motion trajectory fits within the current video frame.
- the location of the current video frame at which the motion trajectory fits the current video frame is the location of the current video block.
- Block_Row RefMV.row * (IstRefFrame - CurrFrame) / (IstRefFrame - 2ndRefFrame)
- Block_Col RefMV.col * (IstRefFrame - CurrFrame) / (IstRefFrame - 2ndRefFrame).
- one or more temporal motion vector candidates are determined for predicting motion within the current video block based on the motion trajectory.
- the temporal motion vector candidates define a motion field estimate for current video block.
- the motion field estimate refers to the current video block and one or more other regions of the video frame including the current video block (e.g., 4x4, 8x8, or other-sized regions adjacent to or otherwise surrounding the current video block within the current video frame).
- the motion field estimate includes one or more temporal motion vectors indicating motion between the current video frame, one or more first reference frames usable to predict motion of the current video block of the current video frame, one or more second reference frames usable to predict motion of video blocks of those one or more first reference frames, or the like, or a combination thereof.
- Each of the temporal motion vectors may, for example, refer to the motion of a group of N pixels (e.g., a 4x4 block, an 8x8 block, or the like) from a location in one video frame to a location in another video frame.
- a temporal motion vector candidate is determined based on the location of the current video block, determined above using the reference motion vector. Determining the first temporal motion vector candidate includes performing a linear interpolation against a first reference frame and the current video frame based on the location of the current video block within the current video frame.
- Block_Col RefMV.col * (CurrFrame - IstRefFrame) / (IstRefFrame - 2ndRefFrame).
- Multiple temporal motion vector candidates can be determined in this way, such as based on the number of reference frames used.
- a motion vector to use for encoding or decoding the current video block is selected.
- the selected motion vector is selected from a motion vector candidate list including the one or more temporal motion vector candidates determined based on the motion trajectory.
- Selecting the motion vector to use for the encoding or the decoding includes determining rate-distortion values resulting from predicting motion within the current video block using motion vector candidates of the motion vector candidate list.
- the motion vector candidates of the motion vector candidate list may, for example, include the one or more temporal motion vector candidates determined based on the motion trajectory.
- the motion vector candidate list may, for example, include only the one or more temporal motion vector candidates determined based on the motion trajectory.
- a rate-distortion value refers to a ratio that balances an amount of distortion (e.g., a loss in video quality) with rate (e.g., a number of bits) for coding a block or other video component.
- the rate-distortion values may, for example, be determined by performing a rate- distortion analysis against ones of the temporal motion vector candidates of the motion vector candidate list (and/or other motion vector candidates as may be included in that list). As a result of the rate-distortion analysis, the one of the motion vector candidates used to determine a lowest one of the rate-distortion values is identified, such as by comparing respective ones of the rate-distortion values. That motion vector candidate is then selected as the selected motion vector.
- the motion vector candidate list includes information indicative of the motion vector candidates usable to predict motion of the current video block.
- the motion vector candidate list may be a list stored or otherwise maintained in a buffer, table, database, or other data store or record, which list is updated whenever a new motion vector candidate is determined.
- the motion vector candidate list may be created subsequent to the determination of a first motion vector candidate and deleted subsequent to the selection of the selected motion vector.
- a prediction block is generated using the selected motion vector.
- the prediction block can include pixel values indicating a prediction of the motion of the current video block according to the selected motion vector.
- Generating the prediction block can include generating a prediction residual based on a difference between pixel values of the current video block and pixel values of the prediction block.
- the prediction residual can be generated using operations performed by the encoder 400 shown in FIG. 4 (e.g., at the intra/inter prediction stage 402).
- the prediction residual can be generated using operations performed by the decoder 500 shown in FIG. 5 (e.g., at the intra/inter prediction stage 508).
- the current video block is encoded or decoded using the prediction block.
- operations for encoding the current video block using the prediction block can include transforming, quantizing, and entropy encoding the prediction residual to an encoded bitstream (e.g., the compressed bitstream 420 shown in FIG. 4).
- operations for decoding the current video block using the prediction block can include reconstructing the video block based on the prediction residual, filtering the reconstructed video block, and outputting the filtered video block to a video stream (e.g., the output video stream 516 shown in FIG. 5).
- the technique 600 includes determining one or more spatial motion vector candidates based on one or more neighbor blocks of the current block.
- the one or more spatial motion vector candidates can include one or more motion vectors determined using intra-prediction.
- a spatial motion vector candidate can be determined based on motion predicted using an above-neighbor block of the current video block, a left-neighbor block of the current video block, or the like, or a combination thereof.
- the one or more spatial motion vector candidates may be organized into two different categories.
- a first category includes spatial motion vector candidates determined using one or more neighbor blocks immediately adjacent to the current video block.
- a second category includes spatial motion vector candidates determined using one or more neighbor blocks surrounding, but not immediately adjacent to, the current video block.
- a spatial motion vector candidate in the second category may be derived using a block that is two blocks away from the current video block.
- Spatial motion vectors in the first category may be prioritized over those in the second category. For example, if two different spatial motion vector candidates may both result in the same performance for predicting motion in the current video block, but each was from a different one of the two categories, the spatial motion vector candidate of the first category would be selected over the other.
- the one or more spatial motion vector candidates may be included in the motion vector candidate list that includes the one or more temporal motion vector candidates determined based on the motion trajectory.
- selecting the motion vector from the motion vector candidate list can include performing a rate-distortion analysis against one or more temporal motion vector candidates and one or more spatial motion vector candidates and selecting one of the temporal motion vector candidates or the spatial motion vector candidates as the selected motion vector.
- the technique 600 includes encoding one or more syntax elements to a bitstream to which the current block is encoded.
- the one or more syntax elements encoded to the bitstream may indicate of the selected motion vector, a display order of a video sequence including the current frame and the one or more reference frames, or the like, or a combination thereof.
- the one or more syntax elements may, for example, be encoded to a frame header of the current frame including the current video block.
- the one or more syntax elements used to indicate the display order of the video sequence can include four, five, or some other number of bits for indicating frame offset values of the video frames of the video sequence.
- the one or more syntax elements used to indicate the selected motion vector can include a number of bits for indicating a location within a reference frame of a block of pixels corresponding to the selected motion vector, an index of the selected motion vector within the motion vector candidate list, or the like, or a combination thereof.
- the number of bits can be based on the total number of motion vector candidates included in the motion vector candidate list. For example, when the motion vector candidate list includes two candidates, one bit can be used to indicate the selected motion vector (e.g., where each of the motion vector candidates is associated with one of the values of the bit, or by using a value of 1 to indicate the location of the block of pixels including the motion indicated by the selected motion vector). In another example, when the motion vector candidate list includes two candidates, two bits can be used.
- the one or more syntax elements used to indicate the selected motion vector can indicate context information associated with the selected motion vector.
- the one or more syntax elements may indicate whether that selected motion vector was derived from an above-neighbor block, a left-neighbor block, or a block surrounding but not immediately adjacent to the current video block.
- the one or more syntax elements may indicate whether the selected motion vector was derived from a first category of spatial motion vector candidates or a second category of spatial motion vector candidates.
- At least one of the one or more syntax elements indicates a frame offset value for the current frame, which frame offset value indicates a location of the current frame in a video sequence.
- the syntax elements indicating the frame offset value can include a number of bits based on the number of look-ahead frames used by the encoder and decoder. For example, when the number of look- ahead frames is 16, four bits may be used to indicate the frame offset value. In another example, when the number of look-ahead frames is 32, five bits may be used to indicate the frame offset value.
- the technique 600 when performed during operations for decoding a current video block, includes decoding one or more syntax elements from a bitstream including an encoded frame to decode.
- the one or more syntax elements decoded from the bitstream may indicate a frame offset value for the encoded video frame.
- the one or more syntax elements decoded from the bitstream may indicate a motion vector selected for encoding the encoded block during operations for encoding the block.
- the technique 600 can include determining that the motion vector selected during the operations for decoding the video block corresponds to the motion vector indicated by the one or more decoded syntax elements.
- the motion vector indicated within the bitstream can be compared to the selected motion vector.
- the comparing may include comparing motion vector indexes for each of the selected and indicated motion vectors, comparing blocks of pixels at locations within one or more reference frames as indicated by each of the selected and indicated motion vectors, or the like, or a combination thereof.
- selecting the motion vector during decoding operations can include determining multiple motion vector candidates (e.g., temporal and/or spatial) and then comparing the determined motion vector candidates to the motion vector indicated in a bitstream including the encoded block and encoded video frame. For example, responsive to identifying that one of the determined motion vector candidates is the motion vector indicated in the bitstream, the decoder can select that identified motion vector candidate.
- multiple motion vector candidates e.g., temporal and/or spatial
- the technique 600 includes updating a probability model associated with the video frame or the video sequence to indicate the motion vector selected for predicting the motion of the current video block.
- the probability model can be updated to reflect the probability of a particular motion vector (e.g., based on index), a particular type of motion vector (e.g., temporal or spatial), or context information for the motion vector (e.g., a neighbor block associated with the motion vector) being selected.
- Each of the encoder and decoder can maintain their own probability models.
- motion vectors other than the one or more temporal motion vector candidates or the one or more spatial motion vector candidates may be included in the motion vector candidate list.
- the motion vector candidate list can include the reference motion vector used to determine the motion trajectory.
- the motion vector candidate list can include a motion vector used to predict a collocated block within a neighbor video frame of the current video frame.
- FIG. 7 is an illustration of an example of data used to indicate a display order of video frames of a video sequence.
- a table 700 includes a coding order, a frame index, a number of packet stamps, and a frame offset value for each of a plurality of video frames of a video sequence to encode or decode.
- the coding order includes spaces between codings of frames, such as between 5 and 6 and after 8. These spaces indicate when an alternative reference frame is encoded or decoded, as applicable.
- the frame index indicates the alternative reference frame used for those spaces. For example, the video frame located 3rd in the display order of the video sequence is encoded or decoded, as applicable, between 5 and 6 in the coding order. There is no frame offset value for these spaces since there is no video frame to display.
- an encoder can encode, and a decoder can decode, syntax information that enable a decoder to determine the relative distance between a current coding frame from any of its reference frames.
- Frames are sent by an encoder (e.g., encoded in a bistream) and received by a decoder (e.g., decoded from the bitstream) in packets.
- Each packet can have a packet stamp.
- the packet having the packet stamp of two (2) includes the frames 8, 5, 3, and 2.
- the syntax information can include a packet stamp and a frame offset value.
- the packet stamp can be included in the packet header.
- the frame offset value can be included in the header of a frame.
- the packet stamp can indicate the frame number to be displayed. Frames in a packet that do not correspond to the packet stamp can be decoded and used as reference frame (i.e., added to the reference frame buffer). Only frames corresponding to the packet stamp are displayed.
- the frame offset value can indicate after how many packet stamps, a frame will be displayed.
- the frame index corresponds to the frame display order.
- the decoder will display the frame 704 since its frame offset value is zero (0), which indicates that this is the frame to be displayed.
- a decoded and displayed frame can also be added to the reference frame buffer.
- the first frame in the GOP can be decoded and displayed first.
- the first packet for the GOP can have a packet stamp of 1 and can include only the first frame.
- the frame offset value of the frame 706 is zero indicating that the frame is to be decoded and displayed.
- a decoder can determine the frame indexes. Using the frame indexes, the frame distance between any two frames can be calculated. The frame distances and/or the frame indexes can be used in performing the linear projections.
- FIG. 8 is a diagram of an example of using a motion trajectory for a current frame 800 to predict motion of a current block 802.
- the motion trajectory shows motion between the current frame 800 and three reference frames 804, 806, and 808.
- the motion trajectory is determined based on a reference motion vector 810, which indicates motion between the reference frame 0 806 and the reference frame 1 804.
- the reference frame 0 806 may be a reference frame used to predict motion of one or more blocks of the reference frame 804.
- the motion trajectory is determined as the trajectory corresponding to the direction of the reference motion vector 810.
- the motion trajectory identifies the current block 802 as the location of the current frame 800 intersected by the motion trajectory.
- a first temporal motion vector candidate 812 may then be determined as indicating motion between the reference frame 1 804 and the current frame 800.
- a second temporal motion vector candidate 814 may be determined as indicating motion between the reference frame 2 808 and the current frame 800.
- One or more of the reference motion vector 810, the first temporal motion vector candidate 812, or the second temporal motion vector candidate 814 may be included in a motion vector candidate list from which a motion vector is selected for predicting motion of the current block 802.
- the reference frame 0 806 and the reference frame 2 808 are shown as past frames with respect to the current frame 800.
- the reference frame 1 804 is shown as a future frame with respect to the current frame 800.
- other numbers of past or future reference frames may be used.
- a motion trajectory can be determined where there is one past reference frame and one future reference frame.
- a motion trajectory can be determined where there is one past frame and two future reference frames.
- a motion trajectory can be determined where there are two or more past reference frames and two or more future reference frames.
- motion information associated with blocks of a reference frame can be used to perform linear projections of blocks of a current frame in order to estimate the motion field of the current frame. That is, the motion information associated with blocks of the reference frame can be used to estimate the motion information (i.e., the motion field) of some blocks of the current frame.
- a block can be predicted using inter prediction.
- a type and the motion vector associated with each coding block can be retained (i.e., saved).
- the type can be associated with a frame rather than with each block of the frame.
- the type can indicate which reference frame(s) is (are) used to code blocks of the frame. As such, the type can indicate which reference frame a motion vector points to and the motion vector indicates the offset within the reference frame.
- the type and motion vector information (collectively, the motion information) can be retained for blocks of size 4x4, 8x8, or some other same-dimensioned block sizes.
- the prediction type and motion vector information associated with blocks of the reference frame 1 804 can be retained.
- the reference motion vector 810 and a type indicating the reference frame 806 are retained for a block 816 of the reference frame 1 804.
- the reference frame 1 804 can be used as a reference frame for the current frame 800.
- the retained information of the blocks of the reference frame 1 804 can be used to perform linear projections to estimate the motion field of the current frame 800.
- the motion field of the current frame means the collective motions fields of blocks of the current frame.
- FIG. 9 is a diagram of an example of using multiple motion trajectories to predict motion of a current block.
- the motion trajectory shown in and described with respect to FIG. 8 has a constant slope from the past-most reference frame to the future-most reference frame and thus indicates that the motion between the video frames thereof occurs at a constant rate. However, this may not always be the case, such as where motion speeds up or slows down between video frames.
- a current frame 900 includes a current block 902 to encode or decode.
- a collocated block 904 at a preceding reference frame 2 906 may be used to predict motion of the current block 902.
- the corresponding motion trajectory may not intersect the current block 902 such that the collocated block 904 may not be used.
- a first motion trajectory 908 from a past- most reference frame 0 910 to a future-most reference frame 1 912 intersects the current frame 900 slightly above the current block 902.
- a motion field estimate for the current block 902 can be used, such as to identify motion from the collocated block 904 within an extended region of the current block 902 (e.g., a group of one or more 4x4, 8x8, or other-dimensioned blocks surrounding the current block 902 within the current frame 900).
- the extended region may be defined based on the locations within the current frame 900 of objects from one or more of the reference frames 906, 910, 912, such as where the motion of those objects is indicated using one or more temporal motion vector candidates.
- the motion field estimate may, for example, reflect the locations of all motion within the current frame 900 with respect to the available reference frames.
- the motion field estimate may be used to determine a second motion trajectory 914 from the reference frame 0 910 to the reference frame 1 912.
- the second motion trajectory 914 intersects the current frame 900 at the current block 902.
- a motion vector candidate associated with the second motion trajectory 914 may more accurately predict motion of the current block 902 itself than a motion vector candidate associated with the first motion trajectory 908.
- FIG. 10 is a flowchart diagram of an example of a technique 1000 for coding a current block of a current frame according to an implementation of this disclosure.
- the technique 1000 can be implemented, for example, as a software program that may be executed by computing devices such as the transmitting station 102 or the receiving station 106.
- the software program can include machine-readable instructions that may be stored in a memory such as the memory 204 or the secondary storage 214, and that, when executed by a processor, such as the processor 202, may cause the computing device to perform the technique 1000.
- the technique 1000 can be implemented using specialized hardware or firmware. As explained above, some computing devices may have multiple memories or processors, and the operations described in the technique 1000 can be distributed using multiple processors, memories, or both.
- the technique 1000 can be implemented by an encoder, such as the encoder 400 of FIG.4. When implemented by an encoder, coding means encoding in an encoded bitstream, such as the compressed bitstream 420 of FIG. 4.
- the technique 1000 can be implemented by a decoder, such as the decoder 500 of FIG. 5.
- coding means decoding from an encoded bitstream, such as the compressed bitstream 420 of FIG. 5.
- the technique 1000 can receive a frame to be coded, such as the frame 304 of FIG. 3.
- "receive" means to select, construct, determine, identify, specify or other receive in any manner whatsoever.
- the technique 1000 can, as described with respect to FIG. 3, partition the frame into blocks 310.
- the current block can be one of the blocks 310.
- the technique 1000 can receive one of the blocks 310 as the current block.
- the technique 1000 when implemented by an encoder, the technique 1000 can receive a current frame to be encoded (also referred to as coding frame or a current frame).
- the technique 1000 can partition the frame into blocks or into other partitions that include blocks and select one of the blocks for encoding.
- the technique 1000 can receive the block to be encoded.
- the technique 1000 can select or identify a current block to be decoded.
- the technique 1000 can retain motion information for each block that is predicted using a motion vector.
- the block size can be 4x4, 8x8, or any other block size.
- the retained motion information includes that the reference frame 0 806 is the reference frame used for the block 816.
- the retained motion information also includes the reference motion vector 810. If a block of a frame is not predicted using a motion vector (e.g., a block predicted using intra or intra+intra compound prediction), then the reference frame type is invalid. In the following description, projection (i.e., interesection) is skipped for those blocks with invalid motion information (i.e., block with an invalid reference frame type).
- the linear projection is performed to determine where the motion vector of a reference block intersects the current frame. The intersection identifies the current block as the projection of the reference block.
- the projection operation results in a derived motion vector for the current block.
- the block 816 is projected onto the current frame using the reference motion vector 810.
- the projection operation results in a predicted motion vector.
- a motion vector contains two components, namely, a row value and a column value that represent the spatial offset from the collocated block in a reference frame.
- the reference motion vector 810 includes, as described with respect to 602 of FIG. 6, a RefMV.row and a RefMV.col. Assuming, as shown in FIG. 8, that the current frame 800 and three reference frames 804, 806, and 808 have, respectively, the frame indexes X, C, C_R0, and A, then the predicted motion vector can be determined using equation (1
- Block_Row and Block_Col identify the position of a block in the current frame. For example, if RefMV.row and RefMV.col correspond to a top left corner of a block in the reference frame, then Block_Row and Block_Col also correspond to the top left corner of a block in the current frame.
- the calculated values Block_Row and Block_Col may not align with a block boundary of the current frame.
- the Block_Row and Block_Col are rounded such that the result of the projection aligns with a block of the current frame.
- the blocks 310 of a frame form a block grid.
- Rounding the Block_Row and Block_Col causes the projection onto the current frame to align with the block grid. For example, if the current frame is processed in 4x4 units, then the projection is rounded to align to the nearest 4x4 block, such as by rounding to the nearest multiple of 4. As another example, if the current frame is processed in 8x8 units, then the projection is rounded to align to the nearest 8x8 block.
- the technique 1000 identifies the current block as a projection of a first reference block of a first reference frame onto the current frame.
- identify means to select, construct, determine, specify or other identify in any manner whatsoever.
- the projection uses a first motion vector of the reference block with respect to a second reference frame.
- the current block can be the current block 802, which is identified as a projection of the block 816 (i.e., first reference block) of the reference frame 1 804 (i.e., the first reference frame) onto the current frame 800.
- the projection uses the reference motion vector 810 (i.e., the first motion vector), which is the motion vector of the block 816 with respect to the reference frame 0 806 (i.e., the second reference frame).
- the current block 802 is the projection of the block 816 onto the current frame 800 along the motion vector 810 of the block 816.
- the motion vector 810 of the block 816 intersects the current frame 800 at the current block 802.
- the technique 1000 determines a temporal motion vector candidate for the current block by projecting the first motion vector onto a third reference frame.
- “determine” means to select, construct, identify, specify or other determine in any manner whatsoever.
- the temporal motion vector candidate identifies a second reference block in the third reference frame.
- the current frame can have available multiple reference frames.
- the technique 1000 can project the current block onto one, more than one, or all of the available reference frames to identify one or more second reference blocks (i.e., one or more temporal motion vector candidates).
- the current block 802 (or in some implementations, the block 816) may be projected onto the reference frame 808 along the motion vector 810 of the block 816.
- the block 818 is the projection of the current block 802 (or in some implementations, the block 816) onto the reference frame 808 along the motion vector 810 of the block 816.
- the motion vector 810 of the block 816 intersects the reference frame 808 at the block 818.
- the temporal motion vector candidate 814 for the current block 802 may be a motion vector from the current block 802 to the block 818.
- the temporal motion vector candidate 814 for the current block 802 may be in the direction of (i.e. may be parallel to) the motion vector 810 of the block 816.
- the technique 1000 projects the magnitude of the first motion vector onto a third reference frame to identify a temporal motion vector candidate.
- the temporal motion vector candidate in turn identifies (e.g., points to) the second reference block.
- the technique 1000 can identify the second reference block (i.e., a block 818) by determining the temporal motion vector candidate (i.e., the second temporal motion vector candidate 814) that points to the second reference block in the third reference frame (e.g., the reference frame 808) using equation (2):
- MV_0 can be the second temporal motion vector candidate 814
- X, A, C, and C_R0 are the frame indexes of the current frame 800 and the reference frames 808, 804, and 806, respectively.
- a temporal motion vector candidate e.g., the second temporal motion vector candidate 814) for the current block can be determined by projecting a reference block onto a third reference frame (i.e., the reference frame 808) to determine a temporal motion vector candidate. That is a temporal motion vector candidate can be determined using respective display positions of the encoded frame (e.g., X), a first reference frame (e.g., C), and the third reference frame (e.g., A).
- the temporal motion vector candidate can be added to the motion vector candidate list. Projecting the reference block onto the second reference frame can use the respective motion vector of the reference block with respect to a third reference frame, a frame index of the current frame, a first reference index of the first reference frame, and a second frame index of the second reference frame.
- MV_1 can be the first temporal motion vector candidate 812
- X, C, and C_R0 are the frame indexes of the current frame 800 and the reference frames 804 and 806, respectively.
- Some codecs perform motion compensated (i.e., inter) prediction at the sub-pixel (i.e., sub-pel) level. That is, a motion vector may point to a location that is between pixels of blocks in the reference frame. This may be referred to as sub-pixel resolution. Examples of sub-pixel resolutions include 1/4 sub-pel and 1/8 sub-pel resolutions. Other resolutions are possible. Other codecs may not allow sub-pixel motion compensation and the motion vectors align with full pixels (also called integer pixels). As such, a codec can allow predefined sub- pixel locations.
- the technique 1000 can include aligning a result of the projecting (e.g., the second temporal motion vector candidate 814) such that the second reference block (e.g., the block 818) aligns with a predefined sub-pixel location of the second reference frame.
- the temporal motion vector candidate is rounded to the nearest 1/8* sub-pixel location.
- the technique 1000 can go through all the blocks that have valid motion information within each reference frame of a current frame to estimate the motion field for the entire current frame in the unit of a certain block size.
- the unit size can be 4x4, 8x8, or any other size.
- the technique 1000 selects a motion vector from a motion vector candidate list, can generate a prediction block using the selected motion vector, and encode the current block using the prediction block, respectively.
- the motion vector candidate list from which the motion vector is selected may include the one or more temporal motion vector candidates determined at 1004.
- the technique 1000 can include encoding, in an encoded bitstream, such as the compressed bitstream 420 of FIG. 4, a packet.
- the packet can include the current frame and a packet stamp that indicates whether the current frame is to be displayed by a decoder when packets having the packet stamp are received.
- the technique 1000 can include decoding, from an encoded bitstream, such as the compressed bitstream 420 of FIG. 5, a packet that includes the current frame and a packet stamp, the packet stamp indicating whether the current frame is to be displayed when packets having the packet stamp are received
- the first reference block is within a range of the current block. That is, the motion vector projection can be constrained to be within a range.
- the range can be limited in the horizontal direction, the vertical direction, or both directions as described with respect to FIGS. 11 and 12.
- FIG. 11 is a diagram 1100 of projecting motion vectors of blocks of a reference frame onto a current frame according to implementations of this disclosure.
- the diagram 1100 includes the reference frame 1 804 and the current frame 800 of FIG. 8.
- the motion vector of the block 816 is projected onto the current frame 800, the motion vector of the block 816 intersecting the current frame 800 at the current block 802.
- the current block 802 can be identified as a projection of the block 816.
- the diagram 1100 also includes a processing unit 1106 (i.e., a processing unit of the encoded frame) and a collocated region 1114 in the reference frame 1 804.
- the processing unit can be a 64x64 unit.
- a codec processes a frame in processing units.
- a processing unit can include multiple blocks. For example, if the processing unit is processed in 4x4 blocks, then the processing unit can include 16 current blocks, and if the processing unit is processed in 8x8 blocks, then the processing unit can include eight (8) current blocks.
- a codec can process the blocks of the processing unit in raster scan order.
- blocks of a reference frame e.g., the reference frame 1 804 that are associated with motion vectors are projected (e.g., via a linear projection) onto the current frame.
- the projection operation may be performed for each 4x4, 8x8, or any other predetermined block resolution (i.e., block size) of the reference frame.
- the predetermined block resolution can be dependent on the codec hardware implementation.
- the blocks of a processing unit in the current block can be identified as projected from any block of the reference frame.
- the current block 802 is identified as being projected from the block 816 (as is also shown in FIG. 8)
- a block 1109 is identified as being projected from a block 1110
- a block 1113 is identified as being projected from a block 1112.
- a current block of a current frame can be projected from any block of a reference frame.
- the motion vector of any of the blocks of the reference frame may be needed.
- the motion vectors of all the blocks of the reference frame that have associated motion vectors are to be moved from, e.g., DRAM to a cache, such as SRAM.
- the amount of data that is transferred from DRAM or SRAM can be limited by selecting reference blocks that constitute a subset of the blocks of the first reference frame. Selecting reference blocks is equivalent to selecting the motion vectors associated with those selected reference blocks. In an implementation, selecting the subset of the blocks of the reference frame can be via constraining the motion vector projection as described below. Temporal motion vector candidates for the current block can then be determined using respective motion vectors of the reference blocks that are selected.
- Constraining the motion vector projection can reduce the amount of data transferred from DRAM to SRAM. Constraining the motion vector projections can ensure that a motion field motion vector associated with a given coding block (i.e., a current block) position is projected from a reference motion vector originated from an extended collocated region in the reference frame. The extended region is limited in vertical and horizontal offset as described below.
- the constraint in the vertical direction can be of the same or different size than the constraint in the horizontal direction.
- the motion vector projection can be contained to (-32, 32) pixel range in height (i.e., the vertical direction) and (-64, 64) pixel range in width (i.e., the horizontal direction).
- An example of constraining the motion vector projection is now given. Assume that a motion vector is given by the row and column offsets (10, 15) and assume further that a projection of this motion vector results in a projection of (43, 30). As 43-10 (e.g., 43 minus 10) is greater than the acceptable range (i.e., 10 + 32), the projection is deemed out of range.
- constraining the motion vector projection can mean that if the absolute difference between the calculated Block_Row and the
- RefMV.row is greater than 32 pixels (i.e.,
- the current block 802 is not identified as a projection of the block 816 (i.e., a first reference block) of a first reference frame onto the current frame (i.e., the current frame 800).
- the technique 1000 can be used to load only the needed reference motion vectors for a processing unit (e.g., a processing unit of size 64x64) from DRAM to SRAM.
- the loaded reference motion vectors can be used to process the linear projection ahead of each 64x64 block coding (i.e., encoding or decoding). That is, before coding the blocks of the processing unit 1106, the motion vectors that are loaded are those that resulted in valid motion vector projections of blocks of the processing unit 1106.
- the linear projection can use at most three (3) reference frames, namely, a first reference frame that is the immediate last reference frame to the current frame and two (2) reference frames from the nearest frames ahead of the current frame.
- the projection operation amounts to an interpolation operation.
- only one (1) motion vector is loaded per 4x4 block for each of the two (2) future frames.
- the last of the two future frames can use compound prediction.
- a block of the last of the two future frames can include, in the case of inter+inter prediction, two motion vectors that can both be projected onto (i.e., interested with) the current frame.
- the two motion vectors from the past reference frame can be used.
- the number of reference motion vectors needed (i.e., copied from DRAM) per 64x64 processing unit can be given by total number of pixels divided by the coding block size (i.e., block resolution).
- the total number of pixels can be giving by equation (4):
- the linear projections of blocks can be operated independently. As such, it is possible to use single instruction, multiple data (SIMD) optimization in software-implemented codecs.
- SIMD single instruction, multiple data
- a coding scheme for motion estimation can use up to seven (7) reference frames: 4 in the past and 3 ahead. As described above, in an implementation, motion field estimation uses the nearest reference frames. This results in a maximum amount of motion vector frame storage in a GOP to be 1 in the past and 3 ahead for a total of 4 reference frames. However, more reference frames can be used.
- FIG. 12 can be used to describe Height Pixels and Width Pixels.
- FIG. 12 is a diagram of a motion vector referencing region 1200 for a processing unit according to implementations of this disclosure.
- the motion vector referencing region 1200 is the region in a reference frame the motion vectors of which are used for the projection operation.
- the motion vector referencing region 1200 is also referred to as an extended collocated processing unit.
- FIG. 12 includes a collocated region 1202, such as the collocated region 1114 of FIG. 11 and a right region 1204 that is equal in size to the collocated region 1202.
- the collocated region 1202 can have the same size as the processing unit.
- a frame is processed is raster order.
- the technique 1000 completes processing the blocks of the collocated region 1202
- the right region 1204 (to the right of the collocated region 1202 and having a size equal to the processing unit) is processed next.
- the width value for a range e.g., + 64 pixels
- the height value e.g., + 32 pixels
- Width Pixels or pixels in the horizontal direction, can be given by the size of the processing unit (or the corresponding collocated region in the reference frame) and the number of pixels to the right and left of the collocated region as given by the range constraint in the horizontal direction.
- Width Pixels is equal to the horizontal length of the collocated region 1202, pixels of the right region 1204 corresponding to the region constraint of +64, and pixels of a left region corresponding to the region constraint of -64.
- FIG. 13 is a flowchart diagram of an example of a technique 1300 for decoding an encoded block of an encoded frame according to an implementation of this disclosure.
- the encoded frame is processed in processing units.
- the technique 1300 can be implemented, for example, as a software program that may be executed by computing devices such as the receiving station 106.
- the software program can include machine-readable instructions that may be stored in a memory such as the memory 204 or the secondary storage 214, and that, when executed by a processor, such as the processor 202, may cause the computing device to perform the technique 1000.
- the technique 1300 can be implemented using specialized hardware or firmware. As explained above, some computing devices may have multiple memories or processors, and the operations described in one or both of the technique 1000 can be distributed using multiple processors, memories, or both.
- the technique 1300 selects motion vectors corresponding to blocks of an extended collocated processing unit in a first reference frame.
- the extended collocated processing unit can be as described with respect to FIG. 12.
- the extended collocated processing unit extends the current processing unit in a range of -32 to +32 pixels in a height direction and a range of -64 to +64 pixels in a width direction.
- the technique 1300 identifies a block of the blocks, such that the encoded block is a projection, using a motion vector of the block, onto the encoded block. For example, the technique 1300 identifies the current block 802 (i.e., the encoded block) as a projection of the block 816 (i.e., the identified block of the blocks) using the reference motion vector 810 (i.e., the motion vector of the block). To identify the block, the technique 1300 can perform a motion field estimation as described above. For example, the block 816 can be identified as corresponding to the motion vector resulting in a projection using the equation 1 onto the encoded block.
- the encoded block may not be the result of any valid projection.
- the encoded block may be the result of an out-of-range projection.
- no motion vector projection of blocks of the reference frame may have interested with the encoded frame at the encoded block.
- the technique 1300 determines whether a block was identified. On a condition that a block is identified, the technique 1300 proceeds to 1308; otherwise the technique 1300 proceeds to 606.
- the technique 1300 determines a temporal motion vector candidate for the encoded block in a second reference frame using a motion vector of the identified block.
- the temporal motion vector candidate can be determined using the equation (2) and/or the equation (3).
- the temporal motion vector candidate can be further determined using the display positions of the encoded frame, the first reference frame, and the second reference frame.
- the display positions can be determined using header information that includes frame offset values and packet stamp values as described above.
- the technique 1300 adds the temporal motion vector candidate to a motion vector candidate list.
- the blocks 606, 608, and 610 can be as described with respect to FIG. 6.
- example is used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as “example” is not necessarily to be construed as being preferred or advantageous over other aspects or designs. Rather, use of the word “example” is intended to present concepts in a concrete fashion.
- the term “or” is intended to mean an inclusive “or” rather than an exclusive “or.” That is, unless specified otherwise or clearly indicated otherwise by the context, the statement "X includes A or B” is intended to mean any of the natural inclusive permutations thereof. That is, if X includes A; X includes B; or X includes both A and B, then "X includes A or B" is satisfied under any of the foregoing instances.
- Implementations of the transmitting station 102 and/or the receiving station 106 can be realized in hardware, software, or any combination thereof.
- the hardware can include, for example, computers, intellectual property (IP) cores, application- specific integrated circuits (ASICs), programmable logic arrays, optical processors, programmable logic controllers, microcode, microcontrollers, servers, microprocessors, digital signal processors, or any other suitable circuit.
- IP intellectual property
- ASICs application- specific integrated circuits
- programmable logic arrays optical processors
- programmable logic controllers programmable logic controllers
- microcode microcontrollers
- servers microprocessors, digital signal processors, or any other suitable circuit.
- signal processors digital signal processors
- the transmitting station 102 or the receiving station 106 can be implemented using a general purpose computer or general purpose processor with a computer program that, when executed, carries out any of the respective methods, algorithms, and/or instructions described herein.
- a special purpose computer/processor can be utilized which can contain other hardware for carrying out any of the methods, algorithms, or instructions described herein.
- the transmitting station 102 and the receiving station 106 can, for example, be implemented on computers in a video conferencing system. Alternatively, the transmitting station 102 can be implemented on a server, and the receiving station 106 can be
- the transmitting station 102 using an encoder 400, can encode content into an encoded video signal and transmit the encoded video signal to the server.
- the communications device can then decode the encoded video signal using a decoder 500.
- the communications device can decode content stored locally on the communications device, for example, content that was not transmitted by the transmitting station 102.
- Other suitable transmitting and receiving implementation schemes are available.
- the receiving station 106 can be a generally stationary personal computer rather than a portable communications device, and/or a device including an encoder 400 may also include a decoder 500.
- implementations of the present disclosure can take the form of a computer program product accessible from, for example, a computer-usable or computer-readable medium.
- a computer-usable or computer-readable medium can be any device that can, for example, tangibly contain, store, communicate, or transport the program for use by or in connection with any processor.
- the medium can be, for example, an electronic, magnetic, optical, electromagnetic, or semiconductor device. Other suitable mediums are also available.
- Example 1 A method for encoding a current block of a current frame, the method comprising: determining a motion trajectory for the current frame based on a reference motion vector used for encoding one or more reference frames of the current frame;
- determining one or more temporal motion vector candidates for predicting motion within the current block based on the motion trajectory selecting a motion vector from a motion vector candidate list including the one or more temporal motion vector candidates; generating a prediction block using the selected motion vector; and encoding the current block using the prediction block.
- Example 2 The method of Example 1, wherein determining the motion trajectory for the current frame based on the reference motion vector used for encoding the one or more reference frames of the current frame comprises: performing a linear interpolation against a first reference frame of the one or more reference frame and a reference frame used for encoding the first reference frame using the reference motion vector, the reference motion vector indicating motion between the first reference frame and the reference frame used for encoding the first reference frame.
- Example 3 The method of Example 2, wherein the linear interpolation is a first linear interpolation, wherein determining the one or more temporal motion vector candidates for predicting the motion within the current block based on the motion trajectory comprises: performing a second linear interpolation against the first reference frame and the current frame along the motion trajectory to determine a motion vector candidate of the temporal motion vector candidates, the motion vector candidate indicating motion between the current frame and the first reference frame.
- Example 4 The method of any of Examples 1 to 3, further comprising:
- the motion vector candidate list includes the one or more spatial motion vector candidates.
- Example 5 The method of Example 4, wherein selecting the motion vector from the motion vector candidate list including the one or more temporal motion vector candidates comprises: determining rate-distortion values resulting from predicting the motion within the current block using motion vector candidates of the motion vector candidate list, the motion vector candidates including the one or more temporal motion vector candidates and the one or more spatial motion vector candidates; and identifying one of the motion vector candidates used to determine a lowest one of the rate-distortion values.
- Example 6 The method of any of Examples 1 to 5, further comprising: encoding, to a bitstream to which the current block is encoded, one or more syntax elements indicative of at least one of the selected motion vector or a display order of a video sequence including the current frame and the one or more reference frames.
- Example 7 The method of Example 6, wherein at least one of the one or more syntax elements indicates a frame offset value for the current frame, wherein a location of the current frame in the display order of the video sequence is indicated by the frame offset value.
- Example 8 The method of Example 7, further comprising: determining the frame offset value based on a frame index for the current frame and a number of packet stamps associated with an encoding of the current frame.
- Example 9 A method for decoding an encoded block of an encoded frame, the method comprising: determining a motion trajectory for the encoded frame based on a reference motion vector used for decoding one or more reference frames of the encoded frame; determining one or more temporal motion vector candidates for predicting motion within the encoded block based on the motion trajectory; selecting a motion vector from a motion vector candidate list including the one or more temporal motion vector candidates; generating a prediction block using the selected motion vector; and decoding the encoded block using the prediction block.
- Example 10 The method of Example 9, wherein determining the motion trajectory for the encoded frame based on the reference motion vector used for decoding the one or more reference frames of the encoded frame comprises: performing a linear interpolation against a first reference frame of the one or more reference frame and a reference frame used for decoding the first reference frame using the reference motion vector, the reference motion vector indicating motion between the first reference frame and the reference frame used for decoding the first reference frame.
- Example 11 The method of Example 10, wherein the linear interpolation is a first linear interpolation, wherein determining the one or more temporal motion vector candidates for predicting the motion within the encoded block based on the motion trajectory comprises: performing a second linear interpolation against the first reference frame and the encoded frame using the reference motion vector to determine a motion vector candidate of the temporal motion vector candidates, the motion vector candidate indicating motion between the encoded frame and the first reference frame.
- Example 12 The method of any of Examples 9 to 11, further comprising:
- the motion vector candidate list includes the one or more spatial motion vector candidates.
- Example 13 The method of any of Examples 9 to 12, further comprising:
- decoding from a bitstream including the encoded frame, one or more syntax elements indicating a frame offset value for the encoded frame, wherein a location of the encoded frame in a display order of a video sequence is indicated by the frame offset value.
- Example 14 The method of any of Example 9 to 13, further comprising:
- decoding from a bitstream including the encoded frame, one or more syntax elements indicating a motion vector selected for encoding the encoded block; and determining that the selected motion vector corresponds to the motion vector indicated by the one or more decoded syntax elements.
- Example 15 An apparatus for decoding an encoded block of an encoded frame, the apparatus comprising: a processor configured to execute instructions stored in a non- transitory memory to: determine a motion trajectory for the encoded frame based on a reference motion vector used to decode one or more reference frames of the encoded frame; determine one or more temporal motion vector candidates for predicting motion within the encoded block based on the motion trajectory; select a motion vector from a motion vector candidate list including the one or more temporal motion vector candidates; generate a prediction block using the selected motion vector; and decode the encoded block using the prediction block.
- a processor configured to execute instructions stored in a non- transitory memory to: determine a motion trajectory for the encoded frame based on a reference motion vector used to decode one or more reference frames of the encoded frame; determine one or more temporal motion vector candidates for predicting motion within the encoded block based on the motion trajectory; select a motion vector from a motion vector candidate list including the one or more temporal motion vector candidates; generate a prediction block using the
- Example 16 The apparatus of Example 15, wherein the instructions to determine the motion trajectory for the encoded frame based on the reference motion vector used to decode the one or more reference frames of the encoded frame include instructions to:
- the reference motion vector indicative of motion between the first reference frame and the reference frame used to decode the first reference frame.
- Example 17 The apparatus of Example 16, wherein the linear interpolation is a first linear interpolation, wherein the instructions to determine the one or more temporal motion vector candidates for predicting the motion within the encoded block based on the motion trajectory include instructions to: perform a second linear interpolation against the first reference frame and the encoded frame using the reference motion vector to determine a motion vector candidate of the temporal motion vector candidates, the motion vector candidate indicative of motion between the encoded frame and the first reference frame.
- Example 18 The apparatus of any of Examples 15 to 17, wherein the instructions include instructions to: determine one or more spatial motion vector candidates based on one or more neighbor blocks of the encoded block, wherein the motion vector candidate list includes the one or more spatial motion vector candidates.
- Example 19 The apparatus of any of Examples 15 to 18, wherein the instructions include instructions to: decode, from a bitstream including the encoded frame, one or more syntax elements indicative of a frame offset value for the encoded frame, wherein a location of the encoded frame in a display order of a video sequence is indicated by the frame offset value.
- Example 20 The apparatus of any of Examples 15 to 19, wherein the instructions include instructions to: decode, from a bitstream including the encoded frame, one or more syntax elements indicative of a motion vector selected for encoding the encoded block; and determine that the selected motion vector corresponds to the motion vector indicated by the one or more decoded syntax elements.
Abstract
Motion field estimation is used to predict motion within video blocks. A current block of a current frame is identified as a projection of a first reference block of a first reference frame onto the current frame. The projection uses a first motion vector of the reference block with respect to a second reference frame. A temporal motion vector candidate is determined for the current block by projecting the current block onto a second reference frame. The temporal motion vector candidate identifies a second reference block. A motion vector selected from a motion vector candidate list is used to generate a prediction block using the selected motion vector. The current block is coded using the prediction block.
Description
CONSTRAINED MOTION FIELD ESTIMATION FOR INTER PREDICTION
BACKGROUND
[0001] Digital video streams may represent video using a sequence of frames or still images. Digital video can be used for various applications including, for example, video conferencing, high definition video entertainment, video advertisements, or sharing of user- generated videos. A digital video stream can contain a large amount of data and consume a significant amount of computing or communication resources of a computing device for processing, transmission, or storage of the video data. Various approaches have been proposed to reduce the amount of data in video streams, including encoding or decoding techniques.
SUMMARY
[0002] A method for coding a current block of a current frame according to an implementation of this disclosure includes identifying the current block as a projection of a first reference block of a first reference frame onto the current frame. The projection uses a first motion vector of the first reference block with respect to a second reference frame. The method also includes determining a temporal motion vector candidate for the current block by projecting the current block onto a third reference frame. The temporal motion vector candidate identifies a second reference block in the third reference frame. The method also includes selecting a motion vector from a motion vector candidate list, generating a prediction block using the selected motion vector, and coding the current block using the prediction block.
[0003] An apparatus for decoding a current block of a current frame according to an implementation of this disclosure includes a processor configured to execute instructions stored in a non-transitory memory. The instructions include instructions to select reference blocks of a first reference frame, where the reference blocks constitute a subset of blocks of the first reference frame, determine temporal motion vector candidates for the current block using respective motion vectors of the reference blocks, select a motion vector from a motion vector candidate list, generate a prediction block using the selected motion vector, and decode, from an encoded bitstream, the current block using the prediction block.
[0004] Another aspect is an apparatus for decoding an encoded block of an encoded frame processed in processing units according to an implementation of this disclosure comprises a processor configured to execute instructions stored in a non-transitory memory. The instructions include instructions to select motion vectors corresponding to blocks of an extended collocated processing unit in a first reference frame, identify a block of the blocks, such that the encoded block is a projection, using a motion vector of the block, onto the encoded frame, and, on a condition that a block is identified, determine a temporal motion vector candidate for the encoded block in a second reference frame using a motion vector of the identified block, and add the temporal motion vector candidate to a motion vector candidate list. The instructions also include instructions to select a motion vector from the motion vector candidate list, generate a prediction block using the selected motion vector, and decode the encoded block using the prediction block.
[0005] Another aspect is an apparatus for coding a current block of a current frame, the apparatus comprising a processor configured to execute instructions stored in a non-transitory memory. The instructions include instructions to identify the current block as a projection of a first reference block of a first reference frame onto the current frame, wherein the projection uses a first motion vector of the first reference block with respect to a second reference frame; determine a temporal motion vector candidate for the current block by projecting the current block onto a third reference frame, wherein the temporal motion vector candidate identifies a second reference block in the third reference frame; select a motion vector from a motion vector candidate list; generate a prediction block using the selected motion vector; and code the current block using the prediction block.
[0006] These and other aspects of the present disclosure are disclosed in the following detailed description of the embodiments, the appended claims and the accompanying figures.
BRIEF DESCRIPTION OF THE DRAWINGS
[0007] The description herein makes reference to the accompanying drawings described below, wherein like reference numerals refer to like parts throughout the several views.
[0008] FIG. 1 is a schematic of a video encoding and decoding system.
[0009] FIG. 2 is a block diagram of an example of a computing device that can implement a transmitting station or a receiving station.
[0010] FIG. 3 is a diagram of a video stream to be encoded and subsequently decoded.
[0011] FIG. 4 is a block diagram of an encoder according to implementations of this disclosure.
[0012] FIG. 5 is a block diagram of a decoder according to implementations of this disclosure.
[0013] FIG. 6 is a flowchart diagram of an example of a technique for encoding or decoding a video block using dynamic motion vector referencing.
[0014] FIG. 7 is an illustration of an example of data used to indicate a display order of video frames of a video sequence.
[0015] FIG. 8 is a diagram of an example of using a motion trajectory for a current frame to predict motion of a current block.
[0016] FIG. 9 is a diagram of an example of using multiple motion trajectories to predict motion of a current block.
[0017] FIG. 10 is a flowchart diagram of an example of a technique for coding a current block of a current frame according to an implementation of this disclosure.
[0018] FIG. 11 is a diagram of projecting motion vectors of blocks of a reference frame onto a current frame according to implementations of this disclosure.
[0019] FIG. 12 is a diagram of a motion vector referencing region for a processing unit according to implementations of this disclosure.
[0020] FIG. 13 is a flowchart diagram of an example of a technique for decoding an encoded block of an encoded frame according to an implementation of this disclosure.
DETAILED DESCRIPTION
[0021] Video compression schemes may include breaking respective images, or video frames, into smaller portions, such as video blocks, and generating an encoded bitstream using techniques to limit the information included for respective video blocks thereof. The encoded bitstream can be decoded to re-create the source images from the limited information. Encoding or decoding a video block can include predicting motion within that video block, such as with respect to one or more other video blocks in the same video frame or in a different video frame.
[0022] Encoding a video stream, or a portion thereof, such as a frame or a block, can include using temporal or spatial similarities in the video stream to improve coding efficiency. For example, a current block of a video stream may be encoded based on identifying a difference (residual) between the previously coded pixel values, or between a combination of previously coded pixel values, and those in the current block.
[0023] Encoding using spatial similarities can be known as intra prediction. Intra prediction can attempt to predict the pixel values of a block of a frame of a video stream
using pixels peripheral to the block; that is, using pixels that are in the same frame as the block but that are outside the block. A prediction block resulting from intra prediction is referred to herein as an intra predictor. Intra prediction can be performed along a direction of prediction where each direction can correspond to an intra prediction mode. The intra prediction mode can be signalled by an encoder to a decoder. A prediction block resulting from intra prediction is referred to herein as intra predictor.
[0024] Encoding using temporal similarities can be known as inter prediction. Inter prediction can attempt to predict the pixel values of a block using a possibly displaced block or blocks from a temporally nearby frame (i.e., reference frame) or frames. A temporally nearby frame is a frame that appears earlier or later in time in the video stream than the frame of the block being encoded. A prediction block resulting from inter prediction is referred to herein as inter predictor.
[0025] Inter prediction is performed using a motion vector. A motion vector used to generate a prediction block refers to a frame other than a current frame, i.e., a reference frame. Reference frames can be located before or after the current frame in the sequence of the video stream. Some codecs use up to eight reference frames, which can be stored in a frame buffer. The motion vector can refer to (i.e., use) one of the reference frames of the frame buffer. For a current block being encoded or decoded (i.e., a coding block), the motion vector describes a vertical offset and a horizontal offset in the reference frame of a collocated reference block.
[0026] Two predictor blocks can be combined to form a compound predictor for a block or region of a video image. A compound predictor can be created by combining two or more predictors determined using, for example, the aforementioned prediction methods (i.e., inter and/or intra prediction). For example, a compound predictor can be combination of a first predictor and a second predictor which can be two intra predictors (i.e., intra+intra), an intra predictor and an inter predictor (i.e., intra+inter) or two inter predictors (i.e., inter+inter). For example, in the case of inter+inter, compound inter prediction can employ a first motion vector to obtain a predictor from a first reference frame, and a second motion vector to obtain a predictor from a second reference frame. The reference frames can both be in the past, both in the future, or some combination thereof. The second motion vector can be independent of, or derived from, the first motion vector. As another example, and in the case of intra-inter, compound prediction can employ a first predictor generated by an intra prediction operation and a second predictor generated by an inter prediction operation.
[0027] In either case (i.e., intra, inter, or compound prediction), a prediction block is generated and can be subtracted from the block to be encoded to form the residual block representing the difference between the blocks. Encoding a current block in a compressed bitstream can mean encoding the residual of the current block in the compressed bitstream. Decoding a current block from a compressed bitstream can mean decoding the residual of the current block from the compressed bitstream.
[0028] As described above, some video coding systems exploit temporal motion vector correlation by using the motion vectors of the collocated block in the previously
reconstructed frame (described below) as the reference motion vector. In inter-prediction, a search is performed for a reference block in the reference frame. The reference block can be used for generating a prediction block. The search for the reference block is typically performed in a relatively small window around the collocated block of the coding block.
[0029] As such, the efficacy of inter-prediction may be largely limited to tracking consistent and slow motion activities from one frame (e.g., a reference frame) to another (e.g., a coding frame). In contrast, motion trajectories with high velocities can present difficulty (e.g., sub-optimal compression performance) for codecs that use motion vector referencing systems (i.e., inter-prediction). That is, predicting the motion within a video block can be complicated by changes in the speed of motion, such as over multiple video frames in a video sequence. For example, an object moving between a series of consecutive frames may move more quickly between video frames of a first half of that series and more slowly between video frames of a second half of that series. Similarly, different portions of a frame, such as a block of the frame, can exhibit the same behavior. Different blocks of a frame can have different trajectories between consecutive frames.
[0030] Implementations according to this disclosure use motion field estimation to improve the compression performance of objects and/or blocks of a frame that exhibit motion trajectories with high velocities.
[0031] For a current frame (i.e., a frame being coded or a coding frame), motion field estimation refers to the projection of the motion vectors of reference blocks from a reference frame to build a set of motion trajectories that go through the current coding frame. While a linear projection is described herein, any mapping (i.e., projection) from a frame to another can be used. Motion field estimation can be used to trace the motion trajectory of blocks in the current coding frame to estimate their motion vectors. As described herein, a current frame (i.e., a frame being coded) can have available multiple reference frames. As such, the coding of a current frame using motion field estimation can start by projecting (i.e.,
intersecting) the blocks of one reference frame onto the current frame to find a corresponding projected current block. The projected current block can then be projected onto the current block's other reference frames. The intersection can be performed for all the reference frames of the current coding frame.
[0032] Information indicating a display order of the video frames of that series may be useful in determining which of the video frames may be used to predict motion within a given video block. However, that information is not typically made available to a decoder.
Furthermore, there may be multiple different directions of motion between those video frames such that it is typically difficult to effectively identify the possible motion vectors to use to predict motion of a video block and select the most optimal of those motion vectors for the prediction.
[0033] To build a motion trajectory model (i.e., a projection from one frame onto another), the relative position of the reference frames with respect to the current frame can be useful. For example, a decoder implemented according to this disclosure can receive via, e.g., header information (encoded by an encoder) syntax information from which the decoder can determine the display order of the received frames. As such, relative frame distances can be directly derived from the syntax information.
[0034] Implementations of this disclosure can also include using a dynamic motion vector referencing to predict motion within video blocks of a video sequence to be encoded or decoded. The dynamic motion vector referencing selects one motion vector from a list of spatial and/or temporal motion vector candidates to predict motion within a video block. The motion vector candidates may be determined, for example, based on a motion trajectory indicated between one or more reference frames of the video sequence and a current frame including the video block to encode or decode.
[0035] The motion trajectory is determined based on a reference motion vector used for encoding or decoding one or more reference frames of the current frame. One or more temporal motion vector candidates are then determined for predicting motion within the video block based on the motion trajectory. A motion vector is selected from a motion vector candidate list including the one or more temporal motion vector candidates and used to generate a prediction block. The prediction block is then used to encode or decode the video block. The motion trajectory is based on an order of video frames indicated by frame offset values encoded to a bitstream. The motion vector candidate list may include one or more spatial motion vector candidates.
[0036] As mentioned above, the coding of a current frame using motion field estimation can start by projecting (i.e., intersecting) the blocks of one or more reference frames onto the current frame to find corresponding projected current blocks. As described below, projecting a reference block of the reference frame onto the current frame uses the motion vector of the reference block. Subsequently, when projecting a current block onto a second reference frame, the motion vector information of the reference block (from which the current block is projected) is used in the projection operation. As such, motion vector information of reference blocks are retained so that they can subsequently be used in the projecting of current blocks.
[0037] In a hardware-implemented codec, the motion vector information can be retained in a low-cost and high-capacity memory, such as dynamic random-access memory (DRAM). When performing the projection operation for a current block, motion vector information of reference blocks can be retrieved from the DRAM into a faster but more expensive memory, such as static random-access memory (SRAM). As SRAM is expensive and the bandwidth between DRAM and SRAM is limited, it is desirable to limit the amount of reference motion vector information that is required to determine temporal motion vector candidates for a current block.
[0038] Implementations according to this disclosure can include limiting the reference motion vector information that is used in generating temporal motion vector candidates by limiting the projection of a reference block onto the current block to be within a certain range. Limiting the projections to be within a certain range results in limiting the motion vector information that is retrieved from DRAM into SRAM. A current frame is typically encoded in processing units. The range can relate to the size of the processing unit.
[0039] Unless otherwise indicated, projecting a motion vector and projecting a block are used interchangeably herein. Projecting a block means projecting the offset (i.e., row and col offsets) identified by the motion vector associated with the block. Projecting a motion vector means projecting the offset (i.e., row and col offsets) identified by the motion vector that is associated with the block.
[0040] Using motion field estimation as described herein can result in compression improvements. The motion field estimation herein is particularly beneficial for hardware efficiency, but can be adapted to software-implemented codecs.
[0041] Further details of techniques for video coding are described herein with initial reference to a system in which they can be implemented. FIG. 1 is a schematic of a video encoding and decoding system 100. A transmitting station 102 can be, for example, a
computer having an internal configuration of hardware such as that described in FIG.
2. However, other implementations of the transmitting station 102 are possible. For example, the processing of the transmitting station 102 can be distributed among multiple devices.
[0042] A network 104 can connect the transmitting station 102 and a receiving station 106 for encoding and decoding of the video stream. Specifically, the video stream can be encoded in the transmitting station 102, and the encoded video stream can be decoded in the receiving station 106. The network 104 can be, for example, the Internet. The network 104 can also be a local area network (LAN), wide area network (WAN), virtual private network (VPN), cellular telephone network, or any other means of transferring the video stream from the transmitting station 102 to, in this example, the receiving station 106.
[0043] The receiving station 106, in one example, can be a computer having an internal configuration of hardware such as that described in FIG. 2. However, other suitable implementations of the receiving station 106 are possible. For example, the processing of the receiving station 106 can be distributed among multiple devices.
[0044] Other implementations of the video encoding and decoding system 100 are possible. For example, an implementation can omit the network 104. In another
implementation, a video stream can be encoded and then stored for transmission at a later time to the receiving station 106 or any other device having memory. In one implementation, the receiving station 106 receives (e.g., via the network 104, a computer bus, and/or some communication pathway) the encoded video stream and stores the video stream for later decoding. In an example implementation, a real-time transport protocol (RTP) is used for transmission of the encoded video over the network 104. In another implementation, a transport protocol other than RTP may be used, e.g., a Hypertext Transfer Protocol (HTTP) based video streaming protocol).
[0045] When used in a video conferencing system, for example, the transmitting station 102 and/or the receiving station 106 may include the ability to both encode and decode a video stream as described below. For example, the receiving station 106 could be a video conference participant who receives an encoded video bitstream from a video conference server (e.g., the transmitting station 102) to decode and view and further encodes and transmits his or her own video bitstream to the video conference server for decoding and viewing by other participants.
[0046] FIG. 2 is a block diagram of an example of a computing device 200 that can implement a transmitting station or a receiving station. For example, the computing device 200 can implement one or both of the transmitting station 102 and the receiving station 106
of FIG. 1. The computing device 200 can be in the form of a computing system including multiple computing devices, or in the form of one computing device, for example, a mobile phone, a tablet computer, a laptop computer, a notebook computer, a desktop computer, and the like.
[0047] A processor 202 in the computing device 200 can be a conventional central processing unit. Alternatively, the processor 202 can be another type of device, or multiple devices, capable of manipulating or processing information now existing or hereafter developed. For example, although the disclosed implementations can be practiced with one processor as shown (e.g., the processor 202), advantages in speed and efficiency can be achieved by using more than one processor.
[0048] A memory 204 in computing device 200 can be a read only memory (ROM) device or a random access memory (RAM) device in an implementation. However, other suitable types of storage device can be used as the memory 204. The memory 204 can include code and data 206 that is accessed by the processor 202 using a bus 212. The memory 204 can further include an operating system 208 and application programs 210, the application programs 210 including at least one program that permits the processor 202 to perform the techniques described herein. For example, the application programs 210 can include applications 1 through N, which further include a video coding application that performs the techniques described herein. The computing device 200 can also include a secondary storage 214, which can, for example, be a memory card used with a mobile computing device.
Because the video communication sessions may contain a significant amount of information, they can be stored in whole or in part in the secondary storage 214 and loaded into the memory 204 as needed for processing.
[0049] The computing device 200 can also include one or more output devices, such as a display 218. The display 218 may be, in one example, a touch sensitive display that combines a display with a touch sensitive element that is operable to sense touch inputs. The display 218 can be coupled to the processor 202 via the bus 212. Other output devices that permit a user to program or otherwise use the computing device 200 can be provided in addition to or as an alternative to the display 218. When the output device is or includes a display, the display can be implemented in various ways, including by a liquid crystal display (LCD), a cathode-ray tube (CRT) display, or a light emitting diode (LED) display, such as an organic LED (OLED) display.
[0050] The computing device 200 can also include or be in communication with an image-sensing device 220, for example, a camera, or any other image-sensing device 220
now existing or hereafter developed that can sense an image such as the image of a user operating the computing device 200. The image-sensing device 220 can be positioned such that it is directed toward the user operating the computing device 200. In an example, the position and optical axis of the image-sensing device 220 can be configured such that the field of vision includes an area that is directly adjacent to the display 218 and from which the display 218 is visible.
[0051] The computing device 200 can also include or be in communication with a sound- sensing device 222, for example, a microphone, or any other sound-sensing device now existing or hereafter developed that can sense sounds near the computing device 200. The sound-sensing device 222 can be positioned such that it is directed toward the user operating the computing device 200 and can be configured to receive sounds, for example, speech or other utterances, made by the user while the user operates the computing device 200.
[0052] Although FIG. 2 depicts the processor 202 and the memory 204 of the computing device 200 as being integrated into one unit, other configurations can be utilized. The operations of the processor 202 can be distributed across multiple machines (wherein individual machines can have one or more processors) that can be coupled directly or across a local area or other network. The memory 204 can be distributed across multiple machines such as a network-based memory or memory in multiple machines performing the operations of the computing device 200. Although depicted here as one bus, the bus 212 of the computing device 200 can be composed of multiple buses. Further, the secondary storage 214 can be directly coupled to the other components of the computing device 200 or can be accessed via a network and can comprise an integrated unit such as a memory card or multiple units such as multiple memory cards. The computing device 200 can thus be implemented in a wide variety of configurations.
[0053] FIG. 3 is a diagram of an example of a video stream 300 to be encoded and subsequently decoded. The video stream 300 includes a video sequence 302. At the next level, the video sequence 302 includes a number of adjacent frames 304. While three frames are depicted as the adjacent frames 304, the video sequence 302 can include any number of adjacent frames 304. The adjacent frames 304 can then be further subdivided into individual frames, for example, a frame 306. At the next level, the frame 306 can be divided into a series of planes or segments 308. The segments 308 can be subsets of frames that permit parallel processing, for example. The segments 308 can also be subsets of frames that can separate the video data into separate colors. For example, a frame 306 of color video data can include
a luminance plane and two chrominance planes. The segments 308 may be sampled at different resolutions.
[0054] Whether or not the frame 306 is divided into segments 308, the frame 306 may be further subdivided into blocks 310, which can contain data corresponding to, for example, 16x16 pixels in the frame 306. The blocks 310 can also be arranged to include data from one or more segments 308 of pixel data. The blocks 310 can also be of any other suitable size such as 4x4 pixels, 8x8 pixels, 16x8 pixels, 8x16 pixels, 16x16 pixels, or larger. Unless otherwise noted, the terms block and macroblock are used interchangeably herein.
[0055] FIG. 4 is a block diagram of an encoder 400 according to implementations of this disclosure. The encoder 400 can be implemented, as described above, in the transmitting station 102, such as by providing a computer software program stored in memory, for example, the memory 204. The computer software program can include machine instructions that, when executed by a processor such as the processor 202, cause the transmitting station 102 to encode video data in the manner described in FIG. 4. The encoder 400 can also be implemented as specialized hardware included in, for example, the transmitting station 102. In one particularly desirable implementation, the encoder 400 is a hardware encoder.
[0056] The encoder 400 has the following stages to perform the various functions in a forward path (shown by the solid connection lines) to produce an encoded or compressed bitstream 420 using the video stream 300 as input: an intra/inter prediction stage 402, a transform stage 404, a quantization stage 406, and an entropy encoding stage 408. The encoder 400 may also include a reconstruction path (shown by the dotted connection lines) to reconstruct a frame for encoding of future blocks. In FIG. 4, the encoder 400 has the following stages to perform the various functions in the reconstruction path: a dequantization stage 410, an inverse transform stage 412, a reconstruction stage 414, and a loop filtering stage 416. Other structural variations of the encoder 400 can be used to encode the video stream 300.
[0057] When the video stream 300 is presented for encoding, respective adjacent frames 304, such as the frame 306, can be processed in units of blocks. At the intra/inter prediction stage 402, respective blocks can be encoded using intra-frame prediction (also called intra- prediction) or inter- frame prediction (also called inter-prediction). In any case, a prediction block can be formed. In the case of intra-prediction, a prediction block may be formed from samples in the current frame that have been previously encoded and reconstructed. In the case of inter-prediction, a prediction block may be formed from samples in one or more previously constructed reference frames.
[0058] Next, the prediction block can be subtracted from the current block at the intra/inter prediction stage 402 to produce a residual block (also called a residual). The transform stage 404 transforms the residual into transform coefficients in, for example, the frequency domain using block-based transforms. The quantization stage 406 converts the transform coefficients into discrete quantum values, which are referred to as quantized transform coefficients, using a quantizer value or a quantization level. For example, the transform coefficients may be divided by the quantizer value and truncated.
[0059] The quantized transform coefficients are then entropy encoded by the entropy encoding stage 408. The entropy-encoded coefficients, together with other information used to decode the block (which may include, for example, syntax elements such as used to indicate the type of prediction used, transform type, motion vectors, a quantizer value, or the like), are then output to the compressed bitstream 420. The compressed bitstream 420 can be formatted using various techniques, such as variable length coding (VLC) or arithmetic coding. The compressed bitstream 420 can also be referred to as an encoded video stream or encoded video bitstream, and the terms will be used interchangeably herein.
[0060] The reconstruction path (shown by the dotted connection lines) can be used to ensure that the encoder 400 and a decoder 500 (described below with respect to FIG. 5) use the same reference frames to decode the compressed bitstream 420. The reconstruction path performs functions that are similar to functions that take place during the decoding process (described below with respect to FIG. 5), including dequantizing the quantized transform coefficients at the dequantization stage 410 and inverse transforming the dequantized transform coefficients at the inverse transform stage 412 to produce a derivative residual block (also called a derivative residual). At the reconstruction stage 414, the prediction block that was predicted at the intra/inter prediction stage 402 can be added to the derivative residual to create a reconstructed block. The loop filtering stage 416 can be applied to the reconstructed block to reduce distortion such as blocking artifacts.
[0061] Other variations of the encoder 400 can be used to encode the compressed bitstream 420. In some implementations, a non-transform based encoder can quantize the residual signal directly without the transform stage 404 for certain blocks or frames. In some implementations, an encoder can have the quantization stage 406 and the dequantization stage 410 combined in a common stage.
[0062] FIG. 5 is a block diagram of a decoder 500 according to implementations of this disclosure. The decoder 500 can be implemented in the receiving station 106, for example, by providing a computer software program stored in the memory 204. The computer software
program can include machine instructions that, when executed by a processor such as the processor 202, cause the receiving station 106 to decode video data in the manner described in FIG. 5. The decoder 500 can also be implemented in hardware included in, for example, the transmitting station 102 or the receiving station 106.
[0063] The decoder 500, similar to the reconstruction path of the encoder 400 discussed above, includes in one example the following stages to perform various functions to produce an output video stream 516 from the compressed bitstream 420: an entropy decoding stage 502, a dequantization stage 504, an inverse transform stage 506, an intra/inter prediction stage 508, a reconstruction stage 510, a loop filtering stage 512, and a deblocking filtering stage 514. Other structural variations of the decoder 500 can be used to decode the compressed bitstream 420.
[0064] When the compressed bitstream 420 is presented for decoding, the data elements within the compressed bitstream 420 can be decoded by the entropy decoding stage 502 to produce a set of quantized transform coefficients. The dequantization stage 504 dequantizes the quantized transform coefficients (e.g., by multiplying the quantized transform coefficients by the quantizer value), and the inverse transform stage 506 inverse transforms the dequantized transform coefficients to produce a derivative residual that can be identical to that created by the inverse transform stage 412 in the encoder 400. Using header information decoded from the compressed bitstream 420, the decoder 500 can use the intra/inter prediction stage 508 to create the same prediction block as was created in the encoder 400 (e.g., at the intra/inter prediction stage 402).
[0065] At the reconstruction stage 510, the prediction block can be added to the derivative residual to create a reconstructed block. The loop filtering stage 512 can be applied to the reconstructed block to reduce blocking artifacts. Other filtering can be applied to the reconstructed block. In this example, the deblocking filtering stage 514 is applied to the reconstructed block to reduce blocking distortion, and the result is output as the output video stream 516. The output video stream 516 can also be referred to as a decoded video stream, and the terms will be used interchangeably herein. Other variations of the decoder 500 can be used to decode the compressed bitstream 420. In some implementations, the decoder 500 can produce the output video stream 516 without the deblocking filtering stage 514.
[0066] Techniques for encoding or decoding video blocks are now described with respect to FIG. 6. FIG. 6 is a flowchart diagram of an example of a technique 600 for encoding or decoding a video block using dynamic motion vector referencing. The technique 600 and other techniques described herein can be implemented, for example, as a software program
that may be executed by computing devices such as the transmitting station 102 or the receiving station 106. For example, the software program can include machine-readable instructions that may be stored in a memory such as the memory 204 or the secondary storage 214, and that, when executed by a processor, such as the processor 202, may cause the computing device to perform the technique 600. The technique 600 can be implemented using specialized hardware or firmware. As explained above, some computing devices may have multiple memories or processors, and the operations described in the techniques described herein can be distributed using multiple processors, memories, or both.
[0067] For simplicity of explanation, the technique 600 and other techniques described herein are depicted and described as a series of steps or operations. However, the steps or operations in accordance with this disclosure can occur in various orders and/or concurrently. Additionally, other steps or operations not presented and described herein may be used.
Furthermore, not all illustrated steps or operations may be required to implement a technique in accordance with the disclosed subject matter.
[0068] At 602, a motion trajectory is determined. The motion trajectory is a trajectory of motion between video frames of a video sequence including a current video block to encode or decode. The motion trajectory can, for example, show the motion of an object from a first reference frame to a current video frame including the current video block, and then from the current video frame to a second reference frame, such as where the first reference frame is a past frame with respect to the current video frame (e.g., such that the second reference frame comes before the current video frame in a display order) or a future frame with respect to that current video frame (e.g., such that the second reference frame comes after the current video frame in the display order).
[0069] The motion trajectory indicates how one or more objects move or other motion occurs between the video frames based on a path of the motion from one of the video frames to one or more of the others. As such, the motion trajectory may be based on or otherwise indicative of a display order of the video sequence. The display order of the video sequence is known to an encoder performing the technique 600 based on the input video stream received by the encoder. However, a decoder performing the technique 600 does not receive an input video stream and therefore is not typically aware of the display order of the video sequence it decodes. Instead, the decoder receives an encoded bitstream indicating a coding order of the video sequence.
[0070] The display order and the coding order for a video sequence are typically different. For example, a display order for a video sequence including eight frames may be 1,
2, 3, 4, 5, 6, 7, and 8. However, a coding order for that video sequence may, for example, instead be 1, 5, 4, 6, 3, 7, 8, and 2, such as where a hierarchical framework is used for encoding and decoding the frames of the video sequence. As such, the encoder and the decoder may both know which reference frames of the video sequence are usable for encoding or decoding the current video block; however, without further information being provided to the decoder, the decoder cannot leverage information about the display order of the video sequence to decode the current video block. In a hierarchical coding framework, the frames of a video may be grouped into groups of pictures (GOPs). Each group of pictures (GOP) can include a number of frames (e.g., 8 or 16 frames). Coding a frame of a GOP can use frames that are prior (i.e., past frames) or subsequent (i.e., future frames) to the frame in the display order in the GOP. For example, given the coding sequence above (i.e., 1, 5, 4, 6,
3, 7, 8, and 2), coding the fourth frame (i.e., the frame 4 in the display order) uses the past frame 1 and the future frame 5.
[0071] Certain video frames included in the coding order may not be included in the display order. Such video frames, referred to as alternative reference frames, are decoded, but not displayed as part of an output video sequence. Instead, alternative reference frames remain in the reference frame buffer for use in predicting motion in video blocks of video frames that are output for display. An encoder may encode one or more syntax elements to a bitstream to indicate the locations of alternative reference frames in a coding order for a video sequence. A decoder can decode those one or more syntax elements to determine to use an alternative reference frame from the reference frame buffer rather than use a frame for display.
[0072] Data usable to determine the display order of the video sequence may be received by a decoder to determine the display order of the video sequence to decode the current video block. That data may include one or more frame offset values that indicate respective locations of video frames in a display order of a video sequence.
[0073] A frame offset value for a video frame is determined based on a frame index for that video frame and a number of packet stamps after which the video frame will be displayed. The frame index of a video frame reflects the location of that video frame in a display order, as known to the encoder (e.g., based on an input video stream received for encoding by the encoder). During an encoding operation, the encoder determines the frame indexes of the video frames in the video sequence being encoded. The first frame in the display order of the video sequence has an index of 1, and the Nth frame in that display order has an index of N. However, whereas the first frame in that is the first video frame to be
encoded, the next video frame to be encoded may be a video frame located in the middle of the video sequence.
[0074] When a video frame is encoded to a bitstream, the data indicative of the encoded video frame can be stored in a packet. A packet includes information about one or more video frames of a video sequence. One of those video frames is a displayable video frame to be displayed subsequent to decoding using a decoder. The others of those video frames are reference frames used to decode the video frame to be displayed.
[0075] The number of jumps for a packet reflects the number of video frames that have to be decoded by a decoder in order to display the displayable video frame, such as by outputting the displayable video frame to an output video stream. For example, when a decoder receives a packet including N video frames, the decoder decodes the first N-l video frames and uses those as reference frames for decoding the Nth video frame, which Nth video frame is then output for display. The number of packet stamps for a packet indicates the total number of video frames displayed after that packet has been decoded. The encoder can determine the number of packet stamps based on the number of reference frames used to encode a given video frame.
[0076] Subsequent to determining a frame index and a number of packet stamps for a video frame, the frame offset value is calculated as the difference between the frame index and the number of packet stamps. For example, for a video frame having a frame index of 1 and 1 packet stamp, the frame offset value is 0. In another example, for a video frame having a frame index of 8 and 2 packet stamps, the frame offset value is 6. In yet another example, for a video frame having a frame index of 2 and 2 packet stamps, the frame offset value is 0. Examples of relationships between frame indexes, numbers of packet stamps, and frame offset values are described below with respect to FIG. 7.
[0077] The motion trajectory is determined for the current video frame based on a reference motion vector used for coding one or more reference frames of the current video frame. For example, the reference motion vector may be a motion vector indicating or otherwise used to predict motion between one of reference frames usable to predict motion of the current video block and a reference frame used to encode or decode one or more video blocks in that one of the reference frames. For example, the order of those reference frames for predicting motion therebetween can be indicated to an encoder based on an input video stream and to a decoder based on frame offset values. Based on that order, a linear interpolation can be performed using the reference motion vector against a reference frame
usable for encoding or decoding the current video block and a reference frame used for encoding or decoding that reference frame.
[0078] Performing the linear interpolation against those frames can include projecting a group of pixels of one reference frame from a location of that reference frame to a location within another reference frame. For example, a 4x4 or 8x8 block of pixels located at a position within a first reference frame can be projected to a position within a second reference frame. The first reference frame is a reference frame used to encode or decode one or more video blocks of the second reference frame, and the second reference frame is a reference frame usable to predict motion of the current video block. For example, the first reference frame may be a past frame and the second reference frame may be a future frame. There may be one or more other reference frames intermediate to the first reference frame and the current video frame. Examples of motion trajectories are described below with respect to FIGS. 8 and 9.
[0079] Determining the reference motion vector can include processing regions of a first reference frame usable to predict motion within the current video block. For example, processing the regions of the first reference frame can include comparing different groups of pixel values (e.g., 4x4 blocks, 8x8 blocks, or the like) of the first reference frame to same- dimensioned groups of pixel values in a second reference frame used to predict the motion of the first reference frame. For example, encoding or decoding a current frame may first include processing some or all 4x4, 8x8, or other-dimensioned blocks within some or all reference frames usable to predict motion within that current frame.
[0080] Subsequent to determining the reference motion vector, the reference motion vector is projected to the current video frame to determine where the motion trajectory fits within the current video frame. The location of the current video frame at which the motion trajectory fits the current video frame is the location of the current video block. For example, the row location of the current video block within the current video frame can be determined as Block_Row = RefMV.row * (IstRefFrame - CurrFrame) / (IstRefFrame - 2ndRefFrame), and the column location of the current video block within the current video frame can be determined as Block_Col = RefMV.col * (IstRefFrame - CurrFrame) / (IstRefFrame - 2ndRefFrame).
[0081] At 604, one or more temporal motion vector candidates are determined for predicting motion within the current video block based on the motion trajectory. The temporal motion vector candidates define a motion field estimate for current video block. The motion field estimate refers to the current video block and one or more other regions of the
video frame including the current video block (e.g., 4x4, 8x8, or other-sized regions adjacent to or otherwise surrounding the current video block within the current video frame).
[0082] The motion field estimate includes one or more temporal motion vectors indicating motion between the current video frame, one or more first reference frames usable to predict motion of the current video block of the current video frame, one or more second reference frames usable to predict motion of video blocks of those one or more first reference frames, or the like, or a combination thereof. Each of the temporal motion vectors may, for example, refer to the motion of a group of N pixels (e.g., a 4x4 block, an 8x8 block, or the like) from a location in one video frame to a location in another video frame.
[0083] A temporal motion vector candidate is determined based on the location of the current video block, determined above using the reference motion vector. Determining the first temporal motion vector candidate includes performing a linear interpolation against a first reference frame and the current video frame based on the location of the current video block within the current video frame. The first temporal motion vector candidate may thus indicate a group of pixels in the first reference frame that show the object within the current video block. For example, the row location of the group of pixels in the first reference frame can be determined as Block_Row = RefMV.row * (CurrFrame - IstRefFrame) /
(IstRefFrame - 2ndRefFrame), and the column location of the group of pixels in the first reference frame can be determined as Block_Col = RefMV.col * (CurrFrame - IstRefFrame) / (IstRefFrame - 2ndRefFrame). Multiple temporal motion vector candidates can be determined in this way, such as based on the number of reference frames used.
[0084] At 606, a motion vector to use for encoding or decoding the current video block is selected. The selected motion vector is selected from a motion vector candidate list including the one or more temporal motion vector candidates determined based on the motion trajectory. Selecting the motion vector to use for the encoding or the decoding includes determining rate-distortion values resulting from predicting motion within the current video block using motion vector candidates of the motion vector candidate list. The motion vector candidates of the motion vector candidate list may, for example, include the one or more temporal motion vector candidates determined based on the motion trajectory. In some implementations, the motion vector candidate list may, for example, include only the one or more temporal motion vector candidates determined based on the motion trajectory.
[0085] A rate-distortion value refers to a ratio that balances an amount of distortion (e.g., a loss in video quality) with rate (e.g., a number of bits) for coding a block or other video component. The rate-distortion values may, for example, be determined by performing a rate-
distortion analysis against ones of the temporal motion vector candidates of the motion vector candidate list (and/or other motion vector candidates as may be included in that list). As a result of the rate-distortion analysis, the one of the motion vector candidates used to determine a lowest one of the rate-distortion values is identified, such as by comparing respective ones of the rate-distortion values. That motion vector candidate is then selected as the selected motion vector.
[0086] The motion vector candidate list includes information indicative of the motion vector candidates usable to predict motion of the current video block. The motion vector candidate list may be a list stored or otherwise maintained in a buffer, table, database, or other data store or record, which list is updated whenever a new motion vector candidate is determined. Alternatively, the motion vector candidate list may be created subsequent to the determination of a first motion vector candidate and deleted subsequent to the selection of the selected motion vector.
[0087] At 608, a prediction block is generated using the selected motion vector. The prediction block can include pixel values indicating a prediction of the motion of the current video block according to the selected motion vector. Generating the prediction block can include generating a prediction residual based on a difference between pixel values of the current video block and pixel values of the prediction block. For example, during operations for encoding the current video block, the prediction residual can be generated using operations performed by the encoder 400 shown in FIG. 4 (e.g., at the intra/inter prediction stage 402). In another example, during operations for decoding the current video block, the prediction residual can be generated using operations performed by the decoder 500 shown in FIG. 5 (e.g., at the intra/inter prediction stage 508).
[0088] At 610, the current video block is encoded or decoded using the prediction block. For example, operations for encoding the current video block using the prediction block can include transforming, quantizing, and entropy encoding the prediction residual to an encoded bitstream (e.g., the compressed bitstream 420 shown in FIG. 4). In another example, operations for decoding the current video block using the prediction block can include reconstructing the video block based on the prediction residual, filtering the reconstructed video block, and outputting the filtered video block to a video stream (e.g., the output video stream 516 shown in FIG. 5).
[0089] In some implementations, the technique 600 includes determining one or more spatial motion vector candidates based on one or more neighbor blocks of the current block. For example, the one or more spatial motion vector candidates can include one or more
motion vectors determined using intra-prediction. For example, where the blocks of the video frame including the current video block are scanned in a raster order, a spatial motion vector candidate can be determined based on motion predicted using an above-neighbor block of the current video block, a left-neighbor block of the current video block, or the like, or a combination thereof.
[0090] The one or more spatial motion vector candidates may be organized into two different categories. A first category includes spatial motion vector candidates determined using one or more neighbor blocks immediately adjacent to the current video block. A second category includes spatial motion vector candidates determined using one or more neighbor blocks surrounding, but not immediately adjacent to, the current video block. For example, a spatial motion vector candidate in the second category may be derived using a block that is two blocks away from the current video block.
[0091] Spatial motion vectors in the first category may be prioritized over those in the second category. For example, if two different spatial motion vector candidates may both result in the same performance for predicting motion in the current video block, but each was from a different one of the two categories, the spatial motion vector candidate of the first category would be selected over the other.
[0092] The one or more spatial motion vector candidates may be included in the motion vector candidate list that includes the one or more temporal motion vector candidates determined based on the motion trajectory. As such, in such an implementation, selecting the motion vector from the motion vector candidate list can include performing a rate-distortion analysis against one or more temporal motion vector candidates and one or more spatial motion vector candidates and selecting one of the temporal motion vector candidates or the spatial motion vector candidates as the selected motion vector.
[0093] In some implementations, the technique 600 includes encoding one or more syntax elements to a bitstream to which the current block is encoded. For example, when the technique 600 is performed during operations for encoding a current video block, the one or more syntax elements encoded to the bitstream may indicate of the selected motion vector, a display order of a video sequence including the current frame and the one or more reference frames, or the like, or a combination thereof. The one or more syntax elements may, for example, be encoded to a frame header of the current frame including the current video block. For example, the one or more syntax elements used to indicate the display order of the video sequence can include four, five, or some other number of bits for indicating frame offset values of the video frames of the video sequence.
[0094] In another example, the one or more syntax elements used to indicate the selected motion vector can include a number of bits for indicating a location within a reference frame of a block of pixels corresponding to the selected motion vector, an index of the selected motion vector within the motion vector candidate list, or the like, or a combination thereof. The number of bits can be based on the total number of motion vector candidates included in the motion vector candidate list. For example, when the motion vector candidate list includes two candidates, one bit can be used to indicate the selected motion vector (e.g., where each of the motion vector candidates is associated with one of the values of the bit, or by using a value of 1 to indicate the location of the block of pixels including the motion indicated by the selected motion vector). In another example, when the motion vector candidate list includes two candidates, two bits can be used.
[0095] Alternatively, the one or more syntax elements used to indicate the selected motion vector can indicate context information associated with the selected motion vector. For example, when the selected motion vector is a spatial motion vector, the one or more syntax elements may indicate whether that selected motion vector was derived from an above-neighbor block, a left-neighbor block, or a block surrounding but not immediately adjacent to the current video block. In another example, the one or more syntax elements may indicate whether the selected motion vector was derived from a first category of spatial motion vector candidates or a second category of spatial motion vector candidates.
[0096] At least one of the one or more syntax elements indicates a frame offset value for the current frame, which frame offset value indicates a location of the current frame in a video sequence. For example, the syntax elements indicating the frame offset value can include a number of bits based on the number of look-ahead frames used by the encoder and decoder. For example, when the number of look- ahead frames is 16, four bits may be used to indicate the frame offset value. In another example, when the number of look-ahead frames is 32, five bits may be used to indicate the frame offset value.
[0097] In some implementations, the technique 600, when performed during operations for decoding a current video block, includes decoding one or more syntax elements from a bitstream including an encoded frame to decode. For example, the one or more syntax elements decoded from the bitstream may indicate a frame offset value for the encoded video frame. In another example, the one or more syntax elements decoded from the bitstream may indicate a motion vector selected for encoding the encoded block during operations for encoding the block.
[0098] In some implementations, the technique 600 can include determining that the motion vector selected during the operations for decoding the video block corresponds to the motion vector indicated by the one or more decoded syntax elements. For example, subsequent to selecting a motion vector for predicting motion within a current video block to decode, the motion vector indicated within the bitstream can be compared to the selected motion vector. The comparing may include comparing motion vector indexes for each of the selected and indicated motion vectors, comparing blocks of pixels at locations within one or more reference frames as indicated by each of the selected and indicated motion vectors, or the like, or a combination thereof.
[0099] In some implementations, selecting the motion vector during decoding operations can include determining multiple motion vector candidates (e.g., temporal and/or spatial) and then comparing the determined motion vector candidates to the motion vector indicated in a bitstream including the encoded block and encoded video frame. For example, responsive to identifying that one of the determined motion vector candidates is the motion vector indicated in the bitstream, the decoder can select that identified motion vector candidate.
[00100] In some implementations, the technique 600 includes updating a probability model associated with the video frame or the video sequence to indicate the motion vector selected for predicting the motion of the current video block. For example, the probability model can be updated to reflect the probability of a particular motion vector (e.g., based on index), a particular type of motion vector (e.g., temporal or spatial), or context information for the motion vector (e.g., a neighbor block associated with the motion vector) being selected. Each of the encoder and decoder can maintain their own probability models.
[00101] In some implementations, motion vectors other than the one or more temporal motion vector candidates or the one or more spatial motion vector candidates may be included in the motion vector candidate list. For example, the motion vector candidate list can include the reference motion vector used to determine the motion trajectory. In another example, the motion vector candidate list can include a motion vector used to predict a collocated block within a neighbor video frame of the current video frame.
[00102] FIG. 7 is an illustration of an example of data used to indicate a display order of video frames of a video sequence. In particular, a table 700 includes a coding order, a frame index, a number of packet stamps, and a frame offset value for each of a plurality of video frames of a video sequence to encode or decode. The coding order includes spaces between codings of frames, such as between 5 and 6 and after 8. These spaces indicate when an alternative reference frame is encoded or decoded, as applicable. The frame index indicates
the alternative reference frame used for those spaces. For example, the video frame located 3rd in the display order of the video sequence is encoded or decoded, as applicable, between 5 and 6 in the coding order. There is no frame offset value for these spaces since there is no video frame to display.
[00103] In an implementation, an encoder can encode, and a decoder can decode, syntax information that enable a decoder to determine the relative distance between a current coding frame from any of its reference frames. Frames are sent by an encoder (e.g., encoded in a bistream) and received by a decoder (e.g., decoded from the bitstream) in packets. Each packet can have a packet stamp. For example, the packet having the packet stamp of two (2) includes the frames 8, 5, 3, and 2. The syntax information can include a packet stamp and a frame offset value. The packet stamp can be included in the packet header. The frame offset value can be included in the header of a frame.
[00104] The packet stamp can indicate the frame number to be displayed. Frames in a packet that do not correspond to the packet stamp can be decoded and used as reference frame (i.e., added to the reference frame buffer). Only frames corresponding to the packet stamp are displayed.
[00105] The frame offset value can indicate after how many packet stamps, a frame will be displayed. The frame offset value can indicate the offset of the frame within and GOP that includes the frame. For example, a frame 702 is received with a frame offset value of 6 and is included in the packet having a packet stamp of 2. As such, the frame 702 is to be displayed after 6 frame packet numbers are received. As the frame offset value of the frame 702 does not correspond to the packet stamp, the frame 702 is not displayed and can be added to the reference frame buffer. Also, using the frame offset value (i.e., 6) and the packet stamp (i.e., 2), a decoder can determine that the frame index is the 8th (i.e., 6+2=8) frame in the display order. The frame index corresponds to the frame display order. When a frame 704 is received at the decoder, the decoder will display the frame 704 since its frame offset value is zero (0), which indicates that this is the frame to be displayed. A decoded and displayed frame can also be added to the reference frame buffer.
[00106] In the hierarchical coding structure, the first frame in the GOP can be decoded and displayed first. As such, the first packet for the GOP can have a packet stamp of 1 and can include only the first frame. When a frame 706 is received, the frame offset value of the frame 706 is zero indicating that the frame is to be decoded and displayed.
[00107] As described above, using the frame offset values and the packet stamps, a decoder can determine the frame indexes. Using the frame indexes, the frame distance
between any two frames can be calculated. The frame distances and/or the frame indexes can be used in performing the linear projections.
[00108] FIG. 8 is a diagram of an example of using a motion trajectory for a current frame 800 to predict motion of a current block 802. The motion trajectory shows motion between the current frame 800 and three reference frames 804, 806, and 808. The motion trajectory is determined based on a reference motion vector 810, which indicates motion between the reference frame 0 806 and the reference frame 1 804. For example, the reference frame 0 806 may be a reference frame used to predict motion of one or more blocks of the reference frame 804. After the reference motion vector 810 is determined, the motion trajectory is determined as the trajectory corresponding to the direction of the reference motion vector 810.
[00109] The motion trajectory identifies the current block 802 as the location of the current frame 800 intersected by the motion trajectory. A first temporal motion vector candidate 812 may then be determined as indicating motion between the reference frame 1 804 and the current frame 800. A second temporal motion vector candidate 814 may be determined as indicating motion between the reference frame 2 808 and the current frame 800. One or more of the reference motion vector 810, the first temporal motion vector candidate 812, or the second temporal motion vector candidate 814 may be included in a motion vector candidate list from which a motion vector is selected for predicting motion of the current block 802.
[00110] The reference frame 0 806 and the reference frame 2 808 are shown as past frames with respect to the current frame 800. The reference frame 1 804 is shown as a future frame with respect to the current frame 800. However, other numbers of past or future reference frames may be used. For example, a motion trajectory can be determined where there is one past reference frame and one future reference frame. In another example, a motion trajectory can be determined where there is one past frame and two future reference frames. In another example, a motion trajectory can be determined where there are two or more past reference frames and two or more future reference frames.
[00111] In an implementation, motion information associated with blocks of a reference frame can be used to perform linear projections of blocks of a current frame in order to estimate the motion field of the current frame. That is, the motion information associated with blocks of the reference frame can be used to estimate the motion information (i.e., the motion field) of some blocks of the current frame.
[00112] As described above, a block can be predicted using inter prediction. When a frame is reconstructed (as described above with respect to the reconstruction stage 414 of FIG. 4
and the reconstruction stage 510 of FIG. 5), a type and the motion vector associated with each coding block can be retained (i.e., saved). The type can be associated with a frame rather than with each block of the frame. The type can indicate which reference frame(s) is (are) used to code blocks of the frame. As such, the type can indicate which reference frame a motion vector points to and the motion vector indicates the offset within the reference frame. The type and motion vector information (collectively, the motion information) can be retained for blocks of size 4x4, 8x8, or some other same-dimensioned block sizes.
[00113] For example, when the reference frame 1 804 is reconstructed, the prediction type and motion vector information associated with blocks of the reference frame 1 804 can be retained. For example, the reference motion vector 810 and a type indicating the reference frame 806 are retained for a block 816 of the reference frame 1 804.
[00114] As mentioned above, the reference frame 1 804 can be used as a reference frame for the current frame 800. As such, the retained information of the blocks of the reference frame 1 804 can be used to perform linear projections to estimate the motion field of the current frame 800. The motion field of the current frame means the collective motions fields of blocks of the current frame.
[00115] FIG. 9 is a diagram of an example of using multiple motion trajectories to predict motion of a current block. The motion trajectory shown in and described with respect to FIG. 8 has a constant slope from the past-most reference frame to the future-most reference frame and thus indicates that the motion between the video frames thereof occurs at a constant rate. However, this may not always be the case, such as where motion speeds up or slows down between video frames.
[00116] A current frame 900 includes a current block 902 to encode or decode. When the motion is very slow, a collocated block 904 at a preceding reference frame 2 906 may be used to predict motion of the current block 902. However, if the motion is not slow enough, the corresponding motion trajectory may not intersect the current block 902 such that the collocated block 904 may not be used. For example, a first motion trajectory 908 from a past- most reference frame 0 910 to a future-most reference frame 1 912 intersects the current frame 900 slightly above the current block 902.
[00117] In such a case, a motion field estimate for the current block 902 can be used, such as to identify motion from the collocated block 904 within an extended region of the current block 902 (e.g., a group of one or more 4x4, 8x8, or other-dimensioned blocks surrounding the current block 902 within the current frame 900). For example, the extended region may be defined based on the locations within the current frame 900 of objects from one or more of
the reference frames 906, 910, 912, such as where the motion of those objects is indicated using one or more temporal motion vector candidates.
[00118] The motion field estimate may, for example, reflect the locations of all motion within the current frame 900 with respect to the available reference frames. For example, the motion field estimate may be used to determine a second motion trajectory 914 from the reference frame 0 910 to the reference frame 1 912. The second motion trajectory 914 intersects the current frame 900 at the current block 902. As such, a motion vector candidate associated with the second motion trajectory 914 may more accurately predict motion of the current block 902 itself than a motion vector candidate associated with the first motion trajectory 908.
[00119] FIG. 10 is a flowchart diagram of an example of a technique 1000 for coding a current block of a current frame according to an implementation of this disclosure. The technique 1000 can be implemented, for example, as a software program that may be executed by computing devices such as the transmitting station 102 or the receiving station 106. For example, the software program can include machine-readable instructions that may be stored in a memory such as the memory 204 or the secondary storage 214, and that, when executed by a processor, such as the processor 202, may cause the computing device to perform the technique 1000. The technique 1000 can be implemented using specialized hardware or firmware. As explained above, some computing devices may have multiple memories or processors, and the operations described in the technique 1000 can be distributed using multiple processors, memories, or both.
[00120] The technique 1000 can be implemented by an encoder, such as the encoder 400 of FIG.4. When implemented by an encoder, coding means encoding in an encoded bitstream, such as the compressed bitstream 420 of FIG. 4. The technique 1000 can be implemented by a decoder, such as the decoder 500 of FIG. 5. When implemented by a decoder, coding means decoding from an encoded bitstream, such as the compressed bitstream 420 of FIG. 5.
[00121] The technique 1000 can receive a frame to be coded, such as the frame 304 of FIG. 3. As used in this disclosure, "receive" means to select, construct, determine, identify, specify or other receive in any manner whatsoever. For example, the technique 1000 can, as described with respect to FIG. 3, partition the frame into blocks 310. The current block can be one of the blocks 310. Alternatively, the technique 1000 can receive one of the blocks 310 as the current block. For example, when implemented by an encoder, the technique 1000 can receive a current frame to be encoded (also referred to as coding frame or a current frame).
The technique 1000 can partition the frame into blocks or into other partitions that include blocks and select one of the blocks for encoding. In another example, the technique 1000 can receive the block to be encoded. When implemented by a decoder, the technique 1000 can select or identify a current block to be decoded.
[00122] As described above, for at least some reference frames (e.g., some or all of the reference frames 804, 806, and 808), the technique 1000 can retain motion information for each block that is predicted using a motion vector. The block size can be 4x4, 8x8, or any other block size. For example, for the block 816, the retained motion information includes that the reference frame 0 806 is the reference frame used for the block 816. The retained motion information also includes the reference motion vector 810. If a block of a frame is not predicted using a motion vector (e.g., a block predicted using intra or intra+intra compound prediction), then the reference frame type is invalid. In the following description, projection (i.e., interesection) is skipped for those blocks with invalid motion information (i.e., block with an invalid reference frame type).
[00123] The projection operation is now described with respect to the block 816 (i.e., a first reference block). It is to be understood that the description is applicable to other blocks of a reference frame having valid motion information. In a first step, the linear projection is performed to determine where the motion vector of a reference block intersects the current frame. The intersection identifies the current block as the projection of the reference block. The projection operation results in a derived motion vector for the current block. For example, the block 816 is projected onto the current frame using the reference motion vector 810. The projection operation results in a predicted motion vector.
[00124] As described above, a motion vector contains two components, namely, a row value and a column value that represent the spatial offset from the collocated block in a reference frame. As such, the reference motion vector 810 includes, as described with respect to 602 of FIG. 6, a RefMV.row and a RefMV.col. Assuming, as shown in FIG. 8, that the current frame 800 and three reference frames 804, 806, and 808 have, respectively, the frame indexes X, C, C_R0, and A, then the predicted motion vector can be determined using equation (1
[00125] Block_Row and Block_Col identify the position of a block in the current frame. For example, if RefMV.row and RefMV.col correspond to a top left corner of a block in the
reference frame, then Block_Row and Block_Col also correspond to the top left corner of a block in the current frame.
[00126] The calculated values Block_Row and Block_Col may not align with a block boundary of the current frame. In an implementation, the Block_Row and Block_Col are rounded such that the result of the projection aligns with a block of the current frame. For example, as shown in FIG. 3, the blocks 310 of a frame form a block grid. Rounding the Block_Row and Block_Col causes the projection onto the current frame to align with the block grid. For example, if the current frame is processed in 4x4 units, then the projection is rounded to align to the nearest 4x4 block, such as by rounding to the nearest multiple of 4. As another example, if the current frame is processed in 8x8 units, then the projection is rounded to align to the nearest 8x8 block.
[00127] At 1002, the technique 1000 identifies the current block as a projection of a first reference block of a first reference frame onto the current frame. As used in this disclosure, "identify" means to select, construct, determine, specify or other identify in any manner whatsoever. The projection uses a first motion vector of the reference block with respect to a second reference frame.
[00128] Referring to FIG. 8 for an illustration, the current block can be the current block 802, which is identified as a projection of the block 816 (i.e., first reference block) of the reference frame 1 804 (i.e., the first reference frame) onto the current frame 800. The projection uses the reference motion vector 810 (i.e., the first motion vector), which is the motion vector of the block 816 with respect to the reference frame 0 806 (i.e., the second reference frame). In other words, the current block 802 is the projection of the block 816 onto the current frame 800 along the motion vector 810 of the block 816. The motion vector 810 of the block 816 intersects the current frame 800 at the current block 802.
[00129] At 1004, the technique 1000 determines a temporal motion vector candidate for the current block by projecting the first motion vector onto a third reference frame. As used in this disclosure, "determine" means to select, construct, identify, specify or other determine in any manner whatsoever. The temporal motion vector candidate identifies a second reference block in the third reference frame. As described above, the current frame can have available multiple reference frames. As such, the technique 1000 can project the current block onto one, more than one, or all of the available reference frames to identify one or more second reference blocks (i.e., one or more temporal motion vector candidates).
[00130] For example, the current block 802 (or in some implementations, the block 816) may be projected onto the reference frame 808 along the motion vector 810 of the block 816.
The block 818 is the projection of the current block 802 (or in some implementations, the block 816) onto the reference frame 808 along the motion vector 810 of the block 816. The motion vector 810 of the block 816 intersects the reference frame 808 at the block 818. The temporal motion vector candidate 814 for the current block 802 may be a motion vector from the current block 802 to the block 818. The temporal motion vector candidate 814 for the current block 802 may be in the direction of (i.e. may be parallel to) the motion vector 810 of the block 816.
[00131] The technique 1000 projects the magnitude of the first motion vector onto a third reference frame to identify a temporal motion vector candidate. The temporal motion vector candidate in turn identifies (e.g., points to) the second reference block. For example, assuming that the reference frame 808 is an available reference frame for the current frame 800, and given the coordinates Block_Row and Block_Col of the current block 802 and the reference motion vector 810 (from which the current block 802 was projected onto the current frame 800), the technique 1000 can identify the second reference block (i.e., a block 818) by determining the temporal motion vector candidate (i.e., the second temporal motion vector candidate 814) that points to the second reference block in the third reference frame (e.g., the reference frame 808) using equation (2):
[00132] In equation (2), MV_0 can be the second temporal motion vector candidate 814, and X, A, C, and C_R0 are the frame indexes of the current frame 800 and the reference frames 808, 804, and 806, respectively. As such, a temporal motion vector candidate (e.g., the second temporal motion vector candidate 814) for the current block can be determined by projecting a reference block onto a third reference frame (i.e., the reference frame 808) to determine a temporal motion vector candidate. That is a temporal motion vector candidate can be determined using respective display positions of the encoded frame (e.g., X), a first reference frame (e.g., C), and the third reference frame (e.g., A). The temporal motion vector candidate can be added to the motion vector candidate list. Projecting the reference block onto the second reference frame can use the respective motion vector of the reference block with respect to a third reference frame, a frame index of the current frame, a first reference index of the first reference frame, and a second frame index of the second reference frame.
[00133] Similarly, the technique 1000 can estimate the motion vector MV_1 at the same block position (Block_Row, Block_Col) of the current block 802 towards the reference frame 804 using equation (3):
(MV.l. row = RefMV. row * (X - C)/(C - C_R0)
(3)
{ MV_1. col = RefMV. col * (X - C)/(C - C_R0)
[00134] In the equation (3), MV_1 can be the first temporal motion vector candidate 812, and X, C, and C_R0 are the frame indexes of the current frame 800 and the reference frames 804 and 806, respectively.
[00135] Some codecs perform motion compensated (i.e., inter) prediction at the sub-pixel (i.e., sub-pel) level. That is, a motion vector may point to a location that is between pixels of blocks in the reference frame. This may be referred to as sub-pixel resolution. Examples of sub-pixel resolutions include 1/4 sub-pel and 1/8 sub-pel resolutions. Other resolutions are possible. Other codecs may not allow sub-pixel motion compensation and the motion vectors align with full pixels (also called integer pixels). As such, a codec can allow predefined sub- pixel locations. Accordingly, in some implementations, the technique 1000 can include aligning a result of the projecting (e.g., the second temporal motion vector candidate 814) such that the second reference block (e.g., the block 818) aligns with a predefined sub-pixel location of the second reference frame. In an example, the temporal motion vector candidate is rounded to the nearest 1/8* sub-pixel location.
[00136] As indicated above, prior to the coding (i.e., encoding by an encoder or decoding by a decoder) of a current frame, the technique 1000 can go through all the blocks that have valid motion information within each reference frame of a current frame to estimate the motion field for the entire current frame in the unit of a certain block size. The unit size can be 4x4, 8x8, or any other size.
[00137] At 606, 608, and 610, which are as described with respect to the technique 600, the technique 1000 selects a motion vector from a motion vector candidate list, can generate a prediction block using the selected motion vector, and encode the current block using the prediction block, respectively. The motion vector candidate list from which the motion vector is selected may include the one or more temporal motion vector candidates determined at 1004.
[00138] In an implementation by an encoder, the technique 1000 can include encoding, in an encoded bitstream, such as the compressed bitstream 420 of FIG. 4, a packet. As described with respect to FIG. 8, the packet can include the current frame and a packet stamp that indicates whether the current frame is to be displayed by a decoder when packets having the packet stamp are received.
[00139] In an implementation by a decoder, the technique 1000 can include decoding, from an encoded bitstream, such as the compressed bitstream 420 of FIG. 5, a packet that
includes the current frame and a packet stamp, the packet stamp indicating whether the current frame is to be displayed when packets having the packet stamp are received
[00140] In an implementation of the technique 1000, the first reference block is within a range of the current block. That is, the motion vector projection can be constrained to be within a range. The range can be limited in the horizontal direction, the vertical direction, or both directions as described with respect to FIGS. 11 and 12.
[00141] FIG. 11 is a diagram 1100 of projecting motion vectors of blocks of a reference frame onto a current frame according to implementations of this disclosure. The diagram 1100 includes the reference frame 1 804 and the current frame 800 of FIG. 8. As described above, the motion vector of the block 816 is projected onto the current frame 800, the motion vector of the block 816 intersecting the current frame 800 at the current block 802. As such, the current block 802 can be identified as a projection of the block 816.
[00142] The diagram 1100 also includes a processing unit 1106 (i.e., a processing unit of the encoded frame) and a collocated region 1114 in the reference frame 1 804. In an example, the processing unit can be a 64x64 unit. A codec processes a frame in processing units. A processing unit can include multiple blocks. For example, if the processing unit is processed in 4x4 blocks, then the processing unit can include 16 current blocks, and if the processing unit is processed in 8x8 blocks, then the processing unit can include eight (8) current blocks. A codec can process the blocks of the processing unit in raster scan order.
[00143] Before coding a current block (e.g., the current block 802), and more specifically, before coding any block of the current frame, blocks of a reference frame (e.g., the reference frame 1 804) that are associated with motion vectors are projected (e.g., via a linear projection) onto the current frame. In the case that every block of the reference frame is associated with a motion vector, the projection operation may be performed for each 4x4, 8x8, or any other predetermined block resolution (i.e., block size) of the reference frame. The predetermined block resolution can be dependent on the codec hardware implementation.
[00144] The blocks of a processing unit in the current block can be identified as projected from any block of the reference frame. For example, the current block 802 is identified as being projected from the block 816 (as is also shown in FIG. 8), a block 1109 is identified as being projected from a block 1110, and a block 1113 is identified as being projected from a block 1112.
[00145] If projections are not constrained, then a current block of a current frame can be projected from any block of a reference frame. As such, in order to code a current block using motion field estimation, then the motion vector of any of the blocks of the reference frame
may be needed. The motion vectors of all the blocks of the reference frame that have associated motion vectors are to be moved from, e.g., DRAM to a cache, such as SRAM.
[00146] As explained above, the bandwidth between DRAM and SRAM is limited.
Therefore, the greater the amount of data that is to be moved from DRAM to SRAM, the greater the latency in a hardware-implemented codec. Reducing the amount of data transferred or moved from DRAM to SRAM, reduces the latency. The amount of data that is transferred from DRAM or SRAM can be limited by selecting reference blocks that constitute a subset of the blocks of the first reference frame. Selecting reference blocks is equivalent to selecting the motion vectors associated with those selected reference blocks. In an implementation, selecting the subset of the blocks of the reference frame can be via constraining the motion vector projection as described below. Temporal motion vector candidates for the current block can then be determined using respective motion vectors of the reference blocks that are selected.
[00147] Constraining the motion vector projection can reduce the amount of data transferred from DRAM to SRAM. Constraining the motion vector projections can ensure that a motion field motion vector associated with a given coding block (i.e., a current block) position is projected from a reference motion vector originated from an extended collocated region in the reference frame. The extended region is limited in vertical and horizontal offset as described below.
[00148] The constraint in the vertical direction can be of the same or different size than the constraint in the horizontal direction. For example, the motion vector projection can be contained to (-32, 32) pixel range in height (i.e., the vertical direction) and (-64, 64) pixel range in width (i.e., the horizontal direction). An example of constraining the motion vector projection is now given. Assume that a motion vector is given by the row and column offsets (10, 15) and assume further that a projection of this motion vector results in a projection of (43, 30). As 43-10 (e.g., 43 minus 10) is greater than the acceptable range (i.e., 10 + 32), the projection is deemed out of range.
[00149] Referring back to the equation (1), and using a range of (-32, 32) in the vertical direction and (-64, 64) in the horizontal direction, constraining the motion vector projection can mean that if the absolute difference between the calculated Block_Row and the
RefMV.row is greater than 32 pixels (i.e., |Block_Row— RefMV. row| > 32) and/or the absolute difference between the calculated Block_Col and the RefMV.col is greater than 64 pixels (i.e., |Block_Col— RefMV. col| > 64), then the projection can be considered out of range and/or invalid. If a projection is invalid, then the block of the current frame is not
identified is being projected from the reference block. For example, if the projection of the block 816 onto the current frame 800 is invalid (i.e., is out of range), then the current block 802 is not identified as a projection of the block 816 (i.e., a first reference block) of a first reference frame onto the current frame (i.e., the current frame 800).
[00150] By constraining the motion vector projections, the technique 1000 can be used to load only the needed reference motion vectors for a processing unit (e.g., a processing unit of size 64x64) from DRAM to SRAM. The loaded reference motion vectors can be used to process the linear projection ahead of each 64x64 block coding (i.e., encoding or decoding). That is, before coding the blocks of the processing unit 1106, the motion vectors that are loaded are those that resulted in valid motion vector projections of blocks of the processing unit 1106.
[00151] In an example, the linear projection can use at most three (3) reference frames, namely, a first reference frame that is the immediate last reference frame to the current frame and two (2) reference frames from the nearest frames ahead of the current frame. For those frames ahead of current frame in the display order (i.e., frames that have higher frames indexes than the current frame), the projection operation amounts to an interpolation operation. As such, only one (1) motion vector is loaded per 4x4 block for each of the two (2) future frames. The last of the two future frames can use compound prediction. As such, a block of the last of the two future frames can include, in the case of inter+inter prediction, two motion vectors that can both be projected onto (i.e., interested with) the current frame. As such, if available, the two motion vectors from the past reference frame can be used.
[00152] The number of reference motion vectors needed (i.e., copied from DRAM) per 64x64 processing unit can be given by total number of pixels divided by the coding block size (i.e., block resolution). The total number of pixels can be giving by equation (4):
„ , ,„. , Number of Reference Frames * Height Pixels * Width Pixels , ..
Total Pixels = -÷ (4)
B—lock resolution
[00153] Using the examples above, Number of Reference Frames is the number of reference frames that are available to a current frame: an immediate past reference frame, a first nearest future frame, and a last nearest future frame that uses two reference frames. As such, the Number of Reference Frames is (1+1+2) = 4.
[00154] The linear projections of blocks can be operated independently. As such, it is possible to use single instruction, multiple data (SIMD) optimization in software-implemented codecs. A coding scheme for motion estimation can use up to seven (7) reference frames: 4 in the past and 3 ahead. As described above, in an implementation, motion field estimation uses
the nearest reference frames. This results in a maximum amount of motion vector frame storage in a GOP to be 1 in the past and 3 ahead for a total of 4 reference frames. However, more reference frames can be used.
[00155] FIG. 12 can be used to describe Height Pixels and Width Pixels. FIG. 12 is a diagram of a motion vector referencing region 1200 for a processing unit according to implementations of this disclosure. For a processing unit, such as the processing unit 1106 of FIG. 11, the motion vector referencing region 1200 is the region in a reference frame the motion vectors of which are used for the projection operation. The motion vector referencing region 1200 is also referred to as an extended collocated processing unit. FIG. 12 includes a collocated region 1202, such as the collocated region 1114 of FIG. 11 and a right region 1204 that is equal in size to the collocated region 1202. The collocated region 1202 can have the same size as the processing unit. As mentioned above, a frame is processed is raster order. As such, once the technique 1000 completes processing the blocks of the collocated region 1202, the right region 1204 (to the right of the collocated region 1202 and having a size equal to the processing unit) is processed next. As such, the width value for a range (e.g., + 64 pixels) can be selected to be higher than the height value (e.g., + 32 pixels) , since the right portion of the reference motion vector array can be re-used by the next 64x64 block decoding.
[00156] Height Pixels, or pixels in the vertical direction, can be given by the size of the processing unit (or the corresponding collocated region in the reference frame) and the number of pixels above and below the collocated region as given by the range constraint in the vertical direction. As such, Height Pixels is equal to the vertical height of the collocated region 1202, pixels of an above region 1206 corresponding to the region constraint of -32, and pixels of a below region 1212 corresponding to the region constraint of +32. As such, the Height Pixels is equal to (64+32*2) = 128.
[00157] Width Pixels, or pixels in the horizontal direction, can be given by the size of the processing unit (or the corresponding collocated region in the reference frame) and the number of pixels to the right and left of the collocated region as given by the range constraint in the horizontal direction. As such, Width Pixels is equal to the horizontal length of the collocated region 1202, pixels of the right region 1204 corresponding to the region constraint of +64, and pixels of a left region corresponding to the region constraint of -64. As such, the Width Pixels is equal to (64+64*2) = 192.
[00158] If the reference motion vectors are stored for 4x4 block units, the Block
Resolution is 4x4 = 16. The Total Pixels is equal to (4 x 128 x 192) / (4 x 4) = 6,144 motion vectors. If the Block Resolution is 8x8 = 64, then The Total Pixels is equal to
(4 x 128 x 192) / (8 x 8) = 1,536 motion vectors. Depending a codec's hardware design (e.g., processing unit size and/or block resolution), up to two-thirds of the total number of motion vectors used for a processing unit can be reused in the processing of the next processing unit (e.g., the processing unit that is to the right of the processing unit 1106 of FIG. 11. That is, two-thirds of the shared area of FIG. 12 can be reused by next processing unit (e.g., 64x64 block) coding.
[00159] FIG. 13 is a flowchart diagram of an example of a technique 1300 for decoding an encoded block of an encoded frame according to an implementation of this disclosure. The encoded frame is processed in processing units. The technique 1300 can be implemented, for example, as a software program that may be executed by computing devices such as the receiving station 106. For example, the software program can include machine-readable instructions that may be stored in a memory such as the memory 204 or the secondary storage 214, and that, when executed by a processor, such as the processor 202, may cause the computing device to perform the technique 1000. The technique 1300 can be implemented using specialized hardware or firmware. As explained above, some computing devices may have multiple memories or processors, and the operations described in one or both of the technique 1000 can be distributed using multiple processors, memories, or both.
[00160] At 1302, the technique 1300 selects motion vectors corresponding to blocks of an extended collocated processing unit in a first reference frame. The extended collocated processing unit can be as described with respect to FIG. 12. In an implementation, the extended collocated processing unit extends the current processing unit in a range of -32 to +32 pixels in a height direction and a range of -64 to +64 pixels in a width direction.
[00161] At 1304, the technique 1300 identifies a block of the blocks, such that the encoded block is a projection, using a motion vector of the block, onto the encoded block. For example, the technique 1300 identifies the current block 802 (i.e., the encoded block) as a projection of the block 816 (i.e., the identified block of the blocks) using the reference motion vector 810 (i.e., the motion vector of the block). To identify the block, the technique 1300 can perform a motion field estimation as described above. For example, the block 816 can be identified as corresponding to the motion vector resulting in a projection using the equation 1 onto the encoded block.
[00162] In some situations, the encoded block may not be the result of any valid projection. For example, the encoded block may be the result of an out-of-range projection. Alternatively, no motion vector projection of blocks of the reference frame may have interested with the encoded frame at the encoded block. As such, at 1306, the technique 1300
determines whether a block was identified. On a condition that a block is identified, the technique 1300 proceeds to 1308; otherwise the technique 1300 proceeds to 606.
[00163] At 1308, the technique 1300 determines a temporal motion vector candidate for the encoded block in a second reference frame using a motion vector of the identified block. For example, the temporal motion vector candidate can be determined using the equation (2) and/or the equation (3). The temporal motion vector candidate can be further determined using the display positions of the encoded frame, the first reference frame, and the second reference frame. The display positions can be determined using header information that includes frame offset values and packet stamp values as described above. At 1310, the technique 1300 adds the temporal motion vector candidate to a motion vector candidate list. The blocks 606, 608, and 610 can be as described with respect to FIG. 6.
[00164] The aspects of encoding and decoding described above illustrate some examples of encoding and decoding techniques. However, it is to be understood that encoding and decoding, as those terms are used in the claims, could mean compression, decompression, transformation, or any other processing or change of data.
[00165] The word "example" is used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as "example" is not necessarily to be construed as being preferred or advantageous over other aspects or designs. Rather, use of the word "example" is intended to present concepts in a concrete fashion. As used in this application, the term "or" is intended to mean an inclusive "or" rather than an exclusive "or." That is, unless specified otherwise or clearly indicated otherwise by the context, the statement "X includes A or B" is intended to mean any of the natural inclusive permutations thereof. That is, if X includes A; X includes B; or X includes both A and B, then "X includes A or B" is satisfied under any of the foregoing instances. In addition, the articles "a" and "an" as used in this application and the appended claims should generally be construed to mean "one or more," unless specified otherwise or clearly indicated by the context to be directed to a singular form. Moreover, use of the term "an implementation" or the term "one
implementation" throughout this disclosure is not intended to mean the same embodiment or implementation unless described as such.
[00166] Implementations of the transmitting station 102 and/or the receiving station 106 (and the algorithms, methods, instructions, etc., stored thereon and/or executed thereby, including by the encoder 400 and the decoder 500) can be realized in hardware, software, or any combination thereof. The hardware can include, for example, computers, intellectual property (IP) cores, application- specific integrated circuits (ASICs), programmable logic
arrays, optical processors, programmable logic controllers, microcode, microcontrollers, servers, microprocessors, digital signal processors, or any other suitable circuit. In the claims, the term "processor" should be understood as encompassing any of the foregoing hardware, either singly or in combination. The terms "signal" and "data" are used interchangeably. Further, portions of the transmitting station 102 and the receiving station 106 do not necessarily have to be implemented in the same manner.
[00167] Further, in one aspect, for example, the transmitting station 102 or the receiving station 106 can be implemented using a general purpose computer or general purpose processor with a computer program that, when executed, carries out any of the respective methods, algorithms, and/or instructions described herein. In addition, or alternatively, for example, a special purpose computer/processor can be utilized which can contain other hardware for carrying out any of the methods, algorithms, or instructions described herein.
[00168] The transmitting station 102 and the receiving station 106 can, for example, be implemented on computers in a video conferencing system. Alternatively, the transmitting station 102 can be implemented on a server, and the receiving station 106 can be
implemented on a device separate from the server, such as a handheld communications device. In this instance, the transmitting station 102, using an encoder 400, can encode content into an encoded video signal and transmit the encoded video signal to the
communications device. In turn, the communications device can then decode the encoded video signal using a decoder 500. Alternatively, the communications device can decode content stored locally on the communications device, for example, content that was not transmitted by the transmitting station 102. Other suitable transmitting and receiving implementation schemes are available. For example, the receiving station 106 can be a generally stationary personal computer rather than a portable communications device, and/or a device including an encoder 400 may also include a decoder 500.
[00169] Further, all or a portion of implementations of the present disclosure can take the form of a computer program product accessible from, for example, a computer-usable or computer-readable medium. A computer-usable or computer-readable medium can be any device that can, for example, tangibly contain, store, communicate, or transport the program for use by or in connection with any processor. The medium can be, for example, an electronic, magnetic, optical, electromagnetic, or semiconductor device. Other suitable mediums are also available.
[00170] Further implementations are summarized in the following examples:
[00171] Example 1: A method for encoding a current block of a current frame, the method comprising: determining a motion trajectory for the current frame based on a reference motion vector used for encoding one or more reference frames of the current frame;
determining one or more temporal motion vector candidates for predicting motion within the current block based on the motion trajectory; selecting a motion vector from a motion vector candidate list including the one or more temporal motion vector candidates; generating a prediction block using the selected motion vector; and encoding the current block using the prediction block.
[00172] Example 2: The method of Example 1, wherein determining the motion trajectory for the current frame based on the reference motion vector used for encoding the one or more reference frames of the current frame comprises: performing a linear interpolation against a first reference frame of the one or more reference frame and a reference frame used for encoding the first reference frame using the reference motion vector, the reference motion vector indicating motion between the first reference frame and the reference frame used for encoding the first reference frame.
[00173] Example 3: The method of Example 2, wherein the linear interpolation is a first linear interpolation, wherein determining the one or more temporal motion vector candidates for predicting the motion within the current block based on the motion trajectory comprises: performing a second linear interpolation against the first reference frame and the current frame along the motion trajectory to determine a motion vector candidate of the temporal motion vector candidates, the motion vector candidate indicating motion between the current frame and the first reference frame.
[00174] Example 4: The method of any of Examples 1 to 3, further comprising:
determining one or more spatial motion vector candidates based on one or more neighbor blocks of the current block, wherein the motion vector candidate list includes the one or more spatial motion vector candidates.
[00175] Example 5: The method of Example 4, wherein selecting the motion vector from the motion vector candidate list including the one or more temporal motion vector candidates comprises: determining rate-distortion values resulting from predicting the motion within the current block using motion vector candidates of the motion vector candidate list, the motion vector candidates including the one or more temporal motion vector candidates and the one or more spatial motion vector candidates; and identifying one of the motion vector candidates used to determine a lowest one of the rate-distortion values.
[00176] Example 6: The method of any of Examples 1 to 5, further comprising: encoding, to a bitstream to which the current block is encoded, one or more syntax elements indicative of at least one of the selected motion vector or a display order of a video sequence including the current frame and the one or more reference frames.
[00177] Example 7: The method of Example 6, wherein at least one of the one or more syntax elements indicates a frame offset value for the current frame, wherein a location of the current frame in the display order of the video sequence is indicated by the frame offset value.
[00178] Example 8: The method of Example 7, further comprising: determining the frame offset value based on a frame index for the current frame and a number of packet stamps associated with an encoding of the current frame.
[00179] Example 9: A method for decoding an encoded block of an encoded frame, the method comprising: determining a motion trajectory for the encoded frame based on a reference motion vector used for decoding one or more reference frames of the encoded frame; determining one or more temporal motion vector candidates for predicting motion within the encoded block based on the motion trajectory; selecting a motion vector from a motion vector candidate list including the one or more temporal motion vector candidates; generating a prediction block using the selected motion vector; and decoding the encoded block using the prediction block.
[00180] Example 10: The method of Example 9, wherein determining the motion trajectory for the encoded frame based on the reference motion vector used for decoding the one or more reference frames of the encoded frame comprises: performing a linear interpolation against a first reference frame of the one or more reference frame and a reference frame used for decoding the first reference frame using the reference motion vector, the reference motion vector indicating motion between the first reference frame and the reference frame used for decoding the first reference frame.
[00181] Example 11: The method of Example 10, wherein the linear interpolation is a first linear interpolation, wherein determining the one or more temporal motion vector candidates for predicting the motion within the encoded block based on the motion trajectory comprises: performing a second linear interpolation against the first reference frame and the encoded frame using the reference motion vector to determine a motion vector candidate of the temporal motion vector candidates, the motion vector candidate indicating motion between the encoded frame and the first reference frame.
[00182] Example 12: The method of any of Examples 9 to 11, further comprising:
determining one or more spatial motion vector candidates based on one or more neighbor blocks of the encoded block, wherein the motion vector candidate list includes the one or more spatial motion vector candidates.
[00183] Example 13: The method of any of Examples 9 to 12, further comprising:
decoding, from a bitstream including the encoded frame, one or more syntax elements indicating a frame offset value for the encoded frame, wherein a location of the encoded frame in a display order of a video sequence is indicated by the frame offset value.
[00184] Example 14: The method of any of Example 9 to 13, further comprising:
decoding, from a bitstream including the encoded frame, one or more syntax elements indicating a motion vector selected for encoding the encoded block; and determining that the selected motion vector corresponds to the motion vector indicated by the one or more decoded syntax elements.
[00185] Example 15: An apparatus for decoding an encoded block of an encoded frame, the apparatus comprising: a processor configured to execute instructions stored in a non- transitory memory to: determine a motion trajectory for the encoded frame based on a reference motion vector used to decode one or more reference frames of the encoded frame; determine one or more temporal motion vector candidates for predicting motion within the encoded block based on the motion trajectory; select a motion vector from a motion vector candidate list including the one or more temporal motion vector candidates; generate a prediction block using the selected motion vector; and decode the encoded block using the prediction block.
[00186] Example 16: The apparatus of Example 15, wherein the instructions to determine the motion trajectory for the encoded frame based on the reference motion vector used to decode the one or more reference frames of the encoded frame include instructions to:
perform a first linear interpolation against a first reference frame of the one or more reference frame and a reference frame used to decode the first reference frame using the reference motion vector, the reference motion vector indicative of motion between the first reference frame and the reference frame used to decode the first reference frame.
[00187] Example 17: The apparatus of Example 16, wherein the linear interpolation is a first linear interpolation, wherein the instructions to determine the one or more temporal motion vector candidates for predicting the motion within the encoded block based on the motion trajectory include instructions to: perform a second linear interpolation against the first reference frame and the encoded frame using the reference motion vector to determine a
motion vector candidate of the temporal motion vector candidates, the motion vector candidate indicative of motion between the encoded frame and the first reference frame.
[00188] Example 18: The apparatus of any of Examples 15 to 17, wherein the instructions include instructions to: determine one or more spatial motion vector candidates based on one or more neighbor blocks of the encoded block, wherein the motion vector candidate list includes the one or more spatial motion vector candidates.
[00189] Example 19: The apparatus of any of Examples 15 to 18, wherein the instructions include instructions to: decode, from a bitstream including the encoded frame, one or more syntax elements indicative of a frame offset value for the encoded frame, wherein a location of the encoded frame in a display order of a video sequence is indicated by the frame offset value.
[00190] Example 20: The apparatus of any of Examples 15 to 19, wherein the instructions include instructions to: decode, from a bitstream including the encoded frame, one or more syntax elements indicative of a motion vector selected for encoding the encoded block; and determine that the selected motion vector corresponds to the motion vector indicated by the one or more decoded syntax elements.
[00191] The above-described embodiments, implementations, and aspects have been described in order to facilitate easy understanding of this disclosure and do not limit this disclosure. On the contrary, this disclosure is intended to cover various modifications and equivalent arrangements included within the scope of the appended claims, which scope is to be accorded the broadest interpretation as is permitted under the law so as to encompass all such modifications and equivalent arrangements.
Claims
1. A method for coding a current block of a current frame, the method comprising:
identifying the current block as a projection of a first reference block of a first reference frame onto the current frame, wherein the projection uses a first motion vector of the first reference block with respect to a second reference frame;
determining a temporal motion vector candidate for the current block including projecting the current block onto a third reference frame using the first motion vector, wherein the temporal motion vector candidate identifies a second reference block in the third reference frame;
selecting a motion vector from a motion vector candidate list, wherein the motion vector candidate list includes the temporal motion vector candidate for the current block; generating a prediction block using the selected motion vector; and
coding the current block using the prediction block.
2. The method of claim 1, wherein the first reference block is within a range of the current block.
3. The method of claim 2, wherein the range is a -32 to +32 pixels of the current block in a vertical direction and -64 to +64 pixels in a horizontal direction.
4. The method of any of claims 1 to 3, further comprising:
aligning a result of the projecting such that the current block aligns with a block of the current frame.
5. The method of any of claims 1 to 4, wherein determining the temporal motion vector candidate for the current block comprises:
aligning a result of the projecting such that the second reference block aligns with a predefined sub-pixel location of the second reference frame.
6. The method of claim 5, wherein the projecting further uses respective display orders of the current frame, the first reference frame, and the second reference frame.
7. The method of any of claims 1 to 6, wherein coding the current block using the prediction block comprises:
decoding, from an encoded bitstream, a packet comprising the current frame and a packet stamp, the packet stamp indicating whether the current frame is to be displayed when packets having the packet stamp are received.
8. The method of any of claims 1 to 6, wherein coding the current block using the prediction block comprises:
encoding, in an encoded bitstream, a packet wherein the packet comprises the current frame and a packet stamp, the packet stamp indicating whether the current frame is to be displayed by a decoder when packets having the packet stamp are received.
9. An apparatus of decoding a current block of a current frame, the apparatus comprising:
a processor configured to execute instructions stored in a non-transitory memory to: select reference blocks of a first reference frame, wherein the reference blocks constitute a subset of blocks of the first reference frame;
determine temporal motion vector candidates for the current block using respective motion vectors of the reference blocks;
select a motion vector from a motion vector candidate list, wherein the motion vector candidate list includes the determined temporal motion vector candidates; generate a prediction block using the selected motion vector; and decode, from an encoded bitstream, the current block using the prediction block.
10. The apparatus of claim 9, wherein the reference blocks are within a range of the current block.
11. The apparatus of claim 10, wherein the range is a -32 to +32 pixels of the current block in a vertical direction and -64 to +64 pixels in a horizontal direction.
12. The apparatus of claim 10 or 11, wherein the range is selected, in at least one of a horizontal direction and a vertical direction, based on a size of a processing unit of the current frame.
13. The apparatus of any of claims 9 to 12, wherein the instructions to determine the temporal motion vector candidates for the current block using respective motion vectors of the reference blocks further include instructions to:
project a reference block of the reference blocks onto a second reference frame to determine a temporal motion vector candidate; and
add the temporal motion vector candidate to the motion vector candidate list.
14. The apparatus of claim 13, wherein to project a reference block onto the second reference frame comprises to:
project the reference block of the reference blocks onto the second reference frame using a motion vector of the reference block with respect to a third reference frame, a frame index of the current frame, a first reference index of the first reference frame, and a second frame index of the second reference frame.
15. The apparatus of claim 14, wherein the frame index of the current frame, the first reference index of the first reference frame, and the second frame index of the second reference frame correspond, respectively, to a display order of the current frame, the first reference frame, and the second reference frame.
16. The apparatus of claim 14 or 15, wherein the instructions further include instructions to:
determine the frame index by instructions to:
receive a packet comprising the current frame;
decode, from the packet, a packet stamp indicative of a frame to be displayed; decode from a header of the current frame, an offset value indicative of a number of packet stamps to be received before the current frame is displayed; and determine the frame index using the offset value and the packet stamp.
17. An apparatus for decoding an encoded block of an encoded frame processed in processing units, wherein a processing unit of the encoded frame includes the encoded block, the apparatus comprising:
a processor configured to execute instructions stored in a non-transitory memory to: select motion vectors corresponding to blocks of an extended collocated
processing unit in a first reference frame;
identify a block of the blocks, such that the encoded block is a projection, using a motion vector of the block, onto the encoded frame;
on a condition that a block is identified,
determine a temporal motion vector candidate for the encoded block in a second reference frame using a motion vector of the identified block, and add the temporal motion vector candidate to a motion vector candidate list;
select a motion vector from the motion vector candidate list;
generate a prediction block using the selected motion vector; and decode the encoded block using the prediction block.
18. The apparatus of claim 17, where in the processing unit is 64x64.
19. The apparatus of claim 18, wherein the extended collocated processing unit extends in a range of -32 to +32 pixels in a height direction and a range of -64 to +64 pixels in a width direction of the processing unit.
20. The apparatus of any of claims 17 to 20, wherein:
the temporal motion vector candidate is further determined using respective display positions of the encoded frame, the first reference frame, and the second reference frame, and the respective display positions are determined using header information comprising frame offset values and packet stamp values.
21. An apparatus for coding a current block of a current frame, the apparatus comprising:
a processor configured to execute instructions stored in a non-transitory memory to: identify the current block as a projection of a first reference block of a first reference frame onto the current frame, wherein the projection uses a first motion vector of the first reference block with respect to a second reference frame;
determine a temporal motion vector candidate for the current block including projecting the current block onto a third reference frame, wherein projecting the current block onto a third reference frame uses the first motion vector, and the temporal motion vector candidate identifies a second reference block in the third
reference frame;
select a motion vector from a motion vector candidate list, wherein the motion vector candidate list includes the temporal motion vector candidate for the current block;
generate a prediction block using the selected motion vector; and
code the current block using the prediction block.
Applications Claiming Priority (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/677,220 | 2017-08-15 | ||
US15/677,220 US10880573B2 (en) | 2017-08-15 | 2017-08-15 | Dynamic motion vector referencing for video coding |
US15/718,082 | 2017-09-28 | ||
US15/718,082 US10284869B2 (en) | 2017-09-28 | 2017-09-28 | Constrained motion field estimation for hardware efficiency |
Publications (1)
Publication Number | Publication Date |
---|---|
WO2019036080A1 true WO2019036080A1 (en) | 2019-02-21 |
Family
ID=62387011
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
PCT/US2018/032599 WO2019036080A1 (en) | 2017-08-15 | 2018-05-14 | Constrained motion field estimation for inter prediction |
Country Status (1)
Country | Link |
---|---|
WO (1) | WO2019036080A1 (en) |
Cited By (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN110572673A (en) * | 2019-09-27 | 2019-12-13 | 腾讯科技（深圳）有限公司 | Video encoding and decoding method and device, storage medium and electronic device |
CN112565753A (en) * | 2020-12-06 | 2021-03-26 | 浙江大华技术股份有限公司 | Method and apparatus for determining motion vector difference, storage medium, and electronic apparatus |
CN116760986A (en) * | 2023-08-23 | 2023-09-15 | 腾讯科技（深圳）有限公司 | Candidate motion vector generation method, candidate motion vector generation device, computer equipment and storage medium |
WO2023173809A1 (en) * | 2022-03-16 | 2023-09-21 | 腾讯科技（深圳）有限公司 | Video encoding method and apparatus, video decoding method and apparatus, and storage medium, electronic device and computer program product |
Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
GB2488815A (en) * | 2011-03-09 | 2012-09-12 | Canon Kk | Determining a temporal motion vector predictor to ensure diversity among a set of predictors |
WO2013159038A1 (en) * | 2012-04-20 | 2013-10-24 | Qualcomm Incorporated | Disparity vector generation for inter-view prediction for video coding |
EP3059965A1 (en) * | 2010-11-29 | 2016-08-24 | MediaTek, Inc | Method and apparatus of extended motion vector predictor |
EP3139611A1 (en) * | 2011-03-14 | 2017-03-08 | HFI Innovation Inc. | Method and apparatus for deriving temporal motion vector prediction |
-
2018
- 2018-05-14 WO PCT/US2018/032599 patent/WO2019036080A1/en active Application Filing
Patent Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
EP3059965A1 (en) * | 2010-11-29 | 2016-08-24 | MediaTek, Inc | Method and apparatus of extended motion vector predictor |
GB2488815A (en) * | 2011-03-09 | 2012-09-12 | Canon Kk | Determining a temporal motion vector predictor to ensure diversity among a set of predictors |
EP3139611A1 (en) * | 2011-03-14 | 2017-03-08 | HFI Innovation Inc. | Method and apparatus for deriving temporal motion vector prediction |
WO2013159038A1 (en) * | 2012-04-20 | 2013-10-24 | Qualcomm Incorporated | Disparity vector generation for inter-view prediction for video coding |
Cited By (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN110572673A (en) * | 2019-09-27 | 2019-12-13 | 腾讯科技（深圳）有限公司 | Video encoding and decoding method and device, storage medium and electronic device |
CN110572673B (en) * | 2019-09-27 | 2024-04-09 | 腾讯科技（深圳）有限公司 | Video encoding and decoding method and device, storage medium and electronic device |
CN112565753A (en) * | 2020-12-06 | 2021-03-26 | 浙江大华技术股份有限公司 | Method and apparatus for determining motion vector difference, storage medium, and electronic apparatus |
CN112565753B (en) * | 2020-12-06 | 2022-08-16 | 浙江大华技术股份有限公司 | Method and apparatus for determining motion vector difference, storage medium, and electronic apparatus |
WO2023173809A1 (en) * | 2022-03-16 | 2023-09-21 | 腾讯科技（深圳）有限公司 | Video encoding method and apparatus, video decoding method and apparatus, and storage medium, electronic device and computer program product |
CN116760986A (en) * | 2023-08-23 | 2023-09-15 | 腾讯科技（深圳）有限公司 | Candidate motion vector generation method, candidate motion vector generation device, computer equipment and storage medium |
CN116760986B (en) * | 2023-08-23 | 2023-11-14 | 腾讯科技（深圳）有限公司 | Candidate motion vector generation method, candidate motion vector generation device, computer equipment and storage medium |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11800136B2 (en) | Constrained motion field estimation for hardware efficiency | |
US11405645B2 (en) | Transform kernel selection and entropy coding | |
US10555000B2 (en) | Multi-level compound prediction | |
CA3008890C (en) | Motion vector reference selection through reference frame buffer tracking | |
US11647223B2 (en) | Dynamic motion vector referencing for video coding | |
US10306258B2 (en) | Last frame motion vector partitioning | |
US10506249B2 (en) | Segmentation-based parameterized motion models | |
US20210021859A1 (en) | Same frame motion estimation and compensation | |
US11343528B2 (en) | Compound prediction for video coding | |
US10582212B2 (en) | Warped reference motion vectors for video compression | |
EP3729810B1 (en) | Motion vector coding using residual block energy distribution | |
WO2019036080A1 (en) | Constrained motion field estimation for inter prediction | |
US10382758B2 (en) | Transform block-level scan order selection for video coding | |
JP2020522185A (en) | Compound motion compensation prediction | |
WO2024081012A1 (en) | Inter-prediction with filtering |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
121 | Ep: the epo has been informed by wipo that ep was designated in this application |
Ref document number: 18727980Country of ref document: EPKind code of ref document: A1 |
|
NENP | Non-entry into the national phase |
Ref country code: DE |
|
122 | Ep: pct application non-entry in european phase |
Ref document number: 18727980Country of ref document: EPKind code of ref document: A1 |
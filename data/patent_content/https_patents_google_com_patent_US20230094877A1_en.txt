US20230094877A1 - Dynamically and selectively updated spreadsheets based on knowledge monitoring and natural language processing - Google Patents
Dynamically and selectively updated spreadsheets based on knowledge monitoring and natural language processing Download PDFInfo
- Publication number
- US20230094877A1 US20230094877A1 US17/485,056 US202117485056A US2023094877A1 US 20230094877 A1 US20230094877 A1 US 20230094877A1 US 202117485056 A US202117485056 A US 202117485056A US 2023094877 A1 US2023094877 A1 US 2023094877A1
- Authority
- US
- United States
- Prior art keywords
- update
- cell
- document
- data
- data source
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 238000003058 natural language processing Methods 0.000 title description 12
- 238000012544 monitoring process Methods 0.000 title description 9
- 238000012545 processing Methods 0.000 claims abstract description 49
- 238000000034 method Methods 0.000 claims abstract description 33
- 230000004044 response Effects 0.000 claims description 6
- 230000008859 change Effects 0.000 description 17
- 238000010586 diagram Methods 0.000 description 11
- 238000004458 analytical method Methods 0.000 description 9
- 230000003068 static effect Effects 0.000 description 9
- 230000006870 function Effects 0.000 description 8
- 230000015654 memory Effects 0.000 description 8
- 230000000007 visual effect Effects 0.000 description 8
- 238000012550 audit Methods 0.000 description 7
- 230000014509 gene expression Effects 0.000 description 7
- 230000003442 weekly effect Effects 0.000 description 7
- 238000004364 calculation method Methods 0.000 description 5
- 230000007246 mechanism Effects 0.000 description 5
- 238000006243 chemical reaction Methods 0.000 description 4
- 238000004891 communication Methods 0.000 description 3
- 230000000694 effects Effects 0.000 description 3
- 230000001413 cellular effect Effects 0.000 description 2
- 238000013480 data collection Methods 0.000 description 2
- 238000013500 data storage Methods 0.000 description 2
- 238000013461 design Methods 0.000 description 2
- 238000003780 insertion Methods 0.000 description 2
- 230000037431 insertion Effects 0.000 description 2
- 230000003993 interaction Effects 0.000 description 2
- 230000008569 process Effects 0.000 description 2
- 241000282412 Homo Species 0.000 description 1
- 238000013479 data entry Methods 0.000 description 1
- 238000013499 data model Methods 0.000 description 1
- 230000007812 deficiency Effects 0.000 description 1
- 238000001514 detection method Methods 0.000 description 1
- 230000037406 food intake Effects 0.000 description 1
- 230000007274 generation of a signal involved in cell-cell signaling Effects 0.000 description 1
- 230000008676 import Effects 0.000 description 1
- 230000001788 irregular Effects 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 230000007774 longterm Effects 0.000 description 1
- 238000007726 management method Methods 0.000 description 1
- 238000005259 measurement Methods 0.000 description 1
- 230000000877 morphologic effect Effects 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 230000000644 propagated effect Effects 0.000 description 1
- 230000001360 synchronised effect Effects 0.000 description 1
- 230000007704 transition Effects 0.000 description 1
- 230000001755 vocal effect Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/166—Editing, e.g. inserting or deleting
- G06F40/177—Editing, e.g. inserting or deleting of tables; using ruled lines
- G06F40/18—Editing, e.g. inserting or deleting of tables; using ruled lines of spreadsheets
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2452—Query translation
- G06F16/24522—Translation of natural language queries to structured queries
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/903—Querying
- G06F16/9032—Query formulation
- G06F16/90332—Natural language query formulation or dialogue systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N5/00—Computing arrangements using knowledge-based models
- G06N5/02—Knowledge representation; Symbolic representation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/10—Office automation; Time management
Definitions
- aspects and implementations of the present disclosure relate generally to updating electronic documents, and more particularly relate to dynamically and selectively updating electronic documents having a tabular structure based on knowledge monitoring and natural language processing.
- An electronic document can have a tabular structure including a plurality of cells.
- a document can be referred to as a “data table,” or simply “table.”
- Each cell corresponds to a region for inputting data in a particular form (e.g. numerical or text data), and the document can be used to organize, analyze and/or store the input data.
- Each cell can include a non-numerical data entry, a mathematical expression for assigning a value to the cell, or can remain empty.
- a mathematical expression can include a numerical value, a reference to a value of one or more cells within the spreadsheet, an arithmetic operator, a relational operator, a function, etc. Additionally, the document can support programming capability.
- content of a cell can be derived from content of one or more other cells of the document.
- the document can be a spreadsheet.
- the cells within the spreadsheet can be arranged as an array including a number of rows and a number of columns, where a particular cell of the spreadsheet can be addressed or referenced with respect to its column location within the table and its row location within the table.
- columns can be represented by letters (e.g., Column A, Column B, . . . ) and rows can be represented by numbers (e.g., Row 1 , Row 2 , . . . ).
- a cell located in Column D and Row 5 can be referenced as cell D 5 .
- a system and method are disclosed.
- a method includes identifying, by a processing device, a document having a tabular structure including a plurality of cells.
- the document is associated with a set of update controls for automatically updating content in at least one cell of the plurality of cells.
- the method further includes detecting, by the processing device and based on the set of update controls, an event triggering an automated update of the content in the at least one cell, and responsive to detecting the event, obtaining, by the processing device, data from at least one external data source in accordance with the set of update controls, and causing, by the processing device, the content in the at least one cell to be updated based on the data from the at least one external data source.
- the method further includes generating, by the processing device, at least a portion of the document using one or more natural language queries. Generating at least a portion of the document includes defining the set of update controls.
- the method further includes the set of update controls includes an update frequency corresponding to an amount of time between updates of the content maintained in the at least one cell.
- Obtaining the data from the at least one external data source further includes determining that the amount of time has elapsed from a most recent update to the content maintained in the at least one cell, and in response to determining that the amount of time has elapsed from the most recent update, retrieving the data from the at least one external data source.
- the update frequency can be a default update frequency corresponding to a recommended update frequency.
- the method can further include providing, by the processing device, a user interface presenting a default update frequency in association with the at least one cell, receiving, by the processing device, user input specifying a user-defined update frequency for the at least one cell, where the user input causes the user interface to be modified to present the user-defined update frequency in association with the at least one cell, and modifying, by the processing device, the set of update controls stored in a data store to include the user-defined update frequency for the at least one cell.
- obtaining the data from the at least one external data source further comprises receiving the data from a subscriber associated with a portion of the at least one external data source.
- FIG. 1 illustrates an example system architecture, in accordance with implementations of the present disclosure.
- FIG. 2 is a diagram illustrating an example spreadsheet including a number of cells, in accordance with implementations of the present disclosure.
- FIG. 3 is a diagram illustrating an example spreadsheet including a number of cells updated in accordance with respective update frequencies, in accordance with implementations of the disclosure.
- FIG. 4 depicts a flow diagram of a method for dynamically and selectively updating a document based on knowledge monitoring and natural language processing, in accordance with implementations of the present disclosure.
- FIGS. 5 A and 5 B depict flow diagrams of methods for dynamically updating content maintained in a document, in accordance with implementations of the present disclosure.
- FIG. 6 is a block diagram illustrating an exemplary computer system, in accordance with implementations of the present disclosure.
- aspects of the present disclosure relate to dynamically and selectively updated spreadsheets based on knowledge monitoring and natural language processing.
- One challenge in constructing an electronic document (“document”) having a tabular structure is populating data into the document.
- a tabular structure e.g., spreadsheet
- Table 1 the following portion of a spreadsheet including Columns A-I and Rows 1 - 3 is provided as Table 1:
- Table 1 is a portion of a spreadsheet that organizes data related to a set of books.
- the set of books includes “ABC” by John Doe and “XYZ” by Jane Doe, and attributes of each book of the set of books. More specifically, each cell in Column A defines the name of a book, each cell in Column B defines the author of the book defined by the cell of Column A within the same row, each cell in Column C defines the published first edition date for the book defined by the cell of Column A within the same row, each cell in Column D defines the newest edition date for the book defined by the cell of Column A within the same row, each cell in Column E defines a sales ranking for the book defined by the cell of Column A within the same row, each cell in Column F defines a number of sales in 2019 for the book defined by the cell of Column A within the same row, each cell in Column G defines a number of sales in 2020 for the book defined by the cell of Column A within the same row, each cell in Column H defines a number of sales in 2021 for the book defined by the cell of Column
- Columns A and B can be manually entered into the spreadsheet by a user via a computing device.
- Column I derives its value from Columns F-H, so the cells of Column I can be automatically populated with data once data is entered into Columns F-H.
- data like published first edition date in Column C, number of sales from 2019 in column F, and number of sales from 2020 in Column G may correspond to fixed or static values
- data like newest edition date in Column D, sales ranking in Column E, and number of sales from 2021 in Column H may correspond to dynamic values that change over time.
- the number of sales from 2021 can be updated daily, and can even be updated on a more granular setting (e.g., on an hourly basis).
- Natural language processing can refer to processing of natural language in order to enable interactions between humans and computing devices.
- natural language processing techniques can be used to convert a natural language query having an unstructured natural language format that is not understandable by a computing device, into a query having a structured format that is understandable by the computing device to perform a natural language processing task.
- the natural language query can be a textual query, a voice query, etc.
- Examples of natural language processing tasks include text and speech processing, morphological analysis, syntactic analysis, lexical semantics, relational semantics, etc.
- a document update manager of a computing system can utilize natural language queries to populate one or more cells of a document with data from external data sources (e.g., external databases or repositories, knowledge graphs, websites, etc.).
- external data sources e.g., external databases or repositories, knowledge graphs, websites, etc.
- a natural language expression can be defined for a column of the spreadsheet, where a row of the spreadsheet can include one or more cells that provide context information for data in that row.
- the document update manager can use the content information, in conjunction with natural language queries for other columns of the spreadsheet, to populate the remainder of the row with data.
- NLP Natural Language Query String
- each row contains a book title and author in Columns A-B.
- Cells in Column C can be populated based on the natural language query “When was the 1 st edition published?”
- Knowledge monitoring can refer to monitoring content changes occurring in an external data source.
- the document update manager can further define a set of update controls for dynamically updating or refreshing content maintained within a document.
- the document update manager can, with respect to a document having a number of cells at least partially populated with content retrieved from one or more external data sources using one or more natural language queries, dynamically update content maintained in the cells with data obtained from the one or more external data sources.
- a portion of the document can include a first set of cells that are filled with manually entered data, and the document update manager can automatically update a remaining portion of the document that includes a second set of cells filled with data to be retrieved from an external data source.
- the data used to fill the second set of cells can correspond to dynamic data that changes over time.
- the document update manager updates the document in accordance with a number of update frequencies each corresponding to a respective cell.
- update frequencies include hourly, daily, monthly, yearly, etc.
- the update frequency can correspond to cells of a spreadsheet.
- an update frequency can be controllable for all rows of cells of a particular column (“column-level control”), for a particular cell (“cell-level control”), for a particular row (“row-level control”), etc.
- row-level control can be provided in conjunction with column-level control to override a column update frequency defined for each of the cells of the row.
- Row-level control can be used if, for example, a user prefers to update a particular row of cells more frequently than other rows (regardless of column).
- Cell-level control can be used if, for example, a user prefers to update a particular cell more frequently than other cells (regardless of column or row).
- the update frequency for a cell can be determined based on an analysis of the frequency of change of the data within a corresponding external data source. For example, an analysis can be performed to determine the average amount of time that elapses between consecutive updates of the data within the external data source (e.g., based on a comparison of timestamps between the consecutive updates, by maintaining an audit log of updates occurring in the external data source, by analyzing a search engine history to obtain an estimate of the rate of update when an external data source is a website, etc.). As an illustration, if the data to be updated is the Newest Edition Date for book “ABC,” if it is determined that a new edition of “ABC” is added in the external data source every year, then the update frequency can be set to one year.
- the update frequency can be set as a default update frequency on a fixed schedule.
- a user can have the option of modifying the currently set update frequency to perform more frequent updates or less frequent updates (e.g., change the update frequency from daily to weekly, or change from daily to hourly).
- the default update frequency can be provided as a recommendation, and the user has the option of setting a customized update schedule for at least a portion of the data populated within the document.
- Visual indicators of respective update frequencies can be provided within the document. For example, if an update frequency with respect to cells of a particular column in a spreadsheet is daily, the document update manager can provide a visual indicator of the update frequency for the column that the update frequency is currently set for daily. Accordingly, the document update manager can “pull” data for updating one or more cells from one or more external data sources in accordance with respective fixed update schedules assigned to the one or more cells.
- the document update manager can update the document by employing one or more subscribers or listeners attached to an external data source (e.g., a node of a knowledge graph).
- an external data source e.g., a node of a knowledge graph
- a subscriber can be attached to at least a portion of an external data source (e.g., a knowledge graph) to identify when the portion of the external data source has been updated, and, upon identifying an update event, forward the updated data to the document update manager for insertion into the corresponding cell.
- the document update manager can receive data for updating one or more cells that is “pushed” by one or more subscribers attached to one or more respective external data sources.
- Automatically updating cell values can eliminate human errors which may result from manual entries, and reduce the time and computing resources needed for the updates.
- the use of update controls can further improve computational efficiency and reduce utilization of computing resources. For example, by updating one or more cells in accordance with an update frequency determined based on an analysis of frequency of change, document content updates can be optimized in a manner that reduces unnecessarily frequent updates and thus reduces resource consumption.
- document content updates can only be made for those cells when an update is indicated by the subscriber, and thus reduces resource consumption. Accordingly, automatically updating cells of a spreadsheet using the set of update controls described herein can improve computational efficiency.
- the document update manager can provide one or more additional features. Examples of such features include providing access back to an external data source for data exploration, identifying incorrect or partially correct data, implementing a data confidence feature, identifying an intent of a natural language query to leverage unstructured data sources and/or structured data sources, handling multi-dimensional data. For example, assume that a spreadsheet includes a list of cities in the United States. One of the columns of the spreadsheet can be “Population,” and a user may be interested in viewing graphs and calculations based on populations in a number of cities. Each cell in the “Population” column can be a single-dimensional value (e.g., latest population) or a multi-dimensional value, identifying data types for data retrieved in response to a natural language query, etc. Further details regarding the operations performed by the document update manager will be described herein below.
- FIG. 1 illustrates an example system architecture 100 , in accordance with implementations of the present disclosure.
- the system architecture 100 (also referred to as “system” herein) includes at least one client device 110 that can connect to servers, such as document platform 120 (e.g., server), via a network 130 .
- client device 110 and one document platform 120 are illustrated as connected to network 130 for simplicity. In practice, there may be more client devices and/or document platforms. Also, in some instances, a client device may perform one or more functions of a document platform and a document platform may perform one or more functions of a client device. Client device 110 may access or receive information from document platform 120 .
- the system architecture 100 can represent a cloud-based environment, which can enable communication between server(s) hosting document platform 120 and client devices 110 over the network 130 to store and share electronic documents.
- the system architecture 100 can apply to systems that are locally interconnected.
- some aspects of the disclosure are described with reference to spreadsheets and document applications managing spreadsheets, it should be understood to those skilled in the art that the systems, methods, functions, and embodiments of the present disclosure can apply to any type of electronic documents and any type of programs or services offered by any type of host applications.
- network 130 may include a public network (e.g., the Internet), a private network (e.g., a local area network (LAN) or wide area network (WAN)), a wired network (e.g., Ethernet network), a wireless network (e.g., an 802.11 network or a Wi-Fi network), a cellular network (e.g., a Long Term Evolution (LTE) network), routers, hubs, switches, server computers, and/or a combination thereof.
- Client device 110 can include a computing device such as personal computer (PC), laptop, mobile phone, smart phone, tablet computer, netbook computer, network-connected television, etc.
- the client device 110 can be associated with one or more users, and the client device 110 can also be referred to as a “user device.”
- document platform 120 may interact with client device 110 such that client device 110 , in conjunction with document platform 120 , can execute an electronic document (“document”) application to manage various documents including documents having a tabular structure.
- the document application can be an online document application.
- the document application is a spreadsheet application (e.g., online spreadsheet application).
- the document application can provide functionality described herein without the use of document platform 120 .
- document platform 120 can interact with a web browser 115 (rather than a designated document application) to, for example, present documents, receive user input related to the documents, etc.
- Documents of a user of the client device 110 may be stored by document platform 120 in, for example, data store 140 .
- document platform 120 may be implemented as, for example, a single computing device or as multiple distributed computing devices. It should be understood and appreciated that whether a device is functioning as a server or a client device can depend on the specific application being implemented. That is, whether a computing device is operating as a client or a server may depend on the context of the role of the computing device within the application. The relationship of client device and server can arise by virtue of program executing on the respective devices and having a client-server relationship to each other.
- the interaction of client device 110 with document platform 120 may be implemented through a web browser 115 executed at client device 110 .
- the term “web browser” is intended to refer to any program that allows a user to browse markup documents (e.g., web documents), regardless of whether the browser program is a stand-alone program or an embedded program, such as a browser program included as part of an operating system.
- the document application as described herein, is implemented as a distributed web application in which portions of the document application execute at one or more of client device 110 and at document platform 120 . More specifically, client device(s) 110 may request the document application from document platform 120 . In response, document platform 120 may transmit portions of the document application for local execution at clients 110 . The document application may thus execute as a distributed application across document platform 120 and one or more client devices 110 . In this manner, client device 110 may not be required to install any document application locally to use the document application hosted by the document platform 120 .
- functions described in implementations as being performed by the document platform 120 can also be performed on the client device 110 in other implementations, if appropriate.
- functionality attributed to a particular component can be performed by different or multiple components operating together.
- the document platform 120 can also be accessed as a service provided to other systems or devices through appropriate application programming interfaces.
- a “user” can be represented as a single individual.
- other implementations of the disclosure encompass a “user” being an entity controlled by a set of users and/or an automated source.
- a set of individual users federated as a community in a social network can be considered a “user.”
- an automated consumer can be an automated ingestion pipeline, such as a topic channel, of the document platform 120 .
- a document may be implemented as a distributed web application in which portions of the application execute at multiple client devices 110 and at the document platform 120 to provide for collaboration among multiple users working on a single document. For example, multiple users may simultaneously or concurrently edit such a collaborative document and view the edits of each of the users in real time or near real time (e.g., within a few milliseconds or seconds).
- the edit may be transmitted to the document platform 120 and then forwarded to other collaborating users that are also editing or viewing the spreadsheet.
- the document platform 120 may handle conflicts between collaborating users, such as when two users try to simultaneously edit a particular cell.
- the document platform 120 may accept the first edit received or in some way prioritize the collaborating users such that the edits of higher priority users override those of lower priority users. If an edit of a user is rejected by the document platform 120 , the document platform 120 may transmit a message back to the user that informs that user of the rejection of the edit. In this manner, multiple users may collaborate, potentially in real-time (or near real-time), on a single spreadsheet.
- the parties that view and collaborate on a particular document may be specified by an initial creator of the document. For example, the initial creator of the document may be given “administrator” privileges that allow the creator to specify the privileges for each of the other possible collaborators.
- the initial creator may specify that the other collaborators have privileges to do one or more of the following: edit the spreadsheet, view the spreadsheet only, edit designated parts of the spreadsheet, or add additional users to the list of possible collaborators. For example, certain users may be able to edit certain parts of the spreadsheet, while other designated cells or regions of cells will remain “locked” to those users such that the users can view but not edit the locked cells.
- the initial creator may also be able to configure and/or allow at least some collaborators to configure a set of update controls for dynamically updating or refreshing content maintained within the spreadsheet.
- a document may be designated as a “public” document that anyone can view and/or edit.
- the document platform 120 may include a document update manager 122 to manage document updates.
- the document update manager 122 can utilize natural language queries to populate one or more cells of a document having a tabular structure with data from one or more external data sources 150 - 1 through 150 -N.
- a natural language expression can be defined for a column of the spreadsheet, where a row of the spreadsheet can include one or more cells that provide context information for data in that row.
- the document update manager 122 can use the content information, in conjunction with any other natural language queries provided for other columns of the spreadsheet, to populate the remainder of the row with data.
- At least one of the external data sources 150 - 1 through 150 -N includes a knowledge graph.
- a knowledge graph is a graph-structured data model that provides a comprehensive collection of structured data about a network of entities (e.g. objects, events, concepts), as well as relationships between each of the entities, and attributes or properties about each of the entities.
- a knowledge graph can include a number of nodes that correspond to respective entities, and a number of edges that each define a relationship between a pair of nodes (entities).
- a knowledge graph can be embodied as an undirected graph, or directed graph that defines one-way relationships or links between the nodes.
- a knowledge graph can use a reasoning mechanism to derive new knowledge.
- the data within a knowledge graph can range from static or near static (e.g., the title of a book, the author of a book, the published first edition date of a book), to dynamic (e.g., sales ranking of the book, the number of sales of the book in a current year). Since a knowledge graph is updated over time, audit logs of the changes for data within the knowledge graph can be maintained. Such audit logs can include timestamps or other metadata that can be used to identify the update frequency with respect to a particular type of data.
- the knowledge graph can be a general knowledge graph, personal knowledge graph, a cohort knowledge graph based on a group of one or more individuals, etc.
- the external data source can be a website.
- a search engine can be used to locate an external data source for the data.
- Certain websites can be static or near-static with infrequent updates, while other websites can be dynamic with frequent updates.
- a web site search history e.g., search engine history
- search engine history can be used to estimate the frequency of change for the web site data source.
- the document update manager 122 can dynamically and selectively update or refresh data populated within the document.
- the document update manager 122 can, with respect to a document at least partially populated with data retrieved using one or more natural language queries, dynamically update one or more cells with data obtained from one or more external data sources.
- a portion of the document can include a first set of cells (e.g., cells) filled with manually entered data, and the document update manager 122 can automatically update a remaining portion of the document that includes a second set of cells filled with data to be retrieved from an external data source.
- the data used to fill the second set of cells can correspond to dynamic data that changes over time.
- the document update manager 122 can perform an update for at least one cell at an update frequency (e.g. hourly, daily, monthly, yearly).
- the update frequency can correspond to cells of a spreadsheet.
- an update frequency can be controllable for all rows of cells of a particular column (“column-level control”), for a particular cell (“cell-level control”), for a particular row (“row-level control”), etc.
- row-level control can be provided in conjunction with column-level control to override a column update frequency defined for each of the cells of the row.
- the document update manager 122 can receive, from a user, a natural language query defined within the document (e.g., defined by a column of a spreadsheet).
- the document update manager 122 can implement a query conversion mechanism to convert the natural language query into a data access query for accessing data from an external data source to fill in cells of the column (e.g., cells within each row corresponding to the column of the spreadsheet).
- the query conversion mechanism can leverage semantic relationships within the natural language query to translate the natural language string into a machine-readable string for accessing the data from the external data source.
- the document update manager 122 can utilize the data access query to import data into the cells, and determine an update frequency for the data imported into the cell.
- the document update manager 122 updates the document in accordance with a number of update frequencies each corresponding to a respective cell.
- the update frequency for a cell can be based on an analysis of the frequency of change of the data.
- the frequency of change of the data can be obtained from audit logs corresponding to the external data source. For example, an analysis can be performed to determine the amount of time that elapses between consecutive changes or updates to the data within the external data source (e.g., based on a comparison of timestamps of audit logs between the consecutive updates).
- the update frequency can then be determined in view of a pattern of updates with respect to a given set of samples of amounts of time between consecutive updates. For example, if a particular data item is determined to change at a substantially regular or fixed frequency in view of the given set of samples, the update frequency can be set to that frequency. As another example, it may be the case that a particular data item is determined to change at various frequencies (e.g., an irregular schedule). For example, the amount of time that elapses between a first update and a second update can be 1 day, but the amount of time that elapses between the second update and a third update can be 1 week.
- the update frequency can be set as the minimum amount of time determined within the given set of samples, an average amount of time determined within the given set of samples, etc. Greater accuracy in update frequency calculation can be achieved by having a greater number of samples within the given set of samples.
- the update frequency can be set as a default update frequency on a fixed schedule, which can be modified by a user.
- the user can have the option of modifying the current update frequency to perform more frequent updates or less frequent updates (e.g., change the update frequency from daily to weekly, or change from daily to hourly).
- the default update frequency can be provided as a recommendation, and the user has the option of setting a customized update schedule for at least a portion of the data populated within the document.
- At least one update frequency for at least one cell can be updated from time-to-time, either automatically or by user request, to ensure that the update frequency is optimally set. For example, it may be the case that a data item that has historically been changing annually is now changing monthly.
- Visual indicators of respective update frequencies can be provided within the document. For example, if an update frequency with respect to cells of a particular column in a spreadsheet is daily, the document update manager 122 can provide a visual indicator of the update frequency for the column that the update frequency is currently set for daily. Accordingly, the document update manager 122 can “pull” data for updating one or more cells from one or more external data sources in accordance with respective fixed update schedules assigned to the one or more cells.
- the document update manager 122 can poll an external data source for data updates in accordance with an update frequency. In some instances, such as with respect to data that changes infrequently (e.g., at least monthly), it may be inefficient to perform updates in accordance with an update frequency. To address this, in some implementations, the document update manager 122 can update the document by employing one or more subscribers or listeners associated with an external data source (e.g., a node of a knowledge graph) to subscribe to (e.g., to receive or to be notified of) update events (e.g., using service-to-service communications between a service managing a knowledge graph and the document update manager 122 ).
- an external data source e.g., a node of a knowledge graph
- a subscriber can be associated with (e.g., attached to) at least a portion of an external data source (e.g., a knowledge graph) to identify when the portion of the external data source has been updated, and forward the updated data to the document update manager for insertion into the corresponding cell.
- the document update manager 122 can receive data for updating one or more cells that is “pushed” by one or more subscribers associated with one or more respective external data sources.
- the document update manager 122 can provide one or more additional features.
- the document update manager 122 can further provide access back to an external data source (e.g., a link to the external data source). This can enable a user to explore more details of the data that has been populated into the document, and provide a way for the user to validate data trust. For example, if the user is concerned about the accuracy of the data from the external data source, the user could access the external data source itself (e.g., via the provided link) to determine whether to trust the veracity of the data.
- an external data source e.g., a link to the external data source.
- the document update manager 122 can further identify data populated in a cell that is incorrect or partially correct. This can be true even if the data was statically entered into the cell by the user. The document update manager 122 can then send a notification to the user of a proposed change to the data and/or automatically update the data.
- the document update manager 122 determines (e.g., by comparing content of a cell with respective content of an external data source) that book “ABC” has a co-author named John Smith)
- the document update manager 122 can send a notification to the user of the proposal to update cell B 2 with “John Doe and John Smith” and/or can automatically update cell B 2 with “John Doe and John Smith.”
- the document update manager 122 can further implement a data confidence feature.
- the data confidence feature can be related to the confidence that the data obtained from a particular source accurately responds to a particular natural language query.
- the data confidence feature can utilize a visual confidence indicator for data, such as a confidence percentage, a symbol (e.g., color) corresponding to a confidence range (e.g., green circle for greater than 90% confidence, red circle for less than 50% confidence), etc.
- a user can set a customizable confidence threshold that should be exceeded in order to populate the corresponding cell with the data.
- a user may want to ensure that only high-confidence data is used (e.g., by setting the confidence threshold for 90% confidence), while for some other natural language queries, a user may have greater tolerance for low-confidence data (e.g., by not setting a confidence threshold).
- the document update manager 122 can further identify an intent of a natural language query to leverage unstructured data sources and/or structured data sources. For example, with respect to a spreadsheet, the document update manager can combine a column (e.g., Date of book publication) along with one or more context values (e.g., Book ABC, Author John Doe) to identify the intent of the natural language query.
- a column e.g., Date of book publication
- context values e.g., Book ABC, Author John Doe
- the document update manager 122 can handle multi-dimensional data. For example, assume that a document is a spreadsheet that includes a list of cities in the United States. One of the columns of the spreadsheet can be “Population,” and a user may be interested in viewing graphs and calculations built based on populations in a number of cities. Each cell in the “Population” column can be a single-dimensional value (e.g., latest population) or a multi-dimensional value (e.g., an array of population over time, such as the population from each census measurement). Since the data is populated programmatically into respective cells, the document update manager 122 can retrieve time series population data for graphing and/or calculations.
- a document is a spreadsheet that includes a list of cities in the United States.
- One of the columns of the spreadsheet can be “Population,” and a user may be interested in viewing graphs and calculations built based on populations in a number of cities.
- Each cell in the “Population” column can be a single-dimensional value (e.g., latest population) or
- the document update manager 122 can identify data types for data retrieved in response to a natural language query. For example, data can have a particular data type, such as GPS coordinate, date, single integer value, array of integer values, etc.
- the document update manager 122 can maintain metadata about the data type that can be used to aid in data manipulation (e.g., creations of graphs, calculations).
- a user may be provided with controls allowing the user to make an election as to both if and when systems, programs, or features described herein may enable collection of user information (e.g., information about a user's social network, social actions, or activities, profession, a user's preferences, or a user's current location), and if the user is sent content or communications from a server.
- user information e.g., information about a user's social network, social actions, or activities, profession, a user's preferences, or a user's current location
- certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information is removed.
- a user's identity may be treated so that no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined.
- location information such as to a city, ZIP code, or state level
- the user may have control over what information is collected about the user, how that information is used, and what information is provided to the user.
- FIG. 2 is a diagram illustrating an example spreadsheet 200 having a number of cells, in accordance with implementations of the present disclosure. It is assumed that at least a portion of the cells of the spreadsheet 200 has been populated within data using a document update manager (e.g., the document update manager 122 of FIG. 1 ). Although a spreadsheet is shown in FIG. 2 , such an example should not be considered limiting, and any suitable document having a tabular structure is contemplated.
- a document update manager e.g., the document update manager 122 of FIG. 1
- the spreadsheet 200 includes a number of columns 210 A through 210 I and a number of rows 220 - 1 through 220 - 3 . Although 9 columns and 3 rows are shown, the number of columns and rows should not be considered limiting.
- Row 220 - 1 is a descriptive row that indicates the type of data to be inserted within the cell of a corresponding column. For example, the text “Book name” is entered into the cell having an address defined by row 220 - 1 and column 210 A to indicate that the data maintained in the other cells of column 210 A correspond to book names (e.g., the respective cells having addresses defined by column 210 A and rows 220 - 2 and 220 - 3 ).
- column 210 A is defined as a “Book name” column and includes a number of cells having values indicative of respective book names
- column 210 B is defined as an “Author” column and includes a number of cells having values indicative of respective authors for respective ones of the book names within column 210 A.
- column 210 C is defined as a “Published 1 st Edition Date” column and includes a number of cells (e.g., cells 230 - 1 and 230 - 2 ) having values indicative of respective 1 st edition publication dates for respective ones of the book names within column 210 A
- column 210 D is defined as a “Newest Edition Date” column and includes a number of cells (e.g., cells 240 - 1 and 240 - 2 ) having values indicative of respective newest edition dates for respective ones of the book names within column 210 A
- column 210 E is defined as a “Sales Ranking” column and includes a number of cells (e.g., cells 250 - 1 and 250 - 2 ) having values indicative of respective sales rankings for respective ones of the book names within column 210 A
- column 210 F is defined as a “Sales 2019 ” column and includes a number of cells (e.g., cells 260 - 1 and 260 - 2 ) having values indicative of respective number of sales in the
- Cells 230 through 290 are presently empty, as data has yet to be propagated within these particular cells.
- the cell 290 - 1 can be defined as a sum of the values entered into the cells 270 - 1 and 280 - 1
- the cell 290 - 2 can be defined as the sum of the values entered into the cells 270 - 2 and 280 - 2 . Further details regarding updating the spreadsheet 200 , including the cells 230 through 290 , will now be described below with reference to FIG. 3 .
- FIG. 3 is a diagram illustrating an example spreadsheet 300 having a number of cells, in accordance with implementations of the disclosure. It is assumed that at least a portion of the cells of the spreadsheet 300 has been populated using a document update manager (e.g., the document update manager 122 of FIG. 1 .)
- the spreadsheet 300 is based on the spreadsheet 200 of FIG. 2 , and includes columns 210 A through 210 I and rows 220 - 1 through 220 - 3 .
- the cells 230 - 290 of the spreadsheet 200 of FIG. 2 have been filled with data. Additionally, each of the columns 210 C through 210 H have been assigned default update frequencies 310 - 1 through 310 - 6 that correspond to recommendations or suggestions for updating the cells within their respective columns.
- the default update frequency 310 - 1 defines column 210 C as a static column in which the cells of the column 210 C are not updated by recommendation
- the default update frequency 310 - 2 defines column 210 D as a yearly update column in which the cells of the column 210 D are updated yearly by recommendation
- the default update frequency 310 - 3 defines column 210 E as a daily update column in which the cells of column 210 E are updated daily by recommendation
- the default update frequency 310 - 4 defines column 210 f as a static column in which the cells of column 210 F are not updated by recommendation
- the default update frequency 310 - 5 defines column 210 G as a static column in which the cells of column 210 G are not updated by recommendation
- the default update frequency 310 - 6 defines column 210 H as a weekly update column in which the cells of column 210 H are updated weekly by recommendation.
- the values of the cells of column 210 I are defined as a summation of the values of the cells from columns 210 F through 210 H within the same row (e.g., using the SUM( ) function).
- the default update frequencies 310 - 1 , 310 - 2 , 310 - 4 , 310 - 5 and 310 - 6 are defined as currently set update frequencies for their respective columns. That is, the user has accepted these default update frequency recommendations.
- a user can provide a user-defined update frequency that overrides a currently set update frequency and/or default update frequency recommendation if the user would prefer a longer or shorter duration between updates as provided by the default update frequency.
- a user-defined update frequency 320 is provided as the currently set update frequency for column 210 E.
- the user-defined update frequency 320 defines column 210 D as a weekly update column in which the cells of columns, in contrast to the daily update recommended by the default update frequency 310 - 3 .
- Each of the update frequencies 310 - 1 through 310 - 6 and 320 can be provided as a visual indicator within the spreadsheet 300 .
- These visual indicators provide a visual interface for a user to analyze the recommended or default update frequencies and/or the currently set update frequencies (e.g., a recommended update frequency such as 310 - 1 or a user-defined update frequency such as 320 ) to determine whether the user would like to modify the currently set update frequencies 310 - 1 through 310 - 6 .
- the spreadsheet 300 is shown as being updated in accordance with respective update frequencies.
- the spreadsheet 300 can be updated by utilizing one or more subscribers associated with one or more external data sources that each detect a data update at its corresponding external data source, and push the data update to the document update manager for updating.
- FIG. 4 depicts a flow diagram of a method 400 for dynamically and selectively updating a document based on knowledge monitoring and natural language processing, in accordance with implementations of the present disclosure.
- Method 400 may be performed by processing logic that may include hardware (circuitry, dedicated logic, etc.), software (e.g., instructions run on a processing device), or a combination thereof. In one implementation, some or all the operations of method 400 may be performed by the document update manager 122 of FIG. 1 .
- the processing logic identifies a document having a tabular structure including a number of cells, where the document is associated with a set of update controls for automatically updating content in at least one cell.
- the set of update controls can be stored with the document in association with respective cell(s) (e.g., in data store 140 ).
- the document can be a spreadsheet including cells defined by a number of columns and a number of rows.
- the set of update controls can include one or more update controls for updating respective cells of the document.
- each update control can be a column-level update control for updating a column of cells, a row-level update control for updating a row of cells, or a cell-level update control for updating an individual cell.
- the set of update controls includes an update frequency corresponding to at least one cell.
- the processing logic can obtain the data for updating the at least one cell by “pulling” the data from at least one external data source in accordance with the update frequency. Further details regarding update frequencies are described above with reference to FIGS. 1 - 3 and with reference to FIG. 5 A .
- providing default settings for the update controls includes implementing at least one subscriber or listener associated with at least one external data source (e.g., a knowledge graph).
- the processing logic can obtain data for the at least one cell by receiving data “pushed” by at least one subscriber upon identification of an update event with respect to the portion of the external data source. Further details regarding subscribers are described above with reference to FIGS. 1 - 3 and below with reference to FIG. 5 B .
- identifying the document includes generating at least a portion of the document using one or more natural language queries.
- Generating at least a portion of the document can include defining the set of update controls.
- defining the set of update controls can include determining an update frequency corresponding to at least one cell.
- defining the set of update controls can include associating at least one subscriber with at least one external data source.
- the processing logic detects, based on the set of update controls, an event triggering an automated update of the content in the at least one cell.
- the event is a detection that an amount of time that has elapsed since a previous update of the content in the at least one cell is equal to an update frequency for updating the content of the at least one cell.
- the event is the receipt of an update notification from a subscriber attached to a node of a knowledge graph for updating the content of the at least one cell.
- the processing logic obtains data from at least one external data source in accordance with the set of update controls and, at block 440 , the processing logic causes the content in the at least one cell to be updated based on the data from the at least one external data source (e.g., by performing the update of the content in the at least one cell or by providing the data from the external data source to a corresponding client device application that is designated to perform the update). Further details regarding blocks 410 - 440 are described above with reference to FIGS. 1 - 4 and below with reference to FIGS. 5 A- 5 B .
- FIG. 5 A depicts a flow diagram of a method 500 A for dynamically updating content maintained in a document.
- Method 500 A may be performed by processing logic that may include hardware (circuitry, dedicated logic, etc.), software (e.g., instructions run on a processing device), or a combination thereof. In one implementation, some or all the operations of method 500 A may be performed by the document update manager 122 of FIG. 1 .
- the processing logic defines an update frequency corresponding to an amount of time between updates of content maintained in at least one cell of a document having a tabular structure.
- the document can be a spreadsheet.
- the update frequency is a default update frequency corresponding to an update frequency recommendation.
- the update frequency is a user-defined update frequency that overrides the update frequency recommendation.
- a user interface is provided to present the default update frequency in association with the at least one cell.
- the user interface can be modified to present the user-defined update frequency in association with the at least one cell.
- the set of update controls stored in a data store can be modified to include the user-defined update frequency for the at least one cell.
- the update frequency is a column-level update control for controlling the update of data maintained in cells within a particular column of the spreadsheet. In some implementations, the update frequency is a row-level update control for controlling the update of data maintained in cells within a particular row of the spreadsheet. In some implementations, the update frequency is a cell-level update control for controlling the update of data maintained in one or more individual cells of the spreadsheet.
- the processing logic determines that the amount of time has elapsed from a most recent update to the content maintained in the at least one cell and, at block 530 A, the processing logic retrieves data from at least one external data source to update the at least one cell.
- the data retrieval can be implemented by programming the document with a natural language query that specifies the at least one external data source (e.g., knowledge graph, web page).
- the processing logic can utilize a query conversion mechanism to convert the natural language query into a data access query for accessing data from the at least one external data source to fill in the at least one cell.
- the query conversion mechanism can leverage semantic relationships within the natural language query to translate the natural language string into a machine-readable string for accessing the data from the at least one external data source.
- the update frequency for a cell can be based on an analysis of the frequency of change of the data to the amount of time as an average amount of time that elapses between consecutive updates of the data within the external data source (e.g., based on a comparison of timestamps between the consecutive updates).
- the external data source is a knowledge graph
- audit logs of the changes for data within the knowledge graph can be maintained.
- Such audit logs can include timestamps or other metadata that can be used to identify the update frequency with respect to a particular type of data.
- a website search history e.g., search engine history
- blocks 510 A through 530 A are described above with reference to FIGS. 1 - 4 .
- FIG. 5 B depicts a flow diagram of a method 500 B for dynamically updating content maintained in a document, in accordance with implementations of the present disclosure.
- Method 500 B may be performed by processing logic that may include hardware (circuitry, dedicated logic, etc.), software (e.g., instructions run on a processing device), or a combination thereof.
- processing logic may include hardware (circuitry, dedicated logic, etc.), software (e.g., instructions run on a processing device), or a combination thereof.
- some or all the operations of method 500 A may be performed by the document update manager 122 of FIG. 1 .
- the processing logic associates a subscriber with an external data source for monitoring updates with respect to content maintained in at least one cell of a document having a tabular structure.
- the document is a spreadsheet.
- the subscriber can be attached to a knowledge graph to receive updates to the node (e.g., when relevant updates are published by a service managing the knowledge graph).
- the processing logic receives, via the subscriber, data to update the at least one cell. For example, upon identifying an update event to the portion of the external data source (e.g., the node of the knowledge graph), the subscriber can provide the updated data that should be inserted into the cell. Further details regarding blocks 510 B and 520 B are described above with reference to FIGS. 1 - 4 .
- FIG. 6 is a block diagram illustrating an exemplary computer system, in accordance with implementations of the present disclosure.
- the computer system 600 can be the document platform 130 or the client device 110 in FIG. 1 .
- the machine can operate in the capacity of a server or an endpoint machine in endpoint-server network environment, or as a peer machine in a peer-to-peer (or distributed) network environment.
- the machine can be a television, a personal computer (PC), a tablet PC, a set-top box (STB), a Personal Digital Assistant (PDA), a cellular telephone, a web appliance, a server, a network router, switch or bridge, or any machine capable of executing a set of instructions (sequential or otherwise) that specify actions to be taken by that machine.
- PC personal computer
- PDA Personal Digital Assistant
- STB set-top box
- FIG. 6 is a block diagram illustrating an exemplary computer system, in accordance with implementations of the present disclosure.
- the computer system 600 can be the document platform 130
- the example computer system 600 includes a processing device (processor) 602 , a main memory 604 (e.g., read-only memory (ROM), flash memory, dynamic random access memory (DRAM) such as synchronous DRAM (SDRAM), double data rate (DDR SDRAM), or DRAM (RDRAM), etc.), a static memory 606 (e.g., flash memory, static random access memory (SRAM), etc.), and a data storage device 618 , which communicate with each other via a bus 640 .
- a processing device e.g., a main memory 604
- main memory 604 e.g., read-only memory (ROM), flash memory, dynamic random access memory (DRAM) such as synchronous DRAM (SDRAM), double data rate (DDR SDRAM), or DRAM (RDRAM), etc.
- DRAM dynamic random access memory
- SDRAM synchronous DRAM
- DDR SDRAM double data rate
- RDRAM DRAM
- static memory 606 e.g., flash memory, static random access memory (
- Processor 602 represents one or more general-purpose processing devices such as a microprocessor, central processing unit, or the like. More particularly, the processor 602 can be a complex instruction set computing (CISC) microprocessor, reduced instruction set computing (RISC) microprocessor, very long instruction word (VLIW) microprocessor, or a processor implementing other instruction sets or processors implementing a combination of instruction sets.
- the processor 602 can also be one or more special-purpose processing devices such as an application specific integrated circuit (ASIC), a field programmable gate array (FPGA), a digital signal processor (DSP), network processor, or the like.
- the processor 602 is configured to execute instructions 605 (e.g., for predicting channel lineup viewership) for performing the operations discussed herein.
- instructions 605 e.g., for predicting channel lineup viewership
- the computer system 600 can further include a network interface device 608 .
- the computer system 600 also can include a video display unit 610 (e.g., a liquid crystal display (LCD) or a cathode ray tube (CRT)), an input device 612 (e.g., a keyboard, and alphanumeric keyboard, a motion sensing input device, touch screen), a cursor control device 614 (e.g., a mouse), and a signal generation device 620 (e.g., a speaker).
- a video display unit 610 e.g., a liquid crystal display (LCD) or a cathode ray tube (CRT)
- an input device 612 e.g., a keyboard, and alphanumeric keyboard, a motion sensing input device, touch screen
- a cursor control device 614 e.g., a mouse
- a signal generation device 620 e.g., a speaker
- the data storage device 618 can include a non-transitory machine-readable storage medium 624 (also computer-readable storage medium) on which is stored one or more sets of instructions 605 (e.g., for obtaining optimized encoder parameter settings) embodying any one or more of the methodologies or functions described herein.
- the instructions can also reside, completely or at least partially, within the main memory 604 and/or within the processor 602 during execution thereof by the computer system 600 , the main memory 604 and the processor 602 also constituting machine-readable storage media.
- the instructions can further be transmitted or received over a network 630 via the network interface device 608 .
- the instructions 605 include instructions for designating a verbal statement as a polling question.
- the computer-readable storage medium 624 (machine-readable storage medium) is shown in an exemplary implementation to be a single medium, the terms “computer-readable storage medium” and “machine-readable storage medium” should be taken to include a single medium or multiple media (e.g., a centralized or distributed database, and/or associated caches and servers) that store the one or more sets of instructions.
- the terms “computer-readable storage medium” and “machine-readable storage medium” shall also be taken to include any medium that is capable of storing, encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the present disclosure.
- the terms “computer-readable storage medium” and “machine-readable storage medium” shall accordingly be taken to include, but not be limited to, solid-state memories, optical media, and magnetic media.
- a component may be, but is not limited to being, a process running on a processor (e.g., digital signal processor), a processor, an object, an executable, a thread of execution, a program, and/or a computer.
- a processor e.g., digital signal processor
- an application running on a controller and the controller can be a component.
- One or more components may reside within a process and/or thread of execution and a component may be localized on one computer and/or distributed between two or more computers.
- a “device” can come in the form of specially designed hardware; generalized hardware made specialized by the execution of software thereon that enables hardware to perform specific functions (e.g., generating interest points and/or descriptors); software on a computer readable medium; or a combination thereof.
- one or more components may be combined into a single component providing aggregate functionality or divided into several separate sub-components, and any one or more middle layers, such as a management layer, may be provided to communicatively couple to such sub-components in order to provide integrated functionality.
- middle layers such as a management layer
- Any components described herein may also interact with one or more other components not specifically described herein but known by those of skill in the art.
- example or “exemplary” are used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as “exemplary” is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather, use of the words “example” or “exemplary” is intended to present concepts in a concrete fashion.
- the term “or” is intended to mean an inclusive “or” rather than an exclusive “or.” That is, unless specified otherwise, or clear from context, “X employs A or B” is intended to mean any of the natural inclusive permutations.
- implementations described herein include collection of data describing a user and/or activities of a user.
- data is only collected upon the user providing consent to the collection of this data.
- a user is prompted to explicitly allow data collection.
- the user may opt-in or opt-out of participating in such data collection activities.
- the collected data is anonymized prior to performing any analysis to obtain any statistical patterns so that the identity of the user cannot be determined from the collected data.
Abstract
Description
- Aspects and implementations of the present disclosure relate generally to updating electronic documents, and more particularly relate to dynamically and selectively updating electronic documents having a tabular structure based on knowledge monitoring and natural language processing.
- An electronic document (“document”) can have a tabular structure including a plurality of cells. Such a document can be referred to as a “data table,” or simply “table.” Each cell corresponds to a region for inputting data in a particular form (e.g. numerical or text data), and the document can be used to organize, analyze and/or store the input data. Each cell can include a non-numerical data entry, a mathematical expression for assigning a value to the cell, or can remain empty. A mathematical expression can include a numerical value, a reference to a value of one or more cells within the spreadsheet, an arithmetic operator, a relational operator, a function, etc. Additionally, the document can support programming capability. For example, content of a cell can be derived from content of one or more other cells of the document. In some implementations, the document can be a spreadsheet. The cells within the spreadsheet can be arranged as an array including a number of rows and a number of columns, where a particular cell of the spreadsheet can be addressed or referenced with respect to its column location within the table and its row location within the table. In some examples, columns can be represented by letters (e.g., Column A, Column B, . . . ) and rows can be represented by numbers (e.g.,
Row 1, Row 2, . . . ). For example, a cell located in Column D and Row 5 can be referenced as cell D5. - The below summary is a simplified summary of the disclosure in order to provide a basic understanding of some aspects of the disclosure. This summary is not an extensive overview of the disclosure. It is intended neither to identify key or critical elements of the disclosure, nor delineate any scope of the particular implementations of the disclosure or any scope of the claims. Its sole purpose is to present some concepts of the disclosure in a simplified form as a prelude to the more detailed description that is presented later.
- In some implementations, a system and method are disclosed. In an implementation, a method includes identifying, by a processing device, a document having a tabular structure including a plurality of cells. The document is associated with a set of update controls for automatically updating content in at least one cell of the plurality of cells. The method further includes detecting, by the processing device and based on the set of update controls, an event triggering an automated update of the content in the at least one cell, and responsive to detecting the event, obtaining, by the processing device, data from at least one external data source in accordance with the set of update controls, and causing, by the processing device, the content in the at least one cell to be updated based on the data from the at least one external data source.
- In some implementations, the method further includes generating, by the processing device, at least a portion of the document using one or more natural language queries. Generating at least a portion of the document includes defining the set of update controls.
- In some implementations, the method further includes the set of update controls includes an update frequency corresponding to an amount of time between updates of the content maintained in the at least one cell. Obtaining the data from the at least one external data source further includes determining that the amount of time has elapsed from a most recent update to the content maintained in the at least one cell, and in response to determining that the amount of time has elapsed from the most recent update, retrieving the data from the at least one external data source. For example, the update frequency can be a default update frequency corresponding to a recommended update frequency. As another example, the method can further include providing, by the processing device, a user interface presenting a default update frequency in association with the at least one cell, receiving, by the processing device, user input specifying a user-defined update frequency for the at least one cell, where the user input causes the user interface to be modified to present the user-defined update frequency in association with the at least one cell, and modifying, by the processing device, the set of update controls stored in a data store to include the user-defined update frequency for the at least one cell.
- In some implementations, obtaining the data from the at least one external data source further comprises receiving the data from a subscriber associated with a portion of the at least one external data source.
- Aspects and implementations of the present disclosure will be understood more fully from the detailed description given below and from the accompanying drawings of various aspects and implementations of the disclosure, which, however, should not be taken to limit the disclosure to the specific aspects or implementations, but are for explanation and understanding only.
-
FIG. 1 illustrates an example system architecture, in accordance with implementations of the present disclosure. -
FIG. 2 is a diagram illustrating an example spreadsheet including a number of cells, in accordance with implementations of the present disclosure. -
FIG. 3 is a diagram illustrating an example spreadsheet including a number of cells updated in accordance with respective update frequencies, in accordance with implementations of the disclosure. -
FIG. 4 depicts a flow diagram of a method for dynamically and selectively updating a document based on knowledge monitoring and natural language processing, in accordance with implementations of the present disclosure. -
FIGS. 5A and 5B depict flow diagrams of methods for dynamically updating content maintained in a document, in accordance with implementations of the present disclosure. -
FIG. 6 is a block diagram illustrating an exemplary computer system, in accordance with implementations of the present disclosure. - Aspects of the present disclosure relate to dynamically and selectively updated spreadsheets based on knowledge monitoring and natural language processing. One challenge in constructing an electronic document (“document”) having a tabular structure (e.g., spreadsheet) is populating data into the document. As an illustration, the following portion of a spreadsheet including Columns A-I and Rows 1-3 is provided as Table 1:
-
TABLE 1 A B C D E F G H I 1 Book Author Published Newest Sales Sales Sales Sales Sales name 1st Edition Edition Ranking 2019 2020 2021 2019-2021 Date Date 2 ABC John Doe 3 XYZ Jane Doe - Table 1 is a portion of a spreadsheet that organizes data related to a set of books. The set of books includes “ABC” by John Doe and “XYZ” by Jane Doe, and attributes of each book of the set of books. More specifically, each cell in Column A defines the name of a book, each cell in Column B defines the author of the book defined by the cell of Column A within the same row, each cell in Column C defines the published first edition date for the book defined by the cell of Column A within the same row, each cell in Column D defines the newest edition date for the book defined by the cell of Column A within the same row, each cell in Column E defines a sales ranking for the book defined by the cell of Column A within the same row, each cell in Column F defines a number of sales in 2019 for the book defined by the cell of Column A within the same row, each cell in Column G defines a number of sales in 2020 for the book defined by the cell of Column A within the same row, each cell in Column H defines a number of sales in 2021 for the book defined by the cell of Column A within the same row, and each cell in Column I defines a number of sales from 2019 to 2021 for the book defined by the cell of Column A within the same row. The values for a cell of Column I can be derived from the corresponding values of the cells from columns F-H within the same row. For example, the value of cell 12 can be derived as a summation of the values of cell F2 through cell H2.
- Columns A and B can be manually entered into the spreadsheet by a user via a computing device. Column I derives its value from Columns F-H, so the cells of Column I can be automatically populated with data once data is entered into Columns F-H. Although data like published first edition date in Column C, number of sales from 2019 in column F, and number of sales from 2020 in Column G may correspond to fixed or static values, data like newest edition date in Column D, sales ranking in Column E, and number of sales from 2021 in Column H may correspond to dynamic values that change over time. For example, the number of sales from 2021 can be updated daily, and can even be updated on a more granular setting (e.g., on an hourly basis).
- Although conventional spreadsheets enable the use of mathematical expressions to derive cell values internally with reference to other cell values (as described above), conventional spreadsheets typically require users to manually update cell values as these values change over time. Manually updating cells of a spreadsheet can result in incorrect values in some of the cells due to human errors and can take significant time and computing resources.
- Aspects of the present disclosure address the above and other deficiencies by dynamically and selectively updating documents having a tabular structure (e.g., spreadsheets) based on knowledge monitoring and natural language processing. Natural language processing can refer to processing of natural language in order to enable interactions between humans and computing devices. For example, natural language processing techniques can be used to convert a natural language query having an unstructured natural language format that is not understandable by a computing device, into a query having a structured format that is understandable by the computing device to perform a natural language processing task. The natural language query can be a textual query, a voice query, etc. Examples of natural language processing tasks include text and speech processing, morphological analysis, syntactic analysis, lexical semantics, relational semantics, etc.
- A document update manager of a computing system can utilize natural language queries to populate one or more cells of a document with data from external data sources (e.g., external databases or repositories, knowledge graphs, websites, etc.). For example, in the case of a spreadsheet, a natural language expression can be defined for a column of the spreadsheet, where a row of the spreadsheet can include one or more cells that provide context information for data in that row. The document update manager can use the content information, in conjunction with natural language queries for other columns of the spreadsheet, to populate the remainder of the row with data. For example, in some implementations, a natural language expression to populate cells within a column of a spreadsheet can be of the form=NLP (“[Natural Language Query String]”, [
Reference Cell 1 in row M], [Reference Cell 2 in row M], ‘Reference Cell N in row M]). Illustratively, in the above example with reference to Table 1, each row contains a book title and author in Columns A-B. Cells in Column C can be populated based on the natural language query “When was the 1st edition published?” The natural language expression can illustratively be of the form=NLP (When was the 1st edition published?”, A2, B2). - Knowledge monitoring can refer to monitoring content changes occurring in an external data source. The document update manager can further define a set of update controls for dynamically updating or refreshing content maintained within a document. For example, the document update manager can, with respect to a document having a number of cells at least partially populated with content retrieved from one or more external data sources using one or more natural language queries, dynamically update content maintained in the cells with data obtained from the one or more external data sources. For example, a portion of the document can include a first set of cells that are filled with manually entered data, and the document update manager can automatically update a remaining portion of the document that includes a second set of cells filled with data to be retrieved from an external data source. For example, the data used to fill the second set of cells can correspond to dynamic data that changes over time.
- In some implementations, the document update manager updates the document in accordance with a number of update frequencies each corresponding to a respective cell. Examples of update frequencies include hourly, daily, monthly, yearly, etc. For example, the update frequency can correspond to cells of a spreadsheet. Here, an update frequency can be controllable for all rows of cells of a particular column (“column-level control”), for a particular cell (“cell-level control”), for a particular row (“row-level control”), etc. For example, row-level control can be provided in conjunction with column-level control to override a column update frequency defined for each of the cells of the row. Row-level control can be used if, for example, a user prefers to update a particular row of cells more frequently than other rows (regardless of column). Cell-level control can be used if, for example, a user prefers to update a particular cell more frequently than other cells (regardless of column or row).
- The update frequency for a cell can be determined based on an analysis of the frequency of change of the data within a corresponding external data source. For example, an analysis can be performed to determine the average amount of time that elapses between consecutive updates of the data within the external data source (e.g., based on a comparison of timestamps between the consecutive updates, by maintaining an audit log of updates occurring in the external data source, by analyzing a search engine history to obtain an estimate of the rate of update when an external data source is a website, etc.). As an illustration, if the data to be updated is the Newest Edition Date for book “ABC,” if it is determined that a new edition of “ABC” is added in the external data source every year, then the update frequency can be set to one year. In some implementations, the update frequency can be set as a default update frequency on a fixed schedule. A user can have the option of modifying the currently set update frequency to perform more frequent updates or less frequent updates (e.g., change the update frequency from daily to weekly, or change from daily to hourly). Thus, the default update frequency can be provided as a recommendation, and the user has the option of setting a customized update schedule for at least a portion of the data populated within the document. Visual indicators of respective update frequencies can be provided within the document. For example, if an update frequency with respect to cells of a particular column in a spreadsheet is daily, the document update manager can provide a visual indicator of the update frequency for the column that the update frequency is currently set for daily. Accordingly, the document update manager can “pull” data for updating one or more cells from one or more external data sources in accordance with respective fixed update schedules assigned to the one or more cells.
- In some instances, such as with respect to data that changes infrequently (e.g., at least monthly), it may be inefficient to perform updates in accordance with a fixed update frequency. To address this, in some implementations, the document update manager can update the document by employing one or more subscribers or listeners attached to an external data source (e.g., a node of a knowledge graph). A subscriber can be attached to at least a portion of an external data source (e.g., a knowledge graph) to identify when the portion of the external data source has been updated, and, upon identifying an update event, forward the updated data to the document update manager for insertion into the corresponding cell. Accordingly, the document update manager can receive data for updating one or more cells that is “pushed” by one or more subscribers attached to one or more respective external data sources.
- Automatically updating cell values can eliminate human errors which may result from manual entries, and reduce the time and computing resources needed for the updates. In addition, the use of update controls can further improve computational efficiency and reduce utilization of computing resources. For example, by updating one or more cells in accordance with an update frequency determined based on an analysis of frequency of change, document content updates can be optimized in a manner that reduces unnecessarily frequent updates and thus reduces resource consumption. As another example, by updating one or more cells in accordance with a subscriber or listener, document content updates can only be made for those cells when an update is indicated by the subscriber, and thus reduces resource consumption. Accordingly, automatically updating cells of a spreadsheet using the set of update controls described herein can improve computational efficiency.
- The document update manager can provide one or more additional features. Examples of such features include providing access back to an external data source for data exploration, identifying incorrect or partially correct data, implementing a data confidence feature, identifying an intent of a natural language query to leverage unstructured data sources and/or structured data sources, handling multi-dimensional data. For example, assume that a spreadsheet includes a list of cities in the United States. One of the columns of the spreadsheet can be “Population,” and a user may be interested in viewing graphs and calculations based on populations in a number of cities. Each cell in the “Population” column can be a single-dimensional value (e.g., latest population) or a multi-dimensional value, identifying data types for data retrieved in response to a natural language query, etc. Further details regarding the operations performed by the document update manager will be described herein below.
-
FIG. 1 illustrates anexample system architecture 100, in accordance with implementations of the present disclosure. The system architecture 100 (also referred to as “system” herein) includes at least oneclient device 110 that can connect to servers, such as document platform 120 (e.g., server), via anetwork 130. Oneclient device 110 and onedocument platform 120 are illustrated as connected to network 130 for simplicity. In practice, there may be more client devices and/or document platforms. Also, in some instances, a client device may perform one or more functions of a document platform and a document platform may perform one or more functions of a client device.Client device 110 may access or receive information fromdocument platform 120. Thesystem architecture 100 can represent a cloud-based environment, which can enable communication between server(s) hostingdocument platform 120 andclient devices 110 over thenetwork 130 to store and share electronic documents. Alternatively, thesystem architecture 100 can apply to systems that are locally interconnected. Further, although some aspects of the disclosure are described with reference to spreadsheets and document applications managing spreadsheets, it should be understood to those skilled in the art that the systems, methods, functions, and embodiments of the present disclosure can apply to any type of electronic documents and any type of programs or services offered by any type of host applications. - In implementations,
network 130 may include a public network (e.g., the Internet), a private network (e.g., a local area network (LAN) or wide area network (WAN)), a wired network (e.g., Ethernet network), a wireless network (e.g., an 802.11 network or a Wi-Fi network), a cellular network (e.g., a Long Term Evolution (LTE) network), routers, hubs, switches, server computers, and/or a combination thereof.Client device 110 can include a computing device such as personal computer (PC), laptop, mobile phone, smart phone, tablet computer, netbook computer, network-connected television, etc. Theclient device 110 can be associated with one or more users, and theclient device 110 can also be referred to as a “user device.” - In the implementation shown,
document platform 120 may interact withclient device 110 such thatclient device 110, in conjunction withdocument platform 120, can execute an electronic document (“document”) application to manage various documents including documents having a tabular structure. For example, the document application can be an online document application. In some implementations, the document application is a spreadsheet application (e.g., online spreadsheet application). Alternatively, the document application can provide functionality described herein without the use ofdocument platform 120. Yet alternatively,document platform 120 can interact with a web browser 115 (rather than a designated document application) to, for example, present documents, receive user input related to the documents, etc. - Documents of a user of the
client device 110 may be stored bydocument platform 120 in, for example,data store 140. Although illustrated as a single device inFIG. 1 ,document platform 120 may be implemented as, for example, a single computing device or as multiple distributed computing devices. It should be understood and appreciated that whether a device is functioning as a server or a client device can depend on the specific application being implemented. That is, whether a computing device is operating as a client or a server may depend on the context of the role of the computing device within the application. The relationship of client device and server can arise by virtue of program executing on the respective devices and having a client-server relationship to each other. - As discussed above, the interaction of
client device 110 withdocument platform 120 may be implemented through a web browser 115 executed atclient device 110. The term “web browser” is intended to refer to any program that allows a user to browse markup documents (e.g., web documents), regardless of whether the browser program is a stand-alone program or an embedded program, such as a browser program included as part of an operating system. In some implementations, the document application, as described herein, is implemented as a distributed web application in which portions of the document application execute at one or more ofclient device 110 and atdocument platform 120. More specifically, client device(s) 110 may request the document application fromdocument platform 120. In response,document platform 120 may transmit portions of the document application for local execution atclients 110. The document application may thus execute as a distributed application acrossdocument platform 120 and one ormore client devices 110. In this manner,client device 110 may not be required to install any document application locally to use the document application hosted by thedocument platform 120. - In general, functions described in implementations as being performed by the
document platform 120 can also be performed on theclient device 110 in other implementations, if appropriate. In addition, the functionality attributed to a particular component can be performed by different or multiple components operating together. Thedocument platform 120 can also be accessed as a service provided to other systems or devices through appropriate application programming interfaces. - In implementations of the disclosure, a “user” can be represented as a single individual. However, other implementations of the disclosure encompass a “user” being an entity controlled by a set of users and/or an automated source. For example, a set of individual users federated as a community in a social network can be considered a “user.” In another example, an automated consumer can be an automated ingestion pipeline, such as a topic channel, of the
document platform 120. - A document, as described herein, may be implemented as a distributed web application in which portions of the application execute at
multiple client devices 110 and at thedocument platform 120 to provide for collaboration among multiple users working on a single document. For example, multiple users may simultaneously or concurrently edit such a collaborative document and view the edits of each of the users in real time or near real time (e.g., within a few milliseconds or seconds). When one user edits the document (e.g., a cell of the document), the edit may be transmitted to thedocument platform 120 and then forwarded to other collaborating users that are also editing or viewing the spreadsheet. To this end, thedocument platform 120 may handle conflicts between collaborating users, such as when two users try to simultaneously edit a particular cell. For example, thedocument platform 120 may accept the first edit received or in some way prioritize the collaborating users such that the edits of higher priority users override those of lower priority users. If an edit of a user is rejected by thedocument platform 120, thedocument platform 120 may transmit a message back to the user that informs that user of the rejection of the edit. In this manner, multiple users may collaborate, potentially in real-time (or near real-time), on a single spreadsheet. In some implementations, the parties that view and collaborate on a particular document may be specified by an initial creator of the document. For example, the initial creator of the document may be given “administrator” privileges that allow the creator to specify the privileges for each of the other possible collaborators. The initial creator may specify that the other collaborators have privileges to do one or more of the following: edit the spreadsheet, view the spreadsheet only, edit designated parts of the spreadsheet, or add additional users to the list of possible collaborators. For example, certain users may be able to edit certain parts of the spreadsheet, while other designated cells or regions of cells will remain “locked” to those users such that the users can view but not edit the locked cells. The initial creator may also be able to configure and/or allow at least some collaborators to configure a set of update controls for dynamically updating or refreshing content maintained within the spreadsheet. In some implementations, a document may be designated as a “public” document that anyone can view and/or edit. - As further shown, the
document platform 120 may include a document update manager 122 to manage document updates. The document update manager 122 can utilize natural language queries to populate one or more cells of a document having a tabular structure with data from one or more external data sources 150-1 through 150-N. In the case that the document includes a spreadsheet, a natural language expression can be defined for a column of the spreadsheet, where a row of the spreadsheet can include one or more cells that provide context information for data in that row. The document update manager 122 can use the content information, in conjunction with any other natural language queries provided for other columns of the spreadsheet, to populate the remainder of the row with data. - In some implementations, at least one of the external data sources 150-1 through 150-N includes a knowledge graph. A knowledge graph is a graph-structured data model that provides a comprehensive collection of structured data about a network of entities (e.g. objects, events, concepts), as well as relationships between each of the entities, and attributes or properties about each of the entities. A knowledge graph can include a number of nodes that correspond to respective entities, and a number of edges that each define a relationship between a pair of nodes (entities). A knowledge graph can be embodied as an undirected graph, or directed graph that defines one-way relationships or links between the nodes. A knowledge graph can use a reasoning mechanism to derive new knowledge. The data within a knowledge graph can range from static or near static (e.g., the title of a book, the author of a book, the published first edition date of a book), to dynamic (e.g., sales ranking of the book, the number of sales of the book in a current year). Since a knowledge graph is updated over time, audit logs of the changes for data within the knowledge graph can be maintained. Such audit logs can include timestamps or other metadata that can be used to identify the update frequency with respect to a particular type of data. The knowledge graph can be a general knowledge graph, personal knowledge graph, a cohort knowledge graph based on a group of one or more individuals, etc.
- As another example, the external data source can be a website. For example, for entities that are not yet in a knowledge graph, a search engine can be used to locate an external data source for the data. Certain websites can be static or near-static with infrequent updates, while other websites can be dynamic with frequent updates. To estimate the frequency of change corresponding to a particular website, a web site search history (e.g., search engine history) can be used to estimate the frequency of change for the web site data source.
- The document update manager 122 can dynamically and selectively update or refresh data populated within the document. For example, the document update manager 122 can, with respect to a document at least partially populated with data retrieved using one or more natural language queries, dynamically update one or more cells with data obtained from one or more external data sources. For example, a portion of the document can include a first set of cells (e.g., cells) filled with manually entered data, and the document update manager 122 can automatically update a remaining portion of the document that includes a second set of cells filled with data to be retrieved from an external data source. For example, the data used to fill the second set of cells can correspond to dynamic data that changes over time. In some implementations, the document update manager 122 can perform an update for at least one cell at an update frequency (e.g. hourly, daily, monthly, yearly). For example, the update frequency can correspond to cells of a spreadsheet. Here, an update frequency can be controllable for all rows of cells of a particular column (“column-level control”), for a particular cell (“cell-level control”), for a particular row (“row-level control”), etc. For example, row-level control can be provided in conjunction with column-level control to override a column update frequency defined for each of the cells of the row.
- To populate and/or update data within a document in accordance with the implementations described herein, the document update manager 122 can receive, from a user, a natural language query defined within the document (e.g., defined by a column of a spreadsheet). The document update manager 122 can implement a query conversion mechanism to convert the natural language query into a data access query for accessing data from an external data source to fill in cells of the column (e.g., cells within each row corresponding to the column of the spreadsheet). For example, the query conversion mechanism can leverage semantic relationships within the natural language query to translate the natural language string into a machine-readable string for accessing the data from the external data source. Once translated, the document update manager 122 can utilize the data access query to import data into the cells, and determine an update frequency for the data imported into the cell.
- In some implementations, the document update manager 122 updates the document in accordance with a number of update frequencies each corresponding to a respective cell. The update frequency for a cell can be based on an analysis of the frequency of change of the data. The frequency of change of the data can be obtained from audit logs corresponding to the external data source. For example, an analysis can be performed to determine the amount of time that elapses between consecutive changes or updates to the data within the external data source (e.g., based on a comparison of timestamps of audit logs between the consecutive updates).
- The update frequency can then be determined in view of a pattern of updates with respect to a given set of samples of amounts of time between consecutive updates. For example, if a particular data item is determined to change at a substantially regular or fixed frequency in view of the given set of samples, the update frequency can be set to that frequency. As another example, it may be the case that a particular data item is determined to change at various frequencies (e.g., an irregular schedule). For example, the amount of time that elapses between a first update and a second update can be 1 day, but the amount of time that elapses between the second update and a third update can be 1 week. To account for this, the update frequency can be set as the minimum amount of time determined within the given set of samples, an average amount of time determined within the given set of samples, etc. Greater accuracy in update frequency calculation can be achieved by having a greater number of samples within the given set of samples.
- In some implementations, the update frequency can be set as a default update frequency on a fixed schedule, which can be modified by a user. The user can have the option of modifying the current update frequency to perform more frequent updates or less frequent updates (e.g., change the update frequency from daily to weekly, or change from daily to hourly). Thus, the default update frequency can be provided as a recommendation, and the user has the option of setting a customized update schedule for at least a portion of the data populated within the document. At least one update frequency for at least one cell can be updated from time-to-time, either automatically or by user request, to ensure that the update frequency is optimally set. For example, it may be the case that a data item that has historically been changing annually is now changing monthly.
- Visual indicators of respective update frequencies can be provided within the document. For example, if an update frequency with respect to cells of a particular column in a spreadsheet is daily, the document update manager 122 can provide a visual indicator of the update frequency for the column that the update frequency is currently set for daily. Accordingly, the document update manager 122 can “pull” data for updating one or more cells from one or more external data sources in accordance with respective fixed update schedules assigned to the one or more cells.
- As described above, the document update manager 122 can poll an external data source for data updates in accordance with an update frequency. In some instances, such as with respect to data that changes infrequently (e.g., at least monthly), it may be inefficient to perform updates in accordance with an update frequency. To address this, in some implementations, the document update manager 122 can update the document by employing one or more subscribers or listeners associated with an external data source (e.g., a node of a knowledge graph) to subscribe to (e.g., to receive or to be notified of) update events (e.g., using service-to-service communications between a service managing a knowledge graph and the document update manager 122). A subscriber can be associated with (e.g., attached to) at least a portion of an external data source (e.g., a knowledge graph) to identify when the portion of the external data source has been updated, and forward the updated data to the document update manager for insertion into the corresponding cell. Accordingly, the document update manager 122 can receive data for updating one or more cells that is “pushed” by one or more subscribers associated with one or more respective external data sources.
- The document update manager 122 can provide one or more additional features. In some implementations, the document update manager 122 can further provide access back to an external data source (e.g., a link to the external data source). This can enable a user to explore more details of the data that has been populated into the document, and provide a way for the user to validate data trust. For example, if the user is concerned about the accuracy of the data from the external data source, the user could access the external data source itself (e.g., via the provided link) to determine whether to trust the veracity of the data.
- In some implementations, the document update manager 122 can further identify data populated in a cell that is incorrect or partially correct. This can be true even if the data was statically entered into the cell by the user. The document update manager 122 can then send a notification to the user of a proposed change to the data and/or automatically update the data. Illustratively, with reference to Table 1 above, if the document update manager determines (e.g., by comparing content of a cell with respective content of an external data source) that book “ABC” has a co-author named John Smith, the document update manager 122 can send a notification to the user of the proposal to update cell B2 with “John Doe and John Smith” and/or can automatically update cell B2 with “John Doe and John Smith.”
- In some implementations, the document update manager 122 can further implement a data confidence feature. For example, the data confidence feature can be related to the confidence that the data obtained from a particular source accurately responds to a particular natural language query. The data confidence feature can utilize a visual confidence indicator for data, such as a confidence percentage, a symbol (e.g., color) corresponding to a confidence range (e.g., green circle for greater than 90% confidence, red circle for less than 50% confidence), etc. A user can set a customizable confidence threshold that should be exceeded in order to populate the corresponding cell with the data. For example, for some natural language queries, a user may want to ensure that only high-confidence data is used (e.g., by setting the confidence threshold for 90% confidence), while for some other natural language queries, a user may have greater tolerance for low-confidence data (e.g., by not setting a confidence threshold).
- In some implementations, the document update manager 122 can further identify an intent of a natural language query to leverage unstructured data sources and/or structured data sources. For example, with respect to a spreadsheet, the document update manager can combine a column (e.g., Date of book publication) along with one or more context values (e.g., Book ABC, Author John Doe) to identify the intent of the natural language query.
- In some implementations, the document update manager 122 can handle multi-dimensional data. For example, assume that a document is a spreadsheet that includes a list of cities in the United States. One of the columns of the spreadsheet can be “Population,” and a user may be interested in viewing graphs and calculations built based on populations in a number of cities. Each cell in the “Population” column can be a single-dimensional value (e.g., latest population) or a multi-dimensional value (e.g., an array of population over time, such as the population from each census measurement). Since the data is populated programmatically into respective cells, the document update manager 122 can retrieve time series population data for graphing and/or calculations.
- In some implementations, the document update manager 122 can identify data types for data retrieved in response to a natural language query. For example, data can have a particular data type, such as GPS coordinate, date, single integer value, array of integer values, etc. The document update manager 122 can maintain metadata about the data type that can be used to aid in data manipulation (e.g., creations of graphs, calculations).
- Further to the descriptions above, a user may be provided with controls allowing the user to make an election as to both if and when systems, programs, or features described herein may enable collection of user information (e.g., information about a user's social network, social actions, or activities, profession, a user's preferences, or a user's current location), and if the user is sent content or communications from a server. In addition, certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information is removed. For example, a user's identity may be treated so that no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined. Thus, the user may have control over what information is collected about the user, how that information is used, and what information is provided to the user.
-
FIG. 2 is a diagram illustrating anexample spreadsheet 200 having a number of cells, in accordance with implementations of the present disclosure. It is assumed that at least a portion of the cells of thespreadsheet 200 has been populated within data using a document update manager (e.g., the document update manager 122 ofFIG. 1 ). Although a spreadsheet is shown inFIG. 2 , such an example should not be considered limiting, and any suitable document having a tabular structure is contemplated. - As shown, the
spreadsheet 200 includes a number ofcolumns 210A through 210I and a number of rows 220-1 through 220-3. Although 9 columns and 3 rows are shown, the number of columns and rows should not be considered limiting. Row 220-1 is a descriptive row that indicates the type of data to be inserted within the cell of a corresponding column. For example, the text “Book name” is entered into the cell having an address defined by row 220-1 andcolumn 210A to indicate that the data maintained in the other cells ofcolumn 210A correspond to book names (e.g., the respective cells having addresses defined bycolumn 210A and rows 220-2 and 220-3). For example, the cell having an address defined by row 220-2 andcolumn 210A is filled with the book name “ABC” and the cell having an address defined by row 220-3 andcolumn 210A is filled with the book name “XYZ.” Accordingly,column 210A is defined as a “Book name” column and includes a number of cells having values indicative of respective book names, andcolumn 210B is defined as an “Author” column and includes a number of cells having values indicative of respective authors for respective ones of the book names withincolumn 210A. - Moreover, column 210C is defined as a “Published 1st Edition Date” column and includes a number of cells (e.g., cells 230-1 and 230-2) having values indicative of respective 1st edition publication dates for respective ones of the book names within column 210A, column 210D is defined as a “Newest Edition Date” column and includes a number of cells (e.g., cells 240-1 and 240-2) having values indicative of respective newest edition dates for respective ones of the book names within column 210A, column 210E is defined as a “Sales Ranking” column and includes a number of cells (e.g., cells 250-1 and 250-2) having values indicative of respective sales rankings for respective ones of the book names within column 210A, column 210F is defined as a “Sales 2019” column and includes a number of cells (e.g., cells 260-1 and 260-2) having values indicative of respective number of sales in the year 2019 for respective ones of the book names within column 210A, column 210G is defined as a “Sales 2020” column and includes a number of cells (e.g., cells 270-1 and 270-2) having values indicative of respective number of sales in the year 2020 for respective ones of the book names within column 210A, column 210H is defined as a “Sales 2021” column and includes a number of cells (e.g., cells 280-1 and 280-2) having values indicative of respective number of sales in the year 2021 for respective ones of the book names within column 210A, and column 210I is defined as a “Sales 2019-2021” column and includes a number of cells (e.g., cells 290-1 and 290-2) having values indicative of respective number of total sales for the years 2019 through 2021 for respective ones of the book names within column 210A. Cells 230 through 290 are presently empty, as data has yet to be propagated within these particular cells. The cell 290-1 can be defined as a sum of the values entered into the cells 270-1 and 280-1, and the cell 290-2 can be defined as the sum of the values entered into the cells 270-2 and 280-2. Further details regarding updating the
spreadsheet 200, including the cells 230 through 290, will now be described below with reference toFIG. 3 . -
FIG. 3 is a diagram illustrating anexample spreadsheet 300 having a number of cells, in accordance with implementations of the disclosure. It is assumed that at least a portion of the cells of thespreadsheet 300 has been populated using a document update manager (e.g., the document update manager 122 ofFIG. 1 .) Thespreadsheet 300 is based on thespreadsheet 200 ofFIG. 2 , and includescolumns 210A through 210I and rows 220-1 through 220-3. - The cells 230-290 of the
spreadsheet 200 ofFIG. 2 have been filled with data. Additionally, each of thecolumns 210C through 210H have been assigned default update frequencies 310-1 through 310-6 that correspond to recommendations or suggestions for updating the cells within their respective columns. As shown, the default update frequency 310-1 definescolumn 210C as a static column in which the cells of thecolumn 210C are not updated by recommendation, the default update frequency 310-2 definescolumn 210D as a yearly update column in which the cells of thecolumn 210D are updated yearly by recommendation, the default update frequency 310-3 definescolumn 210E as a daily update column in which the cells ofcolumn 210E are updated daily by recommendation, the default update frequency 310-4 defines column 210 f as a static column in which the cells ofcolumn 210F are not updated by recommendation, the default update frequency 310-5 definescolumn 210G as a static column in which the cells ofcolumn 210G are not updated by recommendation, and the default update frequency 310-6 definescolumn 210H as a weekly update column in which the cells ofcolumn 210H are updated weekly by recommendation. The values of the cells of column 210I are defined as a summation of the values of the cells fromcolumns 210F through 210H within the same row (e.g., using the SUM( ) function). Thus, in this example, there is an implicit weekly update frequency of the cells of column 210I by virtue of the currently set weekly update frequency assigned tocolumn 210H. Further details regarding determining default update frequencies are described above with reference toFIG. 1 and below with reference toFIGS. 4-5 . - In this example, the default update frequencies 310-1, 310-2, 310-4, 310-5 and 310-6 are defined as currently set update frequencies for their respective columns. That is, the user has accepted these default update frequency recommendations. However, a user can provide a user-defined update frequency that overrides a currently set update frequency and/or default update frequency recommendation if the user would prefer a longer or shorter duration between updates as provided by the default update frequency. In this example, a user-defined
update frequency 320 is provided as the currently set update frequency forcolumn 210E. The user-definedupdate frequency 320 definescolumn 210D as a weekly update column in which the cells of columns, in contrast to the daily update recommended by the default update frequency 310-3. - Each of the update frequencies 310-1 through 310-6 and 320 can be provided as a visual indicator within the
spreadsheet 300. These visual indicators provide a visual interface for a user to analyze the recommended or default update frequencies and/or the currently set update frequencies (e.g., a recommended update frequency such as 310-1 or a user-defined update frequency such as 320) to determine whether the user would like to modify the currently set update frequencies 310-1 through 310-6. - In this illustrative example, the
spreadsheet 300 is shown as being updated in accordance with respective update frequencies. However, such an example should not be considered limiting. For example, as described herein above with reference toFIG. 1 and as will be described in further detail below with reference toFIGS. 4-5 , thespreadsheet 300 can be updated by utilizing one or more subscribers associated with one or more external data sources that each detect a data update at its corresponding external data source, and push the data update to the document update manager for updating. -
FIG. 4 depicts a flow diagram of amethod 400 for dynamically and selectively updating a document based on knowledge monitoring and natural language processing, in accordance with implementations of the present disclosure.Method 400 may be performed by processing logic that may include hardware (circuitry, dedicated logic, etc.), software (e.g., instructions run on a processing device), or a combination thereof. In one implementation, some or all the operations ofmethod 400 may be performed by the document update manager 122 ofFIG. 1 . - At
block 410, the processing logic identifies a document having a tabular structure including a number of cells, where the document is associated with a set of update controls for automatically updating content in at least one cell. The set of update controls can be stored with the document in association with respective cell(s) (e.g., in data store 140). For example, the document can be a spreadsheet including cells defined by a number of columns and a number of rows. The set of update controls can include one or more update controls for updating respective cells of the document. For example, if the document is a spreadsheet, each update control can be a column-level update control for updating a column of cells, a row-level update control for updating a row of cells, or a cell-level update control for updating an individual cell. - In some implementations, the set of update controls includes an update frequency corresponding to at least one cell. The processing logic can obtain the data for updating the at least one cell by “pulling” the data from at least one external data source in accordance with the update frequency. Further details regarding update frequencies are described above with reference to
FIGS. 1-3 and with reference toFIG. 5A . In some implementations, providing default settings for the update controls includes implementing at least one subscriber or listener associated with at least one external data source (e.g., a knowledge graph). The processing logic can obtain data for the at least one cell by receiving data “pushed” by at least one subscriber upon identification of an update event with respect to the portion of the external data source. Further details regarding subscribers are described above with reference toFIGS. 1-3 and below with reference toFIG. 5B . - In some implementations, identifying the document includes generating at least a portion of the document using one or more natural language queries. Generating at least a portion of the document can include defining the set of update controls. For example, defining the set of update controls can include determining an update frequency corresponding to at least one cell. As another example, defining the set of update controls can include associating at least one subscriber with at least one external data source.
- At
block 420, the processing logic detects, based on the set of update controls, an event triggering an automated update of the content in the at least one cell. In some implementations, the event is a detection that an amount of time that has elapsed since a previous update of the content in the at least one cell is equal to an update frequency for updating the content of the at least one cell. In some implementations, the event is the receipt of an update notification from a subscriber attached to a node of a knowledge graph for updating the content of the at least one cell. - At
block 430, the processing logic obtains data from at least one external data source in accordance with the set of update controls and, at block 440, the processing logic causes the content in the at least one cell to be updated based on the data from the at least one external data source (e.g., by performing the update of the content in the at least one cell or by providing the data from the external data source to a corresponding client device application that is designated to perform the update). Further details regarding blocks 410-440 are described above with reference toFIGS. 1-4 and below with reference toFIGS. 5A-5B . -
FIG. 5A depicts a flow diagram of amethod 500A for dynamically updating content maintained in a document.Method 500A may be performed by processing logic that may include hardware (circuitry, dedicated logic, etc.), software (e.g., instructions run on a processing device), or a combination thereof. In one implementation, some or all the operations ofmethod 500A may be performed by the document update manager 122 ofFIG. 1 . - At
block 510A, the processing logic defines an update frequency corresponding to an amount of time between updates of content maintained in at least one cell of a document having a tabular structure. For example, the document can be a spreadsheet. In some implementations, the update frequency is a default update frequency corresponding to an update frequency recommendation. In some implementations, the update frequency is a user-defined update frequency that overrides the update frequency recommendation. - In some implementations, a user interface is provided to present the default update frequency in association with the at least one cell. Upon receiving user input specifying the user-defined update frequency for the at least one cell, the user interface can be modified to present the user-defined update frequency in association with the at least one cell. In addition, the set of update controls stored in a data store can be modified to include the user-defined update frequency for the at least one cell.
- In some implementations, the update frequency is a column-level update control for controlling the update of data maintained in cells within a particular column of the spreadsheet. In some implementations, the update frequency is a row-level update control for controlling the update of data maintained in cells within a particular row of the spreadsheet. In some implementations, the update frequency is a cell-level update control for controlling the update of data maintained in one or more individual cells of the spreadsheet.
- At
block 520A, the processing logic determines that the amount of time has elapsed from a most recent update to the content maintained in the at least one cell and, atblock 530A, the processing logic retrieves data from at least one external data source to update the at least one cell. The data retrieval can be implemented by programming the document with a natural language query that specifies the at least one external data source (e.g., knowledge graph, web page). The processing logic can utilize a query conversion mechanism to convert the natural language query into a data access query for accessing data from the at least one external data source to fill in the at least one cell. For example, the query conversion mechanism can leverage semantic relationships within the natural language query to translate the natural language string into a machine-readable string for accessing the data from the at least one external data source. - The update frequency for a cell can be based on an analysis of the frequency of change of the data to the amount of time as an average amount of time that elapses between consecutive updates of the data within the external data source (e.g., based on a comparison of timestamps between the consecutive updates). For example, if the external data source is a knowledge graph, audit logs of the changes for data within the knowledge graph can be maintained. Such audit logs can include timestamps or other metadata that can be used to identify the update frequency with respect to a particular type of data. As another example, if the external data source is a website, a website search history (e.g., search engine history) can be used to estimate the frequency of change for the website. Further
details regarding blocks 510A through 530A are described above with reference toFIGS. 1-4 . -
FIG. 5B depicts a flow diagram of amethod 500B for dynamically updating content maintained in a document, in accordance with implementations of the present disclosure.Method 500B may be performed by processing logic that may include hardware (circuitry, dedicated logic, etc.), software (e.g., instructions run on a processing device), or a combination thereof. In one implementation, some or all the operations ofmethod 500A may be performed by the document update manager 122 ofFIG. 1 . - At block 510B, the processing logic associates a subscriber with an external data source for monitoring updates with respect to content maintained in at least one cell of a document having a tabular structure. In some implementations, the document is a spreadsheet. For example, the subscriber can be attached to a knowledge graph to receive updates to the node (e.g., when relevant updates are published by a service managing the knowledge graph).
- At block 520B, the processing logic receives, via the subscriber, data to update the at least one cell. For example, upon identifying an update event to the portion of the external data source (e.g., the node of the knowledge graph), the subscriber can provide the updated data that should be inserted into the cell. Further details regarding blocks 510B and 520B are described above with reference to
FIGS. 1-4 . -
FIG. 6 is a block diagram illustrating an exemplary computer system, in accordance with implementations of the present disclosure. Thecomputer system 600 can be thedocument platform 130 or theclient device 110 inFIG. 1 . The machine can operate in the capacity of a server or an endpoint machine in endpoint-server network environment, or as a peer machine in a peer-to-peer (or distributed) network environment. The machine can be a television, a personal computer (PC), a tablet PC, a set-top box (STB), a Personal Digital Assistant (PDA), a cellular telephone, a web appliance, a server, a network router, switch or bridge, or any machine capable of executing a set of instructions (sequential or otherwise) that specify actions to be taken by that machine. Further, while only a single machine is illustrated, the term “machine” shall also be taken to include any collection of machines that individually or jointly execute a set (or multiple sets) of instructions to perform any one or more of the methodologies discussed herein. - The
example computer system 600 includes a processing device (processor) 602, a main memory 604 (e.g., read-only memory (ROM), flash memory, dynamic random access memory (DRAM) such as synchronous DRAM (SDRAM), double data rate (DDR SDRAM), or DRAM (RDRAM), etc.), a static memory 606 (e.g., flash memory, static random access memory (SRAM), etc.), and adata storage device 618, which communicate with each other via a bus 640. - Processor (processing device) 602 represents one or more general-purpose processing devices such as a microprocessor, central processing unit, or the like. More particularly, the
processor 602 can be a complex instruction set computing (CISC) microprocessor, reduced instruction set computing (RISC) microprocessor, very long instruction word (VLIW) microprocessor, or a processor implementing other instruction sets or processors implementing a combination of instruction sets. Theprocessor 602 can also be one or more special-purpose processing devices such as an application specific integrated circuit (ASIC), a field programmable gate array (FPGA), a digital signal processor (DSP), network processor, or the like. Theprocessor 602 is configured to execute instructions 605 (e.g., for predicting channel lineup viewership) for performing the operations discussed herein. - The
computer system 600 can further include anetwork interface device 608. Thecomputer system 600 also can include a video display unit 610 (e.g., a liquid crystal display (LCD) or a cathode ray tube (CRT)), an input device 612 (e.g., a keyboard, and alphanumeric keyboard, a motion sensing input device, touch screen), a cursor control device 614 (e.g., a mouse), and a signal generation device 620 (e.g., a speaker). - The
data storage device 618 can include a non-transitory machine-readable storage medium 624 (also computer-readable storage medium) on which is stored one or more sets of instructions 605 (e.g., for obtaining optimized encoder parameter settings) embodying any one or more of the methodologies or functions described herein. The instructions can also reside, completely or at least partially, within themain memory 604 and/or within theprocessor 602 during execution thereof by thecomputer system 600, themain memory 604 and theprocessor 602 also constituting machine-readable storage media. The instructions can further be transmitted or received over anetwork 630 via thenetwork interface device 608. - In one implementation, the instructions 605 include instructions for designating a verbal statement as a polling question. While the computer-readable storage medium 624 (machine-readable storage medium) is shown in an exemplary implementation to be a single medium, the terms “computer-readable storage medium” and “machine-readable storage medium” should be taken to include a single medium or multiple media (e.g., a centralized or distributed database, and/or associated caches and servers) that store the one or more sets of instructions. The terms “computer-readable storage medium” and “machine-readable storage medium” shall also be taken to include any medium that is capable of storing, encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the present disclosure. The terms “computer-readable storage medium” and “machine-readable storage medium” shall accordingly be taken to include, but not be limited to, solid-state memories, optical media, and magnetic media.
- Reference throughout this specification to “one implementation,” or “an implementation,” means that a particular feature, structure, or characteristic described in connection with the implementation is included in at least one implementation. Thus, the appearances of the phrase “in one implementation,” or “in an implementation,” in various places throughout this specification can, but are not necessarily, referring to the same implementation, depending on the circumstances. Furthermore, the particular features, structures, or characteristics may be combined in any suitable manner in one or more implementations.
- To the extent that the terms “includes,” “including,” “has,” “contains,” variants thereof, and other similar words are used in either the detailed description or the claims, these terms are intended to be inclusive in a manner similar to the term “comprising” as an open transition word without precluding any additional or other elements.
- As used in this application, the terms “component,” “module,” “system,” or the like are generally intended to refer to a computer-related entity, either hardware (e.g., a circuit), software, a combination of hardware and software, or an entity related to an operational machine with one or more specific functionalities. For example, a component may be, but is not limited to being, a process running on a processor (e.g., digital signal processor), a processor, an object, an executable, a thread of execution, a program, and/or a computer. By way of illustration, both an application running on a controller and the controller can be a component. One or more components may reside within a process and/or thread of execution and a component may be localized on one computer and/or distributed between two or more computers. Further, a “device” can come in the form of specially designed hardware; generalized hardware made specialized by the execution of software thereon that enables hardware to perform specific functions (e.g., generating interest points and/or descriptors); software on a computer readable medium; or a combination thereof.
- The aforementioned systems, circuits, modules, and so on have been described with respect to interact between several components and/or blocks. It can be appreciated that such systems, circuits, components, blocks, and so forth can include those components or specified sub-components, some of the specified components or sub-components, and/or additional components, and according to various permutations and combinations of the foregoing. Sub-components can also be implemented as components communicatively coupled to other components rather than included within parent components (hierarchical). Additionally, it should be noted that one or more components may be combined into a single component providing aggregate functionality or divided into several separate sub-components, and any one or more middle layers, such as a management layer, may be provided to communicatively couple to such sub-components in order to provide integrated functionality. Any components described herein may also interact with one or more other components not specifically described herein but known by those of skill in the art.
- Moreover, the words “example” or “exemplary” are used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as “exemplary” is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather, use of the words “example” or “exemplary” is intended to present concepts in a concrete fashion. As used in this application, the term “or” is intended to mean an inclusive “or” rather than an exclusive “or.” That is, unless specified otherwise, or clear from context, “X employs A or B” is intended to mean any of the natural inclusive permutations. That is, if X employs A; X employs B; or X employs both A and B, then “X employs A or B” is satisfied under any of the foregoing instances. In addition, the articles “a” and “an” as used in this application and the appended claims should generally be construed to mean “one or more” unless specified otherwise or clear from context to be directed to a singular form.
- Finally, implementations described herein include collection of data describing a user and/or activities of a user. In one implementation, such data is only collected upon the user providing consent to the collection of this data. In some implementations, a user is prompted to explicitly allow data collection. Further, the user may opt-in or opt-out of participating in such data collection activities. In one implementation, the collected data is anonymized prior to performing any analysis to obtain any statistical patterns so that the identity of the user cannot be determined from the collected data.
Claims (20)
Priority Applications (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US17/485,056 US20230094877A1 (en) | 2021-09-24 | 2021-09-24 | Dynamically and selectively updated spreadsheets based on knowledge monitoring and natural language processing |
PCT/US2022/044611 WO2023049403A1 (en) | 2021-09-24 | 2022-09-23 | Dynamically and selectively updated spreadsheets based on knowledge monitoring and natural language processing |
EP22792996.5A EP4205017A1 (en) | 2021-09-24 | 2022-09-23 | Dynamically and selectively updated spreadsheets based on knowledge monitoring and natural language processing |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US17/485,056 US20230094877A1 (en) | 2021-09-24 | 2021-09-24 | Dynamically and selectively updated spreadsheets based on knowledge monitoring and natural language processing |
Publications (1)
Publication Number | Publication Date |
---|---|
US20230094877A1 true US20230094877A1 (en) | 2023-03-30 |
Family
ID=83899711
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US17/485,056 Pending US20230094877A1 (en) | 2021-09-24 | 2021-09-24 | Dynamically and selectively updated spreadsheets based on knowledge monitoring and natural language processing |
Country Status (3)
Country | Link |
---|---|
US (1) | US20230094877A1 (en) |
EP (1) | EP4205017A1 (en) |
WO (1) | WO2023049403A1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20230244863A1 (en) * | 2022-01-28 | 2023-08-03 | Intuit Inc. | System and method for reference validation of spreadsheet |
Citations (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20170060868A1 (en) * | 2015-08-28 | 2017-03-02 | International Business Machines Corporation | Automated management of natural language queries in enterprise business intelligence analytics |
US20180004722A1 (en) * | 2016-06-30 | 2018-01-04 | Microsoft Technology Licensing, Llc | Automatic semantic data enrichment in a spreadsheet |
Family Cites Families (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5926822A (en) * | 1996-09-06 | 1999-07-20 | Financial Engineering Associates, Inc. | Transformation of real time data into times series and filtered real time data within a spreadsheet application |
US20120173476A1 (en) * | 2011-01-04 | 2012-07-05 | Nasir Rizvi | System and Method for Rule-Based Asymmetric Data Reporting |
US11354494B2 (en) * | 2017-07-10 | 2022-06-07 | Adaptam Inc. | Methods and systems for connecting a spreadsheet to external data sources with formulaic specification of data retrieval |
EP4028905A1 (en) * | 2019-09-13 | 2022-07-20 | Goldman Sachs & Co. LLC | Spreadsheet with dynamic database queries |
-
2021
- 2021-09-24 US US17/485,056 patent/US20230094877A1/en active Pending
-
2022
- 2022-09-23 WO PCT/US2022/044611 patent/WO2023049403A1/en unknown
- 2022-09-23 EP EP22792996.5A patent/EP4205017A1/en active Pending
Patent Citations (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20170060868A1 (en) * | 2015-08-28 | 2017-03-02 | International Business Machines Corporation | Automated management of natural language queries in enterprise business intelligence analytics |
US20180004722A1 (en) * | 2016-06-30 | 2018-01-04 | Microsoft Technology Licensing, Llc | Automatic semantic data enrichment in a spreadsheet |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20230244863A1 (en) * | 2022-01-28 | 2023-08-03 | Intuit Inc. | System and method for reference validation of spreadsheet |
Also Published As
Publication number | Publication date |
---|---|
EP4205017A1 (en) | 2023-07-05 |
WO2023049403A1 (en) | 2023-03-30 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9372913B2 (en) | Apparatus and method for harmonizing data along inferred hierarchical dimensions | |
US20230333919A1 (en) | Flexible and scalable artificial intelligence and analytics platform with advanced content analytics and data ingestion | |
US11531808B2 (en) | Intelligent document notifications based on user comments | |
US10380701B2 (en) | Generating graphical presentations using skills clustering | |
US20180365614A1 (en) | Dynamic directed graph workflows | |
US10394805B2 (en) | Database management for mobile devices | |
US9385985B2 (en) | Systems and methods for assisting users with contact, access, and distribution lists | |
US10614057B2 (en) | Shared processing of rulesets for isolated collections of resources and relationships | |
US20180005121A1 (en) | Provide enhanced relationship graph signals | |
EP4083818A1 (en) | Global column indexing in a graph database | |
US20230094877A1 (en) | Dynamically and selectively updated spreadsheets based on knowledge monitoring and natural language processing | |
US20140359742A1 (en) | Apparatus and Method for Agent Based Ingestion of Data | |
KR20240060841A (en) | Dynamically and selectively updated spreadsheets based on knowledge monitoring and natural language processing | |
US20230094042A1 (en) | Personalized autonomous spreadsheets | |
US20230106058A1 (en) | Autonomous spreadsheet creation | |
WO2022072908A1 (en) | Systems and methods for data objects for asynchronou workflows | |
US11709994B1 (en) | Contextual answer generation in spreadsheets | |
US20200366643A1 (en) | Mediating creation and use of channels of a publish-subscribe service | |
US20200174998A1 (en) | Automated content generation | |
US11977649B2 (en) | Embedding shared instances of collaborative data across different applications | |
US20240061723A1 (en) | Identifying Cluster Idleness For Cluster Shutdown | |
WO2017153552A1 (en) | Data processing and generation of aggregated user data | |
Khan et al. | PredictionMiner: mining the latest individual behavioral rules for personalized contextual pattern predictions | |
CN114328480A (en) | Data processing method and related device |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:LAVERY, ANDREW J.;WAGNER, EARL J.;ALBRIGHT, MATTHEW;SIGNING DATES FROM 20210922 TO 20210923;REEL/FRAME:057605/0902 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: FINAL REJECTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE AFTER FINAL ACTION FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: ADVISORY ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
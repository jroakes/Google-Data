JP2024505320A - Efficient gameplay training for artificial intelligence - Google Patents
Efficient gameplay training for artificial intelligence Download PDFInfo
- Publication number
- JP2024505320A JP2024505320A JP2023520250A JP2023520250A JP2024505320A JP 2024505320 A JP2024505320 A JP 2024505320A JP 2023520250 A JP2023520250 A JP 2023520250A JP 2023520250 A JP2023520250 A JP 2023520250A JP 2024505320 A JP2024505320 A JP 2024505320A
- Authority
- JP
- Japan
- Prior art keywords
- gameplay
- game
- game application
- data model
- data
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 238000013473 artificial intelligence Methods 0.000 title claims description 20
- 238000012549 training Methods 0.000 title abstract description 17
- 238000013499 data model Methods 0.000 claims abstract description 119
- 230000009471 action Effects 0.000 claims abstract description 90
- 238000000034 method Methods 0.000 claims abstract description 53
- 238000012360 testing method Methods 0.000 claims description 21
- 238000010801 machine learning Methods 0.000 claims description 14
- 239000013598 vector Substances 0.000 claims description 7
- 238000013507 mapping Methods 0.000 claims description 5
- 238000013135 deep learning Methods 0.000 claims description 4
- 230000004044 response Effects 0.000 claims description 4
- 238000012546 transfer Methods 0.000 claims description 2
- 239000008186 active pharmaceutical agent Substances 0.000 description 22
- 230000008901 benefit Effects 0.000 description 10
- 230000003993 interaction Effects 0.000 description 10
- 230000006399 behavior Effects 0.000 description 5
- 239000003795 chemical substances by application Substances 0.000 description 5
- 238000011161 development Methods 0.000 description 5
- 238000004088 simulation Methods 0.000 description 5
- 238000010586 diagram Methods 0.000 description 4
- 230000002452 interceptive effect Effects 0.000 description 4
- 230000008569 process Effects 0.000 description 4
- 238000004891 communication Methods 0.000 description 3
- 238000011156 evaluation Methods 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 3
- 241000282412 Homo Species 0.000 description 2
- 230000003542 behavioural effect Effects 0.000 description 2
- 238000012545 processing Methods 0.000 description 2
- 230000001154 acute effect Effects 0.000 description 1
- 230000004931 aggregating effect Effects 0.000 description 1
- 230000002776 aggregation Effects 0.000 description 1
- 238000004220 aggregation Methods 0.000 description 1
- 238000004458 analytical method Methods 0.000 description 1
- 238000005094 computer simulation Methods 0.000 description 1
- 238000010276 construction Methods 0.000 description 1
- 238000012937 correction Methods 0.000 description 1
- 230000001934 delay Effects 0.000 description 1
- 238000012217 deletion Methods 0.000 description 1
- 230000037430 deletion Effects 0.000 description 1
- 238000013461 design Methods 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 230000007613 environmental effect Effects 0.000 description 1
- 230000010354 integration Effects 0.000 description 1
- 230000009191 jumping Effects 0.000 description 1
- 238000007726 management method Methods 0.000 description 1
- 239000000463 material Substances 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 229920001690 polydopamine Polymers 0.000 description 1
- 230000002787 reinforcement Effects 0.000 description 1
- 238000009877 rendering Methods 0.000 description 1
- 230000035945 sensitivity Effects 0.000 description 1
- 239000010454 slate Substances 0.000 description 1
- 230000009870 specific binding Effects 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
Images
Classifications
-
- A—HUMAN NECESSITIES
- A63—SPORTS; GAMES; AMUSEMENTS
- A63F—CARD, BOARD, OR ROULETTE GAMES; INDOOR GAMES USING SMALL MOVING PLAYING BODIES; VIDEO GAMES; GAMES NOT OTHERWISE PROVIDED FOR
- A63F13/00—Video games, i.e. games using an electronically generated display having two or more dimensions
- A63F13/60—Generating or modifying game content before or while executing the game program, e.g. authoring tools specially adapted for game development or game-integrated level editor
- A63F13/67—Generating or modifying game content before or while executing the game program, e.g. authoring tools specially adapted for game development or game-integrated level editor adaptively or by learning from player actions, e.g. skill level adjustment or by storing successful combat sequences for re-use
-
- A—HUMAN NECESSITIES
- A63—SPORTS; GAMES; AMUSEMENTS
- A63F—CARD, BOARD, OR ROULETTE GAMES; INDOOR GAMES USING SMALL MOVING PLAYING BODIES; VIDEO GAMES; GAMES NOT OTHERWISE PROVIDED FOR
- A63F13/00—Video games, i.e. games using an electronically generated display having two or more dimensions
- A63F13/30—Interconnection arrangements between game servers and game devices; Interconnection arrangements between game devices; Interconnection arrangements between game servers
- A63F13/35—Details of game servers
- A63F13/352—Details of game servers involving special game server arrangements, e.g. regional servers connected to a national server or a plurality of servers managing partitions of the game world
-
- A—HUMAN NECESSITIES
- A63—SPORTS; GAMES; AMUSEMENTS
- A63F—CARD, BOARD, OR ROULETTE GAMES; INDOOR GAMES USING SMALL MOVING PLAYING BODIES; VIDEO GAMES; GAMES NOT OTHERWISE PROVIDED FOR
- A63F13/00—Video games, i.e. games using an electronically generated display having two or more dimensions
- A63F13/70—Game security or game management aspects
- A63F13/79—Game security or game management aspects involving player-related data, e.g. identities, accounts, preferences or play histories
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N20/00—Machine learning
-
- A—HUMAN NECESSITIES
- A63—SPORTS; GAMES; AMUSEMENTS
- A63F—CARD, BOARD, OR ROULETTE GAMES; INDOOR GAMES USING SMALL MOVING PLAYING BODIES; VIDEO GAMES; GAMES NOT OTHERWISE PROVIDED FOR
- A63F2300/00—Features of games using an electronically generated display having two or more dimensions, e.g. on a television screen, showing representations related to the game
- A63F2300/60—Methods for processing data by generating or executing the game program
- A63F2300/6027—Methods for processing data by generating or executing the game program using adaptive systems learning from user actions, e.g. for skill level adjustment
Abstract
ローカルで実行されたアクターコンポーネントが、リモート学習サービスが生成する１つ以上のゲームプレイデータモデルに基づいて、ゲームアプリケーションにおいてリアルタイムのゲームプレイアクションを実行するように訓練ためのシステムおよび方法について説明する。ゲームアプリケーションのゲームプレイデータモデルは、リモート学習サービスを実行する１つ以上のサーバーコンピューティングシステムからクライアントコンピューティングデバイスに提供される。提供されたゲームプレイデータモデルを用いてアクターコンポーネントが生成した推論に少なくとも一部基づいて、ローカルアクターコンポーネントが実行した人工ゲームプレイアクションのゲーム内結果に基づいて、ローカルアクターコンポーネントによって観測データが生成される。受信した観測データに基づいて、リモート学習サービスは、ゲームプレイデータモデルを修正し、修正後のゲームプレイデータモデルをローカルアクターコンポーネントに提供して将来の人工ゲームプレイアクションを改善する。Systems and methods are described for training locally executed actor components to perform real-time gameplay actions in a gaming application based on one or more gameplay data models generated by a remote learning service. A game play data model for a game application is provided to a client computing device from one or more server computing systems running remote learning services. Observational data is generated by the local actor component based at least in part on inferences generated by the actor component using the provided gameplay data model and based on an in-game outcome of an artificial gameplay action performed by the local actor component. Ru. Based on the received observed data, the remote learning service modifies the gameplay data model and provides the modified gameplay data model to the local actor component to improve future artificial gameplay actions.
Description
背景
消費者向けのＧＰＵ（Ｇｒａｐｈｉｃｓ Ｐｒｏｃｅｓｓｉｎｇ Ｕｎｉｔ）と、一般に普及しているブロードバンド可用性と、市場の動きとが組み合わさって、相当なスコープおよび複雑性を有するゲームが作られてきた。最近のゲームは、これまでのゲームよりも複雑であるだけでなく、ゲームを設計およびプレイする方法の根本的な変化も反映している。単純な直線的な屋内階層は、巨大で写真とほとんど変わらない屋外空間に置き換わり、脚本が書かれた一続きの場面は、動的シミュレーションに置き換わり、手続主義は、種類の豊富さがほぼ無限である世界を可能にした。
Background Consumer graphics processing units (GPUs), widespread broadband availability, and market forces have combined to create games of considerable scope and complexity. Modern games are not only more complex than their predecessors, but they also reflect fundamental changes in the way games are designed and played. Simple linear indoor hierarchies are replaced by vast, almost photographic outdoor spaces, scripted sequences are replaced by dynamic simulations, and proceduralism is replaced by an almost infinite variety of types. made a world possible.
ゲームをプレイする方法がこのように劇的にシフトしたにも関わらず、テスト方法はほとんど変わっていない。ゲームは、本質的に、高次元状態空間内部でのシステム間の複雑かつ突発的なインタラクションを有するシミュレーションである。これは、単体テストのようなコード重視の方法の有用性を限定してしまう。その結果、ゲームのテストは、圧倒的に、手作業の処理であり、ゲームを繰り返しプレイして欠陥を探す人間に大きく依存している。残念ながら、これらのチームの規模は、もはや最近のゲームの複雑さに合わせることができず、発売の遅延および製品の品質低下につながっている。 Despite this dramatic shift in the way we play games, testing methods have remained largely unchanged. Games are essentially simulations with complex and emergent interactions between systems within a high-dimensional state space. This limits the usefulness of code-focused methods like unit testing. As a result, testing games is overwhelmingly a manual process, relying heavily on humans playing games over and over again to find flaws. Unfortunately, the size of these teams can no longer match the complexity of modern games, leading to launch delays and poor product quality.
実施の形態の概要
本明細書では、ローカルで実行されたアクターコンポーネントが、リモート学習サービスが生成する１つ以上のゲームプレイデータモデルに基づいて、ゲームアプリケーションにおいてリアルタイムのゲームプレイアクションを実行するように訓練される実施の形態について説明する。ゲームアプリケーションのゲームプレイデータモデルは、リモート学習サービスを実行する１つ以上のサーバーコンピューティングシステムからクライアントコンピューティングデバイスに提供される。提供されたゲームプレイデータモデルを用いてアクターコンポーネントが生成した推論に少なくとも一部基づいて、ローカルアクターコンポーネントが実行した人工ゲームプレイアクションのゲーム内結果に基づいて、ローカルアクターコンポーネントによって観測データが生成される。受信した観測データに基づいて、リモート学習サービスは、ゲームプレイデータモデルを修正し、修正後のゲームプレイデータモデルをローカルアクターコンポーネントに提供して将来の人工ゲームプレイアクションを改善する。観測データに基づいてゲームプレイデータモデルを修正することは、特に、リモートクライアントコンピューティングデバイスがローカルで生成した、リモートクライアントコンピューティングデバイスから受信した観測データを用いてゲームプレイデータモデルを（たとえば、リアルタイムで）更新することを含み得る。
SUMMARY OF EMBODIMENTS Herein, a locally executed actor component is configured to perform real-time gameplay actions in a gaming application based on one or more gameplay data models generated by a remote learning service. An embodiment to be trained will be described. A game play data model for a game application is provided to a client computing device from one or more server computing systems running remote learning services. Observational data is generated by the local actor component based at least in part on inferences generated by the actor component using the provided gameplay data model and based on an in-game outcome of an artificial gameplay action performed by the local actor component. Ru. Based on the received observed data, the remote learning service modifies the gameplay data model and provides the modified gameplay data model to the local actor component to improve future artificial gameplay actions. Modifying the gameplay data model based on observed data may include, among other things, modifying the gameplay data model using observed data locally generated by the remote client computing device or received from the remote client computing device (e.g., in real-time). ).
特定の実施形態では、方法は、プログラマティックインタフェースを介して１つ以上のサーバーコンピューティングシステムからリモートクライアントコンピューティングデバイスに、リモートクライアントコンピューティングデバイス上で実行されているゲームアプリケーションのゲームプレイデータモデルを提供することと、提供されたゲームプレイデータモデルを用いてリモートクライアントコンピューティングデバイス上で実行されているアクターコンポーネントが生成した推論に少なくとも一部基づいて、ゲームアプリケーション内でアクターコンポーネントが実行した人工ゲームプレイアクションから生成された観測データを、プログラマティックインタフェースを介してリモートクライアントコンピューティングデバイスから受信することと、１つ以上のサーバーコンピューティングシステムが、受信した観測データに基づいてゲームプレイデータモデルを修正することと、プログラマティックインタフェースを介してリモートクライアントコンピューティングデバイスに修正後のゲームプレイデータモデルを提供することとを含んでもよい。 In certain embodiments, a method transmits a gameplay data model of a game application running on the remote client computing device from one or more server computing systems to a remote client computing device via a programmatic interface. and an artificial game executed by an actor component within a game application based at least in part on inferences generated by the actor component running on a remote client computing device using the provided gameplay data model. receiving observational data generated from the play action from a remote client computing device via a programmatic interface; and one or more server computing systems modifying the gameplay data model based on the received observational data. and providing the modified gameplay data model to a remote client computing device via a programmatic interface.
この方法は、１つ以上のサーバーコンピューティングシステムが、リモートクライアントコンピューティングデバイス上で実行されているアクターコンポーネントの入力変数にゲームアプリケーションの１つ以上の出力状態の各々を対応付けたコントロール情報を、プログラマティックインタフェースを介して受信することをさらに含んでもよい。ゲームアプリケーションの１つ以上の出力状態は、ゲームアプリケーションの仮想環境内のプレーヤー基準位置、ゲームアプリケーションの仮想環境内のプレーヤー基準位置に対する物体の位置、ゲームアプリケーションの仮想環境内のプレーヤー基準位置に対する物体に関連する動きベクトル、ゲームアプリケーションの仮想環境の１つ以上の態様に関するジオメトリ情報、および／またはゲームアプリケーションのゲームプレイに関連する１つ以上のゲーム内報酬インジケーターを含む群の１つ以上を含んでもよい。 The method includes one or more server computing systems generating control information that associates each of one or more output states of a game application with input variables of an actor component running on a remote client computing device. The method may further include receiving via a programmatic interface. The one or more output states of the game application include a player reference position within the game application's virtual environment, a position of an object relative to a player reference position within the game application virtual environment, and an object relative to a player reference position within the game application virtual environment. may include one or more of a group including associated motion vectors, geometry information regarding one or more aspects of the gaming application's virtual environment, and/or one or more in-game reward indicators related to gameplay of the gaming application. .
方法は、１つ以上のサーバーコンピューティングシステムが、ゲームアプリケーションの人間のユーザが利用可能なアクションにアクターコンポーネントの１つ以上の入力変数の各々を対応付けたコントロール情報をプログラマティックインタフェースを介して受信することをさらに含んでもよい。 The method includes one or more server computing systems receiving, via a programmatic interface, control information mapping each of the one or more input variables of an actor component to an action available to a human user of a game application. It may further include:
ゲームプレイデータモデルを修正することは、ゲームアプリケーションの人間のユーザがゲームアプリケーション内で実行したゲームプレイアクションに基づいて生成された追加の観測データにさらに基づいてもよい。 Modifying the gameplay data model may be further based on additional observational data generated based on gameplay actions performed within the gaming application by a human user of the gaming application.
受信した追加の観測データに基づいてゲームプレイデータモデルを修正することは、深層学習人工知能を用いてゲームプレイデータモデルを修正することを含む。方法は、人工ゲームプレイアクションに基づいてゲームアプリケーションのテストデータを生成することをさらに含んでもよい。 Modifying the gameplay data model based on the received additional observational data includes modifying the gameplay data model using deep learning artificial intelligence. The method may further include generating test data for the gaming application based on the artificial gameplay actions.
方法は、観測データをたとえば観測データのバッチの形式で１つ以上のサーバーコンピューティングシステムに送信する前に、リモートクライアントコンピューティングデバイスにおいて集約することをさらに含んでもよい。これにより、１つ以上のサーバーコンピューティングシステムとリモートクライアントコンピューティングデバイスとの間の通信におけるデータトラフィックが低減されるであろう。受信した観測データに基づいてゲームプレイデータモデルを修正することは、その後、観測データの集約が少なくとも１つの予め定義された基準を満たしたことに応じて実行されてもよい。少なくとも１つの基準は、たとえば、所定期間、所定量の観測データ（たとえば、バイト単位またはその他の数量単位で測定される）、および、リモートクライアントコンピューティングデバイスにおいて受信した、たとえば１つ以上のサーバーコンピューティングシステムからの明確なリクエストのうち、少なくとも１つを含んでもよい。 The method may further include aggregating the observation data at the remote client computing device, eg, before transmitting the observation data in the form of a batch of observation data to one or more server computing systems. This will reduce data traffic in communications between one or more server computing systems and remote client computing devices. Modifying the gameplay data model based on the received observational data may then be performed in response to the aggregation of observational data meeting at least one predefined criterion. The at least one criterion may include, for example, a predetermined period of time, a predetermined amount of observed data (e.g., measured in bytes or other quantities), and a predetermined amount of observed data received at a remote client computing device, e.g. may include at least one explicit request from the management system.
特定の実施形態では、サーバーは、ネットワークインタフェースと、１つ以上のプロセッサと、実行可能な命令のセットを格納したメモリとを備えてもよい。実行可能な命令のセットは、１つ以上のプロセッサによって実行されると、１つ以上のプロセッサを操作して、入力変数にゲームアプリケーションの１つ以上の出力状態の各々を対応付けたコントロール情報に少なくとも一部基づいて、ゲームアプリケーションのゲームプレイデータモデルを生成させ、生成したゲームプレイデータモデルをリモートクライアントコンピューティングデバイス上で実行されているアクターコンポーネントにプログラマティックインタフェースを介して提供させ、生成したゲームプレイデータモデルを用いてアクターコンポーネントが生成した推論に基づいて、ゲームアプリケーション内でアクターコンポーネントが実行した人工ゲームプレイアクションから生成された観測データを、プログラマティックインタフェースを介してアクターコンポーネントから受信させ、受信した観測データに基づいて、生成したゲームプレイデータモデルを修正させ、ゲームアプリケーション内で追加の人工ゲームプレイアクションを実行する際にアクターコンポーネントが使用するために、プログラマティックインタフェースを介してアクターコンポーネントに修正後のゲームプレイデータモデルを提供させてもよい。 In particular embodiments, a server may include a network interface, one or more processors, and memory containing a set of executable instructions. The set of executable instructions, when executed by the one or more processors, operate the one or more processors to generate control information that associates input variables with each of the one or more output states of the game application. generating a gameplay data model for a game application based at least in part on the generated gameplay data model, causing the generated gameplay data model to be provided via a programmatic interface to an actor component running on a remote client computing device; Receiving, through a programmatic interface, observation data generated from artificial gameplay actions performed by the actor component within the game application from the actor component based on inferences generated by the actor component using the play data model. Modify the generated gameplay data model based on the observed data and modify it via a programmatic interface to the actor component for use by the actor component in performing additional artificial gameplay actions within the game application. Later game play data models may be provided.
リモートクライアントコンピューティングデバイスは、リモートクライアントコンピューティングデバイスは、ゲームアプリケーションのインスタンスを実行してもよく、観測データは、リモートクライアントコンピューティングデバイスが実行したゲームアプリケーションのインスタンス内でアクターコンポーネントが実行した人工ゲームプレイアクションから生成される。 The remote client computing device may execute an instance of a game application, and the observed data may be a synthetic game executed by an actor component within the instance of the game application executed by the remote client computing device. Generated from play actions.
実行可能な命令のセットは、１つ以上のプロセッサをさらに操作して、リモートクライアントコンピューティングデバイス上で実行されているアクターコンポーネントの入力変数にゲームアプリケーションの１つ以上の出力状態の各々を対応付けたコントロール情報を、プログラマティックインタフェースを介して受信させてもよい。ゲームアプリケーションの１つ以上の出力状態は、ゲームアプリケーションの仮想環境内のプレーヤー基準位置、ゲームアプリケーションの仮想環境内のプレーヤー基準位置に対する物体の位置、ゲームアプリケーションの仮想環境内のプレーヤー基準位置に対する物体に関連する動きベクトル、ゲームアプリケーションの仮想環境の１つ以上の態様に関するジオメトリ情報、および／またはゲームアプリケーションのゲームプレイに関連する１つ以上のゲーム内報酬インジケーターを含む群の１つ以上を含んでもよい。 The set of executable instructions further operates the one or more processors to map each of the one or more output states of the game application to input variables of an actor component running on a remote client computing device. The control information may be received via a programmatic interface. The one or more output states of the game application include a player reference position within the game application's virtual environment, a position of an object relative to a player reference position within the game application virtual environment, and an object relative to a player reference position within the game application virtual environment. may include one or more of a group including associated motion vectors, geometry information regarding one or more aspects of the gaming application's virtual environment, and/or one or more in-game reward indicators related to gameplay of the gaming application. .
実行可能な命令のセットは、１つ以上のプロセッサをさらに操作して、ゲームアプリケーションの人間のユーザが利用可能なアクションにアクターコンポーネントの１つ以上の入力変数の各々を対応付けたコントロール情報を、プログラマティックインタフェースを介して受信させてもよい。 The set of executable instructions further operates the one or more processors to generate control information mapping each of the one or more input variables of the actor component to an action available to a human user of the game application. It may also be received via a programmatic interface.
実行可能な命令のセットは、１つ以上のプロセッサをさらに操作して、ゲームアプリケーションの人間のユーザがゲームアプリケーション内で実行したゲームプレイアクションから生成された追加の観測データを、プログラマティックインタフェースを介して受信させてもよく、ゲームプレイデータモデルを修正させることは、受信した追加の観測データにさらに基づく。 The set of executable instructions further operates the one or more processors to process additional observational data generated from gameplay actions performed within the game application by a human user of the game application via the programmatic interface. and modifying the gameplay data model may be further based on additional observational data received.
受信した追加の観測データに基づいてゲームプレイデータモデルを修正させることは、深層学習人工知能を用いてゲームプレイデータモデルを修正させることを含んでもよい。 Modifying the gameplay data model based on the additional observational data received may include modifying the gameplay data model using deep learning artificial intelligence.
特定の実施形態では、クライアント方法は、１つ以上のプロセッサが実行するアクターコンポーネントが、プログラマティックインタフェースを介して、１つ以上のリモートサーバーコンピューティングシステム上で実行されている機械学習コンポーネントからゲームアプリケーションのゲームプレイデータモデルを受信することと、１つ以上のプロセッサが、ゲームアプリケーションのインスタンスを実行することと、ゲームプレイデータモデルを用いてアクターコンポーネントが生成した推論に少なくとも一部基づいて、ゲームアプリケーションの実行インスタンス内でアクターコンポーネントが実行した人工ゲームプレイアクションから生成された観測データを、プログラマティックインタフェースを介して機械学習コンポーネントに提供することと、提供した観測データに少なくとも一部基づいた修正後のゲームプレイデータモデルを、１つ以上のリモートサーバーコンピューティングシステム上で実行されている機械学習コンポーネントからプログラマティックインタフェースを介して受信することとを含んでもよい。 In certain embodiments, a client method allows an actor component executed by one or more processors to communicate with a game application via a programmatic interface from a machine learning component running on one or more remote server computing systems. receiving a gameplay data model of the game application; and one or more processors executing an instance of the game application; providing, via a programmatic interface, observed data generated from artificial gameplay actions performed by an actor component within an execution instance of the machine learning component; The method may include receiving a gameplay data model via a programmatic interface from a machine learning component running on one or more remote server computing systems.
このクライアント方法は、修正後のゲームプレイデータモデルを用いてアクターコンポーネントが生成した追加の推論に少なくとも一部基づいて１つ以上の追加の人工ゲームプレイアクションを実行することをさらに含んでもよい。 The client method may further include performing one or more additional artificial gameplay actions based at least in part on additional inferences generated by the actor component using the modified gameplay data model.
クライアント方法は、人工ゲームプレイアクションに基づいてゲームアプリケーションのテストデータを生成することをさらに含んでもよい。 The client method may further include generating test data for the gaming application based on the artificial gameplay actions.
ゲームプレイデータモデルは、アクターコンポーネントの入力変数にゲームアプリケーションの１つ以上の出力状態の各々を対応付けたコントロール情報に少なくとも一部基づいてもよい。ゲームアプリケーションの１つ以上の出力状態は、ゲームアプリケーションの仮想環境内のプレーヤー基準位置、ゲームアプリケーションの仮想環境内のプレーヤー基準位置に対する物体の位置、ゲームアプリケーションの仮想環境内のプレーヤー基準位置に対する物体に関連する動きベクトル、ゲームアプリケーションの仮想環境の１つ以上の態様に関するジオメトリ情報、および／またはゲームアプリケーションのゲームプレイに関連する１つ以上のゲーム内報酬インジケーターを含む群の１つ以上を含んでもよい。 The gameplay data model may be based at least in part on control information that maps each of the one or more output states of the game application to input variables of the actor component. The one or more output states of the game application include a player reference position within the game application's virtual environment, a position of an object relative to a player reference position within the game application virtual environment, and an object relative to a player reference position within the game application virtual environment. may include one or more of a group including associated motion vectors, geometry information regarding one or more aspects of the gaming application's virtual environment, and/or one or more in-game reward indicators related to gameplay of the gaming application. .
ゲームプレイデータモデルは、ゲームアプリケーションの人間のユーザが利用可能なアクションにアクターコンポーネントの１つ以上の出力変数の各々を対応付けたコントロール情報に少なくとも一部基づいてもよい。 The gameplay data model may be based at least in part on control information that maps each of the one or more output variables of the actor component to actions available to a human user of the gaming application.
クライアント方法は、修正後のゲームプレイデータモデルが追加の観測データにさらに基づくよう、ゲームアプリケーションの人間のユーザがゲームアプリケーション内で実行したゲームプレイアクションから生成された追加の観測データを生成することをさらに含んでもよい。 The client method generates additional observed data generated from gameplay actions performed within the game application by a human user of the game application such that the modified gameplay data model is further based on the additional observed data. It may further include.
本開示は、添付の図面を参照することによって当業者に理解され、その数多くの特徴および利点が当業者に明らかになるであろう。異なる図面における同一の参照符号の使用は、同様または同一の項目を示す。 BRIEF DESCRIPTION OF THE DRAWINGS The present disclosure will be understood, and its numerous features and advantages will become apparent to those skilled in the art, by referencing the accompanying drawings. The use of the same reference numbers in different drawings indicates similar or identical items.
詳細な説明
本明細書において説明する技術の実施の形態によって、ゲームアプリケーションの開発者（「ゲーム開発者」とも呼ばれる）は、ＡＩ（人工知能）を利用して、１つ以上のゲームアプリケーション（たとえば、ビデオゲームまたはその他のシミュレーション）をプレイおよびテストできる実行可能なアクターコンポーネントを訓練できるようになる。このような技術、それらの様々な実施の形態は、参照の便宜上、本明細書においてＧＴ（Ｇａｍｅｐｌａｙ Ｔｒａｉｎｅｒ）システムと称される場合があり、ゲーム開発者がゲームアプリケーションにリンクし得るＳＤＫ（ソフトウェア開発キット）、および、当該ＳＤＫが特定のゲームアプリケーションに関連するゲームプレイモデルを訓練するために用いるリモート学習サービスの両方を利用し得る。よって、上位レベルでは、ゲームとＧＴシステムとのインタラクションは、ゲームと人間のプレーヤーとのインタラクションに類似するであろう。ゲームは、ＧＴシステムに送られる出力を生成する。ＧＴシステムは、その出力に対する応答方法を評価し、ＧＴシステムが実行したい人工ゲームプレイアクションを返す。その後、ゲームは、これらのアクションを適用し、新しい出力を生成する。このサイクルが繰り返される。
DETAILED DESCRIPTION Embodiments of the techniques described herein enable game application developers (also referred to as “game developers”) to utilize AI (artificial intelligence) to develop one or more game applications (e.g. , video games, or other simulations) to train executable actor components that can be played and tested. Such technologies, their various embodiments, may be referred to herein as Gameplay Trainer (GT) systems for convenience of reference, and include SDK (Software Development kit) and remote learning services that the SDK uses to train gameplay models related to a particular gaming application. Thus, at a high level, the interaction of a game with a GT system will be similar to the interaction of a human player with a game. The game produces output that is sent to the GT system. The GT system evaluates how to respond to that output and returns artificial gameplay actions that the GT system wishes to perform. The game then applies these actions and generates new outputs. This cycle is repeated.
特定の実施形態では、Ｇａｍｅｐｌａｙ Ｔｒａｉｎｅｒは、ゲームプレイデータモデル用いて１つ以上のゲームアプリケーションの各々をプレイおよびテストするための、ローカルで実行中のＡＩ（人工知能）アクターコンポーネントと連動するリモート学習サービスをゲーム開発者に提供する。少なくともいくつかの実施の形態では、ローカルで実行中のアクターコンポーネントが用いるゲームプレイデータモデルは、アクターコンポーネントがゲームアプリケーション内で実行する人工ゲームプレイアクションから収集された観測データに基づいて、（ＧＴ学習サービスを介して）ＧＴシステムによって生成される。よって、ＧＴシステムは、コスト感応度、予測可能性、および統合の容易さを含む、ゲーム開発の様々な目的に合わせたソリューションを提供する。ＧＴシステムの特定の実施の形態は、それによって、ゲーム開発者がゲームアプリケーションにＧＴシステムを素早く統合して有用なゲームプレイデータモデルを生成できるようにするソリューションを提供する。 In certain embodiments, the Gameplay Trainer is a remote learning service that works with locally running artificial intelligence (AI) actor components to play and test each of the one or more game applications using the gameplay data model. to game developers. In at least some embodiments, the gameplay data model used by a locally executing actor component is based on observational data collected from artificial gameplay actions that the actor component performs within the game application (GT learning service) generated by the GT system. Thus, the GT system provides a solution tailored to various game development objectives, including cost sensitivity, predictability, and ease of integration. Certain embodiments of the GT system thereby provide a solution that allows game developers to quickly integrate the GT system into their game applications to generate useful gameplay data models.
特定の実施形態では、普及しているフレームワークのサポートおよび／または一般的な参照用語の利用などのために、ＧＴシステムは、１つ以上のアプリケーションプログラミングインタフェース（ＡＰＩ、本明細書において使用する場合、アプリケーションプログラミングインタフェースまたはその他の適したプログラマティックインタフェースを示し得る）を提供してもよい。様々な実施の形態では、ゲームアプリケーション開発者がプラットフォーム固有のＳＤＫ（ソフトウェア開発キット）の使用をゲームアプリケーションに組み込むために、このようなＡＰＩが提供されてもよい。 In certain embodiments, the GT system provides one or more application programming interfaces (APIs, as used herein), such as to support popular frameworks and/or to utilize common reference terminology. , an application programming interface, or other suitable programmatic interface). In various embodiments, such an API may be provided for game application developers to incorporate the use of platform-specific SDKs (software development kits) into their game applications.
Ｇａｍｅｐｌａｙ Ｔｒａｉｎｅｒシステムは、有用、フレキシブル、訓練可能、かつゲームアプリケーションにおいて単純に「勝つ」ことよりも目的に向かって前進できるソリューションをゲーム開発者に提供する。一非限定例として、ゲームアプリケーションのゲームプレイデータモデルは、ゲームアプリケーションの人間のプレーヤーがゲーム世界において前進できない可能性が高い、すなわち、人間のプレーヤーが「立ち往生」する可能性の高いゲーム世界の１つ以上のエリアをＧＴシステムのアクターコンポーネントが判断できるようにし得る。別の非限定例として、ゲームプレイデータモデルは、ゲーム世界において１つ以上のゲーム世界の敵がその地位にしては不適切に力が与えられていること、たとえば、ロールプレイングゲームにおいて下位レベルまたは中間レベルのキャラクターと遭遇に値するよりも敵が強いか弱いかのどちらかであるとＧＴシステムのアクターコンポーネントが判断できるようにし得る。よって、特定の実施形態では、ＧＴは、ゲーム世界における１つ以上の異なる目的に各々が関連する、ゲームアプリケーションの複数のゲームプレイデータモデルを高速で開発することを強調してもよい。これに代えて、ＧＴシステムは、ＧＴシステムに提供される１つ以上のユーザ指定パラメータを介して識別される目的および／またはＧＴシステム自体が識別する目的など、複数の目的を含む１つのゲームプレイデータモデル、そうでない場合、複数の目的に向かって前進する１つのゲームプレイデータモデルを開発してもよい。 The Gameplay Trainer system provides game developers with a solution that is useful, flexible, trainable, and allows them to move toward goals beyond simply "winning" in gaming applications. As one non-limiting example, a game play data model for a game application may be configured such that a human player of the game application is unlikely to be able to advance in the game world, i.e., a part of the game world where the human player is likely to be "stuck". More than one area may be determined by the actor component of the GT system. As another non-limiting example, the gameplay data model may indicate that one or more game world enemies are inappropriately empowered for their position in the game world, such as being at a lower level or lower level in a role-playing game. It may be possible for the actor component of the GT system to determine that an enemy is either stronger or weaker than it is worth encountering with a mid-level character. Thus, in certain embodiments, the GT may emphasize rapidly developing multiple gameplay data models for the game application, each related to one or more different objectives in the game world. Alternatively, the GT system can create a single game play that includes multiple objectives, such as objectives identified via one or more user-specified parameters provided to the GT system and/or objectives identified by the GT system itself. A data model, or else one gameplay data model that advances toward multiple objectives, may be developed.
本明細書ではゲームアプリケーションに関する技術および実施の形態について説明するが、様々なシミュレーションシナリオと連動して別の実施の形態を利用し、その他の状況における挙動データモデルおよび／または自動エージェント（たとえば、自動運転車、自律型ロボディクスなど）が生成されてもよいことが分かるであろう。同様に、本明細書ではゲームアプリケーションテストに関する技術および実施の形態について説明するが、その他の状況におけるこのような挙動データモデルおよび／または自動エージェントが生成および／または利用されてもよい（たとえば、自動プレイエージェントまたは「ボット」開発、ゲーム内自律型仲間キャラクター、人間のプレーヤーとプレイするための生成自動エージェントの開発など）。 Although techniques and embodiments are described herein with respect to gaming applications, other embodiments may be utilized in conjunction with various simulation scenarios and behavioral data models and/or automated agents (e.g., automated It will be appreciated that driving vehicles, autonomous robotics, etc.) may be generated. Similarly, although techniques and embodiments are described herein with respect to game application testing, such behavioral data models and/or automated agents may be generated and/or utilized in other contexts (e.g., automated play agent or "bot" development, in-game autonomous companion characters, and the development of generative automated agents for play with human players, etc.).
ＧＴシステムの実施の形態は、各ゲームアプリケーションの１つ以上の態様をテストしたい１人以上の開発者にとっての様々な利点を提供するであろう。一例として、開発者にとって、動作しているゲームを遠隔テストできることは利点であろう。特定の実施形態では、ＧＴアクターコンポーネントは、ＧＴシステムがテストしているゲームアプリケーションの実行インスタンスに関してローカルで動作する。しかしながら、ＧＴシステムは、帯域幅とレイテンシとの制限を暗に示す公共インターネットを横断するゲームへの接続を経由したこのようなテストを可能にする。 Embodiments of the GT system may provide various advantages for one or more developers who wish to test one or more aspects of each gaming application. As an example, it would be advantageous for developers to be able to remotely test a working game. In certain embodiments, the GT actor component operates locally with respect to the running instance of the game application that the GT system is testing. However, the GT system allows such testing via a connection to the game that traverses the public Internet, which implies bandwidth and latency limitations.
別の例として、ＧＴシステムは、このようなテストに利用されるコンピューティングリソース（ゲーム開発者にとっては、通常、大変な犠牲である）を減らし得る。本明細書に記載の技術は、ゲームアプリケーションの大量の個々のインスタンスに合わせてスケーリングされたテストを可能にするが、このような技術は、ＧＴシステムが有用なＡＩを１つのインスタンスから効果的に訓練することも可能にする。 As another example, the GT system may reduce the computing resources utilized for such testing, which is typically a significant sacrifice for game developers. Although the techniques described herein enable testing that is scaled to a large number of individual instances of a gaming application, such techniques do not allow GT systems to effectively generate useful AI from a single instance. It also allows for training.
別の例として、ＧＴシステムは、１つ以上の関連するゲームエンジン（通常、ゲーム物理およびグラフィカルレンダリングなどの一般的な下位サービスを提供する大きなコードベース）のネイティブサポートを介した１つ以上のゲームアプリケーションのテストを可能にし得る。様々な実施の形態では、様々なこのようなゲームエンジン（たとえば、Ｕｎｉｔｙ、Ｕｎｒｅａｌ、およびｐｕｒｅ Ｃ＋＋）および共用論理のコンパイル済みライブラリの各々についての、ＧＴシステムに関連する１つ以上のＳＤＫが提供され得る。 As another example, a GT system can support one or more games through native support for one or more associated game engines (typically large codebases that provide common low-level services such as game physics and graphical rendering). May enable testing of applications. In various embodiments, one or more SDKs associated with the GT system are provided for each of a variety of such game engines (e.g., Unity, Unreal, and pure C++) and compiled libraries of shared logic. obtain.
特定の実施形態では、ＧＴシステムは、ゲームアプリケーションの最初のゲームプレイモデルを、そのゲームアプリケーションに関して定義された１つ以上のパラメータに基づいて生成し得る。一般に、定義されたパラメータは、通常、観測（プレーヤーが普段体験するゲーム状態）、アクション（ゲームにおいてプレーヤーが行い得る論理的やり取り）、および報酬（ＧＴアクターコンポーネントがどれだけ上手くまたは下手にやっているかを示すもの）という３つのタイプの情報を、ＧＴアクターコンポーネントに提供する。 In certain embodiments, the GT system may generate an initial gameplay model for a game application based on one or more parameters defined for the game application. In general, the defined parameters are usually observations (the game state that the player normally experiences), actions (the logical interactions that the player may make in the game), and rewards (how well or poorly the GT actor component is doing. provides three types of information to the GT actor component:
図１は、ネットワーク化されたゲーム訓練システム１００の例示的な実施の形態を示す。ネットワーク化されたゲーム訓練システムは、ローカルコンピューティングシステム１１０上で実行されているＧＴアクターコンポーネント１０５のインスタンスを含む。ローカルコンピューティングシステム１１０は、ＧＴアクターコンポーネントからゲームプレイアクション１２８を受信するゲームアプリケーション１１５も実行している。ＧＴアクターコンポーネント１０５は、インターネットまたはその他の介在ネットワークなど、１つ以上のコンピュータネットワーク１０１を経由して、１つ以上のリモートサーバー１２５上で実行されているＧＴ学習サービス１２０に通信可能に連結される。図示した実施の形態では、ＧＴアクターコンポーネント１０５は、人工ゲームプレイアクション１２８を生成してゲームアプリケーション１１５に提供し、ゲームアプリケーションから観測データおよびゲーム内報酬インジケーター１１２を受信し、この情報の一部またはすべてを観測体験データ１３０としてＧＴ学習サービス１２０に提供する。そして、ＧＴ学習サービス１２０は、受信した観測体験データ１１５を用いて、ＧＴアクターコンポーネントがゲームアプリケーションに提供する全体のゲームプレイおよび個々の人工ゲームプレイアクションの両方を改善するための、ゲームアプリケーション１１５に関連する１つ以上のゲームプレイモデル１３５を生成、改良、および／またはＧＴアクターコンポーネント１０５に提供する。
FIG. 1 depicts an exemplary embodiment of a networked
この過程の様々なポイントにおいて、ＧＴシステム１００は、（ＧＴ学習サービス１２０および／またはＧＴアクターコンポーネント１０５によって）ゲームアプリケーション１１５に関連するテスト用データを生成し得る。特定の実施形態では、ゲームアプリケーション１１５に関連するゲーム開発者は、（ＧＴ学習サービス１２０および／またはＧＴアクターコンポーネント１０５のプログラマティックインタフェースを介するなどして）このようなテスト用データの１つ以上のタイプおよび振る舞いを指定し得る。これに加えて、特定の実施形態では、ＧＴシステムは、ＧＴシステムが格納する定義された基準に基づくなどして、生成するテスト用データの１つ以上の態様を決定し得る。このような実施の形態では、定義された基準は、ゲームアプリケーション１１５が条件を満たしていると判断された１つ以上のタイプのゲームアプリケーションに関連し得る。たとえば、ＧＴシステムが生成するテスト用データの定義された基準の第１セットは、２次元のプラットフォームゲームタイプに関連し、第２セットは３次元のプラットフォームゲームタイプに関連し、第３セットはレーシングゲームタイプに関連し、第４セットは、オープンワールドのロールプレイングゲームに関連する、などであり得る。
At various points during this process,
上述したように、特定のシナリオでは、ＧＴアクターコンポーネント１０５による人工ゲームプレイアクションは、ゲームアプリケーション１１５に関して定義された１つ以上のパラメータに基づいてＧＴシステム１００が生成した１つ以上のゲームプレイデータモデル１３５に少なくとも一部基づき得る。このようなパラメータは、（非限定例として）ゲームアプリケーション１１５の開発者によって、ＧＴシステム１００のプログラマティックインタフェースを介して提供され得る。たとえば、最初のゲームプレイモデルは、ゲームアプリケーション１１５の１つ以上の出力状態の各々をＧＴアクターコンポーネント１０５の入力変数に対応付けたコントロール情報、および／またはゲームアプリケーションの１つ以上の入力状態の各々をＧＴアクターコンポーネント１０５の出力変数に対応付けたコントロール情報に基づき得る。特定の実施形態では、このようなコントロール情報は、ＧＴアクターコンポーネント１０５のこれらの入力変数および／または出力変数のうち１つ以上の各々を、ゲームアプリケーションの人間のユーザが利用可能な観測またはアクションと対応付け得る。たとえば、ＧＴアクターコンポーネント１０５の出力変数は、ゲームアプリケーションにおける仮想キャラクターの動きを表し得、この出力変数は、人間のユーザがゲームプレイ中に利用する物理的入力装置によるその仮想キャラクターの動きに対応する。ＧＴアクターコンポーネント１０５のこのような出力変数は、このようなゲームプレイ中に人間のユーザが利用可能なアクションまたは観測に対応し得る。特定の実施形態では、ＧＴ ＡＰＩは、ゲームアプリケーション開発者が上位プリミティブ（たとえば、「ジョイスティック」、「エンティティ」など）を用いて入力および出力を記述できるようにする。ＧＴ ＳＤＫは、その後、上位プリミティブをＧＴコントロール情報にマッピングして、ゲームアプリケーション開発者が機械学習における専門知識を行使することを必要としないでＡＰＩが利用できるようにする。
As mentioned above, in certain scenarios, artificial gameplay actions by
特定の実施形態では、コントロール情報は、ＧＴアクターコンポーネント１０５が入力変数として使用するためのゲームアプリケーション１１５の１つ以上の出力状態を含み得る。非限定例として、このような出力状態は、ゲームアプリケーション１１５の仮想環境内のプレーヤー基準位置、ゲームアプリケーション１１５の仮想環境内のプレーヤー基準位置に対する物体の位置、ゲームアプリケーション１１５の仮想環境内のプレーヤー基準位置に対する物体に関連する動きベクトル、ゲームアプリケーション１１５の仮想環境の１つ以上の態様に関するジオメトリ情報、および／またはゲームアプリケーション１１５内のゲームプレイに関連するスコアまたはその他のゲーム内報酬インジケーターを含み得る。一般に、コントロール情報は、人間のプレーヤーが観測可能なゲームアプリケーションの任意の態様をＧＴアクターコンポーネント１０５の入力変数に対応付け得る。
In particular embodiments, the control information may include one or more output states of the
また、いくつかの実施の形態では、ＧＴアクターコンポーネント１０５の人工ゲームプレイアクションに起因する観測体験データ１３０を受信するときに用いられる方法と同様の方法でゲームアプリケーション１１５に関連する１つ以上のゲームプレイモデルを生成または修正するなどするために、ＧＴシステム１００は、１人以上の人間のプレーヤーがそのゲームアプリケーション１１５に提供したゲームプレイアクションに起因する観測体験データを受信し得る。一例として、ＧＴアクターコンポーネント１０５が所定期間または所定回数試行しても乗り越えることが長い間できなかったゲームアプリケーション１１５における障害に遭遇した場合、ＧＴシステム１００がコミュニケーションを開始して、１人以上の人間のプレーヤーにその障害を乗り越えることを示す１つ以上のゲームプレイアクションを提供するよう促し得るなど、ＧＴアクターコンポーネント１０５の出力変数によって、ＧＴアクターコンポーネント１０５は、ゲームアプリケーション１１５内でのアシスタンス状態を示すことができるようになり得る。これらの人が提供したゲームプレイアクションに起因する観測体験データがＧＴ学習サービス１２０に提供される。その後、ＧＴ学習サービス１２０は、ＧＴアクターコンポーネント１０５が次に遭遇したときにその障害および／またはその他の障害を乗り越えられるようにゲームプレイモデル１３５を修正する。
Also, in some embodiments, one or more games associated with the
ゲームをプレイできるＡＩを訓練するための１つの手法として、ＲＬ（強化学習）がある。ＲＬでは、開発者は、勝利すると報酬を与え、敗北するとペナルティを与え、ＡＩがますます最適な戦略を自律的に学習するために後で使用する信号を提供する。残念ながら、ＲＬでは非常に素晴らしい結果がデモンストレーションされているが、ＲＬのアルゴリズムには、通常、プレーヤーを訓練するために何百万個または何十億個ものフレームのデータなど大量のデータ消費（サンプル非効率）、時間およびコンピューティングリソースの観点において開発者にとって、通常、影響が著しいコストが伴う。また、これらのアルゴリズムの結果は非常にばらつく傾向があり、許容可能な結果を実現するために、その分野でのかなりの知識、および超パラメータの調整が利用される。 Reinforcement learning (RL) is one method for training AI that can play games. In RL, developers reward wins and penalize losses, providing signals that the AI later uses to autonomously learn increasingly optimal strategies. Unfortunately, although very impressive results have been demonstrated in RL, RL algorithms typically require large amounts of data consumption (such as millions or billions of frames of data to train the player). (inefficiency), typically comes with significant costs to the developer in terms of time and computing resources. Also, the results of these algorithms tend to be highly variable, and considerable knowledge in the field and tuning of hyperparameters are utilized to achieve acceptable results.
そのため、特定の実施の形態は、ＩＬ（模倣学習）機械学習技術を利用する。ＩＬ機械学習技術は、１人以上の人間のプレーヤーがゲームをプレイするのを観察することに基づいてＡＩを訓練する。エージェントが最適なポリシーを自身で見つける必要があるＲＬとは異なり、ＩＬでは、人間の熟練者の挙動が効果的に再現される。生成ＩＬのポリシーは、人間のデモンストレーションにおいて捕らえたシナリオと類似するが同一でないシナリオにおいて上手く機能する。この問題は、特に、少ない数の共通テーマ（メカニクス）の上で多数のバリエーション（レベル）として一般に構築されるゲームでは切実である。特定のバリエーションのみを学習できるが基礎となるテーマを学習できないＡＩは、非常に効果的なツールとはならない。 As such, certain embodiments utilize IL (imitation learning) machine learning techniques. IL machine learning techniques train an AI based on observing one or more human players play a game. Unlike RL, where agents have to find the optimal policy themselves, IL effectively reproduces the behavior of human experts. Generative IL policies work well in scenarios that are similar, but not identical, to those captured in human demonstrations. This problem is particularly acute in games that are typically constructed as many variations (levels) on a small number of common themes (mechanics). AI that can only learn specific variations but not the underlying theme will not be a very effective tool.
ＧＴシステム１００は、効果的に一般化する観測を用いる。たとえば、３Ｄ情報が絶対座標ではなくＧＴアクターコンポーネント１０５の視点を基準として表現されている自己中心的な観測は、ＧＴ学習サービス１２０に、訓練環境とは無関係の動きや目標ポリシーを含んだゲームプレイデータモデル１３５を生成させてしまう。
よって、様々な実施の形態では、ＧＴシステム１００は、１つ以上の追加の基準、すなわち、困難な障害に向き合うこと以外の基準に基づいて関連性のあるゲームプレイモデル１３５を改良するために、人が提供したゲームプレイアクションに起因する観測体験データ１３０を受信すると決定してもよい。非限定例として、ＧＴシステム１００は、このようなデータを提供することを選択した１つ以上の識別された人間のプレーヤーに関連するすべてのセッションまたはセッションのサブセットについてのこのようなデータ、；ゲームアプリケーション１１５の１つ以上の識別された部分に関連するゲームプレイアクションについてのこのようなデータなどを、一定間隔、そうでない場合、予定されている間隔の間受信し得る。
Thus, in various embodiments, the
いくつかの実施の形態では、開発者は、ゲームアプリケーション１１５をリアルタイムで単にプレイすることによってＧＴ学習サービスに訓練データを提供し得、ＧＴ学習サービス１２０は、これに応じて１つ以上のゲームプレイモデル１３５を修正し、ＧＴアクターコンポーネント１０５を更新する。このように、ＧＴシステム１００は、ＧＴ学習サービス１２０の品質に関するインタラクティブなフィードバックを開発者に提供し、ＧＴシステム１００が問題に遭遇した場合または遭遇したときに開発者がジャストインタイム方式で訂正できるようにする。いくつかの実施の形態では、開発者は、ＧＴアクターコンポーネント１０５の同時インスタンスを必要に応じた数作成し、これらのインスタンスにゲームアプリケーションを大規模にプレイおよびテストさせてもよい。また、特定の実施形態では、ＧＴシステム１００は、様々な報酬基準に基づいて複数のゲームプレイデータモデル１３５を評価し、いずれの１つまたは複数のゲームプレイデータモデル１３５がゲーム内のこれらの報酬基準に関してより優れて機能するかを判断するなどしてもよい。そのため、ＧＴシステム１００は、最も優れて機能したゲームプレイデータモデル１３５を、今後の推論のために利用するゲームプレイデータモデルとして選択してもよい。このような自動的評価は、ＧＴシステム１００が訓練済みゲームプレイデータモデルを「磨き上げる」ことを可能にする。
In some embodiments, a developer may provide training data to the GT learning service by simply playing the
図２は、別のネットワーク化されたＧＴシステム２００の例示的な実施の形態を示す。図１のネットワーク化されたシステム１００と同様に、ネットワーク化されたシステム２００は、ローカルコンピューティングシステム１１０上で実行されているＧＴアクターコンポーネント１０５のインスタンスを含む。ローカルコンピューティングシステム１１０は、ゲームアプリケーション１１５も実行している。ＧＴアクターコンポーネント１０５（コンピュータネットワーク（複数可）１０１を経由してＧＴ学習サービス１２０に通信可能に連結されている）は、人工ゲームプレイアクション１２８をゲームアプリケーション１１５に提供し、ゲームアプリケーション１１５から観測データ１１２を受信し、結果として得られる観測体験データ１３０をＧＴ学習サービス１２０に提供する。しかしながら、ここでは、ゲームアプリケーション１１５は、ＧＴアクターコンポーネント１０５の人工ゲームプレイアクション１２８を受信し得、様々な時点で様々な基準に従って、通常のゲーミングセッションのやり方でゲームアプリケーション１１５が生成した表示情報２５５（通常、音声情報、視覚情報、触覚情報、および／またはその他の感覚によって検知される情報を含む）を認識する１人以上の人間のプレーヤー２５０のその他のゲームプレイアクション２６０も受信してもよい。ゲームアプリケーション１１５がゲームプレイアクションをＧＴアクターコンポーネント１０５から受信する、人間のプレーヤー（複数可）２５０から受信する、またはその両方でるかを問わず、ＧＴアクターコンポーネント１０５は、ゲームアプリケーション１１５から観測データ１１２を受信し、結果として得られる観測体験データ１３０をＧＴ学習サービス１２０に提供する。
FIG. 2 shows an exemplary embodiment of another
上述したように、特定の実施形態および実施態様では、ＧＴアクターコンポーネント１０５は、Ｇａｍｅｐｌａｙ Ｔｒａｉｎｅｒ ＳＤＫを含み得る。Ｇａｍｅｐｌａｙ Ｔｒａｉｎｅｒ ＳＤＫは、開発者が（ゲームアプリケーションのプログラムコードにＳＤＫを組み込むことなどによって）ゲームアプリケーション１１５に通信可能に接続する（または「リンクする」）実行可能な命令およびコンパイル済みライブラリと、ＧＴシステム２００の１つ以上の構成要素とのプログラマティックインタラクションを可能にするために開発者が使用し得るＡＰＩとを含む。特定の実施形態では、ＧＴシステム２００は、様々なＳＤＫを備えて、（たとえば、プロプライエタリエンジンのための）Ｕｎｉｔｙ、Ｕｎｒｅａｌ、およびＣ＋＋などのいくつかの普及しているゲーム開発フレームワークの各々をサポートしてもよい。これらのＳＤＫの各々は、同じ機能（観測／アクションの収集／送信、およびオンデバイス推論など）を提供し得るが、多くの場合、言語固有のバインディングおよびエンジン固有のバインディングを用いて慣用的な方法で同じ機能を提供し得る。
As mentioned above, in certain embodiments and implementations,
図３は、１つ以上の実施の形態に従って実装されたＧＴシステム３００の概略ブロック図を示す。図示した実施の形態では、１つ以上のリモートＧＴサーバー３２５は、ＧＴ ＡＰＩ３９９と、ストレージ設備３１２と、ＧＴ学習サービス３６０の実行インスタンスとを備える。クライアントコンピューティングシステム３１０が、ゲームアプリケーション３１５のインスタンスおよびＧＴアクターコンポーネント３０５のインスタンスを実行している。ＧＴサーバー（複数可）３２５およびクライアントコンピューティングシステム３１０の各々は、固定されていてもよく、移動可能であってもよく、デスクトップまたはその他のコンピュータ（たとえば、タブレット端末、スレートなど）、データベースサーバー、ネットワーク記憶装置およびその他のネットワーク機器、スマートフォンおよびその他の携帯電話、家庭用電化製品、ゲーム機システム、デジタル音楽プレーヤー装置、携帯可能なゲーム機、ＰＤＡ、ポケットベル、電子手帳、インターネット家電、（たとえば、セットトップボックスおよび／またはパーソナル／デジタルビデオレコーダーを用いた）テレビベースのシステム、ならびに適切な通信機能を備える様々なその他の消費者製品など、様々なコンピューティングデバイスのインスタンスを含んでもよいが、これらに限定されない。
FIG. 3 depicts a schematic block diagram of a
本明細書において記述されているように、ＧＴ学習サービス３６０は、ＧＴアクターコンポーネント３０５と様々な情報（たとえば、認証情報、ゲームプレイデータモデル、観測データ）をやり取りする。図示した実施の形態では、ＧＴ学習サービス３６０の実施の形態は、説明した技術のうち少なくとも一部を実行するために、１つ以上のハードウェアプロセッサ（複数可）を用いて、これらの説明した技術を実現する自動動作を実行するようリモートＧＴサーバー（複数可）３２５を構成する方法でＧＴ学習サービス３６０のソフトウェア命令を実行するなどによってリモートＧＴサーバー（複数可）３２５のメモリ（図示せず）内で動作する。このような自動動作の一部として、ＧＴ学習サービス３６０は、ストレージ設備３１２のデータ構造を含め、様々な種類のデータを格納および／または取り出し得る。
As described herein,
ストレージ設備３１２は、１つ以上のクライアントコンピューティングシステム（たとえば、クライアントコンピューティングシステム３１０）に提供することの一部としてゲームプレイデータモデル３３４を生成および格納するためにＧＴシステム３００（特に、ＧＴ学習サービス３６０）が使用する様々な情報を格納する。ストレージ設備３１２によって格納されているその他の情報は、開発者情報３３８（１人以上のゲームアプリケーション開発者に関するアクセス情報およびプロジェクト情報を含み得る）と、ゲームアプリケーション情報３４０（コントロール情報３４１、ゲームプレイ観測データ、そのゲームプレイ観測データの解析および／または評価、ならびに１つ以上の特定のゲームアプリケーションに関する過去情報を含み得る）と、ゲームセッション情報３４２と、訓練データ３３６（１つ以上のゲームプレイデータモデル３３４を生成することの一部として、およびその他の動作のためにＧＴ学習サービス３６０によって利用および格納され得る）とを含む。特定の実施態様では、ストレージ設備３１２は、ＧＴシステム３００内に組み込まれてもよく、そうでない場合、ＧＴシステム３００によって直接操作されてもよい。その他の実施態様では、ストレージ設備３１２が提供する機能の一部またはすべては、１つ以上のサードパーティのネットワーク経由でアクセス可能なストレージサービスプロバイダによって提供されてもよい。また、特定の実施形態では、ＧＴ学習サービス３６０は、開発者情報３３８の態様を利用および修正するなどによって開発者を認証して開発者のプロジェクトについてのメタデータを追跡するための論理を含む。
Storage facility 312 is configured to generate and store
ＧＴ学習サービス３６０とのインタラクション（たとえば、ゲームアプリケーション開発者によるインタラクションおよび／またはクライアントコンピューティングシステム３１０によるインタラクション）は、ＧＴ ＡＰＩ３９９を介して行われる。図示した実施の形態では、ＧＴ ＡＰＩ３９９は、アクセス制御設備３８０と、リモートＧＴサーバー３４５とクライアントコンピューティングシステム３１０との間でゲームプレイデータモデル３８２および観測データ３８４を渡すためのプログラマティックインタフェースとを提供する。特定の実施形態では、ＧＴシステム３００の使用は、１つ以上の取り消し可能なＡＰＩキー３８１によって制限されてもよく、識別された開発者に関連する１つ以上のプロジェクトに関する様々なその他の情報とともに、開発者情報３３８の一部として格納されるなどしてもよい。これらのキーは、たとえば、観測および（人工または人間のプレーヤーが生成した）ゲームプレイアクションを含む、開発者が送信したすべてのデータに索引を付けるために用いられてもよい。このような実施の形態では、開発者は、自身が送信したデータにのみアクセスでき、そのデータの様々な態様（たとえば、転送および／または削除）をさらに制御してもよい。よって、特定の実施形態では、ＡＰＩリクエストは、認証に使われ、ＧＴ学習サービスとのインタラクションのすべてを通して用いられ得るサーバーが提供した有効なＡＰＩキーを提供するよう、開発者に要求し得る。このように、ＧＴシステム３００は、ＡＰＩ呼び出しおよび収集したデータが呼び出し元の開発者と対応付けられることを徹底する。
Interaction with GT learning service 360 (eg, by a game application developer and/or by client computing system 310) occurs via
開発者に面したＧＴ ＡＰＩ３９９の背後において、ＧＴ学習サービス３６０は、ＧＴアクターコンポーネント３０５がゲームアプリケーション３１５に関連する１つ以上のゲームプレイデータモデルを生成および更新／修正することによってＧＴ学習サービス３６０についてのゲームプレイ観測を収集および生成してゲームプレイアクションに変換するアクター（Ａｃｔｏｒ）／ラーナー（Ｌｅａｒｎｅｒ）パターンを実装する。図示した実施の形態では、ＧＴアクターコンポーネント３０５およびそのＭＬＰ（機械学習プラットフォーム）３０２は、ゲームアプリケーション３１５との様々なインタラクションを実行して、ＧＴ ＡＰＩ３９９を介してＧＴ学習サービス３６０から受信した１つ以上のローカルゲームプレイデータモデル３０６に基づいてゲームアプリケーションの人間のプレーヤーのアクションをシミュレーションし得る。たとえば、ローカルゲームプレイデータモデル３０６に基づくゲームプレイアクションがアクション適用部３１６を経由してゲームアプリケーション３１５に供給される。アクション適用部３１６は、コントローラモジュール３１８を操作して、通常であれば人間のプレーヤー２５０によって操作されるゲームコントローラの機能によってこれらのゲームプレイアクションの実行をシミュレーションする。これらのゲームプレイアクションは、アクション報告部３１９を介してＭＬＰ３０２に報告される。ゲームプレイアクション自体によって、ＧＴアクターコンポーネント３０５の出力変数（図示せず）を介して、シミュレーション３２０が変更され、ローカル観測データ３０４を生成するための根拠として追加の環境観測３２２が収集される。
Behind the developer-facing
様々な実施の形態では、ＧＴアクターコンポーネント３０５は、ＧＴ ＳＤＫ（開発者が自身のゲームアプリケーションにリンクして、ＧＴ ＡＰＩ３９９を介してやり取りするために利用する、図示されていないコードおよびコンパイル済みライブラリ）に含まれ得る、および／またはＧＴ ＳＤＫを用いて生成されてもよく、オンデバイス推論（たとえば、ゲームプレイデータモデルを用いて、ゲーム内挙動および結果の１つ以上の予測を推論３０３として生成する）を実行してローカル観測データを収集および生成してもよい。ＧＴ学習サービス３６０は、ＳＤＫからデータを取り込み、ストレージ設備３１２を介して格納し、新しいゲームプレイデータモデル３３４を訓練し、これらのゲームプレイデータモデルをＧＴ ＡＰＩ３９９を介してＧＴアクターコンポーネント３０５に返すために必要なインフラストラクチャを提供する。このように、ＧＴ ＳＤＫは、観測／アクションの収集およびオンデバイス推論を提供し、開発者に面したＡＰＩとＧＴ学習サービス３６０とのアダプタとしても機能する。ＧＴ学習サービス３６０は、リモートＧＴサーバー（複数可）３２５によって実行され、様々なアルゴリズムを用いてゲームプレイデータモデルを訓練する。特定の実施形態では、モデル訓練アルゴリズムのうち１つ以上は、ＴｅｎｓｏｒＦｌｏｗまたはその他の機械学習プラットフォームなど、ＭＬＰ（機械学習プラットフォーム）３３２の動作に基づいてもよい。同様に、オンデバイス推論は、ＭＬＰ３０２（ここでも、ＴｅｎｓｏｒＦｌｏｗまたはその他の機械学習プラットフォームを含み得る）を用いて実行されてもよい。ローカルゲームプレイデータモデル３０６は、ＧＴ学習サービス３６０から取り出され、特定の実施形態では、ゲームプレイデータモデルの入力および出力変数に観測およびアクションをどのようにマッピングするかについて記述したコントロール情報を含み得る。
In various embodiments, the
ＧＴ ＡＰＩ３９９は、ゲームアプリケーションの論理入力および論理出力、ならびにＡＩがその時にどれだけ上手くやっているかについてのフィードバックを記述したパラメータをゲームアプリケーション開発者が定義することを可能にする。具体的には、ＧＴシステムは、１つ以上のゲームアプリケーション（たとえば、ゲームアプリケーション３１５）の各々についての１つ以上の観測パラメータ、１つ以上のアクションパラメータ、および１つ以上の報酬パラメータを開発者が定義できるようにする。観測パラメータ（観測データの生成をもたらす）には、プレーヤーが普段体験するゲーム状態が記述されており、ファーストパーソンシューティングゲームにおいて見えている敵の位置、またはレーシングゲームにおけるプレーヤーの車から走路の壁までの距離などの情報を含み得る。アクションパラメータは、プラットフォームゲームにおいてジャンプすること、またはレーシングゲームにおけるハンドルの位置など、プレーヤーがゲームにおいて実行する論理的なゲームプレイアクションについて記述している。報酬パラメータは、ＧＴアクターコンポーネント３０５がどれだけ上手く動作しているかについてのフィードバック、したがって、ゲームプレイアクションに応じたゲームアプリケーションの出力状態を提供するための１つ以上のメトリックを設定する。特定のシナリオおよび実施の形態では、このようなパラメータは、プレーヤーがゲームアプリケーションにおいてポイントをどのように獲得し得るかに類似した数値を含み得るが、その他のパラメータも含み得る。たとえば、報酬パラメータは、所定期間、または特定のゲームセッションの間に、プレーヤーが遭遇時に与え得る平均量または最大量のダメージ、およびゲームセッション終了時点での単純な勝利／敗北信号を含み得る。
The
この手法によって、すべての関連性のある出力を数百キロビット／秒（４Ｋ映像の場合は、数十メガビット／秒）で送信できるようになり、ＧＴアクターコンポーネント３０５は、複雑なコンピュータビジョン問題を同時に解決することなく、ゲームアプリケーション３１５のプレイ方法を学習することに集中できるようになる。この過程では、ゲームアプリケーション開発者には、ＧＴ学習サービス３６０と共有するデータに対するさらなるコントロールが与えられる。また、この手法は、スタンドアロンゲームクライアントおよびサーバーベースのゲームアプリケーションにも同様に機能する。これに加えて、ＧＴシステム３００は、ゲームが観測を送信してからアクションを受けるまでの避けることのできない数十ミリ秒（またはそれ以上）のレイテンシによる重大なマイナスの影響を受けることなく動作する。ゲームアプリケーションが一般に１秒当たり３０フレームよりも多いフレーム（フレーム当たり３３．３ミリ秒未満）で動作する（これは、サーバーとクライアントコンピューティングシステムとの間の往復にかかる時間よりも優に少ない）ことを考えると、このようなレイテンシは、ゲームプレイアクションについてのサーバー入力に左右される別のソリューションにとっては特に問題になり得る。
This technique allows all relevant outputs to be transmitted at hundreds of kilobits/second (tens of megabits/second for 4K video), allowing the
特定の実施形態では、ＧＴシステム３００は、リモートＧＴサーバー３２５とクライアントコンピューティングシステム３１０との間で非同期に動作してもよく、たとえば、１つのフレームに基づいて観測データを生成し、シミュレーションを進め、その後、いくつかのフレームの後に１つ以上のゲームプレイアクションを適用する。このような非同期動作は、ＧＴアクター３０５がゲームプレイデータモデルを用いてゲームプレイ観測をゲームプレイアクションに素早く変換するＧＴシステムのアクター／ラーナーアーキテクチャ、アクターコンポーネントが生成した観測データ、アクション、および報酬、ならびにゲームアプリケーション３１５とのインタラクションに基づいてＧＴ学習サービス３６０が新しいゲームプレイデータモデルを作製するＧＴシステムのアクター／ラーナーアーキテクチャによって活用される。ＡＩの動作をこれらの２つのコンポーネントに分けることによって、ＧＴ学習サービス３６０がセキュアな機械学習アルゴリズムおよびかなりの量のコンピューティングリソースを活用しているのも関わらず、推論を実行するためにかかる時間よりも長いレイテンシを引き起こすことなくアクターコンポーネントがゲームプレイ観測をゲームプレイアクションに変換できるようになる。
In certain embodiments, the
このアーキテクチャには、公共インターネットを横断することに伴うレイテンシを回避すること以上にいくつもの利点がある。このアーキテクチャは、訓練（非常に多くの演算を必要とする）と推論（単一のＣＰＵの一部分で実行され得る）との間の非対称性に自然に合致する。ＧＴアクターコンポーネント３０５において体験をバッチ化および圧縮することによって、ＧＴシステム３００は、関連する１秒当たりのクエリ数（ＱＰＳ：queries per second）を３０分の１まで低減し得るとともに、帯域幅を１０分の１まで低減し得る。
This architecture has several benefits beyond avoiding the latency associated with traversing the public Internet. This architecture naturally accommodates the asymmetry between training (which requires a large number of operations) and inference (which can be performed on a fraction of a single CPU). By batching and compressing experiences in the
ゲームは、本質的にインタラクティブなメディアである。残念ながら、従来のＭＬワークフローは、決してインタラクティブではなく、データの送信とそのデータに基づいたモデルの生成との間に数分または数時間の間が空いている。ＧＴシステム３００は、ゲームプレイデータモデルをリアルタイムで訓練することによってこの問題に対処する。特定の実施形態では、ＧＴ学習サービス３６０が観測データ（既存のゲームプレイデータモデルを用いてＧＴアクターコンポーネント３０５が実行したアクションに基づく観測データであれ、１人以上の人間のプレーヤーが実行したアクションに基づく観測データであれ）を受信するとすぐに、ＧＴ学習サービス３６０がそのデータについてモデルの訓練を開始し、多くの場合、前回のデモンストレーションおよび／またはゲームプレイデータモデルから結果を作り上げる。観測およびアクションがコンパクトに表現されているおかげで、新しいゲームプレイデータモデルを数秒で生成できる。これらのゲームプレイデータモデルは、人間のプレーヤーが送信したデモンストレーションに照らして常に評価され得、ＧＴアクターコンポーネントが使用中の現在のゲームプレイデータモデルを上回るパフォーマンスをした場合にのみ、ＧＴアクターコンポーネント３０５に提供される。
Games are inherently interactive media. Unfortunately, traditional ML workflows are far from interactive, with gaps of minutes or hours elapse between sending data and generating a model based on that data.
よって、上述したように、ＧＴシステム３００は、ゲームアプリケーション開発者に、完全にリアルタイムかつインタラクティブな訓練体験を提供する。ゲームアプリケーション開発者は、ゲームアプリケーションの１つ以上の出力状態の各々をクライアントコンピューティングデバイス上で実行されているアクターコンポーネントの入力変数に対応付けたコントロール情報を定義および提供できるようになっているが、ＡＩを訓練するためには、ゲームアプリケーション開発者は、単純にゲームコントローラを手に取ってゲームをプレイすることによってＡＩを訓練すればよい。ゲームを数ラウンドプレイした後、ゲームアプリケーション開発者は、コントローラを置いてＡＩがゲームをプレイするのを見ていてもよい。ＡＩが問題のある状態に遭遇した場合、ゲームアプリケーション開発者は、単純にコントローラを手に取って、正しい挙動をデモンストレーションし、その後、ＡＩに再び操作させる。その結果、体験に大きく基づいた、制御可能なサービスが得られる。
Thus, as described above, the
ＧＴ学習サービス３６０がゲームプレイデータモデルを生成するために、ＧＴアクターコンポーネント３０５は、ＧＴ学習サービスにローカル観測データ３０４（ゲームプレイの観測、アクション、および報酬を含む）を定期的に送信する。人間のゲームプレイのデモンストレーションから（人間のプレーヤー２５０を介するなどして）学習する際、この観測データは、人間がゲームをプレイ中にとるアクションから導出される。特定の実施形態では、この体験データは、ゲーム開発会社の従業員によって生成されてもよく、利用者プレーヤーによって生成されてもよく、またはそれらの組合せによって生成されてもよい。
In order for
観測データの新しいバッチを受信した後、ＧＴ ＡＰＩ３９９は、新しい課題３４４を生成する。課題３４４の各々は、新しいゲームプレイデータモデルを生成する要求を表す。課題は、課題キュー３４６を経由してＧＴ学習サービス３６０に提供される。ＧＴ学習サービス３６０は、課題に含まれているゲームプレイのアクションと、観測データと、報酬と、特定のパラメータとを組み合わせて、ＭＬＰ３３２が理解できるフォーマットに変換し、新しいゲームプレイデータモデルを生成／評価するために必要な論理を含む。このようなゲームプレイデータモデルは、使い捨てできるように設計されており、特定の実施形態では、ゲームプレイデータモデルの状態を再開可能なＭＬチェックポイントとして表現してもよい。
After receiving a new batch of observation data,
ＧＴ学習サービス３６０が課題に対する作業を完了すると、それに応じて生成されたゲームプレイデータモデルがゲームプレイデータモデル３３４の一部として格納される。その後、ＧＴ学習サービス３６０は、更新後のゲームプレイデータモデルを、クライアントコンピューティングシステム３１０内のオンデバイス推論に使用するためにＧＴアクターコンポーネント３０５に提供する。
Once the
少なくともいくつかの実施の形態では、開発者のゲームとのリアルタイムなインタラクションをサポートするなどのために、ＧＴアクターコンポーネント３０５は、推論をミリ秒程度で実行できる。サーバー側では、ＧＴ学習サービス３６０が、特定の実施形態において、追加の観測データを新しいゲームプレイデータモデルに数十秒程度の期間（３０秒未満などで）で変換してもよい。
In at least some embodiments,
本明細書において示す個々の構成要素およびモジュールは、構成要素レベルの構造および特定のデータフロー動作を説明する便宜上の例として提供しているが、様々な実施の形態において、特定のコンポーネントおよびモジュールをその他の配置にすることによっても本明細書において提示した技術を実現できることが分かるであろう。 Although the individual components and modules depicted herein are provided as convenient examples to illustrate component-level structure and specific data flow operations, in various embodiments It will be appreciated that other arrangements may also be used to implement the techniques presented herein.
図４は、ＧＴ学習サーバー４０１における動作およびクライアントコンピューティングシステム４０２における動作の両方を含む、ＧＴシステムの動作ルーチン４００の概要を説明するブロックフロー図である。クライアントコンピューティングシステム４０２は、１つ以上の実施の形態に従ってゲームアプリケーションおよびＧＴアクターコンポーネント（図１および図２のＧＴアクターコンポーネント１０５または図３のＧＴアクターコンポーネント３０５など）を実行している。
FIG. 4 is a block flow diagram outlining an
ルーチンは、ブロック４０５から開始する。ブロック４０５では、ＧＴ学習サーバー４０１がクライアントコンピューティングシステム４０２にゲームプレイデータモデル４１０を提供する。クライアントコンピューティングシステム４０２は、ブロック４１５において、ＧＴ ＡＰＩ４９９を経由してゲームプレイデータモデルを受信する。本明細書においてさらに詳細を説明しているが、特定の実施形態では、ＧＴ学習サーバー４０１が最初に提供したゲームプレイデータモデル４１０は、そのゲームアプリケーションに関して定義された１つ以上のパラメータに基づき得、ゲーム観測パラメータと、ゲームアクションパラメータ（コントロール情報など）と、ゲーム報酬パラメータとの組合せを含み得る。これに加えて、最初のゲームプレイデータモデル４１０（および後続のゲームプレイデータモデル）は、１人以上の人間のプレーヤーから生成された観測データに少なくとも一部基づき得る。
The routine begins at
ブロック４１５でゲームプレイデータモデル４１０が受信された後、ルーチンは、ブロック４２０に進む。ブロック４２０では、クライアントコンピューティングシステム４０２が、ゲームプレイデータモデルを用いたゲームプレイに関する観測データを生成する。ブロック４２５では、クライアントコンピューティングシステム４０２は、ＡＰＩ４９９を介してＧＴ学習サーバー４０１に生成した観測データ４３０を提供する。
After the
特定の実施形態では、観測データおよびゲームプレイアクションは、１つ以上の基準に応答してＧＴ学習サービス３６０に提供されるまで、クライアントコンピューティングシステム４０２上に集約されてもよい（ＧＴアクターコンポーネント、たとえば、図３のＧＴアクターコンポーネント３０５によってなど）。たとえば、図３を参照すると、ローカル観測データ３０４（ゲームプレイアクション情報を含む）の提供は、明確なリクエストに応じて、所定期間の後、所定量の観測データが生成された後などに開始されてもよい。
In certain embodiments, observation data and gameplay actions may be aggregated on client computing system 402 (GT actor component, For example, by the
ブロック４３５では、ＧＴ学習サーバー４０１は、ゲームプレイデータモデル４１０を用いてクライアントコンピューティングシステム４０２が生成した観測データを受信し、ルーチンは、ブロック４４０に進む。ブロック４４０では、ＧＴ学習サーバー４１０は、新しく受信した観測データ４３０に基づいて、ゲームプレイデータモデル４１０を修正する。
At
ブロック４４５では、ＧＴ学習サーバー４０１は、ＡＰＩ４９９を介してクライアントコンピューティングシステム４０２に修正後のゲームプレイデータモデル４５０を提供する。ブロック４５５では、クライアントコンピューティングシステム４０２は、修正後のゲームプレイデータモデル４５０を受信し、修正後のゲームプレイデータモデルを用いたゲームプレイアクションに基づいて追加の観測データを収集および生成するために、ブロック４２０に戻る。同様に、ブロック４４５において修正後のゲームプレイデータモデル４５０を提供した後、ＧＴ学習サーバー４０１は、ブロック４３５に戻り、クライアントコンピューティングシステム４０２から更新後の観測データを受信する。
At
いくつかの実施形態において、上述した技術のいくつかの態様は、ソフトウェアを実行する処理システムの１つ以上のプロセッサによって実装されてもよい。ソフトウェアは、非一時的なコンピュータ読取可能な記憶媒体に格納される、そうでない場合、有形に含まれる実行可能な命令の１つ以上のセットを含む。ソフトウェアは、１つ以上のプロセッサによって実行されると、１つ以上のプロセッサに上述した技術の１つ以上の態様を実行させるこれらの命令および特定のデータを含み得る。非一時的なコンピュータ読取可能な記憶媒体は、たとえば、磁気または光ディスク記憶装置、フラッシュメモリ、キャッシュ、ＲＡＭ（Ｒａｎｄｏｍ Ａｃｃｅｓｓ Ｍｅｍｏｒｙ）、またはその他の１つまたは複数の非一時的なメモリ素子など、固体記憶装置を含み得る。非一時的なコンピュータ読取可能な記憶媒体に格納された実行可能な命令は、ソースコード、アセンブリ言語コード、オブジェクトコード、または１つ以上のプロセッサによって解釈されるまたは実行可能なその他の命令形式で格納されてもよい。 In some embodiments, some aspects of the techniques described above may be implemented by one or more processors of a processing system executing software. Software includes one or more sets of executable instructions, otherwise tangibly contained, stored on a non-transitory computer-readable storage medium. The software may include those instructions and certain data that, when executed by one or more processors, cause the one or more processors to perform one or more aspects of the techniques described above. The non-transitory computer-readable storage medium may be, for example, solid-state storage, such as magnetic or optical disk storage, flash memory, cache, random access memory (RAM), or one or more other non-transitory memory elements. may include a device. Executable instructions stored on a non-transitory computer-readable storage medium may be in the form of source code, assembly language code, object code, or any other form of instructions that can be interpreted or executed by one or more processors. may be done.
コンピュータ読み取り可能な記憶媒体は、使用中、命令および／もしくはデータをコンピュータシステムに提供するためにコンピュータシステムによってアクセス可能な任意の１つの記憶媒体または複数の記憶媒体の組合せを含んでもよい。このような記憶媒体は、光学媒体（たとえば、ＣＤ（Ｃｏｍｐａｃｔ Ｄｉｓｃ）、ＤＶＤ（デジタル多用途ディスク）、Ｂｌｕ－Ｒａｙディスク）、磁気媒体（たとえば、フロッピー（登録商標）ディスク、磁気テープ、または磁気ハードドライブ）、揮発性メモリ（たとえば、ＲＡＭ（Ｒａｎｄｏｍ Ａｃｃｅｓｓ Ｍｅｍｏｒｙ）またはキャッシュ）、不揮発性メモリ（たとえば、ＲＯＭ（Ｒｅａｄ－Ｏｎｌｙ Ｍｅｍｏｒｙ）またはフラッシュメモリ）、またはＭＥＭＳ（Ｍｉｃｒｏｅｌｅｃｔｒｏｍｅｃｈａｎｉｃａｌ Ｓｙｓｔｅｍ）ベースの記憶媒体を含み得るが、これらに限定されない。コンピュータ読み取り可能な記憶媒体は、コンピューティングシステムに埋め込まれてもよく（たとえば、システムＲＡＭまたはＲＯＭ）、コンピューティングシステムに固定して取り付けられてもよく（たとえば、磁気ハードドライブ）、コンピューティングシステムに取り外し可能に取り付けられてもよく（たとえば、光ディスクまたはＵＳＢ（Ｕｎｉｖｅｒｓａｌ Ｓｅｒｉａｌ Ｂｕｓ）ベースのフラッシュメモリ）、有線またはワイヤレスネットワークを介してコンピュータシステムに連結されてもよい（たとえば、ＮＡＳ（Ｎｅｔｗｏｒｋ Ａｃｃｅｓｓｉｂｌｅ Ｓｔｏｒａｇｅ））。 A computer-readable storage medium may include any storage medium or combination of storage media that can be accessed by a computer system to provide instructions and/or data to the computer system during use. Such storage media may include optical media (e.g., compact discs (CDs), digital versatile discs (DVDs), Blu-Ray discs), magnetic media (e.g., floppy disks, magnetic tapes, or magnetic hard disks). drive), volatile memory (e.g., random access memory (RAM) or cache), non-volatile memory (e.g., read-only memory (ROM) or flash memory), or microelectromechanical system (MEMS)-based storage media. However, it is not limited to these. A computer-readable storage medium may be embedded in the computing system (e.g., system RAM or ROM), fixedly attached to the computing system (e.g., a magnetic hard drive), or attached to the computing system. It may be removably attached (e.g., an optical disk or Universal Serial Bus (USB)-based flash memory) and coupled to a computer system via a wired or wireless network (e.g., Network Accessible Storage (NAS)). .
なお、全体的な説明において上述した動作または要素のすべてが必要であるわけではない。特定の動作または装置の一部を必要としなくてもよい。説明した動作や要素に加えて、１つ以上の追加の動作が実行されてもよく、１つ以上の追加の構成要素が含まれてもよい。さらに、動作が挙げられている順番は、必ずしもそれらが実行される順番ではない。また、具体的な実施の形態を例に概念を説明した。しかしながら、当業者であれば、添付のクレームに記載の本開示の範囲から逸脱することなく、様々な変形および変更を行うことが可能であることが分かる。したがって、明細書および図面は、厳密ではなく、例示であるとみなされるべきであり、すべてのこのような変形は、本開示の範囲に含まれるものとする。 It should be noted that not all acts or elements described above may be required in the overall description. No particular act or piece of equipment may be required. In addition to the described acts and elements, one or more additional acts may be performed and one or more additional components may be included. Furthermore, the order in which acts are listed is not necessarily the order in which they are performed. Further, the concept has been explained using a specific embodiment as an example. However, one of ordinary skill in the art appreciates that various modifications and changes can be made without departing from the scope of the disclosure as set forth in the appended claims. Accordingly, the specification and drawings are to be regarded in an illustrative rather than a strict sense, and all such variations are intended to be included within the scope of this disclosure.
メリット、その他の利点、および問題の解決策を、具体的な実施の形態を例に説明した。しかしながら、メリット、利点、問題の解決策、およびメリット、利点、もしくは解決策を生じさせ得るまたはより顕著にさせ得るいかなる特徴（複数可）も、いずれかのクレームまたはすべてのクレームの重大な特徴、必要な特徴、または必須の特徴として解釈されないものとする。また、本明細書における教示のメリットを有する当業者にとって明らかである差異はあるが同等の方法で、開示した発明の主題を変更および実施してもよいため、本明細書に開示した特定の実施の形態は、例示に過ぎない。添付のクレームに記載されている以外の、本明細書において示されている構造または設計の詳細は、限定されない。そのため、本明細書に開示した特定の実施の形態を変更したり、改良したりしてもよく、このような変形例のすべては、開示した発明の主題の範囲に含まれるとみなされることは明らかである。したがって、本明細書において要求する保護は、添付のクレームに記載する通りである。 Advantages, other advantages, and solutions to problems have been described using specific embodiments as examples. However, any benefit, advantage, solution to the problem, and any feature(s) that may give rise to or make the benefit, advantage, or solution more prominent are material features of any or all claims. shall not be construed as required or required features. It is also intended that the specific implementations disclosed herein may be modified and carried out in equivalent ways with differences that will be apparent to those skilled in the art having the benefit of the teachings herein. The form is merely an example. There are no limitations to details of construction or design herein shown, other than as described in the appended claims. Therefore, it is understood that the particular embodiments disclosed herein may be modified or improved, and that all such variations are not considered to be within the scope of the disclosed subject matter. it is obvious. Accordingly, the protection claimed herein is as set forth in the appended claims.
図１は、ネットワーク化されたゲーム訓練システム１００の例示的な実施の形態を示す。ネットワーク化されたゲーム訓練システムは、ローカルコンピューティングシステム１１０上で実行されているＧＴアクターコンポーネント１０５のインスタンスを含む。ローカルコンピューティングシステム１１０は、ＧＴアクターコンポーネントからゲームプレイアクション１２８を受信するゲームアプリケーション１１５も実行している。ＧＴアクターコンポーネント１０５は、インターネットまたはその他の介在ネットワークなど、１つ以上のコンピュータネットワーク１０１を経由して、１つ以上のリモートサーバー１２５上で実行されているＧＴ学習サービス１２０に通信可能に連結される。図示した実施の形態では、ＧＴアクターコンポーネント１０５は、人工ゲームプレイアクション１２８を生成してゲームアプリケーション１１５に提供し、ゲームアプリケーションから観測データおよびゲーム内報酬インジケーター１１２を受信し、この情報の一部またはすべてを観測体験データ１３０としてＧＴ学習サービス１２０に提供する。そして、ＧＴ学習サービス１２０は、受信した観測体験データ１３０を用いて、ＧＴアクターコンポーネントがゲームアプリケーションに提供する全体のゲームプレイおよび個々の人工ゲームプレイアクションの両方を改善するための、ゲームアプリケーション１１５に関連する１つ以上のゲームプレイモデル１３５を生成、改良、および／またはＧＴアクターコンポーネント１０５に提供する。
FIG. 1 depicts an exemplary embodiment of a networked
Claims (27)
プログラマティックインタフェースを介して１つ以上のサーバーコンピューティングシステムからリモートクライアントコンピューティングデバイスに、前記リモートクライアントコンピューティングデバイス上で実行されているゲームアプリケーションのゲームプレイデータモデルを提供することと、
提供された前記ゲームプレイデータモデルを用いて前記リモートクライアントコンピューティングデバイス上で実行されているアクターコンポーネントが生成した推論に少なくとも一部基づいて、前記ゲームアプリケーション内で前記アクターコンポーネントが実行した人工ゲームプレイアクションから生成された観測データを、前記プログラマティックインタフェースを介して前記リモートクライアントコンピューティングデバイスから受信することと、
前記１つ以上のサーバーコンピューティングシステムが、受信した前記観測データに基づいて前記ゲームプレイデータモデルを修正することと、
前記プログラマティックインタフェースを介して前記リモートクライアントコンピューティングデバイスに修正後の前記ゲームプレイデータモデルを提供することとを含む、方法。 A server method, comprising:
providing a gameplay data model of a game application running on the remote client computing device from one or more server computing systems to a remote client computing device via a programmatic interface;
artificial gameplay performed by the actor component within the gaming application based at least in part on inferences generated by the actor component running on the remote client computing device using the provided gameplay data model; receiving observation data generated from an action from the remote client computing device via the programmatic interface;
the one or more server computing systems modifying the gameplay data model based on the received observational data;
providing the modified gameplay data model to the remote client computing device via the programmatic interface.
ネットワークインタフェースと、
１つ以上のプロセッサと、
実行可能な命令のセットを格納したメモリとを備え、前記実行可能な命令のセットは、前記１つ以上のプロセッサを操作して、
入力変数にゲームアプリケーションの１つ以上の出力状態の各々を対応付けたコントロール情報に少なくとも一部基づいて、前記ゲームアプリケーションのゲームプレイデータモデルを生成させ、
生成した前記ゲームプレイデータモデルをリモートクライアントコンピューティングデバイス上で実行されているアクターコンポーネントにプログラマティックインタフェースを介して提供させ、
生成した前記ゲームプレイデータモデルを用いて前記アクターコンポーネントが生成した推論に基づいて、前記ゲームアプリケーション内で前記アクターコンポーネントが実行した人工ゲームプレイアクションから生成された観測データを、前記プログラマティックインタフェースを介して前記アクターコンポーネントから受信させ、
受信した前記観測データに基づいて、生成した前記ゲームプレイデータモデルを修正させ、
前記ゲームアプリケーション内で追加の人工ゲームプレイアクションを実行する際に前記アクターコンポーネントが使用するために、前記プログラマティックインタフェースを介して前記アクターコンポーネントに修正後の前記ゲームプレイデータモデルを提供させる、サーバー。 A server,
network interface;
one or more processors;
a memory storing a set of executable instructions, the set of executable instructions operating the one or more processors to:
generating a gameplay data model for the gaming application based at least in part on control information that associates input variables with each of one or more output states of the gaming application;
providing the generated gameplay data model to an actor component running on a remote client computing device via a programmatic interface;
Observational data generated from artificial gameplay actions performed by the actor component within the game application based on inferences generated by the actor component using the generated gameplay data model, via the programmatic interface. from the actor component;
modifying the generated gameplay data model based on the received observation data;
A server that causes the actor component to provide the modified gameplay data model via the programmatic interface for use by the actor component in performing additional artificial gameplay actions within the game application.
前記１つ以上のプロセッサが、前記ゲームアプリケーションのインスタンスを実行することと、
前記ゲームプレイデータモデルを用いて前記アクターコンポーネントが生成した推論に少なくとも一部基づいて、前記ゲームアプリケーションの前記実行インスタンス内で前記アクターコンポーネントが実行した人工ゲームプレイアクションから生成された観測データを、前記プログラマティックインタフェースを介して前記機械学習コンポーネントに提供することと、
提供した前記観測データに少なくとも一部基づいた修正後のゲームプレイデータモデルを、前記１つ以上のリモートサーバーコンピューティングシステム上で実行されている前記機械学習コンポーネントから前記プログラマティックインタフェースを介して受信することとを含む、方法。 an actor component executing on the one or more processors receiving, via a programmatic interface, a gameplay data model of the game application from a machine learning component executing on the one or more remote server computing systems; ,
the one or more processors executing an instance of the gaming application;
the observed data generated from artificial gameplay actions performed by the actor component within the execution instance of the gaming application based at least in part on inferences generated by the actor component using the gameplay data model; providing the machine learning component via a programmatic interface;
receiving, via the programmatic interface, a modified gameplay data model based at least in part on the provided observed data from the machine learning component running on the one or more remote server computing systems; method, including.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US202163193244P | 2021-05-26 | 2021-05-26 | |
US63/193,244 | 2021-05-26 | ||
PCT/US2022/024192 WO2023043493A1 (en) | 2021-05-26 | 2022-04-11 | Efficient gameplay training for artificial intelligence |
Publications (1)
Publication Number | Publication Date |
---|---|
JP2024505320A true JP2024505320A (en) | 2024-02-06 |
Family
ID=85603396
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2023520250A Pending JP2024505320A (en) | 2021-05-26 | 2022-04-11 | Efficient gameplay training for artificial intelligence |
Country Status (4)
Country | Link |
---|---|
JP (1) | JP2024505320A (en) |
KR (1) | KR20230054896A (en) |
CN (1) | CN116322916A (en) |
WO (1) | WO2023043493A1 (en) |
Family Cites Families (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10195531B2 (en) * | 2016-06-30 | 2019-02-05 | Sony Interactive Entertainment Inc. | Automated artificial intelligence (AI) personal assistant |
US10888788B2 (en) * | 2016-06-30 | 2021-01-12 | Sony Interactive Entertainment Inc. | Automated artificial intelligence (AI) control mode for playing specific tasks during gaming applications |
US10773168B2 (en) * | 2018-04-02 | 2020-09-15 | Google Llc | Temporary game control by user simulation following loss of active control |
US10576380B1 (en) * | 2018-11-05 | 2020-03-03 | Sony Interactive Entertainment LLC | Artificial intelligence (AI) model training using cloud gaming network |
US11376500B2 (en) * | 2019-02-27 | 2022-07-05 | Nvidia Corporation | Gamer training using neural networks |
US11065549B2 (en) * | 2019-03-15 | 2021-07-20 | Sony Interactive Entertainment Inc. | AI modeling for video game coaching and matchmaking |
US10940393B2 (en) * | 2019-07-02 | 2021-03-09 | Electronic Arts Inc. | Customized models for imitating player gameplay in a video game |
US20210086089A1 (en) * | 2019-09-25 | 2021-03-25 | Nvidia Corporation | Player analysis using one or more neural networks |
-
2022
- 2022-04-11 JP JP2023520250A patent/JP2024505320A/en active Pending
- 2022-04-11 WO PCT/US2022/024192 patent/WO2023043493A1/en active Application Filing
- 2022-04-11 KR KR1020237010854A patent/KR20230054896A/en unknown
- 2022-04-11 CN CN202280006847.3A patent/CN116322916A/en active Pending
Also Published As
Publication number | Publication date |
---|---|
WO2023043493A1 (en) | 2023-03-23 |
CN116322916A (en) | 2023-06-23 |
KR20230054896A (en) | 2023-04-25 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
JP7399932B2 (en) | Training artificial intelligence (AI) models using cloud gaming networks | |
JP6919047B2 (en) | Automatic Artificial Intelligence (AI) Personal Assistant | |
JP7140818B2 (en) | Control mode for playing specific tasks during gaming applications | |
US10213690B2 (en) | Determining real-world effects from games | |
Borovikov et al. | Winning isn’t everything: Training agents to playtest modern games | |
WO2019144346A1 (en) | Object processing method in virtual scene, device and storage medium | |
KR20210013529A (en) | System for managing user experience and method therefor | |
Karpov et al. | Human-assisted neuroevolution through shaping, advice and examples | |
CN116943220A (en) | Game artificial intelligence control method, device, equipment and storage medium | |
JP2024505320A (en) | Efficient gameplay training for artificial intelligence | |
Kanervisto | Advances in deep learning for playing video games | |
NAJIM | Motion Matching with Proximal Optimization Policy | |
Ahlberg | Playstyle Generation with Multimodal Generative Adversarial Imitation Learning: Style-reward from Human Demonstration for Playtesting Agents | |
Abdelfattah | Intrinsically motivated multi-objective reinforcement learning | |
RODRIGUES | 3D SENSING CHARACTER SIMULATION USING GAME ENGINE PHYSICS | |
Bouteiller | Deep Reinforcement Learning in Real-Time Environments | |
Dean | From Reinforcement Learning to Robot Learning: Leveraging Prior Data and Shared Evaluation | |
CN118045360A (en) | Training method, prediction method and corresponding system for intelligent chess bodies | |
Andradi et al. | Human behaviour modelling in games using agents | |
Xiqi | Game Ai Evolution: Uniting Unity and Machine Learning for Enhanced Player Interaction and Experience | |
Hester et al. | Discussion and Conclusion | |
Lewis et al. | Using gaming technologies and platforms to experiment with fusion algorithms for situation management |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
A521 | Request for written amendment filed |
Free format text: JAPANESE INTERMEDIATE CODE: A523Effective date: 20230720 |
|
A621 | Written request for application examination |
Free format text: JAPANESE INTERMEDIATE CODE: A621Effective date: 20230720 |
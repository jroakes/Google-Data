US8160372B1 - Optimized backward reference selection with reduced entropy for image compression - Google Patents
Optimized backward reference selection with reduced entropy for image compression Download PDFInfo
- Publication number
- US8160372B1 US8160372B1 US12/014,964 US1496408A US8160372B1 US 8160372 B1 US8160372 B1 US 8160372B1 US 1496408 A US1496408 A US 1496408A US 8160372 B1 US8160372 B1 US 8160372B1
- Authority
- US
- United States
- Prior art keywords
- data
- backward reference
- backward
- size
- selection module
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/90—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using coding techniques not provided for in groups H04N19/10-H04N19/85, e.g. fractals
- H04N19/94—Vector quantisation
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/186—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being a colour or a chrominance component
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/593—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving spatial prediction techniques
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/90—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using coding techniques not provided for in groups H04N19/10-H04N19/85, e.g. fractals
- H04N19/91—Entropy coding, e.g. variable length coding [VLC] or arithmetic coding
Definitions
- the present invention relates generally to lossless data compression, and more particularly to optimizing backward reference selection to improve compression ratio in digital image systems.
- a typical Deflate compression method consists of two compression phases: backward reference selection followed by Huffman coding.
- the backward reference selection phase deploys a backward reference selection algorithm, such as LZ77 algorithm, for building a list of commonly occurring patterns in the source input data.
- the Huffman coding phase contains two Huffman tables for entropy encoding source input data and backward references.
- LZ77 algorithm the list of commonly occurring patterns is simply a portion of previously encoded sequence of source input data.
- a LZ77 encoder moves a search pointer backward through the previously encoded sequence of input data searching for a match to the first data element of the input data stream.
- the LZ77 encoder achieves compression by continuously moving a search pointer backward through the previously encoded sequence of input data to find a longest match. Once the longest match is found, the encoder encodes it with a tuple (d, l), where d is the backward reference distance from the search pointer to the data element in the input stream following the match, and l is the length of the match.
- a system and method selects a backward reference for each block of uncompressed data elements so as to result in reduced entropy of the backward reference.
- An optimized backward references selection module may be configured to select backward references for which the backward reference distances are an integer multiple of the size of the data element.
- the optimized backward references selection module may be additionally or alternatively configured to select the backward references for which the backward reference lengths are an integer multiple of the size of data element.
- the optimized backward references selection module may be additionally or alternatively configured to select the backward references based upon the intrinsic locality of the source data stream.
- FIG. 1 is a block diagram illustrating a system having an optimized backward reference selection module according to one embodiment.
- FIG. 2 is a block diagram illustrating an optimized backward reference selection module working with a reference buffer according to one embodiment.
- FIG. 3 is a flowchart showing a method of using an optimized backward reference selection module according to one embodiment.
- FIG. 4A is an illustration of an image data stream with a plurality of image signals in a two-dimensional space processed by an optimized backward reference selection module according to one embodiment.
- FIG. 4B illustrates the same image data stream depicted in FIG. 4A in one-dimensional space.
- FIG. 1 is a block diagram illustrating a system 100 having an optimized backward reference selection module 120 according to one embodiment.
- the system 100 comprises an optimized backward reference selection module 120 and an entropy encoder 130 .
- the system 100 also comprises a data stream 110 and a compressed data stream 140 .
- the system 100 stores the data stream 110 in an input stream buffer and the compressed data stream 140 in an output stream buffer.
- the optimized backward reference selection module 120 reads the data stream 110 from the input stream buffer, selects an optimized backward reference for a plurality of data elements of the input stream 110 and sends the backward reference information to the entropy encoder 130 for further processing.
- the entropy encoder 130 entropy encodes the backward references and the input stream into a compressed data stream 140 . This compressed data can then be stored on a computer readable medium, or transmitted over a computer network.
- the data stream 110 comprises blocks of raw image data elements in an uncompressed format.
- Each data element has one or more data components, and each data component has a known size.
- the size of a data element is therefore the size of each data component multiplied by the number of the data components of the data element.
- a truecolor multi-component signal such as a truecolor PNG image signal
- each signal is represented by a data element with three data components representing red, green, and blue color.
- the size of a PNG truecolor data element is thus 3 bytes.
- the optimized backward reference selection module 120 finds a backward reference for a plurality of uncompressed data elements being processed according to an optimized backward reference selection algorithm.
- the optimized backward reference selection module 120 also comprises a reference buffer, for example of kilobytes (kB).
- the reference buffer stores blocks of most recently processed data elements by the optimized backward reference selection module 120 .
- Each backward reference, i.e., match, found by the optimized backward reference module 120 is represented by a tuple (d, l), where d is the backward reference distance, and l is the length of the reference.
- the optimized backward reference selection algorithm selects the backward references in a way that leads to a lesser entropy of the generated backward references fed to the entropy encoding module 130 .
- the entropy encoder 130 receives the backward reference information for each block of data elements processed by the optimized backward reference selection module 120 , and builds variable length code tables for encoding data elements of the input stream 110 .
- a typical entropy encoder 130 may be implemented by Huffman coding.
- the entropy encoder 130 preferably contains two Huffman code tables, one for encoding data element symbols, i.e., literals, and backward reference lengths and/or backward reference length prefixes, and the other code table for encoding backward reference distances and/or backward reference distance prefixes.
- Huffman coding is used only by way of example and that a variety of other entropy encoding schemes may be used.
- FIG. 2 is a block diagram illustrating an optimized backward reference selection module 120 working with a reference buffer 200 according to one embodiment.
- the reference buffer 200 in the embodiment illustrated in FIG. 2 , includes two parts, a reference search buffer 230 that contains a portion of the recently processed sequence of data elements, and a look-ahead buffer 220 that contains a portion of the sequence of data elements to be encoded.
- the reference search buffer 230 in FIG. 2 stores four truecolor multi-component data elements, such as the truecolor PNG image signal represented by red (i.e., R), green (i.e., G), and blue (i.e., B) color components, each of which is three bytes in length.
- Each data element is bounded by a pair of byte boundaries (the thick vertical lines in FIG. 2 ), e.g., 204 a and 204 b .
- Each data component is bounded by its corresponding component boundaries, e.g., component G bounded by 206 a and 206 b .
- the circled component G 202 indicates the current data component being processed.
- the optimized backward reference selection module 120 is configured to increases the density of the backward references by selecting only from backward references aligned by the data element size in bytes. More precisely, for a multi-byte data element with a data element size of C comp , the selection module 120 selects backward reference distances D br at a position I where D br and I are integer multiples of C comp .
- the modulo function is used to implement the integer multiple of C comp requirement. In another embodiment, only I being integer multiples of C comp is required to reduce the number of backward references to be computed.
- a data component i.e., G 202
- a truecolor, multi-component (R, G, B) PNG image is to be processed.
- C comp is 3 bytes.
- the selection module 120 evaluates backward references at 3 bytes away from G 202 , then at 6, 9 and 12, bytes away and so on until a match is made.
- the four arrows 208 a - 208 d originated from G 202 represents the above offsets that are checked.
- the backward reference selection is aligned by the size of C comp .
- the backward reference selection module 120 need not check for rarely occurring backward references between the data components, e.g. a red component value being identical to a blue component value—and this makes the next entropy encoding phase faster and more efficient.
- a matching byte sequence is located at the appropriate offset it is encoded as described above.
- the optimized backward reference selection module 120 may be configured to reduce the entropy of the backward reference length data by quantizing backward reference length to integer multiples of the data element size. More specifically, for a multi-byte data element with a data element size of C comp , the selection module 120 is configured to evaluate sequences that have a backward reference length L br , where L br is an integer multiple of C comp . Since backward reference lengths are encoded together with data literals in the same entropy encoding, having less variety, i.e. smaller information entropy, in the backward reference lengths not only simplifies the backward reference computation, but more importantly, also helps in reducing the entropy of the generated backward references.
- the selection module 120 first evaluates at a backward reference at 3 bytes away from G 202 , represented by arrow 208 a .
- the selection module continuously moves its search pointer backward from G component indicated by arrow 208 a through the reference search buffer 230 searching for a longer match for elements after G 202 , i.e., B, R, etc.
- the selection module 120 records the current longest match.
- the selection module 120 searches for another match at next 6 bytes away for G 202 and a sequence of elements following G 202 in the look-ahead buffer 220 .
- the selection module 120 repeats the above steps at 9 and 12 bytes away from G 202 .
- the selection module 120 checks whether the length of the longest match is an integer multiple of C comp , i.e. 3 bytes. In one embodiment, in response to the length of the longest match not being an integer multiple of C comp , the selection module 120 may select the next longest match as the backward reference whose length meets the integer multiple requirement.
- FIG. 3 is a flowchart showing a method of using an optimized backward reference selection module 120 according to one embodiment.
- Other embodiments perform different and/or additional steps than the ones described here. Moreover, other embodiments perform the steps in different order than that described below.
- the optimized backward reference selection module 120 fills 302 the reference search buffer 230 with the previously processed data elements and look-ahead buffer 220 with a sequence of data elements to be processed.
- the selection module 120 searches 304 for a match for the data element to be processed in the reference search buffer 230 .
- Each new search is conducted at the discrete component boundaries, e.g., 3 bytes away, then 6, 9, 12 bytes way, etc.
- the selection module 120 continuously searches 306 for a longest match starting from the first element of the match. The length of the longest match is further discretized by the data element size.
- the selection module 120 outputs 316 the component bytes to the entropy module 130 indicating no favorable backward reference having been found.
- the selection module 120 shifts 318 the look-ahead buffer 220 along the component boundary to process next data element.
- the minimum length threshold is a design-specific parameter, which can be chosen based on a plurality of factors, such as image content. By checking the length of a match against a threshold value, the selection module 120 is able to avoid unnecessarily encoding short backward references. If the length of the match selected is larger than the minimum length threshold, the selection module 120 outputs the backward reference for the entropy encoder 130 to encode 310 the backward reference. The selection module 120 also shifts 312 the reference search buffer 230 along the component boundaries for conducting next search. The search ends when the end of data stream has been reached 314 . Otherwise, the selection module 120 begins a new search at step 304 .
- optimized backward reference selection module 120 may be configured to select the backward references from a previous row of data because common features in image signals are repeated more locally, given the spatial arrangement of the image data, than far away. This inherent locality of the image signal is often called proximity.
- Conventional backward reference selection algorithm only selects the backward reference distances that are close, according to the number of bytes, i.e. smaller ⁇ (x, y).
- the optimized backward reference selection module 120 favors the backward references that are S x C comp bytes away, which allows for selection of reference that are spatially closer in the image, even if numerically further away in the data stream itself. For example, for a 256 ⁇ 256 data-component-wide truecolor image, the selection module 120 may be configured to select data components from the previous row of data components, which is 768 bytes away from the current data component (256 components per row, 3 bytes per component), instead of data that describe pixels further away on the same row, but closer in the data stream representation of the image. Consequently, favoring the inherent spatial locality of the image signals leads to smaller entropy codes, thus a better overall compression ratio.
- FIG. 4A is an image data stream with a plurality of image signals in a two-dimensional space processed by an optimized backward reference selection module 120 according to one embodiment.
- the stream includes five rows of image signals, rows 408 a - 408 e .
- Each square in FIG. 4A stores a data component of the data stream.
- row 408 d is the current row of data elements being processed.
- the optimized backward reference selection module 120 selects the data component 404 in the immediately previous row due to the inherent locality described above.
- FIG. 4B illustrates the same image data stream depicted in FIG. 4A in one-dimensional space.
- the thick vertical lines 406 mark the row boundaries.
- the optimized backward reference selection module 120 selects the data component 404 located at immediately previous row.
- the optimized backward reference selection module 120 uses a cost function that evaluates the cost of a match found in terms of the length and distance of the match.
- the backward reference of a match with the lowest cost is selected as the backward reference.
- the function of backward distance is a cost look-up table indexed by the backward distance.
- the function of the backward distance is a computation on the backward distance resulting in a cost for the backward distance.
- This cost function allows for an arbitrary function to be used for manipulating cost as a function of the backward reference distance.
- the cost function ensures that longer matches are always selected over shorter matches, and the matches with lengths being an integer multiple of the data element size are always selected over the matches, the lengths of which are not an integer multiple by the data element size.
- the next longest match is chosen to calculate the cost by the cost function (2) above.
Abstract
Description
ƒ(x,y)=x+yS x, (1)
where (x, y) is the coordinates of the image signal in two-dimensional space; ƒ(x, y) is the position of the image signal (x, y) in one-dimensional compressed stream, and ƒ(x, y) is a function with (x, y) as input, and Sx is the size reserved for one row of image signals in two-dimensional space. Conventional backward reference selection algorithm only selects the backward reference distances that are close, according to the number of bytes, i.e. smaller ƒ(x, y). The optimized backward
cost(match[i])=cost_lookup[backward_distance]−[match_length*65,536] (2)
where cost(match[i]) is the cost of the ith match, match[i]; match_length is the length of the match[i]; cost_lookup[backward_distance] is a function of backward distance to generate a cost of the backward distance. In one embodiment, the function of backward distance is a cost look-up table indexed by the backward distance. In other embodiments, the function of the backward distance is a computation on the backward distance resulting in a cost for the backward distance.
Claims (24)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/014,964 US8160372B1 (en) | 2008-01-16 | 2008-01-16 | Optimized backward reference selection with reduced entropy for image compression |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/014,964 US8160372B1 (en) | 2008-01-16 | 2008-01-16 | Optimized backward reference selection with reduced entropy for image compression |
Publications (1)
Publication Number | Publication Date |
---|---|
US8160372B1 true US8160372B1 (en) | 2012-04-17 |
Family
ID=45931442
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/014,964 Active 2030-10-19 US8160372B1 (en) | 2008-01-16 | 2008-01-16 | Optimized backward reference selection with reduced entropy for image compression |
Country Status (1)
Country | Link |
---|---|
US (1) | US8160372B1 (en) |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20100293344A1 (en) * | 2009-05-13 | 2010-11-18 | International Business Machines Corporation | Apparatus and method for selecting a position where data is stored |
US9245352B1 (en) | 2013-04-12 | 2016-01-26 | Google Inc. | Systems and methods for near lossless image compression |
Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5805735A (en) * | 1995-03-02 | 1998-09-08 | Apple Computer, Inc. | Method and apparatus for compression of digitized image data using variable color fidelity |
-
2008
- 2008-01-16 US US12/014,964 patent/US8160372B1/en active Active
Patent Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5805735A (en) * | 1995-03-02 | 1998-09-08 | Apple Computer, Inc. | Method and apparatus for compression of digitized image data using variable color fidelity |
Cited By (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20100293344A1 (en) * | 2009-05-13 | 2010-11-18 | International Business Machines Corporation | Apparatus and method for selecting a position where data is stored |
US8677079B2 (en) * | 2009-05-13 | 2014-03-18 | International Business Machines Corporation | Selecting a position where data is stored |
US9245352B1 (en) | 2013-04-12 | 2016-01-26 | Google Inc. | Systems and methods for near lossless image compression |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
EP1320196A2 (en) | Data compression method | |
JP6195997B2 (en) | Data source encoding / decoding method and apparatus with symbol compression | |
US8615138B2 (en) | Image compression using sub-resolution images | |
EP1318665B1 (en) | Image processing apparatus and method, program, and storage medium | |
US7365658B2 (en) | Method and apparatus for lossless run-length data encoding | |
JP2017507590A5 (en) | ||
CN108134942B (en) | Method for encoding and decoding a bitstream associated with transform coefficients | |
KR101610610B1 (en) | Encoder, decoder and method | |
EP2317476A2 (en) | Multimedia signature coding and decoding | |
CN1139044C (en) | A memory based VLSI architecture for image compression | |
Hu et al. | A new lossless compression scheme based on Huffman coding scheme for image compression | |
JP4760727B2 (en) | Data compression apparatus, decoding apparatus thereof, method thereof, and program | |
US8160372B1 (en) | Optimized backward reference selection with reduced entropy for image compression | |
KR102393743B1 (en) | Encoder, decoder and method using mode symbols | |
US6404927B1 (en) | Control point generation and data packing for variable length image compression | |
US6433707B1 (en) | Universal lossless compressor for digitized analog data | |
JP6954161B2 (en) | Image coding device, image coding method, image coding system, recording medium | |
EP3319318B1 (en) | Intra compression of screen content based on soft context formation | |
JP2798767B2 (en) | Image data compression method | |
Arnavut | Lossless compression of color-mapped images | |
JPH0884260A (en) | Compression system and expansion system for two-dimension image data | |
Govindasamy et al. | A SystemC Model of a PNG Encoder | |
SKARBEK et al. | Compression of dithered binary images using Hilbert scan | |
Koc et al. | Lossless compression of dithered images with the pseudo-distance technique | |
JP2708252B2 (en) | Image data compression method |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:ALAKUIJALA, JYRKI;HELMINEN, HANNU;SEEFELD, BERNHARD;SIGNING DATES FROM 20080403 TO 20080404;REEL/FRAME:020774/0224 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0405Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
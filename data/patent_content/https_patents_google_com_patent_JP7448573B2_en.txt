JP7448573B2 - Instantiating a dialog process in a specific child node state - Google Patents
Instantiating a dialog process in a specific child node state Download PDFInfo
- Publication number
- JP7448573B2 JP7448573B2 JP2022007951A JP2022007951A JP7448573B2 JP 7448573 B2 JP7448573 B2 JP 7448573B2 JP 2022007951 A JP2022007951 A JP 2022007951A JP 2022007951 A JP2022007951 A JP 2022007951A JP 7448573 B2 JP7448573 B2 JP 7448573B2
- Authority
- JP
- Japan
- Prior art keywords
- node state
- child node
- dialog
- input
- user
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 238000000034 method Methods 0.000 title claims description 276
- 230000008569 process Effects 0.000 title claims description 251
- 230000004044 response Effects 0.000 claims description 166
- 238000012545 processing Methods 0.000 claims description 30
- 238000004422 calculation algorithm Methods 0.000 claims description 5
- 238000004590 computer program Methods 0.000 description 14
- 238000013515 script Methods 0.000 description 10
- 238000010586 diagram Methods 0.000 description 9
- 230000009471 action Effects 0.000 description 8
- 238000004891 communication Methods 0.000 description 5
- 230000003993 interaction Effects 0.000 description 3
- 230000026676 system process Effects 0.000 description 3
- 239000003795 chemical substances by application Substances 0.000 description 2
- 230000000644 propagated effect Effects 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 238000012546 transfer Methods 0.000 description 2
- 238000003491 array Methods 0.000 description 1
- 230000000694 effects Effects 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000010801 machine learning Methods 0.000 description 1
- 238000010295 mobile communication Methods 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 230000008672 reprogramming Effects 0.000 description 1
- 238000012552 review Methods 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/02—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail using automatic reactions or user delegation, e.g. automatic replies or chatbot-generated messages
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/903—Querying
- G06F16/9032—Query formulation
- G06F16/90332—Natural language query formulation or dialogue systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/332—Query formulation
- G06F16/3329—Natural language query formulation or dialogue systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/31—Indexing; Data structures therefor; Storage structures
- G06F16/316—Indexing structures
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/3331—Query processing
- G06F16/334—Query execution
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/901—Indexing; Data structures therefor; Storage structures
- G06F16/9027—Trees
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/60—Scheduling or organising the servicing of application requests, e.g. requests for application data transmissions using the analysis and optimisation of the required network resources
Description
本発明は、特定の子ノード状態におけるダイアログプロセスのインスタンス化に関する。 The present invention relates to the instantiation of a dialog process in a particular child node state.
ダイアログプロセスは、コンピュータデバイスによって実行されると、人間のユーザとの会話をシミュレートするコンピュータプログラム、スクリプト、または任意の他の命令のセットである。これらのシミュレートされた会話を通じて、ダイアログプロセスは広範囲の自動化された支援をユーザに提供する。ダイアログプロセスは、しばしば、複数のノード状態を有する状態機械またはグラフプロセスによって実装される。各状態は、ユーザからの1つまたは複数の入力を求め、入力に応じて、別のノード状態にトラバースするかまたは特定のアクションを取る。 A dialog process is a computer program, script, or any other set of instructions that, when executed by a computing device, simulates a conversation with a human user. Through these simulated conversations, the dialog process provides extensive automated assistance to the user. Dialog processes are often implemented by state machines or graph processes with multiple node states. Each state asks for one or more inputs from the user and, depending on the input, traverses to another node state or takes a particular action.
「チャットボット」と呼ばれることもあるダイアログプロセスは、メッセージングプラットフォーム、エンターテインメントウェブサイトの一部として、また顧客サービスのために広く使用されている。しばしば、ダイアログプロセス開発者は、ユーザがダイアログプロセスの特定のノード状態に導かれることを望む場合がある。たとえば、ユーザが旅行の計画を立てるのを助けるチャットボットを書いた開発者が、ユーザがホテルの部屋の予約を比較するのを助ける新しい機能をチャットボットに追加したと仮定する。開発者は、ユーザをこの機能に触れさせたいと思う。しかしながら、そうするためには、ユーザは、新しい機能に触れるために、初期状態から1つまたは複数のチャットボット状態をトラバースしなければならない。したがって、ユーザが、新しい機能に触れられる特定のノード状態に達するために必要な応答を手動で入力するように指示され(次いで、指示に従い、実際に必要な応答を手動で入力し)ない限り、または、開発者が、新しい機能を強調する新しいチャットボット(これは顧客のコードベースを増加させ、ユーザを失うリスクがある)を作成しない限り、ユーザの多くは新しい機能に触れることがない。 Dialogue processes, sometimes referred to as "chatbots", are widely used as part of messaging platforms, entertainment websites, and for customer service. Often, dialog process developers may wish to direct users to a particular node state of a dialog process. For example, suppose a developer who wrote a chatbot that helps users plan a trip adds a new feature to the chatbot that helps users compare hotel room reservations. Developers want to expose users to this functionality. However, to do so, the user must traverse one or more chatbot states from the initial state in order to be exposed to new functionality. Therefore, unless the user is instructed to manually enter the responses required to reach a particular node state where the new functionality is touched (and then follow the instructions and manually enter the responses actually required), Or, unless developers create new chatbots that highlight the new features (which increases the customer's codebase and risks losing users), many of the users will never be exposed to the new features.
本明細書は、チャットボットなどのダイアログプロセスの特定のサブルーチンへのディープリンクをユーザに提供することに関する技術について説明する(「ディープリンク」とは、特定のサブルーチンに向けられたリンクである)。 This specification describes techniques related to providing users with deep links to specific subroutines of dialog processes such as chatbots (a "deep link" is a link directed to a specific subroutine).
一般に、本明細書で説明される主題の1つの革新的な態様は、サーバコンピュータにおいて、ユーザデバイスから、ダイアログプロセスの特定の子ノード状態を指定する要求を受信するアクションであって、ダイアログプロセスは複数のノード状態を定義し、ノード状態はルートノード状態および子ノード状態を含み、各子ノード状態は別の子ノード状態またはルートノード状態のうちの少なくとも1つから下り、各ノード状態は、入力要求と、入力要求に応答して受信された入力応答を処理し、入力応答に基づいて、ノード状態から下りる子ノード状態のうちの1つを選択するための入力応答処理ルールとを指定する、アクションを含む方法において具現化され得る。サーバコンピュータは、特定の子ノード状態を指定する要求に応答して、ルートノード状態におけるダイアログプロセスをインスタンス化する。ダイアログプロセスへの複数の入力応答が提供され、各入力応答は入力要求に対する応答であり、提供された入力応答のうちの最初の入力応答が、ルートノード状態の入力要求に対して提供され、提供された入力応答のうちの最後の入力応答が、特定の子ノード状態の親であるノード状態の入力要求に対して提供され、ダイアログプロセスに特定の子ノード状態を選択させる。次いで、サーバコンピュータは、ユーザデバイスに、ユーザデバイスに特定の子ノード状態におけるダイアログプロセスを提示させるデータを提供する。この態様の他の実施形態は、対応するシステムと、装置と、コンピュータ記憶デバイス上に符号化された、方法のアクションを実施するように構成されたコンピュータプログラムとを含む。たとえば、本明細書で説明される主題の別の革新的な態様は、1つまたは複数のサーバコンピュータを有するデータ処理装置によって実行可能であり、そのような実行時に、データ処理装置に本明細書で説明される主題の任意の態様または実装形態による方法を含む動作を実施させる命令を記憶するコンピュータ記憶媒体(非一時的コンピュータ記憶媒体であり得るが、この態様はこれに限定されない)において具現化され得る。 In general, one innovative aspect of the subject matter described herein is an action of receiving, at a server computer, a request from a user device specifying a particular child node state of a dialog process, the dialog process Defines multiple node states, where the node states include a root node state and a child node state, each child node state descends from at least one of another child node state or the root node state, and each node state descends from the input specifying a request and an input response processing rule for processing an input response received in response to the input request and selecting one of the child node states descending from the node state based on the input response; It may be embodied in a method involving an action. The server computer instantiates a dialog process in a root node state in response to a request specifying a particular child node state. Multiple input responses are provided to the dialog process, each input response is a response to an input request, and the first input response of the provided input responses is provided to the input request of the root node state, providing The last of the received input responses is provided to the input request for the node state that is the parent of the particular child node state, causing the dialog process to select the particular child node state. The server computer then provides data to the user device that causes the user device to present the dialog process in a particular child node state. Other embodiments of this aspect include corresponding systems, apparatus, and computer programs encoded on computer storage devices and configured to perform the actions of the method. For example, another innovative aspect of the subject matter described herein is executable by a data processing apparatus having one or more server computers, and when such execution causes the data processing apparatus to Embodied in a computer storage medium (which may be, but is not limited to, a non-transitory computer storage medium) storing instructions for performing operations, including methods, according to any aspect or implementation of the subject matter described in can be done.
本明細書で説明される主題の別の革新的な態様は、ユーザデバイスから、ダイアログプロセスの特定の子ノード状態を指定する要求を受信するサーバコンピュータを含むシステムにおいて具現化され得、ダイアログプロセスは複数のノード状態を定義し、ノード状態はルートノード状態および子ノード状態を含み、各子ノード状態は別の子ノード状態またはルートノード状態のうちの少なくとも1つから下り、各ノード状態は、入力要求と、入力要求に応答して受信された入力応答を処理するための入力応答処理ルールとを指定し、入力応答に基づいて、ノード状態から下りる子ノード状態のうちの1つを選択する。システムは、特定の子ノード状態を指定する要求に応答して、ルートノード状態におけるダイアログプロセスをインスタンス化するための手段と、サーバコンピュータによって、ダイアログプロセスに、ダイアログプロセスへの複数の入力応答を提供するための(または、サーバコンピュータに、ダイアログプロセスに提供するようにユーザデバイスなどの別のデバイスに命令させるための)手段であって、各入力応答は入力要求への応答として提供され、提供された入力応答のうちの最初の入力応答が、ルートノード状態の入力要求に対して提供され、提供された入力応答のうちの最後の入力応答が、特定の子ノード状態の親であるノード状態の入力要求に対して提供され、ダイアログプロセスに特定の子ノード状態を選択させる、手段とを含む。サーバコンピュータは、ユーザデバイスに、ユーザデバイスに特定の子ノード状態におけるダイアログプロセスを提示させるデータを提供する。本明細書で説明される主題の別の革新的な態様は、データ処理装置と、データ処理装置によって実行可能であり、そのような実行時に、データ処理装置に、本明細書で説明される主題の任意の態様または実装形態による方法を含む動作を実施させる命令を記憶するコンピュータ可読媒体(非一時的コンピュータ記憶媒体であり得るが、この態様はこれに限定されない)とを備えるシステムにおいて具現化され得る。 Another innovative aspect of the subject matter described herein may be embodied in a system that includes a server computer that receives a request from a user device specifying a particular child node state of a dialog process, and the dialog process Defines multiple node states, where the node states include a root node state and a child node state, each child node state descends from at least one of another child node state or the root node state, and each node state descends from the input Specifying a request and an input response processing rule for processing an input response received in response to the input request, and selecting one of the child node states to descend from the node state based on the input response. The system provides a means for instantiating a dialog process in a root node state in response to a request specifying a particular child node state, and a server computer provides the dialog process with a plurality of input responses to the dialog process. means for (or for causing a server computer to provide to another device, such as a user device, to provide to a dialog process) each input response provided as a response to an input request; The first of the provided input responses is provided to the input request of the root node state, and the last of the provided input responses is provided to the input request of the node state that is the parent of a particular child node state. and means provided in response to an input request to cause the dialog process to select a particular child node state. The server computer provides data to the user device that causes the user device to present a dialog process in a particular child node state. Another innovative aspect of the subject matter described herein is executable by the data processing apparatus and, upon such execution, the subject matter described herein. A computer readable medium (which may be, but is not limited to, a non-transitory computer storage medium) storing instructions for performing operations including a method according to any aspect or implementation of the present invention. obtain.
これらの実施形態および他の実施形態はそれぞれ、以下の特徴のうちの1つまたは複数を任意選択で含むことができる。いくつかの実装形態では、ダイアログプロセスの特定の子ノード状態を指定する要求は、ダイアログプロセスインデックスのインデックスキー値を含み、ダイアログプロセスインデックスは、各インデックスエントリについて、それぞれのインデックスキー値によってインデックス付けされた特定の子ノード状態エントリと、ダイアログプロセスにルートノード状態から特定の子ノード状態にトラバースさせる入力応答のセットとを指定する。ダイアログプロセスへの複数の入力応答を提供することは、要求のインデックスキー値によってインデックス付けされた特定の子ノード状態エントリにアクセスすることと、ダイアログプロセスインデックスから入力応答のセットを取り出すことと、次いで、ダイアログプロセスに入力応答のセットを提供することとを含むことができる。 Each of these and other embodiments can optionally include one or more of the following features. In some implementations, a request specifying a particular child node state of a dialog process includes an index key value of a dialog process index, where the dialog process index is indexed by a respective index key value for each index entry. specifies a particular child node state entry and a set of input responses that cause the dialog process to traverse from the root node state to the particular child node state. Providing multiple input responses to a dialog process consists of accessing a particular child node state entry indexed by the index key value of the request, retrieving the set of input responses from the dialog process index, and then , providing a set of input responses to a dialog process.
いくつかの実装形態では、ダイアログプロセスの特定の子ノード状態を指定する要求は、ダイアログプロセスにルートノード状態から特定の子ノード状態にトラバースさせる複数の入力応答を含む。要求は、クエリパラメータとしての入力応答のセットを含むユニフォームリソースロケータによって指定され得る。 In some implementations, a request specifying a particular child node state of a dialog process includes multiple input responses that cause the dialog process to traverse from a root node state to the particular child node state. A request may be specified by a uniform resource locator that includes a set of input responses as query parameters.
いくつかの実装形態では、要求は、ダイアログプロセスにルートノード状態から特定の子ノード状態にトラバースさせる命令を含むリソースを参照する特定のユニフォームリソース識別子によって指定され、命令は、複数の入力応答を指定することができる。 In some implementations, the request is specified by a particular uniform resource identifier that references a resource containing instructions that cause the dialog process to traverse from a root node state to a particular child node state, and the instructions specify multiple input responses. can do.
いくつかの実装形態では、複数の入力応答のうちの各入力応答は、ダイアログプロセスに別のノード状態にトラバースさせる入力応答を含む。 In some implementations, each input response of the plurality of input responses includes an input response that causes the dialog process to traverse to another node state.
いくつかの実装形態では、ダイアログプロセスの特定の子ノード状態を指定する要求は、ユーザ検索履歴に部分的に基づく。ダイアログプロセスの特定の子ノード状態を指定する要求は、ユーザ閲覧履歴に部分的に基づき得る。 In some implementations, the request to specify a particular child node state of a dialog process is based in part on user search history. The request to specify a particular child node state of a dialog process may be based in part on user viewing history.
本明細書で説明される主題の特定の実施形態は、以下の利点のうちの1つまたは複数を実現するために実装され得る。ユーザは、ダイアログプロセスの特定の子ノード状態へのダイレクトリンク(たとえば、ユニフォームリソース識別子)を提供される。リンクの選択により、ダイアログプロセスがルートノード状態においてインスタンス化する。さらに、リンクは、ダイアログプロセスのルートノード状態から特定の子ノード状態にトラバースするために必要な情報のすべてを含む方法でダイアログプロセスを呼び出させる。ダイアログプロセスに特定の子ノード状態にトラバースさせる情報をダイアログプロセスに提供することによって、システムおよび方法は、特定の子ノード状態に達するためにユーザが任意の応答を入力することを必要とすることなしに、ユーザを特定の子ノード状態の機能に触れさせることを保証する。ユーザが任意の応答を入力する必要、およびダイアログプロセスが入力要求をユーザに提供する必要をなくすことは、ユーザが特定の子ノード状態にリンクするために必要とされるネットワークトラフィックを低減し、かつ/またはユーザが特定の子ノード状態にリンクするのにかかる時間を低減するので、よりリソース効率的なプロセスを提供する。さらに、ダイアログプロセスのためのカスタムコードの必要性がなくなり、その結果、ダイアログプロセスは、ダイアログプロセスの特定の子ノード状態への所望の露出ごとの再プログラミングを必要としない。これは、開発者コードベースを簡略化し、各ダイアログプロセスの特別なコーディングを必要とするシステムに対する柔軟性の追加を実現する。 Particular embodiments of the subject matter described herein may be implemented to achieve one or more of the following advantages. The user is provided with a direct link (eg, a uniform resource identifier) to the specific child node state of the dialog process. Selection of a link instantiates a dialog process in the root node state. Furthermore, the link causes the dialog process to be invoked in a way that includes all of the information necessary to traverse from the root node state of the dialog process to a particular child node state. By providing information to the dialog process that causes the dialog process to traverse to a particular child node state, the system and method can avoid requiring the user to enter any response in order to reach a particular child node state. ensure that the user is exposed to the functionality of a particular child node state. Eliminating the need for the user to enter arbitrary responses and for the dialog process to provide input requests to the user reduces the network traffic required for the user to link to a particular child node state, and and/or reduce the time it takes for a user to link to a particular child node state, thus providing a more resource efficient process. Furthermore, the need for custom code for the dialog process is eliminated, so that the dialog process does not require reprogramming for each desired exposure to a particular child node state of the dialog process. This simplifies the developer codebase and provides added flexibility for systems that require special coding for each dialog process.
本明細書で説明される主題の1つまたは複数の実施形態の詳細は、添付の図面および以下の説明に記載される。主題の他の特徴、態様、および利点は、説明、図面、および特許請求の範囲から明らかとなろう。 The details of one or more embodiments of the subject matter described herein are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will be apparent from the description, drawings, and claims.
様々な図面における同様の参照番号および名称は、同様の要素を示す。 Like reference numbers and designations in the various drawings indicate similar elements.
概要
以下で説明されるのは、たとえば、チャットボットまたは人工会話エンティティといったダイアログプロセスの特定の子ノード状態へのディープリンクをユーザに提供するためのシステムおよび方法である。リンクの選択は、ダイアログプロセスをルートノード状態においてインスタンス化させる。リンクは、ダイアログプロセスをダイアログプロセスの特定の子ノード状態にトラバースするために必要な情報のすべてを含む方法でダイアログプロセスを呼び出させる。ダイアログプロセスを特定の子ノード状態にトラバースするための情報の提供は、いくつかの異なる方法で行われ得る。1つの方法は、たとえば、クエリパラメータの形態の情報でユニフォームリソース識別子を符号化することであり、ダイアログプロセスが呼び出されると、ダイアログプロセスが情報を消費する。別の方法は、情報を含むインデックスを付けるトークンでユニフォームリソース識別子を符号化することによるものであり、情報は呼び出し時にインデックスからフェッチされ、ダイアログプロセスに提供される。また別の方法は、ダイアログプロセスの呼び出し時に情報をダイアログプロセスに提供するようにプログラムされたスクリプトなどのプロセスにリンクすることによるものである。コンピュータサーバは、ユーザデバイスのユーザによってリンクが選択されることに応答して、ユーザデバイスから特定の子ノード状態におけるダイアログプロセスに対する要求を受信する。
Overview Described below are systems and methods for providing users with deep links to specific child node states of a dialog process, such as a chatbot or synthetic conversational entity, for example. Selection of a link causes a dialog process to be instantiated in the root node state. A link causes a dialog process to be invoked in a way that includes all of the information necessary to traverse the dialog process to a particular child node state of the dialog process. Providing information for traversing a dialog process to a particular child node state can be done in several different ways. One way is to encode a uniform resource identifier with information, for example in the form of query parameters, which the dialog process consumes when it is called. Another method is by encoding a uniform resource identifier in an indexing token that contains information that is fetched from the index and provided to the dialog process on call. Yet another method is by linking to a process, such as a script, that is programmed to provide information to the dialog process when it is called. The computer server receives a request from a user device for a dialog process in a particular child node state in response to a link being selected by a user of the user device.
ダイアログプロセスは、ルートノード状態および子ノード状態を含む複数のノード状態を有する。ダイアログプロセスの各子ノード状態は、ダイアログプロセスの少なくとも別の子ノード状態またはルートノード状態から下りる。各ノード状態は入力要求および入力応答処理ルールを含み、入力応答処理ルールは、受信された入力応答をノード状態がどのように処理するかを決定し、入力応答に応答して、ノード状態から下りる子ノード状態を選択する。 A dialog process has multiple node states, including a root node state and child node states. Each child node state of a dialog process descends from at least another child node state or root node state of the dialog process. Each node state includes input requests and input response processing rules that determine how the node state processes received input responses and descends from the node state in response to input responses. Select child node state.
本明細書の態様によれば、特定の子ノード状態におけるダイアログプロセスに対する各要求について、ダイアログプロセスはダイアログプロセスのルートノード状態においてインスタンス化される。リンクの選択に応答して、複数の入力応答がダイアログプロセスに提供される。いくつかの実装形態では、応答はサーバコンピュータによって提供され得るが、他の実装形態では、応答はユーザデバイスによって提供され得る。 According to aspects herein, for each request for a dialog process in a particular child node state, the dialog process is instantiated in the root node state of the dialog process. A plurality of input responses are provided to the dialog process in response to selecting the link. In some implementations, the response may be provided by a server computer, while in other implementations, the response may be provided by a user device.
各入力応答は、入力要求に応答してダイアログプロセスに提供される。たとえば、最初の入力応答は、ダイアログプロセスのルートノード状態の入力要求に対して(それに応答して)提供され、最後の入力応答は、リンクされている先の特定の子ノード状態の親であるノード状態の入力要求に対して(それに応答して)提供される。ルートノード状態に対して提供される応答と特定の子ノード状態の親であるノード状態に対して提供される応答との間に、特定の子ノード状態の深さに応じて、ゼロ以上の中間応答が提供され得る。最後の入力応答を受信すると、ダイアログプロセスは特定の子ノード状態を選択する。 Each input response is provided to the dialog process in response to the input request. For example, the first input response is provided to (in response to) an input request for the root node state of the dialog process, and the last input response is the parent of a particular child node state to which it is linked. Provided in response to requests for node state input. Depending on the depth of a particular child node state, zero or more intermediate A response may be provided. Upon receiving the last input response, the dialog process selects a particular child node state.
いくつかの実装形態では、次いで、ダイアログプロセスは、特定の子ノード状態に達すると、ユーザデバイスにおいて提示される。他の実装形態では、入力応答の各々がダイアログプロセスに提供されると、ダイアログプロセスがユーザデバイスにおいて提示されてもよく、その結果、ユーザは、ダイアログプロセスに特定の子ノード状態にトラバースさせた質問および応答を見ることができる。 In some implementations, the dialog process is then presented at the user device upon reaching a particular child node state. In other implementations, the dialog process may be presented at the user device as each of the input responses is provided to the dialog process, such that the user can ask the dialog process the question that caused the dialog process to traverse to a particular child node state. and can see the responses.
これらの特徴および追加の特徴は、以下でより詳細に説明される。 These features and additional features are described in more detail below.
例示的な動作環境
図1Aは、ユーザデバイスのための特定の子ノード状態においてダイアログプロセスが呼び出され得る例示的な環境100のブロック図である。ローカルエリアネットワーク(LAN)、インターネット、またはそれらの組合せなどのコンピュータネットワーク102は、1つまたは複数のダイアログプロセス106を含むサーバコンピュータ104と、ユーザデバイス108とを接続する。サーバコンピュータ104は、図1Aでは単一のエンティティとして表されるが、直接またはネットワーク102を介して通信している複数の異なるサーバを含むことができる。
Exemplary Operating Environment FIG. 1A is a block diagram of an
ユーザデバイス108は、ネットワーク102を介してダイアログプロセス106を要求および受信することが可能な電子デバイスである。例示的なユーザデバイス108は、パーソナルコンピュータと、モバイル通信デバイスと、ネットワーク102を介してデータを送信および受信することができる他のデバイスとを含む。ユーザデバイス108は、典型的には、ネットワーク102を介したダイアログプロセス106を含むデータの送信および受信を容易にするために、ウェブブラウザなどのユーザアプリケーションを含む。ウェブブラウザは、ユーザが、典型的にはワールドワイドウェブまたはローカルエリアネットワーク上のウェブサイトにおけるウェブページ上に配置されたテキスト、画像、ビデオ、音楽および他の情報を表示し、それらと対話することを可能にすることができる。
ダイアログプロセスのインスタンス化
ユーザデバイス108は、ダイアログプロセスの特定の子ノード状態へのリンク114(または何らかの他の要求命令114)を含むユーザ環境107を表示してもよい。ユーザ環境107は、たとえば、ウェブページ、ネイティブアプリケーション内のユーザインターフェース、テキストメッセージ環境、または、選択されると、ユーザデバイス108に要求をサーバに送信させる命令が提供され得る任意の他の環境であってもよい。ユーザデバイス108上のユーザは、たとえば、要求命令114を選択することによって、サーバ104からの特定の子ノード状態におけるダイアログプロセス106の提示を要求することができる。各ダイアログプロセス106は、ルートノード状態および子ノード状態を含む複数のノード状態{N1, N2,...NN}を有する。ダイアログプロセス106の各子ノード状態は、別の子ノード状態またはルートノード状態から下りる。各ノード状態は、入力要求(たとえば、質問)と、入力応答(たとえば、答え)を処理するための入力応答処理ルールとを含む。ノード状態の入力要求に応答して提供される特定の入力応答について、ノード状態は、ノード状態から下りる子ノード状態のうちの1つを選択する。
Instantiating a Dialog
ダイアログプロセス内のノード状態の関係が図1Bに例示されており、図1Bはダイアログプロセス内のルートノードN0から下りるノード状態のサブセットのグラフである。ルートノードN0は、入力要求{質問0}と、入力応答を処理するためのルールとを含む。図1Bに示されるように、ルールは2つの決定、すなわち、子ノードN11にトラバースするA01および子ノードN12にトラバースするA02に解決する。たとえば、質問が「新しいホテルの予約を取りたいですか、それとも既存の予約を再検討したいですか?」であると仮定する。A01の分岐は「予約する」に解決する任意の応答または入力であってもよく、A02の分岐は「再検討する」に解決する任意の応答または入力であってもよい。簡潔にするために、また混雑を招くことを避けるために、架空の分岐によって示される他のノード状態は図面から省略されている。 The relationship of node states within a dialog process is illustrated in FIG. 1B, which is a graph of a subset of node states descending from the root node N0 within a dialog process. Root node N0 includes an input request {question 0} and rules for processing the input response. As shown in FIG. 1B, the rule resolves to two decisions: A01 to traverse to child node N11 and A02 to traverse to child node N12. For example, suppose the question is "Do you want to make a new hotel reservation or review an existing reservation?" The A01 branch may be any response or input that resolves to "Reserve," and the A02 branch may be any response or input that resolves to "Reconsider." For the sake of brevity and to avoid introducing congestion, other node states represented by fictitious branches have been omitted from the drawing.
子ノード状態N33にトラバースするためには、ダイアログプロセスは、ルートノードN0における質問0に対してA02に解決する入力、子ノードN12における質問12に対してA121に解決する入力、子ノードN23における質問23に対してA231に解決する入力を受信しなければならない。以下で説明されるシステムおよび方法は、ダイアログプロセスがルートノード状態においてインスタンス化し、ルートノード状態から特定の子ノード状態に自動的にトラバースすることを可能にする。 To traverse to child node state N33, the dialog process requires an input that resolves to A02 for question 0 at root node N0, an input that resolves to A121 for question 12 at child node N12, and an input that resolves to A121 for question 12 at child node N23. Must receive input that resolves to A231 for 23. The systems and methods described below enable dialog processes to instantiate in a root node state and automatically traverse from the root node state to specific child node states.
上記で説明されたように、ダイアログプロセスにルートノード状態においてインスタンス化させ、特定の子ノード状態に自動的にトラバースさせる3つの例示的な方法が提供される。第1の方法は、情報でユニフォームリソース識別子を符号化することであり、図3Aを参照してより詳細に説明される。第2の方法は、情報を含むインデックスを付けるトークンでユニフォームリソース識別子を符号化することによるものであり、図3Bを参照して説明される。第3の方法は、ダイアログプロセスの呼び出し時に情報をダイアログプロセスに提供するようにプログラムされたスクリプトなどのプロセスにリンクすることによるものであり、図3Cを参照して説明される。これらの例は網羅的なものではなく、ダイアログプロセスにルートノード状態においてインスタンス化させ、ルートノード状態から特定の子ノード状態に自動的にトラバースさせる他の適切な方法も使用され得る。 As explained above, three exemplary methods are provided for having a dialog process instantiate in a root node state and automatically traverse to specific child node states. The first method is to encode the uniform resource identifier with information, which will be explained in more detail with reference to FIG. 3A. The second method is by encoding the uniform resource identifier with an indexing token containing information and is explained with reference to FIG. 3B. A third method is by linking to a process, such as a script, that is programmed to provide information to the dialog process upon invocation of the dialog process, and is described with reference to FIG. 3C. These examples are not exhaustive, and other suitable methods of having a dialog process instantiate in a root node state and automatically traverse from the root node state to a particular child node state may also be used.
図2は、特定の子ノード状態におけるダイアログプロセス106aをインスタンス化するための例示的なプロセス200の流れ図である。プロセス200は、サーバコンピュータ104などのコンピュータシステムによって実施され得る。
FIG. 2 is a flow diagram of an
サーバ104は、特定の子ノード状態におけるダイアログプロセス106aをユーザデバイス108に提供するための要求114を受信する(202)。要求は、ユニフォームリソースロケータ(URL)などのユニフォームリソース識別子を選択することによって生成されてもよい。リンクにおいて符号化されるものおよび得られる要求は、ルートノード状態におけるダイアログプロセスをインスタンス化し、ルートノード状態から特定の子ノード状態に自動的にトラバースするためにシステムが使用するインスタンス化プロセスに依存し得る。たとえば、要求114は、クエリパラメータとしての入力応答を含んでもよい。代替的に、要求114はダイアログプロセスインデックス110のインデックスキー値への参照を含んでもよく、インデックスキー値は特定の子ノード状態に対するインデックスエントリおよび入力応答のセットを参照する。また別の代替では、要求はリソースを指してもよく、リソース112(たとえば、ウェブページ)は入力応答のセットに関する命令および情報を含む。これらの異なる要求タイプは、それぞれ、以下の図3A～図3Cを参照して説明される。
要求114を受信した後、サーバ104はダイアログプロセスのルートノード状態におけるダイアログプロセス106aをインスタンス化する(204)。ダイアログプロセス106aはユーザデバイス108とは別個のサーバ104上の環境でインスタンス化されるが、いくつかの実装形態では、ダイアログプロセス106aは代わりに、たとえば、ユーザデバイス108上の環境でインスタンス化されてもよい。
After receiving
サーバ104は複数の入力応答をダイアログプロセスに提供し、各入力応答は入力要求に応答して提供される(206)。応答の提供は要求タイプに従って行われてもよく、その例は以下の図3A～図3Cを参照して説明される。特定の入力応答のセットをダイアログプロセス106aに提供することによって、ダイアログプロセス106aはルートノード状態から特定の子ノード状態にトラバースする。たとえば、航空券予約ダイアログプロセスは、ルートノード状態における入力要求「今日は飛行機でどこに行きますか?」に、対応する入力応答「ホノルル、ハワイ」を提供してもよい。次いで、ダイアログプロセス106aは、入力要求が「搭乗手続きをしたいですか?」であり、考えられる入力応答が「はい」である、子孫の子ノード状態を選択してもよく、特定の子ノード状態に達するまで以下同様である。
より具体的には、図1Bを参照すると、A02，A121およびA231に解決する応答は、子ノード状態N33にトラバースするために提供され得る。たとえば、図1Bのダイアログプロセスを子ノード状態N33にトラバースするためには、サーバ104がルートノード状態N0におけるダイアログプロセスをインスタンス化した後、決定A02を生じさせるのに有効であった応答が、たとえば、サーバ104によって入力され、その結果、ダイアログプロセスが子ノード状態N12にトラバースする。ダイアログプロセスが、応答が入力されるようサーバ104に促してもよく、またはサーバが、ルートノード状態がインスタンス化された後に応答を自動的に入力してもよい。次に、子ノード状態N12において決定A121を生じさせるのに有効であった応答が入力されることになり、その結果、ダイアログプロセスが子ノード状態N23にトラバースし、その後に子ノード状態N23において決定A231を生じさせるのに有効であった応答が続き、ダイアログプロセスを特定の子ノード状態N33にトラバースさせる。各応答は、ある状態に解決するために必要とされるデータでありさえすれば十分である。たとえば、質問がそれぞれの子ノード状態1、2または3に解決するために1、2または3の数値入力を必要とする場合、「1」に解決する応答は数字「1」または語「one」であり得る、などである。ルールセットがセマンティックルールを含む場合、応答は、ある状態に解決するために必要とされるデータでありさえすれば十分である。たとえば、入力を求める質問が「フライトを予約したいか、予約を管理したいか、またはフライトをキャンセルしたいか教えてください」である場合、「フライトを予約する(book a flight)」に解決する入力は、「予約する(book)」、「飛行機を予約する(make a flight)」、または「チケットを買う(buy ticket)」のような語または句であり得る。これらの語または句のうちのいずれか1つがノード状態に対する入力応答として使用され得る。したがって、トラバースが、ノード状態が「フライトを予約する(book a flight)」に解決することを必要とする場合、入力応答は単に「予約する(book)」であってもよい。
More specifically, referring to FIG. 1B, responses that resolve to A02, A121, and A231 may be provided to traverse to child node state N33. For example, to traverse the dialog process of FIG. 1B to child node state N33, after
ノード状態へのトラバースのための入力応答は、ダイアログプロセスオーサーによって提供されてもよく、または機械学習技法によって発見されてもよい。前者の場合、ダイアログプロセスオーサーは、文字列区切りの応答を特定のノード状態に、たとえば、図1Aのダイアログプロセスに提供してもよく、ノードN33にトラバースするための文字列は{A01};{A121};{A231}であってもよく、ノードに対する任意の{・}は、ノードのためのダイアログプロセス処理ルールに、特定の子ノード状態へのトラバースにおいて必要とされる状態を選択させる英数字値である。後者の場合、仮想マシンが、ダイアログプロセスの各ノード状態に対する入力要求を解釈し、入力応答をダイアログプロセスに提供し、ダイアログプロセスの階層を記述する(サイトマップに類似した)ダイアログプロセス「ダイアログマップ」を学習するようにプログラムされてもよい。 Input responses for traversal to node state may be provided by the dialog process author or discovered by machine learning techniques. In the former case, the dialog process author may provide a string-delimited response to a particular node state, e.g., to the dialog process in Figure 1A, where the string to traverse to node N33 is {A01};{ A121};{A231}, where the optional {・} for a node is an alphanumeric character that causes the dialog processing rules for the node to select the state required in the traversal to a particular child node state. It is a value. In the latter case, a virtual machine interprets input requests for each node state of the dialog process, provides input responses to the dialog process, and creates a dialog process "dialog map" (similar to a site map) that describes the hierarchy of the dialog process. may be programmed to learn.
ダイアログプロセス106aが特定の子ノード状態にトラバースした後、サーバ104は、ユーザデバイス108に特定の子ノード状態におけるダイアログプロセス106aを提示させるデータをユーザデバイスに提供する(208)。ダイアログプロセス106aは、アプリケーション環境内の新しいウィンドウの形態でユーザデバイス108に提示されてもよく、ダイアログプロセス106aに関連する追加の情報とともに提示されてもよい。
After
リンクにおける入力応答の符号化
図1A～図1Bおよび図2を参照して説明されたように、特定の子ノード状態におけるダイアログプロセスをユーザデバイスに提供するために様々な方法が実装され得る。図3Aは、特定の子ノード状態302におけるダイアログプロセスをインスタンス化するための例示的なプロセス300のブロック図である。図3Aでは、要求304は、クエリパラメータとしての入力応答のセットを含むURLから生成される。ダイアログプロセスが呼び出されると、ダイアログプロセスはクエリパラメータに含まれる情報を消費する。
Encoding Input Responses in Links As described with reference to FIGS. 1A-1B and FIG. 2, various methods may be implemented to provide a user device with dialog processing in a particular child node state. FIG. 3A is a block diagram of an example process 300 for instantiating a dialog process in a particular child node state 302. In FIG. 3A, a request 304 is generated from a URL that includes a set of input responses as query parameters. When a dialog process is called, it consumes the information contained in the query parameters.
たとえば、図3Aでは、入力応答(たとえば、{A1, A2,...AN})はクエリパラメータとしてURLに含まれる。URLは、要求、たとえば、www.example/com/chatbotに応答してダイアログプロセスが呼び出され得るロケーションにリンクする。サーバ306は、URLの選択から生成された要求304を受信し、それに応答して、ダイアログプロセス308のインスタンス化を行う。 For example, in Figure 3A, the input response (eg, {A1, A2,...AN}) is included in the URL as a query parameter. The URL links to a location where a dialog process can be invoked in response to a request, eg, www.example/com/chatbot. Server 306 receives the request 304 generated from the selection of the URL and instantiates a dialog process 308 in response.
要求304とともに提供されるクエリパラメータとしての入力応答のセットは、ダイアログプロセス308に提供される。次に、入力応答のセットのうちの各入力応答が、ダイアログプロセス308からの入力要求に応答して提供される。ダイアログプロセス308は、入力要求が呼び出し時にコマンド引き数として提供されるかどうかを決定し、それに応じて、入力要求を処理するようにプログラムされ得る。入力要求が提供されない場合、ダイアログプロセスはI/Oデバイスからの入力を待つ。たとえば、URL304の選択によって生成された要求に応答して、最初の入力応答「A1」が入力要求「Q1」に応答して提供され、2番目の応答が入力要求「Q2」に応答して提供され、最後の入力応答「AN」が入力要求「QN」に応答して提供されるまで以下同様である。ダイアログプロセスが入力応答「AN」を受信すると、ダイアログプロセスは特定の子ノード状態「M」である子孫ノード状態を選択する。 A set of input responses as query parameters provided with request 304 is provided to dialog process 308. Each input response of the set of input responses is then provided in response to an input request from dialog process 308. Dialog process 308 may be programmed to determine whether an input request is provided as a command argument on invocation and process the input request accordingly. If no input request is provided, the dialog process waits for input from the I/O device. For example, in response to a request generated by selecting URL 304, the first input response 'A1' is provided in response to input request 'Q1' and the second response is provided in response to input request 'Q2'. and so on until the last input response "AN" is provided in response to the input request "QN". When the dialog process receives the input response "AN", the dialog process selects a descendant node state that is the particular child node state "M".
次いで、特定の子ノード状態「M」におけるダイアログプロセス302をユーザデバイスにおいて表示させるデータがユーザデバイス108に提供される。いくつかの実装形態では、ダイアログプロセス302のルートノード状態から特定の子ノード状態にトラバースするためにダイアログプロセスに提供される入力要求および/または入力応答のセット310も、ユーザデバイス108のユーザに提供される。このことは、ルートノード状態から子ノード状態への完全な会話コンテキストをユーザに表示することを可能にする。たとえば、ユーザデバイス108上のダイアログプロセス302内のまたはダイアログプロセス302とともに含まれるテキスト表示および/またはグラフ表示310は、ルートノード状態から特定の子ノード状態(たとえば、「QM」)にトラバースされたノード状態に対応する、入力要求のセット(たとえば、ダイアログプロセスからユーザへの質問)と、それぞれの入力応答(たとえば、サーバによってダイアログプロセスに提供される答え)とを提示し得る。他の実装形態では、子ノード状態の入力要求のみがユーザデバイスに提供される。
Data is then provided to the
いくつかの実装形態では、入力要求および/入力応答のセット310を提供することは、ユーザデバイス108上で、入力要求および/または入力応答のセット310の概要を表示することを含み得る。概要は、特定の子ノード状態におけるダイアログプロセス302とともにまたはその一部として提供される関連情報をユーザデバイス108のユーザに提示することを含むことができる。たとえば、入力要求「飛行機でどこに行きたいですか」、「目的地でホテルを予約する必要がありますか」、および「目的地でレンタカーを予約したいですか」、ならびに提供される対応する入力応答のセット「ハワイ」、「はい」、および「はい」の場合、この情報の概要は「ハワイに行くための航空券を購入し、滞在中にホテルの部屋とレンタカーを予約したいですか?」である。入力要求および/または入力応答のセットに関連する情報を(たとえば、テキストでまたはグラフで)表示する他の方法が使用されてもよい。
In some implementations, providing the set 310 of input requests and/or input responses may include displaying a summary of the set 310 of input requests and/or input responses on the
インデックス付けされた応答セットからの入力応答
図1A～図1Bを参照して上記で説明されたように、要求114はダイアログプロセスインデックス110のインデックスキー値への参照を含むURLを含んでもよく、インデックスキー値は、特定の子ノード状態に対するインデックスエントリおよび入力応答のセットを参照する。キー値を使用して、サーバは呼び出し時に、インデックスからの入力応答をフェッチし、応答をダイアログプロセスに提供する。図3Bは、要求324によって特定の子ノード状態におけるダイアログプロセス322をインスタンス化するための例示的なプロセス320のブロック図であり、要求324は、ダイアログプロセスインデックス326のインデックスキー値への参照を含む。いくつかの実装形態では、サーバ104がダイアログプロセスインデックス326を含む。ダイアログプロセスインデックス326は複数のインデックスエントリ(たとえば、NS1、NS2など)を含むことができ、各インデックスエントリは、それぞれのインデックスキー値(たとえば、IK1、IK2など)によってインデックス付けされた特定の子ノード状態と、ダイアログプロセス332にルートノード状態から特定の子ノード状態にトラバースさせる入力応答のセット(たとえば、{A1, A2...AN1}、{A1, A2...AN2}など)とを表す。たとえば、インデックスキーIK1によって表され、特定の子ノード状態NS1に対応するインデックスエントリは、入力応答のセット{A1, A2,...AN1}を含む。
Input Responses from Indexed Response Sets As explained above with reference to Figures 1A-1B, the
いくつかの実装形態では、要求324は、サーバ328上に記憶された、ダイアログプロセスインデックス326に対応するインデックスキー値を含む、ダイアログプロセスの特定の子ノード状態を指定する参照を含み得る。たとえば、ダイアログプロセスの特定の子ノード状態「M」(たとえば、ノード状態M(NSM))に対するインデックスエントリは、インデックスキー値「IKM」と、ダイアログプロセス332にルートノード状態から特定の子ノード状態「M」にトラバースさせることになる入力応答のセット330{A1, A2,...ANN}とを含み得る。より具体的には、ダイアログプロセス内の各ノードは、インデックスエントリに対応してもよく、記録された値は、インデックスエントリによってインデックス付けされた、ルートノード状態から特定の子ノード状態にトラバースするための応答であってもよい。たとえば、図1Aの階層の場合、ノードN12に対するインデックスエントリは値{A01}を含んでもよい。同様に、ノードN23に対するインデックスエントリの場合、値は{A01};{A121}であってもよく、以下同様である。 In some implementations, request 324 may include a reference that specifies a particular child node state of the dialog process, including an index key value that corresponds to dialog process index 326, stored on server 328. For example, an index entry for a particular child node state "M" of a dialog process (e.g., node state M(NSM)) would include an index key value "IKM" and a specific child node state "M" from the root node state of the dialog process 332. A set of input responses 330{A1, A2,...ANN} to be traversed to ``M''. More specifically, each node within a dialog process may correspond to an index entry, and the recorded value is for traversing from the root node state to a particular child node state, indexed by the index entry. may be the response. For example, for the hierarchy of FIG. 1A, the index entry for node N12 may include the value {A01}. Similarly, for the index entry for node N23, the value may be {A01};{A121}, and so on.
ダイアログプロセスインデックス326は、ダイアログプロセスオーサーによって提供されてもよく、または自動化されたプロセスによって生成されてもよい。たとえば、上記で説明されたように、仮想マシンは、「ダイアログマップ」を生成するようにプログラムされてもよい。次いで、ダイアログマップは、インデックスを生成するために使用されてもよい。 Dialog process index 326 may be provided by a dialog process author or may be generated by an automated process. For example, as explained above, a virtual machine may be programmed to generate a "dialog map." The dialog map may then be used to generate an index.
サーバ328は、要求324を受信し、ダイアログプロセスインデックス326からインデックスキー値を使用することによって、インデックスキー値によって表される特定の子ノード状態インデックスエントリにアクセスする。インデックスエントリNSMから、サーバは入力応答のセット330を取り出し得る。たとえば、インデックスキー値「IKM」の場合、入力応答のセット330{A1, A2,...ANN}がサーバ328によって取り出され得る。 Server 328 receives request 324 and uses the index key value from dialog process index 326 to access the particular child node state index entry represented by the index key value. From the index entry NSM, the server may retrieve a set 330 of input responses. For example, for the index key value "IKM," a set of input responses 330 {A1, A2,...ANN} may be retrieved by the server 328.
次いで、サーバ328は、図3Aを参照して論じられた方法と同様の方法で、ルートノード状態におけるダイアログプロセス332をインスタンス化し、ダイアログプロセス332にルートノード状態から特定の子ノード状態「M」にトラバースさせる入力応答のセット330をダイアログプロセス332に提供し得る。次いで、特定の子ノード状態「M」におけるダイアログプロセス322をユーザデバイスにおいて表示させるデータがユーザデバイス108に提供される。
Server 328 then instantiates dialog process 332 in the root node state and directs dialog process 332 from the root node state to a particular child node state "M" in a manner similar to that discussed with reference to FIG. 3A. A dialog process 332 may be provided with a set 330 of input responses to traverse. Data is then provided to the
リソース命令からの入力応答
いくつかの実装形態では、図1A～図1Bを参照して論じられたように、要求114はリソース112への参照を含むURLを含んでもよく、リソース(たとえば、ウェブページ)は、実行されると、ダイアログプロセスの呼び出し時に情報をダイアログプロセスに提供する情報および命令、たとえば、スクリプトを含む。図3Cは、命令348を含むリソース346を参照する要求344によって特定の子ノード状態におけるダイアログプロセス342をインスタンス化するための例示的なプロセス340のブロック図である。リソースに含まれる情報348は、特定の子ノード状態に達するまで別のノード状態にトラバースするためにダイアログプロセスの入力要求に応答して提供され得る複数の入力応答を含み得る。特定の子ノード状態が達成されると、サーバは、スクリプトによって命令されたとおりに、ユーザデバイスに特定の子ノード状態におけるダイアログプロセス342を提示させるデータを提供する。
Input Responses from Resource Instructions In some implementations, the
いくつかの実装形態では、情報348は、タスクの実行を自動化するランタイム環境用に書かれたスクリプトである。スクリプトは、スクリプト言語(たとえば、PerlまたはPython)を使用して書かれてもよい。たとえば、情報348は、ルートノード状態における新しいダイアログプロセスを生成することと、ダイアログプロセスの入力要求(たとえば、{Q1, Q2,...QN})に応答して、入力応答のセット(たとえば、{A1, A2,...ANN})をダイアログプロセスに提供することとを含む、実行可能タスクを含んでもよい。 In some implementations, information 348 is a script written for a runtime environment that automates the execution of tasks. Scripts may be written using a scripting language (eg, Perl or Python). For example, information 348 includes generating a new dialog process in the root node state and, in response to a dialog process's input requests (e.g., {Q1, Q2,...QN}), a set of input responses (e.g., {A1, A2,...ANN}) to the dialog process.
いくつかの実装形態では、ダイアログプロセスの各ノード状態に対して異なるURLが使用され、各要求344の情報348は、ダイアログプロセスにダイアログプロセスの特定の子ノード状態にトラバースさせる命令でカスタマイズされる。たとえば、特定の子ノード状態「M」に対する要求344は、情報348を含むリソースへのURL参照から生成されてもよく、情報348は、ダイアログプロセスにルートノード状態から特定の子ノード状態「M」にトラバースさせるスクリプトである。特定の子ノード状態「Q」に対する異なる要求344は、ダイアログプロセスにルートノード状態から特定の子ノード状態「Q」にトラバースさせる異なる情報を含む異なるリソースへの異なるURL参照から生成されてもよい。 In some implementations, a different URL is used for each node state of the dialog process, and the information 348 of each request 344 is customized with instructions that cause the dialog process to traverse to a particular child node state of the dialog process. For example, a request 344 for a particular child node state "M" may be generated from a URL reference to a resource containing information 348, where the information 348 is sent from the root node state to the dialog process for a particular child node state "M". This is a script to traverse. Different requests 344 for a particular child node state "Q" may be generated from different URL references to different resources containing different information that cause the dialog process to traverse from the root node state to the particular child node state "Q".
ノード状態の選択
ダイアログプロセスオーナーがダイアログプロセスを用いてユーザを特定のフィーチャに触れさせることを望むとき、ダイアログプロセスオーナーは、選択されると、ルートノード状態におけるダイアログプロセスをインスタンス化し、ダイアログプロセスにルートノード状態から特定の子ノード状態に自動的にトラバースさせるリンクを有するリソースを作成してもよい。
Choosing a Node State When a dialog process owner wants to use a dialog process to expose a user to a particular feature, the dialog process owner instantiates the dialog process in the root node state and routes the dialog process. Resources may be created that have links that automatically traverse from a node state to a particular child node state.
他の実装形態では、ダイアログプロセスの特定の子ノード状態に対する要求は、ユーザ検索履歴および/またはユーザデバイス108のユーザの閲覧履歴に部分的に基づく。たとえば、サーバは、たとえば、キーワードおよびトピックに基づいて現在のユーザの興味を決定するために、ユーザデバイスの現在のセッションデータを使用してもよい。たとえば、旅行代理店のウェブサイトは、ユーザがハワイへ旅行することに興味があると決定し、旅行代理店のチャットボットをインスタンス化するためのコンテンツアイテムをサービスしてもよい。しかしながら、ハワイに固有のチャットボット、たとえば、「ハワイ向けの特別旅行があります。これらについて知りたいですか?」におけるノード状態に到達するためにユーザが複数の応答を入力することを必要とする代わりに、チャットボットは、上記で説明されたプロセスのうちの1つ(または複数)を使用することによって、ルートノード状態においてインスタンス化され、この特定の子ノード状態に自動的にトラバースさせられる。例示するために、図1Aがチャットボットのためのインデックス内の情報を示し、所望の子ノード状態がN33であると仮定する。レコードは以下の形態であり得る。
In other implementations, the request for a particular child node state of a dialog process is based in part on user search history and/or browsing history of a user of
ユーザの興味がハワイへ国内旅行することであると決定されたとすると、ユーザは、ハワイへの国内旅行がユーザの現在の興味であることを示す興味ベクトルを有する可能性がある。したがって、チャットボットのすべての他のノードよりも高い関連度スコアを有するものとしてノードN33が選択され得る。関連度スコアは、ユーザの現在の興味ベクトルの単語に対する質問フィールドおよび応答パスフィールドの単語のコサイン類似度によってなど、任意の適切なスコアリングアルゴリズムによって決定され得る。したがって、チャットボット用に生成され、ユーザデバイスにサービスされるリンクは、リンクがユーザによって選択された場合にインスタンス化されると、チャットボットに、以下の質問に対する以下の応答を入力として消費させる。 If it is determined that the user's interest is to travel domestically to Hawaii, the user may have an interest vector that indicates that domestic travel to Hawaii is the user's current interest. Therefore, node N33 may be selected as having a higher relevance score than all other nodes of the chatbot. The relevance score may be determined by any suitable scoring algorithm, such as by the cosine similarity of the words in the question field and response path field to the words in the user's current interest vector. Thus, a link generated for a chatbot and serviced to a user device, when instantiated when the link is selected by a user, causes the chatbot to consume as input the following responses to the following questions:
次いで、ユーザが「予約する」、「国内」、および「ハワイ」の応答を入力する必要なしに、特定の子ノード状態におけるダイアログプロセスがユーザデバイスにおいて提示される。 A dialog process at the particular child node state is then presented at the user device without the user having to enter responses of "Reserve," "Domestic," and "Hawaii."
追加の実装形態の詳細
ここで論じられるシステムがユーザについての個人情報を収集するか、または個人情報を利用し得る状況において、ユーザは、アプリケーションまたはフィーチャがユーザ情報(たとえば、ユーザのソーシャルネットワーク、ソーシャルアクションもしくはアクティビティ、職業、ユーザの選好、またはユーザの現在のロケーションについての情報)を収集するかどうかを制御する機会、あるいはユーザにより関連があり得るコンテンツを受信するかどうかおよび/またはそのコンテンツをどのように受信するかを制御する機会を提供され得る。加えて、一定のデータは、個人を特定できる情報が削除されるように、記憶されるかまたは使用される前に1つまたは複数の方法で取り扱われてもよい。たとえば、ユーザの識別情報は、ユーザについて個人を特定できる情報を割り出すことができないように取り扱われてもよく、またはユーザの地理的ロケーションは、ユーザの特定のロケーションを割り出すことができないように、ロケーション情報が取得される場合に(都市、ZIPコード、または州レベルなどに)一般化されてもよい。したがって、ユーザは、どのようにユーザについての情報が収集され、コンテンツサーバによって使用されるかを制御することができる。
ADDITIONAL IMPLEMENTATION DETAILS In situations where the systems discussed herein may collect personal information about users or make use of personal information, the user may request that the application or feature information about your actions or activities, your occupation, your preferences, or your current location), or whether and/or how you receive content that may be more relevant to you. You may be provided with the opportunity to control what you receive. Additionally, certain data may be handled in one or more ways before being stored or used so that personally identifiable information is removed. For example, a user's identity may be treated such that no personally identifiable information about the user can be determined, or a user's geographic location may be treated such that no personally identifiable information about the user can be determined; It may be generalized (such as to city, ZIP code, or state level) when the information is retrieved. Thus, the user can control how information about the user is collected and used by the content server.
本明細書で説明される主題および動作の実施形態は、デジタル電子回路において、または本明細書で開示される構造およびそれらの構造的等価物を含むコンピュータソフトウェア、ファームウェア、もしくはハードウェアにおいて、またはそれらのうちの1つもしくは複数の組合せにおいて実装され得る。本明細書で説明される主題の実施形態は、1つまたは複数のコンピュータプログラム、すなわち、データ処理装置による実行のために、またはデータ処理装置の動作を制御するためにコンピュータ記憶媒体上に符号化されたコンピュータプログラム命令の1つまたは複数のモジュールとして実装され得る。 Embodiments of the subject matter and operations described herein may be implemented in digital electronic circuits or in computer software, firmware, or hardware that includes the structures disclosed herein and structural equivalents thereof. may be implemented in one or more combinations of the following. Embodiments of the subject matter described herein are embodied in one or more computer programs, i.e., encoded on a computer storage medium for execution by or for controlling the operation of a data processing apparatus. may be implemented as one or more modules of computer program instructions.
コンピュータ記憶媒体は、コンピュータ可読記憶デバイス、コンピュータ可読記憶基板、ランダムもしくはシリアルアクセスメモリアレイもしくはデバイス、またはそれらのうちの1つもしくは複数の組合せであり得るか、またはそれらに含まれ得る。さらに、コンピュータ記憶媒体は伝播信号ではないが、コンピュータ記憶媒体は、人工的に生成された伝播信号において符号化されたコンピュータプログラム命令の送信元または宛先であり得る。コンピュータ記憶媒体はまた、1つまたは複数の別個の物理構成要素または媒体(たとえば、複数のCD、ディスク、または他の記憶デバイス)であり得るか、またはそれらに含まれ得る。 The computer storage medium can be or include a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more thereof. Additionally, although a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination for computer program instructions encoded in an artificially generated propagated signal. Computer storage media can also be or included in one or more separate physical components or media (eg, multiple CDs, disks, or other storage devices).
本明細書で説明される動作は、1つまたは複数のコンピュータ可読記憶デバイス上に記憶されたデータまたは他の送信元から受信されたデータに対してデータ処理装置によって実施される動作として実装され得る。 The operations described herein may be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources. .
「データ処理装置」という用語は、例として、プログラマブルプロセッサ、コンピュータ、システムオンチップ、または上記のうちの複数もしくはそれらの組合せを含む、データを処理するためのすべての種類の装置、デバイス、および機械を包含する。装置は、専用論理回路、たとえば、FPGA(フィールドプログラマブルゲートアレイ)またはASIC(特定用途向け集積回路)を含むことができる。装置はまた、ハードウェアに加えて、当該のコンピュータプログラム用の実行環境を作成するコード、たとえば、プロセッサファームウェア、プロトコルスタック、データベース管理システム、オペレーティングシステム、クロスプラットフォームランタイム環境、仮想マシン、またはそれらのうちの1つもしくは複数の組合せを構成するコードを含むことができる。装置および実行環境は、ウェブサービス、分散コンピューティングインフラストラクチャおよびグリッドコンピューティングインフラストラクチャなどの、様々な異なるコンピューティングモデルインフラストラクチャを実現することができる。 The term "data processing apparatus" refers to all types of apparatus, devices, and machines for processing data, including, by way of example, a programmable processor, a computer, a system on a chip, or more than one or a combination of the above. includes. The device may include special purpose logic circuitry, such as an FPGA (Field Programmable Gate Array) or an ASIC (Application Specific Integrated Circuit). In addition to hardware, the device also includes code that creates an execution environment for the computer program in question, such as processor firmware, protocol stacks, database management systems, operating systems, cross-platform runtime environments, virtual machines, or any of the above. may include codes constituting one or more combinations of. The devices and execution environments can implement a variety of different computing model infrastructures, such as web services, distributed computing infrastructures, and grid computing infrastructures.
コンピュータプログラム(プログラム、ソフトウェア、ソフトウェアアプリケーション、スクリプト、またはコードとしても知られている)は、コンパイラ型言語またはインタープリタ型言語、宣言型言語または手続き型言語を含む任意の形態のプログラミング言語で書かれ得、スタンドアロンプログラムとして、またはモジュール、構成要素、サブルーチン、オブジェクト、もしくはコンピューティング環境において使用するのに適した他のユニットとしてを含む任意の形態で展開され得る。コンピュータプログラムは、ファイルシステム内のファイルに対応し得るが、そうである必要はない。プログラムは、他のプログラムまたはデータ(たとえば、マークアップ言語文書に記憶された1つまたは複数のスクリプト)を保持するファイルの一部分に、当該のプログラムに専用の単一のファイルに、または複数の協調ファイル(たとえば、1つまたは複数のモジュール、サブプログラム、またはコードの部分を記憶するファイル)に記憶され得る。コンピュータプログラムは、1つのコンピュータ上で、または1つの場所に配置されるか、もしくは複数の場所にわたって分散され、通信ネットワークによって相互接続される複数のコンピュータ上で実行されるように展開され得る。 A computer program (also known as a program, software, software application, script, or code) may be written in any form of programming language, including compiled or interpreted languages, declarative languages, or procedural languages. may be deployed in any form, including as a stand-alone program, or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program can correspond to files within a file system, but does not need to. A program may be a portion of a file that holds other programs or data (for example, one or more scripts stored in a markup language document), a single file dedicated to that program, or multiple cooperating It may be stored in a file (eg, a file that stores one or more modules, subprograms, or portions of code). A computer program may be deployed to run on one computer or on multiple computers located at one location or distributed across multiple locations and interconnected by a communications network.
本明細書で説明されるプロセスおよび論理フローは、入力データに対して動作し、出力を生成することによってアクションを実施するために1つまたは複数のコンピュータプログラムを実行する、1つまたは複数のプログラマブルプロセッサによって実施され得る。プロセスおよび論理フローはまた、専用論理回路、たとえば、FPGA(フィールドプログラマブルゲートアレイ)またはASIC(特定用途向け集積回路)によって実施され得、装置はまた、それらとして実装され得る。 The processes and logic flows described herein may include one or more programmable computer programs that execute one or more computer programs to perform actions by operating on input data and producing output. It may be implemented by a processor. The processes and logic flows may also be implemented by dedicated logic circuits, such as FPGAs (field programmable gate arrays) or ASICs (application specific integrated circuits), and the apparatus may also be implemented as such.
コンピュータプログラムの実行に適したプロセッサは、例として、汎用マイクロプロセッサと専用マイクロプロセッサの両方、および任意の種類のデジタルコンピュータの任意の1つまたは複数のプロセッサを含む。一般に、プロセッサは、読取り専用メモリもしくはランダムアクセスメモリまたは両方から命令およびデータを受信する。コンピュータの必須要素は、命令に従ってアクションを実施するためのプロセッサ、ならびに命令およびデータを記憶するための1つまたは複数のメモリデバイスである。一般に、コンピュータはまた、データを記憶するための1つまたは複数の大容量記憶デバイス、たとえば、磁気ディスク、光磁気ディスク、または光ディスクを含むか、あるいはそれらからデータを受信するかもしくはそれらにデータを転送するかまたはその両方を行うように動作可能に結合される。しかしながら、コンピュータはそのようなデバイスを有する必要はない。さらに、コンピュータは、別のデバイス、たとえば、ほんの数例を挙げると、モバイル電話、携帯情報端末(PDA)、モバイルオーディオもしくはビデオプレーヤ、ゲームコンソール、全地球測位システム(GPS)受信機、またはポータブル記憶デバイス(たとえば、ユニバーサルシリアルバス(USB)フラッシュドライブ)に埋め込まれ得る。コンピュータプログラム命令およびデータを記憶するのに適したデバイスは、例として、半導体メモリデバイス、たとえば、EPROM、EEPROM、およびフラッシュメモリデバイスと、磁気ディスク、たとえば、内部ハードディスクまたはリムーバブルディスクと、光磁気ディスクと、CD ROMディスクおよびDVD-ROMディスクとを含む、すべての形態の不揮発性メモリ、媒体およびメモリデバイスを含む。プロセッサおよびメモリは、専用論理回路によって補完されるか、またはその中に組み込まれ得る。 Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor receives instructions and data from read-only memory and/or random access memory. The essential elements of a computer are a processor for performing actions according to instructions, and one or more memory devices for storing instructions and data. Generally, a computer also includes one or more mass storage devices for storing data, such as magnetic disks, magneto-optical disks, or optical disks, or receives data from or transfers data to them. operably coupled to transfer or both. However, a computer does not need to have such a device. Additionally, the computer may be connected to another device, such as a mobile phone, personal digital assistant (PDA), mobile audio or video player, game console, Global Positioning System (GPS) receiver, or portable storage device, to name just a few. It may be embedded in a device (eg, a Universal Serial Bus (USB) flash drive). Devices suitable for storing computer program instructions and data include, by way of example, semiconductor memory devices such as EPROM, EEPROM and flash memory devices, magnetic disks such as internal hard disks or removable disks, magneto-optical disks and , including all forms of non-volatile memory, media and memory devices, including CD ROM discs and DVD-ROM discs. The processor and memory may be supplemented by or incorporated within dedicated logic circuitry.
ユーザとの対話を提供するために、本明細書で説明される主題の実施形態は、情報をユーザに表示するためのディスプレイデバイス、たとえば、CRT(陰極線管)モニタまたはLCD(液晶ディスプレイ)モニタと、ユーザが入力をコンピュータに提供することができるキーボードおよびポインティングデバイス、たとえば、マウスまたはトラックボールとを有するコンピュータ上で実装され得る。ユーザとの対話を提供するために、他の種類のデバイスも使用され得、たとえば、ユーザに提供されるフィードバックは、任意の形態の感覚フィードバック、たとえば、視覚フィードバック、聴覚フィードバック、または触覚フィードバックとすることができ、ユーザからの入力は、音響入力、音声入力、または触覚入力を含む任意の形態で受信され得る。加えて、コンピュータは、ユーザによって使用されるデバイスに文書を送信し、そのデバイスから文書を受信することによって、たとえば、ユーザのユーザデバイス上のウェブブラウザから受信された要求に応答して、そのウェブブラウザにウェブページを送信することによって、ユーザと対話することができる。 To provide user interaction, embodiments of the subject matter described herein may include a display device, such as a CRT (cathode ray tube) monitor or an LCD (liquid crystal display) monitor, for displaying information to the user. , may be implemented on a computer with a keyboard and pointing device, such as a mouse or trackball, that allow a user to provide input to the computer. Other types of devices may also be used to provide interaction with the user, for example, the feedback provided to the user may be any form of sensory feedback, such as visual feedback, auditory feedback, or tactile feedback. Input from the user may be received in any form, including acoustic, audio, or tactile input. In addition, the computer can send documents to and receive documents from the device used by the user, e.g., in response to requests received from a web browser on the user's user device. You can interact with the user by sending a web page to the browser.
本明細書で説明される主題の実施形態は、たとえば、データサーバとしてのバックエンド構成要素を含むコンピューティングシステム、またはミドルウェア構成要素、たとえば、アプリケーションサーバを含むコンピューティングシステム、またはフロントエンド構成要素、たとえば、ユーザが本明細書で説明される主題の一実装形態と対話することができるグラフィカルユーザインターフェースもしくはウェブブラウザを有するユーザコンピュータを含むコンピューティングシステム、または1つもしくは複数のそのようなバックエンド構成要素、ミドルウェア構成要素、もしくはフロントエンド構成要素の任意の組合せを含むコンピューティングシステムにおいて実装され得る。システムの構成要素は、任意の形態または媒体のデジタルデータ通信、たとえば、通信ネットワークによって相互接続され得る。通信ネットワークの例は、ローカルエリアネットワーク(「LAN」)およびワイドエリアネットワーク(「WAN」)、インターネットワーク(たとえば、インターネット)、ならびにピアツーピアネットワーク(たとえば、アドホックピアツーピアネットワーク)を含む。 Embodiments of the subject matter described herein are applicable to computing systems that include back-end components, e.g., data servers, or middleware components, e.g., application servers, or front-end components, For example, a computing system that includes a user computer having a graphical user interface or web browser that allows the user to interact with an implementation of the subject matter described herein, or one or more such back-end configurations. may be implemented in a computing system including any combination of elements, middleware components, or front-end components. The components of the system may be interconnected by any form or medium of digital data communication, such as a communication network. Examples of communication networks include local area networks (“LANs”) and wide area networks (“WANs”), internetworks (eg, the Internet), and peer-to-peer networks (eg, ad hoc peer-to-peer networks).
コンピューティングシステムは、ユーザおよびサーバを含むことができる。ユーザおよびサーバは、一般に互いから離れており、典型的には通信ネットワークを通じて対話する。ユーザとサーバの関係は、それぞれのコンピュータ上で動作し、互いとのユーザ-サーバ関係を有するコンピュータプログラムによって生じる。いくつかの実施形態では、サーバは、(たとえば、データをユーザデバイスに表示し、ユーザデバイスと対話するユーザからのユーザ入力を受信する目的で)データ(たとえば、HTMLページ)をユーザデバイスに送信する。ユーザデバイスにおいて生成されたデータ(たとえば、ユーザ対話の結果)は、サーバにおいてユーザデバイスから受信され得る。 A computing system may include users and servers. Users and servers are generally remote from each other and typically interact through a communications network. The user and server relationship is created by computer programs running on their respective computers and having a user-server relationship with each other. In some embodiments, the server sends data (e.g., an HTML page) to the user device (e.g., for the purpose of displaying the data on the user device and receiving user input from the user interacting with the user device). . Data generated at a user device (eg, results of user interaction) may be received from the user device at a server.
本明細書は多くの特定の実装形態の詳細を含むが、これらは、特許請求され得るものの任意の特徴の範囲に対する制限として解釈されるべきではなく、むしろ特定の実施形態に固有の特徴の説明として解釈されるべきである。別個の実施形態の文脈において本明細書で説明される一定の特徴はまた、単一の実施形態において組み合わせて実装され得る。逆に、単一の実施形態の文脈において説明される様々な特徴はまた、複数の実施形態において別々にまたは任意の適切な副組合せで実装され得る。さらに、特徴は一定の組合せで機能するものとして上記で説明され、最初はそのように特許請求されることさえあるが、特許請求される組合せからの1つまたは複数の特徴は、場合によっては、その組合せから削除されることがあり、特許請求される組合せは、副組合せまたは副組合せの変形形態を対象としてもよい。 Although this specification contains many specific implementation details, these should not be construed as limitations on the scope of any features that may be claimed, but rather as illustrations of features specific to the particular embodiments. should be interpreted as Certain features that are described herein in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Furthermore, although features are described above as operating in a certain combination, and may even be initially claimed as such, one or more features from the claimed combination may in some cases be It may be deleted from the combination, and the claimed combination may be directed to subcombinations or variations of subcombinations.
同様に、動作は特定の順序で図面に示されているが、これは、そのような動作が示された特定の順序でまたは逐次的な順序で実施されること、または望ましい結果を達成するためにすべての例示された動作が実施されることを必要とするものとして理解されるべきではない。一定の状況では、マルチタスキングおよび並列処理が有利であり得る。さらに、上記で説明された実施形態における様々なシステム構成要素の分離は、すべての実施形態においてそのような分離を必要とするものとして理解されるべきではなく、説明されたプログラム構成要素およびシステムは、一般に、単一のソフトウェア製品に一緒に統合されるか、または複数のソフトウェア製品にパッケージされ得ることが理解されるべきである。 Similarly, although acts are shown in the drawings in a particular order, this does not mean that such acts may be performed in the particular order shown or in sequential order or to achieve a desired result. It should not be understood as requiring that all illustrated operations be performed. Multitasking and parallel processing may be advantageous in certain situations. Furthermore, the separation of various system components in the embodiments described above is not to be understood as requiring such separation in all embodiments, and that the program components and systems described are , generally, may be integrated together into a single software product or packaged into multiple software products.
このようにして、主題の特定の実施形態について説明した。他の実施形態は、以下の特許請求の範囲の範囲内にある。場合によっては、特許請求の範囲において列挙されるアクションは、異なる順序で実施され、依然として望ましい結果を達成することができる。加えて、添付の図に示されるプロセスは、望ましい結果を達成するために、示された特定の順序または逐次的な順序を必ずしも必要としない。一定の実装形態では、マルチタスキングおよび並列処理が有利であり得る。 Thus, specific embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve the desired result. Additionally, the processes depicted in the accompanying figures do not necessarily require the particular order shown or sequential order to achieve desired results. In certain implementations, multitasking and parallel processing may be advantageous.
100 環境
102 コンピュータネットワーク、ネットワーク
104 サーバコンピュータ、サーバ
106 ダイアログプロセス
106a ダイアログプロセス
107 ユーザ環境
108 ユーザデバイス
110 ダイアログプロセスインデックス
112 リソース
114 リンク、要求命令
200 プロセス
300 プロセス
302 特定の子ノード状態
304 要求、URL
306 サーバ
308 ダイアログプロセス
310 入力応答のセット、テキスト表示および/またはグラフ表示
320 プロセス
322 ダイアログプロセス
324 要求
326 ダイアログプロセスインデックス
328 サーバ
330 入力応答のセット
332 ダイアログプロセス
340 プロセス
342 ダイアログプロセス
344 要求
346 リソース
348 命令、情報
100 Environment
102 Computer networks, networks
104 server computer, server
106 Dialog Process
106a Dialog process
107 User environment
108 User device
110 Dialog process index
112 Resources
114 Link, request command
200 processes
300 processes
302 Specific child node state
304 request, URL
306 server
308 Dialog Process
310 Set of input responses, textual and/or graphical display
320 processes
322 Dialog Process
324 request
326 Dialog Process Index
328 server
330 Set of input responses
332 Dialog Process
340 processes
342 Dialog Process
344 request
346 resources
348 Instructions, information
Claims (13)
ダイアログプロセスについてのダイアログマップを自動的に生成するステップであって、
前記ダイアログプロセスは、複数のノード状態を定義し、
前記ノード状態は、ルートノード状態および子ノード状態を含み、
各子ノード状態は、他の子ノード状態または前記ルートノード状態のうちの少なくとも１つから下り、
前記ダイアログマップは、前記ダイアログプロセスの階層を記述し、
前記階層は、前記ダイアログプロセス内の前記複数のノード状態の関係を表す、ステップと、
前記ダイアログマップを自動的に生成するステップに続き、
サーバコンピュータにおいて、ユーザのユーザデバイスから、前記ダイアログプロセスの前記子ノード状態の特定の子ノード状態を指定しインデックスのインデックスキー値を含む要求を受信するステップと、
前記要求を受信したことに応答して、
前記サーバコンピュータによって、前記ルートノード状態において前記ダイアログプロセスをインスタンス化するステップと、
前記ダイアログマップに基づいて、前記ルートノード状態から前記特定の子ノード状態へ自動的にトラバースするステップであって、
前記特定の子ノード状態へトラバースする前に、前記子ノード状態の中間子ノード状態に到達するために前記ユーザデバイスの前記ユーザから前記要求以外にいかなるユーザ入力も必要とすることなく、前記中間子ノード状態へトラバースすることであって、前記特定の子ノード状態は、前記中間子ノード状態から下りる、ことと、
前記特定の子ノード状態に到達するために、前記ユーザデバイスの前記ユーザから前記要求以外にいかなるユーザ入力も必要とせずに、前記中間子ノード状態から前記特定の子ノード状態へトラバースすることと、を含む、
前記ダイアログマップに基づいて、前記ルートノード状態から前記特定の子ノード状態へ自動的にトラバースするステップと、
前記サーバコンピュータによって、前記ユーザデバイスへ、前記ユーザへの提示のために、前記ユーザデバイスに前記特定の子ノード状態における前記ダイアログプロセスを提示させるデータを提示するステップと、
前記ダイアログマップに基づいて前記インデックスを生成するステップであって、
前記インデックスは、各インデックスエントリについて、
それぞれのインデックスキー値によってインデックス付けされた特定の子ノード状態エントリと、
前記ダイアログプロセスに前記ルートノード状態から前記特定の子ノード状態にトラバースさせる入力応答のセットと
を指定する、ステップとを含み、
前記ダイアログマップを自動的に生成するステップは、
前記ノード状態の各々に対する入力要求を解釈するため、および前記ダイアログプロセスに入力応答を提供するために仮想マシンを使用することを含み、
前記ダイアログマップに基づいて、前記ルートノード状態から前記特定の子ノード状態へ自動的にトラバースするステップは、前記ルートノード状態から前記特定の子ノード状態へ自動的にトラバースする際に、前記要求の前記インデックスキー値によってインデックス付けされた前記特定の子ノード状態エントリにアクセスし、前記インデックスから前記入力応答のセットを取り出し、前記ダイアログプロセスに前記入力応答のセットを提供すること
を含む、方法。 A method implemented by one or more processors, the method comprising:
automatically generating a dialog map for a dialog process, the step of:
The dialog process defines multiple node states;
The node states include a root node state and a child node state,
Each child node state descends from at least one of the other child node states or the root node state;
the dialog map describes a hierarchy of the dialog processes;
the hierarchy represents a relationship between the plurality of node states within the dialog process;
Following the step of automatically generating the dialog map,
receiving, at a server computer, a request from a user device of a user specifying a particular child node state of the child node state of the dialog process and including an index key value of an index ;
In response to receiving said request,
instantiating the dialog process in the root node state by the server computer;
automatically traversing from the root node state to the particular child node state based on the dialog map,
before traversing to said particular child node state, said intermediate child node state without requiring any user input other than said request from said user of said user device to reach said intermediate child node state of said child node state. traversing to, the particular child node state descending from the intermediate child node state;
traversing from the intermediate child node state to the particular child node state without requiring any user input other than the request from the user of the user device to reach the particular child node state; include,
automatically traversing from the root node state to the particular child node state based on the dialog map;
presenting, by the server computer, to the user device data that causes the user device to present the dialog process in the particular child node state for presentation to the user;
generating the index based on the dialog map ,
The index includes, for each index entry,
a specific child node state entry indexed by its respective index key value, and
a set of input responses that cause the dialog process to traverse from the root node state to the particular child node state;
specifying a step,
The step of automatically generating the dialog map includes:
using a virtual machine to interpret input requests for each of the node states and to provide input responses to the dialog process;
automatically traversing from the root node state to the particular child node state based on the dialog map, the step of automatically traversing from the root node state to the particular child node state includes: accessing the particular child node state entry indexed by the index key value, retrieving the set of input responses from the index, and providing the set of input responses to the dialog process.
前記ダイアログプロセスに、前記要求において指定される前記特定の子ノード状態に基づいて選択される特定の入力応答を提供することを含む、
請求項１に記載の方法。 Traversing from the intermediate child node state to the particular child node state comprises:
providing the dialog process with a particular input response selected based on the particular child node state specified in the request;
The method according to claim 1.
前記データ処理装置によって実行可能であり、そのような実行時に、前記データ処理装置に、
ダイアログプロセスについてのダイアログマップを自動的に生成するステップであって、
前記ダイアログプロセスは、複数のノード状態を定義し、
前記ノード状態は、ルートノード状態および子ノード状態を含み、
各子ノード状態は、他の子ノード状態または前記ルートノード状態のうちの少なくとも１つから下り、
前記ダイアログマップは、前記ダイアログプロセスの階層を記述し、
前記階層は、前記ダイアログプロセス内の前記複数のノード状態の関係を表す、
ステップと、
前記ダイアログマップを自動的に生成するステップに続き、
ユーザのユーザデバイスから、前記ダイアログプロセスの前記子ノード状態の特定の子ノード状態を指定しインデックスのインデックスキー値を含む要求を受信するステップと、
前記要求を受信したことに応答して、
前記ルートノード状態において前記ダイアログプロセスをインスタンス化するステップと、
前記ダイアログマップに基づいて、前記ルートノード状態から前記特定の子ノード状態へ自動的にトラバースするステップであって、
前記特定の子ノード状態へトラバースする前に、前記子ノード状態の中間子ノード状態に到達するために前記ユーザデバイスの前記ユーザから前記要求以外にいかなるユーザ入力も必要とすることなく、前記中間子ノード状態へトラバースすることであって、前記特定の子ノード状態は、前記中間子ノード状態から下りる、ことと、
前記特定の子ノード状態に到達するために、前記ユーザデバイスの前記ユーザから前記要求以外にいかなるユーザ入力も必要とせずに、前記中間子ノード状態から前記特定の子ノード状態へトラバースすることと、を含む、
前記ダイアログマップに基づいて、前記ルートノード状態から前記特定の子ノード状態へ自動的にトラバースするステップと、
前記ユーザデバイスへ、前記ユーザへの提示のために、前記ユーザデバイスに前記特定の子ノード状態における前記ダイアログプロセスを提示させるデータを提示するステップと、
前記ダイアログマップに基づいて前記インデックスを生成するステップであって、
前記インデックスは、各インデックスエントリについて、
それぞれのインデックスキー値によってインデックス付けされた特定の子ノード状態エントリと、
前記ダイアログプロセスに前記ルートノード状態から前記特定の子ノード状態にトラバースさせる入力応答のセットと
を指定する、ステップと、
を含み、
前記ダイアログマップを自動的に生成するステップは、
前記ノード状態の各々に対する入力要求を解釈するため、および前記ダイアログプロセスに入力応答を提供するために仮想マシンを使用することを含み、
前記ダイアログマップに基づいて、前記ルートノード状態から前記特定の子ノード状態へ自動的にトラバースするステップは、前記ルートノード状態から前記特定の子ノード状態へ自動的にトラバースする際に、前記要求の前記インデックスキー値によってインデックス付けされた前記特定の子ノード状態エントリにアクセスし、前記インデックスから前記入力応答のセットを取り出し、前記ダイアログプロセスに前記入力応答のセットを提供することを含む動作を実施させる命令を記憶するコンピュータ可読媒体と
を備えるシステム。 a data processing device;
executable by the data processing device, and upon such execution causing the data processing device to:
automatically generating a dialog map for a dialog process, the step of:
The dialog process defines multiple node states;
The node states include a root node state and a child node state,
Each child node state descends from at least one of the other child node states or the root node state;
the dialog map describes a hierarchy of the dialog processes;
the hierarchy represents a relationship between the plurality of node states within the dialog process;
step and
Following the step of automatically generating the dialog map,
receiving a request from a user device of a user specifying a particular child node state of the child node state of the dialog process and including an index key value of an index ;
In response to receiving said request,
instantiating the dialog process in the root node state;
automatically traversing from the root node state to the particular child node state based on the dialog map,
before traversing to said particular child node state, said intermediate child node state without requiring any user input other than said request from said user of said user device to reach said intermediate child node state of said child node state. traversing to, the particular child node state descending from the intermediate child node state;
traversing from the intermediate child node state to the particular child node state without requiring any user input other than the request from the user of the user device to reach the particular child node state; include,
automatically traversing from the root node state to the particular child node state based on the dialog map;
presenting to the user device data that causes the user device to present the dialog process in the particular child node state for presentation to the user;
generating the index based on the dialog map ,
The index includes, for each index entry,
a specific child node state entry indexed by its respective index key value, and
a set of input responses that cause the dialog process to traverse from the root node state to the particular child node state;
Specify the steps and
including;
The step of automatically generating the dialog map includes:
using a virtual machine to interpret input requests for each of the node states and to provide input responses to the dialog process;
automatically traversing from the root node state to the particular child node state based on the dialog map, the step of automatically traversing from the root node state to the particular child node state includes: causing operations to be performed that include accessing the particular child node state entry indexed by the index key value, retrieving the set of input responses from the index, and providing the set of input responses to the dialog process. a computer-readable medium storing instructions.
前記ダイアログプロセスに、前記要求において指定される前記特定の子ノード状態に基づいて選択される特定の入力応答を提供することを含む、請求項７に記載のシステム。 Traversing from the intermediate child node state to the particular child node state includes:
8. The system of claim 7, comprising providing the dialog process with a particular input response selected based on the particular child node state specified in the request.
ダイアログプロセスについてのダイアログマップを自動的に生成するステップであって、
前記ダイアログマップは、前記ダイアログプロセスの階層を記述し、
前記ダイアログプロセスは、複数のノード状態を定義し、
前記ノード状態は、ルートノード状態および子ノード状態を含み、
各子ノード状態は、他の子ノード状態または前記ルートノード状態のうちの少なくとも１つから下り、
前記ダイアログマップは、前記ダイアログプロセスの階層を記述し、
前記階層は、前記ダイアログプロセス内の前記複数のノード状態の関係を表す、
ステップと、
前記ダイアログマップを自動的に生成するステップに続き、
サーバコンピュータにおいて、ユーザのユーザデバイスから、前記ダイアログプロセスの前記子ノード状態の特定の子ノード状態を指定しインデックスのインデックスキー値を含む要求を受信するステップと、
前記要求を受信したことに応答して、
前記サーバコンピュータによって、前記ルートノード状態において前記ダイアログプロセスをインスタンス化するステップと、
前記ダイアログマップに基づいて、前記ルートノード状態から前記特定の子ノード状態へ自動的にトラバースするステップであって、
前記特定の子ノード状態へトラバースする前に、前記子ノード状態の中間子ノード状態に到達するために前記ユーザデバイスの前記ユーザから前記要求以外にいかなるユーザ入力も必要とすることなく、前記中間子ノード状態へトラバースすることであって、前記特定の子ノード状態は、前記中間子ノード状態から下りる、ことと、
前記特定の子ノード状態に到達するために、前記ユーザデバイスの前記ユーザから前記要求以外にいかなるユーザ入力も必要とせずに、前記中間子ノード状態から前記特定の子ノード状態へトラバースすることと、を含む、
前記ダイアログマップに基づいて、前記ルートノード状態から前記特定の子ノード状態へ自動的にトラバースするステップと、
前記サーバコンピュータによって、前記ユーザデバイスへ、前記ユーザへの提示のために、前記ユーザデバイスに前記特定の子ノード状態における前記ダイアログプロセスを提示させるデータを提示するステップと、
前記ダイアログマップに基づいて前記インデックスを生成するステップであって、
前記インデックスは、各インデックスエントリについて、
それぞれのインデックスキー値によってインデックス付けされた特定の子ノード状態エントリと、
前記ダイアログプロセスに前記ルートノード状態から前記特定の子ノード状態にトラバースさせる入力応答のセットと
を指定する、ステップとを含み、
前記ダイアログマップを自動的に生成するステップは、
前記ノード状態の各々に対する入力要求を解釈するため、および前記ダイアログプロセスに入力応答を提供するために仮想マシンを使用することを含み、
前記ダイアログマップに基づいて、前記ルートノード状態から前記特定の子ノード状態へ自動的にトラバースするステップは、前記ルートノード状態から前記特定の子ノード状態へ自動的にトラバースする際に、前記要求の前記インデックスキー値によってインデックス付けされた前記特定の子ノード状態エントリにアクセスし、前記インデックスから前記入力応答のセットを取り出し、前記ダイアログプロセスに前記入力応答のセットを提供する、こと
を含む動作を実施させる命令を記憶するコンピュータ記憶媒体。 executable by a data processing device, and upon such execution causing said data processing device to:
automatically generating a dialog map for a dialog process, the step of:
the dialog map describes a hierarchy of the dialog processes;
The dialog process defines multiple node states;
The node states include a root node state and a child node state,
Each child node state descends from at least one of the other child node states or the root node state;
the dialog map describes a hierarchy of the dialog processes;
the hierarchy represents a relationship between the plurality of node states within the dialog process;
step and
Following the step of automatically generating the dialog map,
receiving, at a server computer, a request from a user device of a user specifying a particular child node state of the child node state of the dialog process and including an index key value of an index ;
In response to receiving said request,
instantiating the dialog process in the root node state by the server computer;
automatically traversing from the root node state to the particular child node state based on the dialog map,
before traversing to said particular child node state, said intermediate child node state without requiring any user input other than said request from said user of said user device to reach said intermediate child node state of said child node state. traversing to, the particular child node state descending from the intermediate child node state;
traversing from the intermediate child node state to the particular child node state without requiring any user input other than the request from the user of the user device to reach the particular child node state; include,
automatically traversing from the root node state to the particular child node state based on the dialog map;
presenting, by the server computer, to the user device data that causes the user device to present the dialog process in the particular child node state for presentation to the user;
generating the index based on the dialog map ,
The index includes, for each index entry,
a specific child node state entry indexed by its respective index key value, and
a set of input responses that cause the dialog process to traverse from the root node state to the particular child node state;
specifying a step,
The step of automatically generating the dialog map includes:
using a virtual machine to interpret input requests for each of the node states and to provide input responses to the dialog process;
automatically traversing from the root node state to the particular child node state based on the dialog map, the step of automatically traversing from the root node state to the particular child node state includes: Performing acts comprising accessing the particular child node state entry indexed by the index key value, retrieving the set of input responses from the index, and providing the set of input responses to the dialog process. A computer storage medium that stores instructions to do the following:
Applications Claiming Priority (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/497,843 | 2017-04-26 | ||
US15/497,843 US10666581B2 (en) | 2017-04-26 | 2017-04-26 | Instantiation of dialog process at a particular child node state |
JP2019558465A JP7069213B2 (en) | 2017-04-26 | 2017-12-20 | Instantiation of dialog process in specific child node state |
PCT/US2017/067694 WO2018200037A1 (en) | 2017-04-26 | 2017-12-20 | Instantiation of dialog process at a particular child node state |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2019558465A Division JP7069213B2 (en) | 2017-04-26 | 2017-12-20 | Instantiation of dialog process in specific child node state |
Publications (2)
Publication Number | Publication Date |
---|---|
JP2022062097A JP2022062097A (en) | 2022-04-19 |
JP7448573B2 true JP7448573B2 (en) | 2024-03-12 |
Family
ID=61003382
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2019558465A Active JP7069213B2 (en) | 2017-04-26 | 2017-12-20 | Instantiation of dialog process in specific child node state |
JP2022007951A Active JP7448573B2 (en) | 2017-04-26 | 2022-01-21 | Instantiating a dialog process in a specific child node state |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2019558465A Active JP7069213B2 (en) | 2017-04-26 | 2017-12-20 | Instantiation of dialog process in specific child node state |
Country Status (5)
Country | Link |
---|---|
US (2) | US10666581B2 (en) |
EP (1) | EP3602329B1 (en) |
JP (2) | JP7069213B2 (en) |
CN (2) | CN114880445A (en) |
WO (1) | WO2018200037A1 (en) |
Families Citing this family (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20180341870A1 (en) * | 2017-05-23 | 2018-11-29 | International Business Machines Corporation | Managing Indecisive Responses During a Decision Tree Based User Dialog Session |
US10374982B2 (en) * | 2017-06-30 | 2019-08-06 | Microsoft Technology Licensing, Llc | Response retrieval using communication session vectors |
US10691764B2 (en) * | 2017-10-23 | 2020-06-23 | International Business Machines Corporation | Search engine optimization techniques |
US10754885B2 (en) * | 2017-11-27 | 2020-08-25 | Baidu Usa Llc | System and method for visually searching and debugging conversational agents of electronic devices |
US10666583B2 (en) * | 2017-11-27 | 2020-05-26 | Baidu Usa Llc | System and method for visually understanding and programming conversational agents of electronic devices |
US10810322B2 (en) * | 2017-12-05 | 2020-10-20 | Microsoft Technology Licensing, Llc | Sharing user information with and between bots |
US20190340527A1 (en) * | 2018-05-07 | 2019-11-07 | Microsoft Technology Licensing, Llc | Graphical user interface features for updating a conversational bot |
EP3576084B1 (en) * | 2018-05-29 | 2020-09-30 | Christoph Neumann | Efficient dialog design |
US11258730B2 (en) * | 2019-03-06 | 2022-02-22 | Go Daddy Operating Company, LLC | Generating a plurality of selectable responses based on a database indexed by receiver devices storing responses to similar SMS messages |
US11521114B2 (en) | 2019-04-18 | 2022-12-06 | Microsoft Technology Licensing, Llc | Visualization of training dialogs for a conversational bot |
US11303749B1 (en) | 2020-10-06 | 2022-04-12 | Google Llc | Automatic navigation of an interactive voice response (IVR) tree on behalf of human user(s) |
US11429404B2 (en) | 2021-02-03 | 2022-08-30 | Oracle International Corporation | Framework for linearizing interviews while permitting user backtracking and provisionally storing answers for repopulating responses |
Citations (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP2002073887A (en) | 2000-08-31 | 2002-03-12 | Fuji Xerox Co Ltd | System and method of obtaining answer to question |
JP2015526799A (en) | 2012-06-29 | 2015-09-10 | インターナショナル・ビジネス・マシーンズ・コーポレーションＩｎｔｅｒｎａｔｉｏｎａｌ Ｂｕｓｉｎｅｓｓ Ｍａｃｈｉｎｅｓ Ｃｏｒｐｏｒａｔｉｏｎ | Extensions to the professional conversation builder |
Family Cites Families (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8612233B2 (en) * | 2011-01-05 | 2013-12-17 | International Business Machines Corporation | Expert conversation builder |
US9251287B2 (en) * | 2011-08-26 | 2016-02-02 | International Business Machines Corporation | Automatic detection of item lists within a web page |
US9237386B2 (en) * | 2012-08-31 | 2016-01-12 | Google Inc. | Aiding discovery of program content by providing deeplinks into most interesting moments via social media |
US9213544B2 (en) * | 2013-04-08 | 2015-12-15 | Vmware, Inc. | Desktop shadowing in a virtual desktop infrastructure environment |
US20150127631A1 (en) * | 2013-11-05 | 2015-05-07 | International Business Machines Corporation | Best available alternative dialog |
US9645707B1 (en) * | 2013-12-12 | 2017-05-09 | EMC IP Holding Company LLC | Alternative view-based navigation |
US9767794B2 (en) * | 2014-08-11 | 2017-09-19 | Nuance Communications, Inc. | Dialog flow management in hierarchical task dialogs |
US9647968B2 (en) * | 2015-03-25 | 2017-05-09 | Pypestream Inc | Systems and methods for invoking chatbots in a channel based communication system |
US10659403B2 (en) * | 2015-03-25 | 2020-05-19 | Pypestream, Inc. | Systems and methods for navigating nodes in channel based chatbots using natural language understanding |
US10049152B2 (en) * | 2015-09-24 | 2018-08-14 | International Business Machines Corporation | Generating natural language dialog using a questions corpus |
US11144964B2 (en) * | 2015-11-20 | 2021-10-12 | Voicemonk Inc. | System for assisting in marketing |
CN105630887B (en) * | 2015-12-18 | 2017-06-16 | 北京中科汇联科技股份有限公司 | Chinese question answering system |
CN105845137B (en) * | 2016-03-18 | 2019-08-23 | 中国科学院声学研究所 | A kind of speech dialog management system |
CN105787560B (en) * | 2016-03-18 | 2018-04-03 | 北京光年无限科技有限公司 | Dialogue data interaction processing method and device based on Recognition with Recurrent Neural Network |
CN106095833B (en) * | 2016-06-01 | 2019-04-16 | 竹间智能科技（上海）有限公司 | Human-computer dialogue content processing method |
US10560536B2 (en) * | 2016-08-24 | 2020-02-11 | International Business Machines Corporation | Simplifying user interactions with decision tree dialog managers |
CN106453044A (en) * | 2016-09-29 | 2017-02-22 | 珠海市魅族科技有限公司 | Method and device for displaying communication information |
US10216832B2 (en) * | 2016-12-19 | 2019-02-26 | Interactions Llc | Underspecification of intents in a natural language processing system |
US10755317B2 (en) * | 2017-03-11 | 2020-08-25 | International Business Machines Corporation | Managing a set of offers using a dialogue |
US20180341870A1 (en) * | 2017-05-23 | 2018-11-29 | International Business Machines Corporation | Managing Indecisive Responses During a Decision Tree Based User Dialog Session |
-
2017
- 2017-04-26 US US15/497,843 patent/US10666581B2/en active Active
- 2017-12-20 JP JP2019558465A patent/JP7069213B2/en active Active
- 2017-12-20 EP EP17832138.6A patent/EP3602329B1/en active Active
- 2017-12-20 WO PCT/US2017/067694 patent/WO2018200037A1/en active Search and Examination
-
2018
- 2018-02-01 CN CN202210427298.9A patent/CN114880445A/en active Pending
- 2018-02-01 CN CN201810101440.4A patent/CN108804488B/en active Active
-
2020
- 2020-05-22 US US16/881,760 patent/US11381530B2/en active Active
-
2022
- 2022-01-21 JP JP2022007951A patent/JP7448573B2/en active Active
Patent Citations (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP2002073887A (en) | 2000-08-31 | 2002-03-12 | Fuji Xerox Co Ltd | System and method of obtaining answer to question |
JP2015526799A (en) | 2012-06-29 | 2015-09-10 | インターナショナル・ビジネス・マシーンズ・コーポレーションＩｎｔｅｒｎａｔｉｏｎａｌ Ｂｕｓｉｎｅｓｓ Ｍａｃｈｉｎｅｓ Ｃｏｒｐｏｒａｔｉｏｎ | Extensions to the professional conversation builder |
Also Published As
Publication number | Publication date |
---|---|
CN108804488B (en) | 2022-05-10 |
US11381530B2 (en) | 2022-07-05 |
EP3602329B1 (en) | 2024-03-20 |
CN114880445A (en) | 2022-08-09 |
EP3602329A1 (en) | 2020-02-05 |
WO2018200037A1 (en) | 2018-11-01 |
JP7069213B2 (en) | 2022-05-17 |
US20180316630A1 (en) | 2018-11-01 |
US20200287852A1 (en) | 2020-09-10 |
JP2020518075A (en) | 2020-06-18 |
CN108804488A (en) | 2018-11-13 |
US10666581B2 (en) | 2020-05-26 |
JP2022062097A (en) | 2022-04-19 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
JP7448573B2 (en) | Instantiating a dialog process in a specific child node state | |
US10824658B2 (en) | Implicit dialog approach for creating conversational access to web content | |
US10915588B2 (en) | Implicit dialog approach operating a conversational access interface to web content | |
US20180054523A1 (en) | Method and system for context sensitive intelligent virtual agents | |
CN110321413A (en) | Session frame | |
CN105706083A (en) | Structured user graph to support querying and predictions | |
Arteaga et al. | Design of information system architecture for the recommendation of tourist sites in the city of Manta, Ecuador through a Chatbot | |
JP6968897B2 (en) | Establishing an audio-based network session with unregistered resources | |
US9449111B2 (en) | System and method for generating and accessing trails | |
US9536445B2 (en) | System and method for visually tracking a learned process | |
US8255380B2 (en) | System and method for ontology-based location of expertise | |
JP7436654B2 (en) | Identifying and issuing repeatable queries | |
CN114386435A (en) | Intelligent chat channel processor | |
JP6162134B2 (en) | Social page trigger | |
US20140122404A1 (en) | System and method for displaying a trail | |
US9292883B2 (en) | System and method for managing a trail | |
Upadhyaya et al. | Automatically composing services by mining process knowledge from the web | |
US20210109982A1 (en) | Identifying and storing relevant user content in a collection accessible to user in website subscribed to service | |
Ahmed et al. | An Architecture for Dynamic Conversational Agents for Citizen Participation and Ideation | |
JP2023508599A (en) | Conversational agent system, method and program | |
Firmenich et al. | A crowdsourced approach for concern-sensitive integration of information across the web | |
Ahirwar | Chatterbot: Technologies, tools and applications | |
JP7339310B2 (en) | Establishing audio-based network sessions with unregistered resources | |
Janapreethi et al. | College Enquiry Chatbot | |
AU2022203723A1 (en) | Optimizing questions to retain engagement |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
A521 | Request for written amendment filed |
Free format text: JAPANESE INTERMEDIATE CODE: A523Effective date: 20220218 |
|
A621 | Written request for application examination |
Free format text: JAPANESE INTERMEDIATE CODE: A621Effective date: 20220218 |
|
A131 | Notification of reasons for refusal |
Free format text: JAPANESE INTERMEDIATE CODE: A131Effective date: 20230320 |
|
A521 | Request for written amendment filed |
Free format text: JAPANESE INTERMEDIATE CODE: A523Effective date: 20230615 |
|
A131 | Notification of reasons for refusal |
Free format text: JAPANESE INTERMEDIATE CODE: A131Effective date: 20230911 |
|
A521 | Request for written amendment filed |
Free format text: JAPANESE INTERMEDIATE CODE: A523Effective date: 20231109 |
|
TRDD | Decision of grant or rejection written | ||
A01 | Written decision to grant a patent or to grant a registration (utility model) |
Free format text: JAPANESE INTERMEDIATE CODE: A01Effective date: 20240205 |
|
A61 | First payment of annual fees (during grant procedure) |
Free format text: JAPANESE INTERMEDIATE CODE: A61Effective date: 20240229 |
|
R150 | Certificate of patent or registration of utility model |
Ref document number: 7448573Country of ref document: JPFree format text: JAPANESE INTERMEDIATE CODE: R150 |
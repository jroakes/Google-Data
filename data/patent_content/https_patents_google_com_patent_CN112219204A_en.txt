CN112219204A - Context adaptive scanning - Google Patents
Context adaptive scanning Download PDFInfo
- Publication number
- CN112219204A CN112219204A CN201980008223.3A CN201980008223A CN112219204A CN 112219204 A CN112219204 A CN 112219204A CN 201980008223 A CN201980008223 A CN 201980008223A CN 112219204 A CN112219204 A CN 112219204A
- Authority
- CN
- China
- Prior art keywords
- digital component
- given digital
- priority
- current
- given
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/50—Monitoring users, programs or devices to maintain the integrity of platforms, e.g. of processors, firmware or operating systems
- G06F21/55—Detecting local intrusion or implementing counter-measures
- G06F21/56—Computer malware detection or handling, e.g. anti-virus arrangements
- G06F21/562—Static detection
- G06F21/563—Static detection by source code analysis
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N1/00—Scanning, transmission or reproduction of documents or the like, e.g. facsimile transmission; Details thereof
- H04N1/32—Circuits or arrangements for control or supervision between transmitter and receiver or between image input and image output device, e.g. between a still-image camera and its memory or between a still-image camera and a printer device
- H04N1/32609—Fault detection or counter-measures, e.g. original mis-positioned, shortage of paper
- H04N1/32614—Fault detection or counter-measures, e.g. original mis-positioned, shortage of paper related to a single-mode communication, e.g. at the transmitter or at the receiver
- H04N1/32619—Fault detection or counter-measures, e.g. original mis-positioned, shortage of paper related to a single-mode communication, e.g. at the transmitter or at the receiver with retransmission
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/50—Monitoring users, programs or devices to maintain the integrity of platforms, e.g. of processors, firmware or operating systems
- G06F21/55—Detecting local intrusion or implementing counter-measures
- G06F21/56—Computer malware detection or handling, e.g. anti-virus arrangements
- G06F21/562—Static detection
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N1/00—Scanning, transmission or reproduction of documents or the like, e.g. facsimile transmission; Details thereof
- H04N1/00912—Arrangements for controlling a still picture apparatus or components thereof not otherwise provided for
- H04N1/00954—Scheduling operations or managing resources
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/02—Protocols based on web technology, e.g. hypertext transfer protocol [HTTP]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N1/00—Scanning, transmission or reproduction of documents or the like, e.g. facsimile transmission; Details thereof
- H04N1/00795—Reading arrangements
- H04N1/00798—Circuits or arrangements for the control thereof, e.g. using a programmed control device or according to a measured quantity
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N1/00—Scanning, transmission or reproduction of documents or the like, e.g. facsimile transmission; Details thereof
- H04N1/00912—Arrangements for controlling a still picture apparatus or components thereof not otherwise provided for
- H04N1/00933—Timing control or synchronising
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N2201/00—Indexing scheme relating to scanning, transmission or reproduction of documents or the like, and to details thereof
- H04N2201/0077—Types of the still picture apparatus
- H04N2201/0081—Image reader
Abstract
Methods, systems, and apparatus, including computer programs encoded on a computer storage medium, for context adaptive scanning of digital components. In one aspect, a method comprises: selecting a given digital component from a plurality of digital components based on a current scan priority of the given digital component; scanning the given digital component, including determining a current state of the given digital component; determining a current context of the given digital component based on one or more of: (i) a current state of the given digital component, or (ii) a current scan index of the given digital component that specifies a number of times the given digital component has been scanned; determining an updated scanning priority for the given digital component based on a current context of the given digital component; and rescanning the given digital component according to the updated scan priority.
Description
Technical Field
This description relates to adaptive scanning techniques.
Background
A digital component (digital component) is a discrete unit of digital content or digital information that can be incorporated into a variety of electronic documents or applications. The digital component may be scanned to determine a state of the digital component, e.g., a compliance (compliance) state of the digital component. The compliance status of the digital component specifies whether the digital component complies with one or more policy criteria. For example, only if the network address (es) do not host malware may it be determined that the digital component comprising the active link that redirects the client device to a particular network address (or series of network addresses) meets certain policy criteria, which would otherwise result in an action that violates the policy criteria (e.g., by initiating a malicious script or set of operations that negatively impacts the performance of the client device).
Disclosure of Invention
This specification describes a system implemented as a computer program on one or more computers at one or more locations that performs context adaptive scanning, also known as scan scheduling, or simply scanning.
According to a first aspect, there is provided a method comprising selecting a given digital component from among a set of digital components. Each digital component in the set of digital components has a current scanning priority that defines a current priority for scanning the digital component. A given digital component is selected based on its current scan priority.
Scanning the given digital component includes determining a current state of the given digital component. The current state of the given digital component defines a current compliance status of the given digital component that specifies whether the given digital component currently complies with the policy guidelines. The current context of a given digital component is determined based on one or more of: (i) a current state of the given digital component, or (ii) a current scan index of the given digital component that specifies a number of times the given digital component has been scanned.
An updated scan priority for the given digital component is determined based on a current context of the given digital component. Rescanning the given digital component according to the updated scan priority.
In some embodiments, the current context of a given digital component is additionally based on one or more of: the number of times a given digital component has been transmitted for presentation with an electronic document at a user device, and with which electronic documents the given digital component is presented at the user device.
In some implementations, the given digital component specifies a landing page, and scanning the given digital component includes determining whether the landing page hosts malware.
In some implementations, the updated scan priority of a given digital component specifies a wait time until the next scan of the given digital component.
In some implementations, determining the updated scan priority for the given digital component based on the current context of the given digital component includes mapping the current context of the given digital component to data defining the updated scan priority for the given digital component using a mapping function. For each of a plurality of possible current contexts, a mapping function defines a mapping from the possible current context to data defining a corresponding scan priority.
In some embodiments, the data defining the updated scan priority for a given digital component includes a scaling factor (scaling factor). Determining an updated scan priority for the given digital component based on the current context of the given digital component further comprises: identifying a default scan priority for a given digital component; and determining an updated scan priority for the given digital component as a function of the default scan priority and the scaling factor for the given digital component.
In some implementations, the function of the default scan priority and the scaling factor for a given digital component includes a product of the default scan priority and the scaling factor for the given digital component.
In some implementations, a mapping function maps a current context of a given digital component to data defining an updated scan priority of the given digital component based on a frequency with which a state of the given digital component is predicted to change.
In some implementations, the frequency with which the state of a given digital component is predicted to change is determined by processing recorded data characterizing, for each of a plurality of particular digital components, when the particular digital component was scanned, the state of the particular digital component as it was scanned, and the context of the particular digital component as it was scanned.
In some implementations, the mapping function maps the current context of a given digital component to data defining an updated scan priority for the given digital component using a likelihood that the state of the given digital component will change before the given digital component is next scanned based on the current context of the given digital component.
In some embodiments, the mapping function is determined using a local transition probability distribution.
According to a second aspect, there is provided one or more non-transitory computer storage media storing instructions that, when executed by one or more computers, cause the one or more computers to perform operations comprising the operations to carry out the method of the first aspect.
According to a third aspect, there is provided a system comprising: one or more computers; and one or more storage devices communicatively coupled to the one or more computers, wherein the one or more storage devices store instructions that, when executed by the one or more computers, cause the one or more computers to perform operations comprising the operations to implement the method of the first aspect.
Particular embodiments of the subject matter described in this specification can be implemented to realize one or more of the following advantages.
The dynamic scanning techniques described in this specification can scan digital components more efficiently than some conventional scanning systems (e.g., conventional systems that simply scan on a fixed schedule). That is, the systems described in this specification can dynamically schedule and perform scans in a manner that enables changes in the state (e.g., compliance conditions) of a digital component to be detected at least (e.g., on average) as fast as some conventional systems, while performing fewer total scans than conventional systems. Thus, the disclosed scanning techniques enable the system described in this specification to consume fewer resources (e.g., computing resources) to perform a scan than conventional systems (e.g., scanning only according to a fixed schedule), while detecting a change in state of a digital component at least as fast as conventional systems.
As described in more detail throughout this document, the disclosed scanning techniques take into account contextual information to determine when a digital component or another item should be scanned and/or rescanned. As such, the techniques described herein do not require wasted resources to perform a scan of a particular digital component or other item unless the context information indicates that a scan is required. Resources saved by reducing the number of scans required can be allocated to other tasks, thereby reducing the total number of processing resources, which results in a more efficient system. Moreover, the techniques described herein also prevent the distribution of malicious digital components that can negatively impact the performance of a client device that would otherwise receive the malicious digital components, such that the use of the techniques described herein also improves the performance of the client device.
The details of one or more embodiments of the subject matter of this specification are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.
Drawings
FIG. 1 illustrates an example context adaptive scanning system.
Fig. 2 is a diagram of an example priority mapping function.
FIG. 3 is a graphical illustration of a Cumulative Distribution Function (CDF) of an example local transition probability distribution.
FIG. 4 is a flow diagram of an example process for scanning digital components.
FIG. 5 is a block diagram of an example environment in which a digital component distribution system transmits digital components from a digital component database for presentation with an electronic document.
FIG. 6 is a block diagram of an example computer system.
Like reference numbers and designations in the various drawings indicate like elements.
Detailed Description
This specification describes a scanning system that dynamically determines when a digital component is scanned. Each time a digital component is scanned, the scanning system determines a scanning priority that characterizes how quickly the digital component should be rescanned, e.g., a wait time until the digital component is rescanned, and then performs subsequent scans based on the scanning priority.
As used throughout this document, the phrase "digital component" refers to a discrete unit of digital content or digital information, which may include, for example, one or more of a video clip, an audio clip, a multimedia clip, an image, a text segment, or a Uniform Resource Locator (URL). The digital components may be electronically stored in the physical memory device as a single file or collection of files, and the digital components may take the form of video files, audio files, multimedia files, image files, or text files, and include streaming video, streaming audio, social network posts, blog posts, and/or advertising information, such that the advertisement is one type of digital component. Generally, digital components are defined (or provided) by a single provider or source (e.g., advertiser, publisher, or other content provider), but digital components provided from one source may be augmented with data from another source (e.g., weather information, real-time event information, or other information obtained from other sources).
As used throughout this document, scanning a digital component refers to determining a state of the digital component, e.g., whether the digital component meets one or more policy criteria. For example, scanning a digital component may refer to determining whether a landing page corresponding to a URL included in the digital component hosts malware (e.g., a virus). In this example, the policy criteria may specify that the digital component is "compliant" (i.e., meets the policy criteria) only if the login page does not host malware. The landing page is for purposes of example, but the scanning of the digital component may include an evaluation of (e.g., a scan of) the digital component itself and/or any network locations referenced or linked to by the digital component. For example, user interaction with a particular digital component may cause a client device to engage in a series of redirections to multiple network locations. In this example, the scan of the digital component may include an evaluation of the digital component itself and/or any network location in a series of redirections.
Generally, the state of a digital component changes over time. In one example, the digital component that was initially in compliance may become out of compliance for a period of time before eventually reverting back to a compliant condition again.
The scanning system attempts to schedule the scanning efficiently, i.e., in such a way that: enabling rapid detection of changes in the state of the digital component while minimizing the number of scans performed, thereby reducing the amount of computing resources required to scan the digital component. To this end, after scanning the digital component, the scanning system adaptively determines a scanning priority for the digital component based on the current "context" of the digital component.
The context of a digital component may refer to any kind of data relating to predicting (e.g., based on analysis of recorded scan scheduling data) how quickly the state of the digital component changes. For example, the current context of the digital component may be based on the current state of the digital component, the current scan index of the digital component (i.e., the number of times the digital component has been scanned), statistics derived from history or a windowed history of available scan results (e.g., the number of scan results that are in compliance and non-compliance in a given time window), or a combination thereof.
In general, the scanning system may determine a higher scanning priority (e.g., a shorter latency until rescanned) for digital components having a current context associated with a faster change in state. Similarly, the scanning system may determine a lower scanning priority (e.g., a longer wait time until rescanned) for digital components having a current context associated with a slower change in state.
In some implementations, the scanning system invokes a security policy if, as a result of the scanning, it has been determined that the digital component does not comply with the policy criteria. For example, the security policy may include at least one of: a notification message is transmitted or output indicating that the digital component does not comply with the policy guidelines or quarantining the digital component to prevent the digital component from being executed.
These and other features will be described in more detail below.
FIG. 1 illustrates an example context adaptive scanning system 100. The context adaptive scanning system 100 is an example of a system implemented as a computer program on one or more computers at one or more locations in which the systems, components, and techniques described below are implemented.
The context adaptive scanning system 100 is configured to adaptively schedule scans for the numeric components indexed by the numeric component index 104.
For each of the plurality of digital components, the digital component index 104 includes data specifying: (i) a digital component, and (ii) a current scan priority that characterizes how fast the digital component should be rescanned. The data specifying the digital component may be, for example, a pointer to a memory location where the digital component is stored. The data specifying the current scan priority may be, for example, a wait time until the digital component is rescanned, or a unitless digital priority value (e.g., a number between 1 and 10). The system 100 can maintain the digital component index 104 in any of a variety of locations, for example, in a physical data storage device or a logical data storage area (e.g., in a cloud computing environment).
This description will primarily describe the scanning system 100 with reference to scanning of digital components. In some embodiments, rather than scanning digital components, the system 100 may be configured to scan physical objects, such as devices (smoke alarms or cars) or buildings (e.g., bridges). Some examples of scanning physical objects are described in more detail below.
The system 100 includes a selection engine 106, a scan engine 102, and a priority update engine 108.
The selection engine 106 is configured to select the numeric components indexed by the numeric component index 104 for scanning based on their respective current scan priorities. For example, the selection engine 106 may select a digital component for scanning when a wait time elapses until the digital component should be rescanned. As another example, selection engine 106 may successively select the digital component with the highest priority value for scanning.
In some cases, the numeric component index 104 defines groupings of numeric components as different categories, and the selection engine 106 may select a scanned numeric component based on the category and the current scan priority. In one example, the numeric component index 104 may group numeric components into three categories: (i) a digital component that has not been scanned, (ii) a digital component that has been the subject of one or more recent user complaints, and (iii) a digital component that has been scanned and that has not been the subject of a recent user complaint. In this example, selection engine 106 may prioritize the digital components in the first or second categories (i.e., digital components that have not been scanned or that are the subject of recent user complaints) to scan the remaining digital components regardless of the current scanning priority.
The user may complain about the digital component in any of a variety of ways. For example, a user may complain about a digital component that the user presents on the device by interacting with an element (e.g., a button) included in the digital component that enables the user to mark the digital component as non-compliant.
The scan engine 102 is configured to scan the digital components selected for scanning by the selection engine 106. Scanning a digital component refers to determining the state of the digital component (from a plurality of possible states of the digital component), e.g., whether the digital component meets one or more policy criteria. For example, scanning a digital component may refer to determining whether a landing page (or any other network location) corresponding to a URL included in the digital component hosts malware (e.g., a virus), determining whether the digital component includes inappropriate (e.g., objectionable or illegal) content, or both. In this example, the digital component compliance may be determined only if the login page does not host malware and the digital component does not include inappropriate content.
In one example, the system 100 can scan the digital component using an auto-scan technique that analyzes the content of the digital component to determine whether the digital component meets policy criteria. The auto-scanning technique may include processing text, image, or video data included in the digital component using a classification model configured to generate an output characterizing whether the text, image, or video data is inappropriate. The auto-scanning technique can further include processing hypertext markup language (HTML) code that specifies content of the landing page corresponding to the URL included in the digital component using a classification model configured to generate output characterizing whether the landing page contains malware. The classification model may be trained using supervised or unsupervised machine learning techniques.
As mentioned earlier, the system 100 may be configured to scan a physical object (e.g., a device or a building). Scanning a device or a building may refer to, for example, determining a physical condition of the device or the building (e.g., whether the device or the building is rusty or bad). In this example, the device or building may be determined to be compliant only if the physical condition of the device or building enables safe operation thereof. The scan engine 102 may scan the device or building by generating a request for a maintenance technician to inspect the device or building.
The priority update engine 108 is configured to determine an updated scan priority 112 for the digital components scanned by the scan engine 102. The updated scan priority 112 characterizes how fast the digital component should be rescanned. To determine the updated scan priority for the digital component, the priority update engine 108 determines the current "context" of the digital component and then maps the current context to data defining the updated scan priority for the digital component using a mapping function. The following are some examples of determining the current context of a digital component.
In one example, the system can determine the current context of the digital component based on one or more of: a current compliance status of the digital component, a current scan index of the digital component (i.e., specifying how many times the digital component has been scanned), a duration since the digital component was first scanned, a number of times the digital component has been transmitted by the digital component distribution system to be presented with the electronic document at the user device (e.g., as described with reference to fig. 5), which electronic documents the digital component has been presented with at the user device, characteristics of the user device with which the digital component has been presented (e.g., operating system, browser type, and computing platform (e.g., desktop or mobile device)), a computational complexity (e.g., processing time) of scanning the digital component, and a geographic location (e.g., of the data center) of the last scanned digital component.
In another example, the system may determine the current context of the device or building based on one or more of: the frequency of use of the device or building (e.g., the number of miles a car travels or the number of vehicles that have passed over the bridge) and the weather conditions in which the device or building is currently located (e.g., snow or rain).
The priority update engine 108 can represent the current context of the digital component in any of a variety of ways, for example, as an ordered set of values, such as a vector or matrix of values. In one example, priority update engine 108 may represent the current context of a digital component as a vector having two components: a first component that can take the values in the set {0,1} and define a current compliance status of the digital component; and a second component that may take a non-negative integer value and define a digital component current scan index.
For each of a plurality of possible current contexts, the mapping function used by the priority update engine 108 (referred to as a "priority mapping function" in this specification) defines a mapping from the possible current context to data defining a corresponding scan priority. The following are some examples.
In one example, the priority mapping function defines a mapping from each possible current context to data that directly defines a corresponding scan priority, e.g., a latency until the digital component should be rescanned.
In another example, the priority mapping function defines a mapping from each possible current context to data defining a scaling factor that, when combined (e.g., multiplied) with the default scan priority of the digital component, defines a corresponding updated scan priority for the digital component. The default scan priority of the digital component refers to the scan priority generated by the "default" scheduling system. For example, the updated scan priority of a digital component with current context k may be given by:
t′(x)＝t(x)·αk (1)
where t' (x) is the latency until the digital component is rescanned, t (x) is the default latency for digital component x, and αkIs the scaling factor corresponding to context k (i.e., as specified by the priority mapping function). The scaling factor may be understood as defining an adjustment to a default scan priority generated by the default scheduling system such that scans may be scheduled more efficiently. Examples of scaling factors are described below with reference to equations (2), (3), (4), and (5).
The default scheduling system may determine the default scan priority of the digital component in any of a variety of ways. In one example, the default scheduling system may determine a default scanning priority that causes the digital component to rescan on a fixed schedule, e.g., once an hour or once a day. In another example, the default scheduling system may determine a default scanning priority for the digital component based on how often the digital component is transmitted by the digital component distribution system for presentation with the electronic document at the user device.
Fig. 2 is a diagram of an example priority mapping function 200. The priority mapping function 200 defines a mapping from each of a plurality of possible current contexts 202-A-202-N to data defining a corresponding scan priority 204-A-204-N. In this example, each possible current context of the digital component is represented as a vector 206, which includes: (i) a current compliance status 208 of the digital component, and (ii) a current scan index 210 of the digital component.
The priority mapping function may be determined by analyzing data characterizing a record of a scan history of the collection of digital components. For each digital component, the recorded data records: when a digital component is scanned, the respective state (e.g., compliance status) of the digital component each time it is scanned, and the respective context of the digital component each time it is scanned.
In a broad sense, the priority mapping function may map context associated with a faster change in state (i.e., in the recorded data) to a higher scan priority (e.g., a shorter latency until rescanned). Similarly, the priority mapping function may map contexts associated with slower changes in state to lower scan priorities (e.g., longer latency until rescanned). For example, the priority mapping function may map a context to a scan priority in the following manner: for each possible context of a digital component, the likelihood is the same that the state of the digital component will change before the digital component is next scanned.
Some example priority mapping functions are described next.
In one example, the possible current context may be indexed by a variable k and may take M ≧ 1 different values, and the priority mapping function may map the current context k to a corresponding scaling factor α given byk：
Wherein q iskRepresents the "cross" probability (likelihood) that the state (e.g., compliance condition) of the digital component will change between the current scan and the next scan of the digital component if the current context of the digital component is k, and pmTo representThe value of the current context of the digital component is the "context" probability of m.
In the specific example of equation (2), the current context of the digital component may be defined by a two-dimensional vector [ i, j ]. The first component i of the vector is a non-negative integer value that represents the current scan index of the digital component. The second component j of the vector is a binary value that indicates the current compliance status of the digital component (e.g., where 0 indicates no compliance and 1 indicates compliance). The priority mapping function may map the context [ i, j ] to a corresponding scaling factor given by:
wherein q isi(1|0) represents the cross probability that a digital component that is not compliant at scan index i will be compliant at scan index i +1, qi(0|1) represents the cross probability, p, that a numeric component that is compliant at scan index i will be non-compliant at scan index i +1i(0) Represents the probability that the digital component is not compliant at scan index i, and pi(1) Representing the probability of compliance of the digital component at the scan index i.
In some cases, it may be more important to quickly detect a change in a compliance condition from "compliant" to "non-compliant" than to quickly detect a change in a compliance condition from "non-compliant" to "compliant". The priority mapping function defined by equation (3) may be adjusted to include a weighting factor w0And w1Wherein w is0Is a non-negative number indicating the importance of detecting a change in compliance status from "not compliant" to "compliant", w1Is a non-negative number indicating the importance of detecting a change in compliance status from "compliant" to "non-compliant", and the priority mapping function is given by:
wherein the variables in formula (4) are defined in the same manner as in formula (3).
Can be used forThe cross probability and the context probability for defining the priority mapping function described with reference to equations (2), (3), and (4) are determined by analyzing the recorded data. For example, the cross probability q may be giveni(1|0) is determined as a ratio of: (i) the number of times the digital component transitions from out-of-compliance to in-compliance from scan index i to scan index i + 1; and (ii) a number of times that the digital component was scanned and determined to be out of compliance at the scan index i. Similarly, the cross probability q may be giveni(0|1) is determined as a ratio of: (i) the number of times the digital component transitioned from compliant to non-compliant from scan index i to scan index i +1, and (ii) the number of times the digital component was scanned and determined to be compliant at scan index i. The probability of non-compliance pi(0) The ratio is determined as: (i) the number of times the digital component is scanned and determined to be out of compliance at scan index i; and (ii) the number of digital components that are scanned at least i times. The compliance probability p can be determinedi(1) The ratio is determined as: (i) the number of times the digital component is scanned and determined to be in compliance at scan index i; and (ii) the number of digital components that are scanned at least i times.
In another example of a priority mapping function, a possible current context may be represented by a scan index i, and the priority mapping function may map the current context i to a corresponding scaling factor α given byi：
Wherein U isiIs the sum of the time durations, T, elapsed between scan i and scan i +1 for each digital component in the recorded data whose compliance status of the digital component changes from scan i to scan i +1iIs the sum of the elapsed time durations between scan i and scan i +1 for each digital component in the recorded data, and N is the maximum scan index.
In another example of a priority mapping function, the possible current context of a digital component may be indexed by a scan index i, and the priority mapping function may map the scan index i to a corresponding latency after scan i until the digital component should be scanned again. In this example, the priority mapping function may be determined using a "local transition" probability distribution.
For each of a plurality of times since the digital component was first scanned, the local transition probability distribution defines a respective probability that a state (e.g., a compliance condition) of the digital component will change at (or within a unit duration around) that time. Fig. 3 illustrates an example of a Cumulative Distribution Function (CDF) of a local transition probability distribution. The horizontal axis of the graph 300 represents the elapsed time since the first scan of the digital component, while the vertical axis represents the cumulative probability of a state change. That is, the height of the graph 300 for a particular time elapsed since the first scan indicates the probability that the state of the digital component will change one or more times before the particular time elapsed since the first scan.
The duration [0, T ] may be identified by using a local transition probability distributionmax]The division into non-overlapping intervals determines a priority mapping function in which the probability that the state of the digital component changes in each interval is the same (or within a suitable tolerance). The state of the digital component will be at the interval [ a, b ]]Can be determined as P (b) -P (a), where P (·) is the CDF of the local transition probability distribution.
After identifying the intervals, the priority mapping function may be specified to map each scan index to a latency given by the duration of the corresponding interval. In the example depicted in fig. 3, the priority mapping function may map scan index i-1 to a duration corresponding to interval 302-a, scan index i-2 to a duration corresponding to interval 302-B, scan index i-3 to a duration corresponding to interval 302-C, and index scan i-4 to a duration corresponding to interval 302-D.
The local transition probability distribution may be determined by processing the recorded data. For example, the probability p (t) that the state of a digital component will change at a particular time t (or within a unit time interval around that time) since the first scan may be determined as:
wherein | CtI is the number of digital components in the recorded data that are scanned both before and after time t, DtIs a set of digital components in the recorded data that change state between a scan immediately before time t and a scan immediately after time t, b (x) denotes the time of a scan that occurs at a time immediately after the time t at which the digital component x appears, and a (x) denotes the time of a scan that occurs at a time immediately before the time t at which the digital component x appears.
The priority mapping function determined based on the local transition probability distribution (as described above) depends on the transition duration [0, Tmax]The number of intervals into which the device is divided. To identify the appropriate (e.g., optimal) number of intervals, K can be assigned to each K ∈ {1, …, K ∈ {1, K }maxWill last for a time [0, T ]max]Divided into K intervals (as described earlier), where KmaxIs a positive integer, and a corresponding "uncertainty time" may be determined for each K:
wherein the k-th interval is represented by [ a ]k，bk]Given that P (-) is the CDF of the local transition probability distribution, an
FIG. 4 is a flow diagram of an example process 400 for scanning digital components. For convenience, process 400 is described as being performed by a system of one or more computers located at one or more locations. For example, a context adaptive scanning system (e.g., context adaptive scanning system 100 of FIG. 1) suitably programmed in accordance with the subject specification can perform process 400.
The system selects digital components to scan from a set of digital components each having a current scanning priority (402). The system selects a digital component based on the current scan priority of the digital component. The current scan priority of the digital component may specify, for example, a wait time until the digital component is next scanned.
The system scans the digital component, including determining a state of the digital component (404). The state of the digital component may specify a compliance status of the digital component, i.e., whether the digital component meets one or more policy criteria. In one example, the digital component specifies a landing page, scanning the digital component includes determining whether the landing page hosts malware, and determining that the digital component satisfies the policy criteria only if the landing page does not host malware.
The system determines the current context of the digital component (406). The system may determine the current context of the digital component based on one or more of: the current state of the digital component (e.g., compliance status), the current scan index of the digital component, the number of times the digital component has been transmitted for presentation with the electronic document at the user device, and with which electronic documents the digital component is presented at the user device.
The system determines an updated scanning priority for the digital component based on the current context of the digital component (408). The updated scan priority of a digital component may specify a wait time until the next scan of the given digital component. The system may determine an updated scan priority by mapping a current context of the digital component to data defining an updated scan priority of the digital component using a mapping function.
In some implementations, the data defining the updated scan priority may include a scaling factor, and the system may determine the updated scan priority of the digital component as a function of: (i) a default scan priority for the digital component; and (ii) a scaling factor. For example, the function may include a product of the default scan priority and a scaling factor. The default scanning priority may be determined by a default scheduling system.
The mapping function may map the current context of the digital component to data defining an updated scanning priority of the digital component based on a frequency of predicting a change in a state (e.g., a compliance condition) of the digital component (e.g., based on the "cross" probability described with reference to equations (2), (3), and (4)). The system may determine the frequency at which the state of the digital component is predicted to change as the likelihood that the state of a given digital component will change before the digital component is next scanned, e.g., based on the current context of the digital component. The system may also determine a mapping function based on the local transition probability distribution.
To determine the mapping function, the system processes the recorded data, which characterize: a particular digital component scans for when it was scanned, the state of the digital component when it was scanned (e.g., compliance status), and the context of the digital component when it was scanned.
The system rescans the digital component according to the updated scan priority of the digital component (410). In one example, the updated scan priority for the digital component may specify a duration until the digital component is rescanned, and once the duration has elapsed, the system may rescan the digital component.
FIG. 5 is a block diagram of an example environment 500 in which a digital component distribution system 510 transmits digital components from a digital component database 516 for presentation with an electronic document. The context adaptive scanning system 100 may be used to scan the digital components included in the digital component database 516 to determine whether they meet one or more policy criteria. For example, if the digital component includes objectionable content, or if a login page specified by the digital component hosts malware, the digital component may be identified as not meeting the policy criteria. The digital component distribution system 510 can avoid transmitting digital components that do not meet the policy guidelines.
The example environment 500 includes a network 502, such as a Local Area Network (LAN), a Wide Area Network (WAN), the internet, or a combination thereof. Network 502 connects electronic document server 504, client device 506, digital component server 508, and digital component distribution system 510 (also referred to as "distribution system" 510). The example environment 500 may include a number of different electronic document servers 504, client devices 506, and digital component servers 508.
An electronic document is data that presents a collection of content at a client device 506. Examples of electronic documents include web pages, word processing documents, Portable Document Format (PDF) documents, images, videos, search result pages, and feed sources. Native applications (e.g., "apps") such as applications installed on mobile devices, tablets, or desktop computing devices are also examples of electronic documents. The electronic document may be provided to the client device 506 by an electronic document server 504 ("electronic Doc server"). For example, the electronic document server 504 may include a server hosting a publisher's website. In this example, the client device 506 may initiate a request for a given publisher web page, and the electronic server 504 hosting the given publisher web page may respond to the request by sending machine-executable instructions that initiate initiation of presentation of the given web page at the client device 506.
In another example, electronic document server 504 may include an app server from which client device 506 may download apps. In this example, the client device 506 may download files needed to install the app at the client device 506, and then locally execute the downloaded app.
The electronic document may contain various contents. For example, the electronic document may include static content (e.g., text or other specified content) that is within the electronic document itself and/or that does not change over time. The electronic document may also contain dynamic content that may change over time or upon each request. For example, a publisher of a given electronic document may maintain a data source for populating portions of the electronic document. In this example, a given electronic document may include one or more tags or scripts that cause client device 506 to request content from a data source when the given electronic document is processed (e.g., rendered or executed) by client device 506. The client device 506 integrates the content obtained from the data source into a given electronic document to create a composite electronic document that includes the content obtained from the data source.
In some cases, a given electronic document may include one or more digital component tags or digital component scripts that reference the digital component distribution system 510. In these cases, the digital component tag or digital component script is executed by client device 506 when a given electronic document is processed by client device 506. Execution of the digital component tag or digital component script configures the client device 506 to generate a request (referred to as a "component request") for one or more digital components 512, which is transmitted over the network 502 to the digital component distribution system 510. For example, a digital component tag or digital component script may enable client device 506 to generate a packetized data request that includes a header and payload data. The component request 512 can include event data specifying characteristics such as the name (or network location) of the server from which the digital component was requested, the name (or network location) of the requesting device (e.g., client device 506), and/or information that the digital component distribution system 510 can use to select one or more digital components to provide in response to the request. The client device 506 transmits the component request 512 to a server of the digital component distribution system 510 over the network 502 (e.g., a telecommunications network).
The component request 512 may include event data specifying other event characteristics, such as characteristics of the requested electronic document and the location of the electronic document on which the digital component may be presented. For example, event data specifying a reference (e.g., a URL) to an electronic document (e.g., a web page) in which the digital component is to be rendered, available locations of the electronic document available for rendering the digital component, dimensions of the available locations, and/or media types that are eligible (eligible) to be rendered in the locations may be provided to the digital component distribution system 510. Similarly, event data specifying keywords associated with the electronic document ("document keywords") or entities referenced by the electronic document (e.g., people, places, or things) can also be included in component request 512 (e.g., as payload data) and provided to digital component distribution system 510 to facilitate identifying digital components that are eligible for presentation with the electronic document. Event data may also include a search query submitted from client device 506 to obtain a search results page, and/or data specifying search results and/or text, audible, or other visual content included in the search results.
The component request 512 may also include event data related to other information, such as information that has been provided by a user of the client device, geographic information indicating a state or region requested from the submitting component, or other information that provides context for the environment in which the digital component is to be displayed (e.g., time of day of the component request, day of the week of the component request, type of device on which the digital component is to be displayed (such as a mobile device or tablet device)). Component request 512 may be transmitted, for example, over a packetized network, and component request 512 itself may be formatted as packetized data with a header and payload data. The header may specify the destination of the packet and the payload data may include any of the information discussed above.
Component distribution system 510 selects a digital component to be presented with a given electronic document in response to receiving component request 512 and/or using information included in component request 512. In some implementations, the digital components are selected (using the techniques described herein) in less than one second to avoid errors that may result from delayed selection of the digital components. For example, the delay in providing the digital component in response to component request 512 may result in a page load error at client device 506, or even result in portions of the electronic document remaining unfilled after other portions of the electronic document are rendered at client device 506. Moreover, as the delay in providing the digital component to client device 506 increases, the electronic document is more likely to no longer be presented at client device 506 when the digital component is delivered to client device 506, thereby negatively impacting the user's experience with the electronic document. Additionally, for example, if the electronic document is no longer presented at client device 506 at the time the digital component is provided, the delay in providing the digital component may cause delivery of the digital component to fail.
In some implementations, the digital component distribution system 510 is implemented in a distributed computing system that includes, for example, a server and a collection of multiple computing devices 514 that interconnect and identify and distribute digital components in response to requests 512. The collection of multiple computing devices 514 operate together to identify a collection of digital components that qualify for presentation in an electronic document from a corpus of millions of available digital components (DC 1-x). Millions of available digital components may be indexed, for example, in the digital component database 516. Each digital component index entry may reference a corresponding digital component and/or include distribution parameters (DP1-DPx) that facilitate (e.g., adjust or limit) distribution/transmission of the corresponding digital component. For example, the distribution parameters may facilitate transmission of the digital component by requiring the component request to include at least one criterion that matches (e.g., either exactly or at some pre-specified level of similarity) one of the distribution parameters of the digital component.
In some implementations, the distribution parameters for a particular digital component can include distribution keywords that must be matched (e.g., by the electronic document, document keywords, or terms specified in component request 512) in order for the digital component to qualify for presentation. In other words, the distribution parameters are used to trigger distribution (e.g., transmission) of the digital components over the network 502. The allocation parameters may also require that the component request 512 include information specifying a particular geographic region (e.g., country or state) and/or information specifying that the component request 512 originates from a particular type of client device (e.g., mobile device or tablet device) in order to qualify the digital component for presentation.
The distribution parameters may also specify a qualification value (e.g., a ranking score, a bid, or some other specified value), such as for qualifying for distribution/transmission by, for example, a component evaluation process evaluating a digital component (e.g., among other available digital components). In some cases, the eligibility value may specify a maximum compensation amount that the provider of the digital component is willing to submit in response to transmission of the digital component (e.g., for each instance of a particular event attributed to presentation of the digital component, such as a user's interaction with the digital component).
The identification of qualifying digital components may be segmented into multiple tasks 517a-517c, which are then assigned among the computing devices within the set of multiple computing devices 514. For example, different computing devices in the set 514 can each analyze different portions of the digital component database 516 to identify various digital components having distribution parameters that match the information included in the component request 512. In some implementations, each given computing device in set 514 can analyze a different data dimension (or set of dimensions) and communicate (e.g., transmit) the results of the analysis (results 1-3) 518a-518c back to digital component distribution system 510. For example, the results 518a-518c provided by each computing device in the set 514 may identify a subset of digital components that are eligible for distribution in response to the component request and/or a subset of digital components that have certain distribution parameters. The identification of the subset of digital components may include, for example, comparing the event data to distribution parameters, and identifying the subset of digital components having distribution parameters that match at least some characteristics of the event data.
The digital component distribution system 510 aggregates results 518a-518c received from a set of multiple computing devices 514 and uses information associated with the aggregated results to: (i) selecting one or more digital components to be provided in response to the request 512; and (ii) determining transmission requirements of one or more digital components. For example, the digital component distribution system 510 can select a set of winning (winning) digital components (one or more digital components) based on the results of the one or more component evaluation processes. In turn, the digital component distribution system 510 may generate and transmit reply data 520 (e.g., digital data representing a reply) over the network 502 that enables the client device 506 to integrate the winning set of digital components into a given electronic document such that the winning set of digital components and the content of the electronic document are presented together on a display of the client device 506.
In some implementations, the client device 506 executes instructions included in the reply data 520 that configure and enable the client device 506 to obtain a winning set of digital components from one or more digital component servers. For example, the instructions in the reply data 520 may include a network location (e.g., a Uniform Resource Locator (URL)) and a script that causes the client device 506 to transmit a Server Request (SR)521 to the digital component server 508 to obtain a given winning digital component from the digital component server 508. In response to the request, digital component server 508 will identify a given winning digital component specified in server request 521 (e.g., within a database storing a plurality of digital components), and transmit digital component data (DC data) 522 to client device 506 that presents the given winning digital component in an electronic document at client device 506.
To facilitate searching of electronic documents, the environment 500 may include a search system 550 that identifies electronic documents by crawling and indexing the electronic documents (e.g., indexing based on content of the crawled electronic documents). Data about an electronic document may be indexed based on the electronic document with which the data is associated. The indexed and optionally cached copies of the electronic documents are stored in a search index 552 (e.g., hardware memory device (s)). The data associated with the electronic document is data representing content included in the electronic document and/or metadata of the electronic document.
The client device 506 may submit a search query to the search system 550 over the network 502. In response, the search system 550 accesses the search index 552 to identify electronic documents that are relevant to the search query. The search system 550 identifies electronic documents in the form of search results and returns the search results to the client device 506 in a search results page. The search results are data generated by the search system 550 that identifies electronic documents that are responsive to (e.g., relevant to) a particular search query and that includes active links (e.g., hypertext links) that cause the client device to request data from a specified network location (e.g., a URL) in response to user interaction with the search results. Example search results may include a web page title, a segment of text or a portion of an image extracted from the web page, and a URL of the web page. Another example search result may include a title of the downloadable application, a snippet of text describing the downloadable application, an image depicting a user interface of the downloadable application, and/or a URL pointing to a location from which the application may be downloaded to client device 506. In some cases, the search system 550 may be part of or interact with an application store (or online portal) from which applications may be downloaded for installation at the client device 506 to present information about downloadable applications related to submitted search queries. Like other electronic documents, the search results page may include one or more slots in which digital components (e.g., advertisements, video clips, audio clips, images, or other digital components) may be presented.
To select digital components to be transmitted in response to a component request, the distribution system 510 can identify a set of digital components that are eligible to be transmitted in response to the component request. The distribution system 510 can then select one or more of the eligible digital components to be transmitted, for example, through an auction process. In some implementations, the distribution system 510 performs the auction process by ranking the eligible digital components according to their respective eligibility values, and selecting the highest ranked digital component or components to transmit in response to the component request.
For example, in response to a component request, the distribution system 510 may identify the digital components A, B and C as being eligible for transmission. In this example, the qualification value for digital component A is $5, the qualification value for digital component B is $1, and the qualification value for digital component C is $5.5, where the qualification value for a digital component represents a bid associated with that digital component. The distribution system 510 may rank the digital components (e.g., in descending order) according to their respective qualification values: C. a, B are provided. Finally, the distribution system 510 can select the highest ranked digital component C for transmission in response to the component request.
After selecting a digital component to transmit in response to the digital component request, the distribution system 510 determines transmission requirements for the selected digital component. The transmission requirement specifies an action to be performed by a provider of the digital component in response to the transmission of the digital component. For example, the transmission requirements may specify that the provider of the digital component submit a compensation amount in response to the transmission of the digital component. In some cases, the compensation amount specifies an amount to submit for each instance of a particular event (e.g., user interaction with the digital component) attributed to the presentation of the digital component.
The distribution system 510 can determine the transmission requirements of the selected digital component based on the qualification value of the selected digital component and/or the qualification values of other digital components determined to qualify for transmission in response to the component request. For example, distribution system 510 may identify digital components A, B and C as eligible for transmission in response to a digital component request, where A, B and C have a qualification value of $5, $1, and $5.5, respectively. The distribution system 510 can select digital component C for transmission (because it has the highest qualification value), and can determine the transmission requirement of digital component C from the qualification values of the qualifying digital components as the next highest qualification value. In this example, the next highest qualification value is $5 (i.e., the qualification value for digital component a), so the distribution system 510 can determine the transmission requirement for digital component C to be $5.
FIG. 6 is a block diagram of an example computer system 600 that may be used to perform the operations described above. The system 600 includes a processor 610, a memory 620, a storage device 630, and an input/output device 640. Each of the components 610, 620, 630, and 640 can be interconnected, for example, using a system bus 650. The processor 610 is capable of processing instructions for execution within the system 600. In one implementation, the processor 610 is a single-threaded processor. In another implementation, the processor 610 is a multi-threaded processor. The processor 610 is capable of processing instructions stored in the memory 620 or the storage device 630.
The storage device 630 is capable of providing mass storage for the system 600. In one implementation, the storage device 630 is a computer-readable medium. In various different implementations, the storage device 630 may include, for example, a hard disk device, an optical disk device, a storage device shared by multiple computing devices over a network (e.g., a cloud storage device), or some other mass storage device.
Input/output device 640 provides input/output operations for system 600. In one embodiment, the input/output devices 640 may include one or more network interface devices, such as an Ethernet card, a serial communication device (e.g., an RS-232 port), and/or a wireless interface device (e.g., an 802.11 card). In another embodiment, the input/output devices may include driver devices configured to receive input data and transmit output data to other input/output devices (e.g., keyboard, printer, and display device 660). However, other implementations may also be used, such as mobile computing devices, mobile communication devices, set-top box television client devices, and so forth.
Although an example processing system has been described in fig. 6, implementations of the subject matter and the functional operations described in this specification can be implemented in other types of digital electronic circuitry, or computer software, firmware, or hardware, including the structures disclosed in this specification and their equivalents, or combinations of one or more of them.
The term "configured" is used herein in connection with system and computer program components. For a system of one or more computers to be configured to perform a particular operation or action, this means that the system has installed thereon software, firmware, hardware, or a combination thereof that when operated causes the system to perform the operation or action. For one or more computer programs to be configured to perform particular operations or actions, this means that the one or more programs include instructions which, when executed by a data processing apparatus, cause the apparatus to perform the operations or actions.
Embodiments of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry, tangibly embodied computer software or firmware, computer hardware (including the structures disclosed in this specification and their structural equivalents), or combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions encoded on a tangible, non-transitory storage medium for execution by, or to control the operation of, data processing apparatus. The computer storage medium can be a machine-readable storage device, a machine-readable storage substrate, a random or serial access memory device, or a combination of one or more of them. Alternatively or in addition, the program instructions may be encoded on an artificially generated propagated signal (e.g., a machine-generated electrical, optical, or electromagnetic signal) that is generated to encode information for transmission to suitable receiver apparatus for execution by data processing apparatus.
The term "data processing apparatus" refers to data processing hardware and encompasses all types of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers. The apparatus can also be or include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). In addition to hardware, an apparatus may optionally include code that creates an execution environment for a computer program, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.
A computer program (which may also be referred to or described as a program, software application, app, module, software module, script, or code) can be written in any form of programming language, including compiled or interpreted languages, or declarative or procedural languages; and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment. A program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a data communication network.
In this specification, the term "engine" is used broadly to refer to a software-based system, subsystem, or process that is programmed to perform one or more particular functions. Generally, the engine will be implemented as one or more software modules or components installed on one or more computers (e.g., comprising one or more processors) in one or more locations. In some cases, one or more computers will be dedicated to a particular engine; in other cases, multiple engines may be installed and run on the same computer(s).
The processes and logic flows described in this specification can be performed by one or more programmable computers executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by, and in combination with, special purpose logic circuitry, e.g., an FPGA or an ASIC.
A computer suitable for executing a computer program may be based on a general purpose or special purpose microprocessor, or both, or any other type of central processing unit. Generally, a central processing unit will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a central processing unit for executing or executing instructions and one or more memory devices for storing instructions and data. The central processing unit and the memory can be supplemented by, or incorporated in, special purpose logic circuitry. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer does not require such a device. Moreover, a computer may be embedded in another device, e.g., a mobile telephone, a Personal Digital Assistant (PDA), a mobile audio or video player, a game player, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a Universal Serial Bus (USB) flash drive), to name a few.
Computer-readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example: semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD ROM and DVD-ROM disks.
To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display)) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other types of devices may also be used to provide for interaction with a user; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user may be received in any form, including acoustic, speech, or tactile input. Further, the computer may interact with the user by sending and receiving documents to and from the device used by the user; for example, by sending a web page to a web browser on the user's device in response to a request received from the web browser. Moreover, the computer may interact with the user by sending a text message or other form of message to a personal device (e.g., a smartphone running a messaging application) and receiving a response message from the user in response.
The data processing apparatus for implementing the machine learning model may also include, for example, a dedicated hardware accelerator unit for processing the common and computationally intensive portions of the machine learning training or yield (i.e., inference) workload.
The machine learning model may be implemented and deployed using a machine learning framework (e.g., a TensorFlow framework, a Microsoft Cognitive Toolkit framework, an Apache Singa framework, or an Apache MXNet framework).
Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front-end component (e.g., a client computer having a graphical user interface, or a web browser or app through which a user can interact with an implementation of the subject matter described in this specification), or any combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a Local Area Network (LAN) and a Wide Area Network (WAN), such as the Internet.
The computing system may include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some embodiments, the server transmits data, e.g., an HTML page, to the user device, e.g., for displaying data to and receiving user input from a user interacting with the device acting as a client. Data generated at the user device, e.g., a result of the user interaction, may be received at the server from the device.
While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any invention or of what may be claimed, but rather as descriptions of features that may be specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Similarly, while operations are depicted in the drawings and are set forth in the claims below in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In some cases, multitasking and parallel processing may be advantageous. Moreover, the separation of various system modules and components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
Specific embodiments of the present subject matter have been described. Other embodiments are within the scope of the following claims. For example, the actions recited in the claims can be performed in a different order and still achieve desirable results. As one example, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In some cases, multitasking and parallel processing may be advantageous.
Claims (20)
1. A method performed by one or more data processing apparatus, the method comprising:
selecting a given digital component from among a plurality of digital components, wherein:
each digital component of the plurality of digital components has a current scanning priority defining a current priority for scanning the digital component; and
selecting the given digital component based on a current scan priority of the given digital component;
scanning the given digital component, including determining a current state of the given digital component, wherein the current state of the given digital component defines a current compliance status of the given digital component that specifies whether the given digital component currently complies with policy criteria;
determining a current context of the given digital component based on one or more of: (i) a current state of the given digital component, or (ii) a current scan index of the given digital component that specifies a number of times the given digital component has been scanned;
determining an updated scanning priority for the given digital component based on a current context of the given digital component; and
rescanning the given digital component according to the updated scan priority.
2. The method of claim 1, wherein the current context of the given digital component is additionally based on one or more of: a number of times the given digital component has been transmitted for presentation with the electronic document at the user device, and with which electronic documents the given digital component has been presented at the user device.
3. The method of claim 1, wherein the given digital component specifies a landing page, and scanning the given digital component comprises determining whether the landing page hosts malware.
4. The method of claim 1, wherein the updated scan priority of the given digital component specifies a wait time until the next scan of the given digital component.
5. The method of claim 1, wherein determining the updated scanning priority for the given digital component based on the current context of the given digital component comprises:
mapping the current context of the given digital component to data defining an updated scan priority of the given digital component using a mapping function, wherein for each of a plurality of possible current contexts, the mapping function defines a mapping from the possible current context to the data defining the corresponding scan priority.
6. The method of claim 5, wherein:
the data defining the updated scan priority for the given digital component comprises a scaling factor; and
determining an updated scanning priority for the given digital component based on the current context of the given digital component further comprises:
identifying a default scan priority for the given digital component; and
determining an updated scan priority for the given digital component as a function of the default scan priority and the scaling factor for the given digital component.
7. The method of claim 6, wherein the function of the default scan priority and the scaling factor for the given digital component comprises a product of the default scan priority and the scaling factor for the given digital component.
8. The method of claim 5, wherein a mapping function maps the current context of the given digital component to data defining an updated scanning priority for the given digital component based on a frequency with which the state of the given digital component is predicted to change.
9. The method of claim 8, wherein the frequency with which the state of the given digital component is predicted to change is determined by processing data characterizing, for each of a plurality of particular digital components, when the particular digital component was scanned, the state at which the particular digital component was scanned, and a record of a context at which the particular digital component was scanned.
10. The method of claim 8, wherein, using, based on a likelihood that a state of the given digital component will change before the given digital component is next scanned, a mapping function maps a current context of the given digital component to data defining an updated scanning priority of the given digital component.
11. The method of claim 8, wherein the mapping function is determined using a local transition probability distribution.
12. One or more non-transitory computer storage media storing instructions that, when executed by one or more computers, cause the one or more computers to perform operations comprising:
selecting a given digital component from among a plurality of digital components, wherein:
each digital component of the plurality of digital components has a current scanning priority defining a current priority for scanning the digital component; and
selecting the given digital component based on a current scan priority of the given digital component;
scanning the given digital component, including determining a current state of the given digital component, wherein the current state of the given digital component defines a current compliance status of the given digital component that specifies whether the given digital component currently complies with policy criteria;
determining a current context of the given digital component based on one or more of: (i) a current state of the given digital component, or (ii) a current scan index of the given digital component that specifies a number of times the given digital component has been scanned;
determining an updated scanning priority for the given digital component based on a current context of the given digital component; and
rescanning the given digital component according to the updated scan priority.
13. The one or more non-transitory computer storage media of claim 12, wherein the current context of the given digital component is additionally based on one or more of: a number of times the given digital component has been transmitted for presentation with the electronic document at the user device, and with which electronic documents the given digital component has been presented at the user device.
14. The one or more non-transitory computer storage media of claim 12, wherein the given digital component specifies a landing page, and scanning the given digital component comprises determining whether the landing page hosts malware.
15. The one or more non-transitory computer storage media of claim 12, wherein the updated scan priority of the given digital component specifies a wait time until a next scan of the given digital component.
16. The one or more non-transitory computer storage media of claim 12, wherein determining the updated scanning priority for the given digital component based on the current context of the given digital component comprises:
mapping the current context of the given digital component to data defining an updated scan priority of the given digital component using a mapping function, wherein for each of a plurality of possible current contexts, the mapping function defines a mapping from the possible current context to the data defining the corresponding scan priority.
17. A system, comprising:
one or more computers; and
one or more storage devices communicatively coupled to the one or more computers, wherein the one or more storage devices store instructions that, when executed by the one or more computers, cause the one or more computers to perform operations comprising:
selecting a given digital component from among a plurality of digital components, wherein:
each digital component of the plurality of digital components has a current scanning priority defining a current priority for scanning the digital component; and
selecting the given digital component based on a current scan priority of the given digital component;
scanning the given digital component, including determining a current state of the given digital component, wherein the current state of the given digital component defines a current compliance status of the given digital component that specifies whether the given digital component currently complies with policy criteria;
determining a current context of the given digital component based on one or more of: (i) a current state of the given digital component, or (ii) a current scan index of the given digital component that specifies a number of times the given digital component has been scanned;
determining an updated scanning priority for the given digital component based on a current context of the given digital component; and
rescanning the given digital component according to the updated scan priority.
18. The system of claim 17, wherein the current context of the given digital component is additionally based on one or more of: a number of times the given digital component has been transmitted for presentation with the electronic document at the user device, and with which electronic documents the given digital component has been presented at the user device.
19. The system of claim 17, wherein the given digital component specifies a landing page, and scanning the given digital component comprises determining whether the landing page hosts malware.
20. The system of claim 17, wherein the updated scan priority of the given digital component specifies a wait time until the next scan of the given digital component.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
CN202111181239.XA CN114021129B (en) | 2019-05-09 | 2019-11-08 | Method, system, and computer storage medium for context adaptive scanning |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US16/408,126 | 2019-05-09 | ||
US16/408,126 US10701238B1 (en) | 2019-05-09 | 2019-05-09 | Context-adaptive scanning |
PCT/US2019/060531 WO2020226688A1 (en) | 2019-05-09 | 2019-11-08 | Context-adaptive scanning |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202111181239.XA Division CN114021129B (en) | 2019-05-09 | 2019-11-08 | Method, system, and computer storage medium for context adaptive scanning |
Publications (2)
Publication Number | Publication Date |
---|---|
CN112219204A true CN112219204A (en) | 2021-01-12 |
CN112219204B CN112219204B (en) | 2021-10-22 |
Family
ID=69165532
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201980008223.3A Active CN112219204B (en) | 2019-05-09 | 2019-11-08 | Method, system, and computer storage medium for context adaptive scanning |
CN202111181239.XA Active CN114021129B (en) | 2019-05-09 | 2019-11-08 | Method, system, and computer storage medium for context adaptive scanning |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202111181239.XA Active CN114021129B (en) | 2019-05-09 | 2019-11-08 | Method, system, and computer storage medium for context adaptive scanning |
Country Status (6)
Country | Link |
---|---|
US (2) | US10701238B1 (en) |
EP (1) | EP3752944B1 (en) |
JP (2) | JP6957761B2 (en) |
KR (2) | KR102413081B1 (en) |
CN (2) | CN112219204B (en) |
WO (1) | WO2020226688A1 (en) |
Families Citing this family (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN117435144B (en) * | 2023-12-20 | 2024-03-22 | 山东云天安全技术有限公司 | Intelligent data hierarchical security management method and system for data center |
Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20090013031A1 (en) * | 2007-07-03 | 2009-01-08 | Right Media, Inc. | Inferring legitimacy of web-based resource requests |
US8359651B1 (en) * | 2008-05-15 | 2013-01-22 | Trend Micro Incorporated | Discovering malicious locations in a public computer network |
US8782032B2 (en) * | 2004-08-30 | 2014-07-15 | Google Inc. | Minimizing visibility of stale content in web searching including revising web crawl intervals of documents |
CN109275357A (en) * | 2017-05-17 | 2019-01-25 | 谷歌有限责任公司 | Prevent leaking data |
Family Cites Families (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6735700B1 (en) * | 2000-01-11 | 2004-05-11 | Network Associates Technology, Inc. | Fast virus scanning using session stamping |
US6851058B1 (en) * | 2000-07-26 | 2005-02-01 | Networks Associates Technology, Inc. | Priority-based virus scanning with priorities based at least in part on heuristic prediction of scanning risk |
GB0418066D0 (en) * | 2004-08-13 | 2004-09-15 | Ibm | A prioritization system |
WO2007076613A1 (en) * | 2006-01-05 | 2007-07-12 | Wireless Edge Canada Inc. | Systems and methods for improved network based content inspection |
US7836502B1 (en) | 2007-07-03 | 2010-11-16 | Trend Micro Inc. | Scheduled gateway scanning arrangement and methods thereof |
JP4943278B2 (en) * | 2007-09-06 | 2012-05-30 | 株式会社日立製作所 | Virus scanning method and computer system using the method |
KR101625338B1 (en) * | 2015-10-20 | 2016-05-27 | 홍익대학교세종캠퍼스산학협력단 | System and method for detecting malicious landing sites |
-
2019
- 2019-05-09 US US16/408,126 patent/US10701238B1/en active Active
- 2019-11-08 KR KR1020207020109A patent/KR102413081B1/en active IP Right Grant
- 2019-11-08 EP EP19836681.7A patent/EP3752944B1/en active Active
- 2019-11-08 CN CN201980008223.3A patent/CN112219204B/en active Active
- 2019-11-08 KR KR1020227021057A patent/KR102520637B1/en active IP Right Grant
- 2019-11-08 WO PCT/US2019/060531 patent/WO2020226688A1/en unknown
- 2019-11-08 JP JP2020538607A patent/JP6957761B2/en active Active
- 2019-11-08 CN CN202111181239.XA patent/CN114021129B/en active Active
-
2020
- 2020-05-28 US US16/885,383 patent/US10999467B2/en active Active
-
2021
- 2021-10-05 JP JP2021164057A patent/JP7014928B1/en active Active
Patent Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8782032B2 (en) * | 2004-08-30 | 2014-07-15 | Google Inc. | Minimizing visibility of stale content in web searching including revising web crawl intervals of documents |
US20090013031A1 (en) * | 2007-07-03 | 2009-01-08 | Right Media, Inc. | Inferring legitimacy of web-based resource requests |
US8359651B1 (en) * | 2008-05-15 | 2013-01-22 | Trend Micro Incorporated | Discovering malicious locations in a public computer network |
CN109275357A (en) * | 2017-05-17 | 2019-01-25 | 谷歌有限责任公司 | Prevent leaking data |
Non-Patent Citations (1)
Title |
---|
杨东天: "数字T/R组件测试技术研究", 《中国优秀硕士学位论文全文数据库 信息科技辑》 * |
Also Published As
Publication number | Publication date |
---|---|
JP2022031632A (en) | 2022-02-22 |
CN112219204B (en) | 2021-10-22 |
EP3752944A1 (en) | 2020-12-23 |
KR20200130240A (en) | 2020-11-18 |
KR102520637B1 (en) | 2023-04-11 |
US10701238B1 (en) | 2020-06-30 |
EP3752944B1 (en) | 2024-04-03 |
CN114021129A (en) | 2022-02-08 |
US20200358922A1 (en) | 2020-11-12 |
JP6957761B2 (en) | 2021-11-02 |
US10999467B2 (en) | 2021-05-04 |
CN114021129B (en) | 2023-01-10 |
WO2020226688A1 (en) | 2020-11-12 |
KR20220093261A (en) | 2022-07-05 |
JP7014928B1 (en) | 2022-02-01 |
JP2021519961A (en) | 2021-08-12 |
KR102413081B1 (en) | 2022-06-24 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10515132B2 (en) | Optimizing transmission of digital components | |
US8788442B1 (en) | Compliance model training to classify landing page content that violates content item distribution guidelines | |
CN110692054A (en) | Predicting unobservable parameters of digital components | |
CN109075987B (en) | Optimizing digital component analysis systems | |
CN112219204B (en) | Method, system, and computer storage medium for context adaptive scanning | |
US20230065501A1 (en) | Interaction tracking controls | |
US10747821B2 (en) | Optimized digital component analysis system | |
US20190335019A1 (en) | Damping transmission requirement variations | |
US20240005040A1 (en) | Cardinality models for privacy-sensitive assessment of digital component transmission reach | |
US20230409774A1 (en) | Reach and frequency prediction for digital component transmissions | |
US20230410034A1 (en) | Reach and frequency prediction for digital component transmissions | |
KR102590412B1 (en) | Limit provision and display of redundant digital components on client devices | |
US11886524B2 (en) | Limiting provision and display of redundant digital components on a client device | |
RU2805513C1 (en) | Method and server for sending targeted message to user's electronic device | |
WO2024039474A1 (en) | Privacy sensitive estimation of digital resource access frequency | |
WO2024086256A1 (en) | Privacy sensitive estimation of digital resource access frequency | |
JP2023514622A (en) | Systems and methods for generating context specifications for contextualized search and content delivery |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
GR01 | Patent grant | ||
GR01 | Patent grant |
CN112800773A - Adding machine understanding to spreadsheet data - Google Patents
Adding machine understanding to spreadsheet data Download PDFInfo
- Publication number
- CN112800773A CN112800773A CN202110047733.0A CN202110047733A CN112800773A CN 112800773 A CN112800773 A CN 112800773A CN 202110047733 A CN202110047733 A CN 202110047733A CN 112800773 A CN112800773 A CN 112800773A
- Authority
- CN
- China
- Prior art keywords
- column
- entity type
- entity
- data
- entities
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/166—Editing, e.g. inserting or deleting
- G06F40/177—Editing, e.g. inserting or deleting of tables; using ruled lines
- G06F40/18—Editing, e.g. inserting or deleting of tables; using ruled lines of spreadsheets
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/901—Indexing; Data structures therefor; Storage structures
- G06F16/9024—Graphs; Linked lists
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/166—Editing, e.g. inserting or deleting
- G06F40/169—Annotation, e.g. comment data or footnotes
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/279—Recognition of textual entities
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/30—Semantic analysis
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N20/00—Machine learning
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N20/00—Machine learning
- G06N20/10—Machine learning using kernel methods, e.g. support vector machines [SVM]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N5/00—Computing arrangements using knowledge-based models
- G06N5/02—Knowledge representation; Symbolic representation
- G06N5/022—Knowledge engineering; Knowledge acquisition
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/279—Recognition of textual entities
- G06F40/289—Phrasal analysis, e.g. finite state techniques or chunking
- G06F40/295—Named entity recognition
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/08—Learning methods
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N5/00—Computing arrangements using knowledge-based models
- G06N5/04—Inference or reasoning models
- G06N5/046—Forward inferencing; Production systems
Abstract
The present disclosure relates to adding machine understanding on spreadsheet data. A method of generating chart recommendations based on machine understanding of spreadsheet data includes determining a dataset, each item of data including content of a cell of one or more cells in a column of a spreadsheet presented to a user. The method also determines an entity type associated with the column based on the dataset. An entity type represents the semantic meaning of a data set in a column of a spreadsheet. The method also identifies at least one icon in the plurality of charts that is related to the entity type associated with the column. The method then provides the identified chart for presentation to the user.
Description
Technical Field
Aspects and embodiments of the present disclosure relate to electronic documents, and more particularly to adding machine understanding on spreadsheet data.
Background
Spreadsheet documents are available for organizing and analyzing large amounts of information. The information in the spreadsheet document may be contained in cells arranged in rows and columns on one or more worksheets. For example, spreadsheets may be used to manage and manipulate financial information, engineering information, or any organizational information. A user may manipulate (e.g., create, edit, view, print, etc.) a spreadsheet using a spreadsheet software application. When editing a spreadsheet, a user may alter the contents of the spreadsheet by removing text, entering new text, formatting the spreadsheet layout, adding graphics or charts, or otherwise altering the contents of the spreadsheet.
Disclosure of Invention
The following presents a simplified summary of the disclosure in order to provide a basic understanding of some aspects of the disclosure. This summary is not an extensive overview of the disclosure. It is intended to neither identify key or critical elements of the disclosure nor delineate any scope of particular embodiments of the disclosure or any scope of the claims. Its sole purpose is to present some concepts of the disclosure in a simplified form as a prelude to the more detailed description that is presented later.
A system and method for increasing machine understanding on spreadsheet data is disclosed. The processing device may determine a data set, each item of data including contents of a cell in a column of a spreadsheet presented to a user. The processing device may determine an entity type associated with the column based on the data set. The entity type may represent the semantic meaning of the data set in the column.
In some implementations, to determine the entity type associated with the column, the processing device may identify one or more entities on the knowledge graph associated with each cell in the column. A knowledge graph can be described as a knowledge base with structured information about multiple semantic entities and the relational connections between these semantic entities. The nodes of the knowledge graph can represent entities, and the relational connections between the entities can be represented by edges. The knowledge graph can be a public knowledge graph or a privately-maintained knowledge graph.
To identify one or more entities for each cell, the processing device may compare the data in the cell to nodes on a knowledge graph. The processing device may then determine one or more commonly shared entity types for the column based on the number of cells sharing the entity type in the column. To be considered a commonly shared entity type for the column, the number of cells sharing that entity type must satisfy a threshold condition. For example, the number of cells sharing an entity type must exceed 95% of the cells in a column in order to be considered a common shared entity type for that column. The method may then determine the entity type for the column by selecting a commonly shared entity type that is shared among the greatest number of cells in the column.
In one embodiment, the processing device may then identify at least one chart that is related to the entity type associated with the column. The processing device may score the various chart types based on a rule set that takes into account the semantic meaning of the column, or based on the output of a machine learning model. The rule set may direct which charts should be considered for the particular semantic meaning associated with the column, and/or what score should be assigned to each of the charts under consideration. The rules may be different for different users or different levels or categories of users, and the rules may be predetermined or configured based on user input. The machine learning model may be trained to assign a score to each chart type based on one or more entity types derived from the semantic meaning of the column, and optionally based on one or more characteristics of the user. The processing devices may rank the chart types based on their scores and may provide the most relevant chart types (i.e., the chart types with the highest scores) for presentation to the user. Additionally or alternatively, the processing device may provide more than one recommended chart type to the user based on the ranking of chart types. For example, the processing device may provide the top N chart types to the user as recommendations based on the ranking, where N is an integer. As another example, the processing device may provide one or more charts with scores that satisfy a threshold condition to the user as recommendations.
In one embodiment, the processing device may identify additional information related to the entity type of the column, and may add one or more columns with the identified additional information to the spreadsheet. The processing device may identify entity types that are closely related to the entity type of the column based on a rule set that takes into account the semantic meaning of the column or based on the output of a machine learning model. The rule set may direct which entity types should be considered for the particular semantic meaning associated with the column, and/or what score should be assigned to each of the considered entity types. As described above, the rules may be different for different users or different levels or categories of users, and may be predetermined or configured based on user input. The machine learning model may be trained to assign a score to each entity type based on the semantic meaning from the column, and optionally based on one or more characteristics of the user. Entity types having scores that satisfy a threshold condition may be considered closely related. The processing device may then extract data from entities having closely related entity types for addition to the spreadsheet for presentation to the user. Alternatively, the processing device may recommend that additional information be added to the spreadsheet, and in response to receiving the user selection, one or more columns containing the additional information may be added.
If the cells in a column do not satisfy the threshold condition, such that the entity type of the column cannot be determined, the spreadsheet can operate as before without adding a machine understanding of the data. However, the methods described herein may be performed each time the spreadsheet is updated, or at fixed intervals, so that the entity type for each column may be subsequently determined.
The subject matter outlined above and described in more detail below enables automatic and real-time determination of the semantic meaning of a column. This determined semantic meaning may automatically improve existing functionality of the spreadsheet software and provide other new functionality to the user. These improvements, in turn, enhance the speed and efficiency of the computer running the spreadsheet software, reduce the error rate associated with the manual entity type determination process, and avoid unnecessary suggestions to the user.
The subject matter described herein is not limited to the advantages exemplarily listed above. Other advantages are realized and identified in view of the disclosure of the present application.
Drawings
Aspects and embodiments of the present disclosure will be understood more fully from the detailed description given below and from the accompanying drawings of aspects and embodiments of the disclosure, which, however, should not be taken to limit the disclosure to the specific aspects or embodiments, but are for explanation and understanding only.
FIG. 1 illustrates an example system architecture for a spreadsheet software application to add machine understanding to spreadsheet data according to embodiments of this disclosure.
Fig. 2 depicts an example of a system architecture for adding machine understanding to spreadsheet data according to an embodiment of the present disclosure.
FIG. 3 illustrates an example system that transfers data between entities in the system to increase machine understanding on spreadsheet data, according to an embodiment of this disclosure.
FIG. 4 depicts a flowchart of a method for increasing machine understanding on spreadsheet data and providing chart recommendations to a user according to an embodiment of the present disclosure.
FIG. 5 depicts a flowchart of a method for increasing machine understanding on spreadsheet data and providing additional information for presentation to a user, according to an embodiment of the present disclosure.
Fig. 6 depicts a block diagram of a computer system operating in accordance with an embodiment of the present disclosure.
The drawings may be better understood when viewed in conjunction with the following detailed description.
Detailed Description
The spreadsheet software application may store the user data as a series of text and numbers. Spreadsheet applications may use a series of text and numbers to provide common spreadsheet functions, including formatting, drawing graphics, filtering, and the like. However, data in spreadsheets represents a gap between what a user in the real world means and what spreadsheet software can understand and operate. For example, a user may know that a column includes a list of countries, however for spreadsheet applications, the list of countries is simply a series of text strings. While spreadsheet applications may utilize text strings in carrying out the features and functions of the application, what the computer understands text strings to represent may limit these features. Thus, the features and functionality provided to the user may be independent of the user's needs, and thus may result in wasted computing resources and a negative user experience.
Aspects and embodiments of the present disclosure address the above and other deficiencies or problems by providing techniques for adding machine understanding to spreadsheet data. Aspects of the present disclosure may then use the added machine understanding of spreadsheet data to enhance existing features and functionality of spreadsheet applications, as well as provide new features to users. For example, by adding machine understanding to the spreadsheet data, the spreadsheet application may recognize that one column lists the country name and may therefore recommend a geographic chart to the user. As another example, the spreadsheet application may identify that the spreadsheet includes a list of dates and associated events, and may recommend a timeline chart to the user. Adding machine understanding to spreadsheet data may also provide additional new functionality. For example, once the spreadsheet application identifies a list whose column includes employee identification numbers, the application may automatically populate the employee's name, email address, and office location.
The spreadsheet software application may be provided from the server to the client device over the network. The server may store data and may present the data in a spreadsheet format through a spreadsheet application. The spreadsheet application and/or server may analyze the data to provide valuable features to the user. The spreadsheet application may communicate the spreadsheet data to the server over the network, which may trigger a semantic annotator on the server. The semantic annotator can add additional meaning to the spreadsheet data by linking the spreadsheet data with entities on the knowledge graph. The semantic annotator may determine the entity type of each cell and column and annotate the cells and columns within the spreadsheet using their respective determined types. Loading and/or saving the spreadsheet may automatically trigger a semantic annotator on the server. The semantic annotators can also be triggered at fixed intervals, for example every few milliseconds or every two seconds. The interval may be adjusted, for example, to compensate for latency caused by the annotator. For a spreadsheet containing multiple worksheets, the semantic annotator may annotate columns of the spreadsheet for one worksheet at a time during initial loading in order to balance the resource requirements for loading and processing the multiple worksheets with the latency of determining column annotations.
The semantic annotator may begin by linking each cell of the column with one or more entities on the knowledge graph associated with the data in each cell. The knowledge graph can be a data structure that stores ontology data. In other words, a knowledge graph can be a knowledge base with structured information about multiple semantic entities and relational connections between semantic entities. The knowledge graph may store information in the form of nodes and edges, where nodes are connected by edges. The nodes in knowledge may represent entities. An entity may be a person, place, item, idea, topic, abstract concept, concrete element, other suitable thing, or any combination of these. The entities in the knowledge graph can be related to any number of other entities by edges, which can represent relationships between the entities. Each semantic entity (also referred to as an "entity") has one or several types.
Each cell in the spreadsheet may be annotated with one or more entities associated with the cell data. In one embodiment, the semantic annotator may use a machine learning engine to label as many cells as possible with entities on the knowledge graph. For example, the spreadsheet data may include a cell that includes a word
The semantic annotator can then determine the entity type associated with the column. The entity type may represent the semantic meaning of the data set in the column. In one embodiment, the semantic annotator may aggregate the determined cell entities to determine one or more commonly shared entity types for the columns. The commonly shared entity type may be determined by the percentage of cells in the column that are associated with the same entity type in the knowledge graph. For example, a column may be considered to have the semantic meaning of "country" if the column contains more than 95% of the cells associated with the "country" entity on the knowledge graph. The percentage or threshold may be adjusted based on, for example, the size of the column or based on the discipline itself. If more than a threshold number of cells are associated with more than one entity type, a column may be considered to have more than one commonly shared entity type. For example, more than 95% of the cells in a column may reference both the "company name" entity and the "carbonated beverage" entity.
To determine the entity type associated with a column, the semantic annotator may determine among the commonly shared entity types the entity type shared among the most number of cells in the column. That is, the column entity type must both satisfy the threshold condition and be the most shared entity type within the column. For example, if more than 95% of the cells in a column reference both a company name and a carbonated beverage, but the number of cells referencing a carbonated beverage exceeds the number of cells referencing a company name, the semantic annotator will determine that the entity type (and thus the semantic meaning) of the column is "carbonated beverage".
The semantic annotator can then annotate the column with the determined entity type and annotate each cell in the column with an entity on the knowledge graph that is related to the entity type. For each cell, the semantic annotator can selectAn entity on the knowledge graph associated with the determined entity type of the column is selected and the cell is linked to the entity. Continuing with the example above, once the semantic annotator has determined that the column type is "carbonated beverage," the semantic annotator may first annotate the column with the entity type and then annotate each cell with a specific entity related to carbonated beverage listed in that cell. Thus, if a cell includes a word
Once the semantic annotator has annotated the columns and cells in the spreadsheet, the spreadsheet application may then utilize the annotations to provide beneficial features to the user. For example, upon determining that the column has an entity type of "carbonated beverage," the spreadsheet application may suggest to the user to include additional information related to the carbonated beverage. As another example, after the column has been determined to have an entity type of "Country," the spreadsheet application may recommend a geographic chart to the user.
Some technical advantages of embodiments of the present disclosure include automatically and in real-time enhancing spreadsheet software applications. By automatically determining the meaning of the cells and columns, the user is not required to manually provide or annotate individual cells or columns. While some users may provide a title to describe a column in a spreadsheet, many users do not. Furthermore, the header data may be unreliable because there is no standard practice for marking columns. For example, while one user may find it helpful to mark a column containing the country name of a country as "country", another user may mark the same column as "office" if, for example, the column lists the country in which the company has an office. In addition, the machine-readable meaning derived from the systems and methods described herein is up-to-date with the data in the spreadsheet. Spreadsheet applications may enhance the operation of a computer on which the application runs, resulting in faster processing times, by increasing the speed and efficiency of the application. The spreadsheet application may also avoid unwanted software recommendations, thereby reducing wasted computer resources.
Various aspects of the above-referenced methods and systems are described in detail below by way of example and not limitation.
FIG. 1 illustrates an example system architecture 100 for a spreadsheet software application to add machine understanding to spreadsheet data according to embodiments of this disclosure.
Client device 110 may include a spreadsheet application 112 for creating, editing, viewing, and/or sharing spreadsheets. In one embodiment, the spreadsheet application 112 may be accessed over the network 105 and users may be allowed to collaborate with other users on a shared spreadsheet. That is, the user may be able to simultaneously edit the content or format of the collaborative spreadsheet via their respective spreadsheet applications 112, and the resulting results may be presented to the user via their respective spreadsheet applications 112 in real-time (e.g., with minimal millisecond delay). Spreadsheet application 112 may include a variety of features including spreadsheet layout feature 114, additional information feature 116, and charting feature 118. Spreadsheet layout feature 114 may determine the layout of the spreadsheet. For example, the spreadsheet layout feature 114 may determine the appropriate locations for page breaks and header rows in the spreadsheet. The additional information feature 116 may determine additional data that may be useful to the client. The client may use charting features 118 to create and add charts to spreadsheets. Each function may be enhanced by determining the semantic meaning of the data in the spreadsheet. The spreadsheet application may contain additional functionality not shown here. Alternatively, not all of the features shown in FIG. 1 need necessarily be present in a spreadsheet application. Data in the spreadsheet may be stored in data store 190 as spreadsheet data 194.
Server device 150 may include a semantic annotator 152, which may include a cell entity determiner 154, a column annotator 156, and a cell annotator 158. The server device 150 may also include a recommendation generator 160.
The data store 190 can maintain a knowledge graph 192. Knowledge graph 192 can be a data structure that stores ontology data. In other words, knowledge graph 192 can be a knowledge base with structured information about a plurality of semantic entities and the relational connections between semantic entities. Knowledge graph 192 may store information in the form of nodes and edges, where nodes are connected by edges. The nodes in knowledge may represent entities. An entity may be a person, place, item, idea, topic, abstract concept, concrete element, other suitable thing, or any combination of these. The entities in the knowledge graph can be related to any number of other entities by edges, which can represent relationships between the entities. Each semantic entity (also referred to as an "entity") has one or several types.
Data store 190 may store spreadsheet data 194 that includes the data contained in each cell in each spreadsheet. Semantic annotator 152 may analyze the data from each cell to determine the semantic meaning of each column. The recommendation generator 160 may then trigger the spreadsheet application 112 to make certain recommendations based on the semantic meaning of the column.
Column annotator 156 can then determine the entity type of the column based on the semantic meaning. To determine the semantic meaning of a column, column annotator 156 can aggregate the entity types of cells in the column. Column annotator 156 can then determine how many cells share each of the entity types. If more than a threshold number of cells in a column share an entity type, column annotator 156 can determine that the entity type is a commonly shared entity type for the column. The threshold may be a percentage of all cells in a column, e.g., 95%. For example, the threshold may be adjusted according to the size of the column or the disciplines in the column.
Once column annotator 156 has determined one or more commonly shared entity types for the column, it can determine the semantic meaning of the column. Semantic meaning may be based on a common shared entity type shared among the maximum number of cells in a column. Column annotator 156 can then annotate the metadata of the column with the semantic meaning or entity type associated with the semantic meaning of the column. The cell annotator 158 can then annotate each cell in the column with a knowledge graph entity corresponding to the entity type of the column. That is, returning to the example above, if the column annotator 156 determines that the entity type of the column (containing a cell having the word "English" therein) is "language," the cell annotator 158 can annotate the cell by linking the cell to a node in the knowledge graph 192 representing "English language" (rather than a node representing "British nationality" or "English subject in school").
The recommendation generator 160 may then consume the meaning of the column and trigger various features in the spreadsheet application 112. For example, the recommendation generator 160 may use the entity type of the column and the assigned meaning of the cells to determine the best chart type to recommend to the user. For example, the recommendation generator 160 may determine that the most relevant chart representing the data in the column is a geographic chart based on the entity type of the column. In one embodiment, the recommendation generator 160 may rank the available chart types based on the relevance of each type to the entity type of the column and display, for example, the top N related charts (where N is an integer greater than 0) to allow the user to select the desired chart. Alternatively or additionally, recommendation generator 160 may determine that no chart will accurately represent the data in the column and may decide not to recommend a chart at all, thereby avoiding making bad recommendations.
In some implementations, the recommendation generator 160 can trigger other additional features in the spreadsheet application 112. For example, recommendation generator 160 may determine that a particular layout would be most beneficial for displaying column data based on the determined column entity type. Based on this determination, recommendation generator 160 may trigger spreadsheet layout 114 features of spreadsheet application 112. In some implementations, the recommendation generator 160 can trigger additional information 116 features of the spreadsheet application 112. For example, the column entity type may be "employee name," and the recommendation generator 160 may identify additional information related to the employee name entity type, such as "employee family office" or "employee ID. The recommendation generator 160 may then add one or more columns with the identified additional information to the spreadsheet.
In some implementations, the determined chart and/or added columns may be presented to all users collaborating on the spreadsheet simultaneously, and each of the collaborating users may make changes to the determined chart and/or added columns, and then other collaborating users may see the determined chart and/or added columns in real time. In some embodiments, different types of charts may be presented to these different users collaborating on a spreadsheet based on different actions/preferences that the users have taken in the past.
Fig. 2 depicts an example of a system architecture 200 for adding machine understanding to spreadsheet data according to an embodiment of the present disclosure.
The cell entity determiner 154 may identify one or more entities in the data associated with each cell in the column. The data associated with each cell may be stored in spreadsheet data 194 of data store 190. The cell entity determiner 154 may include a cell data receiver 202, a Knowledge Graph (KG) viewer 204, and an entity assigner 206. The cell data receiver 202 can receive cell data from the spreadsheet data 194. The KG reviewer 204 may consult the knowledge graph 192 to identify one or more entities associated with the cell data. In one embodiment, KG viewer 204 may compare the cell data to the nodes in knowledge graph 192 to determine which nodes are most representative of the cell data. In one embodiment, KG reviewer 204 may be trained using machine learning to identify nodes on the knowledge graph associated with the given data. The entity reviewer 206 may then label each cell with its associated entity and entity type or entities from the knowledge graph.
Column annotator 156 can include cell entity aggregator 212, semantic meaning determiner 214, and column metadata updater 216. The cell entity aggregator 212 may aggregate the entity types of the cells in the column. For example, the cell entity aggregator 212 may generate a list of all entity types referenced by the cells in the column and include a total number of cells referencing each entity type. The semantic meaning determiner 214 may then use the aggregated entity type information to determine the semantic meaning of the column. The semantic meaning may represent a machine understanding of each column in the spreadsheet. The machine understanding of a column may refer to the most relevant entity type(s) (determined as discussed in more detail below) of one or more entity types (or entities) that may represent the content of the column. The column may then be annotated with the entity type associated with the semantic meaning of the column. Column metadata updater 216 may update column metadata 252 to include entity types associated with the semantic meaning of the column.
The cell annotator 158 may comprise an entity determiner 222 and a cell metadata updater 224. The entity determiner 222 can determine entities on the knowledge graph 192 that are associated with the cell data and share the same entity type as the column. Although each cell may be associated with more than one entity, the entity determiner 222 may determine entities that share the determined entity type of the column. The cell metadata updater 224 may then update the cell metadata 250 to link the cell with the determined entity on the knowledge graph 192.
The recommendation generator 160 may include a chart recommendation generator 162 and an additional information generator 164. The recommendation generator 160 may include additional components not shown here. The chart recommendation generator 162 may rank the available chart types based on their relevance to the entity type of the column being drawn. For example, chart recommendation generator 162 may assign a score to each chart type based on a rule set that takes into account the entity type of the column or based on the output of a machine learning model. Once the scores have been determined for each chart type, chart recommendation generator 162 may identify the chart with the highest score and recommend the chart to the user and/or add to the spreadsheet presented to the user. In one embodiment, chart recommendation generator 162 may rank the chart types based on their scores and recommend the top N charts, e.g., where N is an integer. Alternatively, chart recommendation generator 162 may display all chart options to the user in order of the user's score from the highest score to the lowest score. In one embodiment, the chart recommendation generator 162 may recommend one or more charts having scores that satisfy a threshold condition. For example, the assigned score value range may be 0 to 10, 10 indicating the most relevant chart type, and the lowest acceptable value may be set to 7. Accordingly, a threshold condition may be set to identify charts with scores equal to or above 7, and chart recommendation generator 162 may then recommend charts with scores equal to or above 7. The threshold condition may be adjustable.
In one embodiment, the rule set may direct which charts should be considered for particular semantic meanings associated with the content of the column, and/or what score should be assigned to each of the charts considered for particular semantic meanings associated with the content of the column. Semantic meaning may refer to one or more most relevant entities that may represent the content of a column. The rules may be different for different users or different levels or categories of users (e.g., based on browser type, screen resolution, etc.), and may be predetermined or configured based on user input.
In one embodiment, a training engine (not shown) may train a machine learning model using machine learning techniques to predict what charts a user will select for a particular column. For example, the model may be trained to assign a score to each chart type based on one or more entity types derived from the semantic meaning of the content of the column (and optionally based on one or more characteristics of the user to be provided with the chart recommendation). The training data may be based on collected historical data and may include training inputs and associated target outputs. The training input may include, for example, the entity type of the column in the spreadsheet that the user previously used, the characteristics of the user, and so forth. The training output may include previous user actions with respect to the chart for the respective column, such as user usage or selection of the chart, and/or identified chart preferences of the user. The training data may be associated with the user's account (e.g., based on a username and password), and the user may exit the processing device that collected such data at any time.
Once trained, the model may take entity types as input and provide weights ("scores") for each chart type as output. In some implementations, the input provided to the model may also include one or more characteristics of the particular user (e.g., browser type, screen resolution, etc.), recommending relevant charts for the particular user taking into account different preferences of different levels of users. The chart type with the highest score may be the chart most relevant to the entity type. In some implementations, different chart recommendations may be provided to different users for the same column in view of different preferences and/or past actions of the users (e.g., including different collaborators on the same spreadsheet). The machine learning model may consist of, for example, a single stage linear or nonlinear operation (e.g., support vector machine [ SVM ]), or may be a deep network, i.e., a machine learning model consisting of multiple stages of nonlinear operations. An example of a deep network is a neural network with one or more hidden layers, and such machine learning models may be trained by adjusting weights of the neural network, e.g., according to a back-propagation learning algorithm or the like.
The additional information generator 164 may use the entity type of the column to generate additional information associated with the entity type. The additional information generator 164 may automatically populate the additional information for the user. For example, semantic annotator 152 may have determined that the column entity type is "Country". Additional information generator 164 may collect additional information (e.g., population or capital city) from knowledge graph 192 regarding the countries listed in the column. In some embodiments, similar to chart recommendation generator 162 and as further described below with respect to fig. 5, additional information generator 164 may assign a score to each entity type in the knowledge graph based on a rule set that takes into account the entity type of the column or based on an output of a machine learning model. The additional information generator 164 may extract data from entities in the knowledge graph having entity types with scores exceeding a threshold condition. The additional information generator 164 may then recommend such additional information (i.e., the extracted data) to be included in the spreadsheet to the user, and/or may automatically add the information to the spreadsheet.
FIG. 3 illustrates a system 300 according to an embodiment of the present disclosure and an example of data passing between the entities illustrated in FIG. 1 for adding machine understanding on spreadsheet data.
Once the server device 150 receives the spreadsheet data from the client device 110, it may execute a semantic annotator 152. At operation 305, the semantic annotator may first implement the cell entity determiner 154, as described with respect to fig. 2. At operation 307, semantic annotator 152 may use the determined cell entity data to implement column annotator 156 and cell annotator 158, as described with respect to FIG. 2.
At operation 309, the semantic annotator 152 may update the spreadsheet data saved on the server device 150 or may be stored on a data store (not shown). The updated spreadsheet data can now be considered a machine understanding of the spreadsheet data. At operation 311, the server device 150 may then generate an understanding recommendation for the user of the client device 110 regarding the added machine to the spreadsheet data. For example, using machine understanding of the addition of spreadsheet data, a spreadsheet application may recommend relevant chart types to a user, or may add additional relevant information to a spreadsheet.
Fig. 4 and 5 depict flowcharts of a method 400 and a method 500 performed according to some embodiments of the present disclosure. Method 400 and method 500 may be performed by a client-based application running on client device 110. The client-based application may be executed by a processing device of client device 110.
For simplicity of explanation, the methodologies 400 and 500 of the present disclosure are depicted and described as a series of acts. However, acts in accordance with this disclosure may occur in various orders and/or concurrently, and with other acts not presented and described herein. Moreover, not all illustrated acts may be required to implement methodologies 400 and 500 in accordance with the disclosed subject matter. In addition, those skilled in the art will understand and appreciate that the methodologies 400 and 500 could alternatively be represented as a series of interrelated states via a state diagram or events. Additionally, it should be appreciated that the methodologies 400 and 500 disclosed herein are capable of being stored on an article of manufacture to facilitate transporting and transferring such methodologies to computing devices. The term "article of manufacture" as used herein is intended to encompass a computer program accessible from any computer-readable device or storage media.
FIG. 4 is a flow diagram of a method 400 for adding machine understanding to spreadsheet data and providing chart recommendations to a user, according to some embodiments of the present disclosure.
Referring to FIG. 4, at operation 402, a processing device of client device 110 may determine a data set, each item of data including contents of one or more cells in a column of a spreadsheet presented to a user.
At operation 404, the processing device may determine an entity type associated with the column based on the data set. The entity type may represent the semantic meaning of the data set in the column of the spreadsheet. Determining the entity type associated with the column may include identifying one or more entities associated with the data for each cell in the column. To identify one or more entities associated with the data of each cell, the processing device may identify the entities from a knowledge graph having a knowledge base with structured information about a plurality of entities and relational connections between the entities. Once the processing device has identified one or more entities associated with each cell, the processing device may determine one or more commonly shared entity types for the cells in the column. The commonly shared entity type may be determined based on the number of cells sharing the same entity type. If the number of cells sharing an entity type satisfies a threshold, it may be determined that the entity type is commonly shared. For example, if 95% of the cells in a column share an entity type, the processing device may determine that the entity type is shared in common throughout the column. The threshold may be adjustable. The processing device may then determine the semantic meaning of the column by determining which commonly shared entity type is shared among the maximum number of cells. The entity types that share the most together are then the semantic meaning of the column.
At operation 406, the processing device may identify at least one of the plurality of charts that is relevant (e.g., the most relevant one) to the entity type associated with the column. That is, the processing device may determine a score for each of the plurality of charts based on a set of rules that take into account the semantic meaning of the column or based on the output of the machine learning model. The processing device may then rank the charts and identify the chart with the highest score. In one embodiment, the processing device may identify one or more charts that are related to the entity type associated with the column. One or more identified charts may be considered relevant if their scores satisfy a threshold condition.
In one embodiment, the rule set may direct which charts should be considered for particular semantic meanings associated with the content of the column, and/or what score should be assigned to each of the charts considered for particular semantic meanings associated with the content of the column. The rules may be different for different users or different levels or categories of users (e.g., based on browser type, screen resolution, etc.), and may be predetermined or configured based on user input.
In one embodiment, the processing device may identify a rule corresponding to an entity type associated with a column. Based on the rule, the processing device may determine a subset of the charts for the entity type associated with the column, and may determine a score for each chart in the subset. The processing device may then identify the chart with the highest score among the determined subset of charts. Additionally or alternatively, the processing device may identify one or more charts from the subset for which the score satisfies a threshold condition (e.g., exceeds a set value).
As described above, the training engine may train the machine learning model using machine learning techniques to predict what charts the user will select for a particular column. Once trained, the model may take entity types as input and provide weights ("scores") for each chart type as output. In some implementations, the input provided to the model may also include one or more characteristics of the particular user (e.g., browser type, screen resolution, etc.), recommending relevant charts for the particular user taking into account different preferences of different levels of users. The graph type with the highest score may be the graph most relevant to the entity type.
At operation 408, the processing device may provide the identified chart for presentation to the user. In one embodiment, the processing device may provide recommendations to the user based on the identified chart. Then, in response to receiving a user selection of a recommended chart, the processing device may provide the chart for presentation to the user. In another implementation, the processing device may provide the user with a list of recommended charts, ranked by the score determined at operation 406. In some implementations, different chart recommendations may be provided to different users for the same column in view of different preferences and/or past actions of the users (e.g., including different collaborators on the same spreadsheet).
FIG. 5 depicts a flow diagram of a method 500 for adding machine understanding on spreadsheet data and providing additional information for presentation to a user in accordance with an embodiment of the present disclosure.
At operation 502, the processing device may determine a data set, each item of data including contents of one or more cells in a column of a spreadsheet presented to a user.
At operation 504, the processing device may determine, based on the data set, an entity type associated with a column that represents a semantic meaning of the data set in the column of the spreadsheet. The process may be the same as operation 404 described with respect to fig. 4.
At operation 506, the processing device may identify additional information related to the entity type associated with the column. In some embodiments, to identify additional information related to the entity type of the column, the processing device may identify, based on the knowledge graph, one or more additional entity types that are closely related to the entity type associated with the column. In particular, the processing device may first identify a first node in the knowledge graph that is associated with an entity type of the column. The processing device may then identify one or more nodes that are closely related to the first node. For example, if a node is connected by no more than one edge, the node may be closely related to another node. That is, two nodes can be considered to be closely related if they are directly connected to each other in the knowledge graph. Data in one or more closely connected nodes may be identified as additional information related to the entity type associated with the column.
In one embodiment, the processing device may also use a rule set to direct which entity types should be treated as additional information for the particular semantic meaning associated with the content of the column, and/or what score should be assigned to each of the entity types under consideration for the particular semantic meaning associated with the content of the column. The rules may be different for different users or different levels or categories of users (e.g., based on browser type, screen resolution, etc.), and may be predetermined or configured based on user input.
In one embodiment, the processing device may identify a rule corresponding to an entity type associated with a column. Based on the rule, the processing device may determine a subset of additional entity types with respect to the entity type associated with the column, and may also determine a score for each additional entity type in the subset. The processing device may then identify, among the determined subset of additional entity types, one or more additional entity types whose scores satisfy a threshold condition. For example, the assigned score may range from 0 to 10, with 10 representing the most closely related entity type and the lowest acceptable value may be set to 7. Accordingly, a threshold condition may be set to identify an entity type with a score equal to or higher than 7. The threshold condition may be adjustable.
In some implementations, to identify one or more additional entity types that are closely related to the entity type associated with the column, the processing device may train a machine learning model using machine learning techniques to predict which additional information the user may add to a spreadsheet containing the particular column. For example, the model may be trained to assign a weight or score to each entity type in the knowledge graph based on one or more entity types derived from the semantic meaning of the content of the column (and optionally based on one or more characteristics of the user to be provided with the additional information). The training data may be based on collected historical data and may include training inputs and associated target outputs. The training inputs may include, for example: the entity type of the column in the spreadsheet that the user previously used, the characteristics of the user, etc. The training output may include: previous user actions regarding additional information for the respective column, such as the inclusion of certain types of information by the user, and/or information preferences for user identification (e.g., user preferences for using standard metrics instead of metric units). The training data may be associated with the user's account (e.g., based on a username and password), and the user may exit the processing device that collected such data at any time.
Once trained, the model may take entity types as input and provide a weight ("score") for each additional entity type as output. In some implementations, the input provided to the model may also include one or more characteristics of the particular user (e.g., browser type, screen resolution, etc.), taking into account different preferences of different levels of users to recommend additional information for the particular user. The entity type with the highest score may be the entity type most relevant to the entered entity type. In some implementations, different entity types may be provided to different users for the same column in view of different preferences and/or past actions of the different users (e.g., including different collaborators on the same spreadsheet). The machine learning model may consist of, for example, a single stage linear or nonlinear operation (e.g., support vector machine [ SVM ]), or may be a deep network, i.e., a machine learning model consisting of multiple stages of nonlinear operations. An example of a deep network is a neural network with one or more hidden layers, and such machine learning models may be trained by adjusting weights of the neural network, e.g., according to a back-propagation learning algorithm or the like.
At operation 508, the processing device may add one or more columns with the identified additional information to the spreadsheet. In one embodiment, the processing device may provide a recommendation to the user based on the identified additional information. Then, in response to receiving the user selection, the processing device may add the identified additional information to one or more columns in the spreadsheet. That is, if there is one entity type that is closely related to the entity type of the column, the processing device may add one additional column that includes data from the closely related entity type. For example, if the column entity type is "country," the closely related entity type may be "capital city," and the processing device may add a column listing the capital cities of each country listed in the "country" column. The processing device may add more than one column if more than one entity type is closely related to the entity type of the column. For example, the processing device may add a column listing the capital city of each country and the population of each country. The processing device may be able to determine whether additional information is already present in the spreadsheet to avoid recommending adding duplicate data.
Fig. 6 depicts a block diagram of an example computing system operating in accordance with one or more aspects of the present disclosure. In various illustrative examples, computer system 600 may correspond to any of the computing devices within system architecture 100 of fig. 1. In one embodiment, computer system 600 may be server device 150 of FIG. 1.
In some embodiments, computer system 600 may be connected to other computer systems (e.g., via a network such as a Local Area Network (LAN), intranet, extranet, or the internet). The computer system 600 may operate in the capacity of a server or a client computer in a client-server environment, or as a peer computer in a peer-to-peer or distributed network environment. Computer system 600 may be provided by a Personal Computer (PC), a tablet PC, a set-top box (STB), a Personal Digital Assistant (PDA), a cellular telephone, a web appliance, a server, a network router, switch or bridge, or any device capable of executing a set of instructions (sequential or otherwise) that specify actions to be taken by that device. Additionally, the term "computer" shall include any collection of computers that individually or jointly execute a set (or multiple sets) of instructions to perform any one or more of the methodologies described herein.
In yet another aspect, computer system 800 may include a processing device 602, a volatile memory 604 (e.g., Random Access Memory (RAM)), a non-volatile memory 606 (e.g., read-only memory (ROM) or electrically erasable programmable ROM (eeprom)), and a data storage device 616, which may communicate with each other via a bus 608.
The processing device 602 may be provided by one or more processors, such as: a general-purpose processor (such as, for example, a Complex Instruction Set Computing (CISC) microprocessor, a Reduced Instruction Set Computing (RISC) microprocessor, a Very Long Instruction Word (VLIW) microprocessor, a microprocessor implementing other types of instruction sets, or a microprocessor implementing a combination of various types of instruction sets) or a special-purpose processor (such as, for example, an Application Specific Integrated Circuit (ASIC), a Field Programmable Gate Array (FPGA), a Digital Signal Processor (DSP), or a network processor).
The computer system 600 may also include a network interface device 622. Computer system 600 may also include a video display unit 610 (e.g., an LCD), an alphanumeric input device 612 (e.g., a keyboard), a cursor control device 614 (e.g., a mouse), and a signal generation device 620.
The data storage device 616 may include a non-transitory computer-readable storage medium 624 on which may be stored instructions 626 encoding any one or more of the methods or functions described herein, including implementing the methods 400 and 500, and for implementing the semantic annotator 152 and recommendation generator 160 of fig. 1 and 2.
The instructions 626 may also reside, completely or partially, within the volatile memory 604 and/or within the processing device 602 during execution thereof by the computer system 600, and thus the volatile memory 604 and the processing device 602 may also constitute machine-readable storage media.
While the computer-readable storage medium 624 is shown in an illustrative example to be a single medium, the term "computer-readable storage medium" should be taken to include a single medium or multiple media (e.g., a centralized or distributed database, and/or associated caches and servers) that store the one or more sets of executable instructions. The term "computer-readable storage medium" shall also be taken to include any tangible medium that is capable of storing or encoding a set of instructions for execution by the computer to cause the computer to perform any one or more of the methodologies described herein. The term "computer readable storage medium" shall include, but not be limited to, solid-state memories, optical media, and magnetic media.
The methods, components and features described herein may be implemented by discrete hardware components or may be integrated in the functionality of other hardware components such as ASICs, FPGAs, DSPs or similar devices. Furthermore, the methods, components and features may be implemented by firmware modules or functional circuits within hardware devices. Additionally, the methods, components and features may be implemented in any combination of hardware devices and computer program components or in a computer program.
Unless specifically stated otherwise, terms such as "initiating," "sending," "receiving," "analyzing," or the like, refer to actions and processes performed or effected by a computer system that manipulates and transforms data represented as physical (electronic) quantities within the computer system's registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage, transmission or display devices. In addition, the terms "first," "second," "third," "fourth," and the like, as used herein, refer to labels used to distinguish between different elements and may not have an ordinal meaning according to their numerical name.
Examples described herein also relate to an apparatus for performing the methods described herein. This apparatus may be specially constructed for performing the methods described herein, or it may comprise a general-purpose computer system selectively programmed by a computer program stored in the computer system. Such a computer program may be stored in a computer readable tangible storage medium.
The methods and illustrative examples described herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with the teachings described herein, or it may prove convenient to construct a more specialized apparatus to perform the methods 400 and 500, and/or each of their individual functions, routines, subroutines, or operations. Examples of the structure of various of these systems are set forth in the foregoing description.
The above description is intended to be illustrative, and not restrictive. While the present disclosure has been described with reference to specific illustrative examples and embodiments, it should be recognized that the present disclosure is not limited to the described examples and embodiments. The scope of the disclosure should be determined with reference to the appended claims, along with the full scope of equivalents to which such claims are entitled.
Claims (26)
1. A method of generating chart recommendations based on machine understanding of spreadsheet data, comprising:
determining, by a processing device, a data set, each item of data comprising content of one or more cells in a column of a spreadsheet presented to a user;
determining an entity type associated with the column based on the dataset, the entity type representing a semantic meaning of the dataset in the column;
identifying at least one of a plurality of charts that is relevant to the entity type associated with the column; and
providing the at least one chart for presentation to the user.
2. The method of claim 1, wherein determining the entity type associated with the column comprises:
identifying one or more entities associated with the data of each cell in the column, wherein each entity has an entity type;
determining one or more commonly shared entity types for the column based on a number of cells in the column that share a common entity type, wherein the number of cells satisfies a threshold condition; and
identifying, from the one or more commonly shared entity types, a commonly shared entity type having a maximum number of cells that share a common entity type as the entity type associated with the column.
3. The method of claim 2, wherein identifying one or more entities associated with the data of each cell in the column comprises: one or more entities are identified from a knowledge graph that includes a knowledge base having structured information about a plurality of entities and relational connections between the plurality of entities.
4. The method of claim 1, wherein identifying at least one of the plurality of charts that is relevant to the entity type associated with the column comprises:
determining a score for each chart of the plurality of charts based on a set of rules associated with the semantic meaning of the column; and
the chart with the highest score is identified.
5. The method of claim 1, wherein identifying at least one of the plurality of charts that is relevant to the entity type associated with the column comprises:
training a machine learning model using training data comprising the collected historical data to assign a score to each chart of the plurality of charts based on an entity type in a knowledge graph;
providing the entity type associated with the column as input to a trained machine learning model;
obtaining an output of the trained machine learning model, the output indicating a score for each chart of the plurality of charts of the column; and
the chart with the highest score is identified.
6. The method of claim 1, wherein identifying at least one of the plurality of charts that is relevant to the entity type associated with the column comprises:
identifying a rule corresponding to the entity type associated with the column;
determining a subset of the plurality of charts and a score for each chart in the subset with respect to the entity type associated with the column based on the rule; and
identifying the chart with the highest score in the subset.
7. The method of claim 1, wherein providing the at least one chart for presentation to the user comprises:
providing a recommendation to the user based on the at least one chart; and
in response to receiving a user selection, providing the at least one chart for presentation to the user.
8. The method of claim 1, further comprising annotating metadata associated with the column based on the semantic meaning of the column.
9. The method of claim 3, further comprising annotating metadata associated with each cell in the column based on a node in the knowledge graph, wherein the node represents one of the one or more entities associated with data in the respective cell and with the semantic meaning of the column.
10. A system for generating additional information for a spreadsheet based on machine understanding of spreadsheet data, the system comprising:
a memory; and
a processing device communicatively coupled to the memory, the processing device configured to:
determining a data set, each item of data comprising content of one or more cells in a column of the spreadsheet that is presented to a user;
determining an entity type associated with the column based on the dataset, the entity type representing a semantic meaning of the dataset in the column;
identifying additional information related to the entity type associated with the column; and
adding one or more columns with the additional information to the spreadsheet.
11. The system of claim 10, wherein to determine the entity type associated with the column, the processing device is further configured to:
identifying one or more entities associated with the data of each cell in the column, wherein each entity has an entity type;
determining one or more commonly shared entity types for the column based on a number of cells in the column that share a common entity type, wherein the number of cells satisfies a threshold condition; and
identifying, from the one or more commonly shared entity types, a commonly shared entity type having a maximum number of cells that share a common entity type as the entity type associated with the column.
12. The system of claim 11, wherein to identify one or more entities associated with the data of each cell in the column, the processing device is further configured to identify one or more entities from a knowledge graph comprising a knowledge base having structured information about a plurality of entities and relational connections between the plurality of entities.
13. The system of claim 10, wherein to identify additional information related to the entity type associated with the column, the processing device is further configured to:
identifying one or more additional entity types that are closely related to the entity type associated with the column;
identifying one or more additional entities in a knowledge graph comprising a knowledge base having structured information about a plurality of entities and relational connections between the plurality of entities, wherein the one or more additional entities are associated with the one or more additional entity types; and
data in the one or more additional entities is identified.
14. The system of claim 13, wherein to identify one or more additional entity types that are closely related to the entity type associated with the column, the processing device is further configured to:
training a machine learning model using training data comprising the collected historical data to assign a score to each entity type in the knowledge graph;
providing the entity type associated with the column as input to a trained machine learning model;
obtaining an output of the trained machine learning model, the output indicating a score for each additional entity type; and
identifying the one or more additional entity types having a threshold condition satisfied.
15. The system of claim 13, wherein to identify one or more additional entity types that are closely related to the entity type associated with the column, the processing device is further configured to:
identifying a rule corresponding to the entity type associated with the column;
determining, based on the rule, a set of additional entity types for the entity types associated with the column and a score for each additional entity type in the set; and
identifying one or more additional entity types in the set of additional entity types that have scores that satisfy a threshold condition.
16. The system of claim 10, wherein to add one or more columns with the additional information to the spreadsheet, the processing device is further configured to:
providing a recommendation to the user based on the additional information; and
in response to receiving a user selection, adding the additional information to the spreadsheet.
17. The system of claim 12, wherein the processing device is further configured to:
annotating metadata associated with the column based on the semantic meaning of the column; and
annotating metadata associated with each cell in the column based on a node in the knowledge graph, wherein the node represents one of the one or more entities that is associated with data in the respective cell and that is associated with the semantic meaning of the column.
18. A non-transitory machine-readable storage medium comprising instructions that, when executed, cause a processing device to perform operations for generating chart recommendations based on machine understanding of spreadsheet data, the operations comprising:
determining a data set, each item of data comprising contents of one or more cells in a column of a spreadsheet presented to a user;
determining an entity type associated with the column based on the dataset, the entity type representing a semantic meaning of the dataset in the column;
identifying one or more of a plurality of charts that are relevant to the entity type associated with the column; and
providing the one or more charts for presentation to the user.
19. The non-transitory machine-readable storage medium of claim 18, wherein determining the entity type associated with the column comprises:
identifying one or more entities associated with the data of each cell in the column, wherein each entity has an entity type;
determining one or more commonly shared entity types for the column based on a number of cells in the column that share a common entity type, wherein the number of cells satisfies a threshold condition; and
identifying, from the one or more commonly shared entity types, a commonly shared entity type having a maximum number of cells that share a common entity type as the entity type associated with the column.
20. The non-transitory machine-readable storage medium of claim 19, wherein identifying one or more entities associated with the data for each cell in the column comprises: one or more entities are identified from a knowledge graph that includes a knowledge base having structured information about a plurality of entities and relational connections between the plurality of entities.
21. The non-transitory machine-readable storage medium of claim 18, wherein identifying one or more of the plurality of charts that are relevant to the entity type associated with the column comprises:
determining a score for each chart of the plurality of charts based on a set of rules associated with the semantic meaning of the column; and
identifying the one or more charts having scores that satisfy a threshold condition.
22. The non-transitory machine-readable storage medium of claim 18, wherein identifying one or more of the plurality of charts that are relevant to the entity type associated with the column comprises:
training a machine learning model using training data comprising the collected historical data to assign a score to each chart of the plurality of charts based on an entity type in a knowledge graph;
providing the entity type associated with the column as input to a trained machine learning model;
obtaining an output of the trained machine learning model, the output indicating a score for each chart of the plurality of charts of the column; and
one or more charts having scores that satisfy a threshold condition are identified.
23. The non-transitory machine-readable storage medium of claim 18, wherein identifying one or more of the plurality of charts that are relevant to the entity type associated with the column comprises:
identifying a rule corresponding to the entity type associated with the column;
determining a subset of the plurality of charts and a score for each chart in the subset with respect to the entity type associated with the column based on the rule; and
one or more charts are identified in the subset having scores that satisfy a threshold condition.
24. The non-transitory machine-readable storage medium of claim 18, wherein providing the one or more charts for presentation to the user comprises:
providing a recommendation to the user based on the one or more charts;
receiving a user selection associated with one of the one or more charts; and
in response to receiving the user selection, providing the selected chart for presentation to the user.
25. The non-transitory machine-readable storage medium of claim 18, wherein the operations further comprise annotating metadata associated with the column based on the semantic meaning of the column.
26. The non-transitory machine-readable storage medium of claim 20, wherein the operations further comprise annotating metadata associated with each cell in the column based on a node in the knowledge graph, wherein the node represents one of the one or more entities that is associated with data in the respective cell and that is associated with the semantic meaning of the column.
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US16/853,491 | 2020-04-20 | ||
US16/853,491 US11562129B2 (en) | 2020-04-20 | 2020-04-20 | Adding machine understanding on spreadsheets data |
Publications (1)
Publication Number | Publication Date |
---|---|
CN112800773A true CN112800773A (en) | 2021-05-14 |
Family
ID=74187130
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202110047733.0A Pending CN112800773A (en) | 2020-04-20 | 2021-01-14 | Adding machine understanding to spreadsheet data |
Country Status (4)
Country | Link |
---|---|
US (2) | US11562129B2 (en) |
EP (1) | EP3901810A1 (en) |
CN (1) | CN112800773A (en) |
WO (1) | WO2021216471A1 (en) |
Families Citing this family (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2021220058A1 (en) * | 2020-05-01 | 2021-11-04 | Monday.com Ltd. | Digital processing systems and methods for enhanced collaborative workflow and networking systems, methods, and devices |
US11698890B2 (en) | 2018-07-04 | 2023-07-11 | Monday.com Ltd. | System and method for generating a column-oriented data structure repository for columns of single data types |
US20210150135A1 (en) | 2019-11-18 | 2021-05-20 | Monday.Com | Digital processing systems and methods for integrated graphs in cells of collaborative work system tables |
US11645523B2 (en) * | 2020-02-20 | 2023-05-09 | Adobe Inc. | Generating explanatory paths for predicted column annotations |
US11829953B1 (en) | 2020-05-01 | 2023-11-28 | Monday.com Ltd. | Digital processing systems and methods for managing sprints using linked electronic boards |
US11954605B2 (en) * | 2020-09-25 | 2024-04-09 | Sap Se | Systems and methods for intelligent labeling of instance data clusters based on knowledge graph |
US11397847B1 (en) | 2021-01-14 | 2022-07-26 | Monday.com Ltd. | Digital processing systems and methods for display pane scroll locking during collaborative document editing in collaborative work systems |
US11556514B2 (en) * | 2021-02-24 | 2023-01-17 | International Business Machines Corporation | Semantic data type classification in rectangular datasets |
US20230205746A1 (en) * | 2021-12-23 | 2023-06-29 | Microsoft Technology Licensing, Llc | Determination of recommended column types for columns in tabular data |
US11741071B1 (en) | 2022-12-28 | 2023-08-29 | Monday.com Ltd. | Digital processing systems and methods for navigating and viewing displayed content |
US11886683B1 (en) | 2022-12-30 | 2024-01-30 | Monday.com Ltd | Digital processing systems and methods for presenting board graphics |
US11893381B1 (en) | 2023-02-21 | 2024-02-06 | Monday.com Ltd | Digital processing systems and methods for reducing file bundle sizes |
CN117252183B (en) * | 2023-10-07 | 2024-04-02 | 之江实验室 | Semantic-based multi-source table automatic matching method, device and storage medium |
Family Cites Families (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7249328B1 (en) * | 1999-05-21 | 2007-07-24 | E-Numerate Solutions, Inc. | Tree view for reusable data markup language |
US8677235B2 (en) * | 2008-05-13 | 2014-03-18 | Microsoft Corporation | Ranking visualization types based upon fitness for visualizing a data set |
US9135233B2 (en) | 2011-10-13 | 2015-09-15 | Microsoft Technology Licensing, Llc | Suggesting alternate data mappings for charts |
US9798829B1 (en) | 2013-10-22 | 2017-10-24 | Google Inc. | Data graph interface |
CN106255965B (en) * | 2014-01-30 | 2021-01-01 | 微软技术许可有限责任公司 | Method and system for automatic understanding of electronic forms |
US9959265B1 (en) * | 2014-05-08 | 2018-05-01 | Google Llc | Populating values in a spreadsheet using semantic cues |
US10120851B2 (en) | 2016-06-30 | 2018-11-06 | Microsoft Technology Licensing, Llc | Automatic semantic data enrichment in a spreadsheet |
US11093703B2 (en) * | 2016-09-29 | 2021-08-17 | Google Llc | Generating charts from data in a data table |
US11080475B2 (en) * | 2017-01-17 | 2021-08-03 | Microsoft Technology Licensing, Llc | Predicting spreadsheet properties |
US11762890B2 (en) * | 2018-09-28 | 2023-09-19 | International Business Machines Corporation | Framework for analyzing table data by question answering systems |
US11195050B2 (en) * | 2019-02-05 | 2021-12-07 | Microstrategy Incorporated | Machine learning to generate and evaluate visualizations |
US20200252281A1 (en) * | 2019-02-05 | 2020-08-06 | Microstrategy Incorporated | System performance using semantic graph data |
US20200372077A1 (en) * | 2019-05-20 | 2020-11-26 | Microsoft Technology Licensing, Llc | Interactive chart recommender |
-
2020
- 2020-04-20 US US16/853,491 patent/US11562129B2/en active Active
-
2021
- 2021-01-14 CN CN202110047733.0A patent/CN112800773A/en active Pending
- 2021-01-18 EP EP21152034.1A patent/EP3901810A1/en active Pending
- 2021-04-19 WO PCT/US2021/028019 patent/WO2021216471A1/en active Application Filing
-
2023
- 2023-01-23 US US18/100,498 patent/US20230161956A1/en active Pending
Also Published As
Publication number | Publication date |
---|---|
EP3901810A1 (en) | 2021-10-27 |
WO2021216471A1 (en) | 2021-10-28 |
US20230161956A1 (en) | 2023-05-25 |
US11562129B2 (en) | 2023-01-24 |
US20210326519A1 (en) | 2021-10-21 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11562129B2 (en) | Adding machine understanding on spreadsheets data | |
US20220292103A1 (en) | Information service for facts extracted from differing sources on a wide area network | |
Arias et al. | Forecasting with twitter data | |
Ray et al. | Review and implementation of topic modeling in Hindi | |
Weber et al. | Coding the News: The role of computer code in filtering and distributing news | |
US20210406444A1 (en) | Advanced text tagging using key phrase extraction and key phrase generation | |
WO2020009709A1 (en) | User-specific text record-based format prediction | |
Smailović | Sentiment analysis in streams of microblogging posts | |
Brown et al. | Twenty-five years and counting: an analysis of the Journal of Strategic Marketing | |
Handhika et al. | Hybrid method for sentiment analysis using homogeneous ensemble classifier | |
Benmesbah et al. | An improved constrained learning path adaptation problem based on genetic algorithm | |
Azzini et al. | A classifier to identify soft skills in a researcher textual description | |
Wei et al. | Online education recommendation model based on user behavior data analysis | |
Uddin et al. | A Sciento-text framework to characterize research strength of institutions at fine-grained thematic area level | |
CN110334112B (en) | Resume information retrieval method and device | |
Lamrharia et al. | Business intelligence using the fuzzy-Kano model | |
Ren | Emotion analysis of cross-media writing text in the context of big data | |
Akella et al. | Sentiment Analysis Using Naïve Bayes Algorithm: With Case Study | |
US20200226159A1 (en) | System and method of generating reading lists | |
Yasmin et al. | Potential candidate selection using information extraction and skyline queries | |
CN112434126A (en) | Information processing method, device, equipment and storage medium | |
Fortino | Text Analytics for Business Decisions: A Case Study Approach | |
Kakulapati | Knowledge Extraction from Open Data Repository | |
Jiang et al. | Email importance evaluation in mailing list discussions | |
Keco et al. | Improving the prediction of social media engagement in universities by utilizing feature selection in machine learning |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
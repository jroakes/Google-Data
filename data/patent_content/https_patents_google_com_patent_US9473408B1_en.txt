US9473408B1 - Shortest first longer next routing with congestion reduction - Google Patents
Shortest first longer next routing with congestion reduction Download PDFInfo
- Publication number
- US9473408B1 US9473408B1 US14/154,452 US201414154452A US9473408B1 US 9473408 B1 US9473408 B1 US 9473408B1 US 201414154452 A US201414154452 A US 201414154452A US 9473408 B1 US9473408 B1 US 9473408B1
- Authority
- US
- United States
- Prior art keywords
- path
- congested
- ports
- paths
- pod
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
- 230000009467 reduction Effects 0.000 title description 3
- 238000000034 method Methods 0.000 claims abstract description 48
- 230000004044 response Effects 0.000 claims abstract description 12
- 230000015654 memory Effects 0.000 claims description 39
- 235000008694 Humulus lupulus Nutrition 0.000 claims description 15
- 238000004590 computer program Methods 0.000 claims description 15
- 230000003247 decreasing effect Effects 0.000 claims description 10
- 238000012545 processing Methods 0.000 claims description 9
- 238000004891 communication Methods 0.000 description 20
- 238000010586 diagram Methods 0.000 description 10
- 230000006870 function Effects 0.000 description 10
- 230000001934 delay Effects 0.000 description 6
- 230000008569 process Effects 0.000 description 4
- 230000000694 effects Effects 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 3
- 239000000872 buffer Substances 0.000 description 2
- 230000001413 cellular effect Effects 0.000 description 2
- 230000008859 change Effects 0.000 description 2
- 230000003993 interaction Effects 0.000 description 2
- 239000004973 liquid crystal related substance Substances 0.000 description 2
- 230000009471 action Effects 0.000 description 1
- 238000013459 approach Methods 0.000 description 1
- 230000008901 benefit Effects 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- COCAUCFPFHUGAA-MGNBDDOMSA-N n-[3-[(1s,7s)-5-amino-4-thia-6-azabicyclo[5.1.0]oct-5-en-7-yl]-4-fluorophenyl]-5-chloropyridine-2-carboxamide Chemical compound C=1C=C(F)C([C@@]23N=C(SCC[C@@H]2C3)N)=CC=1NC(=O)C1=CC=C(Cl)C=N1 COCAUCFPFHUGAA-MGNBDDOMSA-N 0.000 description 1
- 230000006855 networking Effects 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 239000013589 supplement Substances 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L47/00—Traffic control in data switching networks
- H04L47/10—Flow control; Congestion control
- H04L47/12—Avoiding congestion; Recovering from congestion
- H04L47/122—Avoiding congestion; Recovering from congestion by diverting traffic away from congested entities
Definitions
- This description relates to routing and a shortest first longer next routing with congestion reduction.
- Routers or switches in a network are typically responsible for receiving and forwarding packets. Each switch may perform a routing decision for each packet by, for example, performing a lookup into a forwarding table to identify an output port for forwarding the packet. Various routing algorithms have been used by switches or routers to identify an output port for forwarding each packet.
- a method may include transmitting traffic to a destination via at least a first path of a plurality of paths to the destination, each path including one or more path segments, a plurality of ports being associated with each path segment, receiving port congestion information for each of the plurality of ports associated with one or more of the path segments, determining whether each of the plurality of path segments is congested based on the port congestion information, wherein each of the path segments is determined to be congested when at least a threshold number of ports associated with the path segment are congested, making a first determination that the first path is congested and that one or more second paths are not congested, the one or more second paths having a same cost or higher cost than the first path, each of the paths is determined to be congested if one or more path segments of the path is congested, and re-routing at least some traffic directed to the destination from the congested first path to one or more of the uncongested second paths in response to the first determination.
- path cost may be determined based on a number of segments or hops for the path.
- each of the path segments may include a plurality of parallel links, each link connecting an edge port of a first POD (performance optimized data center) to an edge port of a second POD.
- path cost is based on a number of inter-POD segments or hops for the path.
- each of the path segments is determined to be congested when at least a threshold number of edge ports associated with the path segment of a source POD are congested.
- the re-routing at least some traffic directed to the destination from the congested first path to one or more of the uncongested second paths may include: increasing port weights for the one or more of the uncongested second paths to increase a likelihood that a flow or traffic will be transmitted to the destination via one of the second paths, and decreasing port weights for the congested first path to decrease a likelihood that a flow or traffic will be transmitted to the destination via the congested first path.
- the re-routing at least some traffic directed to the destination from the congested first path to one or more of the uncongested second paths may include updating a forwarding table for the destination for one or more switches by performing at least one of the following: decreasing a number of entries in the forwarding table for ports that are associated with the congested first path; and increasing a number of entries in the forwarding table for ports that are associated with the one or more of the uncongested second paths.
- the threshold may include a first threshold, and wherein one or more of the path segments, after previously being determined to be congested, is determined to be uncongested if less than a second threshold number of ports associated with the path segment are congested, wherein the second threshold is less than the first threshold.
- the method may further include receiving updated port congestion information for the plurality of ports, making a second determination, subsequent to the first determination, that the first path is still congested and that the one or more second paths are still not congested, and re-routing at least some additional traffic directed to the destination from the congested first path to the one or more uncongested second paths.
- the method may further include receiving updated port congestion information for the plurality of ports, making a second determination, subsequent to the first determination, that the first path is not congested, and re-routing at least some traffic directed to the destination from the one or more second paths to the uncongested first path, the first path having a lower cost than the one or more second paths.
- the re-routing at least some traffic directed to the destination from the one or more second paths to the uncongested first path may include updating a forwarding table for the destination for one or more switches by performing at least one of the following: increasing a number of entries in the forwarding table for ports that are associated with the uncongested first path, and decreasing a number of entries in the forwarding table for ports that are associated with the one or more second paths.
- the method may further include receiving updated port congestion information for the plurality of ports, making a second determination, subsequent to the first determination, that the first path and the one or more second paths are congested, and that one or more third paths are not congested, wherein the one or more third paths having a higher cost than the first path and the one or more second paths, and re-routing at least some traffic directed to the destination from the congested first path and the congested one or more second paths to the uncongested one or more third paths.
- the method further including re-routing at least some of the traffic that is routed to the destination via the first path from using one or more of the congested first group of ports to using one or more of the second group of ports.
- a computer program product includes a non-transitory computer-readable storage medium and storing executable code that, when executed by at least one data processing apparatus, is configured to cause the at least one data processing apparatus to perform a method that includes: transmitting traffic to a destination via at least a first path of a plurality of paths to the destination, each path including one or more path segments, a plurality of ports being associated with each path segment, receiving port congestion information for each of the plurality of ports associated with one or more of the path segments, determining whether each of the plurality of path segments is congested based on the port congestion information, wherein each of the path segments is determined to be congested when at least a threshold number of ports associated with the path segment are congested, making a first determination that the first path is congested and that one or more second paths are not congested, the one or more second paths having a same cost or higher cost than the first path, each of the paths is determined to be congested if one or more path segments of the path
- an apparatus may include at least one processor and at least one memory including computer instructions, when executed by the at least one processor, cause the apparatus to: transmit traffic to a destination via at least a first path of a plurality of paths to the destination, each path including one or more path segments, a plurality of ports being associated with each path segment, receive port congestion information for each of the plurality of ports associated with one or more of the path segments, determine whether each of the plurality of path segments is congested based on the port congestion information, wherein each of the path segments is determined to be congested when at least a threshold number of ports associated with the path segment are congested, make a first determination that the first path is congested and that one or more second paths are not congested, the one or more second paths having a same cost or higher cost than the first path, each of the paths is determined to be congested if one or more path segments of the path is congested, and re-route at least some traffic directed to the destination from the congested first path to one or more
- a method may include receiving, at a controller for a first POD (performance optimized data center), port congestion information from each of a plurality of reporting switches, determining if any ports of the reporting switches are congested based on the port congestion information, determining whether each of a plurality of path segments from the first POD to one or more adjacent PODs are congested, wherein each of the path segments is determined to be congested if at least a threshold number of ports associated with the path segment are congested, and sending a message to a network controller indicating a congestion status, as either congested or not congested, for each of one or more of the path segments.
- a network controller indicating a congestion status, as either congested or not congested, for each of one or more of the path segments.
- the method may further include receiving, at the controller for the first POD from the network controller, one or more path segment update instructions that instruct the controller for the first POD to adjust an amount of traffic transmitted via one or more of the path segments, determining forwarding table updates for one or more switches of the first POD to adjust an amount of traffic transmitted via one or more of the path segments in accordance with the one or more path segment update instructions, and sending the determined forwarding table updates to one or more switches within the POD.
- a computer program product including a non-transitory computer-readable storage medium and storing executable code that, when executed by at least one data processing apparatus, is configured to cause the at least one data processing apparatus to perform a method including: receiving, at a controller for a first POD (performance optimized data center), port congestion information from each of a plurality of reporting switches, determining if any ports of the reporting switches are congested based on the port congestion information, determining whether each of a plurality of path segments from the first POD to one or more adjacent PODs are congested, wherein each of the path segments is determined to be congested if at least a threshold number of ports associated with the path segment are congested, and sending a message to a network controller indicating a congestion status, as either congested or not congested, for each of one or more of the path segments.
- a controller for a first POD performance optimized data center
- an apparatus includes at least one processor and at least one memory including computer instructions, when executed by the at least one processor, cause the apparatus to: receive, at a controller for a first POD (performance optimized data center), port congestion information from each of a plurality of reporting switches, determine if any ports of the reporting switches are congested based on the port congestion information, determine whether each of a plurality of path segments from the first POD to one or more adjacent PODs are congested, wherein each of the path segments is determined to be congested if at least a threshold number of ports associated with the path segment are congested, and send a message to a network controller indicating a congestion status, as either congested or not congested, for each of one or more of the path segments.
- a controller for a first POD performance optimized data center
- an apparatus may include means for transmitting traffic to a destination via at least a first path of a plurality of paths to the destination, each path including one or more path segments, a plurality of ports being associated with each path segment, receiving port congestion information for each of the plurality of ports associated with one or more of the path segments, means for determining whether each of the plurality of path segments is congested based on the port congestion information, wherein each of the path segments is determined to be congested when at least a threshold number of ports associated with the path segment are congested, means for making a first determination that the first path is congested and that one or more second paths are not congested, the one or more second paths having a same cost or higher cost than the first path, each of the paths is determined to be congested if one or more path segments of the path is congested, and means for re-routing at least some traffic directed to the destination from the congested first path to one or more of the uncongested second paths in response to the first determination.
- an apparatus may include means for receiving, at a controller for a first POD (performance optimized data center), port congestion information from each of a plurality of reporting switches, means for determining if any ports of the reporting switches are congested based on the port congestion information, means for determining whether each of a plurality of path segments from the first POD to one or more adjacent PODs are congested, wherein each of the path segments is determined to be congested if at least a threshold number of ports associated with the path segment are congested, and means for sending a message to a network controller indicating a congestion status, as either congested or not congested, for each of one or more of the path segments.
- POD performance optimized data center
- FIG. 1 is a block diagram illustrating a network according to an example implementation.
- FIG. 2 is a diagram illustrating routing of traffic on a network according to an example implementation.
- FIG. 3 is a diagram illustrating paths from node A to node B that are not congested according to an example implementation.
- FIG. 4 is a diagram illustrating a 3-hop path from node A to node B that is not congested according to another example implementation.
- FIG. 5 is a diagram illustrating a network of nodes according to another illustrative example.
- FIG. 6 is a flow chart illustrating operation of a network according to an example implementation.
- FIG. 7 is a flow chart illustrating operation of a controller in a network according to another example implementation.
- FIG. 8 shows an example of a computer device and a mobile computer device that can be used to implement the techniques described here.
- This document describes systems and techniques relating to routing, and in particular to a shortest first, longer next, routing technique that includes congestion reduction.
- routing of traffic is prioritized for a network from a source, such as a source performance optimized data center (POD) towards a destination, such as a destination POD over a set of one or more lowest-cost (or lower-cost) paths, e.g., shortest paths or paths with a lowest number of hops between the source and the destination.
- a source such as a source performance optimized data center (POD)
- a destination such as a destination POD
- lowest-cost paths e.g., shortest paths or paths with a lowest number of hops between the source and the destination.
- the lowest-cost path becomes congested
- at least a portion or some of the traffic directed to the destination is moved or re-routed from the lowest-cost path to one or more second paths that are the same cost or higher cost than the lowest-cost path.
- the re-routing of traffic may be a gradual or incremental change, rather than a complete moving or re-routing of traffic to a new path, for example.
- a network may include multiple PODs, where each POD may include a plurality of interconnected switches.
- Each path may include one or more path segments, e.g., inter-POD segments or segments that connect two PODs together.
- a path may be considered (or determined) to be congested when any path segment of (or along) the path becomes congested.
- there may be a plurality of ports associated with each path segment.
- a path segment may be determined to be congested when at least a threshold number of the ports associated with the path segment become (or are) congested.
- port congestion information for ports within the POD may be periodically collected or received by a POD controller (or controller for a POD) from switches of the POD.
- port congestion information e.g., which may include information that may indicate whether each port has become congested or not, may be collected or received by a POD controller for at least edge ports of the POD.
- edge ports of a POD may include ports that are directly connected via a link to an adjacent POD.
- the POD controller may determine whether any of one or more path segments are congested. For example, a path segment may be determined by the POD controller to be congested if at least a threshold number of ports (e.g., edge ports) associated with the path segment are congested.
- traffic e.g., for one or more flows, may be transmitted from a source (e.g., source POD) to a destination (e.g., destination POD) via a lowest-cost path, or a set of one or more lowest-cost paths.
- the lowest-cost path may be a path from the source to the destination and may have a fewest number of hops or path segments.
- a number of hops is one example of path cost, and other criteria (such as delay) may be used to determine a cost of each path.
- a lowest-cost path may be, for example, a single (or one) hop (or one path segment) path directly from a source subnet (or source POD) to a destination subnet (or source POD).
- Higher-cost (or greater hop) paths may also be available, such as two-hop (two path segment) paths, three-hop (three path segment) paths, etc.
- the port congestion information may indicate that the lowest-cost path(s) has become congested.
- a path may be congested when at least a first threshold number of ports (e.g., edge ports at a source POD) associated with the path have become congested.
- a first threshold number of ports e.g., edge ports at a source POD
- any paths that use that congested path segment may be determined or marked by the POD controller as congested.
- the POD controller may then incrementally increase the amount of traffic directed to the destination over one or more uncongested paths (via a path segment that is not congested), where, for example, the one or more uncongested paths may be the same or higher cost than the congested lowest-cost path.
- the POD controller may re-route at least some of the traffic to the destination from the congested lowest-cost path to one or more uncongested paths (e.g., via an uncongested path segment) that are the same or higher cost than the lowest-cost path.
- the lowest-cost path may include one hop or one path segment, whereas the one or more uncongested paths may be two hops or may include two path segments. This is just one example, and others may be used.
- the port congestion information subsequently indicates that the lowest-cost path is no longer congested, then some traffic directed to the destination may be moved or re-routed from one or more of the higher-cost paths back to the lowest-cost path(s).
- the re-routing of traffic based on path or path segment congestion status may be performed in a gradual or incremental fashion, e.g., where a relatively small or an incremental amount of traffic is moved or re-routed among paths over time, depending on congestion status.
- FIG. 1 is a block diagram illustrating a network according to an example implementation.
- Network 100 may include a plurality of interconnected subnets or performance optimized data centers (PODs), such as POD A, POD B, POD C, etc. Although only three PODs are shown in network 100 of FIG. 1 , any number of PODs may be provided.
- a POD may include a plurality of interconnected switches or routers (hereinafter switches). Within a POD, the switches may be connected or arranged in a mesh arrangement, for example, with each switch connected to one or more other switches.
- the arrangement of the network 100 shown in example implementation of FIG. 1 is merely an example, and other networks, arrangements or network configurations may be used.
- Each POD may include a plurality of interconnected switches.
- POD A may include switches 120 A, 120 B, 120 C, 120 D as an upper row of switches, switches 120 E, 120 F, 120 G and 120 H as a middle row of switches, and switches 120 I, 120 J, 120 K and 120 L as a lower row of switches.
- POD A includes 12 switches, but this is merely an example, and a POD or subnet may include any number of switches.
- the switches of POD A may be connected or provided in a mesh arrangement, with one or more of the switches connected to one or more other switches in the POD, and to other PODs or devices.
- switch 120 E is connected to switches 120 A, 120 B, 120 I and 120 L, as examples.
- Switch 120 A is connected to switch 120 E, switch 120 H and to POD B (or a switch not shown in POD B). While the example switches are shown only for POD A, the other PODs (e.g., PODs B and C) of network 100 may include a similar arrangement or interconnection of switches.
- Each of the switches may include a forwarding table or routing table.
- switch 120 A may include a forwarding table 122 A, which may include a forwarding table for each destination.
- the forwarding table 122 A may include one or more entries, where each entry in the forwarding table identifies a port or output port for forwarding outputting the received packet.
- switch 120 A (or a processor included within switch 120 A) may perform a lookup into a content addressable memory (CAM) based on one or more fields of the received packet to identify an entry in the forwarding table that identifies a port of the switch 120 A for forwarding the packet. The switch may then forward or output the packet via the identified port of the switch 120 A.
- CAM content addressable memory
- PODs may be interconnected by a path segment (or one or more path segments).
- a path segment may be, or may include, one or more (e.g., parallel) communication links between two PODs.
- one or more switches within each POD may include edge ports.
- edge ports of a POD may include ports that are on the edge of the POD, and/or ports of a POD that are directly connected via a link to an adjacent POD.
- ports 1 and 2 (p1, p2) of switches 120 A, 120 B, 120 C and 120 D may be considered edge ports. Port 1 of each of these switches ( 120 A, 120 B, 120 C, and 120 D) is connected via a respective link to POD B.
- an A ⁇ B path segment 134 may include the parallel communication links (or links) 134 A, 134 B, 134 C and 134 D.
- link 134 A connects port 1 of switch 120 A to POD B
- link 134 B connects port 1 of switch 120 B to POD B
- link 134 C connects port 1 of switch 120 C to POD B
- link 134 D connects port 1 of switch 120 D to POD B.
- the A ⁇ C path segment 140 may include a group of parallel links between POD A and POD C, including links 140 A, 140 B, 140 C and 140 D.
- a path from a source to a destination may include one or more path segments or hops.
- a lowest-cost path from POD A to POD B may be or include the A ⁇ B path segment, which is just one hop or one path segment.
- a higher-cost path from POD A to POD B may be the path A ⁇ C ⁇ B, which includes two path segments (the A ⁇ C path segment, and then the C ⁇ B path segment).
- a packet may also traverse one or more internal switches that are internal to each POD (e.g., switches 120 E, 120 F of POD A), but these internal hops are not part of the path or path segments, which may refer to inter-POD path segments, or path segments between PODs, according to an example implementation. These are merely some illustrative examples of paths, and others may be used.
- network 100 may include one or more controllers, such as a POD controller for each POD and a network (or central) controller 130 .
- POD A may include a POD controller 150 for communicating with switches within the POD A and performing functions or tasks specific to POD A.
- Other PODs may similarly include a POD controller.
- the POD controller 150 for POD A may receive and store port congestion information for various ports from switches within POD A.
- Network controller 130 may, for example, communicate with POD controllers within the network 100 , and may perform functions or tasks for the network 100 .
- Network controller 130 may receive from one or more POD controllers and store in memory a congestion status 132 for one or more paths or path segments, as described in greater detail herein below.
- routing of traffic may be prioritized from a source to a destination over a set of one or more lowest-cost (or lower-cost) paths.
- the lowest-cost path becomes congested, at least a portion or some of the traffic directed to the destination may be moved or re-routed from the lowest-cost path to one or more second paths that are the same cost or higher cost than the lowest-cost path.
- the re-routing of traffic may be a gradual or incremental change, rather than a complete moving or re-routing of traffic to a new path, for example.
- a path segment may include one or more parallel links from one POD to another POD, for example.
- the one or more ports associated with a path segment may include the one or more edge ports on a source POD of the path segment.
- a source POD for example, may be a POD where a packet is being forwarded from, and a destination POD may be a POD to which the packet is being forwarded.
- port 1 of switch 120 A, port 1 of switch 120 B, port 1 of switch 120 C and port 1 of switch 120 D may be associated with A ⁇ B path segment 134 .
- port 2 of switch 120 A, port 2 of switch 120 B, port 2 of switch 120 C and port 2 of switch 120 D may be associated with A ⁇ C path segment 140 .
- a path segment may be determined to be congested when at least a threshold number of the ports associated with the path segment become (or are) congested. For example, there are 4 ports spread across or among multiple (e.g., 4 ) different switches (switches 120 A, 120 B, 120 C and 120 D) that are associated with the A ⁇ B path segment 134 .
- edge ports at a source POD may be associated with a path segment if the edge ports are connected to links of the path segment.
- the A ⁇ B path segment 134 may be considered or determined to be congested if at least three of the ports associated with the path segment 134 are congested.
- the threshold is three.
- a threshold of five or six ports may be used. These are merely some examples, and any number of ports may be associated with a path segment and any number may be used (that is less than or equal to the number of ports associated with the path segment) as a threshold for a path segment for determining when that path segment is congested.
- a path may be determined to be congested if any path segment along such path is congested. Therefore, the path A ⁇ C ⁇ B (e.g., which is a path from POD A to POD C to POD B) may be determined to be congested if either the A ⁇ C path segment is congested or the C ⁇ B path segment is congested. As noted, a path segment may be determined to be congested if at least a threshold number of ports (e.g., edge ports) associated with that path segment are congested. According to one example implementation, once a path segment is determined to be congested, then any paths that include (or use) that path segment may also be considered or determined to be congested.
- a threshold number of ports e.g., edge ports
- a path e.g., a lowest-cost path
- at least some traffic being handled or carried on such congested path may be re-routed to one or more other uncongested paths.
- port congestion information for ports within the POD may be periodically collected or received by a POD controller (or controller for a POD) from switches of the POD.
- port congestion information e.g., which may include information that may indicate whether each port has become congested or not, may be collected or received by a POD controller 150 for at least edge ports of the POD. Some edge ports are shown and described above for POD A, but other ports may also be considered as edge ports for POD A.
- the POD controller 150 may determine whether any of one or more path segments are congested.
- POD controller 150 may determine that the A ⁇ B path segment 134 is congested if at least a threshold number of (e.g., three) ports associated with the path segment 134 are congested. A different threshold may be used for each path segment.
- POD A may be a source POD and have associated edge ports for other path segments, such as for A ⁇ C path segment 140 .
- POD controllers at other PODs e.g., PODS B and C
- Port congestion information may be collected by each switch and reported to its POD controller using a variety of different techniques. For example, when one or more packet buffers or queues at a switch exceed a threshold level of fullness, the switch my begin dropping packets.
- the switch may, for example, include a packet drop counter for each of its ports that is incremented each time a packet is dropped. The number of packets dropped per port may be reported to the POD controller 150 .
- explicit congestion notification may be used by one or more of the switches to provide a congestion notification or communicate with other switches along a path when the switch has detected congestion. For example, when a switch in a POD detects congestion on an outgoing link (e.g., one or more packet queues or buffers for packets to be transmitted reach a threshold level of fullness), then a CE (congestion experienced) bit may be set by the switch in one or more packets that are forwarded, rather than dropping the packet(s).
- an outgoing link e.g., one or more packet queues or buffers for packets to be transmitted reach a threshold level of fullness
- a receiver at the end of a path may receive the packet (s) with the CE bit set, and may send a reply (or congestion acknowledgement), such as a ECN-echo (ECE flag is set) on one or more outgoing packets in the opposite direction, which may eventually reach the source of the original packet, and may cause the source to reduce the rate of transmitted packets and thereby decrease congestion along the path.
- a switch may provide a count of the number of packets forwarded per port with the CE bit set, or may count the number of packets received and forwarded that included a CE bit that was set.
- This ECN information, on a per port basis (or for each port) may be collected by one or more switches and reported to the POD controller 150 , for example. These are merely some illustrative examples of port congestion information that may be collected by a switch and reported to the POD controller 150 . Many other techniques may be used to detect, collect and communicate port congestion information.
- switches within each of the PODs may collect and report port congestion information for their ports to the POD controller.
- the POD controller 150 may determine if any path segment (e.g., any path segments having a source of such segment that is POD A, such as A ⁇ C path segment or A ⁇ B path segment) are congested based on the port congestion information. For example, POD controller 150 may identify any congested ports based on the port congestion information. The POD controller 150 may then determine whether any path segment is congested, e.g., by determining whether at least a threshold number of ports associated with the path segment are congested.
- a different threshold number of ports may be used for each path segment, and the threshold may depend upon the total number of ports associated with the path segment. For example a threshold may be provided as a percentage of ports associated with the path segment, e.g., 50%, 55%, 60%, as examples.
- the POD controller 150 may then send a message to network controller 130 indicating a path segment congestion status, e.g., as either congested or not congested, for one or more path segments. For example, the message from POD controller 150 to network controller may indicate:
- path segment A ⁇ B Congested; path segment A ⁇ C—Not Congested
- a path segment may be directional. Thus there may be a different status for the two path segments: A ⁇ B, and B ⁇ A.
- the network controller 130 may then determine if any paths within the network are congested based on the path segment congestion status received from each of the POD controllers for the various path segments. As noted, according to an example implementation, a path from a source to a destination is considered congested if any path segment along such path is congested. Based on the path segment congestion status information, the network controller 130 is able to determine which paths are congested, and identify one or more other uncongested paths that may be used to re-route at least some traffic.
- the network controller 130 may re-route at least some traffic to the destination from the congested lowest-cost path to one or more uncongested higher-cost paths.
- the network controller 130 may identify one or more congested paths based on the congestion status of one or more path segments received from one or more POD controllers. Also, based on this path segment congestion status information, the network controller may identify one or more other uncongested paths that should (or may) be used to re-route some traffic for one or more destinations.
- each POD controller may have information regarding the status of ports, congestion and switches within its own POD, and does not necessarily have a view or information regarding the congestion or status of ports, switches, etc. outside of its own POD.
- network controller 130 may receive status and other information from all of the PODS/POD controllers, such as path segment congestion status for various path segments as reported from the different POD controllers. Therefore, the network controller 130 is able to determine which paths are congested, and is able to identify one or more alternate uncongested paths for each destination within the network.
- the network controller 130 may then send one or more path segment update instructions to each of one or more POD controllers to instruct the POD controller to re-route at least some traffic from a first congested path via a first path segment to a second uncongested path via a second path segment (or alternatively to re-route at least some traffic to a plurality of uncongested second paths via their respective path segments).
- a path segment update instruction may instruct a POD controller to increase traffic or decrease traffic to a path or path segment, e.g., for traffic directed to a specific destination. For example, if direct path A ⁇ B become congested for the destination of B, then network controller 130 may re-route some traffic from the A ⁇ B path to a next-highest cost path A ⁇ C ⁇ B.
- the network controller 130 may send a path segment update instruction(s) that, for example, instructs the POD controller 150 for POD A, for traffic directed to destination B (POD B), to re-route at least some traffic from congested path A ⁇ B (via path segment B) to uncongested path A ⁇ C ⁇ B (via path segment C).
- the path segment update instruction(s) may simply instruct the POD controller 150 to increase some of the traffic directed to B via path segment C, and/or to decrease the traffic directed to B that is transmitted via path segment B, which will have the effect of re-routing at least some of the traffic directed to B from the A ⁇ B path to the A ⁇ C ⁇ B path, for example.
- the POD controller 150 for POD A may determine forwarding table updates for one or more (or even all) of the switches within POD A in order to effect or perform the path or path segment updates received from the network controller 130 (e.g., as specified by the path segment update instructions). Some examples are described below with respect to FIGS. 2-4 in which forwarding tables are updated to re-route at least some traffic to one or more uncongested paths.
- the use of a POD controller for each POD and a network controller 130 for the network is one illustrative example, and other network configurations may be used.
- possible rationale for prioritizing routing of traffic on the shorter or lower-cost paths may include: 1) higher throughput, since transmitting data using fewer network resources, e.g., fewer links per byte of transmitted data typically leads to higher throughput in the network, and 2) lower delays, since traversing fewer hops towards a destination generally results in a smaller aggregate delays (e.g., smaller queuing delays, switching delays and/or propagation delays) for the transmission of data within a network(s).
- aggregate delays e.g., smaller queuing delays, switching delays and/or propagation delays
- re-routing traffic in a gradual manner may also assist with alleviating out-of-order delivery when flows are re-mapped to other paths.
- flows may be re-mapped to paths of different lengths when a path congestion status changes, e.g., a path is determined to be congested or not congested.
- a flow is not necessarily remapped to a new path when a congestion status changes for an existing path used for the flow.
- a flow may be re-routed to a destination over a new path (via a new or different path segment).
- a forwarding table for each destination may be provided for (or at) each switch within a POD or subnet within a network.
- a hash function may be performed by a switch on one or more fields (e.g., a 5-tuple of source IP address, destination IP address, source port and destination port and protocol type) for each received packet to determine a port for forwarding the packet.
- the resulting hash may be used to perform a lookup into one of N entries of the forwarding table to identify a port for forwarding the packet.
- One or more entries may be provided for each of the different ports.
- Each port may be associated with a path segment or path of a plurality of different paths.
- one or more entries for a port may be added to a forwarding table to increase a likelihood that such port (and thus, the associated path) will be selected for forwarding a packet or flow.
- one or more entries for a port may be removed or deleted from a forwarding table to decrease a likelihood that such port (and thus the associated path) will be selected for forwarding the packet or flow.
- some incremental traffic may be moved or re-routed from a lowest-cost path to one or more higher-cost paths when the lowest-cost path becomes congested.
- some incremental traffic may be moved or re-routed by, for example, performing one or more of the following for one or more switches in a network: decreasing a number of entries in a forwarding table for ports that are associated with the congested lowest-cost path, and/or increasing a number of entries in the forwarding table for ports that are associated with an uncongested and next lowest-cost path(s).
- performing one or both of these actions when congestion is detected on the lowest-cost path may result in an incremental increase in traffic over the one or more uncongested next lowest-cost paths, and an incremental decrease in traffic over the congested lowest-cost path.
- a similar process may be used to move traffic back to the lowest-cost path.
- one or more forwarding table entries may be added to forwarding tables for port(s) associated with the lowest-cost path and/or one or more forwarding table entries may be deleted or removed for port(s) associated with higher-cost path(s) to incrementally move some traffic back to the lowest-cost path when such lowest-cost path becomes uncongested, for example.
- FIG. 2 is a diagram illustrating routing of traffic on a network according to an example implementation.
- four nodes are shown including node A, node B, node C, and node D, which may simply be referred to as A, B, C and D.
- Nodes may be (or may represent) PODs.
- a node may be a switch located in a POD that is connected to one or more other PODs (or connected to other switches at other PODs).
- node A may be a switch at an edge of POD A
- node B may be a switch within POD B
- node C may be a switch within POD C
- node D may be a switch within node D.
- Each of the nodes (A, B, C and D) may include one or more forwarding tables that may be used to perform a lookup to determine a port for forwarding packets.
- path segments are provided between each of the nodes, including A ⁇ B path segment 210 , A ⁇ C path segment 212 , A ⁇ D path segment 214 , D ⁇ C path segment 216 , D ⁇ B path segment 218 and C ⁇ B path segment 220 .
- node A may be sending data or packets (traffic) to node B. Initially, traffic directed from node A to node B may be transmitted from port 1 of node A to node B via the A ⁇ B path segment 210 .
- Node A may also be: connected from port 2 to C via A ⁇ C path segment 212 , and connected from port 3 to node D via the A ⁇ D path segment 214 .
- each path segment may include multiple links in parallel, e.g., from different ports and switches within a POD.
- the A ⁇ B path segment 210 in fact may include multiple communication links, each link connected to a respective port on POD A.
- each path segment may include any number of associated ports.
- the forwarding table used by node A for node B as a traffic destination may be something like the following, as an example:
- Entry 1 (A ⁇ B path segment for A ⁇ B path)
- the example Table 1 there is only one entry, which specifies port 1 for node A, when node B is the destination. Therefore, in this example, all traffic received at node A that is directed to node B would initially be forwarded via port 1 to node B via the A ⁇ B path segment for the A ⁇ B path, which is the lowest-cost path from POD A to POD B. However, at some point, the A ⁇ B path segment 210 may become congested, e.g., if at least a first threshold number of ports at POD A associated with the A ⁇ B path segment 210 are congested.
- POD controller 150 for POD A may receive port congestion information from various switches within POD A and may detect when at least a threshold number of ports associated with the A ⁇ B path segment 210 have become congested. These ports associated with this path segment 210 may be distributed across multiple switches within POD A.
- node A may update its forwarding table to increase the port weights for one or more uncongested second paths that may be the same or higher cost (e.g., same or greater number of hops/path segments) as the lowest-cost path from A ⁇ B, and/or may decrease the port weights for the congested lowest-cost path.
- These changes to the forwarding table for node A may increase a likelihood that a flow or traffic directed to node B/POD B will be transmitted via one of these uncongested second paths and may decrease the likelihood that traffic directed to POD B/node B will be transmitted via the congested lowest-cost path that uses the A ⁇ B path segment 210 . Therefore, these forwarding table changes may cause some of the traffic directed to node B to be re-routed from the lowest-cost path to one or more uncongested second (higher-cost) paths.
- POD A controller 150 may report path segment congestion status for each path segment to network controller 130 .
- Network controller 130 may identify one or more second uncongested paths from node A to node B, based on the path segment congestion status for each of these path segments.
- the network controller 130 may then send to POD A controller 150 one or more path segment update instructions, which may instruct POD A controller 150 to increase or decrease traffic on one or more paths or path segments for traffic directed to node B or POD B.
- POD A controller 150 may then generate and send forwarding table updates to one or more switches within POD A in order to accomplish the changes to the routing of traffic as instructed by the path segment update instructions received from the network controller 130 .
- node A may receive forwarding table updates from POD A controller 150 , e.g., that include adding one or more entries for each of the next lowest-cost paths, A ⁇ D ⁇ B path, and the A ⁇ C> ⁇ B path, as both of these paths are 2 hop paths from node A to node B.
- FIG. 3 is a diagram illustrating paths from node A to node B that are not congested according to an example implementation.
- the congested path directly from node A to node B has been removed, and reflects the remaining uncongested (2-hop and 3-hop) paths from node A to node B.
- the updated forwarding table may look something like the following, based on FIG. 3 :
- Entry 1 (A ⁇ B path segment for A ⁇ B path)
- Entry 2 (A ⁇ C path segment for A ⁇ C ⁇ B path)
- Entry 3 (A ⁇ D path segment for A ⁇ D ⁇ B path)
- this may result in a gradual or incremental re-routing of traffic via the new paths, rather than completely moving all traffic from a congested path to the new uncongested path(s).
- FIG. 4 is a diagram illustrating a 3-hop path from node A to node B that is not congested according to another example implementation.
- both the 1-hop path (A ⁇ B path) and the 2-hop paths (A ⁇ C ⁇ B path and the A ⁇ D ⁇ B path) have now become congested, and the next lowest-cost path is a 3-hop path (A ⁇ D ⁇ C ⁇ B).
- the forwarding table for node A may similarly be updated to add an entry for the 3-hop path via port 3, e.g., to re-route at least some traffic from A that is directed to B via this 3-hop path, based on the congestion of the lower-cost paths.
- entries may be decreased in the forwarding table for one or more congested paths.
- the lowest-cost path from node A to node B may become uncongested again. This may occur, for example, since this approach has gradually/incrementally been moving or re-routing traffic directed to node B over one or more higher-cost paths, and away from the lowest-cost path. Since the priority is to route traffic on lowest-cost (or lower-cost) paths (e.g., lowest number of hops or path segments) first, the network may begin incrementally or gradually re-routing some traffic back onto the uncongested lowest-cost path(s).
- a path after previously being congested, may be determined to be uncongested when path segments for the path each have fewer than a second threshold of congested ports associated with that segment.
- a second threshold which may be less than the first threshold to provide hysteresis, may be set to 4 ports.
- the forwarding table at node A for node B as a destination may be updated to increase port weights (e.g., increase a number of table entries) for the now uncongested lowest-cost path, and/or decrease the port weights (e.g., decrease the number of entries in the forwarding table) for one or more higher-cost paths.
- increase port weights e.g., increase a number of table entries
- decrease the port weights e.g., decrease the number of entries in the forwarding table
- These changes to the forwarding table may have the effect of re-routing an amount of traffic from the higher-cost paths back to the lowest-cost path.
- the forwarding tables for the other nodes B, C and D may similarly be updated first route traffic over lower-cost (or lowest-cost) paths and to respond to congested paths/path segments.
- the forwarding table for node D may initially include only one entry for port 2 for the direct 1-hop D ⁇ B path.
- the forwarding table for node D may initially include only one entry for port 2 for the direct 1-hop D ⁇ B path.
- one or more entries may be added to the forwarding table for node D for any uncongested 2-hop paths, such as for port 1 (D ⁇ A ⁇ B path) and/or port 3 (D ⁇ C ⁇ B path) of node D.
- the D ⁇ A path segment is also congested (thus indicating that the D ⁇ A ⁇ B path is congested)
- an entry may be added to the forwarding table for node D only for the other 2-hop path D ⁇ C ⁇ B (via port 3).
- the POD D controller may determine that the 1-hop D ⁇ B path, for traffic directed to node B, has become uncongested. Since the priority is to route traffic on lowest-cost (or lower-cost) paths (e.g., lowest number of hops or path segments) first, the network may begin incrementally or gradually re-routing some traffic back onto the uncongested lowest-cost path(s).
- the number of entries in the forwarding table of node D for the 1-hop (lowest-cost) D ⁇ B path (via port 2) may be increased, and/or the number of entries in the forwarding table for node D for the 2-hop D ⁇ C ⁇ B path (via port 3) may be decreased, in order to re-route at least some traffic from the higher-cost path(s) back to the lowest-cost path(s), for example.
- FIG. 5 is a diagram illustrating a network of nodes according to another illustrative example.
- the use of a shortest first longer next routing algorithm may not always lead to maximizing the achieved throughput and/or minimizing the network latency, especially when the traffic demands are relatively high.
- a shortest first longer next routing technique may send 1 unit of data via the lowest-cost path: the A ⁇ B ⁇ H ⁇ E path.
- queueing latency may grow or increase to be fairly significant (e.g., queueing delays may be a significant and even the largest delay component in network latency), whereas more demands (e.g., greater than unit 1 ) may have been accommodated with lower queueing latency by using the two next lowest-cost paths (e.g., A ⁇ B ⁇ C ⁇ D ⁇ E and A ⁇ F ⁇ G ⁇ H ⁇ E), for example shown in FIG. 5 .
- the shortest first longer next routing algorithm may not necessarily provide a highest throughput or lowest latency at all times, but may typically gradually or incrementally respond to congestion detected on the various paths or path segments.
- traffic may be re-routed over one or more next lowest-cost paths when the lowest-cost path becomes congested.
- traffic may also be shuffled or re-routed among ports associated with a congested path segment, e.g., to re-route or move at least some traffic from one or more congested ports to one or more uncongested ports that are associated with a congested path segment.
- a hash function may be performed on one or more fields of each packet to identify an entry in a forwarding table, such that packets of a flow may be routed or forwarded via the same output port (e.g., since the hash function of the packet fields of a flow may result in selection of the same forwarding table entry).
- each of these ports may be connected to the adjacent POD via a separate communications link. For 100 different flows that map or lookup to one of the 5 ports of such path segment (e.g., randomly selecting one of those ports based on the hash function), approximately 20 of the flows may be forwarded via each of the different ports, for example.
- some of the flows may be much bigger or may be much more active or generate much more traffic than other flows. Therefore, it is possible that some ports associated with the path segment may quickly become congested while other ports associated with such path segment may not be congested at all. As noted above, if a threshold number of ports associated with the path segment become congested, then the entire path segment may be deemed or determined to be congested, even though several of such associated ports may not be congested.
- one or more switches may update its forwarding table in the event that a path segment is determined to be congested to move or re-route traffic/flows from one or more congested ports to one or more uncongested ports.
- port weights e.g., a number of port entries in the forwarding table
- port weights may be increased for such uncongested ports associated with such congested path segment, and port weights may be decreased for congested ports that are associated with such congested path segment. This is merely one example way in which traffic may be re-routed within a group of ports associated with a congested path segment. Other techniques may be used as well.
- Input Network topology and sets of routes between any pair of pods, where routes within the same set have the same length. Sets with shorter paths have smaller indices.
- Output Forwarding weights at the pod level (trivially extendable to per-port forwarding weights).
- F_congested(i, j) fraction of POD i's congested ports, among those connected to POD J.
- F_th Threshold for F_congested(i, j) above which the overall set of links between the two blocks/PODs to be congested (in the i-to-j direction).
- F_th or threshold
- the F_th may be chosen to be 1 if so, but this is unlikely to be the case given that there will be large flows to hash.
- main( ) ⁇ Periodically check: //the period would be large enough to avoid overreacting to traffic //bursts and small enough to avoid sluggishness.
- FIG. 6 is a flow chart illustrating operation of a network according to an example implementation.
- traffic is transmitted to a destination via at least a first path of a plurality of paths to the destination, each path including one or more path segments, a plurality of ports being associated with each path segment.
- port congestion information is received for each of the plurality of ports associated with one or more of the path segments.
- a first determination is made that the first path is congested and that one or more second paths are not congested, the one or more second paths having a same cost or higher cost than the first path, each of the paths is determined to be congested if one or more path segments of the path is congested. And, at 650 , at least some traffic directed to the destination is re-routed from the congested first path to one or more of the uncongested second paths in response to the first determination.
- FIG. 7 is a flow chart illustrating operation of a controller in a network according to another example implementation.
- receiving, at a controller port congestion information is received at a controller for a first POD (performance optimized data center) from each of a plurality of reporting switches.
- a message is sent to a network controller indicating a congestion status, as either congested or not congested, for each of one or more of the path segments.
- FIG. 8 shows an example of a generic computer device 800 and a generic mobile computer device 850 , which may be used with the techniques described here.
- Computing device 800 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers.
- Computing device 850 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smart phones, and other similar computing devices.
- the components shown here, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit implementations of the inventions described and/or claimed in this document.
- Computing device 800 includes a processor 802 , memory 804 , a storage device 806 , a high-speed interface 808 connecting to memory 804 and high-speed expansion ports 810 , and a low speed interface 812 connecting to low speed bus 814 and storage device 806 .
- Each of the components 802 , 804 , 806 , 808 , 810 , and 812 are interconnected using various busses, and may be mounted on a common motherboard or in other manners as appropriate.
- the processor 802 can process instructions for execution within the computing device 800 , including instructions stored in the memory 504 or on the storage device 806 to display graphical information for a GUI on an external input/output device, such as display 816 coupled to high speed interface 808 .
- multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory.
- multiple computing devices 800 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system).
- the memory 804 stores information within the computing device 800 .
- the memory 804 is a volatile memory unit or units.
- the memory 804 is a non-volatile memory unit or units.
- the memory 804 may also be another form of computer-readable medium, such as a magnetic or optical disk.
- the storage device 806 is capable of providing mass storage for the computing device 800 .
- the storage device 806 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations.
- a computer program product can be tangibly embodied in an information carrier.
- the computer program product may also contain instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 804 , the storage device 806 , or memory on processor 802 .
- the high speed controller 808 manages bandwidth-intensive operations for the computing device 800 , while the low speed controller 812 manages lower bandwidth-intensive operations.
- the high-speed controller 808 is coupled to memory 804 , display 816 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 810 , which may accept various expansion cards (not shown).
- low-speed controller 812 is coupled to storage device 806 and low-speed expansion port 814.
- the low-speed expansion port which may include various communication ports (e.g., USB, Bluetooth, Ethernet, wireless Ethernet) may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- input/output devices such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- the computing device 800 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a standard server 820 , or multiple times in a group of such servers. It may also be implemented as part of a rack server system 824 . In addition, it may be implemented in a personal computer such as a laptop computer 822 . Alternatively, components from computing device 800 may be combined with other components in a mobile device (not shown), such as device 850 . Each of such devices may contain one or more of computing device 800 , 850 , and an entire system may be made up of multiple computing devices 800 , 850 communicating with each other.
- Computing device 850 includes a processor 852 , memory 864 , an input/output device such as a display 854 , a communication interface 866 , and a transceiver 868 , among other components.
- the device 850 may also be provided with a storage device, such as a microdrive or other device, to provide additional storage.
- a storage device such as a microdrive or other device, to provide additional storage.
- Each of the components 850 , 852 , 864 , 854 , 866 , and 868 are interconnected using various buses, and several of the components may be mounted on a common motherboard or in other manners as appropriate.
- the processor 852 can execute instructions within the computing device 850 , including instructions stored in the memory 864 .
- the processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors.
- the processor may provide, for example, for coordination of the other components of the device 850 , such as control of user interfaces, applications run by device 850 , and wireless communication by device 850 .
- Processor 852 may communicate with a user through control interface 858 and display interface 856 coupled to a display 854 .
- the display 854 may be, for example, a TFT LCD (Thin-Film-Transistor Liquid Crystal Display) or an OLED (Organic Light Emitting Diode) display, or other appropriate display technology.
- the display interface 856 may comprise appropriate circuitry for driving the display 854 to present graphical and other information to a user.
- the control interface 858 may receive commands from a user and convert them for submission to the processor 852 .
- an external interface 862 may be provided in communication with processor 852 , so as to enable near area communication of device 850 with other devices. External interface 862 may provide, for example, for wired communication in some implementations, or for wireless communication in other implementations, and multiple interfaces may also be used.
- the memory 864 stores information within the computing device 850 .
- the memory 864 can be implemented as one or more of a computer-readable medium or media, a volatile memory unit or units, or a non-volatile memory unit or units.
- Expansion memory 874 may also be provided and connected to device 850 through expansion interface 872 , which may include, for example, a SIMM (Single In Line Memory Module) card interface.
- SIMM Single In Line Memory Module
- expansion memory 874 may provide extra storage space for device 850 , or may also store applications or other information for device 850 .
- expansion memory 874 may include instructions to carry out or supplement the processes described above, and may include secure information also.
- expansion memory 874 may be provide as a security module for device 850 , and may be programmed with instructions that permit secure use of device 850 .
- secure applications may be provided via the SIMM cards, along with additional information, such as placing identifying information on the SIMM card in a non-hackable manner.
- the memory may include, for example, flash memory and/or NVRAM memory, as discussed below.
- a computer program product is tangibly embodied in an information carrier.
- the computer program product contains instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 864 , expansion memory 874 , or memory on processor 852 , that may be received, for example, over transceiver 868 or external interface 862 .
- Device 850 may communicate wirelessly through communication interface 866 , which may include digital signal processing circuitry where necessary. Communication interface 866 may provide for communications under various modes or protocols, such as GSM voice calls, SMS, EMS, or MMS messaging, CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS, among others. Such communication may occur, for example, through radio-frequency transceiver 868 . In addition, short-range communication may occur, such as using a Bluetooth, Wi-Fi, or other such transceiver (not shown). In addition, GPS (Global Positioning System) receiver module 870 may provide additional navigation- and location-related wireless data to device 850 , which may be used as appropriate by applications running on device 850 .
- GPS Global Positioning System
- Device 850 may also communicate audibly using audio codec 860 , which may receive spoken information from a user and convert it to usable digital information. Audio codec 860 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of device 850 . Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on device 850 .
- Audio codec 860 may receive spoken information from a user and convert it to usable digital information. Audio codec 860 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of device 850 . Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on device 850 .
- the computing device 850 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a cellular telephone 880 . It may also be implemented as part of a smart phone 882 , personal digital assistant, or other similar mobile device.
- implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof.
- ASICs application specific integrated circuits
- These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- a keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user can be received in any form, including acoustic, speech, or tactile input.
- the systems and techniques described here can be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back end, middleware, or front end components.
- the components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network (“LAN”), a wide area network (“WAN”), and the Internet.
- LAN local area network
- WAN wide area network
- the Internet the global information network
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
Abstract
Description
main( ){
Periodically check: //the period would be large enough to avoid overreacting to traffic //bursts and small enough to avoid sluggishness.
For all sets i: (for all paths) | ||||
if (is_congested_set(i)==False): | ||||
route_more_on(i); | ||||
break; | ||||
} | ||||
is_congested_set(i){ | ||||
for all flows j in i: | ||||
flow_is_congested = 0; | ||||
for all hops (m, n) in j: | ||||
if is_congested(m, n) | ||||
flow_is_congested = 1; | ||||
break; | ||||
if (!flow_is_congested): | ||||
return false | ||||
return true; | ||||
} | ||||
is_congested(i, j){ | ||||
return F_congested(i, j) >= F_th; | ||||
} | ||||
route_more_on(i) { | ||||
//All active sets k<i (i!=1) should have been congested to call this function.
Move to the uncongested paths in i a small fraction or constant c of the traffic currently sent over the highest active set of paths j>i, if any. It might have happened that other sets k<i have gotten even more congested though, so another small fraction or constant c′ may be moved from those sets to i.
Claims (20)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/154,452 US9473408B1 (en) | 2014-01-14 | 2014-01-14 | Shortest first longer next routing with congestion reduction |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/154,452 US9473408B1 (en) | 2014-01-14 | 2014-01-14 | Shortest first longer next routing with congestion reduction |
Publications (1)
Publication Number | Publication Date |
---|---|
US9473408B1 true US9473408B1 (en) | 2016-10-18 |
Family
ID=57120929
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/154,452 Active 2034-06-07 US9473408B1 (en) | 2014-01-14 | 2014-01-14 | Shortest first longer next routing with congestion reduction |
Country Status (1)
Country | Link |
---|---|
US (1) | US9473408B1 (en) |
Cited By (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20160134535A1 (en) * | 2014-11-06 | 2016-05-12 | Juniper Networks, Inc. | Deterministic and optimized bit index explicit replication (bier) forwarding |
US20160269322A1 (en) * | 2015-03-09 | 2016-09-15 | Fujitsu Limited | Switch device, control method, and storage medium |
US10009275B1 (en) | 2016-11-15 | 2018-06-26 | Amazon Technologies, Inc. | Uniform route distribution for a forwarding table |
US10015096B1 (en) | 2016-06-20 | 2018-07-03 | Amazon Technologies, Inc. | Congestion avoidance in multipath routed flows |
US10069734B1 (en) | 2016-08-09 | 2018-09-04 | Amazon Technologies, Inc. | Congestion avoidance in multipath routed flows using virtual output queue statistics |
US10097467B1 (en) * | 2016-08-11 | 2018-10-09 | Amazon Technologies, Inc. | Load balancing for multipath groups routed flows by re-associating routes to multipath groups |
US10116567B1 (en) * | 2016-08-11 | 2018-10-30 | Amazon Technologies, Inc. | Load balancing for multipath group routed flows by re-routing the congested route |
CN111147386A (en) * | 2018-11-02 | 2020-05-12 | 伊姆西Ip控股有限责任公司 | Method, electronic device and computer program product for handling data transmission congestion |
US20200166945A1 (en) * | 2017-08-08 | 2020-05-28 | Lg Electronics Inc. | Apparatus for providing map |
US11171883B1 (en) * | 2020-07-07 | 2021-11-09 | Mellanox Technologies, Ltd. | Peering-fabric routing using switches having dynamically configurable forwarding logic |
CN114500357A (en) * | 2020-10-27 | 2022-05-13 | 北京华为数字技术有限公司 | Path determination method and device |
US11368413B2 (en) * | 2019-06-11 | 2022-06-21 | International Business Machines Corporation | Inter-switch link identification and monitoring |
US20220321476A1 (en) * | 2021-03-31 | 2022-10-06 | Cisco Technology, Inc. | Local congestion mitigation |
Citations (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6456588B1 (en) | 1997-04-21 | 2002-09-24 | At&T Corp. | Hypercube routing and restoration in telecommunications networks |
US20020176363A1 (en) * | 2001-05-08 | 2002-11-28 | Sanja Durinovic-Johri | Method for load balancing in routers of a network using overflow paths |
US20060245363A1 (en) * | 2005-04-08 | 2006-11-02 | Ravi Ravindran | QoS-based routing for CE-based VPN |
US20110261697A1 (en) * | 2010-04-22 | 2011-10-27 | International Business Machines Corporation | Network data congestion management system |
US8094555B2 (en) * | 2006-11-27 | 2012-01-10 | Cisco Technology, Inc. | Dynamic weighted-fair load-balancing |
US20120287791A1 (en) * | 2011-05-13 | 2012-11-15 | Kang Xi | Balancing load in a network, such as a data center network, using flow based routing |
US8441922B1 (en) * | 2010-10-05 | 2013-05-14 | Qlogic, Corporation | Method and system for congestion management in networks |
US8467294B2 (en) * | 2011-02-11 | 2013-06-18 | Cisco Technology, Inc. | Dynamic load balancing for port groups |
US20140140210A1 (en) * | 2012-11-20 | 2014-05-22 | Inventec Corporation | Network system and load balancing method |
US20140169173A1 (en) * | 2012-12-14 | 2014-06-19 | Ygdal Naouri | Network congestion management by packet circulation |
US20140169189A1 (en) * | 2012-12-17 | 2014-06-19 | Broadcom Corporation | Network Status Mapping |
US20140269325A1 (en) * | 2013-03-15 | 2014-09-18 | International Business Machines Corporation | Bypassing congestion points in a converged enhanced ethernet fabric |
-
2014
- 2014-01-14 US US14/154,452 patent/US9473408B1/en active Active
Patent Citations (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6456588B1 (en) | 1997-04-21 | 2002-09-24 | At&T Corp. | Hypercube routing and restoration in telecommunications networks |
US20020176363A1 (en) * | 2001-05-08 | 2002-11-28 | Sanja Durinovic-Johri | Method for load balancing in routers of a network using overflow paths |
US20060245363A1 (en) * | 2005-04-08 | 2006-11-02 | Ravi Ravindran | QoS-based routing for CE-based VPN |
US8094555B2 (en) * | 2006-11-27 | 2012-01-10 | Cisco Technology, Inc. | Dynamic weighted-fair load-balancing |
US20110261697A1 (en) * | 2010-04-22 | 2011-10-27 | International Business Machines Corporation | Network data congestion management system |
US8441922B1 (en) * | 2010-10-05 | 2013-05-14 | Qlogic, Corporation | Method and system for congestion management in networks |
US8467294B2 (en) * | 2011-02-11 | 2013-06-18 | Cisco Technology, Inc. | Dynamic load balancing for port groups |
US20120287791A1 (en) * | 2011-05-13 | 2012-11-15 | Kang Xi | Balancing load in a network, such as a data center network, using flow based routing |
US20140140210A1 (en) * | 2012-11-20 | 2014-05-22 | Inventec Corporation | Network system and load balancing method |
US20140169173A1 (en) * | 2012-12-14 | 2014-06-19 | Ygdal Naouri | Network congestion management by packet circulation |
US20140169189A1 (en) * | 2012-12-17 | 2014-06-19 | Broadcom Corporation | Network Status Mapping |
US20140269325A1 (en) * | 2013-03-15 | 2014-09-18 | International Business Machines Corporation | Bypassing congestion points in a converged enhanced ethernet fabric |
Non-Patent Citations (7)
Title |
---|
"Configuring OSPF", Chapter 11, Serverlron ADX Switching and Routing Guide, Brocade Communication Systems, Inc., 2009, 46 pages. |
"OpenFlow Switch Specification", Open Networking Foundation, Version 1.3.0 (Wire Protocol 0x04), Jun. 25, 2012, 106 pages. |
Al-Fares, et al, "A Scalable, Commodity Data Center Network Architecture", SIGCOMM'08, Aug. 17-22, 2008, 12 pages. |
Li, et al, "A Multiple-Path Routing Algorithm with Congestion Avoidance Based upon Ant Colony Algorithm in Cognitive Networks", Journal of Computational Information Systems 6:8, 2010, pp. 2473-2482. |
McKeown, et al, "OpenFlow: Enabling Innovation in Campus Networks", ACM SIGCOMM Computer Communication Review, vol. 38, Issue 2, Mar. 14, 2008, 6 pages. |
Sohn, et al, "Congestion-triggered Multipath Routing based on Shortest Path Information", ICCCN, 2006, pp. 191-196. |
Villamizar, "OSPF Optimized Multipath (OSPF-OMP)", Internet Engineering Task Force, Feb. 24, 1999, 38 pages. |
Cited By (22)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20160134535A1 (en) * | 2014-11-06 | 2016-05-12 | Juniper Networks, Inc. | Deterministic and optimized bit index explicit replication (bier) forwarding |
US10033641B2 (en) * | 2014-11-06 | 2018-07-24 | Juniper Networks, Inc. | Deterministic and optimized bit index explicit replication (BIER) forwarding |
US10135761B2 (en) * | 2015-03-09 | 2018-11-20 | Fujitsu Limited | Switch device, control method, and storage medium |
US20160269322A1 (en) * | 2015-03-09 | 2016-09-15 | Fujitsu Limited | Switch device, control method, and storage medium |
US10015096B1 (en) | 2016-06-20 | 2018-07-03 | Amazon Technologies, Inc. | Congestion avoidance in multipath routed flows |
US10735325B1 (en) | 2016-06-20 | 2020-08-04 | Amazon Technologies, Inc. | Congestion avoidance in multipath routed flows |
US10819640B1 (en) * | 2016-08-09 | 2020-10-27 | Amazon Technologies, Inc. | Congestion avoidance in multipath routed flows using virtual output queue statistics |
US10069734B1 (en) | 2016-08-09 | 2018-09-04 | Amazon Technologies, Inc. | Congestion avoidance in multipath routed flows using virtual output queue statistics |
US10097467B1 (en) * | 2016-08-11 | 2018-10-09 | Amazon Technologies, Inc. | Load balancing for multipath groups routed flows by re-associating routes to multipath groups |
US10116567B1 (en) * | 2016-08-11 | 2018-10-30 | Amazon Technologies, Inc. | Load balancing for multipath group routed flows by re-routing the congested route |
US10693790B1 (en) * | 2016-08-11 | 2020-06-23 | Amazon Technologies, Inc. | Load balancing for multipath group routed flows by re-routing the congested route |
US10778588B1 (en) | 2016-08-11 | 2020-09-15 | Amazon Technologies, Inc. | Load balancing for multipath groups routed flows by re-associating routes to multipath groups |
US10009275B1 (en) | 2016-11-15 | 2018-06-26 | Amazon Technologies, Inc. | Uniform route distribution for a forwarding table |
US10547547B1 (en) | 2016-11-15 | 2020-01-28 | Amazon Technologies, Inc. | Uniform route distribution for a forwarding table |
US20200166945A1 (en) * | 2017-08-08 | 2020-05-28 | Lg Electronics Inc. | Apparatus for providing map |
CN111147386A (en) * | 2018-11-02 | 2020-05-12 | 伊姆西Ip控股有限责任公司 | Method, electronic device and computer program product for handling data transmission congestion |
US11368413B2 (en) * | 2019-06-11 | 2022-06-21 | International Business Machines Corporation | Inter-switch link identification and monitoring |
US11171883B1 (en) * | 2020-07-07 | 2021-11-09 | Mellanox Technologies, Ltd. | Peering-fabric routing using switches having dynamically configurable forwarding logic |
CN114500357A (en) * | 2020-10-27 | 2022-05-13 | 北京华为数字技术有限公司 | Path determination method and device |
CN114500357B (en) * | 2020-10-27 | 2024-02-09 | 北京华为数字技术有限公司 | Path determination method and device |
US20220321476A1 (en) * | 2021-03-31 | 2022-10-06 | Cisco Technology, Inc. | Local congestion mitigation |
US11838210B2 (en) * | 2021-03-31 | 2023-12-05 | Cisco Technology, Inc. | Local congestion mitigation |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9473408B1 (en) | Shortest first longer next routing with congestion reduction | |
US10554538B2 (en) | Dynamic link state routing protocol | |
US20220210054A1 (en) | Systems and methods for on the fly routing in the presence of errors | |
US10924413B2 (en) | Transmission path determining method and apparatus | |
US10938724B2 (en) | Flow rate based network load balancing | |
US9270598B1 (en) | Congestion control using congestion prefix information in a named data networking environment | |
KR100693058B1 (en) | Routing Method and Apparatus for Reducing Losing of Packet | |
US20170048144A1 (en) | Congestion Avoidance Traffic Steering (CATS) in Datacenter Networks | |
US10986021B2 (en) | Flow management in networks | |
US9559985B1 (en) | Weighted cost multipath routing with intra-node port weights and inter-node port weights | |
US7623533B2 (en) | Switch meshing using multiple directional spanning trees | |
US10389646B2 (en) | Evading congestion spreading for victim flows | |
US11522784B2 (en) | Routing and forwarding method for multi-homed network based on programmable network technology | |
US20140269711A1 (en) | Communication over multiple virtual lanes using a shared buffer | |
US20140241160A1 (en) | Scalable, Low Latency, Deep Buffered Switch Architecture | |
KR20200001532A (en) | Queuing system to predict packet lifetime in a computing device | |
CN111585911B (en) | Method for balancing network traffic load of data center | |
CN111224888A (en) | Method for sending message and message forwarding equipment | |
US11757747B2 (en) | Preventing traffic outages during address resolution protocol (ARP) storms | |
US9654399B2 (en) | Methods and devices in an IP network for congestion control | |
US10305787B2 (en) | Dropping cells of a same packet sent among multiple paths within a packet switching device | |
US10778568B2 (en) | Switch-enhanced short loop congestion notification for TCP | |
US11902365B2 (en) | Regulating enqueueing and dequeuing border gateway protocol (BGP) update messages | |
ES2283410T3 (en) | METHOD AND DEVICE FOR ROADING DATA PACKAGES IN COMMUNICATIONS NETWORKS. | |
Balakiruthiga et al. | A simple congestion avoidance mechanism for opendaylight (odl)-multipath tcp (mptcp) network structure in software defined data center (sddc) |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:KABBANI, ABDUL;SINGH, ARJUN;REEL/FRAME:035261/0136Effective date: 20140113 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044097/0658Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
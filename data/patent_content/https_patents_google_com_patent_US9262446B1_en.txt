US9262446B1 - Dynamically ranking entries in a personal data book - Google Patents
Dynamically ranking entries in a personal data book Download PDFInfo
- Publication number
- US9262446B1 US9262446B1 US11/323,364 US32336405A US9262446B1 US 9262446 B1 US9262446 B1 US 9262446B1 US 32336405 A US32336405 A US 32336405A US 9262446 B1 US9262446 B1 US 9262446B1
- Authority
- US
- United States
- Prior art keywords
- user
- address
- data
- ranking
- module
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G06F17/30286—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9537—Spatial or temporal dependent retrieval, e.g. spatiotemporal queries
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
-
- G06F17/30899—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/166—Editing, e.g. inserting or deleting
- G06F40/174—Form filling; Merging
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/10—Office automation; Time management
Definitions
- the invention relates to personal data systems, and more particularly, to techniques for automatically generating and maintaining personal data (e.g., structured data such as addresses, phone numbers, and specific search topics), based on Internet search data and/or browser usage data, and/or related metadata.
- personal data e.g., structured data such as addresses, phone numbers, and specific search topics
- Generating and maintaining personal data is typically a manual process carried out by the person associated with that personal data.
- a person's address book For example, a person's address book.
- An address book is typically a collection of contact details, such as address (home and/or office), telephone number (home and/or office), mobile phone number, fax number, e-mail address, etc). Most address book systems store the contact entries in alphabetical order, by each contact's last name. Historically, paper-based address books have been used. Some such address books use loose-leaf binders so as to allow for updates to the address book (e.g., adding, removing, reordering), as the owner's contacts change over time.
- PIM personal information manager
- entries of an electronic address book can be exchanged between host devices (e.g., between desktop computer and personal digital assistant), as well as synchronized so that the content of a person's address book at one location (e.g., desktop computer) is the same as the content of that user's address book at another location (e.g., PDA), thereby making the electronic address book very portable.
- host devices e.g., between desktop computer and personal digital assistant
- individual entries of an electronic address book can be transferred (e.g., vCards), thereby simplifying the exchange of contact information.
- a person's electronic address book is a dynamically changing collection of data. Maintaining this address book is a significant chore, as the owner acquires new contacts or the details of existing contacts change. Currently, this maintenance is done manually by the owner, on an as needed basis. In addition to this time-consuming and tedious maintenance, the process of accessing a particular address (e.g., searching for a particular address among the many included in the address book, and then clicking), is again cumbersome and a barrier to regular and widespread address book use.
- One embodiment of the present invention is a computer-implemented method for dynamically ranking entries in a personal data book for a user.
- the method includes receiving a user search request including structured data and metadata, and extracting data from the request.
- the method continues with assigning one or more ranking signals to the extracted data based on the metadata, so that a dynamic rank based on the ranking signals can be computed for the extracted data, in response to a subsequent user need for data from the personal data book.
- Assigning one or more ranking signals may include, for example, assigning an emotional rank signal to the extracted data based on how personal it is to the user.
- the method further includes limiting accumulation of emotional rank signal as a function of time.
- assigning one or more ranking signals may include assigning a usage rank signal to the extracted data based on how frequently that data is used. In one such case, the method further includes aging usage rank signal over time, and/or limiting accumulation of usage rank signal as a function of time. Alternatively, or in addition to, assigning one or more ranking signals may include assigning a rank signal to the extracted data based on its specific use by user, including a least one of user locality, seasonality, type of request, and expected use. In response to subsequent user need for data from the personal data book, the method may includes assigning an overall rank to data candidates from the personal data book that may satisfy the need, based on one or more of the rank signals.
- the overall rank is dynamically adjusted based on at least one of geographic location of the user, current time, and context.
- the user's geographic location can be estimated based on an IP address associated with the user's geographic location, and/or address information entered by the user into a mapping system interface.
- the method may include assigning a label to the extracted data, including a name of a location where the user is likely to use the extracted data.
- the method may include assigning one or more ranking signals to the extracted data based on user browsing activity.
- the method may include storing the extracted data along with the one or more ranking signals as an entry in a personal data storage.
- updating the entry when future requests are received includes updating metadata statistics associated with the extracted data, one or more ranking signals of the extracted data, and/or user localities associated with the use of the extracted data.
- Another embodiment of the present invention provides a machine-readable medium (e.g., one or more compact disks, diskettes, servers; memory sticks, or hard drives) encoded with instructions, that when executed by one or more processors, cause the processor to carry out a process for dynamically ranking entries in a personal data book for a user.
- This process can be, for example, similar to or a variation of the previously described method.
- Another embodiment of the present invention is a system for dynamically ranking entries in a personal data book for a user.
- the system functionality can be implemented, for example, in software (e.g., executable instructions encoded on one or more computer-readable mediums), hardware (e.g., gate level logic or one or more ASICs), firmware (e.g., one or more microcontrollers with I/O capability and embedded routines for carrying out the functionality described herein), or some combination thereof.
- software e.g., executable instructions encoded on one or more computer-readable mediums
- hardware e.g., gate level logic or one or more ASICs
- firmware e.g., one or more microcontrollers with I/O capability and embedded routines for carrying out the functionality described herein
- Many suitable means for implementing embodiments of the present invention will be apparent in light of this disclosure.
- FIG. 1 is a block diagram of a system for generating and maintaining personal data, configured in accordance with one embodiment of the present invention.
- FIG. 2 is a block diagram of a server-side personal data generator module, such as the address book generator module shown in FIG. 1 , configured in accordance with one embodiment of the present invention.
- FIG. 3 a is a block diagram of a client-side personal data module, such as the client-side address book module shown in FIG. 1 , configured in accordance with one embodiment of the present invention.
- FIG. 3 b is a block diagram of a client-side personal data module configured in accordance with another embodiment of the present invention.
- FIG. 4 illustrates a method for automatically generating a user's address book in accordance with an embodiment of the present invention.
- FIG. 5 illustrates a method for dynamically ranking entries in a user's personal data book in accordance with an embodiment of the present invention.
- FIG. 6 illustrates a method for dynamically autocompleting a personal data entry for a user in a computer-based application, in accordance with an embodiment of the present invention.
- FIG. 7 illustrates a method for automatically generating a personal data book for a user, in accordance with an embodiment of the present invention.
- Techniques are disclosed for automatically generating and maintaining personal data, such as an address book, a financial portfolio, a discussion groups or blogs book, or other types of personal data stores, based on a person's structured search data and/or usage data, and/or other types of structured data provided by the user or to the user.
- Related metadata and/or context can also be used in the generating and/or maintaining of the personal data.
- Structured data comprises any data that can be extracted into a semi-structured or completely structured form.
- a user provides structured data, either directly or indirectly, when conducting a search (e.g., such as an Internet search or a database query).
- a search e.g., such as an Internet search or a database query.
- a user in requesting driving directions from an online map service, a user directly provides structured data in the form of a start address and a destination address.
- the start address can be inferred to be the user's home/work address or current locality using the techniques described herein
- the destination address can be inferred to be an address of interest to the user (e.g., friend or business contact).
- the user can indirectly provide structured data in the form of address information, for example, by conducting searches such as “grocery market near Palo Alto,” where the user's home address or current locality can be inferred to be in Palo Alto.
- a user in requesting stock information from a financial service, a user directly provides structured data in the form of a stock name or a company name.
- the user can also indirectly provide structured data in the form of financial information, for example, by conducting searches such as “chip makers,” where the user's stock interests can be inferred to be related to companies like Intel and AMD.
- the structured data provided by the user can be entered or otherwise associated with a personal data book of the user (e.g., an address book, a financial portfolio, a discussion groups or blogs book, etc).
- structured data also includes data received by the user that can be harvested, such as information (e.g., addresses, stocks symbols) that are frequently included in emails received by the user. Such information may be noted as particularly meaningful if the user responds to those emails (or otherwise acknowledges receipt of that information in a meaningful way, such as saving the information to a file).
- information e.g., addresses, stocks symbols
- Usage data comprises any data that a user provides while browsing the Internet. For example, a user accesses an online directory of local restaurants, and then selects a “driving directions” link provided in one of the restaurant listings (instead of conducting a search using a map service). Thus, it can be inferred that the user intends to visit the address associated with that link (i.e., the restaurant), which gives that address a degree of significance to the user (e.g., the address can therefore be automatically harvested and added to the user's address book).
- Another example of usage data based on browsing activity is the user clicking on categories and then clicking on other data that is informative as to the user's interests within a selected category.
- User preferences and other user information can be inferred from that categorized data, where such preferences and user information can be used to automatically rank or otherwise valuate data for the user (e.g., for purposes of adding that data to a personal data book, or for an autocomplete function).
- Metadata comprises any data that is implicit or part of the user's search query, browsing activity/selections, and/or usage that can be used to better understand and serve the user.
- Example metadata includes what time the user conducted the search and/or otherwise accessed the system (e.g., in the daytime during work hours, or in the evening during home-time), from what IP address the search query was transmitted (e.g., to indicate a geo code or lat/lon associated with that IP address), within what context was the search conducted (e.g., was the search for directions, stock information, etc), how important was the search to the user (e.g., did the user save the resulting directions to email or SMS message), what topics/services the user indicated in the search, and/or what searches/browsing the user carried out before and/or after the search/usage/selection.
- the user may control how their personal information is collected, stored, and/or used.
- One embodiment of the present invention provides a client-server system for generating and maintaining personal data based on a person's Internet searches and/or browsing activity.
- the system implicitly generates and maintains that person's personal data based on information aggregated (e.g., incrementally) from data searches and/or browsing performed by the user.
- Data searches can be performed in a number of contexts, with each context providing useful information (e.g., search terms and associated metadata) that can be harvested, statistically aggregated, analyzed, and otherwise used to automatically provide the person with useful personal data.
- the personal data may be directly relevant to the context of the structured data search (e.g., where the generated personal data is stock portfolio data derived from financial searches conducted over the Internet), or indirectly relevant to the context of the structured data search (e.g., where the generated personal data is address book data derived from map searches conducted over the Internet). Browsing performed by the user can also indicate personal data, where data associated with mouse clicks or otherwise selected by the user (as opposed to entered for a structured data search) is collected.
- the generating and maintaining of personal data can be implemented on the server-side, client-side, or a combination thereof.
- One such example embodiment is an address book generation system.
- the system implicitly generates and maintains a user's address book based on information aggregated (e.g., incrementally) from geographic data searches performed by the user. For instance, information is collected each time the user performs a geographic data search, such as a search for a location, landmark, or driving/walking directions using an online map service (e.g., Google Maps or MapQuest), or a search for local businesses or events using an online local search service (e.g., Google Local or Yahoo! Local).
- the addresses entered into such search services can then be associated with names (e.g., people or businesses), for example, using directory listing databases (e.g., white and/or yellow page databases).
- the address/name pairs can then be added to the user's address book. Metadata (e.g., time/day of search and user's IP address) associated with each search can be analyzed to infer various aspects of each address (such as importance to user).
- the address book system can be fed using any number of client-server based communication techniques.
- Asynchronous JavaScript and XML (Ajax) calls are used between the client and server, and address data can be stored/retrieved using conventional or custom database techniques.
- JavaScript can be used on the client-side for autocomplete functions (e.g., such as with Google Gmail) to make the user's address book more readily accessible.
- address entries in the address book can be ranked (e.g., incrementally) using various ranking signals of, for instance, emotional value, time decay, and seasonality.
- a user's current and frequent geographic locations can be inferred from known data, such as that user's search history data, search time data, and HTTP header+cookie data to be used for maps and other localizable services, such as ads, email, and internet searching.
- locality information can be used, for example, to add a dynamic quality to ranking and/or autocomplete functions (e.g., rankings and autocomplete choices for one location/time may be different for other locations/times).
- the underlying principles of the present invention can be applied to other products and services, such as online financial services, discussion and social groups services, bookmarks services, blog services, news search services (and other horizontal/topic specific search services), and even plain search services (e.g., general Internet search) as will be apparent in light of this disclosure.
- the present invention is not intended to be limited to address book generation.
- principles of the present invention can be used to generate a book or portfolio of finance entities in which the user is interested, such as exchanges (e.g., NYSE, OTC, etc), stocks (e.g., including company name, ticker symbol, and share price) mutual funds (e.g., including fund name, ticker symbol, and NAV), futures (e.g., including name of commodity, contracting parties, amount, specified price, and future transaction date), companies (e.g., company name and address of headquarters), and types of data about that company (e.g., links to news articles about quarterly reports and business transactions).
- exchanges e.g., NYSE, OTC, etc
- stocks e.g., including company name, ticker symbol, and share price
- mutual funds e.g., including fund name, ticker symbol, and NAV
- futures e.g., including name of commodity, contracting parties, amount, specified price, and future transaction date
- companies e.g., company name and address of headquarters
- Such information can be harvested from financial-based online searches conducted by the user, added to a financial portfolio for user, and/or dynamically ranked for portfolio display purposes.
- principles of the present invention can be used to generate a list or other representation of favorite groups, favorite friends, favorite blogs, favorite news sources, and favorite bookmarks, respectively.
- structured data as used herein is intended to include any structured data extracted from unstructured searches with/without context using available semantic analysis (e.g., clustering, synonyms) or other technologies for measuring connections between words (e.g., ‘foods’, ‘travel’, ‘local’).
- the system can infer which parts of the structured data hierarchy a user is preferential to, using aggregation and compaction techniques.
- a user selection or “vote” for a science ⁇ biology ⁇ pachyderms may also be interpreted as a vote (perhaps of lesser magnitude) for biology and science, not just pachyderms.
- user interests can be noted and ranked accordingly (e.g., interest in pachyderms is high, while interest in science and biology is at least medium).
- Such user interests can be used in conjunction with other information known about the user, such as geographic location of user and time of day when user indicates the interest). For example, once a user's interests and location are known, related searches of interest can be suggested to the user when the user is at that location again and/or around the same time frame. Likewise, targeted ad placement and service offers can be made to the user relevant to the user's local geographic area.
- finance contexts, blog contexts, and other services that provide a hierarchical scheme, where the hierarchy is telling of user interests.
- a financial context search of semiconductors ⁇ chipmakers ⁇ microprocessors indicates possible interest in chip makers like Intel or AMD by user, and further indicates a possible interest in makers of semiconductor processing equipment like Applied Materials and Lam Research; when such a search is conducted at a home location, then there is a further indication that materials geared toward do-it-yourself investing may also be of interest to the user; when such a search is conducted at a work location, then there is a further indication that materials geared toward professional investing services may also be of interest to the user).
- implicit categories that the user does not see may be inferred.
- a user may gravitate towards blogs from the east coast only, and an embodiment of the present invention can be configured to identify the user's interest in this implicit category by aggregating the metadata associated with the “addresses” indicted in the blogs (e.g., by virtue of the IP addresses themselves and/or geocodes associated with the blog IP addresses).
- other east coast blogs that may be of possible interest to the user can be suggested.
- other information such as user locale and time, can be used to dynamically rank the blog suggestions provided to the user (e.g., if at home in the evening, then suggest blogs for east coast mountain climbing; if at work in the daytime, then suggest east coast blogs relevant to professional interests, such as object-oriented programming).
- FIG. 1 is a block diagram of a system for generating and maintaining personal data, configured in accordance with one embodiment of the present invention.
- the personal data is address book data that includes names and addresses of people and/or businesses with which the user has relationships of one degree or another (e.g., good friends, work colleagues, or merely a business which the user has patronized).
- Other contact information may also be included in the address book data, such as email addresses and telephone numbers.
- the system can effectively be employed to provide an automatic address book service.
- the system includes a client-server architecture, where the server-side communicates with one or more clients 125 via a network 120 .
- the server-side includes a server system 105 , an address book data module 110 , and an address book generator module 115 .
- each client 125 includes a browser 125 a in which an address book module 130 is executing.
- the system automates a process of generating and maintaining a personal address book, by exploiting the insight that a person regularly indicates existing and/or potential entries of his address book (e.g., names and corresponding street addresses) via geographic data searches he executes, and via other communication such as browsing he performs (e.g., selecting a link associated with a street address) and emails he sends (e.g., email addresses may be previously associated with a street address in a user's email contacts).
- the value of each address to the person can be inferred based on, for example, how often and over what time an address is used.
- the server system 105 can be, for example, a conventional or custom digital mapping system that allows clients 125 to request and receive driving directions and other geographic data.
- the server system 105 is implemented as described in U.S. application Ser. No. 11/088,542, filed Mar. 23, 2005, titled “Generating and Serving Tiles in a Digital Mapping System,” and Ser. No. 11/051,534, filed Feb. 5, 2005, titled “A Digital Mapping System.”
- the server system 105 includes a web serving system, a tile serving system, and a location data serving system.
- the search data received by the server system 105 is parsed and broken down into constituent address components (e.g., “1600” “Amphitheatre Parkway” “Mountain View” and “CA”). This address component data can then be harvested for incorporation into the user's address book.
- address components e.g., “1600” “Amphitheatre Parkway” “Mountain View” and “CA”.
- This address component data can then be harvested for incorporation into the user's address book.
- Numerous mapping system configurations can be used in conjunction with an embodiment of the present invention, and the present invention is not intended to be limited to any one configuration.
- the server system 105 enables communication between the client-side address book modules 130 and the server-side address book generator module 115 (and address book data module 110 ), via the network 120 .
- Conventional or custom technology can be used to implement this communication.
- Ajax calls are used to transfer address book entries between client 125 (browser 125 a where address book module 130 is running) and the server system 105 (which is in communication with the address book generator module 115 ).
- Ajax can be used to send requests to a web server (e.g., included in server system 105 ) to retrieve only the data that is needed at the client (e.g., by the address book module 130 ), typically using SOAP (Simple Object Access Protocol) or other suitable XML-centric web services protocol.
- SOAP Simple Object Access Protocol
- JavaScript or other suitable language can be used to process web server responses. The result is a simplified and more responsive user interface, since the amount of data exchanged between the web browser 125 a and web server of server system 105 is reduced. Server-side processing time is also reduced, since client-side processing is employed.
- ranking and/or autocomplete functions can be used to further simplify access of the address book in module 130 and improve the user's experience.
- an incremental “real-time” update approach can be used, where the browser address book (or other personal data) is kept up-to-date using Ajax or similar technology.
- the client can incrementally update the server using similar mechanisms.
- multiple clients can auto-sync (to ensure consistent data on each of user's clients or between server and clients) incrementally using similar approach.
- Other communication techniques such as HTTP/CGI (e.g., get and post commands) or WAP, can also be used.
- each address/entry in user's address book is assigned a unique ID.
- the server-side address book e.g., in database 110
- that entry for the new address is sent to the client-side address book (e.g., in module 130 ).
- an Ajax transmission can be used to send an array of only the address IDs and their corresponding revised ranks, from module 115 (via server system 105 ) to address book module 130 .
- a similar approach can be used to communicate any data changes or other useful information from the server-side to the client-side (e.g., personal data or entries of any kind, ranking schemes, etc), or from the client-side to the server-side.
- batch transmission of a user address book data is transferred in large chunks or in its entirety on a periodic schedule (e.g., once a day at midnight) using conventional data transfer techniques.
- the address book generator module 115 receives data from the server system 105 . This received data is from geographic data searches (e.g., driving directions, landmark locations, business locations, area maps, etc) performed by the user at client 125 .
- Geographic data searches e.g., driving directions, landmark locations, business locations, area maps, etc
- the address book generator module 115 is programmed or otherwise configured for generating and maintaining the user's address book data based at least in part on that geographic search data, and storing the address book data in the database 110 . For instance, consider the case where a user engages a digital mapping system to obtain driving directions from a start location to a stop location.
- the data input by the user into a “start address” field of the mapping system interface many times indicates the home/work address of the user (or in general the current location of the user), while data input by the user into an “end address” field of the mapping system interface indicates an address of interest to the user (such as a friend's home address or business address or a restaurant's address).
- the address book generator module 115 uses the “end address” data entered by the user to populate the user's address book.
- the most recent addresses used as “start” addresses are a specific address, then the user is likely very interested in local businesses and facilities near that specific address (e.g., if the user has used the specific address three times out of the last five searches).
- the module 115 can further be configured with (or otherwise have access to) residential and business address listings to match a name (e.g., name of friend, business contact, or restaurant) to the harvested address of interest, and create an entry in the user's address book.
- a name e.g., name of friend, business contact, or restaurant
- the module 115 can further be configured to further use such residential and business address listings (and/or any other address-centric database, such as zip code databases) to identify missing components of address information (e.g., if only a zip code is harvested, then identify the corresponding town/city and state; if only a street name and number along with a zip code are harvested, then identify the corresponding town/city and state). Any identified missing components can then be added to the address book entry.
- Other contact information e.g., email address, telephone
- the geographic search data, search metadata, and/or browsing-based data can also be used in maintaining address book entries, and for purposes of assessing parameters such as accuracy, value, and rank of each address.
- the address book generator module 115 may be further programmed or otherwise configured to store ranking signals associated with each address (e.g., incrementally, so as to refine the ranking signals as additional data is collected), and store this ranking signal data in association with such addresses so that at any given time and place, the address book service can generate an address book in the order that the user is likely to want (e.g., where each address entry is ranked based on its associated ranking signals and data associated with the particular request).
- the rank order may be based on the current time the user accesses the address book, and/or from what address or locality, and/or the context of the particular request. For example, nighttime or weekend access from home will generate an address book where social contacts are given top order, and daytime access from work will generate an address book where professional contacts are given top order.
- a context driven rank a different rank can be assigned for different input fields (e.g., in a financial application, if the user is filling their billing address, rank home addresses higher; but for daytime phone number, rank work numbers higher). Note that concepts such as night/day, weekend/weekday can be learnt in a purely statistical manner, and are therefore culture/country/personal habit independent.
- the ranking signals will statistically capture that behavior. Further note that the ranking signals in the address book of module 130 can be changed or refined based on, for example, recent usage and/or browser/http header metadata. Also, the module 115 can be configured to use the address book in conjunction with metadata in a user request (e.g., IP address, time of request) to guess with high accuracy the user's current locale (e.g., location within a given uncertainty circle).
- the address book generator module 115 is discussed in more detail with reference to FIGS. 2 and 4 through 7 .
- the server system 105 may also be configured to store data from geographic data searches (performed by the user) in the database 110 directly (as opposed to via module 115 ), if so desired.
- the address book database 110 can be implemented with conventional or custom database techniques or other storage mechanisms.
- database 110 is implemented as a scalable low latency backend store configured to enable the storage, retrieval, updating/modifying, and deletion of user information by service (where Google Local, Google Search, Google Maps, Google Blogs, etc provided by Google, Inc., of Mountain View, Ca., are each an example service) and/or by user (e.g., based on user ID or user address).
- database 110 supports login sessions. In particular, a user logs into database 110 by supplying a username and corresponding password.
- Session tokens can be implemented, for example, by setting a cookie in the user's browser that will get delivered to all client service web servers that use database 110 (as well as directly to database 110 web servers, such as in server system 105 ). In this way, any client service is able to make an API call to database 110 on every user request, passing along the received session token and asking database 110 to identify the user and report on whether the session is valid (e.g., not expired).
- the database 110 provides client services with the ability to store service-specific data (as well as retrieve, update, modify delete data), on a per-user and/or per-service basis.
- Storage space allocated per user can be, for example, 1 to 100 Kbytes (or more if so desired).
- security mechanisms and policies e.g., encryption and authentication schemes
- the database 110 can be configured to provide various API calls. For instance, one API call could do strict lookups and updates, which give one-copy-serializability semantics. Strict lookups return the most recent updated value. Strict updates only return once the data is protected from failures, and they guarantee that the updated value is available to later lookups.
- database 110 can also be configured to provide “stale lookups” and “lazy updates.”
- a stale lookup can return data that is out-of-date.
- a lazy update has some probability (hopefully low) of losing data in a failure, and later lookups may not see the effect of the update for some time. These semantics may be useful to some services that need the higher availability.
- database 110 and access thereto is implemented as described in U.S. application Ser. No. 11/097,884, filed Mar. 31, 2005, and titled “Systems and Methods for Providing Subscription-Based Personalization” (e.g., see FIG. 1 and database 116 therein).
- database 110 (which can be referred to more generally as a personal data store) as described in U.S. application Ser. No. 11/197,925, filed Aug. 5, 2005, and titled “Large Scale Data Storage in Sparse Tables.”
- database 110 which can be referred to more generally as a personal data store
- database 110 can be implemented to store/retrieve addresses or an address book while a user request for the associated service (e.g., Google Maps) is processed.
- the address data or book can be retrieved by a client 125 from the server system 105 in its entirety, or incrementally as changes occur (e.g., using Ajax calls as previous discussed).
- Various trade-offs can be considered when implementing the backend stored, and the actual implementation will depend upon the particular application and desired performance. For example, some techniques allow for storing of smaller amounts of user data with very high (e.g., bank level) transaction integrity, while other techniques allow for storing of large amounts of user data with lesser transaction integrity.
- the server-side architecture and functionality will vary from one embodiment to the next, as will be apparent in light of this disclosure.
- the address book generator module 115 and/or database 110 can be integrated into the server system 105 .
- the database 110 can be integrated into the address book generator module 115 .
- a distributed database scheme can also be used.
- Other server-side functionality and structure, such as scalability, load balancing, redundancy, and failover capability, may also be included using conventional or custom technology.
- serving systems other than those (or in addition to those) configured with mapping systems may be used, depending on the type of personal data being generated and maintained by module 115 , as will be apparent in light of this disclosure.
- the serving system 105 may also include a general search engine service (e.g., Google Search, etc).
- general search services can be programmed or otherwise configured to provide links to more specific services of interest, based on the user's search query (e.g., if a user enters an address, the first link in the search queue can be for a digital mapping service).
- the server system 120 may represent a number of integrated online services (e.g., Google Search, Google Maps, Google Earth, Google Local, Google Groups, Google Blog Search, Google Mail, Google Images, Google News, Google SMS, Google Mobile Search, Google Answers, Google Directory, etc) from which structured data searches (and/or other online activity, such as browsing) carried out by the user can be used to provide the user with a personal data service.
- integrated online services e.g., Google Search, Google Maps, Google Earth, Google Local, Google Groups, Google Blog Search, Google Mail, Google Images, Google News, Google SMS, Google Mobile Search, Google Answers, Google Directory, etc.
- the network 120 may be any type of communications network, such as a local area network (e.g., intranet), wide area network (e.g., Internet), or some combination thereof.
- the network 120 may be a direct connection between a client 125 and the server system 105 .
- communication between the server system 105 and a client 125 can be implemented via any type of wired and/or wireless connection, using a wide variety of communication protocols (e.g., TCP/IP, HTTP, SMTP, FTP), encodings or formats (e.g., HTML, XML), and/or protection schemes (e.g., VPN, secure HTTP, SSL).
- a client 125 on which the address book module 130 runs can be, for example, a desktop or laptop computer.
- a client 125 can be a wireless device, such as a personal digital assistant (PDA) or other such computing device (e.g., smart phone).
- PDA personal digital assistant
- the client 125 in this particular example can be any computer or device that can execute the address book module 130 , and allows the user to interact with the server system 105 , so that geographic data searches can be used to generate address book data for the user.
- the address book module 130 runs as an applet within the browser 125 a .
- the browser 125 is applet-enabled and can be, for example, Microsoft's Internet Explorer browser, Netscape's Navigator browser, Mozilla's Firefox browser, OpenWave's mobile computing browser, or any other browsing or application software capable of communicating with a server via a network.
- the present invention is not intended to be limited to an address book service.
- the client 125 can be any computer or device that can execute a personal data module configured in accordance with an embodiment of the present invention, and allows the user to interact with the server system 105 , so that structured data searches and/or browsing activity can be used to generate personal data for the user.
- the functionality of the address book module 130 will vary. For instance, in one embodiment, all searching functionality and address generation/maintenance functionality is carried out on the server-side, and the address book module 130 on the client-side receives address book entries from the server-side (e.g., in batch or incrementally) and stores them in its local address book.
- the address book module 130 on the client-side may be further configured to carry out other functionality as well, such as an autocomplete function and/or a selective display function, as will be discussed in turn.
- the address book module 130 is configured with some or all of the searching functionality and address generation/maintenance functionality discussed with reference to the server-side.
- the address book module 130 is discussed in more detail with reference to FIGS. 3 a , 3 b and 4 through 7 .
- the client-side architecture and functionality may also vary from one embodiment to the next.
- the address book module 130 can exist independently of the browser 125 a (e.g., as an executable application stored on client 125 and configured to harvest structured search data from geographic data searches conducted by the user from the browser 125 a , so that personal data generation can be carried out as described herein).
- clients configured with personal data modules other than address book modules e.g., such as a stock portfolio module, favorite blogs book module, favorite groups book module, etc
- the user can interact with that system via her telephone (e.g., cell phone, home phone, smartphone) or any other electronic input/output device, whether mobile or not.
- her telephone e.g., cell phone, home phone, smartphone
- the user's communication device can be thought of as the client-side, and the service being dialed into or otherwise accessed can be thought of as the server-side.
- the communication link between the communicating devices can be implemented with any number of technologies (e.g., GSM or VoIP), and may carry any type of data (e.g., voice, data).
- the mode of input/output between the communication devices can be speech and/or data based (e.g., IVR with voice and/or touchtone interface).
- FIG. 2 is a block diagram of a server-side personal data generator module, such as the address book generator module 115 shown in FIG. 1 , configured in accordance with one embodiment of the present invention.
- a server-side personal data generator module such as the address book generator module 115 shown in FIG. 1 , configured in accordance with one embodiment of the present invention.
- data from geographic data searches performed by the user is harvested from the server system 105 by the personal data generator module 201 .
- the module 201 then generates entries, and stores them in the personal data store 203 .
- the personal data generator module 201 is implemented as the address book generator module 115 discussed with reference to FIG. 1
- the personal data store 203 is implemented as database 110 discussed with reference to FIG. 1
- the module 115 generates address book entries, and stores address book data in the database 110 .
- the address book generator module 115 is a specific embodiment of the personal data generator module 201
- database 110 is a specific embodiment of the personal data store 203 .
- Other implementations of module 201 and data store 203 will be apparent in light of this disclosure.
- the address book generator module 115 includes an aggregator module 205 , a location estimator module 210 , a compactor module 215 , and an address ranking module 220 .
- Each of these modules can be implemented, for example, in software (e.g., C, C++, Java, or other suitable programming language), hardware (e.g., gate level logic or ASIC), firmware (e.g., microcontroller configured with I/O capability for receiving data from server 105 and a number of routines for carrying out aggregation, location estimation, compacting, storing/accessing, and ranking functions as described herein), or some combination thereof.
- the modules are shown as separate for purposes of illustration, and that other embodiments may have the various functionalities or sub-sets thereof integrated into a single module or parallel processing and/or pipelined architecture.
- the aggregator module 205 is programmed or otherwise configured to provide total recall.
- the aggregator module 205 collects all addresses input by the user when requesting geographic data searches (e.g., such as the addresses input by the user when using Google Local, Google Search, Google Earth, and Google Maps), including metadata for each search/address.
- This metadata includes, for example, the search or service with which the address was used, time of search, IP address included in the user's request, other request header data (e.g., http header and cookie).
- Such data can be used as ranking signals (or to derive ranking signals), which are assigned to the harvested address (ranking signal generation and assignment are performed by the compactor module 215 in this particular embodiment, and will be discussed in turn).
- Certain signals may be global or address independent (e.g., frequent locations, times of use of a certain service or other data aggregated across addresses or groupings thereof).
- This address data can then be processed and stored (as entries in an address book) in such a way that any service can access all or part of the address book both in real-time (incrementally, at each request as needed) and offline (e.g. batch processing), as will be appreciated in light of this disclosure.
- the aggregator module 205 is further configured to assign labels for each address (e.g., “home,” “work,” and/or name of the person or business associated with that address).
- the labels can be obtained, for example, through explicit action (e.g., querying user for label) and/or implicitly (e.g., based on user's email/contact history, and/or user's locality).
- Another way to match harvested addresses to a name is by the aggregator module 205 accessing one or more directory listing databases to identify a listing that matches the captured addresses.
- the aggregator module 205 may just collect addresses entered by the user in geographic data searches, and then match those addresses to a name to create entries in the user's address book (e.g., no use of metadata for ranking/valuing and other user interface enhancements, such as autocomplete).
- the aggregator module 205 may also be configured to collect usage data that a user provides while browsing, such as when a user selects a “driving directions” link.
- the aggregator module 205 can harvest address information associated with the driving directions, and use that address information for address book entries.
- data scraping and/or optical character recognition techniques can be used to harvest the associated address information, if it is not already known.
- the compactor module 215 is programmed or otherwise configured to provide compact recall, and to generate or otherwise assign ranking signals that help rank the addresses in future usage of the particular address or address book.
- the compactor module 215 compacts the entire address search history (including metadata, labels, ranking signals, etc) into one entry per distinct address.
- the compacted information can then be used by the ranking module 220 , as will be explained in turn.
- the compacting can be implemented using various types and/or combinations of statistical aggregation to generate and maintain address data (including ranking signals) that is likely to be used by the user.
- a statistical aggregate of cyclicity (e.g., Gaussian or other normal distribution) with a day and/or week period can be used to indicate what times of the day/week/year a particular address was used.
- Cyclicity of addresses can be derived by determining daily, weekly, and annual/seasonal cycles for each address. But since these seasonal variables (and other signals discussed herein) used for ranking are circular in nature, normal Gaussian distribution will not work when the day/week or year rolls over.
- One approach is to use the Von Mises or Poisson or other distributions. However most of these methods can only process data in a batch form (i.e., for each new usage of an address, the distribution needs to be recomputed, which means all previous data needs to be remembered).
- the other drawbacks are restrictions on the distribution (e.g., normal/uniform).
- An alternate approach is to use vector quantization.
- the day/week/year can be broken-up into a finite number of bins (time slices), and for each usage of the address (or occurrence in personal data), accumulate a value in the daily/weekly/yearly bins corresponding to that time. This value can be modulated based on emotional rank of that usage, type of usage/occurrence, max accumulated in a given time and other signals.
- This distribution can now incrementally (in real-time) accumulate statistics for circular variables occurring in any or unknown distribution, with the further advantage that the memory footprint of this distribution can be tailored by varying the number of bins and data stored per bin to approach that of a simple Gaussian distribution with minimal loss of fidelity.
- the number of bins and size can be uniform or non-uniform and determined based on criteria like Nyquist's theorem, desired signal fidelity, and signal nature. Note also that ‘day,’ ‘week,’ and ‘year’ are periods typically used and depending on the application other periods can be used as well.
- the compactor module 215 can determine the statistical distribution of address usage over a day (daily cycle) by taking the modulo of the usage time/times-in-a-day, and develop a distribution such as the one described.
- the compactor module 215 is configured for: vector quantizing the day into short buckets (e.g., 15 minutes), and incrementing a bucket by one for every search during that time of the day (example variants are to increment at most once every period, e.g., 15 minutes, and/or increment by value of search to the user, e.g., based on rank developed elsewhere); using an incremental version of the normal distribution modified to take the circularity of the day into account.
- the compactor module 215 can determine the statistical distribution of address usage over a week (weekly cycle) by taking the modulo of the usage time/times-in-a-week, and develop a distribution.
- the compactor module 215 can determine the statistical distribution of address usage over a year or other long periods (yearly/seasonal cycle) by using a (sparse) usage array/vector quantized by each week (e.g., using a weekly counter, where each count represents a use/access, whether one per day and/or a modulo usage value as described for daily cycles).
- the sparse array/vector captures the distribution completely while being more compact when many or most of the addresses rarely get used (e.g., personal addresses).
- This sparse array approach can be used as a variant of the vector quantization approach to reduce storage further for certain variables where the quanta are large and few are filled.
- Such usage information can be used to infer what addresses the user is most likely to want, depending on the time of day, week, and/or season. For instance, addresses associated with social contacts will typically be accessed on weekends and nights, while addresses associated with professional contacts will typically be accessed during week days (assuming a 9 to 5 work week). In this sense, “address seasonality” is determined by the compactor module 215 .
- each variable is associated with one or more of the following: a daily vector, weekly vector, yearly (sparse) vector, and vectors for any other period of interest. These vectors accumulate the count and/or value of the signal as it occurs.
- Overall signal statistics can also be tracked using incremental Gaussians or other approaches. Signals about recent behavior can be used to capture or boost recent phenomenon or to account for changing interests.
- a rolling vector of recent readings binned by hour/day/week or other time periods can be used.
- This vector can, for example, be used to compute statistics of the signal within in the recent period(s) and cross-correlate with other signals in the same recent period(s).
- An alternate method is to use numerical low pass filters (or aging techniques as described herein).
- the resulting generalized signal can then be configured as a computational ‘service’ which, when applied to any/all personal data, can automatically generate a sense of importance and value to the user of that piece of personal data.
- Such signals can then be used, for example, to display/autocomplete/autofill/share the associated personal data in user interfaces or applications.
- a statistical aggregate of IP address ranges associated with a particular address can also be output by the compactor module 215 using, for example, standard IP address compaction techniques and variants including tries (as is known, a trie is an ordered tree data structure that is used to store strings) associated with those methods.
- the location estimator module 210 is programmed or otherwise configured to collect and store all IP addresses from which the user requests a particular address, where that particular address is set as the “start address” (when the user is using map/direction search services) or “search from” address (when the user is using other structured search data services, such as discussion/social group services, finance services, blog services, etc).
- the compactor module 215 is programmed or otherwise configured to compact that list using IP address masks. If there are multiple masks, module 215 keeps a trie of the masks, along with address ranges within the masks (e.g., 192.168.2.*+‘100 to 110’). IP addresses are typically associated with a geo code (or other indicator of geographic location). Thus, the geographic location of the user can be estimated. From this location information, inferences can be drawn as how to best present relevant personal data to the user, as will be discussed in reference to the location estimator module 210 . The statistical aggregation of IP addresses can also be carried out module 210 , as will be appreciated. Thus, one embodiment of the present invention determines a user's location (or ranking an address higher/lower) based on usage of geo addresses on particular machines, and more generally associates personal data with particular IP addresses and/or geographic locations.
- a statistical aggregate of usage history associated with a particular address can also be output by the compactor module 215 .
- a statistical aggregate of address usage history can be implemented by storing a Boolean/bit vector for each type of usage and/or storing counters for each type of storage (to indicate frequency of usage type) and/or storing time decayed counters (to indicate how long ago that a particular address was initially stored).
- Such usage information is helpful, for example, in assessing rank and personal value of the corresponding address (e.g., addresses initially saved a long time ago that have been infrequently used are probably less valuable to the user than long held and frequently used addresses).
- the compactor module 215 can also be programmed or otherwise configured to eliminate duplicates entries for the same address. For instance, the compactor module 215 can merge information from two addresses (e.g., one older address and one newer address) into a single entry if the corresponding canonical addresses (i.e., the machine rewritten form of the address) are identical. Likewise, the compactor module 215 can merge information from the two addresses into a single entry if the latitude/longitude (lat/lon) values of the two addresses are identical and a Levenshtein distance (or other edit distance technique for finding similarity of words or strings) between the older address and the newer address is small, or if some function is below a threshold.
- Levenshtein distance or other edit distance technique for finding similarity of words or strings
- Levenshtein distance a1*abs(lat/lon distance)+a2*abs(Levenshtein distance), where a1, a2 are weighting constants.
- the Levenshtein distance can be applied to the entire address or different parts of it (e.g., the address and the label).
- the Levenshtein Distance can also be modified to use synonym knowledge to move synonym's closer for non-nouns. By ignoring the specifics of lat/lon and replacing with matches of other available structured data, this modified technique generalizes for all structured search queries. Another variant is to use polynomials of the above instead of just one factor. Other error functions can also be used, where the error function is 0 when there is a perfect match and increase monotonically as the addresses become more distant or different.
- the aggregator module 205 and the compactor module 215 operate together to allow generation and compaction of address book entries based on structured search data (including search metadata) input by a user.
- the structured search data can be from multiple sources and multiple online services, such as map services (e.g., Google Maps, Yahoo! Maps, Google Earth, MSN Virtual Earth, etc), local services (e.g., Google Local, Yahoo! Local, MSN Local, etc), discussion groups (e.g., Google Groups, Yahoo! Groups, MSN Groups, etc), social groups (e.g., Google's orkut).
- map services e.g., Google Maps, Yahoo! Maps, Google Earth, MSN Virtual Earth, etc
- local services e.g., Google Local, Yahoo! Local, MSN Local, etc
- discussion groups e.g., Google Groups, Yahoo! Groups, MSN Groups, etc
- social groups e.g., Google's orkut
- structured search data can be harvested to develop personal data for the user.
- This harvesting functionality can also be applied at the client, where any such data received by the user as part of a service (e.g., email or IM service) can be harvested to develop personal data for the user.
- a service e.g., email or IM service
- the aggregator module 205 and/or the compactor module 215 can be configured to auto-populate a user's address book.
- the aggregator module 205 is further configured for scraping user data from other sources such as email contacts, and frequently browsed contact pages (e.g., business pages), to acquire address data and/or names to go with the address data.
- the compactor module 215 can then run the scraped addresses through a geocoder (to estimate lat/lon of address) to canonicalize and complete the address (if necessary).
- address data can be pushed from the address book generation system into other systems, such as the contacts list of the user's email system.
- a conventional auto-merge function can be used, where addresses of the user's address book are merged with contacts in other services (e.g., email) based on labels, partial or whole address matches, and/or phone number of contact.
- a user interface can be provided at the client 125 , to allow the user to associate addresses from the address book (e.g., in module 130 ) with the user's email contacts list.
- addresses can be labeled online (e.g., by the user via a UI), or after the fact in an automatic inference-based labeling process (e.g., by the aggregator module 205 ) from other available user data. For instance, if person B receives five emails from person A, and all of those emails contain the same sign-off address at the bottom, then it can be inferred that the consistently used sign-off address is person B's work or home address. Thus, when the address is stored in the address book (e.g., database 110 ), the system (e.g., aggregator module 205 ) labels that address with person B's name from the user's contacts list.
- the address book e.g., database 110
- each access of an address in the address book, or of a contact or other personal data entity associated with an address in the address book can be stored and for statistical accumulation/ranking purposes.
- the receipt of the same embedded addresses e.g., received 5 times
- the rank signal for that stock (or other data of interest) could be significantly boosted if the user replies to such messages, or explicitly includes that stock in his future correspondence.
- the functionality described herein can be implemented on the server-side, the client-side, or a combination of the two depending on the system architecture, as will be apparent in light of this disclosure.
- the module 215 can either access the user's contacts and/or emails via a query to the client-side personal data module 301 (e.g., which can be programmed or otherwise configured to search the contacts/emails for the requested data), or by accessing a backend server that also includes the user's contacts/emails.
- the aggregator module 215 is on the client-side (as shown in FIG.
- the module 215 can locally access the user's contacts and/or emails, or query the server system 105 for the information.
- a UI at the client-side can be configured to allow the user to engage and interact with the system.
- the location estimator module 210 is programmed or otherwise configured to estimate the user's frequent physical locations. Such information can be used, for example, in a dynamic ranking process.
- the location estimator module 210 stores IP addresses associated with user actions that indicate the user is at a particular location (e.g., module 210 can receive IP addresses directly from server system 105 and/or from module 205 ).
- the location estimator module 210 stores IP addresses from which the user requests a particular address, where that particular address is set as the “start address” (e.g., driving directions search services) or “search from” address (e.g., general Internet search).
- the location estimator module 210 stores IP addresses from which the user requests a particular address, where that particular address is set as the “end address” (e.g., driving directions search services), and the user then sends (e.g., via email) those directions to another person (e.g., sending a friend driving directions to your house). IP addresses associated with other user actions that indicate the user is at a particular location can also be used.
- the location estimator module 210 can be further configured to estimate the user's location, for example, based on IP address, especially if an IP address is within an IP address mask as previously described with reference to the compactor module 215 .
- the statistical aggregation of IP address ranges associated with a particular address discussed with reference to the compactor module 215 can be carried out by the location estimator module 210 (e.g., in one particular embodiment, the location estimator module 210 is integrated into the compactor module 215 ).
- an IP address associated with a user ‘matches’ (whether a direct match or by way of a mask) one of the stored IP addresses or masks, then that IP address is one that provides a strong signal (e.g.
- IP addresses are typically associated with a geo code or other indicator of geographic location. Such geographic location information can be used, for example, to infer the location (e.g., home or work) from where the user conducts searches.
- address ranking and/or autocomplete schemes can be configured to dynamically adjust based on the user's location. For example, the user's top ten addresses at work (e.g., at an IP address that matches a “work” IP address mask, typically between 8 am and 6 pm) may be very different than the top ten addresses used at home (e.g., at an IP address that matches a “home” IP address mask, typically from 6 pm to 8 am). If at a work locality, then address ranking and/or autocomplete functions can favor work related addresses. Likewise, if at a home locality, then address ranking and/or autocomplete functions can favor home related addresses.
- location estimator module 210 assigns a label to entries in the address book, based on the estimated location of the user when accessing those entries (e.g., entries accessed at work are assigned a “work” label, while entries accessed at home are assigned a “home” label).
- a mapping system application as the one shown in FIG. 1 , when the user accesses the server system 105 from a known locality, the server system 105 can automatically generate a default map or viewport of the user's estimated locality, along with a default address in the “search address.” In accordance with one particular embodiment of a dynamic ranking scheme, rank of an address can be reduced as the address gets farther and farther away from the user's current known locality. Likewise, any form accessed by the user can be generated with default data based on the user's personal data. Also, geo-targeted ads are enabled for all services associated with the personal data system.
- geo-targeted news, weather, movies and other entertainment, and other useful information are also enabled for the personal data system.
- service of local TV listings to the client 125 is enabled.
- any geo-targeted services are enabled.
- the geo-targeting can be used in conjunction with dynamic ranking based on user interests (e.g., as indicated by browsing activity).
- a number of user estimated locations e.g., 2
- Such local ad targeting comes at zero cost (in terms of service latency).
- the cookie could be encrypted and short for security purposes. Reducing latency associated with ad-targeting a user allows for serving of relevant ads without losing performance or ad-context.
- the location estimator module 210 can estimate the locality of a user, and then provides that estimate (e.g., and related information, such as IP address masks, address listing labels, etc) to the compactor module 215 to be compacted with other pertinent data, so that compact entries can be stored in the address book data database 110 .
- the location estimator module 210 also provides its data (or a subset thereof, such as the estimated locality and the label associated with each locality) to the ranking module 220 , so that ranking can be carried out based on the user's estimated locality (as well as other user data).
- the ranking module 220 is programmed or otherwise configured to develop a rank that reflects a value of an address to the user based on multiple signals, which are generated and/or assigned by the compactor module 215 , as previously discussed. As previously described, these multiple signals (e.g., location of user, usage data, time of searches and/or subsequent accesses (of personal data), context of searches, and other metadata) are harvested by modules 205 and/or 210 , and then compacted by module 215 into entries into the database 110 (or other personal data storage). The ranking module 220 can access these entries in database 110 , and compute ranks for each associated address, as subsequent accesses of the system by the user occur.
- these multiple signals e.g., location of user, usage data, time of searches and/or subsequent accesses (of personal data), context of searches, and other metadata
- the ranking module 220 can access these entries in database 110 , and compute ranks for each associated address, as subsequent accesses of the system by the user occur.
- the ranking module 220 is flexible, and can also generate ranking orders based on the usage context.
- the ranking module 220 accesses one or more ranking signals associated with an address entry in data store 203 (or other personal data entry), so that generating different rankings for each address usage type is a matter of defining different ranking functions for different usages, where such functions can be hand-crafted or learnt.
- Machine learning, (non)linear regression or optimization techniques can be used to auto-generate the functions (or their parameters) using user supplied data points (e.g., whenever the user selects an address, in the ideal function, that address would be at or near the top in rank).
- the ranking module 220 can also be programmed or otherwise configured to generate ranking signals based on data associated with an entry in data store 203 .
- the ranking module 220 assigns a different emotional value for each different type of address usage (e.g., based on context, type of search, etc). For example, a “start address” is assigned a high emotional value, while an “end address” is assigned a lower emotional value.
- the rank order for ‘search near’ address input e.g., indicates location of the user's home or work
- the rank order for ‘directions from’ e.g., indicates current location in trying to get to home or work
- the rank order for ‘directions to’ e.g., indicates recent/new addresses used).
- the ranking module 220 can auto-mark that address with an indicator (e.g., star) or protect it so that it is prioritized high and/or never deleted.
- an indicator e.g., star
- This emotional/relevance ranking allows users to preserve all their former home/work addresses, which has a high administrative value.
- a user changes out a client 125 (e.g., previous computer dies or is updated to a newer model)
- each of the user's previous home/work addresses are preserved on the server-side in the database 110 (in accordance with their relatively high rank assigned by the ranking module 220 ).
- the new computer on the client-side can always be updated.
- the user is not required to remember or even research their previous home addresses or work addresses from many years ago. Such information is commonly required for a number of forms (e.g., such as forms for bank loans, taxes, job applications, credit card applications, etc).
- the system of FIG. 2 effectively operates as an address storage vault that can be used to allow other services to preserve/organize all types of personal information associated with each historical address (e.g., utility account numbers and other accounts/bills, telephone numbers, services, etc).
- personal information e.g., utility account numbers and other accounts/bills, telephone numbers, services, etc.
- Such data again can have significant administrative value, for example, when filing a tax return or when buying a home, and for other form-intensive processes that typically ask for such historical personal data.
- personal data can be preserved and indexed via street address (or other appropriate indexing scheme) for the user's future reference.
- many such processes that require that type of information can now be carried out in an online forms driven manner (e.g., applying for a bank loan over the Internet).
- Autocomplete and/or default data functions can be used by various online services (at the approval of user) to access the user's personal data vault to assist the user in completing the online forms.
- the target service being used by the user is related to the vault service (e.g., such as in the example case of a Google group service and a Google personal data vault service), and the user has granted permission for the related services to share information
- the target service can access the user's personal data from the related vault service and automatically enter that data into the target service's online forms prior to serving those forms to the user, thereby reducing the user's data entry burden.
- a personal data module executing on the client-side of the system can be programmed or otherwise configured to detect when the user has accessed online forms, and to interrogate each form to determine what information is being requested (e.g., by interpreting form tags that indicate “current address” “previous address #1” “previous address #2” etc).
- the personal data module executing on the client can then access the user's personal data vault (e.g., via network 120 and server system 105 ), and retrieve the requested data.
- a client-side personal data module is particularly useful when the service being used by the user is not related to the vault service, or simply when the user has not granted access to any services to their personal data stored in their vault (e.g., which can be implemented in the address book data 110 or other personal data store 203 ).
- the ranking module 220 can also (or alternatively) be configured to calculate a usage-based rank for each address in the user's address book. This rank can be based on the number of times the address is used by the user (e.g., which is one of the ranking signals aggregated and compacted into an entry for each address). This usage rank can be maintained by aging each usage and reducing associated value over time. Thus, older uses of an address combined with infrequent use will provide a lower usage rank than addresses that are frequently used over a long period of time.
- t1 and t2 refer to time constants
- Such an embodiment compacts the rank data significantly without losing the decay property of the independent signals.
- the ranking module 220 can also be configured to limit accumulation of emotional value as a function of time. This limitation captures the notion that no matter how many times a user uses an address in a given day, its emotional value to the user may be limited.
- this function is modeled as an asymptotically increasing function of time, and then approximating the function using buckets.
- ranking module 220 can be configured with set maximums at which the usage rank accumulation per hour, per day, per week, per month (and/or any other time period) can increase.
- the buckets i.e., hour bucket, day bucket, week bucket, etc
- emotional rank as a function of usage distribution is based on understood principles or overall usage statistics of personal data.
- emotional rank as a function of usage distribution is learnt from user data, per similar set of users using collaborative filtering or per user. This again is a ranking signal.
- the emotional value designated by some metadata e.g., this is a “from address” or a “home” label
- historical user profile information learnt over time per a given group or population e.g., per country, per language, per geography, or per other cluster of similar users
- the ranking module 220 can also (or alternatively) be configured to calculate a query independent rank for each address in the user's address book.
- Usage rank signals are indicators of address usage, while emotional rank signals are indicators of more personal meaning to the user (such as home addresses or work address typically have a higher emotional value to users than do, for example, a restaurant address).
- the ranking module 220 can also (or alternatively) be configured to calculate use specific ranking, where the addresses are ranked based on the user's recent searches and activity. For example, if an address used by the user is close to the locale of the user (e.g., as determined by module 210 ), then the ranking module 220 can assign that address a relatively higher rank (e.g., boost above average use rank) for use in the “start address” field when the user's location is estimated to be nearby. Conversely, the ranking module 220 can assign that address a relatively lower rank (e.g., deboost below average use rank, or no boost) for use in the “end address” field when the user's location is estimated to be nearby.
- a relatively higher rank e.g., boost above average use rank
- the ranking module 220 can assign that address a relatively lower rank (e.g., deboost below average use rank, or no boost) for use in the “end address” field when the user's location is estimated to be nearby.
- the ranking module 220 can assign a relatively higher rank (e.g., boost above average use rank) for current use.
- the ranking module 220 can be configured to boost use rank of an address by seasonality, as previously described (e.g., time of day, week, and/or year that the address is being used determines it use rank).
- the ranking module 220 can be configured to boost use rank of an address by use history. For example, the ranking module 220 can compute a use rank by dividing the average weekly count of recent+future weeks use of an address by the average use over all weeks since the address's first use (e.g., address use during future weeks can be estimated, for example based on the use during those weeks in previous years).
- the ranking module 220 can be configured to assign an overall boost to addresses within a drivable distance (e.g., within ⁇ 2 hours) to the current view port and/or regions the user has recently searched in, using the IP locale as estimated by the module 210 (or by other means, such as by online services used, or telephone numbers called). Conversely, the ranking module 220 can be configured to assign a lower use rank (e.g., deboost below average use rank) for addresses further away (e.g., using a gentle sigmoid).
- a lower use rank e.g., deboost below average use rank
- ranking module 220 can be configured to implement multiple ranking orders of the same address book for different uses at the same time (e.g., as previously indicated, a “to address” can be associated with one rank, while a “from address” can be associated with another rank; such different usage ranks can be simultaneously generated). Further, note that the ranking module 220 can be configured to implement multiple ranking orders of the same address book for different users (e.g., based on user IDs).
- FIG. 3 a is a block diagram of a client-side personal data module 301 , such as the client-side address book module 130 shown in FIG. 1 , configured in accordance with one embodiment of the present invention.
- the module 130 includes a client-side personal data book 305 , an autocomplete module 310 , a display module 315 , and a request module 320 .
- This module 130 can be implemented for use with the server-side system shown in FIG. 2 , although numerous overall system configurations will be apparent in light of this disclosure.
- Each of the client-side modules can be implemented, for example, in software (e.g., C, C++, Java, JavaScript, or other suitable programming language), hardware (e.g., gate level logic or ASIC), firmware (e.g., microcontroller configured with I/O capability for receiving data from browser 125 a and a number of routines for carrying out storing/accessing, autocompleting, displaying, requesting, merging, and other functions as described herein), or some combination thereof.
- the modules are shown as separate for purposes of illustration, and that other embodiments may have the various functionalities or sub-sets thereof integrated into a single module or parallel processing and/or pipelined architecture.
- the module 130 executes within the host system's browser, in one particular embodiment.
- any executable module or agent can be implemented on the client-side, such as an application that launches at computer start-up.
- the address book module 130 (or other personal data module 301 ) executing on the client-side of the system is programmed or otherwise configured to detect when the user has accessed online forms, and to interrogate each form to determine what information is being requested. The address book module 130 executing on the client can then access the user's personal data vault, as previously described.
- the monitoring/detection functionality described here can be implemented, for example, in the autocomplete module 310 and/or the request module 320 .
- a distinct monitor/detection module can be programmed to monitor the user's computer use, and to detect when personal data vault access is necessary. This distinct monitor/detection module can then engage the request module 320 to retrieve the data, and feed that data to the autocomplete module 310 .
- the monitor/detection module is integrated into the autocomplete module 310 and configured to read tags (e.g., HTML tags/content or other indicators of data being requested) to determine when and what data is being requested.
- tags e.g., HTML tags/content or other indicators of data being requested
- the monitor/detection module can be configured with form-based optical character recognition (OCR) capability, thereby allowing the module to determine when and what data is being requested by a particular form the user has accessed with her computer.
- OCR optical character recognition
- the personal data vault can be stored on the server-side (e.g., in module 203 or other location, where personal data is served to the user on an as needed basis in real-time) or on the client-side (e.g., in module 305 or other location, where personal data is cached locally on the user's computer system), or on both sides (e.g., where all available personal data is stored on the server-side in module 203 , and a sub-set of that data is cached on the client-side in module 305 ).
- the cached sub-set can be selected for caching based on data rank, as described herein (e.g.; based on one or more emotional value, time decay, recent/historical usage, and seasonality signals).
- data rank e.g.; based on one or more emotional value, time decay, recent/historical usage, and seasonality signals.
- the local cache is queried first for requested data. If the requested data is not cached, then the remote personal data vault can be queried.
- the local cache can be updated and refined as ranking signals are interpreted, and as rankings shift.
- the client-side personal data book 305 can be populated incrementally (e.g., in real-time as each address book entry is updated) or in batch (e.g., subset of address book entries or all address book entries) by the server-side system, using Ajax and JavaScript (or other suitable data transfer mechanisms).
- the client-side personal data book 305 can be downloaded, for example, in its entirety on a periodic basis or at the request of the user.
- the client-side personal data book 305 can also be stored locally on the user's machine (e.g., on local hard drive or other suitable storage facility).
- the client can also incrementally or batch send addresses/usage history to the server, if so desired (e.g., for cell phone or other client applications where there is substantial client-side processing (e.g., Google Earth or other such client heavy services).
- the autocomplete module 310 is configured to provide the browser with the module's 130 best guesses as to what personal data the user is likely to want. Such UI functionality further improves or eases the user's experience.
- the autocomplete module 310 shows a ranked set of addresses, even if the user enters nothing or enters space in the search fields of the page provided by the server system (e.g., via the user's browser), since the ranking module 220 allows the address book service to infer or otherwise guess the addresses the user is likely to use, based on recent usage and other hints based on metadata and user activity (e.g., the “from” IP address indicates user locality, frequency of use indicates high emotional and use ranks, context of use), as previously described.
- the “from” IP address indicates user locality, frequency of use indicates high emotional and use ranks, context of use
- addresses provided by the autocomplete module 310 can be programmed or otherwise configured to presort by rank, so as to allow users to access the most important addresses matching the string they entered, or to browse (e.g., hit space) and autocomplete an address without ever entering any part of the address.
- dynamic autocomplete is enabled. For instance, the list of addresses provided by autocomplete module 310 changes based on whether the user is using her home computer, or her work computer.
- the list of addresses (and/or their rank) provided by autocomplete module 310 changes based on whether the user is using her computer at night (e.g., where the top ranked social addresses are provided by the autocomplete module 310 ), or in the daytime (e.g., where the top ranked work-related addresses are provided by the autocomplete module 310 ), or the context of the user's application for which the addresses are being accessed.
- the autocomplete module 310 is implemented as described in U.S. application Ser. No. 10/425,295, filed Apr. 29, 2003, and titled “Methods and Apparatus for Assisting in Completion of a Form.” This application is herein incorporated in its entirety by reference. Numerous autocomplete functions will be apparent in light of this disclosure, whether dynamic or static in nature.
- the autocomplete module 310 may also be configured to filter out “garbage” based on if the user entered address is useful. For example, if the user accidentally enters an incorrect address (e.g., typo), without a filtering function, that incorrect address shows up in the autocomplete list, thereby making the autocomplete function less useful (not to mention the user may accidentally send mail to an incorrect email address, or get directions to the wrong street address).
- autocomplete module 310 is further configured for managing autocomplete entries, where, entries that are determined to be incorrect are discarded (or ranked low) so that they are not displayed to the user. Erroneous or mistaken entries (or spam) can be detected based both on statistics, invalid responses and/or any signals that indicate a bad piece of data.
- the autocomplete module 310 can be configured to proactively analyze user data to ensure it is correct prior to user. For instance, email addresses can be analyzed for proper conformation (e.g., look for “@” and “.com” or “.net” or “.edu” etc).
- the autocomplete module 310 can generate the best guess list of personal data (whether addresses, email addresses, stocks, etc) by accessing the personal data book 305 , and can also access the remote personal data store 203 of the server-side system, by operation of the request module 320 .
- the request module 320 is programmed or otherwise configured to allow the module 301 to communicate over the network 120 via the user's browser to the server-side system, as needed.
- UI functionality can be implemented by the system to further improve or ease the user's experience. For instance, when the user accesses the server system 105 (e.g., via URL or other request) to conduct a search, a default address (e.g., home address or work address) can be automatically filled in the “start address” field of the page that is served to the user, based on the user's recent activity or metadata from which inferences can be drawn about which address to provide as default. This default address can be dynamically adjusted (rather than a static address based on recent use based ranking). As previously explained, for instance, the default data pre-filled in the served page can be set based on the time and/or the locality from which the request was sent (e.g., work default data is very different from home default data).
- work default data is very different from home default data.
- the display module 315 is programmed or otherwise configured to display a small number of addresses (e.g., 0 to 5 addresses), where the order of addresses is determined by factors such as the overall rank of each address with a higher bias towards addresses that are recently important (e.g., recently created or recently used are promoted in rank, but addresses one always uses, like home/work addresses, are demoted).
- the display module 315 uses the residual of the maximum rank accumulation and applies a high pass filter to bias towards the higher frequency signal part of the rank vs. time signal.
- the display module 315 can then display each of these addresses in a compact form (e.g., compact address followed by an optional short snippet about that address, and how the user has previously used it).
- the display module 315 can then dynamically switch the display mode and the ranking algorithm driven by metrics of which addresses are most useful given the type of search. For example, in the maps/local home page served to the user, the display module 315 shows addresses with a high bias towards recently used addresses. Also, after an address search, the display module 315 shows the addresses the user most often gets directions from/to and modify the display ease getting those directions (e.g., such as a one-click get address UI control).
- the display module 315 shows addresses with a bias towards addresses the user often (e.g., 3 times or more) searches near, and provide links to repeat search using one of those addresses as the “near” address.
- the display module 315 shows addresses with a bias towards recent addresses, and allows user to route from/to/via one of the recent addresses.
- the display module 315 can be configured to provide one or more links to, for example, delete/edit/label the address, so that managing the address book (or other personal data) becomes an incremental task, not a chore where the user has to go out of the way.
- FIG. 3 b is a block diagram of a client-side personal data module 302 configured in accordance with another embodiment of the present invention.
- this alternative client-side architecture includes a client-side search/mapping module 390 which is in communication with the personal data module 302 (e.g., client-side address book module 130 shown in FIG. 1 for purposes of discussion).
- client-side search/mapping module 390 By implementing local search engine functionality with client-side search/mapping module 390 , less requests (or none) to the server-side are required.
- server system 105 The previous discussion with reference to server system 105 equally applies to the client-side search/mapping module 390 .
- this alternative client-side architecture can still access and use the server-side system shown in FIG. 2 (including server system 105 ) to supplement the client-side search functionality (an other functionality), if so desired and/or as necessary.
- the client-side address book module 130 (or other personal data module 302 ) functionality previous discussed with reference to the server-side personal generator module 201 .
- the module 130 include an aggregator module 350 , a location estimator module 355 , a compactor module 360 , an address ranking module 370 , and a client-side personal data store.
- Each of these modules corresponds to a similarly named module discussed with reference to FIG. 2 (i.e., aggregator module 205 , location estimator module 210 , compactor module 215 , address ranking module 220 , and personal data store 203 , respectively).
- the previous discussion with reference to these modules of FIG. 2 equally applies to the similarly named modules of FIG. 3 b.
- the address book module 130 also includes a client-side personal data book 375 and a display module 380 , each of which corresponds to a similarly named module discussed with reference to FIG. 3 a (i.e., client-side personal data book 305 and display module 315 , respectively).
- client-side personal data book 305 and display module 315 respectively.
- the previous discussion with reference to these modules of FIG. 3 a equally applies to the similarly named modules of FIG. 3 b .
- the alternative architecture of FIG. 3 b includes an autocomplete module 385 .
- the previous discussion with reference to the autocomplete module 310 of FIG. 3 a equally applies to the module 385 of FIG. 3 b.
- one embodiment of the invention can be a dynamic autocomplete function as described herein.
- Such a function can be used in many applications, such as in an email application, where the user's “to” box of the email interface is dynamically autocompleted for the user based on the user's location and/or computer (e.g., night time on home computer, then autocomplete favors social contacts; day time on work computer, then autocomplete favors professional contacts).
- a search application such as for general searches, discussion group searches, blog searches, etc
- the user's “text search” box of the search interface is dynamically autocompleted for the user based on the time of day and user's previous use patterns (e.g., historically, the user accesses blogs on marketing trends and industry-centric discussion groups during the day, but at night accesses blogs on fly-fishing and dream vacation discussion groups).
- the user's “financial entity search” box of the financial service interface is dynamically autocompleted for the user based on the time of day, month, or year (e.g., favor user mutual funds in morning, and user stocks in afternoon; favor company names of user held stocks associated with recently issued quarterly reports or other significant company news).
- the dynamic autocomplete function essentially suggests to user what to search for. Numerous variations and applications for a dynamic autocomplete function will be apparent in light of this disclosure, and the present invention is not intended to be limited to any one particular configuration.
- the ranking module 370 can communicate directly with the client-side personal data book 375 , the autocomplete module 385 , and the display module 380 .
- communication between these modules was achieved via the server system 105 , network 120 , and request module 320 .
- the autocomplete module 385 can communicate directly with client-side personal data store 365 , and provide autocomplete data directly to the client-side search/mapping module 390 .
- the functionality of the request module 320 (of the FIG. 3 a embodiment) is effectively integrated into the module 390 (of the FIG. 3 b embodiment).
- client-server inter-process communication
- intra-process communication techniques can be employed to implement the various functionalities and interactions described herein.
- client-side functions such as caching, search capability, and ranking can be implemented as desired.
- FIG. 4 illustrates a method for automatically generating a user's address book in accordance with an embodiment of the present invention.
- This method can be implemented, for example, in software as discussed with reference to the systems depicted in FIGS. 1 , 2 , 3 a , and 3 b , and can be carried out on the server-side, the client-side, or a combination thereof. Numerous implementations will be apparent in light of this disclosure.
- the method includes receiving 405 a user request for a geographic data search (e.g., such as a request for map data or driving directions), and extracting 410 a street address from the request.
- the method continues with assigning 415 a label to the street address, such as a person's name or business name that corresponds to the street address, and/or location where that address is used (e.g., home or work), and/or an ID.
- this step may further include accessing an online directory of residential and/or commercial address listing, and matching the extracted address to one of the listing to identify the correct label.
- the method continues with assigning 420 one or more ranking signals to the street address based on metadata associated with the search and/or user browsing activity (e.g., as previously explained, where addresses are ranked using ranking signals such as those that indicate emotional value, time decay, and/or seasonality).
- the method continues with estimating 425 the user's location based on metadata associated with the search, and/or previous searches performed by the user. For instance, the IP address associated with the user's location can be used to guess the user's location. Likewise, the user's frequent and/or historical use of the same address in the “start address” box of the mapping system interface tends to indicate the user is at that address, when that address is subsequently used as the “start address.”
- the method continues with compacting 430 the street address, label, one or more ranking signals, user location, associated metadata, and other related or relevant data into a single entry associated with that street address.
- the method continues with adding 435 the entry to user's address book data store, which can be local to the user (e.g., as in FIG. 3 b ) or remote to user (e.g., as in FIG. 3 a ).
- the method continues with updating 440 the entry when future requests are received that include the street address. Such updates may include, for example, updating metadata statistics and/or ranking signals. Likewise, the updating may include changing the localities associated with the use of the address, or simply adding data to the entry that was previously unavailable.
- the method continues with updating 445 the user's address book with information from new/updated entries (e.g., using Ajax and JavaScript or other suitable mechanism).
- FIG. 5 illustrates a method for dynamically ranking entries in a user's personal data book in accordance with an embodiment of the present invention.
- This method can be implemented, for example, in software as discussed with reference to the systems depicted in FIGS. 1 , 2 , 3 a , and 3 b , and can be carried out on the server-side, the client-side, or a combination thereof. Numerous implementations will be apparent in light of this disclosure.
- the method includes receiving 505 a user search request including structured data and metadata (e.g., such as a request for map data or driving directions), and extracting 510 structured data and/or metadata from the request (e.g., a street address and associated metadata such as time, locality of user, and context of use).
- the method continues with assigning 515 an emotional rank signal to the extracted data based on how personal it is to the user. For instance, addresses that are frequently used as the “start address” or “near address” in mapping system applications can be inferred to be home/work addresses of the user, or addresses of people important to the user. Such addresses therefore have an emotional value to the user, and are assigned an emotional ranking signal (or boost in rank) to distinguish them from addresses of lesser emotional value.
- the method may also include limiting 520 accumulation of emotional rank signal as a function of time, as previously described with reference to modules 220 and 370 .
- the method may also include assigning 525 a usage-based rank signal to the extracted data (e.g., based on how frequently it is used), and aging 530 that usage rank signal over time, as previously described with reference to modules 220 and 370 .
- the method may include limiting 535 accumulation of usage rank signal as a function of time, similar to 520 .
- the method may include assigning 540 a rank signal to the extracted data based on its specific use by user (e.g., locality, seasonality, and context such as type of request and/or expected use; note that there can be a rank signal for each of these), as previously described with reference to modules 220 and 370 .
- the method includes storing 545 the extracted data along with it corresponding ranking signals as an entry in a personal data storage, as previously described herein (note that other data, such as labels, and metadata, may also be stored in the corresponding entry.
- the method continues with assigning 550 an overall rank to data candidates (from the user's personal data storage) that may satisfy that request/need, based on one or more rank signals associated with each of those candidates. For instance, in an address book application, address ranking favors work related addresses if at a work locality, and favors home related addresses if at a home locality. In a similar fashion, the time of day (or season, etc) at which a user is accessing the address book (or other personal data) can be used to effect an overall ranking. For instance, if daytime during the work week, then address ranking can favor work related addresses. Likewise, if nighttime or a weekend, then address ranking can favor home related addresses.
- FIG. 6 illustrates a method for dynamically autocompleting a personal data entry for a user in a computer-based application, in accordance with an embodiment of the present invention.
- This method can be implemented, for example, in software as discussed with reference to the systems depicted in FIGS. 1 , 2 , 3 a , and 3 b , and can be carried out on the server-side, the client-side, or a combination thereof.
- the computer-based application can be, for instance, an email application and the input of data is an email address.
- the computer-based application can be a browser application operatively coupled to a search engine, and the input of data is one or more search terms (e.g., general search, financial search, geographic information search, blog search, news search, etc). Numerous implementations will be apparent in light of this disclosure.
- the method includes monitoring 605 a user's computer use, and detecting 610 when an input of data is required by the computer-based application (e.g., such as using a computer to access and complete online forms with personal data, or to send an email to one or more email addresses, or to conduct an online search for information on a particular stock or driving directions from the user's home to another location).
- steps 605 and 610 are carried out using a monitor/detection module as discussed with reference to the autocomplete modules 310 and 385 .
- the method continues with identifying 615 one or more data candidates by which the input could be satisfied, based on a dynamic ranking scheme associated with the user (e.g., rank based on time and/or user locale and/or context and/or user browsing activity, as previously discussed with reference to FIG. 5 ).
- a dynamic ranking scheme associated with the user (e.g., rank based on time and/or user locale and/or context and/or user browsing activity, as previously discussed with reference to FIG. 5 ).
- rank based on time and/or user locale and/or context and/or user browsing activity, as previously discussed with reference to FIG. 5 .
- one data candidates can also be identified and/or otherwise refined based on partial user input, as discussed as discussed in the previously incorporated U.S. patent Ser. No. 10/425,295.
- the method further includes determining 620 if the one or more data candidates are in cache (or otherwise locally available). If so, then the method continues with retrieving 630 the one or more data candidates from the cache.
- the method continues with retrieving 625 the one or more data candidates from a remote personal data store, as previously described with reference to FIG. 2 .
- the personal data store is organized by the user's ID and/or user name (or other suitable storage/indexing scheme), so that the one or more data candidates can be readily accessed and provided back to the user.
- the method continues with autocompleting 635 the input of data with one of the one or more data candidates.
- this autocompleting includes displaying the one or more data candidates to the user, so that the user can select one of the one or more data candidates (e.g., using a pull-down menu or other suitable user interface provided proximate the data entry box as discussed in the previously incorporated U.S. patent Ser. No. 10/425,295), and then autofilling the selected data candidate into the input for the user.
- displaying the one or more data candidates can be in response to partial data manually entered by the user.
- displaying the one or more data candidates can be carried out prior to manual data entry into the input by the user (e.g., based on the dynamic ranking scheme).
- the autocompleting may include autofilling a single best guess (e.g., based on best rank), and then allow the user to refine that guess, if necessary.
- FIG. 7 illustrates a method for automatically generating a personal data book for a user, in accordance with an embodiment of the present invention.
- This method can be implemented, for example, in software as discussed with reference to the systems depicted in FIGS. 1 , 2 , 3 a , and 3 b , and can be carried out on the server-side, the client-side, or a combination thereof. Numerous implementations will be apparent in light of this disclosure.
- the method includes receiving 705 a user search request including structured data and metadata.
- the search request could be, for example, for financial data service.
- the search request could be for a social or discussion group service, or a blog service, or for a general search service. Any type of search request including structured data can be received.
- the method continues with extracting 710 structured data and/or metadata from the request, and assigning 715 a label to the extracted data, such as user name and/or location of use, and/or user ID.
- the method continues with assigning 720 one or more ranking signals to the data, based on metadata associated with the user and/or user browsing activity, as previously discussed for example with reference to FIGS. 2 and 3 b and modules 220 and 370 . Note that these one or more ranking signals can be maintained incrementally, as new data becomes available).
- the method continues with estimating 725 the user's location based on metadata associated with the search, and/or previous searches performed by the user (e.g., as discussed with reference to modules 210 and 355 ), and compacting 730 the extracted data, label, ranking signals, user location, associated metadata and other relevant data into a single entry (e.g., as discussed with reference to modules 215 and 360 ).
- the method continues with adding 735 the entry to the user's personal data store (which can be local or remote to the user), and updating 740 the entry when future searches are received that include the extracted data (or are otherwise associated with the extracted data).
- Each entry of the user's personal data store can include any type of personal data, such as street addresses or any structured (or domain specific) entities for which a user can search.
- the method continues with updating 745 the user's personal data book with information from new/updated entries.
- the user's personal data book can be, for example, an address book, a book of financial entities (e.g., stocks, companies, mutual funds), a book of favorite blogs, a book of favorite discussion groups, a book of email addresses.
- more or more candidates of the personal data can be ranked (based on ranking signals) and provided to an autocompleter function to ease the user's data entry and recall burden.
- rankings signals based on ranking signals
Abstract
Description
Claims (14)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/323,364 US9262446B1 (en) | 2005-12-29 | 2005-12-29 | Dynamically ranking entries in a personal data book |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/323,364 US9262446B1 (en) | 2005-12-29 | 2005-12-29 | Dynamically ranking entries in a personal data book |
Publications (1)
Publication Number | Publication Date |
---|---|
US9262446B1 true US9262446B1 (en) | 2016-02-16 |
Family
ID=55275438
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/323,364 Active 2029-01-12 US9262446B1 (en) | 2005-12-29 | 2005-12-29 | Dynamically ranking entries in a personal data book |
Country Status (1)
Country | Link |
---|---|
US (1) | US9262446B1 (en) |
Cited By (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20100106730A1 (en) * | 2007-04-30 | 2010-04-29 | Aminian Mehdi | Method of intermediation within a social network of users of a service/application to expose relevant media items |
US20150237224A1 (en) * | 2014-02-14 | 2015-08-20 | Samsung Electronics Co., Ltd. | Method of using address book of image forming apparatus on web browser and image forming apparatus for performing the same |
US20150234828A1 (en) * | 2012-08-17 | 2015-08-20 | Zte Corporation | Address book sorting method and system of mobile terminal |
US20160019308A1 (en) * | 2014-07-18 | 2016-01-21 | Oracle International Corporation | Modifying the order of items in a digital document based upon usage patterns |
US9471581B1 (en) | 2013-02-23 | 2016-10-18 | Bryant Christopher Lee | Autocompletion of filename based on text in a file to be saved |
US20180212963A1 (en) * | 2013-08-02 | 2018-07-26 | Uc Mobile Co., Ltd. | Method and apparatus for accessing website |
US20190018848A1 (en) * | 2017-07-12 | 2019-01-17 | Facebook, Inc. | Techniques for prospective contact ranking of address book entries |
CN109685125A (en) * | 2018-12-14 | 2019-04-26 | 大连海事大学 | Daily behavior feature mining and calculation method based on frequent Sensor Events sequence |
US10867002B1 (en) * | 2017-12-14 | 2020-12-15 | Ray A. Walker | Real estate search interface and method |
US11409783B2 (en) * | 2017-10-03 | 2022-08-09 | Google Llc | Data structure queries to manage loading time in multimedia content |
US20220292103A1 (en) * | 2009-01-21 | 2022-09-15 | Staffan Truvé | Information service for facts extracted from differing sources on a wide area network |
US11900462B2 (en) * | 2016-08-30 | 2024-02-13 | The Athene Group | Systems and methods for account automation and integration |
Citations (202)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4410957A (en) | 1980-11-20 | 1983-10-18 | International Business Machines Corporation | Keystroke queueing system |
US5280612A (en) | 1991-11-26 | 1994-01-18 | International Business Machines Corporation | Multiple version database concurrency control system |
US5321838A (en) | 1991-02-28 | 1994-06-14 | Hensley Billy W | Event capturing for computer software evaluation |
US5539809A (en) | 1992-12-23 | 1996-07-23 | At&T Corp. | Location specific messaging in a telecommunications network |
US5555346A (en) | 1991-10-04 | 1996-09-10 | Beyond Corporated | Event-driven rule-based messaging system |
US5566336A (en) | 1993-03-22 | 1996-10-15 | Hitachi, Ltd. | Operation macro generated method that changes execution control according to system situation |
US5592378A (en) | 1994-08-19 | 1997-01-07 | Andersen Consulting Llp | Computerized order entry system and method |
US5623652A (en) | 1994-07-25 | 1997-04-22 | Apple Computer, Inc. | Method and apparatus for searching for information in a network and for controlling the display of searchable information on display devices in the network |
US5701469A (en) | 1995-06-07 | 1997-12-23 | Microsoft Corporation | Method and system for generating accurate search results using a content-index |
US5742816A (en) | 1995-09-15 | 1998-04-21 | Infonautics Corporation | Method and apparatus for identifying textual documents and multi-mediafiles corresponding to a search topic |
US5748954A (en) | 1995-06-05 | 1998-05-05 | Carnegie Mellon University | Method for searching a queued and ranked constructed catalog of files stored on a network |
US5793948A (en) | 1994-11-25 | 1998-08-11 | Nec Corporation | Method and apparatus for recording and analyzing an interaction log |
US5845300A (en) | 1996-06-05 | 1998-12-01 | Microsoft Corporation | Method and apparatus for suggesting completions for a partially entered data item based on previously-entered, associated data items |
US5881315A (en) | 1995-08-18 | 1999-03-09 | International Business Machines Corporation | Queue management for distributed computing environment to deliver events to interested consumers even when events are generated faster than consumers can receive |
US5907836A (en) | 1995-07-31 | 1999-05-25 | Kabushiki Kaisha Toshiba | Information filtering apparatus for selecting predetermined article from plural articles to present selected article to user, and method therefore |
US5913208A (en) | 1996-07-09 | 1999-06-15 | International Business Machines Corporation | Identifying duplicate documents from search results without comparing document content |
RU2138076C1 (en) | 1998-09-14 | 1999-09-20 | Закрытое акционерное общество "МедиаЛингва" | Data retrieval system in computer network |
US5956722A (en) | 1997-09-23 | 1999-09-21 | At&T Corp. | Method for effective indexing of partially dynamic documents |
US5961610A (en) | 1996-08-13 | 1999-10-05 | General Electric Company | Systems, methods and apparatus for generating and controlling display of medical images |
US5964839A (en) | 1996-03-29 | 1999-10-12 | At&T Corp | System and method for monitoring information flow and performing data collection |
US6006222A (en) | 1997-04-25 | 1999-12-21 | Culliss; Gary | Method for organizing information |
US6014665A (en) | 1997-08-01 | 2000-01-11 | Culliss; Gary | Method for organizing information |
US6029195A (en) | 1994-11-29 | 2000-02-22 | Herz; Frederick S. M. | System for customized electronic identification of desirable objects |
US6055579A (en) | 1997-11-17 | 2000-04-25 | Silicon Graphics, Inc. | Distributed control and synchronization of multiple data processors using flexible command queues |
US6073130A (en) | 1997-09-23 | 2000-06-06 | At&T Corp. | Method for improving the results of a search in a structured database |
US6078916A (en) | 1997-08-01 | 2000-06-20 | Culliss; Gary | Method for organizing information |
US6119147A (en) | 1998-07-28 | 2000-09-12 | Fuji Xerox Co., Ltd. | Method and system for computer-mediated, multi-modal, asynchronous meetings in a virtual space |
JP2001005705A (en) | 1999-06-22 | 2001-01-12 | Hitachi Ltd | Document information management system |
US6175830B1 (en) | 1999-05-20 | 2001-01-16 | Evresearch, Ltd. | Information management, retrieval and display system and associated method |
US6182068B1 (en) | 1997-08-01 | 2001-01-30 | Ask Jeeves, Inc. | Personalized search methods |
US6182065B1 (en) | 1996-11-06 | 2001-01-30 | International Business Machines Corp. | Method and system for weighting the search results of a database search engine |
US6184880B1 (en) | 1997-01-08 | 2001-02-06 | Nec Corporation | Automatic GUI system operation device and operation macro execution device |
US6199067B1 (en) | 1999-01-20 | 2001-03-06 | Mightiest Logicon Unisearch, Inc. | System and method for generating personalized user profiles and for utilizing the generated user profiles to perform adaptive internet searches |
US6202065B1 (en) | 1997-07-02 | 2001-03-13 | Travelocity.Com Lp | Information search and retrieval with geographical coordinates |
US6209000B1 (en) | 1997-10-31 | 2001-03-27 | Oracle Corporation | Tracking storage for data items |
US6226630B1 (en) | 1998-07-22 | 2001-05-01 | Compaq Computer Corporation | Method and apparatus for filtering incoming information using a search engine and stored queries defining user folders |
US6236978B1 (en) * | 1997-11-14 | 2001-05-22 | New York University | System and method for dynamic profiling of users in one-to-one applications |
US6236768B1 (en) | 1997-10-14 | 2001-05-22 | Massachusetts Institute Of Technology | Method and apparatus for automated, context-dependent retrieval of information |
US6240548B1 (en) | 1997-10-06 | 2001-05-29 | Sun Microsystems, Inc. | Method and apparatus for performing byte-code optimization during pauses |
US20010002469A1 (en) | 1998-06-11 | 2001-05-31 | Bates Cary Lee | Apparatus, program products and methods utilizing intelligent contact management |
US6269369B1 (en) | 1997-11-02 | 2001-07-31 | Amazon.Com Holdings, Inc. | Networked personal contact manager |
US6275957B1 (en) | 1998-09-21 | 2001-08-14 | Microsoft Corporation | Using query language for provider and subscriber registrations |
US6275820B1 (en) | 1998-07-16 | 2001-08-14 | Perot Systems Corporation | System and method for integrating search results from heterogeneous information resources |
US20010016852A1 (en) | 1996-11-21 | 2001-08-23 | Mark Peairs | Automatic document archiving for a computer system |
US6282548B1 (en) | 1997-06-21 | 2001-08-28 | Alexa Internet | Automatically generate and displaying metadata as supplemental information concurrently with the web page, there being no link between web page and metadata |
US6321228B1 (en) | 1999-08-31 | 2001-11-20 | Powercast Media, Inc. | Internet search system for retrieving selected results from a previous search |
US6341371B1 (en) | 1999-02-23 | 2002-01-22 | International Business Machines Corporation | System and method for optimizing program execution in a computer system |
US6346952B1 (en) | 1999-12-01 | 2002-02-12 | Genesys Telecommunications Laboratories, Inc. | Method and apparatus for summarizing previous threads in a communication-center chat session |
US6349299B1 (en) | 1998-12-24 | 2002-02-19 | International Business Machines Corporation | System and method for storing electronic contact information into an electronic address book |
US6363373B1 (en) | 1998-10-01 | 2002-03-26 | Microsoft Corporation | Method and apparatus for concept searching using a Boolean or keyword search engine |
US6370563B2 (en) | 1996-09-30 | 2002-04-09 | Fujitsu Limited | Chat system terminal device therefor display method of chat system and recording medium |
US20020042789A1 (en) | 2000-10-04 | 2002-04-11 | Zbigniew Michalewicz | Internet search engine with interactive search criteria construction |
US20020049608A1 (en) | 2000-03-03 | 2002-04-25 | Hartsell Neal D. | Systems and methods for providing differentiated business services in information management environments |
US6380924B1 (en) | 1998-10-22 | 2002-04-30 | Young Yee | Mouse/keyboard capture recorder (MCR) apparatus and methodology |
US20020059425A1 (en) | 2000-06-22 | 2002-05-16 | Microsoft Corporation | Distributed computing services platform |
US6393421B1 (en) | 1998-09-18 | 2002-05-21 | Neriel Paglin | Communication method and system utilizing a specific communication code uniquely assigned to the data record |
US6393438B1 (en) | 1998-06-19 | 2002-05-21 | Serena Software International, Inc. | Method and apparatus for identifying the existence of differences between two files |
US20020065802A1 (en) | 2000-05-30 | 2002-05-30 | Koki Uchiyama | Distributed monitoring system providing knowledge services |
US6401239B1 (en) | 1999-03-22 | 2002-06-04 | B.I.S. Advanced Software Systems Ltd. | System and method for quick downloading of electronic files |
US20020073076A1 (en) | 2000-12-11 | 2002-06-13 | Yongjie Xu | System and method for enabling off-line database functionality |
US20020078256A1 (en) | 2000-12-15 | 2002-06-20 | International Business Machines Corporation | Method and system for processing directory events |
US20020091568A1 (en) | 2001-01-10 | 2002-07-11 | International Business Machines Corporation | Personalized profile based advertising system and method with integration of physical location using GPS |
US20020091972A1 (en) | 2001-01-05 | 2002-07-11 | Harris David P. | Method for predicting machine or process faults and automated system for implementing same |
US20020103664A1 (en) | 2000-10-20 | 2002-08-01 | Anders Olsson | Event collection architecture |
US20020116291A1 (en) | 2000-12-22 | 2002-08-22 | Xerox Corporation | Recommender system and method |
US6446076B1 (en) | 1998-11-12 | 2002-09-03 | Accenture Llp. | Voice interactive web-based agent system responsive to a user location for prioritizing and formatting information |
WO2002069118A2 (en) | 2001-02-22 | 2002-09-06 | Giesecke & Devrient Gmbh | Method and system for the distributed creation of a program for a programmable portable data carrier |
US20020156760A1 (en) | 1998-01-05 | 2002-10-24 | Nec Research Institute, Inc. | Autonomous citation indexing and literature browsing using citation context |
US6477585B1 (en) | 1995-08-18 | 2002-11-05 | International Business Machines Corporation | Filter mechanism for an event management service |
US20020165903A1 (en) | 2001-04-19 | 2002-11-07 | Compaq Information Technologies Group, L.P. | Zero latency enterprise enriched publish/subscribe |
US6480837B1 (en) | 1999-12-16 | 2002-11-12 | International Business Machines Corporation | Method, system, and program for ordering search results using a popularity weighting |
US20020174101A1 (en) | 2000-07-12 | 2002-11-21 | Fernley Helen Elaine Penelope | Document retrieval system |
US20020178383A1 (en) | 2001-01-25 | 2002-11-28 | Michael Hrabik | Method and apparatus for verifying the integrity and security of computer networks and implementing counter measures |
US6490577B1 (en) | 1999-04-01 | 2002-12-03 | Polyvista, Inc. | Search engine with user activity memory |
US20020184406A1 (en) | 2001-05-29 | 2002-12-05 | International Business Machines Corporation | Method and system for handling window-based graphical events |
US20030001854A1 (en) | 2001-06-27 | 2003-01-02 | Microsoft Corporation | Capturing graphics primitives associated with any display object rendered to a graphical user interface |
US20030018521A1 (en) | 2001-07-17 | 2003-01-23 | International Business Machines Corporation | Advertising based upon events reported from a GPS enabled event report system |
US6513036B2 (en) | 1999-08-13 | 2003-01-28 | Mindpass A/S | Method and apparatus for searching and presenting search result from one or more information sources based on context representations selected from the group of other users |
US20030023586A1 (en) | 2000-03-03 | 2003-01-30 | Super Internet Site System Pty Ltd. | On-line geographical directory |
US20030028896A1 (en) | 2001-08-03 | 2003-02-06 | Swart William D. | Video and digital multimedia aggregator remote content crawler |
US20030028506A1 (en) | 2001-06-29 | 2003-02-06 | Lin Yu | Deferred index building systems, methods and computer program products for storing temporally spaced apart bursts of data records in a database |
US20030036914A1 (en) | 2001-08-20 | 2003-02-20 | International Business Machines Corporation | Method and system for common contact identification using portable computing devices |
US20030036848A1 (en) * | 2001-08-16 | 2003-02-20 | Sheha Michael A. | Point of interest spatial rating search method and system |
US6526405B1 (en) | 1999-12-17 | 2003-02-25 | Microsoft Corporation | Determining similarity between event types in sequences |
US20030041112A1 (en) | 2001-08-24 | 2003-02-27 | Hitachi, Ltd. | Method and system for storing and managing electronic mail |
US6532023B1 (en) | 1999-08-12 | 2003-03-11 | International Business Machines Corporation | Recording selected applet events of a user interaction sequence |
US20030050909A1 (en) | 2001-08-27 | 2003-03-13 | Mihai Preda | Ranking nodes in a graph |
US20030055816A1 (en) | 1999-05-28 | 2003-03-20 | Mark Paine | Recommending search terms using collaborative filtering and web spidering |
US6560655B1 (en) | 1999-06-22 | 2003-05-06 | Microsoft Corporation | Synchronization manager for standardized synchronization of separate programs |
US20030088433A1 (en) | 2001-07-05 | 2003-05-08 | Computer Associates Think, Inc. | System and method for generating and propagating business events |
US6564213B1 (en) | 2000-04-18 | 2003-05-13 | Amazon.Com, Inc. | Search query autocompletion |
US20030097361A1 (en) | 1998-12-07 | 2003-05-22 | Dinh Truong T | Message center based desktop systems |
US6581056B1 (en) | 1996-06-27 | 2003-06-17 | Xerox Corporation | Information retrieval system providing secondary content analysis on collections of information objects |
US20030126136A1 (en) | 2001-06-22 | 2003-07-03 | Nosa Omoigui | System and method for knowledge retrieval, management, delivery and presentation |
US20030123442A1 (en) | 2001-12-27 | 2003-07-03 | Drucker Benjamin T. | Distributed usage metering of multiple networked devices |
US20030131000A1 (en) | 2002-01-07 | 2003-07-10 | International Business Machines Corporation | Group-based search engine system |
US20030131061A1 (en) | 2001-11-28 | 2003-07-10 | Active Buddy, Inc. | Transparent proxy server for instant messaging system and methods |
US20030130984A1 (en) | 2001-11-15 | 2003-07-10 | Sean Quinlan | System and methods for asynchronous synchronization |
US6592627B1 (en) | 1999-06-10 | 2003-07-15 | International Business Machines Corporation | System and method for organizing repositories of semi-structured documents such as email |
US6604236B1 (en) | 1998-06-30 | 2003-08-05 | Iora, Ltd. | System and method for generating file updates for files stored on read-only media |
US20030149694A1 (en) | 2002-02-05 | 2003-08-07 | Ibm Corporation | Path-based ranking of unvisited web pages |
US20030154071A1 (en) | 2002-02-11 | 2003-08-14 | Shreve Gregory M. | Process for the document management and computer-assisted translation of documents utilizing document corpora constructed by intelligent agents |
US20030167266A1 (en) | 2001-01-08 | 2003-09-04 | Alexander Saldanha | Creation of structured data from plain text |
US6658423B1 (en) | 2001-01-24 | 2003-12-02 | Google, Inc. | Detecting duplicate and near-duplicate files |
US20030233366A1 (en) | 2002-06-17 | 2003-12-18 | Aspetuck Systems Inc. | Database monitoring system with formatted report information delivery |
US20040003038A1 (en) | 2002-06-27 | 2004-01-01 | Microsoft Corporation | Live content processing for online presentation |
US20040002959A1 (en) | 2002-06-26 | 2004-01-01 | International Business Machines Corporation | Method and system for providing context sensitive support for data processing device user search requests |
US6681247B1 (en) | 1999-10-18 | 2004-01-20 | Hrl Laboratories, Llc | Collaborator discovery method and system |
US6684250B2 (en) * | 2000-04-03 | 2004-01-27 | Quova, Inc. | Method and apparatus for estimating a geographic location of a networked entity |
US6687362B1 (en) | 2000-02-11 | 2004-02-03 | Hallmark Cards, Incorporated | Automatic address book update system |
US6691175B1 (en) | 2000-02-25 | 2004-02-10 | Sun Microsystems, Inc. | Method and apparatus for managing data propagation between software modules |
US20040031027A1 (en) | 2002-08-08 | 2004-02-12 | Hiltgen Daniel K. | System for updating diverse file versions |
US6694353B2 (en) | 2001-03-28 | 2004-02-17 | Good Contacts.Com | Method and system for automatically updating electronic mail address information within an electronic mail address database |
US6697838B1 (en) | 2000-05-03 | 2004-02-24 | Software Leader, Llc | Method and system for annotating information resources in connection with browsing, in both connected and disconnected states |
US6707471B2 (en) | 1999-03-12 | 2004-03-16 | Fujitsu Limited | Information managing apparatus and data generation method as well as record medium having information management program stored thereon |
US6708293B2 (en) | 1999-06-03 | 2004-03-16 | Microsoft Corporation | Method and apparatus for analyzing performance of data processing system |
US20040054737A1 (en) | 2002-09-17 | 2004-03-18 | Daniell W. Todd | Tracking email and instant messaging (IM) thread history |
US20040064447A1 (en) | 2002-09-27 | 2004-04-01 | Simske Steven J. | System and method for management of synonymic searching |
US6728763B1 (en) | 2000-03-09 | 2004-04-27 | Ben W. Chen | Adaptive media streaming server for playing live and streaming media content on demand through web client's browser with no additional software or plug-ins |
US20040093317A1 (en) | 2002-11-07 | 2004-05-13 | Swan Joseph G. | Automated contact information sharing |
US20040098609A1 (en) | 2002-11-20 | 2004-05-20 | Bracewell Shawn Derek | Securely processing client credentials used for Web-based access to resources |
US20040095852A1 (en) | 2000-09-26 | 2004-05-20 | Griner David D. | System and method of creating digital recordings of live performances |
US20040128285A1 (en) | 2000-12-15 | 2004-07-01 | Jacob Green | Dynamic-content web crawling through traffic monitoring |
US20040133560A1 (en) | 2003-01-07 | 2004-07-08 | Simske Steven J. | Methods and systems for organizing electronic documents |
US20040133561A1 (en) | 2002-10-02 | 2004-07-08 | Burke Thomas R. | System and method for identifying alternate contact information |
US20040143569A1 (en) | 2002-09-03 | 2004-07-22 | William Gross | Apparatus and methods for locating data |
US6772143B2 (en) | 2001-01-02 | 2004-08-03 | Sprint Spectrum L.P. | Method and system for managing messages |
US20040155910A1 (en) | 2003-02-11 | 2004-08-12 | Academia Sinica | Real-time screen recording system |
US6779030B1 (en) | 1997-10-06 | 2004-08-17 | Worldcom, Inc. | Intelligent network |
US6782381B2 (en) | 2000-04-17 | 2004-08-24 | Apama (Uk) Ltd. | Method and apparatus for evaluating queries against received event information |
US20040187075A1 (en) | 2003-01-08 | 2004-09-23 | Maxham Jason G. | Document management apparatus, system and method |
US20040186896A1 (en) | 2002-09-17 | 2004-09-23 | Daniell W. Todd | Address book for integrating email and instant messaging (IM) |
US20040186848A1 (en) * | 2003-03-21 | 2004-09-23 | Yahoo! Inc. A Delaware Corporation | Apparatus, system and method for use in generating and maintaining an electronic address book |
US20040193596A1 (en) | 2003-02-21 | 2004-09-30 | Rudy Defelice | Multiparameter indexing and searching for documents |
US20040203642A1 (en) | 2002-05-31 | 2004-10-14 | Peter Zatloukal | Population of directory search results into a wireless mobile phone |
US20040215715A1 (en) | 2003-04-28 | 2004-10-28 | International Business Machines Corporation | System and method for non-invasive collection of data |
US6820075B2 (en) | 2001-08-13 | 2004-11-16 | Xerox Corporation | Document-centric system with auto-completion |
US20040235520A1 (en) | 2003-05-20 | 2004-11-25 | Cadiz Jonathan Jay | Enhanced telephony computer user interface allowing user interaction and control of a telephone using a personal computer |
US6826553B1 (en) | 1998-12-18 | 2004-11-30 | Knowmadic, Inc. | System for providing database functions for multiple internet sources |
US20040254928A1 (en) | 2003-06-13 | 2004-12-16 | Vronay David P. | Database query user interface |
US20040255301A1 (en) | 2003-06-13 | 2004-12-16 | Andrzej Turski | Context association schema for computer system architecture |
US20040254938A1 (en) | 2003-03-31 | 2004-12-16 | Cezary Marcjan | Computer searching with associations |
US20040261026A1 (en) | 2003-06-04 | 2004-12-23 | Sony Computer Entertainment Inc. | Methods and systems for recording user actions in computer programs |
US20040267700A1 (en) | 2003-06-26 | 2004-12-30 | Dumais Susan T. | Systems and methods for personal ubiquitous information retrieval and reuse |
US20050021542A1 (en) | 2003-06-05 | 2005-01-27 | Klaus Irle | Converting object structures for search engines |
US6853950B1 (en) | 1999-07-20 | 2005-02-08 | Newsedge Corporation | System for determining changes in the relative interest of subjects |
US20050033803A1 (en) | 2003-07-02 | 2005-02-10 | Vleet Taylor N. Van | Server architecture and methods for persistently storing and serving event data |
US20050050547A1 (en) * | 2003-08-29 | 2005-03-03 | Whittle Derrick W. | Method and apparatus for providing desktop application functionality in a client/server architecture |
US6865715B2 (en) | 1997-09-08 | 2005-03-08 | Fujitsu Limited | Statistical method for extracting, and displaying keywords in forum/message board documents |
US20050060719A1 (en) | 2003-09-12 | 2005-03-17 | Useractive, Inc. | Capturing and processing user events on a computer system for recording and playback |
US20050057584A1 (en) | 2001-11-27 | 2005-03-17 | International Business Machines Corporation | Calendar bar interface for electronic mail interaction |
US20050060310A1 (en) | 2003-09-12 | 2005-03-17 | Simon Tong | Methods and systems for improving a search ranking using population information |
US6873982B1 (en) | 1999-07-16 | 2005-03-29 | International Business Machines Corporation | Ordering of database search results based on user feedback |
US20050076115A1 (en) | 2003-09-24 | 2005-04-07 | Dell Products L.P. | Dynamically varying a raid cache policy in order to optimize throughput |
US6879691B1 (en) | 2000-05-12 | 2005-04-12 | Bluetie, Inc. | Information autocompletion system |
US20050080866A1 (en) | 2003-10-14 | 2005-04-14 | Kent Larry G. | Selectively displaying time indications for instant messaging (IM) messages |
US20050108213A1 (en) | 2003-11-13 | 2005-05-19 | Whereonearth Limited | Geographical location extraction |
US20050108332A1 (en) | 2003-10-23 | 2005-05-19 | Vaschillo Alexander E. | Schema hierarchy for electronic messages |
US20050114021A1 (en) | 2001-12-21 | 2005-05-26 | Garmin Ltd., A Cayman Islands Corporation | PDA with integrated address book and electronic map waypoints |
US20050114487A1 (en) | 2003-11-12 | 2005-05-26 | Jin Peng | Notification framework and method of distributing notification |
US6907577B2 (en) | 2000-09-06 | 2005-06-14 | Trace Tervo | System and method for accessing screen fields, functions and programs using a simple single key stroke |
US6934740B1 (en) | 2000-09-19 | 2005-08-23 | 3Com Corporation | Method and apparatus for sharing common data objects among multiple applications in a client device |
US20050192921A1 (en) | 2004-02-26 | 2005-09-01 | Microsoft Corporation | Database monitoring system |
US6957229B1 (en) | 2000-01-10 | 2005-10-18 | Matthew Graham Dyor | System and method for managing personal information |
US6963830B1 (en) | 1999-07-19 | 2005-11-08 | Fujitsu Limited | Apparatus and method for generating a summary according to hierarchical structure of topic |
US6968509B1 (en) | 2002-06-05 | 2005-11-22 | Microsoft Corporation | Recording of user-driven events within a computer application |
US20050262073A1 (en) | 1989-10-26 | 2005-11-24 | Michael Reed | Multimedia search system |
US6981040B1 (en) | 1999-12-28 | 2005-12-27 | Utopy, Inc. | Automatic, personalized online information and product services |
US6985913B2 (en) | 2000-12-28 | 2006-01-10 | Casio Computer Co. Ltd. | Electronic book data delivery apparatus, electronic book device and recording medium |
US20060031365A1 (en) | 2000-08-22 | 2006-02-09 | Timothy Kay | Method and system for using screen names to customize interactive agents |
US6999957B1 (en) | 2000-01-11 | 2006-02-14 | The Relegence Corporation | System and method for real-time searching |
US7016919B2 (en) | 2002-03-29 | 2006-03-21 | Agilent Technologies, Inc. | Enterprise framework and applications supporting meta-data and data traceability requirements |
US20060085750A1 (en) | 2004-10-19 | 2006-04-20 | International Business Machines Corporation | Intelligent web based help system |
US20060106778A1 (en) | 2004-10-29 | 2006-05-18 | Microsoft Corporation | System and method for providing a geographic search function |
US7080073B1 (en) | 2000-08-18 | 2006-07-18 | Firstrain, Inc. | Method and apparatus for focused crawling |
US20060167704A1 (en) | 2002-12-06 | 2006-07-27 | Nicholls Charles M | Computer system and method for business data processing |
US20060190470A1 (en) | 2005-02-18 | 2006-08-24 | Lemnotis Peter A | Download, storage, and retrieval device |
US7099887B2 (en) | 2002-08-08 | 2006-08-29 | International Business Machines Corporation | Hierarchical environments supporting relational schemas |
US20060224553A1 (en) | 2005-04-01 | 2006-10-05 | Microsoft Corporation | Method and system for generating an auto-completion list for a cascading style sheet selector |
US20060288075A1 (en) | 2005-06-15 | 2006-12-21 | Chao-Hung Wu | Electronic mailbox address book management system and method for the same |
US20070016556A1 (en) | 2005-07-13 | 2007-01-18 | Ann Seong W | Destination searching system and method |
US20070022155A1 (en) | 2002-08-22 | 2007-01-25 | Owens David H | Method and system for integrating enterprise software applications with desktop software applications |
US7188316B2 (en) | 2003-03-24 | 2007-03-06 | Microsoft Corporation | System and method for viewing and editing multi-value properties |
US20070055689A1 (en) | 1998-04-16 | 2007-03-08 | Rhoads Geoffrey B | Content Indexing and Searching using Content Identifiers and associated Metadata |
US7200802B2 (en) | 2002-07-04 | 2007-04-03 | Hewlett-Packard Development Company, L.P. | Evaluating distinctiveness of document |
US20070078860A1 (en) | 2005-07-27 | 2007-04-05 | Achim Enenkiel | Server computer, client device, and web-service-implemented data processing method |
US7233948B1 (en) | 1998-03-16 | 2007-06-19 | Intertrust Technologies Corp. | Methods and apparatus for persistent control and protection of content |
US7240049B2 (en) | 2003-11-12 | 2007-07-03 | Yahoo! Inc. | Systems and methods for search query processing using trend analysis |
US7245910B2 (en) | 2000-05-22 | 2007-07-17 | Nokia Corporation | Method and system for providing location dependent information |
US7249158B2 (en) | 2002-01-28 | 2007-07-24 | Canon Kabushiki Kaisha | Address information editing apparatus and method, program, and storage medium |
US7257822B1 (en) | 2004-04-13 | 2007-08-14 | Sun Microsystems Inc | Method and system for address book application programming interface |
US7265858B2 (en) | 2001-10-03 | 2007-09-04 | Kabushiki Kaisha Toshiba | Method and system to access address books |
US20070208697A1 (en) | 2001-06-18 | 2007-09-06 | Pavitra Subramaniam | System and method to enable searching across multiple databases and files using a single search |
US7328242B1 (en) | 2001-11-09 | 2008-02-05 | Mccarthy Software, Inc. | Using multiple simultaneous threads of communication |
US7330536B2 (en) | 2003-09-05 | 2008-02-12 | Emc Corporation | Message indexing and archiving |
US7337448B1 (en) | 2003-06-25 | 2008-02-26 | Microsoft Corporation | Address book clearinghouse interface system and method |
US7343365B2 (en) | 2002-02-20 | 2008-03-11 | Microsoft Corporation | Computer system architecture for automatic context associations |
US7376640B1 (en) | 2000-11-14 | 2008-05-20 | At&T Delaware Intellectual Property, Inc. | Method and system for searching an information retrieval system according to user-specified location information |
US7383307B2 (en) | 2004-01-07 | 2008-06-03 | International Business Machines Corporation | Instant messaging windowing for topic threads |
US7412491B2 (en) | 2003-04-30 | 2008-08-12 | International Business Machines Corporation | Method and apparatus for enhancing instant messaging systems |
US7437444B2 (en) | 2000-04-03 | 2008-10-14 | Quova, Inc. | Method and system for locating geographical locations of online users |
US7516118B1 (en) | 2003-12-31 | 2009-04-07 | Google Inc. | Methods and systems for assisted network browsing |
-
2005
- 2005-12-29 US US11/323,364 patent/US9262446B1/en active Active
Patent Citations (209)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4410957A (en) | 1980-11-20 | 1983-10-18 | International Business Machines Corporation | Keystroke queueing system |
US20050262073A1 (en) | 1989-10-26 | 2005-11-24 | Michael Reed | Multimedia search system |
US5321838A (en) | 1991-02-28 | 1994-06-14 | Hensley Billy W | Event capturing for computer software evaluation |
US5555346A (en) | 1991-10-04 | 1996-09-10 | Beyond Corporated | Event-driven rule-based messaging system |
US5280612A (en) | 1991-11-26 | 1994-01-18 | International Business Machines Corporation | Multiple version database concurrency control system |
US5539809A (en) | 1992-12-23 | 1996-07-23 | At&T Corp. | Location specific messaging in a telecommunications network |
US5566336A (en) | 1993-03-22 | 1996-10-15 | Hitachi, Ltd. | Operation macro generated method that changes execution control according to system situation |
US5819273A (en) | 1994-07-25 | 1998-10-06 | Apple Computer, Inc. | Method and apparatus for searching for information in a network and for controlling the display of searchable information on display devices in the network |
US5623652A (en) | 1994-07-25 | 1997-04-22 | Apple Computer, Inc. | Method and apparatus for searching for information in a network and for controlling the display of searchable information on display devices in the network |
US5592378A (en) | 1994-08-19 | 1997-01-07 | Andersen Consulting Llp | Computerized order entry system and method |
US5793948A (en) | 1994-11-25 | 1998-08-11 | Nec Corporation | Method and apparatus for recording and analyzing an interaction log |
US6029195A (en) | 1994-11-29 | 2000-02-22 | Herz; Frederick S. M. | System for customized electronic identification of desirable objects |
US5748954A (en) | 1995-06-05 | 1998-05-05 | Carnegie Mellon University | Method for searching a queued and ranked constructed catalog of files stored on a network |
US5701469A (en) | 1995-06-07 | 1997-12-23 | Microsoft Corporation | Method and system for generating accurate search results using a content-index |
US5907836A (en) | 1995-07-31 | 1999-05-25 | Kabushiki Kaisha Toshiba | Information filtering apparatus for selecting predetermined article from plural articles to present selected article to user, and method therefore |
US6477585B1 (en) | 1995-08-18 | 2002-11-05 | International Business Machines Corporation | Filter mechanism for an event management service |
US5881315A (en) | 1995-08-18 | 1999-03-09 | International Business Machines Corporation | Queue management for distributed computing environment to deliver events to interested consumers even when events are generated faster than consumers can receive |
US5742816A (en) | 1995-09-15 | 1998-04-21 | Infonautics Corporation | Method and apparatus for identifying textual documents and multi-mediafiles corresponding to a search topic |
US5964839A (en) | 1996-03-29 | 1999-10-12 | At&T Corp | System and method for monitoring information flow and performing data collection |
USRE39326E1 (en) | 1996-06-05 | 2006-10-03 | Microsoft Corporation | Method and apparatus for suggesting completions for a partially entered data item based on previously-entered, associated data items |
US5845300A (en) | 1996-06-05 | 1998-12-01 | Microsoft Corporation | Method and apparatus for suggesting completions for a partially entered data item based on previously-entered, associated data items |
US6581056B1 (en) | 1996-06-27 | 2003-06-17 | Xerox Corporation | Information retrieval system providing secondary content analysis on collections of information objects |
US5913208A (en) | 1996-07-09 | 1999-06-15 | International Business Machines Corporation | Identifying duplicate documents from search results without comparing document content |
US5961610A (en) | 1996-08-13 | 1999-10-05 | General Electric Company | Systems, methods and apparatus for generating and controlling display of medical images |
US6370563B2 (en) | 1996-09-30 | 2002-04-09 | Fujitsu Limited | Chat system terminal device therefor display method of chat system and recording medium |
US6182065B1 (en) | 1996-11-06 | 2001-01-30 | International Business Machines Corp. | Method and system for weighting the search results of a database search engine |
US20010016852A1 (en) | 1996-11-21 | 2001-08-23 | Mark Peairs | Automatic document archiving for a computer system |
US6184880B1 (en) | 1997-01-08 | 2001-02-06 | Nec Corporation | Automatic GUI system operation device and operation macro execution device |
US6006222A (en) | 1997-04-25 | 1999-12-21 | Culliss; Gary | Method for organizing information |
US6282548B1 (en) | 1997-06-21 | 2001-08-28 | Alexa Internet | Automatically generate and displaying metadata as supplemental information concurrently with the web page, there being no link between web page and metadata |
US6202065B1 (en) | 1997-07-02 | 2001-03-13 | Travelocity.Com Lp | Information search and retrieval with geographical coordinates |
US6078916A (en) | 1997-08-01 | 2000-06-20 | Culliss; Gary | Method for organizing information |
US6182068B1 (en) | 1997-08-01 | 2001-01-30 | Ask Jeeves, Inc. | Personalized search methods |
US20030187837A1 (en) | 1997-08-01 | 2003-10-02 | Ask Jeeves, Inc. | Personalized search method |
US6014665A (en) | 1997-08-01 | 2000-01-11 | Culliss; Gary | Method for organizing information |
US6865715B2 (en) | 1997-09-08 | 2005-03-08 | Fujitsu Limited | Statistical method for extracting, and displaying keywords in forum/message board documents |
US20020138467A1 (en) | 1997-09-23 | 2002-09-26 | Guy Jacobson | Method for effective indexing of partially dynamic documents |
US6073130A (en) | 1997-09-23 | 2000-06-06 | At&T Corp. | Method for improving the results of a search in a structured database |
US5956722A (en) | 1997-09-23 | 1999-09-21 | At&T Corp. | Method for effective indexing of partially dynamic documents |
US6779030B1 (en) | 1997-10-06 | 2004-08-17 | Worldcom, Inc. | Intelligent network |
US6240548B1 (en) | 1997-10-06 | 2001-05-29 | Sun Microsystems, Inc. | Method and apparatus for performing byte-code optimization during pauses |
US6236768B1 (en) | 1997-10-14 | 2001-05-22 | Massachusetts Institute Of Technology | Method and apparatus for automated, context-dependent retrieval of information |
US6209000B1 (en) | 1997-10-31 | 2001-03-27 | Oracle Corporation | Tracking storage for data items |
US6269369B1 (en) | 1997-11-02 | 2001-07-31 | Amazon.Com Holdings, Inc. | Networked personal contact manager |
US6236978B1 (en) * | 1997-11-14 | 2001-05-22 | New York University | System and method for dynamic profiling of users in one-to-one applications |
US6055579A (en) | 1997-11-17 | 2000-04-25 | Silicon Graphics, Inc. | Distributed control and synchronization of multiple data processors using flexible command queues |
US20020156760A1 (en) | 1998-01-05 | 2002-10-24 | Nec Research Institute, Inc. | Autonomous citation indexing and literature browsing using citation context |
US7233948B1 (en) | 1998-03-16 | 2007-06-19 | Intertrust Technologies Corp. | Methods and apparatus for persistent control and protection of content |
US20070055689A1 (en) | 1998-04-16 | 2007-03-08 | Rhoads Geoffrey B | Content Indexing and Searching using Content Identifiers and associated Metadata |
US20010002469A1 (en) | 1998-06-11 | 2001-05-31 | Bates Cary Lee | Apparatus, program products and methods utilizing intelligent contact management |
US6393438B1 (en) | 1998-06-19 | 2002-05-21 | Serena Software International, Inc. | Method and apparatus for identifying the existence of differences between two files |
US6604236B1 (en) | 1998-06-30 | 2003-08-05 | Iora, Ltd. | System and method for generating file updates for files stored on read-only media |
US6275820B1 (en) | 1998-07-16 | 2001-08-14 | Perot Systems Corporation | System and method for integrating search results from heterogeneous information resources |
US6226630B1 (en) | 1998-07-22 | 2001-05-01 | Compaq Computer Corporation | Method and apparatus for filtering incoming information using a search engine and stored queries defining user folders |
US6119147A (en) | 1998-07-28 | 2000-09-12 | Fuji Xerox Co., Ltd. | Method and system for computer-mediated, multi-modal, asynchronous meetings in a virtual space |
RU2138076C1 (en) | 1998-09-14 | 1999-09-20 | Закрытое акционерное общество "МедиаЛингва" | Data retrieval system in computer network |
US6393421B1 (en) | 1998-09-18 | 2002-05-21 | Neriel Paglin | Communication method and system utilizing a specific communication code uniquely assigned to the data record |
US6275957B1 (en) | 1998-09-21 | 2001-08-14 | Microsoft Corporation | Using query language for provider and subscriber registrations |
US6363373B1 (en) | 1998-10-01 | 2002-03-26 | Microsoft Corporation | Method and apparatus for concept searching using a Boolean or keyword search engine |
US6380924B1 (en) | 1998-10-22 | 2002-04-30 | Young Yee | Mouse/keyboard capture recorder (MCR) apparatus and methodology |
US6446076B1 (en) | 1998-11-12 | 2002-09-03 | Accenture Llp. | Voice interactive web-based agent system responsive to a user location for prioritizing and formatting information |
US20030097361A1 (en) | 1998-12-07 | 2003-05-22 | Dinh Truong T | Message center based desktop systems |
US6826553B1 (en) | 1998-12-18 | 2004-11-30 | Knowmadic, Inc. | System for providing database functions for multiple internet sources |
US6349299B1 (en) | 1998-12-24 | 2002-02-19 | International Business Machines Corporation | System and method for storing electronic contact information into an electronic address book |
US6199067B1 (en) | 1999-01-20 | 2001-03-06 | Mightiest Logicon Unisearch, Inc. | System and method for generating personalized user profiles and for utilizing the generated user profiles to perform adaptive internet searches |
US6341371B1 (en) | 1999-02-23 | 2002-01-22 | International Business Machines Corporation | System and method for optimizing program execution in a computer system |
US6707471B2 (en) | 1999-03-12 | 2004-03-16 | Fujitsu Limited | Information managing apparatus and data generation method as well as record medium having information management program stored thereon |
US6401239B1 (en) | 1999-03-22 | 2002-06-04 | B.I.S. Advanced Software Systems Ltd. | System and method for quick downloading of electronic files |
US20030123443A1 (en) | 1999-04-01 | 2003-07-03 | Anwar Mohammed S. | Search engine with user activity memory |
US6490577B1 (en) | 1999-04-01 | 2002-12-03 | Polyvista, Inc. | Search engine with user activity memory |
US6175830B1 (en) | 1999-05-20 | 2001-01-16 | Evresearch, Ltd. | Information management, retrieval and display system and associated method |
US20030055816A1 (en) | 1999-05-28 | 2003-03-20 | Mark Paine | Recommending search terms using collaborative filtering and web spidering |
US6708293B2 (en) | 1999-06-03 | 2004-03-16 | Microsoft Corporation | Method and apparatus for analyzing performance of data processing system |
US6592627B1 (en) | 1999-06-10 | 2003-07-15 | International Business Machines Corporation | System and method for organizing repositories of semi-structured documents such as email |
JP2001005705A (en) | 1999-06-22 | 2001-01-12 | Hitachi Ltd | Document information management system |
US6560655B1 (en) | 1999-06-22 | 2003-05-06 | Microsoft Corporation | Synchronization manager for standardized synchronization of separate programs |
US6873982B1 (en) | 1999-07-16 | 2005-03-29 | International Business Machines Corporation | Ordering of database search results based on user feedback |
US6963830B1 (en) | 1999-07-19 | 2005-11-08 | Fujitsu Limited | Apparatus and method for generating a summary according to hierarchical structure of topic |
US6853950B1 (en) | 1999-07-20 | 2005-02-08 | Newsedge Corporation | System for determining changes in the relative interest of subjects |
US6532023B1 (en) | 1999-08-12 | 2003-03-11 | International Business Machines Corporation | Recording selected applet events of a user interaction sequence |
US6513036B2 (en) | 1999-08-13 | 2003-01-28 | Mindpass A/S | Method and apparatus for searching and presenting search result from one or more information sources based on context representations selected from the group of other users |
US6321228B1 (en) | 1999-08-31 | 2001-11-20 | Powercast Media, Inc. | Internet search system for retrieving selected results from a previous search |
US6681247B1 (en) | 1999-10-18 | 2004-01-20 | Hrl Laboratories, Llc | Collaborator discovery method and system |
US6346952B1 (en) | 1999-12-01 | 2002-02-12 | Genesys Telecommunications Laboratories, Inc. | Method and apparatus for summarizing previous threads in a communication-center chat session |
US6480837B1 (en) | 1999-12-16 | 2002-11-12 | International Business Machines Corporation | Method, system, and program for ordering search results using a popularity weighting |
US6526405B1 (en) | 1999-12-17 | 2003-02-25 | Microsoft Corporation | Determining similarity between event types in sequences |
US6981040B1 (en) | 1999-12-28 | 2005-12-27 | Utopy, Inc. | Automatic, personalized online information and product services |
US6957229B1 (en) | 2000-01-10 | 2005-10-18 | Matthew Graham Dyor | System and method for managing personal information |
US6999957B1 (en) | 2000-01-11 | 2006-02-14 | The Relegence Corporation | System and method for real-time searching |
US6687362B1 (en) | 2000-02-11 | 2004-02-03 | Hallmark Cards, Incorporated | Automatic address book update system |
US6691175B1 (en) | 2000-02-25 | 2004-02-10 | Sun Microsystems, Inc. | Method and apparatus for managing data propagation between software modules |
US20030023586A1 (en) | 2000-03-03 | 2003-01-30 | Super Internet Site System Pty Ltd. | On-line geographical directory |
US20020049608A1 (en) | 2000-03-03 | 2002-04-25 | Hartsell Neal D. | Systems and methods for providing differentiated business services in information management environments |
US6728763B1 (en) | 2000-03-09 | 2004-04-27 | Ben W. Chen | Adaptive media streaming server for playing live and streaming media content on demand through web client's browser with no additional software or plug-ins |
US6684250B2 (en) * | 2000-04-03 | 2004-01-27 | Quova, Inc. | Method and apparatus for estimating a geographic location of a networked entity |
US7437444B2 (en) | 2000-04-03 | 2008-10-14 | Quova, Inc. | Method and system for locating geographical locations of online users |
US6782381B2 (en) | 2000-04-17 | 2004-08-24 | Apama (Uk) Ltd. | Method and apparatus for evaluating queries against received event information |
US6564213B1 (en) | 2000-04-18 | 2003-05-13 | Amazon.Com, Inc. | Search query autocompletion |
US6697838B1 (en) | 2000-05-03 | 2004-02-24 | Software Leader, Llc | Method and system for annotating information resources in connection with browsing, in both connected and disconnected states |
US6879691B1 (en) | 2000-05-12 | 2005-04-12 | Bluetie, Inc. | Information autocompletion system |
US7245910B2 (en) | 2000-05-22 | 2007-07-17 | Nokia Corporation | Method and system for providing location dependent information |
US20020065802A1 (en) | 2000-05-30 | 2002-05-30 | Koki Uchiyama | Distributed monitoring system providing knowledge services |
US20020059425A1 (en) | 2000-06-22 | 2002-05-16 | Microsoft Corporation | Distributed computing services platform |
US20020174101A1 (en) | 2000-07-12 | 2002-11-21 | Fernley Helen Elaine Penelope | Document retrieval system |
US7080073B1 (en) | 2000-08-18 | 2006-07-18 | Firstrain, Inc. | Method and apparatus for focused crawling |
US20060031365A1 (en) | 2000-08-22 | 2006-02-09 | Timothy Kay | Method and system for using screen names to customize interactive agents |
US6907577B2 (en) | 2000-09-06 | 2005-06-14 | Trace Tervo | System and method for accessing screen fields, functions and programs using a simple single key stroke |
US6934740B1 (en) | 2000-09-19 | 2005-08-23 | 3Com Corporation | Method and apparatus for sharing common data objects among multiple applications in a client device |
US20040095852A1 (en) | 2000-09-26 | 2004-05-20 | Griner David D. | System and method of creating digital recordings of live performances |
US20020042789A1 (en) | 2000-10-04 | 2002-04-11 | Zbigniew Michalewicz | Internet search engine with interactive search criteria construction |
US20020103664A1 (en) | 2000-10-20 | 2002-08-01 | Anders Olsson | Event collection architecture |
US7376640B1 (en) | 2000-11-14 | 2008-05-20 | At&T Delaware Intellectual Property, Inc. | Method and system for searching an information retrieval system according to user-specified location information |
US20020073076A1 (en) | 2000-12-11 | 2002-06-13 | Yongjie Xu | System and method for enabling off-line database functionality |
US20040128285A1 (en) | 2000-12-15 | 2004-07-01 | Jacob Green | Dynamic-content web crawling through traffic monitoring |
US20020078256A1 (en) | 2000-12-15 | 2002-06-20 | International Business Machines Corporation | Method and system for processing directory events |
US20020116291A1 (en) | 2000-12-22 | 2002-08-22 | Xerox Corporation | Recommender system and method |
US6985913B2 (en) | 2000-12-28 | 2006-01-10 | Casio Computer Co. Ltd. | Electronic book data delivery apparatus, electronic book device and recording medium |
US6772143B2 (en) | 2001-01-02 | 2004-08-03 | Sprint Spectrum L.P. | Method and system for managing messages |
US20020091972A1 (en) | 2001-01-05 | 2002-07-11 | Harris David P. | Method for predicting machine or process faults and automated system for implementing same |
US20030167266A1 (en) | 2001-01-08 | 2003-09-04 | Alexander Saldanha | Creation of structured data from plain text |
US20020091568A1 (en) | 2001-01-10 | 2002-07-11 | International Business Machines Corporation | Personalized profile based advertising system and method with integration of physical location using GPS |
US6658423B1 (en) | 2001-01-24 | 2003-12-02 | Google, Inc. | Detecting duplicate and near-duplicate files |
US20020178383A1 (en) | 2001-01-25 | 2002-11-28 | Michael Hrabik | Method and apparatus for verifying the integrity and security of computer networks and implementing counter measures |
WO2002069118A2 (en) | 2001-02-22 | 2002-09-06 | Giesecke & Devrient Gmbh | Method and system for the distributed creation of a program for a programmable portable data carrier |
US6694353B2 (en) | 2001-03-28 | 2004-02-17 | Good Contacts.Com | Method and system for automatically updating electronic mail address information within an electronic mail address database |
US20020165903A1 (en) | 2001-04-19 | 2002-11-07 | Compaq Information Technologies Group, L.P. | Zero latency enterprise enriched publish/subscribe |
US20020184406A1 (en) | 2001-05-29 | 2002-12-05 | International Business Machines Corporation | Method and system for handling window-based graphical events |
US20070208697A1 (en) | 2001-06-18 | 2007-09-06 | Pavitra Subramaniam | System and method to enable searching across multiple databases and files using a single search |
US20030126136A1 (en) | 2001-06-22 | 2003-07-03 | Nosa Omoigui | System and method for knowledge retrieval, management, delivery and presentation |
US20030001854A1 (en) | 2001-06-27 | 2003-01-02 | Microsoft Corporation | Capturing graphics primitives associated with any display object rendered to a graphical user interface |
US20030028506A1 (en) | 2001-06-29 | 2003-02-06 | Lin Yu | Deferred index building systems, methods and computer program products for storing temporally spaced apart bursts of data records in a database |
US20030088433A1 (en) | 2001-07-05 | 2003-05-08 | Computer Associates Think, Inc. | System and method for generating and propagating business events |
US20030018521A1 (en) | 2001-07-17 | 2003-01-23 | International Business Machines Corporation | Advertising based upon events reported from a GPS enabled event report system |
US20030028896A1 (en) | 2001-08-03 | 2003-02-06 | Swart William D. | Video and digital multimedia aggregator remote content crawler |
US6820075B2 (en) | 2001-08-13 | 2004-11-16 | Xerox Corporation | Document-centric system with auto-completion |
US20030036848A1 (en) * | 2001-08-16 | 2003-02-20 | Sheha Michael A. | Point of interest spatial rating search method and system |
US20030036914A1 (en) | 2001-08-20 | 2003-02-20 | International Business Machines Corporation | Method and system for common contact identification using portable computing devices |
US20030041112A1 (en) | 2001-08-24 | 2003-02-27 | Hitachi, Ltd. | Method and system for storing and managing electronic mail |
US20030050909A1 (en) | 2001-08-27 | 2003-03-13 | Mihai Preda | Ranking nodes in a graph |
US7265858B2 (en) | 2001-10-03 | 2007-09-04 | Kabushiki Kaisha Toshiba | Method and system to access address books |
US7328242B1 (en) | 2001-11-09 | 2008-02-05 | Mccarthy Software, Inc. | Using multiple simultaneous threads of communication |
US20030130984A1 (en) | 2001-11-15 | 2003-07-10 | Sean Quinlan | System and methods for asynchronous synchronization |
US20050057584A1 (en) | 2001-11-27 | 2005-03-17 | International Business Machines Corporation | Calendar bar interface for electronic mail interaction |
US20030131061A1 (en) | 2001-11-28 | 2003-07-10 | Active Buddy, Inc. | Transparent proxy server for instant messaging system and methods |
US20050114021A1 (en) | 2001-12-21 | 2005-05-26 | Garmin Ltd., A Cayman Islands Corporation | PDA with integrated address book and electronic map waypoints |
US20030123442A1 (en) | 2001-12-27 | 2003-07-03 | Drucker Benjamin T. | Distributed usage metering of multiple networked devices |
US20030131000A1 (en) | 2002-01-07 | 2003-07-10 | International Business Machines Corporation | Group-based search engine system |
US7249158B2 (en) | 2002-01-28 | 2007-07-24 | Canon Kabushiki Kaisha | Address information editing apparatus and method, program, and storage medium |
US20030149694A1 (en) | 2002-02-05 | 2003-08-07 | Ibm Corporation | Path-based ranking of unvisited web pages |
US20030154071A1 (en) | 2002-02-11 | 2003-08-14 | Shreve Gregory M. | Process for the document management and computer-assisted translation of documents utilizing document corpora constructed by intelligent agents |
US7343365B2 (en) | 2002-02-20 | 2008-03-11 | Microsoft Corporation | Computer system architecture for automatic context associations |
US7016919B2 (en) | 2002-03-29 | 2006-03-21 | Agilent Technologies, Inc. | Enterprise framework and applications supporting meta-data and data traceability requirements |
US20040203642A1 (en) | 2002-05-31 | 2004-10-14 | Peter Zatloukal | Population of directory search results into a wireless mobile phone |
US6968509B1 (en) | 2002-06-05 | 2005-11-22 | Microsoft Corporation | Recording of user-driven events within a computer application |
US20030233366A1 (en) | 2002-06-17 | 2003-12-18 | Aspetuck Systems Inc. | Database monitoring system with formatted report information delivery |
US20040002959A1 (en) | 2002-06-26 | 2004-01-01 | International Business Machines Corporation | Method and system for providing context sensitive support for data processing device user search requests |
US20040003038A1 (en) | 2002-06-27 | 2004-01-01 | Microsoft Corporation | Live content processing for online presentation |
US7200802B2 (en) | 2002-07-04 | 2007-04-03 | Hewlett-Packard Development Company, L.P. | Evaluating distinctiveness of document |
US7099887B2 (en) | 2002-08-08 | 2006-08-29 | International Business Machines Corporation | Hierarchical environments supporting relational schemas |
US20040031027A1 (en) | 2002-08-08 | 2004-02-12 | Hiltgen Daniel K. | System for updating diverse file versions |
US20070022155A1 (en) | 2002-08-22 | 2007-01-25 | Owens David H | Method and system for integrating enterprise software applications with desktop software applications |
US20040143569A1 (en) | 2002-09-03 | 2004-07-22 | William Gross | Apparatus and methods for locating data |
US20040054737A1 (en) | 2002-09-17 | 2004-03-18 | Daniell W. Todd | Tracking email and instant messaging (IM) thread history |
US20040186896A1 (en) | 2002-09-17 | 2004-09-23 | Daniell W. Todd | Address book for integrating email and instant messaging (IM) |
US20040064447A1 (en) | 2002-09-27 | 2004-04-01 | Simske Steven J. | System and method for management of synonymic searching |
US20040133561A1 (en) | 2002-10-02 | 2004-07-08 | Burke Thomas R. | System and method for identifying alternate contact information |
US20040093317A1 (en) | 2002-11-07 | 2004-05-13 | Swan Joseph G. | Automated contact information sharing |
US20040098609A1 (en) | 2002-11-20 | 2004-05-20 | Bracewell Shawn Derek | Securely processing client credentials used for Web-based access to resources |
US20060167704A1 (en) | 2002-12-06 | 2006-07-27 | Nicholls Charles M | Computer system and method for business data processing |
US20040133560A1 (en) | 2003-01-07 | 2004-07-08 | Simske Steven J. | Methods and systems for organizing electronic documents |
US20040187075A1 (en) | 2003-01-08 | 2004-09-23 | Maxham Jason G. | Document management apparatus, system and method |
US20040155910A1 (en) | 2003-02-11 | 2004-08-12 | Academia Sinica | Real-time screen recording system |
US6864901B2 (en) | 2003-02-11 | 2005-03-08 | Academia Sinica | Real-time screen recording system |
US20040193596A1 (en) | 2003-02-21 | 2004-09-30 | Rudy Defelice | Multiparameter indexing and searching for documents |
US20040186848A1 (en) * | 2003-03-21 | 2004-09-23 | Yahoo! Inc. A Delaware Corporation | Apparatus, system and method for use in generating and maintaining an electronic address book |
US7188316B2 (en) | 2003-03-24 | 2007-03-06 | Microsoft Corporation | System and method for viewing and editing multi-value properties |
US20040254938A1 (en) | 2003-03-31 | 2004-12-16 | Cezary Marcjan | Computer searching with associations |
US20040215715A1 (en) | 2003-04-28 | 2004-10-28 | International Business Machines Corporation | System and method for non-invasive collection of data |
US7412491B2 (en) | 2003-04-30 | 2008-08-12 | International Business Machines Corporation | Method and apparatus for enhancing instant messaging systems |
US20040235520A1 (en) | 2003-05-20 | 2004-11-25 | Cadiz Jonathan Jay | Enhanced telephony computer user interface allowing user interaction and control of a telephone using a personal computer |
US20040261026A1 (en) | 2003-06-04 | 2004-12-23 | Sony Computer Entertainment Inc. | Methods and systems for recording user actions in computer programs |
US20050021542A1 (en) | 2003-06-05 | 2005-01-27 | Klaus Irle | Converting object structures for search engines |
US20040255301A1 (en) | 2003-06-13 | 2004-12-16 | Andrzej Turski | Context association schema for computer system architecture |
US20040254928A1 (en) | 2003-06-13 | 2004-12-16 | Vronay David P. | Database query user interface |
US7337448B1 (en) | 2003-06-25 | 2008-02-26 | Microsoft Corporation | Address book clearinghouse interface system and method |
US20040267700A1 (en) | 2003-06-26 | 2004-12-30 | Dumais Susan T. | Systems and methods for personal ubiquitous information retrieval and reuse |
US7162473B2 (en) | 2003-06-26 | 2007-01-09 | Microsoft Corporation | Method and system for usage analyzer that determines user accessed sources, indexes data subsets, and associated metadata, processing implicit queries based on potential interest to users |
US20050033803A1 (en) | 2003-07-02 | 2005-02-10 | Vleet Taylor N. Van | Server architecture and methods for persistently storing and serving event data |
US20050050547A1 (en) * | 2003-08-29 | 2005-03-03 | Whittle Derrick W. | Method and apparatus for providing desktop application functionality in a client/server architecture |
US7330536B2 (en) | 2003-09-05 | 2008-02-12 | Emc Corporation | Message indexing and archiving |
US20050060310A1 (en) | 2003-09-12 | 2005-03-17 | Simon Tong | Methods and systems for improving a search ranking using population information |
US20050060719A1 (en) | 2003-09-12 | 2005-03-17 | Useractive, Inc. | Capturing and processing user events on a computer system for recording and playback |
US20050076115A1 (en) | 2003-09-24 | 2005-04-07 | Dell Products L.P. | Dynamically varying a raid cache policy in order to optimize throughput |
US20050080866A1 (en) | 2003-10-14 | 2005-04-14 | Kent Larry G. | Selectively displaying time indications for instant messaging (IM) messages |
US20050108332A1 (en) | 2003-10-23 | 2005-05-19 | Vaschillo Alexander E. | Schema hierarchy for electronic messages |
US20050114487A1 (en) | 2003-11-12 | 2005-05-26 | Jin Peng | Notification framework and method of distributing notification |
US7240049B2 (en) | 2003-11-12 | 2007-07-03 | Yahoo! Inc. | Systems and methods for search query processing using trend analysis |
US20050108213A1 (en) | 2003-11-13 | 2005-05-19 | Whereonearth Limited | Geographical location extraction |
US7516118B1 (en) | 2003-12-31 | 2009-04-07 | Google Inc. | Methods and systems for assisted network browsing |
US7383307B2 (en) | 2004-01-07 | 2008-06-03 | International Business Machines Corporation | Instant messaging windowing for topic threads |
US20050192921A1 (en) | 2004-02-26 | 2005-09-01 | Microsoft Corporation | Database monitoring system |
US7257822B1 (en) | 2004-04-13 | 2007-08-14 | Sun Microsystems Inc | Method and system for address book application programming interface |
US20060085750A1 (en) | 2004-10-19 | 2006-04-20 | International Business Machines Corporation | Intelligent web based help system |
US20060106778A1 (en) | 2004-10-29 | 2006-05-18 | Microsoft Corporation | System and method for providing a geographic search function |
US20060190470A1 (en) | 2005-02-18 | 2006-08-24 | Lemnotis Peter A | Download, storage, and retrieval device |
US20060224553A1 (en) | 2005-04-01 | 2006-10-05 | Microsoft Corporation | Method and system for generating an auto-completion list for a cascading style sheet selector |
US20060288075A1 (en) | 2005-06-15 | 2006-12-21 | Chao-Hung Wu | Electronic mailbox address book management system and method for the same |
US20070016556A1 (en) | 2005-07-13 | 2007-01-18 | Ann Seong W | Destination searching system and method |
US20070078860A1 (en) | 2005-07-27 | 2007-04-05 | Achim Enenkiel | Server computer, client device, and web-service-implemented data processing method |
Non-Patent Citations (81)
Title |
---|
"About Spector CNE," Spectorsoft, 1 page, [online] [Retrieved on May 23, 2007] Retrieved from the Internet: URL: http://www.spectorsoft.com/products.spectorcne-windows/help/v40/webhelp/About-Spector-CNE>. |
"askSam' Making Information Useful," askSam,-Organize your information with askSam, 5 pages, [online] [retrieved on Mar. 15, 2004] Retrieved from the internet . |
"askSam' Making Information Useful," askSam,-Organize your information with askSam, 5 pages, [online] [retrieved on Mar. 15, 2004] Retrieved from the internet <URL:http://www.asksam.comlbrochure.asp>. |
"Overview," Stuff I've Seen-Home Page, [online] [retrieved on May 26, 2004] Retrieved from the internet , pp. 1-2. |
"Overview," Stuff I've Seen-Home Page, [online] [retrieved on May 26, 2004] Retrieved from the internet <URL:http://research.Microsoft.com/adaptlsis/index.htm>, pp. 1-2. |
"Searching for the next Google-New trends are helping nimble startups elbow in to the plundered market," RED HERRING-The Business of Technology, Mar. 9, 2004, [online] [retrieved on Mar. 30, 2004] Retrieved from the internet , pp. 1-5. |
"Searching for the next Google-New trends are helping nimble startups elbow in to the plundered market," RED HERRING-The Business of Technology, Mar. 9, 2004, [online] [retrieved on Mar. 30, 2004] Retrieved from the internet <URL:http://redherrina.com/PrintArticle.asox?a=4782§or=Capital>, pp. 1-5. |
"Selecting Task-Relevant Sources for Just-In-Time Retrieval," pp. 1-3, no date. |
"Spector Corporate Network Edition 4.0 (Spector CNE) Online User Manual," SpectorSoft Corporation, 2003, [online] [Retrieved on May 12, 2005] Retrieved from the Internet: . |
"Spector Corporate Network Edition 4.0 (Spector CNE) Online User Manual," SpectorSoft Corporation, 2003, [online] [Retrieved on May 12, 2005] Retrieved from the Internet: <URL: http://www.spectorsoft.com/products/spectorcne-windows/help/v40/webhelp/>. |
"Standardization Priorities for the Directory-Directory Interoperability Forum White Paper," The Open Group, Dec. 2001, pp. 1-21. |
"WhenU Just-in-Time Marketing," 13 pages, [online] [retrieved on Mar. 19, 2004] Retrieved from the internet . |
"WhenU Just-in-Time Marketing," 13 pages, [online] [retrieved on Mar. 19, 2004] Retrieved from the internet <URL:http://www.whenu.com>. |
80-20 Software-Products-80-20 One Search, 8 pages, [online] [retrieved on Mar. 16, 2004] Retrieved from the internet . |
80-20 Software-Products-80-20 One Search, 8 pages, [online] [retrieved on Mar. 16, 2004] Retrieved from the internet <URL:http://www.80-20.com/products/one-searchiretriever.asp>. |
Alexa® Web Search-Toolbar Quick Tour, [online] [retrieved on Mar. 16, 2004] Retrieved from the internet <URL:http://pages.alexa.com/prod serv/guicktour.html> pp. 1-5. |
Alexa® Web Search-Toolbar Quick Tour, [online] [retrieved on Mar. 16, 2004] Retrieved from the internet pp. 1-5. |
Bacon, J. et al., "Event Storage and Federation Using ODMG," 2000, pp. 265-281, vol. 2135, [online] Retrieved from the Internet. |
Bacon, J. et al., "Event Storage and Federation Using ODMG," 2000, pp. 265-281, vol. 2135, [online] Retrieved from the Internet<URL: http://citeseer.ist.psu.edu/bacon00event.html>. |
Barrett, R. et al., "How to Personalize the Web," IBM Research, [online] [retrieved on Mar. 16, 2004] Retrieved from the internet <URL:http://www.almaden.ibm.com/cs/wbilpapers/chi97/wbipaper.html> pp. 1-13. |
Barrett, R. et al., "How to Personalize the Web," IBM Research, [online] [retrieved on Mar. 16, 2004] Retrieved from the internet pp. 1-13. |
Battelle, J., CNN.com "When geeks go camping, ideas hatch," [online] [retrieved on Jan. 13, 2004] Retrieved from the internet <URL:http://www.cnn.com/2004/TECH/ptech/OI/09/bus2.feat.geek.camp/index.html> pp. 1-3. |
Battelle, J., CNN.com "When geeks go camping, ideas hatch," [online] [retrieved on Jan. 13, 2004] Retrieved from the internet pp. 1-3. |
Bengel, J., et al., "Archiving and Indexing Chat Utterances," Electrical Engineering and Computer-Science and Information Technology Telecommunications Center University of Kansas, 2003. |
Boyan, J., et al., "A Machine Learning Architecture for Optimizing Web Search Engines," School of Computer Science, Camegie Mellon University, May 10, 1996, pp. 1-8. |
Bradenbaugh, F., "Chapter 1 The Client-Side Search Engine," JavaScript Cookbook, 1st Ed., Oct. 1999, O'Reilly' Online Catalog, [online] [retrieved on Dec. 29, 2003] Retrieved from the internet <URL:http://www.oreilly.com/catalog/jscooklchapter/chOI.html, pp. 1-30. |
Brin, S., et al, "The Anatomy of a Large-Scale Hypertextual Web Search Engine," Proceedings of the Seventh International World Wide Web Conference, Computer Networks and ISDN Systems, Apr. 1998, pp. 107-117, vol. 30, Issues 1-7. |
Budzik, J., et al., User Interactions with Everyday Applications as Context for Just-in-time Information Access, Intelligent Information Laboratory, Northwestern University, pp. 1-8, 2000. |
DEVONthink, 13 pages, [online] [retrieved on Mar. 16, 2004] Retrieved from the internet . |
DEVONthink, 13 pages, [online] [retrieved on Mar. 16, 2004] Retrieved from the internet <URL: http://www.devon-techonologies.com/products/devonthink.php>. |
dtSearch® , 1 page, [online] [retrieved on Mar. 15, 2004] Retrieved from the internet . |
dtSearch® , 1 page, [online] [retrieved on Mar. 15, 2004] Retrieved from the internet <URL:http://www.dtsearch.com/>. |
Dumais, S., et al, "Stuff I've Seen: A System for Personal Information Retrieval and Re-Use," Microsoft Research, SIGIR'03, Jul. 28-Aug. 1, 2003, pp. 1-8. |
Enfish, 4 pages, [online] [retrieved on Mar. 16, 2004] Retrieved from the internet . |
Enfish, 4 pages, [online] [retrieved on Mar. 16, 2004] Retrieved from the internet <URL:http://www.enfish.com>. |
European Examination Report, European Application No. EP 05731490.8, Jul. 31, 2008, 5 Pages. |
European Search Report, European Application No. EP 05731490.8, Apr. 28, 2008, 4 pages. |
Examination Report, European Patent Application No. 05731427.0, Jul. 28, 2008, 5 Pages. |
Fast Search & Transfer-Home-Enterprise Search, 1 page [online] [retrieved on Mar. 16, 2004] Retrieved from the internet . |
Fast Search & Transfer-Home-Enterprise Search, 1 page [online] [retrieved on Mar. 16, 2004] Retrieved from the internet <URL:http://www.solutions.altavista.com/en/news/pr020402 desktop.shtmu>. |
Fertig, S., et al., "Lifestreams: An Alternative to the Desktop Metaphor," [online] [retrieved on Mar. 16, 2004] Retrieved from the internet . pp. 1-3. |
Fertig, S., et al., "Lifestreams: An Alternative to the Desktop Metaphor," [online] [retrieved on Mar. 16, 2004] Retrieved from the internet <URL:http://www.acm.org/sigchi/chi96/proceedings/videos/Fertig/elf.htm>. pp. 1-3. |
Geisler, G., "Enriched Links: A Framework for Improving Web NaVigation Using Pop-Up Views," pp. 1-14, 2000. |
Huang, Q., et al., Multimedia Search and Retrieval: New Concepts, System Implementation, and Application, Circuits and Systems for Video Technology, IEEE Transaction s on Circuits and Systems for Video Technology, Aug. 2000, pp. 679-692, vol. 10. Issue 5. |
International Preliminary Report on Patentabiity, PCT/US2005/003386, Jun. 24, 2005, 8 pages. |
International Search Report and Written Opinion, PCT/US2004/038562, Apr. 6, 2005. |
International Search Report and Written Opinion, PCT/US2005/003386, Jun. 28, 2005. |
International Search Report and Written Opinion, PCT/US2005/010985, Apr. 26, 2007, 9 pages. |
ISYS Search Software-ISYS: desktop, 1 page, [online] [retrieved on Mar. 16, 2004] Retrieved from the internet . |
ISYS Search Software-ISYS: desktop, 1 page, [online] [retrieved on Mar. 16, 2004] Retrieved from the internet <URL:http://www.isysusa.com/products/desktoplindex.html>. |
Joachims, T., et al., "WebWatcher: A Tour Guide for the World Wide Web," 1996, 6 pages. |
Jonathan Bennett & Autolt Team, "Autolt v3 Homepage," Verson v3.0.102, 1999-2004, 26 pages, [online] [Archived on Aug. 13, 2004; Retrieved on Dec. 2, 2008] Retrieved from the internet . |
Jonathan Bennett & Autolt Team, "Autolt v3 Homepage," Verson v3.0.102, 1999-2004, 26 pages, [online] [Archived on Aug. 13, 2004; Retrieved on Dec. 2, 2008] Retrieved from the internet <URL:http://web.archive.org/web/20040813195143/http://www.autoitscript.com/autoit3/docs/>. |
Knezevic, P. et al., "The Architecture of the Obelix-An Improved Internet Search Engine," Proceedings of the 33rd Annual Hawaii International Conference on System Sciences (HICSS) Jan. 4-7, 2000, Maui, HI, USA, pp. 2145-2155. |
Markoff, J., "Google Moves Toward Clash with Microsoft," The New York Times, May 19, 2004, [online] [retrieved on May 19, 2004] Retrieved from the internet , pp. 1-4. |
Markoff, J., "Google Moves Toward Clash with Microsoft," The New York Times, May 19, 2004, [online] [retrieved on May 19, 2004] Retrieved from the internet <URL:http://www.nytimes.com/2004/5/19/technology/19google. html?ex::1 085964389&ei::1 &e...>, pp. 1-4. |
Morita, M. et al., "Information Filtering Based on User Behavior Analysis and Best Match Text Retrieval," Proceedings of the Annual International ACM-SIGIR Conference on Research and Development in Information Retrieval, Dublin, Jul. 3-6, 1994, pp. 272-281. |
Naraine, R., "Future of Search Will Make You Dizzy," Enterprise, May 20, 2004, [online] [retrieved on May 21, 2004] Retrieved from the internet , pp. 1-4. |
Naraine, R., "Future of Search Will Make You Dizzy," Enterprise, May 20, 2004, [online] [retrieved on May 21, 2004] Retrieved from the internet <URL:http://www.intemetnews.com/ent-news/article.php/3356831>, pp. 1-4. |
PCT International Search Report and Written Opinion, PCT/US05/10685, Jul. 3, 2008, 11 Pages. |
PCT International Search Report and Written Opinion, PCT/US05/10687, Sep. 10, 2008, 14 Pages. |
Pingali, G. S., et al., "Instantly Indexed Multimedia Databases of Real World Events," IEEE Transactions on Multimedia, Jun. 2002, pp. 269-282, vol. 4, Issue 2. |
Rhodes, B., "Margin Notes Building a Contextually Aware Associative Memory," The Proceedings of the International Conference on Intelligent User Interfaces (IUI'OO), Jan. 9-12, 2000, 8 pages. |
Rhodes, B., et al., "Just-in-time information retrieval agents," Systems Journal, vol. 39, Nos. 3&4, 2000, pp. 685-704. |
Rhodes, B., et al., "Remembrance Agent-A continuously running automated information retrieval system," The Proceedings of the First International Conference on the Practical Application of Intelligent Agents and Multi Agent Technology (PAAM '96), DO. 487-495. |
Rizzo, T., "WinFS 101: Introducing the New Windows File System," Longhom Developer Center Home: Headline Archive, [online] [retrieved on Apr. 21, 2004] Retrieved from the internet , pp. 1-5. |
Rizzo, T., "WinFS 101: Introducing the New Windows File System," Longhom Developer Center Home: Headline Archive, [online] [retrieved on Apr. 21, 2004] Retrieved from the internet <URL:http://msdn.Microsoft.com/Longhorn/archive/default.aspx?pull+llibrarv/en-us/dnwinfs/htm ...>, pp. 1-5. |
Sengupta, S., et al., Designing a Value Based Niche Search Engine Using Evolutionary Strategies, Proceedings of the International Conference of Information Technology: Coding and Computing (ITCC'05), IEEE, 2005, Pennsylvania State University. |
Sherman, C., "HotBot's New Desktop Search Toolbar," www.searchenginewatch.com, [online] [retrieved on Apr. 14, 2004] Retrieved from the internet , pp. 1-3. |
Sherman, C., "HotBot's New Desktop Search Toolbar," www.searchenginewatch.com, [online] [retrieved on Apr. 14, 2004] Retrieved from the internet <URL:http://searchenginewatch.com/searchdavlprint.php/34711339921>, pp. 1-3. |
Spiteri, M.D. et al., "An Architecture to Support Storage and Retrieval of Events," Sep. 1998, pp. 443-458, [online] Retrieved from the Internet. |
Spiteri, M.D. et al., "An Architecture to Support Storage and Retrieval of Events," Sep. 1998, pp. 443-458, [online] Retrieved from the Internet<URL:http://citeseer.ist.psu.edu/spiteri98architecture.html>. |
Spiteri, M.D., "An Architecture for the Notification, Storage and Retrieval of Events," Jan. 2000, pp. 1-165 pages, [online] Retrieved from the Internet. |
Spiteri, M.D., "An Architecture for the Notification, Storage and Retrieval of Events," Jan. 2000, pp. 1-165 pages, [online] Retrieved from the Internet<URL:http://citeseer.ist.psu.edu/spiteri00architecture.html>. |
Sullivan, D., "Alta Vista Releases Search Software," The Search Engine Report, Aug. 4, 1998, pp. 1-2. |
U.S. Appl. No. 10/814,773, filed Mar. 31, 2004, Lawrence et al. |
WebWatcher Home Page, "Welcome to the WebWatcher Project," 2 pages [online] [retrieved on Oct. 15, 2003] Retrieved from the internet . |
WebWatcher Home Page, "Welcome to the WebWatcher Project," 2 pages [online] [retrieved on Oct. 15, 2003] Retrieved from the internet <URL:http://www-2.cs.cmu.edu/˜webwatcher/>. |
XI instantly searches files & email. For outlook. Outlook, 1 page, [online] [retrieved on Mar. 15, 2004] Retrieved from the internet . |
XI instantly searches files & email. For outlook. Outlook, 1 page, [online] [retrieved on Mar. 15, 2004] Retrieved from the internet <URL:http://www.xl.com/>. |
Zellweger, P., et al.. "Fluid Links for Informed and Incremental Link Transitions," Proceedings of Hypertext'98. 42 Pittsburgh, PA, Jun. 20-24, 1998, pp. 50-57. |
Cited By (17)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20100106730A1 (en) * | 2007-04-30 | 2010-04-29 | Aminian Mehdi | Method of intermediation within a social network of users of a service/application to expose relevant media items |
US20220292103A1 (en) * | 2009-01-21 | 2022-09-15 | Staffan Truvé | Information service for facts extracted from differing sources on a wide area network |
US20150234828A1 (en) * | 2012-08-17 | 2015-08-20 | Zte Corporation | Address book sorting method and system of mobile terminal |
US9471581B1 (en) | 2013-02-23 | 2016-10-18 | Bryant Christopher Lee | Autocompletion of filename based on text in a file to be saved |
US11128621B2 (en) * | 2013-08-02 | 2021-09-21 | Alibaba Group Holdings Limited | Method and apparatus for accessing website |
US20180212963A1 (en) * | 2013-08-02 | 2018-07-26 | Uc Mobile Co., Ltd. | Method and apparatus for accessing website |
US10778680B2 (en) | 2013-08-02 | 2020-09-15 | Alibaba Group Holding Limited | Method and apparatus for accessing website |
US9736323B2 (en) * | 2014-02-14 | 2017-08-15 | S-Printing Solution Co., Ltd. | Method of using address book of image forming apparatus on web browser and image forming apparatus for performing the same |
US20150237224A1 (en) * | 2014-02-14 | 2015-08-20 | Samsung Electronics Co., Ltd. | Method of using address book of image forming apparatus on web browser and image forming apparatus for performing the same |
US20160019308A1 (en) * | 2014-07-18 | 2016-01-21 | Oracle International Corporation | Modifying the order of items in a digital document based upon usage patterns |
US11900462B2 (en) * | 2016-08-30 | 2024-02-13 | The Athene Group | Systems and methods for account automation and integration |
US20190018848A1 (en) * | 2017-07-12 | 2019-01-17 | Facebook, Inc. | Techniques for prospective contact ranking of address book entries |
US10558673B2 (en) * | 2017-07-12 | 2020-02-11 | Facebook, Inc. | Techniques for prospective contact ranking of address book entries |
US11409783B2 (en) * | 2017-10-03 | 2022-08-09 | Google Llc | Data structure queries to manage loading time in multimedia content |
US11841894B2 (en) | 2017-10-03 | 2023-12-12 | Google Llc | Data structure queries to manage loading time in multimedia content |
US10867002B1 (en) * | 2017-12-14 | 2020-12-15 | Ray A. Walker | Real estate search interface and method |
CN109685125A (en) * | 2018-12-14 | 2019-04-26 | 大连海事大学 | Daily behavior feature mining and calculation method based on frequent Sensor Events sequence |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7908287B1 (en) | Dynamically autocompleting a data entry | |
US7634463B1 (en) | Automatically generating and maintaining an address book | |
US9262446B1 (en) | Dynamically ranking entries in a personal data book | |
CA3001453C (en) | Method and system for performing a probabilistic topic analysis of search queries for a customer support system | |
CN102549563B (en) | Semantic trading floor | |
US7769740B2 (en) | Systems and methods of ranking attention | |
US9275126B2 (en) | Self populating address book | |
US9443197B1 (en) | Predicting user navigation events | |
CN100401292C (en) | Systems and methods for search query processing using trend analysis | |
US9721035B2 (en) | Systems and methods for recommended content platform | |
CN102859516B (en) | Generating improved document classification data using historical search results | |
US20160171557A1 (en) | Customer Insight System Architecture | |
WO2019149145A1 (en) | Compliant report class sorting method and apparatus | |
US20110238591A1 (en) | Automated profile standardization and competency profile generation | |
US20100293448A1 (en) | Centralized website local content customization | |
CN101416212A (en) | Targeting of buzz advertising information | |
US11138281B2 (en) | System user attribute relevance based on activity | |
US20180365302A1 (en) | System for interactively searching for and displaying information on a webpage | |
US11915256B2 (en) | Customized merchant price ratings | |
US20230012164A1 (en) | Customized Merchant Price Ratings | |
WO2023283116A1 (en) | Customized merchant price ratings | |
EP4367623A1 (en) | Customized merchant price ratings | |
WO2022087685A1 (en) | An electronic data analysis system and method | |
KR20200012628A (en) | System and method for integrating financial product information | |
WO2016055832A1 (en) | A computer-based system, computer-implemented methods, and a computer program product for providing ranked recommendation data |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:KATRAGADDA, LALITESH;REEL/FRAME:017780/0091Effective date: 20060517 |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044566/0657Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
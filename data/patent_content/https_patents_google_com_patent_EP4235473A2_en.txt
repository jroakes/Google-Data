EP4235473A2 - Encrypted search with a public key - Google Patents
Encrypted search with a public key Download PDFInfo
- Publication number
- EP4235473A2 EP4235473A2 EP23172647.2A EP23172647A EP4235473A2 EP 4235473 A2 EP4235473 A2 EP 4235473A2 EP 23172647 A EP23172647 A EP 23172647A EP 4235473 A2 EP4235473 A2 EP 4235473A2
- Authority
- EP
- European Patent Office
- Prior art keywords
- key
- user
- data
- documents
- processing hardware
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 238000000034 method Methods 0.000 claims abstract description 59
- 238000012545 processing Methods 0.000 claims description 75
- 230000015654 memory Effects 0.000 claims description 33
- 238000004891 communication Methods 0.000 claims description 14
- 230000004044 response Effects 0.000 claims description 6
- 238000004590 computer program Methods 0.000 description 8
- 230000003287 optical effect Effects 0.000 description 6
- 230000006870 function Effects 0.000 description 4
- 230000008569 process Effects 0.000 description 4
- 238000007726 management method Methods 0.000 description 3
- 230000008901 benefit Effects 0.000 description 2
- 238000013500 data storage Methods 0.000 description 2
- 230000003993 interaction Effects 0.000 description 2
- 230000006855 networking Effects 0.000 description 2
- 230000008859 change Effects 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000012423 maintenance Methods 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 230000002085 persistent effect Effects 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 230000003068 static effect Effects 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/04—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks
- H04L63/0428—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks wherein the data content is protected, e.g. by encrypting or encapsulating the payload
- H04L63/0442—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks wherein the data content is protected, e.g. by encrypting or encapsulating the payload wherein the sending and receiving network entities apply asymmetric encryption, i.e. different keys for encryption and decryption
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/08—Key distribution or management, e.g. generation, sharing or updating, of cryptographic keys or passwords
- H04L9/0816—Key establishment, i.e. cryptographic processes or cryptographic protocols whereby a shared secret becomes available to two or more parties, for subsequent use
- H04L9/0819—Key transport or distribution, i.e. key establishment techniques where one party creates or otherwise obtains a secret value, and securely transfers it to the other(s)
- H04L9/0825—Key transport or distribution, i.e. key establishment techniques where one party creates or otherwise obtains a secret value, and securely transfers it to the other(s) using asymmetric-key encryption or public key infrastructure [PKI], e.g. key signature or public key certificates
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/903—Querying
- G06F16/9032—Query formulation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/903—Querying
- G06F16/90335—Query processing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/93—Document management systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/602—Providing cryptographic facilities or services
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/62—Protecting access to data via a platform, e.g. using keys or access control rules
- G06F21/6209—Protecting access to data via a platform, e.g. using keys or access control rules to a single file or object, e.g. in a secure envelope, encrypted and accessed using a key, or with access control rules appended to the object itself
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/06—Network architectures or network communication protocols for network security for supporting key management in a packet data network
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/06—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols the encryption apparatus using shift registers or memories for block-wise or stream coding, e.g. DES systems or RC4; Hash functions; Pseudorandom sequence generators
- H04L9/0618—Block ciphers, i.e. encrypting groups of characters of a plain text message using fixed encryption transformation
- H04L9/0631—Substitution permutation network [SPN], i.e. cipher composed of a number of stages or rounds each involving linear and nonlinear transformations, e.g. AES algorithms
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/06—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols the encryption apparatus using shift registers or memories for block-wise or stream coding, e.g. DES systems or RC4; Hash functions; Pseudorandom sequence generators
- H04L9/0618—Block ciphers, i.e. encrypting groups of characters of a plain text message using fixed encryption transformation
- H04L9/0637—Modes of operation, e.g. cipher block chaining [CBC], electronic codebook [ECB] or Galois/counter mode [GCM]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/08—Key distribution or management, e.g. generation, sharing or updating, of cryptographic keys or passwords
- H04L9/0861—Generation of secret information including derivation or calculation of cryptographic keys or passwords
- H04L9/0866—Generation of secret information including derivation or calculation of cryptographic keys or passwords involving user or device identifiers, e.g. serial number, physical or biometrical information, DNA, hand-signature or measurable physical characteristics
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/08—Key distribution or management, e.g. generation, sharing or updating, of cryptographic keys or passwords
- H04L9/0861—Generation of secret information including derivation or calculation of cryptographic keys or passwords
- H04L9/0869—Generation of secret information including derivation or calculation of cryptographic keys or passwords involving random numbers or seeds
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L2463/00—Additional details relating to network architectures or network communication protocols for network security covered by H04L63/00
- H04L2463/062—Additional details relating to network architectures or network communication protocols for network security covered by H04L63/00 applying encryption of the keys
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
- H04L67/1097—Protocols in which an application is distributed across nodes in the network for distributed storage of data in networks, e.g. transport arrangements for network file system [NFS], storage area networks [SAN] or network attached storage [NAS]
Definitions
- This disclosure relates to performing encrypted searches using a public key.
- Searchable encryption i.e., encrypted search
- a user or client owns a large corpus of encrypted documents that are stored at a server not under the client's control (i.e., the server is untrusted).
- the client can store their encrypted documents on the untrusted server, but still maintain the capability of searching the documents and, for example, retrieve identifiers of all documents containing a specific keyword.
- encrypting the data with public key encryption while popular due to its security, is computationally expensive.
- One aspect of the disclosure provides a method for encrypted search with a public key.
- the method includes receiving, at data processing hardware, an operation request from a user device associated with a user, the operation request requesting encryption of data associated with the user.
- the data includes a corpus of documents stored on a remote storage device in communication with the data processing hardware.
- the method also includes receiving, at the data processing hardware, a public key associated with the user.
- the public key includes an asymmetric cryptographic public key.
- the method also includes generating, by the data processing hardware, a random data key.
- the data key includes a symmetric cryptographic key.
- the method also includes encrypting, by the data processing hardware, using the data key, a search index for the corpus of documents based on keywords within the corpus of documents.
- the method also includes encrypting, by the data processing hardware, using the public key associated with the user, the data key and sending, by the data processing hardware, the encrypted data key to the user device associated with the user.
- Implementations of the disclosure may include one or more of the following optional features.
- receiving the public key associated with the user includes receiving the public key from the user device concurrently with receiving the operation request.
- the method further includes, prior to receiving the operation request, receiving, at the data processing hardware, the corpus of documents uploaded by the user device and storing, by the data processing hardware, the corpus of documents uploaded by the user device.
- the method may also include generating, by the data processing hardware, the search index for the corpus of documents stored on the remote storage device based on the keywords within the corpus of documents.
- the method further includes, after sending the encrypted data key to the user, discarding, by the data processing hardware, the data key.
- the user device is configured to decrypt the encrypted data key using a private key associated with the public key, and the private key is inaccessible to the data processing hardware.
- the private key includes an asymmetric cryptographic private key.
- the user device may also be configured to generate, based on the decrypted data key, a search query for a keyword appearing in one or more of the documents within the corpus of documents.
- the method includes receiving, at the data processing hardware, the search query for the keyword from the user device.
- the method may also include accessing, by the data processing hardware, using the search query, the encrypted search index to generate a searchable encryption result associated with a list of document identifiers. Each document identifier in the list of document identifiers uniquely identifies a respective one of the documents within the corpus of documents that the keyword appears in.
- the method may also include returning, by the data processing hardware, the searchable encryption result to the user device.
- the list of document identifiers associated with the searchable encryption result are never revealed to the data processing hardware in plaintext.
- the searchable encryption result when received by the user device, causes the user device to obtain the list of document identifiers in plaintext using the decrypted data key.
- the method further includes, prior to encrypting the random data key with the public key, encrypting, by the data processing hardware, using the random data key, the corpus of documents.
- the method further includes, in response to receiving the operation request, generating, by the data processing hardware, another random data key, the other random data key including another symmetric cryptographic key and encrypting, by the data processing hardware, using the public key associated with the user, the other random data key.
- the data key may include an Advanced Encryption Standard Galois/Counter Mode (AES-GCM) key.
- the system includes data processing hardware and memory hardware in communication with the data processing hardware.
- the memory hardware stores instructions that when executed on the data processing hardware cause the data processing hardware to perform operations.
- the operations include receiving an operation request from a user device associated with a user, the operation request requesting encryption of data associated with the user.
- the data includes a corpus of documents stored on a remote storage device in communication with the data processing hardware.
- the operations also include receiving a public key associated with the user.
- the public key includes an asymmetric cryptographic public key.
- the operations also include generating a random data key.
- the data key includes a symmetric cryptographic key.
- the operations also include encrypting using the data key, a search index for the corpus of documents based on keywords within the corpus of documents.
- the operations also include encrypting using the public key associated with the user, the data key and sending the encrypted data key to the user device associated with the user.
- Implementations of the disclosure may include one or more of the following optional features.
- receiving the public key associated with the user includes receiving the public key from the user device concurrently with receiving the operation request.
- the operations further include, prior to receiving the operation request, receiving the corpus of documents uploaded by the user device and storing the corpus of documents uploaded by the user device.
- the operations may also include generating the search index for the corpus of documents stored on the remote storage device based on the keywords within the corpus of documents.
- the operations further include, after sending the encrypted data key to the user, discarding the data key.
- the user device is configured to decrypt the encrypted data key using a private associated with the public key, and the private key is inaccessible to the data processing hardware.
- the private key includes an asymmetric cryptographic private key.
- the user device may also be configured to generate, based on the decrypted data key, a search query for a keyword appearing in one or more of the documents within the corpus of documents.
- the operations include receiving the search query for the keyword from the user device.
- the operations may also include accessing, using the search query, the encrypted search index to generate a searchable encryption result associated with a list of document identifiers.
- Each document identifier in the list of document identifiers uniquely identifies a respective one of the documents within the corpus of documents that the keyword appears in.
- the operations may also include returning the searchable encryption result to the user device.
- the list of document identifiers associated with the searchable encryption result are never revealed to the data processing hardware in plaintext.
- the searchable encryption result when received by the user device, causes the user device to obtain the list of document identifiers in plaintext using the decrypted data key.
- the operations further include, prior to encrypting the random data key with the public key, encrypting, using the random data key, the corpus of documents.
- the operations further include, in response to receiving the operation request, generating another random data key, the other random data key including another symmetric cryptographic key and encrypting, using the public key associated with the user, the other random data key.
- the data key may include an Advanced Encryption Standard Galois/Counter Mode (AES-GCM) key.
- this encrypted storage ideally needs to be implemented in a way that (a) enables the authorised or originating user to access and use their data in a convenient manner whilst (b) also maintaining security (both of the data itself and of the cryptographic keys used to secure the data). For example, a user may wish to conduct a search over their data, such as a search to identify "photos of Chris", or a search to identify data based on a date (e.g.
- the present invention aims to facilitate secured implementations for searchable data storage.
- the data provided by a user to a remote storage may be indexed (so as to create a search index) and encrypted using a symmetric key generated at the remote storage.
- the remote storage may make use of a public key of the user to generate an encrypted index, in which the search index and the symmetric key are stored in encrypted form.
- the remote storage may then discard or delete the symmetric key.
- Asymmetric cryptography (also referred to as public-key cryptography) is a popular encryption solution because two parties can securely exchange communications without the need to share a private key.
- public-key cryptography cryptographic algorithms generate a private key and a corresponding public key that produce one-way functions such that data encrypted with the public key may only be decrypted by the associated private key (and vice versa).
- an individual may disseminate their public key while keeping their private key secret.
- anyone who wishes to communicate securely with the individual may encrypt the communication with the public key, which may then only be decrypted by the private key that the individual has kept secret.
- symmetric cryptography An alternative to asymmetric cryptography is symmetric cryptography.
- symmetric cryptography the same key is used to both encrypt and decrypt the data. This requires two parties who wish to communicate to share the same key, which may raise a number of security concerns. For example, a way must be found to share the symmetric key between the parties secretly. In another example, all data encrypted by the symmetric key will be accessible to all parties with the key, which may limit the use of the symmetric key to a single application and greatly increase the number of keys the user must maintain. Key management, in general, is a difficult and burdensome endeavor and is especially difficult for persistent symmetric keys. However, asymmetric cryptography tends to be much more computationally expensive than symmetric cryptography, especially when the plaintext is very large.
- implementations herein are directed toward a searchable encryption manager that implements hybrid encryption to efficiently encrypt a search index with a public key of a client.
- an example system 100 includes a user device 10 associated with a respective user or client 12 and in communication with a remote system 111 via a network 112.
- the user device 10 may correspond to any computing device, such as a desktop workstation, a laptop workstation, or a mobile device (i.e., a smart phone).
- the remote system 111 may be a single computer, multiple computers, or a distributed system (e.g., a cloud environment) having scalable / elastic computing resources 118 (e.g., data processing hardware) and/or storage resources 116 (e.g., memory hardware).
- a document data store 150 (i.e., a remote storage device 150) is overlain on the storage resources 116 to allow scalable use of the storage resources 116 by one or more of the client or computing resources 118.
- the document data store 150 may reside on a single storage resource 116 in a non-distributed manner.
- the document data store 150 is configured to store a corpus of documents 152, 152a---n associated with the user 12.
- Each document 152 includes a document identifier 154 that uniquely identifies the associated document 152 (e.g., a document name).
- Each document 152 also includes a set of keywords 32.
- the set of keywords 32 includes all keywords that appear in the associated encrypted document 152 that may be searched for by the user 12.
- a document 152 may refer to any item uploaded onto the remote system 111 for storage within the document data store 150, such as, without limitation, emails, calendar events, notes, database entries, pictures, etc.
- the document data store 150 may maintain a search index 220 based on keywords 32 in the documents 152 stored on the remote storage device 150 associated with the user 12 or associated with the encryption request 30.
- the search index 220 may correlate keywords 32 with the document identifiers 154 of the documents 152 that the keyword 32 appears in.
- the search index 220 may also correlate additional or other metadata with the keywords 32. For example, dates, times, authors, etc. may also be associated with the keywords 32.
- the user 12 may issue a query for a keyword 32 and the document data store 150 may access the search index 220 to locate all documents 152 stored on the data store 150 and associated with the user 12 that keyword 32 appears in.
- the remote system 111 executes a Searchable Encryption (SE) manager 120 for managing access to the encrypted documents 152 within the data storage 150.
- SE Searchable Encryption
- the SE manager 120 receives an operation request 30 from the user 12 (via the user device 10 through the network 112) requesting that unencrypted documents 152U associated with the user 12 and stored on the remote storage device 150 be encrypted.
- the user device 10 may have previously uploaded the documents 152 for storage on the remote storage device 150, and is now sending the operation request 30 to encrypt the unencrypted documents 152U.
- the "unencrypted documents 152U" refer to documents/data stored on the document data store 150 that the remote system 111 can freely inspect in plaintext.
- the "unencrypted documents 152U" may be encrypted in the sense that third parties or malicious actors are prevented from viewing in plaintext, but the remote system 111 ultimately maintains access to cryptographic keys for decrypting the documents 152U into plaintext.
- the encryption request 30 may also request the SE manager 120 to delete or discard any unencrypted (i.e., plaintext) versions or copies of the documents 152 after encryption. That is, the encryption request 30 may indicate that the user 12 is revoking the remote system's 111 access to any plaintext (e.g., unencrypted) documents 152U stored on the untmsted document data store 150, or otherwise preventing any entity operating the remote system 111 from accessing plaintext documents 152 stored on the untrusted document data store 150.
- plaintext e.g., unencrypted
- the SE manager 120 also receives, from the user device 10, a public key 210.
- the SE manager 120 may receive the public key 210 and the operation request 30 concurrently or simultaneously.
- the public key 210 includes an asymmetric cryptographic public key associated with the user 12. That is, the public key 210 is associated with a private key 212 kept secret by the user 12 to implement public-key cryptography such that the SE manager 120 has access to the public key 210 but not the private key 212.
- the user device 10 may generate the public key 210 and the associated private key 212 locally.
- the SE manager 120 after receiving the public key 210, generates a random data key 214.
- the data key 214 is a symmetric cryptographic key.
- the data key 214 may be an Advanced Encryption Standard Galois/Counter Mode (AES-GCM) key.
- AES-GCM Advanced Encryption Standard Galois/Counter Mode
- the data key 214 is random such that the key 214 includes a sequence of numbers that cannot be reasonably predicted better than by random chance.
- the data key 214 may be generated by, for example, a hardware random-number generator or a pseudo-random number generator executing on the data processing hardware 118 of the remote system 111.
- the SE manager 120 using the data key 214, encrypts the search index 220.
- the encrypted search index 220, 220E includes the search index based on the keywords 32 in the documents 152 stored on the remote storage device 150 associated with the user 12 or associated with the encryption request 30.
- the SE manager 120 After encrypting the search index 220E using the random data key 214 generated by the SE manager 120, the SE manager 120 encrypts the data key 214 using the public key 210 received from the user device 10.
- the encrypted data key 214E may only be decrypted by the user device 10 using the private key 212 associated with the public key 210 (i.e., the user's private key 212). The private key 212 is unavailable to the SE manager 120 (and the rest of the remote system 111).
- the SE manager 120 sends the encrypted data key 214E (encrypted with the public key 210) to the user device 10.
- the user device 10 may store the data key 214E locally at the user device 10 or elsewhere (e.g., a local or remote third-party key management system).
- the SE manager 120 discards the data key 214 used to encrypt the search index 220E. That is, the SE manager 120 discards, deletes, and/or removes any unencrypted copies or versions of the data key 214 such that the SE manager 120 no longer has access to unencrypted or plaintext versions the data key 214.
- the remote system 111 no longer has access to viewing the contents of the encrypted search index 220E.
- the encrypted data key 214E when received by the user device 10, causes the user device 10 to decrypt the encrypted data 214E key using the private key 212, which is not accessible to the remote system 111.
- the SE manager 120 also encrypts the documents 152 with the data key 214 randomly generated by the SE manager 120. In other implementations, the SE manager 120 generates a second random data key 214 and encrypts the documents 152 with the second data key 214. In this case, the SE manager 120 also encrypts the second data key 214 with the public key 210 and sends the second data key to the user device 10. In yet other examples, the documents 152 are encrypted with an asymmetric key, as the encryption of the documents 152 may be completely separate and independent from the encryption of the search index 220.
- the SE manager 120 may encrypt the documents 152 before or after encrypting the search index 220, or the SE manager 120 may encrypt the documents 152 and the search index 220 concurrently. Regardless of the key used, after encryption of the documents 152, the SE manager 120 may remove or delete any unencrypted or plaintext copies of the documents 152 such that the remote system 111 no longer has plaintext access to the documents 152 while storing the encrypted documents 152E on the untrusted document data store 150.
- the user 12 may request the SE manager 120 to encrypt multiple different repositories of data, such that the SE manager 120 encrypts each repository with a different respective symmetric data key 214 generated by the SE manager 120 and then encrypts each respective symmetric data key 214 the same asymmetric public key 210.
- the user 12 may request the creation of a new encrypted repository after a threshold period of time (e.g., six months). The user 12 may then generate a search query 310 ( FIG. 3 ) for each repository by using the associated decrypted symmetric data key 214 ( FIG. 3 ).
- the SE manager 120 receives a search query 310 for one or more keywords 32 from the user device 10.
- the remote system 111 maintains the encrypted data key 214E and the user 12 downloads or otherwise retrieves the encrypted data key 214E from the remote system 111 prior to generating the search query 310. That is, instead of sending the encrypted data key 214E to the user 12, the SE manager 120 maintains the encrypted data key 214E for the user 12 at the remote system 111 and removes any plaintext versions of the data key 214. The user may then retrieve the encrypted data key 214E (e.g., after authentication of the user 12) from any user device 10 the user 12 has access to whenever the user 12 desires to search the documents 152.
- the user device 10 uses the public key 212 to decrypt the encrypted data key 214E and then uses the decrypted data key 214D for generating the search query 310 for the one or more keywords 32.
- the user device 10 employs encrypted search techniques as described in U.S. Application No. 62/838,111, filed April 24, 2019 , titled “Response-Hiding Searchable Encryption," and U.S. Application No. 16/712,151, filed December 12, 2019 , titled “Encrypted Search with No Zer-Day Leakage,” which are both hereby incorporated by reference in their entireties.
- the user device 10 sends/transmits the generated search query 310 based on the decrypted data key 214D to the SE manager 310 and the SE manager 310 applies the search query 310 to the encrypted search index 220 to ultimately return the document identifiers 154 associated with documents 152 that the keyword 32 appears in.
- the SE manager 120 accesses the encrypted search index 220E and generates a SE result 320 that the user device 10 uses to obtain the document identifiers 154 associated with the keyword(s) 32 of the search query 310.
- the search query 310 generated by the user device 10 based on the decrypted data key 214 allows the SE manager 120 to access the encrypted search index 220 and generate the SE result 320 based on the document identifiers 154 associated with the keywords(s) 32 of the search query 310 without revealing the document identifiers 154 or the keywords 32 in plaintext to the remote storage device 150.
- the SE result 320 includes encrypted document identifiers 154E that the user device 10 may decrypt using the private key 212.
- the SE result 320 may include additional metadata (e.g., data, time, author, subject, etc.) that the user device 10 may decrypt using the private key 212.
- the client device 10 receives the SE result 320 from the SE manager 120 and uses the private key 212 to obtain the document identifiers 154 associated with documents 152 that the keyword 32 of the search query 310 appears in. That is, the SE result 320 may include cryptographic hashes/functions associated with the document identifiers 154 and/or additional metadata, and the user device 10 may use the private key 212 to construct/generate the document identifiers 154 and/or the additional metadata in plaintext. Each document identifier 154 uniquely identifies a respective one of the encrypted documents 152 that the keyword 32 appears in and stored on the remote storage device 150.
- the user 12 may generate the data encryption operation request 30 and/or the search query 310 via a software application executing on the user device 10.
- a software application i.e., a software resource
- a software application may be referred to as an "application,” an "app,” or a "program.”
- Example applications include, but are not limited to, system diagnostic applications, system management applications, system maintenance applications, word processing applications, spreadsheet applications, messaging applications, media streaming applications, social networking applications, and gaming applications.
- the user may execute a web browser executing on the user device 10 that communicates with the remote system 111 via the network 112.
- FIG. 4 provides an example arrangement of operations for a method 400 for encrypted search with a public key.
- the method 400 includes receiving, at data processing hardware 118, an operation request 30 from a user device 10 associated with a user 12 requesting encryption of data associated with the user 12.
- the data includes a corpus of documents 152U stored on a remote storage device 150 in communication with the data processing hardware 118.
- the method 400 at block 404, includes receiving, at the data processing hardware 118, a public key 210 associated with the user 12.
- the public key 210 is an asymmetric cryptographic public key.
- the method 400 includes generating, by the data processing hardware 118, a random data key 214.
- the data key 214 is a symmetric cryptographic key.
- the method 400 includes encrypting, by the data processing hardware 118, using the data key 214, a search index 220 for the corpus of documents 152 based on keywords 32 within the corpus of documents 152.
- the method 400 at block 410, includes encrypting, by the data processing hardware 118, using the public key 210 associated with the user 12, the data key 214.
- the method 400 includes sending, by the data processing hardware 118, the encrypted data key 214E to the user device 10 associated with the user 12. In some examples, the method 400 includes, after sending the encrypted data key 214, discarding, by the data processing hardware 118, the data key 214.
- FIG. 5 is schematic view of an example computing device 500 that may be used to implement the systems and methods described in this document.
- the computing device 500 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers.
- the components shown here, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit implementations of the inventions described and/or claimed in this document.
- the computing device 500 includes a processor 510, memory 520, a storage device 530, a high-speed interface/controller 540 connecting to the memory 520 and high-speed expansion ports 550, and a low speed interface/controller 560 connecting to a low speed bus 570 and a storage device 530.
- Each of the components 510, 520, 530, 540, 550, and 560, are interconnected using various busses, and may be mounted on a common motherboard or in other manners as appropriate.
- the processor 510 can process instructions for execution within the computing device 500, including instructions stored in the memory 520 or on the storage device 530 to display graphical information for a graphical user interface (GUI) on an external input/output device, such as display 580 coupled to high speed interface 540.
- GUI graphical user interface
- multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory.
- multiple computing devices 500 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system).
- the memory 520 stores information non-transitorily within the computing device 500.
- the memory 520 may be a computer-readable medium, a volatile memory unit(s), or non-volatile memory unit(s).
- the non-transitory memory 520 may be physical devices used to store programs (e.g., sequences of instructions) or data (e.g., program state information) on a temporary or permanent basis for use by the computing device 500.
- non-volatile memory examples include, but are not limited to, flash memory and read-only memory (ROM) / programmable read-only memory (PROM) / erasable programmable read-only memory (EPROM) / electronically erasable programmable read-only memory (EEPROM) (e.g., typically used for firmware, such as boot programs).
- volatile memory examples include, but are not limited to, random access memory (RAM), dynamic random access memory (DRAM), static random access memory (SRAM), phase change memory (PCM) as well as disks or tapes.
- the storage device 530 is capable of providing mass storage for the computing device 500.
- the storage device 530 is a computer-readable medium.
- the storage device 530 may be a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations.
- a computer program product is tangibly embodied in an information carrier.
- the computer program product contains instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 520, the storage device 530, or memory on processor 510.
- the high speed controller 540 manages bandwidth-intensive operations for the computing device 500, while the low speed controller 560 manages lower bandwidth-intensive operations. Such allocation of duties is exemplary only.
- the high-speed controller 540 is coupled to the memory 520, the display 580 (e.g., through a graphics processor or accelerator), and to the high-speed expansion ports 550, which may accept various expansion cards (not shown).
- the low-speed controller 560 is coupled to the storage device 530 and a low-speed expansion port 590.
- the low-speed expansion port 590 which may include various communication ports (e.g., USB, Bluetooth, Ethernet, wireless Ethernet), may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- input/output devices such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- the computing device 500 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a standard server 500a or multiple times in a group of such servers 500a, as a laptop computer 500b, or as part of a rack server system 500c.
- implementations of the systems and techniques described herein can be realized in digital electronic and/or optical circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof.
- ASICs application specific integrated circuits
- These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- the processes and logic flows described in this specification can be performed by one or more programmable processors, also referred to as data processing hardware, executing one or more computer programs to perform functions by operating on input data and generating output.
- the processes and logic flows can also be performed by special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit).
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks.
- mass storage devices for storing data
- a computer need not have such devices.
- Computer readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto optical disks; and CD ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- one or more aspects of the disclosure can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube), LCD (liquid crystal display) monitor, or touch screen for displaying information to the user and optionally a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube), LCD (liquid crystal display) monitor, or touch screen for displaying information to the user and optionally a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- Other kinds of devices can be used to provide interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input
Abstract
Description
- This disclosure relates to performing encrypted searches using a public key.
- Searchable encryption (i.e., encrypted search) has increased in popularity as storage of large quantities of data in the cloud becomes more common. More and more, a user or client owns a large corpus of encrypted documents that are stored at a server not under the client's control (i.e., the server is untrusted). With searchable encryption, the client can store their encrypted documents on the untrusted server, but still maintain the capability of searching the documents and, for example, retrieve identifiers of all documents containing a specific keyword. However, encrypting the data with public key encryption, while popular due to its security, is computationally expensive.
- One aspect of the disclosure provides a method for encrypted search with a public key. The method includes receiving, at data processing hardware, an operation request from a user device associated with a user, the operation request requesting encryption of data associated with the user. The data includes a corpus of documents stored on a remote storage device in communication with the data processing hardware. The method also includes receiving, at the data processing hardware, a public key associated with the user. The public key includes an asymmetric cryptographic public key. The method also includes generating, by the data processing hardware, a random data key. The data key includes a symmetric cryptographic key. The method also includes encrypting, by the data processing hardware, using the data key, a search index for the corpus of documents based on keywords within the corpus of documents. The method also includes encrypting, by the data processing hardware, using the public key associated with the user, the data key and sending, by the data processing hardware, the encrypted data key to the user device associated with the user.
- Implementations of the disclosure may include one or more of the following optional features. In some implementations, receiving the public key associated with the user includes receiving the public key from the user device concurrently with receiving the operation request. Optionally, the method further includes, prior to receiving the operation request, receiving, at the data processing hardware, the corpus of documents uploaded by the user device and storing, by the data processing hardware, the corpus of documents uploaded by the user device. The method may also include generating, by the data processing hardware, the search index for the corpus of documents stored on the remote storage device based on the keywords within the corpus of documents.
- In some implementations, the method further includes, after sending the encrypted data key to the user, discarding, by the data processing hardware, the data key. In some examples, the user device is configured to decrypt the encrypted data key using a private key associated with the public key, and the private key is inaccessible to the data processing hardware. The private key includes an asymmetric cryptographic private key. The user device may also be configured to generate, based on the decrypted data key, a search query for a keyword appearing in one or more of the documents within the corpus of documents.
- In some implementations, the method includes receiving, at the data processing hardware, the search query for the keyword from the user device. The method may also include accessing, by the data processing hardware, using the search query, the encrypted search index to generate a searchable encryption result associated with a list of document identifiers. Each document identifier in the list of document identifiers uniquely identifies a respective one of the documents within the corpus of documents that the keyword appears in. The method may also include returning, by the data processing hardware, the searchable encryption result to the user device.
- In some examples, the list of document identifiers associated with the searchable encryption result are never revealed to the data processing hardware in plaintext. In some implementations, the searchable encryption result, when received by the user device, causes the user device to obtain the list of document identifiers in plaintext using the decrypted data key. In some examples, the method further includes, prior to encrypting the random data key with the public key, encrypting, by the data processing hardware, using the random data key, the corpus of documents.
- In some implementations, the method further includes, in response to receiving the operation request, generating, by the data processing hardware, another random data key, the other random data key including another symmetric cryptographic key and encrypting, by the data processing hardware, using the public key associated with the user, the other random data key. The data key may include an Advanced Encryption Standard Galois/Counter Mode (AES-GCM) key.
- Another aspect of the disclosure provides a system for providing searchable encryption with a public key. The system includes data processing hardware and memory hardware in communication with the data processing hardware. The memory hardware stores instructions that when executed on the data processing hardware cause the data processing hardware to perform operations. The operations include receiving an operation request from a user device associated with a user, the operation request requesting encryption of data associated with the user. The data includes a corpus of documents stored on a remote storage device in communication with the data processing hardware. The operations also include receiving a public key associated with the user. The public key includes an asymmetric cryptographic public key. The operations also include generating a random data key. The data key includes a symmetric cryptographic key. The operations also include encrypting using the data key, a search index for the corpus of documents based on keywords within the corpus of documents. The operations also include encrypting using the public key associated with the user, the data key and sending the encrypted data key to the user device associated with the user.
- Implementations of the disclosure may include one or more of the following optional features. In some implementations, receiving the public key associated with the user includes receiving the public key from the user device concurrently with receiving the operation request. Optionally, the operations further include, prior to receiving the operation request, receiving the corpus of documents uploaded by the user device and storing the corpus of documents uploaded by the user device. The operations may also include generating the search index for the corpus of documents stored on the remote storage device based on the keywords within the corpus of documents.
- In some implementations, the operations further include, after sending the encrypted data key to the user, discarding the data key. In some examples, the user device is configured to decrypt the encrypted data key using a private associated with the public key, and the private key is inaccessible to the data processing hardware. The private key includes an asymmetric cryptographic private key. The user device may also be configured to generate, based on the decrypted data key, a search query for a keyword appearing in one or more of the documents within the corpus of documents.
- In some implementations, the operations include receiving the search query for the keyword from the user device. The operations may also include accessing, using the search query, the encrypted search index to generate a searchable encryption result associated with a list of document identifiers. Each document identifier in the list of document identifiers uniquely identifies a respective one of the documents within the corpus of documents that the keyword appears in. The operations may also include returning the searchable encryption result to the user device.
- In some examples, the list of document identifiers associated with the searchable encryption result are never revealed to the data processing hardware in plaintext. In some implementations, the searchable encryption result, when received by the user device, causes the user device to obtain the list of document identifiers in plaintext using the decrypted data key. In some examples, the operations further include, prior to encrypting the random data key with the public key, encrypting, using the random data key, the corpus of documents.
- In some implementations, the operations further include, in response to receiving the operation request, generating another random data key, the other random data key including another symmetric cryptographic key and encrypting, using the public key associated with the user, the other random data key. The data key may include an Advanced Encryption Standard Galois/Counter Mode (AES-GCM) key.
- The details of one or more implementations of the disclosure are set forth in the accompanying drawings and the description below. Other aspects, features, and advantages will be apparent from the description and drawings, and from the claims.
-
-
FIG. 1 is a schematic view of an example system for providing searchable encryption with a public key. -
FIG. 2 is a schematic view of the example system ofFIG. 1 with an encrypted search index. -
FIG. 3 is a schematic view of the example system ofFIG. 1 with a search query for a keyword. -
FIG. 4 is a flowchart of an example method for providing searchable encryption with a public key. -
FIG. 5 is a schematic view of an example computing device that may be used to implement the systems and methods described herein. - Like reference symbols in the various drawings indicate like elements.
- Nowadays, more and more users are relying on remote server-based or cloud-based storage systems for storing their data (or content). Naturally, it is important that this data is stored in a secured manner, so as to prevent unauthorised access, use or manipulation by third parties - hence, the data is normally stored in encrypted form. However, this encrypted storage ideally needs to be implemented in a way that (a) enables the authorised or originating user to access and use their data in a convenient manner whilst (b) also maintaining security (both of the data itself and of the cryptographic keys used to secure the data). For example, a user may wish to conduct a search over their data, such as a search to identify "photos of Chris", or a search to identify data based on a date (e.g. data generated on or after a certain date). This could be useful, for example, if the user is using the encrypted storage as a secured data backup and if the user then needs to retrieve a certain portion of their data in order to conduct a restore operation on their local device(s). The present invention aims to facilitate secured implementations for searchable data storage.
- In particular, the data provided by a user to a remote storage (e.g. at a server or on the cloud) may be indexed (so as to create a search index) and encrypted using a symmetric key generated at the remote storage. The remote storage may make use of a public key of the user to generate an encrypted index, in which the search index and the symmetric key are stored in encrypted form. The remote storage may then discard or delete the symmetric key. In this way: (i) only the user, who has access to the private key corresponding to the public key, can decrypt the encrypted index; (ii) thus, since the remote storage discarded the symmetric key, it is only the user who can obtain the symmetric key from the encrypted index so as to be able to decrypt encrypted content being stored at the remote storage; (iii) only the user, with their private key, can access the search index and thereby perform their desired search over their encrypted content; and (iv) this process does not rely on the user providing the remote system with the symmetric key (e.g. a password which users may have used for other purposes and which would, therefore, represent a potential security weakness). Consequently, the user's data can be stored in an encrypted form, with the user being enabled to search over their encrypted data and access selected portions of their encrypted data, with this functionality being implemented in a secured manner.
- Asymmetric cryptography (also referred to as public-key cryptography) is a popular encryption solution because two parties can securely exchange communications without the need to share a private key. In public-key cryptography, cryptographic algorithms generate a private key and a corresponding public key that produce one-way functions such that data encrypted with the public key may only be decrypted by the associated private key (and vice versa). Thus, an individual may disseminate their public key while keeping their private key secret. Anyone who wishes to communicate securely with the individual may encrypt the communication with the public key, which may then only be decrypted by the private key that the individual has kept secret.
- An alternative to asymmetric cryptography is symmetric cryptography. With symmetric cryptography, the same key is used to both encrypt and decrypt the data. This requires two parties who wish to communicate to share the same key, which may raise a number of security concerns. For example, a way must be found to share the symmetric key between the parties secretly. In another example, all data encrypted by the symmetric key will be accessible to all parties with the key, which may limit the use of the symmetric key to a single application and greatly increase the number of keys the user must maintain. Key management, in general, is a difficult and burdensome endeavor and is especially difficult for persistent symmetric keys. However, asymmetric cryptography tends to be much more computationally expensive than symmetric cryptography, especially when the plaintext is very large.
- In order to take advantage of the privacy of public-key cryptography and the efficiency of symmetric key cryptography while maintaining search capabilities over a large corpus of encrypted documents, implementations herein are directed toward a searchable encryption manager that implements hybrid encryption to efficiently encrypt a search index with a public key of a client.
- Referring to
FIG. 1 , in some implementations, anexample system 100 includes auser device 10 associated with a respective user orclient 12 and in communication with aremote system 111 via anetwork 112. Theuser device 10 may correspond to any computing device, such as a desktop workstation, a laptop workstation, or a mobile device (i.e., a smart phone). Theremote system 111 may be a single computer, multiple computers, or a distributed system (e.g., a cloud environment) having scalable / elastic computing resources 118 (e.g., data processing hardware) and/or storage resources 116 (e.g., memory hardware). A document data store 150 (i.e., a remote storage device 150) is overlain on thestorage resources 116 to allow scalable use of thestorage resources 116 by one or more of the client or computingresources 118. Optionally, thedocument data store 150 may reside on asingle storage resource 116 in a non-distributed manner. Thedocument data store 150 is configured to store a corpus ofdocuments user 12. Eachdocument 152 includes adocument identifier 154 that uniquely identifies the associated document 152 (e.g., a document name). Eachdocument 152 also includes a set ofkeywords 32. The set ofkeywords 32 includes all keywords that appear in the associatedencrypted document 152 that may be searched for by theuser 12. As used herein, adocument 152 may refer to any item uploaded onto theremote system 111 for storage within thedocument data store 150, such as, without limitation, emails, calendar events, notes, database entries, pictures, etc. - The
document data store 150 may maintain asearch index 220 based onkeywords 32 in thedocuments 152 stored on theremote storage device 150 associated with theuser 12 or associated with theencryption request 30. For example, thesearch index 220 may correlatekeywords 32 with thedocument identifiers 154 of thedocuments 152 that thekeyword 32 appears in. Thesearch index 220 may also correlate additional or other metadata with thekeywords 32. For example, dates, times, authors, etc. may also be associated with thekeywords 32. Accordingly, theuser 12 may issue a query for akeyword 32 and thedocument data store 150 may access thesearch index 220 to locate alldocuments 152 stored on thedata store 150 and associated with theuser 12 thatkeyword 32 appears in. In some examples, theremote system 111 executes a Searchable Encryption (SE)manager 120 for managing access to theencrypted documents 152 within thedata storage 150. - The
SE manager 120, in some examples, receives anoperation request 30 from the user 12 (via theuser device 10 through the network 112) requesting thatunencrypted documents 152U associated with theuser 12 and stored on theremote storage device 150 be encrypted. Theuser device 10 may have previously uploaded thedocuments 152 for storage on theremote storage device 150, and is now sending theoperation request 30 to encrypt theunencrypted documents 152U. As used herein, the "unencrypted documents 152U" refer to documents/data stored on thedocument data store 150 that theremote system 111 can freely inspect in plaintext. In other words, the "unencrypted documents 152U" may be encrypted in the sense that third parties or malicious actors are prevented from viewing in plaintext, but theremote system 111 ultimately maintains access to cryptographic keys for decrypting thedocuments 152U into plaintext. Theencryption request 30, however, includes a request to encrypt some or all of theunencrypted documents 152 associated with theuser 12 using searchable encryption so that theuser 12 can search forkeywords 32 inencrypted documents 152. That is, once encrypted, theremote system 111 or entity operating theremote system 111 no longer has access to viewing the contents of theencrypted documents 152 stored on thedocument data store 150. Theencryption request 30 may also request theSE manager 120 to delete or discard any unencrypted (i.e., plaintext) versions or copies of thedocuments 152 after encryption. That is, theencryption request 30 may indicate that theuser 12 is revoking the remote system's 111 access to any plaintext (e.g., unencrypted)documents 152U stored on the untmsteddocument data store 150, or otherwise preventing any entity operating theremote system 111 from accessingplaintext documents 152 stored on the untrusteddocument data store 150. - Referring now to
FIG. 2 , theSE manager 120 also receives, from theuser device 10, apublic key 210. TheSE manager 120 may receive thepublic key 210 and theoperation request 30 concurrently or simultaneously. Thepublic key 210 includes an asymmetric cryptographic public key associated with theuser 12. That is, thepublic key 210 is associated with aprivate key 212 kept secret by theuser 12 to implement public-key cryptography such that theSE manager 120 has access to thepublic key 210 but not theprivate key 212. Theuser device 10 may generate thepublic key 210 and the associatedprivate key 212 locally. TheSE manager 120, after receiving thepublic key 210, generates arandom data key 214. The data key 214 is a symmetric cryptographic key. For example, the data key 214 may be an Advanced Encryption Standard Galois/Counter Mode (AES-GCM) key. The data key 214 is random such that the key 214 includes a sequence of numbers that cannot be reasonably predicted better than by random chance. The data key 214 may be generated by, for example, a hardware random-number generator or a pseudo-random number generator executing on thedata processing hardware 118 of theremote system 111. - The
SE manager 120, using the data key 214, encrypts thesearch index 220. Theencrypted search index keywords 32 in thedocuments 152 stored on theremote storage device 150 associated with theuser 12 or associated with theencryption request 30. After encrypting thesearch index 220E using the random data key 214 generated by theSE manager 120, theSE manager 120 encrypts the data key 214 using thepublic key 210 received from theuser device 10. Once encrypted, the encrypted data key 214E may only be decrypted by theuser device 10 using theprivate key 212 associated with the public key 210 (i.e., the user's private key 212). Theprivate key 212 is unavailable to the SE manager 120 (and the rest of the remote system 111). - The
SE manager 120 sends the encrypted data key 214E (encrypted with the public key 210) to theuser device 10. Theuser device 10 may store the data key 214E locally at theuser device 10 or elsewhere (e.g., a local or remote third-party key management system). After sending the encrypted data key 214E to theuser device 10, theSE manager 120, in some examples, discards the data key 214 used to encrypt thesearch index 220E. That is, theSE manager 120 discards, deletes, and/or removes any unencrypted copies or versions of the data key 214 such that theSE manager 120 no longer has access to unencrypted or plaintext versions the data key 214. In this way, theremote system 111 no longer has access to viewing the contents of theencrypted search index 220E. In some examples, the encrypted data key 214E, when received by theuser device 10, causes theuser device 10 to decrypt theencrypted data 214E key using theprivate key 212, which is not accessible to theremote system 111. - In some implementations, the
SE manager 120 also encrypts thedocuments 152 with the data key 214 randomly generated by theSE manager 120. In other implementations, theSE manager 120 generates a second random data key 214 and encrypts thedocuments 152 with thesecond data key 214. In this case, theSE manager 120 also encrypts thesecond data key 214 with thepublic key 210 and sends the second data key to theuser device 10. In yet other examples, thedocuments 152 are encrypted with an asymmetric key, as the encryption of thedocuments 152 may be completely separate and independent from the encryption of thesearch index 220. Thus, theSE manager 120 may encrypt thedocuments 152 before or after encrypting thesearch index 220, or theSE manager 120 may encrypt thedocuments 152 and thesearch index 220 concurrently. Regardless of the key used, after encryption of thedocuments 152, theSE manager 120 may remove or delete any unencrypted or plaintext copies of thedocuments 152 such that theremote system 111 no longer has plaintext access to thedocuments 152 while storing theencrypted documents 152E on the untrusteddocument data store 150. - In some examples, the
user 12 may request theSE manager 120 to encrypt multiple different repositories of data, such that theSE manager 120 encrypts each repository with a different respective symmetric data key 214 generated by theSE manager 120 and then encrypts each respective symmetric data key 214 the same asymmetricpublic key 210. In this way, using the client-sideprivate key 212 associated with thepublic key 210, only trusteduser device 10 can decrypt the encryptedsymmetric data keys 214 to access the repositories of data in plaintext. For example, theuser 12 may request the creation of a new encrypted repository after a threshold period of time (e.g., six months). Theuser 12 may then generate a search query 310 (FIG. 3 ) for each repository by using the associated decrypted symmetric data key 214 (FIG. 3 ). - Referring now to
FIG. 3 , in some implementations, after sending the encrypted data key 214E to theuser 12, theSE manager 120 receives asearch query 310 for one ormore keywords 32 from theuser device 10. In some examples, theremote system 111 maintains the encrypted data key 214E and theuser 12 downloads or otherwise retrieves the encrypted data key 214E from theremote system 111 prior to generating thesearch query 310. That is, instead of sending the encrypted data key 214E to theuser 12, theSE manager 120 maintains the encrypted data key 214E for theuser 12 at theremote system 111 and removes any plaintext versions of the data key 214. The user may then retrieve the encrypted data key 214E (e.g., after authentication of the user 12) from anyuser device 10 theuser 12 has access to whenever theuser 12 desires to search thedocuments 152. - The
user device 10 uses thepublic key 212 to decrypt the encrypted data key 214E and then uses the decrypted data key 214D for generating thesearch query 310 for the one ormore keywords 32. In some implementations, theuser device 10 employs encrypted search techniques as described inU.S. Application No. 62/838,111, filed April 24, 2019 U.S. Application No. 16/712,151, filed December 12, 2019 - Thereafter, the
user device 10 sends/transmits the generatedsearch query 310 based on the decrypted data key 214D to theSE manager 310 and theSE manager 310 applies thesearch query 310 to theencrypted search index 220 to ultimately return thedocument identifiers 154 associated withdocuments 152 that thekeyword 32 appears in. After receiving thesearch query 310, theSE manager 120 accesses theencrypted search index 220E and generates aSE result 320 that theuser device 10 uses to obtain thedocument identifiers 154 associated with the keyword(s) 32 of thesearch query 310. For example, thesearch query 310 generated by theuser device 10 based on the decrypteddata key 214 allows theSE manager 120 to access theencrypted search index 220 and generate the SE result 320 based on thedocument identifiers 154 associated with the keywords(s) 32 of thesearch query 310 without revealing thedocument identifiers 154 or thekeywords 32 in plaintext to theremote storage device 150. In some examples, the SE result 320 includesencrypted document identifiers 154E that theuser device 10 may decrypt using theprivate key 212. Additionally or alternatively, the SE result 320 may include additional metadata (e.g., data, time, author, subject, etc.) that theuser device 10 may decrypt using theprivate key 212. In the example shown, theclient device 10 receives the SE result 320 from theSE manager 120 and uses theprivate key 212 to obtain thedocument identifiers 154 associated withdocuments 152 that thekeyword 32 of thesearch query 310 appears in. That is, the SE result 320 may include cryptographic hashes/functions associated with thedocument identifiers 154 and/or additional metadata, and theuser device 10 may use theprivate key 212 to construct/generate thedocument identifiers 154 and/or the additional metadata in plaintext. Eachdocument identifier 154 uniquely identifies a respective one of theencrypted documents 152 that thekeyword 32 appears in and stored on theremote storage device 150. Theuser 12 may generate the dataencryption operation request 30 and/or thesearch query 310 via a software application executing on theuser device 10. A software application (i.e., a software resource) may refer to computer software that causes a computing device to perform a task. In some examples, a software application may be referred to as an "application," an "app," or a "program." Example applications include, but are not limited to, system diagnostic applications, system management applications, system maintenance applications, word processing applications, spreadsheet applications, messaging applications, media streaming applications, social networking applications, and gaming applications. For example, the user may execute a web browser executing on theuser device 10 that communicates with theremote system 111 via thenetwork 112. -
FIG. 4 provides an example arrangement of operations for amethod 400 for encrypted search with a public key. Atblock 402, themethod 400 includes receiving, atdata processing hardware 118, anoperation request 30 from auser device 10 associated with auser 12 requesting encryption of data associated with theuser 12. The data includes a corpus ofdocuments 152U stored on aremote storage device 150 in communication with thedata processing hardware 118. Themethod 400, atblock 404, includes receiving, at thedata processing hardware 118, apublic key 210 associated with theuser 12. Thepublic key 210 is an asymmetric cryptographic public key. - At
block 406, themethod 400 includes generating, by thedata processing hardware 118, arandom data key 214. The data key 214 is a symmetric cryptographic key. Atblock 408, themethod 400 includes encrypting, by thedata processing hardware 118, using the data key 214, asearch index 220 for the corpus ofdocuments 152 based onkeywords 32 within the corpus ofdocuments 152. Themethod 400, atblock 410, includes encrypting, by thedata processing hardware 118, using thepublic key 210 associated with theuser 12, the data key 214. Atblock 412, themethod 400 includes sending, by thedata processing hardware 118, the encrypted data key 214E to theuser device 10 associated with theuser 12. In some examples, themethod 400 includes, after sending the encrypted data key 214, discarding, by thedata processing hardware 118, the data key 214. -
FIG. 5 is schematic view of anexample computing device 500 that may be used to implement the systems and methods described in this document. Thecomputing device 500 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers. The components shown here, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit implementations of the inventions described and/or claimed in this document. - The
computing device 500 includes aprocessor 510,memory 520, astorage device 530, a high-speed interface/controller 540 connecting to thememory 520 and high-speed expansion ports 550, and a low speed interface/controller 560 connecting to alow speed bus 570 and astorage device 530. Each of thecomponents processor 510 can process instructions for execution within thecomputing device 500, including instructions stored in thememory 520 or on thestorage device 530 to display graphical information for a graphical user interface (GUI) on an external input/output device, such asdisplay 580 coupled tohigh speed interface 540. In other implementations, multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory. Also,multiple computing devices 500 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system). - The
memory 520 stores information non-transitorily within thecomputing device 500. Thememory 520 may be a computer-readable medium, a volatile memory unit(s), or non-volatile memory unit(s). Thenon-transitory memory 520 may be physical devices used to store programs (e.g., sequences of instructions) or data (e.g., program state information) on a temporary or permanent basis for use by thecomputing device 500. Examples of non-volatile memory include, but are not limited to, flash memory and read-only memory (ROM) / programmable read-only memory (PROM) / erasable programmable read-only memory (EPROM) / electronically erasable programmable read-only memory (EEPROM) (e.g., typically used for firmware, such as boot programs). Examples of volatile memory include, but are not limited to, random access memory (RAM), dynamic random access memory (DRAM), static random access memory (SRAM), phase change memory (PCM) as well as disks or tapes. - The
storage device 530 is capable of providing mass storage for thecomputing device 500. In some implementations, thestorage device 530 is a computer-readable medium. In various different implementations, thestorage device 530 may be a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations. In additional implementations, a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that, when executed, perform one or more methods, such as those described above. The information carrier is a computer- or machine-readable medium, such as thememory 520, thestorage device 530, or memory onprocessor 510. - The
high speed controller 540 manages bandwidth-intensive operations for thecomputing device 500, while thelow speed controller 560 manages lower bandwidth-intensive operations. Such allocation of duties is exemplary only. In some implementations, the high-speed controller 540 is coupled to thememory 520, the display 580 (e.g., through a graphics processor or accelerator), and to the high-speed expansion ports 550, which may accept various expansion cards (not shown). In some implementations, the low-speed controller 560 is coupled to thestorage device 530 and a low-speed expansion port 590. The low-speed expansion port 590, which may include various communication ports (e.g., USB, Bluetooth, Ethernet, wireless Ethernet), may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter. - The
computing device 500 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as astandard server 500a or multiple times in a group ofsuch servers 500a, as alaptop computer 500b, or as part of arack server system 500c. - Various implementations of the systems and techniques described herein can be realized in digital electronic and/or optical circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- These computer programs (also known as programs, software, software applications or code) include machine instructions for a programmable processor, and can be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly/machine language. As used herein, the terms "machine-readable medium" and "computer-readable medium" refer to any computer program product, non-transitory computer readable medium, apparatus and/or device (e.g., magnetic discs, optical disks, memory, Programmable Logic Devices (PLDs)) used to provide machine instructions and/or data to a programmable processor, including a machine-readable medium that receives machine instructions as a machine-readable signal. The term "machine-readable signal" refers to any signal used to provide machine instructions and/or data to a programmable processor.
- The processes and logic flows described in this specification can be performed by one or more programmable processors, also referred to as data processing hardware, executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit). Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for performing instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks. However, a computer need not have such devices. Computer readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto optical disks; and CD ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- To provide for interaction with a user, one or more aspects of the disclosure can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube), LCD (liquid crystal display) monitor, or touch screen for displaying information to the user and optionally a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other kinds of devices can be used to provide interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input. In addition, a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a web browser on a user's client device in response to requests received from the web browser.
- A number of implementations have been described. Nevertheless, it will be understood that various modifications may be made without departing from the spirit and scope of the disclosure. Accordingly, other implementations are within the scope of the following claims.
- Examples are set out in the following list of numbered clauses:
- 1. A method (400) comprising:
- receiving, at data processing hardware (118), an operation request (30) from a user device (10) associated with a user (12), the operation request (30) requesting encryption of data associated with the user (12), the data comprising a corpus of documents (152) stored on a remote storage device (150) in communication with the data processing hardware (118);
- receiving, at the data processing hardware (118), a public key (210) associated with the user (12), the public key (210) comprising an asymmetric cryptographic public key;
- generating, by the data processing hardware (118), a random data key (214), the data key (214) comprising a symmetric cryptographic key;
- encrypting, by the data processing hardware (118), using the data key (214), a search index (220) for the corpus of documents (152) based on keywords (32) within the corpus of documents (152);
- encrypting, by the data processing hardware (118), using the public key (210) associated with the user (12), the data key (214); and
- sending, by the data processing hardware (118), the encrypted data key (214E) to the user device (10) associated with the user (12).
- 2. The method (400) of clause 1, wherein receiving the public key (210) associated with the user (12) comprises receiving the public key (210) from the user device (10) concurrently with receiving the operation request (30).
- 3. The method (400) of clause 1 or 2, further comprising, prior to receiving the operation request (30):
- receiving, at the data processing hardware (118), the corpus of documents (152) uploaded by the user device (10);
- storing, by the data processing hardware (118), the corpus of documents (152) on the remote storage device (150); and
- generating, by the data processing hardware (118), the search index (220) for the corpus of documents (152) stored on the remote storage device (150) based on the keywords (32) within the corpus of documents (152).
- 4. The method (400) of any of clauses 1-3, further comprising, after sending the encrypted data key (214E) to the user (12), discarding, by the data processing hardware (118), the data key (214).
- 5. The method (400) of any of clauses 1-4, wherein the user device (10) is configured to:
- decrypt the encrypted data key (214E) using a private key (212) associated with the public key (210), the private key (212) comprising an asymmetric cryptographic private key inaccessible to the data processing hardware (118); and
- generate, based on the decrypted data key (214D), a search query (310) for a keyword (32) appearing in one or more of the documents (152) within the corpus of documents (152).
- 6. The method (400) of clause 5, further comprising:
- receiving, at the data processing hardware (118), the search query (310) for the keyword (32) from the user device (10);
- accessing, by the data processing hardware (118), using the search query (310), the encrypted search index (220E) to generate a searchable encryption result (320) associated with a list of document identifiers (154), each document identifier (154) in the list of document identifiers (154) uniquely identifying a respective one of the documents (152) within the corpus of documents (152) that the keyword (32) appears in; and
- returning, by the data processing hardware (118), the searchable encryption result (320) to the user device (10).
- 7. The method (400) of clause 6, wherein the list of document identifiers (154) associated with the searchable encryption result (320) are never revealed to the data processing hardware (118) in plaintext.
- 8. The method (400) of clause 6 or 7, wherein the searchable encryption result (320), when received by the user device (10), causes the user device (10) to obtain the list of document identifiers (154) in plaintext using the decrypted data key (214D).
- 9. The method (400) of any of clauses 1-8, further comprising, prior to encrypting the random data key (214) with the public key (210), encrypting, by the data processing hardware (118), using the random data key (214), the corpus of documents (152).
- 10. The method (400) of any of clauses 1-9, further comprising, in response to receiving the operation request (30):
- generating, by the data processing hardware (118), another random data key (214), the other random data key (214) comprising another symmetric cryptographic key; and
- encrypting, by the data processing hardware (118), using the public key (210) associated with the user (12), the other random data key (214).
- 11. The method (400) of any of clauses 1-10, wherein the data key (214) comprises an Advanced Encryption Standard Galois/Counter Mode (AES-GCM) key.
- 12. A system (100) comprising:
- data processing hardware (118); and
- memory hardware (116) in communication with the data processing hardware (118), the memory hardware (116) storing instructions that when executed on the data processing hardware (118) cause the data processing hardware (118) to perform operations comprising:
- receiving an operation request (30) from a user device (10) associated with a user (12), the operation request (30) requesting encryption of data associated with the user (12), the data comprising a corpus of documents (152) stored on a remote storage device (150) in communication with the data processing hardware (118);
- receiving a public key (210) associated with the user (12), the public key (210) comprising an asymmetric cryptographic public key;
- generating a random data key (214), the data key (214) comprising a symmetric cryptographic key;
- encrypting using the data key (214), a search index (220) for the corpus of documents (152) based on keywords (32) within the corpus of documents (152);
- encrypting using the public key (210) associated with the user (12), the data key (214); and
- sending the encrypted data key (214E) to the user device (10) associated with the user (12).
- 13. The system (100) of
dause 12, wherein receiving the public key (210) associated with the user (12) comprises receiving the public key (210) from the user device (10) concurrently with receiving the operation request (30). - 14. The system (100) of
clause 12 or 13, further comprising, prior to receiving the operation request (30):- receiving the corpus of documents (152) uploaded by the user device (10);
- storing the corpus of documents (152) on the remote storage device (150); and
- generating the search index (220) for the corpus of documents (152) stored on the remote storage device (150) based on the keywords (32) within the corpus of documents (152).
- 15. The system (100) of any of clauses 12-14, further comprising, after sending the encrypted data key (214E) to the user (12), discarding, by the data processing hardware (118), the data key (214).
- 16. The system (100) of any of clauses 12-15, wherein the user device (10) is configured to:
- decrypt the encrypted data key (214E) using a private key (212) associated with the public key (210), the private key (212) comprising an asymmetric cryptographic private key inaccessible to the data processing hardware (118); and
- generate, based on the decrypted data key (214D), a search query (310) for a keyword (32) appearing in one or more of the documents (152) within the corpus of documents (152).
- 17. The system (100) of clause 16, further comprising:
- receiving the search query (310) for the keyword (32) from the user device (10);
- accessing using the search query (310), the encrypted search index (220E) to generate a searchable encryption result (320) associated with a list of document identifiers (154), each document identifier (154) in the list of document identifiers (154) uniquely identifying a respective one of the documents (152) within the corpus of documents (152) that the keyword (32) appears in; and
- returning, by the data processing hardware (118), the searchable encryption result (320) to the user device (10).
- 18. The system (100) of clause 17, wherein the list of document identifiers (154) associated with the searchable encryption result (320) are never revealed to the data processing hardware (118) in plaintext.
- 19. The system (100) of clause 17 or 18, wherein the searchable encryption result (320), when received by the user device (10), causes the user device (10) to obtain the list of document identifiers (154) in plaintext using the decrypted data key (214D).
- 20. The system (100) of any of clauses 12-19, further comprising, prior to encrypting the random data key (214) with the public key (210), encrypting using the random data key (214), the corpus of documents (152).
- 21. The system (100) of any of
clauses 12---20, further comprising, in response to receiving the operation request (30):- generating another random data key (214), the other random data key (214) comprising another symmetric cryptographic key; and
- encrypting using the public key (210) associated with the user (12), the other random data key (214).
- 22. The system (100) of any of clauses 12-21, wherein the data key (214) comprises an Advanced Encryption Standard Galois/Counter Mode (AES-GCM) key.
Claims (11)
- A computer-implemented method when executed on data processing hardware causes the data processing hardware to perform operations comprising:receiving an operation request from a user device associated with a user, the operation request requesting encryption of data associated with the user, the data stored on a remote storage device in communication with the data processing hardware;receiving a key associated with the user;generating a random data key, the random data key comprising a symmetric cryptographic key;encrypting, using the random data key, the data associated with the user;encrypting, using the key associated with the user, the random data key; anddiscarding the data key.
- The method of claim 1, wherein the key associated with the user comprises an asymmetric cryptographic public key.
- The method of claim 2, wherein receiving the key associated with the user comprises receiving the asymmetric cryptographic public key from the user device concurrently with the operation request.
- The method of any preceding claim, wherein the operations further comprise sending the encrypted random data key to the user device associated with the user.
- The method of claim 4, wherein the user device is configured to decrypt the encrypted random data key using a private key associated with the key associated with the user, the private key comprising an asymmetric cryptographic private key inaccessible to the data processing hardware.
- The method of any preceding claim, wherein the data associated with the user comprises a corpus of documents stored on a remote storage device in communication with the data processing hardware.
- The method of claim 6, wherein the operations further comprise, prior to receiving the operation request:receiving the corpus of documents uploaded by the user device;storing the corpus of documents on the remote storage device; andgenerating a search index for the corpus of documents stored on the remote storage device based on keywords within the corpus of documents.
- The method of claim 6, wherein the operations further comprise, prior to encrypting the random data key with the key associated with the user, encrypting, using the random data key, the corpus of documents.
- The method of any preceding claim, wherein the operations further comprise, in response to receiving the operation request:generating a second random data key, the second random data key comprising a second symmetric cryptographic key; andencrypting using the key associated with the user, the second random data key.
- The method of any preceding claim, wherein the random data key comprises an Advanced Encryption Standard Galois/Counter Mode (AES-GCM) key.
- A system comprising:data processing hardware; andmemory hardware in communication with the data processing hardware, the memory hardware storing instructions that when executed on the data processing hardware cause the data processing hardware to perform the method of any preceding claim.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US16/712,487 US11902425B2 (en) | 2019-12-12 | 2019-12-12 | Encrypted search with a public key |
PCT/US2020/064694 WO2021119542A1 (en) | 2019-12-12 | 2020-12-11 | Encrypted search with a public key |
EP20845248.2A EP4073673B1 (en) | 2019-12-12 | 2020-12-11 | Encrypted search with a public key |
Related Parent Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP20845248.2A Division EP4073673B1 (en) | 2019-12-12 | 2020-12-11 | Encrypted search with a public key |
EP20845248.2A Division-Into EP4073673B1 (en) | 2019-12-12 | 2020-12-11 | Encrypted search with a public key |
Publications (2)
Publication Number | Publication Date |
---|---|
EP4235473A2 true EP4235473A2 (en) | 2023-08-30 |
EP4235473A3 EP4235473A3 (en) | 2023-09-27 |
Family
ID=74195098
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP20845248.2A Active EP4073673B1 (en) | 2019-12-12 | 2020-12-11 | Encrypted search with a public key |
EP23172647.2A Pending EP4235473A3 (en) | 2019-12-12 | 2020-12-11 | Encrypted search with a public key |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP20845248.2A Active EP4073673B1 (en) | 2019-12-12 | 2020-12-11 | Encrypted search with a public key |
Country Status (3)
Country | Link |
---|---|
US (2) | US11902425B2 (en) |
EP (2) | EP4073673B1 (en) |
WO (1) | WO2021119542A1 (en) |
Families Citing this family (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11250151B2 (en) * | 2020-05-05 | 2022-02-15 | Google Llc | Encrypted search over encrypted data with reduced volume leakage |
US20220085983A1 (en) * | 2020-09-14 | 2022-03-17 | Hewlett Packard Enterprise Development Lp | Encryption keys from storage systems |
CN113886418A (en) * | 2021-09-28 | 2022-01-04 | 支付宝(杭州)信息技术有限公司 | Data processing method and device, electronic equipment and machine-readable storage medium |
CN116366283B (en) * | 2023-02-07 | 2023-08-18 | 南京模砾半导体有限责任公司 | File secure transmission method based on symmetric encryption |
Family Cites Families (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060010323A1 (en) * | 2004-07-07 | 2006-01-12 | Xerox Corporation | Method for a repository to provide access to a document, and a repository arranged in accordance with the same method |
US8442994B1 (en) | 2007-09-14 | 2013-05-14 | Google Inc. | Custom search index data security |
US9684710B2 (en) | 2009-05-28 | 2017-06-20 | Microsoft Technology Licensing, Llc | Extending random number summation as an order-preserving encryption scheme |
US8909943B1 (en) | 2011-09-06 | 2014-12-09 | Google Inc. | Verifying identity |
CN105450387A (en) | 2014-08-20 | 2016-03-30 | 江苏威盾网络科技有限公司 | Network distributed storage method based on hybrid encryption |
JP6419633B2 (en) * | 2015-04-09 | 2018-11-07 | 株式会社日立ソリューションズ | Search system |
US9894042B2 (en) | 2015-07-24 | 2018-02-13 | Skyhigh Networks, Inc. | Searchable encryption enabling encrypted search based on document type |
US9633219B2 (en) | 2015-08-26 | 2017-04-25 | International Business Machines Corporation | Providing secure indexes for searching encrypted data |
GB2538022B (en) * | 2016-08-20 | 2018-07-11 | PQ Solutions Ltd | Multiple secrets in quorum based data processing |
US10275611B1 (en) * | 2017-08-16 | 2019-04-30 | OverNest, Inc. | Methods and apparatus for sharing and searching encrypted data |
EP3605373B1 (en) * | 2018-07-30 | 2023-06-07 | Blink.ing doo | Authentication method for a client over a network |
CN109522681A (en) | 2018-09-19 | 2019-03-26 | 北京非对称区块链科技有限公司 | Digital content really weighs method, apparatus and storage medium |
-
2019
- 2019-12-12 US US16/712,487 patent/US11902425B2/en active Active
-
2020
- 2020-12-11 EP EP20845248.2A patent/EP4073673B1/en active Active
- 2020-12-11 WO PCT/US2020/064694 patent/WO2021119542A1/en unknown
- 2020-12-11 EP EP23172647.2A patent/EP4235473A3/en active Pending
-
2023
- 2023-04-18 US US18/302,108 patent/US20230254126A1/en active Pending
Also Published As
Publication number | Publication date |
---|---|
US20230254126A1 (en) | 2023-08-10 |
EP4235473A3 (en) | 2023-09-27 |
US20210184840A1 (en) | 2021-06-17 |
US11902425B2 (en) | 2024-02-13 |
WO2021119542A1 (en) | 2021-06-17 |
EP4073673A1 (en) | 2022-10-19 |
EP4073673B1 (en) | 2023-07-19 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
EP4235473A2 (en) | Encrypted search with a public key | |
Samanthula et al. | A secure data sharing and query processing framework via federation of cloud computing | |
Salam et al. | Implementation of searchable symmetric encryption for privacy-preserving keyword search on cloud storage | |
CN107077469B (en) | Server device, search system, terminal device, and search method | |
US20170262546A1 (en) | Key search token for encrypted data | |
US11494508B2 (en) | Secrets as a service | |
US10284535B2 (en) | Secure database | |
Lee et al. | A secure index management scheme for providing data sharing in cloud storage | |
Sangeetha et al. | Multi keyword searchable attribute based encryption for efficient retrieval of health Records in Cloud | |
JP7271800B2 (en) | Encrypted search for encrypted data with reduced volume leakage | |
CN115053224B (en) | Encryption search without zero day leakage | |
KR101140576B1 (en) | Multi?user search system and method of encrypted document | |
WO2018212794A1 (en) | Encrypted search cloud service with cryptographic sharing | |
Sreekumari | Privacy-preserving keyword search schemes over encrypted cloud data: an extensive analysis | |
US11621828B1 (en) | Privately querying a database with private set membership using succinct filters | |
Kapil et al. | Big data security challenges: Hadoop perspective | |
US9183403B2 (en) | Key retrieval | |
Sharmila | Secure retrieval of files using homomorphic encryption for cloud computing | |
Ananthi et al. | Secured Multikeyword Search over Encrypted Cloud Data Based On Quality and Usability | |
Shiba Sampat Kale et al. | Privacy Preserving Multi-Keyword Ranked Search with Anonymous ID Assignment over Encrypted Cloud Data | |
KR20230058314A (en) | Multi-key information retrieval | |
Raza et al. | Secure NoSQL Over Cloud Using Data Decomposition and Queryable Encryption | |
Veerappa | Protection Saving Positioned Multi-Keyword Scan for Different Information in Distributed Computing | |
Vincent et al. | Security and Privacy Ensured Data Search Model for Encrypted Storage in Cloud Environment. | |
Priya Dharshini et al. | DELAY-OPTIMAL TASK OFFLOADING FOR UAV-ENABLED EDGE-CLOUD COMPUTING SYSTEMS |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE APPLICATION HAS BEEN PUBLISHED |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R079Free format text: PREVIOUS MAIN CLASS: G06F0021600000Ipc: G06F0021620000 |
|
PUAL | Search report despatched |
Free format text: ORIGINAL CODE: 0009013 |
|
AC | Divisional application: reference to earlier application |
Ref document number: 4073673Country of ref document: EPKind code of ref document: P |
|
AK | Designated contracting states |
Kind code of ref document: A2Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
AK | Designated contracting states |
Kind code of ref document: A3Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: H04L 67/1097 20220101ALI20230824BHEPIpc: H04L 9/40 20220101ALI20230824BHEPIpc: G06F 21/60 20130101ALI20230824BHEPIpc: G06F 21/62 20130101AFI20230824BHEP |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: REQUEST FOR EXAMINATION WAS MADE |
|
17P | Request for examination filed |
Effective date: 20240220 |
|
RBV | Designated contracting states (corrected) |
Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
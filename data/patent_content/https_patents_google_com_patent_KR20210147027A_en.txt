KR20210147027A - Proactive caching of assistant action content on client devices to enable on-device resolution of speech or input utterances - Google Patents
Proactive caching of assistant action content on client devices to enable on-device resolution of speech or input utterances Download PDFInfo
- Publication number
- KR20210147027A KR20210147027A KR1020217035835A KR20217035835A KR20210147027A KR 20210147027 A KR20210147027 A KR 20210147027A KR 1020217035835 A KR1020217035835 A KR 1020217035835A KR 20217035835 A KR20217035835 A KR 20217035835A KR 20210147027 A KR20210147027 A KR 20210147027A
- Authority
- KR
- South Korea
- Prior art keywords
- assistant
- proactive
- cache
- cache entry
- client device
- Prior art date
Links
- 230000009471 action Effects 0.000 title claims description 189
- 238000000034 method Methods 0.000 claims abstract description 122
- 230000004044 response Effects 0.000 claims abstract description 86
- 230000003993 interaction Effects 0.000 claims description 14
- 230000008859 change Effects 0.000 claims description 7
- 230000008520 organization Effects 0.000 claims description 2
- 238000004590 computer program Methods 0.000 claims 1
- 230000000875 corresponding effect Effects 0.000 description 43
- 238000012545 processing Methods 0.000 description 15
- 230000000007 visual effect Effects 0.000 description 14
- 230000008569 process Effects 0.000 description 12
- 238000010586 diagram Methods 0.000 description 11
- 230000002093 peripheral effect Effects 0.000 description 10
- 230000015654 memory Effects 0.000 description 8
- 238000004891 communication Methods 0.000 description 7
- 241001148659 Panicum dichotomiflorum Species 0.000 description 6
- 230000000694 effects Effects 0.000 description 6
- 238000001514 detection method Methods 0.000 description 5
- 230000006870 function Effects 0.000 description 5
- 238000009877 rendering Methods 0.000 description 5
- 230000004913 activation Effects 0.000 description 3
- 238000013459 approach Methods 0.000 description 3
- 230000002452 interceptive effect Effects 0.000 description 3
- 238000010801 machine learning Methods 0.000 description 3
- 230000003068 static effect Effects 0.000 description 3
- 241000282412 Homo Species 0.000 description 2
- 230000003213 activating effect Effects 0.000 description 2
- 230000009118 appropriate response Effects 0.000 description 2
- 239000003795 chemical substances by application Substances 0.000 description 2
- 238000013507 mapping Methods 0.000 description 2
- 230000007246 mechanism Effects 0.000 description 2
- 235000013550 pizza Nutrition 0.000 description 2
- 238000012546 transfer Methods 0.000 description 2
- 230000003190 augmentative effect Effects 0.000 description 1
- 230000008901 benefit Effects 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 230000001143 conditioned effect Effects 0.000 description 1
- 230000001419 dependent effect Effects 0.000 description 1
- 239000011521 glass Substances 0.000 description 1
- 230000001976 improved effect Effects 0.000 description 1
- 230000000977 initiatory effect Effects 0.000 description 1
- 238000009434 installation Methods 0.000 description 1
- 230000001788 irregular Effects 0.000 description 1
- 238000002955 isolation Methods 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 230000007774 longterm Effects 0.000 description 1
- 230000000116 mitigating effect Effects 0.000 description 1
- 238000012544 monitoring process Methods 0.000 description 1
- 230000000877 morphologic effect Effects 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 230000002085 persistent effect Effects 0.000 description 1
- 230000009467 reduction Effects 0.000 description 1
- 235000013580 sausages Nutrition 0.000 description 1
- 238000004904 shortening Methods 0.000 description 1
- 230000026676 system process Effects 0.000 description 1
- 210000003813 thumb Anatomy 0.000 description 1
- 238000013518 transcription Methods 0.000 description 1
- 230000035897 transcription Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/22—Procedures used during a speech recognition process, e.g. man-machine dialogue
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/16—Sound input; Sound output
- G06F3/165—Management of the audio stream, e.g. setting of volume, audio stream path
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/16—Sound input; Sound output
- G06F3/167—Audio in a user interface, e.g. using voice commands for navigating, audio feedback
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/08—Speech classification or search
- G10L15/18—Speech classification or search using natural language modelling
- G10L15/1815—Semantic context, e.g. disambiguation of the recognition hypotheses based on word meaning
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/28—Constructional details of speech recognition systems
- G10L15/30—Distributed recognition, e.g. in client-server systems, for mobile phones or network applications
-
- H04L67/2842—
-
- H04L67/42—
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/56—Provisioning of proxy services
- H04L67/568—Storing data temporarily at an intermediate stage, e.g. caching
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/22—Procedures used during a speech recognition process, e.g. man-machine dialogue
- G10L2015/223—Execution procedure of a spoken command
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
Abstract
구현은 프로액티브 어시스턴트 캐시 엔트리의 프로액티브 캐시와 프로액티브 어시스턴트 캐시 엔트리의 온-디바이스 활용을 통해 클라이언트 장치에서 로컬적으로, 자동 어시스턴트로부터 응답을 얻는 데 필요한 시간을 줄일 수 있다. 상이한 프로액티브 캐시 엔트리가 상이한 클라이언트 장치에 제공될 수 있고, 다양한 구현은 어떤 프로액티브 캐시 엔트리가 어떤 클라이언트 장치에 제공할지를 결정하는데 이용되는 기술(들)과 연관된다. 그러한 구현들 중 일부에서, 소정의 클라이언트 장치에 제공할 프로액티브 캐시 엔트리를 결정할 때(선제적으로 또는 요청에 응답하여), 원격 시스템은 후보 프로액티브 캐시 엔트리의 슈퍼세트에서 소정의 클라이언트 장치에 제공하기 위한 캐시 엔트리의 서브세트를 선택한다. Implementations may reduce the time required to obtain a response from an automated assistant, locally at the client device, through Proactive Cache of Proactive Assistant Cache entries and on-device utilization of Proactive Assistant Cache entries. Different Proactive Cache entries may be provided to different client devices, and various implementations are associated with the technique(s) used to determine which Proactive Cache entries to provide to which client devices. In some such implementations, when determining (either preemptively or in response to a request) a Proactive Cache entry to provide to a given client device, the remote system provides it to the given client device from a superset of candidate Proactive Cache entries. Select a subset of cache entries for
Description
본 명세서서는 음성 또는 입력된 발화의 온-디바이스 레졸루션을 가능하게 하기 위해 클라이언트 장치에서 어시스턴트 액션 콘텐츠의 프로액티브 캐시에 관한 것이다.This disclosure relates to a proactive cache of assistant action content on a client device to enable on-device resolution of spoken or input utterances.
인간은 여기에서 "자동 어시스턴트"("디지털 에이전트", "대화형 개인 어시스턴트", "지능형 개인 어시스턴트", "어시스턴트 애플리케이션", "대화 에이전트"라고도 함)라고 하는 대화형 소프트웨어 애플리케이션을 사용하여 인간 대 컴퓨터 대화에 참여할 수 있다. 예를 들어, 인간(자동 어시스턴트와 상호 작용할 때 "사용자"라고 부를 수 있음)은 음성 자연 언어 입력(즉, 음성 발화)을 사용하여 자동 어시스턴트에 명령 및/또는 요청을 제공할 수 있으며, 일부 경우에는 텍스트로 변환된 다음 처리되거나 텍스트(예: 타이핑된) 자연어 입력(즉, 입력된 발화)을 제공함으로써 처리될 수 있다. 자동 어시스턴트는 청각 및/또는 시각적 사용자 인터페이스 출력을 포함할 수 있는 반응형 사용자 인터페이스 출력을 제공하여 요청에 응답한다. Humans use interactive software applications referred to herein as “automated assistants” (also referred to herein as “digital agents”, “interactive personal assistants”, “intelligent personal assistants”, “assistant applications”, “conversation agents”) to interact with humans Participate in computer conversations. For example, a human (which may be referred to as a "user" when interacting with an automated assistant) may use spoken natural language input (i.e., spoken utterance) to provide commands and/or requests to an automated assistant, in some cases can be converted to text and then processed or processed by providing text (eg typed) natural language input (ie typed utterance). The automated assistant responds to the request by providing a responsive user interface output that may include audible and/or visual user interface output.
위에서 언급한 바와 같이 많은 자동 어시스턴트는 음성을 통해 상호 작용하도록 구성된다. 사용자는 사용자가 제공하는 데 관심이 있는 정보 및/또는 사용자가 수행하는 데 관심이 있는 액션을 구두로 나타내는 음성 발화를 통해 클라이언트 장치의 자동 어시스턴트 인터페이스에 쿼리 및/또는 명령을 제출할 수 있다. 일반적으로 발화는 클라이언트 장치의 마이크로폰에 의해 검출되고 오디오 데이터로 캡처된다. 오디오 데이터는 추가 처리를 위해 원격 시스템으로 전송된다. 원격 시스템은 오디오 데이터를 처리하여 적절한 응답을 결정하고 응답을 클라이언트 장치로 전송한다.As mentioned above, many automated assistants are configured to interact via voice. The user may submit queries and/or commands to the automated assistant interface of the client device via spoken utterances verbally indicating information the user is interested in providing and/or an action the user is interested in performing. Typically, utterances are detected by the microphone of the client device and captured as audio data. The audio data is sent to a remote system for further processing. The remote system processes the audio data to determine an appropriate response and sends the response to the client device.
원격 시스템의 컴포넌트는 오디오 데이터를 처리하는 데 상당한 컴퓨팅 리소스를 할애할 수 있으므로 클라이언트 장치 내에서 로컬로 구현될 수 있는 것보다 더 복잡한 음성 인식 및 의미론적 분석 기능이 구현될 수 있다. 그러나 클라이언트-서버 접근 방식에서는 음성 입력을 처리할 때 클라이언트가 온라인 상태(즉, 원격 시스템과 통신 중)여야 한다. 다양한 상황에서, 지속적인 온라인 연결은 항상 모든 위치에서 보장되지 않을 수 있으므로 클라이언트-서버 음성 기반 사용자 인터페이스는 해당 장치가 "오프라인"일 때마다 클라이언트 장치에서 비활성화되어 온라인 서비스에 연결되지 않을 수 있다. 또한 클라이언트-서버 접근 방식은 클라이언트에서 원격 시스템의 컴포넌트로 고대역폭 오디오 데이터를 전송해야 하므로 상당한 대역폭을 소비할 수 있다. 대역폭 소비는 원격 시스템이 많은 클라이언트 장치의 요청을 처리하는 일반적인 상황에서 증폭된다. 또한, 클라이언트-서버 접근 방식은 사용자에 대한 응답을 프로비저닝할 때 상당한 대기 시간을 나타낼 수 있으며, 이로 인해 음성 기반 사용자-클라이언트 상호 작용이 길어지고 클라이언트 장치의 리소스가 장기간 동안 활용될 수 있다. Components of the remote system can devote significant computing resources to processing audio data, so that more complex speech recognition and semantic analysis functions can be implemented than can be implemented locally within the client device. However, the client-server approach requires the client to be online (ie communicating with a remote system) when processing voice input. In various situations, a persistent online connection may not always be guaranteed in all locations, so a client-server voice-based user interface may be disabled on a client device whenever that device is "offline", resulting in no connection to online services. In addition, the client-server approach can consume significant bandwidth as it requires the transfer of high-bandwidth audio data from the client to a component on the remote system. Bandwidth consumption is amplified in the typical situation where the remote system handles requests from many client devices. Additionally, a client-server approach can introduce significant latency in provisioning responses to users, which can result in long voice-based user-client interactions and long-term utilization of the client device's resources.
본 명세서에 개시된 구현은 프로액티브 어시스턴트 캐시 엔트리의 프로액티브 캐싱(caching)을 통해, 프로액티브 어시스턴트 캐시 엔트리의 온-디바이스 활용을 통해, 자동 어시스턴트로부터 응답을 얻는 데 필요한 시간을 줄이는 역할을 한다.Implementations disclosed herein serve to reduce the time required to obtain a response from an automated assistant, through proactive caching of Proactive Assistant cache entries, and through on-device utilization of Proactive Assistant cache entries.
다양한 구현에서, 클라이언트 장치에서 작동하는 자동 어시스턴트 애플리케이션은 온-디바이스 음성 처리(프로세싱)를 사용하여 로컬에서 검출된 오디오 데이터를 처리하고 오디오 데이터에 의해 캡처된 음성 발화(예: 사용자 인터페이스 입력)에 해당하는 인식된 텍스트를 생성할 수 있다. 자동 어시스턴트 애플리케이션은 음성 발화에 대응하는 로컬에 저장된 프로액티브 캐시 엔트리를 식별하기 위해 온-디바이스 NLU에 의해 생성된 인식된 텍스트 및/또는 자연어 이해(natural language understanding: NLU) 데이터를 추가로 활용할 수 있다. 식별은 입력된 구 또는 발화와 같은 다른 사용자 인터페이스 입력을 기반으로 수행될 수도 있다. 로컬적으로 저장된 프로액티브 캐시 엔트리는 인식된 텍스트 및/또는 NLU 데이터(타이핑된 발화 또는 음성 발화)가 프로액티브 캐시 엔트리의 어시스턴트 요청 파라미터와 매칭하는지 결정함으로써 식별될 수 있다. 자동(자동화된) 어시스턴트 애플리케이션은 매칭 결정에 응답하여 식별된 프로액티브 캐시 엔트리의 액션 콘텐츠를 사용하여 발화에 적절하게 응답할 수 있다. 자동 어시스턴트 애플리케이션의 응답은, 예를 들어, 액션 콘텐츠에 포함된 딥링크를 실행하는 것; 콘텐츠에 포함된 텍스트, 그래픽 및/또는 오디오(또는 온-디바이스 음성 합성기를 사용하여 응답에서 변환된 오디오 데이터)를 렌더링하는 것; 및/또는 주변 장치(들)를 제어하기 위해 주변 장치(들)에 명령을 전송(예를 들어, WiFi 및/또는 블루투스를 통해)하는 것을 포함할 수 있다. 또한, 자동 어시스턴트 애플리케이션의 응답은 선택적으로 서버와의 실시간 통신 없이 제공될 수 있거나 적어도 서버의 응답을 기다릴 필요가 없어 응답이 제공될 수 있는 시간을 더욱 단축할 수 있다. In various implementations, automated assistant applications running on the client device use on-device speech processing (processing) to process locally detected audio data and correspond to speech utterances captured by the audio data (such as user interface input). A recognized text can be generated. The automated assistant application may further utilize recognized text and/or natural language understanding (NLU) data generated by the on-device NLU to identify a locally stored proactive cache entry corresponding to a spoken utterance. . Identification may be performed based on inputted phrases or other user interface inputs, such as utterances. A locally stored Proactive Cache entry may be identified by determining whether recognized text and/or NLU data (typed utterance or spoken utterance) matches an assistant request parameter of the Proactive Cache entry. The automated (automated) assistant application may respond appropriately to the utterance using the action content of the identified proactive cache entry in response to the match determination. The automatic assistant application's response may include, for example, executing a deep link included in the action content; rendering text, graphics, and/or audio (or audio data transformed in the response using an on-device speech synthesizer) contained in the content; and/or sending commands (eg, via WiFi and/or Bluetooth) to the peripheral device(s) to control the peripheral device(s). Further, the response of the automated assistant application may optionally be provided without real-time communication with the server, or at least there is no need to wait for a response from the server, further shortening the time the response may be provided.
여기에 더 자세히 설명된 바와 같이, 클라이언트 장치의 로컬 프로액티브 캐시에 저장된 하나 이상의(예: 모든) 프로액티브 캐시 엔트리는 사용자 입력 기반 클라이언트 장치에서 최근에 요청된 것에 응답하여 프로액티브 캐시에 저장되지 않는다는 점에서 "프로액티브(proactive)"이다. 오히려, 프로액티브 캐시 엔트리는 프로액티브 캐시의 어시스턴트 요청 파라미터를 준수하는 사용자 입력이 수신되지 않았음에도 불구하고, 서버와 같은 원격 시스템에서 프로액티브으로 미리 가져온 다음(프리패치) 프로액티브 캐시에 저장할 수 있다.As detailed herein, one or more (eg, all) Proactive Cache entries stored in the client device's local Proactive Cache are not stored in the Proactive Cache in response to a recent request from the client device based on user input. It is "proactive" in that sense. Rather, a Proactive Cache entry can be prefetched (prefetched) into Proactive from a remote system, such as a server, and then stored in the Proactive Cache, even though no user input has been received that conforms to the Proactive Cache's assistant request parameters. .
상이한 프로액티브 캐시 엔트리가 상이한 클라이언트 장치에 제공될 수 있고, 여기에 개시된 다양한 구현은 어느 프로액티브 캐시 엔트리가 어느 클라이언트 장치에 제공할지를 결정하는데 있어서 원격 시스템에 의해 활용되는 기술(들)에 관한 것이다. 이러한 구현 중 일부에서, 소정의 클라이언트 장치에 제공할(선제적으로 또는 요청에 대한 응답으로) 프로액티브 캐시 엔트리를 결정할 때, 원격 시스템은 후보 프로액티브 캐시 엔트리의 수퍼세트로부터, 소정의 클라이언트 장치에 제공하기 위한 캐시 엔트리의 서브세트를 선택한다. 소정의 클라이언트 장치의 속성(들) 및/또는 프로액티브 캐시 엔트리의 하나 이상의 속성을 고려하는 고려사항을 포함하여, 서브세트를 선택하는 데 다양한 고려사항이 활용될 수 있다. 클라이언트 장치의/에 대한 속성(들)은 예를 들어 운영 체제의 버전 수준과 연관된 데이터, 클라이언트 장치에 애플리케이션이 설치된 클라이언트 장치의 모델(그리고 어떤 버전), 클라이언트 장치 사용자의 검색 이력, 클라이언트 장치의 위치 이력, 클라이언트 장치의 전력 모드 또는 배터리 잔량 등과 같은 클라이언트 장치의 작동과 연관된 모든 데이터를 포함할 수 있다. Different Proactive Cache entries may be provided to different client devices, and various implementations disclosed herein relate to the technique(s) utilized by the remote system in determining which Proactive Cache entry to provide to which client device. In some of these implementations, when determining which Proactive Cache entries to provide (either preemptively or in response to a request) to a given client device, the remote system from a superset of candidate Proactive Cache entries to the given client device. Select a subset of cache entries to serve. Various considerations may be utilized in selecting a subset, including considerations considering one or more attributes of a Proactive Cache entry and/or attribute(s) of a given client device. The attribute(s) for/of the client device may include, for example, data associated with the version level of the operating system, the model (and which version) of the client device on which the application is installed on the client device, the browsing history of the client device user, the location of the client device. It may include all data related to the operation of the client device, such as history, power mode or remaining battery level of the client device.
일례로서, 서브세트의 하나 이상의 프로액티브 캐시 엔트리를 선택할 때, 소정의 클라이언트 장치에 설치된 애플리케이션(그리고 선택적으로 그 중 어떤 것이 암시적 또는 명시적으로 선호되는 것으로 플래그 지정됨)이 고려될 수 있고 후보 프로액티브 캐시 엔트리의 액션 콘텐츠(및/또는 메타데이터)와 비교할 수 있다. 예를 들어, 각각 동일한 어시스턴트 요청 파라미터를 갖지만 다른 액션 콘텐츠를 갖는 여러 후보 프로액티브 캐시 엔트리가 생성될 수 있다. 각각의 상이한 액션 콘텐츠는 특정 애플리케이션에 맞춰(tailored)질 수 있고, 예를 들어, 상응하는 추가 애플리케이션이 소정의 액션을 수행하기 위한 제1 상태에서 열리도록(오픈되도록) 하기 위해 어시스턴트 클라이언트 애플리케이션에 의해 로컬로 실행가능한 상응하는 딥링크일 수 있다. 예를 들어, "온도 조절기 스케줄", "온도 조절기의 스케줄 변경" 및/또는 "{intent(인텐트)=change(변경)/adjust(조절); 장치 = 온도 조절기; 속성=스케줄}”의 어시스턴트 요청 파라미터로 가정한다. 그러한 어시스턴트 요청 파라미터에 대해, 제1 온도 조절기 제조업체에 대한 제1 애플리케이션 및 제2 온도 조절기 제조업체에 대한 제2 애플리케이션과 같은 적절한 응답을 실행하기 위해 다양한 상이한 애플리케이션이 활용될 수 있다. 제1 및 제2 프로액티브 캐시 엔트리는 모두 동일한 어시스턴트 요청 파라미터를 가질 수 있지만 다른 딥링크(deeplink)를 포함할 수 있다. 예를 들어, 제1 프로액티브 캐시 엔트리는 제1 애플리케이션(실행될 때 제1 애플리케이션이 해당 일정 변경 인터페이스에서 열리도록 함)에 대한 제1 딥링크를 가질 수 있고 그리고 제2 프로액티브 캐시 엔트리는 제2 애플리케이션(실행될 때 제2 애플리케이션이 해당 일정 변경 인터페이스에서 열리도록 함)에 대한 별개의 제2 딥링크를 가질 수 있다.As an example, when selecting one or more proactive cache entries of a subset, applications installed on a given client device (and optionally any of which are implicitly or explicitly flagged as preferred) may be considered and candidate proactive cache entries may be considered. The action content (and/or metadata) of the active cache entry may be compared. For example, multiple candidate Proactive Cache entries may be created, each with the same assistant request parameters but different action content. Each different action content can be tailored to a specific application, for example by the assistant client application to open (open) a corresponding additional application in a first state for performing a given action. It may be a locally executable corresponding deep link. For example, "thermostat schedule", "change the thermostat's schedule" and/or assistant in "{intent=change/adjust; device=thermostat; attribute=schedule}" Assuming a request parameter, for such assistant request parameter, a variety of different applications may be utilized to execute an appropriate response, such as a first application for a first thermostat manufacturer and a second application for a second thermostat manufacturer. The first and second Proactive Cache entries may both have the same assistant request parameters but contain different deeplinks. For example, the first Proactive Cache entry may may have a first deep link to one application that opens in its rescheduling interface and a second proactive cache entry in a second application that, when executed, causes a second application to open in its rescheduling interface. may have a separate second deep link to
그러한 예에서, 제1 프로액티브 캐시 엔트리(제2는 아님)는 소정의 클라이언트 장치에 제1 애플리케이션이 설치되어 있지만 제2 애플리케이션은 설치되어 있지 않다는 결정에 기초하여 소정의 클라이언트 장치에 대한 프로비저닝(provisioning)을 위해 선택될 수 있다. 이를 통해 소정의 클라이언트 장치는 어시스턴트 요청 파라미터를 준수하는 입력된 발화 또는 음성 발화에 빠르고 효율적으로 응답할 수 있으며, 이는 여러 이질적인 항목을 로컬에서 결정할 필요 없이 해당 엔트리의 액션 콘텐츠에 대한 유일한 제1 딥링크를 선택할 수 있기 때문이다. 더욱이, 제1 및 제2 프로액티브 캐시 엔트리의 액션 콘텐츠는 여러 개의 서로 다른 딥링크를 포함하는 액션 콘텐츠에 비해 스토리지(저장소) 공간 측면에서 축소된다. 이를 통해 각각을 해당 로컬 프로액티브 캐시에 개별적으로 더 효율적으로 저장할 수 있으며 해당 클라이언트 장치로 전송할 때 대역폭을 덜 소모할 수 있고 따라서 더 적은 수의 컴퓨터 및 네트워크 리소스가 소비될 수 있다. 더욱이, 프로액티브 캐시 엔트리에서 딥링크를 사용하면 더 적은 사용자 입력과 더 적은 처리 단계로 액션의 수행을 촉진할 수 있으며, 이는 액션을 수행할 때 클라이언트 장치가 소비하는 리소스를 줄일 수 있다. 더 적은 수의 사용자 입력에 대한 요구 사항은 또한 "dexterity"가 감소한 사용자에게 유익할 수 있으며 장치의 유용성을 향상시킬 수 있다. In such an example, a first (but not a second) proactive cache entry is provisioning for the given client device based on a determination that the first application is installed but the second application is not installed on the given client device. ) can be selected for This allows a given client device to quickly and efficiently respond to input utterances or voice utterances that comply with the assistant request parameters, which is a unique first deep link to the action content of that entry without the need to determine several disparate items locally. because you can choose Moreover, the action content of the first and second proactive cache entries is reduced in terms of storage (storage) space compared to the action content including several different deep links. This allows each to be stored individually in its own local proactive cache more efficiently and can consume less bandwidth when transmitted to the corresponding client device, thus consuming fewer computer and network resources. Moreover, the use of deep linking in the Proactive Cache entry can facilitate the execution of an action with less user input and fewer processing steps, which can reduce the resources consumed by the client device when performing the action. The requirement for fewer user inputs may also benefit users with reduced "dexterity" and may improve the usability of the device.
다른 예로서, 서브세트의 하나 이상의 프로액티브 캐시 엔트리를 선택함에 있어서, 하나 이상의 결정된 이벤트(들)가 있는 엔티티와 연관된 프로액티브 캐시 엔트리는 선택적으로 이벤트의 크기에 따라 선택될 가능성이 더 높을 수 있다. 더욱이, 이벤트의 발생을 결정하는 것에 대한 응답으로 엔티티에 대한 프로액티브 캐시 엔트리가 생성될 수도 있다. 엔티티에 대한 이벤트를 결정하는 몇 가지 예는 엔티티와 연관된 요청의 증가를 결정하는 것; 엔티티에 대한 인터넷 콘텐츠의 증가를 결정하는 것; 및/또는 엔티티와 연관된 요청의 증가를 예측하는 것을 포함한다.As another example, in selecting one or more proactive cache entries of a subset, a proactive cache entry associated with an entity having one or more determined event(s) may optionally be more likely to be selected according to the size of the event. . Moreover, a proactive cache entry may be created for the entity in response to determining the occurrence of the event. Some examples of determining an event for an entity include determining an increase in requests associated with the entity; determining an increase in Internet content for the entity; and/or predicting an increase in requests associated with the entity.
예를 들어, "Jane Doe"에 대한 어시스턴트 요청(및/또는 기존 검색 요청)의 양이 급증하고 "Jane Doe"에 대한 인터넷 콘텐츠가 급증하는 것으로 결정되면, "Jane Doe"와 연관된 프로액티브 캐시 엔트리가 생성될 수 있고 및/또는 로컬 프로액티브 캐싱을 위해 다양한 클라이언트 장치에 제공될 가능성이 더 높다(스파이크 이전보다 가능성이 높음). 다양한 클라이언트 장치에 "Jane Doe"에 대한 프로액티브 캐시 엔트리를 제공하는 것은 이러한 다양한 클라이언트 장치가 "Jane Doe"와 연관된 해당 속성(들)(예: "Jane Doe" 및/또는 관련 엔티티(예: 동일한 유형의 다른 엔티티)에 대한 과거 검색, "Jane Doe"와 연관된 지리적 위치 및/또는 기타 속성)을 갖는다고 결정하는 것에 추가로 기초할 수 있다.For example, if it is determined that the volume of assistant requests (and/or existing search requests) for "Jane Doe" spikes and Internet content for "Jane Doe" spikes, then a Proactive Cache entry associated with "Jane Doe" is more likely to be created and/or served to various client devices for local proactive caching (more likely than before the spike). Providing Proactive Cache entries for "Jane Doe" to various client devices means that these various client devices will have their attribute(s) associated with "Jane Doe" (e.g. "Jane Doe" and/or related entities (e.g., the same past searches for other entities of the type), geographic location and/or other attributes associated with "Jane Doe").
이러한 방식 및 기타 방식으로 엔티티에 대한 프로액티브 캐시 엔트리는 엔티티에 대한 지속적인 요청을 예상하여 제공되어(및 요청을 처리하기 위한 관련 대역폭 소비 및 관련 서버 측 프로세서 소비) 최종 요청에 더 빨리 응답할 수 있다. 또한 많은 클라이언트 장치에 대한 프로액티브 캐시 엔트리의 프로비저닝은 네트워크 사용량이 상대적으로 낮은 기간에 발생할 수 있으므로 사용량이 많은 기간에 네트워크 리소스 사용량을 완화하면서 사용량이 적은 기간(예: 클라이언트 장치가 유휴 상태이고 충전 중인 밤에)에 네트워크 리소스를 사용할 수 있다. 다시 말해서, "Jane Doe"에 대한 프로액티브 캐시 엔트리는 사용량이 적은 기간 동안 클라이언트 장치에 미리 저장된 다음 사용량이 많은 기간 동안 클라이언트 장치에서 입력된 발화 또는 음성 발화에 로컬로 응답하는 데 사용할 수 있다. 이는 여기에서 고려되는 바와 같이, 많은 양의 클라이언트 장치에 걸쳐 발생할 때, 네트워크 리소스를 효과적으로 재분배할 수 있다. 따라서 네트워크 성능이 향상될 수 있다. 또한, 다양한 구현은 "Jane Doe"에 대한 프로액티브 캐시 엔트리으로 프로비저닝하기 위해 클라이언트 장치의 서브세트만을 선택하고 "Jane Doe"와 연관된 속성(들)을 갖는 서브세트의 클라이언트 장치에 기초하여 서브세트를 선택한다. 서브세트에만 프로액티브 캐시 엔트리를 선택하고 제공함으로써 사용 대역폭과 네트워크 리소스를 줄일 수 있다. 그러한 감소는 달성될 수 있으며, 이러한 엔티티를 사용할 가능성이 있는 클라이언트 장치에 프로액티브 캐시 엔트리를 프로비저닝하기 위해 네트워크 리소스를 여전히 선택적으로 활용하여 해당 클라이언트 장치에서 응답을 더 빠르게 프로비저닝하고 해당 클라이언트 장치와의 상호 작용 기간을 줄일 수 있다. In this and other ways, a proactive cache entry for an entity may be provided in anticipation of ongoing requests to the entity (and associated bandwidth consumption and associated server-side processor consumption to process the request), resulting in faster response to final requests. . Additionally, provisioning of Proactive Cache entries for many client devices can occur during periods of relatively low network usage, thus mitigating network resource usage during peak periods while reducing usage (e.g., when client devices are idle and charging). network resources are available at night). In other words, the Proactive Cache entry for "Jane Doe" can be pre-stored on the client device during off-peak periods and then used locally to respond to utterances or spoken utterances entered at the client device during periods of high use. This can effectively redistribute network resources when, as contemplated herein, occurs across a large amount of client devices. Accordingly, network performance may be improved. In addition, various implementations select only a subset of client devices for provisioning with a proactive cache entry for "Jane Doe" and select a subset based on the subset of client devices that have attribute(s) associated with "Jane Doe". choose By selecting and providing Proactive Cache entries only to a subset, bandwidth usage and network resources can be reduced. Such a reduction can be achieved and still selectively utilize network resources to provision proactive cache entries to client devices that are likely to use these entities to more rapidly provision responses from those client devices and interact with those client devices. The duration of action can be shortened.
엔티티에 대한 이벤트를 결정하고 활용하는 또 다른 예로, 요청 증가가 아직 관측되지 않았음에도 불구하고 "Hypothetical Artist(가상 아티스트)(이 예에서는 가상의 음악가)"와 연관된 요청 증가를 예측할 수 있다. 예를 들어, 요청의 증가는 가상 아티스트가 새 노래 및/또는 새 앨범을 출시할 예정인 하나 이상의 추가 시스템의 결정에 기초하여 예측될 수 있다. 요청 증가에 대한 예측에 응답하여, 가상 아티스트와 연관된 프로액티브 캐시 엔트리가 생성될 수 있고 및/또는 로컬 프로액티브 캐싱(caching)을 위해 다양한 클라이언트 장치에 제공될 가능성이 더 높을 수 있다(스파이크 이전보다 가능성이 높음). 예를 들어, 프로액티브 캐시 엔트리는 "play Hypothetical Artist(가정 아티스트 재생)", "listen to some Hypothetical Artist(일부 가상 아티스트 듣기)" 및/또는 "{intent=listen to music; artist= Hypothetical Artist}"의 어시스턴트 요청 파라미터를 갖는다. 프로액티브 캐시 엔트리는 예를 들어 실행될 때 가상 아티스트의 음악이 스트리밍되고 클라이언트 장치에서 가청 렌더링되는 상태에서 해당 애플리케이션이 열리도록(오픈되도록) 하는 하나 이상의 딥링크와 같은 어시스턴트 액션 콘텐츠를 더 포함할 수 있다. 다양한 클라이언트 장치에 "Hypothetical Artist(가상 아티스트)"에 대한 프로액티브 캐시 엔트리를 제공하는 것은 추가로 이러한 다양한 클라이언트 장치가 가상 아티스트와 연관된 해당 속성(들)(예: 가상 아티스트 및/또는 관련 음악 아티스트의 과거 스트리밍, 해당 장치에 저장된 가상 아티스트의 음악 파일, 가상 아티스트와 연관된 검색 기록 등)을 갖는지 결정하는 것에 기초할 수 있다. 소정의 클라이언트 장치에 프로액티브 캐시 엔트리를 제공하는 것은 또한 소정의 클라이언트 장치가 프로액티브 캐시 엔트리의 딥링크(들) 중 하나(예: 일부 구현에서 유일한 딥링크)에 대응하는 애플리케이션을 갖는다는 결정에 기초할 수 있다. Another example of determining and leveraging events for an entity is to predict an increase in requests associated with "Hypothetical Artist (in this example, a hypothetical musician)" even though the increase in requests has not yet been observed. For example, an increase in requests may be predicted based on the determination of one or more additional systems that the virtual artist is to release a new song and/or a new album. In response to a prediction of an increase in requests, a Proactive Cache entry associated with the virtual artist may be created and/or more likely to be provided to various client devices for local Proactive caching (than prior to the spike). likely). For example, a Proactive Cash entry could be "play Hypothetical Artist", "listen to some Hypothetical Artist" and/or "{intent=listen to music; artist= Hypothetical Artist}" It has an assistant request parameter of . A Proactive Cache entry may further include assistant action content, such as one or more deep links that, when executed, cause the corresponding application to open (to be opened) with the virtual artist's music being streamed and audible rendering on the client device. . Providing Proactive Cache entries for “Hypothetical Artists” to various client devices further allows these various client devices to have their corresponding attribute(s) associated with the Virtual Artist (e.g., of the Virtual Artist and/or the associated Music Artist). past streaming, music files of the virtual artist stored on the device, search history associated with the virtual artist, etc.). Providing a Proactive Cache entry to a given client device also includes determining that the given client device has an application corresponding to one of the deeplink(s) of the Proactive Cache entry (eg, a unique deeplink in some implementations). can be based
해당 클라이언트 장치에 각각 로컬로 저장되는 로컬 프로액티브 캐시에 더하여, 일부 구현은 클라이언트 장치의 서브세트에 대해 각각 생성되는 원격 프로액티브 캐시를 더 포함할 수 있다. 원격 프로액티브 캐시에 대한 클라이언트 장치의 서브세트는 단일 클라이언트 장치이거나, 서로 공통된 속성(들)을 갖는 클라이언트 장치를 기반으로 그룹화되는 클라이언트 장치의 그룹일 수 있다. 예를 들어, 원격 프로액티브 캐시는 단일 클라이언트 장치에 대한 것일 수도 있고 동일하거나 유사한 속성을 가진 1,000개의 클라이언트 장치에 대한 것일 수도 있다. In addition to local proactive caches that are each stored locally on a given client device, some implementations may further include a remote proactive cache that is each created for a subset of the client devices. The subset of client devices for Remote Proactive Cache may be a single client device, or a group of client devices grouped based on the client devices having attribute(s) in common with each other. For example, a remote proactive cache may be for a single client device or it may be for 1,000 client devices with the same or similar attributes.
소정의 클라이언트 장치(소정의 클라이언트 장치에 대해서만, 또는 소정의 클라이언트 장치와 동일/유사한 속성을 가진 다른 클라이언트 장치에 대해서만)에 대한 원격 프로액티브 캐시에는 소정의 클라이언트 장치의 로컬 프로액티브 캐시에 저장된 엔티티 외에 프로액티브 캐시 엔트리가 포함(또는 제한됨)된다. 원격 프로액티브 캐시의 프로액티브 캐시 엔트리는 많은 구현에서 여전히 사용 가능한 모든 후보 캐시 엔트리의 서브세트이다. 원격 프로액티브 캐시의 프로액티브 캐시 엔트리는 소정의 클라이언트 장치의 속성(들) 및/또는 프로액티브 캐시 엔트리의 속성(들)에 기초하여(예: 클라이언트 장치 속성과 프로액티브 캐시 엔트리 속성 비교 및/또는 프로액티브 캐시 엔트리 속성 기반) 소정의 클라이언트 장치와 관련이 있는 것으로 결정된 것들을 포함할 수 있다. 그러나 원격 캐시의 프로액티브 캐시 엔트리에는 로컬 프로액티브 캐시의 로컬 저장소에 제공되지 않는 엔티티가 포함된다. 로컬 프로액티브 캐시의 로컬 스토리지(저장소)에 제공하지 않기로 한 결정은 로컬 프로액티브 캐시에 대한 스토리지 공간 제한을 기반으로 하고(예: 이를 제공하면 로컬 프로액티브 캐시에 대한 스토리지 제한이 초과됨) 그리고 소정의 클라이언트 장치의 로컬 프로액티브 캐시에 저장하기 위해 제공된 엔티티보다 관련성이 낮은 것으로 결정된 엔티티를 기반으로 할 수 있다. 다시 말해, 소정의 클라이언트 장치에 대한 원격 프로액티브 캐시는 소정의 클라이언트 장치와 관련이 있는 것으로 결정되지만, 소정의 클라이언트 장치의 로컬 프로액티브 캐시에서 로컬 저장을 위해 제공되는 것보다 덜 관련성이 있다고 결정되는 프로액티브 캐시 엔트리에 기초하고 그리고 저장 공간 제한에 기초하여 소정의 클라이언트 장치의 로컬 캐시에 저장되지 않는 프로액티브 캐시 엔트리를 포함할 수 있다.The remote proactive cache for a given client device (only for a given client device, or only for other client devices that have the same/similar attributes as the given client device) contains in addition to entities stored in the given client device's local Proactive Cache. Proactive cache entries are included (or limited). The remote proactive cache's proactive cache entries are a subset of all candidate cache entries that are still available in many implementations. A Proactive Cache entry in a remote Proactive Cache is based on attribute(s) of a given client device and/or attribute(s) of the Proactive Cache entry (eg, comparing client device attributes with Proactive Cache entry attributes and/or (based on Proactive Cache entry attributes) those determined to be relevant to a given client device. However, Proactive Cache entries in the remote cache contain entities that are not served in the local storage of the local Proactive Cache. The decision not to provide to local storage (repository) of the Local Proactive Cache is based on the storage space limitations for the Local Proactive Cache (e.g., providing it will exceed the storage limit for the Local Proactive Cache) and may base an entity determined to be less relevant than the entity presented for storage in the client device's local proactive cache of In other words, the remote proactive cache for a given client device is determined to be relevant to the given client device, but is determined to be less relevant than that provided for local storage in the given client device's local Proactive Cache. may include a Proactive Cache entry that is not stored in a local cache of a given client device based on the Proactive Cache entry and based on a storage space limitation.
원격 프로액티브 캐시는 원격 프로액티브 캐시에 할당된 클라이언트 장치(들)로부터의 어시스턴트 요청에 응답할 때 원격 자동 어시스턴트 컴포넌트(들)에 의해 활용될 수 있다. 예를 들어, 소정의 클라이언트 장치에서 오디오 데이터내에서 검출된 발화에 대해, 소정의 클라이언트 장치는 오디오 데이터 및/또는 로컬적으로 결정된 인식된 텍스트를 원격 자동 어시스턴트 컴포넌트(들)로 전송할 수 있다. 원격 자동 어시스턴트 컴포넌트(들)로의 전송은 선택적으로 로컬 프로액티브 캐시 엔트리가 응답하지 않는지 결정하는 것에 응답할 수 있거나 로컬 프로액티브 캐시 엔트리가 응답하는지 여부를 결정하는 것과 병렬로 발생할 수 있다. 전송은 소정의 클라이언트 장치의 식별자, 및 소정의 클라이언트 장치에 대한 원격 프로액티브 캐시를 식별하는 데 사용되는 식별자를 동반할 수 있다. 자동 어시스턴트 컴포넌트(들)의 원격 이행 모듈은 원격 프로액티브 캐시 엔트리가 어시스턴트 요청에 응답하는지 여부를 결정할 수 있다. 그렇다면, 원격 이행 모듈은 어시스턴트 요청에 응답하기 위한 어시스턴트 액션 콘텐츠를 결정하기 위해 응답 엔트리를 활용할 수 있다. 어시스턴트 액션 콘텐츠는 원격 자동 어시스턴트 컴포넌트(들)에 의해 원격으로 실행될 수 있고 및/또는 로컬 실행을 위해 소정의 클라이언트 장치로 전송될 수 있다. The Remote Proactive Cache may be utilized by the remote automated assistant component(s) in response to an assistant request from the client device(s) assigned to the Remote Proactive Cache. For example, for an utterance detected within audio data at a given client device, the given client device may send the audio data and/or locally determined recognized text to the remote automated assistant component(s). The transfer to the remote automated assistant component(s) may optionally be responsive to determining that the local Proactive Cache entry is not responding or may occur in parallel with determining whether the local Proactive Cache entry is responsive. The transmission may be accompanied by an identifier of the given client device, and an identifier used to identify a remote proactive cache for the given client device. The remote fulfillment module of the automatic assistant component(s) may determine whether the remote proactive cache entry responds to the assistant request. If so, the remote fulfillment module may utilize the response entry to determine assistant action content for responding to the assistant request. The assistant action content may be executed remotely by the remote automated assistant component(s) and/or may be transmitted to certain client devices for local execution.
원격 자동 어시스턴트 컴포넌트(들)에 의한 원격 프로액티브 캐시의 활용은 원격 자동 어시스턴트 컴포넌트(들)가 자동 어시스턴트 요청(예: 소정의 액션의 수행을 요청하는 자동 어시스턴트에게 직접 입력되거나 음성으로 전달되는 발화)에 보다 신속하게 응답할 수 있게 한다. 이는 어시스턴트 액션이 프로액티브 캐시 엔트리의 어시스턴트 요청 파라미터에 직접 매핑된 결과일 수 있으며, 이는 어시스턴트 요청에 응답하여 라이브로 어시스턴트 액션을 생성할 필요 없이 프로액티브 캐시 엔트리로부터 효율적으로 어시스턴트 액션의 식별을 가능하게 한다. 예를 들어, 프로액티브 캐시 엔트리에 어시스턴트 액션이 없으면 어시스턴트 액션은 선택적으로 하나 이상의 추가 원격 시스템과의 통신을 통해 즉석에서 생성되어야 하며, 이는 계산상 부담이 될 수 있고 추가 원격 시스템(들)과의 통신의 결과로 대기 시간을 유발할 수 있다. 따라서 클라이언트-서버 라운드트립(roundtrip)이 필요하지만, 어시스턴트 요청을 해결하는 데 원격 프로액티브 캐시를 사용하면 응답의 프로비저닝 대기 시간이 줄어들고 결과적으로 사용자 어시스턴트 상호 작용 기간이 단축된다. 더욱이, 일부 구현에서 클라이언트 장치(들)의 서브세트에 특정한 원격 프로액티브 캐시는 소정의 지리적 영역으로부터 어시스턴트 요청을 수신하는 서버(들)와 같은, 서브세트의 클라이언트 장치(들)에 지리적으로 근접한 하나 이상의 서버에 저장될 수 있다. 이렇게 하면 지리적으로 멀리 떨어져 있는 여러 서버 간의 서버 간 통신 없이도 프로액티브 캐시에서 어시스턴트 액션을 더 빠르게 결정할 수 있으므로 어시스턴트 요청을 해결할 때 대기 시간을 더욱 줄일 수 있다. Utilization of the remote proactive cache by the remote automated assistant component(s) may result in the remote automated assistant component(s) requesting an automated assistant (e.g., an utterance entered or voiced directly to an automated assistant requesting performance of a predetermined action). to respond more quickly to This may be the result of an assistant action being mapped directly to an assistant request parameter in a Proactive Cache entry, which enables efficient identification of an assistant action from a Proactive Cache entry without the need to create an assistant action live in response to an assistant request do. For example, if there is no assistant action in the Proactive Cache entry, the assistant action must optionally be created on-the-fly through communication with one or more additional remote systems, which can be computationally burdensome and requires no interaction with the additional remote system(s). Communication may cause latency as a result. Thus, while a client-server roundtrip is required, using a remote proactive cache to resolve an assistant request reduces the provisioning latency of the response and consequently shortens the duration of the user assistant interaction. Moreover, in some implementations a remote Proactive Cache specific to a subset of client device(s) is one that is geographically proximate to a subset of client device(s), such as a server(s) that receive assistant requests from a given geographic area. It can be stored on more than one server. This allows for faster determination of assistant actions in the Proactive Cache without server-to-server communication between multiple geographically distant servers, further reducing latency when resolving assistant requests.
본 명세서에 개시된 다양한 구현은 적어도 하나 이상의 마이크로폰 및 자동 어시스턴트 애플리케이션을 포함하는 클라이언트 장치(예: 스마트폰 및/또는 기타 클라이언트 장치)에 관한 것이다. 자동 어시스턴트 애플리케이션은 클라이언트 장치의 운영 체제 "위에(on-top)" 설치될 수 있고 및/또는 자체적으로 클라이언트 장치의 운영 체제의 일부(또는 전체)를 형성할 수 있다. 자동 어시스턴트 애플리케이션은 온-디바이스 음성 인식, 온-디바이스 자연어 이해 및 온-디바이스 이행(fulfillment)을 포함하거나 이에 액세스할 수 있다. 예를 들어, 온-디바이스 음성 인식은 클라이언트 장치에 로컬로 저장된 종단 간(end-to-end) 음성 인식 기계 학습 모델을 사용하여 오디오 데이터(마이크로폰에 의해 검출됨)를 처리(프로세싱)하는 온-디바이스 음성 인식 모듈을 사용하여 수행될 수 있다. 온-디바이스 음성 인식은 오디오 데이터에 있는 발화(있는 경우)에 대해 인식된 텍스트를 생성한다. 또한, 예를 들어, 온-디바이스 음성 인식을 사용하여 생성된 인식된 텍스트 및 선택적으로 컨텍스트 데이터를 처리하여 NLU 데이터를 생성하는 온-디바이스 NLU 모듈을 사용하여 온-디바이스 NLU(자연어 이해)를 수행할 수 있다. NLU 데이터는 발화에 해당하는 의도(인텐트)(들) 및 의도(들)에 대한 선택적으로 파라미터(예: 슬롯 값)를 포함할 수 있다.Various implementations disclosed herein relate to client devices (eg, smartphones and/or other client devices) that include at least one microphone and an automated assistant application. The automated assistant application may be installed “on-top” of the client device's operating system and/or may itself form part (or all) of the client device's operating system. Automated assistant applications may include or have access to on-device speech recognition, on-device natural language understanding, and on-device fulfillment. For example, on-device speech recognition uses an end-to-end speech recognition machine learning model stored locally on the client device to process (process) audio data (detected by a microphone). This may be performed using a device voice recognition module. On-device speech recognition generates recognized text for utterances (if any) in audio data. It also performs on-device natural language understanding (NLU), for example, using an on-device NLU module that processes recognized text and optionally context data generated using on-device speech recognition to generate NLU data. can do. The NLU data may include intention (intent)(s) corresponding to the utterance and optionally parameters (eg, slot values) for the intention(s).
온-디바이스 이행은 음성 발화(및 선택적으로 인텐트에 대한 파라미터)의 의도(인텐트)(들)를 해결하기 위해 취해야 할 액션을 결정하기 위해, 인식된 텍스트(온-디바이스 음성 인식에서) 및/또는 NLU 데이터(온-디바이스 NLU에서), 선택적으로 기타 로컬 데이터를 활용하는 온-디바이스 이행 모듈을 사용하여 수행될 수 있다. 이는 음성 발화, 음성 발화를 기반으로 수행하기 위해 로컬에 설치된 애플리케이션과의 상호 작용(들), 음성 발화를 기반으로 (직접 또는 해당 원격 시스템을 통해) 사물 인터넷(IoT) 장치로 전송하는 명령, 및/또는 음성 발화에 기초하여 수행할 다른 레졸루션(resolution) 액션(들)에 대한 로컬 및/또는 원격 응답(예: 답변)을 결정하는 것을 포함할 수 있다. 그런 다음 온-디바이스 이행은 음성 발화(spoken utterance)를 해결하기 위해 결정된 액션(들)의 로컬 및/또는 원격 수행/실행을 시작할 수 있다. 본 명세서에 설명된 바와 같이, 다양한 구현에서 온-디바이스 이행은 다양한 사용자 입력에 응답할 때 로컬적으로 저장된 프로액티브 캐시를 활용한다. 예를 들어, 온-디바이스 이행은 인식된 텍스트 및/또는 NLU 데이터가 프로액티브 캐시 엔트리의 어시스턴트 요청 파라미터와 매칭한다는 결정에 기초하여 음성 발화에 응답할 때 로컬로 저장된 프로액티브 캐시 엔트리의 액션 콘텐츠를 활용할 수 있다. On-device fulfillment consists of: recognized text (in on-device speech recognition) and This may be done using an on-device implementation module that utilizes/or NLU data (in on-device NLUs), optionally other local data. These include voice utterances, interaction(s) with a locally installed application to perform based on the voice utterance, commands to send to an Internet of Things (IoT) device based on the voice utterance (either directly or via its remote system), and and/or determining local and/or remote responses (eg replies) to other resolution action(s) to perform based on the spoken utterance. The on-device implementation may then initiate local and/or remote performance/execution of the determined action(s) to resolve the spoken utterance. As described herein, on-device implementation in various implementations utilizes a locally stored proactive cache when responding to various user inputs. For example, an on-device implementation may implement a locally stored action content of a Proactive Cache entry when responding to a spoken utterance based on a determination that the recognized text and/or NLU data matches an assistant request parameter of the Proactive Cache entry. can be used
다양한 구현들에서, 원격 스피치(음성) 프로세싱, 원격 NLU, 및/또는 원격 이행이 적어도 선택적으로 이용될 수 있다. 예를 들어, 인식된 텍스트는 원격 NLU 및/또는 원격 이행을 위해 원격 자동 어시스턴트 컴포넌트(들)에 적어도 선택적으로 전송될 수 있다. 예를 들어, 인식된 텍스트는 온-디바이스 수행과 병렬로 원격 수행을 위해 또는 온-디바이스 NLU 및/또는 온-디바이스 이행의 실패에 응답하여 선택적으로 전송될 수 있다. 그러나 온-디바이스 음성 처리, 온-디바이스 NLU, 온-디바이스 이행(fulfillment) 및/또는 온-디바이스 실행(execution)은 적어도 음성 발화를 해결할 때 제공하는 지연 시간 감소로 인해(음성 발화를 해결하는 데 클라이언트-서버 라운드트립이 필요하지 않기 때문에) 우선 순위가 매겨질 수 있다. 또한 온-디바이스 기능(functionality)은 네트워크 연결이 없거나 제한적인 상황에서 사용할 수 있는 유일한 기능일 수 있다. In various implementations, remote speech (voice) processing, remote NLU, and/or remote fulfillment may be employed, at least optionally. For example, the recognized text may at least optionally be transmitted to a remote NLU and/or remote automated assistant component(s) for remote fulfillment. For example, the recognized text may be selectively transmitted for remote execution in parallel with the on-device implementation or in response to failure of the on-device NLU and/or on-device implementation. However, on-device speech processing, on-device NLU, on-device fulfillment, and/or on-device execution, at least due to the reduced latency they provide when resolving speech utterances, can be prioritized (since no client-server roundtrip is required). In addition, on-device functionality may be the only function that can be used in a situation where there is no network connection or is limited.
다양한 구현에서, 온-디바이스 음성 인식 및/또는 다른 온-디바이스 프로세스는 명시적 어시스턴트 호출 큐(invocation cue)의 발생을 검출하는 것에 응답하여 및/또는 암시적 호출 큐(들)의 일부 발생에 응답하여 활성화된다. 명시적 호출 큐는 격리되어 검출될 때 항상 최소한 온-디바이스 음성 인식이 활성화되도록 하는 신호이다. 명시적 호출 큐의 일부 비제한적 예에는 적어도 임계값 수준의 신뢰도를 갖는 음성 핫워드, 명시적 어시스턴트 인터페이스 요소의 액추에이션(actuation)(예: 터치스크린 디스플레이의 하드웨어 버튼 또는 그래픽 버튼), 최소 임계값 강도를 갖는 "폰 스튀즈(phone squeeze)"(예: 휴대폰 베젤의 센서에 의해 검출됨) 및/또는 기타 명시적인 호출 큐를 검출하는 것이 포함된다. 하지만, 다른 큐(들)는 특정 컨텍스트에서 발생(예: 다른 암시적 큐(들) 다음에 또는 조합하여 발생)하는 것과 같이 해당 큐(들)의 일부 발생에 대해서만 온-디바이스 음성 인식이 활성화된다는 점에서 암시적이다. 예를 들어, 온-디바이스 음성 인식은 단독으로 음성 활동을 검출하는 것에 응답하여 선택적으로 활성화될 수 없지만, 클라이언트 장치에서 사용자 존재를 검출하고 및/또는 클라이언트 장치에서 임계 거리 내의 사용자 존재를 검출하는 것과 함께 음성 활동을 검출하는 것에 응답하여 활성화될 수 있다. 또한, 예를 들어 사용자가 클라이언트 장치를 집어 들었거나 현재 들고 있음을 나타내는 자이로 및/또는 가속도계와 같은 마이크로폰이 아닌 센서(들)로부터의 센서 데이터는 선택적으로 단독으로 온-디바이스 음성 인식을 활성화할 수 없다. 하지만, 온-디바이스 음성 인식은 핫 워드 프리 오디오 데이터에서 음성 활동 및/또는 지시된 음성(본원에서 더 자세히 설명됨)을 검출하는 것과 함께 이러한 표시에 응답하여 활성화될 수 있다. 핫 워드 프리 오디오 데이터는 명시적 어시스턴트 호출 큐인 "핫 워드"를 포함하는 음성 발화가 없는 오디오 데이터이다. 또 다른 예로서, 임계 강도 미만의 "폰 스퀴즈"는 선택적으로 단독으로 온-디바이스 음성 인식을 활성화하기에 충분하지 않을 수 있다. 그러나 온-디바이스 음성 인식은 핫 워드 프리 오디오 데이터에서 음성 활동 및/또는 지시된 음성을 검출하는 것과 함께 이러한 낮은 강도의 "폰 스퀴즈"에 응답하여 활성화될 수 있다.In various implementations, on-device speech recognition and/or other on-device processes are responsive to detecting the occurrence of an explicit assistant invocation cue and/or responsive to some occurrence of an implicit invocation queue(s). is activated by An explicit call queue is a signal that, when detected in isolation, always causes at least on-device speech recognition to be active. Some non-limiting examples of explicit call queues include voice hotwords with at least a threshold level of confidence, actuation of explicit assistant interface elements (such as hardware buttons or graphic buttons on a touchscreen display), minimum thresholds This includes detecting "phone squeeze" with intensity (eg detected by a sensor in the cell phone bezel) and/or other explicit call queues. However, on-device speech recognition is active only for some occurrences of that cue(s), such as other cue(s) occurring in a particular context (e.g. following or in combination with other implicit cue(s)). It is implicit in that For example, on-device voice recognition alone cannot be selectively activated in response to detecting voice activity, but may not involve detecting user presence at the client device and/or detecting user presence within a threshold distance at the client device. together may be activated in response to detecting voice activity. Additionally, sensor data from a non-microphone sensor(s), such as a gyro and/or accelerometer, for example indicating that the user has picked up or is currently holding the client device, can optionally alone activate on-device voice recognition. none. However, on-device speech recognition may be activated in response to such indication along with detecting speech activity and/or directed speech (discussed in more detail herein) in the hot word free audio data. Hot word free audio data is audio data without speech utterances including "hot words", which are explicit assistant call queues. As another example, a “phone squeeze” below a threshold intensity may not be sufficient to selectively activate on-device speech recognition alone. However, on-device speech recognition may be activated in response to such low-intensity "phone squeeze" in conjunction with detecting voice activity and/or directed speech in hot word-free audio data.
본 명세서에 개시된 일부 구현은 중앙 처리 장치(들)(CPU(들)), 그래픽 처리 장치(들)(GPU(들)) 및/또는 텐서 처리 장치(들)(TPU(들))와 같은 하나 이상의 프로세서를 포함하는 하나 이상의 컴퓨팅 장치를 포함한다. 프로세서 중 하나 이상은 관련 메모리에 저장된 명령어를 실행하도록 동작 가능하고, 명령어는 여기에 설명된 방법 중 임의의 방법을 수행하도록 구성된다. 컴퓨팅 장치는 예를 들어 마이크로폰(들), 디스플레이, 및/또는 다른 센서 컴포넌트(들)를 갖는 클라이언트 어시스턴트 장치를 포함할 수 있다. 일부 구현은 또한 여기에 설명된 방법 중 임의의 것을 수행하기 위해 하나 이상의 프로세서에 의해 실행 가능한 컴퓨터 명령어를 저장하는 하나 이상의 비일시적 컴퓨터 판독 가능 저장 매체를 포함한다. Some implementations disclosed herein may implement one such as central processing unit(s) (CPU(s)), graphics processing unit(s) (GPU(s)), and/or tensor processing unit(s) (TPU(s)). One or more computing devices including one or more processors. One or more of the processors are operable to execute instructions stored in the associated memory, the instructions being configured to perform any of the methods described herein. The computing device may include, for example, a client assistant device having a microphone(s), a display, and/or other sensor component(s). Some implementations also include one or more non-transitory computer-readable storage media storing computer instructions executable by one or more processors to perform any of the methods described herein.
도 1은 여기에 개시된 구현들이 구현될 수 있는 예시적인 환경의 블록도이다.
도 2는 다양한 구현에 따라 상호 작용할 수 있는 도 1의 다양한 컴포넌트가 어떻게 구성되는지를 보여주는 예시적인 프로세스 흐름을 도시한다.
도 3은 프로액티브 캐시 엔트리의 몇 가지 예를 보여준다.
도 4는 본 명세서에 개시된 구현들에 따른 프로액티브 캐시 엔트리들을 프리페치하고 저장하는 예시적인 방법을 예시하는 흐름도를 도시한다.
도 5a는 프로액티브 캐시 엔트리를 생성하고, 프로액티브 캐시 엔트리의 로컬 서브세트를 소정의 클라이언트 장치에 프로비저닝하고 및/또는 프로액티브 캐시 엔트리의 원격 서브세트를 결정하는 예시적인 방법을 도시하는 흐름도를 도시한다.
도 5b는 도 5a의 블록(510)의 일부 구현을 예시하는 흐름도를 도시한다.
도 5c는 도 5a의 블록(510)의 일부 추가적 또는 대안적 구현을 예시하는 흐름도를 도시한다.
도 6은 컴퓨팅 장치의 예시적인 아키텍처를 도시한다. 1 is a block diagram of an example environment in which implementations disclosed herein may be implemented.
FIG. 2 depicts an example process flow showing how the various components of FIG. 1 that can interact according to various implementations are configured;
3 shows some examples of proactive cache entries.
4 shows a flow diagram illustrating an example method of prefetching and storing proactive cache entries in accordance with implementations disclosed herein.
5A depicts a flow diagram illustrating an exemplary method for creating Proactive Cache entries, provisioning a local subset of Proactive Cache entries to a given client device, and/or determining a remote subset of Proactive Cache entries; do.
5B shows a flow diagram illustrating some implementations of
FIG. 5C shows a flow diagram illustrating some additional or alternative implementations of
6 shows an exemplary architecture of a computing device.
도 1을 참조하면, 클라이언트 장치(160)는 자동 어시스턴트 클라이언트(170)를 적어도 선택적으로 실행하는 것으로 예시된다. "어시스턴트 장치"라는 용어는 또한 자동 어시스턴트 클라이언트(170)를 적어도 선택적으로 실행하는 클라이언트 장치(160)를 지칭하기 위해 여기에서 사용된다. 자동 어시스턴트 클라이언트(170)는, 도 1의 예에서, 음성 캡처 엔진(171), 비주얼(시각적) 캡처 엔진(172), 온-디바이스 음성 인식 엔진(173), 온-디바이스 NLU 엔진(174), 온-디바이스 이행 엔진(175), 온-디바이스 실행 엔진(176), 및 프리페치 엔진(177)을 포함할 수 있다.Referring to FIG. 1 , a client device 160 is illustrated as at least selectively executing an automated assistant client 170 . The term “assistant device” is also used herein to refer to a client device 160 that at least selectively executes an automated assistant client 170 . Automated assistant client 170 includes, in the example of FIG. 1 , voice capture engine 171 , visual (visual) capture engine 172 , on-device speech recognition engine 173 , on-
하나 이상의 원격 자동 어시스턴트 컴포넌트(180)는 일반적으로 190으로 표시된 하나 이상의 로컬 및/또는 광역 네트워크(예를 들어, 인터넷)를 통해 클라이언트 장치(160)에 통신적으로 결합된 하나 이상의 컴퓨팅 시스템에서 선택적으로 구현될 수 있다. 원격 자동 어시스턴트 컴포넌트(180)는 예를 들어 고성능 서버의 클러스터를 통해 구현될 수 있다.The one or more remote automated
다양한 구현에서, 자동 어시스턴트 클라이언트(170)의 인스턴스는 하나 이상의 클라우드 기반 자동(자동화된) 어시스턴트 컴포넌트(180)와의 상호작용을 통해, 사용자의 관점에서 사용자가 인간 대 컴퓨터 상호작용(예: 음성 상호 작용, 제스처 기반 상호 작용 및/또는 터치 기반 상호 작용)에 참여할 수 있는 자동 어시스턴트(195)의 논리적 인스턴스로 보이는 것을 형성할 수 있다.In various implementations, instances of automated assistant client 170 may interact with one or more cloud-based automated (automated)
클라이언트 장치(160)는 예를 들어 데스크탑 컴퓨팅 장치, 랩톱 컴퓨팅 장치, 태블릿 컴퓨팅 장치, 모바일 전화 컴퓨팅 장치, 사용자의 차량의 컴퓨팅 장치(예: 차량 내 통신 시스템, 차량 내 엔터테인먼트 시스템, 차량 내 내비게이션 시스템), 독립형 대화형 스피커, 스마트 텔레비전(또는 자동 어시스턴트 기능이 있는 네트워크 동글이 장착된 표준 텔레비전)과 같은 스마트 기기 및/또는 컴퓨팅 장치를 포함하는 사용자의 웨어러블 장치(예를 들어, 컴퓨팅 장치를 갖는 사용자의 시계, 컴퓨팅 장치를 갖는 사용자의 안경, 가상 또는 증강 현실 컴퓨팅 장치)일 수 있다. 추가 및/또는 대체 클라이언트 컴퓨팅 장치가 제공될 수 있다. The client device 160 may be, for example, a desktop computing device, a laptop computing device, a tablet computing device, a mobile phone computing device, a computing device of the user's vehicle (eg, an in-vehicle communication system, an in-vehicle entertainment system, an in-vehicle navigation system). , the user's wearable devices (e.g., the user's watch with the computing device), including smart appliances and/or computing devices, such as standalone interactive speakers, smart televisions (or standard televisions equipped with network dongles with automatic assistant capabilities). , the user's glasses with the computing device, virtual or augmented reality computing device). Additional and/or alternative client computing devices may be provided.
클라이언트 장치(160)는 하나 이상의 시야(fields of view: FOV)를 갖는 하나 이상의 비전 컴포넌트(163)를 선택적으로 장착할 수 있다. 비전 컴포넌트(들)(163)는 모노그래픽 카메라, 입체 카메라, LIDAR 컴포넌트(또는 다른 레이저 기반 컴포넌트(들)), 레이더 컴포넌트 등과 같은 다양한 형태를 취할 수 있다. 하나 이상의 비전 컴포넌트(163)는 클라이언트 장치(160)가 배치되는 환경의 비전 프레임(예: 이미지 프레임, 레이저 기반 비전 프레임)을 캡처하기 위해 예를 들어 비주얼 캡처 엔진(174)에 의해 사용될 수 있다. 일부 구현에서, 이러한 비전 프레임(들)은 사용자가 클라이언트 장치(160) 근처에 있는지 여부 및/또는 클라이언트 장치에 대한 사용자의 거리(예를 들어, 사용자의 얼굴)를 결정하는 데 사용될 수 있다. 그러한 결정(들)은 온-디바이스 음성 인식 엔진(173), 온-디바이스 NLU 엔진(174), n-디바이스 이행 엔진(175), 및/또는 온-디바이스 실행 엔진(176)을 활성화할지 여부를 결정할 때 자동 어시스턴트 클라이언트(170)에 의해 이용될 수 있다. 비전 프레임(들)은 추가로 또는 대안적으로 다양한 사용자 터치 없는 제스처(예를 들어, "텀즈업(thumbs up)", "손 흔들기" 등)를 로컬적으로 검출하는 데 사용될 수 있다. 선택적으로 검출된 제스처는 여기에 설명된 프로액티브 캐시 엔트리의 "어시스턴트 요청 파라미터"일 수 있고 제스처에 기초하여 취해질 대응하는 액션은 프로액티브 캐시 엔트리의 "액션 콘텐츠"일 수 있다.The client device 160 may optionally be equipped with one or
클라이언트 장치(160)는 또한 하나 이상의 마이크로폰(165)을 구비할 수 있다. 음성 캡처 엔진(172)은 사용자의 음성 및/또는 마이크로폰(들)(165)를 통해 캡처된 다른 오디오 데이터를 캡처하도록 구성될 수 있다. 본 명세서에 기술된 바와 같이, 이러한 오디오 데이터는 온-디바이스 음성 인식 엔진(173)에 의해 이용될 수 있다. The client device 160 may also include one or
클라이언트 장치(160)는 또한 하나 이상의 존재 센서(167) 및/또는 하나 이상의 디스플레이(169)(예를 들어, 터치 검출 디스플레이)를 포함할 수 있다. 디스플레이(들)(169)는 온-디바이스 음성 인식 엔진(173)으로부터 스트리밍 텍스트 전사(transcription)를 렌더링하기 위해 선택적으로 이용될 수 있다. 디스플레이(들)(169)는 자동 어시스턴트 클라이언트(170)로부터, 응답의 시각적(비주얼) 부분(들)이 렌더링되는 사용자 인터페이스 출력 컴포넌트(들) 중 하나일 수 있다. 존재 센서(들)(167)는 예를 들어, PIR 및/또는 다른 수동 존재 센서(들)를 포함할 수 있다. 다양한 구현에서, 자동 어시스턴트 클라이언트(170)의 하나 이상의 컴포넌트(들) 및/또는 기능(들)은 존재 센서(들)(167)로부터의 출력에 기초하여 인간 존재의 검출에 응답하여 개시될 수 있다. 자동 어시스턴트 클라이언트(170)의 시작 컴포넌트(들) 및/또는 기능(들)이 하나 이상의 사용자의 존재를 먼저 검출하는 것을 조건으로 하는 구현에서, 전력 자원이 보존될 수 있다. The client device 160 may also include one or
자동 어시스턴트 클라이언트(170)는 명시적 호출 큐(신호)의 발생 검출 및/또는 암시적 호출 큐(신호)(들)의 발생 검출에 응답하여 온-디바이스 음성 인식 엔진(173)을 활성화한다. 활성화되면, 온-디바이스 음성 인식 엔진(173)은 오디오 데이터에 의해 캡처된 발화(음성 발화)(있는 경우)에서 인식된 텍스트를 결정하기 위해 온-디바이스 음성 인식 모델(단순화를 위해 도 1에 도시되지 않음)을 사용하여 마이크로폰(들)(165)에 의해 캡처된 오디오 데이터를 처리한다. 온-디바이스 음성 인식 모델은 선택적으로 종단 간 모델일 수 있으며, 추가로 인식된 텍스트 가설(가정)(hypotheses)을 생성하고 다양한 고려 사항을 사용하여 최상의 가설을 선택하는 하나 이상의 기술로 선택적으로 보완될 수 있다. 처리된 오디오 데이터에는 온-디바이스 음성 인식이 활성화된 후 캡처된 오디오 데이터와 선택적으로 로컬 버퍼링된 최근 오디오 데이터(예를 들어, 온-디바이스 음성 인식 엔진(173)의 활성화 이전에 버퍼링됨)가 포함될 수 있다. 온-디바이스 음성 인식 엔진(173)에 의해 처리된 오디오 데이터는 원시(raw) 오디오 데이터 및/또는 그 표현을 포함할 수 있다. 오디오 데이터는 새로운 오디오 데이터가 검출됨에 따라 스트리밍 방식으로 온-디바이스 음성 인식 엔진(173)에 제공될 수 있다. The automated assistant client 170 activates the on-device speech recognition engine 173 in response to detecting the occurrence of an explicit call queue (signal) and/or detecting the occurrence of an implicit call queue (signal)(s). When activated, the on-device speech recognition engine 173 uses the on-device speech recognition model (shown in FIG. 1 for simplicity) to determine text recognized from utterances (voice utterances) (if any) captured by the audio data. not used) to process audio data captured by the microphone(s) 165 . The on-device speech recognition model can optionally be an end-to-end model, optionally supplemented with one or more techniques that further generate recognized text hypotheses (hypotheses) and use various considerations to select the best hypothesis. can The processed audio data will include audio data captured after on-device speech recognition is activated and optionally local buffered recent audio data (eg, buffered prior to activation of the on-device speech recognition engine 173 ). can The audio data processed by the on-device speech recognition engine 173 may include raw audio data and/or a representation thereof. Audio data may be provided to the on-device voice recognition engine 173 in a streaming manner as new audio data is detected.
일부 구현에서, 온-디바이스 음성 인식 엔진(173)이 활성화될 때, 이러한 활성화가 발생했음을 사용자에게 알리고 및/또는 인식이 발생함에 따라 인식된 텍스트의 스트림을 렌더링하기 위해 인간이 인지할 수 있는 큐(들)가 렌더링된다. 시각적 렌더링은 또한 터치 스크린 디스플레이에서 터치 입력을 통해 선택될 때 온-디바이스 음성 인식 엔진(173)을 중지하는 선택 가능한 "cancellation(취소)" 요소를 포함할 수 있다. 본 명세서에 사용된 바와 같이, 음성 인식 엔진(173) 또는 다른 컴포넌트를 활성화하는 것은 적어도 활성화 전에 이전에 수행하고 있던 것 이상으로 처리를 수행하게 하는 것을 의미한다. 완전히 휴면 상태에서 활성화하는 것을 의미할 수 있다. In some implementations, when the on-device speech recognition engine 173 is activated, a human perceptible queue to notify the user that such activation has occurred and/or render a stream of recognized text as recognition occurs. (s) are rendered. The visual rendering may also include a selectable “cancellation” element that stops the on-device speech recognition engine 173 when selected via touch input on the touch screen display. As used herein, activating the speech recognition engine 173 or other component means at least causing it to perform a process beyond what it was previously performing prior to activation. It can mean activating from a completely dormant state.
온-디바이스 NLU 엔진(174), 온-디바이스 이행 엔진(175), 및/또는 온-디바이스 실행 엔진(176)은 명시적 및/또는 암시적 호출 큐의 발생을 검출하는 것에 응답하여 선택적으로 활성화될 수 있다. 대안적으로, 상기 엔진들 중 하나 이상은 온-디바이스 음성 인식 엔진(173)으로부터 인식된 텍스트의 초기 분석에 기초하여 활성화될 수 있으며, 이는 인식된 텍스트가 어시스턴트 요청일 가능성이 있음을 표시한다.The on-
온-디바이스 NLU 엔진(174)이 활성화되면, 온-디바이스 NLU 엔진(174)은 NLU 데이터를 생성하기 위해 온-디바이스 음성 인식 엔진(173)에 의해 생성된 인식된 텍스트에 대해 온-디바이스 자연어 이해(natural language understanding: NLU)를 수행한다. NLU 엔진(174)은 NLU 데이터를 생성할 때 하나 이상의 온-디바이스 NLU 모델(단순화를 위해 도 1에 도시되지 않음)을 선택적으로 이용할 수 있다. NLU 데이터는 예를 들어 발화에 대응하는 의도(들) 및 의도(들)에 대한 선택적으로 파라미터(들)(예를 들어, 슬롯 값)를 포함할 수 있다. When the on-
또한, 온-디바이스 이행 엔진(145)이 활성화되면, 온-디바이스 이행 엔진(145)은 (온-디바이스 음성 인식 엔진(173)으로부터의) 인식된 텍스트를 사용하여 및/또는 (온-디바이스 NLU 엔진(174)으로부터) NLU 데이터를 사용하여 이행 데이터를 생성한다. 온-디바이스 이행 엔진(145)은 인식된 텍스트 및/또는 NLU 데이터가 프로액티브 캐시의 프로액티브 캐시 엔트리의 어시스턴트 요청 파라미터와 매칭하는지 여부를 결정할 때 클라이언트 장치(160)에 로컬로 저장된 프로액티브 캐시(178)에 액세스할 수 있다. 그렇다면, 온-디바이스 이행 엔진(145)은 생성된 이행 데이터의 전부 또는 일부로서 매칭하는 프로액티브 캐시 엔트리의 액션 콘텐츠를 활용할 수 있다. 액션 콘텐츠는 요청 및/또는 이러한 요청을 이행하는 것과 연관된 데이터에 기초하여 취해질 액션을 포함할 수 있다. 그렇지 않다면, 온-디바이스 이행 엔진(145)은 이행 데이터를 생성하려고 시도할 때 다른 온-디바이스 이행 모델(들)(존재한다면)을 선택적으로 활용할 수 있거나 원격 자동 어시스턴트 컴포넌트(들)(180)로부터 원격 이행 데이터를 기다릴 수 있다(예를 들어, 자동 어시스턴트 클라이언트(170)가 온라인이고 이행 데이터를 생성하기 위해 원격 자동 어시스턴트 컴포넌트(들)(180)에 인식된 텍스트 및/또는 기타 데이터를 제공할 때). 온-디바이스 음성 인식과 로컬 프로액티브 캐시를 결합하면 서버와 데이터를 주고받을 필요가 줄어들어 대역폭과 네트워크 리소스의 사용이 줄어든다. 또한 네트워크 연결이 열악하거나 없는 지역에서도 사용자에게 짧은 대기 시간 응답을 제공할 수 있다. Further, when the on-device adherence engine 145 is activated, the on-device adherence engine 145 uses the recognized text (from the on-device speech recognition engine 173) and/or (on-device NLU). NLU data (from engine 174) is used to generate adherence data. When determining whether recognized text and/or NLU data matches an assistant request parameter in a Proactive Cache entry in the Proactive Cache, the on-device fulfillment engine 145 is configured to store the Proactive Cache ( 178) can be accessed. If so, the on-device adherence engine 145 may utilize the action content of the matching proactive cache entry as all or part of the generated adherence data. The action content may include actions to be taken based on the request and/or data associated with fulfilling the request. Otherwise, the on-device adherence engine 145 may optionally utilize other on-device adherence model(s) (if present) when attempting to generate adherence data or from remote automated assistant component(s) 180 . may wait for remote adherence data (eg, when automated assistant client 170 is online and provides recognized text and/or other data to remote automated assistant component(s) 180 to generate adherence data) ). Combining on-device speech recognition with local proactive cache reduces the need to send data to and from servers, reducing bandwidth and network resource usage. It can also provide users with a low latency response even in areas with poor or no network connectivity.
인식된 텍스트 또는 NLU 데이터가 프로액티브 캐시의 프로액티브 캐시 엔트리의 어시스턴트 요청 파라미터와 매칭하는지 여부를 결정할 때, 온-디바이스 이행 엔진(145)은 정확한 매칭 및/또는 소프트 매칭를 활용할 수 있다. 예를 들어, 인식된 텍스트가 어시스턴트 요청 파라미터와 매칭하는지 여부를 결정할 때, 온-디바이스 이행 엔진(145)은 어시스턴트 요청 파라미터의 텍스트에 대한 인식된 텍스트의 정확한 매칭를 요구하거나 최소한의 변동(variation)만 허용(예: 특정 불용어의 포함 또는 제외)할 수 있다. 또한, 예를 들어, NLU 데이터가 어시스턴트 요청 파라미터와 매칭하는지 여부를 결정할 때, 온-디바이스 이행 엔진(145)은 어시스턴트 요청 파라미터의 NLU 데이터에 대한 NLU 데이터의 정확한 매칭을 요구할 수 있다. 온-디바이스 음성 인식에 의해 결정된 인식된 텍스트와 관련하여 다양한 예가 여기에 설명되어 있지만, 타이핑된 텍스트(예: 가상 키보드를 사용하여 입력) 및/또는 타이핑된 텍스트를 기반으로 하는 NLU 데이터도 유사한 방식으로 제공 및 응답될 수 있음을 이해해야 한다. When determining whether recognized text or NLU data matches an assistant request parameter in a Proactive Cache entry in the Proactive Cache, the on-device fulfillment engine 145 may utilize an exact match and/or soft match. For example, when determining whether recognized text matches an assistant request parameter, the on-device fulfillment engine 145 may require an exact match of the recognized text to the text of the assistant request parameter or with minimal variation. You can allow (eg, include or exclude certain stopwords). Also, for example, when determining whether the NLU data matches an assistant request parameter, the on-device fulfillment engine 145 may require an exact match of the NLU data to the NLU data in the assistant request parameter. Although various examples are described herein with respect to recognized text determined by on-device speech recognition, typed text (eg, input using a virtual keyboard) and/or NLU data based on typed text may be performed in a similar manner. It should be understood that it can be provided and answered as
이행 데이터가 온-디바이스 이행 엔진(175)에 의해 생성될 때, 그 다음, 이행 데이터는 이행 데이터에 기초한 온-디바이스 실행(예: 프로액티브 캐시 엔트리의 액션 콘텐츠를 기반으로 하는 액션의 온-디바이스 퍼포먼스(performance))을 위해 온-디바이스 실행 엔진(176)에 제공될 수 있다. 이행 데이터의 액션 콘텐츠를 기반으로 하는 온-디바이스 실행은, 예를 들어, 액션 콘텐츠에 포함된 딥링크를 실행하는 것; 액션 콘텐츠에 포함된 텍스트, 그래픽 및/또는 오디오(또는 온 디바이스 음성 합성기를 사용하여 응답에서 변환된 오디오 데이터)를 렌더링하는 것; 및/또는 상기 주변기기(들)를 제어하기 위해 상기 주변기기(들)로 상기 액션 콘텐츠에 포함된 명령을 (예: WiFi 및/또는 Bluetooth를 통해) 전송하는 것을 포함한다.When the adherence data is generated by the on-
프리페치(prefetch) 엔진(177)은 프로액티브 캐시 시스템(120)으로부터, 프로액티브 캐시(178)에 포함시키기 위한 프로액티브 캐시 엔트리를 프리페치한다. 프리페치되어 프로액티브 캐시(178)에 저장되는 하나 이상의 프로액티브 캐시 엔트리는 자동 어시스턴트 클라이언트(170) 및/또는 액션 콘텐츠와 함께 이전에 제공된 임의의 사용자 입력과 매칭하지 않는 어시스턴트 요청 파라미터를 갖는 프로액티브 캐시 엔트리일 수 있다. 자동 어시스턴트 클라이언트(170)에 의해 사용된 적이 없는 것이다. 따라서, 이러한 캐시 엔트리는 자동 어시스턴트 클라이언트(170)에서 수신된 적이 없는 다양한 사용자 입력에 대한 어시스턴트 응답을 제공하는 시간을 줄일 수 있다.A
일부 구현 및/또는 상황에서, 프로액티브 캐시 시스템(120)은 선택적으로 프로액티브 캐시 엔트리를 프리페치 엔진(177)에 푸시할 수 있다. 그러나, 다른 구현 및/또는 상황에서, 프로액티브 캐시 시스템(120)은 프리페치 엔진(177)으로부터의 프리페치 요청에 응답하여 프로액티브 캐시 엔트리를 전송한다. 이러한 구현들 중 일부에서, 프리페치 엔진(177)은 하나 이상의 조건(들)이 만족되는지 결정하는 것에 응답하여 프리페치 요청을 전송한다. 조건(들)은 예를 들어, In some implementations and/or situations, the Proactive Cache system 120 may optionally push Proactive Cache entries to the
특정 네트워크 조건(들)이 존재하는지 여부(예: Wi-Fi 네트워크 연결 및/또는 특정 대역폭 조건이 있는 Wi-Fi 네트워크 연결); 클라이언트 장치(160)가 충전 중이고 및/또는 적어도 임계값 배터리 충전 상태를 갖고 있음; 클라이언트 장치가 사용자에 의해 적극적으로 활용되고 있지 않음(예: 온-디바이스 가속도계 및/또는 자이로스코프 데이터 기반); 클라이언트 장치의 현재 프로세서 사용량 및/또는 현재 메모리 사용량이 특정 임계값을 초과하지 않음, 중에서 하나 이상을 포함할 수 있다. 따라서, 프로액티브 캐시 엔트리는 특정 이상적인 조건(들)이 존재하는 기간 동안 검색될 수 있지만 이후에는 특정 이상적인 조건(들)이 존재하지 않는 조건을 포함하여 모든 조건에서 활용된다. whether certain network condition(s) exist (eg, a Wi-Fi network connection and/or a Wi-Fi network connection with a specific bandwidth condition); client device 160 is charging and/or has at least a threshold battery state of charge; The client device is not being actively utilized by the user (eg, based on on-device accelerometer and/or gyroscope data); current processor usage and/or current memory usage of the client device does not exceed a specific threshold. Thus, a Proactive Cache entry can be retrieved for a period in which the specific ideal condition(s) exists, but is subsequently utilized in all conditions, including those in which the specific ideal condition(s) does not exist.
프리페치 엔진(177)으로부터의 프리페치 요청은 클라이언트 장치(160) 및/또는 클라이언트 장치와 연관된 계정의 식별자를 포함할 수 있고 및/또는 프로액티브 캐시(178)에 이미 저장된 프로액티브 캐시 엔트리의 다른 표시를 포함할 수 있다. 프로액티브 캐시 시스템(120)은 프리페치 요청에 응답하여 프로액티브 캐시에 이미 저장되지 않은 프로액티브 캐시 엔트리만을 제공하기 위해, 프로액티브 캐시(178)에 이미 저장된 프로액티브 캐시 엔트리의 표시를 활용할 수 있다. 이는 프로액티브 캐시(178)를 완전히 대체하기 위해 기존 캐시 엔트리과 함께 신규/업데이트된 프로액티브 캐시 엔트리를 전송하는 대신, 프로액티브 캐시(178)에 추가하기 위해 신규/업데이트된 프로액티브 캐시 엔트리만을 전송함으로써 네트워크 리소스를 보존할 수 있다. 일례로서, 프로액티브 캐시 시스템(120)은 클라이언트 장치(160)의 식별자에 대해, 프로액티브 캐시(178) 내의 활성 프로액티브 캐시 엔트리의 목록을 유지할 수 있다. 프로액티브 캐시 시스템(120)은 식별자를 포함하는 프리페치 요청에 응답하여 제공할 새로운(신규)/업데이트된 프로액티브 캐시 엔트리를 결정할 때 이러한 목록을 활용할 수 있다. 또 다른 예로, 프리페치 요청은 프로액티브 캐시(178)에 저장된 프로액티브 캐시 엔트리의 세트에 매핑되는 토큰 또는 다른 식별자를 포함할 수 있으며, 프로액티브 캐시 시스템(120)은 매핑된 세트에 없고 토큰을 포함하는 프리페치 요청에 응답하여 제공되어야 하는 새로운/업데이트된 프로액티브 캐시 엔트리를 결정하는 데 이러한 토큰을 활용할 수 있다. The prefetch request from the
프리페치 엔진(177)은 또한 프로액티브 캐시(178)로부터 프로액티브 캐시 엔트리를 선택적으로 제거할 수 있다. 예를 들어, 프로액티브 캐시 엔트리는 메타데이터의 일부로 TTL(Time to Live) 값을 포함할 수 있다. TTL 값은 기간 또는 임계값 기간을 정의할 수 있으며, 그 이후에는 프로액티브 캐시 엔트리가 오래된 것으로 간주되어 결과적으로 온-디바이스 이행 엔진(175)에 의해 활용되지 않고 및/또는 프리페치 엔진(177)에 의해 프로액티브 캐시(178)로부터 제거된다. 예를 들어, 프로액티브 캐시 엔트리의 TTL 값이 7일 동안 유지되어야 함을 나타내고, 프로액티브 캐시 엔트리의 타임스탬프가 8일 전에 수신되었음을 나타내는 경우, 프리페치 엔진(177)은 프로액티브 캐시(178)로부터 프로액티브 캐시 엔트리를 제거할 수 있다. 이는 클라이언트 장치(160)의 제한된 저장 자원(리소스)을 해제할 수 있고, 클라이언트 장치(160)의 제한된 저장 자원으로 인해 전체 크기가 제한될 수 있는 프로액티브 캐시(178)에 다른 시기적절한 프로액티브 캐시 엔트리를 위한 공간을 만들 수 있다.
일부 구현에서, 프리페치 엔진(177)은 제거된 프로액티브 캐시 엔트리 중 하나 이상이 TTL 값에 기초하여 오래된(stale) 것으로 표시되지 않음에도 불구하고, 새로운 프로액티브 캐시 엔트리를 위한 공간을 만들기 위해 프로액티브 캐시(178)로부터 프로액티브 캐시 엔트리를 추가로 또는 대안적으로 제거할 수 있다. 예를 들어, 프로액티브 캐시(178)는 예를 들어 클라이언트 장치(160)의 저장 용량에 기초하여 사용자 설정 및/또는 결정될 수 있는 최대 크기를 가질 수 있다. 프리페치 요청으로부터의 새로운 프로액티브 캐시 엔트리가 최대 크기를 초과할 경우, 프리페치 엔진(177)은 새로운 프로액티브 캐시 엔트리를 위한 공간을 만들기 위해 하나 이상의 기존 캐시 엔트리를 제거할 수 있다. 일부 구현에서, 프로액티브 캐시 엔트리는 캐시 엔트리의 타임스탬프에 기초하여 제거될 수 있으며, 예를 들어 가장 오래된 프로액티브 캐시 엔트리는 프리페치 엔진(177)에 의해 먼저 제거될 수 있다. 일부 구현에서, 기존의 프로액티브 캐시 엔트리에 대한 메타데이터는 점수, 순위(랭킹) 또는 다른 우선순위 데이터(본 명세서에서 보다 일반적으로 순위 메트릭(들)이라고도 함)를 포함할 수 있고, 가장 낮은 우선순위를 갖는 것들은 프리페치 엔진(177)에 의해 제거될 수 있다. 추가적으로 또는 대안적으로, 프리페치 엔진(177)은 사용된 적이 없는 프로액티브 캐시 엔트리를 제거하는 쪽으로 편향될 수 있고, 선택적으로는 적어도 임계 기간 동안 프로액티브 캐시에 존재하고 사용된 적이 없는 것으로 편향되도록 타임스탬프를 고려할 수 있다. 추가적으로 또는 대안적으로, 프로액티브 캐시 시스템(120)은 프리페치 요청에 응답하여 어떤 기존의 프로액티브 캐시 엔트리가 제거되어야 하는지에 대한 표시를 선택적으로 제공할 수 있다.In some implementations, the
프로액티브 캐시 시스템(120)은 프로액티브 캐시 엔트리를 생성하고 그리고 요청하는 클라이언트 장치에 대해 선택된 프로액티브 캐시 엔트리로, 클라이언트 장치(160) 및 다른 클라이언트 장치로부터의 프리페치 요청에 응답한다. 프로액티브 캐시 시스템(120)은 원격 자동 어시스턴트 컴포넌트(들)(180)에 의해 활용되고 그리고 각각 하나 이상의 클라이언트 장치에 특정될 수 있는 원격 프로액티브 캐시(들)(184)를 추가로 생성할 수 있다. The Proactive Cache system 120 responds to prefetch requests from the client device 160 and other client devices by creating a Proactive Cache entry and with the Proactive Cache entry selected for the requesting client device. Proactive Cache system 120 may further create remote Proactive Cache(s) 184 utilized by remote automated assistant component(s) 180 and may each be specific to one or more client devices. .
프로액티브 캐시 시스템(120)은 캐시 엔트리 생성 엔진(130), 캐시 어셈블리 엔진(140), 및 엔티티 이벤트 엔진(150)을 포함할 수 있다. 일반적으로, 캐시 엔트리 생성 엔진(130)은 본 명세서에 설명된 다양한 기술을 이용하여 많은 양의 후보 프로액티브 캐시 엔트리(캐시 후보(134)로서 도 1 및 2에서 참조됨)를 생성한다. 캐시 어셈블리 엔진(140)은 복수의 클라이언트 장치 각각에 대해, 해당 클라이언트 장치의 로컬 프로액티브 캐시에 저장하기 위해 해당 클라이언트 장치에 제공되어야 하는 캐시 후보(134)의 해당 서브세트를 결정한다. 캐시 어셈블리 엔진(140)은 또한 각각 클라이언트 장치의 서브세트과 연결되고 그리고 캐시 후보의 해당 서브세트를 포함하고, 해당 클라이언트 장치(들)에 대한 이행에서 원격 자동 어시스턴트 컴포넌트(들)(180)에 의해 각각 활용된, 원격 프로액티브 캐시(들)(184)를 선택적으로 생성할 수 있다. 엔티티 이벤트 엔진(150)은 선택적으로 하나 이상의 원격 시스템(151)과의 인터페이싱을 통해 다양한 엔티티와 연관된 이벤트의 발생을 결정할 수 있다. 일부 구현에서, 엔티티 이벤트 엔진(150)은 이러한 이벤트와 연관된 정보를 캐시 엔트리 생성 엔진(130)에 제공하여 캐시 엔트리 생성 엔진(130)이 엔티티에 대한 하나 이상의 대응하는 캐시 후보(130)를 생성하게 할 수 있다. 일부 구현에서, 엔티티 이벤트 엔진(150)은 이벤트 캐시 어셈블리 엔진(140)과 연관된 정보를 추가로 또는 대안적으로 제공할 수 있으며, 이는 다양한 캐시 후보를 해당 클라이언트 장치에 제공할지 및/또는 원격 프로액티브 캐시(들)(184)에 포함할지 여부를 결정하는 데 정보를 사용할 수 있다. The proactive cache system 120 may include a cache entry creation engine 130 , a cache assembly engine 140 , and an entity event engine 150 . In general, cache entry creation engine 130 generates a large amount of candidate proactive cache entries (referred to in FIGS. 1 and 2 as cache candidate 134 ) using various techniques described herein. The cache assembly engine 140 determines, for each of the plurality of client devices, a corresponding subset of
도 1에 도시된 바와 같이, 캐시 엔트리 생성 엔진(130)은 요청 파라미터 모듈(131), 액션 콘텐츠 모듈(132), 및 메타데이터 모듈(133)을 포함한다. 요청 파라미터 모듈(131)은 각각의 프로액티브 캐시 엔트리에 대한 어시스턴트 요청 파라미터를 생성한다. 프로액티브 캐시 엔트리의 어시스턴트 요청 파라미터는 소정의 액션(들)을 수행하기 위한 하나 이상의 어시스턴트 요청을 나타낸다. 어시스턴트 요청은 지정된 액션의 수행을 요청하는 입력된(typed) 발화 또는 음성 발화일 수 있다. 예를 들어, 여러 어시스턴트 요청은 "오늘의 일기예보", "오늘의 지역예보", "오늘의 날씨", "날씨(how's the weather)"와 같은 입력 또는 음성 발화와 같은 현재 날짜에 대한 지역 예보를 렌더링하기 위한 요청일 수 있다. 요청 파라미터 모듈(131)은 동일한 소정의 액션(들)을 수행하기 위한 다수의 어시스턴트 요청을 캡처하는 텍스트 표현 및/또는 NLU 표현을 생성하려고 한다. 예를 들어, 앞의 발화 각각의 텍스트는 어시스턴트 요청 파라미터 및/또는 {intent=weather; location=local; date=today}({인텐트=날씨; 위치=로컬; 날짜=오늘})의 구조화된 표현과 같은 모든 발화에 공통인 NLU 표현으로 포함될 수 있다.As shown in FIG. 1 , the cache entry creation engine 130 includes a request parameter module 131 , an action content module 132 , and a metadata module 133 . The request parameters module 131 generates assistant request parameters for each proactive cache entry. An assistant request parameter of a Proactive Cache entry indicates one or more assistant requests to perform a given action(s). The assistant request may be a typed utterance or a voice utterance requesting to perform a specified action. For example, multiple assistant requests may include input such as "today's weather", "today's local forecast", "today's weather", "how's the weather", or local forecast for the current date, such as spoken utterances. may be a request to render The request parameters module 131 attempts to generate a textual representation and/or an NLU representation that captures multiple assistant requests to perform the same given action(s). For example, the text of each of the preceding utterances may include an assistant request parameter and/or {intent=weather; location=local; It can be included as an NLU representation common to all utterances, such as a structured representation of date=today}({intent=weather; location=local; date=today}).
액션 콘텐츠 모듈(132)은 각각의 프로액티브 캐시 엔트리에 대한 액션 콘텐츠를 생성한다. 액션 콘텐츠는 프로액티브 캐시 엔트리에서 프로액티브 캐시 엔트리까지 다양할 수 있다. 프로액티브 캐시 엔트리에 대한 액션 콘텐츠에는 예를 들어 실행할 딥링크; 렌더링될 텍스트, 그래픽 및/또는 오디오; 및/또는 주변 장치에 전송될 명령이 포함될 수 있다.The action content module 132 creates action content for each proactive cache entry. Action content can vary from a Proactive Cache entry to a Proactive Cache entry. Action content for a Proactive Cache entry may include, for example, a deep link to execute; text, graphics and/or audio to be rendered; and/or a command to be transmitted to a peripheral device.
오늘의 예에 대한 로컬 예보(local forecast)를 계속하면, 액션 콘텐츠 모듈(132)은 여러 캐시 엔티티 각각에 대해 서로 다른 액션 콘텐츠를 생성할 수 있으며, 각각에 대한 액션 콘텐츠는 다른 지리적 영역에 맞춰져 있다. 예를 들어, 제1 프로액티브 캐시 엔트리는 제1 도시에 대한 것일 수 있으며, 렌더링될 텍스트, 그래픽 및/또는 오디오를 포함하고 그리고 제1 도시에 대한 일일 예보를 지정하는 어시스턴트 요청 파라미터 및 제1 액션 콘텐츠를 포함할 수 있다. 제2 프로액티브 캐시 엔트리는 제2 도시에 대한 것일 수 있으며, 동일한(또는 유사한) 어시스턴트 요청 파라미터를 포함하지만 렌더링할 텍스트, 그래픽 및/또는 오디오를 포함하고 제2 도시에 대한 이질적인 일일 예보를 지정하는 제2 액션 콘텐츠를 포함한다. 캐시 어셈블리 엔진(140)과 관련하여 설명된 바와 같이, 이들 2개의 이종 캐시 엔트리는 클라이언트 장치의 속성(들)에 기초하여 상이한 클라이언트 장치 및/또는 원격 프로액티브 캐시(들)(184)에 제공될 수 있다. 예를 들어, 제1 도시의 제1 클라이언트 장치에는 제1 프로액티브 캐시 엔트리가 제공될 수 있지만 제2 프로액티브 캐시 엔트리는 제공되지 않을 수 있다. Continuing the local forecast for today's example, the action content module 132 may generate different action content for each of several cache entities, the action content for each being tailored to a different geographic region. . For example, the first proactive cache entry may be for a first city, the assistant request parameter including text, graphics and/or audio to be rendered, and specifying a daily forecast for the first city, and a first action It may contain content. A second proactive cache entry may be for a second city, containing the same (or similar) assistant request parameters, but containing text, graphics and/or audio to render, and specifying a disparate daily forecast for the second city; Includes second action content. As described with respect to the cache assembly engine 140 , these two heterogeneous cache entries may be provided to different client devices and/or remote proactive cache(s) 184 based on the attribute(s) of the client device. can For example, a first client device in a first city may be provided with a first proactive cache entry but not a second proactive cache entry.
일부 구현들에서, 액션 콘텐츠 모듈(132)은 각각에 대한 액션 콘텐츠가 하나 이상의 상이한 애플리케이션(들)에 맞춰진 상태에서, 다수의 캐시 엔트리들 각각에 대해 상이한 액션 콘텐츠를 생성할 수 있다. 예를 들어, 제1 프로액티브 캐시 엔트리는 "play Hypothetical Artist(가상 아티스트 재생)", "listen to some Hypothetical Artist(가정 아티스트 듣기)" 및/또는 "{intent=listen to music; artist= Hypothetical Artist}{인텐트=음악 듣기; 아티스트= 가상의 아티스트}"의 어시스턴트 요청 파라미터를 포함할 수 있다. 제2 프로액티브 캐시 엔트리는 동일한(또는 유사한) 어시스턴트 요청 파라미터를 포함할 수 있다. 그럼에도 불구하고, 액션 콘텐츠 모듈(132)은, 제1 프로액티브 캐시 엔트리에 대해, 실행될 때 가상 아티스트의 음악이 스트리밍을 시작하게 하는 상태에서 제1 음악 애플리케이션이 열리도록(오픈되도록) 하는 딥링크를 포함하는 제1 액션 콘텐츠를 생성할 수 있다. 액션 콘텐츠 모듈(132)은 제2 프로액티브 캐시 엔트리에 대해, 실행될 때 가상 아티스트의 음악이 스트리밍을 시작하게 하는 상태에서 제2 음악 애플리케이션이 열리도록 하는 다른 딥링크를 포함하는 제2 액션 콘텐츠를 생성할 수 있다. 캐시 어셈블리 엔진(140)과 관련하여 설명된 바와 같이, 이들 2개의 이종 캐시 엔트리는 클라이언트 장치의 속성(들)에 기초하여 상이한 클라이언트 장치 및/또는 원격 프로액티브 캐시(들)(184)에 제공될 수 있다. 즉, 클라이언트 장치가 음악 스트리밍을 위한 선호 애플리케이션으로 설치 및/또는 표시한 애플리케이션(들)을 기반으로 한다. 예를 들어, 유일한 음악 스트리밍 애플리케이션으로서 제1 애플리케이션을 갖는 제1 클라이언트 장치는 제1 프로액티브 캐시 엔트리를 제공받을 수 있지만, 제2 프로액티브 캐시 엔트리는 제공받지 않을 수 있다. In some implementations, the action content module 132 may generate different action content for each of multiple cache entries, with the action content for each tailored to one or more different application(s). For example, the first Proactive Cash entry may be "play Hypothetical Artist", "listen to some Hypothetical Artist" and/or "{intent=listen to music; artist= Hypothetical Artist} {Intent=Listen to music; Artist=Virtual artist}". The second proactive cache entry may include the same (or similar) assistant request parameters. Nevertheless, the action content module 132 creates, for the first proactive cache entry, a deep link that, when executed, causes the first music application to open (to open) with the virtual artist's music starting to stream. It is possible to generate the first action content including The action content module 132 creates, for the second proactive cache entry, a second action content comprising another deep link that, when executed, causes a second music application to open with the virtual artist's music starting to stream. can do. As described with respect to the cache assembly engine 140 , these two heterogeneous cache entries may be provided to different client devices and/or remote proactive cache(s) 184 based on the attribute(s) of the client device. can That is, based on the application(s) the client device has installed and/or marked as the preferred application for streaming music. For example, a first client device having a first application as the only music streaming application may be provided with a first Proactive Cache entry but not a second Proactive Cache entry.
일부 어시스턴트 요청 파라미터의 경우 하나의(단일) 프로액티브 캐시 엔트리만 있을 수 있다. 예를 들어, "Cavalier King Charles Spaniel(개 품종)"의 이미지를 찾는 어시스턴트 요청과 연관된 어시스턴트 요청 파라미터의 경우, "Cavalier King Charles Spaniel"의 이미지가 있는 액션 콘텐츠를 포함하는 단일 프로액티브 캐시 엔트리가 제공될 수 있다.For some assistant request parameters there can be only one (single) Proactive Cache entry. For example, for an assistant request parameter associated with an assistant request looking for an image of "Cavalier King Charles Spaniel (dog breed)", a single Proactive Cash entry containing action content with an image of "Cavalier King Charles Spaniel" is served. can be
메타데이터 모듈(133)은 선택적으로 캐시 엔트리에 대한 메타데이터를 생성한다. 메타데이터의 일부는 클라이언트 장치에 반드시 전송될 필요 없이 프로액티브 캐시 시스템(120)에 의해 선택적으로 이용될 수 있다. 예를 들어, 메타데이터 모듈(133)은 프로액티브 캐시 엔트리와 연관된 하나 이상의 엔티티, 프로액티브 캐시 엔트리에 대한 액션 콘텐츠의 언어, 및/또는 프로액티브 캐시 엔트리에 대한 다른 데이터를 나타내는 프로액티브 캐시 엔트리에 대한 메타데이터를 생성할 수 있다. 캐시 어셈블리 엔진(140)은 어떤 클라이언트 장치(들)에 프로액티브 캐시 엔트리가 제공되어야 하는지를 결정할 때 이러한 메타데이터를 활용할 수 있다. 예를 들어, 액션 콘텐츠로서, 제1 도시에 대한 지역 일기 예보를 포함하는 프로액티브 캐시 엔트리에 대해, 메타데이터 모듈(133)은 제1 도시를 나타내는 메타데이터를 생성할 수 있다. 캐시 어셈블리 엔진(140)은 현재 또는 선호되는 위치로서 제1 도시를 갖는 클라이언트 장치(들)에 대해서만 로컬 또는 원격 프로액티브 캐시에 포함하기 위한 프로액티브 캐시 엔트리를 선택할 때 이러한 메타데이터를 활용할 수 있다. 또한, 예를 들어, 액션 콘텐츠로서, 여배우와 연관된 그래픽 및/또는 텍스트를 포함하는 프로액티브 캐시 엔트리에 대해, 메타데이터 모듈(133)은 여배우를 나타내는 메타데이터를 생성할 수 있다. 캐시 어셈블리 엔진(140)은 여배우에 대응하는 속성(들)을 갖는 클라이언트 장치(들)에 대해서만 로컬 또는 원격 프로액티브 캐시에 포함하기 위해 프로액티브 캐시 엔트리를 선택할 때 이러한 메타데이터를 활용할 수 있다. 예를 들어, 클라이언트 장치(들)는 유명인에 대한 이전 시청 콘텐츠에 기초하여 여배우를 나타내는 속성(들)을 갖고 및/또는 여배우를 포함하는 스트리밍 영화 또는 텔레비전 쇼에 기초하여 여배우가 주연한 영화/쇼를 나타내는 속성을 갖는다. The metadata module 133 optionally generates metadata for the cache entry. Some of the metadata may be selectively used by the proactive cache system 120 without necessarily being transmitted to the client device. For example, the metadata module 133 may include in the Proactive Cache entry representing one or more entities associated with the Proactive Cache entry, the language of the action content for the Proactive Cache entry, and/or other data for the Proactive Cache entry. You can create metadata for The cache assembly engine 140 may utilize this metadata when determining which client device(s) should be provided with a proactive cache entry. For example, for the proactive cache entry including a local weather forecast for the first city as the action content, the metadata module 133 may generate metadata indicating the first city. The cache assembly engine 140 may utilize this metadata when selecting a Proactive Cache entry for inclusion in a local or remote Proactive Cache only for the client device(s) having the first city as the current or preferred location. Also, for a proactive cache entry that includes graphics and/or text associated with an actress, eg, as action content, the metadata module 133 may generate metadata representing the actress. The cache assembly engine 140 may utilize this metadata when selecting a Proactive Cache entry for inclusion in a local or remote Proactive Cache only for the client device(s) having the attribute(s) corresponding to the actress. For example, the client device(s) may have attribute(s) indicative of an actress based on previously viewed content about the celebrity and/or a movie/show in which the actress starred based on a streaming movie or television show that includes the actress. has properties representing
메타데이터 모듈(133)은 또한 프로액티브 캐시 엔트리와 함께 클라이언트 장치에 전송되고 및/또는 원격 프로액티브 캐시를 유지하는 데 활용되는 메타데이터를 생성할 수 있다. 예를 들어, 메타데이터 모듈(133)은 생성된 시간 및/또는 마지막으로 검증된(예: 액션 콘텐츠의 정확성 검증) 시간을 나타내는 프로액티브 캐시 엔트리에 대한 타임스탬프를 생성할 수 있다. 메타데이터 모듈(133)은 또한 프로액티브 캐시 엔트리에 대한 TTL 값을 생성할 수 있다. 소정의 프로액티브 캐시 엔트리에 대한 TTL 값은 어시스턴트 요청 파라미터 및/또는 액션 콘텐츠의 속성과 같은 다양한 고려 사항을 기반으로 생성될 수 있다. 예를 들어 날씨와 연관된 액션 콘텐츠와 같은 일부 액션 콘텐츠는 동적이며, 이러한 액션 콘텐츠가 포함된 프로액티브 캐시 엔트리는 상대적으로 짧은 TTL(예: 6시간, 12시간)을 가질 수 있다. 반면에 일부 액션 콘텐츠는 정적이며, 이러한 액션 콘텐츠가 포함된 프로액티브 캐시 엔트리는 상대적으로 긴 TTL(예: 7일, 14일, 30일)을 가질 수 있다. 또 다른 예로, 정적 콘텐츠를 포함하지만 엔티티 이벤트 엔진(150)에 의한 이벤트 검출에 기초하여 제공 및/또는 생성된 프로액티브 캐시 엔트리는 정적 콘텐츠를 포함하지만 엔티티 이벤트 엔진(150)에 의한 이벤트 검출과 무관하게 제공 및/또는 생성되는 프로액티브 캐시 엔트리보다 짧은 TTL을 가질 수 있다.The metadata module 133 may also generate metadata that is sent to the client device along with the Proactive Cache entry and/or utilized to maintain a remote Proactive Cache. For example, the metadata module 133 may generate a timestamp for the proactive cache entry indicating the time it was created and/or the time it was last verified (eg, verifying the correctness of the action content). The metadata module 133 may also generate a TTL value for the proactive cache entry. The TTL value for a given Proactive Cache entry may be generated based on various considerations such as assistant request parameters and/or attributes of the action content. For example, some action content, such as action content related to weather, is dynamic, and a Proactive Cache entry containing such action content may have a relatively short TTL (eg, 6 hours, 12 hours). On the other hand, some action content is static, and a Proactive Cache entry containing such action content may have a relatively long TTL (
도 1에 도시된 바와 같이, 캐시 어셈블리 엔진(140)은 로컬 모듈(141) 및 원격 모듈(142)을 포함한다. 로컬 모듈(141)은 캐시 후보(134)로부터 그리고 각각의 클라이언트 장치에 대해 캐시 후보(134)의 대응하는 서브세트를 선택하여 클라이언트 장치에 제공한다. 로컬 모듈(141)은 클라이언트 장치의 속성(들)과 프로액티브 캐시 엔트리의 속성(들)의 비교 및/또는 프로액티브 캐시 엔트리에 대한 순위 메트릭(들)과 같은 다양한 고려 사항을 기반으로 소정의 클라이언트 장치에 제공할 서브세트를 결정한다.As shown in FIG. 1 , the cache assembly engine 140 includes a local module 141 and a remote module 142 . The local module 141 selects from the
예를 들어, 소정의 클라이언트 장치에 대한 서브세트를 선택할 때, 로컬 모듈(141)은 메타데이터가, 해당 액션 콘텐츠는 해당 클라이언트 장치에 설치되지 않은 해당 애플리케이션에만 적용 가능하고(예: 딥링크 전용), 해당 액션 콘텐츠는 소정의 클라이언트 장치와 연결되지 않은 지리적 지역에만 적용 가능하고, 해당 액션 콘텐츠는 지정된 클라이언트 장치의 기본(선택적으로 보조) 언어로 설정되지 않은 언어로만 되어 있음을 나타내는 임의의 프로액티브 캐시 엔트리를 필터링할 수 있다. 나머지 프로액티브 캐시 엔트리는 속성(들)과 소정의 클라이언트 장치의 속성의 비교, 나머지 프로액티브 캐시 엔트리에 대한 순위 메트릭(들)(속성으로도 간주될 수 있음) 및/또는 기타 고려 사항을 기반으로 선택될 수 있다. For example, when selecting a subset for a given client device, the local module 141 contains metadata, the corresponding action content is applicable only to the corresponding application not installed on the corresponding client device (eg, only for deep linking) , any proactive cache indicating that the action content is applicable only to a geographic region not associated with a given client device, and that the action content is only in a language not set as the primary (optionally secondary) language of the given client device You can filter entries. The remaining Proactive Cache entries are based on a comparison of the attribute(s) with the attributes of a given client device, rank metric(s) (which may also be considered attributes) for the remaining Proactive Cache entries, and/or other considerations. can be selected.
예를 들어, 로컬 모듈(141)은 과거에 소정의 클라이언트 장치에 의해 상호작용하기로 결정된 하나 이상의 엔티티에 대응하는 하나 이상의 엔티티를 나타내는 메타데이터를 갖는 프로액티브 캐시 엔트리를 선택할 가능성이 더 높을 수 있다( 과거에 소정의 클라이언트 장치에 의해 상호작용하는 것으로 결정된 하나 이상의 엔티티에 대응하지 못하는 대체 엔티티를 나타내는 메타데이터를 갖는 프로액티브 캐시 엔트리와 비교됨). 또한 예를 들어, 소정의 프로액티브 캐시 엔트리에 대한 순위 메트릭(들)은 (전반적으로 또는 소정의 클라이언트 장치에 대해) 해당 어시스턴트 요청이 어시스턴트 인터페이스를 통해 제출되는 빈도 및/또는 (전반적으로 또는 소정의 클라이언트 장치에 대해) 해당 액션 콘텐츠가 렌더링되는 빈도를 나타낼 수 있다. 액션 콘텐츠의 렌더링은 액션 콘텐츠의 연관된 텍스트/그래픽/가청 콘텐츠가 액션의 수행을 위해 클라이언트 장치에서 렌더링되도록 하는 것을 포함할 수 있다. 딥링크를 실행하는 것은 관련 액션을 자동으로 수행(예: 특정 상태에 대한 애플리케이션 열기)하는 것을 포함할 수 있거나, 클라이언트 장치가 관련 액션을 수행할 준비가 된 상태에 있게 하는 것을 포함할 수 있으며, 여기서 수행(performance)은 예를 들어 사용자 인터페이스 입력에 대한 응답일 수 있다. 랭킹(순위) 메트릭(들)은 또한 엔티티 이벤트 모듈(150)에 의해, 소정의 프로액티브 캐시 엔트리와 연관된 최근 이벤트 검출에 기초할 수 있다. 예를 들어, 소정의 프로액티브 캐시에 새 주변 장치(예: 새로운 스마트 온도 조절기)를 설치하기 위한 어시스턴트 요청 파라미터와 설치 명령어가 포함된 액션 콘텐츠가 포함되어 있다고 가정한다. 엔티티 이벤트 모듈(150)이 새로운 주변 장치와 연관된 요청(어시스턴트 요청, 검색 엔진 요청 또는 기타 요청)의 상당한 증가 및/또는 새로운 주변 장치와 연관된 콘텐츠(예: 웹페이지, 소셜 미디어 댓글)의 상당한 증가를 결정하는 경우, 해당 순위(랭킹) 메트릭은 더 높은 순위를 표시하고 프로액티브 캐시 엔트리가 선택될 가능성을 높일 수 있다. For example, the local module 141 may be more likely to select a proactive cache entry having metadata representing one or more entities corresponding to one or more entities that have been determined to interact with by a given client device in the past. (Compared to a Proactive Cache entry with metadata representing alternate entities that do not correspond to one or more entities that have been determined to interact with by a given client device in the past). Also for example, the rank metric(s) for a given Proactive Cache entry can be determined by (either globally or for a given client device) the frequency with which that assistant request is submitted via the assistant interface and/or (either overall or for a given client device). may indicate how often the corresponding action content is rendered (for the client device). Rendering the action content may include causing the associated text/graphic/audible content of the action content to be rendered at the client device for performance of the action. Invoking a deep link may include automatically performing an associated action (eg, opening an application for a particular state), or it may include placing the client device in a state ready to perform the associated action; Here, the performance may be, for example, a response to a user interface input. The ranking (rank) metric(s) may also be based on detection of a recent event associated with a given proactive cache entry by the entity events module 150 . For example, suppose that a certain proactive cache contains action content including an assistant request parameter and an installation instruction for installing a new peripheral device (eg, a new smart thermostat). The entity event module 150 may cause a significant increase in requests (eg, assistant requests, search engine requests, or other requests) associated with the new peripheral device and/or a significant increase in content (eg, webpage, social media comments) associated with the new peripheral device. If so, that rank (ranking) metric may indicate a higher rank and increase the likelihood that a Proactive Cache entry will be selected.
소정의 클라이언트 장치에 대한 프로액티브 캐시 엔트리를 결정할 때, 로컬 모듈(141)은 또한 소정의 클라이언트 장치에 대한 프로액티브 캐시에 할당된 저장 공간을 고려할 수 있다. 더욱이, 소정의 클라이언트 장치가 이미 기존의 프로액티브 캐시 엔트리를 포함할 때 소정의 클라이언트 장치에 대한 새로운 프로액티브 캐시 엔트리를 제공할지 여부를 결정할 때, 기존의 프로액티브 캐시 엔트리가 고려될 수 있다. 예를 들어, 기존의 프로액티브 캐시 엔트리에 대한 순위 메트릭(들)이 고려될 수 있고 및/또는 소정의 클라이언트 장치의 기존 프로액티브 캐시의 비어 있는 저장 공간(있는 경우)이 고려될 수 있다. When determining the Proactive Cache entry for a given client device, the local module 141 may also consider the storage space allocated to the Proactive Cache for the given client device. Moreover, when determining whether to provide a new Proactive Cache entry for a given client device when the given client device already contains an existing Proactive Cache entry, the existing Proactive Cache entry may be considered. For example, a rank metric(s) for an existing Proactive Cache entry may be considered and/or an empty storage space (if any) of an existing Proactive Cache of a given client device may be considered.
원격 모듈(142)은 선택적으로 하나 이상의 원격 프로액티브 캐시(184)를 생성하고 유지한다. 원격 프로액티브 캐시(184) 각각은 클라이언트 장치의 서브세트를 위한 것이다. 원격 프로액티브 캐시(184)의 서브세트는 단일 클라이언트 장치, 또는 하나 이상의(예를 들어, 모든) 속성을 공통으로 공유하는 클라이언트 장치의 모음(컬렉션)일 수 있다. 예를 들어, 원격 프로액티브 캐시에 대한 클라이언트 장치의 컬렉션은 동일한 지리적 지역에 있고, 동일한 애플리케이션이 설치되어 있고, 및/또는 과거 상호 작용이 동일한 엔티티의 최소 임계값 수량에 대한 공통 관심을 나타내는 것일 수 있다. 클라이언트 장치(들)에 대한 원격 프로액티브 캐시(184)의 경우, 원격 모듈(142)은 필터링되지 않고 로컬 프로액티브 캐시에 저장하기 위해 이미 제공되지 않은 하나 이상의 캐시 후보(134)를 선택할 수 있다. 예를 들어, 클라이언트 장치(160)에 대해 프로액티브 캐시(178)는 500MB 제한을 갖는다고 가정한다. 또한 로컬 모듈(141)이 프로액티브 캐시(178)에 대해 500MB 가치의 프로액티브 캐시 엔트리를 이미 선택하고 제공했다고 가정한다. 그 다음, 원격 모듈(142)은 클라이언트 장치(160)를 위한 원격 프로액티브 캐시(184)에 포함시키기 위해, 로컬 캐시 모듈(141)과 동일한 고려사항(considerations)을 활용하여 추가적인 프로액티브 캐시 엔트리를 선택할 수 있다. 예를 들어, 클라이언트 장치(160)에 대한 원격 프로액티브 캐시(184)는 2GB 제한을 가질 수 있고, 원격 모듈(142)은 프로액티브 캐시 엔트리와 클라이언트 장치(160)의 속성(들)을 비교하고 및/또는 프로액티브 캐시 엔트리에 대한 순위 메트릭(들)을 고려함으로써 2GB 가치의 남아 있는 프로액티브 캐시 엔트리를 선택할 수 있다. The remote module 142 optionally creates and maintains one or more remote
엔티티 이벤트 엔진(150)은 다양한 엔티티와 연관된 이벤트의 발생을 모니터링할 때 하나 이상의 원격 시스템(151)과 인터페이스한다. 엔티티에 대한 이벤트를 결정하는 몇 가지 예는, 엔티티와 연관된 요청의 증가를 결정하는 것; 엔티티에 대한 인터넷 콘텐츠의 증가를 결정하는 것; 및/또는 엔티티와 연관된 요청의 증가를 예측하는 것을 포함한다. 예를 들어, 엔티티 이벤트 엔진(150)은 특정에 대한 어시스턴트 요청(및/또는 기존 검색 요청)의 양이 급증했는지 및/또는 특정 라우터에 대한 인터넷 콘텐츠에 스파이크(spike)가 있는지를 결정할 수 있다. 이에 응답하여, 엔티티 이벤트 엔진(150)은 스파이크와 연관된 메트릭(들)을 캐시 어셈블리 엔진(140)에 제공할 수 있고, 캐시 어셈블리 엔진(140)은 로컬 프로액티브 캐시 및/또는 원격 프로액티브 캐시을 위해 특정 라우터와 연관된 프로액티브 캐시 엔트리를 다양한 클라이언트 장치에 제공할 가능성(스파이크 이전보다)이 더 높을 수 있다. 다양한 클라이언트 장치에 대한 프로액티브 캐시 엔트리를 제공하는 것은 다양한 클라이언트 장치가 라우터와 연관된 해당 속성(들)(예: 특정 라우터 또는 일반적인 라우터에 대한 과거 검색)을 갖는지 결정하는 것에 더 기초할 수 있다.The entity event engine 150 interfaces with one or more remote systems 151 when monitoring the occurrence of events associated with various entities. Some examples of determining an event for an entity include determining an increase in requests associated with the entity; determining an increase in Internet content for the entity; and/or predicting an increase in requests associated with the entity. For example, entity event engine 150 may determine whether the amount of assistant requests (and/or existing search requests) for a particular has spiked and/or if there is a spike in Internet content for a particular router. In response, entity event engine 150 may provide metric(s) associated with the spike to cache assembly engine 140 , which cache assembly engine 140 for local Proactive Cache and/or remote Proactive Cache. It may be more likely (than before the spike) to provide a Proactive Cache entry associated with a particular router to various client devices. Providing proactive cache entries for various client devices may be further based on determining whether the various client devices have corresponding attribute(s) associated with the router (eg, past searches for a particular router or routers in general).
엔티티 이벤트 엔진(150)은 또한 스파이크의 표시를 캐시 엔트리 생성 엔진(130)에 제공할 수 있다. 이에 응답하여, 캐시 엔트리 생성 엔진(130)은 특정 라우터에 대한 하나 이상의 프로액티브 캐시 엔트리를 선택적으로 생성할 수 있다. 캐시 엔트리 생성 엔진(130)은 특정 라우터와 연관된 현재 캐시 후보(134)가 없는지 및/또는 특정 라우터와 연관된 캐시 후보(134)의 임계 수량 미만인지를 결정하는 것에 기초하여 특정 라우터에 대한 하나 이상의 프로액티브 캐시 엔트리를 선택적으로 생성할 수 있다. 예를 들어, 캐시 생성 엔진(130)은 특정 경로의 클래스(예: 라우터의 일반 클래스)를 결정할 수 있고 클래스의 엔티티에 대한 빈번한 쿼리를 위한 템플릿을 결정할 수 있다. 예를 들어, "what is the max bandwidth for [router alias]([라우터 별칭]의 최대 대역폭은?)"(다른 특정 라우터 별칭에 대한 관련 쿼리 기반) 또는 "what is the default IP address for [router alias]([라우터 별칭]의 기본 IP 주소는 무엇입니까?)"(다른 특정 라우터 별칭에 대한 관련 쿼리 기반)의 템플릿이다. 그런 다음 "router alias(라우터 별칭)"을 특정 라우터의 별칭으로 대체하여 프로액티브 캐시 엔트리에 대한 어시스턴트 요청 파라미터를 생성할 수 있다. 또한, "라우터 별칭"을 특정 라우터에 대한 별칭으로 대체하는 쿼리에 대한 상위 검색 결과의 스니펫 및/또는 다른 기술(들)을 사용하여 프로액티브 캐시 엔트리에 대한 액션 콘텐츠를 생성할 수 있다. 예를 들어, "특정 라우터의 기본 IP 주소는 무엇입니까?"라는 어시스턴트 요청에 대해 "192.168.1.1"의 액션 콘텐츠가 생성될 수 있다. The entity event engine 150 may also provide an indication of the spike to the cache entry creation engine 130 . In response, cache entry creation engine 130 may optionally create one or more proactive cache entries for a particular router. The cache entry creation engine 130 determines that there is no
일부 구현에서, 엔티티 이벤트 엔진(150)은 기존 캐시 엔트리의 액션 콘텐츠가 오래되었다는(stale) 것을 나타내는 이벤트를 결정할 수 있고, 캐시 엔트리 생성 엔진(130)에 표시를 제공하여 캐시 엔트리 생성 엔진(130)이 업데이트된 액션 콘텐츠를 반영하기 위해 새로운 캐시 엔트리를 생성하고 및/또는 오래된 콘텐츠와 함께 기존 캐시 엔트리를 제거하게 한다. 본 명세서에 사용된 바와 같이, 업데이트된 액션 콘텐츠를 반영하기 위해 새로운 프로액티브 캐시 엔트리를 생성하는 것은 새로운 액션 콘텐츠(및 선택적으로 업데이트된 메타데이터)를 반영하기 위해 기존의 프로액티브 캐시 엔트리를 업데이트하는 것을 포함할 수 있고, 동시에 프로액티브 캐시 엔트리의 어시스턴트 요청 파라미터를 유지한다. 또한 기존의 프로액티브 캐시 엔트리를 완전히 제거하고 동일한 어시스턴트 요청 파라미터를 사용하여 새로운 프로액티브 캐시 엔트리를 생성하지만 업데이트된 액션 콘텐츠(및 선택적으로 업데이트된 메타데이터)를 포함할 수도 있다. 일례로서, 엔티티 이벤트 엔진(150)은 지리적 영역에 대한 일기 예보가 적어도 임계값만큼 변경되었음을 결정할 수 있고, 결과적으로 새로운 대응하는 프로액티브 캐시 엔트리가 생성되게 할 수 있다. In some implementations, entity event engine 150 may determine an event indicating that the action content of an existing cache entry is stale, and provides an indication to cache entry creation engine 130 to provide cache entry creation engine 130 . Create a new cache entry to reflect this updated action content and/or remove the old cache entry along with the old content. As used herein, creating a new Proactive Cache entry to reflect updated action content means updating an existing Proactive Cache entry to reflect the new action content (and optionally updated metadata). , and at the same time maintaining the assistant request parameters of the Proactive Cache entry. It can also completely remove the existing Proactive Cache entry and create a new Proactive Cache entry using the same Assistant request parameters, but with updated action content (and optionally updated metadata). As an example, the entity event engine 150 may determine that the weather forecast for the geographic area has changed by at least a threshold, resulting in a new corresponding proactive cache entry being created.
일부 구현에서, 원격 자동 어시스턴트 컴포넌트(들)(180)는 음성 인식을 수행하는 원격 ASR 엔진(181), 자연어 이해를 수행하는 원격 NLU 엔진(182), 및/또는 선택적으로 여기에 설명된 원격 프로액티브 캐시(들)(184)를 활용하여 이행 데이터를 생성하는 원격 이행 엔진(183)을 포함할 수 있다. 로컬 또는 원격으로 결정된 이행 데이터를 기반으로 원격 실행을 수행하는 원격 실행 모듈도 선택적으로 포함될 수 있다. 추가 및/또는 대체 원격 엔진이 포함될 수 있다. 본 명세서에 기재된 바와 같이, 다양한 구현에서 온-디바이스 음성 처리, 온-디바이스 NLU, 온-디바이스 이행 및/또는 온-디바이스 실행은 적어도 음성 및/또는 입력된 발화를 해결할 때 제공하는 대기 시간 및/또는 네트워크 사용량 감소로 인해(발화를 해결하는 데 클라이언트-서버 라운드트립(roundtrip)(들)이 필요하지 않기 때문에) 우선 순위를 지정할 수 있다. 그러나, 하나 이상의 클라우드 기반 자동 어시스턴트 컴포넌트(들)(180)는 적어도 선택적으로 이용될 수 있다. 예를 들어, 그러한 컴포넌트(들)는 온-디바이스 컴포넌트(들)와 병렬로 활용될 수 있고 그러한 컴포넌트(들)의 출력은 로컬 컴포넌트(들)가 실패할 때 활용될 수 있다. 예를 들어, 온-디바이스 이행 엔진(175)은 특정 상황에서 실패할 수 있고(예를 들어, 크기가 제한된 프로액티브 캐시(178)가 매칭하는 프로액티브 캐시 엔트리를 포함하지 못하는 경우) 그리고 원격 이행 엔진(183)은 그러한 상황에서 이행 데이터를 생성하기 위해 보다 강력한(로버스트)(robust) 원격 프로액티브 캐시(184)(또는 원격 프로액티브 캐시가 매칭하지 않는 경우 추가 리소스)를 사용할 수 있다. 원격 이행 엔진(184)은 온-디바이스 이행 엔진(175)과 병렬로 운영될 수 있으며, 그 결과는 온디바이스 이행 실패시 활용되고, 또는 온-디바이스 이행의 실패를 결정하는 것에 응답하여 호출될 수 있다. In some implementations, remote automated assistant component(s) 180 may include a remote ASR engine 181 that performs speech recognition, a remote NLU engine 182 that performs natural language understanding, and/or optionally a remote program described herein. may include a
다양한 구현에서, NLU 엔진(온-디바이스 및/또는 원격)은 인식된 텍스트의 하나 이상의 주석(annotations)과 자연어 입력의 용어 중 하나 이상(예: 모두)을 포함하는 주석이 달린 출력을 생성할 수 있다. 일부 구현에서 NLU 엔진은 자연 언어 입력에서 다양한 유형의 문법 정보를 식별하고 주석을 달도록 구성된다. 예를 들어, NLU 엔진은 개별 단어를 형태소로 분리하고 및/또는 형태소에 예를 들어 클래스로 주석을 달 수 있는 형태학적 모듈을 포함할 수 있다. NLU 엔진은 문법적 역할로 용어에 주석을 달도록 구성된 품사 태거를 포함할 수도 있다. 또한, 예를 들어, 일부 구현에서 NLU 엔진은 추가로 및/또는 대안적으로 자연어 입력에서 용어 간의 구문 관계를 결정하도록 구성된 종속성 파서를 포함할 수 있다.In various implementations, the NLU engine (on-device and/or remote) may generate annotated output that includes one or more annotations of recognized text and one or more (eg, all) of terms from natural language input. have. In some implementations, the NLU engine is configured to identify and annotate various types of grammatical information in natural language input. For example, the NLU engine may include a morphological module that can separate individual words into morphemes and/or annotate morphemes into eg classes. The NLU engine may include a part-of-speech tagger configured to annotate terms with grammatical roles. Also, for example, in some implementations the NLU engine may additionally and/or alternatively include a dependency parser configured to determine syntactic relationships between terms in natural language input.
일부 구현에서, NLU 엔진은 추가로 및/또는 대안적으로 사람(예를 들어 문학적 인물, 유명인사, 공인 등을 포함), 조직, 위치(실제와 가상) 등에 대한 참조와 같은 하나 이상의 세그먼트에서 엔티티 참조에 주석을 달도록 구성된 엔티티 태거를 포함할 수 있다. 일부 구현에서, NLU 엔진은 추가로 및/또는 대안적으로 하나 이상의 컨텍스트 큐에 기초하여 동일한 엔티티에 대한 참조를 그룹화하거나 "클러스터링"하도록 구성된 상호참조 리졸버(coreference resolver)(도시되지 않음)를 포함할 수 있다. 일부 구현에서, NLU 엔진의 하나 이상의 컴포넌트는 NLU 엔진의 하나 이상의 다른 컴포넌트로부터의 주석에 의존할 수 있다.In some implementations, the NLU engine may additionally and/or alternatively define entities in one or more segments, such as references to people (including, for example, literary figures, celebrities, public figures, etc.), organizations, locations (real and virtual), and the like. May contain entity taggers configured to annotate references. In some implementations, the NLU engine may additionally and/or alternatively include a cross-reference resolver (not shown) configured to group or "cluster" references to the same entity based on one or more context queues. can In some implementations, one or more components of the NLU engine may rely on annotations from one or more other components of the NLU engine.
NLU 엔진은 또한 자동 어시스턴트(195)와의 상호작용에 관여하는 사용자의 의도를 결정하도록 구성된 의도 매처(intent matcher)를 포함할 수 있다. 의도 매처는 다양한 기술을 사용하여 사용자의 의도(인텐트)를 결정할 수 있다. 일부 구현에서, 의도 매처는 예를 들어 문법과 응답 의도 사이의 복수의 매핑을 포함하는 하나 이상의 로컬 및/또는 원격 데이터 구조에 액세스할 수 있다. 예를 들어, 매핑에 포함된 문법은 시간이 지남에 따라 선택 및/또는 학습될 수 있으며 사용자의 공통 의도를 나타낼 수 있다. 문법에 더하여 또는 대신에, 일부 구현에서 의도 매처는 단독으로 또는 하나 이상의 문법과 조합하여 하나 이상의 훈련된 기계 학습 모델을 사용할 수 있다. 이러한 훈련된 기계 학습 모델은 예를 들어 발화에서 인식된 텍스트를 축소된 차원 공간에 삽입하고, 그런 다음 유클리드(Euclidean) 거리, 코사인 유사성 등과 같은 기술을 사용하여 가장 근접한 다른 임베딩(및 의도)을 결정함으로써 의도를 식별하도록 훈련할 수 있다. 일부 문법에는 슬롯 값으로 채울 수 있는 슬롯(예: <artist>)이 있다. 슬롯 값은 다양한 방식으로 결정될 수 있다. 종종 사용자는 슬롯 값을 사전에 제공한다. 예를 들어, "Order me <topping> pizza" 문법의 경우, 사용자는 "order me a sausage pizza(소시지 피자를 주문하세요)"라는 문구를 말할 수 있으며 이 경우 슬롯 <topping(토핑)>이 자동으로 채워진다. 다른 슬롯 값(들)은 예를 들어 사용자 위치, 현재 렌더링된 콘텐츠, 사용자 선호도, 및/또는 기타 큐(들)에 기초하여 추론될 수 있다. 로컬적으로 구현될 수 있는 본 명세서에 설명된 의도 관리자의 사용은 클라이언트 장치에 대한 사용자 인터페이스 입력이 캐시 엔트리의 하나 이상의 어시스턴트 요청 파라미터와 매칭(선택적으로 정확히 매칭)하지 않더라도 프로액티브 캐시 엔트리가 검색되도록 허용할 수 있다. 이는 장치의 유용성을 향상시킬 수 있다. The NLU engine may also include an intent matcher configured to determine the user's intent to engage in interaction with the
도 2에 도시된 바와 같이, 예시적인 프로세스 흐름은 다양한 구현에 따라 상호 작용할 수 있는 도 1의 다양한 컴포넌트가 어떻게 되는지를 설명하는 예시이다.As shown in FIG. 2 , an exemplary process flow is an example illustrating how the various components of FIG. 1 may interact according to various implementations.
도 2도에서, 프리페치 엔진(177)은 프로액티브 캐시 시스템(120)에 요청(221)을 전송한다. 프로액티브 캐시 시스템(120)은 프로액티브 캐시 엔트리(222)로 요청에 응답한다. 본 명세서에 기재된 바와 같이, 프로액티브 캐시 엔트리(222)는 캐시 후보의 서브세트일 수 있고, 클라이언트 장치(160)의 속성(들), 캐시 엔트리(222)의 속성(들), 캐시 엔트리(222)에 대한 랭킹(순위) 메트릭(들)에 기초하여 및/또는 프로액티브 캐시(178)에 이미 있는 프로액티브 캐시 엔트리에 기초하여 클라이언트 장치(160)에 대해 선택될 수 있다. 프리페치 엔진(177)은 캐시 엔트리(222)를 프로액티브 캐시(178)에 저장하고, 선택적으로 캐시 엔트리(222)를 위한 공간을 만들기 위해 하나 이상의 기존의 프로액티브 캐시 엔트리를 제거한다. In FIG. 2 , the
프로액티브 캐시(178)에 캐시 엔트리(222)를 저장한 후의 시간에(예: 몇 분 또는 몇 시간 후), 오디오 데이터(223)는 클라이언트 장치(160)(도 1)의 마이크로폰(들)(165)(도 1)을 통해 검출된다. 검출된 오디오 데이터(223)는 클라이언트 장치에 입력된 사용자 인터페이스의 예이다. 온-디바이스 음성 인식 모듈은 오디오 데이터(223)를 처리하여 인식된 텍스트(171A)를 생성한다.At a time (eg, minutes or hours later) after storing the cache entry 222 in the
인식된 텍스트(171A)는 선택적으로 온-디바이스 이행 엔진(175) 및/또는 원격 이행 엔진(183)에 제공될 수 있다. 인식된 텍스트(171A)가 온-디바이스 이행 엔진(175)에 제공되고, 온-디바이스 이행 엔진(175)이 인식된 텍스트가 프로액티브 캐시(178)의 프로액티브 캐시 엔트리의 어시스턴트 요청 파라미터와 매칭한다고 결정할 때, 온-디바이스 이행 엔진(175)은 매칭하는 프로액티브 캐시 엔트리의 적어도 액션 콘텐츠를 포함하는 이행 데이터(175A)를 생성할 수 있다. Recognized text 171A may optionally be provided to on-
인식된 텍스트(171A)를 고려하는 것에 더하여 또는 대신에, 온-디바이스 이행 엔진(175)은 인식된 텍스트(171A)의 처리에 기초하여(선택적으로 컨텍스트 데이터를 기반으로 함) 온-디바이스 NLU 엔진(174)에 의해 생성된 NLU 데이터(174A)를 고려할 수 있다. NLU 데이터(174A)가 온-디바이스 이행 엔진(175)에 제공되고 그리고 온-디바이스 이행 엔진(175)이 그것이 프로액티브 캐시(178)의 프로액티브 캐시 엔트리의 어시스턴트 요청 파라미터와 매칭한다고 결정할 때, 온-디바이스 이행 엔진(175)은 매칭하는 프로액티브 캐시 엔트리의 적어도 액션 콘텐츠를 포함하는 이행 데이터(175A)를 생성할 수 있다. NLU 데이터의 의도가 상기 어시스턴트 요청 파라미터와 매칭하는 경우 이행 데이터도 생성될 수 있다. In addition to or instead of considering the recognized text 171A, the on-
온-디바이스 실행 엔진(176)은 매칭하는 프로액티브 캐시 엔트리의 액션 콘텐츠를 포함하는(또는 제한되는) 온-디바이스 이행 데이터(175A)를 처리하고, 대응하는 액션을 수행할 수 있다. 이는 액션 콘텐츠에 기초하여 청각적, 시각적, 및/또는 촉각적 응답을 생성하는 것; 액션 콘텐츠의 딥링크를 실행하는 것; 및/또는 상기 액션 콘텐츠에 포함된 명령을 (예: 블루투스 또는 Wi-Fi를 통해) 전송하는 것을 포함할 수 있다. The on-
일부 구현에서, 인식된 텍스트(171A)는 원격 이행 엔진(183)에 제공된다. 이는 온-디바이스 이행 엔진(175)에 대한 프로비저닝과 병행하여 원격 이행 엔진(183)에 제공되거나, 또는 선택적으로 프로액티브 캐시(178)에 매칭 엔트리가 없다고 결정(인식된 텍스트(171A) 및/또는 NLU 데이터(174A)를 기반으로 함)하는 온-디바이스 이행 엔진(175)에만 응답할 수 있다. 원격 이행 엔진(183)은 클라이언트 장치(160)에 할당된 원격 프로액티브 캐시(184A)에 액세스하고, 인식된 텍스트(171A) 및/또는 인식된 텍스트(171A)에 대해 원격으로 결정된 NLU 데이터와 매칭하는 어시스턴트 요청 파라미터를 갖는 프로액티브 캐시 엔트리를 포함하는지 여부를 결정할 수 있다. 만약 그렇다면, 이는 매칭하는 원격 프로액티브 캐시 엔트리로부터의 액션 콘텐츠를 포함하는 원격 이행 데이터(183A)를 온-디바이스 실행 엔진(176)에 선택적으로 제공할 수 있다. 선택적으로, 원격 이행 엔진(183)은 로컬 이행(온-디바이스 이행 엔진(175)에 의해)이 실패했다는 표시에 응답하고 및/또는 클라이언트 장치(160)로부터 "halt(중지)" 명령(로컬 이행이 성공시 제공 가능)을 수신하지 않는 것에 응답하여 원격 이행 데이터(183A)만을 제공한다. 원격 이행 엔진(183)은 또한 "on the fly(즉시)" 이행 데이터(183A)(예를 들어, 액션 콘텐츠)를 생성하기 위해 다른 기술을 선택적으로 이용할 수 있다. 이는 머신 원격 프로액티브 캐시 엔트리가 있는지 여부를 결정하기 위해 원격 프로액티브 캐시(184A)에 액세스하는 것과 병렬로 수행될 수 있고 및/또는 매칭하는 원격 프로액티브 캐시 엔트리가 없다는 결정에 응답하여 수행될 수 있다. 원격 프로액티브 캐시(184A)의 액션 콘텐츠가 이미 사전 생성되기 때문에, 원격 이행 데이터는 원격 이행 엔진(183)에 의해 즉석에서 생성되는 것보다 더 적은 리소스를 사용하여 더 빠르게 획득될 수 있다. 따라서, 다양한 구현은, 선택적으로 즉시 이행 데이터 생성을 시도하지 않고 및/또는 매칭이 결정되는 경우 즉석 생성을 중단하지 않고, 매칭하는 원격 프로액티브 캐시 엔트리가 식별되는 경우 원격 프로액티브 캐시(184A)만을 기반으로 원격 이행 데이터를 제공할 수 있다. In some implementations, recognized text 171A is provided to
도 3은 프로액티브 캐시 엔트리(310, 320, 330)의 일부 비제한적인 예를 도시한다. 그러한 프로액티브 캐시 엔트리는 대량의 추가 엔트리와 함께 로컬 프로액티브 캐시(178)(도 1) 또는 원격 프로액티브 캐시(들)(184)(도 1) 중 하나에 저장될 수 있다. 3 shows some non-limiting examples of
프로액티브 캐시 엔트리(310)는 내일의 지역 일기 예보를 획득하는 소정의 액션을 수행하기 위한 다양한 어시스턴트 요청을 나타내는 요청 파라미터(310A)를 포함한다. 요청 파라미터(310A)는 "Tomorrow's weather(내일 날씨)", "Weather tomorrow(날씨 내일)"의 텍스트 표현뿐만 아니라 "날(day)" 슬롯에 대한 "내일(tomorrow)" 및 "위치(location)" 슬롯에 대한 "로컬(local)"의 슬롯 값들 뿐만 아니라 "날씨(weather)"의 의도를 지정하는 구조화된 NLU 데이터 표현을 포함한다. 프로액티브 캐시 엔트리(310)의 액션 콘텐츠(310B)는 내일의 지역(로컬) 날씨를 설명하는 텍스트와 내일의 지역(로컬) 날씨를 전달하는 그래픽을 포함한다. 텍스트 및 그래픽 모두는 사용자 입력(예를 들어, 음성 발화 또는 타이핑된 발화)이 요청 파라미터(310A)와 매칭한다는 결정에 응답하여 렌더링될 수 있다. 선택적으로 텍스트를 기반으로 합성된 음성도 응답으로 렌더링될 수 있다. 프로액티브 캐시 엔트리(310)의 메타데이터(310C)는 12시간의 TTL 및 타임스탬프를 포함한다. 본 명세서에 설명된 바와 같이, 프로액티브 캐시 엔트리(310)는 TTL이 만료된 것으로 결정되면 프로액티브 캐시로부터 제거될 수 있다(또는 적어도 더 이상 사용되지 않음). 또한 여기에 설명된 바와 같이, 프로액티브 캐시 엔트리(310)은 소정의 지리적 영역에서 소정의 클라이언트 장치에 제공될 수 있는 반면, 동일한 요청 파라미터를 갖지만 다른 액션 콘텐츠를 갖는 다른 프로액티브 캐시 엔트리는 다른 지리적 영역의 다른 클라이언트 장치에 제공될 수 있다.
프로액티브 캐시 엔트리(320)는 대응하는 애플리케이션의 온도 조절기 스케줄 조정 상태(thermostat schedule adjustment state)에 액세스하는 소정의 액션을 수행하기 위한 다양한 어시스턴트 요청을 나타내는 요청 파라미터(320A)를 포함한다. 요청 파라미터(320A)는 "Adjust thermostat schedule(온도 조절기 스케줄)", "Change schedule for thermostat(온도 조절기에 대한 스케줄 변경)"의 텍스트 표현은 물론 "온도 조절기"의 의도 및 "setting(설정)" 슬롯에 대한 "스케줄 변경/조정"의 슬롯 값을 지정하는 구조화된 NLU 데이터 표현을 포함한다. 프로액티브 캐시 엔트리(320)의 액션 콘텐츠(320B)는 특정 애플리케이션에 대한 딥링크를 포함한다. 딥링크는 사용자 입력(예를 들어, 음성 발화 또는 타이핑된 발화)이 요청 파라미터(320A)와 매칭한다는 결정에 응답하여 실행될 수 있다. 딥링크를 실행하면 온도 조절기 스케줄 설정을 조정할 수 있는 상태(즉, 애플리케이션은 다음 사용자 입력이 액션 수행을 유발할 수 있는 상태에 있음)에서 특정 애플리케이션이 열린다. 프로액티브 캐시 엔트리(320)의 메타데이터(320C)는 30일의 TTL 및 타임스탬프를 포함한다. 본 명세서에 기재된 바와 같이, 프로액티브 캐시 엔트리(320)는 TTL이 만료된 것으로 결정되면 프로액티브 캐시에서 제거될 수 있다(또는 적어도 더 이상 사용되지 않음). 또한 여기에 설명된 바와 같이, 프로액티브 캐시 엔트리(320)은 클라이언트 장치가 기본 온도 조절기 애플리케이션으로 설치 및/또는 표시된 (액션 콘텐츠(320B)의 딥링크에 해당하는) 특정 애플리케이션을 가지고 있다는 결정에 기초하여 소정의 클라이언트 장치에 제공될 수 있는 반면, 동일한 요청 파라미터를 갖지만 다른 액션 콘텐츠(예: 다른 딥링크)를 갖는 다른 프로액티브 캐시 엔트리는 특정 애플리케이션이 설치되지 않은 다른 클라이언트 장치에 대해 제공될 수 있다.
프로액티브 캐시 엔트리(330)는 "John Doe"(가상의 사람)에 대한 추정된 순 자산(net worth)을 획득하는 소정의 액션을 수행하기 위한 다양한 어시스턴트 요청을 나타내는 요청 파라미터(330A)를 포함한다. 요청 파라미터(330A)는 "John Doe의 순자산" 및 "How much is John Doe worth(John Doe의 자산은 얼마인가)"의 텍스트 표현을 포함한다. 프로액티브 캐시 엔트리(330)의 액션 콘텐츠(330B)는 "John Doe"의 순자산을 설명하는 텍스트를 포함한다. 텍스트는 사용자 입력(예를 들어, 음성 발화 또는 타이핑된 발화)이 요청 파라미터(330A)와 매칭한다는 결정에 응답하여 렌더링될 수 있다. 선택적으로 텍스트를 기반으로 합성된 음성도 응답으로 렌더링될 수 있다. 프로액티브 캐시 엔트리(330)의 메타데이터(330C)는 7일의 TTL 및 타임스탬프를 포함한다. 본 명세서에 기술된 바와 같이, 프로액티브 캐시 엔트리(330)는 TTL이 만료된 것으로 결정되면 프로액티브 캐시로부터 제거될 수 있다(또는 적어도 더 이상 사용되지 않음). 본 명세서에 또한 설명된 바와 같이, 프로액티브 캐시 엔트리(330)는 소정의 클라이언트 장치의 속성(들)이 "John Doe"와 관련되어 있다는 결정에 기초하여 소정의 클라이언트 장치에 제공될 수 있다. 이는 예를 들어, 사용자가 과거에 "John Doe"를 검색하고, "John Doe"와 연관된 인터넷 콘텐츠를 방문하고, 및/또는 "John Doe"와 강한 관계(예: 지식 그래프 또는 기타 데이터 구조를 기반으로 결정됨)를 갖는 다른 엔티티를 검색하는 것을 기반으로 할 수 있다. 다양한 구현에서, 프로액티브 캐시 엔트리(330)는 "John Doe"와 연관된 요청 및/또는 인터넷 콘텐츠의 증가와 같은 "John Doe"와 연관된 이벤트를 결정하는 것에 적어도 부분적으로 기초하여 생성 및/또는 제공될 수 있다. 예를 들어, "John Doe"의 순자산과 연관된 프로액티브 캐시 엔트리는 "John Doe"가 유명인(클래스)이고, 유명인에 대한 빈번한 쿼리에 "what is [celebrity alias] net worth"의 템플릿이 있다는 결정에 기초하여 생성될 수 있다. 또한, 예를 들어, 프로액티브 캐시 엔트리는 "John Doe"와 연관된 요청 및/또는 인터넷 콘텐츠의 증가에 의해 영향을 받는 순위 메트릭(들)에 기초하여 로컬 또는 원격 프로액티브 캐시 엔트리에 저장하기 위해 제공될 수 있다.
도 4는 본 명세서에 개시된 구현들에 따른 프로액티브 캐시 엔트리들을 프리페치하고 저장하는 예시적인 방법(400)을 도시하는 흐름도를 도시한다. 편의상, 방법(400)의 동작은 동작을 수행하는 시스템을 참조하여 설명된다. 이 시스템은 클라이언트 장치의 하나 이상의 컴포넌트(예를 들어, 도 1의 프리페치 엔진(177))와 같은 다양한 컴퓨터 시스템의 다양한 컴포넌트를 포함할 수 있다. 더욱이, 방법(400)의 동작이 특정 순서로 도시되어 있지만, 이는 제한하는 것을 의미하지 않는다. 하나 이상의 액션이 재정렬되거나 생략되거나 추가될 수 있다.4 depicts a flow diagram illustrating an
블록(410)에서, 시스템은 하나 이상의 프리페치 조건이 발생했는지 여부를 결정한다. 그렇지 않은 경우 시스템은 프리페치 조건이 발생했는지 여부를 계속 확인한다. 그렇다면, 시스템은 블록(420)으로 진행한다. 프리페치 조건은 예를 들어, 클라이언트 장치에 대한 특정 네트워크 조건들)이 존재한다는 것; 클라이언트 장치가 충전 중이고 및/또는 적어도 임계값 배터리 충전 상태를 갖는다는 것; 클라이언트 장치가 사용자에 의해 적극적으로 활용되고 있지 않다는 것; 클라이언트 장치의 현재 프로세서 사용량 및/또는 현재 메모리 사용량이 특정 임계값을 초과하지 않는 것, 및/또는 가장 최근의 프리페치 요청 이후 일정 시간(예: 최소 1시간)이 경과했다는 것 중 하나 이상을 포함할 수 있다. At block 410, the system determines whether one or more prefetch conditions have occurred. If not, the system continues to check whether a prefetch condition has occurred. If so, the system proceeds to block 420 . The prefetch condition may be, for example, that certain network conditions for the client device exist; that the client device is charging and/or has at least a threshold battery state of charge; that the client device is not being actively utilized by the user; The current processor usage and/or current memory usage of the client device does not exceed certain thresholds, and/or includes one or more of the following: a period of time (eg at least 1 hour) has elapsed since the most recent prefetch request. can do.
블록(420)에서, 시스템은 프리페치 요청을 전송한다. 프리페치 요청은 클라이언트 장치의 식별자 및/또는 토큰(들) 또는 클라이언트 장치에 이미 로컬로 저장된 프로액티브 캐시 엔트리를 나타내는 다른 표시를 선택적으로 포함할 수 있다. At
블록(430)에서, 시스템은 블록(420)의 요청에 응답하여 프로액티브 어시스턴트 캐시 엔트리를 수신한다. At
블록(440)에서, 시스템은 수신된 프로액티브 어시스턴트 캐시 엔트리를 로컬 프로액티브 캐시에 저장한다. 블록(440)은 선택적으로 블록(440A)을 포함할 수 있으며, 여기서 시스템은 수신된 프로액티브 캐시 엔트리를 위한 공간을 만들기 위해 로컬 프로액티브 캐시로부터 하나 이상의 기존(존재하는) 프로액티브 캐시 엔트리를 제거한다. 블록(440) 이후에, 시스템은 선택적으로 임계 시간이 경과한 후 블록(410)으로 다시 진행할 수 있다. At block 440 , the system stores the received Proactive Assistant cache entry in a local Proactive Cache. Block 440 may optionally include
도 5a는 프로액티브 캐시 엔트리를 생성하고 프로액티브 캐시 엔트리의 로컬 서브세트를 소정의 클라이언트 장치에 프로비저닝하고 및/또는 프로액티브 캐시 엔트리의 원격 서브세트를 결정하는 예시적인 방법(500)을 도시하는 흐름도를 도시한다. 도 5b는 도 5a의 블록(510)의 일부 구현을 예시하는 흐름도를 도시한다. 도 5c는 도 5a의 블록(510)의 일부 추가적 또는 대안적 구현을 예시하는 흐름도를 도시한다. 편의상, 방법(500)의 동작은 동작을 수행하는 시스템을 참조하여 설명된다. 이 시스템은 원격 서버(들)의 하나 이상의 컴포넌트(예를 들어, 도 1의 프로액티브 캐시 시스템)와 같은 다양한 컴퓨터 시스템의 다양한 컴포넌트를 포함할 수 있다. 더욱이, 방법(500)의 동작이 특정 순서로 도시되어 있지만, 이는 제한하는 것을 의미하지 않는다. 하나 이상의 액션이 재정렬되거나 생략되거나 추가될 수 있다.5A is a flow diagram illustrating an
처음에 도 5a를 참조하면, 블록(510)에서, 시스템은 프로액티브 어시스턴트 캐시 엔트리를 생성한다. 각각의 프로액티브 어시스턴트 캐시 엔트리를 생성할 때, 블록(510)은 서브-블록(512, 514, 및/또는 516)을 포함할 수 있다. 블록(512)에서, 시스템은 프로액티브 어시스턴트 캐시 엔트리에 대한 어시스턴트 요청 파라미터를 생성한다. 블록(514)에서, 시스템은 프로액티브 어시스턴트 캐시 엔트리에 대한 액션 콘텐츠를 생성한다. 블록(516)에서, 시스템은 프로액티브 어시스턴트 캐시 엔트리에 대한 메타데이터를 생성한다. 블록(510)의 구현에 대한 추가 설명은 본 명세서의 다른 곳뿐만 아니라 도 5b 및 도 5c와 관련하여 아래에 제공된다. Referring initially to FIG. 5A , at
블록(520)에서, 시스템은 클라이언트 장치를 선택한다.At block 520, the system selects a client device.
블록(530)에서, 시스템은 선택된 클라이언트 장치에 대한 프로액티브 어시스턴트 캐시 엔트리의 로컬 서브세트를 결정한다. 시스템은 클라이언트 장치의 속성(들)과 프로액티브 어시스턴트 캐시 엔트리의 속성(들)을 기반으로 로컬 서브세트를 결정한다. 예를 들어, 프로액티브 어시스턴트 캐시 엔트리의 일부는 클라이언트 장치의 속성(들)에 대응하는 속성(들)을 갖는 것에 기초하여 선택될 수 있다. 그러한 속성(들)은 애플리케이션(들)(예: 클라이언트 장치에 설치되고 프로액티브 어시스턴트 캐시 엔트리의 딥링크에 해당), 지리적 위치(예: 클라이언트 장치의 위치 및 프로액티브 어시스턴트 캐시 엔트리에 해당), 프로액티브 어시스턴트 캐시 엔트리에 대응하는 엔티티들과 비교하여 클라이언트 장치를 통해 (예: 콘텐츠 검색 또는 방문을 통해) 상호작용하는 엔티티, 및/또는 다른 속성을 포함할 수 있다. 또한, 예를 들어, 프로액티브 캐시 엔트리 중 일부는 프로액티브 캐시 엔트리에 대한 순위 메트릭(들)에 기초하여 추가로 또는 대안적으로 선택될 수 있다. 로컬 서브세트에 포함된 프로액티브 어시스턴트 캐시 엔트리의 양(quantity)은 클라이언트 장치의 프로액티브 어시스턴트 캐시 크기에 의해 영향을 받을 수 있다.At
블록(540)에서, 시스템은 선택된 클라이언트 장치에 대한 프로액티브 캐시 엔트리의 원격 서브세트를 선택적으로 결정한다. 원격 서브세트는 블록(530)의 로컬 서브세트에 포함되지 않은 프로액티브 캐시 엔트리를 포함할 수 있다(또는 이에 제한됨). 일부 구현들에서, 블록(540)은 블록(540)의 원격 서브세트를 결정할 때 클라이언트 장치의 속성(들) 및 프로액티브 어시스턴트 캐시 엔트리들의 속성(들)을 고려할 수 있다. 원격 서브세트에 포함된 프로액티브 어시스턴트 캐시 엔트리의 양은 원격 사전적 어시스턴트 캐시의 크기에 의해 영향을 받을 수도 있다. 원격 프로액티브 어시스턴트 캐시는 클라이언트 장치, 또는 클라이언트 장치 및 기타 유사한 클라이언트 장치(들)를 포함하는 클라이언트 장치의 제한된 그룹에 고유할 수 있다. 원격 프로액티브 어시스턴트 캐시는 본 명세서에 설명된 바와 같이 원격 자동 어시스턴트 컴포넌트(들)에 의해 활용되어, 클라이언트 장치로부터 발생하는 요청에 대한 응답을 프로비저닝할 때의 대기 시간을 줄일 수 있다. At
그 다음 시스템은 블록(520)으로 다시 진행하여 다른 클라이언트 장치를 선택하고 다른 클라이언트 장치에 대해 블록(530 및 540)을 수행할 수 있다. 블록(520, 530, 540)의 다중 반복은 각각 다른 클라이언트 장치에 대해 병렬로 수행될 수 있음을 이해해야 한다. 블록(520, 530, 540)은 최신 로컬 및/또는 원격 프로액티브 어시스턴트 캐시를 유지하고 새로 생성된 프로액티브 어시스턴트 캐시 엔트리(이는 블록(510)의 다중 반복을 통해 생성될 수 있음)를 설명하기 위해 규칙적 또는 비정규적 간격으로 다양한 클라이언트 장치에 대해 반복될 수 있음이 추가로 이해된다.The system may then proceed back to block 520 to select another client device and perform
블록(550)에서, 시스템은 소정의 클라이언트 장치로부터 프리페치 요청을 선택적으로 수신한다. 예를 들어, 소정의 클라이언트 장치는 방법(400)과 관련하여 설명된 바와 같이 프리페치 요청을 전송할 수 있다.At
블록(560)에서, 시스템은 블록(530)의 반복에서 소정의 클라이언트 장치에 대해 결정된, 로컬 서브세트의 하나 이상의 프로액티브 어시스턴트 캐시 엔트리를 소정의 클라이언트 장치에 제공한다. 제공되는 로컬 서브세트의 엔트리는 소정의 클라이언트 장치의 로컬 프로액티브 캐시에 이미 저장되어 있는 엔트리(있는 경우)를 결정하는 것에 기초할 수 있다. 예를 들어, 선택적으로 로컬 프로액티브 캐시에 아직 존재하지 않는 엔트리만 블록(560)에서 제공될 수 있다. 제공된 프로액티브 어시스턴트 캐시 엔트리는, 소정의 클라이언트 장치의 자동 어시스턴트 애플리케이션에 의해, 소정의 클라이언트 장치에서 제공되는 미래의 사용자 인터페이스 입력을 로컬적으로 이행할 때 자동 어시스턴트 애플리케이션에 의한 활용을 위해 로컬 프로액티브 캐시에 저장될 수 있다.At
블록(550)이 수행될 때, 블록(560)은 프리페치 요청에 응답하여 수행될 수 있다. 블록(550)이 수행되지 않을 때, 블록(560)은 소정의 클라이언트 장치로부터의 명시적 요청과 무관하게 프로액티브 어시스턴트 캐시 엔트리를 사전에(proactively) 푸시하는 것을 포함할 수 있다. 블록(560)(및 선택적으로 블록(550))은 다수의 클라이언트 장치 각각에 대해 수행될 것이며, 클라이언트 장치 각각에 대해 여러 번 수행될 것임을 이해해야 한다. 방법(500)을 통해, 상이한 프로액티브 캐시 엔트리가 상이한 클라이언트 장치에 제공될 것이고(및/또는 해당 원격 프로액티브 캐시에 저장) 시간이 지남에 따라 업데이트될 것이라는 것이 또한 이해된다. When block 550 is performed, block 560 may be performed in response to the prefetch request. When block 550 is not performed, block 560 may include proactively pushing the Proactive Assistant cache entry regardless of an explicit request from any client device. It should be understood that block 560 (and optionally block 550) will be performed for each of multiple client devices, and will be performed multiple times for each of the client devices. It is also understood that, via
도 5b를 참조하면, 도 5b의 블록(510)의 일부 구현을 예시하는 흐름도(510B)가 제공된다. 블록(511B)에서 시스템은 엔티티에 대한 이벤트가 있었는지 여부를 결정한다. 그렇지 않다면, 시스템은 블록(511B)에서 이벤트를 계속 모니터링한다. 그렇다면, 시스템은 선택적으로 이벤트에 기초하여 프로액티브 캐시 엔트리를 생성하고, 블록(512B)으로 진행하여 엔티티에 대한 어시스턴트 요청 파라미터를 생성하고, 블록(514B)으로 진행하여 어시스턴트 요청 파라미터에 대한 액션 콘텐츠를 생성하고, 블록(516B)으로 진행하여 프로액티브 캐시 엔트리에 대한 메타데이터를 생성한다. 프로액티브 캐시 엔트리에는 어시스턴트 요청 파라미터, 액션 콘텐츠 및 메타데이터가 포함된다. 블록(517B)에서, 시스템은 엔티티에 대해 더 많은 프로액티브 어시스턴트 캐시 엔트리를 생성할지 여부를 결정한다. 그렇다면, 시스템은 블록(512B)의 또 다른 반복을 선택적으로 수행하고 블록(514B) 및 블록(516B)의 또 다른 반복을 수행함으로써 엔티티에 대한 또 다른 프로액티브 어시스턴트 캐시 엔트리를 생성한다. 그렇지 않은 경우, 시스템은 블록(511B)으로 다시 진행하고 엔티티 및/또는 다른 엔티티에 대한 다른 이벤트를 모니터링한다. Referring to FIG. 5B , a
일 예로서, 블록(511B)에서 이벤트는 지리적 영역에 대한 일기 예보에 대한 변경일 수 있다. 예를 계속하면, 블록(514B)에서 새로운 액션 콘텐츠(새로운 일기 예보 설명)를 반영하고 블록(516B)에서 새로운 메타데이터(metadata)(예: 타임스탬프)를 반영하지만 지리적 영역에 대한 일기 예보에 대한 이전 엔트리와 동일한 어시스턴트 요청 파라미터를 유지하는 프로액티브 캐시 엔트리가 생성될 수 있다. As an example, the event at
다른 예로서, 블록(511B)에서 이벤트는 특정 음악가와 연관된 음악 스트리밍 요청의 증가일 수 있다. 계속해서 예를 들면, 특정 음악가(아티스트)로부터 음악을 스트리밍하기 위한 어시스턴트 요청(들)과 연관된, 512B에서 생성된 어시스턴트 요청 파라미터; 제1 애플리케이션에 대한 특정 아티스트를 스트리밍하기 위한 딥링크를 포함하고, 블록(514B)에서 생성된 액션 콘텐츠; 그리고 블록(516B)에서 생성된 메타데이터(예: TTL 값)를 포함하는 프로액티브 캐시 엔트리가 생성될 수 있다. 또한, 블록(517B)에서, 동일한 어시스턴트 요청 파라미터 및/또는 메타데이터를 포함하지만 액션 콘텐츠에서 상이한 딥링크를 포함하는 다른 프로액티브 캐시 엔트리를 생성하도록 결정될 수 있다. 다른 딥링크는 블록(514B)의 또 다른 반복에서 생성되고 제2 애플리케이션을 위해 특정 음악가를 스트리밍하기 위한 딥링크를 포함한다.As another example, the event at
또 다른 예로서, 블록(511B)에서 이벤트는 특정 도시와 연관된 요청 및/또는 콘텐츠의 증가일 수 있다. 계속해서 예를 들면, 다른 도시에 대한 빈번한 어시스턴트 요청에 기초하고(예: 특정 도시의 인구를 요청하는 경우), 512B에서 생성된 어시스턴트 요청 파라미터; 시각적 및/또는 텍스트 응답(예: 인구의 시각적 및/또는 텍스트 표현)을 포함하고, 블록(514B)에서 생성된 액션 콘텐츠; 그리고 블록(516B)에서 생성된 메타데이터(예: TTL 값)를 포함하는 프로액티브 캐시 엔트리가 생성될 수 있다. 또한, 블록(517B)에서, 다른 도시에 대한 다른 빈번한 어시스턴트 요청에 기초하는 추가의 프로액티브 캐시 엔트리를 생성하도록 결정될 수 있다. 예를 들어, 다른 도시에 대한 다른 빈번한(frequent) 어시스턴트 요청(예: 특정 도시의 기후 정보 요청)에 기초하고 512B에서 생성된 어시스턴트 요청 파라미터; 시각적 및/또는 텍스트 응답(예: 기후 정보의 시각적 및/또는 텍스트 표현)을 포함하고, 블록(514B)에서 생성된 액션 콘텐츠; 그리고 블록(516B)에서 생성된 메타데이터(예를 들어, TTL 값)를 포함하는 추가 프로액티브 캐시 엔트리가 생성될 수 있다.As another example, the event at
도 5c에 도시한 바와 같이, 도 5a의 블록(510)의 일부 추가적인 또는 대안적인 구현을 예시하는 흐름도(510C)가 제공된다. 예를 들어, 블록(510)의 일부 반복은 흐름도(510B)에 기초하여 수행될 수 있는 반면 다른 것은 흐름도(510C)에 기초하여 수행될 수 있다. 블록(512C)에서, 시스템은 어시스턴트 요청 파라미터를 생성한다. 예로서, "play some Bluegrass", "jam out to some Bluegrass", and/or "{Intent=stream music; genre=bluegrass}"의 파라미터와 같은, "Bluegrass" 음악을 스트리밍하기 위해 어시스턴트 요청 파라미터가 생성될 수 있다. As shown in FIG. 5C , a flow diagram 510C is provided illustrating some additional or alternative implementations of
블록(514C)에서, 시스템은 서브-블록(514C1)에서, 요청 파라미터에 대한 N개의 애플리케이션을 결정함으로써 액션 콘텐츠를 생성하며, 여기서 N은 1보다 큰 정수이다. 예를 들어, 시스템은 블루그래스 음악 스트리밍을 위한 15개의 애플리케이션을 결정할 수 있다. 또한, 서브블록(514C2)에서 시스템은 N개의 애플리케이션 각각에 대한 액션 콘텐츠를 결정한다. 예를 들어, 시스템은 N개의 애플리케이션 각각에 대한 액션 콘텐츠로서, 실행될 때 해당 애플리케이션이 블루그래스 음악을 스트리밍하게 하는 해당 딥링크를 결정한다. At
블록(516C)에서 시스템은 메타데이터를 생성한다. At
블록(518C)에서, 시스템은 N개의 프로액티브 어시스턴트 캐시 엔트리를 생성한다. N개의 생성된 프로액티브 어시스턴트 캐시 엔트리 각각은 512C의 동일한 어시스턴트 요청 파라미터 및 선택적으로 516C의 동일한 메타데이터를 갖지만 다른 액션 콘텐츠를 포함한다(즉, 각각은 N개의 애플리케이션 중 하나에 해당하는 딥링크만 있는 액션 콘텐츠를 포함할 수 있음). At
도 6은 본 명세서에 설명된 기술의 하나 이상의 양태를 수행하기 위해 선택적으로 사용될 수 있는 예시적인 컴퓨팅 장치(610)의 블록도이다. 일부 구현에서, 클라이언트 장치, 클라우드-기반 자동 어시스턴트 컴포넌트(들), 및/또는 다른 컴포넌트(들) 중 하나 이상은 예시적인 컴퓨팅 장치(610)의 하나 이상의 컴포넌트를 포함할 수 있다. 6 is a block diagram of an
컴퓨팅 장치(610)는 전형적으로 버스 서브시스템(612)을 통해 다수의 주변 장치와 통신하는 적어도 하나의 프로세서(614)를 포함한다. 이러한 주변 장치는, 예를 들어, 메모리 서브시스템(625) 및 파일 저장(스토리지) 서브시스템(626), 사용자 인터페이스 출력 장치(620), 사용자 인터페이스 입력 장치(622) 및 네트워크 인터페이스 서브시스템(네트워크 인터페이스)(616)을 포함하는 ㅊ(624)을 포함할 수 있다. 입력 및 출력 장치는 컴퓨팅 장치(610)와의 사용자 상호작용을 허용한다. 네트워크 인터페이스 서브시스템(616)은 외부 네트워크에 인터페이스를 제공하고 다른 컴퓨팅 장치에서 대응하는 인터페이스 장치에 연결된다.
사용자 인터페이스 입력 장치(622)는 키보드, 마우스, 트랙볼, 터치 패드 또는 그래픽 태블릿과 같은 포인팅 장치, 스캐너, 디스플레이에 통합된 터치스크린, 음성 인식 시스템과 같은 오디오 입력 장치, 마이크로폰 및/또는 다른 유형의 입력 장치를 포함할 수 있다. 일반적으로, "입력 장치"라는 용어의 사용은 모든 가능한 유형의 장치 및 정보를 컴퓨팅 장치(610) 또는 통신 네트워크에 입력하는 방법을 포함하도록 의도된다. User
사용자 인터페이스 출력 장치(620)는 디스플레이 서브시스템, 프린터, 팩스기, 또는 오디오 출력 장치와 같은 비 시각적 디스플레이를 포함할 수 있다. 디스플레이 서브시스템은 음극선 관(CRT), 액정 디스플레이(LCD)와 같은 평판 장치, 투영 장치, 또는 가시 이미지를 생성하기 위한 다른 메커니즘을 포함할 수 있다. 디스플레이 서브시스템은 또한 오디오 출력 장치를 통한 것과 같은 비 시각적 디스플레이를 제공할 수 있다. 일반적으로, "출력 장치"라는 용어의 사용은 모든 가능한 유형의 장치 및 컴퓨팅 장치(610)로부터 사용자 또는 다른 기계 또는 컴퓨팅 장치로 정보를 출력하는 방법을 포함하도록 의도된다.User
저장(스토리지) 서브시스템(624)은 본 명세서에 설명된 일부 또는 모든 모듈의 기능을 제공하는 프로그래밍 및 데이터 구성을 저장한다. 예를 들어, 저장 서브시스템(624)은 다양한 컴포넌트를 구현하기 위해 뿐만 아니라 방법의 선택된 양태를 수행하는 로직을 포함할 수 있다. The storage (storage)
이들 소프트웨어 모듈은 일반적으로 프로세서(614)에 의해 단독으로 또는 다른 프로세서와의 조합으로 실행된다. 저장 서브시스템(624)에 사용되는 메모리(메모리 서브시스템)(625)는 프로그램 실행 동안 명령 및 데이터의 저장을 위한 메인 랜덤 액세스 메모리(RAM)(630) 및 고정 명령이 저장된 판독 전용 메모리(ROM)(632)를 포함하는 다수의 메모리를 포함할 수 있다. 파일 저장 서브시스템(626)은 프로그램 및 데이터 파일을 위한 영구 저장을 제공할 수 있으며, 하드 디스크 드라이브, 플로피 디스크 드라이브 및 관련 이동식 매체, CD-ROM 드라이브, 광학 드라이브 또는 이동식 매체 카트리지를 포함할 수 있다. 특정 구현의 기능을 구현하는 모듈은 파일 저장 서브시스템(626)에 의해 저장 서브시스템(624) 또는 프로세서(들)(614)에 의해 액세스 가능한 다른 머신에 저장될 수 있다. These software modules are typically executed by
버스 서브시스템(612)은 컴퓨팅 장치(610)의 다양한 컴포넌트 및 서브시스템이 의도된대로 서로 통신하도록 하는 메커니즘을 제공한다. 버스 서브시스템(612)이 단일 버스로서 개략적으로 도시되어 있지만, 버스 서브시스템의 대안적인 구현은 다중 버스를 사용할 수 있다.
컴퓨팅 장치(610)는 워크스테이션, 서버, 컴퓨팅 클러스터, 블레이드 서버, 서버 팜, 또는 임의의 다른 데이터 처리 시스템 또는 컴퓨팅 장치를 포함하는 다양한 유형일 수 있다. 컴퓨터 및 네트워크의 끊임없이 변화하는 특성으로 인해, 도 6에 도시된 컴퓨팅 장치(610)의 설명은 일부 구현 예를 설명하기 위한 특정 예로서 만 의도된다. 컴퓨팅 장치(610)의 많은 다른 구성은 도 6에 도시된 컴퓨팅 장치보다 더 많거나 적은 컴포넌트를 가질 수 있다.
여기에 설명된 시스템이 사용자에 대한 개인 정보를 수집 또는 모니터링하거나 개인 및/또는 모니터링되는 정보를 사용할 수 있는 상황에서, 사용자는 프로그램 또는 기능이 사용자 정보(예: 사용자의 소셜 네트워크, 소셜 활동 또는 활동, 직업, 사용자의 선호도 또는 사용자의 현재 지리적 위치에 대한 정보)를 수집하는지 여부를 제어하거나 사용자와 더 관련이 있을 수 있는 콘텐츠 서버로부터 콘텐츠를 수신할지 여부 및/또는 방법을 제어할 기회가 제공될 수 있다. 또한 특정 데이터는 저장 또는 사용되기 전에 하나 이상의 방식으로 처리되어 개인 식별 정보가 제거될 수 있다. 예를 들어, 사용자의 신원을 처리하여 사용자에 대한 개인 식별 정보를 확인할 수 없거나 지리적 위치 정보 (예: 도시, 우편번호 또는 주 수준)를 얻은 사용자의 지리적 위치를 일반화하여 사용자의 특정 지리적 위치를 확인할 수 없게 할 수 있다. 따라서 사용자는 사용자에 대한 정보 수집 및/또는 사용 방법을 제어할 수 있다.In situations where the systems described herein may collect or monitor personal information about you or use personal and/or monitored information, you may be aware that a program or function may use your information (e.g., your social networks, social activities or activities). , occupation, preferences of the user, or information about the user's current geographical location) can Certain data may also be processed in one or more ways before being stored or used to remove personally identifiable information. For example, if we are unable to determine personally identifiable information about a user by processing the user's identity, or we may generalize the user's geographic location from which geographic location information (e.g. city, zip code, or state level) was obtained to determine a specific geographic location of the user. can make it impossible Thus, users can control how information about them is collected and/or used.
일부 구현들에서, 하나 이상의 프로세서들에 의해 수행되는 방법이 제공되고, 이는 소정의 액션을 수행하기 위한 하나 이상의 어시스턴트 요청들을 나타내는 어시스턴트 요청 파라미터들을 결정하는 단계를 포함한다. 어시스턴트 요청 파라미터는 어시스턴트 요청의 하나 이상의 텍스트 표현 및/또는 어시스턴트 요청의 하나 이상의 의미론적 표현을 정의한다. 방법은 소정의 액션이 제1 애플리케이션을 사용하여 수행될 수 있고 또한 제2 애플리케이션을 사용하여 수행될 수 있다고 결정하는 단계를 더 포함한다. 방법은 제1 애플리케이션에 대한 제1 액션 콘텐츠를 생성하는 단계 및 제2 애플리케이션에 대한 제2 액션 콘텐츠를 생성하는 단계를 더 포함한다. 제1 액션 콘텐츠는 제1 애플리케이션에 대한 제1 딥링크를 포함한다. 제1 딥링크는 제1 애플리케이션이 설치된 클라이언트 장치의 어시스턴트 클라이언트 애플리케이션에 의해 로컬로 실행 가능하고, 제1 딥링크의 로컬 실행은 제1 애플리케이션이 소정의 액션을 수행하기 위한 제1 상태에서 열리도록 한다. 제2 액션 콘텐츠는 제2 애플리케이션에 대한 제2 딥링크를 포함한다. 제2 딥링크는 제1 딥링크와 다르며, 제2 애플리케이션이 설치된 클라이언트 장치의 어시스턴트 클라이언트 애플리케이션에 의해 로컬로 실행 가능하며, 제2 딥링크의 로컬 실행은 제2 애플리케이션이 소정의 액션을 수행하기 위한 제2 상태에서 열리도록 한다. 방법은 어시스턴트 요청 파라미터들 및 제1 액션 콘텐츠를 포함하는 제1 프로액티브 어시스턴트 캐시 엔트리를 생성하는 단계, 및 어시스턴트 요청 파라미터들 및 제2 액션 콘텐츠를 포함하는 제2 프로액티브 어시스턴트 캐시 엔트리를 생성하는 단계를 더 포함한다. 방법은 소정의 클라이언트 장치에 대한 프로액티브 캐시 엔트리를 생성하는 단계를 더 포함한다. 프로액티브 캐시 엔트리를 생성하는 것은 제1 애플리케이션이 설치되어 있지만 제2 애플리케이션이 설치되지 않은 소정의 클라이언트 장치에 기초하여 제1 프로액티브 캐시 엔트리를 포함하지만 제2 프로액티브 캐시 엔트리는 포함하지 않는 것을 포함한다. 방법은 소정의 클라이언트 장치에 의해 전송된 프로액티브 캐시 요청을 수신하는 것에 선택적으로 응답하여 프로액티브 캐시 엔트리를 소정의 클라이언트 장치로 전송하는 단계를 더 포함한다. 소정의 클라이언트 장치의 자동 어시스턴트 애플리케이션은 소정의 클라이언트 장치에서 제공되는 미래의 사용자 인터페이스 입력을 로컬적으로 이행할 때 자동 어시스턴트 애플리케이션에 의한 활용을 위해 로컬 프로액티브 캐시에 프로액티브 캐시 엔트리를 저장한다. In some implementations, a method, performed by one or more processors, is provided, comprising determining assistant request parameters indicative of one or more assistant requests to perform an action. The assistant request parameter defines one or more textual representations of the assistant request and/or one or more semantic representations of the assistant request. The method further includes determining that the predetermined action can be performed using the first application and can also be performed using the second application. The method further includes generating first action content for the first application and generating second action content for the second application. The first action content includes a first deep link to the first application. The first deep link is executable locally by an assistant client application of the client device on which the first application is installed, and the local execution of the first deep link causes the first application to be opened in a first state for performing a predetermined action. . The second action content includes a second deep link to a second application. The second deep link is different from the first deep link, and can be locally executed by an assistant client application of a client device in which the second application is installed, and the local execution of the second deep link is for the second application to perform a predetermined action. Let it open in the second state. The method includes generating a first proactive assistant cache entry comprising assistant request parameters and first action content, and generating a second proactive assistant cache entry comprising assistant request parameters and second action content further includes The method further includes creating a proactive cache entry for the given client device. generating the proactive cache entry includes including the first proactive cache entry but not the second proactive cache entry based on a given client device having the first application installed but not having the second application installed do. The method further includes sending a proactive cache entry to the given client device optionally in response to receiving the proactive cache request sent by the given client device. The automated assistant application on the given client device stores the Proactive Cache entry in a local Proactive Cache for utilization by the automated assistant application when locally fulfilling future user interface inputs provided on the given client device.
여기에 개시된 기술의 이들 및 다른 구현은 다음 특징 중 하나 이상을 포함할 수 있다.These and other implementations of the techniques disclosed herein may include one or more of the following features.
일부 구현들에서, 방법은 소정의 액션에 대한 요청들의 증가를 결정하는 단계, 및 소정의 액션에 대한 요청들의 증가를 결정하는 것에 응답하여, 제1 프로액티브 캐시 엔트리를 생성하고 그리고 제2 프로액티브 캐시 엔트리를 생성하는 단계를 더 포함한다.In some implementations, the method includes determining an increment of requests for a given action, and in response to determining an increment of requests for a given action, creating a first proactive cache entry and a second proactive cache entry. The method further includes creating a cache entry.
일부 구현들에서, 방법은 소정의 액션에 대한 요청들의 증가를 결정하는 단계를 더 포함하고, 프로액티브 캐시 엔트리들에 제1 프로액티브 캐시 엔트리를 포함하는 것은 소정의 액션에 대한 요청들의 증가에 더 기초한다. 이러한 구현 중 일부에서, 상기 소정의 액션에 대한 요청의 증가에 더 기초하여 상기 프로액티브 캐시 엔트리에 상기 제1 프로액티브 캐시 엔트리를 포함하는 것은, 소정의 액션이 지시되는 엔티티가 프로액티브 캐시 엔트리가 생성되는 소정의 클라이언트 장치에 대한 하나 이상의 속성에 대응한다고 결정하는 것을 포함한다. 이러한 구현의 일부 버전에서, 상기 제1 애플리케이션은 음악 스트리밍 애플리케이션이고, 상기 소정의 액션은 상기 엔티티의 스트리밍 음악이고, 상기 소정의 클라이언트 장치에 대한 속성은 상기 엔티티에 대한 상기 소정의 클라이언트 장치의 연관성(association)을 포함한다. 요청은 예를 들어 자동 어시스턴트 요청 및/또는 추가 요청을 포함할 수 있다. 자동 어시스턴트 요청은 대응하는 자동 어시스턴트 애플리케이션에 대한 것이며 대응하는 사용자 인터페이스 입력에 응답하여 각각 생성된다. 추가 요청은 자동 어시스턴트 요청에 추가되며 자동 어시스턴트 애플리케이션에 추가된 하나 이상의 추가 애플리케이션에서 발생한다. In some implementations, the method further comprises determining an increase in requests for the given action, wherein including the first proactive cache entry in the proactive cache entries is more dependent on the increase in requests for the given action. based on In some of these implementations, including the first proactive cache entry in the proactive cache entry further based on an increase in requests for the predetermined action, such that the entity to which the predetermined action is directed indicates that the proactive cache entry is and determining that it corresponds to one or more attributes for a given client device being created. In some versions of this implementation, the first application is a music streaming application, the predetermined action is streaming music of the entity, and the attribute for the given client device is an association of the given client device to the entity ( association) is included. Requests may include, for example, automatic assistant requests and/or additional requests. The automated assistant request is for a corresponding automated assistant application and is each generated in response to a corresponding user interface input. Additional requests are in addition to Auto Assistant Requests and originate from one or more additional applications added to Auto Assistant Applications.
일부 구현에서, 방법은 소정의 액션에 대한 요청의 증가를 예측하는 단계; 그리고 소정의 액션에 대한 요청의 증가를 결정하는 것에 응답하여: 제1 프로액티브 캐시 엔트리를 생성하고 그리고 제2 프로액티브 캐시 엔트리를 생성하는 단계를 더 포함한다. 일부 추가적 또는 대안적 구현에서, 방법은 소정의 액션에 대한 요청의 증가를 예측하는 단계를 더 포함하고, 프로액티브 캐시 엔트리에 제1 프로액티브 캐시 엔트리를 포함하는 것은 소정의 액션에 대한 요청의 결정된 증가에 더 기초한다. 소정의 액션에 대한 요청의 증가를 예측하는 것은 소정의 액션이 지시되는 엔티티와 연관된 인터넷 콘텐츠의 증가를 결정하는 것 및/또는 소정의 액션이 지시되는 엔티티와 연관된 미래 이벤트를 결정하는 것을 포함할 수 있다. In some implementations, the method includes predicting an increase in requests for a given action; and in response to determining the increase in the request for the predetermined action: creating a first proactive cache entry and creating a second proactive cache entry. In some additional or alternative implementations, the method further comprises predicting an increase in the request for the given action, wherein the inclusion of the first proactive cache entry in the proactive cache entry determines the determination of the request for the given action. more based on the increase. Predicting an increase in requests for a given action may include determining an increase in Internet content associated with the entity for which the given action is directed and/or determining a future event associated with the entity for which the given action is directed. have.
일부 구현들에서, 방법은 제1 프로액티브 어시스턴트 캐시 엔트리에 대한 TTL(Time to Live) 값을 생성하고 제1 프로액티브 어시스턴트 캐시 엔트리에 TTL 값을 포함시키는 단계를 더 포함한다. TTL 값은 소정의 클라이언트 장치로 하여금 TTL 값에 의해 정의된 기간(시간 지속기간)의 만료에 응답하여 로컬 프로액티브 캐시에서 제1 사전 예방 어시스턴트 캐시 엔트리를 제거하도록 한다. 이러한 구현 중 일부에서, 방법은 소정의 클라이언트 장치의 어시스턴트 클라이언트 애플리케이션에 의해: TTL 값을 제1 프로액티브 어시스턴트 캐시 엔트리에 대한 타임스탬프와 비교하는 것에 기초하여 프로액티브 캐시 엔트리로부터 제1 프로액티브 어시스턴트 캐시 엔트리를 제거하는 단계를 더 포함한다. In some implementations, the method further includes generating a Time to Live (TTL) value for the first Proactive Assistant cache entry and including the TTL value in the first Proactive Assistant cache entry. The TTL value causes a given client device to remove the first proactive assistant cache entry from the local proactive cache in response to expiration of a time period (time duration) defined by the TTL value. In some of these implementations, the method includes, by an assistant client application of a given client device: a first Proactive Assistant Cache from a Proactive Cache entry based on comparing the TTL value to a timestamp for the first Proactive Assistant Cache entry. The method further includes removing the entry.
일부 구현들에서, 방법은, 소정의 클라이언트 장치의 어시스턴트 클라이언트 애플리케이션에 의해: 프로액티브 캐시 요청 전송에 응답하여 프로액티브 캐시 엔트리를 수신하는 단계; 및 소정의 클라이언트 장치의 로컬 프로액티브 캐시에 프로액티브 캐시 엔트리를 저장하는 단계를 더 포함한다. In some implementations, the method includes, by an assistant client application of a given client device: receiving a Proactive Cache entry in response to sending a Proactive Cache request; and storing the proactive cache entry in a local proactive cache of the given client device.
그러한 구현들 중 일부에서, 방법은, 로컬 프로액티브 캐시에 프로액티브 캐시 엔트리를 저장한 후, 그리고 소정의 클라이언트 장치의 어시스턴트 클라이언트 애플리케이션에 의해: 온-디바이스 음성 인식을 사용하여, 사용자 인터페이스 입력으로서 클라이언트 장치의 하나 이상의 마이크로폰에 의해 검출된 오디오 데이터에서 캡처된 음성 발화에 기초하여 인식된 텍스트를 생성하는 단계; 프로액티브 캐시에 액세스하는 것에 기초하여, 제1 프로액티브 어시스턴트 캐시 엔트리의 어시스턴트 요청 파라미터가 인식된 텍스트 및/또는 인식된 텍스트에 기초하여 생성된 자연어 이해 데이터와 매칭한다고 결정하는 단계; 그리고 상기 매칭한다는 결정에 대한 응답으로: 제1 프로액티브 어시스턴트 캐시 엔트리의 제1 액션 콘텐츠의 제1 딥링크를 로컬적으로 실행하여, 제1 애플리케이션으로 하여금 소정의 액션을 수행하기 위한 제1 상태에서 오픈되도록 하는 단계를 더 포함한다.In some such implementations, the method includes storing a Proactive Cache entry in a local Proactive Cache and by an assistant client application on a given client device: using on-device speech recognition, the client as user interface input. generating recognized text based on speech utterances captured in audio data detected by one or more microphones of the device; determining, based on accessing the proactive cache, that an assistant request parameter of the first proactive assistant cache entry matches the recognized text and/or natural language understanding data generated based on the recognized text; and in response to the determining that: in a first state to locally execute a first deep link of a first action content of a first proactive assistant cache entry, causing the first application to perform a predetermined action. It further includes the step of allowing it to be opened.
일부 구현에서, 방법은, 소정의 클라이언트 장치의 어시스턴트 클라이언트 애플리케이션에 의해: 소정의 클라이언트 장치의 네트워크 상태 및/또는 소정의 클라이언트 장치의 계산 부하 상태가 하나 이상의 조건을 만족하는지 결정하는 단계; 상기 네트워크 상태 및/또는 계산 부하 상태가 하나 이상의 조건을 만족한다는 결정에 응답하여 프로액티브 캐시 요청을 전송하는 단계; 프로액티브 캐시 요청을 전송하는 것에 응답하여 프로액티브 캐시 엔트리를 수신하는 단계; 그리고 소정의 클라이언트 장치의 로컬 프로액티브 캐시에 프로액티브 캐시 엔트리를 저장하는 단계를 더 포함한다. In some implementations, a method includes, by an assistant client application of a given client device: determining whether a network condition of the given client device and/or a computational load condition of the given client device satisfies one or more conditions; sending a proactive cache request in response to determining that the network condition and/or computational load condition satisfies one or more conditions; receiving a proactive cache entry in response to sending a proactive cache request; and storing the proactive cache entry in a local proactive cache of the predetermined client device.
일부 구현에서, 하나 이상의 프로세서에 의해 수행되는 방법이 제공되며 특정 엔티티와 연관된 이벤트의 발생을 결정하는 단계를 포함한다. 방법은 특정 엔티티와 연관된 이벤트의 발생을 결정하는 것에 응답하여 특정 엔티티에 대한 하나 이상의 프로액티브 어시스턴트 캐시 엔트리를 생성하는 단계를 더 포함한다. 각각의 프로액티브 어시스턴트 캐시 엔트리는 각각의 어시스턴트 요청 파라미터 및 각각의 어시스턴트 액션 콘텐츠를 정의한다. 각각의 어시스턴트 요청 파라미터는 각각 특정 엔티티와 연관된 하나 이상의 각각의 어시스턴트 요청을 나타내고, 어시스턴트 요청의 하나 이상의 텍스트 표현 및/또는 어시스턴트 요청의 하나 이상의 의미론적 표현을 정의한다. 각각의 어시스턴트 액션 콘텐츠는 클라이언트 장치의 어시스턴트 클라이언트 애플리케이션에 의해 각각 로컬로 해석가능하여 어시스턴트 클라이언트 애플리케이션에 의해 특정 엔티티와 관련되고 하나 이상의 각각의 어시스턴트 요청에 응답하는 어시스턴트 액션의 로컬 수행을 야기할 수 있다. 방법은 서브세트의 클라이언트 장치가 각각이 특정 엔티티에 대응하는 하나 이상의 대응하는 속성을 갖는다는 결정에 기초하여 클라이언트 장치의 서브세트를 선택하는 단계를 더 포함한다. 방법은 선택된 서브세트에 없는 다른 클라이언트 장치들에 프로액티브 어시스턴트 캐시 엔트리들을 전송하지 않고, 특정 엔티티에 대한 프로액티브 어시스턴트 캐시 엔트리들을 서브세트의 복수의 클라이언트 장치들에 전송하는 단계를 더 포함한다. 프로액티브 어시스턴트 캐시 엔트리를 전송하는 것은 클라이언트 장치 각각의 대응하는 자동 어시스턴트 애플리케이션으로 하여금 소정의 클라이언트 장치에서 제공되는 미래의 음성 발화를 로컬적으로 이행할 때 상기 자동 어시스턴트 애플리케이션에 의한 활용을 위해 로컬 프로액티브 캐시에 상기 프로액티브 어시스턴트 캐시 엔트리를 로컬적으로 캐시하게 한다.In some implementations, a method performed by one or more processors is provided and includes determining an occurrence of an event associated with a particular entity. The method further includes creating one or more Proactive Assistant cache entries for the particular entity in response to determining an occurrence of an event associated with the particular entity. Each proactive assistant cache entry defines a respective assistant request parameter and a respective assistant action content. Each assistant request parameter represents one or more respective assistant requests, each associated with a particular entity, and defines one or more textual representations of the assistant requests and/or one or more semantic representations of the assistant requests. Each assistant action content may each be locally interpretable by an assistant client application on the client device to cause local performance by the assistant client application of an assistant action associated with a particular entity and responsive to one or more respective assistant requests. The method further includes selecting the subset of client devices based on determining that the subset of client devices each have one or more corresponding attributes corresponding to a particular entity. The method further includes sending the proactive assistant cache entries for the particular entity to the plurality of client devices in the subset without sending the proactive assistant cache entries to other client devices not in the selected subset. Sending the Proactive Assistant Cache entry causes the corresponding automated assistant application on each client device to be locally proactive for utilization by the automated assistant application when locally fulfilling future voice utterances provided at a given client device. cache the Proactive Assistant cache entry locally in a cache.
여기에 개시된 기술의 이들 및 다른 구현은 다음 특징 중 하나 이상을 포함할 수 있다. These and other implementations of the techniques disclosed herein may include one or more of the following features.
일부 구현들에서, 특정 엔티티와 연관된 이벤트의 발생을 결정하는 것은 특정 엔티티와 연관된 요청들의 증가 및/또는 특정 엔티티에 대한 인터넷 콘텐츠의 증가를 결정하는 것을 포함한다.In some implementations, determining the occurrence of an event associated with a particular entity includes determining an increase in requests associated with the particular entity and/or an increase in Internet content for the particular entity.
일부 구현들에서, 상기 특정 엔티티에 대한 하나 이상의 프로액티브 어시스턴트 캐시 엔트리 중 소정의 하나를 생성하는 것은, 특정 엔티티의 하나 이상의 속성에 기초하여 특정 엔티티와 연관된 하나 이상의 각각의 어시스턴트 요청을 생성하는 것; 그리고 하나 이상의 각각의 어시스턴트 요청에 기초하여 각각의 어시스턴트 요청 파라미터를 생성하는 것을 포함한다.In some implementations, generating the given one of the one or more Proactive Assistant cache entries for the particular entity comprises: generating one or more respective assistant requests associated with the particular entity based on one or more attributes of the particular entity; and generating each assistant request parameter based on the one or more respective assistant requests.
일부 구현에서, 특정 엔티티는 특정 사람 또는 특정 조직(organization)이다.In some implementations, a particular entity is a particular person or particular organization.
일부 구현들에서, 특정 엔티티의 하나 이상의 속성들에 기초하여 하나 이상의 각각의 어시스턴트 요청들을 생성하는 단계는, 엔티티의 클래스를 결정하는 단계; 클래스의 엔티티에 대한 가장 빈번한 쿼리에 대한 템플릿을 결정하는 단계; 그리고 상기 템플릿 및 엔티티의 별칭을 사용하여 각각의 어시스턴트 요청 중 적어도 하나를 생성하는 단계를 포함한다.In some implementations, generating one or more respective assistant requests based on one or more attributes of a particular entity may include determining a class of the entity; determining a template for most frequent queries on entities of a class; and generating at least one of each assistant request using the template and the alias of the entity.
일부 구현에서, 특정 엔티티와 연관된 이벤트는 특정 엔티티에 대해 변경되거나 특정 엔티티에 대해 새로운 속성이다. 이러한 구현들 중 일부에서, 특정 엔티티에 대한 하나 이상의 프로액티브 어시스턴트 캐시 엔트리를 생성하는 단계는, 이전에 생성된 프로액티브 어시스턴트 캐시 엔트리에 대한, 각각의 액션 콘텐츠를 변경함으로써 프로액티브 어시스턴트 캐시 엔트리 중 소정의 하나를 생성하여 상기 소정의 하나에 대한 액션의 로컬 수행 동안 속성이 렌더링되게 하는 단계를 포함한다. 이러한 구현의 일부 버전에서, 특정 엔티티는 지리적 영역의 날씨이고, 속성은 지리적 영역의 고온, 지리적 영역의 저온 및/또는 지리적 영역의 강우 확률이다. 이러한 구현의 일부 다른 버전에서 특정 엔티티는 이벤트이고, 속성은 이벤트의 시작 시간, 이벤트의 종료 시간 및/또는 이벤트의 위치이다.In some implementations, an event associated with a particular entity is an attribute that is changed for the particular entity or is new for the particular entity. In some of these implementations, creating one or more Proactive Assistant cache entries for a particular entity comprises changing the respective action content for a previously created Proactive Assistant cache entry to a certain one of the Proactive Assistant cache entries. creating one of , causing the attribute to be rendered during local performance of an action on the predetermined one. In some versions of this implementation, the particular entity is the weather in the geographic area, and the attribute is the high temperature in the geographic area, the cold in the geographic area, and/or the probability of rainfall in the geographic area. In some other versions of this implementation the specific entity is an event, and the attributes are the start time of the event, the end time of the event, and/or the location of the event.
일부 구현들에서, 방법은 서브세트의 클라이언트 장치들과 중첩되지 않는 클라이언트 장치들의 제2 서브세트를 선택하는 단계를 더 포함한다. 방법은 제2 서브세트의 클라이언트 장치로부터의 어시스턴트 요청에 응답하여 이용되는 하나 이상의 원격 프로액티브 캐시에 프로액티브 어시스턴트 캐시 엔트리를 저장하는 단계를 더 포함한다. 이러한 구현들 중 일부에서, 하나 이상의 원격 프로액티브 캐시는 제2 서브세트의 클라이언트 장치 각각에 대한 원격 프로액티브 캐시 중 해당 하나를 포함한다. In some implementations, the method further includes selecting a second subset of client devices that do not overlap with the client devices of the subset. The method further includes storing the proactive assistant cache entries in one or more remote proactive caches used in response to an assistant request from the second subset of client devices. In some of these implementations, the one or more remote proactive caches include a corresponding one of the remote proactive caches for each of the client devices of the second subset.
일부 구현에서, 방법은, 서브세트의 클라이언트 장치 중 소정의 클라이언트 장치의 어시스턴트 클라이언트 애플리케이션에 의해: 프로액티브 캐시 요청을 전송하는 단계를 더 포함하며, 상기 프로액티브 어시스턴트 캐시 엔트리를 소정의 클라이언트 장치로 전송하는 것은 프로액티브 캐시 요청을 수신하는 것에 응답한다.In some implementations, the method further comprises, by an assistant client application of a given client device of the subset of client devices: sending a Proactive Cache request, wherein the Proactive Assistant Cache entry is sent to the given client device. is in response to receiving a Proactive Cache request.
일부 구현들에서, 방법은, 서브세트의 클라이언트 장치 중 소정의 클라이언트 장치의 어시스턴트 클라이언트 애플리케이션에 의해: 프로액티브 캐시 엔트리를 수신하는 단계; 그리고 소정의 클라이언트 장치의 소정의 로컬 프로액티브 캐시에 프로액티브 캐시 엔트리를 저장하는 단계를 더 포함한다. 이러한 구현 중 일부에서, 방법은, 로컬 프로액티브 캐시에 프로액티브 캐시 엔트리를 저장한 후, 그리고 소정의 클라이언트 장치의 어시스턴트 클라이언트 애플리케이션에 의해: 온-디바이스 음성 인식을 사용하여, 클라이언트 장치의 하나 이상의 마이크로폰에 의해 검출된 오디오 데이터에서 캡처된 음성 발화에 기초하여 인식된 텍스트를 생성하는 단계; 프로액티브 캐시에 액세스하는 것에 기초하여, 프로액티브 어시스턴트 캐시 엔트리 중 소정의 하나의 각각의 어시스턴트 요청 파라미터가 상기 인식된 텍스트 및/또는 인식된 텍스트에 기초하여 생성된 자연어 이해 데이터와 매칭한다고 결정하는 단계; 그리고 상기 매칭한다는 결정에 응답하여: 프로액티브 어시스턴트 캐시 엔트리들 중 소정의 하나의 각각의 어시스턴트 액션 콘텐츠를 로컬적으로 해석하는 단계를 더 포함한다. 이들 구현의 일부 버전에서, 상기 프로액티브 어시스턴트 캐시 엔트리들 중 소정의 하나의 각각의 어시스턴트 액션 콘텐츠를 로컬적으로 해석하는 단계는, 어시스턴트 액션 콘텐츠의 텍스트 및/또는 그래픽 콘텐츠가 클라이언트 장치에서 렌더링되게 하는 단계를 포함한다.In some implementations, the method includes, by an assistant client application of a given one of the subset of client devices: receiving a proactive cache entry; and storing the proactive cache entry in a predetermined local proactive cache of the predetermined client device. In some of these implementations, the method includes storing a Proactive Cache entry in a local Proactive Cache and by an assistant client application of the given client device: one or more microphones of the client device using on-device speech recognition. generating a recognized text based on the captured speech utterance in the audio data detected by ; determining, based on accessing the proactive cache, that each assistant request parameter of a given one of the proactive assistant cache entries matches the recognized text and/or natural language understanding data generated based on the recognized text; ; and in response to the determining that it matches: locally interpreting the content of each assistant action of a predetermined one of the proactive assistant cache entries. In some versions of these implementations, locally interpreting each assistant action content of any one of the proactive assistant cache entries causes textual and/or graphical content of the assistant action content to be rendered on the client device. includes steps.
일부 구현에서, 하나 이상의 프로세서에 의해 구현되는 방법이 제공되며, 특정 엔티티와 연관된 이벤트의 발생을 결정하는 단계를 포함한다. 방법은, 특정 엔티티와 연관된 이벤트의 발생을 결정하는 것에 기초하여: 서브세트의 클라이언트 장치들이 각각이 특정 엔티티에 대응하는 하나 이상의 대응하는 속성들을 갖는다는 결정에 기초하여 클라이언트 장치의 서브세트를 선택하는 단계를 더 포함한다. 방법은 선택된 서브세트에 있지 않은 다른 클라이언트 장치에 프로액티브 어시스턴트 캐시 엔트리를 전송하지 않고, 특정 엔티티에 대한 하나 이상의 프로액티브 어시스턴트 캐시 엔트리를 서브세트의 복수의 클라이언트 장치에 전송하는 단계를 더 포함한다. 특정 엔티티에 대한 프로액티브 어시스턴트 캐시 엔트리 각각은, 특정 엔티티와 연관된 하나 이상의 각각의 어시스턴트 요청을 나타내는 각각의 어시스턴트 요청 파라미터; 그리고 클라이언트 장치의 어시스턴트 클라이언트 애플리케이션에 의해 로컬적으로 해석될 수 있고, 특정 엔티티와 관련되고 그리고 하나 이상의 각각의 어시스턴트 요청에 응답하는 어시스턴트 액션의 로컬 수행을 어시스턴트 클라이언트 애플리케이션에 의해 야기할 수 있는 각각의 어시스턴트 액션 콘텐츠를 정의한다. 상기 프로액티브 어시스턴트 캐시 엔트리를 전송하는 것은 클라이언트 장치 각각의 해당 자동 어시스턴트 애플리케이션으로 하여금 소정의 클라이언트 장치에서 제공되는 미래의 음성 발화를 로컬적으로 이행할 때 상기 자동 어시스턴트 애플리케이션에 의한 활용을 위해 로컬 프로액티브 캐시에 상기 프로액티브 어시스턴트 캐시 엔트리를 캐시하게 한다. In some implementations, a method implemented by one or more processors is provided, comprising determining an occurrence of an event associated with a particular entity. The method includes, based on determining an occurrence of an event associated with a particular entity: selecting a subset of client devices based on determining that the subset of client devices each have one or more corresponding attributes corresponding to the particular entity. further comprising steps. The method further includes sending one or more proactive assistant cache entries for the particular entity to the plurality of client devices in the subset without sending the proactive assistant cache entries to other client devices not in the selected subset. Each of the Proactive Assistant cache entries for a particular entity may include: a respective assistant request parameter representing one or more respective assistant requests associated with the particular entity; and each assistant capable of being interpreted locally by the assistant client application of the client device, and capable of causing, by the assistant client application, the local performance of an assistant action related to a particular entity and responsive to one or more respective assistant requests. Define the action content. Sending the proactive assistant cache entry causes the corresponding automated assistant application on each client device to be locally proactive for utilization by the automated assistant application when locally fulfilling future voice utterances provided at a given client device. cache the Proactive Assistant cache entry in a cache.
여기에 개시된 기술의 이들 및 다른 구현은 다음 특징 중 하나 이상을 포함할 수 있다.These and other implementations of the techniques disclosed herein may include one or more of the following features.
일부 구현에서, 특정 엔티티와 연관된 이벤트의 발생을 결정하는 결정하는 단계는 특정 엔티티에 대한 인터넷 콘텐츠의 증가를 결정하는 단계를 포함한다. 상기 특정 엔티티와 연관된 이벤트의 발생을 결정하는 단계는 하나 이상의 자동화되지 않은 어시스턴트 애플리케이션으로부터의 요청을 포함하는, 특정 엔티티에 대한 요청의 증가를 결정하는 단계; 및/또는 하나 이상의 원격 서버와의 상호작용을 통해, 특정 엔티티의 속성 변경을 결정하는 단계를 포함한다.In some implementations, determining determining the occurrence of an event associated with the particular entity includes determining an increase in Internet content for the particular entity. Determining the occurrence of an event associated with the particular entity may include: determining an increase in requests for a particular entity, including requests from one or more non-automated assistant applications; and/or, through interaction with one or more remote servers, determining a change in an attribute of the particular entity.
Claims (35)
소정의 액션을 수행하기 위한 하나 이상의 어시스턴트 요청을 나타내는 어시스턴트 요청 파라미터를 결정하는 단계 -어시스턴트 요청 파라미터는 어시스턴트 요청의 하나 이상의 텍스트 표현 및/또는 어시스턴트 요청의 하나 이상의 의미론적 표현을 정의함-;
소정의 액션이 제1 애플리케이션을 사용하여 수행될 수 있고 또한 제2 애플리케이션을 사용하여 수행될 수 있다고 결정하는 단계;
제1 애플리케이션에 대한 제1 액션 콘텐츠를 생성하는 단계 -제1 액션 콘텐츠는 제1 애플리케이션에 대한 제1 딥링크를 포함하고, 제1 딥링크는 제1 애플리케이션이 설치된 클라이언트 장치의 어시스턴트 클라이언트 애플리케이션에 의해 로컬로 실행 가능하고, 제1 딥링크의 로컬 실행은 제1 애플리케이션으로 하여금 소정의 액션을 수행하기 위한 제1 상태에서 오픈(open)되도록 함-;
제2 애플리케이션에 대한 제2 액션 콘텐츠를 생성하는 단계 -제2 액션 콘텐츠는 제2 애플리케이션에 대한 제2 딥링크를 포함하고, 제2 딥링크는 제1 딥링크와는 다르고 그리고 제2 애플리케이션이 설치된 클라이언트 장치의 어시스턴트 클라이언트 애플리케이션에 의해 로컬로 실행 가능하고, 제2 딥링크의 로컬 실행은 제2 애플리케이션으로 하여금 소정의 액션을 수행하기 위한 제2 상태에서 오픈되도록 함-;
어시스턴트 요청 파라미터 및 제1 액션 콘텐츠를 포함하는 제1 프로액티브(proactive) 어시스턴트 캐시 엔트리를 생성하는 단계;
어시스턴트 요청 파라미터 및 제2 액션 콘텐츠를 포함하는 제2 프로액티브 어시스턴트 캐시 엔트리를 생성하는 단계;
소정의 클라이언트 장치에 대한 프로액티브 캐시 엔트리를 생성하는 단계 - 프로액티브 캐시 엔트리를 생성하는 단계는 제1 애플리케이션은 설치되었지만 제2 애플리케이션은 설치되지 않은 소정의 클라이언트 장치에 기초하여 제1 프로액티브 캐시 엔트리를 포함하지만 제2 프로액티브 캐시 엔트리는 포함하지 않는 단계를 포함함-; 그리고
소정의 클라이언트 장치에 의해 전송된 프로액티브 캐시 요청을 수신하는 것에 응답하여 프로액티브 캐시 엔트리를 소정의 클라이언트 장치로 전송하는 단계를 포함하며,
소정의 클라이언트 장치의 자동 어시스턴트 애플리케이션은 소정의 클라이언트 장치에서 제공되는 미래의 사용자 인터페이스 입력을 로컬적으로 이행할 때 자동 어시스턴트 애플리케이션에 의한 활용을 위해 로컬 프로액티브 캐시에 프로액티브 캐시 엔트리를 저장하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법. A method performed by one or more processors, comprising:
determining an assistant request parameter representing one or more assistant requests to perform a predetermined action, the assistant request parameter defining one or more textual representations of the assistant request and/or one or more semantic representations of the assistant request;
determining that an action can be performed using the first application and can also be performed using the second application;
Generating a first action content for a first application - The first action content includes a first deep link to the first application, wherein the first deep link is by an assistant client application of a client device on which the first application is installed locally executable, wherein the local execution of the first deep link causes the first application to be opened in a first state to perform a predetermined action;
generating second action content for a second application, the second action content includes a second deep link to the second application, the second deep link is different from the first deep link, and the second application is installed locally executable by an assistant client application of the client device, wherein the local execution of the second deep link causes the second application to be opened in a second state for performing a predetermined action;
creating a first proactive assistant cache entry comprising an assistant request parameter and first action content;
creating a second proactive assistant cache entry comprising the assistant request parameter and second action content;
creating a proactive cache entry for a given client device, wherein creating a proactive cache entry comprises a first proactive cache entry based on a given client device having a first application installed but not a second application installed including but not including the second proactive cache entry; and
sending a Proactive Cache entry to the given client device in response to receiving the Proactive Cache request sent by the given client device;
wherein the automated assistant application on the given client device stores a Proactive Cache entry in a local Proactive Cache for utilization by the automated assistant application when locally fulfilling future user interface inputs provided on the given client device. A method performed by one or more processors.
소정의 액션에 대한 요청의 증가를 결정하는 단계; 그리고
소정의 액션에 대한 요청의 증가를 결정하는 것에 응답하여:
제1 프로액티브 캐시 엔트리를 생성하고 그리고 제2 프로액티브 캐시 엔트리를 생성하는 단계를 더 포함하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법. The method of claim 1, wherein the method comprises:
determining an increase in requests for a given action; and
In response to determining an increase in the request for a given action:
The method performed by the one or more processors, further comprising generating a first proactive cache entry and generating a second proactive cache entry.
소정의 액션에 대한 요청의 증가를 결정하는 단계를 더 포함하며,
상기 프로액티브 캐시 엔트리에 상기 제1 프로액티브 캐시 엔트리를 포함하는 것은 상기 소정의 액션에 대한 요청의 증가에 더 기초하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법. The method according to any one of the preceding claims, wherein the method comprises:
determining an increase in the request for a given action;
and the inclusion of the first proactive cache entry in the proactive cache entry is further based on an increase in the request for the predetermined action.
소정의 액션이 지시되는 엔티티가 프로액티브 캐시 엔트리가 생성되는 소정의 클라이언트 장치에 대한 하나 이상의 속성에 대응한다고 결정하는 것을 포함하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법. 4. The method of claim 3, wherein including the first proactive cache entry in the proactive cache entry further based on an increase in requests for the predetermined action:
and determining that the entity to which the given action is directed corresponds to one or more attributes for the given client device for which a proactive cache entry is being created.
소정의 액션에 대한 요청의 증가를 예측하는 단계; 그리고
소정의 액션에 대한 요청의 증가를 결정하는 것에 응답하여:
제1 프로액티브 캐시 엔트리를 생성하고 그리고 제2 프로액티브 캐시 엔트리를 생성하는 단계를 더 포함하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법. The method of claim 1, wherein the method comprises:
predicting an increase in requests for a given action; and
In response to determining an increase in the request for a given action:
The method performed by the one or more processors, further comprising generating a first proactive cache entry and generating a second proactive cache entry.
소정의 액션에 대한 요청의 증가를 예측하는 단계를 더 포함하며,
상기 프로액티브 캐시 엔트리에 상기 제1 프로액티브 캐시 엔트리를 포함하는 것은 상기 소정의 액션에 대한 요청의 증가에 더 기초하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법. The method of claim 1, wherein the method comprises:
predicting an increase in requests for a given action;
and the inclusion of the first proactive cache entry in the proactive cache entry is further based on an increase in the request for the predetermined action.
소정의 액션이 지시되는 엔티티와 연관된 인터넷 콘텐츠의 증가를 결정하는 단계를 포함하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법. 10. The method of claim 8 or 9, wherein predicting an increase in requests for the predetermined action comprises:
and determining an increase in Internet content associated with an entity to which a given action is directed.
제1 프로액티브 어시스턴트 캐시 엔트리에 대한 TTL(Time to Live) 값을 생성하는 단계; 그리고
제1 프로액티브 어시스턴트 캐시 엔트리에 TTL(Time to Live) 값을 포함시키는 단계를 더 포함하며,
TTL 값은 소정의 클라이언트 장치로 하여금 TTL 값에 의해 정의된 시간 지속기간의 만료에 응답하여 로컬 프로액티브 캐시로부터 제1 프로액티브 어시스턴트 캐시 엔트리를 제거하게 하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법. The method according to any one of the preceding claims, wherein the method comprises:
generating a time to live (TTL) value for the first proactive assistant cache entry; and
and including a Time to Live (TTL) value in the first proactive assistant cache entry;
wherein the TTL value causes a given client device to remove the first Proactive Assistant Cache entry from the local Proactive Cache in response to expiration of a time duration defined by the TTL value. Way.
소정의 클라이언트 장치의 어시스턴트 클라이언트 애플리케이션에 의해:
TTL 값을 제1 프로액티브 어시스턴트 캐시 엔트리에 대한 타임스탬프와 비교하는 것에 기초하여 프로액티브 캐시 엔트리로부터 제1 프로액티브 어시스턴트 캐시 엔트리를 제거하는 단계를 더 포함하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법. 12. The method of claim 11, wherein the method comprises:
By an assistant client application on a given client device:
removing the first Proactive Assistant Cache entry from the Proactive Cache entry based on comparing the TTL value to a timestamp for the first Proactive Assistant Cache entry. how to be
소정의 클라이언트 장치의 어시스턴트 클라이언트 애플리케이션에 의해:
프로액티브 캐시 요청을 전송하는 것에 응답하여 프로액티브 캐시 엔트리를 수신하는 단계; 그리고
소정의 클라이언트 장치의 로컬 프로액티브 캐시에 프로액티브 캐시 엔트리를 저장하는 단계를 더 포함하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법. The method according to any one of the preceding claims, wherein the method comprises:
By an assistant client application on a given client device:
receiving a proactive cache entry in response to sending the proactive cache request; and
and storing the Proactive Cache entry in a local Proactive Cache of a given client device.
로컬 프로액티브 캐시에 프로액티브 캐시 엔트리를 저장한 후, 그리고 소정의 클라이언트 장치의 어시스턴트 클라이언트 애플리케이션에 의해:
온-디바이스 음성 인식을 사용하여, 사용자 인터페이스 입력으로서 클라이언트 장치의 하나 이상의 마이크로폰에 의해 검출된 오디오 데이터에서 캡처된 음성 발화에 기초하여 인식된 텍스트를 생성하는 단계;
프로액티브 캐시에 액세스하는 것에 기초하여, 제1 프로액티브 어시스턴트 캐시 엔트리의 어시스턴트 요청 파라미터가 인식된 텍스트 및/또는 인식된 텍스트에 기초하여 생성된 자연어 이해 데이터와 매칭한다고 결정하는 단계; 그리고
상기 매칭한다는 결정에 대한 응답으로:
제1 프로액티브 어시스턴트 캐시 엔트리의 제1 액션 콘텐츠의 제1 딥링크를 로컬적으로 실행하여, 제1 애플리케이션으로 하여금 소정의 액션을 수행하기 위한 제1 상태에서 오픈되도록 하는 단계를 더 포함하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법. 14. The method of claim 13, wherein the method comprises:
After storing the Proactive Cache entry in the local Proactive Cache, and by the Assistant Client Application on the given client device:
using on-device speech recognition to generate recognized text based on speech utterances captured in audio data detected by one or more microphones of the client device as user interface input;
determining, based on accessing the proactive cache, that an assistant request parameter of the first proactive assistant cache entry matches the recognized text and/or natural language understanding data generated based on the recognized text; and
In response to the determination of matching:
locally executing a first deep link of the first action content of the first proactive assistant cache entry, causing the first application to be opened in a first state for performing the predetermined action A method performed by one or more processors.
소정의 클라이언트 장치의 어시스턴트 클라이언트 애플리케이션에 의해:
소정의 클라이언트 장치의 네트워크 상태 및/또는 소정의 클라이언트 장치의 계산 부하 상태가 하나 이상의 조건을 만족하는지 결정하는 단계;
상기 네트워크 상태 및/또는 계산 부하 상태가 하나 이상의 조건을 만족한다는 결정에 응답하여 프로액티브 캐시 요청을 전송하는 단계;
프로액티브 캐시 요청을 전송하는 것에 응답하여 프로액티브 캐시 엔트리를 수신하는 단계; 그리고
소정의 클라이언트 장치의 로컬 프로액티브 캐시에 프로액티브 캐시 엔트리를 저장하는 단계를 더 포함하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법. The method according to any one of the preceding claims, wherein the method comprises:
By an assistant client application on a given client device:
determining whether a network condition of the given client device and/or a computational load condition of the given client device satisfies one or more conditions;
sending a proactive cache request in response to determining that the network condition and/or computational load condition satisfies one or more conditions;
receiving a proactive cache entry in response to sending the proactive cache request; and
and storing the Proactive Cache entry in a local Proactive Cache of a given client device.
특정 엔티티와 연관된 이벤트의 발생을 결정하는 단계;
특정 엔티티와 연관된 이벤트의 발생을 결정하는 것에 대한 응답으로:
특정 엔티티에 대한 하나 이상의 프로액티브 어시스턴트 캐시 엔트리를 생성하는 단계를 더 포함하며, 프로액티브 어시스턴트 캐시 엔트리 각각은:
특정 엔티티와 연관된 하나 이상의 각각의 어시스턴트 요청을 나타내는 각각의 어시스턴트 요청 파라미터 -어시스턴트 요청 파라미터는 어시스턴트 요청의 하나 이상의 텍스트 표현 및/또는 어시스턴트 요청의 하나 이상의 의미론적 표현을 정의함-, 그리고
클라이언트 장치의 어시스턴트 클라이언트 애플리케이션에 의해 로컬적으로 해석될 수 있고,
특정 엔티티와 관련되고 하나 이상의 각각의 어시스턴트 요청에 응답하는 어시스턴트 액션의 로컬 수행을 어시스턴트 클라이언트 애플리케이션에 의해 야기할 수 있는 각각의 어시스턴트 액션 콘텐츠를 정의함-;
서브세트의 클라이언트 장치들 각각이 특정 엔티티에 대응하는 하나 이상의 해당 속성을 갖는다는 결정에 기초하여 클라이언트 장치들의 서브세트를 선택하는 단계; 그리고
선택된 서브세트에 있지 않은 다른 클라이언트 장치에 프로액티브 어시스턴트 캐시 엔트리를 전송하지 않고, 특정 엔티티에 대한 프로액티브 어시스턴트 캐시 엔트리를 서브세트의 복수의 클라이언트 장치에 전송하는 단계를 포함하며,
상기 프로액티브 어시스턴트 캐시 엔트리를 전송하는 단계는 클라이언트 장치 각각의 해당 자동 어시스턴트 애플리케이션으로 하여금
소정의 클라이언트 장치에서 제공되는 미래의 음성 발화를 로컬적으로 이행할 때 상기 자동 어시스턴트 애플리케이션에 의한 활용을 위해 로컬 프로액티브 캐시에 상기 프로액티브 어시스턴트 캐시 엔트리를 로컬적으로 캐시하게 하는 단계를 포함하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법.A method performed by one or more processors, comprising:
determining an occurrence of an event associated with a particular entity;
In response to determining the occurrence of an event associated with a particular entity:
The method further comprises creating one or more Proactive Assistant cache entries for the particular entity, each Proactive Assistant cache entry comprising:
each assistant request parameter representing one or more respective assistant requests associated with a particular entity, the assistant request parameters defining one or more textual representations of the assistant request and/or one or more semantic representations of the assistant request; and
can be interpreted locally by an assistant client application on the client device;
defining respective assistant action content that is associated with a particular entity and that can cause, by an assistant client application, local performance of an assistant action in response to one or more respective assistant requests;
selecting the subset of client devices based on a determination that each of the client devices of the subset has one or more corresponding attributes corresponding to a particular entity; and
sending the proactive assistant cache entries for the particular entity to a plurality of client devices in the subset without sending the proactive assistant cache entries to other client devices not in the selected subset;
The step of sending the Proactive Assistant cache entry causes the corresponding automated assistant application on each of the client devices to
causing the Proactive Assistant cache entry to be cached locally in a local Proactive Cache for utilization by the automated assistant application when locally fulfilling future voice utterances provided at a given client device. A method performed by one or more processors characterized in that
특정 엔티티와 연관된 요청의 증가 및/또는 특정 엔티티에 대한 인터넷 콘텐츠의 증가를 결정하는 단계를 포함하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법.17. The method of claim 16, wherein determining the occurrence of an event associated with the particular entity comprises:
and determining an increase in requests associated with the particular entity and/or an increase in Internet content for the particular entity.
특정 엔티티의 하나 이상의 속성에 기초하여 특정 엔티티와 연관된 하나 이상의 각각의 어시스턴트 요청을 생성하는 단계; 그리고
하나 이상의 각각의 어시스턴트 요청에 기초하여 각각의 어시스턴트 요청 파라미터를 생성하는 단계를 포함하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법.18. The method of claim 16 or 17, wherein creating a predetermined one of one or more Proactive Assistant cache entries for the particular entity comprises:
generating one or more respective assistant requests associated with the particular entity based on one or more attributes of the particular entity; and
and generating a respective assistant request parameter based on the one or more respective assistant requests.
엔티티의 클래스를 결정하는 단계;
클래스의 엔티티에 대한 가장 빈번한 쿼리에 대한 템플릿을 결정하는 단계; 그리고
상기 템플릿 및 엔티티의 별칭을 사용하여 각각의 어시스턴트 요청 중 적어도 하나를 생성하는 단계를 포함하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법.20. The method of any one of claims 16 to 19, wherein generating the one or more respective assistant requests based on one or more attributes of the particular entity comprises:
determining the class of the entity;
determining a template for most frequent queries on entities of a class; and
generating at least one of each assistant request using the template and the alias of the entity.
특정 엔티티와 연관된 이벤트는 특정 엔티티에 대해 변경되거나 특정 엔티티에 대해 새로운 속성이고, 특정 엔티티에 대한 하나 이상의 프로액티브 어시스턴트 캐시 엔트리를 생성하는 단계는
이전에 생성된 프로액티브 어시스턴트 캐시 엔트리에 대한, 각각의 액션 콘텐츠를 변경함으로써 프로액티브 어시스턴트 캐시 엔트리 중 소정의 하나를 생성하여 상기 소정의 하나에 대한 액션의 로컬 수행 동안 속성이 렌더링되게 하는 단계를 포함하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법.20. The method according to any one of claims 16 to 19,
An event associated with a particular entity is a changed or new attribute for a particular entity, and creating one or more Proactive Assistant cache entries for a particular entity comprises:
creating a predetermined one of the Proactive Assistant cache entries by changing the respective action content, for a previously created Proactive Assistant cache entry, such that the attribute is rendered during local performance of an action on the predetermined one. A method performed by one or more processors, characterized in that
상기 속성은 지리적 영역의 고온, 지리적 영역의 저온 및 지리적 영역의 강우 확률 중 적어도 하나인 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법.22. The method of claim 21, wherein the specific entity is weather in a geographic area;
and the attribute is at least one of a high temperature in the geographic area, a low temperature in the geographic area, and a probability of rainfall in the geographic area.
클라이언트 장치의 제2 서브세트를 선택하는 단계 -제2 서브세트의 클라이언트 장치는 서브세트의 클라이언트 장치와 중첩되지 않음-;
제2 서브세트의 클라이언트 장치로부터의 어시스턴트 요청에 응답하여 이용되는 하나 이상의 원격 프로액티브 캐시에 프로액티브 어시스턴트 캐시 엔트리를 저장하는 단계를 더 포함하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법.24. The method of any one of claims 16 to 23, wherein the method comprises:
selecting a second subset of client devices, wherein the client devices of the second subset do not overlap with the client devices of the subset;
and storing the proactive assistant cache entries in the one or more remote proactive caches used in response to an assistant request from the second subset of client devices.
서브세트의 클라이언트 장치 중 소정의 클라이언트 장치의 어시스턴트 클라이언트 애플리케이션에 의해:
프로액티브 캐시 요청을 전송하는 단계를 더 포함하며,
상기 프로액티브 어시스턴트 캐시 엔트리를 소정의 클라이언트 장치로 전송하는 것은 프로액티브 캐시 요청을 수신하는 것에 응답하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법.26. The method of any one of claims 16 to 25, wherein the method comprises:
By an assistant client application of any of the client devices of the subset:
sending a proactive cache request;
and sending the Proactive Assistant Cache entry to a given client device is in response to receiving a Proactive Cache request.
서브세트의 클라이언트 장치 중 소정의 클라이언트 장치의 어시스턴트 클라이언트 애플리케이션에 의해:
프로액티브 캐시 엔트리를 수신하는 단계; 그리고
소정의 클라이언트 장치의 소정의 로컬 프로액티브 캐시에 프로액티브 캐시 엔트리를 저장하는 단계를 더 포함하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법.27. The method of any one of claims 16 to 26, wherein the method comprises:
By an assistant client application of any of the client devices of the subset:
receiving a proactive cache entry; and
and storing the proactive cache entry in a predefined local proactive cache of a given client device.
로컬 프로액티브 캐시에 프로액티브 캐시 엔트리를 저장한 후, 그리고 소정의 클라이언트 장치의 어시스턴트 클라이언트 애플리케이션에 의해:
온-디바이스 음성 인식을 사용하여, 클라이언트 장치의 하나 이상의 마이크로폰에 의해 검출된 오디오 데이터에서 캡처된 음성 발화에 기초하여 인식된 텍스트를 생성하는 단계;
프로액티브 캐시에 액세스하는 것에 기초하여, 프로액티브 어시스턴트 캐시 엔트리 중 소정의 하나의 각각의 어시스턴트 요청 파라미터가 상기 인식된 텍스트 및/또는 인식된 텍스트에 기초하여 생성된 자연어 이해 데이터와 매칭한다고 결정하는 단계; 그리고
상기 매칭한다는 결정에 응답하여:
프로액티브 어시스턴트 캐시 엔트리들 중 소정의 하나의 각각의 어시스턴트 액션 콘텐츠를 로컬적으로 해석하는 단계를 더 포함하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법.28. The method of claim 27, wherein the method comprises:
After storing the Proactive Cache entry in the local Proactive Cache, and by the Assistant Client Application on the given client device:
using on-device speech recognition to generate recognized text based on speech utterances captured in audio data detected by one or more microphones of a client device;
determining, based on accessing the Proactive Cache, that each assistant request parameter of any one of the Proactive Assistant cache entries matches the recognized text and/or natural language understanding data generated based on the recognized text; ; and
In response to the matching determination:
and locally interpreting the content of each assistant action of a given one of the proactive assistant cache entries.
어시스턴트 액션 콘텐츠의 텍스트 및/또는 그래픽 콘텐츠가 클라이언트 장치에서 렌더링되게 하는 단계를 포함하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법.29. The method of claim 28, wherein locally interpreting the content of each assistant action of a given one of the proactive assistant cache entries comprises:
and causing textual and/or graphical content of the assistant action content to be rendered on the client device.
특정 엔티티와 연관된 이벤트의 발생을 결정하는 단계;
특정 엔티티와 연관된 이벤트의 발생을 결정하는 것에 기초하여:
서브세트의 클라이언트 장치들이 각각이 특정 엔티티에 대응하는 하나 이상의 대응하는 속성들을 갖는다는 결정에 기초하여 클라이언트 장치의 서브세트를 선택하는 단계; 그리고
선택된 서브세트에 있지 않은 다른 클라이언트 장치에 프로액티브 어시스턴트 캐시 엔트리를 전송하지 않고, 특정 엔티티에 대한 하나 이상의 프로액티브 어시스턴트 캐시 엔트리를 서브세트의 복수의 클라이언트 장치에 전송하는 단계를 포함하며,
특정 엔티티에 대한 프로액티브 어시스턴트 캐시 엔트리 각각은,
특정 엔티티와 연관된 하나 이상의 각각의 어시스턴트 요청을 나타내는 각각의 어시스턴트 요청 파라미터, 그리고
클라이언트 장치의 어시스턴트 클라이언트 애플리케이션에 의해 로컬적으로 해석될 수 있고, 특정 엔티티와 관련되고 그리고 하나 이상의 각각의 어시스턴트 요청에 응답하는 어시스턴트 액션의 로컬 수행을 어시스턴트 클라이언트 애플리케이션에 의해 야기할 수 있는 각각의 어시스턴트 액션 콘텐츠를 정의하고,
상기 프로액티브 어시스턴트 캐시 엔트리를 전송하는 것은 클라이언트 장치 각각의 해당 자동 어시스턴트 애플리케이션으로 하여금 소정의 클라이언트 장치에서 제공되는 미래의 음성 발화를 로컬적으로 이행할 때 상기 자동 어시스턴트 애플리케이션에 의한 활용을 위해 로컬 프로액티브 캐시에 상기 프로액티브 어시스턴트 캐시 엔트리를 캐시하게 하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법.A method performed by one or more processors, comprising:
determining an occurrence of an event associated with a particular entity;
Based on determining the occurrence of an event associated with a particular entity:
selecting the subset of client devices based on a determination that the subset of client devices each have one or more corresponding attributes corresponding to a particular entity; and
sending one or more Proactive Assistant cache entries for a particular entity to a plurality of client devices in the subset without sending the Proactive Assistant cache entries to other client devices not in the selected subset;
Each Proactive Assistant cache entry for a particular entity is:
each assistant request parameter indicating one or more respective assistant requests associated with the particular entity, and
Each assistant action that can be interpreted locally by the assistant client application of the client device, is related to a particular entity, and can cause by the assistant client application to perform local performance of the assistant action in response to one or more respective assistant requests. define the content,
Sending the proactive assistant cache entry causes the corresponding automated assistant application on each client device to be locally proactive for utilization by the automated assistant application when locally fulfilling future voice utterances provided at a given client device. and cache the Proactive Assistant cache entry in a cache.
특정 엔티티에 대한 인터넷 콘텐츠의 증가를 결정하는 단계를 포함하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법.31. The method of claim 30, wherein determining the occurrence of an event associated with the particular entity comprises:
and determining an increase in Internet content for a particular entity.
하나 이상의 자동화되지 않은 어시스턴트 애플리케이션으로부터의 요청을 포함하는, 특정 엔티티에 대한 요청의 증가를 결정하는 단계를 포함하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법.31. The method of claim 30, wherein determining the occurrence of an event associated with the particular entity comprises:
and determining an increase in requests for a particular entity, including requests from one or more non-automated assistant applications.
하나 이상의 원격 서버와의 상호작용을 통해, 특정 엔티티의 속성 변경을 결정하는 단계를 포함하는 것을 특징으로 하는 하나 이상의 프로세서에 의해 수행되는 방법.31. The method of claim 30, wherein determining the occurrence of an event associated with the particular entity comprises:
and determining, through interaction with one or more remote servers, a change in an attribute of a particular entity.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201962843890P | 2019-05-06 | 2019-05-06 | |
US62/843,890 | 2019-05-06 | ||
PCT/US2019/034911 WO2020226664A1 (en) | 2019-05-06 | 2019-05-31 | Proactive caching of assistant action content at a client device to enable on-device resolution of spoken or typed utterances |
Publications (1)
Publication Number | Publication Date |
---|---|
KR20210147027A true KR20210147027A (en) | 2021-12-06 |
Family
ID=66913066
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
KR1020217035835A KR20210147027A (en) | 2019-05-06 | 2019-05-31 | Proactive caching of assistant action content on client devices to enable on-device resolution of speech or input utterances |
Country Status (7)
Country | Link |
---|---|
US (3) | US11170777B2 (en) |
EP (2) | EP3935628B1 (en) |
JP (2) | JP7293399B2 (en) |
KR (1) | KR20210147027A (en) |
CN (1) | CN113924617A (en) |
AU (3) | AU2019444630B2 (en) |
WO (1) | WO2020226664A1 (en) |
Families Citing this family (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP2021156907A (en) * | 2018-06-15 | 2021-10-07 | ソニーグループ株式会社 | Information processor and information processing method |
EP3935628B1 (en) | 2019-05-06 | 2023-09-20 | Google LLC | Proactive caching of assistant action content at a client device to enable on-device resolution of spoken or typed utterances |
US11710480B2 (en) * | 2019-08-07 | 2023-07-25 | International Business Machines Corporation | Phonetic comparison for virtual assistants |
US11675419B2 (en) * | 2020-11-24 | 2023-06-13 | At&T Intellectual Property I, L.P. | User-driven adaptation of immersive experiences |
US11567935B2 (en) * | 2021-03-30 | 2023-01-31 | Google Llc | Conditional response fulfillment cache for locally responding to automated assistant inputs |
US20240112672A1 (en) * | 2022-10-04 | 2024-04-04 | Google Llc | Generation and utilization of pseudo-correction(s) to prevent forgetting of personalized on-device automatic speech recognition (asr) model(s) |
Family Cites Families (23)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8055702B2 (en) * | 2005-04-25 | 2011-11-08 | Netapp, Inc. | System and method for caching network file systems |
WO2013015835A1 (en) * | 2011-07-22 | 2013-01-31 | Seven Networks, Inc. | Mobile application traffic optimization |
US9245525B2 (en) * | 2011-01-05 | 2016-01-26 | Interactions Llc | Automated speech recognition proxy system for natural language understanding |
US8850075B2 (en) * | 2011-07-06 | 2014-09-30 | Microsoft Corporation | Predictive, multi-layer caching architectures |
US9190057B2 (en) | 2012-12-12 | 2015-11-17 | Amazon Technologies, Inc. | Speech model retrieval in distributed speech recognition systems |
EP2860940B1 (en) * | 2013-09-27 | 2016-09-14 | Alcatel Lucent | Method for caching |
US9930132B2 (en) * | 2014-01-10 | 2018-03-27 | Facebook, Inc. | Content specific router caching |
JP2015138147A (en) * | 2014-01-22 | 2015-07-30 | シャープ株式会社 | Server, interactive device, interactive system, interactive method and interactive program |
US9613158B1 (en) * | 2014-05-13 | 2017-04-04 | Viasat, Inc. | Cache hinting systems |
US10397357B2 (en) * | 2014-07-23 | 2019-08-27 | Facebook, Inc. | Rural area network device |
US10291735B2 (en) * | 2014-07-23 | 2019-05-14 | Facebook, Inc. | Residential cache appliance utilizing a social network |
US10388277B1 (en) * | 2015-06-25 | 2019-08-20 | Amazon Technologies, Inc. | Allocation of local and remote resources for speech processing |
US10018977B2 (en) * | 2015-10-05 | 2018-07-10 | Savant Systems, Llc | History-based key phrase suggestions for voice control of a home automation system |
US9990176B1 (en) * | 2016-06-28 | 2018-06-05 | Amazon Technologies, Inc. | Latency reduction for content playback |
US10971157B2 (en) * | 2017-01-11 | 2021-04-06 | Nuance Communications, Inc. | Methods and apparatus for hybrid speech recognition processing |
US10885091B1 (en) * | 2017-12-12 | 2021-01-05 | Amazon Technologies, Inc. | System and method for content playback |
US10984799B2 (en) * | 2018-03-23 | 2021-04-20 | Amazon Technologies, Inc. | Hybrid speech interface device |
US10789943B1 (en) * | 2018-08-31 | 2020-09-29 | Interactions Llc | Proxy for selective use of human and artificial intelligence in a natural language understanding system |
CN111312235B (en) * | 2018-12-11 | 2023-06-30 | 阿里巴巴集团控股有限公司 | Voice interaction method, device and system |
EP3935628B1 (en) | 2019-05-06 | 2023-09-20 | Google LLC | Proactive caching of assistant action content at a client device to enable on-device resolution of spoken or typed utterances |
US11172329B2 (en) * | 2019-09-27 | 2021-11-09 | Sonos, Inc. | Systems and methods for target device prediction |
US20210117214A1 (en) * | 2019-10-18 | 2021-04-22 | Facebook, Inc. | Generating Proactive Content for Assistant Systems |
CA3214519A1 (en) * | 2021-04-20 | 2022-10-27 | Jesse Dorogusker | Live playback streams |
-
2019
- 2019-05-31 EP EP19731536.9A patent/EP3935628B1/en active Active
- 2019-05-31 JP JP2021562375A patent/JP7293399B2/en active Active
- 2019-05-31 AU AU2019444630A patent/AU2019444630B2/en active Active
- 2019-05-31 US US16/621,559 patent/US11170777B2/en active Active
- 2019-05-31 WO PCT/US2019/034911 patent/WO2020226664A1/en unknown
- 2019-05-31 EP EP23189740.6A patent/EP4246507A3/en active Pending
- 2019-05-31 KR KR1020217035835A patent/KR20210147027A/en unknown
- 2019-05-31 CN CN201980096055.8A patent/CN113924617A/en active Pending
-
2021
- 2021-11-08 US US17/521,131 patent/US11631412B2/en active Active
-
2022
- 2022-08-15 AU AU2022218466A patent/AU2022218466A1/en not_active Abandoned
-
2023
- 2023-04-18 US US18/136,189 patent/US11948576B2/en active Active
- 2023-06-06 JP JP2023093524A patent/JP2023116607A/en active Pending
-
2024
- 2024-03-07 AU AU2024201509A patent/AU2024201509A1/en active Pending
Also Published As
Publication number | Publication date |
---|---|
EP4246507A2 (en) | 2023-09-20 |
US20210074286A1 (en) | 2021-03-11 |
EP3935628B1 (en) | 2023-09-20 |
AU2022218466A1 (en) | 2022-09-08 |
US20220059093A1 (en) | 2022-02-24 |
AU2019444630A1 (en) | 2021-11-04 |
AU2019444630B2 (en) | 2022-05-19 |
JP2022530942A (en) | 2022-07-05 |
AU2024201509A1 (en) | 2024-03-28 |
JP2023116607A (en) | 2023-08-22 |
US11631412B2 (en) | 2023-04-18 |
EP3935628A1 (en) | 2022-01-12 |
JP7293399B2 (en) | 2023-06-19 |
EP4246507A3 (en) | 2023-12-27 |
US11948576B2 (en) | 2024-04-02 |
CN113924617A (en) | 2022-01-11 |
US11170777B2 (en) | 2021-11-09 |
US20230252989A1 (en) | 2023-08-10 |
WO2020226664A1 (en) | 2020-11-12 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11948576B2 (en) | Proactive caching of assistant action content to enable resolution of spoken or typed utterances | |
US11232155B2 (en) | Providing command bundle suggestions for an automated assistant | |
JP7256237B2 (en) | Rendering Responses to User Spoken Speech Utilizing Localized Text Response Maps | |
CN113574503B (en) | Actively caching transient helper action suggestions at a feature handset | |
US11907214B2 (en) | Conditional response fulfillment cache for locally responding to automated assistant inputs |
US20230214584A1 - Storage of content associated with a resource locator - Google Patents
Storage of content associated with a resource locator Download PDFInfo
- Publication number
- US20230214584A1 US20230214584A1 US18/148,789 US202218148789A US2023214584A1 US 20230214584 A1 US20230214584 A1 US 20230214584A1 US 202218148789 A US202218148789 A US 202218148789A US 2023214584 A1 US2023214584 A1 US 2023214584A1
- Authority
- US
- United States
- Prior art keywords
- annotation
- area
- webpage
- browser
- resource address
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 238000000034 method Methods 0.000 claims abstract description 76
- 230000008569 process Effects 0.000 claims description 21
- 230000004044 response Effects 0.000 claims description 19
- 230000004048 modification Effects 0.000 claims description 17
- 238000012986 modification Methods 0.000 claims description 17
- 238000009877 rendering Methods 0.000 claims description 15
- 230000009471 action Effects 0.000 claims description 12
- 230000007774 longterm Effects 0.000 claims description 7
- 230000015654 memory Effects 0.000 description 46
- 238000004891 communication Methods 0.000 description 18
- 230000006870 function Effects 0.000 description 9
- 238000004590 computer program Methods 0.000 description 8
- 238000010586 diagram Methods 0.000 description 6
- 230000008859 change Effects 0.000 description 4
- 238000012545 processing Methods 0.000 description 4
- 239000012634 fragment Substances 0.000 description 3
- 230000003993 interaction Effects 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 3
- 240000007320 Pinus strobus Species 0.000 description 2
- 230000015572 biosynthetic process Effects 0.000 description 2
- 238000004422 calculation algorithm Methods 0.000 description 2
- 230000001413 cellular effect Effects 0.000 description 2
- 239000004973 liquid crystal related substance Substances 0.000 description 2
- 238000004519 manufacturing process Methods 0.000 description 2
- 238000011160 research Methods 0.000 description 2
- 238000010079 rubber tapping Methods 0.000 description 2
- 239000004065 semiconductor Substances 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 238000003786 synthesis reaction Methods 0.000 description 2
- 230000000007 visual effect Effects 0.000 description 2
- 238000004458 analytical method Methods 0.000 description 1
- 230000003190 augmentative effect Effects 0.000 description 1
- 230000008901 benefit Effects 0.000 description 1
- 230000004397 blinking Effects 0.000 description 1
- 230000009194 climbing Effects 0.000 description 1
- 230000008878 coupling Effects 0.000 description 1
- 238000010168 coupling process Methods 0.000 description 1
- 238000005859 coupling reaction Methods 0.000 description 1
- 238000013499 data model Methods 0.000 description 1
- 230000001419 dependent effect Effects 0.000 description 1
- 230000000694 effects Effects 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 230000010354 integration Effects 0.000 description 1
- 230000007787 long-term memory Effects 0.000 description 1
- 230000006855 networking Effects 0.000 description 1
- 230000008520 organization Effects 0.000 description 1
- 239000000047 product Substances 0.000 description 1
- 230000000750 progressive effect Effects 0.000 description 1
- 229920006395 saturated elastomer Polymers 0.000 description 1
- 238000013515 script Methods 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 239000013589 supplement Substances 0.000 description 1
- 230000001360 synchronised effect Effects 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/166—Editing, e.g. inserting or deleting
- G06F40/169—Annotation, e.g. comment data or footnotes
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/954—Navigation, e.g. using categorised browsing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
- G06F16/9577—Optimising the visualization of content, e.g. distillation of HTML documents
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/958—Organisation or management of web site content, e.g. publishing, maintaining pages or automatic linking
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0481—Interaction techniques based on graphical user interfaces [GUI] based on specific properties of the displayed interaction object or a metaphor-based environment, e.g. interaction with desktop elements like windows or icons, or assisted by a cursor's changing behaviour or appearance
- G06F3/0483—Interaction with page-structured environments, e.g. book metaphor
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0484—Interaction techniques based on graphical user interfaces [GUI] for the control of specific functions or operations, e.g. selecting or manipulating an object, an image or a displayed text element, setting a parameter value or selecting a range
- G06F3/0485—Scrolling or panning
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F3/00—Input arrangements for transferring data to be processed into a form capable of being handled by the computer; Output arrangements for transferring data from processing unit to output unit, e.g. interface arrangements
- G06F3/01—Input arrangements or combined input and output arrangements for interaction between user and computer
- G06F3/048—Interaction techniques based on graphical user interfaces [GUI]
- G06F3/0484—Interaction techniques based on graphical user interfaces [GUI] for the control of specific functions or operations, e.g. selecting or manipulating an object, an image or a displayed text element, setting a parameter value or selecting a range
- G06F3/04842—Selection of displayed objects or displayed text elements
Definitions
- Websites provide information or functionality helpful to users, and many users use the Internet to research products, places, companies, services, etc. Webpages that are associated with websites are typically stored on remote servers.
- the tool includes a novel user interface and new browser functionalities, such as storing information associated with webpages and/or websites.
- the stored information that is associated with the webpages and/or websites is also associated with a user account.
- the stored information associated with the webpages and/or websites is generated by a user who owns and/or controls the user account.
- the stored information is inaccessible to the server that maintains the website with which user-generated information is associated.
- the novel user interface helps users organize, understand, and take action on Internet-based documents without coordination and/or communication with the server and/or entity that maintains the website.
- the annotation user interface provides a highly integrated information-generating (e.g., note-taking) experience that solves decision funnel problems.
- the annotation user interface can include intelligence that enables users to pull out the most important details from a website or a collection of websites, to compare information across websites, and return to the original content (webpages) without having to bookmark the content and without providing the information to the servers and/or entities that maintain the websites.
- the annotation user interface can lift rich content, provide suggestions for notes and/or images, and/or organize annotations around an annotation target.
- Annotation targets can represent a webpage (source document), a topic, a tab group, etc.
- the annotation user interface enables users to integrate user-originated annotations with suggested content, track annotations across websites, e.g., by associating annotations with a topic or tab group, and to compare notes across sites, and webpages.
- the user interface can be surfaced in multiple ways in association with the user account and can be presented with varying levels of detail (e.g., inside a side panel, across multiple tables, or as a standalone document). Integrating the annotation interface with a browser enables a browser to separate the annotation data from a rendering process. Such separation can make the interface appear integrated but prevents annotations themselves from being exposed to the rendering process, preventing the servers and/or administrators that maintain the websites from obtaining knowledge of the annotations.
- a method can be performed by a browser.
- the method can include presenting at least a portion of a resource address; presenting a rendered webpage in a browser content window, the rendered webpage being associated with the resource address; presenting an annotation area, the annotation area being outside the browser content window; receiving, in association with a user account, an annotation in the annotation area; and storing the annotation in association with the user account and the resource address.
- a non-transitory computer-readable storage medium comprising instructions stored thereon that, when executed by at least one processor, are configured to cause a computing system to present at least a portion of a resource address; present a rendered webpage in a browser content window, the rendered webpage being associated with the resource address; present an annotation area, the annotation area being outside the browser content window; receive, in association with a user account, an annotation in the annotation area; and store the annotation in association with the user account and the resource address.
- a computing system can include at least one processor and a non-transitory computer-readable storage medium.
- the non-transitory computer-readable storage medium can comprise instructions stored thereon that, when executed by the at least one processor, are configured to cause the computing system to present at least a portion of a resource address; present a rendered webpage in a browser content window, the rendered webpage being associated with the resource address; present an annotation area, the annotation area being outside the browser content window; receive, in association with a user account, an annotation in the annotation area; and store the annotation in association with the user account and the resource address.
- FIGS. 1 A- 1 D illustrate example techniques for surfacing a browser annotation interface, according to some aspects.
- FIGS. 2 A and 2 B illustrate another example technique for surfacing a browser annotation interface, according to an aspect.
- FIGS. 3 A and 3 B illustrate an example browser annotation interface for a computing device with limited display area, according to an aspect.
- FIGS. 4 A- 4 F illustrate example browser annotation interfaces with suggested annotation content, according to some aspects.
- FIGS. 5 A- 5 D illustrate example browser annotation interfaces with grouped annotation content, according to some aspects.
- FIG. 6 illustrates example annotation renderings, according to some aspects.
- FIG. 7 illustrates a system for providing a browser annotation interface, according to an aspect.
- FIG. 8 is a block diagram of components for a browser application that implements a system for providing a browser annotation interface, according to an aspect.
- FIG. 9 is a timing diagram depicting example operations for loading an Internet document with annotations, according to an aspect.
- FIG. 10 is a timing diagram depicting example operations for navigating using annotations, according to an aspect.
- FIG. 11 shows an example of example computing devices according to an aspect.
- Implementations relate to providing a browser-integrated annotation system for annotating Internet-based documents, such as websites, webpages, and the like, and storing the annotations. Integrating the annotation system into the browser promotes useability and facilitates synthesis across webpages, tabs, and search sessions, and allows the annotations to be stored in association with a user account.
- the browser-based annotation system also facilitates organization and navigation and can provide automated assistance, such as auto-generated annotation suggestions. In some implementations, such suggestions may be based on machine-learned models, document structure, and/or historical information (e.g., analysis of anonymized search records). Because the annotation interface is integrated into the browser, implementations can provide several different techniques for surfacing the annotation interface and can serve as a navigational aid.
- FIG. 1 A illustrates an example browser user interface (UI) 100 , in accordance with implementations described herein.
- the UI 100 is generated and rendered by a browser application (e.g., browser application 718 of FIG. 7 ) executing in an operating system (e.g., operating system 710 ) of a computing device.
- the UI 100 includes a tab strip 108 associated with the browser application.
- the UI 100 includes five browser tabs 105 , although any number of browser tabs or tab groups can be opened by the browser application.
- Each browser tab e.g., browser tab 105 , may be associated with web content (a webpage) presented in a corresponding browser content window 120 of the browser application.
- a webpage refers to any content generated/served at least partially by/from a remote server hosting a website.
- the webpage can be associated with a resource address, such as a Uniform Resource Locator (URL) or a Uniform Resource Indicator (URI).
- the webpage can include HyperText Markup Language (HTML) content.
- the browser application can request the webpage from the remote server hosting the website based on the resource address (e.g., the URL).
- the browser application can request the webpage by, for example, sending a HyperText Transfer Protocol (HTTP) GET request to the remote server hosting the website.
- HTTP HyperText Transfer Protocol
- the webpage can refer to a progressive web application in addition to conventional webpages.
- a source document refers to the webpage currently rendered in the browser content window 120 as well as any other data (metadata) that are used to render the document (e.g., markup and scripts that are not actually displayed).
- the UI 100 also includes an address bar area 110 .
- An address of the webpage displayed in the browser content window 120 can be illustrated in the address bar area 110 (e.g., in address input area 115 ).
- the address of the webpage can be represented as a resource address.
- the resource address included in the address bar area 110 can be associated with the webpage presented in the browser content window 120 .
- the address bar area 110 can present at least a portion of the resource address.
- Other controls, icons, and/or so forth can be included in the address bar area 110 .
- the address bar area 110 can include a user icon 125 (illustrated in FIG. 1 B ).
- the user icon 125 may provide an indication of a user account associated with the browser session.
- This user icon 125 can be an image, text, or some other representation of the user account.
- the user account can be associated with a user, and a user may be required to input a unique username, as well as a passcode associated with the username, to engage in a browser session associated with the user account.
- no login may be required to engage in the browser session, and the user account can be considered to be associated with the local computing device on which the browser application is executing.
- Other controls/icons included in the address bar area 110 can include a forward control, a back control, a refresh control, a home control, an extensions control, and/or a bookmark control.
- the address bar area 110 can be controlled by and/or associated with the browser (e.g., the browser application 718 ).
- the content of the address bar area 110 can be controlled by the browser application, whereas the content of the browser content window 120 is controlled by the webpage being displayed and/or a provider of the webpage. Thus, the appearance and user interface elements displayed in the address bar area 110 are controlled by the browser application.
- the UI 100 includes an annotation user interface, illustrated as annotation area 130 .
- annotation area 130 is located in, or implemented as, a sidebar of the browser.
- the sidebar of the browser may be a continuous area, e.g., a combined area representing the address bar area 110 and the annotation area 130 .
- content displayed (rendered) in the sidebar is controlled (determined) locally by the browser and not by the server hosting the website that is displayed (rendered) in the browser content window 120 .
- the sidebar can be a split window, a pop-up window or some other portion of the browser UI 100 .
- Annotations inputted into the annotation area 130 can be stored locally on the computing device on which the browser is executing, or remotely in association with the user account.
- the annotations inputted into the annotation area 130 can be inaccessible to the server hosting the website. No notification of annotations will be sent to the server hosting the website.
- annotations are associated with the website locally, without notifying or interacting with the server associated with the website.
- the storage of the annotations locally on the computing device and/or remotely in association with the user account allows the user to securely generate and store annotations without knowledge of the server hosting the website and/or any administrator of the website.
- annotations and/or notes can include content entered by a user into the annotation area 130 .
- annotations can include text inputted into the annotation area 130 by the user.
- annotations can include modifications to the appearance and/or formatting settings of a portion of text included in the rendered webpage. The modifications to the appearance and/or formatting settings of a portion of text can include highlighting or changing a typeface.
- annotations can include resource addresses (such as URLs) of other webpages.
- annotations can include files uploaded by the user.
- the annotation area 130 can be integrated as part of the browser user interface 100 (e.g., address bar area 110 ) so that the annotation area 130 may not be spoofed (e.g., imitated) by, for example, a third party or the owner of the content displayed in the browser content window 120 . Because the annotation area 130 is part of the application of the browser application, the integration of the annotation area 130 would be difficult to imitate.
- the annotation area 130 may be surfaced (invoked, rendered) in response to a menu option, e.g., menu option 122 .
- Menu option 122 may be an option provided in a menu that is displayed in response to a command to surface a tab menu, e.g., a right-click on tab 105 .
- the annotation area 130 includes a new note UI element 132 .
- the new note UI element 132 can be any UI element that allows a user to enter text (e.g., via keyboard, speech-to-text, stylus, etc.).
- the annotation area 130 may include an indication of the tab/website with which the note is associated.
- the annotation area 130 may include controls for adding annotations (notes), which will be associated with the webpage currently displayed in the browser content window 120 .
- the controls are configured to perform a predetermined task/operation when actuated by a user.
- the controls may include a text control 133 for adding a text-based note.
- the text control 133 may open a new note UI element, such as UI element 132 .
- the controls may include a to-do control 134 .
- the controls may include an image control 135 .
- the image control 135 may enable a user to upload, take, and/or find an image to add as a note.
- the controls may include a link control 136 .
- the link control 136 may enable a user to add a link to (address such as a URL of) another Internet-based document.
- the controls may include an auto-suggestion control 137 .
- the auto-suggestion control 137 may cause the browser application to analyze the annotation target (e.g., content of the browser content window 120 , both displayed and not displayed) and provide one or more suggestions of information items for inclusion in the notes for the annotation target. Examples of auto-suggestions are illustrated in FIGS. 4 A- 4 F .
- the annotation area 130 may be surfaced as illustrated in FIG. 1 B .
- the annotation area 130 is surfaced in response to menu option 123 .
- the menu option 123 may be provided in a menu that is displayed in response to a command to surface a selected text menu.
- the user may select content displayed in the browser content window 120 and may right-click within the selection to bring up the menu with the menu option 123 .
- text with a shaded background is considered to be highlighted, which is an example of a modification to text.
- the highlighted text can be considered the content selected by the user, in which the user right-clicked on a mouse or otherwise provided input to a human-interface device (HID) to bring up the menu with the menu option 123 .
- Selection of the menu option 123 may cause the annotation area 130 of FIG. 1 B to be rendered by the browser application, e.g., by a rendering process of the browser application.
- the annotation target already has one existing note (which can be considered a first annotation associated with the webpage), so the annotation area 130 includes note 138 (which can be considered a second annotation associated with the webpage).
- an additional new note UI element 132 is included in the annotation area 130 in response to selection of the menu option 123 .
- the technique for surfacing annotation area 130 illustrated in FIG. 1 B can be combined with the technique for surfacing annotation area 130 illustrated in FIG. 1 A .
- a browser may be configured to use either or both techniques.
- the annotation area 130 may include a control 139 configured to expand the tab strip 108 .
- the expanded tab strip 108 ′ may display a preview area 140 for each tab.
- Each tab can be associated with a different annotation target, i.e., a resource such as a webpage, and/or website (such as a first resource, a second resource, and a third resource).
- the preview area 140 may include any existing notes for the annotation target associated with the tab, but may lack the controls (e.g., controls 133 - 137 ).
- the preview area 140 is a condensed version of the annotation area 130 for a tab.
- the preview area 140 can display portions of multiple rendered webpages and associated annotations, such as a portion of a first rendered webpage and a first annotation associated with the first rendered webpage, a portion of a second rendered webpage and a second annotation associated with the second rendered webpage, and a portion of a third rendered webpage and a third annotation associated with the third rendered webpage.
- the expanded tab strip 108 ′ thus provides a novel way to quickly and conveniently compare notes associated with different annotation targets, e.g., across URLs, webpages and/or websites, tabs, tab groups, etc.
- the expanded tab strip 108 ′ may cause the area of the browser content window 120 to shrink, so that some content previously viewable is now offscreen and/or not visible or displayed by the browser.
- the technique for surfacing preview area 140 illustrated in FIG. 1 C can be combined with the technique for surfacing annotation area 130 illustrated in FIGS. 1 A and 1 B .
- a browser may be configured to use one, two, or all three techniques.
- the browser can present the preview area 140 for a tab in response to the user performing a pre-selection action for a tab, such as hovering a cursor over the tab or sliding a finger over the tab.
- the browser can present the webpage associated with the tab in response to the user making a second type of selection of the tab, such as clicking or tapping on the tab.
- the preview area 140 may include a selectable control configured to, when selected, cause the browser to concurrently present the webpage associated with the resource address (e.g., URL) and present the annotation area 130 .
- the annotation area (e.g., annotation area 130 ) may be surfaced in response to a menu option 124 .
- the menu option 124 may be provided in a menu that is displayed in response to selection of a control showing a browser menu, e.g., as illustrated in FIG. 1 D .
- selection of the menu option 124 may cause the annotation area 130 of FIG. 1 A or 1 B to be rendered (depending on whether the source document of the annotation target (e.g., the current tab) has existing notes (e.g., 1 B) or not (e.g., 1 A)).
- the technique for surfacing annotation area 130 illustrated in FIG. 1 D can be combined with the techniques described in FIGS. 1 A- 1 C .
- a browser may be configured to use one, two, three, or all four techniques.
- the annotation area 130 may be surfaced as illustrated in FIG. 2 A .
- a control 126 is provided by the browser application.
- the control 126 may be provided in the address bar area 110 .
- the control 126 may be positioned ahead of the address input area 115 .
- the control 126 may be positioned in the address input area 115 .
- the control 126 may be positioned after the address input area 115 .
- the control 126 may be provided when the annotation target (e.g., the document currently displayed in browser content window 120 ) has associated notes (e.g., annotations).
- control 126 may be provided regardless of whether the annotation target has associated notes and/or annotations.
- appearance of the control 126 may change depending on whether or not the annotation target has associated notes and/or annotations.
- the text of, color of, shading of, or icon included in the control 126 may differ depending on whether or not the annotation target has an associated note and/or annotation.
- the text may indicate the number (quantity) of existing notes and/or annotations for the annotation target. In the example shown in FIG. 2 A , shaded background represents highlighting of text for portions of text that are associated with notes and/or annotations for the annotation target.
- the browser may render the annotation area 130 with notes for the annotation target, as illustrated in FIG. 2 B .
- the existing notes and/or annotations e.g., 238 a , 238 b , etc.
- the existing notes and/or annotations may be actionable and configured to navigate within the source document associated with the annotation target. For example, if the user actuates (selects, clicks on) existing note 238 b and/or annotation, the browser may scroll the source document to the location associated with the existing note 238 b and/or annotation.
- the interface of FIG. 2 B also illustrates that content of a note and/or annotation may have a full highlight and/or partial highlight.
- the content that corresponds to selected note 238 a and/or annotation is illustrated with full highlight (shown by a darker shaded background) while text associated with other notes and/or annotations is illustrated with partial highlight (shown by a lighter shaded background in FIG. 2 B ).
- a selected note such as note 238 a in FIG. 2 B , may also be highlighted (e.g., as shown by shading in FIG. 2 B ). If the user selects note 238 b , the browser may cause the content associated with note 238 b to appear with full highlight (which would be represented by a darker shaded background) and change the content associated with note 238 a (if still displayed in the browser content window 120 ) to a partial highlight.
- FIGS. 3 A and 3 B illustrate an example preview area 340 in a device with limited display area, such as a mobile device, a tablet, a wearable, etc.
- the preview area 340 is similar to preview area 140 of FIG. 1 C .
- the preview area 340 may thus display a first note and/or annotation associated with the source document, but may be expanded to annotation area 330 , as illustrated in FIG. 3 B .
- Annotation area 330 is similar to, and/or has similar features and/or functionalities as, annotation area 130 of FIGS. 1 A- 2 B .
- FIGS. 4 A- 4 F illustrate example browser annotation interfaces with suggested annotation content, according to some aspects.
- the user has navigated to a webpage that is now at least partially displayed in browser content window 120 and opened an annotation area 130 .
- the annotation area 130 may include a description 431 of the annotation target, in this case a title from the webpage displayed in the browser content window 120 .
- the title is stored as a data element with an annotation record for the annotation, e.g., an annotation record stored in local note storage 726 of FIG. 7 .
- the user has actuated the auto-suggestion control 137 .
- the annotation area 130 is updated with suggested text-based content elements 432 .
- the suggested text-based content elements 432 are content elements selected from content of the annotation target.
- the auto-suggestions can be based on schema mark-up in the annotation target.
- the auto-suggestions can be based on historical search records.
- the auto-suggestions can be based on document structure of the annotation target.
- the user may select one or more of the suggested text-based content elements 432 .
- the user has selected four of the suggested text-based content elements 432 , as shown by the dotted backgrounds and bolded text of the four suggested text-based content elements 432 that the user selected.
- the dotted backgrounds and/or bolded text can represent changes in color or highlighting of the suggested text-based content elements 432 .
- FIG. 4 B illustrates four notes 433 that have been added in response to selection of the four suggested text-based content elements 432 .
- FIG. 4 C the user has scrolled to a different portion of the annotation target and modified an appearance of text 421 .
- the modification of the appearance of text 421 includes highlighting the text 421 , shown as shading in FIG. 4 C .
- Selection of the auto-suggestion control 137 may result in auto-suggested elements 434 , which include the selected highlighted text 421 and an image 422 .
- FIG. 4 D illustrates that the browser application has added a new note 435 and/or annotation to the annotation area 130 . This new note 435 has the same annotation target as the notes 433 and/or annotations.
- selection of one of the notes 433 and/or annotations would cause the annotation target to scroll, so that the content corresponding to the selected note and/or annotation of the notes 433 and/or annotations is displayed in the browser content window 120 , e.g., as illustrated in FIG. 4 E .
- selection of the auto-suggestion control 137 may result in suggested image elements 436 being added to the annotations for the annotation target (e.g., displayed in the browser content window 120 ).
- the user can select one or more of the images, which can then be added as image notes 437 and/or image annotations to the annotations for the annotation target, as illustrated in FIG. 4 F .
- the suggested text-based content elements 432 and the auto-suggested elements 434 are selectable elements. These selectable elements may be configured, in response to selection, to add the suggested annotation content as an annotation, as described above.
- FIGS. 5 A- 5 D illustrate an example browser annotation interface with grouped annotation content, according to some aspects.
- the user has two open tabs 105 (e.g., 105 a and 105 b ).
- the user has an annotation area 130 open, with two notes for the annotation target of the website corresponding to tab 105 b , as evidenced by the description 531 of the annotation target included in the annotation area 130 .
- the user may select tab 105 a , which causes the browser application to display the interface of FIG. 5 B .
- the browser responds to the selection of the tab 105 a by presenting, in the annotation area 130 , annotations for an annotation target that corresponds to the resource address (e.g., the URL) associated with the selected tab 105 a .
- the annotation target now corresponds to the website associated with tab 105 a , and the annotation area 130 indicates this change by changing the description 531 .
- the current annotation target has no existing annotations and/or notes, but the user may create an annotation and/or note that is an image included in the webpage by dragging image 521 to the new note UI element 132 , as illustrated with dashed arrows in FIG. 5 B .
- the new note UI 132 can be configured as a drop location.
- content such as an image, copied text, or some other content
- the browser application may consider the drag and/or drop of the content to be a request to store the content as a new annotation and/or note for the annotation target (e.g., the annotation target corresponding to the description 531 ).
- FIG. 5 C illustrates the result of this request, e.g., the browser application has added a new image as an annotation for the annotation target.
- the annotation is an image
- the image may be downloaded to the user's device so that the note may be accessible to the user without a network connection.
- the user may create a tab group by grouping the two tabs 105 a and 105 b into a tab group 505 , as illustrated in FIG. 5 D .
- the user may have given the tab group 505 a description of “Climbing”.
- a tab group can also be an annotation target.
- the creation of the tab group 505 may cause the browser application to group existing annotations for annotation targets included in the tab group to also be associated with the tab group as an annotation target. This can be done directly (e.g., adding an index entry associating the annotation data with an identifier for the tab group) or indirectly (e.g., adding an index entry associating the webpage with the tab group).
- the annotation area 130 may be updated to reflect the new association, e.g., changing the description 531 in the annotation area 130 to a description for the tab group 505 .
- An annotation target that represents a group of annotation targets may include additional information, such as the number of annotation targets (in this example two tabs) and/or the number of notes and/or annotations for the group of annotation targets.
- the annotation area 130 may add a group control 535 , which may enable a user to select between annotation targets in the group in response to actuation of the control 535 .
- the annotation area 130 for an annotation target representing multiple annotation targets can display annotations associated with one or more of the annotation targets.
- the annotation data for tab 105 a and for tab 105 b are both displayed (rendered) in the annotation area 130 .
- FIG. 6 illustrates example variations of annotation renderings, according to some aspects.
- the example variations could be applied to any notes (annotations) displayed in the annotation area 130 of any of the preceding figures. Shaded backgrounds represent highlighted areas and/or highlighting of text.
- the example annotation 602 includes text but no title.
- the example annotation 604 includes a title (“Note title”) and text.
- the example annotation 606 includes a time and date (timestamp), indicating when the annotation 606 was inputted by the user, and text.
- the example annotation 608 includes text for which an appearance has been modified, such as highlighted (“Highlight hint text”) and additional text.
- the example annotation 610 includes text for which an appearance has been modified, such as highlighted (“Highlight hint text”), a title, and additional text.
- the example annotation 612 includes text for which an appearance has been modified, such as highlighted (“Highlight hint text”), a title, a time and date (timestamp), and additional text.
- the example annotation 614 includes a title.
- the example annotation 616 includes a title and text.
- the example annotation 618 includes a date and time (timestamp) and text.
- the example annotation 620 includes a title and includes text for which an appearance has been modified, such as highlighted.
- the example annotation 622 includes a title, unmodified text, and text for which an appearance has been modified, such as highlighted.
- the example annotation 624 includes a time and date (timestamp), text, and text for which an appearance has been modified, such as highlighted.
- FIG. 7 illustrates a system 700 for providing a browser annotation interface, according to an aspect.
- the browser annotation interface can include the browser user interface 100 and/or annotation area 130 .
- the system 700 can include a computing system 702 .
- the computing system 702 can include a local computing device and/or client device, such as smartphone, tablet, mobile computing system, laptop or notebook computer, or desktop computer, as non-limiting examples.
- the computing system 702 can include memory 704 .
- the memory 704 can include a non-transitory computer-readable storage medium comprising instructions stored thereon that, when executed by at least one processor (such as the CPU/GPU 732 included in the computing system 702 ), are configured to cause the computing system 702 to perform any combination of methods, functions, and/or techniques described herein.
- the memory 704 can include instructions for executing an operating system (O/S) 710 .
- the operating system 710 can control which applications have access to various components of the computing system 702 , such as the memory 704 , output device(s) 724 , input device(s) 730 , CPU/GPU 732 , and/or camera(s) 734 .
- the operating system 710 can enable multiple application(s) 712 to execute on the computing system 702 , such as the browser application 718 .
- the browser application 718 can perform any combination of methods, functions, and/or techniques described herein.
- the operating system 710 can maintain and/or store application information 715 and/or an application layer, which can enable the application 712 to communicate with other applications executing on the computing system 702 .
- the operating system 710 can maintain and/or store session data 717 , which can enable opening, closing, and managing a session between application processes.
- the memory 704 can include local note storage 726 .
- the local note storage 726 can store notes and/or annotations, such as the annotations described above and shown in previous figures.
- the local note storage 726 can store the notes and/or annotations in annotation records.
- the annotation records can include a user identifier.
- the location (directory) in which an annotation record is stored reflects association with a particular user.
- Each annotation record may include a metadata portion, a body portion, and a target portion.
- the metadata portion of an annotation record can include an identifier, a creation date, a modified date, etc.
- the identifier enables the browser to uniquely identify each annotation record.
- the ID can be unique by user.
- the ID can be unique by client device.
- a body of the annotation record can include a note type indicating a type of the annotation.
- the metadata portion of an annotation record can include a note type.
- the note type may identify the type of annotation, e.g., metadata such as text, image, rich text, handwriting, audio, video, location, geolocation, and/or files.
- the target portion includes an annotation target identifier.
- the annotation target identifier identifies the resource, e.g., webpage, website, document, file, tab group, etc., to which the annotation applies.
- the annotation target identifier can be a resource address such as a URL.
- the annotation target identifier can be a group identifier, e.g., an identifier for a tab group.
- the body portion of an annotation record can include text.
- the body portion of the annotation record can include an address such as a URL linking to and/or identifying an external source of information and/or data.
- the text represents the text selected/provided by the user as the annotation.
- the body portion of an annotation record can include an image identifier.
- the metadata portion of the annotation record can include an annotation target element.
- the annotation target element can be included in the annotation record.
- the annotation target element can be a selector, e.g., a CSS selector, that identifies particular content in the annotation target.
- the annotation target element can include a portion of text included in the webpage.
- the annotation target can identify a file (such as an image), and/or an identifier of the annotation target can include a filename and/or a hash value associated with the file.
- the hash value can be determined based on any hashing algorithm, such as Message Digest 5 (MD5) or Secure Hash Algorithm (SHA).
- the local note storage 726 can store the notes and/or annotations in association with the address and/or group as well as in association with a user account, such as the user account associated with the user who created the notes and/or annotations.
- the notes and/or annotations can be considered to be stored in association with the user account when the notes and/or annotations are stored in a directory associated with the user, such as a local directory accessible to the user.
- the notes and/or annotations can be stored locally on the memory 704 of the computing system 702 on which the browser application is executing.
- the notes and/or annotations can be stored locally in long-term storage, such as non-volatile memory that will still be accessible after the computing system is powered off and then back on.
- the rendered webpage is not stored in long-term memory, and the notes and/or annotations can be retrieved and presented when the rendered webpage is again retrieved from the service(s)/website(s) 770 and rendered on the browser application 718 .
- Local storage of the notes and/or annotations prevents the server that hosts the websites associated with the notes and/or annotations from having knowledge of the notes and/or annotations.
- the memory 704 can store preferences 728 .
- Preferences 728 can be received from a user, and can include appearance of the web browser, favorite sites or bookmarks, and/or initial applications to launch, as non-limiting examples.
- the computing system 702 can include one or more camera(s) 734 .
- the camera(s) 734 can capture images, such as images of the user for teleconferencing.
- the computing system 702 can include at least one processor, such as a central processing unit (CPU) and/or graphics processing unit (GPU) 732 .
- the CPU/GPU can execute instructions such as instructions stored in memory 704 , to perform any combination of methods, functions, and/or techniques described herein.
- the computing system 702 can include one or more input device(s) 730 .
- the input device(s) can include human interface devices, such as a keyboard, mouse, microphone, or touchscreen, as non-limiting examples.
- the computing system 702 can include one or more output device(s) 724 .
- the output device(s) can include output devices such as a display, speaker, or printer, as non-limiting examples.
- the input device(s) 730 and/or output device(s) 724 can also include interfaces for communicating with other computing devices.
- the interface(s) for communicating with other computing devices can receive and/or send data, such as from and/or to, a server, and/or may receive input and provide output from and to a user.
- the input and output functions of the interface(s) may be combined into a single node, or may be divided into separate input and output nodes.
- the input/output node can include one or more wired or wireless interfaces for communicating with other computing devices.
- the system 700 can include a server computing system 750 .
- the server computing system 750 can store and/or maintain user accounts 760 .
- User accounts 760 stored and/or maintained by the server computing system 750 can be associated with and/or owned by users, and can be associated with unique identifiers, such as email addresses.
- the server computing system 750 can store notes 756 and/or annotations in association with each user account.
- the notes 756 and/or annotations can have features described above, and can be stored in association with the user account 760 and an annotation target, such as a URL.
- the server computing system 750 can prevent a server that hosts and/or maintains a resource associated with the annotation target, such as a server(s)/website(s) 770 , from accessing the notes 756 and/or annotations.
- the server computing system 750 can store, in association with the user accounts 760 , session data 762 , which can enable opening, closing, and managing a session during which the user is logged in with the user's user account 760 .
- the server computing system 750 can store, in association with the user accounts 760 , profiles 766 , which can include browsing patterns, bookmarks, and/or preferences with respect to appearance.
- the server computing system 750 can include at least one processor(s) 752 .
- the at least one processor(s) 752 can execute instructions, such as instructions stored in at least one memory device(s) 754 , to cause the server computing system 750 to perform any combination of methods, functions, and/or techniques described herein.
- the server computing system 750 can include at least one memory device(s) 754 .
- the at least one memory device(s) 754 can include a non-transitory computer-readable storage medium.
- the at least one memory device(s) 754 can store data and instructions thereon that, when executed by at least one processor, such as the processor(s) 752 , are configured to cause the server computing system 750 to perform any combination of methods, functions, and/or techniques described herein.
- software e.g., processing modules, stored instructions
- hardware e.g., processor, memory devices, etc.
- server computing system 750 can be configured to perform, alone, or in combination with computing system 702 , any combination of methods, functions, and/or techniques described herein.
- the system 700 can include service(s)/websites 770 .
- the service(s)/website 770 can be maintained and/or hosted by one or more remote servers.
- the service(s)/website 770 can be addressed by, and/or store files addressed by, resource addresses, e.g., URLs.
- the computing system 702 , server computing system 750 , and/or service(s)/website 770 can communicate with each other via a network 740 , such as the Internet.
- FIG. 8 is a block diagram of components for a browser application, e.g., browser application 718 of FIG. 7 , that implements a system for providing a browser annotation interface, according to an aspect.
- the browser application 718 includes an annotation UI coordinator 805 that is a platform-specific component of the browser processes 850 .
- the annotation UI coordinator 805 is configured for specific operating systems and device types.
- the annotation UI coordinator 805 may have two main components: note creation UI 810 and note rendering UI 815 .
- the note creation UI 810 includes components configured for adding new notes and/or annotations 837 and associating the new notes and/or annotations 837 with an annotation target 836 (e.g., the source document or tab group).
- Example note creation UI 810 components include 132 - 137 of FIG. 1 A , and/or the suggested elements 432 , 434 , 436 of FIGS. 4 A- 4 F , etc.
- the note rendering UI 815 is configured to render the annotation area (e.g., annotation area 130 ) and/or preview area (e.g., preview area 140 ) in which the notes and/or annotations 837 are displayed.
- the annotation UI coordinator 805 may also include a note sharing coordinator 820 .
- the annotation UI coordinator 805 may communicate with an annotation renderer coordinator 835 , e.g., sending an identifier of an annotation 837 to the annotation renderer coordinator 835 .
- the annotation renderer coordinator 835 may identify content of the annotation source associated with the annotation identifier and display (render) that portion of the annotation target 836 in the browser content window 120 .
- the message may be passed through an annotation browser coordinator 825 .
- the browser application 718 may include the annotation browser coordinator 825 .
- the annotation browser coordinator 825 is a cross-platform component (i.e., not dependent on an operating system) of the browser processes 850 that contains the business logic of the application.
- the annotation browser coordinator 825 also maintains the annotations data in private storage (e.g., local to the computing device on which the browser application 718 is executing).
- the annotations data itself may be kept out of the renderer processes 855 .
- annotation data is rendered in a rendering process distinct from the renderer processes 855 and the annotation data is not provided to the annotation renderer coordinator 835 or to another renderer process. This separation of rendering processes provides security and ensures privacy.
- the renderer processes 855 may receive an ID for an annotation and information about the annotation target 836 (e.g., what to fully highlight, what to partially highlight, etc.). This reduces the risk of an exploited renderer exposing confidential user data in the annotations themselves.
- annotations 837 may be synchronized with a user account, e.g., so that if the user uses multiple computing devices, the annotations data for the user can be accessed by any of the computing devices after the user logs into the user account. The user may stop synchronization at any time.
- the locally stored annotation data (which can represent an annotation 837 ) may have a format based on the Web Annotation W3C Recommended Web Annotation Data Model.
- the annotation data may be comprised of three main parts: a metadata portion, a body portion, and target portion.
- the metadata portion may contain information like the ID, creation date, modified date, etc.
- the ID can be used to communicate about a specific annotation between the annotation UI coordinator 805 , the annotation renderer coordinator 835 , and the annotation browser coordinator 825 .
- the body portion of an annotation 837 includes the text, images, rich text, link, etc. of the annotation 837 .
- the body portion of an annotation 837 is not shared with the rendering processes.
- the annotation target 836 (target portion) defines what the annotation 837 attaches to.
- the annotation target 836 can be a webpage element, a webpage, a tab group, a topic (a user-defined group), etc.
- annotation target elements are associated with the annotation 837 .
- the annotation target elements may be identified via selectors.
- a selector can be a Text Fragment selector and/or fragment finder 838 .
- a selector and/or fragment finder 838 can be a CSS selector. Because annotations 837 can be linked to elements of a webpage, which may change, it is possible that the annotation renderer coordinator 835 may not be able to find the specific annotation target element. In some implementations, these “orphaned” notes and/or annotations may still be displayed in the annotation area 130 for the webpage.
- such orphaned annotations may be displayed with an additional message mentioning that the target element can no longer be found.
- annotations 837 for that annotation target 836 may be shown as orphaned notes and/or annotations in the annotation area 130 .
- a notes menu option such as menu option 124 , may enable the user to select notes and/or annotations for an annotation target 836 that is not associated with an open tab.
- the annotation browser coordinator 825 may fetch the relevant annotations 837 for the current pages from the local storage, as described in more detail with respect to FIG. 9 .
- the annotation browser coordinator 825 may interact with the annotation UI coordinator 805 and the annotation renderer coordinator 835 to properly display the notes and/or annotations.
- the annotation browser coordinator 825 may determine which tasks to send to the annotation UI coordinator 805 and which tasks to send to the annotation renderer coordinator 835 .
- the annotation browser coordinator 825 may include a private notes coordinator 830 .
- the private notes coordinator 830 may be configured to save and retrieve annotation data (notes and/or annotations) from local storage 831 .
- the local storage 831 can be included in memory 704 of the computing system 702 on which the browser is executing.
- the private notes coordinator 830 may associate the annotations with the annotation target (e.g., source document or tab group) to which the note is tied.
- the notes coordinator 830 may index the annotation data, e.g., so that it can be retrieved by an annotation target, by a tab group, by a topic, etc.
- the notes coordinator 830 may also be configured to sync 832 the annotation data for access on other devices if the user is signed-in and syncing.
- the annotation browser coordinator 825 may include an inline notes coordinator 833 .
- the inline notes coordinator 833 can receive, store, retrieve, and/or present notes and/or annotations within the annotation target 836 and/or webpage, rather than within the annotation area 130 .
- the annotation browser coordinator 825 may include a remote notes coordinator 834 .
- the remote notes coordinator 834 may receive, store, retrieve, and/or present notes and/or annotations that are stored remotely in association with the user account, such as in the notes 745 of the server computing system 750 .
- the annotation renderer coordinator 835 may be configured for finding and highlighting the selectors to which the different annotations are attached. To do so, the annotation renderer coordinator 835 may keep a subset of the annotations data like the ID and selector information.
- the annotation browser coordinator 825 may cause the annotation renderer coordinator 835 and annotation UI coordinator 805 to work in tandem to fluidly link the annotation 837 to its target selector using an Annotations ID (GUID) to synchronize operations.
- GUID Annotations ID
- the annotation UI coordinator 805 is responsible for the annotation body (though it has all of the data) and the annotation renderer coordinator 835 is responsible for the annotation target 836 (what is rendered in the browser content window 120 ).
- annotations 837 may not be rendered next to the highlighted text.
- annotations 837 may be rendered next to the highlighted text.
- the annotation browser coordinator 825 may cause the annotation renderer coordinator 835 to emphasize the annotation target's 836 highlight and scroll the annotation target's 836 highlight into view.
- the annotation browser coordinator 825 may cause the annotation UI coordinator 805 to focus the associated annotation in the side-panel (annotation area 130 ).
- messages between the processes will include the ID of the selected annotation so that the other process can activate the appropriate annotation.
- FIG. 9 is a timing diagram depicting example operations for loading an Internet document with annotations, according to an aspect.
- a user 900 selects a webpage, such as by typing a resource address, such as a URL into the address input area 115 and/or selecting or opening a hyperlink ( 902 ) presented in the browser content window 120 .
- the browser application 718 responds to the selection of the webpage by performing URL loading actions ( 904 ), ( 906 ).
- the URL loading actions ( 904 ), ( 906 ) can include generating and sending, to a server such as the server maintaining the service(s)/website(s) 770 , a request, such as an HTTP GET request, for the webpage identified and/or addressed by the URL.
- the browser application 718 can, in conjunction with the annotation renderer coordinator 835 , render and present the webpage received from the server.
- the browser application 718 can fetch annotations 837 related to and/or associated with the URL ( 908 ).
- the browser application 718 can, for example, fetch the annotations 837 from local note storage 726 , 831 or from notes 756 stored in a remote server computing system in association with the user account associated with the user 900 .
- the browser application 718 can send, to the annotation renderer coordinator 835 , current page annotation targets 836 ( 910 ), which can include portions of the rendered webpage.
- the browser application 718 can display the annotation area 130 (e.g., a side-panel or overlay), with the annotations 837 fetched at ( 908 ).
- the annotation 837 includes a modification of the text in the webpage (the annotation target 836 can include the webpage associated with the URL) such as lightly highlighting a portion of the text included in the webpage
- the annotation renderer coordinator 835 can lightly highlight the annotation target ( 912 )
- FIG. 10 is a timing diagram depicting example operations for navigating using annotations, according to an aspect.
- the actions shown and described with respect to FIG. 10 can be performed after the actions shown and described with respect to FIG. 9 .
- the user 900 can select, such as by clicking on, a first note, such as note A, on the annotation area 130 ( 1002 ) (e.g., a side-panel or overlay).
- the browser application 718 can respond to the selection of note A by focusing on annotation A in the annotation area 130 ( 1004 ), such as by making annotation A visible in the annotation area and/or side-panel.
- the browser application 718 can also respond to the selection of note A by sending, to the annotation renderer coordinator 835 , a request to highlight and scroll to annotation A ( 1006 ).
- the annotation renderer coordinator 835 can respond to the request ( 1006 ) by scrolling to and highlighting the annotation target ( 1008 ).
- the annotation target can include the portion of the webpage (such as a first portion of text) that was highlighted at ( 912 ), and the annotation can include modifying the first portion of text by highlighting the portion of text.
- the highlighting of the annotation target ( 1008 ) can be an example of performing an action on the webpage based on a stored annotation including a modification of the webpage.
- the user 900 can scroll around and click on a target of a second annotation, which can be considered annotation B ( 1010 ).
- the annotation of the annotation target can be a first modification to a second portion of text included in the webpage associated with the URL.
- the first modification can include lightly highlighting the second portion of text.
- the annotation of annotation target B can include a second modification of the second portion of text, and the annotation renderer coordinator 835 can respond to the user clicking on the target of annotation B ( 1010 ) by performing the second modification of the target of annotation B ( 1012 ).
- the second modification can include fully highlighting the second portion of text, and/or a modification that is more visually apparent to the user, such as darker, less transparent, bolder, or having a more saturated color, as non-limiting examples.
- the annotation renderer coordinator 835 can send to the browser application 718 , and/or the browser application 718 can receive from the annotation renderer coordinator 835 , a request to focus on annotation B ( 1014 ).
- the browser application 718 can thereafter focus on annotation B in the annotation area 130 and/or side-panel ( 1016 ), such as by presenting annotation B in the side-panel and/or annotation area 130 .
- FIG. 11 shows an example of example computing devices according to an aspect.
- the computer device 1500 is an example of the computing system 702 .
- the computer device 1500 is an example of the server computing system 750 .
- the mobile computer device 1550 is an example of the computing system 702 .
- Computing device 1500 is intended to represent various forms of digital computers, such as laptops, desktops, tablets, workstations, personal digital assistants, televisions, servers, blade servers, mainframes, and other appropriate computing devices.
- Computing device 1550 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smart phones, and other similar computing devices.
- the components shown here, their connections and relationships, and their functions, are meant to be examples only, and are not meant to limit implementations of the implementations described and/or claimed in this document.
- Computing device 1500 includes a processor 1502 , memory 1504 , a storage device 1506 , a high-speed interface 1508 connecting to memory 1504 and high-speed expansion ports 1510 , and a low speed interface 1512 connecting to low speed bus 1514 and storage device 1506 .
- the processor 1502 can be a semiconductor-based processor.
- the memory 1504 can be a semiconductor-based memory.
- Each of the components 1502 , 1504 , 1506 , 1508 , 1510 , and 1512 are interconnected using various busses, and may be mounted on a common motherboard or in other manners as appropriate.
- the processor 1502 can process instructions for execution within the computing device 1500 , including instructions stored in the memory 1504 or on the storage device 1506 to display graphical information for a GUI on an external input/output device, such as display 1516 coupled to high speed interface 1508 .
- multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory.
- multiple computing devices 1500 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system).
- the memory 1504 stores information within the computing device 1500 .
- the memory 1504 is a volatile memory unit or units.
- the memory 1504 is a non-volatile memory unit or units.
- the memory 1504 may also be another form of computer-readable medium, such as a magnetic or optical disk.
- the storage device 1506 is capable of providing mass storage for the computing device 1500 .
- the storage device 1506 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations.
- a computer program product can be tangibly embodied in an information carrier.
- the computer program product may also contain instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 1504 , the storage device 1506 , or memory on processor 1502 .
- the high speed controller 1508 manages bandwidth-intensive operations for the computing device 1500 , while the low speed controller 1512 manages lower bandwidth-intensive operations. Such allocation of functions is an example only.
- the high-speed controller 1508 is coupled to memory 1504 , display 1516 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 1510 , which may accept various expansion cards (not shown).
- low-speed controller 1512 is coupled to storage device 1506 and low-speed expansion port 1514 .
- the low-speed expansion port which may include various communication ports (e.g., USB, BLUETOOTH, Ethernet, wireless Ethernet) may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- input/output devices such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- the computing device 1500 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a standard server 1520 , or multiple times in a group of such servers. It may also be implemented as part of a rack server system 1524 . In addition, it may be implemented in a personal computer such as a laptop computer 1522 . Alternatively, components from computing device 1500 may be combined with other components in a mobile device (not shown), such as device 1550 . Each of such devices may contain one or more of computing devices 1500 , 1550 , and an entire system may be made up of multiple computing devices 1500 , 1550 communicating with each other.
- Computing device 1550 includes a processor 1552 , memory 1564 , an input/output device such as a display 1554 , a communication interface 1566 , and a transceiver 1568 , among other components.
- the device 1550 may also be provided with a storage device, such as a microdrive or other device, to provide additional storage.
- a storage device such as a microdrive or other device, to provide additional storage.
- Each of the components 1550 , 1552 , 1564 , 1554 , 1566 , and 1568 are interconnected using various buses, and several of the components may be mounted on a common motherboard or in other manners as appropriate.
- the processor 1552 can execute instructions within the computing device 1550 , including instructions stored in the memory 1564 .
- the processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors.
- the processor may provide, for example, for coordination of the other components of the device 1550 , such as control of user interfaces, applications run by device 1550 , and wireless communication by device 1550 .
- Processor 1552 may communicate with a user through control interface 1558 and display interface 1556 coupled to a display 1554 .
- the display 1554 may be, for example, a TFT LCD (Thin-Film-Transistor Liquid Crystal Display) or an OLED (Organic Light Emitting Diode) display, or other appropriate display technology.
- the display interface 1556 may comprise appropriate circuitry for driving the display 1554 to present graphical and other information to a user.
- the control interface 1558 may receive commands from a user and convert them for submission to the processor 1552 .
- an external interface 1562 may be provided in communication with processor 1552 , so as to enable near area communication of device 1550 with other devices. External interface 1562 may provide, for example, for wired communication in some implementations, or for wireless communication in other implementations, and multiple interfaces may also be used.
- the memory 1564 stores information within the computing device 1550 .
- the memory 1564 can be implemented as one or more of a computer-readable medium or media, a volatile memory unit or units, or a non-volatile memory unit or units.
- Expansion memory 1574 may also be provided and connected to device 1550 through expansion interface 1572 , which may include, for example, a SIMM (Single In Line Memory Module) card interface.
- SIMM Single In Line Memory Module
- expansion memory 1574 may provide extra storage space for device 1550 , or may also store applications or other information for device 1550 .
- expansion memory 1574 may include instructions to carry out or supplement the processes described above, and may include secure information also.
- expansion memory 1574 may be provided as a security module for device 1550 , and may be programmed with instructions that permit secure use of device 1550 .
- secure applications may be provided via the SIMM cards, along with additional information, such as placing identifying information on the SIMM card in a non-hackable manner.
- the memory may include, for example, flash memory and/or NVRAM memory, as discussed below.
- a computer program product is tangibly embodied in an information carrier.
- the computer program product contains instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 1564 , expansion memory 1574 , or memory on processor 1552 that may be received, for example, over transceiver 1568 or external interface 1562 .
- Device 1550 may communicate wirelessly through communication interface 1566 , which may include digital signal processing circuitry where necessary. Communication interface 1566 may provide for communications under various modes or protocols, such as GSM voice calls, SMS, EMS, or MMS messaging, CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS, among others. Such communication may occur, for example, through radio-frequency transceiver 1568 . In addition, short-range communication may occur, such as using a BLUETOOTH, Wi-Fi, or other such transceiver (not shown). In addition, GPS (Global Positioning System) receiver module 1570 may provide additional navigation- and location-related wireless data to device 1550 , which may be used as appropriate by applications running on device 1550 .
- GPS Global Positioning System
- Device 1550 may also communicate audibly using audio codec 1560 , which may receive spoken information from a user and convert it to usable digital information. Audio codec 1560 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of device 1550 . Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on device 1550 .
- Audio codec 1560 may receive spoken information from a user and convert it to usable digital information. Audio codec 1560 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of device 1550 . Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on device 1550 .
- the computing device 1550 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a cellular telephone 1580 . It may also be implemented as part of a smart phone 1582 , personal digital assistant, tablet, wearable 1590 , or another similar mobile device.
- the computing devices depicted in the figure can include sensors that interface with a wearable (e.g., AR headset/HMD) device 1590 to generate an augmented environment for viewing inserted content within the physical space.
- a wearable e.g., AR headset/HMD
- one or more sensors included on a computing device 1550 or other computing device depicted in the figure can provide input to the AR headset 1590 or in general, provide input to an AR space.
- the sensors can include, but are not limited to, a touchscreen, accelerometers, gyroscopes, pressure sensors, biometric sensors, temperature sensors, humidity sensors, and ambient light sensors.
- the computing device 1550 can use the sensors to determine an absolute position and/or a detected rotation of the computing device in the AR space that can then be used as input to the AR space.
- the computing device 1550 may be incorporated into the AR space as a virtual object, such as a controller, a laser pointer, a keyboard, a weapon, etc.
- Positioning of the computing device/virtual object by the user when incorporated into the AR space can allow the user to position the computing device so as to view the virtual object in certain manners in the AR space.
- the virtual object represents a laser pointer
- the user can manipulate the computing device as if it were an actual laser pointer.
- the user can move the computing device left and right, up and down, in a circle, etc., and use the device in a similar fashion to using a laser pointer.
- the user can aim at a target location using a virtual laser pointer.
- one or more input devices included on, or connected to, the computing device 1550 can be used as input to the AR space.
- the input devices can include, but are not limited to, a touchscreen, a keyboard, one or more buttons, a trackpad, a touchpad, a pointing device, a mouse, a trackball, a joystick, a camera, a microphone, earphones or buds with input functionality, a gaming controller, or other connectable input device.
- a user interacting with an input device included on the computing device 1550 when the computing device is incorporated into the AR space can cause a particular action to occur in the AR space.
- a touchscreen of the computing device 1550 can be rendered as a touchpad in AR space.
- a user can interact with the touchscreen of the computing device 1550 .
- the interactions are rendered, in AR headset 1590 for example, as movements on the rendered touchpad in the AR space.
- the rendered movements can control virtual objects in the AR space.
- one or more output devices included on the computing device 1550 can provide output and/or feedback to a user of the AR headset 1590 in the AR space.
- the output and feedback can be visual, tactical, or audio.
- the output and/or feedback can include, but is not limited to, vibrations, turning on and off or blinking and/or flashing of one or more lights or strobes, sounding an alarm, playing a chime, playing a song, and playing of an audio file.
- the output devices can include, but are not limited to, vibration motors, vibration coils, piezoelectric devices, electrostatic devices, light emitting diodes (LEDs), strobes, and speakers.
- a user may be provided with controls allowing the user to make an election as to both if and when systems, programs or features described herein may enable collection of user information (e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current location), and if the user is sent content or communications from a server.
- user information e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current location
- certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information is removed.
- a user's identity may be treated so that no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined.
- location information such as to a city, ZIP code, or state level
- the user may have control over what information is collected about the user, how that information is used, and what information is provided to the user.
- implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof.
- ASICs application specific integrated circuits
- These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- a keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user can be received in any form, including acoustic, speech, or tactile input.
- the systems and techniques described here can be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back end, middleware, or front end components.
- the components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network (“LAN”), a wide area network (“WAN”), and the Internet.
- LAN local area network
- WAN wide area network
- the Internet the global information network
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- a non-transitory computer-readable medium stores instructions that, when executed by a processor on a receiving computing device, causes the receiving computing device to perform any of the methods disclosed herein.
- a computing device can be configured with at least one processor and memory storing instructions that, when executed by the at least one processor, performs any of the methods disclosed herein.
Abstract
Description
- This application is a non-provisional of, and claims the benefit of priority to, U.S. Provisional Application No. 63/266,291, filed on Dec. 31, 2021, entitled, “BROWSER-BASED ANNOTATION INTERFACE FOR INTERNET DOCUMENTS,” the disclosure of which is hereby incorporated by reference.
- Websites provide information or functionality helpful to users, and many users use the Internet to research products, places, companies, services, etc. Webpages that are associated with websites are typically stored on remote servers.
- Research across different sites and different webpages within those sites can be complex and often involves synthesis, comparison, and decision making. Users can view the webpages within a browser that is executing on a local computing device. Implementations provide a tool integrated into the browser that assists in these and other tasks. The tool includes a novel user interface and new browser functionalities, such as storing information associated with webpages and/or websites. The stored information that is associated with the webpages and/or websites is also associated with a user account. The stored information associated with the webpages and/or websites is generated by a user who owns and/or controls the user account. The stored information is inaccessible to the server that maintains the website with which user-generated information is associated. The novel user interface, referred to as an annotation user interface, helps users organize, understand, and take action on Internet-based documents without coordination and/or communication with the server and/or entity that maintains the website. The annotation user interface provides a highly integrated information-generating (e.g., note-taking) experience that solves decision funnel problems. In particular, the annotation user interface can include intelligence that enables users to pull out the most important details from a website or a collection of websites, to compare information across websites, and return to the original content (webpages) without having to bookmark the content and without providing the information to the servers and/or entities that maintain the websites. The annotation user interface can lift rich content, provide suggestions for notes and/or images, and/or organize annotations around an annotation target. Annotation targets can represent a webpage (source document), a topic, a tab group, etc. The annotation user interface enables users to integrate user-originated annotations with suggested content, track annotations across websites, e.g., by associating annotations with a topic or tab group, and to compare notes across sites, and webpages. The user interface can be surfaced in multiple ways in association with the user account and can be presented with varying levels of detail (e.g., inside a side panel, across multiple tables, or as a standalone document). Integrating the annotation interface with a browser enables a browser to separate the annotation data from a rendering process. Such separation can make the interface appear integrated but prevents annotations themselves from being exposed to the rendering process, preventing the servers and/or administrators that maintain the websites from obtaining knowledge of the annotations.
- A method can be performed by a browser. The method can include presenting at least a portion of a resource address; presenting a rendered webpage in a browser content window, the rendered webpage being associated with the resource address; presenting an annotation area, the annotation area being outside the browser content window; receiving, in association with a user account, an annotation in the annotation area; and storing the annotation in association with the user account and the resource address.
- A non-transitory computer-readable storage medium comprising instructions stored thereon that, when executed by at least one processor, are configured to cause a computing system to present at least a portion of a resource address; present a rendered webpage in a browser content window, the rendered webpage being associated with the resource address; present an annotation area, the annotation area being outside the browser content window; receive, in association with a user account, an annotation in the annotation area; and store the annotation in association with the user account and the resource address.
- A computing system can include at least one processor and a non-transitory computer-readable storage medium. The non-transitory computer-readable storage medium can comprise instructions stored thereon that, when executed by the at least one processor, are configured to cause the computing system to present at least a portion of a resource address; present a rendered webpage in a browser content window, the rendered webpage being associated with the resource address; present an annotation area, the annotation area being outside the browser content window; receive, in association with a user account, an annotation in the annotation area; and store the annotation in association with the user account and the resource address.
- The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features will be apparent from the description and drawings.
-
FIGS. 1A-1D illustrate example techniques for surfacing a browser annotation interface, according to some aspects. -
FIGS. 2A and 2B illustrate another example technique for surfacing a browser annotation interface, according to an aspect. -
FIGS. 3A and 3B illustrate an example browser annotation interface for a computing device with limited display area, according to an aspect. -
FIGS. 4A-4F illustrate example browser annotation interfaces with suggested annotation content, according to some aspects. -
FIGS. 5A-5D illustrate example browser annotation interfaces with grouped annotation content, according to some aspects. -
FIG. 6 illustrates example annotation renderings, according to some aspects. -
FIG. 7 illustrates a system for providing a browser annotation interface, according to an aspect. -
FIG. 8 is a block diagram of components for a browser application that implements a system for providing a browser annotation interface, according to an aspect. -
FIG. 9 is a timing diagram depicting example operations for loading an Internet document with annotations, according to an aspect. -
FIG. 10 is a timing diagram depicting example operations for navigating using annotations, according to an aspect. -
FIG. 11 shows an example of example computing devices according to an aspect. - Like reference numbers refer to like elements.
- Implementations relate to providing a browser-integrated annotation system for annotating Internet-based documents, such as websites, webpages, and the like, and storing the annotations. Integrating the annotation system into the browser promotes useability and facilitates synthesis across webpages, tabs, and search sessions, and allows the annotations to be stored in association with a user account. The browser-based annotation system also facilitates organization and navigation and can provide automated assistance, such as auto-generated annotation suggestions. In some implementations, such suggestions may be based on machine-learned models, document structure, and/or historical information (e.g., analysis of anonymized search records). Because the annotation interface is integrated into the browser, implementations can provide several different techniques for surfacing the annotation interface and can serve as a navigational aid.
-
FIG. 1A illustrates an example browser user interface (UI) 100, in accordance with implementations described herein. In general, the UI 100 is generated and rendered by a browser application (e.g.,browser application 718 ofFIG. 7 ) executing in an operating system (e.g., operating system 710) of a computing device. The UI 100 includes atab strip 108 associated with the browser application. In this example, the UI 100 includes fivebrowser tabs 105, although any number of browser tabs or tab groups can be opened by the browser application. Each browser tab, e.g.,browser tab 105, may be associated with web content (a webpage) presented in a correspondingbrowser content window 120 of the browser application. As used herein, a webpage refers to any content generated/served at least partially by/from a remote server hosting a website. The webpage can be associated with a resource address, such as a Uniform Resource Locator (URL) or a Uniform Resource Indicator (URI). The webpage can include HyperText Markup Language (HTML) content. The browser application can request the webpage from the remote server hosting the website based on the resource address (e.g., the URL). The browser application can request the webpage by, for example, sending a HyperText Transfer Protocol (HTTP) GET request to the remote server hosting the website. The webpage can refer to a progressive web application in addition to conventional webpages. In addition, as used herein, a source document refers to the webpage currently rendered in thebrowser content window 120 as well as any other data (metadata) that are used to render the document (e.g., markup and scripts that are not actually displayed). - The
UI 100 also includes anaddress bar area 110. An address of the webpage displayed in thebrowser content window 120 can be illustrated in the address bar area 110 (e.g., in address input area 115). The address of the webpage can be represented as a resource address. The resource address included in theaddress bar area 110 can be associated with the webpage presented in thebrowser content window 120. In some examples, theaddress bar area 110 can present at least a portion of the resource address. Other controls, icons, and/or so forth can be included in theaddress bar area 110. For example, theaddress bar area 110 can include a user icon 125 (illustrated inFIG. 1B ). Theuser icon 125 may provide an indication of a user account associated with the browser session. Thisuser icon 125 can be an image, text, or some other representation of the user account. In some examples, the user account can be associated with a user, and a user may be required to input a unique username, as well as a passcode associated with the username, to engage in a browser session associated with the user account. In some examples, no login may be required to engage in the browser session, and the user account can be considered to be associated with the local computing device on which the browser application is executing. Other controls/icons included in theaddress bar area 110 can include a forward control, a back control, a refresh control, a home control, an extensions control, and/or a bookmark control. Theaddress bar area 110 can be controlled by and/or associated with the browser (e.g., the browser application 718). The content of theaddress bar area 110 can be controlled by the browser application, whereas the content of thebrowser content window 120 is controlled by the webpage being displayed and/or a provider of the webpage. Thus, the appearance and user interface elements displayed in theaddress bar area 110 are controlled by the browser application. - The
UI 100 includes an annotation user interface, illustrated asannotation area 130. In the example ofFIG. 1A the annotation (or notes)area 130 is located in, or implemented as, a sidebar of the browser. The sidebar of the browser may be a continuous area, e.g., a combined area representing theaddress bar area 110 and theannotation area 130. Thus, content displayed (rendered) in the sidebar is controlled (determined) locally by the browser and not by the server hosting the website that is displayed (rendered) in thebrowser content window 120. While illustrated as a continuous area with theaddress bar area 110, the sidebar can be a split window, a pop-up window or some other portion of thebrowser UI 100. Annotations inputted into theannotation area 130 can be stored locally on the computing device on which the browser is executing, or remotely in association with the user account. The annotations inputted into theannotation area 130 can be inaccessible to the server hosting the website. No notification of annotations will be sent to the server hosting the website. In other words, annotations are associated with the website locally, without notifying or interacting with the server associated with the website. The storage of the annotations locally on the computing device and/or remotely in association with the user account allows the user to securely generate and store annotations without knowledge of the server hosting the website and/or any administrator of the website. - Annotations and/or notes can include content entered by a user into the
annotation area 130. In some examples, annotations can include text inputted into theannotation area 130 by the user. In some examples, annotations can include modifications to the appearance and/or formatting settings of a portion of text included in the rendered webpage. The modifications to the appearance and/or formatting settings of a portion of text can include highlighting or changing a typeface. In some examples, annotations can include resource addresses (such as URLs) of other webpages. In some examples, annotations can include files uploaded by the user. - The
annotation area 130 can be integrated as part of the browser user interface 100 (e.g., address bar area 110) so that theannotation area 130 may not be spoofed (e.g., imitated) by, for example, a third party or the owner of the content displayed in thebrowser content window 120. Because theannotation area 130 is part of the application of the browser application, the integration of theannotation area 130 would be difficult to imitate. In some implementations, theannotation area 130 may be surfaced (invoked, rendered) in response to a menu option, e.g., menu option 122. Menu option 122 may be an option provided in a menu that is displayed in response to a command to surface a tab menu, e.g., a right-click ontab 105. - In the example of
FIG. 1A , there are currently no notes for thetab 105. Thus, theannotation area 130 includes a newnote UI element 132. The newnote UI element 132 can be any UI element that allows a user to enter text (e.g., via keyboard, speech-to-text, stylus, etc.). Theannotation area 130 may include an indication of the tab/website with which the note is associated. Theannotation area 130 may include controls for adding annotations (notes), which will be associated with the webpage currently displayed in thebrowser content window 120. The controls are configured to perform a predetermined task/operation when actuated by a user. The controls may include atext control 133 for adding a text-based note. Thetext control 133 may open a new note UI element, such asUI element 132. The controls may include a to-do control 134. The controls may include animage control 135. Theimage control 135 may enable a user to upload, take, and/or find an image to add as a note. The controls may include alink control 136. Thelink control 136 may enable a user to add a link to (address such as a URL of) another Internet-based document. The controls may include an auto-suggestion control 137. The auto-suggestion control 137 may cause the browser application to analyze the annotation target (e.g., content of thebrowser content window 120, both displayed and not displayed) and provide one or more suggestions of information items for inclusion in the notes for the annotation target. Examples of auto-suggestions are illustrated inFIGS. 4A-4F . - In some implementations, the
annotation area 130 may be surfaced as illustrated inFIG. 1B . InFIG. 1B theannotation area 130 is surfaced in response tomenu option 123. Themenu option 123 may be provided in a menu that is displayed in response to a command to surface a selected text menu. Thus, for example, the user may select content displayed in thebrowser content window 120 and may right-click within the selection to bring up the menu with themenu option 123. InFIGS. 1B, 2A, 2B, 3A, and 3B , text with a shaded background is considered to be highlighted, which is an example of a modification to text. The highlighted text can be considered the content selected by the user, in which the user right-clicked on a mouse or otherwise provided input to a human-interface device (HID) to bring up the menu with themenu option 123. Selection of themenu option 123 may cause theannotation area 130 ofFIG. 1B to be rendered by the browser application, e.g., by a rendering process of the browser application. In the example ofFIG. 1B , the annotation target already has one existing note (which can be considered a first annotation associated with the webpage), so theannotation area 130 includes note 138 (which can be considered a second annotation associated with the webpage). In addition, an additional newnote UI element 132 is included in theannotation area 130 in response to selection of themenu option 123. The technique for surfacingannotation area 130 illustrated inFIG. 1B can be combined with the technique for surfacingannotation area 130 illustrated inFIG. 1A . In other words, a browser may be configured to use either or both techniques. - In some implementations, such as the example illustrated in
FIG. 1C , theannotation area 130 may include acontrol 139 configured to expand thetab strip 108. The expandedtab strip 108′ may display apreview area 140 for each tab. Each tab can be associated with a different annotation target, i.e., a resource such as a webpage, and/or website (such as a first resource, a second resource, and a third resource). Thepreview area 140 may include any existing notes for the annotation target associated with the tab, but may lack the controls (e.g., controls 133-137). Thus, thepreview area 140 is a condensed version of theannotation area 130 for a tab. Thepreview area 140 can display portions of multiple rendered webpages and associated annotations, such as a portion of a first rendered webpage and a first annotation associated with the first rendered webpage, a portion of a second rendered webpage and a second annotation associated with the second rendered webpage, and a portion of a third rendered webpage and a third annotation associated with the third rendered webpage. The expandedtab strip 108′ thus provides a novel way to quickly and conveniently compare notes associated with different annotation targets, e.g., across URLs, webpages and/or websites, tabs, tab groups, etc. The expandedtab strip 108′ may cause the area of thebrowser content window 120 to shrink, so that some content previously viewable is now offscreen and/or not visible or displayed by the browser. The technique for surfacingpreview area 140 illustrated inFIG. 1C can be combined with the technique for surfacingannotation area 130 illustrated inFIGS. 1A and 1B . In other words, a browser may be configured to use one, two, or all three techniques. - In some examples (not shown), the browser can present the
preview area 140 for a tab in response to the user performing a pre-selection action for a tab, such as hovering a cursor over the tab or sliding a finger over the tab. The browser can present the webpage associated with the tab in response to the user making a second type of selection of the tab, such as clicking or tapping on the tab. In some implementations, thepreview area 140 may include a selectable control configured to, when selected, cause the browser to concurrently present the webpage associated with the resource address (e.g., URL) and present theannotation area 130. - In some implementations, such as the example illustrated in
FIG. 1D , the annotation area (e.g., annotation area 130) may be surfaced in response to amenu option 124. Themenu option 124 may be provided in a menu that is displayed in response to selection of a control showing a browser menu, e.g., as illustrated inFIG. 1D . Although not illustrated inFIG. 1D , selection of themenu option 124 may cause theannotation area 130 ofFIG. 1A or 1B to be rendered (depending on whether the source document of the annotation target (e.g., the current tab) has existing notes (e.g., 1B) or not (e.g., 1A)). The technique for surfacingannotation area 130 illustrated inFIG. 1D can be combined with the techniques described inFIGS. 1A-1C . In other words, a browser may be configured to use one, two, three, or all four techniques. - In some implementations, the
annotation area 130 may be surfaced as illustrated inFIG. 2A . In the example ofFIG. 2A , acontrol 126 is provided by the browser application. In some implementations, thecontrol 126 may be provided in theaddress bar area 110. In some implementations (not shown), thecontrol 126 may be positioned ahead of theaddress input area 115. In some implementations, thecontrol 126 may be positioned in theaddress input area 115. In some implementations (not shown), thecontrol 126 may be positioned after theaddress input area 115. Thecontrol 126 may be provided when the annotation target (e.g., the document currently displayed in browser content window 120) has associated notes (e.g., annotations). In some implementations, thecontrol 126 may be provided regardless of whether the annotation target has associated notes and/or annotations. In some implementations, the appearance of thecontrol 126 may change depending on whether or not the annotation target has associated notes and/or annotations. For example, the text of, color of, shading of, or icon included in thecontrol 126 may differ depending on whether or not the annotation target has an associated note and/or annotation. In some implementations, the text may indicate the number (quantity) of existing notes and/or annotations for the annotation target. In the example shown inFIG. 2A , shaded background represents highlighting of text for portions of text that are associated with notes and/or annotations for the annotation target. - If a user actuates (selects) the
control 126, such as by tapping and/or clicking on thecontrol 126, the browser may render theannotation area 130 with notes for the annotation target, as illustrated inFIG. 2B . The existing notes and/or annotations (e.g., 238 a, 238 b, etc.) may be actionable and configured to navigate within the source document associated with the annotation target. For example, if the user actuates (selects, clicks on) existingnote 238 b and/or annotation, the browser may scroll the source document to the location associated with the existingnote 238 b and/or annotation. The interface ofFIG. 2B also illustrates that content of a note and/or annotation may have a full highlight and/or partial highlight. For example, the content that corresponds to selected note 238 a and/or annotation is illustrated with full highlight (shown by a darker shaded background) while text associated with other notes and/or annotations is illustrated with partial highlight (shown by a lighter shaded background inFIG. 2B ). In some implementations, a selected note, such as note 238 a inFIG. 2B , may also be highlighted (e.g., as shown by shading inFIG. 2B ). If the user selects note 238 b, the browser may cause the content associated withnote 238 b to appear with full highlight (which would be represented by a darker shaded background) and change the content associated with note 238 a (if still displayed in the browser content window 120) to a partial highlight. -
FIGS. 3A and 3B illustrate anexample preview area 340 in a device with limited display area, such as a mobile device, a tablet, a wearable, etc. Thepreview area 340 is similar topreview area 140 ofFIG. 1C . Thepreview area 340 may thus display a first note and/or annotation associated with the source document, but may be expanded toannotation area 330, as illustrated inFIG. 3B .Annotation area 330 is similar to, and/or has similar features and/or functionalities as,annotation area 130 ofFIGS. 1A-2B . -
FIGS. 4A-4F illustrate example browser annotation interfaces with suggested annotation content, according to some aspects. In the example ofFIG. 4A , the user has navigated to a webpage that is now at least partially displayed inbrowser content window 120 and opened anannotation area 130. In some implementations, theannotation area 130 may include adescription 431 of the annotation target, in this case a title from the webpage displayed in thebrowser content window 120. In some implementations, the title is stored as a data element with an annotation record for the annotation, e.g., an annotation record stored inlocal note storage 726 ofFIG. 7 . In the example ofFIG. 4A , the user has actuated the auto-suggestion control 137. In response to actuation of the auto-suggestion control 137, theannotation area 130 is updated with suggested text-basedcontent elements 432. The suggested text-basedcontent elements 432 are content elements selected from content of the annotation target. The auto-suggestions can be based on schema mark-up in the annotation target. The auto-suggestions can be based on historical search records. The auto-suggestions can be based on document structure of the annotation target. The user may select one or more of the suggested text-basedcontent elements 432. In the example ofFIG. 4B , the user has selected four of the suggested text-basedcontent elements 432, as shown by the dotted backgrounds and bolded text of the four suggested text-basedcontent elements 432 that the user selected. The dotted backgrounds and/or bolded text can represent changes in color or highlighting of the suggested text-basedcontent elements 432.FIG. 4B illustrates fournotes 433 that have been added in response to selection of the four suggested text-basedcontent elements 432. - In the example of
FIG. 4C , the user has scrolled to a different portion of the annotation target and modified an appearance oftext 421. In this example, the modification of the appearance oftext 421 includes highlighting thetext 421, shown as shading inFIG. 4C . Selection of the auto-suggestion control 137 may result in auto-suggestedelements 434, which include the selected highlightedtext 421 and animage 422. In response to the user selecting the suggested text of the auto-suggestedelements 434,FIG. 4D illustrates that the browser application has added anew note 435 and/or annotation to theannotation area 130. Thisnew note 435 has the same annotation target as thenotes 433 and/or annotations. Although not illustrated in the figures, selection of one of thenotes 433 and/or annotations would cause the annotation target to scroll, so that the content corresponding to the selected note and/or annotation of thenotes 433 and/or annotations is displayed in thebrowser content window 120, e.g., as illustrated inFIG. 4E . - In the example of
FIG. 4E , selection of the auto-suggestion control 137 may result in suggestedimage elements 436 being added to the annotations for the annotation target (e.g., displayed in the browser content window 120). The user can select one or more of the images, which can then be added as image notes 437 and/or image annotations to the annotations for the annotation target, as illustrated inFIG. 4F . In some implementations, the suggested text-basedcontent elements 432 and the auto-suggestedelements 434 are selectable elements. These selectable elements may be configured, in response to selection, to add the suggested annotation content as an annotation, as described above. -
FIGS. 5A-5D illustrate an example browser annotation interface with grouped annotation content, according to some aspects. In the example ofFIG. 5A , the user has two open tabs 105 (e.g., 105 a and 105 b). The user has anannotation area 130 open, with two notes for the annotation target of the website corresponding totab 105 b, as evidenced by thedescription 531 of the annotation target included in theannotation area 130. The user may selecttab 105 a, which causes the browser application to display the interface ofFIG. 5B . The browser responds to the selection of thetab 105 a by presenting, in theannotation area 130, annotations for an annotation target that corresponds to the resource address (e.g., the URL) associated with the selectedtab 105 a. The annotation target now corresponds to the website associated withtab 105 a, and theannotation area 130 indicates this change by changing thedescription 531. In the example ofFIG. 5B , the current annotation target has no existing annotations and/or notes, but the user may create an annotation and/or note that is an image included in the webpage by draggingimage 521 to the newnote UI element 132, as illustrated with dashed arrows inFIG. 5B . In addition to being a text-based UI element (e.g., configured to receive text), thenew note UI 132 can be configured as a drop location. Thus, if content such as an image, copied text, or some other content is dragged and released over (fully or partially over) the newnote UI element 132 included in theannotation area 130, the browser application may consider the drag and/or drop of the content to be a request to store the content as a new annotation and/or note for the annotation target (e.g., the annotation target corresponding to the description 531).FIG. 5C illustrates the result of this request, e.g., the browser application has added a new image as an annotation for the annotation target. When the annotation is an image, the image may be downloaded to the user's device so that the note may be accessible to the user without a network connection. - In some implementations, the user may create a tab group by grouping the two
tabs tab group 505, as illustrated inFIG. 5D . The user may have given the tab group 505 a description of “Climbing”. A tab group can also be an annotation target. In some implementations, the creation of thetab group 505 may cause the browser application to group existing annotations for annotation targets included in the tab group to also be associated with the tab group as an annotation target. This can be done directly (e.g., adding an index entry associating the annotation data with an identifier for the tab group) or indirectly (e.g., adding an index entry associating the webpage with the tab group). Theannotation area 130 may be updated to reflect the new association, e.g., changing thedescription 531 in theannotation area 130 to a description for thetab group 505. An annotation target that represents a group of annotation targets may include additional information, such as the number of annotation targets (in this example two tabs) and/or the number of notes and/or annotations for the group of annotation targets. In some implementations, theannotation area 130 may add agroup control 535, which may enable a user to select between annotation targets in the group in response to actuation of thecontrol 535. Theannotation area 130 for an annotation target representing multiple annotation targets (such as tab group 505) can display annotations associated with one or more of the annotation targets. In the example ofFIG. 5D , the annotation data fortab 105 a and fortab 105 b are both displayed (rendered) in theannotation area 130. -
FIG. 6 illustrates example variations of annotation renderings, according to some aspects. The example variations could be applied to any notes (annotations) displayed in theannotation area 130 of any of the preceding figures. Shaded backgrounds represent highlighted areas and/or highlighting of text. Theexample annotation 602 includes text but no title. Theexample annotation 604 includes a title (“Note title”) and text. Theexample annotation 606 includes a time and date (timestamp), indicating when theannotation 606 was inputted by the user, and text. Theexample annotation 608 includes text for which an appearance has been modified, such as highlighted (“Highlight hint text”) and additional text. Theexample annotation 610 includes text for which an appearance has been modified, such as highlighted (“Highlight hint text”), a title, and additional text. Theexample annotation 612 includes text for which an appearance has been modified, such as highlighted (“Highlight hint text”), a title, a time and date (timestamp), and additional text. Theexample annotation 614 includes a title. Theexample annotation 616 includes a title and text. Theexample annotation 618 includes a date and time (timestamp) and text. Theexample annotation 620 includes a title and includes text for which an appearance has been modified, such as highlighted. Theexample annotation 622 includes a title, unmodified text, and text for which an appearance has been modified, such as highlighted. Theexample annotation 624 includes a time and date (timestamp), text, and text for which an appearance has been modified, such as highlighted. -
FIG. 7 illustrates asystem 700 for providing a browser annotation interface, according to an aspect. The browser annotation interface can include thebrowser user interface 100 and/orannotation area 130. - The
system 700 can include acomputing system 702. Thecomputing system 702 can include a local computing device and/or client device, such as smartphone, tablet, mobile computing system, laptop or notebook computer, or desktop computer, as non-limiting examples. - The
computing system 702 can includememory 704. Thememory 704 can include a non-transitory computer-readable storage medium comprising instructions stored thereon that, when executed by at least one processor (such as the CPU/GPU 732 included in the computing system 702), are configured to cause thecomputing system 702 to perform any combination of methods, functions, and/or techniques described herein. - The
memory 704 can include instructions for executing an operating system (O/S) 710. Theoperating system 710 can control which applications have access to various components of thecomputing system 702, such as thememory 704, output device(s) 724, input device(s) 730, CPU/GPU 732, and/or camera(s) 734. - The
operating system 710 can enable multiple application(s) 712 to execute on thecomputing system 702, such as thebrowser application 718. Thebrowser application 718 can perform any combination of methods, functions, and/or techniques described herein. For eachapplication 712, theoperating system 710 can maintain and/orstore application information 715 and/or an application layer, which can enable theapplication 712 to communicate with other applications executing on thecomputing system 702. For eachapplication 712, theoperating system 710 can maintain and/orstore session data 717, which can enable opening, closing, and managing a session between application processes. - The
memory 704 can includelocal note storage 726. Thelocal note storage 726 can store notes and/or annotations, such as the annotations described above and shown in previous figures. Thelocal note storage 726 can store the notes and/or annotations in annotation records. In some implementations, the annotation records can include a user identifier. In some implementations, the location (directory) in which an annotation record is stored reflects association with a particular user. Each annotation record may include a metadata portion, a body portion, and a target portion. The metadata portion of an annotation record can include an identifier, a creation date, a modified date, etc. The identifier enables the browser to uniquely identify each annotation record. The ID can be unique by user. The ID can be unique by client device. In some implementations, a body of the annotation record can include a note type indicating a type of the annotation. In some implementations, the metadata portion of an annotation record can include a note type. The note type may identify the type of annotation, e.g., metadata such as text, image, rich text, handwriting, audio, video, location, geolocation, and/or files. The target portion includes an annotation target identifier. The annotation target identifier identifies the resource, e.g., webpage, website, document, file, tab group, etc., to which the annotation applies. The annotation target identifier can be a resource address such as a URL. The annotation target identifier can be a group identifier, e.g., an identifier for a tab group. The body portion of an annotation record can include text. In some examples, the body portion of the annotation record can include an address such as a URL linking to and/or identifying an external source of information and/or data. The text represents the text selected/provided by the user as the annotation. The body portion of an annotation record can include an image identifier. For annotations that are tied to a particular element of the annotation target (e.g., particular text, a particular image, etc.), the metadata portion of the annotation record can include an annotation target element. In some examples, the annotation target element can be included in the annotation record. The annotation target element can be a selector, e.g., a CSS selector, that identifies particular content in the annotation target. In some examples, the annotation target element can include a portion of text included in the webpage. In some examples, the annotation target can identify a file (such as an image), and/or an identifier of the annotation target can include a filename and/or a hash value associated with the file. The hash value can be determined based on any hashing algorithm, such as Message Digest 5 (MD5) or Secure Hash Algorithm (SHA). - The
local note storage 726 can store the notes and/or annotations in association with the address and/or group as well as in association with a user account, such as the user account associated with the user who created the notes and/or annotations. In some examples, the notes and/or annotations can be considered to be stored in association with the user account when the notes and/or annotations are stored in a directory associated with the user, such as a local directory accessible to the user. The notes and/or annotations can be stored locally on thememory 704 of thecomputing system 702 on which the browser application is executing. The notes and/or annotations can be stored locally in long-term storage, such as non-volatile memory that will still be accessible after the computing system is powered off and then back on. In some examples, the rendered webpage is not stored in long-term memory, and the notes and/or annotations can be retrieved and presented when the rendered webpage is again retrieved from the service(s)/website(s) 770 and rendered on thebrowser application 718. Local storage of the notes and/or annotations prevents the server that hosts the websites associated with the notes and/or annotations from having knowledge of the notes and/or annotations. - The
memory 704 can storepreferences 728.Preferences 728 can be received from a user, and can include appearance of the web browser, favorite sites or bookmarks, and/or initial applications to launch, as non-limiting examples. - The
computing system 702 can include one or more camera(s) 734. The camera(s) 734 can capture images, such as images of the user for teleconferencing. - The
computing system 702 can include at least one processor, such as a central processing unit (CPU) and/or graphics processing unit (GPU) 732. The CPU/GPU can execute instructions such as instructions stored inmemory 704, to perform any combination of methods, functions, and/or techniques described herein. - The
computing system 702 can include one or more input device(s) 730. The input device(s) can include human interface devices, such as a keyboard, mouse, microphone, or touchscreen, as non-limiting examples. - The
computing system 702 can include one or more output device(s) 724. The output device(s) can include output devices such as a display, speaker, or printer, as non-limiting examples. - The input device(s) 730 and/or output device(s) 724 can also include interfaces for communicating with other computing devices. The interface(s) for communicating with other computing devices can receive and/or send data, such as from and/or to, a server, and/or may receive input and provide output from and to a user. The input and output functions of the interface(s) may be combined into a single node, or may be divided into separate input and output nodes. The input/output node can include one or more wired or wireless interfaces for communicating with other computing devices.
- The
system 700 can include aserver computing system 750. Theserver computing system 750 can store and/or maintain user accounts 760. User accounts 760 stored and/or maintained by theserver computing system 750 can be associated with and/or owned by users, and can be associated with unique identifiers, such as email addresses. Theserver computing system 750 can storenotes 756 and/or annotations in association with each user account. Thenotes 756 and/or annotations can have features described above, and can be stored in association with theuser account 760 and an annotation target, such as a URL. Theserver computing system 750 can prevent a server that hosts and/or maintains a resource associated with the annotation target, such as a server(s)/website(s) 770, from accessing thenotes 756 and/or annotations. - The
server computing system 750 can store, in association with the user accounts 760,session data 762, which can enable opening, closing, and managing a session during which the user is logged in with the user'suser account 760. Theserver computing system 750 can store, in association with the user accounts 760,profiles 766, which can include browsing patterns, bookmarks, and/or preferences with respect to appearance. - The
server computing system 750 can include at least one processor(s) 752. The at least one processor(s) 752 can execute instructions, such as instructions stored in at least one memory device(s) 754, to cause theserver computing system 750 to perform any combination of methods, functions, and/or techniques described herein. - The
server computing system 750 can include at least one memory device(s) 754. The at least one memory device(s) 754 can include a non-transitory computer-readable storage medium. The at least one memory device(s) 754 can store data and instructions thereon that, when executed by at least one processor, such as the processor(s) 752, are configured to cause theserver computing system 750 to perform any combination of methods, functions, and/or techniques described herein. Accordingly, in any of the implementations described herein (even if not explicitly noted in connection with a particular implementation), software (e.g., processing modules, stored instructions) and/or hardware (e.g., processor, memory devices, etc.) associated with, or included in, theserver computing system 750 can be configured to perform, alone, or in combination withcomputing system 702, any combination of methods, functions, and/or techniques described herein. - The
system 700 can include service(s)/websites 770. The service(s)/website 770 can be maintained and/or hosted by one or more remote servers. The service(s)/website 770 can be addressed by, and/or store files addressed by, resource addresses, e.g., URLs. Thecomputing system 702,server computing system 750, and/or service(s)/website 770 can communicate with each other via anetwork 740, such as the Internet. -
FIG. 8 is a block diagram of components for a browser application, e.g.,browser application 718 ofFIG. 7 , that implements a system for providing a browser annotation interface, according to an aspect. Thebrowser application 718 includes anannotation UI coordinator 805 that is a platform-specific component of the browser processes 850. In other words, theannotation UI coordinator 805 is configured for specific operating systems and device types. Theannotation UI coordinator 805 may have two main components:note creation UI 810 andnote rendering UI 815. Thenote creation UI 810 includes components configured for adding new notes and/orannotations 837 and associating the new notes and/orannotations 837 with an annotation target 836 (e.g., the source document or tab group). Examplenote creation UI 810 components include 132-137 ofFIG. 1A , and/or the suggestedelements FIGS. 4A-4F , etc. Thenote rendering UI 815 is configured to render the annotation area (e.g., annotation area 130) and/or preview area (e.g., preview area 140) in which the notes and/orannotations 837 are displayed. In some implementations, theannotation UI coordinator 805 may also include anote sharing coordinator 820. Theannotation UI coordinator 805 may communicate with anannotation renderer coordinator 835, e.g., sending an identifier of anannotation 837 to theannotation renderer coordinator 835. In response to receiving the identifier of theannotation 837 from theannotation UI coordinator 805, theannotation renderer coordinator 835 may identify content of the annotation source associated with the annotation identifier and display (render) that portion of theannotation target 836 in thebrowser content window 120. In some implementations, the message may be passed through an annotation browser coordinator 825. - The
browser application 718 may include the annotation browser coordinator 825. The annotation browser coordinator 825 is a cross-platform component (i.e., not dependent on an operating system) of the browser processes 850 that contains the business logic of the application. The annotation browser coordinator 825 also maintains the annotations data in private storage (e.g., local to the computing device on which thebrowser application 718 is executing). In some examples, the annotations data itself may be kept out of the renderer processes 855. In other words, annotation data is rendered in a rendering process distinct from the renderer processes 855 and the annotation data is not provided to theannotation renderer coordinator 835 or to another renderer process. This separation of rendering processes provides security and ensures privacy. For example, the renderer processes 855 (e.g., annotation renderer coordinator 835) may receive an ID for an annotation and information about the annotation target 836 (e.g., what to fully highlight, what to partially highlight, etc.). This reduces the risk of an exploited renderer exposing confidential user data in the annotations themselves. In some implementations, where the user requests it,annotations 837 may be synchronized with a user account, e.g., so that if the user uses multiple computing devices, the annotations data for the user can be accessed by any of the computing devices after the user logs into the user account. The user may stop synchronization at any time. - In some implementations, the locally stored annotation data (which can represent an annotation 837) may have a format based on the Web Annotation W3C Recommended Web Annotation Data Model. The annotation data may be comprised of three main parts: a metadata portion, a body portion, and target portion. The metadata portion may contain information like the ID, creation date, modified date, etc. The ID can be used to communicate about a specific annotation between the
annotation UI coordinator 805, theannotation renderer coordinator 835, and the annotation browser coordinator 825. The body portion of anannotation 837 includes the text, images, rich text, link, etc. of theannotation 837. The body portion of anannotation 837 is not shared with the rendering processes. The annotation target 836 (target portion) defines what theannotation 837 attaches to. Theannotation target 836 can be a webpage element, a webpage, a tab group, a topic (a user-defined group), etc. In some implementations, in addition to the webpage as anannotation target 836, annotation target elements are associated with theannotation 837. The annotation target elements may be identified via selectors. A selector can be a Text Fragment selector and/orfragment finder 838. A selector and/orfragment finder 838 can be a CSS selector. Becauseannotations 837 can be linked to elements of a webpage, which may change, it is possible that theannotation renderer coordinator 835 may not be able to find the specific annotation target element. In some implementations, these “orphaned” notes and/or annotations may still be displayed in theannotation area 130 for the webpage. In some implementations, such orphaned annotations may be displayed with an additional message mentioning that the target element can no longer be found. If the webpage associated with the Uniform Resource Locator (URL) is unattainable,annotations 837 for thatannotation target 836 may be shown as orphaned notes and/or annotations in theannotation area 130. For example, a notes menu option, such asmenu option 124, may enable the user to select notes and/or annotations for anannotation target 836 that is not associated with an open tab. - The annotation browser coordinator 825 may fetch the
relevant annotations 837 for the current pages from the local storage, as described in more detail with respect toFIG. 9 . The annotation browser coordinator 825 may interact with theannotation UI coordinator 805 and theannotation renderer coordinator 835 to properly display the notes and/or annotations. The annotation browser coordinator 825 may determine which tasks to send to theannotation UI coordinator 805 and which tasks to send to theannotation renderer coordinator 835. - The annotation browser coordinator 825 may include a
private notes coordinator 830. Theprivate notes coordinator 830 may be configured to save and retrieve annotation data (notes and/or annotations) fromlocal storage 831. Thelocal storage 831 can be included inmemory 704 of thecomputing system 702 on which the browser is executing. Theprivate notes coordinator 830 may associate the annotations with the annotation target (e.g., source document or tab group) to which the note is tied. Thenotes coordinator 830 may index the annotation data, e.g., so that it can be retrieved by an annotation target, by a tab group, by a topic, etc. Thenotes coordinator 830 may also be configured to sync 832 the annotation data for access on other devices if the user is signed-in and syncing. - The annotation browser coordinator 825 may include an
inline notes coordinator 833. Theinline notes coordinator 833 can receive, store, retrieve, and/or present notes and/or annotations within theannotation target 836 and/or webpage, rather than within theannotation area 130. - The annotation browser coordinator 825 may include a
remote notes coordinator 834. Theremote notes coordinator 834 may receive, store, retrieve, and/or present notes and/or annotations that are stored remotely in association with the user account, such as in the notes 745 of theserver computing system 750. - The
annotation renderer coordinator 835 may be configured for finding and highlighting the selectors to which the different annotations are attached. To do so, theannotation renderer coordinator 835 may keep a subset of the annotations data like the ID and selector information. The annotation browser coordinator 825 may cause theannotation renderer coordinator 835 andannotation UI coordinator 805 to work in tandem to fluidly link theannotation 837 to its target selector using an Annotations ID (GUID) to synchronize operations. Specifically, theannotation UI coordinator 805 is responsible for the annotation body (though it has all of the data) and theannotation renderer coordinator 835 is responsible for the annotation target 836 (what is rendered in the browser content window 120). In some implementations,annotations 837 may not be rendered next to the highlighted text. In some implementations,annotations 837 may be rendered next to the highlighted text. In some implementations, when the user clicks on anannotation 837 in the side-panel (e.g., annotation area 130), the annotation browser coordinator 825 may cause theannotation renderer coordinator 835 to emphasize the annotation target's 836 highlight and scroll the annotation target's 836 highlight into view. However, when a user clicks on a lightly highlighted (partial highlight) annotation target 836 (e.g., in the browser content window 120), the annotation browser coordinator 825 may cause theannotation UI coordinator 805 to focus the associated annotation in the side-panel (annotation area 130). To make this work, messages between the processes will include the ID of the selected annotation so that the other process can activate the appropriate annotation. -
FIG. 9 is a timing diagram depicting example operations for loading an Internet document with annotations, according to an aspect. Auser 900 selects a webpage, such as by typing a resource address, such as a URL into theaddress input area 115 and/or selecting or opening a hyperlink (902) presented in thebrowser content window 120. Thebrowser application 718 responds to the selection of the webpage by performing URL loading actions (904), (906). The URL loading actions (904), (906) can include generating and sending, to a server such as the server maintaining the service(s)/website(s) 770, a request, such as an HTTP GET request, for the webpage identified and/or addressed by the URL. Thebrowser application 718 can, in conjunction with theannotation renderer coordinator 835, render and present the webpage received from the server. - After performing the URL loading actions (904), 906) such as receiving and rendering the web page, the
browser application 718 can fetchannotations 837 related to and/or associated with the URL (908). Thebrowser application 718 can, for example, fetch theannotations 837 fromlocal note storage notes 756 stored in a remote server computing system in association with the user account associated with theuser 900. Thebrowser application 718 can send, to theannotation renderer coordinator 835, current page annotation targets 836 (910), which can include portions of the rendered webpage. - The
browser application 718 can display the annotation area 130 (e.g., a side-panel or overlay), with theannotations 837 fetched at (908). In an example in which theannotation 837 includes a modification of the text in the webpage (theannotation target 836 can include the webpage associated with the URL) such as lightly highlighting a portion of the text included in the webpage, theannotation renderer coordinator 835 can lightly highlight the annotation target (912) -
FIG. 10 is a timing diagram depicting example operations for navigating using annotations, according to an aspect. In some examples, the actions shown and described with respect toFIG. 10 can be performed after the actions shown and described with respect toFIG. 9 . - The
user 900 can select, such as by clicking on, a first note, such as note A, on the annotation area 130 (1002) (e.g., a side-panel or overlay). Thebrowser application 718 can respond to the selection of note A by focusing on annotation A in the annotation area 130 (1004), such as by making annotation A visible in the annotation area and/or side-panel. - The
browser application 718 can also respond to the selection of note A by sending, to theannotation renderer coordinator 835, a request to highlight and scroll to annotation A (1006). Theannotation renderer coordinator 835 can respond to the request (1006) by scrolling to and highlighting the annotation target (1008). The annotation target can include the portion of the webpage (such as a first portion of text) that was highlighted at (912), and the annotation can include modifying the first portion of text by highlighting the portion of text. The highlighting of the annotation target (1008) can be an example of performing an action on the webpage based on a stored annotation including a modification of the webpage. - The
user 900 can scroll around and click on a target of a second annotation, which can be considered annotation B (1010). The annotation of the annotation target can be a first modification to a second portion of text included in the webpage associated with the URL. The first modification can include lightly highlighting the second portion of text. In an example, the annotation of annotation target B can include a second modification of the second portion of text, and theannotation renderer coordinator 835 can respond to the user clicking on the target of annotation B (1010) by performing the second modification of the target of annotation B (1012). The second modification can include fully highlighting the second portion of text, and/or a modification that is more visually apparent to the user, such as darker, less transparent, bolder, or having a more saturated color, as non-limiting examples. Theannotation renderer coordinator 835 can send to thebrowser application 718, and/or thebrowser application 718 can receive from theannotation renderer coordinator 835, a request to focus on annotation B (1014). Thebrowser application 718 can thereafter focus on annotation B in theannotation area 130 and/or side-panel (1016), such as by presenting annotation B in the side-panel and/orannotation area 130. -
FIG. 11 shows an example of example computing devices according to an aspect. In some implementations, thecomputer device 1500 is an example of thecomputing system 702. In some implementations, thecomputer device 1500 is an example of theserver computing system 750. In some implementations, themobile computer device 1550 is an example of thecomputing system 702.Computing device 1500 is intended to represent various forms of digital computers, such as laptops, desktops, tablets, workstations, personal digital assistants, televisions, servers, blade servers, mainframes, and other appropriate computing devices.Computing device 1550 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smart phones, and other similar computing devices. The components shown here, their connections and relationships, and their functions, are meant to be examples only, and are not meant to limit implementations of the implementations described and/or claimed in this document. -
Computing device 1500 includes aprocessor 1502,memory 1504, astorage device 1506, a high-speed interface 1508 connecting tomemory 1504 and high-speed expansion ports 1510, and alow speed interface 1512 connecting tolow speed bus 1514 andstorage device 1506. Theprocessor 1502 can be a semiconductor-based processor. Thememory 1504 can be a semiconductor-based memory. Each of thecomponents processor 1502 can process instructions for execution within thecomputing device 1500, including instructions stored in thememory 1504 or on thestorage device 1506 to display graphical information for a GUI on an external input/output device, such asdisplay 1516 coupled tohigh speed interface 1508. In other implementations, multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory. Also,multiple computing devices 1500 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system). - The
memory 1504 stores information within thecomputing device 1500. In one implementation, thememory 1504 is a volatile memory unit or units. In another implementation, thememory 1504 is a non-volatile memory unit or units. Thememory 1504 may also be another form of computer-readable medium, such as a magnetic or optical disk. - The
storage device 1506 is capable of providing mass storage for thecomputing device 1500. In one implementation, thestorage device 1506 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations. A computer program product can be tangibly embodied in an information carrier. The computer program product may also contain instructions that, when executed, perform one or more methods, such as those described above. The information carrier is a computer- or machine-readable medium, such as thememory 1504, thestorage device 1506, or memory onprocessor 1502. - The
high speed controller 1508 manages bandwidth-intensive operations for thecomputing device 1500, while thelow speed controller 1512 manages lower bandwidth-intensive operations. Such allocation of functions is an example only. In one implementation, the high-speed controller 1508 is coupled tomemory 1504, display 1516 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 1510, which may accept various expansion cards (not shown). In the implementation, low-speed controller 1512 is coupled tostorage device 1506 and low-speed expansion port 1514. The low-speed expansion port, which may include various communication ports (e.g., USB, BLUETOOTH, Ethernet, wireless Ethernet) may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter. - The
computing device 1500 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as astandard server 1520, or multiple times in a group of such servers. It may also be implemented as part of arack server system 1524. In addition, it may be implemented in a personal computer such as alaptop computer 1522. Alternatively, components fromcomputing device 1500 may be combined with other components in a mobile device (not shown), such asdevice 1550. Each of such devices may contain one or more ofcomputing devices multiple computing devices -
Computing device 1550 includes aprocessor 1552,memory 1564, an input/output device such as adisplay 1554, acommunication interface 1566, and atransceiver 1568, among other components. Thedevice 1550 may also be provided with a storage device, such as a microdrive or other device, to provide additional storage. Each of thecomponents - The
processor 1552 can execute instructions within thecomputing device 1550, including instructions stored in thememory 1564. The processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. The processor may provide, for example, for coordination of the other components of thedevice 1550, such as control of user interfaces, applications run bydevice 1550, and wireless communication bydevice 1550. -
Processor 1552 may communicate with a user throughcontrol interface 1558 anddisplay interface 1556 coupled to adisplay 1554. Thedisplay 1554 may be, for example, a TFT LCD (Thin-Film-Transistor Liquid Crystal Display) or an OLED (Organic Light Emitting Diode) display, or other appropriate display technology. Thedisplay interface 1556 may comprise appropriate circuitry for driving thedisplay 1554 to present graphical and other information to a user. Thecontrol interface 1558 may receive commands from a user and convert them for submission to theprocessor 1552. In addition, anexternal interface 1562 may be provided in communication withprocessor 1552, so as to enable near area communication ofdevice 1550 with other devices.External interface 1562 may provide, for example, for wired communication in some implementations, or for wireless communication in other implementations, and multiple interfaces may also be used. - The
memory 1564 stores information within thecomputing device 1550. Thememory 1564 can be implemented as one or more of a computer-readable medium or media, a volatile memory unit or units, or a non-volatile memory unit or units.Expansion memory 1574 may also be provided and connected todevice 1550 throughexpansion interface 1572, which may include, for example, a SIMM (Single In Line Memory Module) card interface.Such expansion memory 1574 may provide extra storage space fordevice 1550, or may also store applications or other information fordevice 1550. Specifically,expansion memory 1574 may include instructions to carry out or supplement the processes described above, and may include secure information also. Thus, for example,expansion memory 1574 may be provided as a security module fordevice 1550, and may be programmed with instructions that permit secure use ofdevice 1550. In addition, secure applications may be provided via the SIMM cards, along with additional information, such as placing identifying information on the SIMM card in a non-hackable manner. - The memory may include, for example, flash memory and/or NVRAM memory, as discussed below. In one implementation, a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that, when executed, perform one or more methods, such as those described above. The information carrier is a computer- or machine-readable medium, such as the
memory 1564,expansion memory 1574, or memory onprocessor 1552 that may be received, for example, overtransceiver 1568 orexternal interface 1562. -
Device 1550 may communicate wirelessly throughcommunication interface 1566, which may include digital signal processing circuitry where necessary.Communication interface 1566 may provide for communications under various modes or protocols, such as GSM voice calls, SMS, EMS, or MMS messaging, CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS, among others. Such communication may occur, for example, through radio-frequency transceiver 1568. In addition, short-range communication may occur, such as using a BLUETOOTH, Wi-Fi, or other such transceiver (not shown). In addition, GPS (Global Positioning System)receiver module 1570 may provide additional navigation- and location-related wireless data todevice 1550, which may be used as appropriate by applications running ondevice 1550. -
Device 1550 may also communicate audibly usingaudio codec 1560, which may receive spoken information from a user and convert it to usable digital information.Audio codec 1560 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset ofdevice 1550. Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating ondevice 1550. - The
computing device 1550 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as acellular telephone 1580. It may also be implemented as part of asmart phone 1582, personal digital assistant, tablet, wearable 1590, or another similar mobile device. - In some implementations, the computing devices depicted in the figure can include sensors that interface with a wearable (e.g., AR headset/HMD)
device 1590 to generate an augmented environment for viewing inserted content within the physical space. For example, one or more sensors included on acomputing device 1550 or other computing device depicted in the figure, can provide input to theAR headset 1590 or in general, provide input to an AR space. The sensors can include, but are not limited to, a touchscreen, accelerometers, gyroscopes, pressure sensors, biometric sensors, temperature sensors, humidity sensors, and ambient light sensors. Thecomputing device 1550 can use the sensors to determine an absolute position and/or a detected rotation of the computing device in the AR space that can then be used as input to the AR space. For example, thecomputing device 1550 may be incorporated into the AR space as a virtual object, such as a controller, a laser pointer, a keyboard, a weapon, etc. Positioning of the computing device/virtual object by the user when incorporated into the AR space can allow the user to position the computing device so as to view the virtual object in certain manners in the AR space. For example, if the virtual object represents a laser pointer, the user can manipulate the computing device as if it were an actual laser pointer. The user can move the computing device left and right, up and down, in a circle, etc., and use the device in a similar fashion to using a laser pointer. In some implementations, the user can aim at a target location using a virtual laser pointer. - In some implementations, one or more input devices included on, or connected to, the
computing device 1550 can be used as input to the AR space. The input devices can include, but are not limited to, a touchscreen, a keyboard, one or more buttons, a trackpad, a touchpad, a pointing device, a mouse, a trackball, a joystick, a camera, a microphone, earphones or buds with input functionality, a gaming controller, or other connectable input device. A user interacting with an input device included on thecomputing device 1550 when the computing device is incorporated into the AR space can cause a particular action to occur in the AR space. - In some implementations, a touchscreen of the
computing device 1550 can be rendered as a touchpad in AR space. A user can interact with the touchscreen of thecomputing device 1550. The interactions are rendered, inAR headset 1590 for example, as movements on the rendered touchpad in the AR space. The rendered movements can control virtual objects in the AR space. - In some implementations, one or more output devices included on the
computing device 1550 can provide output and/or feedback to a user of theAR headset 1590 in the AR space. The output and feedback can be visual, tactical, or audio. The output and/or feedback can include, but is not limited to, vibrations, turning on and off or blinking and/or flashing of one or more lights or strobes, sounding an alarm, playing a chime, playing a song, and playing of an audio file. The output devices can include, but are not limited to, vibration motors, vibration coils, piezoelectric devices, electrostatic devices, light emitting diodes (LEDs), strobes, and speakers. - Further to the descriptions above, a user may be provided with controls allowing the user to make an election as to both if and when systems, programs or features described herein may enable collection of user information (e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current location), and if the user is sent content or communications from a server. In addition, certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information is removed. For example, a user's identity may be treated so that no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined. Thus, the user may have control over what information is collected about the user, how that information is used, and what information is provided to the user.
- Various implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- These computer programs (also known as programs, software, software applications or code) include machine instructions for a programmable processor, and can be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly/machine language. As used herein, the terms “machine-readable medium” “computer-readable medium” refers to any computer program product, apparatus and/or device (e.g., magnetic discs, optical disks, memory, Programmable Logic Devices (PLDs)) used to provide machine instructions and/or data to a programmable processor, including a machine-readable medium that receives machine instructions as a machine-readable signal. The term “machine-readable signal” refers to any signal used to provide machine instructions and/or data to a programmable processor.
- To provide for interaction with a user, the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user can be received in any form, including acoustic, speech, or tactile input.
- The systems and techniques described here can be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back end, middleware, or front end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network (“LAN”), a wide area network (“WAN”), and the Internet.
- The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- In this specification and the appended claims, the singular forms “a,” “an” and “the” do not exclude the plural reference unless the context clearly dictates otherwise. Further, conjunctions such as “and,” “or,” and “and/or” are inclusive unless the context clearly dictates otherwise. For example, “A and/or B” includes A alone, B alone, and A with B. Further, connecting lines or connectors shown in the various figures presented are intended to represent example functional relationships and/or physical or logical couplings between the various elements. Many alternative or additional functional relationships, physical connections or logical connections may be present in a practical device. Moreover, no item or component is essential to the practice of the implementations disclosed herein unless the element is specifically described as “essential” or “critical”.
- Terms such as, but not limited to, approximately, substantially, generally, etc. are used herein to indicate that a precise value or range thereof is not required and need not be specified. As used herein, the terms discussed above will have ready and instant meaning to one of ordinary skill in the art.
- Moreover, use of terms such as up, down, top, bottom, side, end, front, back, etc. herein are used with reference to a currently considered or illustrated orientation. If they are considered with respect to another orientation, it should be understood that such terms must be correspondingly modified.
- Although certain example computer-implemented methods, apparatuses and articles of manufacture have been described herein, the scope of coverage of this patent is not limited thereto. It is to be understood that terminology employed herein is for the purpose of describing particular aspects, and is not intended to be limiting. On the contrary, this patent covers all methods, apparatus and articles of manufacture fairly falling within the scope of the claims of this patent.
- In one aspect, a non-transitory computer-readable medium stores instructions that, when executed by a processor on a receiving computing device, causes the receiving computing device to perform any of the methods disclosed herein.
- In one aspect, a computing device can be configured with at least one processor and memory storing instructions that, when executed by the at least one processor, performs any of the methods disclosed herein.
Claims (20)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US18/148,789 US20230214584A1 (en) | 2021-12-31 | 2022-12-30 | Storage of content associated with a resource locator |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US202163266291P | 2021-12-31 | 2021-12-31 | |
US18/148,789 US20230214584A1 (en) | 2021-12-31 | 2022-12-30 | Storage of content associated with a resource locator |
Publications (1)
Publication Number | Publication Date |
---|---|
US20230214584A1 true US20230214584A1 (en) | 2023-07-06 |
Family
ID=85199211
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US18/148,789 Pending US20230214584A1 (en) | 2021-12-31 | 2022-12-30 | Storage of content associated with a resource locator |
Country Status (2)
Country | Link |
---|---|
US (1) | US20230214584A1 (en) |
WO (1) | WO2023130084A1 (en) |
Citations (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040205514A1 (en) * | 2002-06-28 | 2004-10-14 | Microsoft Corporation | Hyperlink preview utility and method |
US20040205542A1 (en) * | 2001-09-07 | 2004-10-14 | Bargeron David M. | Robust anchoring of annotations to content |
US20060075205A1 (en) * | 2004-09-24 | 2006-04-06 | International Business Machines Corporation | Creating annotations of transient computer objects |
US20070022135A1 (en) * | 2005-07-25 | 2007-01-25 | Dale Malik | Systems and methods for organizing and annotating an information search |
US20070022098A1 (en) * | 2005-07-25 | 2007-01-25 | Dale Malik | Systems and methods for automatically updating annotations and marked content of an information search |
US20070174762A1 (en) * | 2006-01-24 | 2007-07-26 | International Business Machines Corporation | Personal web page annotation system |
AU2007325055A1 (en) * | 2006-11-30 | 2008-06-05 | Microsoft Technology Licensing, Llc | Rendering document views with supplemental informational content |
US20090006556A1 (en) * | 2007-06-26 | 2009-01-01 | Anjana Agarwal | Assigning tags to network addresses for subsequent retrieval of the network addresses |
US20090171898A1 (en) * | 2007-12-28 | 2009-07-02 | International Business Machines Corporation | System and method for leveraging tag context |
US20100011282A1 (en) * | 2008-07-11 | 2010-01-14 | iCyte Pty Ltd. | Annotation system and method |
US20100070851A1 (en) * | 2008-09-17 | 2010-03-18 | International Business Machines Corporation | Method and system for providing suggested tags associated with a target web page for manipulation by a user |
US20120131441A1 (en) * | 2010-11-18 | 2012-05-24 | Google Inc. | Multi-Mode Web Browsing |
US20130080872A1 (en) * | 2004-03-04 | 2013-03-28 | Ophivain Applications NY L.L.C. | Automated annotation of a resource on a computer network using a network address of the resource |
US8533586B1 (en) * | 2005-07-18 | 2013-09-10 | Twelvefold Media Inc. | Annotation overlay collection, storage, and display system and method |
US8640023B1 (en) * | 2006-07-10 | 2014-01-28 | Oracle America, Inc. | Method and system for providing HTML page annotations using AJAX and JAVA enterprise edition |
US20160203114A1 (en) * | 2015-01-09 | 2016-07-14 | Microsoft Technology Licensing, Llc | Control of Access and Management of Browser Annotations |
US20180373688A1 (en) * | 2017-06-27 | 2018-12-27 | Microsoft Technology Licensing, Llc | Sharing annotations to web pages |
US10402883B2 (en) * | 2008-06-04 | 2019-09-03 | Paypal, Inc. | System and method for community aided research and shopping |
US20200278788A1 (en) * | 2019-02-28 | 2020-09-03 | Microsoft Technology Licensing, Llc | Scrollable annotations associated with a subset of content in an electronic document |
US20210141997A1 (en) * | 2019-11-10 | 2021-05-13 | ExactNote, Inc. | Methods, computer-readable mediums, and systems for creating, organizing, viewing, and connecting annotations of documents within web browsers |
Family Cites Families (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20150278182A1 (en) * | 2014-04-01 | 2015-10-01 | Project T, LLC | System and method for annotating webpages |
-
2022
- 2022-12-30 US US18/148,789 patent/US20230214584A1/en active Pending
- 2022-12-30 WO PCT/US2022/082643 patent/WO2023130084A1/en unknown
Patent Citations (21)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040205542A1 (en) * | 2001-09-07 | 2004-10-14 | Bargeron David M. | Robust anchoring of annotations to content |
US20040205514A1 (en) * | 2002-06-28 | 2004-10-14 | Microsoft Corporation | Hyperlink preview utility and method |
US20130080872A1 (en) * | 2004-03-04 | 2013-03-28 | Ophivain Applications NY L.L.C. | Automated annotation of a resource on a computer network using a network address of the resource |
US20130132815A1 (en) * | 2004-03-04 | 2013-05-23 | Ophivain Applications NY L.L.C. | Automated annotation of a resource on a computer network using a network address of the resource |
US20060075205A1 (en) * | 2004-09-24 | 2006-04-06 | International Business Machines Corporation | Creating annotations of transient computer objects |
US8533586B1 (en) * | 2005-07-18 | 2013-09-10 | Twelvefold Media Inc. | Annotation overlay collection, storage, and display system and method |
US20070022135A1 (en) * | 2005-07-25 | 2007-01-25 | Dale Malik | Systems and methods for organizing and annotating an information search |
US20070022098A1 (en) * | 2005-07-25 | 2007-01-25 | Dale Malik | Systems and methods for automatically updating annotations and marked content of an information search |
US20070174762A1 (en) * | 2006-01-24 | 2007-07-26 | International Business Machines Corporation | Personal web page annotation system |
US8640023B1 (en) * | 2006-07-10 | 2014-01-28 | Oracle America, Inc. | Method and system for providing HTML page annotations using AJAX and JAVA enterprise edition |
AU2007325055A1 (en) * | 2006-11-30 | 2008-06-05 | Microsoft Technology Licensing, Llc | Rendering document views with supplemental informational content |
US20090006556A1 (en) * | 2007-06-26 | 2009-01-01 | Anjana Agarwal | Assigning tags to network addresses for subsequent retrieval of the network addresses |
US20090171898A1 (en) * | 2007-12-28 | 2009-07-02 | International Business Machines Corporation | System and method for leveraging tag context |
US10402883B2 (en) * | 2008-06-04 | 2019-09-03 | Paypal, Inc. | System and method for community aided research and shopping |
US20100011282A1 (en) * | 2008-07-11 | 2010-01-14 | iCyte Pty Ltd. | Annotation system and method |
US20100070851A1 (en) * | 2008-09-17 | 2010-03-18 | International Business Machines Corporation | Method and system for providing suggested tags associated with a target web page for manipulation by a user |
US20120131441A1 (en) * | 2010-11-18 | 2012-05-24 | Google Inc. | Multi-Mode Web Browsing |
US20160203114A1 (en) * | 2015-01-09 | 2016-07-14 | Microsoft Technology Licensing, Llc | Control of Access and Management of Browser Annotations |
US20180373688A1 (en) * | 2017-06-27 | 2018-12-27 | Microsoft Technology Licensing, Llc | Sharing annotations to web pages |
US20200278788A1 (en) * | 2019-02-28 | 2020-09-03 | Microsoft Technology Licensing, Llc | Scrollable annotations associated with a subset of content in an electronic document |
US20210141997A1 (en) * | 2019-11-10 | 2021-05-13 | ExactNote, Inc. | Methods, computer-readable mediums, and systems for creating, organizing, viewing, and connecting annotations of documents within web browsers |
Also Published As
Publication number | Publication date |
---|---|
WO2023130084A1 (en) | 2023-07-06 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10491552B2 (en) | Inserting content into an application from an online synchronized content management system | |
US9977835B2 (en) | Queryless search based on context | |
US10762277B2 (en) | Optimization schemes for controlling user interfaces through gesture or touch | |
US9046917B2 (en) | Device, method and system for monitoring, predicting, and accelerating interactions with a computing device | |
US9374359B2 (en) | Generating a data display in view of user activities | |
CN104769581B (en) | System and method for providing linked note-taking | |
CN108369600B (en) | Web browser extensions | |
US20150205462A1 (en) | Browser tab management | |
US20190050378A1 (en) | Serializable and serialized interaction representations | |
US11200293B2 (en) | Method and system for controlling presentation of web resources in a browser window | |
US11960447B2 (en) | Operating system-level management of multiple item copy and paste | |
US20150106723A1 (en) | Tools for locating, curating, editing, and using content of an online library | |
US11625160B2 (en) | Content navigation method and user interface | |
US11853821B2 (en) | User interface for searching and generating graphical objects linked to third-party content | |
US11531723B2 (en) | Dynamic contextual library | |
US20190258666A1 (en) | Resource accessibility services | |
US20230214584A1 (en) | Storage of content associated with a resource locator | |
US9529936B1 (en) | Search results using query hints | |
US11822869B2 (en) | User interface with command-line link creation for generating graphical objects linked to third-party content | |
US20180367848A1 (en) | Method and system for auto-viewing of contents | |
US20240005280A1 (en) | Collaborative workspaces for browsers | |
US20240045917A1 (en) | Future use intents for saved resources in a browser environment | |
WO2022199494A1 (en) | User interest-based content recommendation method, and terminal device | |
JP2007272682A (en) | Additional information management system, additional information management apparatus, additional information display method and program | |
FR2980287A1 (en) | Method for annotating e.g. HTML page processed by navigation application on Internet network by mobile phone, involves adding respective type of annotation to point of document following drag-and-drop action by annotation application |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:CHANG, MARK;SEGUIN-GAGNON, SEBASTIEN;BOKAN, DAVID;AND OTHERS;SIGNING DATES FROM 20230206 TO 20230215;REEL/FRAME:062774/0743 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: FINAL REJECTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
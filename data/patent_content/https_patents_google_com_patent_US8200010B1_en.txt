US8200010B1 - Image segmentation by clustering web images - Google Patents
Image segmentation by clustering web images Download PDFInfo
- Publication number
- US8200010B1 US8200010B1 US11/858,368 US85836807A US8200010B1 US 8200010 B1 US8200010 B1 US 8200010B1 US 85836807 A US85836807 A US 85836807A US 8200010 B1 US8200010 B1 US 8200010B1
- Authority
- US
- United States
- Prior art keywords
- image
- images
- patches
- patch
- matching
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
- 238000003709 image segmentation Methods 0.000 title claims abstract description 46
- 239000013598 vector Substances 0.000 claims abstract description 43
- 230000001427 coherent effect Effects 0.000 claims abstract description 12
- 238000000034 method Methods 0.000 claims description 51
- 230000009466 transformation Effects 0.000 claims description 18
- 238000004590 computer program Methods 0.000 claims description 10
- 238000001514 detection method Methods 0.000 claims description 7
- 230000011218 segmentation Effects 0.000 claims description 6
- 230000002776 aggregation Effects 0.000 claims description 3
- 238000004220 aggregation Methods 0.000 claims description 3
- 238000007670 refining Methods 0.000 claims description 3
- 238000004364 calculation method Methods 0.000 claims 1
- 238000010191 image analysis Methods 0.000 abstract description 6
- 238000010586 diagram Methods 0.000 description 18
- 230000008569 process Effects 0.000 description 6
- 230000006870 function Effects 0.000 description 5
- 230000015654 memory Effects 0.000 description 5
- 230000003287 optical effect Effects 0.000 description 3
- 238000012545 processing Methods 0.000 description 3
- 230000004044 response Effects 0.000 description 3
- 238000012795 verification Methods 0.000 description 3
- 238000002372 labelling Methods 0.000 description 2
- 230000000644 propagated effect Effects 0.000 description 2
- 230000009471 action Effects 0.000 description 1
- 230000004931 aggregating effect Effects 0.000 description 1
- 238000004458 analytical method Methods 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 230000008859 change Effects 0.000 description 1
- 239000003086 colorant Substances 0.000 description 1
- 239000000470 constituent Substances 0.000 description 1
- 238000010276 construction Methods 0.000 description 1
- 238000009826 distribution Methods 0.000 description 1
- 238000001914 filtration Methods 0.000 description 1
- 238000009499 grossing Methods 0.000 description 1
- 230000010354 integration Effects 0.000 description 1
- 230000004807 localization Effects 0.000 description 1
- 238000010801 machine learning Methods 0.000 description 1
- 230000007246 mechanism Effects 0.000 description 1
- 230000002093 peripheral effect Effects 0.000 description 1
- 230000002085 persistent effect Effects 0.000 description 1
- 230000000717 retained effect Effects 0.000 description 1
- 238000010187 selection method Methods 0.000 description 1
- 238000000638 solvent extraction Methods 0.000 description 1
- 238000007619 statistical method Methods 0.000 description 1
- 239000000126 substance Substances 0.000 description 1
- 238000012360 testing method Methods 0.000 description 1
- 238000000844 transformation Methods 0.000 description 1
- 238000013519 translation Methods 0.000 description 1
- XLYOFNOQVPJJNP-UHFFFAOYSA-N water Substances O XLYOFNOQVPJJNP-UHFFFAOYSA-N 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/40—Scenes; Scene-specific elements in video content
- G06V20/46—Extracting features or characteristics from the video content, e.g. video fingerprints, representative shots or key frames
- G06V20/47—Detecting features for summarising video content
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/40—Extraction of image or video features
- G06V10/46—Descriptors for shape, contour or point-related descriptors, e.g. scale invariant feature transform [SIFT] or bags of words [BoW]; Salient regional features
- G06V10/462—Salient features, e.g. scale invariant feature transforms [SIFT]
Definitions
- the present invention pertains in general to image segmentation systems and in particular to techniques for segmenting individual images by combining information from individual images and groups of images.
- Image segmentation refers to the process of partitioning an image into multiple regions. This is done to make the image easier to analyze. Typically, image segmentation is used to locate objects and boundaries within images. Objects or regions in the image are identified based some characteristic or property such as color, intensity, or texture. Adjacent regions are typically significantly different with respect to the same characteristic.
- image segmentation examines individual images to find regions of a particular color, a smooth color variation, or based on a priori knowledge of what is being segmented.
- the drawbacks of such a process clearly stem from the fact that such a priori knowledge of a model, color, or texture is not always readily available. For objects or regions that are novel or yet to be characterized, this process clearly falls short.
- segmenting a single image at a time may be classified differently due to color, lighting, and texture variations between images. Further, color variations within an object in an image may cause the segmentation to only identify a sub-region and not the complete region.
- a method and a system segments individual images by combining information from multiples images and groups of images.
- a set of images are analyzed to derive a fingerprint of each image.
- Each fingerprint comprises an aggregation of sub-fingerprints derived from distinctive features in the image.
- the fingerprints for the images are compared so as to select similar images having regions that are common among some portion of the set of images.
- the images are then segmented based upon the common regions. Image segmentation is thus done in a semantically-coherent way, the semantics coming from evaluating a large set of image similarities.
- a system for segmenting images from an image collection includes a feature detection module that detects features at various locations in a set of images. The features are detected based on attributes in the images.
- a patch generation module generates patches within each detected feature, with each patch comprising an area of a fixed geometrical shape.
- An image fingerprint generation module derives a fingerprint for each the images by merging patch feature vectors from various patches.
- a similar image identification module compares fingerprints from the images to select similar images with common regions.
- a geometric matching module matches geometric characteristics between matching pairs of patches, using pairwise selections of images to identify common regions.
- a common object generation module merges the identified common regions into a single region.
- the present invention has further embodiments in computer system and software architectures, computer program products and computer implemented methods, and computer generated user interfaces and search result contents.
- FIG. 1 is a block diagram of an image segmentation system in accordance with one embodiment of the present invention.
- FIG. 2 is an illustration of the steps involved in generating an image fingerprint from an image in accordance with one embodiment of the present invention.
- FIG. 3 is a high-level flow diagram illustrating the steps involved in image segmentation from a collection of images in accordance with one embodiment of the present invention.
- FIG. 4 is a high-level block diagram of one embodiment of an image segmentation server.
- FIG. 5 is a flow diagram of one embodiment of a feature detection module within the image segmentation server.
- FIG. 6 is a flow diagram of one embodiment of a patch generation module within the image segmentation server.
- FIG. 7 is a flow diagram of an image fingerprint generation module within the image segmentation server.
- FIG. 8 is a flow diagram of a similar image identification module within the image segmentation server.
- FIG. 9 is flow diagram of a geometric matching module within the image segmentation server.
- FIG. 10 is flow diagram of a common object generation module within the image segmentation server.
- FIGS. 11A-F illustrate the stages of image segmentation on a sample set of images depicting the Sydney Opera House.
- FIG. 1 is a block diagram of an image segmentation system 100 for a large scale image collection in accordance with one embodiment of the present invention.
- the image segmentation system 100 communicates with a client 160 over a network 170 .
- the image segmentation system 100 includes an image search server 110 , a presentation server 120 , an image segmentation server 130 , and an image selection server 140 , all coupled to an image database 150 . These elements are used by the image segmentation system 100 to provide various aspects of image segmentation services to the client 160 . Only a single client 160 is shown, but in practice the system 100 would communicate with large numbers of clients 160 concurrently.
- the client 160 can be any type of computing device including a browser (for example to allow individual users to submit queries), or it can be any application program with programmatic access to an application programming interface exposed by the image segmentation system 100 . Additionally, image segmentation system 100 can also expose an application programming interface that allows other applications to directly input properly formed queries.
- Each of the various servers is implemented as server program executing on server-class computer comprising a CPU, memory, network interface, peripheral interfaces, and other well known components.
- the computers themselves preferably run an open-source operating system such as LINUX, have generally high performance CPUs, 1G or more of memory, and 100G or more of disk storage.
- the image search server 110 receives a query from a client 160 over the network 170 and, in response to the client query searches and retrieves a corresponding set of images from the image database 150 .
- the image selection server 140 can also retrieve a set of images from the image database 150 (e.g., based on a list of metadata), without a search request from the client 160 and a corresponding response from the image search server 110 .
- the retrieved collection of images is presented to the image segmentation server 130 .
- the image segmentation server 130 receives as input a collection of images and provides as output a set of segmented images.
- the presentation server 120 then presents the segmented images to the client 160 .
- FIG. 2 is an illustration of the steps involved in image analysis, i.e., generating an image fingerprint from an image, in accordance with one embodiment of the present invention.
- Images 200 represent the images retrieved either by the image search server 110 in response to a search by client 160 or by the image selection server 140 , or by any other selection means, and that are ready for segmentation.
- Image 210 is one image among the collection of images 200 . A similar analysis as described in the following paragraphs is performed on each of the other images 200 in the collection.
- a feature is any programmatically distinguishable characteristic associated with a point on the image that is considered significant based on determining any number of characteristics associated with that point, such as edge, color, intensity, texture, wavelet transforms, corner, or orientation histogram. From among these features at various points or locations of the image, points of interest are determined by identifying those points with a high variation of current features from the surrounding features, i.e., discontinuities in feature characteristics. Points of interest may be detected computationally as discontinuities or differences from surrounding points using any known method such as the Harris or Difference of Gaussian (DoG) method. However, other methods may be used for detecting points of interest. FIG. 2 shows several such points of interest and one such point of interest 230 is highlighted. A collection of matching local features defines an object on an image. An image may contain many such objects.
- DoG Difference of Gaussian
- a patch is a defined region around a point of interest and that contains a salient feature on the image.
- Patch 220 a is a patch defined around the point of interest 230 .
- Image 210 shows several patches 220 defined at varying scales at each point of interest on the image. Patches may have any shape associated with them, i.e., circular, rectangular, etc.
- FIG. 2 illustrates the use of circular patches, as will be used throughout the various embodiments described herein.
- Circular patches are defined by a radius and a pixel offset of the center of the circle from a corner of the image represented in a suitable coordinate system for the image.
- patches may also have an orientation associated with them, the orientation being an angle relative to an initial axis (e.g., horizontal or vertical axis).
- Patch orientation is defined by identification of an intensity gradient with the patch.
- Each patch from among the set of patches 220 defined around the salient features of the image is defined in this manner.
- Patches may be generated using any known method such as scale-invariant feature transform.
- the patches define the salient features of an image.
- an object on the image may be represented by the locus of patches corresponding to salient features of the object.
- Each patch is gridded into a number of blocks.
- FIG. 2 shows patch 220 a having grid of 16 blocks, such as block 240 .
- a block is a sub-section of a patch that helps to quantize patch characteristics such as orientation.
- Patches may be gridded into blocks using any known method such as those that generate log-polar grids or logarithmic spiral grids.
- An object on an image may be represented by a multi-dimensional vector of numerical features.
- Such numerical representations of objects facilitate processing and statistical analyses.
- the numerical values corresponding to features vary with the feature, e.g., for images the feature values may be pixels of the image, for color distributions on an image the feature values may correspond to the Red-Green-Blue (RGB) colorspace or the YIQ colorspace, etc.
- RGB Red-Green-Blue
- YIQ colorspace YIQ colorspace
- FIG. 2 shows 8-bin block feature vectors 250 a , 250 b , 250 c , through 250 n corresponding to each of the n blocks in patch 220 a .
- patch 220 a is gridded into sixteen blocks 240 and each block 240 has an 8-bin block feature vector 250 a , 250 b , 250 c , etc. then the entire patch 220 a has feature values in 128 bins (16 blocks ⁇ 8 bins per block).
- the 8-bin block feature vectors for each of the 16 blocks are stacked or merged to arrive at a 128-bin patch feature vector.
- FIG. 2 illustrates the generation of patch feature vector 260 a from the constituent block feature vectors 250 a , 250 b , etc.
- An image fingerprint is obtained by stacking or merging (e.g., concatenating) patch feature vectors representing all the salient features of an image.
- FIG. 2 illustrates the generation of image fingerprint 270 by stacking or merging patch feature vectors 260 a , 260 b , 260 c , through 260 n .
- each patch contains a sub-fingerprint or a portion of the image fingerprint.
- FIG. 3 is a high-level flow diagram illustrating the steps involved in image segmentation from a collection of images in accordance with one embodiment of the present invention.
- the candidate images that will be subjected to image segmentation are selected 300 from an image collection. Examples of three different images labeled “Sydney Opera House” are shown in FIG. 11A , FIG. 11B , and FIG. 11C . These images may represent a set of images selected from an image collection. Each selected image is pre-segmented 310 using commonly used methods such as those based on color, texture, etc.
- FIG. 11D and FIG. 11E show pre-segmented images of the Sydney Opera House, wherein initial boundaries are drawn based on similar color information.
- the next step involves generating 320 local features at various points of interest on each image. Any number of features may be computed. Given a set of features from image A and a set of features from image B, the next step is to find the correspondence between those features by geometric matching 330 or verification. Given a collection of correctly matched points of interest, together with the initial boundaries using traditional image segmentation techniques, a collection of common regions may be found 340 in each image. The common regions are tabulated and merged 350 into a single region representing a coherent object, such as that of the Sydney Opera House in FIG. 11F .
- FIG. 4 is a high-level block diagram of one embodiment of an image segmentation server 130 .
- the image segmentation server 130 takes a collection of images 400 and proceeds to generate a set of segmented images 470 such that common objects in images within the image collection 400 are clearly identified.
- image segmentation proceeds by first obtaining image information on individual images, comparing the information across a collection of images, refining the information based on the comparison, and using the refined information to segment individual images.
- the tasks of the image segmentation server 130 may be logically separated into two separate stages:
- the Image Analysis Stage 490 comprises the following three modules:
- FIG. 5 is a flow diagram of one embodiment of a feature detection module 410 within the image segmentation server 130 .
- the feature detection module 410 takes as input a collection 400 of one or more images and returns salient features 560 for each image.
- the present invention is not limited to any particular feature or types of features used; the features need only have the characteristic of being derived from the pixel data of the image. This may involve detecting the intensity of pixels 500 , detecting colors for various colorspaces 510 such as RGB and YIQ, detecting edge directions 520 , detecting wavelet transforms 530 , detecting corners 540 , and detecting textures 550 .
- a variety of other features may be computed, some edge-based, some color-based, some intensity-based, and some texture-based.
- Features may include those based on wavelets or corner features. Any number of alternate features including color histograms and shape context may be used.
- FIG. 6 is a flow diagram of one embodiment of a patch generation module 420 within the image segmentation server 130 .
- the patch generation module 420 takes in the salient features 560 for each image and returns a collection of patches 630 for each image.
- the patch generation module 420 first locates 600 the points of interest within the salient features of an image using any known method such as the Laplacian of Gaussian (LoG) method.
- Laplacian of Gaussian (LoG) method may be found by any known method such as comparing neighboring pixels.
- Detailed models are next fitted on data for scale, location, and curvature obtained from the proximity of the candidate points. Points of interest are selected by any known method such as one based on their measures of stability, such as contrast and localization along edges.
- the patch generation module 420 determines 610 an optimal scale for each patch centered on each point of interest.
- several scales or sizes are analyzed for each patch around a point of interest corresponding to a salient feature and the one scale that matches the underlying image patterns is selected.
- the relationship between the change in patch scale with respect to a stability measure is determined, and the scale corresponding to the maximum stability measure is chosen as the scale of the patch.
- maximum stability is reached and as the patch size gets larger the stability drops. Accordingly, each patch has its own scale. Based on the determined scale, a patch of that scale is centered 620 on the point of interest.
- Each patch is defined by a location, a size, and an orientation.
- Orientation may be computed by any known method such as using the scale to select a Gaussian smoothed image with the closest scale that permits scale-invariant computations and computing the orientation based on the Gaussian smoothed image using pixel differences. However, any other orientation assignment is equally applicable.
- circular patches are considered throughout this disclosure, other shapes such as rectangular patches are equally applicable.
- FIG. 7 is a flow diagram of an image fingerprint generation module 430 within the image segmentation server 130 .
- the fingerprint generation module 430 takes a collection of patches 630 for each image and returns a fingerprint 750 for each image.
- Each patch is gridded 700 into a number of blocks. In one embodiment, the number of blocks per patch is invariant. This implies that larger patches have larger blocks.
- a patch has various attributes associated with it including scale, location, and orientation. Other attributes may be applicable.
- a histogram for the feature is computed 710 .
- a block feature vector is determined 720 by aggregating the histograms for each attribute of the block.
- All the block feature vectors corresponding to a patch are stacked or merged 730 to generate a patch feature vector. This procedure is repeated for each patch within the image and finally, all the patch feature vectors are stacked or merged 740 into a single feature vector considered as a fingerprint 750 for the image.
- the Comparison Stage 490 comprises the following three modules:
- FIG. 8 is a flow diagram of a similar image identification module 440 within the image segmentation server 130 .
- the similar image identification module 440 takes the fingerprint 750 for images in the collection 400 of images and returns a set of images 840 with similar fingerprints.
- the similar image identification module 440 retrieves 800 all patch feature vectors from the fingerprint 750 for each of images A and B. Each patch feature vector constitutes a portion of the image fingerprint 750 .
- the Euclidean distance D between patch A in image A and patch B in image B is computes as follows:
- v 1 . . . v n feature values v 1 , v 2 , through to v n corresponding to n-dimensional patch feature vector for patch A in image A, and
- u 1 . . . u n feature values u 1 , u 2 , through to u n corresponding to n-dimensional patch feature vector for patch B in image B.
- the dimensionality of a patch feature vector is determined by the number of blocks the patch is gridded into and further by the number of bins corresponding to each block feature vector, with each number determined empirically.
- all pairwise distances between every patch in image A and every patch in image B are computed 810 . If there are N patches in image A and M patches in image B then a total of N ⁇ M pairwise comparisons of distances are performed between patches in images A and B. In one embodiment, the images A and B are determined to be similar when a minimum number of these N ⁇ M patch-to-patch distances between images A and B are within a threshold distance of each other, as will be further explained below.
- a simple threshold test is applied to identify 820 matching patches in images A and B as follows. For a particular patch in image A, the corresponding best two matches in image B are identified. If the distance between the patch in image A and the best matched patch in image B is significantly lower than the distance between patch in image A and the second best matched patch in image B then there is a distinguishable match between the patch in image A and the best matched patch in image B. Further, for the distinguishable match between the patch in image A and the best matched patch in image B, if the distance between the patches is within a threshold distance, then the two patches are identified 820 as matching patches.
- a transformation between a pair of matching patches may be computed as changes in scale, orientation, and location between the pair of matching patches.
- the transformation is not consistent across all pairs of matching patches then the subset of pairs of matching patches with inconsistent transformations are filtered out and eliminated.
- the bounds for consistency are derived in practice. For example, for orientation a maximum of 30% variance may be acceptable and for scale a maximum of 1.5-fold variance may be acceptable.
- the transformation between pairs of matching patches is computed in terms of differences in corresponding values for scale and orientation.
- the transformation between pairs of matching patches may be computed as a function of scale and/or orientation as in the following example.
- a and c are scaling parameters respectively
- b and d are location parameters respectively
- the location parameter b may be expressed as a function of scaling parameters a and c besides the other location parameter d.
- the similar image identification module 440 identifies a set of images with similar fingerprints as images that contain matching patches.
- FIG. 9 is flow diagram of a geometric matching module 450 within the image segmentation server 130 .
- the geometric matching module 450 takes a set of images 840 with similar fingerprints and returns a set of images 930 with similar objects.
- FIG. 2 illustrates how the image fingerprint 270 is generated by stacking or merging block feature vectors 250 a through 250 n corresponding to each block within patch 220 a .
- images A and B in the set of images 840 share a similar fingerprint. This implies that images A and B share at least one object in common whose fingerprints are similar.
- the patches that constitute the fingerprint in image A and the patches that constitute the fingerprint in image B are next extracted 900 as matching patches.
- Geometric verification examines groups of matching patches across two images. If patch A in image A matches patch B in image B and patch B is much smaller than patch A then it implies that the transformation is from a bigger to smaller object. If all patches in image A are larger than all patches in image B then it implies that the transformation is consistent.
- GTP global transformation parameter
- the GTP metric is calculated using a least squares fit and the images are screened 920 based on a GTP threshold.
- the locations A and B may be represented in screen coordinates.
- the error of the least squares fit is too large, i.e., exceeds a threshold, then the match between the sets of patches in images A and B is rejected.
- the error of the least squares fit is too large, i.e., exceeds a threshold, then outliers in terms of patch locations are rejected and the GTP is estimated a second time, without the outliers.
- the GTP metric is a final filter used to identify the set of images 930 with similar objects.
- FIG. 10 is flow diagram of a common object generation module 460 within the image segmentation server 130 .
- the common object generation module 460 takes a set of images 930 with similar objects and generates segmented images 470 , i.e., images with common objects identified.
- the matching patches extracted by the geometric matching module 450 in different images help define matching boundaries and further help group the matching boundaries into similar and distinguishable objects.
- the matching patches between any two images indicate a very high correlation between several points on the images. Given a collection of correctly matched points, together with initial boundaries using traditional image segmentation techniques, a collection of common regions are identified in the image. Further, a color model is used 1000 to define color boundaries. Segmentation in color is used to group 1010 the color boundaries into similar objects. In one embodiment, these objects are sub-regions or sub-clusters of a larger more coherent object. Information from the original matching patches and hence matching boundaries in the neighborhood of the sub-clusters is used to determine which of the sub-clusters or sub-regions need to be further clustered 1020 into one big cluster to form one coherent object.
- the pseudo-code listed below depicts an embodiment of an algorithm that, (i) selects regions with greater than a threshold number of matched points of interest from among the images in an image collection, and (ii) merges sub-regions that are geometrically adjacent to each other (nearest neighbor) in each image.
- the following steps are presented in sequence:
- Step 0 Pre-segment image I into regions R(I),
- Step 1 Find matched points of interest P(I,J) that occur in images I and J, where I ⁇ J,
- Step 2 Tabulate the score of region R(I) in image I as the number of matched points of interest P(I,J) that are present in region R(I), and
- Step 3 Merge into one region all sub-regions R(I) in image I that exceed a threshold score.
- Step 3 may be implemented as:
- Step 3 Merge into one region all sub-regions R(I) in image I whose score together with those of nearest neighbors exceed a threshold score.
- a Markov model such as Markov Random Fields (MRF) may be used to determine that an unmatched region should be clustered together with the adjacent sub-clusters to form one coherent object.
- MRF Markov Random Fields
- a sufficient color similarity between the matched sub-regions and the unknown region may be used to infer that the regions are likely continuous and merge 1030 them together.
- FIG. 11A , FIG. 11B , and FIG. 11C depict a collection on images on the Sydney Opera House.
- Using color to do the pre-segmentation initially identifies coherent objects such as sections of the sky, the water, clouds, and various parts of the opera house, as illustrated in FIG. 11D and FIG. 11E for different images.
- the opera house may be identified as in FIG. 11F , for example, by merging five sub-regions of the opera house namely the two pillars and the three sections of the opera house, after determining that the sub-regions have one continuous boundary.
- a continuous boundary determination might not be made leading to a gap or a discontinuity in between. If the center section of the opera house did not match between the images with similar objects, then this yields two sub-clusters with a gap in the middle representing the unmatched center section of the opera house.
- a Markov model or color similarity may be used to determine that the unmatched center region should be clustered together with the adjacent sub-clusters to form one coherent object that is the Sydney Opera House.
- FIG. 11F depicts the final segmented image showing the Sydney Opera House as a coherent object.
- the present invention may be implemented in several ways. Pre-segmentation may be done with color, texture, geometric modeling, curvature, and even human labeling. For example, humans can also provide labels to objects of interest.
- An online image labeling game may be used, where a region of an image is labeled by a player, e.g., an image of a cow labeled as “cow”. Such user-contributed labels may be propagated to other matching images and/or objects.
- Alternate embodiments include integration of geometric verification and feature generation such that the global positions of the features are incorporated into the feature values. For example, instead of representing each point of interest as a feature, two points of interest together with their intervening distance, say in pixels, may be represented as a feature.
- the best match between two pairs of features together with their intervening distance may then be determined.
- the sub-regions may be merged in alternate ways including finding the largest bounding box over the matched points of interest or construction a graph using the sub-regions as nodes and their geometric distance as edges.
- the labels may be propagated by examining the number of matched points along the graph.
- Segmentation of images to identify common regions or objects may be used to generate hyperlinks to other images with similar regions or objects.
- an image could store references to links to other similar images.
- Such virtual links to other images may be presented dynamically since images are constantly added to or removed from an image database, which necessitates that the virtual links be refreshed periodically.
- Virtual linking could be achieved by indexing an object in an image, assigning a unique identifier to the object, indexing all images containing a similar object to the unique identifier, and using the unique identifier as a query value.
- an existing image could have the Sydney Opera House object segmented out. Upon receiving a new image, if the segmenting and matching identifies the same object, i.e., the Sydney Opera House, in the new image then a virtual link could be established that couples the existing image and the new image.
- Other applications include identification of product placements in images, Zeitgeist, and hyperlinks within personal image collections.
- Hyperlinks within personal image collections may help locate other images with similar objects either from within the personal collection or from an online image repository, such as Google Images. For example, a user may click on an image containing the Eiffel Tower and retrieve other images containing the Eiffel Tower either from within the personal collection or from the online image repository.
- One possible application is to identify common objects in videos. Persistent objects in videos may be identified and similar objects in other videos may be found on demand.
- Certain aspects of the present invention include process steps and instructions described herein in the form of an algorithm. It should be noted that the process steps and instructions of the present invention could be embodied in software, firmware or hardware, and when embodied in software, could be downloaded to reside on and be operated from different platforms used by real time network operating systems.
- the present invention also relates to an apparatus for performing the operations herein.
- This apparatus may be specially constructed for the required purposes, or it may comprise a general-purpose computer selectively activated or reconfigured by a computer program stored on a computer readable medium that can be accessed by the computer.
- a computer program may be stored in a computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, application specific integrated circuits (ASICs), or any type of media suitable for storing electronic instructions, and each coupled to a computer system bus.
- the computers referred to in the specification may include a single processor or may be architectures employing multiple processor designs for increased computing capability.
- the present invention is well suited to a wide variety of computer network systems over numerous topologies.
- the configuration and management of large networks comprise storage devices and computers that are communicatively coupled to dissimilar computers and storage devices over a network, such as the Internet.
Abstract
Description
where,
ax+b=cx+d
then,
b=(c−a)x+d
Thus the location parameter b may be expressed as a function of scaling parameters a and c besides the other location parameter d.
Ax=B
where,
(Step 0) |
For each image I |
R (I) = pre-segment (I) |
(Step 1) |
For each image I |
For each image J (where J is not I) |
Find matching local features from image I and image J. |
Denote all the matched point pair as P_1(I,J), P_2(I,J), P_3(I,J), etc. |
(Step 2) |
For each image I |
For each region R(I) |
For each image J (where J is not I) |
For each matching point P between image I and image J, |
If (P(I,J) is in region R(I)) |
Increase Score(R(I)) |
(Step 3) |
For each image I |
FinalRegion(I) = empty; |
For each region R(I) |
If (Score(R(I)) > threshold) |
Add region R(I) to FinalRegion(I). |
(Alternate Step 3) |
For each image I |
FinalRegion(I) = empty; |
For each region R(I) |
new_score(R(I)) = 0; |
For each neighboring region to R(I), denoted it as N_R(I) |
new_score(R(I)) = new_score(R(I)) + Score(N_R(I)); |
if (new_score(R(I)) > threshold) |
Add region R(I) to FinalRegion(I) |
Claims (25)
Ax=B
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/858,368 US8200010B1 (en) | 2007-09-20 | 2007-09-20 | Image segmentation by clustering web images |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/858,368 US8200010B1 (en) | 2007-09-20 | 2007-09-20 | Image segmentation by clustering web images |
Publications (1)
Publication Number | Publication Date |
---|---|
US8200010B1 true US8200010B1 (en) | 2012-06-12 |
Family
ID=46177851
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/858,368 Active 2030-06-02 US8200010B1 (en) | 2007-09-20 | 2007-09-20 | Image segmentation by clustering web images |
Country Status (1)
Country | Link |
---|---|
US (1) | US8200010B1 (en) |
Cited By (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20110307425A1 (en) * | 2010-06-11 | 2011-12-15 | Microsoft Corporation | Organizing search results |
US20120113146A1 (en) * | 2010-11-10 | 2012-05-10 | Patrick Michael Virtue | Methods, apparatus and articles of manufacture to combine segmentations of medical diagnostic images |
US20140140625A1 (en) * | 2012-11-16 | 2014-05-22 | Canon Kabushiki Kaisha | Devices, systems, and methods for visual-attribute refinement |
US20150125082A1 (en) * | 2013-11-01 | 2015-05-07 | Samsung Electronics Co., Ltd. | Method and apparatus for generating hierarchical saliency images detection with selective refinement |
US20150234782A1 (en) * | 2014-02-20 | 2015-08-20 | Kabushiki Kaisha Toshiba | Calculation device and method, and computer program product |
WO2015168363A1 (en) * | 2014-04-30 | 2015-11-05 | Siemens Healthcare Diagnostics Inc. | Method and apparatus for processing block to be processed of urine sediment image |
US20150363660A1 (en) * | 2014-06-12 | 2015-12-17 | Asap54.Com Ltd | System for automated segmentation of images through layout classification |
US9268793B2 (en) | 2014-03-12 | 2016-02-23 | Google Inc. | Adjustment of facial image search results |
EP3021237A1 (en) * | 2014-11-17 | 2016-05-18 | Ricoh Company, Ltd. | Information processing apparatus, information processing system, and information processing method |
US10373299B1 (en) * | 2016-05-05 | 2019-08-06 | Digimarc Corporation | Compensating for geometric distortion of images in constrained processing environments |
US10380447B1 (en) * | 2014-11-26 | 2019-08-13 | Google Llc | Providing regions of interest in an image |
US10664515B2 (en) | 2015-05-29 | 2020-05-26 | Microsoft Technology Licensing, Llc | Task-focused search by image |
US10783618B2 (en) | 2016-05-05 | 2020-09-22 | Digimarc Corporation | Compensating for geometric distortion of images in constrained processing environments |
CN114743027A (en) * | 2022-04-11 | 2022-07-12 | 郑州轻工业大学 | Weak supervision learning-guided cooperative significance detection method |
US11449704B2 (en) * | 2020-01-16 | 2022-09-20 | International Business Machines Corporation | Searching in multilevel clustered vector-based data |
Citations (22)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20010038713A1 (en) * | 2000-04-27 | 2001-11-08 | Hiroki Kitagawa | Picture matching processing system |
US20020059584A1 (en) | 2000-09-14 | 2002-05-16 | Ferman Ahmet Mufit | Audiovisual management system |
US6601759B2 (en) | 2000-10-04 | 2003-08-05 | American Express Travel Related Services | System and method for providing feedback in an interactive payment system |
US20030206710A1 (en) | 2001-09-14 | 2003-11-06 | Ferman Ahmet Mufit | Audiovisual management system |
US20040103095A1 (en) * | 2002-11-06 | 2004-05-27 | Canon Kabushiki Kaisha | Hierarchical processing apparatus |
US6744922B1 (en) * | 1999-01-29 | 2004-06-01 | Sony Corporation | Signal processing method and video/voice processing device |
US6766037B1 (en) * | 1998-10-02 | 2004-07-20 | Canon Kabushiki Kaisha | Segmenting moving objects and determining their motion |
US20040267458A1 (en) | 2001-12-21 | 2004-12-30 | Judson Richard S. | Methods for obtaining and using haplotype data |
US20050191731A1 (en) | 1999-06-25 | 2005-09-01 | Judson Richard S. | Methods for obtaining and using haplotype data |
US6956573B1 (en) * | 1996-11-15 | 2005-10-18 | Sarnoff Corporation | Method and apparatus for efficiently representing storing and accessing video information |
US20050232485A1 (en) * | 2000-05-04 | 2005-10-20 | International Business Machines Corporation | Method and apparatus for determining a region in an image based on a user input |
US7095786B1 (en) * | 2003-01-11 | 2006-08-22 | Neo Magic Corp. | Object tracking using adaptive block-size matching along object boundary and frame-skipping when object motion is low |
US7116807B1 (en) | 2000-09-22 | 2006-10-03 | Ge Medical Systems Global Technology Company, Llc | Method and apparatus for linking images and reports at remote view station |
US20060221072A1 (en) * | 2005-02-11 | 2006-10-05 | Se Shuen Y S | 3D imaging system |
US20060249581A1 (en) * | 2005-05-03 | 2006-11-09 | Smith Larry J | Methods and systems for forming images of moving optical codes |
US20060269136A1 (en) * | 2005-05-23 | 2006-11-30 | Nextcode Corporation | Efficient finder patterns and methods for application to 2D machine vision problems |
US20060271398A1 (en) | 2005-05-26 | 2006-11-30 | Jamie Belcastro | Web-based pharmacist |
US20060285755A1 (en) * | 2005-06-16 | 2006-12-21 | Strider Labs, Inc. | System and method for recognition in 2D images using 3D class models |
US20070239603A1 (en) | 2002-01-17 | 2007-10-11 | Miles Lasater | Systems and methods for facilitating a distribution of bank accounts via an educational institution |
US20080027841A1 (en) | 2002-01-16 | 2008-01-31 | Jeff Scott Eder | System for integrating enterprise performance management |
US20090169168A1 (en) * | 2006-01-05 | 2009-07-02 | Nec Corporation | Video Generation Device, Video Generation Method, and Video Generation Program |
US7827191B2 (en) | 2005-12-14 | 2010-11-02 | Microsoft Corporation | Discovering web-based multimedia using search toolbar data |
-
2007
- 2007-09-20 US US11/858,368 patent/US8200010B1/en active Active
Patent Citations (22)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6956573B1 (en) * | 1996-11-15 | 2005-10-18 | Sarnoff Corporation | Method and apparatus for efficiently representing storing and accessing video information |
US6766037B1 (en) * | 1998-10-02 | 2004-07-20 | Canon Kabushiki Kaisha | Segmenting moving objects and determining their motion |
US6744922B1 (en) * | 1999-01-29 | 2004-06-01 | Sony Corporation | Signal processing method and video/voice processing device |
US20050191731A1 (en) | 1999-06-25 | 2005-09-01 | Judson Richard S. | Methods for obtaining and using haplotype data |
US20010038713A1 (en) * | 2000-04-27 | 2001-11-08 | Hiroki Kitagawa | Picture matching processing system |
US20050232485A1 (en) * | 2000-05-04 | 2005-10-20 | International Business Machines Corporation | Method and apparatus for determining a region in an image based on a user input |
US20020059584A1 (en) | 2000-09-14 | 2002-05-16 | Ferman Ahmet Mufit | Audiovisual management system |
US7116807B1 (en) | 2000-09-22 | 2006-10-03 | Ge Medical Systems Global Technology Company, Llc | Method and apparatus for linking images and reports at remote view station |
US6601759B2 (en) | 2000-10-04 | 2003-08-05 | American Express Travel Related Services | System and method for providing feedback in an interactive payment system |
US20030206710A1 (en) | 2001-09-14 | 2003-11-06 | Ferman Ahmet Mufit | Audiovisual management system |
US20040267458A1 (en) | 2001-12-21 | 2004-12-30 | Judson Richard S. | Methods for obtaining and using haplotype data |
US20080027841A1 (en) | 2002-01-16 | 2008-01-31 | Jeff Scott Eder | System for integrating enterprise performance management |
US20070239603A1 (en) | 2002-01-17 | 2007-10-11 | Miles Lasater | Systems and methods for facilitating a distribution of bank accounts via an educational institution |
US20040103095A1 (en) * | 2002-11-06 | 2004-05-27 | Canon Kabushiki Kaisha | Hierarchical processing apparatus |
US7095786B1 (en) * | 2003-01-11 | 2006-08-22 | Neo Magic Corp. | Object tracking using adaptive block-size matching along object boundary and frame-skipping when object motion is low |
US20060221072A1 (en) * | 2005-02-11 | 2006-10-05 | Se Shuen Y S | 3D imaging system |
US20060249581A1 (en) * | 2005-05-03 | 2006-11-09 | Smith Larry J | Methods and systems for forming images of moving optical codes |
US20060269136A1 (en) * | 2005-05-23 | 2006-11-30 | Nextcode Corporation | Efficient finder patterns and methods for application to 2D machine vision problems |
US20060271398A1 (en) | 2005-05-26 | 2006-11-30 | Jamie Belcastro | Web-based pharmacist |
US20060285755A1 (en) * | 2005-06-16 | 2006-12-21 | Strider Labs, Inc. | System and method for recognition in 2D images using 3D class models |
US7827191B2 (en) | 2005-12-14 | 2010-11-02 | Microsoft Corporation | Discovering web-based multimedia using search toolbar data |
US20090169168A1 (en) * | 2006-01-05 | 2009-07-02 | Nec Corporation | Video Generation Device, Video Generation Method, and Video Generation Program |
Non-Patent Citations (22)
Title |
---|
Dalal, N. et al., "Histograms of Oriented Gradients for Human Detection," Proceedings of the 2005 IEEE Computer Society Conference Computer Vision and Pattern Recognition, (CVPR'05) Jun. 20-25, 2005, IEEE, [online], Retrieved from the Internet: . |
Dalal, N. et al., "Histograms of Oriented Gradients for Human Detection," Proceedings of the 2005 IEEE Computer Society Conference Computer Vision and Pattern Recognition, (CVPR'05) Jun. 20-25, 2005, IEEE, [online], Retrieved from the Internet: <URL: http://www.vis.uky.edu/˜dnister/Teaching/CS684Fall2005/HOG.pdf>. |
Dementhon, D. et al., "Image Distance using Hidden Markov Models," 15th International conference Pattern Recognition (ICPR'00), 2000,vol. 2, p. 1347, Barcelona, Spain. [online], Retrieved from the Internet<URL:http://citeseer.ist.psu.edu/cache/papers/cs/22592/http:zSzzSzwww.cfar.umd.eduzSz~danielzS zdaniel-papersfordownloadzSz1169-dementhon.pdf/dementhon00image.pdf>. |
Dementhon, D. et al., "Image Distance using Hidden Markov Models," 15th International conference Pattern Recognition (ICPR'00), 2000,vol. 2, p. 1347, Barcelona, Spain. [online], Retrieved from the Internet<URL:http://citeseer.ist.psu.edu/cache/papers/cs/22592/http:zSzzSzwww.cfar.umd.eduzSz˜danielzS zdaniel—papersfordownloadzSz1169—dementhon.pdf/dementhon00image.pdf>. |
Ke, Y. et al., "PCA-SIFT: A More Distinctive Representation for Local Image Descriptors," Proceedings of Computer Vision and Pattern Recognition, 2004, [online], Retrieved from the Internet:: . |
Ke, Y. et al., "PCA-SIFT: A More Distinctive Representation for Local Image Descriptors," Proceedings of Computer Vision and Pattern Recognition, 2004, [online], Retrieved from the Internet:: <URL:http://www.cs.cmu.edu/˜rahuls/pub/cvpr2004-keypoint-rahuls.pdf >. |
Liu, T. et al., "An Investigation of Practical Approximate Nearest Neighbor Algorithms." [online], Retrieved from the Internet: Proc. Neural Info Processing Systems 2004 . |
Liu, T. et al., "An Investigation of Practical Approximate Nearest Neighbor Algorithms." [online], Retrieved from the Internet: Proc. Neural Info Processing Systems 2004 <URL: http://www.cs.cmu.edu/˜tingliu/my—papers/nips04.pdf>. |
Liu, Z. et al., "Face Detection and Tracking in Video Using Dynamic Programming," ICIP-2000, Vancouver, Canada. [online], Retrieved from the Internet. |
Liu, Z. et al., "Face Detection and Tracking in Video Using Dynamic Programming," ICIP-2000, Vancouver, Canada. [online], Retrieved from the Internet<URL:http://citeseer.ist.psu.edu/liu00face.html>. |
Lowe ("Distinctive image features from scale-invariant keypoints", (accepted for publication in the International Journal of Computer Vision, 2004), 2004, pp. 1-23. * |
Lowe, D., "Distinctive Image Features from Scale-Invariant Keypoints," International Journal of Computer Vision, 2004, pp. 91-110, vol. 60, No. 2 [online], Retrieved from the Internet . |
Lowe, D., "Distinctive Image Features from Scale-Invariant Keypoints," International Journal of Computer Vision, 2004, pp. 91-110, vol. 60, No. 2 [online], Retrieved from the Internet <URL: http://www.cs.ubc.ca/˜lowe/papers/ijcv04.pdf>. |
Mikolajczyk, K. et al., "A Performance Evaluation of Local Descriptors," IEEE Transactions on Pattern Analysis and Machine Intelligence, Oct. 2005, vol. 27, No. 10, pp. 1615-1630 [online], Retrieved from the Internet . |
Mikolajczyk, K. et al., "A Performance Evaluation of Local Descriptors," IEEE Transactions on Pattern Analysis and Machine Intelligence, Oct. 2005, vol. 27, No. 10, pp. 1615-1630 [online], Retrieved from the Internet <URL: http://doi.ieeecomputersociety.org/10.1109/TPAMI.2005.188>. |
Mortensen, E. et al, "A SIFT Descriptor with Global Context," 2005 IEEE Computer Society Conference on Computer Vision and Pattern Recognition (CVPR'05), vol. 1, pp. 184-190, [online], Retrieved from the Internet. |
Mortensen, E. et al, "A SIFT Descriptor with Global Context," 2005 IEEE Computer Society Conference on Computer Vision and Pattern Recognition (CVPR'05), vol. 1, pp. 184-190, [online], Retrieved from the Internet<URL: http://doi.ieeecomputersociety.org/10.1109/CVPR.2005.45>. |
Nister, D. et al., "Scalable Recognition with a Vocabulary Tree," 2006 Proceedings of IEEE Computer Society Conference on Computer Vision and Pattern Recognition-vol. 2 (CVPR'06), Jun. 2006, pp. 2161-2168, [online], Retrieved from the Internet . |
Nister, D. et al., "Scalable Recognition with a Vocabulary Tree," 2006 Proceedings of IEEE Computer Society Conference on Computer Vision and Pattern Recognition—vol. 2 (CVPR'06), Jun. 2006, pp. 2161-2168, [online], Retrieved from the Internet <URL:http://doi.ieeecomputersociety.org/10.1109/CVPR.2006.264>. |
Stauffer, C. et al., "Adaptive Background Mixture Models for Real-Time Tracking," IEEE Computer Society Conference on Computer Vision and Pattern Recognition, Jun. 1999, pp. 246-252. [online], Retrieved from the Internet: . |
Stauffer, C. et al., "Adaptive Background Mixture Models for Real-Time Tracking," IEEE Computer Society Conference on Computer Vision and Pattern Recognition, Jun. 1999, pp. 246-252. [online], Retrieved from the Internet: <URL:http://www.cs.rit.edu/˜rsg/Tracking%20StaufferGrimson.pdf>. |
Su et al. ("Face recognition by feature orientation and feature geometry matching", IEEE Proc. 13th ICPR, vol. 3, Aug. 25-29, 1996, pp. 401-405). * |
Cited By (28)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10691755B2 (en) | 2010-06-11 | 2020-06-23 | Microsoft Technology Licensing, Llc | Organizing search results based upon clustered content |
US9703895B2 (en) * | 2010-06-11 | 2017-07-11 | Microsoft Technology Licensing, Llc | Organizing search results based upon clustered content |
US20110307425A1 (en) * | 2010-06-11 | 2011-12-15 | Microsoft Corporation | Organizing search results |
US20120113146A1 (en) * | 2010-11-10 | 2012-05-10 | Patrick Michael Virtue | Methods, apparatus and articles of manufacture to combine segmentations of medical diagnostic images |
US20140140625A1 (en) * | 2012-11-16 | 2014-05-22 | Canon Kabushiki Kaisha | Devices, systems, and methods for visual-attribute refinement |
US9158970B2 (en) * | 2012-11-16 | 2015-10-13 | Canon Kabushiki Kaisha | Devices, systems, and methods for visual-attribute refinement |
US9311563B2 (en) * | 2013-11-01 | 2016-04-12 | Samsung Electronics Co., Ltd. | Method and apparatus for generating hierarchical saliency images detection with selective refinement |
US20150125082A1 (en) * | 2013-11-01 | 2015-05-07 | Samsung Electronics Co., Ltd. | Method and apparatus for generating hierarchical saliency images detection with selective refinement |
US20150234782A1 (en) * | 2014-02-20 | 2015-08-20 | Kabushiki Kaisha Toshiba | Calculation device and method, and computer program product |
JP2015156136A (en) * | 2014-02-20 | 2015-08-27 | 株式会社東芝 | Calculation device, method and program |
US9268793B2 (en) | 2014-03-12 | 2016-02-23 | Google Inc. | Adjustment of facial image search results |
EP3137894A4 (en) * | 2014-04-30 | 2017-05-10 | Siemens Healthcare Diagnostics Inc. | Method and apparatus for processing block to be processed of urine sediment image |
EP3137894A1 (en) * | 2014-04-30 | 2017-03-08 | Siemens Healthcare Diagnostics Inc. | Method and apparatus for processing block to be processed of urine sediment image |
CN105095921A (en) * | 2014-04-30 | 2015-11-25 | 西门子医疗保健诊断公司 | Method and device used for processing to-be-processed block of urine sediment image |
US10127656B2 (en) | 2014-04-30 | 2018-11-13 | Siemens Healthcare Diagnostics Inc. | Method and apparatus for processing block to be processed of urine sediment image |
CN105095921B (en) * | 2014-04-30 | 2019-04-30 | 西门子医疗保健诊断公司 | Method and apparatus for handling the block to be processed of sediment urinalysis image |
WO2015168363A1 (en) * | 2014-04-30 | 2015-11-05 | Siemens Healthcare Diagnostics Inc. | Method and apparatus for processing block to be processed of urine sediment image |
US20150363660A1 (en) * | 2014-06-12 | 2015-12-17 | Asap54.Com Ltd | System for automated segmentation of images through layout classification |
EP3021237A1 (en) * | 2014-11-17 | 2016-05-18 | Ricoh Company, Ltd. | Information processing apparatus, information processing system, and information processing method |
US9824447B2 (en) | 2014-11-17 | 2017-11-21 | Ricoh Company, Ltd. | Information processing apparatus, information processing system, and information processing method |
US10380447B1 (en) * | 2014-11-26 | 2019-08-13 | Google Llc | Providing regions of interest in an image |
US10664515B2 (en) | 2015-05-29 | 2020-05-26 | Microsoft Technology Licensing, Llc | Task-focused search by image |
US10373299B1 (en) * | 2016-05-05 | 2019-08-06 | Digimarc Corporation | Compensating for geometric distortion of images in constrained processing environments |
US10783618B2 (en) | 2016-05-05 | 2020-09-22 | Digimarc Corporation | Compensating for geometric distortion of images in constrained processing environments |
US11348209B2 (en) | 2016-05-05 | 2022-05-31 | Digimarc Corporation | Compensating for geometric distortion of images in constrained processing environments |
US11449704B2 (en) * | 2020-01-16 | 2022-09-20 | International Business Machines Corporation | Searching in multilevel clustered vector-based data |
CN114743027A (en) * | 2022-04-11 | 2022-07-12 | 郑州轻工业大学 | Weak supervision learning-guided cooperative significance detection method |
CN114743027B (en) * | 2022-04-11 | 2023-01-31 | 郑州轻工业大学 | Weak supervision learning-guided cooperative significance detection method |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8200010B1 (en) | Image segmentation by clustering web images | |
JP5916886B2 (en) | Image indexing based on similarity of image features | |
EP2955645B1 (en) | System for automated segmentation of images through layout classification | |
Aptoula | Remote sensing image retrieval with global morphological texture descriptors | |
Kebapci et al. | Plant image retrieval using color, shape and texture features | |
Penatti et al. | Comparative study of global color and texture descriptors for web image retrieval | |
US9367766B2 (en) | Text line detection in images | |
Creusot et al. | A machine-learning approach to keypoint detection and landmarking on 3D meshes | |
US10430649B2 (en) | Text region detection in digital images using image tag filtering | |
US9141871B2 (en) | Systems, methods, and software implementing affine-invariant feature detection implementing iterative searching of an affine space | |
US20110286628A1 (en) | Systems and methods for object recognition using a large database | |
US20120045132A1 (en) | Method and apparatus for localizing an object within an image | |
Manfredi et al. | A complete system for garment segmentation and color classification | |
CN104850822B (en) | Leaf identification method under simple background based on multi-feature fusion | |
Amiri et al. | Adaptive stopping criterion for top-down segmentation of ALS point clouds in temperate coniferous forests | |
US8027978B2 (en) | Image search method, apparatus, and program | |
Mzoughi et al. | Semantic-based automatic structuring of leaf images for advanced plant species identification | |
Zhao et al. | Learning best views of 3D shapes from sketch contour | |
Liu et al. | Planogram compliance checking using recurring patterns | |
Molina-Giraldo et al. | Image segmentation based on multi-kernel learning and feature relevance analysis | |
Nam et al. | A shape-based retrieval scheme for leaf images | |
CN112445926A (en) | Image retrieval method and device | |
Nam et al. | Elis: An efficient leaf image retrieval system | |
Ahmadyfard et al. | Using relaxation technique for region-based object recognition | |
Papushoy et al. | Visual attention for content based image retrieval |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:JING, YUSHI;BALUJA, SHUMEET;REEL/FRAME:019856/0600Effective date: 20070917 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0405Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
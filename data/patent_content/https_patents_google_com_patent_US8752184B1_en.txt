CROSS REFERENCE TO RELATED APPLICATIONS
This application is related to U.S. patent application Ser. No. 12/059,135, filed Mar. 31, 2008, and titled “Spam Detection for User-Generated Multimedia Items Based on Concept Clustering.”
This application is related to U.S. patent application Ser. No. 12/059,143, filed Mar. 31, 2008, and titled “Spam Detection for User-Generated Multimedia Items Based on Appearance in Popular Queries.”
BACKGROUND
1. Field of Art
The present disclosure relates generally to web-based video display and specifically to software tools and methods for spam detection for online user-generated videos.
2. Description of the Related Art
The sharing of video content on websites has developed a worldwide phenomenon, supported by dozens of websites. On average, hundreds of thousands of new videos are posted every day to various video hosting websites, and this number is increasing, as the tools and opportunities for capturing video become easy to use and more widespread. Many of these video-hosting websites also provide viewers with the ability to search for a video in which they are interest. It is estimated that in 2006, there were over 30 billion views of user generated video content worldwide.
Users who upload videos onto the video hosting websites are able to add descriptions and keywords or tags related to their video; these descriptions and keywords are stored in metadata associated with the video. In some embodiments, comments entered by other users are also stored as metadata. The metadata is indexed, and thus facilitate viewers who can search for videos of interest by entering keywords and phrases into a search engine on the video hosting website. Some users attempt to intentionally misrepresent the content of their video, so that their videos appear more often in the search results, and thus be seen by more viewers. These users employ various methods—sometimes called “spamdexing”—to manipulate the relevancy or prominence of their video in the search results, for example, by stuffing their descriptions with popular words or phrase in order to target these popular queries. This results in making it more difficult for viewers to find videos that actually related to the viewer's interests, as expressed in their keyword searches.
SUMMARY
A system, a method, and various software tools enable a video hosting website to automatically identify posted video items that contain spam in the metadata associated with a respective video item. A spam detection tool for user-generated video items is provided that facilitates the detection of spam in the metadata associated with a video item.
In one aspect, a video item, along with its associated metadata, is stored in a video database. The metadata is examined and a number of unique words in the metadata associated with the video item is determined. If the number of unique words exceeds a predetermined threshold, the video item is flagged or removed. Alternately, the video item remains and portions of metadata identified as spam are used to adjust ranking.
In another aspect, a video item is stored in a video database and the metadata associated with the video items is processed by a concept clustering algorithm to determine the number of concepts in the associated metadata. The determination of whether the item contains spam is based on the number of concepts contained in the metadata. Additionally, the determination of whether the item's metadata contains spam can be based on the combination of unrelated concepts contained in the metadata.
In another aspect, a video item is stored in a video database and a process determines how many times the video item appears as a search result in the most frequent search queries received by the video hosting site. A set of most frequent search queries is established. The frequency of the appearance of the video item as a result of the set of top queries is also determined. When the number or frequency of instances of a given video item exceeds a predetermined threshold, the video item is flagged or removed from the video database. Alternately, the video item remains and portions of metadata identified as spam are used to adjust ranking.
The features and advantages described in the specification are not all inclusive and, in particular, many additional features and advantages will be apparent to one of ordinary skill in the art in view of the drawings, specification, and claims. Moreover, it should be noted that the language used in the specification has been principally selected for readability and instructional purposes, and may not have been selected to delineate or circumscribe the disclosed subject matter.
BRIEF DESCRIPTION OF DRAWINGS
FIG. 1 is a block diagram of a system architecture for providing spam detection for uploaded video content.
FIG. 2 is a flowchart illustrating a method of processing video items to be displayed on a video hosting website.
FIG. 3A is a block diagram illustrating a process for detecting spam on user-generated videos in accordance with one embodiment.
FIG. 3B is a block diagram illustrating a process for detecting spam on user-generated videos in accordance with another embodiment.
The figures depict various embodiments of the present invention for purposes of illustration only. One skilled in the art will readily recognize from the following discussion that alternative embodiments of the instructions and methods illustrated herein may be employed without departing from the principles of the invention described herein.
DETAILED DESCRIPTION
It is to be understood that the figures and descriptions of the present invention have been simplified to illustrate elements that are relevant for a clear understanding of the present invention, while eliminating, for the purpose of clarity, many other elements found in typical communication system and method of using the same. Those of ordinary skill in the art may recognize that other elements and/or steps are desirable and/or required in implementing the present invention. However, because such elements and steps are well known in the art, and because they do not facilitate a better understanding of the present invention, a discussion of such elements and steps is not provided herein. The disclosure herein is directed to all such variations and modifications to such elements and methods known to those skilled in the art.
FIG. 1 is a block diagram of a system architecture in accordance with one embodiment of the present invention. As shown in FIG. 1, a video hosting website 100 includes a front end server 140, a video search server 145, a user database 150, a video server 110, an ingest server 115, a video database 190, a spam filter module 120, and an indexing server 130. Many conventional features, such firewalls, load balancers, application servers, failover servers, site management tools, and so forth are not shown so as not obscure the features of the system. A suitable website 100 for implementation of the system is the YOUTUBE™ website, found at www.youtube.com; other video hosting sites are known as well, and can be adapted to operate according the teaching disclosed herein. It will be understood that the term “web site” represents any method of uploading and downloading content and is not intended to be limited to content uploaded or downloaded via the Internet or the HTTP protocol. In general, functions described in one embodiment as being performed on the server side can also be performed on the client side in other embodiments if appropriate. In addition, the functionality attributed to a particular component can be performed by different or multiple components operating together.
Each of the various servers is implemented as server program executing on server-class computer comprising a CPU, memory, network interface, peripheral interfaces, and other well known components. The computers themselves preferably run an open-source operating system such as LINUX, have generally high performance CPUs, 1G or more of memory, and 100 G or more of disk storage. Of course, other types of computers can be used, and it is expected that as more powerful computers are developed in the future, they can be configured in accordance with the teachings here. The functionality implemented by any of the elements can be provided from computer program products that are stored in tangible computer accessible storage mediums (e.g., RAM, hard disk, or optical/magnetic media).
A client 170 executes a browser 171, and can connect to the front end server 140 via a network 180, which is typically the Internet, but may also be any network, including but not limited to any combination of a LAN, a MAN, a WAN, a mobile, wired or wireless network, a private network, or a virtual private network. While only a single client 170 and browser 171 are shown, it is understood that very large numbers (e.g., millions) of clients are supported and can be in communication with the website 100 at any time. The browser 171 can include a video player (e.g., Flash™ from Adobe Systems, Inc.), or any other player adapted for the video file formats used in the site 100. A user can access a video from the site 100 by browsing a catalog of videos, conducting searches on keywords, reviewing playlists from other users or the system administrator (e.g., collections of videos forming channels), or viewing videos associated with particular user group (e.g., communities). A browser 171 can also access a video file indirectly, via an embedded video 177 that is accessed via an embedded hyperlink in a third party website 175.
Users of clients 170 can also search for videos based on keywords, tags or other metadata. These requests are received as queries by the front end server 140 and provided to the video search server 145, which then searches the video database 190 for videos that satisfy the queries. The video search server 145 supports searching on any fielded data for a video, including its title, description, tags, author, category, and so forth.
Users of the clients 170 and browser 171 can upload content (which can include, for example, video, audio, or a combination of video and audio) to site 100 via network 180. The uploaded content is processed by an ingest server 115, which processes the video for storage in the video database 190. This processing can include format conversion (transcoding), compression, metadata tagging, and other data processing. An uploaded content file is associated with the uploading user, and so the user's account record is updated in the user database 150 as needed.
For purposes of convenience and the description of one embodiment, the uploaded content will be referred to a “videos”, “video files”, or “video items”, but no limitation on the types of content that can be uploaded are intended by this terminology. Each uploaded video is assigned a video identifier (id) when it is processed by the ingest server 115.
The video database 190 is used to store the ingested videos. The video database 190 stores video content and associated metadata. The audio files are can be encoded at .mp3 files at 64 kbps, mono, 22.1 KHz, or better quality (e.g., 128 kbps, stereo, 44.2 KHz). The metadata for each audio files includes an ISRC (or custom identifier), artist, song title, album, label, genre, time length, and optionally geo-restrictions that can be used for data collection or content blocking on a geographic basis.
The spam filter module 120 processes metadata associated with each video stored in the video database 190. Metadata associated with each stored video is analyzed in order to determine whether the video and/or its related description contain spam. Various methods to detect spam are further described below. In some embodiments, the spam filter module 120 is part of the indexing server 130 and prepares the data for a given video to be uploaded.
The indexing server 130 indexes the video and its metadata into an index. In some embodiments, part of the indexing operation is to filter the spam content by the spam filter module 120.
FIG. 2 is a data flow diagram illustrating a method of processing video items to be displayed on a video hosting website in accordance with one aspect. A video item 202 is uploaded by a user on a video hosting website. The video item 202 contains video content and associated metadata, such as a description of the video content, tags, keywords or phrases, and tokens. The video item 202 is uploaded into a video database 190, which includes all of the video content and all of its related metadata.
In some aspects, as shown in FIG. 2, the video item 202 can also stored in a second video database 210 to be processed for spam detection. The video is pre-processed and the associated metadata is processed, wherein the tags, description, title, comments, and other information associated with the video and included in the metadata is combined 220. The metadata is processed for the presence of spam by the spam filter module 120. If it is determined that the video item's metadata contains spam, the video may be removed from the video database 190. If it is determined that the video item's metadata is free of spam, the video is indexed 130. In some aspects, if it is determined that the video item's metadata contains spam, the video is marked for removal at a later time. In other aspects, if it is determined that the video item's metadata contains spam, the video is demoted in rank or marked for demotion at a later time. In some aspects, if it is determined that the video item contains spam, the portion(s) of metadata identified as spam are recorded.
In other aspects, the method includes an indexing server 130 that indexes the video and its metadata into an index and part of the indexing operation is to filter the spam content. In such aspects, the spam filter module 120 is part of the indexing server 130 and is processed for the presence of spam content before being stored in the video database 190.
FIG. 3A is a block diagram illustrating a process for detecting spam on user-generated videos in accordance with one embodiment. As a prior condition, some number of video items are stored in the video database being operated upon (e.g., either database 190 or 210). Accordingly, the metadata for a video item is retrieved 302 from the database. As noted above, a video item includes metadata such as a description of the video item, which may further include one or more tokens, keywords, key phrases or tags. The metadata associated with the video item is analyzed to determine the presence of spam content. A total number of portions (or “windows”) of metadata is determined 304. A portion of the metadata is selected 306 for processing. For example, a portion of the description may be selected. A portion can be the entirety of the metadata itself (following a concatenation of the various items in the metadata), or some smaller window (e.g., 50 characters or 100 words). Within the selected portion, a number of unique words or tokens is identified 308, and this value is stored. Another portion is iteratively selected and processed for spam detection if there are remaining portions of metadata to be processed (310—Yes). This sliding window approach allows for the identification of unique words contained in the retrieved metadata.
In the embodiment illustrated in FIG. 3A, once all the portions have been analyzed, the total number of unique words for all portions is determined 312A. If the number of unique words in all (or alternatively any) of the portions exceeds a certain predetermined number (314A—Yes), then it is determined that the video item has been spammed, the multimedia item is removed from the collection 316 (or marked for subsequent removal in a clean-up process, demoted in rank, or marked for subsequent demotion). This determination is made because in a given normal natural language description, the number of unique words tends to lie within certain ranges, depending on the language. Users who spam a video description may “stuff” long lists of different words into the description, rather than writing normal descriptive sentences.
In accordance with another embodiment, as shown in FIG. 3B, once all the portions have been analyzed, a measure of unique words (MUW) for all portions is determined 312B. The MUW is a function of the number of unique words in the portions. One or more of the following functions can be used for the MUW:
total number of unique words in all portions;
average number of unique words in all portions;
minimum number of unique words in any portion;
percentage of unique words in all portions;
maximum of percentage of unique words in any portion;
ratio of number of unique words in any/all portion(s) to expected number of unique words in the portion(s);
ratio of number of instances of the most frequently occurring unique word to total number of words in any/all portion(s) (e.g., the word “sexy” being 50% of the number of words).
The foregoing are illustrative of the types of MUW functions that can be used, and it is expected that those of skill in the art would readily identify other functions based on number of unique words. The above functions can be normalized for portion length as needed. In addition, multiple different MUW functions can be used in combination.
Accordingly, for each type of MUW function (or combination thereof), an appropriate threshold value is determined based on analysis of the metadata in the video database, as well as known (or collected) statistics of natural language usage. This is based on the observation that in a given normal natural language description, the MUW values tend to range within certain ranges, depending on the language. Users who spam a video description may “stuff” long lists of different words into the description, rather than writing normal descriptive sentences. As a result, the MUW values for such descriptions will be distinctly different from average or expected values. For example, a sample of video items with descriptions that determined to not be spam can be collected and processed to determine the MUW measures as above (e.g., average of the total number of unique words in all portions). From such collected measured, the predetermined thresholds can be established based on statistical analysis of the distribution of MUW values.
For example, the threshold for the total number of unique words in all portions can be set as the value that is a particular percentile value (e.g., 90th), or some multiple of the mean number or some number (e.g., six) standard deviations above the mean number. For example, if the average number of unique words in good (i.e., non-spam) metadata is 20, then the threshold can be established as five times this value, or 100 unique words.
As another example, consider the MUW based on a minimum number of unique words in any one portion. Here, this measure identifies tends to identify portions that have sequences of a single word such as “sex sex sex sex sex sex”. A good natural language description typically does not use large runs (sequences) of individual words such as the above, and thus will rather have some larger number than just one unique word in a given window. Thus, a portion failing to have a minimum number of unique words would be identified as a spam portion of the metadata. This MUW can be set for finding at least one such portion or some minimum number of such portions (e.g., at least three portions failing to have a minimum number of unique words).
Again, those of skill in the art can readily determine the implementation of setting an appropriate threshold for a particular MUW for a particular language.
Return then to FIG. 3B, if the MUW exceeds its associated threshold (314B—Yes), then it is assumed that the video item has been spammed, the multimedia item is removed from the collection 316. The removal can be immediate or the item can marked for subsequent removal in a clean-up process.
Oftentimes, spam words typically appear later in the description rather than at the beginning Therefore, another measure of is the number of words at or near the end of the description of the video item. Here, the presence of spam may be determined by identifying the last new line (i.e., line break) in a metadata description, and then determining the size of the paragraph of text after that. If this last paragraph contains a number of words greater than a certain maximum amount of words (e.g. 400 words or more) then the metadata is identified as spam.
As another alternative measure of spam, spam content detection may also be based on line lengths in the metadata. The average number of words per sentence in good metadata description can be determined, and thus a sentence in given metadata that exceed a threshold (i.e. a sentence that contains greater than 150 words) identifies spam metadata.
As yet another alternative measure of spam, the number of short (e.g., 2 words or less) sentences, each on a distinct line or in a single paragraph, can be determined. Spam metadata is then identified by metadata having a large number or percentage of such short sentences (e.g., more than 10 short sentences; more than 50% of all sentences in the metadata).
This spam detection process is performed on the other video items in the collection of video items in the video database. In some aspects, this process is part of the indexing performed on all the video items stored in the video database. In other words, when a video is uploaded, the video is first stored in a first video database. The video is then processed in the spam filter module before the video is indexed into the video database for search and retrieval by users of the video hosting website.
Reference in the specification to “one embodiment” or to “an embodiment” means that a particular feature, structure, or characteristic described in connection with the embodiments is included in at least one embodiment of the invention. The appearances of the phrase “in one embodiment” in various places in the specification are not necessarily all referring to the same embodiment.
Some portions of the above are presented in terms of methods and symbolic representations of operations on data bits within a computer memory. These descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. A method is here, and generally, conceived to be a self-consistent sequence of steps (instructions) leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical, magnetic or optical signals capable of being stored, transferred, combined, compared and otherwise manipulated. It is convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, characters, terms, numbers, or the like. Furthermore, it is also convenient at times, to refer to certain arrangements of steps requiring physical manipulations of physical quantities as modules or code devices, without loss of generality.
It should be borne in mind, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion, it is appreciated that throughout the description, discussions utilizing terms such as “processing” or “computing” or “calculating” or “determining” or “displaying” or “determining” or the like, refer to the action and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system memories or registers or other such information storage, transmission or display devices.
Certain aspects of the present invention include process steps and instructions described herein in the form of a method. It should be noted that the process steps and instructions of the present invention can be embodied in software, firmware or hardware, and when embodied in software, can be downloaded to reside on and be operated from different platforms used by a variety of operating systems.
The present invention also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes, or it may comprise a general-purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, application specific integrated circuits (ASICs), or any type of media suitable for storing electronic instructions, and each coupled to a computer system bus. Furthermore, the computers referred to in the specification may include a single processor or may be architectures employing multiple processor designs for increased computing capability.
The methods and displays presented herein are not inherently related to any particular computer or other apparatus. Various general-purpose systems may also be used with programs in accordance with the teachings herein, or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear from the description below. In addition, the present invention is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the present invention as described herein, and any references below to specific languages are provided for disclosure of enablement and best mode of the present invention.
While the invention has been particularly shown and described with reference to a preferred embodiment and several alternate embodiments, it will be understood by persons skilled in the relevant art that various changes in form and details can be made therein without departing from the spirit and scope of the invention.
Finally, it should be noted that the language used in the specification has been principally selected for readability and instructional purposes, and may not have been selected to delineate or circumscribe the inventive subject matter. Accordingly, the disclosure of the present invention is intended to be illustrative, but not limiting, of the scope of the invention.
US20160065532A1 - Systems and methods for adaptive associative routing for mobile messaging - Google Patents
Systems and methods for adaptive associative routing for mobile messaging Download PDFInfo
- Publication number
- US20160065532A1 US20160065532A1 US14/601,046 US201514601046A US2016065532A1 US 20160065532 A1 US20160065532 A1 US 20160065532A1 US 201514601046 A US201514601046 A US 201514601046A US 2016065532 A1 US2016065532 A1 US 2016065532A1
- Authority
- US
- United States
- Prior art keywords
- region
- server
- computing device
- connection
- connection information
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L61/00—Network arrangements, protocols or services for addressing or naming
- H04L61/45—Network directories; Name-to-address mapping
-
- H04L61/15—
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L51/00—User-to-user messaging in packet-switching networks, transmitted according to store-and-forward or real-time protocols, e.g. e-mail
- H04L51/21—Monitoring or handling of messages
- H04L51/214—Monitoring or handling of messages using selective forwarding
-
- H04L61/2007—
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L61/00—Network arrangements, protocols or services for addressing or naming
- H04L61/50—Address allocation
- H04L61/5007—Internet protocol [IP] addresses
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/14—Session management
- H04L67/147—Signalling methods or messages providing extensions to protocols defined by standardisation
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/60—Scheduling or organising the servicing of application requests, e.g. requests for application data transmissions using the analysis and optimisation of the required network resources
- H04L67/63—Routing a service request depending on the request content or context
Definitions
- a computing device To receive messages from other computing devices, a computing device establishes a connection to one of many connection servers. After establishing a connection to a connection server, any message intended for that computing device must be routed through the connection server to which the computing device is connected. Accordingly, the connection server propagates this device-to-connection server mapping data globally such that, upon receipt of a message intended for the device, messaging servers can determine the appropriate connection server to send the message. When the computing device loses its connection to the connection server, it must reestablish its connection or connect to a different connection server. After reestablishing a connection or establishing a new connection, there is a blackout period during which the device-to-connection server mapping data is globally propagated, which causes a blackout period during which the device is incapable of receiving messages.
- a method may include assigning a computing device to a region associated with a region server comprising a plurality of region server instances, generating device-to-region mapping, and transmitting a replica of the device-to-region mapping to a messaging server instance and a connection server instance. Further, the method may include receiving local device connection information comprising connection information relating the computing device and the connection server instance and outputting the local device connection information to the plurality of region server instances. The method may also include receiving a message for delivery to the computing device, wherein the message is received from the messaging server instance and, responsive to accessing the local device connection information, transmitting the message to the connection server instance identified by the local device connection information.
- a system may include one or more processors and a memory coupled to the one or more processors and storing instructions that, when executed by the one or more processors, cause the system to: assign a computing device to a region, wherein the region is associated with a region server comprising a plurality of region server instances; generate device-to-region mapping; transmit a replica of the device-to-region mapping to a messaging server instance and a connection server instance; receive local device connection information, wherein the local device connection information comprises connection information relating the computing device and the connection server instance; output the local device connection information to the plurality of region server instances; receive a message for delivery to the computing device, wherein the message is received from the messaging server instance; and, responsive to accessing the local device connection information, transmitting the message to the connection server instance identified by the local device connection information.
- a computer-readable medium may store instructions that, when executed by one or more processors, cause a first computing device to: assign a second computing device to a region, wherein the region is associated with a region server comprising a plurality of region server instances; generate device-to-region mapping; transmit a replica of the device-to-region mapping to a messaging server instance and a connection server instance; receive local device connection information, wherein the local device connection information comprises connection information relating the second computing device and the connection server instance; output the local device connection information to the plurality of region server instances; receive a message for delivery to the second computing device, wherein the message is received from the messaging server instance; and responsive to accessing the local device connection information, transmitting the message to the connection server instance identified by the local device connection information.
- FIG. 1 is a block diagram of an illustrative computer system architecture 100 , according to an example implementation.
- FIG. 2 is an overview of an environment 200 illustrating components that may be included in an adaptive associative routing system for mobile messaging, according to an example implementation.
- FIG. 3 is a sequence diagram illustrating an exemplary message routing process 300 , according to an example implementation.
- FIG. 4 is a flow diagram of a method 400 according to an example implementation.
- a regional assignment module may assign a computing device to a specific geographic region that is associated with a region server cell Likewise, the regional assignment module may record the device-to-region mapping, which details the assignment of the computing device, as identified by a device ID, to the region i.e., the currently assigned region). This device-to-region mapping may then be replicated to associated messaging server cells and connection server cells.
- the connection server may create local device connection information (i.e., device-to-connection server information) to detail the connection of the device to the connection server cell.
- connection server cell may check its local copy of device-to-region mapping to determine computing device's currently assigned region, and, upon determining the appropriate device-to-region assignment, the connection server may transmit local device connection information to the region server cell associated with the currently assigned region.
- the messaging server cell when a messaging server cell receives a message for delivery to the computing device, the messaging server cell can check its local copy of device-to-region mapping to determine the region to which the computing device is assigned (i.e., the currently assigned region). Upon determining the currently assigned region, the messaging server cell may forward the message to the region server cell associated with the currently assigned region. When the region server cell receives the message, it may perform a local lookup of device-to-connection server information to determine the connection server cell to which the device is connected. Accordingly, in one implementation, the region server cell may transmit the message to the appropriate connection server cell such that the message can be delivered to the intended computing device.
- implementations of the disclosed technology may include a computing device with more or less of the components illustrated in FIG. 1 .
- the computing device architecture 100 is provided for example purposes only and does not limit the scope of the various implementations of the present disclosed systems, methods, and computer-readable mediums.
- the computing device architecture 100 of FIG. 1 includes a central processing unit (CPU) 102 , where computer instructions are processed; a display interface 104 that acts as a communication interface and provides functions for rendering video, graphics, images, and texts on the display.
- the display interface 104 may be directly connected to a local display, such as a touch-screen display associated with a mobile computing device.
- the display interface 104 may be configured for providing data, images, and other information for an external/remote display that is not necessarily physically connected to the mobile computing device.
- a desktop monitor may be utilized for minoring graphics and other information that is presented on a mobile computing device.
- the display interface 104 may wirelessly communicate, for example, via a Wi-Fi channel or other available network connection interface 112 to the external/remote display.
- the network connection interface 112 may be configured as a communication interface and may provide functions for rendering video, graphics, images, text, other information, or any combination thereof on the display.
- a communication interface may include a serial port, a parallel port, a general purpose input and output (GPIO) port, a game port, a universal serial bus (USB), a micro-USB port, a high definition multimedia (HDMI) port, a video port, an audio port, a Bluetooth port, a near-field communication (NFC) port, another like communication interface, or any combination thereof.
- the display interface 104 may be operatively coupled to a local display, such as a touch-screen display associated with a mobile device.
- the display interface 104 may be configured to provide video, graphics, images, text, other information, or any combination thereof for an external/remote display that is not necessarily connected to the mobile computing device.
- a desktop monitor may be utilized for mirroring or extending graphical information that may be presented on a mobile device.
- the display interface 104 may wirelessly communicate, for example, via the network connection interface 112 such as a Wi-Fi transceiver to the external/remote display.
- the computing device architecture 100 may include a keyboard interface 106 that provides a communication interface to a keyboard.
- the computing device architecture 100 may include a presence-sensitive display interface 108 for connecting to a presence-sensitive display 107 .
- the presence-sensitive display interface 108 may provide a communication interface to various devices such as a pointing device, a touch screen, a depth camera, etc. which may or may not be associated with a display.
- the computing device architecture 100 may be configured to use an input device via one or more of input/output interfaces (for example, the keyboard interface 106 , the display interface 104 , the presence sensitive display interface 108 , network connection interface 112 , camera interface 114 , sound interface 116 , etc.,) to allow a user to capture information into the computing device architecture 100 .
- the input device may include a mouse, a trackball, a directional pad, a track pad, a touch-verified track pad, a presence-sensitive track pad, a presence-sensitive display, a scroll wheel, a digital camera, a digital video camera, a web camera, a microphone, a sensor, a smartcard, and the like.
- the input device may be integrated with the computing device architecture 100 or may be a separate device.
- the input device may be an accelerometer, a magnetometer, a digital camera, a microphone, and an optical sensor.
- Example implementations of the computing device architecture 100 may include an antenna interface 110 that provides a communication interface to an antenna; a network connection interface 112 that provides a communication interface to a network.
- the display interface 104 may be in communication with the network connection interface 112 , for example, to provide information for display on a remote display that is not directly connected or attached to the system.
- a camera interface 114 is provided that acts as a communication interface and provides functions for capturing digital images from a camera.
- a sound interface 116 is provided as a communication interface for converting sound into electrical signals using a microphone and for converting electrical signals into sound using a speaker.
- a random access memory (RAM) 118 is provided, where computer instructions and data may be stored in a volatile memory device for processing by the CPU 102 .
- the computing device architecture 100 includes a read-only memory (ROM) 120 where invariant low-level system code or data for basic system functions such as basic input and output (I/O), startup, or reception of keystrokes from a keyboard are stored in a non-volatile memory device.
- ROM read-only memory
- I/O basic input and output
- the computing device architecture 100 includes a storage medium 122 or other suitable type of memory (e.g.
- the computing device architecture 100 includes a power source 130 that provides an appropriate alternating current (AC) or direct current (DC) to power components.
- AC alternating current
- DC direct current
- the computing device architecture 100 includes a telephony subsystem 132 that allows the device 100 to transmit and receive sound over a telephone network.
- the constituent devices and the CPU 102 communicate with each other over a bus 134 .
- the CPU 102 has appropriate structure to be a computer processor.
- the CPU 102 may include more than one processing unit.
- the RAM 118 interfaces with the computer bus 134 to provide quick RAM storage to the CPU 102 during the execution of software programs such as the operating system application programs, and device drivers. More specifically, the CPU 102 loads computer-executable process steps from the storage medium 122 or other media into a field of the RAM 118 in order to execute software programs. Data may be stored in the RAM 118 , where the data may be accessed by the computer CPU 102 during execution.
- the device architecture 100 includes at least 128 MB of RAM, and 256 MB of flash memory.
- the storage medium 122 itself may include a number of physical drive units, such as a redundant array of independent disks (RAID), a floppy disk drive, a flash memory, a USB flash drive, an external hard disk drive, thumb drive, pen drive, key drive, a High-Density Digital Versatile Disc (HD-DVD) optical disc drive, an internal hard disk drive, a Blu-Ray optical disc drive, or a Holographic Digital Data Storage (HDDS) optical disc drive, an external mini-dual in-line memory module (DIMM) synchronous dynamic random access memory (SDRAM), or an external micro-DIMM SDRAM.
- RAID redundant array of independent disks
- HD-DVD High-Density Digital Versatile Disc
- HD-DVD High-Density Digital Versatile Disc
- HDDS Holographic Digital Data Storage
- DIMM mini-dual in-line memory module
- SDRAM synchronous dynamic random access memory
- micro-DIMM SDRAM an external micro-DIMM SDRAM
- Such computer readable storage media allow a computing device to access computer-executable process steps, application programs and the like, stored on removable and non-removable memory media, to off-load data from the device or to upload data onto the device.
- a computer program product such as one utilizing a communication system may be tangibly embodied in storage medium 122 , which may comprise a machine-readable storage medium.
- the term computing device may be a CPU, or conceptualized as a CPU (for example, the CPU 102 of FIG. 1 ).
- the computing device may be coupled, connected, and/or in communication with one or more peripheral devices, such as display.
- the term computing device may refer to a mobile computing device such as a smartphone, tablet computer, or smart watch.
- the computing device may output content to its local display and/or speaker(s).
- the computing device may output content to an external display device (e.g., over Wi-Fi) such as a TV or an external computing system.
- a computing device may include any number of hardware and/or software applications that are executed to facilitate any of the operations.
- one or more I/O interfaces may facilitate communication between the computing device and one or more input/output devices.
- a universal serial bus port, a serial port, a disk drive, a CD-ROM drive, and/or one or more user interface devices such as a display, keyboard, keypad, mouse, control panel, touch screen display, microphone, etc.
- the one or more I/O interfaces may be utilized to receive or collect data and/or user instructions from a wide variety of input devices. Received data may be processed by one or more computer processors as desired in various implementations of the disclosed technology and/or stored in one or more memory devices.
- One or more network interfaces may facilitate connection of the computing device inputs and outputs to one or more suitable networks and/or connections; for example, the connections that facilitate communication with any number of sensors associated with the system.
- the one or more network interfaces may further facilitate connection to one or more suitable networks; for example, a local area network, a wide area network, the Internet, a cellular network, a radio frequency network, a Bluetooth enabled network, a Wi-Fi enabled network, a satellite-based network any wired network, any wireless network, etc., for communication with external devices and/or systems.
- FIG. 2 illustrates an overview of an implementation of components that may be included in and/or utilize an adaptive associative routing system for mobile messaging in an exemplary environment 200 .
- messaging server cells 210 and 211 , a region server cell 230 , connection server cells 250 and 251 may be operatively connected through a network 201 , such as the Internet.
- network 201 such as the Internet.
- network transmissions and communications are not necessarily direct and may involve various routers and other hardware.
- mobile users 205 and 207 may use computing devices 206 and 207 (e.g., a mobile phone, laptop computer, tablet computer, or other computing device), respectively, which may be operatively connected to one or more messaging server cells 210 , 211 , and one or more connection server cells 250 , 251 through a network 201 .
- computing devices 206 and 207 may include some or all of the components of the computing device 100 shown in FIG. 1 .
- a messaging server cell 210 , 211 may be configured to receive mobile messages (e.g., email messages, text messages, Google Hangout messages, “tweets,” Facebook messages, and various other mobile messages as will be familiar to one of skill in the art) sent from a computing device (e.g., 206 ) and intended for another computing device (e.g., 208 ).
- a connection server cell 250 , 251 may be configured to establish connections with mobile devices (e.g., 206 , 208 ) and deliver messages intended for those mobile devices.
- a region server cell 230 may be configured to receive messages from a messaging server cell 210 , 211 and to forward those messages to a connection server cell 250 , 251 .
- server cells may comprise a database and a plurality of server instances.
- messaging server cell 210 may comprise a database 214 and server instances 216 , 218 , and 220 .
- messaging server cell 211 may be similarly configured as it may comprise a database 215 and messaging server instances 217 , 219 , and 221 .
- FIG. 2 shows that
- a connection server cell 250 , 251 may comprise a database ( 254 , 255 respectively) and connection server instances ( 256 , 258 , 260 and 257 , 259 , 261 , respectively).
- a region server cell 230 may comprise a database 234 and region server instances 236 , 238 , and 240 .
- an environment 200 for utilizing an adaptive associative routing system for mobile messaging may comprise more or less components than shown in FIG. 2 .
- the environment 200 may comprise twenty messaging server cells (e.g., 210 , 211 ), each of which may comprise thousands of messaging server instances (e.g., 216 , 217 ).
- the environment 200 may comprise ten region server cells (e.g., 230 ), each of which may comprise hundreds of messaging server instances (e.g., 236 , 238 ).
- the environment 200 may comprise twenty connection server cells (e.g., 250 , 251 ), each of which may comprise thousands of connection server instances (e.g., 256 , 257 ).
- the messaging server cells e.g., 210 , 211
- region server cells e.g., 230
- connection server cells 250 , 251
- such a distributed configuration of messaging server cells, region server cells, and connection server cells may allow billions of computing devices (e.g., 206 , 208 ) to send and receive messages.
- an environment 200 for utilizing an adaptive associative routing system for mobile messaging may comprise a region assignment module 235 , which may include some or all of the components of the computing device 100 shown in FIG. 1 .
- a region assignment module 235 may be included in a region server cell 200 .
- a region assignment module 235 may be implemented as a stand-alone component.
- a region assignment module 235 may assign a computing device (e.g. 206 , 208 ) to a particular region, which is generally associated with a particular region server cell (e.g., 230 ).
- region assignment module 235 may assign computing device 208 to the region associated with region server cell 230 , which results in a device-to-region mapping.
- the region server cell 230 and the various region server instances (e.g., 236 , 238 , 240 ) may maintain copies of this device-to-region mapping.
- the region assignment module 230 may replicate the device-to-region mapping such that the device-to-region mapping can be provided to the various messaging server cells (e.g., 210 , 211 ), messaging server instances (e.g., 216 , 218 ), connection server cells (e.g., 250 , 251 ), and connection server instances (e.g., 256 , 258 ).
- messaging server cells e.g., 210 , 211
- messaging server instances e.g., 216 , 218
- connection server cells e.g., 250 , 251
- connection server instances e.g., 256 , 258
- pre-assigning a computing device to a particular region (and an associated region server cell) and providing the associated device-to-region mapping to the various messaging server cells and connection server cells (and their associated server instances) negates the necessity to globally replicating device connection information each and every time a device establishes a connection with a connection server cell (or connection server instance), thus preventing blackout periods that occur while the device connection information is propagated.
- FIG. 3 is a sequence diagram illustrating an exemplary message routing process 300 , according to an example implementation.
- a region assignment module 235 may assign a computing device to a particular region, which is generally associated with a particular region server cell. For example, as shown in FIG. 3 , a region assignment module 235 may assign a computing device 206 to the region associated with region server cell 230 , at 301 . Accordingly, in one implementation, the assignment may yield device-to-region mapping associated with the computing device 206 , which may be received and maintained by a messaging server instance 236 associated with the region server cell 230 , at 303 .
- the messaging server instance 236 may replicate the device-to-region mapping and transmit the mapping to the messaging server instance 216 of messaging server cell 210 , at 305 , and the connection server instance 256 of connection server cell 250 , at 307 .
- pre-assigning a device to a particular region and providing this device-to-region mapping to the messaging server cells (e.g., 210 ) and connection server cells (e.g., 250 ) negates the necessity to globally propagate local device connection information every time the computing device 206 establishes a connection to a connection server cell 250 or connection server instance 256 .
- the connection server instance 256 may establish a connection with the computing device 206 , thus creating local device connection information (alternatively referred to as “device-to-connection-server information”). Accordingly, at 311 , the connection server instance 256 may look up the device-to-region mapping associated with the computing device 206 to determine the region to which the computing device 206 is assigned, according to one implementation. Additionally, upon determining the region to which the computing device 206 is assigned, the connection server instance 256 may forward the local device connection information to an arbitrary region server instance (e.g., the region server instance 236 ), at 313 .
- an arbitrary region server instance e.g., the region server instance 236
- the local device connection information received by the region server instance 236 may be propagated to the other region server instances (e.g., 238 , 240 ) comprised in the region server cell 230 associated with the region to which the computing device 206 is assigned.
- region server instances e.g., 238 , 240
- a messaging server instance 216 may receive a message from a computing device 208 intended for computing device 206 , at 315 .
- the messaging server instance 216 may utilize the device-to-region mapping received at 305 to determine the region to which computing device 206 (i.e., the computing device to which the message is intended) is assigned.
- the messaging server instance 216 may forward the message to an arbitrary region server instance in the region server cell associated with the region. For example, as shown in FIG. 3 , at 319 , the messaging server instance 216 may forward the message to region server instance 236 .
- the region server instance 236 may utilize local device connection information to determine the connection server cell (e.g., 250 ) or connection server instance (e.g., 256 ) to which the intended computing device 206 is currently connected, at 321 , according to one implementation and as shown in FIG. 3 .
- the region server instance 236 may transmit (i.e., route) the message to the connection server instance, at 323 , which the region server instance 256 can then deliver to the computing device 206 , et 325 .
- connection server instance 256 it is advantageous to have close geographic proximity between the connection server instance 256 to which the computing device 206 connects and the region (and associated region server cell 230 ) to which the computing device 206 is assigned.
- close geographic proximity between the region server cell 230 and connection server cell 250 generally reduces the network distance of routing a message from the messaging server instance (e.g., 216 ) to the appropriate connection server instance (e.g., 256 ).
- a region assignment module 235 may analyze historical device-to-connection-server information (e.g., IP address information), and, based on the general geographic locality of device connections, the region assignment module 235 may predict which region (and associated region server cell (e.g., 230 )) will provide the best proximity to the connection server instance (e.g., 256 ) to which the computing device 206 is most likely to connect. Further, in example implementations, a region assignment module 235 may also utilize load balancing information before assigning a computing device 206 to a region.
- IP address information e.g., IP address information
- a server cell e.g., connection server cell 250
- server instance e.g., connection server instance 256
- a computing device connected to a connection server instance 261 may receive and transmit a message intended for a computing device connected to a connection server instance 257 or 258 .
- a computing device connected to a messaging server instance 220 may receive and transmit a message intended for a computing device connected to a messaging server instance 218 or 219 .
- the region assignment module 235 may be configured to perform an assignment at defined intervals (e.g., once per day, hourly, upon certain events, or other intervals).
- the resultant device-to-region mapping information can be replicated to other messaging server cells ( 210 , 211 ) and connection server cells ( 250 , 251 ) according to the consistent defined intervals.
- consistently updating the device-to-region mapping information at consistent, predetermined intervals helps to eliminate blackout periods that occur when a device establishes a connection to a connection server instance. Because the messaging server instances know the region to which the computing device 206 is assigned, there is no need to globally propagate local device connection information to all region server cells and messaging server cells. Instead, propagation of local device connection information can be limited to the specific region server cell (e.g., 230 ) associated with the region to which the computing device 206 is assigned.
- a region assignment module 235 may be configured to provide device-to-region mapping information that includes region assignment information for a computing device 206 both before and after a predetermined time. For example, in one implementation, a region assignment module 235 may provide device-to-region information that specifies that the device 206 will be assigned to a first region before time T 1 and to a second region after time T 1 . Essentially, in one implementation, a region assignment module 235 may make both current and future region assignments.
- messaging server cells e.g., 210 , 211
- messaging server instances e.g., 216 , 217 , 218
- connection server cells e.g., 250 , 251
- connection server instances e.g., 256 , 257 , 258
- aspects of the present disclosure may also be helpful in making near-instantaneous determinations as to whether a particular computing device 206 is currently connected to a connection server instance (e.g., 256 ).
- aspects of the present disclosure may provide computing device connection information in response to requests (i.e., connectivity queries) as to whether a particular computing device is currently connected to a connection server instance.
- a region server instance 236 may provide local device connection information in response to a connectivity query. Such information may be helpful in determining status information regarding a computing device 206 that may be helpful or interesting to other computing device users looking to communicate with the user of computing device 206 .
- FIG. 4 is a flow diagram of a method 400 according to an example implementation of the disclosed technology.
- the method 400 begins at block 402 , where a computing device is as assigned to a region that is associated with a region server that comprises a plurality of region server instances.
- a region assignment module may be configured to assign computing devices to regions.
- device-to-region mapping may be generated to reflect the assignment of the computing device to the region.
- a region assignment module may be configured to generate device-to-region mapping.
- a replica of the device-to-region mapping may be transmitted to a messaging server instance and a connection server instance, according to one implementation. As will be understood and appreciated, the device-to-region mapping may be transmitted to additional messaging server instances and connection server instances.
- local device connection information may be received that relates the computing device to a connection server instance.
- the local device connection information may be received by an arbitrary region server instance.
- the arbitrary region server instance may transmit the local device connection information to the other region server instances in the region server.
- an arbitrary region server instance may receive a message for delivery to the computing device, according to one implementation. For example, the message may be received from a messaging server instance.
- the region server instance may transmit the message to the appropriate connection server instance responsive to accessing local device connection information to determine which connection server instance the computing device is currently connected.
- These computer-executable program instructions may be loaded onto a general-purpose computer, a special-purpose computer, a processor, or other programmable data processing apparatus to produce a particular machine, such that the instructions that execute on the computer, processor, or other programmable data processing apparatus create means for implementing one or more functions specified in the flow diagram block or blocks.
- These computer program instructions may also be stored in a computer-readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner, such that the instructions stored in the computer-readable memory produce an article of manufacture including instruction means that implement one or more functions specified in the flow diagram block or blocks.
- Implementations of the disclosed technology may provide for a computer program product, comprising a computer-usable medium having a computer-readable program code or program instructions embodied therein, said computer-readable program code adapted to be executed to implement one or more functions specified in the flow diagram block or blocks.
- the computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational elements or steps to be performed on the computer or other programmable apparatus to produce a computer-implemented process such that the instructions that execute on the computer or other programmable apparatus provide elements or steps for implementing the functions specified in the flow diagram block or blocks.
- blocks of the block diagrams and flow diagrams support combinations of means for performing the specified functions, combinations of elements or steps for performing the specified functions and program instruction means for performing the specified functions. It will also be understood that each block of the block diagrams and flow diagrams, and combinations of blocks in the block diagrams and flow diagrams, can be implemented by special-purpose, hardware-based computer systems that perform the specified functions, elements or steps, or combinations of special-purpose hardware and computer instructions.
Abstract
Description
- This application claims priority and the benefit under 35 U.S.C. §119(e) of U.S. Provisional Patent Application No. 62/044,162, which was filed on Aug. 29, 2014; the entire contents and substance of which are hereby incorporated by reference.
- To receive messages from other computing devices, a computing device establishes a connection to one of many connection servers. After establishing a connection to a connection server, any message intended for that computing device must be routed through the connection server to which the computing device is connected. Accordingly, the connection server propagates this device-to-connection server mapping data globally such that, upon receipt of a message intended for the device, messaging servers can determine the appropriate connection server to send the message. When the computing device loses its connection to the connection server, it must reestablish its connection or connect to a different connection server. After reestablishing a connection or establishing a new connection, there is a blackout period during which the device-to-connection server mapping data is globally propagated, which causes a blackout period during which the device is incapable of receiving messages.
- Some or all of the above needs may be addressed by certain implementations of the disclosed technology. According to an example implementation, a method is provided. The method may include assigning a computing device to a region associated with a region server comprising a plurality of region server instances, generating device-to-region mapping, and transmitting a replica of the device-to-region mapping to a messaging server instance and a connection server instance. Further, the method may include receiving local device connection information comprising connection information relating the computing device and the connection server instance and outputting the local device connection information to the plurality of region server instances. The method may also include receiving a message for delivery to the computing device, wherein the message is received from the messaging server instance and, responsive to accessing the local device connection information, transmitting the message to the connection server instance identified by the local device connection information.
- According to an example implementation, a system is provided. The system may include one or more processors and a memory coupled to the one or more processors and storing instructions that, when executed by the one or more processors, cause the system to: assign a computing device to a region, wherein the region is associated with a region server comprising a plurality of region server instances; generate device-to-region mapping; transmit a replica of the device-to-region mapping to a messaging server instance and a connection server instance; receive local device connection information, wherein the local device connection information comprises connection information relating the computing device and the connection server instance; output the local device connection information to the plurality of region server instances; receive a message for delivery to the computing device, wherein the message is received from the messaging server instance; and, responsive to accessing the local device connection information, transmitting the message to the connection server instance identified by the local device connection information.
- According to an example implementation, a computer-readable medium is provided. The computer-readable medium may store instructions that, when executed by one or more processors, cause a first computing device to: assign a second computing device to a region, wherein the region is associated with a region server comprising a plurality of region server instances; generate device-to-region mapping; transmit a replica of the device-to-region mapping to a messaging server instance and a connection server instance; receive local device connection information, wherein the local device connection information comprises connection information relating the second computing device and the connection server instance; output the local device connection information to the plurality of region server instances; receive a message for delivery to the second computing device, wherein the message is received from the messaging server instance; and responsive to accessing the local device connection information, transmitting the message to the connection server instance identified by the local device connection information.
- Other implementations, features, and aspects of the disclosed technology are described in detail herein and are considered a part of the claimed disclosed technology. Other implementations, features, and aspects can be understood with reference to the following detailed description, accompanying drawings, and claims.
- Reference will now be made to the accompanying figures and flow diagrams, which are not necessarily drawn to scale, and wherein:
-
FIG. 1 is a block diagram of an illustrativecomputer system architecture 100, according to an example implementation. -
FIG. 2 is an overview of anenvironment 200 illustrating components that may be included in an adaptive associative routing system for mobile messaging, according to an example implementation. -
FIG. 3 is a sequence diagram illustrating an exemplarymessage routing process 300, according to an example implementation. -
FIG. 4 is a flow diagram of amethod 400 according to an example implementation. - In some implementations of the disclosed technology, a regional assignment module may assign a computing device to a specific geographic region that is associated with a region server cell Likewise, the regional assignment module may record the device-to-region mapping, which details the assignment of the computing device, as identified by a device ID, to the region i.e., the currently assigned region). This device-to-region mapping may then be replicated to associated messaging server cells and connection server cells. In some implementations, when a computing device connects to a connection server cell, the connection server may create local device connection information (i.e., device-to-connection server information) to detail the connection of the device to the connection server cell. Further, in some implementations, the connection server cell may check its local copy of device-to-region mapping to determine computing device's currently assigned region, and, upon determining the appropriate device-to-region assignment, the connection server may transmit local device connection information to the region server cell associated with the currently assigned region.
- Accordingly, in one implementation, when a messaging server cell receives a message for delivery to the computing device, the messaging server cell can check its local copy of device-to-region mapping to determine the region to which the computing device is assigned (i.e., the currently assigned region). Upon determining the currently assigned region, the messaging server cell may forward the message to the region server cell associated with the currently assigned region. When the region server cell receives the message, it may perform a local lookup of device-to-connection server information to determine the connection server cell to which the device is connected. Accordingly, in one implementation, the region server cell may transmit the message to the appropriate connection server cell such that the message can be delivered to the intended computing device.
- Some implementations of the disclosed technology will be described more fully hereinafter with reference to the accompanying drawings. This disclosed technology may, however, be embodied in many different forms and should not be construed as limited to the implementations set forth herein.
- In the following description, numerous specific details are set forth. It is to be understood, however, that implementations of the disclosed technology may be practiced without these specific details. In other instances, well-known methods, structures and techniques have not been shown in detail in order not to obscure an understanding of this description. References to “one implementation,” “an implementation,” “example implementation,” “various implementations,” etc., indicate that the implementation(s) of the disclosed technology so described may include a particular feature, structure, or characteristic, but not every implementation necessarily includes the particular feature, structure, or characteristic. Further, repeated use of the phrase “in one implementation” does not necessarily refer to the same implementation, although it may.
- Throughout the specification and the claims, the following terms take at least the meanings explicitly associated herein, unless the context clearly dictates otherwise. The term “connected” means that one function, feature, structure, or characteristic is directly joined to or in communication with another function, feature, structure, or characteristic. The term “coupled” means that one function, feature, structure, or characteristic is directly or indirectly joined to or in communication with another function, feature, structure, or characteristic. The term “or” is intended to mean an inclusive “or.” Further, the terms “a,” “an,” and “the” are intended to mean one or more unless specified otherwise or clear from the context to be directed to a singular form.
- As used herein, unless otherwise specified the use of the ordinal adjectives “first,” “second,” “third,” etc., to describe a common object, merely indicate that different instances of like objects are being referred to, and are not intended to imply that the objects so described must be in a given sequence, either temporally, spatially, in ranking, or in any other manner.
- Example implementations of the disclosed technology will now be described with reference to the accompanying figures.
- As desired, implementations of the disclosed technology may include a computing device with more or less of the components illustrated in
FIG. 1 . It will be understood that thecomputing device architecture 100 is provided for example purposes only and does not limit the scope of the various implementations of the present disclosed systems, methods, and computer-readable mediums. - The
computing device architecture 100 ofFIG. 1 includes a central processing unit (CPU) 102, where computer instructions are processed; adisplay interface 104 that acts as a communication interface and provides functions for rendering video, graphics, images, and texts on the display. In certain example implementations of the disclosed technology, thedisplay interface 104 may be directly connected to a local display, such as a touch-screen display associated with a mobile computing device. In another example implementation, thedisplay interface 104 may be configured for providing data, images, and other information for an external/remote display that is not necessarily physically connected to the mobile computing device. For example, a desktop monitor may be utilized for minoring graphics and other information that is presented on a mobile computing device. In certain example implementations, thedisplay interface 104 may wirelessly communicate, for example, via a Wi-Fi channel or other availablenetwork connection interface 112 to the external/remote display. - In an example implementation, the
network connection interface 112 may be configured as a communication interface and may provide functions for rendering video, graphics, images, text, other information, or any combination thereof on the display. In one example, a communication interface may include a serial port, a parallel port, a general purpose input and output (GPIO) port, a game port, a universal serial bus (USB), a micro-USB port, a high definition multimedia (HDMI) port, a video port, an audio port, a Bluetooth port, a near-field communication (NFC) port, another like communication interface, or any combination thereof. In one example, thedisplay interface 104 may be operatively coupled to a local display, such as a touch-screen display associated with a mobile device. In another example, thedisplay interface 104 may be configured to provide video, graphics, images, text, other information, or any combination thereof for an external/remote display that is not necessarily connected to the mobile computing device. In one example, a desktop monitor may be utilized for mirroring or extending graphical information that may be presented on a mobile device. In another example, thedisplay interface 104 may wirelessly communicate, for example, via thenetwork connection interface 112 such as a Wi-Fi transceiver to the external/remote display. - The
computing device architecture 100 may include a keyboard interface 106 that provides a communication interface to a keyboard. In one example implementation, thecomputing device architecture 100 may include a presence-sensitive display interface 108 for connecting to a presence-sensitive display 107. According to certain example implementations of the disclosed technology, the presence-sensitive display interface 108 may provide a communication interface to various devices such as a pointing device, a touch screen, a depth camera, etc. which may or may not be associated with a display. - The
computing device architecture 100 may be configured to use an input device via one or more of input/output interfaces (for example, the keyboard interface 106, thedisplay interface 104, the presencesensitive display interface 108,network connection interface 112,camera interface 114, sound interface 116, etc.,) to allow a user to capture information into thecomputing device architecture 100. The input device may include a mouse, a trackball, a directional pad, a track pad, a touch-verified track pad, a presence-sensitive track pad, a presence-sensitive display, a scroll wheel, a digital camera, a digital video camera, a web camera, a microphone, a sensor, a smartcard, and the like. Additionally, the input device may be integrated with thecomputing device architecture 100 or may be a separate device. For example, the input device may be an accelerometer, a magnetometer, a digital camera, a microphone, and an optical sensor. - Example implementations of the
computing device architecture 100 may include anantenna interface 110 that provides a communication interface to an antenna; anetwork connection interface 112 that provides a communication interface to a network. As mentioned above, thedisplay interface 104 may be in communication with thenetwork connection interface 112, for example, to provide information for display on a remote display that is not directly connected or attached to the system. In certain implementations, acamera interface 114 is provided that acts as a communication interface and provides functions for capturing digital images from a camera. In certain implementations, a sound interface 116 is provided as a communication interface for converting sound into electrical signals using a microphone and for converting electrical signals into sound using a speaker. According to example implementations, a random access memory (RAM) 118 is provided, where computer instructions and data may be stored in a volatile memory device for processing by theCPU 102. - According to an example implementation, the
computing device architecture 100 includes a read-only memory (ROM) 120 where invariant low-level system code or data for basic system functions such as basic input and output (I/O), startup, or reception of keystrokes from a keyboard are stored in a non-volatile memory device. According to an example implementation, thecomputing device architecture 100 includes astorage medium 122 or other suitable type of memory (e.g. such as RAM, ROM, programmable read-only memory (PROM), erasable programmable read-only memory (EPROM), electrically erasable programmable read-only memory (EEPROM), magnetic disks, optical disks, floppy disks, hard disks, removable cartridges, flash drives), where the files include anoperating system 124, application programs 126 (including, for example, a web browser application, a widget or gadget engine, and or other applications, as necessary) anddata files 128 are stored. According to an example implementation, thecomputing device architecture 100 includes apower source 130 that provides an appropriate alternating current (AC) or direct current (DC) to power components. - According to an example implementation, the
computing device architecture 100 includes atelephony subsystem 132 that allows thedevice 100 to transmit and receive sound over a telephone network. The constituent devices and theCPU 102 communicate with each other over a bus 134. - According to an example implementation, the
CPU 102 has appropriate structure to be a computer processor. In one arrangement, theCPU 102 may include more than one processing unit. The RAM 118 interfaces with the computer bus 134 to provide quick RAM storage to theCPU 102 during the execution of software programs such as the operating system application programs, and device drivers. More specifically, theCPU 102 loads computer-executable process steps from thestorage medium 122 or other media into a field of the RAM 118 in order to execute software programs. Data may be stored in the RAM 118, where the data may be accessed by thecomputer CPU 102 during execution. In one example configuration, thedevice architecture 100 includes at least 128 MB of RAM, and 256 MB of flash memory. - The
storage medium 122 itself may include a number of physical drive units, such as a redundant array of independent disks (RAID), a floppy disk drive, a flash memory, a USB flash drive, an external hard disk drive, thumb drive, pen drive, key drive, a High-Density Digital Versatile Disc (HD-DVD) optical disc drive, an internal hard disk drive, a Blu-Ray optical disc drive, or a Holographic Digital Data Storage (HDDS) optical disc drive, an external mini-dual in-line memory module (DIMM) synchronous dynamic random access memory (SDRAM), or an external micro-DIMM SDRAM. Such computer readable storage media allow a computing device to access computer-executable process steps, application programs and the like, stored on removable and non-removable memory media, to off-load data from the device or to upload data onto the device. A computer program product, such as one utilizing a communication system may be tangibly embodied instorage medium 122, which may comprise a machine-readable storage medium. - According to one example implementation, the term computing device, as used herein, may be a CPU, or conceptualized as a CPU (for example, the
CPU 102 ofFIG. 1 ). In this example implementation, the computing device (CPU) may be coupled, connected, and/or in communication with one or more peripheral devices, such as display. In another example implementation, the term computing device, as used herein, may refer to a mobile computing device such as a smartphone, tablet computer, or smart watch. In this example implementation, the computing device may output content to its local display and/or speaker(s). In another example implementation, the computing device may output content to an external display device (e.g., over Wi-Fi) such as a TV or an external computing system. - In example implementations of the disclosed technology, a computing device may include any number of hardware and/or software applications that are executed to facilitate any of the operations. In example implementations, one or more I/O interfaces may facilitate communication between the computing device and one or more input/output devices. For example, a universal serial bus port, a serial port, a disk drive, a CD-ROM drive, and/or one or more user interface devices, such as a display, keyboard, keypad, mouse, control panel, touch screen display, microphone, etc., may facilitate user interaction with the computing device. The one or more I/O interfaces may be utilized to receive or collect data and/or user instructions from a wide variety of input devices. Received data may be processed by one or more computer processors as desired in various implementations of the disclosed technology and/or stored in one or more memory devices.
- One or more network interfaces may facilitate connection of the computing device inputs and outputs to one or more suitable networks and/or connections; for example, the connections that facilitate communication with any number of sensors associated with the system. The one or more network interfaces may further facilitate connection to one or more suitable networks; for example, a local area network, a wide area network, the Internet, a cellular network, a radio frequency network, a Bluetooth enabled network, a Wi-Fi enabled network, a satellite-based network any wired network, any wireless network, etc., for communication with external devices and/or systems.
-
FIG. 2 illustrates an overview of an implementation of components that may be included in and/or utilize an adaptive associative routing system for mobile messaging in anexemplary environment 200. According to one implementation,messaging server cells region server cell 230,connection server cells network 201, such as the Internet. Though not shown, it will be understood by one of skill in the art that network transmissions and communications are not necessarily direct and may involve various routers and other hardware. Further,mobile users computing devices 206 and 207 (e.g., a mobile phone, laptop computer, tablet computer, or other computing device), respectively, which may be operatively connected to one or moremessaging server cells connection server cells network 201. As will be understood by one of skill in the art,messaging server cells region server cell 230,connection server cells computing devices computing device 100 shown inFIG. 1 . - In one implementation, a
messaging server cell 210, 211 (alternatively, a messaging server) may be configured to receive mobile messages (e.g., email messages, text messages, Google Hangout messages, “tweets,” Facebook messages, and various other mobile messages as will be familiar to one of skill in the art) sent from a computing device (e.g., 206) and intended for another computing device (e.g., 208). Further, in one implementation, aconnection server cell 250, 251 (alternatively, a connection server) may be configured to establish connections with mobile devices (e.g., 206, 208) and deliver messages intended for those mobile devices. Also, in one implementation, a region server cell 230 (alternatively, a region server) may be configured to receive messages from amessaging server cell connection server cell - According to one implementation, server cells (e.g.,
messaging server cell 210,region server cell 230, connection server cell 250) may comprise a database and a plurality of server instances. For example, as shown inFIG. 2 ,messaging server cell 210 may comprise adatabase 214 andserver instances FIG. 2 ,messaging server cell 211 may be similarly configured as it may comprise adatabase 215 andmessaging server instances FIG. 2 , in one implementation, aconnection server cell region server cell 230 may comprise adatabase 234 andregion server instances - As will be understood, an
environment 200 for utilizing an adaptive associative routing system for mobile messaging may comprise more or less components than shown inFIG. 2 . For example, in certain implementations, theenvironment 200 may comprise twenty messaging server cells (e.g., 210, 211), each of which may comprise thousands of messaging server instances (e.g., 216, 217). Likewise, in certain implementations, theenvironment 200 may comprise ten region server cells (e.g., 230), each of which may comprise hundreds of messaging server instances (e.g., 236, 238). Further, in certain implementations, theenvironment 200 may comprise twenty connection server cells (e.g., 250, 251), each of which may comprise thousands of connection server instances (e.g., 256, 257). In various implementations, the messaging server cells (e.g., 210, 211), region server cells (e.g., 230), and connection server cells (250, 251) may be distributed across the globe. As will be understood and appreciated, such a distributed configuration of messaging server cells, region server cells, and connection server cells may allow billions of computing devices (e.g., 206, 208) to send and receive messages. - As shown in
FIG. 2 , anenvironment 200 for utilizing an adaptive associative routing system for mobile messaging may comprise aregion assignment module 235, which may include some or all of the components of thecomputing device 100 shown inFIG. 1 . In one implementation, aregion assignment module 235 may be included in aregion server cell 200. Likewise, aregion assignment module 235 may be implemented as a stand-alone component. In an example implementation, aregion assignment module 235 may assign a computing device (e.g. 206, 208) to a particular region, which is generally associated with a particular region server cell (e.g., 230). So, for example, in one implementation,region assignment module 235 may assigncomputing device 208 to the region associated withregion server cell 230, which results in a device-to-region mapping. In such an example, theregion server cell 230, and the various region server instances (e.g., 236, 238, 240) may maintain copies of this device-to-region mapping. Further, in such an example, theregion assignment module 230 may replicate the device-to-region mapping such that the device-to-region mapping can be provided to the various messaging server cells (e.g., 210, 211), messaging server instances (e.g., 216, 218), connection server cells (e.g., 250, 251), and connection server instances (e.g., 256, 258). As will be understood and appreciated, pre-assigning a computing device to a particular region (and an associated region server cell) and providing the associated device-to-region mapping to the various messaging server cells and connection server cells (and their associated server instances) negates the necessity to globally replicating device connection information each and every time a device establishes a connection with a connection server cell (or connection server instance), thus preventing blackout periods that occur while the device connection information is propagated. -
FIG. 3 is a sequence diagram illustrating an exemplarymessage routing process 300, according to an example implementation. As discussed, in certain implementations, aregion assignment module 235 may assign a computing device to a particular region, which is generally associated with a particular region server cell. For example, as shown inFIG. 3 , aregion assignment module 235 may assign acomputing device 206 to the region associated withregion server cell 230, at 301. Accordingly, in one implementation, the assignment may yield device-to-region mapping associated with thecomputing device 206, which may be received and maintained by amessaging server instance 236 associated with theregion server cell 230, at 303. Further, in one implementation, themessaging server instance 236 may replicate the device-to-region mapping and transmit the mapping to themessaging server instance 216 ofmessaging server cell 210, at 305, and theconnection server instance 256 ofconnection server cell 250, at 307. As discussed, pre-assigning a device to a particular region and providing this device-to-region mapping to the messaging server cells (e.g., 210) and connection server cells (e.g., 250) negates the necessity to globally propagate local device connection information every time thecomputing device 206 establishes a connection to aconnection server cell 250 orconnection server instance 256. - In one implementation and as shown in
FIG. 3 , at 309, theconnection server instance 256 may establish a connection with thecomputing device 206, thus creating local device connection information (alternatively referred to as “device-to-connection-server information”). Accordingly, at 311, theconnection server instance 256 may look up the device-to-region mapping associated with thecomputing device 206 to determine the region to which thecomputing device 206 is assigned, according to one implementation. Additionally, upon determining the region to which thecomputing device 206 is assigned, theconnection server instance 256 may forward the local device connection information to an arbitrary region server instance (e.g., the region server instance 236), at 313. In an example implementation, the local device connection information received by theregion server instance 236 may be propagated to the other region server instances (e.g., 238, 240) comprised in theregion server cell 230 associated with the region to which thecomputing device 206 is assigned. - As further shown in
FIG. 3 , in an example implementation, amessaging server instance 216 may receive a message from acomputing device 208 intended forcomputing device 206, at 315. In one implementation, at 317, themessaging server instance 216 may utilize the device-to-region mapping received at 305 to determine the region to which computing device 206 (i.e., the computing device to which the message is intended) is assigned. In one implementation, after determining the proper region assignment, themessaging server instance 216 may forward the message to an arbitrary region server instance in the region server cell associated with the region. For example, as shown inFIG. 3 , at 319, themessaging server instance 216 may forward the message toregion server instance 236. When theregion server instance 236 receives the message, the region server instance may utilize local device connection information to determine the connection server cell (e.g., 250) or connection server instance (e.g., 256) to which the intendedcomputing device 206 is currently connected, at 321, according to one implementation and as shown inFIG. 3 . After determining the appropriate connection server instance (i.e., 256), in one implementation theregion server instance 236 may transmit (i.e., route) the message to the connection server instance, at 323, which theregion server instance 256 can then deliver to thecomputing device 206, et 325. - Generally, it is advantageous to have close geographic proximity between the
connection server instance 256 to which thecomputing device 206 connects and the region (and associated region server cell 230) to which thecomputing device 206 is assigned. As will be understood and appreciated, close geographic proximity between theregion server cell 230 andconnection server cell 250 generally reduces the network distance of routing a message from the messaging server instance (e.g., 216) to the appropriate connection server instance (e.g., 256). In one implementation, aregion assignment module 235 may analyze historical device-to-connection-server information (e.g., IP address information), and, based on the general geographic locality of device connections, theregion assignment module 235 may predict which region (and associated region server cell (e.g., 230)) will provide the best proximity to the connection server instance (e.g., 256) to which thecomputing device 206 is most likely to connect. Further, in example implementations, aregion assignment module 235 may also utilize load balancing information before assigning acomputing device 206 to a region. - The foregoing describes a scenario in which a
messaging server instance 216 receives and subsequently transmits a message that is ultimately routed to aconnection server instance 256 for delivery to the intendedcomputing device 208. It will be understood by one of ordinary skill in the art that in an example embodiment, a server cell (e.g., connection server cell 250) or server instance (e.g., connection server instance 256) may be configured to be send and receive messages. Accordingly, in one configuration, a computing device connected to aconnection server instance 261 may receive and transmit a message intended for a computing device connected to aconnection server instance messaging server instance 220 may receive and transmit a message intended for a computing device connected to amessaging server instance - In various implementations, the
region assignment module 235 may be configured to perform an assignment at defined intervals (e.g., once per day, hourly, upon certain events, or other intervals). In such implementations, the resultant device-to-region mapping information can be replicated to other messaging server cells (210, 211) and connection server cells (250, 251) according to the consistent defined intervals. As will be understood and appreciated, consistently updating the device-to-region mapping information at consistent, predetermined intervals helps to eliminate blackout periods that occur when a device establishes a connection to a connection server instance. Because the messaging server instances know the region to which thecomputing device 206 is assigned, there is no need to globally propagate local device connection information to all region server cells and messaging server cells. Instead, propagation of local device connection information can be limited to the specific region server cell (e.g., 230) associated with the region to which thecomputing device 206 is assigned. - In one implementation, a
region assignment module 235 may be configured to provide device-to-region mapping information that includes region assignment information for acomputing device 206 both before and after a predetermined time. For example, in one implementation, aregion assignment module 235 may provide device-to-region information that specifies that thedevice 206 will be assigned to a first region before time T1 and to a second region after time T1. Essentially, in one implementation, aregion assignment module 235 may make both current and future region assignments. Accordingly, because all messaging server cells (e.g., 210, 211), messaging server instances (e.g., 216, 217, 218), connection server cells (e.g., 250, 251), and connection server instances (256, 257, 258) have knowledge of the time at which thecomputing device 206 is to be reassigned, there is a seamless and near simultaneous transition period and essentially no risk for blackout periods. - Aspects of the present disclosure may also be helpful in making near-instantaneous determinations as to whether a
particular computing device 206 is currently connected to a connection server instance (e.g., 256). Put differently, aspects of the present disclosure may provide computing device connection information in response to requests (i.e., connectivity queries) as to whether a particular computing device is currently connected to a connection server instance. For example, aregion server instance 236 may provide local device connection information in response to a connectivity query. Such information may be helpful in determining status information regarding acomputing device 206 that may be helpful or interesting to other computing device users looking to communicate with the user ofcomputing device 206. -
FIG. 4 is a flow diagram of amethod 400 according to an example implementation of the disclosed technology. Themethod 400 begins atblock 402, where a computing device is as assigned to a region that is associated with a region server that comprises a plurality of region server instances. In one implementation, a region assignment module may be configured to assign computing devices to regions. According to one implementation, at 404, device-to-region mapping may be generated to reflect the assignment of the computing device to the region. In certain implementations, a region assignment module may be configured to generate device-to-region mapping. At 406, a replica of the device-to-region mapping may be transmitted to a messaging server instance and a connection server instance, according to one implementation. As will be understood and appreciated, the device-to-region mapping may be transmitted to additional messaging server instances and connection server instances. - In one implementation, at 408, local device connection information may be received that relates the computing device to a connection server instance. In one implementation, the local device connection information may be received by an arbitrary region server instance. At 410, according to one implementation, the arbitrary region server instance may transmit the local device connection information to the other region server instances in the region server. Further, at 412, an arbitrary region server instance may receive a message for delivery to the computing device, according to one implementation. For example, the message may be received from a messaging server instance. At 414, in one implementation, the region server instance may transmit the message to the appropriate connection server instance responsive to accessing local device connection information to determine which connection server instance the computing device is currently connected.
- Certain implementations of the disclosed technology are described above with reference to block and flow diagrams of systems and methods and/or computer program products according to example implementations of the disclosed technology. It will be understood that one or more blocks of the block diagrams and flow diagrams, and combinations of blocks in the block diagrams and flow diagrams, respectively, can be implemented by computer-executable program instructions. Likewise, some blocks of the block diagrams and flow diagrams may not necessarily need to be performed in the order presented, or may not necessarily need to be performed at all, according to some implementations of the disclosed technology.
- These computer-executable program instructions may be loaded onto a general-purpose computer, a special-purpose computer, a processor, or other programmable data processing apparatus to produce a particular machine, such that the instructions that execute on the computer, processor, or other programmable data processing apparatus create means for implementing one or more functions specified in the flow diagram block or blocks. These computer program instructions may also be stored in a computer-readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner, such that the instructions stored in the computer-readable memory produce an article of manufacture including instruction means that implement one or more functions specified in the flow diagram block or blocks.
- Implementations of the disclosed technology may provide for a computer program product, comprising a computer-usable medium having a computer-readable program code or program instructions embodied therein, said computer-readable program code adapted to be executed to implement one or more functions specified in the flow diagram block or blocks. The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational elements or steps to be performed on the computer or other programmable apparatus to produce a computer-implemented process such that the instructions that execute on the computer or other programmable apparatus provide elements or steps for implementing the functions specified in the flow diagram block or blocks.
- Accordingly, blocks of the block diagrams and flow diagrams support combinations of means for performing the specified functions, combinations of elements or steps for performing the specified functions and program instruction means for performing the specified functions. It will also be understood that each block of the block diagrams and flow diagrams, and combinations of blocks in the block diagrams and flow diagrams, can be implemented by special-purpose, hardware-based computer systems that perform the specified functions, elements or steps, or combinations of special-purpose hardware and computer instructions.
- While certain implementations of the disclosed technology have been described in connection with what is presently considered to be the most practical and various implementations, it is to be understood that the disclosed technology is not to be limited to the disclosed implementations, but on the contrary, is intended to cover various modifications and equivalent arrangements included within the scope of the appended claims. Although specific terms are employed herein, they are used in a generic and descriptive sense only and not for purposes of limitation.
- This written description uses examples to disclose certain implementations of the disclosed technology, including the best mode, and also to enable any person of ordinary skill to practice certain implementations of the disclosed technology, including making and using any devices or systems and performing any incorporated methods. The patentable scope of certain implementations of the disclosed technology is defined in the claims, and may include other examples that occur to those of ordinary skill Such other examples are intended to be within the scope of the claims if they have structural elements that do not differ from the literal language of the claims, or if they include equivalent structural elements with insubstantial differences from the literal language of the claims.
Claims (21)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/601,046 US10404809B2 (en) | 2014-08-29 | 2015-01-20 | Systems and methods for adaptive associative routing for mobile messaging |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201462044162P | 2014-08-29 | 2014-08-29 | |
US14/601,046 US10404809B2 (en) | 2014-08-29 | 2015-01-20 | Systems and methods for adaptive associative routing for mobile messaging |
Publications (2)
Publication Number | Publication Date |
---|---|
US20160065532A1 true US20160065532A1 (en) | 2016-03-03 |
US10404809B2 US10404809B2 (en) | 2019-09-03 |
Family
ID=55403881
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/601,046 Active 2037-07-03 US10404809B2 (en) | 2014-08-29 | 2015-01-20 | Systems and methods for adaptive associative routing for mobile messaging |
Country Status (1)
Country | Link |
---|---|
US (1) | US10404809B2 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20210105580A1 (en) * | 2019-08-02 | 2021-04-08 | Tile, Inc. | Access Point Queries for Tracking Device Smart Alerts |
Citations (21)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5956521A (en) * | 1995-06-26 | 1999-09-21 | Wang; Kevin Kuan-Pin | System for universal electronic mail delivery where messaging devices are notified using a particular dialing, ringing, and hanging-up pattern |
US20030065252A1 (en) * | 2001-10-02 | 2003-04-03 | Fischer-Zoth Gmbh | Portable handheld hearing screening device and method with internet access and link to hearing screening database |
US6643685B1 (en) * | 1999-05-06 | 2003-11-04 | International Business Machines Corporation | Method of creating unique user aliases for users in a communications network |
US6697354B1 (en) * | 1998-03-05 | 2004-02-24 | 3Com Corporation | Method and system for distributed network address translation for mobile network devices |
US20070281694A1 (en) * | 2006-06-02 | 2007-12-06 | Lin Yuhui J | Selection of a preferred foreign wireless network |
US20080071925A1 (en) * | 2006-09-18 | 2008-03-20 | Akamai Technologies, Inc. | Global load balancing across mirrored data centers |
US20090005035A1 (en) * | 2004-01-13 | 2009-01-01 | Xianli Hu | System and a Method of Realizing Subscriber's Foreign Roaming Service Through the Router |
US7609668B1 (en) * | 2000-12-28 | 2009-10-27 | Cisco Technology, Inc. | Distribution of packets to foreign agents using multicast protocols |
US20100318680A1 (en) * | 2009-06-15 | 2010-12-16 | Daniel Isaac S | Unified address enhanced locator system and method |
US20110081906A1 (en) * | 2003-02-18 | 2011-04-07 | Roamware, Inc. | METHOD AND SYSTEM FOR PROVIDING MOBILE COMMUNICATION CORRESPONDING TO MULTIPLE MSISDNs ASSOCIATED WITH A SINGLE IMSI |
US20110213634A1 (en) * | 2010-03-01 | 2011-09-01 | Business Equipment Information Services, Inc. | System and method for effective workload distribution for service technicians |
US20120023153A1 (en) * | 2010-07-21 | 2012-01-26 | Anestis Karasaridis | Methods and apparatus to transmit a request to server via domain system forwarding |
US20130339519A1 (en) * | 2012-06-19 | 2013-12-19 | Edgecast Networks, Inc. | Systems and Methods for Performing Localized Server-Side Monitoring in a Content Delivery Network |
US20140031035A1 (en) * | 2009-09-22 | 2014-01-30 | Tru-Phone Limited | Subscriber Identification Management Broker for Fixed/Mobile Networks |
US20140280996A1 (en) * | 2013-03-15 | 2014-09-18 | Opanga Networks, Inc. | Pre-delivery of content to devices |
US20150019294A1 (en) * | 2013-07-10 | 2015-01-15 | PlacelQ, Inc. | Projecting Lower-Geographic-Resolution Data onto Higher-Geographic-Resolution Areas |
US20150032905A1 (en) * | 2013-07-24 | 2015-01-29 | Qualcomm Incorporated | Method and system for associating internet protocol (ip) address, media access control (mac) address and location for a user device |
US20150035876A1 (en) * | 2013-08-05 | 2015-02-05 | Brass Roots Technologies, LLC | Independent color stretch in color-sequential displays |
US20150098554A1 (en) * | 2011-12-02 | 2015-04-09 | Telecommunication Systems, Inc. | Enabling location determination of user device originating emergency service call |
US20150163260A1 (en) * | 2013-12-10 | 2015-06-11 | Google Inc. | Systems and Methods for Messaging Multiple Devices |
US20150302305A1 (en) * | 2014-04-21 | 2015-10-22 | The Climate Corporation | Generating an agriculture prescription |
-
2015
- 2015-01-20 US US14/601,046 patent/US10404809B2/en active Active
Patent Citations (21)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5956521A (en) * | 1995-06-26 | 1999-09-21 | Wang; Kevin Kuan-Pin | System for universal electronic mail delivery where messaging devices are notified using a particular dialing, ringing, and hanging-up pattern |
US6697354B1 (en) * | 1998-03-05 | 2004-02-24 | 3Com Corporation | Method and system for distributed network address translation for mobile network devices |
US6643685B1 (en) * | 1999-05-06 | 2003-11-04 | International Business Machines Corporation | Method of creating unique user aliases for users in a communications network |
US7609668B1 (en) * | 2000-12-28 | 2009-10-27 | Cisco Technology, Inc. | Distribution of packets to foreign agents using multicast protocols |
US20030065252A1 (en) * | 2001-10-02 | 2003-04-03 | Fischer-Zoth Gmbh | Portable handheld hearing screening device and method with internet access and link to hearing screening database |
US20110081906A1 (en) * | 2003-02-18 | 2011-04-07 | Roamware, Inc. | METHOD AND SYSTEM FOR PROVIDING MOBILE COMMUNICATION CORRESPONDING TO MULTIPLE MSISDNs ASSOCIATED WITH A SINGLE IMSI |
US20090005035A1 (en) * | 2004-01-13 | 2009-01-01 | Xianli Hu | System and a Method of Realizing Subscriber's Foreign Roaming Service Through the Router |
US20070281694A1 (en) * | 2006-06-02 | 2007-12-06 | Lin Yuhui J | Selection of a preferred foreign wireless network |
US20080071925A1 (en) * | 2006-09-18 | 2008-03-20 | Akamai Technologies, Inc. | Global load balancing across mirrored data centers |
US20100318680A1 (en) * | 2009-06-15 | 2010-12-16 | Daniel Isaac S | Unified address enhanced locator system and method |
US20140031035A1 (en) * | 2009-09-22 | 2014-01-30 | Tru-Phone Limited | Subscriber Identification Management Broker for Fixed/Mobile Networks |
US20110213634A1 (en) * | 2010-03-01 | 2011-09-01 | Business Equipment Information Services, Inc. | System and method for effective workload distribution for service technicians |
US20120023153A1 (en) * | 2010-07-21 | 2012-01-26 | Anestis Karasaridis | Methods and apparatus to transmit a request to server via domain system forwarding |
US20150098554A1 (en) * | 2011-12-02 | 2015-04-09 | Telecommunication Systems, Inc. | Enabling location determination of user device originating emergency service call |
US20130339519A1 (en) * | 2012-06-19 | 2013-12-19 | Edgecast Networks, Inc. | Systems and Methods for Performing Localized Server-Side Monitoring in a Content Delivery Network |
US20140280996A1 (en) * | 2013-03-15 | 2014-09-18 | Opanga Networks, Inc. | Pre-delivery of content to devices |
US20150019294A1 (en) * | 2013-07-10 | 2015-01-15 | PlacelQ, Inc. | Projecting Lower-Geographic-Resolution Data onto Higher-Geographic-Resolution Areas |
US20150032905A1 (en) * | 2013-07-24 | 2015-01-29 | Qualcomm Incorporated | Method and system for associating internet protocol (ip) address, media access control (mac) address and location for a user device |
US20150035876A1 (en) * | 2013-08-05 | 2015-02-05 | Brass Roots Technologies, LLC | Independent color stretch in color-sequential displays |
US20150163260A1 (en) * | 2013-12-10 | 2015-06-11 | Google Inc. | Systems and Methods for Messaging Multiple Devices |
US20150302305A1 (en) * | 2014-04-21 | 2015-10-22 | The Climate Corporation | Generating an agriculture prescription |
Cited By (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20210105580A1 (en) * | 2019-08-02 | 2021-04-08 | Tile, Inc. | Access Point Queries for Tracking Device Smart Alerts |
US11943680B2 (en) * | 2019-08-02 | 2024-03-26 | Tile, Inc. | Access point queries for tracking device smart alerts |
Also Published As
Publication number | Publication date |
---|---|
US10404809B2 (en) | 2019-09-03 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
JP6615269B2 (en) | Mobile push notification | |
US20140269643A1 (en) | Systems and methods for geo-fencing | |
WO2015131748A1 (en) | Method and apparatus for pushing target information | |
CA2910334A1 (en) | Auto-calendaring | |
US20200167429A1 (en) | Efficient use of word embeddings for text classification | |
CN111061740B (en) | Data synchronization method, device and storage medium | |
US8984078B2 (en) | Systems and methods for device-to-cloud message delivery | |
US20140104138A1 (en) | Systems and methods for automatic switching of display modes | |
WO2019047737A1 (en) | Transaction processing method, apparatus, and system, and electronic device | |
US10929412B2 (en) | Sharing content based on extracted topics | |
US9684657B2 (en) | Dynamically updating content in a live presentation | |
US8417222B1 (en) | Systems and methods for delivering messages based on a device radio status | |
US20150006669A1 (en) | Systems and methods for directing information flow | |
US10404809B2 (en) | Systems and methods for adaptive associative routing for mobile messaging | |
US20150163260A1 (en) | Systems and Methods for Messaging Multiple Devices | |
CN104408056B (en) | Data processing method and device | |
CN114928620B (en) | User information synchronization method, apparatus, device, storage medium, and program product | |
US20180268042A1 (en) | Entity-based dynamic database lockdown | |
US11240195B2 (en) | Systems and methods for direct dispatching of mobile messages | |
US10783886B2 (en) | Cognitive agent disambiguation | |
US20160337145A1 (en) | Intent-broadcast systems and methods | |
JP2021525922A (en) | Systems and methods for initializing recommended systems based on remote profiles | |
US9198193B1 (en) | Systems and methods for controlling network connection overhead associated with mobile device communications | |
US20170041438A1 (en) | Online data management | |
CN115208762B (en) | Configuration updating method, device, configuration server and computer readable storage medium |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:MANOLACHE, COSTIN;JHANB, SUBIR;DAYAN, TAL;AND OTHERS;SIGNING DATES FROM 20140904 TO 20140924;REEL/FRAME:034763/0614 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044695/0115Effective date: 20170929 |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NOTICE OF ALLOWANCE MAILED -- APPLICATION RECEIVED IN OFFICE OF PUBLICATIONS |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: PUBLICATIONS -- ISSUE FEE PAYMENT VERIFIED |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
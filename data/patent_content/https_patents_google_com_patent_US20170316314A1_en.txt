US20170316314A1 - Automatic optimization of content items - Google Patents
Automatic optimization of content items Download PDFInfo
- Publication number
- US20170316314A1 US20170316314A1 US13/974,665 US201313974665A US2017316314A1 US 20170316314 A1 US20170316314 A1 US 20170316314A1 US 201313974665 A US201313974665 A US 201313974665A US 2017316314 A1 US2017316314 A1 US 2017316314A1
- Authority
- US
- United States
- Prior art keywords
- content item
- content
- given
- attributes
- subsystem
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N5/00—Computing arrangements using knowledge-based models
- G06N5/02—Knowledge representation; Symbolic representation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/958—Organisation or management of web site content, e.g. publishing, maintaining pages or automatic linking
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/205—Parsing
- G06F40/211—Syntactic parsing, e.g. based on context-free grammar [CFG] or unification grammars
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/279—Recognition of textual entities
- G06F40/284—Lexical analysis, e.g. tokenisation or collocates
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/30—Semantic analysis
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/06—Buying, selling or leasing transactions
- G06Q30/08—Auctions
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/40—Information retrieval; Database structures therefor; File system structures therefor of multimedia data, e.g. slideshows comprising image and additional audio data
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/93—Document management systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N5/00—Computing arrangements using knowledge-based models
- G06N5/04—Inference or reasoning models
Definitions
- This specification relates to information presentation.
- the Internet provides access to a wide variety of resources. For example, video and/or audio files, as well as webpages for particular subjects or particular news articles, are accessible over the Internet. Access to these resources presents opportunities for other content (e.g., advertisements) to be provided with the resources.
- a webpage can include slots in which content can be presented. These slots can be defined in the webpage or defined for presentation with a webpage, for example, along with search results.
- Content slots can be allocated to content sponsors as part of a reservation system, or in an auction.
- content sponsors can provide bids specifying amounts that the sponsors are respectively willing to pay for presentation of their content.
- an auction can be run, and the slots can be allocated to sponsors according, among other things, to their bids and/or the relevance of the sponsored content to content presented on a page hosting the slot or a request that is received for the sponsored content.
- the content can be provided to a user device such as a personal computer (PC), a smartphone, a laptop computer, a tablet computer, or some other user device.
- PC personal computer
- smartphone a smartphone
- laptop computer a laptop computer
- tablet computer or some other user device.
- user interactions with the content may be more (or less) likely to occur.
- An attribute inference subsystem analyzes an inventory of content items and tags each item with one or more attributes that may affect performance and that are related to attribute types selected from a group comprising content concepts, format, included content, semantics or syntax, wherein the attributes can be identified by the attribute inference subsystem or by a sponsor of a respective content item.
- An analysis subsystem evaluates a log of served content items that have been tagged to identify salient attributes related to one or more performance metrics and inferences related to the identified salient attributes.
- An experiment subsystem automatically creates one or more experiments to substantiate the inferences related to the identified salient attributes.
- a processing subsystem delivers results based on substantiated inferences developed after evaluation of experimentation data derived by the experiment subsystem.
- the attribute inference subsystem can evaluate each content item to determine concepts included in the content item, presentation attributes including format and layout attributes, and included content, and the attribute inference system can use natural language or machine learning processing to evaluate syntax and/or semantic content of the content item.
- the system can further include a content item creation subsystem that creates content items for inclusion in inventory, the content item creation subsystem receiving results from the processing subsystem and using the results when creating content items.
- the content item creation subsystem can be a manual system and receives content items from content sponsors and wherein the content item creation subsystem is configured to receive results from the processing subsystem and make suggestions to content sponsors about proposed content items for inclusion in a campaign.
- One or more of the one or more performance metrics can be selected by a content sponsor associated with a content item in the inventory.
- the processing subsystem can develop the results including identifying recommendations for changes to one or more content items in inventory, and provide the recommendations to a content sponsor or to the content item creation subsystem such that manual or automatic changes to the one or more content items in inventory can be made based on the recommendations.
- the system can further include: a content item serving subsystem that serves content items from inventory responsive to received requests for content, the content item serving system including a selection tool for identifying eligible content items from inventory to serve responsive to each received request, wherein the content item serving system is adapted to receive as an input from the experiment subsystem identification of experiment parameters for an experiment including at least one selection criterion that describes an attribute that is related to a performance inference associated with the experiment, the selection tool uses the selection criteria for a portion of traffic that is served in addition to any other selection criteria that may be associated with a given request, such that experiment results can be determined and evaluated by the experiment subsystem on that portion of traffic so as to substantiate or repudiate the associated performance inference.
- a content item serving subsystem that serves content items from inventory responsive to received requests for content
- the content item serving system including a selection tool for identifying eligible content items from inventory to serve responsive to each received request
- the content item serving system is adapted to receive as an input from the experiment subsystem identification of experiment parameters for an experiment including at least one
- the experiment subsystem can be adapted to automatically generate multi-arm experiments based on the inferences.
- the experiment subsystem can be adapted to automatically generate experiments for a given content sponsor for a plurality of content items in one or more campaigns associated with the content sponsor.
- the experiment subsystem can provide, as an output, the inferences, wherein the inferences are of the form of an identification of an attribute, a predicted performance effect associated with a value, the presence or lack thereof in a given content item, and a measure of the statistical confidence associated with the predicted performance effect.
- the method includes identifying an inventory of content items that are proposed to be served in response to received requests for content.
- the method further includes evaluating each content item in the inventory to determine one or more attributes associated with a respective content item, and tagging each content item in inventory with respective determined attributes, wherein the attributes may affect performance and are related to attribute types selected from a group comprising content concepts, format, included content, semantics, or syntax.
- the method further includes evaluating a log of served content items that have been tagged to identify salient attributes related to one or more performance metrics and inferences related to the identified salient attributes.
- the method further includes automatically creating one or more experiments to substantiate the inferences related to the identified salient attributes.
- the method further includes delivering results based on substantiated inferences developed after evaluation of experimentation data derived by the experiment subsystem.
- Evaluating can include evaluating each content item to determine concepts included in the content item and one or more presentation attributes including format and layout attributes, and evaluating can further includes using natural language or machine learning processing to evaluate syntax and/or semantic content of the content item.
- the method can further include creating content items for inclusion in inventory based at least in part on the substantiated inferences. Creating content items for inclusion in inventory can be a manual process using at least content items received from content sponsors, and the method can further include making suggestions to content sponsors about proposed content items for inclusion in a campaign.
- One or more of the one or more performance metrics can be selected by a content sponsor associated with a content item in the inventory.
- Delivering results can include identifying recommendations for changes to one or more content items in inventory and providing the recommendations to a content sponsor or to a content item creation system such that manual or automatic changes to the one or more content items in inventory can be made based on the recommendations.
- the method can further include: serving content items from inventory responsive to received requests for content, including using a selection tool for identifying eligible content items from inventory to serve responsive to each received request, and further including receiving, as an input, experiment parameters for an experiment including at least one selection criterion that describes an attribute that is related to a performance inference associated with the experiment, the selection tool using the selection criteria for a portion of traffic that is served in addition to any other selection criteria that may be associated with a given request, such that experiment results can be determined and evaluated on that portion of traffic so as to substantiate or repudiate the associated performance inference.
- the method can further include generating multi-arm experiments based on the inferences.
- the method can further include automatically generating experiments for a given content sponsor for a plurality of content items in one
- FIG. 1 Another innovative aspect of the subject matter described in this specification can be implemented in computer program products that include a computer program product tangibly embodied in a computer-readable storage device and including instructions.
- the instructions when executed by one or more processors, cause the processor to: identify an inventory of content items that are proposed to be served in response to received requests for content; evaluate each content item in the inventory to determine one or more attributes associated with a respective content item, and tag each content item in inventory with respective determined attributes, wherein the attributes may affect performance and are related to attribute types selected from a group comprising content concepts, format, included content, semantics, or syntax; evaluate a log of served content items that have been tagged to identify salient attributes related to one or more performance metrics and inferences related to the identified salient attributes; automatically create one or more experiments to substantiate the inferences related to the identified salient attributes; and deliver results based on substantiated inferences developed after evaluation of experimentation data derived by experimentation.
- a large number of content item variants can be generated automatically, with each variant modifying a single attribute relative to at least one other variant.
- Content item variants can be executed automatically against small subsets of traffic.
- Content sponsors can respond quickly to the results of the experiments, e.g., to modify existing content items or add new ones.
- Metrics can be analyzed automatically that focus on differences among shared attributes of content items, which can allow content sponsors and/or content item creation/distribution systems to determine why some content items (e.g., advertisements) are more successful than others.
- Automatically created experiments can allow statistical inferences to be made regarding the cause of metric changes instead of simply stating metrics associated with different attributes.
- FIG. 1 is a block diagram of an example system for delivering content.
- FIG. 2 shows an example system for automatic attribute optimization of content items.
- FIG. 3 is a flowchart of an example process for automatic optimization of attributes in content items.
- FIG. 4 is a block diagram of an example computer system that can be used to implement the methods, systems and processes described in this disclosure.
- This document describes systems, methods, computer program products and mechanisms for creating or updating content items, manually and/or automatically, using information obtained from experiments that vary attributes on served content items. For example, a log of served content items that are tagged with attributes can be analyzed to identify salient attributes related to one or more performance metrics. Inferences related to the identified salient attributes can be drawn. The inferences can identify, for example, which attributes lead to better performance of a given or modified content item. The inferences can be used, for example, to automatically create experiments that vary a single attribute in relation to other attributes on a particular content item for a content sponsor.
- the results of the experiments can be analyzed, for example, to determine suggestions to provide to a content sponsor for changing attributes for the content item, e.g., to use the attributes that performed well in the experiments.
- the content item can be updated automatically.
- the results of the experiments can also be used to alter an existing experiment or initiate other experiments.
- FIG. 1 is a block diagram of an example system 100 for delivering content.
- the example system 100 includes a content item serving system (e.g., the content management system 110 ) for, among other tasks, selecting and providing content in response to requests for content.
- the example system 100 includes a network 102 , such as a local area network (LAN), a wide area network (WAN), the Internet, or a combination thereof.
- the network 102 connects websites 104 , user devices 106 , content sponsors 108 (e.g., advertisers), publishers 109 , and the content management system 110 .
- the example system 100 may include many thousands of websites 104 , user devices 106 , content sponsors 108 and publishers 109 .
- the content management system 110 can include plural subsystems 121 - 126 , briefly described here and described in more detail with respect to FIG. 2 . Although the subsystems 121 - 126 are shown to be included in the content management system 110 , any or all of the subsystems 121 - 126 can reside, in whole or in part, at different physical locations and be coupled to the content management system 110 and other systems using the network 102 . In some implementations, the system 100 can include other subsystems that are different from, or in addition to, the subsystems 121 - 126 .
- An attribute inference subsystem 121 can analyze an inventory of content items 131 and tag each item with one or more attributes.
- the attributes can be related to attribute types such as content concepts, format, included content, semantics, syntax, or other aspects that may affect the presentation and/or performance of content items.
- the attributes can be identified automatically by the attribute inference subsystem 121 , identified by a sponsor (e.g., content sponsor 108 ) of a respective content item, or some combination thereof
- the attributes can be stored in a data store of attributes 132 .
- An analysis subsystem 122 can evaluate a log of served content items 133 that have been tagged (e.g., by the attribute inference subsystem 121 ). The evaluation can identify salient attributes related to one or more performance metrics. The analysis subsystem 122 can draw inferences related to the identified salient attributes. For example, the analysis subsystem 122 can determine how well content items have performed, e.g., when provided to a user, for each of different combinations of varied attributes
- An experiment subsystem 123 can automatically create one or more experiments to substantiate the inferences related to the identified salient attributes that are developed by the analysis subsystem 122 .
- An experiment for example, can be associated with a different presentation of a content item in which an attribute is varied, e.g., so that the experiment subsystem 123 can determine which attributes and/or attribute values/settings perform, with noticeable significance (e.g., statistically significant), better than others.
- the created experiments can be stored in a data store of experiments 134 .
- a processing subsystem 124 can deliver results based on substantiated inferences developed after evaluation of experimentation data derived by the experiment subsystem 123 .
- the processing subsystem 124 can use experimentation results information from a data store of experiment results 135 to produce information for a data store of suggestions 136 , e.g., suggested attribute settings for use in creating better content items.
- the content management system 110 can include a content item serving subsystem 125 that serves content items from inventory (e.g., the content items 131 ) responsive to received requests for content.
- the content item serving subsystem 125 can include a selection tool for identifying eligible content items from inventory to serve responsive to each received request.
- the content item serving subsystem 125 can be adapted to receive, as an input from the experiment subsystem 123 , identification of experiment parameters for an experiment.
- the experiment parameters can include at least one selection criterion that describes an attribute that is related to a performance inference that is being tested by the given experiment.
- the selection tool for example, can use the selection criteria for a portion of traffic that is served in addition to any other selection criteria that may be associated with a given request.
- one of the identified experiments 134 is selected to be used with a selected one of the content items 131 .
- experiment results can be determined and evaluated by the experiment subsystem 123 on that portion of traffic so as to substantiate (or repudiate) the associated performance inference.
- the content management system 110 can include a content item creation subsystem 126 that creates content items for inclusion in inventory.
- the content item creation subsystem 126 can use suggestions 136 to create new (or modify existing) content items in the inventory of content items 131 .
- the system 100 can include plural data stores 131 - 136 , which can be stored locally by the content management system 110 or stored somewhere else and accessed using the network 102 .
- the data stores 131 - 136 can be generated as needed from various data sources, e.g., on an as-needed basis.
- the inventory of content items 131 can include content items (e.g., advertisements) that the content management system 110 can provide in response to received requests for content.
- the data store of attributes 132 for example, can include attributes of a respective content item identified by the attribute inference subsystem 121 , by a content sponsor 108 or by another source.
- the log of served content items 133 can include historical information about content items served by the content management system 110 , e.g., including each content item and associated user interactions.
- Content items in the log can be tagged (e.g., by the attribute inference subsystem 121 ) to identify salient attributes related to one or more performance metrics.
- One or more inferences related to the identified salient attributes can be generated.
- the tagged information can be stored in either the data store of attributes 132 or the log of served content items 133 .
- the data store of experiments 134 for example, can include experiments created by the experiment subsystem 123 .
- the data store of experiment results 135 can store experimentation results information (e.g., generated by the content item serving subsystem 125 ) and can be used by the experiment subsystem 123 to change information in the experiments 134 .
- the suggestions 136 can include suggestions (e.g., for attribute settings to use for content items) that the processing subsystem 124 can identify from the data store of experiment results 135 .
- Other data stores can be used.
- a website 104 includes one or more resources 105 associated with a domain name and hosted by one or more servers.
- An example website is a collection of webpages formatted in hypertext markup language (HTML) that can contain text, images, multimedia content, and programming elements, such as scripts.
- HTML hypertext markup language
- Each website 104 can be maintained by a content publisher, which is an entity that controls, manages and/or owns the website 104 .
- a resource 105 can be any data that can be provided over the network 102 .
- a resource 105 can be identified by a resource address that is associated with the resource 105 .
- Resources include HTML pages, word processing documents, portable document format (PDF) documents, images, video, and news feed sources, to name only a few.
- the resources can include content, such as words, phrases, images, video and sounds, that may include embedded information (such as meta-information hyperlinks) and/or embedded instructions (such as JavaScriptTM scripts).
- a user device 106 is an electronic device that is under control of a user and is capable of requesting and receiving resources over the network 102 .
- Example user devices 106 include personal computers (PCs), televisions with one or more processors embedded therein or coupled thereto, set-top boxes, mobile communication devices (e.g., smartphones), tablet computers and other devices that can send and receive data over the network 102 .
- a user device 106 typically includes one or more user applications, such as a web browser, to facilitate the sending and receiving of data over the network 102 .
- a user device 106 can request resources 105 from a website 104 .
- data representing the resource 105 can be provided to the user device 106 for presentation by the user device 106 .
- the data representing the resource 105 can also include data specifying a portion of the resource or a portion of a user display, such as a presentation location of a pop-up window or a slot of a third-party content site or webpage, in which content can be presented. These specified portions of the resource or user display are referred to as slots (e.g., ad slots).
- the system 100 can include a search system 112 that identifies the resources by crawling and indexing the resources provided by the content publishers on the websites 104 .
- Data about the resources can be indexed based on the resource to which the data corresponds.
- the indexed and, optionally, cached copies of the resources can be stored in an indexed cache 114 .
- User devices 106 can submit search queries 116 to the search system 112 over the network 102 .
- the search system 112 can, for example, access the indexed cache 114 to identify resources that are relevant to the search query 116 .
- the search system 112 identifies the resources in the form of search results 118 and returns the search results 118 to the user devices 106 in search results pages.
- a search result 118 can be data generated by the search system 112 that identifies a resource that is provided in response to a particular search query, and includes a link to the resource.
- the search results 118 include the content itself, such as a map, or an answer, such as in response to a query for a store's products, phone number, address or hours of operation.
- An example search result 118 can include a webpage title, a snippet of text or a portion of an image extracted from the webpage, and the URL of the webpage. Search results pages can also include one or more slots in which other content items (e.g., ads) can be presented.
- content items e.g., ads
- slots on search results pages or other webpages can include content slots for content items that have been provided as part of a reservation process.
- a publisher and a content item sponsor enter into an agreement where the publisher agrees to publish a given content item (or campaign) in accordance with a schedule (e.g., provide 1000 impressions by date X) or other publication criteria.
- content items that are selected to fill the requests for content slots can be selected based, at least in part, on priorities associated with a reservation process (e.g., based on urgency to fulfill a reservation).
- the content management system 110 receives a request for content.
- the request for content can include characteristics of the slots that are defined for the requested resource or search results page, and can be provided to the content management system 110 .
- a reference e.g., URL
- a size of the slot e.g., a size of the slot, and/or media types that are available for presentation in the slot
- keywords associated with a requested resource e.g., source keywords”
- a search query 116 for which search results are requested can also be provided to the content management system 110 to facilitate identification of content that is relevant to the resource or search query 116 .
- the content management system 110 can select content that is eligible to be provided in response to the request (“eligible content items”).
- eligible content items can include eligible ads having characteristics matching the characteristics of ad slots and that are identified as relevant to specified resource keywords or search queries 116 .
- the selection of the eligible content items can further depend on user signals, such as demographic signals and behavioral signals.
- Eligible content items that are selected in response to a request for content can include, for example, the content items 131 , some of which can be modified (e.g., to include different attributes) based on information from the experiments 134 .
- the content management system 110 can select from the eligible content items that are to be provided for presentation in slots of a resource or search results page based at least in part on results of an auction (or by some other selection process). For example, for the eligible content items, the content management system 110 can receive offers from content sponsors 108 and allocate the slots, based at least in part on the received offers (e.g., based on the highest bidders at the conclusion of the auction or based on other criteria, such as those related to satisfying open reservations). The offers represent the amounts that the content sponsors are willing to pay for presentation (or selection or other interaction with) of their content with a resource or search results page.
- an offer can specify an amount that a content sponsor is willing to pay for each 1000 impressions (i.e., presentations) of the content item, referred to as a CPM bid.
- the offer can specify an amount that the content sponsor is willing to pay (e.g., a cost per engagement) for a selection (i.e., a click-through) of the content item or a conversion following selection of the content item.
- the selected content item can be determined based on the offers alone, or based on the offers of each content sponsor being multiplied by one or more factors, such as quality scores derived from content performance, landing page scores, and/or other factors.
- a conversion can be said to occur when a user performs a particular transaction or action related to a content item provided with a resource or search results page. What constitutes a conversion may vary from case-to-case and can be determined in a variety of ways. For example, a conversion may occur when a user clicks on a content item (e.g., an ad), is referred to a webpage, and consummates a purchase there before leaving that webpage.
- a content item e.g., an ad
- a conversion can also be defined by a content provider to be any measurable or observable user action, such as downloading a white paper, navigating to at least a given depth of a website, viewing at least a certain number of webpages, spending at least a predetermined amount of time on a website or webpage, registering on a website, experiencing media, or performing a social action regarding a content item (e.g., an ad), such as republishing or sharing the content item.
- a content provider to be any measurable or observable user action, such as downloading a white paper, navigating to at least a given depth of a website, viewing at least a certain number of webpages, spending at least a predetermined amount of time on a website or webpage, registering on a website, experiencing media, or performing a social action regarding a content item (e.g., an ad), such as republishing or sharing the content item.
- Other actions that constitute a conversion can also be used.
- conversions may be more likely to occur when a user is presented with a content item having attributes that have been selected/modified based on performance-based experimentation. For example, the user may be more likely to interact with an advertisement if the advertisement has been created or altered to include attributes that perform better than other attributes.
- the users may be provided with an opportunity to enable/disable or control programs or features that may collect and/or use personal information (e.g., information about a user's social network, social actions or activities, a user's preferences or a user's current location).
- personal information e.g., information about a user's social network, social actions or activities, a user's preferences or a user's current location.
- certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information associated with the user is removed.
- a user's identity may be anonymized so that the no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined.
- FIG. 2 shows an example system 200 for automatic attribute optimization of content items.
- the system 200 can include, for example, the subsystems 121 - 126 , each of which can be associated with one or more of example stages 1-6 for executing experiments that vary attributes of served content items and use the results to suggest new or modified content items.
- the attribute inference subsystem 121 can analyze the inventory of content items 131 and tag each content item with one or more attributes that are related to attributes types such as content concepts, format, included content, semantics, syntax, or other characteristics that may affect performance.
- the attribute inference subsystem 121 can automatically identify the attributes and/or a sponsor (e.g., content sponsor 108 ) of a respective content item can identify the attributes and provide the information to the attribute inference subsystem 121 .
- the attributes can be stored, for example, in a data store of attributes 132 .
- the attribute inference subsystem 121 can evaluate each content item to determine concepts included in the content item, presentation attributes including format and layout attributes, and included content. For example, the attribute inference subsystem 121 can identify the way(s) that content (e.g., text) is structured. In some implementations, the attribute inference subsystem 121 can analyze the content, for example, to locate nouns, verbs, brand names, words or phrases (e.g., “sale”, “free shipping”) and other aspects of the content in order to identify concepts (e.g., entities) associated with the content item.
- content e.g., text
- the attribute inference subsystem 121 can analyze the content, for example, to locate nouns, verbs, brand names, words or phrases (e.g., “sale”, “free shipping”) and other aspects of the content in order to identify concepts (e.g., entities) associated with the content item.
- the attribute inference subsystem 121 can analyze presentation format (e.g., including the layout, whether site links are included, and other presentation features) and content elements (e.g., whether images, click-to-call, maps or other elements are present). In some implementations, the attribute inference subsystem 121 can analyze the presence or absence of calls-to-action such as “Buy now!” or other types of call-to-action messages.
- presentation format e.g., including the layout, whether site links are included, and other presentation features
- content elements e.g., whether images, click-to-call, maps or other elements are present.
- the attribute inference subsystem 121 can analyze the presence or absence of calls-to-action such as “Buy now!” or other types of call-to-action messages.
- the attribute inference subsystem 121 can use natural language or machine learning processing to evaluate syntax and/or semantic content of the content item.
- the attribute inference subsystem 121 can perform syntactic parsing to identify grammar, structure, characters/syllables per word, sentence complexity (e.g., words per sentence), point of view (e.g., user or company), punctuation (e.g., exclamation points, etc.), and other syntactic features.
- Example tags can include information regarding: a) the domain name of an associated uniform resource locator (URL) included in the creative or that identifies the creative, b) the length of the creative text, c) n-gram phrases used in the creative, d) semantic entities detected in the creative, e) the language of the creative, f) natural language constructs detected in the creative, g) the capitalization pattern of the text in the creative, h) the characters per word, i) domain of the landing page, j) the n-gram phrases used on the landing page, k) the semantic entities detected in the landing page, l) the presence of various structured data on the landing page, m) the position at which search results for the same domain historically rank in the search results, and/or other information.
- tags can be determined using, or extracted from, related metadata.
- the attribute inference subsystem 121 can assign one or more scores to a content item. For example, a content item can have a higher than average score for sentence complexity if content item sentence lengths are predicted to result in higher than average performance.
- the analysis subsystem 122 can evaluate the log of served content items 133 that have been tagged to identify salient attributes related to one or more performance metrics. One or more inferences related to the identified salient attributes can be determined. For example, the analysis subsystem 122 can evaluate historical information for previously served content items and their attributes in order to identify attributes associated with best performing content items.
- one or more of the one or more performance metrics can be selected by a content sponsor associated with a content item in the inventory.
- content sponsors 108 can choose one or more performance metrics by which their content items are to be measured, including raw performance metrics (e.g., click-throughs, reserve prices, and impressions), return on investment (ROI), or other available metrics that can be optimized for selecting content.
- performance metrics can be automatically selected for a given content sponsor.
- one or more inferences can be drawn from the performance metrics and the corresponding determined attributes.
- inferences can include inferences that identify best performing or most significant attributes associated with a given performance metric.
- a significance of a value or the presence (or absence) of a given attribute can be determined. The significance can be measured as an increase (or corresponding decrease) in effectiveness (as measured by the selected performance metric).
- the evaluation can be made on inventory associated with a given content sponsor (e.g., a content sponsor's own inventory, history of deliveries and user interactions is evaluated). Alternatively, evaluation (and inferences) can be made based on inventory, deliveries and interactions associated with other content sponsors.
- historical data can be treated as correlative, not causative, information.
- historical data can be used to indicate the strength of a correlation between performance metrics and a Boolean presence/absence of an attribute and/or a numeric value for the attribute.
- the experiment subsystem 123 can automatically create one or more experiments to substantiate the inferences related to the identified salient attributes. For example, the experiment subsystem 123 can generate experiments 134 that each varies an attribute for which it is inferred that the particular attribute may have a significant influence on performance, e.g., as determined by strong correlations as calculated in stage 2.
- the experiment subsystem 123 can be adapted to automatically generate multi-arm experiments based on the inferences. For example, the experiment subsystem 123 can automatically construct and run multi-arm experiments across one or more content items for each content sponsor 108 . As an example, variant 1 of a given advertisement can be selected for 1% of search queries, variant 2 can be selected for another 1%, and so on. In some implementations, information can be logged that identifies, for example, which variants of which content item were provided for which queries. Each of the variants, for example, can vary one attribute of the content item. Depending on the experiment results, an inference related to the varied attribute can be validated.
- the experiment subsystem 123 can be adapted to automatically generate experiments for a given content sponsor for a plurality of content items in one or more campaigns associated with the content sponsor. As an example, the experiment subsystem 123 can automatically create experiments for a small percentage of a content sponsor's advertisements, which can include a number of advertisements in one or more of the content sponsor's campaigns.
- the experiment subsystem 123 can provide, as an output, the inferences.
- the inferences can be of the form of an identification of an attribute, a predicted performance effect associated with a value, the presence or lack thereof of the attribute in a given content item, and a measure of the statistical confidence associated with the predicted performance effect.
- the experiment subsystem 123 can analyze aggregated information about metrics associated with each attribute, and this can occur with or without information obtained by running experiments.
- the experiment subsystem 123 may determine that creatives having more than 15 words have a click-through rate (CTR) of X %, and shorter creatives have a lower CTR of Y %.
- CTR click-through rate
- Other inferences can also be provided as an output.
- the experiment subsystem 123 can determine that creatives having more than 15 words have a statistically significant higher CTR than shorter creatives, without identifying specific CTRs.
- correlations from stages 2 and 3 can be used in combinations, e.g., so that attributes are not just considered on their own. For example, creatives that are both longer than 15 words and have exclamation points may perform differently than those just having either attribute alone. Accordingly, the system can determine meaningful or significant “derived” attributes which are functions of one or more other attributes. Such derived attributes can be subject matter for suggestions or for other purposes.
- the processing subsystem 124 can deliver results, including suggestions, based on substantiated inferences developed after evaluation of experimentation data derived by the experiment subsystem 123 .
- the processing subsystem 124 can generate suggestions 136 that are based on substantiated inferences, e.g., which values and/or attributes showed noticeably significantly (e.g., statistically significant) better performance.
- the processing subsystem 124 can develop the results including identifying recommendations for changes to one or more content items in inventory. For example, one of the suggestions 136 that the processing subsystem 124 can develop can be to increase the number of words in a creative to 16 or more, e.g., based on evaluating the results of one or more experiments.
- the processing subsystem 124 can provide the recommendations to a content sponsor 108 or to the content item creation subsystem 126 such that manual or automatic changes to the one or more content items in inventory can be made based on the recommendations.
- a content sponsor interface can be used to present one or more of the suggestions 136 to the content sponsor 108 , e.g., to modify existing campaigns.
- information associated with the suggestions can be used in the creation of new content items, e.g., to suggest that beneficial attributes are included in a creative, to suggest the deletion of existing creatives/campaigns which possess those poorly performing attributes, and to suggest deletion of attributes that are likely to decrease the performance of a creative.
- the content item serving subsystem 125 can serve content items from inventory responsive to received requests for content.
- the content item serving subsystem 125 can include a selection tool for identifying eligible content items from inventory to serve responsive to each received request.
- the content item serving subsystem 125 can be adapted to receive, as an input from the experiment subsystem 123 , identification of experiment parameters for an experiment.
- the experiment parameters can include, for example, at least one selection criterion that describes an attribute that is related to a performance inference associated with a given experiment.
- the selection tool can use the selection criteria to identify a portion of traffic to be served. In this way, experiment results can be determined and evaluated by the experiment subsystem 123 on that portion of traffic so as to substantiate or repudiate the associated performance inference.
- the content item creation subsystem 126 can create content items for inclusion in inventory.
- the content item creation subsystem 126 can create advertisements and/or other content items for storage in the inventory of content items 131 .
- the content item creation subsystem 126 can receive results from the processing subsystem 124 and use the results when creating content items. For example, information associated with the suggestions 136 can be used when generating content items (e.g., advertisements) for the inventory of content items 131 .
- content items e.g., advertisements
- the content item creation subsystem 126 can be a manual system and can receive content items from content sponsors. In some implementations, the content item creation subsystem 126 can be configured to receive results from the processing subsystem 124 and make suggestions to content sponsors 108 about proposed content items (or changes to be made to proposed content items) for inclusion in a campaign (e.g., an advertising campaign).
- a campaign e.g., an advertising campaign
- FIG. 3 is a flowchart of an example process 300 for automatic optimization of attributes in content items.
- the content management system 110 and its subsystems 121 - 126 can perform stages of the process 300 using instructions that are executed by one or more processors.
- FIGS. 1-2 are used to provide example structures for performing the stages of the process 300 .
- An inventory of content items is identified that includes content items that are proposed to be served in response to received requests for content ( 302 ).
- the content management system 110 can identify the inventory of content items 131 that contains content items (e.g., advertisements) that can be provided in response to requests for content (e.g., to fill an advertisement slot).
- content items e.g., advertisements
- Each content item in the inventory is evaluated to determine one or more attributes associated with a respective content item, and each content item in inventory is tagged with respective determined attributes ( 304 ).
- the attributes can relate to attribute types such as content concepts, format, included content, semantics, syntax, or other characteristics that may affect performance.
- the attribute inference subsystem 121 can analyze an inventory of content items 131 and tag each content item with one or more attributes.
- a log of served content items that have been tagged is evaluated to identify salient attributes related to one or more performance metrics and inferences related to the identified salient attributes ( 306 ).
- the analysis subsystem 122 can evaluate the log of served content items 133 that have been tagged to identify how well content items having specific attributes have performed, e.g., when provided to a user. Using the analysis, for example, the analysis subsystem 122 can identify salient attributes related to one or more performance metrics and determine inferences related to the identified salient attributes.
- One or more experiments are automatically created to substantiate the inferences related to the identified salient attributes ( 308 ).
- the experiment subsystem 123 can automatically create one or more experiments, each varying an attribute relative to at least one other experiment, to substantiate the inferences related to the identified salient attributes.
- Results are delivered that are based on substantiated/repudiated inferences developed after evaluation of experimentation data derived by the experiment subsystem ( 310 ).
- the processing subsystem 124 can develop suggestions 136 , including identifying recommendations for changes to one or more content items in inventory.
- one of the suggestions 136 that the processing subsystem 124 can develop can be a suggestion to reduce the number of words in a creative to 15 or fewer, e.g., based on evaluating the results of experiments.
- the processing subsystem 124 can provide the recommendations to a content sponsor 108 or to the content item creation subsystem 126 such that manual or automatic changes to the one or more content items in inventory can be made based on the recommendations.
- a content sponsor interface can be used to present one or more of the suggestions 136 to the content sponsor 108 , e.g., to modify existing campaigns or to create new creatives.
- FIG. 4 is a block diagram of example computing devices 400 , 450 that may be used to implement the systems and methods described in this document, as either a client or as a server or plurality of servers.
- Computing device 400 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers.
- Computing device 400 is further intended to represent any other typically non-mobile devices, such as televisions or other electronic devices with one or more processers embedded therein or attached thereto.
- Computing device 450 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smartphones, and other computing devices.
- the components shown here, their connections and relationships, and their functions, are meant to be examples only, and are not meant to limit implementations of the inventions described and/or claimed in this document.
- Computing device 400 includes a processor 402 , memory 404 , a storage device 406 , a high-speed controller 408 connecting to memory 404 and high-speed expansion ports 410 , and a low-speed controller 412 connecting to low-speed bus 414 and storage device 406 .
- Each of the components 402 , 404 , 406 , 408 , 410 , and 412 are interconnected using various busses, and may be mounted on a common motherboard or in other manners as appropriate.
- the processor 402 can process instructions for execution within the computing device 400 , including instructions stored in the memory 404 or on the storage device 406 to display graphical information for a GUI on an external input/output device, such as display 416 coupled to high-speed controller 408 .
- multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory.
- multiple computing devices 400 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system).
- the memory 404 stores information within the computing device 400 .
- the memory 404 is a computer-readable medium.
- the memory 404 is a volatile memory unit or units.
- the memory 404 is a non-volatile memory unit or units.
- the storage device 406 is capable of providing mass storage for the computing device 400 .
- the storage device 406 is a computer-readable medium.
- the storage device 406 may be a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations.
- a computer program product is tangibly embodied in an information carrier.
- the computer program product contains instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 404 , the storage device 406 , or memory on processor 402 .
- the high-speed controller 408 manages bandwidth-intensive operations for the computing device 400 , while the low-speed controller 412 manages lower bandwidth-intensive operations. Such allocation of duties is an example only.
- the high-speed controller 408 is coupled to memory 404 , display 416 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 410 , which may accept various expansion cards (not shown).
- low-speed controller 412 is coupled to storage device 406 and low-speed bus 414 .
- the low-speed bus 414 (e.g., a low-speed expansion port), which may include various communication ports (e.g., USB, Bluetooth®, Ethernet, wireless Ethernet), may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- input/output devices such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- the computing device 400 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a standard server 420 , or multiple times in a group of such servers. It may also be implemented as part of a rack server system 424 . In addition, it may be implemented in a personal computer such as a laptop computer 422 . Alternatively, components from computing device 400 may be combined with other components in a mobile device (not shown), such as computing device 450 . Each of such devices may contain one or more of computing devices 400 , 450 , and an entire system may be made up of multiple computing devices 400 , 450 communicating with each other.
- Computing device 450 includes a processor 452 , memory 464 , an input/output device such as a display 454 , a communication interface 466 , and a transceiver 468 , among other components.
- the computing device 450 may also be provided with a storage device, such as a micro-drive or other device, to provide additional storage.
- a storage device such as a micro-drive or other device, to provide additional storage.
- Each of the components 450 , 452 , 464 , 454 , 466 , and 468 are interconnected using various buses, and several of the components may be mounted on a common motherboard or in other manners as appropriate.
- the processor 452 can process instructions for execution within the computing device 450 , including instructions stored in the memory 464 .
- the processor may also include separate analog and digital processors.
- the processor may provide, for example, for coordination of the other components of the computing device 450 , such as control of user interfaces, applications run by computing device 450 , and wireless communication by computing device 450 .
- Processor 452 may communicate with a user through control interface 458 and display interface 456 coupled to a display 454 .
- the display 454 may be, for example, a TFT LCD display or an OLED display, or other appropriate display technology.
- the display interface 456 may comprise appropriate circuitry for driving the display 454 to present graphical and other information to a user.
- the control interface 458 may receive commands from a user and convert them for submission to the processor 452 .
- an external interface 462 may be provided in communication with processor 452 , so as to enable near area communication of computing device 450 with other devices. External interface 462 may provide, for example, for wired communication (e.g., via a docking procedure) or for wireless communication (e.g., via Bluetooth® or other such technologies).
- the memory 464 stores information within the computing device 450 .
- the memory 464 is a computer-readable medium.
- the memory 464 is a volatile memory unit or units.
- the memory 464 is a non-volatile memory unit or units.
- Expansion memory 474 may also be provided and connected to computing device 450 through expansion interface 472 , which may include, for example, a subscriber identification module (SIM) card interface.
- SIM subscriber identification module
- expansion memory 474 may provide extra storage space for computing device 450 , or may also store applications or other information for computing device 450 .
- expansion memory 474 may include instructions to carry out or supplement the processes described above, and may include secure information also.
- expansion memory 474 may be provide as a security module for computing device 450 , and may be programmed with instructions that permit secure use of computing device 450 .
- secure applications may be provided via the SIM cards, along with additional information, such as placing identifying information on the SIM card in a non-hackable manner.
- the memory may include for example, flash memory and/or MRAM memory, as discussed below.
- a computer program product is tangibly embodied in an information carrier.
- the computer program product contains instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 464 , expansion memory 474 , or memory on processor 452 .
- Computing device 450 may communicate wirelessly through communication interface 466 , which may include digital signal processing circuitry where necessary. Communication interface 466 may provide for communications under various modes or protocols, such as GSM voice calls, SMS, EMS, or MMS messaging, CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS, among others. Such communication may occur, for example, through transceiver 468 (e.g., a radio-frequency transceiver). In addition, short-range communication may occur, such as using a Bluetooth®, WiFi, or other such transceiver (not shown). In addition, GPS receiver module 470 may provide additional wireless data to computing device 450 , which may be used as appropriate by applications running on computing device 450 .
- transceiver 468 e.g., a radio-frequency transceiver
- short-range communication may occur, such as using a Bluetooth®, WiFi, or other such transceiver (not shown).
- GPS receiver module 470 may provide additional wireless data to computing device 450 , which
- Computing device 450 may also communicate audibly using audio codec 460 , which may receive spoken information from a user and convert it to usable digital information. Audio codec 460 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of computing device 450 . Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on computing device 450 .
- Audio codec 460 may receive spoken information from a user and convert it to usable digital information. Audio codec 460 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of computing device 450 . Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on computing device 450 .
- the computing device 450 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a cellular telephone 480 . It may also be implemented as part of a smartphone 482 , personal digital assistant, or other mobile device.
- implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof.
- ASICs application specific integrated circuits
- These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- a keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user can be received in any form, including acoustic, speech, or tactile input.
- the systems and techniques described here can be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back end, middleware, or front end components.
- the components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network (“LAN”), a wide area network (“WAN”), and the Internet.
- LAN local area network
- WAN wide area network
- the Internet the global information network
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
Abstract
Methods, systems, and apparatus include computer programs encoded on a computer-readable storage medium, including a system for providing content and that includes subsystems. An attribute inference subsystem analyzes content items and tags each content item with attributes that may affect performance and that are related to attribute types selected from a group comprising content concepts, format, included content, semantics or syntax. Attributes can be identified by the attribute inference subsystem or a sponsor of a respective content item. An analysis subsystem evaluates a log of served content items that have been tagged to identify salient attributes related to one or more performance metrics and inferences related to the identified salient attributes. An experiment subsystem automatically creates one or more experiments to substantiate the inferences related to the identified salient attributes. A processing subsystem delivers results based on substantiated inferences developed after evaluation of experimentation data derived by the experiment subsystem.
Description
- This specification relates to information presentation.
- The Internet provides access to a wide variety of resources. For example, video and/or audio files, as well as webpages for particular subjects or particular news articles, are accessible over the Internet. Access to these resources presents opportunities for other content (e.g., advertisements) to be provided with the resources. For example, a webpage can include slots in which content can be presented. These slots can be defined in the webpage or defined for presentation with a webpage, for example, along with search results.
- Content slots can be allocated to content sponsors as part of a reservation system, or in an auction. For example, content sponsors can provide bids specifying amounts that the sponsors are respectively willing to pay for presentation of their content. In turn, an auction can be run, and the slots can be allocated to sponsors according, among other things, to their bids and/or the relevance of the sponsored content to content presented on a page hosting the slot or a request that is received for the sponsored content. The content can be provided to a user device such as a personal computer (PC), a smartphone, a laptop computer, a tablet computer, or some other user device. Depending on how the content is presented, e.g., with specific attributes set in different ways, user interactions with the content may be more (or less) likely to occur.
- In general, one innovative aspect of the subject matter described in this specification can be implemented in systems, including a system for providing content and that includes subsystems. An attribute inference subsystem analyzes an inventory of content items and tags each item with one or more attributes that may affect performance and that are related to attribute types selected from a group comprising content concepts, format, included content, semantics or syntax, wherein the attributes can be identified by the attribute inference subsystem or by a sponsor of a respective content item. An analysis subsystem evaluates a log of served content items that have been tagged to identify salient attributes related to one or more performance metrics and inferences related to the identified salient attributes. An experiment subsystem automatically creates one or more experiments to substantiate the inferences related to the identified salient attributes. A processing subsystem delivers results based on substantiated inferences developed after evaluation of experimentation data derived by the experiment subsystem.
- These and other implementations can each optionally include one or more of the following features. The attribute inference subsystem can evaluate each content item to determine concepts included in the content item, presentation attributes including format and layout attributes, and included content, and the attribute inference system can use natural language or machine learning processing to evaluate syntax and/or semantic content of the content item. The system can further include a content item creation subsystem that creates content items for inclusion in inventory, the content item creation subsystem receiving results from the processing subsystem and using the results when creating content items. The content item creation subsystem can be a manual system and receives content items from content sponsors and wherein the content item creation subsystem is configured to receive results from the processing subsystem and make suggestions to content sponsors about proposed content items for inclusion in a campaign. One or more of the one or more performance metrics can be selected by a content sponsor associated with a content item in the inventory. The processing subsystem can develop the results including identifying recommendations for changes to one or more content items in inventory, and provide the recommendations to a content sponsor or to the content item creation subsystem such that manual or automatic changes to the one or more content items in inventory can be made based on the recommendations. The system can further include: a content item serving subsystem that serves content items from inventory responsive to received requests for content, the content item serving system including a selection tool for identifying eligible content items from inventory to serve responsive to each received request, wherein the content item serving system is adapted to receive as an input from the experiment subsystem identification of experiment parameters for an experiment including at least one selection criterion that describes an attribute that is related to a performance inference associated with the experiment, the selection tool uses the selection criteria for a portion of traffic that is served in addition to any other selection criteria that may be associated with a given request, such that experiment results can be determined and evaluated by the experiment subsystem on that portion of traffic so as to substantiate or repudiate the associated performance inference. The experiment subsystem can be adapted to automatically generate multi-arm experiments based on the inferences. The experiment subsystem can be adapted to automatically generate experiments for a given content sponsor for a plurality of content items in one or more campaigns associated with the content sponsor. For each experiment, the experiment subsystem can provide, as an output, the inferences, wherein the inferences are of the form of an identification of an attribute, a predicted performance effect associated with a value, the presence or lack thereof in a given content item, and a measure of the statistical confidence associated with the predicted performance effect.
- In general, another innovative aspect of the subject matter described in this specification can be implemented in methods that include another computer-implemented method for providing creatives. The method includes identifying an inventory of content items that are proposed to be served in response to received requests for content. The method further includes evaluating each content item in the inventory to determine one or more attributes associated with a respective content item, and tagging each content item in inventory with respective determined attributes, wherein the attributes may affect performance and are related to attribute types selected from a group comprising content concepts, format, included content, semantics, or syntax. The method further includes evaluating a log of served content items that have been tagged to identify salient attributes related to one or more performance metrics and inferences related to the identified salient attributes. The method further includes automatically creating one or more experiments to substantiate the inferences related to the identified salient attributes. The method further includes delivering results based on substantiated inferences developed after evaluation of experimentation data derived by the experiment subsystem.
- These and other implementations can each optionally include one or more of the following features. Evaluating can include evaluating each content item to determine concepts included in the content item and one or more presentation attributes including format and layout attributes, and evaluating can further includes using natural language or machine learning processing to evaluate syntax and/or semantic content of the content item. The method can further include creating content items for inclusion in inventory based at least in part on the substantiated inferences. Creating content items for inclusion in inventory can be a manual process using at least content items received from content sponsors, and the method can further include making suggestions to content sponsors about proposed content items for inclusion in a campaign. One or more of the one or more performance metrics can be selected by a content sponsor associated with a content item in the inventory. Delivering results can include identifying recommendations for changes to one or more content items in inventory and providing the recommendations to a content sponsor or to a content item creation system such that manual or automatic changes to the one or more content items in inventory can be made based on the recommendations. The method can further include: serving content items from inventory responsive to received requests for content, including using a selection tool for identifying eligible content items from inventory to serve responsive to each received request, and further including receiving, as an input, experiment parameters for an experiment including at least one selection criterion that describes an attribute that is related to a performance inference associated with the experiment, the selection tool using the selection criteria for a portion of traffic that is served in addition to any other selection criteria that may be associated with a given request, such that experiment results can be determined and evaluated on that portion of traffic so as to substantiate or repudiate the associated performance inference. The method can further include generating multi-arm experiments based on the inferences. The method can further include automatically generating experiments for a given content sponsor for a plurality of content items in one or more campaigns associated with the content sponsor.
- In general, another innovative aspect of the subject matter described in this specification can be implemented in computer program products that include a computer program product tangibly embodied in a computer-readable storage device and including instructions. The instructions, when executed by one or more processors, cause the processor to: identify an inventory of content items that are proposed to be served in response to received requests for content; evaluate each content item in the inventory to determine one or more attributes associated with a respective content item, and tag each content item in inventory with respective determined attributes, wherein the attributes may affect performance and are related to attribute types selected from a group comprising content concepts, format, included content, semantics, or syntax; evaluate a log of served content items that have been tagged to identify salient attributes related to one or more performance metrics and inferences related to the identified salient attributes; automatically create one or more experiments to substantiate the inferences related to the identified salient attributes; and deliver results based on substantiated inferences developed after evaluation of experimentation data derived by experimentation.
- Particular implementations may realize none, one or more of the following advantages. A large number of content item variants can be generated automatically, with each variant modifying a single attribute relative to at least one other variant. Content item variants can be executed automatically against small subsets of traffic. Content sponsors can respond quickly to the results of the experiments, e.g., to modify existing content items or add new ones. Metrics can be analyzed automatically that focus on differences among shared attributes of content items, which can allow content sponsors and/or content item creation/distribution systems to determine why some content items (e.g., advertisements) are more successful than others. Automatically created experiments can allow statistical inferences to be made regarding the cause of metric changes instead of simply stating metrics associated with different attributes.
- The details of one or more implementations of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.
-
FIG. 1 is a block diagram of an example system for delivering content. -
FIG. 2 shows an example system for automatic attribute optimization of content items. -
FIG. 3 is a flowchart of an example process for automatic optimization of attributes in content items. -
FIG. 4 is a block diagram of an example computer system that can be used to implement the methods, systems and processes described in this disclosure. - Like reference numbers and designations in the various drawings indicate like elements.
- This document describes systems, methods, computer program products and mechanisms for creating or updating content items, manually and/or automatically, using information obtained from experiments that vary attributes on served content items. For example, a log of served content items that are tagged with attributes can be analyzed to identify salient attributes related to one or more performance metrics. Inferences related to the identified salient attributes can be drawn. The inferences can identify, for example, which attributes lead to better performance of a given or modified content item. The inferences can be used, for example, to automatically create experiments that vary a single attribute in relation to other attributes on a particular content item for a content sponsor. The results of the experiments can be analyzed, for example, to determine suggestions to provide to a content sponsor for changing attributes for the content item, e.g., to use the attributes that performed well in the experiments. In some implementations, the content item can be updated automatically. The results of the experiments can also be used to alter an existing experiment or initiate other experiments.
-
FIG. 1 is a block diagram of anexample system 100 for delivering content. Theexample system 100 includes a content item serving system (e.g., the content management system 110) for, among other tasks, selecting and providing content in response to requests for content. Theexample system 100 includes anetwork 102, such as a local area network (LAN), a wide area network (WAN), the Internet, or a combination thereof. Thenetwork 102 connectswebsites 104,user devices 106, content sponsors 108 (e.g., advertisers),publishers 109, and thecontent management system 110. Theexample system 100 may include many thousands ofwebsites 104,user devices 106, content sponsors 108 andpublishers 109. - The
content management system 110 can include plural subsystems 121-126, briefly described here and described in more detail with respect toFIG. 2 . Although the subsystems 121-126 are shown to be included in thecontent management system 110, any or all of the subsystems 121-126 can reside, in whole or in part, at different physical locations and be coupled to thecontent management system 110 and other systems using thenetwork 102. In some implementations, thesystem 100 can include other subsystems that are different from, or in addition to, the subsystems 121-126. - An
attribute inference subsystem 121, for example, can analyze an inventory of content items 131 and tag each item with one or more attributes. For example, the attributes can be related to attribute types such as content concepts, format, included content, semantics, syntax, or other aspects that may affect the presentation and/or performance of content items. In some implementations, the attributes can be identified automatically by theattribute inference subsystem 121, identified by a sponsor (e.g., content sponsor 108) of a respective content item, or some combination thereof In some implementations, the attributes can be stored in a data store ofattributes 132. - An
analysis subsystem 122, for example, can evaluate a log of servedcontent items 133 that have been tagged (e.g., by the attribute inference subsystem 121). The evaluation can identify salient attributes related to one or more performance metrics. Theanalysis subsystem 122 can draw inferences related to the identified salient attributes. For example, theanalysis subsystem 122 can determine how well content items have performed, e.g., when provided to a user, for each of different combinations of varied attributes - An
experiment subsystem 123, for example, can automatically create one or more experiments to substantiate the inferences related to the identified salient attributes that are developed by theanalysis subsystem 122. An experiment, for example, can be associated with a different presentation of a content item in which an attribute is varied, e.g., so that theexperiment subsystem 123 can determine which attributes and/or attribute values/settings perform, with noticeable significance (e.g., statistically significant), better than others. In some implementations, the created experiments can be stored in a data store ofexperiments 134. - A
processing subsystem 124, for example, can deliver results based on substantiated inferences developed after evaluation of experimentation data derived by theexperiment subsystem 123. For example, theprocessing subsystem 124 can use experimentation results information from a data store ofexperiment results 135 to produce information for a data store ofsuggestions 136, e.g., suggested attribute settings for use in creating better content items. - In some implementations, the
content management system 110 can include a contentitem serving subsystem 125 that serves content items from inventory (e.g., the content items 131) responsive to received requests for content. The contentitem serving subsystem 125 can include a selection tool for identifying eligible content items from inventory to serve responsive to each received request. In some implementations, the contentitem serving subsystem 125 can be adapted to receive, as an input from theexperiment subsystem 123, identification of experiment parameters for an experiment. The experiment parameters can include at least one selection criterion that describes an attribute that is related to a performance inference that is being tested by the given experiment. The selection tool, for example, can use the selection criteria for a portion of traffic that is served in addition to any other selection criteria that may be associated with a given request. As such, one of the identifiedexperiments 134 is selected to be used with a selected one of the content items 131. As a result, experiment results can be determined and evaluated by theexperiment subsystem 123 on that portion of traffic so as to substantiate (or repudiate) the associated performance inference. - In some implementations, the
content management system 110 can include a contentitem creation subsystem 126 that creates content items for inclusion in inventory. For example, the contentitem creation subsystem 126 can usesuggestions 136 to create new (or modify existing) content items in the inventory of content items 131. - The
system 100 can include plural data stores 131-136, which can be stored locally by thecontent management system 110 or stored somewhere else and accessed using thenetwork 102. In some implementations, the data stores 131-136 can be generated as needed from various data sources, e.g., on an as-needed basis. The inventory of content items 131, for example, can include content items (e.g., advertisements) that thecontent management system 110 can provide in response to received requests for content. The data store ofattributes 132, for example, can include attributes of a respective content item identified by theattribute inference subsystem 121, by acontent sponsor 108 or by another source. The log of servedcontent items 133, for example, can include historical information about content items served by thecontent management system 110, e.g., including each content item and associated user interactions. Content items in the log can be tagged (e.g., by the attribute inference subsystem 121) to identify salient attributes related to one or more performance metrics. One or more inferences related to the identified salient attributes can be generated. The tagged information can be stored in either the data store ofattributes 132 or the log of servedcontent items 133. The data store ofexperiments 134, for example, can include experiments created by theexperiment subsystem 123. The data store of experiment results 135, for example, can store experimentation results information (e.g., generated by the content item serving subsystem 125) and can be used by theexperiment subsystem 123 to change information in theexperiments 134. Thesuggestions 136, for example, can include suggestions (e.g., for attribute settings to use for content items) that theprocessing subsystem 124 can identify from the data store of experiment results 135. Other data stores can be used. - A
website 104 includes one ormore resources 105 associated with a domain name and hosted by one or more servers. An example website is a collection of webpages formatted in hypertext markup language (HTML) that can contain text, images, multimedia content, and programming elements, such as scripts. Eachwebsite 104 can be maintained by a content publisher, which is an entity that controls, manages and/or owns thewebsite 104. - A
resource 105 can be any data that can be provided over thenetwork 102. Aresource 105 can be identified by a resource address that is associated with theresource 105. Resources include HTML pages, word processing documents, portable document format (PDF) documents, images, video, and news feed sources, to name only a few. The resources can include content, such as words, phrases, images, video and sounds, that may include embedded information (such as meta-information hyperlinks) and/or embedded instructions (such as JavaScript™ scripts). - A
user device 106 is an electronic device that is under control of a user and is capable of requesting and receiving resources over thenetwork 102.Example user devices 106 include personal computers (PCs), televisions with one or more processors embedded therein or coupled thereto, set-top boxes, mobile communication devices (e.g., smartphones), tablet computers and other devices that can send and receive data over thenetwork 102. Auser device 106 typically includes one or more user applications, such as a web browser, to facilitate the sending and receiving of data over thenetwork 102. - A
user device 106 can requestresources 105 from awebsite 104. In turn, data representing theresource 105 can be provided to theuser device 106 for presentation by theuser device 106. The data representing theresource 105 can also include data specifying a portion of the resource or a portion of a user display, such as a presentation location of a pop-up window or a slot of a third-party content site or webpage, in which content can be presented. These specified portions of the resource or user display are referred to as slots (e.g., ad slots). - To facilitate searching of these resources, the
system 100 can include asearch system 112 that identifies the resources by crawling and indexing the resources provided by the content publishers on thewebsites 104. Data about the resources can be indexed based on the resource to which the data corresponds. The indexed and, optionally, cached copies of the resources can be stored in anindexed cache 114. -
User devices 106 can submitsearch queries 116 to thesearch system 112 over thenetwork 102. In response, thesearch system 112 can, for example, access the indexedcache 114 to identify resources that are relevant to thesearch query 116. Thesearch system 112 identifies the resources in the form ofsearch results 118 and returns the search results 118 to theuser devices 106 in search results pages. Asearch result 118 can be data generated by thesearch system 112 that identifies a resource that is provided in response to a particular search query, and includes a link to the resource. In some implementations, the search results 118 include the content itself, such as a map, or an answer, such as in response to a query for a store's products, phone number, address or hours of operation. Anexample search result 118 can include a webpage title, a snippet of text or a portion of an image extracted from the webpage, and the URL of the webpage. Search results pages can also include one or more slots in which other content items (e.g., ads) can be presented. - In some implementations, slots on search results pages or other webpages can include content slots for content items that have been provided as part of a reservation process. In a reservation process, a publisher and a content item sponsor enter into an agreement where the publisher agrees to publish a given content item (or campaign) in accordance with a schedule (e.g., provide 1000 impressions by date X) or other publication criteria. In some implementations, content items that are selected to fill the requests for content slots can be selected based, at least in part, on priorities associated with a reservation process (e.g., based on urgency to fulfill a reservation).
- When a
resource 105, search results 118 and/or other content are requested by auser device 106, thecontent management system 110 receives a request for content. The request for content can include characteristics of the slots that are defined for the requested resource or search results page, and can be provided to thecontent management system 110. - For example, a reference (e.g., URL) to the resource for which the slot is defined, a size of the slot, and/or media types that are available for presentation in the slot can be provided to the
content management system 110 in association with a given request. Similarly, keywords associated with a requested resource (“resource keywords”) or asearch query 116 for which search results are requested can also be provided to thecontent management system 110 to facilitate identification of content that is relevant to the resource orsearch query 116. - Based at least in part on data included in the request, the
content management system 110 can select content that is eligible to be provided in response to the request (“eligible content items”). For example, eligible content items can include eligible ads having characteristics matching the characteristics of ad slots and that are identified as relevant to specified resource keywords or search queries 116. In some implementations, the selection of the eligible content items can further depend on user signals, such as demographic signals and behavioral signals. Eligible content items that are selected in response to a request for content can include, for example, the content items 131, some of which can be modified (e.g., to include different attributes) based on information from theexperiments 134. - The
content management system 110 can select from the eligible content items that are to be provided for presentation in slots of a resource or search results page based at least in part on results of an auction (or by some other selection process). For example, for the eligible content items, thecontent management system 110 can receive offers fromcontent sponsors 108 and allocate the slots, based at least in part on the received offers (e.g., based on the highest bidders at the conclusion of the auction or based on other criteria, such as those related to satisfying open reservations). The offers represent the amounts that the content sponsors are willing to pay for presentation (or selection or other interaction with) of their content with a resource or search results page. For example, an offer can specify an amount that a content sponsor is willing to pay for each 1000 impressions (i.e., presentations) of the content item, referred to as a CPM bid. Alternatively, the offer can specify an amount that the content sponsor is willing to pay (e.g., a cost per engagement) for a selection (i.e., a click-through) of the content item or a conversion following selection of the content item. For example, the selected content item can be determined based on the offers alone, or based on the offers of each content sponsor being multiplied by one or more factors, such as quality scores derived from content performance, landing page scores, and/or other factors. - A conversion can be said to occur when a user performs a particular transaction or action related to a content item provided with a resource or search results page. What constitutes a conversion may vary from case-to-case and can be determined in a variety of ways. For example, a conversion may occur when a user clicks on a content item (e.g., an ad), is referred to a webpage, and consummates a purchase there before leaving that webpage. A conversion can also be defined by a content provider to be any measurable or observable user action, such as downloading a white paper, navigating to at least a given depth of a website, viewing at least a certain number of webpages, spending at least a predetermined amount of time on a website or webpage, registering on a website, experiencing media, or performing a social action regarding a content item (e.g., an ad), such as republishing or sharing the content item. Other actions that constitute a conversion can also be used.
- In some implementations, conversions may be more likely to occur when a user is presented with a content item having attributes that have been selected/modified based on performance-based experimentation. For example, the user may be more likely to interact with an advertisement if the advertisement has been created or altered to include attributes that perform better than other attributes.
- For situations in which the systems discussed here collect and/or use personal information about users, the users may be provided with an opportunity to enable/disable or control programs or features that may collect and/or use personal information (e.g., information about a user's social network, social actions or activities, a user's preferences or a user's current location). In addition, certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information associated with the user is removed. For example, a user's identity may be anonymized so that the no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined.
-
FIG. 2 shows anexample system 200 for automatic attribute optimization of content items. Thesystem 200 can include, for example, the subsystems 121-126, each of which can be associated with one or more of example stages 1-6 for executing experiments that vary attributes of served content items and use the results to suggest new or modified content items. - At stage 1, for example, the
attribute inference subsystem 121 can analyze the inventory of content items 131 and tag each content item with one or more attributes that are related to attributes types such as content concepts, format, included content, semantics, syntax, or other characteristics that may affect performance. Theattribute inference subsystem 121 can automatically identify the attributes and/or a sponsor (e.g., content sponsor 108) of a respective content item can identify the attributes and provide the information to theattribute inference subsystem 121. The attributes can be stored, for example, in a data store ofattributes 132. - In some implementations, the
attribute inference subsystem 121 can evaluate each content item to determine concepts included in the content item, presentation attributes including format and layout attributes, and included content. For example, theattribute inference subsystem 121 can identify the way(s) that content (e.g., text) is structured. In some implementations, theattribute inference subsystem 121 can analyze the content, for example, to locate nouns, verbs, brand names, words or phrases (e.g., “sale”, “free shipping”) and other aspects of the content in order to identify concepts (e.g., entities) associated with the content item. In some implementations, theattribute inference subsystem 121 can analyze presentation format (e.g., including the layout, whether site links are included, and other presentation features) and content elements (e.g., whether images, click-to-call, maps or other elements are present). In some implementations, theattribute inference subsystem 121 can analyze the presence or absence of calls-to-action such as “Buy now!” or other types of call-to-action messages. - In some implementations, the
attribute inference subsystem 121 can use natural language or machine learning processing to evaluate syntax and/or semantic content of the content item. Theattribute inference subsystem 121, for example, can perform syntactic parsing to identify grammar, structure, characters/syllables per word, sentence complexity (e.g., words per sentence), point of view (e.g., user or company), punctuation (e.g., exclamation points, etc.), and other syntactic features. - Example tags can include information regarding: a) the domain name of an associated uniform resource locator (URL) included in the creative or that identifies the creative, b) the length of the creative text, c) n-gram phrases used in the creative, d) semantic entities detected in the creative, e) the language of the creative, f) natural language constructs detected in the creative, g) the capitalization pattern of the text in the creative, h) the characters per word, i) domain of the landing page, j) the n-gram phrases used on the landing page, k) the semantic entities detected in the landing page, l) the presence of various structured data on the landing page, m) the position at which search results for the same domain historically rank in the search results, and/or other information. In some implementations, tags can be determined using, or extracted from, related metadata.
- In some implementations, the
attribute inference subsystem 121 can assign one or more scores to a content item. For example, a content item can have a higher than average score for sentence complexity if content item sentence lengths are predicted to result in higher than average performance. - At
stage 2, for example, theanalysis subsystem 122 can evaluate the log of servedcontent items 133 that have been tagged to identify salient attributes related to one or more performance metrics. One or more inferences related to the identified salient attributes can be determined. For example, theanalysis subsystem 122 can evaluate historical information for previously served content items and their attributes in order to identify attributes associated with best performing content items. - In some implementations, one or more of the one or more performance metrics can be selected by a content sponsor associated with a content item in the inventory. For example, content sponsors 108 can choose one or more performance metrics by which their content items are to be measured, including raw performance metrics (e.g., click-throughs, reserve prices, and impressions), return on investment (ROI), or other available metrics that can be optimized for selecting content. Alternatively, performance metrics can be automatically selected for a given content sponsor.
- Completing
stage 2, one or more inferences can be drawn from the performance metrics and the corresponding determined attributes. In some implementations, inferences can include inferences that identify best performing or most significant attributes associated with a given performance metric. In some implementations, a significance of a value or the presence (or absence) of a given attribute can be determined. The significance can be measured as an increase (or corresponding decrease) in effectiveness (as measured by the selected performance metric). In some implementations, the evaluation can be made on inventory associated with a given content sponsor (e.g., a content sponsor's own inventory, history of deliveries and user interactions is evaluated). Alternatively, evaluation (and inferences) can be made based on inventory, deliveries and interactions associated with other content sponsors. In some implementations, historical data can be treated as correlative, not causative, information. For example, historical data can be used to indicate the strength of a correlation between performance metrics and a Boolean presence/absence of an attribute and/or a numeric value for the attribute. - At
stage 3, for example, theexperiment subsystem 123 can automatically create one or more experiments to substantiate the inferences related to the identified salient attributes. For example, theexperiment subsystem 123 can generateexperiments 134 that each varies an attribute for which it is inferred that the particular attribute may have a significant influence on performance, e.g., as determined by strong correlations as calculated instage 2. - In some implementations, the
experiment subsystem 123 can be adapted to automatically generate multi-arm experiments based on the inferences. For example, theexperiment subsystem 123 can automatically construct and run multi-arm experiments across one or more content items for eachcontent sponsor 108. As an example, variant 1 of a given advertisement can be selected for 1% of search queries,variant 2 can be selected for another 1%, and so on. In some implementations, information can be logged that identifies, for example, which variants of which content item were provided for which queries. Each of the variants, for example, can vary one attribute of the content item. Depending on the experiment results, an inference related to the varied attribute can be validated. - In some implementations, the
experiment subsystem 123 can be adapted to automatically generate experiments for a given content sponsor for a plurality of content items in one or more campaigns associated with the content sponsor. As an example, theexperiment subsystem 123 can automatically create experiments for a small percentage of a content sponsor's advertisements, which can include a number of advertisements in one or more of the content sponsor's campaigns. - In some implementations, for each experiment, the
experiment subsystem 123 can provide, as an output, the inferences. For example, the inferences can be of the form of an identification of an attribute, a predicted performance effect associated with a value, the presence or lack thereof of the attribute in a given content item, and a measure of the statistical confidence associated with the predicted performance effect. Theexperiment subsystem 123, for example, can analyze aggregated information about metrics associated with each attribute, and this can occur with or without information obtained by running experiments. As an example, theexperiment subsystem 123 may determine that creatives having more than 15 words have a click-through rate (CTR) of X %, and shorter creatives have a lower CTR of Y %. Other inferences can also be provided as an output. As another example, theexperiment subsystem 123 can determine that creatives having more than 15 words have a statistically significant higher CTR than shorter creatives, without identifying specific CTRs. - In some implementations, correlations from
stages - At
stage 4, for example, theprocessing subsystem 124 can deliver results, including suggestions, based on substantiated inferences developed after evaluation of experimentation data derived by theexperiment subsystem 123. As an example, theprocessing subsystem 124 can generatesuggestions 136 that are based on substantiated inferences, e.g., which values and/or attributes showed noticeably significantly (e.g., statistically significant) better performance. - In some implementations, the
processing subsystem 124 can develop the results including identifying recommendations for changes to one or more content items in inventory. For example, one of thesuggestions 136 that theprocessing subsystem 124 can develop can be to increase the number of words in a creative to 16 or more, e.g., based on evaluating the results of one or more experiments. In some implementations, theprocessing subsystem 124 can provide the recommendations to acontent sponsor 108 or to the contentitem creation subsystem 126 such that manual or automatic changes to the one or more content items in inventory can be made based on the recommendations. For example, a content sponsor interface can be used to present one or more of thesuggestions 136 to thecontent sponsor 108, e.g., to modify existing campaigns. Further, information associated with the suggestions can be used in the creation of new content items, e.g., to suggest that beneficial attributes are included in a creative, to suggest the deletion of existing creatives/campaigns which possess those poorly performing attributes, and to suggest deletion of attributes that are likely to decrease the performance of a creative. - At
stage 5, for example, the contentitem serving subsystem 125 can serve content items from inventory responsive to received requests for content. In some implementations, the contentitem serving subsystem 125 can include a selection tool for identifying eligible content items from inventory to serve responsive to each received request. The contentitem serving subsystem 125 can be adapted to receive, as an input from theexperiment subsystem 123, identification of experiment parameters for an experiment. The experiment parameters can include, for example, at least one selection criterion that describes an attribute that is related to a performance inference associated with a given experiment. The selection tool can use the selection criteria to identify a portion of traffic to be served. In this way, experiment results can be determined and evaluated by theexperiment subsystem 123 on that portion of traffic so as to substantiate or repudiate the associated performance inference. - At
stage 6, for example, the contentitem creation subsystem 126 can create content items for inclusion in inventory. For example, the contentitem creation subsystem 126 can create advertisements and/or other content items for storage in the inventory of content items 131. - In some implementations, the content
item creation subsystem 126 can receive results from theprocessing subsystem 124 and use the results when creating content items. For example, information associated with thesuggestions 136 can be used when generating content items (e.g., advertisements) for the inventory of content items 131. - In some implementations, the content
item creation subsystem 126 can be a manual system and can receive content items from content sponsors. In some implementations, the contentitem creation subsystem 126 can be configured to receive results from theprocessing subsystem 124 and make suggestions tocontent sponsors 108 about proposed content items (or changes to be made to proposed content items) for inclusion in a campaign (e.g., an advertising campaign). -
FIG. 3 is a flowchart of anexample process 300 for automatic optimization of attributes in content items. In some implementations, thecontent management system 110 and its subsystems 121-126 can perform stages of theprocess 300 using instructions that are executed by one or more processors.FIGS. 1-2 are used to provide example structures for performing the stages of theprocess 300. - An inventory of content items is identified that includes content items that are proposed to be served in response to received requests for content (302). For example, the
content management system 110 can identify the inventory of content items 131 that contains content items (e.g., advertisements) that can be provided in response to requests for content (e.g., to fill an advertisement slot). - Each content item in the inventory is evaluated to determine one or more attributes associated with a respective content item, and each content item in inventory is tagged with respective determined attributes (304). The attributes can relate to attribute types such as content concepts, format, included content, semantics, syntax, or other characteristics that may affect performance. As an example, the
attribute inference subsystem 121 can analyze an inventory of content items 131 and tag each content item with one or more attributes. - A log of served content items that have been tagged is evaluated to identify salient attributes related to one or more performance metrics and inferences related to the identified salient attributes (306). For example, the
analysis subsystem 122 can evaluate the log of servedcontent items 133 that have been tagged to identify how well content items having specific attributes have performed, e.g., when provided to a user. Using the analysis, for example, theanalysis subsystem 122 can identify salient attributes related to one or more performance metrics and determine inferences related to the identified salient attributes. - One or more experiments are automatically created to substantiate the inferences related to the identified salient attributes (308). As an example, the
experiment subsystem 123 can automatically create one or more experiments, each varying an attribute relative to at least one other experiment, to substantiate the inferences related to the identified salient attributes. - Results are delivered that are based on substantiated/repudiated inferences developed after evaluation of experimentation data derived by the experiment subsystem (310). For example, the
processing subsystem 124 can developsuggestions 136, including identifying recommendations for changes to one or more content items in inventory. For example, one of thesuggestions 136 that theprocessing subsystem 124 can develop can be a suggestion to reduce the number of words in a creative to 15 or fewer, e.g., based on evaluating the results of experiments. In some implementations, theprocessing subsystem 124 can provide the recommendations to acontent sponsor 108 or to the contentitem creation subsystem 126 such that manual or automatic changes to the one or more content items in inventory can be made based on the recommendations. For example, a content sponsor interface can be used to present one or more of thesuggestions 136 to thecontent sponsor 108, e.g., to modify existing campaigns or to create new creatives. -
FIG. 4 is a block diagram ofexample computing devices Computing device 400 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers.Computing device 400 is further intended to represent any other typically non-mobile devices, such as televisions or other electronic devices with one or more processers embedded therein or attached thereto.Computing device 450 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smartphones, and other computing devices. The components shown here, their connections and relationships, and their functions, are meant to be examples only, and are not meant to limit implementations of the inventions described and/or claimed in this document. -
Computing device 400 includes aprocessor 402,memory 404, astorage device 406, a high-speed controller 408 connecting tomemory 404 and high-speed expansion ports 410, and a low-speed controller 412 connecting to low-speed bus 414 andstorage device 406. Each of thecomponents processor 402 can process instructions for execution within thecomputing device 400, including instructions stored in thememory 404 or on thestorage device 406 to display graphical information for a GUI on an external input/output device, such asdisplay 416 coupled to high-speed controller 408. In other implementations, multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory. Also,multiple computing devices 400 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system). - The
memory 404 stores information within thecomputing device 400. In one implementation, thememory 404 is a computer-readable medium. In one implementation, thememory 404 is a volatile memory unit or units. In another implementation, thememory 404 is a non-volatile memory unit or units. - The
storage device 406 is capable of providing mass storage for thecomputing device 400. In one implementation, thestorage device 406 is a computer-readable medium. In various different implementations, thestorage device 406 may be a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations. In one implementation, a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that, when executed, perform one or more methods, such as those described above. The information carrier is a computer- or machine-readable medium, such as thememory 404, thestorage device 406, or memory onprocessor 402. - The high-
speed controller 408 manages bandwidth-intensive operations for thecomputing device 400, while the low-speed controller 412 manages lower bandwidth-intensive operations. Such allocation of duties is an example only. In one implementation, the high-speed controller 408 is coupled tomemory 404, display 416 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 410, which may accept various expansion cards (not shown). In the implementation, low-speed controller 412 is coupled tostorage device 406 and low-speed bus 414. The low-speed bus 414 (e.g., a low-speed expansion port), which may include various communication ports (e.g., USB, Bluetooth®, Ethernet, wireless Ethernet), may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter. - The
computing device 400 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as astandard server 420, or multiple times in a group of such servers. It may also be implemented as part of arack server system 424. In addition, it may be implemented in a personal computer such as alaptop computer 422. Alternatively, components fromcomputing device 400 may be combined with other components in a mobile device (not shown), such ascomputing device 450. Each of such devices may contain one or more ofcomputing devices multiple computing devices -
Computing device 450 includes aprocessor 452,memory 464, an input/output device such as adisplay 454, acommunication interface 466, and atransceiver 468, among other components. Thecomputing device 450 may also be provided with a storage device, such as a micro-drive or other device, to provide additional storage. Each of thecomponents - The
processor 452 can process instructions for execution within thecomputing device 450, including instructions stored in thememory 464. The processor may also include separate analog and digital processors. The processor may provide, for example, for coordination of the other components of thecomputing device 450, such as control of user interfaces, applications run by computingdevice 450, and wireless communication bycomputing device 450. -
Processor 452 may communicate with a user throughcontrol interface 458 anddisplay interface 456 coupled to adisplay 454. Thedisplay 454 may be, for example, a TFT LCD display or an OLED display, or other appropriate display technology. Thedisplay interface 456 may comprise appropriate circuitry for driving thedisplay 454 to present graphical and other information to a user. Thecontrol interface 458 may receive commands from a user and convert them for submission to theprocessor 452. In addition, anexternal interface 462 may be provided in communication withprocessor 452, so as to enable near area communication ofcomputing device 450 with other devices.External interface 462 may provide, for example, for wired communication (e.g., via a docking procedure) or for wireless communication (e.g., via Bluetooth® or other such technologies). - The
memory 464 stores information within thecomputing device 450. In one implementation, thememory 464 is a computer-readable medium. In one implementation, thememory 464 is a volatile memory unit or units. In another implementation, thememory 464 is a non-volatile memory unit or units.Expansion memory 474 may also be provided and connected tocomputing device 450 throughexpansion interface 472, which may include, for example, a subscriber identification module (SIM) card interface.Such expansion memory 474 may provide extra storage space forcomputing device 450, or may also store applications or other information forcomputing device 450. Specifically,expansion memory 474 may include instructions to carry out or supplement the processes described above, and may include secure information also. Thus, for example,expansion memory 474 may be provide as a security module forcomputing device 450, and may be programmed with instructions that permit secure use ofcomputing device 450. In addition, secure applications may be provided via the SIM cards, along with additional information, such as placing identifying information on the SIM card in a non-hackable manner. - The memory may include for example, flash memory and/or MRAM memory, as discussed below. In one implementation, a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that, when executed, perform one or more methods, such as those described above. The information carrier is a computer- or machine-readable medium, such as the
memory 464,expansion memory 474, or memory onprocessor 452. -
Computing device 450 may communicate wirelessly throughcommunication interface 466, which may include digital signal processing circuitry where necessary.Communication interface 466 may provide for communications under various modes or protocols, such as GSM voice calls, SMS, EMS, or MMS messaging, CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS, among others. Such communication may occur, for example, through transceiver 468 (e.g., a radio-frequency transceiver). In addition, short-range communication may occur, such as using a Bluetooth®, WiFi, or other such transceiver (not shown). In addition,GPS receiver module 470 may provide additional wireless data tocomputing device 450, which may be used as appropriate by applications running oncomputing device 450. -
Computing device 450 may also communicate audibly usingaudio codec 460, which may receive spoken information from a user and convert it to usable digital information.Audio codec 460 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset ofcomputing device 450. Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating oncomputing device 450. - The
computing device 450 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as acellular telephone 480. It may also be implemented as part of asmartphone 482, personal digital assistant, or other mobile device. - Various implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- These computer programs (also known as programs, software, software applications or code) include machine instructions for a programmable processor, and can be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly/machine language. Other programming paradigms can be used, e.g., functional programming, logical programming, or other programming. As used herein, the terms “machine-readable medium” “computer-readable medium” refers to any computer program product, apparatus and/or device (e.g., magnetic discs, optical disks, memory, Programmable Logic Devices (PLDs)) used to provide machine instructions and/or data to a programmable processor, including a machine-readable medium that receives machine instructions as a machine-readable signal. The term “machine-readable signal” refers to any signal used to provide machine instructions and/or data to a programmable processor.
- To provide for interaction with a user, the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user can be received in any form, including acoustic, speech, or tactile input.
- The systems and techniques described here can be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back end, middleware, or front end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network (“LAN”), a wide area network (“WAN”), and the Internet.
- The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any inventions or of what may be claimed, but rather as descriptions of features specific to particular implementations of particular inventions. Certain features that are described in this specification in the context of separate implementations can also be implemented in combination in a single implementation. Conversely, various features that are described in the context of a single implementation can also be implemented in multiple implementations separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
- Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In certain circumstances, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the implementations described above should not be understood as requiring such separation in all implementations, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
- Thus, particular implementations of the subject matter have been described. Other implementations are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In certain implementations, multitasking and parallel processing may be advantageous.
Claims (20)
1. A system comprising:
an attribute inference subsystem, including one or more computers, that analyzes an inventory of content items and assigns tags to each content item specifying one or more attributes of content in that content item that may affect performance of that content item;
an analysis subsystem, including one or more computers, that evaluates a log of served content items that have been tagged and identifies inferences as to which of the attributes lead to better performance of a given content item from the inventory of content items, including identifying a set of the attributes that are included in a set of highest performing content items from the inventory of content items;
an experiment subsystem, including one or more computers, that:
automatically creates, for the given content item, a plurality of experiments to substantiate the inferences as to which of the attributes leads to better performance of the given content item when present in the given content item, wherein the experiment subsystem creates a first experiment in which the experiment subsystem creates a modified content item by omitting a given attribute of the given content item from the given content item, and creates a second experiment in which the given attribute is included in the given content item;
delivers the modified content item from which the given attribute is omitted for a first portion of search queries that are assigned to the first experiment and delivers the given content item that includes the given attribute for a second portion of the search queries that are assigned to the second experiment; and
tracks performance of the modified content item from which the given attribute is omitted and tracks performance of the given content item that includes the given attribute when delivered according to the plurality of experiments; and
a processing subsystem that delivers results of the plurality of experiments using the tracked performance, including substantiating one or more of the inferences based on different levels of performance between the modified content item from which the given attribute was omitted and the given content item that includes the given attribute.
2. The system of claim 1 wherein the attribute inference subsystem evaluates each content item to determine concepts included in the content item, presentation attributes including format and layout attributes, and included content, and wherein the attribute inference subsystem uses natural language or machine learning processing to evaluate syntax or semantic content of the content item.
3. The system of claim 1 further comprising a content item creation subsystem that creates content items for inclusion in inventory, the content item creation subsystem receiving results from the processing subsystem and using the results when creating content items.
4. The system of claim 3 wherein the content item creation subsystem is a manual system and receives content items from content sponsors and wherein the content item creation subsystem is configured to receive results from the processing subsystem and make suggestions to content sponsors about proposed content items for inclusion in a campaign.
5. The system of claim 1 wherein tracking performance of the modified content item is based, at least in part, on performance metrics selected by a content sponsor associated with a content item in the inventory.
6. The system of claim 3 wherein the processing subsystem develops the results including identifying recommendations for changes to one or more content items in inventory, provides the recommendations to a content sponsor or to the content item creation subsystem such that manual or automatic changes to the one or more content items in inventory can be made based on the recommendations.
7. (canceled)
8. The system of claim 1 wherein the experiment subsystem is adapted to automatically generate multi-arm experiments based on the inferences.
9. The system of claim 8 wherein the experiment subsystem is adapted to automatically generate experiments for a given content sponsor for a plurality of content items in one or more campaigns associated with the given content sponsor.
10. The system of claim 8 wherein, for each experiment, the experiment subsystem provides as an output the inferences wherein the inferences are of a form of an identification of an attribute, a predicted performance effect associated with a value, a presence or lack thereof in a given content item, and a measure of a statistical confidence associated with the predicted performance effect.
11. A computer-implemented method comprising:
identifying an inventory of content items that are proposed to be served in response to received search queries;
evaluating each content item in the inventory to determine one or more attributes of content in a respective content item, and assigning tags to each content item in inventory with respective determined attributes, wherein the attributes may affect performance of that content item;
evaluating a log of served content items that have been tagged and identifies inferences as to which of the attributes lead to better performance of a given content item from the inventory of content items, including identifying a set of the attributes that are included in a set of highest performing content items from the inventory of content items;
automatically creating, for the given content item, a plurality of experiments to substantiate the inferences as to which of the attributes leads to better performance of the given content item when present in the given content item, including creating a first experiment in which a modified content item is created by omitting a given attribute of the given content item from the given content item, and creating a second experiment in which the given attribute is included in the given content item;
delivering the modified content item from which the given attribute is omitted for a first portion of search queries that are assigned to the first experiment and delivering the given content item that includes the given attribute for a second portion of the search queries that are assigned to the second experiment;
tracking performance of the modified content item from which the given attribute is omitted and tracking performance of the given content item that includes the given attribute when delivered according to the plurality of experiments; and
delivering results of the plurality of experiments using the tracked performance, including substantiating one or more of the inferences based on different levels of performance between the modified content item from which the given attribute was omitted and the given content item that includes the given attribute.
12. The computer-implemented method of claim 11 wherein evaluating includes evaluating each content item to determine concepts included in the content item and one or more presentation attributes including format and layout attributes, and wherein evaluating further includes using natural language or machine learning processing to evaluate syntax or semantic content of the content item.
13. The computer-implemented method of claim 11 further comprising creating content items for inclusion in inventory based at least in part on the substantiating.
14. The computer-implemented method of claim 13 wherein creating content items for inclusion in inventory is a manual process using at least content items received from content sponsors, and wherein the computer-implemented method further includes making suggestions to content sponsors about proposed content items for inclusion in a campaign.
15. The computer-implemented method of claim 11 wherein tracking performance of the modified content item is based, at least in part, on performance metrics selected by a given content sponsor associated with the given content item.
16. The computer-implemented method of claim 11 wherein delivering results includes identifying recommendations for changes to one or more content items in inventory and providing the recommendations to a content sponsor or to a content item creation system such that manual or automatic changes to the one or more content items in inventory can be made based on the recommendations.
17. (canceled)
18. The computer-implemented method of claim 11 further comprising generating multi-arm experiments based on the inferences.
19. The computer-implemented method of claim 18 further comprising automatically generating experiments for a given content sponsor for a plurality of content items in one or more campaigns associated with the given content sponsor.
20. A computer program product embodied in a non-transitive computer-readable medium including instructions, that when executed, cause one or more processors to:
identify an inventory of content items that are proposed to be served in response to received search queries;
evaluate each content item in the inventory to determine one or more attributes of content in a respective content item, and assigning tags to each content item in inventory with respective determined attributes, wherein the attributes may affect performance of that content item;;
evaluate a log of served content items that have been tagged and identifies inferences as to which of the attributes lead to better performance of a given content item from the inventory of content items, including identifying a set of the attributes that are included in a set of highest performing content items from the inventory of content items;
automatically create, for the given content item, a plurality of experiments to substantiate the inferences as to which of the attributes leads to better performance of the given content item when present in the given content item, including creating a first experiment in which a modified content item is created by omitting a given attribute of the given content item from the given content item, and creating a second experiment in which the given attribute is included in the given content item;
deliver the modified content item from which the given attribute is omitted for a first portion of search queries that are assigned to the first experiment and deliver the given content item that includes the given attribute for a second portion of the search queries that are assigned to the second experiment;
track performance of the modified content item from which the given attribute is omitted and track performance of the given content item that includes the given attribute when delivered according to the plurality of experiments; and
deliver results of the plurality of experiments using the tracked performance, including substantiating one or more of the inferences based on different levels of performance between the modified content item from which the given attribute was omitted and the given content item that includes the given attribute.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/974,665 US20170316314A1 (en) | 2013-08-23 | 2013-08-23 | Automatic optimization of content items |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/974,665 US20170316314A1 (en) | 2013-08-23 | 2013-08-23 | Automatic optimization of content items |
Publications (1)
Publication Number | Publication Date |
---|---|
US20170316314A1 true US20170316314A1 (en) | 2017-11-02 |
Family
ID=60158407
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/974,665 Abandoned US20170316314A1 (en) | 2013-08-23 | 2013-08-23 | Automatic optimization of content items |
Country Status (1)
Country | Link |
---|---|
US (1) | US20170316314A1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11163620B2 (en) * | 2019-05-20 | 2021-11-02 | Fujitsu Limited | Predicting API endpoint descriptions from API documentation |
Citations (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080195664A1 (en) * | 2006-12-13 | 2008-08-14 | Quickplay Media Inc. | Automated Content Tag Processing for Mobile Media |
US20110295864A1 (en) * | 2010-05-29 | 2011-12-01 | Martin Betz | Iterative fact-extraction |
-
2013
- 2013-08-23 US US13/974,665 patent/US20170316314A1/en not_active Abandoned
Patent Citations (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080195664A1 (en) * | 2006-12-13 | 2008-08-14 | Quickplay Media Inc. | Automated Content Tag Processing for Mobile Media |
US20110295864A1 (en) * | 2010-05-29 | 2011-12-01 | Martin Betz | Iterative fact-extraction |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11163620B2 (en) * | 2019-05-20 | 2021-11-02 | Fujitsu Limited | Predicting API endpoint descriptions from API documentation |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11361344B2 (en) | Combining content with a search result | |
US20200090230A1 (en) | Systems and methods for suggesting creative types for online content items to an advertiser | |
KR101769058B1 (en) | Hashtags and content presentation | |
US9690847B2 (en) | Selecting content using query-independent scores of query segments | |
US11138210B2 (en) | Augmenting a content item using search results content | |
US9064264B2 (en) | Predicting visibility of content items | |
US11720920B1 (en) | Combining content with a search result | |
US20170109785A1 (en) | Providing content with branding labels | |
US20150287096A1 (en) | Bid control through semantic signals expressed in natural language | |
US8712850B1 (en) | Promoting content | |
US9792371B1 (en) | Automatic synthesis and evaluation of content | |
US9466029B1 (en) | Demographic inference calibration | |
US10580045B1 (en) | Promoting content into a creative | |
US20170316314A1 (en) | Automatic optimization of content items | |
US20170372377A1 (en) | Providing image-like versions of text advertisements | |
US20150066659A1 (en) | Ranking Content Items Based on a Value of Learning | |
US20180033054A1 (en) | Content unit creation | |
US9460466B2 (en) | Limiting bid selection to eligible content items | |
US11347763B2 (en) | Providing a notification in place of content item | |
US20190286745A1 (en) | Community-based recommendations | |
US20150039459A1 (en) | Determining a price associated with a winning bid | |
US20150262186A1 (en) | Pricing Content Items in Groups | |
US20180285922A1 (en) | Suggesting category changes to campaigns |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:MENGLE, ADVAY;RAMACHANDRAN, VENKY;REEL/FRAME:031071/0880Effective date: 20130822 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044567/0001Effective date: 20170929 |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
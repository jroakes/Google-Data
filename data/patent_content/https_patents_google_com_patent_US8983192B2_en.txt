US8983192B2 - High-confidence labeling of video volumes in a video sharing service - Google Patents
High-confidence labeling of video volumes in a video sharing service Download PDFInfo
- Publication number
- US8983192B2 US8983192B2 US13/601,802 US201213601802A US8983192B2 US 8983192 B2 US8983192 B2 US 8983192B2 US 201213601802 A US201213601802 A US 201213601802A US 8983192 B2 US8983192 B2 US 8983192B2
- Authority
- US
- United States
- Prior art keywords
- volume
- video
- volumes
- candidate
- label
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N9/00—Details of colour television systems
- H04N9/79—Processing of colour television signals in connection with recording
- H04N9/80—Transformation of the television signal for recording, e.g. modulation, frequency changing; Inverse transformation for playback
- H04N9/82—Transformation of the television signal for recording, e.g. modulation, frequency changing; Inverse transformation for playback the individual colour picture signal components being recorded simultaneously only
- H04N9/8205—Transformation of the television signal for recording, e.g. modulation, frequency changing; Inverse transformation for playback the individual colour picture signal components being recorded simultaneously only involving the multiplexing of an additional signal and the colour video signal
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/40—Scenes; Scene-specific elements in video content
- G06V20/41—Higher-level, semantic clustering, classification or understanding of video scenes, e.g. detection, labelling or Markovian modelling of sport events or news items
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/40—Scenes; Scene-specific elements in video content
- G06V20/46—Extracting features or characteristics from the video content, e.g. video fingerprints, representative shots or key frames
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/70—Labelling scene content, e.g. deriving syntactic or semantic representations
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/23—Processing of content or additional data; Elementary server operations; Server middleware
- H04N21/234—Processing of video elementary streams, e.g. splicing of video streams, manipulating MPEG-4 scene graphs
- H04N21/23418—Processing of video elementary streams, e.g. splicing of video streams, manipulating MPEG-4 scene graphs involving operations for analysing video streams, e.g. detecting features or characteristics
Definitions
- the present disclosure generally relates to the field of digital video, and more specifically, to labeling temporal and spatial portions of videos that represent particular objects or actions.
- a typical digital video depicts multiple semantic objects or actions, such as animals, vehicles, stationary objects, and the like.
- Existing video analysis techniques permit some degree of automated labeling of a video as a whole, such as determining that the video as a whole depicts a particular animal or type of vehicle.
- existing techniques do not adequately support the identification of particular video segments, and the particular spatial regions within those video segments, that represent a particular object or action, without preexisting indications of the meanings of different video segments.
- a computer-implemented method comprises identifying, in a plurality of digital videos, a plurality of candidate volumes representing spatio-temporal segments of the digital videos, wherein each of the candidate volumes corresponds to a contiguous sequence of spatial portions of the video frames having a starting time and an ending time, and potentially represents a discrete object or action within the video frames.
- the method further comprises determining, for each of the identified candidate volumes, features characterizing the candidate volume, wherein the features are determined from visual properties of the spatial portions of the video frames contained in the candidate volumes, and assigning a verified label to each volume of a plurality of the identified candidate volumes using the determined features, the verified label indicating a particular object or action represented by the volume to which the label is assigned.
- a computer-readable storage medium has executable computer program instructions embodied therein, actions of the computer program comprising identifying, in a plurality of digital videos, a plurality of candidate volumes representing spatio-temporal segments of the digital videos, wherein each of the candidate volumes corresponds to a contiguous sequence of spatial portions of the video frames having a starting time and an ending time, and potentially represents a discrete object or action within the video frames.
- the actions further comprise determining, for each of the identified candidate volumes, features characterizing the candidate volume, wherein the features are determined from visual properties of the spatial portions of the video frames contained in the candidate volumes, and assigning a verified label to each volume of a plurality of the identified candidate volumes using the determined features, the verified label indicating a particular object or action represented by the volume to which the label is assigned.
- a computer system comprises a computer processor and a computer-readable storage medium having executable computer program instructions embodied therein.
- the instructions When executed by the computer processor the instructions perform actions comprising identifying, in a plurality of digital videos, a plurality of candidate volumes representing spatio-temporal segments of the digital videos, wherein each of the candidate volumes corresponds to a contiguous sequence of spatial portions of the video frames having a starting time and an ending time, and potentially represents a discrete object or action within the video frames.
- the actions further comprise determining, for each of the identified candidate volumes, features characterizing the candidate volume, wherein the features are determined from visual properties of the spatial portions of the video frames contained in the candidate volumes, and assigning a verified label to each volume of a plurality of the identified candidate volumes using the determined features, the verified label indicating a particular object or action represented by the volume to which the label is assigned.
- FIG. 1 is a block diagram of a video hosting service in which video volume labeling takes place, according to one embodiment.
- FIG. 2 illustrates an example video and its constituent video volumes.
- FIG. 3 is a data flow diagram representing the relationships and derivations of the various types of data analyzed, produced, and/or applied by the volume identification module, according to one embodiment.
- FIG. 4 illustrates the various components of the volume identification module of FIG. 1 , according to one embodiment.
- FIGS. 5A-5E provide different examples of geometric features for characterizing video volumes, according to some embodiments.
- FIG. 6 illustrates clustering by features, one technique for volume labeling, according to one embodiment.
- FIG. 7 illustrates a machine learning approach for volume labeling, according to one embodiment.
- FIG. 8 illustrates a user interface showing search results that include video volumes, as well as videos as a whole, according to one embodiment.
- FIGS. 9A-9C illustrate techniques for visually emphasizing the selectable volumes within a video, according to some embodiments.
- FIG. 10 illustrates an example user interface for editing a composite video containing a volume, according to one embodiment.
- FIG. 1 is a block diagram of an example video hosting service 100 in which video volumes can be analyzed and labeled, according to one embodiment.
- the video hosting service 100 represents a system such as that of YOUTUBE that stores videos provided by content providers 130 and makes the videos available to clients such as the client device 135 .
- the video hosting service 100 thus communicates with a plurality of content providers 130 and client devices 135 via a network 140 to facilitate sharing of video content between users. Note that for the sake of clarity FIG. 1 depicts only one instance of content provider 130 and client device 135 , though there could be any number of each.
- the video hosting service 100 additionally includes a front end interface 102 , a video serving module 104 , a video search module 106 , an upload server 108 , and a video repository 116 .
- Other conventional features such as firewalls, load balancers, authentication servers, application servers, failover servers, site management tools, and so forth are not shown so as to more clearly illustrate the features of the video hosting service 100 .
- One example of a suitable service 100 is the YOUTUBE website, found at www.youtube.com.
- Other video hosting sites are known, as well, and can be adapted to operate according to the teachings disclosed herein.
- the illustrated components of the video hosting service 100 can be implemented as single or multiple components of software or hardware.
- functions described in one embodiment as being performed by one component can also be performed by other components in other embodiments, or by a combination of components.
- functions described in one embodiment as being performed by components of the video hosting service 100 can also be performed by one or more clients 135 in other embodiments if appropriate.
- Client devices 135 are computing devices that execute client software, e.g., a web browser or built-in client application, to connect to the front end interface 102 of the video hosting service 100 via a network 140 and to display videos.
- client software e.g., a web browser or built-in client application
- the client device 135 might be, for example, a personal computer, a personal digital assistant, a smart phone, a laptop computer, a television “set-top box,” and the like.
- the content provider 130 provides video content to the video hosting service 100 and the client 135 views that content.
- content providers may also be content viewers.
- the content provider 130 may be the same entity that operates the video hosting service 100 .
- the content provider 130 operates a client device to perform various content provider functions.
- Content provider functions may include, for example, uploading a video file to the video hosting service 100 , editing a video file stored by the video hosting service 100 , or editing content provider preferences associated with a video file.
- the client 135 operates on a device to view video content stored by the video hosting service 100 .
- Client 135 may also be used to configure viewer preferences related to video content.
- the client 135 includes an embedded video player such as, for example, the FLASH player from Adobe Systems, Inc. or any other player adapted for the video file formats used in the video hosting service 100 .
- client and content provider as used herein may refer to software providing client and content providing functionality, to hardware on which the software executes, or to the entities operating the software and/or hardware, as is apparent from the context in which the terms are used.
- the upload server 108 of the video hosting service 100 receives video content from a client 135 .
- Received content is stored in the video repository 116 .
- a video serving module 104 provides video data from the video repository 116 to the clients 135 .
- Clients 135 may also search for videos of interest stored in the video repository 116 using a video search module 106 , such as by entering textual queries containing keywords of interest.
- Front end interface 102 provides the interface between client 135 and the various components of the video hosting service 100 .
- the video repository 116 contains a set of videos 117 submitted by content providers 130 .
- the video repository 116 can contain any number of videos 117 , such as tens of thousands or hundreds of millions. Each of the videos 117 has a unique video identifier that distinguishes it from each of the other videos, such as a textual name (e.g., the string “a91qrx8”), an integer, or any other way of uniquely naming a video.
- the videos 117 can be packaged in various containers such as AVI, MP4, or MOV, and can be encoded using video codecs such as MPEG-2, MPEG-4/H.264, WMV, WebM, and the like.
- the videos 117 may—but need not—have associated video-level metadata 117 A that corresponds to the video as a whole, e.g., textual metadata such as a title, description, and/or tags provided by a content provider 130 who uploaded the video.
- Various approaches may be used to extract semantically meaningful labels (e.g., “cat”, “dog”, “yarn”, “running”, “running cat”) from the metadata 117 , such forming n-grams comprising some number of adjacent words from the metadata.
- the video hosting service 100 further comprises a volume identification module 119 that analyzes the videos 117 and assigns labels to “volumes” located within the videos. More specifically, the volume identification module 119 identifies unlabeled volumes in the videos 117 , determines features representative of those volumes, and through analysis of these features then assigns semantically meaningful labels to the volumes. This process is depicted in more detail in FIG. 3 , described below. Volumes are described with reference to FIG. 2 .
- FIG. 2 illustrates an example video 117 and some of its constituent video “volumes.”
- Each video volume corresponds to a spatial portion of pixels extending over a temporally contiguous sequence of frames and has a starting time and an ending time with respect to the video of which it is a part.
- a given volume may representing a subset of the video in which it is located both temporally (i.e., it begins at some time later than the start of the video and/or ends at some time before the end of the video) and spatially (i.e., at least one of the spatial portions corresponding to one of the frames occupies less than the entire frame).
- the example video 117 contains a number of frames (not depicted) arranged sequentially in a temporal order illustrated by the timeline 215 .
- the example video 117 contains a first video volume 220 A, a second video volume 220 B, and a third video volume 220 C. These volumes might represent, for example, a cat 220 A chasing a ball of yarn 220 B, while a dog 220 C sits motionless and observes.
- a volume occupies a substantially contiguous region of pixels.
- the spatial positions of the volumes within the individual video frames can, but need not, change over time.
- the volumes 220 A and 220 B move from left to right over the course of the video, e.g., as the cat chases the ball of yarn.
- the size of the spatial portion of a video frame occupied by a given volume may vary over time.
- the object or action corresponding to the given volume may come closer to the camera over time, in which case the amount of the frames occupied by the volume will become correspondingly larger.
- an object changes its shape e.g., the sitting dog 220 C stands up—the shape of the volume may change over time, as well.
- Volumes can start and end at different times within a video. For example, volumes 220 A and 220 B both start at the first frame t 1 and end near frame t 4 , while volume 220 C starts later at frame t 2 , and ends earlier at around frame t 3 .
- Volumes need not correspond to a rigid object. Rather, a volume may represent an object that can change its shape, such as an articulated creature such as a dog that can move its limbs to shift from a sitting position to a standing position. A volume may also change its shape over time even in the case of a rigid object, such as if the camera changes position to capture a different angle of the same object. Further, a volume need not represent a single physical object, such as an entire human, but can represent an action made up of movements, such as sign language made by the motions of a human hand.
- a volume for an action may also correspond to the same spatio-temporal region as the volume for an object, such as a volume representing both a physical cat object and an action representing the concept of running, or a volume for a physical ball of yarn object and an action representing the concept of rolling.
- the disclosed system provides various methods and means for automatically identifying volumes in videos and automatically assigning semantically meaningful labels, all without direct human selection of the volumes or the labels.
- FIG. 3 is a data flow diagram representing the relationships and derivations of the various types of data analyzed, produced, and/or applied by the volume identification module 119 , according to one embodiment.
- the volume identification module 119 takes, as input, the videos 117 from the video repository 116 of FIG. 1 .
- a typical digital video includes multiple volumes.
- a video as described in FIG. 2 (depicting a cat playing with a ball of yarn and later being joined by a dog that sits and watches) could be described as containing at least three volumes: one volume corresponding to the cat, another volume corresponding to the ball of yarn, and another volume corresponding to the dog.
- Each of these volumes occupies a particular temporal portion of the video corresponding to the portion in which the volume's object is shown in the video.
- each of the volumes has, at every frame, a spatial portion that it occupies, and the spatial portion may change in size, shape, and position over time.
- the volume identification module 119 extracts from each of the videos 117 a set of volumes 330 based on the visual content of the video. For example, FIG. 3 illustrates three volumes 330 A extracted from the first video (e.g., the cat, ball of yarn, and dog of FIG. 2 ), two volumes 330 B extracted from the second video, and three volumes 330 C extracted from the third video.
- the extracted volumes are unlabeled, in that although volume identification module 119 has determined that each volume potentially represents a single semantically meaningful object or action, it is not yet determined what those objects or actions are. That is, although a particular volume may in fact visually represent a dog, to the volume identification module 119 the volume is only a set of data, without any semantic meaning yet determined.
- These unlabeled volumes act as the candidates from which volumes capable of being accurately labeled are later selected, and are hence referred to hereinafter as “candidate volumes.”
- the volume identification module 119 determines, for each candidate volume 330 , a set of features 335 that characterize the visual characteristics of the candidate volume as a whole. Different embodiments extract different types of features that are effective for characterizing volumes. In one embodiment, one feature vector is extracted for each volume. Thus, for the three volumes 330 A for video V 1 , there are three corresponding feature vectors v 1 f 1 , v 1 f 2 , and v 1 f 3 . The same applies to the other videos V 2 and V 3 and their respective volumes 330 B and 330 C. In other embodiments, each volume may have a number of associated feature vectors, one for each different type of feature.
- the volume identification module 119 then analyzes the determined features to select certain ones of the volumes 330 that can be identified with high confidence as having a certain label.
- a label 340 is then applied to the selected videos based on the identification.
- only the first one of the volumes of video V 2 , and the second one of the volumes of the video V 3 are able to be identified with sufficiently high certainty and thus assigned a label—namely, L 2 and L 6 , respectively, where L 2 and L 6 are labels from some previously determined set of possible labels. Again, this assignment happens automatically, without direct human selection of the volumes or of the labels.
- volume identification involves analyzing feature vector consistency by clustering the volumes (or, more precisely, their corresponding feature vectors) and determining a degree of consistency of the user-specified labels within each cluster.
- volume identification involves training and applying weak volume classifiers based on user-specified labels.
- FIG. 4 illustrates the various components of the volume identification module of FIG. 1 , according to one embodiment. More specifically, the volume identification module 119 comprises a volume segmentation module 405 that extracts unlabeled candidate volumes from each of the videos 117 by applying image segmentation algorithms to the video; a feature determination module 410 that determines, for each of these candidate volumes, features that describe the visual characteristics of the volume; and a volume labeling module that uses the determined volume features to label volumes with high confidence.
- the video identification module 119 generally operates over a large set of videos 117 , processing thousands, and potentially millions, of videos.
- the volume segmentation module 405 first identifies stable segments of the video and then extracts candidate volumes from the stable segments, and is one means for performing this function.
- the videos are first stabilized with a video stabilization algorithm, which reduces the effects of camera motion and shake typically found in amateur videos.
- a video stabilization algorithm which reduces the effects of camera motion and shake typically found in amateur videos.
- One approach to video stabilization is described in the article “Auto-Directed Video Stabilization with Robust L1 Optimal Camera Paths”, by Matthias Grundmann, Vivek Kwatra, and Irfan Essa, in “IEEE Conference on Computer Vision and Pattern Recognition (CVPR)”, 2011 , which is incorporated by reference herein (including all of the references cited therein).
- the stabilization algorithm outputs stabilized video as a well as a measure of the degree of background motion in each frame of the video. This measure of the background motion is used to identify series of frames where the background is motionless, thereby indicating that the camera is not moving, and that any motion in the frame is due to motion of a foreground object. Sequences of frames where there is no background motion are identified as stable segments.
- the volume segmentation module 405 applies hierarchical graph-based video segmentation to the stable regions of a given video. This approach over-segments a volumetric video graph into space-time regions grouped by appearance, constructs a “region graph” over the obtained stable segments, and iteratively repeats the process over multiple levels to create a tree of spatio-temporal segmentations.
- a volumes repository 430 contains a set of descriptions of all unlabeled candidate volumes segmented from all videos 117 being processed.
- Each volume is described by a set of data including: (1) an identifier of the video containing the volume; and (2) the temporal and spatial portion of the video that the volume occupies.
- the temporal portion of a volume can be described by a list of frame numbers, and the spatial portion can be a list of spatial descriptors, such as one spatial descriptor per frame.
- Each spatial descriptor indicates the portion of the frame occupied by the volume, and can be (for example), a list of pixels, a bounding box (e.g., the top-left and bottom-right coordinates of a rectangle), or a list of coordinate pairs forming a polygon, that encloses the volume at that frame.
- a feature determination module 410 determines, for each of these volumes, features that describe the visual characteristics of the volume. Different approaches are employed in different embodiments, as is now described.
- the feature determination module 410 first generates a codebook of features commonly found in videos, and then uses that codebook as the basis for identifying the features for each video.
- the feature determination module 410 divides every volume of every video into sequential fixed-length segments, such as segments of one second duration. Thus, for example, if a volume in a given video lasts 30 seconds, then 30 one second segments are created. Each segment will contain the data for some number of frames, depending on the number of frames per second. Alternatively, the segments can be a fixed number of frames, rather than a fixed time duration. For each such segment, the feature determination module 410 extracts a representative feature vector—or a set of feature vectors, one for each of the different types of features—that describes the visual properties of the segment.
- the visual property features of the feature vector for the segments may include, for example, features sampled using a Laplacian-of-Gaussian (LoG) or Scale Invariant Feature Transform (SIFT) feature extractor, a color histogram computed using hue and saturation in HSV color space, motion rigidity features, texture features, filter responses (e.g., derived from Gabor wavelets), including 3D filter responses, or edge features using edges detected by a Canny edge detector.
- LiG Laplacian-of-Gaussian
- SIFT Scale Invariant Feature Transform
- GLOH Gradient Location and Orientation Histogram
- LESH Lical Energy based Shape Histogram
- HOG Histogram of Oriented Gradients
- SURF Speeded Up Robust Features
- the feature determination module 410 then clusters the segment feature vectors using an algorithm such as k-means clustering with random initialization of k cluster centers (k ⁇ 100), and for each resulting cluster forms a representative feature vector, such as the centroid of the cluster.
- an algorithm such as k-means clustering with random initialization of k cluster centers (k ⁇ 100)
- k ⁇ 100 k cluster centers
- a separate codebook can be formed for each type from the feature vectors for that type.
- each cluster feature vector represents one code vector entry in the codebook, and is referenced using an integer index into the codebook, or a logical “true” in a bit vector at a position corresponding to that code vector.
- Other variations on the representation of the codebook(s) would be known to one of skill in the art.
- the feature determination module 410 represents the features for a volume 330 in terms of the feature codebook, thus providing a form of vector quantization and data dimensionality reduction. Specifically, the feature determination module 410 divides a given volume into one second segments and extracts a feature vector (or set of feature vectors, one per feature type) in the same manner used when creating the codebook. Then, in one embodiment, the feature vector is mapped to a single most similar codebook entry according to some similarity function.
- the feature vector for a segment includes color features for various pixels of interest, such as color values for each pixel; each pixel color value feature is mapped to a most similar codebook entry; and a histogram is created for the different codebook entries.
- a pixel color value feature ⁇ 64, 128, 0> might be mapped to codebook entry ⁇ 67, 125, 0> with codebook index 3
- a different pixel color value feature ⁇ 70, 130, 5> might also be mapped to the same codebook entry ⁇ 67, 125, 0>.
- a different pixel color value feature ⁇ 120, 33, 80> might map to a different codebook entry ⁇ 121, 35, 80> with codebook index 8.
- the histogram for pixel color value would contain at least two entries for index 3, and one for index 8.
- the different resulting histograms could in turn be clustered into a secondary histogram codebook, similar to the codebook creation process described above; thus, different distinct histograms would have different histogram codebook indexes.
- These codebook entry histograms e.g., one for pixel color values, one for texture, etc.—then represent the segment, and also conjointly represent the volume of which the segment is a part.
- the codebook entries (whether histograms in one embodiment, or a single non-histogram code vector in another embodiment) for the different types of features are concatenated into a single feature vector for the segment; in other embodiments, each type remains separate and is separately analyzed and processed.
- FIG. 5A depicts an example of a volume temporally partitioned into six segments (and having six feature vectors, S 1 to S 6 , one per segment), along with a codebook of N code vectors CV.
- a codebook of N code vectors CV In embodiments in which different types of features such as pixel color value features, and texture features, remain separate, for a given segment there is a separate set of feature vectors for each feature type.
- the feature vectors for the first three segments S 1 , S 2 , and S 3 are most similar to the second code vector (denoted “CV 2 ”), whereas the feature vectors for the fourth and fifth segments S 4 and S 5 are most similar to the third code vector (“CV 3 ”).
- the last segment S 6 has a feature vector most similar to CV 1 .
- a given segment can now be represented as one-hot bit vector (reading down the column from the segment number), with a single bit set corresponding to the code vector that is most similar to the segment's feature vector.
- the first segment S 1 has a feature vector of [0, 1, 0, . . . , 0], for example.
- the feature vector for each segment may have its similarity to each code vector computed and stored as a normalized real number (a similarity or correspondence score).
- This embodiment is depicted in FIG. 5B , in which the first segment S 1 has a correspondence of 0.1 (on a scale of 0.0 to 1.0, from least to most similar) to code vector CV 1 , a correspondence of 0.85 to code vector CV 2 , a correspondence of 0.0 to code vector CV 3 , and so on.
- each volume can have a different length in terms of the number of segments, and hence a different number of feature vectors
- the feature vectors are normalized by summing their values and dividing the sum vector by the number of feature vectors, thereby obtaining an averaged feature vector for a given volume.
- the volume average feature vector for the example of FIG. 5B would be computed in the same way.
- the feature determination module 410 calculates geometric features representing the relationships of different code vectors over time and/or space. Such features permit geometric reasoning in both time and space.
- Time relationship features quantify the degree to which one code vector occurs before another code vector within a given segment. It is understood that saying a code vector appears “before” or “after” another code vector in a given segment means that the underlying feature vectors which were mapped to the corresponding code vectors themselves appeared in a particular temporal order, since the code vectors themselves are being used as proxies for the underlying feature vectors. For example, a “before” binary operator quantifies the total number of times each instance of a first code vector CV, occurs before each instance of a second code vector CV j in a given segment. Referring back to the example of FIG.
- the result of the expression “CV 3 before CV 1 ” is 2, since both occurrences of CV 3 occur before the one occurrence of CV 1 .
- the features for the temporal operator “before” form a temporal relationship matrix as shown in FIG. 5C , where the cell at row CV i , column CV J indicates the value of the expression “CV i before CV j ”.
- the operator “after” can be defined in similar fashion to quantify how many times an instance of one code vector occurs after an instance of another code vector, thus producing a corresponding temporal relationship matrix.
- Spatial relationship features quantify the degree to which one code vector occurs at a given spatial position in a frame relative to another code vector. For example, an “above” binary operator quantifies how many times a first code vector CV i occurs above (closer to the top of the frame) the first occurrence of a second code vector CV j .
- the spatial position of a code vector of a segment is defined to be the spatial position of the centroid of the segment at that moment in time.
- the centroid of a segment can be further defined in terms of the centroids of the segment portions for each frame within the segment. That is, for each frame within the segment, the spatial portion of the segment is determined, and the centroid of that portion identified, e.g., as the center of a rectangular region bounding the spatial portion. Then, the x coordinates of the centroids are summed and averaged over the frames of the segment, as are the y coordinates, with the average x coordinate and the average y coordinate constituting the location of the centroid of the segment.
- the spatial comparisons are not between feature vectors of different segments, but rather between feature vectors corresponding to different points of the same segment.
- points or regions of interest e.g., points of color discontinuities
- Spatial and temporal relationships can be combined into spatial-temporal relationships, such as “left-of-and-before”, or “above-and-after.”
- the “before-and-left-of” relationship quantifies how many times a first code vector CV i occurs both before and to the left of the first occurrence of a second code vector CV j .
- temporal and spatial relationships are combined.
- an “at the same time” temporal relationship operator can be defined and used in combination with the spatial relationships set forth above.
- one combined operator “above-and-at-the-same-time” could indicate whether a particular code vector CV i occurs both above and at the same time as another code vector CV j .
- each of the relationship feature matrices such as the “before” matrix of FIG. 5C and the “left-of” matrix of 5 E, could be expressed as a vector (e.g., a vector of column vectors), and that all the relationship features could be combined into a single vector by concatenating the feature matrices (equivalently, vectors) for each of the relationships.
- each volume can be assigned a compound geometric vector comprising features corresponding to temporal relationships such as “before”, “after”, “at the same time”, spatial relationships such as “left-of”, “right-of”, “above”, “below”, “centered-on”, and all combinations of the temporal and spatial relationships.
- each of the elements in each of the relationship matrices is quantized into a predefined set of value ranges, resulting in a bit vector for each element.
- the value of each element could be mapped into the three value ranges “0 to 2”, “3 to 12”, and “12 or more.”
- FIG. 5D The results of this quantization for FIG. 5C is illustrated in FIG. 5D , for instance.
- the element at row CV 2 , column CV 1 has been quantized to the bit vector ⁇ 0,1,0>, indicating that the value 3 is within the second of the three value ranges.
- volume features repository 435 in association with the unique identifier of the volume to which the features correspond. It is appreciated that the volumes repository 430 and the volume features repository 435 , although depicted in FIG. 4 as being logically separate repositories, could be physically combined within a single repository.
- a volume labeling module 415 applies the features to label with high accuracy certain ones of the candidate volumes stored in the volumes repository 430 .
- supervised learning cannot be directly employed to do the volume labeling, since individual candidate volumes have not been labeled by users and hence training sets cannot easily be formed. Rather, the applicable labels are discovered by analysis of the relationship between the features characterizing the volumes, and labels previously applied to the videos, e.g., by users as part of the video metadata 117 A.
- Different approaches are employed in different embodiments, as is now described.
- each volume is preliminarily labeled with the label(s) derived from textual metadata of the video of which the volume is a part, such as the video title, description, or tags. For example, if video metadata 117 A of the example video of FIG. 2 yielded the labels “dog”, “running”, and “cat”, then each of the three volumes 220 A-C is associated with all three of these labels. Volumes of videos lacking any labels are excluded from further processing.
- the volume labeling module 415 clusters the volumes in the volumes repository 430 (or equivalently, their corresponding feature vectors) according to the values of their feature vectors assigned by the feature determination module 410 .
- k-means clustering can be employed, with k randomly-selected volume vectors initialized as the k initial volume cluster seeds. This results in k clusters of volumes with similar visual characteristics. Some of the clusters may represent semantically meaningful volumes, but others may not. Which clusters are likely to be related to a semantically meaningful volume is determined by analysis of consistency of the preliminary labels of the volumes.
- FIG. 6 illustrates an initial set 610 of the videos 117 before clustering.
- Clustering results in k clusters 620 , CL 1 to CL k , each having some subset of the videos (equivalently, video feature vectors) in the set 610 that were determined to be similar.
- each volume is preliminarily labeled with the labels from its parent video.
- the first video of CL 1 in FIG. 6 has the associated preliminary labels “dog” and “cat,” e.g., because its video metadata 117 A contained those labels.
- the frequency and/or percentage of occurrence of each preliminary label is determined.
- clusters for which the contained volumes have preliminary labels that are not sufficiently consistent with each other are discarded as unreliable.
- the degree of label consistency may be quantified as, for example, the percentage of volumes that have the most frequently occurring preliminary label.
- each of the volumes with the label “dog” within CL 1 are selected as being representative of “dog” with high probability.
- a cluster (such as CL k in FIG. 6 ) in which no label applied to more than 20% of volumes would clearly indicate that the volumes were associated with many different concepts.
- using a relatively high threshold ensures that only clusters that are most likely representative of meaningful semantic objects are retained.
- Another method of feature determination is based on clusters according to labels.
- a set of labels is created as the union of the preliminary labels of all of the volumes in all of the clusters. Then for each label, a list of the volumes having that label is determined. Since a volume can have multiple labels, it will appear in the list of volumes for each such labels. For example, a volume from a video with the labels “dog”, “running”, and “cat” would be added to a set of volumes for the label “dog”, to a set of volumes for the label “running”, and to a set of volumes for the label “cat.” Volumes of videos lacking any labels are excluded from further processing.
- the volumes in each of the label sets are then clustered according to the values of its feature vectors assigned by the feature determination module 410 , e.g., using k-means clustering. This results—for every label—in a set of clusters of volumes with similar characteristics. For each cluster within a label, a degree of label consistency is quantified as above, and if a cluster is found to be representative of the same label as the label of the set of which it is a member, then the volumes with that label are selected as being representative of the label with high probability.
- each volume in the volumes repository 430 is labeled with the labels of its parent video, as above. Then, the union of all labels is formed, resulting in a label set of tens or hundreds of thousands of labels.
- the set of labels may further be filtered to obtain a more useful set of labels, e.g., by discarding labels lacking some minimum frequency of occurrence in the label set. For each remaining label 705 (indicated in FIG. 7 as L 1 through L N ), all the volumes 710 (or some subset thereof) with that label are selected as the positive training set, and some (or all) of the volumes without that label are selected as the negative training set.
- a weak volume classifier 715 is then trained for each label using the positive and negative training sets for that label as input for an ensemble learning algorithm.
- the ensemble learning algorithm employed is AdaBoost, with a number of stumps linearly proportional to the number of videos in the positive training set.
- AdaBoost AdaBoost
- Other learning algorithms such as Support Vector Machine (SVM), the details of which are known to those of skill in the art of machine learning, could likewise be used.
- SVM Support Vector Machine
- the formation of the training sets relies on the accuracy of the labels for the volumes.
- the volume labels are merely taken from the labels of the parent video, it is unlikely that any given volume label will be accurate.
- a volume that in fact depicts a dog will inherit all three labels, and the “cat” label will be incorrect (since the volume represents a dog, not a cat), and the correctness of the “running” label will depend upon whether the dog is, in fact, running.
- the accuracy of the volume classifiers will tend to be relatively poor.
- classifiers will typically produce an unusually large number of false positives due to the significant number of objects in the positive training set that do not in fact represent the object or action in question—e.g., mistakenly identifying a cat as a dog due to the training set for the label “dog” containing a large number of volumes representing cats. Nonetheless, the classifiers will still tend to produce very high scores for volumes that are in fact properly associated with the objects or actions corresponding to the classifier label—that is, although the classifiers may result in a number of false positives, they will typically not produce many false negatives.
- each of the weak volume classifiers is applied to each volume 720 in the volumes repository 430 , thereby producing a set of classifier scores for every volume.
- FIG. 7 depicts applying each of the weak volume classifiers to a particular one of the volumes 720 A, obtaining a set of scores 725 for that volume; the same would be done for each volume 720 .
- the scores 725 for each volume are then normalized.
- the following table depicts example scores for classifiers for some example set of labels ⁇ “cat”, “dog”, “running”, “truck”, “penguin”, . . . ⁇ applied to some volume, normalized to the range [0, 1].
- the score for the label “dog” is the highest score, considerably higher than the scores for any of the other labels, and is above a minimum score threshold, and hence is selected as a label for the volume. Since classifier scores that are far higher than other scores tend to be accurate, even when obtained from relatively inaccurate, noisy classifiers, the label “dog” can be applied to the volume with a high degree of confidence.
- volume labeling module 415 As a result of the actions of the volume labeling module 415 , some of the volumes 430 have high-confidence labels, also referred to as “verified labels.” These verified (high-confidence) labels can be used for a number of applications, such as training more accurate volume classifiers, providing more granular user video search, and enabling users to more easily form composite videos containing volumes of interest.
- the verified labels can be used to train highly accurate volume classifiers for assigning labels to new volumes not already analyzed by the modules 405 - 415 .
- the classifier training in the embodiment described above with respect to FIG. 7 results in weak classifiers 715 with a relatively low degree of accuracy because of the inaccuracy of the training sets used to train the classifiers.
- a new set of classifiers of greater accuracy can be trained. That is, for every label, a positive training set is formed comprising the feature vectors of volumes having that label among their verified labels, and a negative training set is formed comprising the feature vectors of volumes not having that label among their verified labels.
- higher-accuracy volume classifiers are trained, e.g., using the same ensemble learning algorithms mentioned above, such as AdaBoost or linear SVM, or another appropriate classifier algorithm.
- AdaBoost AdaBoost
- linear SVM linear SVM
- the set of volumes with verified labels may be further expanded. That is, the higher-accuracy volume classifiers may then be applied to prior volumes, e.g., to the volumes of the volume repository 430 that are not already labeled with a verified label. Specifically, each of the trained high-accuracy classifiers is applied to the feature vector of the weakly labeled volume. The classifier that provides the highest score above some threshold (and optionally, with a minimum distance to the next highest score) provides the label for the volume.
- the volume identification module 119 may also label volumes of videos not already analyzed by the modules 405 - 415 , such as videos submitted by users after the high-accuracy classifiers were trained. In this situation, the volume identification module 119 applies the volume segmentation module 405 to these new videos to segment the unlabeled volumes from the videos, applies the feature determination module 410 to obtain feature vectors for features of the same type used to train the classifiers, and finally applies the high-accuracy classifiers to the feature vectors to obtain verified labels for the corresponding volumes. Specifically, each of the trained high-accuracy classifiers is applied to the feature vector of the unlabeled volume. The classifier that provides the highest score above some threshold (and optionally, with a minimum distance to the next highest score) provides the label for the volume. This results in a set of volumes with verified labels that is larger than the set initially determined by the volume labeling module 415 alone.
- the metadata 117 A of videos may be expanded based on the verified labels of the volumes within a video.
- the existing metadata 117 A of a video comprises the labels “cat” and “yarn” (e.g., due to the video title “Adorable cat chasing after a ball of yarn”), and that the volumes within the video have, as verified labels, the labels “dog” and “running” If the labels “dog” and “running” are not already labels of the existing metadata 117 A of the video, then the labels are added, e.g., as individual video tags. This increases the amount of useful information that a user can use to locate videos illustrating concepts of interest, such as dogs and/or things that run.
- verified labels applied to video volumes either the smaller set created by the volume labeling module 415 , or the larger set created by the classifier training and application described directly above—users can submit more granular queries for particular video volumes matching concepts of interest, and not merely for entire videos.
- the video search module 106 can take into consideration, not only the metadata 117 A of a video 117 as a whole, but also the verified labels applied to the volumes within the video.
- the video search module 106 may thus identify videos that more accurately match the concepts in the user query. For example, the percentage of volumes having a label matching a search query can be used as an information retrieval measure to rank a given video, by increasing the ranking for videos with higher proportions of volumes matching the search query.
- the video search module 106 may form result sets including not only videos as a whole, but also individual video volumes that match the user query.
- FIG. 8 illustrates a user interface showing search results that include video volumes, as well as videos as a whole, according to one embodiment.
- the user interface displays a set of search results 810 .
- the search results 810 may include both indicia of videos 811 and indicia of individual video volumes 812 , each of the indicia displayed separately so as to be visually distinct from the other indicia.
- the indicia of a video volume in the search result set may include, for example, a visual thumbnail 812 specific to the volume (e.g., the corresponding spatial portion of a particular frame within the temporal portion of the volume), a duration 815 of the volume (e.g., “0:15”, or 15 seconds), a visual indicator of a temporal portion of the video occupied by the volume (e.g., the highlighted portion 821 on the video timeline 820 ), etc. Selecting the search result for a volume 812 may cause playback of the video to begin at the start of the volume within the video, rather than at the start of the video as a whole.
- a visual thumbnail 812 specific to the volume e.g., the corresponding spatial portion of a particular frame within the temporal portion of the volume
- a duration 815 of the volume e.g., “0:15”, or 15 seconds
- a visual indicator of a temporal portion of the video occupied by the volume e.g., the highlighted portion 821 on the
- the volume may be visually emphasized during playback, e.g., by adding a visual highlight such as a colored box or polygon around the spatial portion of the volume, or by “blacking out” the portion of a frame not occupied by the selected volume.
- the user interface produced by the front end interface 102 can be augmented to allow a user to quickly search for volumes similar to a volume being currently displayed. For example, assume a user is watching a video that has been processed in the manner described above, so that the particular volumes for that video are known. The user can then select a volume currently displayed in a video playback area (e.g., clicking on it) and then select an option such as “Find more like this.” In response to the selection of the option, the video search module 106 executes a query for other volumes having one of the same verified labels as the selected volume.
- a user enthralled by the sight of a penguin sliding over the surface of an iceberg during playback of a video about life in the Antarctic could click on the volume containing the penguin to gain quick access to other scenes of penguins, either in that same video or in other videos, rather than having to input a text search term for “penguin.”
- the user interface includes a “Show volumes” option that visually highlights all selectable volumes within the video, e.g., by adding a colored highlight or outline to the volume, or by “blacking out” non-volume portions of the video frames, as noted above.
- FIG. 9A illustrates a simple example video with a volume 905 corresponding to the image of a sitting dog watching a cat (represented by volume 910 ) chasing a ball of yarn (represented by volume 915 ).
- FIG. 9B illustrates a visual highlight 920 around each of the selectable volumes
- FIG. 9C illustrates the “blacking out” of all portions of the video frames not representing selectable volumes.
- volume identification module 119 determines the precise temporal and spatial portion of a video occupied by a volume and thereby create a repository of labeled volumes also enables users to easily create a composite video from selected ones of the volumes. For example, referring back to FIG. 8 , in one embodiment selecting the “Add to new video” link 825 for a particular volume leads to another user interface 1000 for creating and editing a new composite video containing the volume, as illustrated in FIG. 10 .
- the example user interface 1000 of FIG. 10 includes a video area 1005 representing the entire size of the video frames, and a volume region 1010 representing the portion of the entire video frame occupied by the selected volume (a volume representing a cat, in this example).
- the user interface can contain a standard video playback area, and a timeline 1015 for playing back the composite video.
- the user interface 1000 further includes a mechanism to change the temporal portion of the video occupied by the selected volume.
- the user can select the volume timeline 1020 representing the portion of the timeline 1015 occupied by the volume, dragging its outer edges inward or outward to change the duration of the volume. For instance, dragging the right edge inward would shorten the volume during playback by removing a corresponding portion of the end of the volume in some embodiments, or by increasing the playback speed of the volume in other embodiments.
- users may also drag the volume timeline 1020 left or right to alter the portion of the video during which the volume is played.
- the user interface 1000 further includes a mechanism to change the spatial portion of the video occupied by the selected volume. For example the user can drag the corners of the volume region 1010 inward or outward to stretch or shrink the volume playback region proportionally in some embodiments, or to crop the region and other embodiments. Additional editing tools as would be useful for editing video can be provided as well, for example for scaling, rotating, or image processing the volume region 1010 .
- User interface 1000 further includes a mechanism for altering other visual properties of the video, such as the “Set background . . . ” link 1022 , which leads to a user interface to set a background occupying a region 1012 not occupied by the selected volume.
- the selected background can be a color, pattern, an image, another video, or the like.
- the final composite video can be saved in the video repository 116 and made available to users of the video sharing service 100 .
- Certain aspects of the present disclosure include process steps and instructions described herein in the form of an algorithm. It should be noted that the process steps and instructions of the present disclosure could be embodied in software, firmware or hardware, and when embodied in software, could be downloaded to reside on and be operated from different platforms used by real time network operating systems.
- the present disclosure also relates to an apparatus for performing the operations herein.
- This apparatus may be specially constructed for the required purposes, or it may comprise a general-purpose computer selectively activated or reconfigured by a computer program stored on a computer readable medium that can be accessed by the computer.
- a computer program may be stored in a non-transitory computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, application specific integrated circuits (ASICs), or any type of computer-readable storage medium suitable for storing electronic instructions, and each coupled to a computer system bus.
- the computers referred to in the specification may include a single processor or may be architectures employing multiple processor designs for increased computing capability.
- the present disclosure is well suited to a wide variety of computer network systems over numerous topologies.
- the configuration and management of large networks comprise storage devices and computers that are communicatively coupled to dissimilar computers and storage devices over a network, such as the Internet.
Abstract
Description
[0,1,0, . . . ,0]+[0,1,0, . . . ,0]+[0,1,0, . . . ,0]+[0,0,1, . . . ,0]+[0,0,1, . . . ,0]+[1,0,0, . . . ,0]=[1,3,2, . . . ,0]
and the volume average feature vector is
[1,3,2, . . . ,0]/5=[0.2,0.6,0.4, . . . ,0]
The volume average feature vector for the example of
(B) Geometric Representation
LABEL |
“cat” | “dog” | “running” | “truck” | “penguin” | . . . | ||
SCORE | 0.2 | 0.95 | 0.162 | 0.05 | 0.17 | |
The score for the label “dog” is the highest score, considerably higher than the scores for any of the other labels, and is above a minimum score threshold, and hence is selected as a label for the volume. Since classifier scores that are far higher than other scores tend to be accurate, even when obtained from relatively inaccurate, noisy classifiers, the label “dog” can be applied to the volume with a high degree of confidence.
Claims (20)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/601,802 US8983192B2 (en) | 2011-11-04 | 2012-08-31 | High-confidence labeling of video volumes in a video sharing service |
PCT/US2012/061925 WO2013066723A1 (en) | 2011-11-04 | 2012-10-25 | High-confidence labeling of video volumes in a video sharing service |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201161556059P | 2011-11-04 | 2011-11-04 | |
US13/601,802 US8983192B2 (en) | 2011-11-04 | 2012-08-31 | High-confidence labeling of video volumes in a video sharing service |
Publications (2)
Publication Number | Publication Date |
---|---|
US20130114902A1 US20130114902A1 (en) | 2013-05-09 |
US8983192B2 true US8983192B2 (en) | 2015-03-17 |
Family
ID=48192636
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/601,802 Active 2033-06-15 US8983192B2 (en) | 2011-11-04 | 2012-08-31 | High-confidence labeling of video volumes in a video sharing service |
Country Status (2)
Country | Link |
---|---|
US (1) | US8983192B2 (en) |
WO (1) | WO2013066723A1 (en) |
Cited By (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10007679B2 (en) | 2008-08-08 | 2018-06-26 | The Research Foundation For The State University Of New York | Enhanced max margin learning on multimodal data mining in a multimedia database |
US10614124B2 (en) * | 2009-08-24 | 2020-04-07 | Google Llc | Relevance-based image selection |
US10671852B1 (en) * | 2017-03-01 | 2020-06-02 | Matroid, Inc. | Machine learning in video classification |
US11205103B2 (en) | 2016-12-09 | 2021-12-21 | The Research Foundation for the State University | Semisupervised autoencoder for sentiment analysis |
Families Citing this family (22)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9129158B1 (en) * | 2012-03-05 | 2015-09-08 | Hrl Laboratories, Llc | Method and system for embedding visual intelligence |
KR101305732B1 (en) * | 2012-07-11 | 2013-09-06 | 포항공과대학교 산학협력단 | Method of block producing for video search and method of query processing based on block produced thereby |
US9715282B2 (en) * | 2013-03-29 | 2017-07-25 | Microsoft Technology Licensing, Llc | Closing, starting, and restarting applications |
WO2015026874A1 (en) | 2013-08-19 | 2015-02-26 | Nant Holdings Ip, Llc | Metric based recognition, systems and methods |
US9792502B2 (en) | 2014-07-23 | 2017-10-17 | Gopro, Inc. | Generating video summaries for a video using video summary templates |
US9685194B2 (en) | 2014-07-23 | 2017-06-20 | Gopro, Inc. | Voice-based video tagging |
US9473803B2 (en) * | 2014-08-08 | 2016-10-18 | TCL Research America Inc. | Personalized channel recommendation method and system |
EP3192273A4 (en) * | 2014-09-08 | 2018-05-23 | Google LLC | Selecting and presenting representative frames for video previews |
US9501716B2 (en) * | 2014-12-11 | 2016-11-22 | Intel Corporation | Labeling component parts of objects and detecting component properties in imaging data |
US9734870B2 (en) | 2015-01-05 | 2017-08-15 | Gopro, Inc. | Media identifier generation for camera-captured media |
US10289912B1 (en) * | 2015-04-29 | 2019-05-14 | Google Llc | Classifying videos using neural networks |
US9747717B2 (en) | 2015-05-13 | 2017-08-29 | Intel Corporation | Iterative closest point technique based on a solution of inverse kinematics problem |
US9971940B1 (en) * | 2015-08-10 | 2018-05-15 | Google Llc | Automatic learning of a video matching system |
US10229324B2 (en) * | 2015-12-24 | 2019-03-12 | Intel Corporation | Video summarization using semantic information |
US10152637B2 (en) * | 2016-09-14 | 2018-12-11 | Canon Kabushiki Kaisha | Temporal segmentation of actions using context features |
US11195313B2 (en) * | 2016-10-14 | 2021-12-07 | International Business Machines Corporation | Cross-modality neural network transform for semi-automatic medical image annotation |
US10037458B1 (en) * | 2017-05-02 | 2018-07-31 | King Fahd University Of Petroleum And Minerals | Automated sign language recognition |
CN108307240B (en) * | 2018-02-12 | 2019-10-22 | 北京百度网讯科技有限公司 | Video recommendation method and device |
CN111382620B (en) * | 2018-12-28 | 2023-06-09 | 阿里巴巴集团控股有限公司 | Video tag adding method, computer storage medium and electronic device |
CN110837805B (en) * | 2019-11-07 | 2023-04-07 | 腾讯科技（深圳）有限公司 | Method, device and equipment for measuring confidence of video tag and storage medium |
US11620316B1 (en) * | 2021-11-10 | 2023-04-04 | Pencil Learning Technologies, Inc. | Systems and methods for building an inventory database with automatic labeling |
CN117076713B (en) * | 2023-10-18 | 2024-02-23 | 中国科学技术大学 | Video fingerprint extraction and retrieval method |
Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020176625A1 (en) * | 2001-04-04 | 2002-11-28 | Mitsubishi Electric Research Laboratories, Inc. | Method for segmenting multi-resolution video objects |
US20030026594A1 (en) * | 2001-08-03 | 2003-02-06 | Hirotaka Shiiyama | Image search apparatus and method |
US20070183497A1 (en) | 2006-02-03 | 2007-08-09 | Jiebo Luo | Extracting key frame candidates from video clip |
US20080270344A1 (en) * | 2007-04-30 | 2008-10-30 | Yurick Steven J | Rich media content search engine |
US20090136208A1 (en) * | 2007-11-28 | 2009-05-28 | Flora Gilboa-Solomon | Virtual Video Clipping and Ranking Based on Spatio-Temporal Metadata |
US20100045799A1 (en) | 2005-02-04 | 2010-02-25 | Bangjun Lei | Classifying an Object in a Video Frame |
US20120169923A1 (en) * | 2010-12-30 | 2012-07-05 | Pelco Inc. | Video coding |
-
2012
- 2012-08-31 US US13/601,802 patent/US8983192B2/en active Active
- 2012-10-25 WO PCT/US2012/061925 patent/WO2013066723A1/en active Application Filing
Patent Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020176625A1 (en) * | 2001-04-04 | 2002-11-28 | Mitsubishi Electric Research Laboratories, Inc. | Method for segmenting multi-resolution video objects |
US20030026594A1 (en) * | 2001-08-03 | 2003-02-06 | Hirotaka Shiiyama | Image search apparatus and method |
US20100045799A1 (en) | 2005-02-04 | 2010-02-25 | Bangjun Lei | Classifying an Object in a Video Frame |
US20070183497A1 (en) | 2006-02-03 | 2007-08-09 | Jiebo Luo | Extracting key frame candidates from video clip |
US20080270344A1 (en) * | 2007-04-30 | 2008-10-30 | Yurick Steven J | Rich media content search engine |
US20090136208A1 (en) * | 2007-11-28 | 2009-05-28 | Flora Gilboa-Solomon | Virtual Video Clipping and Ranking Based on Spatio-Temporal Metadata |
US20120169923A1 (en) * | 2010-12-30 | 2012-07-05 | Pelco Inc. | Video coding |
Non-Patent Citations (40)
Title |
---|
Anderson, R., A local algorithm for finding dense subgraphs, In Proc. 19th Annual ACM-SIAM Symposium on Discrete Algorithms, 2008, pp. 1003-1009. |
Automatic Identification of Digital Video based on Shot level Sequence Matching.Jian Zhou and Xiao-Ping Zhang. Nov. 2005. * |
Blum, A. et al., "Combining labeled and unlabeled data with co-training," In Proc. 11th Annual Conference on Computational Learning Theory, COLT, Jul. 1998, pp. 92-100. |
Boyraz, H., et al., "Localizing Actions through Sequential 2D Video Projections," Computer Vision and Pattern Recognition Workshops, Jun. 2011, pp. 34-39. |
Content browsing and semantic context viewing through JPEG 2000-based scalable video summary. J. Meessen L.Xu and B. Marq. Jun. 2006. * |
Davison, B. D., "Topical locality in the web," In Proc. 23rd Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, 2004, pp. 272-279. |
Dekel, O., et al., "Large margin hierarchical classification," Proceedings of the 21 st International Conference on Machine Learning, Banff, Canada, 2004, 8 pages. |
Deng, J., et al., "ImageNet: A Large-Scale Hierarchical Image Database," IEEE Computer Society Conference on Computer Vision and Pattern Recognition, Jun. 22, 2009, pp. 248-255. |
Dumais, S., et al., "Hierarchical classification of web content," In SIGIR '00: Proceedings of the 23rd annual international ACM SIGIR conference on Research and development in information retrieval, pp. 256-263, New York, NY, USA, 2000. ACM. |
Fan, R.-E., et al., "Liblinear: A library for large linear classification," Journal of Machine Learning Research, 2008, pp. 1871-1874, vol. 9. |
Freund, Y., et al., "A decision-theoretic generalization of on-line learning and an application to Boosting," Journal of Computer and System Sciences, 1997, pp. 119-139, vol. 55, article No. SS971504. |
Goldman, S., et al., "Enhancing supervised learning with unlabeled data," In Proc. 17th International Conference on Machine Learning, 2000, pp. 327-334. |
Grundmann, M., et al., "Auto-Directed Video Stabilization with Robust L1 Optimal Camera Paths", IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2011, pp. 225-232. |
Grundmann, M., et al., "Efficient Hierarchical Graph-Based Video Segmentation", Computer Vision and Pattern Recognition (CVPR), Jun. 2010, pp. 2141-2148. |
Guillaumin, M., et al., "Multimodal semi-supervised learning for image classification," In Proc. IEEE Conf. Computer Vision and Pattern Recognition, Jun. 2010, pp. 902-909. |
Gupta, S., et al., "Watch, listen & learn: Co-training on captioned images and videos," In Proc. ECML PKDD, 2008, Part I, LNAI 5211, pp. 457-472. |
Halevy, A., et al., "The unreasonable effectiveness of data," Intelligent Systems, IEEE, Mar. 2009, pp. 8-12, vol. 24, No. 2. |
Huang, J., et al., "Exploring web scale language models for search query processing," In Proc. 19th international conference on World wide web, Apr. 26-30, 2010, pp. 451-460. |
Koller, D., et al., "Hierarchically classifying documents using very few words," In the Proceedings of the Fourteenth International Conference on Machine Learning, ICML, Jul. 8-12, 1997, pp. 170-178. |
Li, L.-J., et al., "Optimol: automatic object picture collection via incremental model learning," In Proc. IEEE Conf. Computer Vision and Pattern Recognition, 2007, 8 Pages. |
Li, L.-J., et al., "Towards total scene understanding: Classification, annotation and segmentation in an automatic framework," In Proc. IEEE Conf. Computer Vision and Pattern Recognition, 2009, pp. 2036-2043. |
Liu, T.-Y., et al., "Support vector machines classification with a very large-scale taxonomy," In SIGKDD Explorations, 2005, pp. 36-43, vol. 7, Issue 1. |
Mahajan, D., et al., "Image classification using the web graph," In Proc. Multimedia, Oct. 25-29, 2010, pp. 991-994. |
Neapolitan, R. E., et al., "Learning Bayesian Networks," Prentice-Hall, Inc., Upper Saddle River, NJ, USA, 2003, Cover page and Table of Contents, 7 Pages. |
Niebles, J. C., et al., "Extracting moving people from internet videos," In ECCV '08: Proceedings of the 10th European Conference on Computer Vision, 2008, pp. 527-540, Part IV, LNCS 5305. |
PCT International Search Report and Written Opinion, PCT/US2012/061925, Mar. 18, 2013, 8 Pages. |
Schapire, R. E., "The boosting approach to machine learning: An overview," In MSRI Workshop on Non-linear Estimation and Classification, 2002, pp. 1-23. |
Schindler, G., et al., Internet video category recognition. In Proc. First IEEE Workshop on Internet Vision, in CVPR, 2008, pp. 1-7. |
Song, Y., et al., "Taxonomic classification for web-based videos," In Proc. IEEE Conf. Computer Vision and Pattern Recognition, Jun. 2010, pp. 871-878. |
Spatio Temporal Segmentation of Video by Hierarchical Mean Shift Analysis. Daniel DeMenthon and Remi Megret. Jul. 2002. * |
Spatio-Temporal Segmentation of Video by Hierarchical Mean Shift Analysis. Daniel DeMenthon and Remi Megret. Jul. 2002. * |
Sun, A., et al., "Hierarchical text classification and evaluation," In ICDM, 2001, pp. 521-528. |
Tang, L., et al., "Large scale multi-label classification via metalabeler," In Proc. 18th International Conference on World Wide Web, Apr. 20-24, 2009, pp. 211-220. |
Volumetric Features for Video Event Detection. Yan Ke, Rahul Sukthankar, and Martial Hebert. Sep. 2009. * |
Wang, Z., et al., "Youtubecat: Learning to categorize wild web videos," In Proc. IEEE Conf. Computer Vision and Pattern Recognition, Jun. 2010, pp. 879-886. |
Yagnik, J., et al., "Learning people annotation from the web via consistency learning," Proceedings of the international workshop on Workshop on multimedia information retrieval, MIR'07, 2007, pp. 285-290. |
Yan K., et al., "Spatio-temporal Shape and Flow Correlation for Action Recognition," Computer Vision and Pattern Recognition, 2007, 8 Pages. |
Yan K., et al., "Volumetric Features for Video Event Detection," International Journal of Computer Vision, 2010, pp. 339-362, vol. 88, Issue 3. |
Zanetti, S., et al., "A walk through the web's video clips," In Proc. First IEEE Workshop on Internet Vision, in CVPR, 2008, 8 pages. |
Zhu, X., Semi-supervised learning literature survey. In Tech Report. University of Wisconsin-Madison, Jul. 2008, pp. 1-60. |
Cited By (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10007679B2 (en) | 2008-08-08 | 2018-06-26 | The Research Foundation For The State University Of New York | Enhanced max margin learning on multimodal data mining in a multimedia database |
US10614124B2 (en) * | 2009-08-24 | 2020-04-07 | Google Llc | Relevance-based image selection |
US11205103B2 (en) | 2016-12-09 | 2021-12-21 | The Research Foundation for the State University | Semisupervised autoencoder for sentiment analysis |
US10671852B1 (en) * | 2017-03-01 | 2020-06-02 | Matroid, Inc. | Machine learning in video classification |
US11074455B2 (en) | 2017-03-01 | 2021-07-27 | Matroid, Inc. | Machine learning in video classification |
US11282294B2 (en) | 2017-03-01 | 2022-03-22 | Matroid, Inc. | Machine learning in video classification |
US11468677B2 (en) | 2017-03-01 | 2022-10-11 | Matroid, Inc. | Machine learning in video classification |
Also Published As
Publication number | Publication date |
---|---|
WO2013066723A1 (en) | 2013-05-10 |
US20130114902A1 (en) | 2013-05-09 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8983192B2 (en) | High-confidence labeling of video volumes in a video sharing service | |
US9177208B2 (en) | Determining feature vectors for video volumes | |
US10922350B2 (en) | Associating still images and videos | |
US20210166035A1 (en) | Selecting and presenting representative frames for video previews | |
US9373040B2 (en) | Image matching using motion manifolds | |
US8452778B1 (en) | Training of adapted classifiers for video categorization | |
US9176987B1 (en) | Automatic face annotation method and system | |
US8804999B2 (en) | Video recommendation system and method thereof | |
Basharat et al. | Content based video matching using spatiotemporal volumes | |
US9355330B2 (en) | In-video product annotation with web information mining | |
US20150294191A1 (en) | System and method for predicting iconicity of an image | |
US20130243307A1 (en) | Object identification in images or image sequences | |
CN102549603A (en) | Relevance-based image selection | |
Fei et al. | Creating memorable video summaries that satisfy the user’s intention for taking the videos | |
Ulges et al. | A system that learns to tag videos by watching youtube | |
e Souza et al. | Survey on visual rhythms: A spatio-temporal representation for video sequences | |
Liu et al. | Semantic motion concept retrieval in non-static background utilizing spatial-temporal visual information | |
Sawatzky et al. | Harvesting information from captions for weakly supervised semantic segmentation | |
Fontdevila Bosch | Region-oriented convolutional networks for object retrieval | |
Mekawy et al. | Software Proposal Document for project InMovie Recommendation | |
Doukim et al. | State of the art of content-based image classification | |
Raut et al. | Performance Analysis of Content Based Video Retrieval System Using Clustering | |
Asghar | Feature based dynamic intra-video indexing | |
Baştan | BilVideo-7: Video Parsing, Indexing and Retrieval | |
Mittrapiyanuruk et al. | Retrieval and localization of multiple specific objects with hough voting based ranking and a contrario decision |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:SUKTHANKAR, RAHUL;YAGNIK, JAY;REEL/FRAME:028889/0012Effective date: 20120831 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044334/0466Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
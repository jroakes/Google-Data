EP3365815A1 - Search and retrieval of keyed data maintained using a keyed database - Google Patents
Search and retrieval of keyed data maintained using a keyed databaseInfo
- Publication number
- EP3365815A1 EP3365815A1 EP16826667.4A EP16826667A EP3365815A1 EP 3365815 A1 EP3365815 A1 EP 3365815A1 EP 16826667 A EP16826667 A EP 16826667A EP 3365815 A1 EP3365815 A1 EP 3365815A1
- Authority
- EP
- European Patent Office
- Prior art keywords
- digital component
- data
- keyed
- encryption
- client device
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 238000000034 method Methods 0.000 claims description 66
- 230000004044 response Effects 0.000 claims description 33
- 238000004891 communication Methods 0.000 claims description 20
- 230000008569 process Effects 0.000 description 47
- 230000015654 memory Effects 0.000 description 40
- 230000009471 action Effects 0.000 description 18
- 238000010200 validation analysis Methods 0.000 description 9
- 238000004590 computer program Methods 0.000 description 8
- 238000010586 diagram Methods 0.000 description 7
- 230000006870 function Effects 0.000 description 4
- 238000012545 processing Methods 0.000 description 4
- 230000003287 optical effect Effects 0.000 description 3
- 230000008901 benefit Effects 0.000 description 2
- 230000001413 cellular effect Effects 0.000 description 2
- 230000003292 diminished effect Effects 0.000 description 2
- 230000003993 interaction Effects 0.000 description 2
- 239000004973 liquid crystal related substance Substances 0.000 description 2
- 230000008685 targeting Effects 0.000 description 2
- 230000005540 biological transmission Effects 0.000 description 1
- 230000002860 competitive effect Effects 0.000 description 1
- 230000001010 compromised effect Effects 0.000 description 1
- 238000013479 data entry Methods 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 238000011156 evaluation Methods 0.000 description 1
- 230000007246 mechanism Effects 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 230000006855 networking Effects 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 230000003068 static effect Effects 0.000 description 1
- 239000013589 supplement Substances 0.000 description 1
- 230000026676 system process Effects 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2455—Query execution
- G06F16/24553—Query execution of query operations
- G06F16/24554—Unary operations; Data partitioning operations
- G06F16/24556—Aggregation; Duplicate elimination
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2455—Query execution
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9538—Presentation of query results
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/958—Organisation or management of web site content, e.g. publishing, maintaining pages or automatic linking
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/958—Organisation or management of web site content, e.g. publishing, maintaining pages or automatic linking
- G06F16/972—Access to data in other repository systems, e.g. legacy data or dynamic Web page generation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/62—Protecting access to data via a platform, e.g. using keys or access control rules
- G06F21/6209—Protecting access to data via a platform, e.g. using keys or access control rules to a single file or object, e.g. in a secure envelope, encrypted and accessed using a key, or with access control rules appended to the object itself
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/62—Protecting access to data via a platform, e.g. using keys or access control rules
- G06F21/6218—Protecting access to data via a platform, e.g. using keys or access control rules to a system of files or objects, e.g. local or distributed file system or database
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/08—Key distribution or management, e.g. generation, sharing or updating, of cryptographic keys or passwords
- H04L9/0816—Key establishment, i.e. cryptographic processes or cryptographic protocols whereby a shared secret becomes available to two or more parties, for subsequent use
- H04L9/0819—Key transport or distribution, i.e. key establishment techniques where one party creates or otherwise obtains a secret value, and securely transfers it to the other(s)
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/08—Key distribution or management, e.g. generation, sharing or updating, of cryptographic keys or passwords
- H04L9/0816—Key establishment, i.e. cryptographic processes or cryptographic protocols whereby a shared secret becomes available to two or more parties, for subsequent use
- H04L9/0819—Key transport or distribution, i.e. key establishment techniques where one party creates or otherwise obtains a secret value, and securely transfers it to the other(s)
- H04L9/083—Key transport or distribution, i.e. key establishment techniques where one party creates or otherwise obtains a secret value, and securely transfers it to the other(s) involving central third party, e.g. key distribution center [KDC] or trusted third party [TTP]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/32—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials
- H04L9/321—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials involving a third party or a trusted authority
- H04L9/3213—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials involving a third party or a trusted authority using tickets or tokens, e.g. Kerberos
Definitions
- This document relates to search and retrieval of keyed data maintained using a keyed database.
- This document describes a digital component deduplication system including a keyed database storing keyed data, with each item of keyed data representing a particular digital component; a packetized data search engine that searches packetized data received from a first client device to determine that an encryption token is included with the packetized data, the encryption token comprising keyed data representing a first digital component, wherein the packetized data search engine searches the keyed database to identify contents, in the keyed database, of one or more entries that includes the keyed data representing the first digital component; a logic execution server that executes data logic to generate, based on the contents of the one or more entries that include the keyed data representing the first digital component, a list of candidate digital components; a registration interface that determines that a candidate digital component of the list is associated with a data interface for requesting an eligibility value from a second client device associated with the candidate digital component; and a security server that generates, using the data interface, additional packetized data comprising i) a request for the eligibility value from the
- the system includes a digital component assembly server performs actions including transmitting the second digital component and a second encryption token associated with the second digital component to the first client device.
- the packetized data includes first packetized data.
- the logic execution server generates, in response to a determination that the encryption token is not included in the first packetized data, second packetized data that comprises one or more instructions to i) generate the encryption token, and ii) transmit that encryption token and keyed data representing a digital component over the one or more packetized networks to the first client device.
- the security server receives an encryption key from the second client device.
- the security server decrypts the encryption token in response to a determination that the encryption token is included in the packetized data.
- the logic execution server removes, from the list of candidate digital components, a particular candidate digital component associated with a particular identifier that matches the keyed data of the decrypted encryption token.
- the encryption key includes a private key of the second client device.
- the security server decrypts, using an encryption key provided by the second client device, the encryption token included in the packetized data, in response to a determination that a candidate digital component of the list is not associated with a data interface for requesting an eligibility value from a second client device.
- the keyed data includes data that uniquely identifies the digital component and, when the keyed data is decrypted, the keyed data matches an identifier of the encryption token.
- the digital component deduplication system stores keyed data by a keyed database, with each item of keyed data representing a particular digital component; searching, by a packetized data search engine, packetized data received from a first client device to determine that an encryption token is included with the packetized data.
- the encryption token includes keyed data representing a first digital component, wherein the packetized data search engine searches the keyed database to identify contents, in the keyed database, of one or more entries that includes the keyed data representing the first digital component.
- the digital component deduplication system executes, by a logic execution server, data logic to generate, based on the contents of the one or more entries that include the keyed data representing the first digital component, a list of candidate digital components.
- the digital component deduplication system determines, by a registration interface, that a candidate digital component of the list is associated with a data interface for requesting an eligibility value from a second client device associated with the candidate digital component.
- the digital component deduplication system generates, by a security server, using the data interface, additional packetized data comprising i) a request for the eligibility value from the second client device, and ii) the encryption token; and designating, from the list of the candidate digital components, by the logic execution server in response to receiving the eligibility value of the request, a second digital component for transmitting to the first client device, wherein the second digital component is different than the first digital component [0008]
- the digital component deduplication system transmits, by a digital component assembly server, the second digital component and a second encryption token associated with the second digital component to the first client device.
- the packetized data includes first packetized data.
- the logic execution server generates, in response to a
- second packetized data that comprises one or more instructions to i) generate the encryption token, and ii) transmit that encryption token and keyed data representing a digital component over the one or more packetized networks to the first client device.
- the digital component deduplication system receives, by the security server, an encryption key from the second client device; and decrypting, by the security server, the encryption token in response to a determination that the encryption token is included in the packetized data.
- the actions include removing, by the logic execution server, from the list of candidate digital components, a particular candidate digital component associated with a particular identifier that matches the keyed data of the decrypted encryption token.
- the encryption key includes a private key of the second client device.
- the actions include decrypting, by the security server, using an encryption key provided by the second client device, the encryption token included in the packetized data, in response to a determination that a candidate digital component of the list is not associated with a data interface for requesting an eligibility value from a second client device.
- the keyed data comprises data that uniquely identifies the digital component and, when the keyed data is decrypted, the keyed data matches an identifier of the encryption token.
- a non-transitory computer readable medium in communication with the digital component deduplication system performs actions including storing keyed data by a keyed database, with each item of keyed data representing a particular digital component.
- the actions include searching, by a packetized data search engine, packetized data received from a first client device to determine that an encryption token is included with the packetized data.
- the encryption token includes keyed data representing a first digital component.
- the packetized data search engine searches the keyed database to identify contents, in the keyed database, of one or more entries that includes the keyed data representing the first digital component.
- the actions include executing, by a logic execution server, data logic to generate, based on the contents of the one or more entries that include the keyed data representing the first digital component, a list of candidate digital components.
- the actions include determining, by a registration interface, that a candidate digital component of the list is associated with a data interface for requesting an eligibility value from a second client device associated with the candidate digital component.
- the actions include generating, by a security server, using the data interface, additional packetized data comprising i) a request for the eligibility value from the second client device, and ii) the encryption token.
- the actions include designating, from the list of the candidate digital components, by the logic execution server in response to receiving the eligibility value of the request, a second digital component for transmitting to the first client device, wherein the second digital component is different than the first digital component.
- the actions further include transmitting, by a digital component assembly server, the second digital component and a second encryption token associated with the second digital component to the first client device.
- the packetized data includes first packetized data
- the logic execution server generates, in response to a determination that the encryption token is not included in the first packetized data, second packetized data that comprises one or more instructions to i) generate the encryption token, and ii) transmit that encryption token and keyed data representing a digital component over the one or more packetized networks to the first client device.
- the actions include receiving, by the security server, an encryption key from the second client device; and decrypting, by the security server, the encryption token in response to a determination that the encryption token is included in the packetized data.
- the actions include removing, by the logic execution server, from the list of candidate digital components, a particular candidate digital component associated with a particular identifier that matches the keyed data of the decrypted encryption token.
- the encryption key includes a private key of the second client device.
- the actions include decrypting, by the security server, using an encryption key provided by the second client device, the encryption token included in the packetized data, in response to a determination that a candidate digital component of the list is not associated with a data interface for requesting an eligibility value from a second client device.
- the keyed data includes data that uniquely identifies the digital component and, when the keyed data is decrypted, the keyed data matches an identifier of the encryption token.
- the described system may provide for one or more benefits, such as reducing the latency for serving digital content that is caused by a logic execution process (e.g., evaluation, auction, etc.) and retrieval of digital components (e.g., ads, videos, text, audio, etc.).
- a logic execution server evaluates digital components that have not been served to a terminal device, such as during defined session of serving digital components, and ignores digital components that have been identified already having been served to the terminal device during the session (e.g., a browsing session). Since fewer candidate digital components are considered during the logic execution process, the digital component deduplication system reduces the latency for serving the digital component due to the logic execution process.
- the digital component deduplication system reduces bandwidth usage for serving digital components by identifying redundant digital components before logic execution.
- the digital component deduplication system sends fewer packetized requests over a network of the networked system than a system that does not identify redundant digital components before logic execution, reducing bandwidth usage.
- a list of candidate digital components under consideration to be sent to a terminal device is thus pared back to digital components that have not been served to the terminal device during a session (e.g., a browsing session).
- the digital component deduplication system avoids sending requests for eligibility values (e.g., bid data) to digital component providers associated with ignored candidate digital components, reducing bandwidth usage.
- eligibility values e.g., bid data
- Digital components that have not been served to the terminal device during the session can be more relevant or interesting to a user of the terminal device, and can thus provide more value to a digital component provider (e.g., advertiser).
- a digital component provider e.g., advertiser
- the digital component deduplication system enables coordination between multiple logic execution platforms. Digital component providers can use several logic execution platforms that can coordinate to avoid each serving a copy of the same digital component to the terminal device of the user after performing logic execution processes for the user. This enables digital content providers to choose one or many logic execution platforms that are the most competitive for the needs of the digital component provider.
- the digital component provider avoids a situation where each logic execution platform serves the same digital component to the terminal device, resulting in repeated viewings by the user of the terminal device during the session, which provides diminished value to the digital component provider and frustrates the user. Additionally, the digital component deduplication system uses encryption techniques to ensure that user privacy and digital component identity are not compromised during coordination of the logic execution platforms by the digital component deduplication system.
- the digital component can be stored in a memory of the system or to a disk of the system. Storing the digital component in memory reduces the latency for serving the digital component in response to a request in real-time because the system serves the digital component without performing a data query and retrieval from a database.
- the described system serves digital components that are more relevant to a user. The described system uses a keyed data index to increase retrieval speed relative to non-indexed keyed data of cached data and associate cached data with digital components without requiring identification of the digital component to the logic execution server.
- FIG. 1 is a diagram of a networked environment for digital component service deduplication.
- FIG. 2A shows a keyed indexed database.
- FIG. 2B shows graphical user interfaces.
- FIG. 3-5 are diagrams showing actions taken for digital component service deduplication.
- FIG. 6 is a flow diagram showing actions taken for digital component service deduplication.
- FIG. 7 is a block diagram of components of a system for digital component service deduplication.
- This document describes a system that deduplicates (e.g., eliminates or reduces redundancy) of digital components sent to a client device (e.g., a terminal device or a publisher system), such as when a terminal device is browsing the Internet.
- a client device e.g., a terminal device or a publisher system
- digital component refers to a discrete unit of digital content or digital information (e.g., a video clip, audio clip, multimedia clip, image, text, or another unit of content).
- a digital component can electronically be stored in a physical memory device as a single file or in a collection of files, and digital components can take the form of video files, audio files, multimedia files, image files, or text files and include advertising information, such that an advertisement is a type of digital component.
- a digital component is defined by (or provided by) a single provider or source (e.g., an advertiser, publisher, or other content provider).
- a single provider or source e.g., an advertiser, publisher, or other content provider.
- digital components from multiple different sources can be combined into a single electronic document (e.g., collection of various different digital components), and portions of various digital components from different sources can be combined into a single digital component with information extracted from search results (or other portions of content).
- the system deduplicates service of digital components by analyzing keyed data maintained using a keyed database that represents a list of digital components that have already been sent to the client device.
- keyed data includes data associated with (e.g., stored with, transmitted with, pointing to, etc.) a key (e.g., a unique identifier) and/or a key itself, as described in further detail below.
- a keyed database includes a database in which data entries or records are associated with or indexed with keys, e.g., for subsequent retrieval. Based on processing and analysis of the keyed data, the system removes from consideration for transmittal the digital components that have already been sent to the client device.
- the deduplication discussed herein produces a decrease in bandwidth usage for digital component delivery, e.g., relative to bandwidth usage incurred in the delivery of digital components independent of the deduplication.
- a terminal device requests a digital component from a system such as a publisher system
- processes which are used to assemble the web page or application interface that is served to the terminal device, include one or more requests made to various systems connected by the Internet and computations by the various systems, and take time.
- the digital component deduplication system described below reduces the time latency between the request of a terminal device for a digital component and the assembly and service of the digital component to the terminal device, relative to a latency of assembling and service of the web page to the terminal device independent of using the digital component deduplication system.
- the digital component deduplication system reduces the latency by reducing the number of digital components considered during the logic execution process to be less than then entire set of candidate digital components. Since fewer digital components are considered and fewer instructions and responses are sent and received, the digital component deduplication system processes less data than during a typical logic execution process, increasing processing speed and reducing the latency for performing the logic execution process and serving the digital component.
- the digital component deduplication system computes logic execution results (e.g., auction results, scoring results, or the results of another logic execution process).
- Eligibility values e.g., bids
- eligibility values are requested only for digital components that have not been served already during a session, such as a specified or dynamically defined duration of time (e.g., a browsing session, predetermined time period, etc.).
- the logic execution server designates a digital component from the set of candidate digital components during a logic execution process by using the received eligibility values.
- the digital component deduplication system retrieves the designated digital component (e.g., video clips, audio clips, images, text, or a combination thereof) from a digital content provider or from a keyed digital component cache.
- the digital component which has not yet been served to the client device during the session, is then served to the client device.
- networked environment 100 includes a digital component deduplication system 102 that is configured to communicate (e.g., over a network 1 10) with a publisher system 104, a terminal device 106, and a digital component provider 108.
- the digital component deduplication system 102 includes a computing system (e.g., a server system).
- the functions being performed by these various devices can be implemented in a single hardware device or a single set of hardware devices, or as separate hardware devices.
- the digital component deduplication system 102 can be implemented as a single server or a number of networked servers.
- the digital component deduplication system 102 includes an interface 144, a logic execution server 130, a security server 130, a packetized data search engine 128, an encryption keys cache 134, a search history cache 136, a registered API endpoints cache 138, an encryption token cache 140, a keyed digital content cache 142 (e.g., a keyed database), a packetized data parser 152, and a registration interface 154.
- the one or more caches described above are keyed databases, such that individual data records are associated with a key (e.g., a user identifier or other unique identifier).
- the keyed databases are configured to store the keyed data 120 received from the terminal device 106.
- a server comprises one or more of a computer processor, logic engine, server system, software module, or any combination thereof.
- the publisher system 104 includes a computing system (e.g., a server system) that is configured to receive requests to deliver digital content (e.g., web page data 1 12) to other systems such as the terminal device 106.
- the publisher system 104 requests 116b digital component data from the digital component deduplication system 102 to fill digital content slots on various web pages of the publisher before serving the web page data 114 to the terminal device 106.
- a digital content slot includes a location in a web page designated by a content tag (e.g., a digital content tag).
- Page assembly operations populate the content slot with digital component data based on the digital content tag associated with (e.g., referencing, pointing to, selected for, etc.) the digital content slot.
- the terminal device 106 includes a computing device, such as a laptop, tablet, mobile phone, or other computing device.
- the terminal device 106 sends (e.g., transmits) a request for a digital component (e.g., a web page request 114, digital component request 116b) to the publisher system 104, to the digital component deduplication system 102, or both.
- the terminal device 106 sends keyed data to the digital component deduplication system 102.
- the keyed data includes the encryption token data 120a, described in greater detail below. For example, the keyed data is different than a device identifier of the terminal device 106.
- the keyed data includes a user identifier indicative of a profile of the user for an application installed or otherwise running on the terminal device 106 or for a program associated with (e.g., configured to interact with, etc.) the digital component deduplication system 102.
- the user identifier is associated with (e.g., grouped with, pointing to, etc.) the terminal device 106 because the terminal device 106 is sending the keyed data 120 indicative of the user identifier.
- the user identifier is indicative of user demographics.
- the keyed data is received by the digital component deduplication system 102 and stored in one or more of the search history cache 136 and the encryption token cache 140.
- the keyed data of the terminal device includes the contents of the encryption tokens cache 156 of the terminal device 106, which is transmitted as encryption token data 120a.
- the encryption tokens cache 156 stores encryption tokens (e.g., encrypted identifiers-identifier pairs) for each digital component received by the terminal device 106 over the network 110 for a session.
- the encryption tokens stored by the encryption tokens cache are sent to the digital component deduplication system 102 as encryption tokens data 120a along with a digital component requests 116a-b.
- the encryption token data 120a, 120b are used by the digital component deduplication system to determine if a digital component has already been served to the terminal device during the session as described below.
- the encryption token data 120a represents one or more digital components that have already been served to the terminal device 106 during the current session.
- the encryption token data 120b represents the next designated digital component to be served to the terminal device 106.
- the encryption token cache 156 receives and stores the encryption token of encryption token data 120b, which becomes part of the next transmittal of encryption data 120a from the terminal device 106.
- the encryption token cache 156 is cleared when a session ends. The session can end when the user closes an application (e.g., a browser) on the terminal device, after a predetermined period of time, when a new network domain is requested, when the number of items in the cache reaches a predetermined number, and so forth.
- an application e.g., a browser
- An encryption token received by the terminal device 106 in encryption data 120b is stored in the encryption token cache 156.
- the encryption token represents a digital component that is received from the digital component deduplication system 102 when the digital component deduplication system 102 serves the first instance of the digital component, such as digital component data 118b.
- the encryption token data 120b representing the digital component of the digital component data 118a-g is cached by the terminal device in the encryption token cache 156.
- the encryption token (and any other encryption tokens received by the terminal device) is transmitted to the digital component deduplication system 102 as encryption token data 102a when the terminal device 102 transmits a digital component request 116a.
- the digital component provider 108 is configured to receive a request for digital component data or for an eligibility value 148 and provide the digital component data or eligibility value data 150.
- the digital component provider 108 can be an advertiser.
- the digital component provider 108 includes a server that sends digital content data 150 that is indicated by a content tag related to a web page or that is selected by the logic execution server 130 for presentation in a web page.
- the digital component provider 108 includes an encryption token cache
- the encryption token cache 158 stores encryption tokens.
- the encryption tokens can be generated (e.g., encrypted) by the digital component provider 108 for serving in response to an eligibility value request 148 that is sent by the digital component deduplication system 102.
- the digital component provider 108 will encrypt and send encryption token data 120a when an eligibility value request 148 is received from the digital component deduplication system 102 without any encryption data 102a, meaning that no digital component has previously been served to the terminal device during the current session (and that any digital component is eligible to be served by the digital component provider 108 using conventional generation of eligibility values.
- the digital component provider 108 receives encryption token data 102a from the digital component deduplication system 102 along with the eligibility value request 148.
- the digital component provider 108 can decrypt the encryption token data 102a using the public or private key of the digital component provider 108.
- the digital component provider decrypts the encryption token data 120a received from the digital component deduplication system 102 when the digital component deduplication system 102 sends an eligibility value request 148.
- the digital component provider 108 parses the request for the encryption token data 120a and stores the data 120a in the encryption token cache 158.
- the digital component provider 108 checks the encryption token cache 158 for the encryption token of the encryption token data 120a.
- the digital component provider 108 uses the encryption token data 120a to identify whether the digital component for which the eligibility value is requested by the digital component deduplication system 102 has already been served to the terminal device 106 during the current session.
- the digital component provider 108 can decrypt the encryption token data 120a to have a digital component identifier (e.g., an identifier that uniquely identifies a digital component) and a decrypted digital component identifier.
- the digital component provider 108 performs a validation comparison of the decrypted identifier, using a decryption and validation logic engine 160, to compare the decrypted identifier to a digital component identifier included in the encryption token data 120a.
- the digital component provider 108 finds a match, the digital component provider 108 returns a low eligibility value for the digital component so that the digital component deduplication system 102 does not select the digital component during subsequent logic execution processes for sending to the terminal device 106.
- the low eligibility value reflects the diminished value to the digital component provider 108 for providing the digital component to the terminal device 106 for the current session.
- the digital component deduplication system 102 receives and responds to requests over the network 110 (e.g., the Internet) for one or more of search results, digital component requests 116a-b, digital component data 118a-g, and other data using several modules and subsystems.
- the digital component deduplication system 102 includes the communication interface 144 configured to communicate with one or more of the publisher system 104, the terminal device 106, or the digital component provider 108 over the network 110.
- the communication interface 144 communicates data of the received requests from the network 110 to one or more subsystems or modules of the digital component deduplication system 102, such as the logic execution server 130, the security server 130, or packetized data search engine 128.
- the logic execution server 130 receives the eligibility value data 150 from the digital component provider 108 and runs a logic execution process (e.g., auction, scoring process, or another logic execution technique) for the digital components represented by the eligibility values 150.
- a logic execution process e.g., auction, scoring process, or another logic execution technique
- the logic execution server 130 includes a third-party logic execution server.
- the logic execution server 130 runs a logic execution process for each of the candidate digital components, as described in further detail below.
- the packetized data search engine 128 includes one or more computing devices (e.g., servers) configured to receive a search query 158 and return search results from the Internet.
- the search results include a mix of web pages, images, and other types of files.
- the packetized data search engine 128 also mines data available in databases or open directories.
- the packetized data search engine 128 maintains real-time information by running an algorithm on a web crawler.
- the search engine 128 includes a third-party search engine.
- the packetized data parser 152 receives the digital component requests
- the encryption token data 120a includes the encryption tokens provided from the terminal device 106 that indicate which digital components have already been served to the terminal device during the current session.
- the packetized data parser 152 determines whether an encryption token is present in the digital component requests 116a-b. If an encryption token is present, the packetized data parser 152 sends the encryption token data 120a to the security server 126 for decryption (if applicable) or forwards the encryption data 120a to the digital component provider 108 for decryption with the eligibility value request 148 sent by the logic execution server 130.
- the security server 126 receives the encryption token data 120a from the packetized data parser 152.
- the security server 126 has already received the encryption key 158 of one or more digital component providers (e.g., digital component provider 108).
- the encryption key 158 is used to decrypt the encryption token received in the encryption data 120a.
- the encryption key 158 is the digital component provider's 108 private key.
- the encryption key 158 is the digital component provider's 108 public key.
- the public key can be used by the security server to encrypt an encryption token for transmitting to a client, such as a terminal device 106 or to a publisher system 104, as encryption token data 120b.
- the encryption token data 120a is forwarded to the digital component provider 108 for decryption of the encryption token data 120a as described above.
- the encryption token data 120a is forwarded with an eligibility value request 148 during the logic execution process of the logic execution server 130.
- the security server 126 does not decrypt the encryption token data 120a, even if the digital component deduplication system 102 has already received the encryption key from the digital component provider 108.
- the security server 126 instead waits for the registration interface 154 to determine that a candidate digital component of the logic execution process is not associated with an eligibility value application programming interface (API) endpoint (which precludes requesting the digital component provider 108 to decrypt the encryption data 120a).
- API application programming interface
- the registration interface 154 registers one or more digital component providers with the digital component deduplication system 102.
- the registration interface 154 uses an eligibility value request API to register the digital component providers with the digital component deduplication system 102.
- the registration interface can be checked to determine whether the digital component publisher is participating in the deduplication process. If the digital component is participating, encryption token data 120a can be sent to the digital component provider during the logic execution process of the logic execution server 130.
- the registration interface 154 can store the list of registered digital component providers in the registered API endpoints cache 138.
- the logic execution server 130 receives the encryption tokens from the encryption data 120a and performs one or more logic execution processes for designating digital component to be served to the client device in response to a request for the digital component.
- the logic execution server 130 generates a list of candidate digital components. If no encryption token was found by the packetized data parser, the logic execution server 130 proceeds to request 148 eligibility values from one or more digital component providers.
- the request does not include encryption token data 120a in this case because the dataset is either empty or has not been received from the terminal device 106, indicating that the current session is fresh and that no digital component has yet been served during the current session to the terminal device.
- the digital component provider returns eligibility value data 150 and associated encryption token data 120b indicative of a digital component to be served (if the digital component is designated by the logic execution server 130 to be served).
- the logic execution server 130 after receiving all requested eligibility values from digital component providers 108, performs a logic execution process and designates a digital component to be served.
- the designated digital component and associated encryption token are sent to the client device.
- the logic execution server 130 receives data indicative of an encryption token received from the terminal device 106. If the security server has decrypted the encryption token from the encryption token data 120a, the logic execution server 130 validates the decrypted identifier by comparing the decrypted identifier to an unencrypted identifier of the encryption token. If a match is found, then the digital component is disqualified from the logic execution process and is removed from the list of candidate digital components. No request is sent to the digital component provider 108, reducing bandwidth usage that would otherwise be needed to send and received eligibility values from the digital component provider 108. In addition, since fewer digital components are evaluated during the logic execution process, processing time is reduced and latency caused by the logic execution process is reduced relative to a process that evaluates all candidate digital components of the platform for serving.
- the logic execution server receives data indicative of an encryption token received from the terminal device 106 that has not been decrypted by the security server 126.
- the logic execution server 130 forwards the encryption token data 120a to the digital component provider 108 for decryption as described above.
- the digital component provider returns eligibility value data 150 including an eligibility value reflective of whether the digital component has already been presented based on the validation processes of the decryption and validation logic 160 of the digital component provider 108.
- the eligibility value data 150 thus automatically accounts for the value of the digital component to the digital component provider, and the logic execution server performs a logic execution process using the eligibility value data 150.
- Each of the described logic execution processes ensures that duplicative digital components are not sent to a terminal device during a single session.
- the caches of the digital component deduplication system 102 are used for storing data.
- the caches of the digital component deduplication system 102 can be combined into a single location or be discrete caches.
- the search history cache 136 includes a data store in memory or on disk, e.g., a database such as a distributed database.
- the search history cache 136 includes data representing search queries sent by the terminal device 106.
- the digital component deduplication system 102 caches search queries because the search queries provide a robust data set for a terminal device 106 for performing logic execution processes.
- the encryption token cache 140 stores encryption tokens received by the digital component deduplication system 102 in the encryption token data 120a.
- the encryption tokens are associated with the terminal device 106 and are used during the logic execution processes.
- the encryption token cache 140 includes a data store in memory or on disk, e.g., a database such as a distributed database.
- the keyed digital component cache 142 stores digital components that have been retrieved for the logic execution process, such as candidate digital components.
- the keyed digital component cache 142 includes a data store in memory or on disk, e.g., a database such as a distributed database.
- the digital component includes one or more of text, images, videos, application files, audio, and the like.
- the keyed digital component cache 142 includes a memory of the system. Storing the digital component in a memory reduces the latency for serving the digital component in response to a request for the digital component, such as by the publisher system 104 or the terminal device 106.
- the latency for serving the digital component is real-time because the system serves the digital component without performing a data query and retrieval from a database.
- the keyed digital component cache 142 is described in greater detail with respect to FIG. 2A.
- the encryption keys cache 134 stores the encryption keys (both public and private) received from the digital component providers.
- the encryption keys cache 134 can be combined with and include the encryption token cache 140 or any other cache.
- the publisher system 104 includes a server or network of servers that host web page content.
- the publisher system 104 can include a commercial hosting service or an individual server.
- the publisher system 104 serves web page data 1 12 to the terminal device 106 in response to requests for web page data 1 12 from the web addresses hosted by the publisher system 104.
- the publisher system 104 sends a request for digital component data 1 16b from the digital component deduplication system 102 to populate any digital component slots of the requested web page. If the publisher system 104 receives encryption token data 120a from the terminal device 106, the publisher system 104 forwards the encryption token data 120a to the digital component deduplication system 102. The digital component deduplication system 102 receives the encryption token data 120a and the request 1 16a for digital component data. The digital component deduplication system 102 performs a logic execution as described above, and returns to the publisher system 104 digital component data 118a-g and encryption token data 120b that includes a different encryption token than the encryption token data 120a.
- the encryption token data 120b represents the digital component data that has not yet been served to the terminal device 106, while the encryption data 120a includes encryption tokens for digital components that have already been served to the terminal device during the current session.
- the digital component data 1 18a and encryption data 120b are sent to the publisher system 104, which serves the encryption token data 120b and the requested web page to the terminal device 106 with the digital component designated by the logic execution server 130.
- the keyed digital component cache 142 indexes the data that is used for the logic execution processes of the digital component deduplication system 102. References 212 to digital components are stored in the keyed digital component cache 142, or the digital components themselves 214 are stored.
- the keyed digital component cache 142 includes a digital component keyed index 210 that associates the digital component reference to (if applicable) associated digital component data and indicators indicative of other data associated with the digital components (e.g. candidate digital components).
- the digital component keyed index 210 can include an indicator 216 that points to the registration of the digital component provider of the digital component with the eligibility value API.
- the digital component keyed index 210 can include indicators 218 that indicate whether the digital component deduplication system 102 has received an encryption key for the digital component provider associated with the digital component and the type of key received.
- the logic execution server 130 uses this data to determine which processes to trigger during the logic execution process.
- the digital component keyed index 210 includes a list of device identifiers 220 that associates the encryption token data 120a with the device that sent the data.
- the packetized data search engine includes encryption token logic 228 for determining whether an encryption key is present in the received digital component request 1 16a-b.
- the encryption token logic uses the parser logic 230 to ignore digital component request data.
- the encryption token logic can detect particular headers, appended data, etc. that are used in the encryption scheme to determine if the encryption tokens are present.
- the encryption token logic 228 can pass the resulting indication to the digital component keyed index 210 of the keyed digital component cache 142.
- the logic execution server 130 includes a candidate digital component keyed cache 241.
- the candidate digital component keyed cache 241 can be used to store the list of candidate digital components during logic execution processes.
- the candidate digital component keyed cache 241 can be combined with the keyed digital component cache 142.
- the eligibility value logic 242 of the logic execution server 130 is used to make determinations for designating a digital component during logic execution processes. For example, the highest eligibility value could be used to designate a digital component for sending to the client. In some implementations, eligibility value logic 242 recognizes a particular eligibility value sent by the digital component provider 108 to determine that a candidate digital component should be eliminated from consideration in the logic execution processes. For example, the eligibility value can be zero, a negative number, etc. The eligibility value logic 242 thus discards digital components from consideration that have already been shown during the current session (e.g., are duplicative) or that are otherwise not desirable for sending.
- Targeting logic 244 is used during the logic execution processes to weight eligibility values received from digital component providers. Digital components that are particularly relevant to the user of the terminal device are weighted more heavily. Since, for a particular user, the targeting logic 244 may consistently weight particular candidate digital components highly, the logic execution engine disqualifies the digital components that have already been shown as determined by the logic execution processes described above.
- the registration interface 154 can invoke registered API endpoints 138 that are associated with the digital component publishers to which the candidate digital components are associated. If the digital component publishers have registered, the API endpoint is invoked, and the eligibility value request 148 is sent with the encryption token data 120a.
- the security server 126 can include the encryption keys cache 134, validation logic 234, and encryption logic 236.
- the validation logic 234 compares decrypted encryption tokens to identifiers associated with the digital component to determine if the digital component has been presented during the current session.
- the validation can be a comparator operation, equivalence operation, or other operation that compares the decrypted token to the identifier of the digital component.
- the encryption logic 236 performs encryption and decryption functions for the digital component deduplication system 102. For example, the encryption logic can use the public key received from a digital component provider 108 to encrypt an encryption token or use the public or private key of the digital component provider 108 to decrypt the encryption token of encryption token data 120a.
- FIG. 2B shows a comparison 250 of two graphical user interfaces 252, 262 that display on a client device (e.g., terminal device 106 of FIG. 1).
- Graphical user interface 252 includes a search query 254 from a user.
- the search query 254 is used to generate a request 1 16a-b for digital component data.
- the logic execution processes target a particular digital component 258 and search results 256 based on the query and other keyed data associated with a terminal device. For interface 252, no deduplication is used, and the same digital component 258 can be presented each time the user inputs the same query.
- Interface 262 shows a subsequent web page visited by the user of the terminal device 106.
- the web page data 266 are displayed.
- a new digital component 268 is designated for appearing on the page.
- FIG. 3 is a diagram showing actions 300 taken for digital component service deduplication.
- the client device sends (302) a request for a digital component.
- the digital component deduplication system 102 receives (304) the request for the digital component.
- the digital component deduplication system 102 checks (306) for an encryption token. If no token is found, the digital component deduplication system 102 generates (308) a list of candidate digital components (308).
- the digital component deduplication system 102 sends (308) a request for eligibility values to the digital component provider 108.
- the digital component provider 108 receives (312) the eligibility value request and generates (314) eligibility values and encryption tokens for responding to the request.
- the digital component provider 108 sends (316) the eligibility values and encryption token to the digital component deduplication system 102.
- the digital component deduplication system 102 receives (318) the eligibility values and encryption tokens for candidate digital components.
- the digital component deduplication system 102 designates (320) a digital component from the list based on logic execution processes.
- the digital component deduplication system 102 transmits (322) the digital component and associated encryption token to the client device 105 (e.g., terminal device 106 of FIG. 1).
- the client device 105 receives (324) the digital component and associated token and caches (326) the encryption token for use for responding to a subsequent request for a digital component.
- the client device 105 displays (328) the digital component. If another request is being sent (330) the client device 105 proceeds to step (406) as shown in FIG. 4, below. If the current session is ending, the client device 105 clears the cache (332) of encryption token data.
- FIG. 4 shows actions taken 400 for digital component service
- the digital component provider sends (402) encryption key to the digital component deduplication system 102.
- the digital component deduplication system 102 stores (404) the encryption key in a keyed database.
- the client device 105 sends (406) a request to the digital component deduplication system 102 for a digital component, and the request includes the encryption token data that the client device has cached.
- the digital component deduplication system 102 receives (408) the request for the digital component and checks (410) for encryption tokens. Since the request includes an encryption token, the token is found.
- the digital component deduplication system 102 generates (412) a list of candidate digital components.
- the digital component deduplication system 102 checks (414) for a request interface associated with the digital component. If none is found, the digital component deduplication system 102 decrypts (406) the encryption token using the stored encryption key.
- the digital component deduplication system 102 validates (418) the decrypted token and removes (420) the digital component from the list of candidate digital components based on the results of the validation (e.g., if a match is found indicative of prior service of the digital component). The process then continues as shown by step 310 of FIG. 3.
- FIG. 5 shows actions 500 taken for deduplication of digital component service.
- a client device 105 e.g., terminal device 106 of FIG. 1 sends (502) a request for a digital component to the digital component deduplication system 102.
- the request includes encryption token data.
- the digital component receives (504) the request and the encryption token data.
- the digital component deduplication system 102 checks (506) for the token of the request and finds the token.
- the digital component deduplication system 102 generates (508) a list of candidate digital components for logic execution processes.
- the digital component deduplication system 102 checks (510) for a request interface associated with the digital component and finds one.
- the digital component deduplication system 102 by invoking the registered endpoint of the digital component provider 108, sends (512) a request for eligibility values to the digital component provider 108.
- the digital component provider receives 514 the request and the encryption token.
- the digital component provider 108 decrypts the encryption token and validates the encryption token as described with reference to FIG. 1.
- the digital component provider can determine if the digital component for which the eligibility value is requested has already been shown to the client device 105.
- the digital component provider revises (520) the eligibility value based on the validation.
- the digital component provider sends (522) the eligibility values to the digital component deduplication system 102.
- the digital component deduplication system 102 receives (524) the values and designates (528) a digital component from the list for transmitting to the client device 105.
- the digital component deduplication system 102 transmits (530) the designated digital component and associated encryption token to the client device 105.
- the client device 105 receives (532) the digital component and associated encryption token.
- the client device caches (534) the token to send with subsequent requests for digital components during the current session.
- the client device 105 displays (536) the digital component. If the current session is ending, the client device 105 clears (538) the cache.
- FIG. 6 shows a flow diagram representing a process 600 for digital component deduplication.
- the digital component deduplication system e.g., digital component deduplication system 102 of FIG. 1 receives (602) packetized data from a client device.
- the digital component deduplication system 102 searches the packetized data to determine the presence of encryption tokens associated with a first digital component that was transmitted in response to a prior request for digital component data.
- a list of candidate digital components is generated (606).
- the digital component determines (608) if a candidate digital component is associated with a data interface (e.g., registered with an API) for requesting an eligibility value.
- the digital component deduplication system 102 generates (610) packetized data including an encryption token and a request for the eligibility value.
- the digital component deduplication system 102 designates (612), from the list of candidate digital components, a second digital component for transmission to a terminal device.
- FIG. 7 shows example computing devices 700, 750 that may be used to implement the systems and methods described in this document, as either a client or as a server or plurality of servers.
- Computing device 700 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers.
- Computing device 750 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smartphones, and other similar computing devices. Additionally, computing device 700 or 750 can include Universal Serial Bus (USB) flash drives. The USB flash drives may store operating systems and other applications. The USB flash drives can include input/output components, such as a wireless transmitter or USB connector that may be inserted into a USB port of another computing device.
- USB Universal Serial Bus
- the components shown here, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit
- Computing device 700 includes a processor 702, memory 704, a storage device 706, a high-speed interface 708 connecting to memory 704 and high-speed expansion ports 710, and a low speed interface 712 connecting to low speed bus 714 and storage device 706.
- Each of the components 702, 704, 706, 708, 710, and 712, are interconnected using various buses, and may be mounted on a common motherboard or in other manners as appropriate.
- the processor 702 can process instructions for execution within the computing device 700, including instructions stored in the memory 704 or on the storage device 706 to display graphical information for a GUI on an external input/output device, such as display 716 coupled to high speed interface 708.
- multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory.
- multiple computing devices 700 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system).
- the memory 704 stores information within the computing device 700.
- the memory 704 is a volatile memory unit or units.
- the memory 704 is a non-volatile memory unit or units.
- the memory 704 may also be another form of computer-readable medium, such as a magnetic or optical disk.
- the storage device 706 is capable of providing mass storage for the computing device 700.
- the storage device 706 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations.
- a computer program product can be tangibly embodied in an information carrier.
- the computer program product may also contain instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 704, the storage device 706, or memory on processor 702.
- the high speed controller 708 manages bandwidth-intensive operations for the computing device 700, while the low speed controller 712 manages lower bandwidth- intensive operations.
- Such allocation of functions is exemplary only. In one
- the high-speed controller 708 is coupled to memory 704, display 716 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 710, which may accept various expansion cards (not shown).
- low- speed controller 712 is coupled to storage device 706 and low-speed expansion port 714.
- the low-speed expansion port which may include various communication ports (e.g., USB, Bluetooth, Ethernet, wireless Ethernet) may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- the computing device 700 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a standard server 720, or multiple times in a group of such servers. It may also be implemented as part of a rack server system 724. In addition, it may be implemented in a personal computer such as a laptop computer 722. Alternatively, components from computing device 700 may be combined with other components in a mobile device (not shown), such as device 750. Each of such devices may contain one or more of computing devices 700, 750, and an entire system may be made up of multiple computing devices 700, 750 communicating with each other. [0059] Computing device 750 includes a processor 752, memory 764, an
- the device 750 may also be provided with a storage device, such as a microdrive or other device, to provide additional storage.
- a storage device such as a microdrive or other device, to provide additional storage.
- Each of the components 750, 752, 764, 754, 766, and 768, are interconnected using various buses, and several of the components may be mounted on a common motherboard or in other manners as appropriate.
- the processor 752 can execute instructions within the computing device 750, including instructions stored in the memory 764.
- the processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors.
- the processor may be implemented using any of a number of architectures.
- the processor 410 may be a CISC (Complex Instruction Set Computers) processor, a RISC (Reduced Instruction Set Computer) processor, or a MISC (Minimal Instruction Set Computer) processor.
- the processor may provide, for example, for coordination of the other components of the device 750, such as control of user interfaces, applications run by device 750, and wireless communication by device 750.
- Processor 752 may communicate with a user through control interface 758 and display interface 756 coupled to a display 754.
- the display 754 may be, for example, a TFT (Thin-Film-Transistor Liquid Crystal Display) display or an OLED (Organic Light Emitting Diode) display, or other appropriate display technology.
- the display interface 756 may comprise appropriate circuitry for driving the display 754 to present graphical and other information to a user.
- the control interface 758 may receive commands from a user and convert them for submission to the processor 752.
- an external interface 762 may be in communication with processor 752, so as to enable near area communication of device 750 with other devices. External interface 762 may provide, for example, for wired communication, or for wireless communication in other devices.
- the memory 764 stores information within the computing device 750.
- the memory 764 can be implemented as one or more of a computer-readable medium or media, a volatile memory unit or units, or a non-volatile memory unit or units.
- Expansion memory 774 may also be provided and connected to device 750 through expansion interface 772, which may include, for example, a SIMM (Single In-Line Memory Module) card interface.
- SIMM Single In-Line Memory Module
- expansion memory 774 may include instructions to carry out or supplement the processes described above, and may include secure information also.
- expansion memory 774 may be a security module for device 750, and may be programmed with instructions that permit secure use of device 750.
- secure applications may be provided via the SIMM cards, along with additional information, such as placing identifying information on the SIMM card in a non-hackable manner.
- the memory may include, for example, flash memory and/or NVRAM memory, as discussed below.
- a computer program product is tangibly embodied in an information carrier.
- the computer program product contains instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 764, expansion memory 774, or memory on processor 752 that may be received, for example, over transceiver 768 or external interface 762.
- Device 750 may communicate wirelessly through communication interface 766, which may include digital signal processing circuitry where necessary.
- Communication interface 766 may provide for communications under various modes or protocols, such as GSM voice calls, SMS, EMS, or MMS messaging, CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS, among others. Such communication may occur, for example, through radio-frequency transceiver 768. In addition, short-range communication may occur, such as using a Bluetooth, WiFi, or other such transceiver (not shown). In addition, GPS (Global Positioning System) receiver module 770 may provide additional navigation- and location-related wireless data to device 750, which may be used as appropriate by applications running on device 750.
- GPS Global Positioning System
- Device 750 may also communicate audibly using audio codec 760, which may receive spoken information from a user and convert it to usable digital information. Audio codec 760 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of device 750. Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on device 750.
- Audio codec 760 may receive spoken information from a user and convert it to usable digital information. Audio codec 760 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of device 750. Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on device 750.
- the computing device 750 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a cellular telephone 780. It may also be implemented as part of a smartphone 782, personal digital assistant, or other similar mobile device.
- Various implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof.
- ASICs application specific integrated circuits
- These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- machine-readable signal refers to any signal used to provide machine instructions and/or data to a programmable processor.
- the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- a keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user can be received in any form, including acoustic, speech, or tactile input.
- the systems and techniques described here can be implemented in a computing system that includes a back-end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front- end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back-end, middleware, or front- end components.
- the components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network ("LAN”), a wide area network (“WAN”), peer-to-peer networks (having ad-hoc or static members), grid computing infrastructures, and the Internet.
- LAN local area network
- WAN wide area network
- peer-to-peer networks having ad-hoc or static members
- grid computing infrastructures and the Internet.
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
Abstract
Description
Claims
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
EP19164122.4A EP3547158A1 (en) | 2016-12-29 | 2016-12-29 | Search and retrieval of keyed data maintained using a keyed database |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/US2016/069293 WO2018125158A1 (en) | 2016-12-29 | 2016-12-29 | Search and retrieval of keyed data maintained using a keyed database |
Related Child Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP19164122.4A Division-Into EP3547158A1 (en) | 2016-12-29 | 2016-12-29 | Search and retrieval of keyed data maintained using a keyed database |
EP19164122.4A Division EP3547158A1 (en) | 2016-12-29 | 2016-12-29 | Search and retrieval of keyed data maintained using a keyed database |
Publications (2)
Publication Number | Publication Date |
---|---|
EP3365815A1 true EP3365815A1 (en) | 2018-08-29 |
EP3365815B1 EP3365815B1 (en) | 2019-05-01 |
Family
ID=57799942
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP19164122.4A Ceased EP3547158A1 (en) | 2016-12-29 | 2016-12-29 | Search and retrieval of keyed data maintained using a keyed database |
EP16826667.4A Active EP3365815B1 (en) | 2016-12-29 | 2016-12-29 | Search and retrieval of keyed data maintained using a keyed database |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP19164122.4A Ceased EP3547158A1 (en) | 2016-12-29 | 2016-12-29 | Search and retrieval of keyed data maintained using a keyed database |
Country Status (6)
Country | Link |
---|---|
US (3) | US10671690B2 (en) |
EP (2) | EP3547158A1 (en) |
JP (1) | JP6585192B2 (en) |
KR (1) | KR101993435B1 (en) |
CN (2) | CN114417193A (en) |
WO (1) | WO2018125158A1 (en) |
Families Citing this family (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP7015400B2 (en) * | 2019-04-16 | 2022-02-02 | グーグル エルエルシー | Self-authentication domain-specific browser identifier |
US11700121B2 (en) * | 2019-09-13 | 2023-07-11 | Amazon Technologies, Inc. | Secure authorization for sensitive information |
US20220300635A1 (en) * | 2021-03-18 | 2022-09-22 | International Business Machines Corporation | Managing search queries using encrypted cache data |
Family Cites Families (24)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5948061A (en) | 1996-10-29 | 1999-09-07 | Double Click, Inc. | Method of delivery, targeting, and measuring advertising over networks |
JP2003518820A (en) | 1999-12-14 | 2003-06-10 | ヨードリー・コム・インコーポレイテツド | Method and apparatus for a circular encryption and decryption process |
JP4441152B2 (en) | 2001-11-12 | 2010-03-31 | ヤフー株式会社 | CGI unauthorized access prevention system and method |
JP4616531B2 (en) | 2001-12-21 | 2011-01-19 | 富士フイルム株式会社 | Communication equipment |
WO2006052904A2 (en) * | 2004-11-08 | 2006-05-18 | Innopath Software, Inc. | Updating compressed read-only memory file system (cramfs) images |
JP2009282833A (en) | 2008-05-23 | 2009-12-03 | Ntt Docomo Inc | Advertisement providing system, advertisement providing method, and advertisement providing program |
US8832034B1 (en) | 2008-07-03 | 2014-09-09 | Riverbed Technology, Inc. | Space-efficient, revision-tolerant data de-duplication |
US7996383B2 (en) * | 2008-08-15 | 2011-08-09 | Athena A. Smyros | Systems and methods for a search engine having runtime components |
US20100125569A1 (en) * | 2008-11-18 | 2010-05-20 | Yahoo! Inc. | System and method for autohyperlinking and navigation in url based context queries |
US20120136726A1 (en) | 2009-05-19 | 2012-05-31 | Goallover Limited | Method and apparatus for interacting with a user over a network |
US8161109B2 (en) | 2009-07-15 | 2012-04-17 | Red Hat, Inc. | Client side culling of dynamic resources |
CN101694672B (en) * | 2009-10-16 | 2011-05-18 | 华中科技大学 | Distributed safe retrieval system |
US9116909B2 (en) * | 2010-12-29 | 2015-08-25 | Amazon Technologies, Inc. | Reduced bandwidth data uploading in data systems |
US20120216052A1 (en) * | 2011-01-11 | 2012-08-23 | Safenet, Inc. | Efficient volume encryption |
CN102708216A (en) * | 2012-06-28 | 2012-10-03 | 北京邮电大学 | Word-segmentation organizing method and clustering method for ciphertext search |
US20140108332A1 (en) * | 2012-10-17 | 2014-04-17 | Dell Products L.P. | System and method for migration and deduplication of digital assets |
US9426200B2 (en) * | 2013-03-12 | 2016-08-23 | Sap Se | Updating dynamic content in cached resources |
US9298637B2 (en) * | 2013-03-13 | 2016-03-29 | International Business Machines Corporation | Dynamic caching module selection for optimized data deduplication |
US9679007B1 (en) * | 2013-03-15 | 2017-06-13 | Veritas Technologies Llc | Techniques for managing references to containers |
AU2014287426A1 (en) | 2013-07-12 | 2016-01-21 | Aquto Corporation | Mobile advertising |
US9363243B2 (en) * | 2014-03-26 | 2016-06-07 | Cisco Technology, Inc. | External indexing and search for a secure cloud collaboration system |
CN104615692B (en) * | 2015-01-23 | 2017-09-19 | 重庆邮电大学 | It is a kind of to support that dynamic updates and multiple key safe ordering can search for encryption method |
US20170068870A1 (en) * | 2015-09-03 | 2017-03-09 | Google Inc. | Using image similarity to deduplicate video suggestions based on thumbnails |
US10812452B2 (en) * | 2016-04-01 | 2020-10-20 | Egnyte, Inc. | Methods for improving performance and security in a cloud computing system |
-
2016
- 2016-12-29 US US15/571,297 patent/US10671690B2/en active Active
- 2016-12-29 EP EP19164122.4A patent/EP3547158A1/en not_active Ceased
- 2016-12-29 WO PCT/US2016/069293 patent/WO2018125158A1/en unknown
- 2016-12-29 KR KR1020177031998A patent/KR101993435B1/en active IP Right Grant
- 2016-12-29 JP JP2017558554A patent/JP6585192B2/en active Active
- 2016-12-29 EP EP16826667.4A patent/EP3365815B1/en active Active
- 2016-12-29 CN CN202111580571.3A patent/CN114417193A/en active Pending
- 2016-12-29 CN CN201680031771.4A patent/CN108513659B/en active Active
-
2020
- 2020-04-10 US US16/845,237 patent/US11372946B2/en active Active
-
2022
- 2022-05-13 US US17/744,247 patent/US20220269739A1/en active Pending
Also Published As
Publication number | Publication date |
---|---|
WO2018125158A1 (en) | 2018-07-05 |
EP3365815B1 (en) | 2019-05-01 |
US20200242175A1 (en) | 2020-07-30 |
JP6585192B2 (en) | 2019-10-02 |
US10671690B2 (en) | 2020-06-02 |
CN108513659B (en) | 2021-12-28 |
US20220269739A1 (en) | 2022-08-25 |
US20190311012A1 (en) | 2019-10-10 |
US11372946B2 (en) | 2022-06-28 |
CN108513659A (en) | 2018-09-07 |
KR101993435B1 (en) | 2019-06-26 |
CN114417193A (en) | 2022-04-29 |
KR20180094775A (en) | 2018-08-24 |
JP2019505009A (en) | 2019-02-21 |
EP3547158A1 (en) | 2019-10-02 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20220269739A1 (en) | Search and retrieval of keyed data maintained using a keyed database | |
US11074625B2 (en) | Bidding based on the relative value of identifiers | |
US9817802B2 (en) | Intelligent automatic expansion/contraction of abbreviations in text-based electronic communications | |
US8843394B2 (en) | Mapping identifiers | |
US20180150565A1 (en) | Search and retrieval of keyed data maintained using a keyed database | |
US10713311B2 (en) | Audience on networked devices | |
US20160344831A1 (en) | Proxy service for content requests | |
US20160314131A1 (en) | Predictive Generation of Search Suggestions | |
US9026516B1 (en) | Interest-based keywords for prominent entity and by location | |
US20160041984A1 (en) | Selecting content using query-independent scores of query segments | |
JP2010530566A (en) | Query statistics provider | |
US10341457B2 (en) | Caching system | |
US10460098B1 (en) | Linking devices using encrypted account identifiers | |
US10387923B2 (en) | Third party customized content based on first party identifer | |
US9258279B1 (en) | Bookmarking content for users associated with multiple devices | |
JP2019505009A5 (en) | ||
US8909631B1 (en) | Creating targeting information for a user | |
JP6876760B2 (en) | Retrieving and retrieving keyed data maintained using a keyed database | |
US10348842B1 (en) | Generating content based on a captured IP address associated with a visit to an electronic resource | |
JP2023508251A (en) | Secure management of data distribution restrictions | |
US10019455B2 (en) | Selecting search queries for display with data associated with search terms | |
US8688669B1 (en) | Content item searching and retrieval | |
US10915587B2 (en) | Data processing system for generating entries in data structures from network requests |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: UNKNOWN |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE INTERNATIONAL PUBLICATION HAS BEEN MADE |
|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: REQUEST FOR EXAMINATION WAS MADE |
|
17P | Request for examination filed |
Effective date: 20171103 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
AX | Request for extension of the european patent |
Extension state: BA ME |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC. |
|
GRAJ | Information related to disapproval of communication of intention to grant by the applicant or resumption of examination proceedings by the epo deleted |
Free format text: ORIGINAL CODE: EPIDOSDIGR1 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: GRANT OF PATENT IS INTENDED |
|
GRAP | Despatch of communication of intention to grant a patent |
Free format text: ORIGINAL CODE: EPIDOSNIGR1 |
|
DAX | Request for extension of the european patent (deleted) | ||
INTG | Intention to grant announced |
Effective date: 20181205 |
|
GRAS | Grant fee paid |
Free format text: ORIGINAL CODE: EPIDOSNIGR3 |
|
GRAA | (expected) grant |
Free format text: ORIGINAL CODE: 0009210 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE PATENT HAS BEEN GRANTED |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC |
|
AK | Designated contracting states |
Kind code of ref document: B1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
DAV | Request for validation of the european patent (deleted) | ||
REG | Reference to a national code |
Ref country code: GBRef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: EPRef country code: ATRef legal event code: REFRef document number: 1127867Country of ref document: ATKind code of ref document: TEffective date: 20190515 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R096Ref document number: 602016013362Country of ref document: DE |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: NLRef legal event code: MPEffective date: 20190501 |
|
REG | Reference to a national code |
Ref country code: LTRef legal event code: MG4D |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190501Ref country code: NLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190501Ref country code: HRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190501Ref country code: PTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190901Ref country code: ESFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190501Ref country code: LTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190501Ref country code: NOFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190801Ref country code: ALFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190501Ref country code: FIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190501 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: GRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190802Ref country code: RSFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190501Ref country code: BGFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190801Ref country code: LVFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190501 |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: MK05Ref document number: 1127867Country of ref document: ATKind code of ref document: TEffective date: 20190501 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ISFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190901 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: DKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190501Ref country code: SKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190501Ref country code: CZFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190501Ref country code: ROFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190501Ref country code: EEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190501Ref country code: ATFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190501 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R097Ref document number: 602016013362Country of ref document: DE |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ITFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190501Ref country code: SMFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190501 |
|
PLBE | No opposition filed within time limit |
Free format text: ORIGINAL CODE: 0009261 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: NO OPPOSITION FILED WITHIN TIME LIMIT |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: TRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190501 |
|
26N | No opposition filed |
Effective date: 20200204 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: PLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190501 |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: PL |
|
REG | Reference to a national code |
Ref country code: BERef legal event code: MMEffective date: 20191231 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MCFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190501 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LUFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20191229Ref country code: IEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20191229 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: BEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20191231Ref country code: CHFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20191231Ref country code: LIFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20191231 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: CYFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190501 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190501Ref country code: HUFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT; INVALID AB INITIOEffective date: 20161229 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190501 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20190501 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230510 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: GBPayment date: 20231227Year of fee payment: 8 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: FRPayment date: 20231227Year of fee payment: 8 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: DEPayment date: 20231229Year of fee payment: 8 |
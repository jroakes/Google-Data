JP2023534269A - Generative modeling of quantum hardware - Google Patents
Generative modeling of quantum hardware Download PDFInfo
- Publication number
- JP2023534269A JP2023534269A JP2023502814A JP2023502814A JP2023534269A JP 2023534269 A JP2023534269 A JP 2023534269A JP 2023502814 A JP2023502814 A JP 2023502814A JP 2023502814 A JP2023502814 A JP 2023502814A JP 2023534269 A JP2023534269 A JP 2023534269A
- Authority
- JP
- Japan
- Prior art keywords
- quantum hardware
- quantum
- hardware
- parameters
- distribution
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 238000000034 method Methods 0.000 claims abstract description 110
- 238000005070 sampling Methods 0.000 claims abstract description 54
- 238000005259 measurement Methods 0.000 claims abstract description 39
- 238000009826 distribution Methods 0.000 claims description 219
- 238000004422 calculation algorithm Methods 0.000 claims description 49
- 239000002096 quantum dot Substances 0.000 claims description 42
- 230000009471 action Effects 0.000 claims description 33
- 238000012360 testing method Methods 0.000 claims description 26
- 238000012549 training Methods 0.000 claims description 25
- 238000013528 artificial neural network Methods 0.000 claims description 20
- 230000001902 propagating effect Effects 0.000 claims description 11
- 238000005457 optimization Methods 0.000 claims description 6
- 230000007547 defect Effects 0.000 claims description 4
- 230000008569 process Effects 0.000 description 53
- 238000013461 design Methods 0.000 description 22
- 238000010586 diagram Methods 0.000 description 21
- 230000015654 memory Effects 0.000 description 20
- 238000012545 processing Methods 0.000 description 17
- 238000003860 storage Methods 0.000 description 13
- 238000004590 computer program Methods 0.000 description 12
- 238000004891 communication Methods 0.000 description 9
- 230000008878 coupling Effects 0.000 description 8
- 238000010168 coupling process Methods 0.000 description 8
- 238000005859 coupling reaction Methods 0.000 description 8
- 238000001228 spectrum Methods 0.000 description 8
- 239000008186 active pharmaceutical agent Substances 0.000 description 7
- 238000004519 manufacturing process Methods 0.000 description 7
- 230000000644 propagated effect Effects 0.000 description 7
- 230000006399 behavior Effects 0.000 description 6
- 230000006870 function Effects 0.000 description 6
- 230000011218 segmentation Effects 0.000 description 5
- 238000012986 modification Methods 0.000 description 4
- 230000004048 modification Effects 0.000 description 4
- 230000000007 visual effect Effects 0.000 description 4
- 230000008901 benefit Effects 0.000 description 3
- 230000005540 biological transmission Effects 0.000 description 3
- 238000013527 convolutional neural network Methods 0.000 description 3
- 230000005283 ground state Effects 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 3
- 230000000306 recurrent effect Effects 0.000 description 3
- 238000013515 script Methods 0.000 description 3
- 230000001419 dependent effect Effects 0.000 description 2
- 238000012938 design process Methods 0.000 description 2
- 230000000694 effects Effects 0.000 description 2
- 238000011156 evaluation Methods 0.000 description 2
- 230000005281 excited state Effects 0.000 description 2
- 230000004907 flux Effects 0.000 description 2
- 238000013519 translation Methods 0.000 description 2
- 238000012800 visualization Methods 0.000 description 2
- OAICVXFJPJFONN-UHFFFAOYSA-N Phosphorus Chemical compound [P] OAICVXFJPJFONN-UHFFFAOYSA-N 0.000 description 1
- XUIMIQQOPSSXEZ-UHFFFAOYSA-N Silicon Chemical compound [Si] XUIMIQQOPSSXEZ-UHFFFAOYSA-N 0.000 description 1
- 238000004458 analytical method Methods 0.000 description 1
- 238000013459 approach Methods 0.000 description 1
- 230000008859 change Effects 0.000 description 1
- 238000007906 compression Methods 0.000 description 1
- 230000006835 compression Effects 0.000 description 1
- 238000000205 computational method Methods 0.000 description 1
- 238000013144 data compression Methods 0.000 description 1
- 238000011161 development Methods 0.000 description 1
- 230000018109 developmental process Effects 0.000 description 1
- 238000013210 evaluation model Methods 0.000 description 1
- 238000002474 experimental method Methods 0.000 description 1
- 238000003709 image segmentation Methods 0.000 description 1
- 239000012535 impurity Substances 0.000 description 1
- 230000010365 information processing Effects 0.000 description 1
- 230000003993 interaction Effects 0.000 description 1
- 238000005040 ion trap Methods 0.000 description 1
- 150000002500 ions Chemical class 0.000 description 1
- 238000010801 machine learning Methods 0.000 description 1
- 238000007726 management method Methods 0.000 description 1
- 238000013178 mathematical model Methods 0.000 description 1
- 230000000877 morphologic effect Effects 0.000 description 1
- 230000010363 phase shift Effects 0.000 description 1
- 229910052698 phosphorus Inorganic materials 0.000 description 1
- 239000011574 phosphorus Substances 0.000 description 1
- 230000004044 response Effects 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000006403 short-term memory Effects 0.000 description 1
- 229910052710 silicon Inorganic materials 0.000 description 1
- 239000010703 silicon Substances 0.000 description 1
- 230000003595 spectral effect Effects 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N10/00—Quantum computing, i.e. information processing based on quantum-mechanical phenomena
- G06N10/40—Physical realisations or architectures of quantum processors or components for manipulating qubits, e.g. qubit coupling or qubit control
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N10/00—Quantum computing, i.e. information processing based on quantum-mechanical phenomena
- G06N10/60—Quantum algorithms, e.g. based on quantum optimisation, quantum Fourier or Hadamard transforms
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/08—Learning methods
- G06N3/082—Learning methods modifying the architecture, e.g. adding, deleting or silencing nodes or connections
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/08—Learning methods
- G06N3/084—Backpropagation, e.g. using gradient descent
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N7/00—Computing arrangements based on specific mathematical models
- G06N7/01—Probabilistic graphical models, e.g. probabilistic networks
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N10/00—Quantum computing, i.e. information processing based on quantum-mechanical phenomena
- G06N10/20—Models of quantum computing, e.g. quantum circuits or universal quantum computers
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/04—Architecture, e.g. interconnection topology
- G06N3/044—Recurrent networks, e.g. Hopfield networks
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/04—Architecture, e.g. interconnection topology
- G06N3/045—Combinations of networks
Abstract
量子ハードウェアの性能をシミュレーションするためのコンピュータによって実施される方法が、1つまたは複数のコンピューティングデバイスを備えるコンピューティングシステムによって、量子ハードウェアのサンプルを生成するように構成される量子ハードウェアサンプル生成モデルにアクセスするステップを含むことができる。量子ハードウェアサンプル生成モデルは、1つまたは複数の量子ハードウェアのパラメータを含むことができる。このコンピュータによって実施される方法は、コンピューティングシステムによって、量子ハードウェアサンプル生成モデルから量子ハードウェアのサンプルをサンプリングするステップを含むことができる。このコンピュータによって実施される方法は、コンピューティングシステムによって、量子ハードウェアのサンプルに少なくとも部分的に基づいて1つまたは複数のシミュレーションされた性能測定値を取得するステップを含むことができる。A computer-implemented method for simulating the performance of quantum hardware is configured by a computing system comprising one or more computing devices to generate samples of quantum hardware A step of accessing the generative model can be included. A quantum hardware sample generation model may include one or more quantum hardware parameters. The computer-implemented method may include, by a computing system, sampling quantum hardware samples from a quantum hardware sample generation model. The computer-implemented method may include obtaining, by a computing system, one or more simulated performance measurements based at least in part on samples of quantum hardware.
Description
本開示は、概して、量子ハードウェアの生成モデリングのためのシステムおよび方法などの量子コンピューティングに関する。 The present disclosure relates generally to quantum computing, such as systems and methods for generative modeling of quantum hardware.
量子コンピューティングは、基礎状態(basis state)の重ね合わせおよびもつれなどの量子効果を利用して、古典的なデジタルコンピュータよりも効率的に特定の計算を実行する計算方法である。ビット、たとえば“1”または“0”の形態で情報を記憶し、操作するデジタルコンピュータとは対照的に、量子コンピューティングシステムは、量子ビット(「キュービット」)を使用して情報を操作することができる。キュービットは、複数の状態の重ね合わせ、たとえば“0”と“1”との両方の状態のデータを可能にする量子デバイス、および/または複数の状態のデータの重ね合わせ自体を指すことができる。慣用的な用語によれば、量子システム(quantum system)における“0”および“1”の重ね合わせの状態は、たとえば|0〉+b|1〉と表されてよい。デジタルコンピュータの“0”および“1”の状態は、キュービットの|0〉および|1〉の基礎状態にそれぞれ類似している。 Quantum computing is a computational method that exploits quantum effects such as superposition and entanglement of basis states to perform certain computations more efficiently than classical digital computers. In contrast to digital computers, which store and manipulate information in the form of bits, e.g., "1s" or "0s," quantum computing systems manipulate information using quantum bits ("qubits"). be able to. A qubit can refer to a quantum device that allows for superposition of multiple states, e.g., data in both "0" and "1" states, and/or the superposition of data in multiple states itself. . According to conventional terminology, the superposition state of '0' and '1' in a quantum system may be represented as |0>+b|1>, for example. The "0" and "1" states of a digital computer are analogous to the |0> and |1> ground states of qubits, respectively.
本開示の実施形態の態様および利点は、以下の説明に部分的に記載されるか、または説明から知ることができるか、または実施形態の実施を通じて知ることができる。 Aspects and advantages of embodiments of the disclosure are set forth in part in the description that follows, or may be learned from the description, or may be learned through practice of the embodiments.
本開示の1つの例示的な態様は、量子ハードウェアのサンプルを生成するように構成されるコンピューティングシステムを対象とする。このコンピューティングシステムは、1つまたは複数のプロセッサおよび1つまたは複数のメモリデバイスを含むことができる。1つまたは複数のメモリデバイスは、量子ハードウェアサンプル生成モデルを定義するコンピュータ可読データと、実施されるときに量子ハードウェアサンプル生成モデルに量子ハードウェアのサンプルを提供させる命令とを記憶することができる。量子ハードウェアサンプル生成モデルは、1つまたは複数の量子ハードウェアのパラメータの分布を有することができる。量子ハードウェアサンプル生成モデルは、1つまたは複数の量子ハードウェアのパラメータの分布の間の関係を定義する1つまたは複数の量子ハードウェアのパラメータの依存関係を有することができる。1つまたは複数の量子ハードウェアのパラメータの分布および1つまたは複数の量子ハードウェアのパラメータの依存関係は、サンプリングされるときに量子ハードウェアのサンプルを生成するハードウェアの分布を有する統計的ネットワークを定義することができる。量子ハードウェアのサンプルは、量子ハードウェアの性能(performance)をモデリングするように構成することができる。 One exemplary aspect of the present disclosure is directed to a computing system configured to generate samples of quantum hardware. The computing system may include one or more processors and one or more memory devices. The one or more memory devices may store computer readable data defining a quantum hardware sampling model and instructions that, when implemented, cause the quantum hardware sampling model to provide samples of the quantum hardware. can. A quantum hardware sample generation model may have a distribution of one or more quantum hardware parameters. The quantum hardware sample generation model may have dependencies of one or more quantum hardware parameters that define relationships between distributions of one or more quantum hardware parameters. A statistical network having a distribution of one or more quantum hardware parameters and a dependency of one or more quantum hardware parameters that, when sampled, produce a quantum hardware sample can be defined. A sample of quantum hardware can be configured to model the performance of quantum hardware.
本開示の別の例示的な態様は、量子ハードウェアの性能をシミュレーションするためのコンピュータによって実施される方法を対象とする。このコンピュータによって実施される方法は、1つまたは複数のコンピューティングデバイスを含むコンピューティングシステムによって、量子ハードウェアのサンプルを生成するように構成される量子ハードウェアサンプル生成モデルにアクセスするステップを含むことができる。量子ハードウェアサンプル生成モデルは、1つまたは複数の量子ハードウェアのパラメータを有することができる。このコンピュータによって実施される方法は、このコンピューティングシステムによって、量子ハードウェアサンプル生成モデルから量子ハードウェアのサンプルをサンプリングするステップを含むことができる。このコンピュータによって実施される方法は、このコンピューティングシステムによって、量子ハードウェアのサンプルに少なくとも部分的に基づいて1つまたは複数のシミュレーションされた性能測定値を取得するステップを含むことができる。 Another exemplary aspect of the present disclosure is directed to a computer-implemented method for simulating the performance of quantum hardware. The computer-implemented method includes accessing, by a computing system including one or more computing devices, a quantum hardware sample generation model configured to generate samples of quantum hardware. can be done. A quantum hardware sample generation model may have one or more quantum hardware parameters. The computer-implemented method may include, by the computing system, sampling quantum hardware samples from a quantum hardware sample generation model. The computer-implemented method can include obtaining, by the computing system, one or more simulated performance measurements based at least in part on samples of quantum hardware.
本開示の別の例示的な態様は、量子ハードウェアの性能をシミュレーションする量子ハードウェアのサンプルを生成するためのコンピュータによって実施される方法を対象とする。このコンピュータによって実施される方法は、1つまたは複数のコンピューティングデバイスを含むコンピューティングシステムによって、量子ハードウェアのサンプルを生成するように構成される量子ハードウェアサンプル生成モデルにアクセスするステップを含むことができる。量子ハードウェアサンプル生成モデルは、1つまたは複数の量子ハードウェアのパラメータの分布および1つまたは複数の量子ハードウェアのパラメータの依存関係の統計的ネットワークを有することができる。このコンピュータによって実施される方法は、このコンピューティングシステムによって、量子ハードウェアのサンプルを取得するために量子ハードウェアサンプル生成モデルをサンプリングするステップを含むことができる。量子ハードウェアサンプル生成モデルをサンプリングするステップは、1つまたは複数の量子ハードウェアのパラメータの分布の各々から1つまたは複数のパラメータのサンプルをサンプリングすることと、1つまたは複数の量子ハードウェアのパラメータの依存関係に基づく統計的ネットワークを通じて1つまたは複数のパラメータのサンプルを伝播させることとを含むことができる。 Another exemplary aspect of the present disclosure is directed to a computer-implemented method for generating samples of quantum hardware that simulate the performance of quantum hardware. The computer-implemented method includes accessing, by a computing system including one or more computing devices, a quantum hardware sample generation model configured to generate quantum hardware samples. can be done. The quantum hardware sample generation model may comprise a statistical network of distributions of one or more quantum hardware parameters and dependencies of the one or more quantum hardware parameters. The computer-implemented method may include, by the computing system, sampling a quantum hardware sample generation model to obtain samples of the quantum hardware. Sampling the quantum hardware sampling model includes sampling one or more parameter samples from each of a distribution of parameters of the one or more quantum hardware; Propagating samples of one or more parameters through a statistical network based on parameter dependencies.
本開示のその他の態様は、様々なシステム、装置、非一時的コンピュータ可読媒体、ユーザインターフェース、および電子デバイスを対象とする。 Other aspects of this disclosure are directed to various systems, apparatus, non-transitory computer-readable media, user interfaces, and electronic devices.
本開示の様々な実施形態のこれらのおよびその他の特徴、態様、および利点は、以下の説明および添付の請求項を参照するとより深く理解されるであろう。本明細書の一部に組み込まれ、本明細書の一部をなす添付の図面は、本開示の例示的な実施形態を示し、説明とともに、関連する原理を説明する働きをする。 These and other features, aspects, and advantages of various embodiments of the present disclosure will become better understood with reference to the following description and appended claims. The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate exemplary embodiments of the present disclosure and, together with the description, serve to explain the principles involved.
添付の図面を参照する当業者に向けた実施形態の詳細な検討が、本明細書に記載されている。 A detailed discussion of embodiments directed to those skilled in the art with reference to the accompanying drawings is set forth herein.
複数の図にわたって繰り返される参照番号は、様々な実装における同じ特徴を特定するように意図される。 Reference numbers that are repeated across multiple figures are intended to identify the same features in different implementations.
以降で、実施形態に対する参照が詳細になされ、実施形態の1つまたは複数の例が図面に示される。各例は、本開示の限定ではなく、実施形態の説明のために提供される。実際、本開示の範囲または精神から逸脱することなく実施形態に様々な修正および変更がなされてもよいことは、当業者に明らかであろう。たとえば、1つの実施形態の一部として示されるかまたは説明される特徴は、いっそうさらなる実施形態を生み出すために別の実施形態によって使用されてもよい。したがって、本開示の態様はそのような修正および変更を包含することが意図される。 Reference will now be made in detail to embodiments, one or more examples of which are illustrated in the drawings. Each example is provided by way of explanation of embodiments, not limitation of this disclosure. Indeed, it will be apparent to those skilled in the art that various modifications and changes may be made to the embodiments without departing from the scope or spirit of this disclosure. For example, features illustrated or described as part of one embodiment may be used by another embodiment to yield a still further embodiment. Accordingly, aspects of the present disclosure are intended to embrace such modifications and variations.
量子ハードウェアの設計は、時間を要し、費用のかかる手順となることがある。たとえば、量子ハードウェアの設計の1つの態様は、量子アルゴリズムを高い忠実度、品質、信頼性、再現性などで実行するために、所望の動作パラメータ(たとえば、周波数調整可能な超伝導トランズモン(transmon)キュービットにおけるような、単一キュービットおよび/または2キュービットゲートの周波数)を提供するために満足できる値の回路設計パラメータ(たとえば、ジョセフソン接合の抵抗、制御線とキュービットとの間の相互インダクタンスまたは結合容量、キュービットの間の結合容量など)を開発することを含んでもよい。したがって、回路設計パラメータの選択をテストすることは、量子プロセッサ全体を開発および試作することを必要とする可能性があり、これはコストが高いプロセスとなることがある。場合によっては、人間の直感が一部の評価ステップを代替してもよいが、特に量子ハードウェアの規模が次第に大きくなるにつれて、人間の直感は信頼できなくなる可能性がある。さらに、ますます数を増す依存関係および/またはますます大きくなるスコープを有する複雑な確率的関係を通じて、設計のあらゆる側面(たとえば、不確実性(uncertainty))を伝播させることは困難であってもよい。 Designing quantum hardware can be a time-consuming and expensive procedure. For example, one aspect of quantum hardware design is to set desired operating parameters (e.g., frequency-tunable superconducting transmon ) qubits, and/or the frequencies of single-qubit and/or two-qubit gates) with satisfactory values for circuit design parameters (e.g., resistance of Josephson junctions, between control lines and qubits). mutual inductance or coupling capacitance of qubits, coupling capacitance between qubits, etc.). Therefore, testing circuit design parameter choices can require developing and prototyping an entire quantum processor, which can be a costly process. In some cases, human intuition may replace some evaluation steps, but human intuition may become unreliable, especially as quantum hardware scales up over time. Moreover, even though it is difficult to propagate all aspects of the design (e.g., uncertainty) through complex probabilistic relationships with an ever-increasing number of dependencies and/or an ever-increasing scope. good.
本開示の例示的な態様は、量子ハードウェア(たとえば、1つまたは複数のキュービットを含む量子プロセッサ)の生成モデリングを対象とする。本開示の例示的な態様によれば、量子ハードウェアの挙動および/または性能をシミュレーションするために使用されることが可能である量子ハードウェアのサンプルが、量子ハードウェアサンプル生成モデルによって生成されてもよい。量子ハードウェアのパラメータは、確率変数に対する任意の(たとえば、設計された)および/または実験によって測定された分布によってモデリングされてもよい。量子ハードウェアサンプル生成モデルは、量子ハードウェアのパラメータの分布を、エッジおよび/または依存関係(たとえば、量子ハードウェアのパラメータの依存関係)によって接続された複数のノード(たとえば、量子ハードウェアのパラメータの分布)として関連付ける統計的ネットワーク(たとえば、ベイジアンネットワーク)を含んでもよい。たとえば、量子ハードウェアにおける既知のおよび/または理解された依存関係に基づいて、量子ハードウェアのパラメータの分布の間に依存関係(たとえば、条件付き依存関係)が定義されてもよい。追加的および/または代替的に、依存関係が未知の量子ハードウェアのパラメータは、独立した分布として扱われてもよい。追加的および/または代替的に、一部の実装においては(たとえば、十分な利用可能なトレーニングデータが存在する場合は)、ニューラルネットワークの使用などの機械学習されたモデリング技術が、量子ハードウェアのパラメータの依存関係に関する洞察を生成するおよび/またはそれ以外の方法で提供するために採用されてもよい。たとえば、統計的ネットワークのパラメータおよび/または依存関係は、機械学習されたモデリングおよび/またはトレーニング技術の適用によって学習されてもよい。 Exemplary aspects of the present disclosure are directed to generative modeling of quantum hardware (eg, a quantum processor including one or more qubits). According to exemplary aspects of the present disclosure, quantum hardware samples that can be used to simulate quantum hardware behavior and/or performance are generated by a quantum hardware sample generation model. good too. The parameters of the quantum hardware may be modeled by arbitrary (eg, designed) and/or experimentally measured distributions for random variables. A quantum hardware sample generation model represents the distribution of the parameters of the quantum hardware as multiple nodes (e.g., parameters of the quantum hardware) connected by edges and/or dependencies (e.g., the parameters of the quantum hardware (distribution of ), statistical networks (eg, Bayesian networks). For example, dependencies (eg, conditional dependencies) may be defined between distributions of parameters of the quantum hardware based on known and/or understood dependencies in the quantum hardware. Additionally and/or alternatively, quantum hardware parameters with unknown dependencies may be treated as independent distributions. Additionally and/or alternatively, in some implementations (e.g., when there is sufficient training data available), machine-learned modeling techniques such as the use of neural networks may be used on quantum hardware. It may be employed to generate and/or otherwise provide insight into parameter dependencies. For example, parameters and/or dependencies of a statistical network may be learned by applying machine-learned modeling and/or training techniques.
統計的ネットワークは、最終出力として、(たとえば、直接および/または中間分布を通じて)量子ハードウェアのパラメータの分布の一部またはすべてに条件付きで依存するハードウェアの分布(たとえば、ハードウェア分布ノード)を含んでもよい。ハードウェアの分布は、量子ハードウェアのサンプルを生成するために(たとえば、事前サンプリングプロセスによって)サンプリングされてもよい。分布の統計的な(たとえば、ベイジアン)ネットワークを含むモデリングへの確率的な手法は、製造された量子ハードウェアに見られるように、量子ハードウェアの個々のインスタンスの間のばらつきをより正確にモデリングすることができる。これは、たとえば単一の(たとえば、固定のおよび/または非確率的)パラメータのみを含むことと比較して、改善された(たとえば、より正確な)設計プロセスを可能にすることができる。 Statistical networks use distributions in hardware (e.g., hardware distribution nodes) that conditionally depend (e.g., directly and/or through intermediate distributions) on some or all of the distributions of parameters in the quantum hardware as their final output. may include A distribution of hardware may be sampled (eg, by a pre-sampling process) to generate a sample of quantum hardware. Probabilistic approaches to modeling, including statistical (e.g., Bayesian) networks of distributions, more accurately model the variability between individual instances of quantum hardware, such as those found in manufactured quantum hardware. can do. This can allow an improved (eg, more accurate) design process compared to, eg, including only a single (eg, fixed and/or non-probabilistic) parameter.
たとえば、コンピューティングシステムが、量子ハードウェアのサンプルを生成するように構成されてもよい。このコンピューティングシステムは、1つもしくは複数のプロセッサおよび/または1つもしくは複数のメモリデバイスを含んでもよい。1つまたは複数のメモリデバイスは、量子ハードウェアサンプル生成モデルを定義するコンピュータ可読データと、実施されるときに量子ハードウェアサンプル生成モデルに量子ハードウェアのサンプルを提供させる命令とを記憶することができる。量子ハードウェアのサンプルは、量子ハードウェアのパラメータの分布および/または依存関係に従った量子ハードウェアのシミュレーションされたサンプルであることが可能である。 For example, a computing system may be configured to generate samples of quantum hardware. The computing system may include one or more processors and/or one or more memory devices. The one or more memory devices may store computer readable data defining a quantum hardware sampling model and instructions that, when implemented, cause the quantum hardware sampling model to provide samples of the quantum hardware. can. The sample of quantum hardware can be a simulated sample of quantum hardware according to the distribution and/or dependencies of the parameters of the quantum hardware.
量子ハードウェアサンプル生成モデルは、1つまたは複数の量子ハードウェアのパラメータの分布を含んでもよい。一部の実装において、1つまたは複数の量子ハードウェアのパラメータの分布は、1つまたは複数の実験によって測定された量子ハードウェアのパラメータの分布を含んでもよい。たとえば、実験によって測定された量子ハードウェアのパラメータの分布は、実際の(たとえば、製作された)量子ハードウェアの性能から実験によって測定されてもよい。一部の実装において、1つまたは複数の量子ハードウェアのパラメータの分布は、1つまたは複数の設計された量子ハードウェアのパラメータの分布を含んでもよい。たとえば、設計された量子ハードウェアのパラメータ分布は、実験による測定の代わりになど、目標の性能、期待される性能などに基づいて規定されるおよび/またはそれ以外の方法で生成されることが可能である。 A quantum hardware sample generation model may include a distribution of one or more quantum hardware parameters. In some implementations, the distributions of one or more quantum hardware parameters may include distributions of quantum hardware parameters measured by one or more experiments. For example, experimentally measured distributions of quantum hardware parameters may be experimentally measured from the performance of actual (eg, fabricated) quantum hardware. In some implementations, the one or more quantum hardware parameter distributions may include one or more engineered quantum hardware parameter distributions. For example, parameter distributions for designed quantum hardware can be specified and/or otherwise generated based on target performance, expected performance, etc., instead of experimental measurements. is.
一部の実装において、1つまたは複数の量子ハードウェアのパラメータの分布は、1つもしくは複数の回路パラメータ、1つもしくは複数の電気パラメータ(electrical parameter)、1つもしくは複数の製作パラメータ、および/または1つもしくは複数の欠陥パラメータ(defect parameter)のうちの少なくとも1つを含んでもよい。たとえば、一部の実装において、1つまたは複数の量子ハードウェアのパラメータの分布は、キャパシタンス(たとえば、キュービットの自己キャパシタンス)、接合の抵抗(たとえば、ジョセフソン接合の抵抗)、キュービットの非調和性(anharmonicity)、キュービット制御相互インダクタンス分布(qubit-control mutual inductance distribution)、最大周波数、読出し共振器の周波数、ジョセフソン接合の非対称性、2準位系(TLS)のTLS数密度、TLSの周波数、TLSのコヒーレンス、TLSのキュービットデカップリング(qubit-decoupling)、キュービットの品質、キュービット制御相互インダクタンスプライム分布(qubit-control mutual inductance prime distribution)、駆動インピーダンス(drive impedance)、共振器の内部品質、共振器のカップリング品質、共振器-キュービットカップリング効率(resonator-qubit coupling efficiency)、帯域通過フィルタの周波数、帯域通過フィルタの品質、トランズモンの周波数、T1スペクトル、単一のキュービットの周波数、またはキュービットグリッドの周波数(qubit grid frequency)のうちの少なくとも1つを含んでもよい。一部の実装において、量子ハードウェアサンプル生成モデルは、量子ハードウェアのパラメータの分布上の結合確率分布(joint probability distribution)であってもよいかまたはそれを含んでもよい。 In some implementations, the distribution of one or more quantum hardware parameters is one or more circuit parameters, one or more electrical parameters, one or more fabrication parameters, and/or Or it may include at least one of one or more defect parameters. For example, in some implementations, the distribution of one or more quantum hardware parameters may be the capacitance (e.g., qubit self-capacitance), junction resistance (e.g., Josephson junction resistance), qubit resistance anharmonicity, qubit-control mutual inductance distribution, maximum frequency, readout resonator frequency, Josephson junction asymmetry, TLS number density in two-level systems (TLS), TLS frequency, TLS coherence, TLS qubit-decoupling, qubit quality, qubit-control mutual inductance prime distribution, drive impedance, resonator internal quality, resonator coupling quality, resonator-qubit coupling efficiency, bandpass filter frequency, bandpass filter quality, transmon frequency, T1 spectrum, single queue It may include at least one of a frequency of bits or a frequency of a qubit grid. In some implementations, the quantum hardware sampling model may be or include a joint probability distribution on the distribution of the parameters of the quantum hardware.
追加的および/または代替的に、量子ハードウェアサンプル生成モデルは、1つまたは複数の量子ハードウェアのパラメータの分布の間の関係を定義する1つまたは複数の量子ハードウェアのパラメータの依存関係を含んでもよい。1つまたは複数の量子ハードウェアのパラメータの分布および1つまたは複数の量子ハードウェアのパラメータの依存関係は、サンプリングされるときに量子ハードウェアのサンプルを生成するハードウェアの分布を含む統計的ネットワークを定義することができる。一部の実装において、統計的ネットワークは、ベイジアンネットワークであってもよいかまたはベイジアンネットワークを含んでもよい。一部の実装において、1つまたは複数の量子ハードウェアのパラメータの依存関係は、未知の依存関係を有する量子ハードウェアのパラメータの分布間の1つもしくは複数の条件付き独立関係および/または既知の依存関係に基づいて量子ハードウェアのパラメータの分布を関連付ける1つもしくは複数の条件付き依存関係を含んでもよい。 Additionally and/or alternatively, the quantum hardware sampling model may include dependencies of one or more quantum hardware parameters that define relationships between distributions of the one or more quantum hardware parameters. may contain. A statistical network containing a distribution of one or more quantum hardware parameters and a dependency of one or more quantum hardware parameters that, when sampled, produce a quantum hardware sample can be defined. In some implementations, the statistical network may be or include a Bayesian network. In some implementations, the one or more quantum hardware parameter dependencies are one or more conditional independence relationships between distributions of the quantum hardware parameters with unknown dependencies and/or known It may include one or more conditional dependencies that relate distributions of parameters of the quantum hardware based on the dependencies.
一部の実装において、量子ハードウェアサンプル生成モデルは、機械学習された量子ハードウェアサンプル生成モデルを含んでもよい。たとえば、1つまたは複数の量子ハードウェアのパラメータの依存関係が、機械学習された量子ハードウェアサンプル生成モデルをトレーニングすることに少なくとも部分的に基づいて学習されてもよい。追加的および/または代替的に、統計的ネットワークは、機械学習されたニューラルネットワークであってもよいかまたはそれを含んでもよい。 In some implementations, the quantum hardware sampling model may include a machine-learned quantum hardware sampling model. For example, one or more quantum hardware parameter dependencies may be learned based at least in part on training a machine-learned quantum hardware sample generation model. Additionally and/or alternatively, the statistical network may be or include a machine-learned neural network.
量子ハードウェアのサンプルは、1つまたは複数のキュービットを含む量子プロセッサなどの量子ハードウェアの性能を表してもよい。たとえば、量子ハードウェアのサンプルは、量子ハードウェアの性能を推定するために有用な量子ハードウェアの理論的インスタンスについての一部のまたはすべての情報を含んでもよい。情報は、たとえば単一の数、複数のパラメータ(たとえば、そのデータベース)、関係などの様々なパラメータを含んでもよい。たとえば、一部の実装において、量子ハードウェアのサンプルは、量子ハードウェアの複数の性能指標のうちの少なくとも1つの挙動を予測するおよび/またはそれ以外の方法で説明するようにそれぞれ構成される複数のサブモデルを含んでもよいおよび/またはそうでなければそれらのサブモデルを定義するのに有用であってもよい。たとえば、複数の性能指標は、周波数に依存するT1緩和(relaxation)、周波数に依存するT2位相緩和(dephasing)、および/または任意のその他の好適な性能指標を含んでもよい。 A sample of quantum hardware may represent the performance of quantum hardware, such as a quantum processor including one or more qubits. For example, a sample of quantum hardware may contain some or all information about a theoretical instance of quantum hardware that is useful for estimating the performance of quantum hardware. Information may include various parameters such as, for example, a single number, multiple parameters (eg, its database), relationships, and the like. For example, in some implementations, a sample of quantum hardware is configured to predict and/or otherwise describe the behavior of at least one of a plurality of performance metrics of quantum hardware. and/or may otherwise be useful in defining those submodels. For example, the plurality of performance metrics may include frequency dependent T1 relaxation, frequency dependent T2 dephasing, and/or any other suitable performance metrics.
コンピューティングシステムは、量子ハードウェアの性能をシミュレーションするためのコンピュータによって実施される方法を(たとえば、1つまたは複数の命令を実施する1つまたは複数のプロセッサによって)実施することが可能である。 A computing system is capable of implementing a computer-implemented method (eg, by one or more processors implementing one or more instructions) for simulating the performance of quantum hardware.
このコンピュータによって実施される方法は、量子ハードウェアのサンプルを生成するように構成される量子ハードウェアサンプル生成モデルに(たとえば、1つまたは複数のコンピューティングデバイスを含むコンピューティングシステムによって)アクセスすることを含んでもよい。量子ハードウェアサンプル生成モデルは、1つまたは複数の量子ハードウェアのパラメータを含んでもよい。 The computer-implemented method accesses (eg, by a computing system including one or more computing devices) a quantum hardware sample generation model configured to generate samples of quantum hardware. may include A quantum hardware sample generation model may include one or more quantum hardware parameters.
追加的および/または代替的に、このコンピュータによって実施される方法は、量子ハードウェアサンプル生成モデルから量子ハードウェアのサンプルを(たとえば、このコンピューティングシステムによって)サンプリングすることを含んでもよい。一部の実装において、量子ハードウェアサンプル生成モデルから量子ハードウェアのサンプルをサンプリングすることは、1つもしくは複数の量子ハードウェアのパラメータの分布の各々から1つもしくは複数のパラメータのサンプルをサンプリングすること、および/または1つもしくは複数の量子ハードウェアのパラメータの依存関係を含む統計的ネットワークを通じて1つもしくは複数のパラメータのサンプルを伝播させることを含んでもよい。一部の実装において、1つまたは複数のパラメータのサンプルをサンプリングすることは、1つまたは複数のパラメータのサンプルを事前サンプリングすることを含んでもよい。 Additionally and/or alternatively, the computer-implemented method may include sampling (eg, by the computing system) quantum hardware samples from a quantum hardware sample generation model. In some implementations, sampling quantum hardware samples from a quantum hardware sample generation model samples one or more parameter samples from each of the one or more quantum hardware parameter distributions. and/or propagating samples of one or more parameters through a statistical network that includes dependencies of parameters of one or more quantum hardware. In some implementations, sampling samples of one or more parameters may include pre-sampling samples of one or more parameters.
追加的および/または代替的に、このコンピュータによって実施される方法は、量子ハードウェアのサンプルに少なくとも部分的に基づいて1つまたは複数のシミュレーションされた性能測定値を(たとえば、このコンピューティングシステムによって)取得することを含んでもよい。 Additionally and/or alternatively, the computer-implemented method generates one or more simulated performance measurements based at least in part on samples of quantum hardware (e.g., by the computing system ) to obtain
たとえば、一部の実装において、1つまたは複数のシミュレーションされた性能測定値を取得することは、最適化アルゴリズムを使用して1つまたは複数の動作パラメータを(たとえば、このコンピューティングシステムによって)決定することと、1つまたは複数の動作パラメータに少なくとも部分的に基づいて1つまたは複数のシミュレーションされた性能測定値を(たとえば、このコンピューティングシステムによって)シミュレーションすることとを含んでもよい。たとえば、一部の実装において、1つまたは複数の動作パラメータは、1つまたは複数の動作周波数を含んでもよい。 For example, in some implementations, obtaining one or more simulated performance measurements uses an optimization algorithm to determine (e.g., by this computing system) one or more operating parameters. and simulating (eg, by the computing system) one or more simulated performance measurements based at least in part on the one or more operating parameters. For example, in some implementations the one or more operating parameters may include one or more operating frequencies.
追加的および/または代替的に、一部の実装において、量子ハードウェアのサンプルから1つまたは複数のシミュレーションされた性能測定値を取得ことは、量子ハードウェアのサンプルを量子回路シミュレータシステムに(たとえば、このコンピューティングシステムによって)提供することを含んでもよい。量子回路シミュレータシステムは、1つまたは複数の量子テストアルゴリズムに関して量子ハードウェアのサンプルの性能をシミュレーションするように構成されてもよい。たとえば、量子テストアルゴリズムは、量子ハードウェアのサンプルの性能を評価するのに好適であってもよい任意の1つまたは複数の量子アルゴリズムであることが可能である。たとえば、量子テストアルゴリズムは、関心のある1つまたは複数の量子アルゴリズムに関して量子ハードウェアの性能を評価するために使用されてもよいアルゴリズム(たとえば、少なくとも部分的におよび/または純粋に古典的なアルゴリズムおよび/または量子アルゴリズム)であってもよいかまたはそれを含んでもよい。追加的および/または代替的に、一部の実装において、1つまたは複数のシミュレーションされた性能測定値を取得ことは、量子回路シミュレータシステムから、1つまたは複数のテストアルゴリズムに関する1つまたは複数のアルゴリズムエラーを(たとえば、このコンピューティングシステムによって)取得することを含んでもよい。 Additionally and/or alternatively, in some implementations, obtaining one or more simulated performance measurements from a sample of quantum hardware involves passing the sample of quantum hardware to a quantum circuit simulator system (e.g., , by this computing system). A quantum circuit simulator system may be configured to simulate the performance of a sample of quantum hardware with respect to one or more quantum test algorithms. For example, the quantum test algorithm can be any quantum algorithm or algorithms that may be suitable for evaluating the performance of a sample of quantum hardware. For example, a quantum test algorithm may be used to evaluate the performance of quantum hardware with respect to one or more quantum algorithms of interest (e.g., at least partially and/or purely classical algorithms and/or quantum algorithms). Additionally and/or alternatively, in some implementations, obtaining one or more simulated performance measurements includes one or more methods for one or more test algorithms from a quantum circuit simulator system. It may also include capturing algorithmic errors (eg, by the computing system).
追加的および/または代替的に、このコンピュータによって実施される方法は、1つまたは複数のシミュレーションされた性能測定値と1つまたは複数の目標性能測定値との間の1つまたは複数の性能距離(performance distance)を(たとえば、このコンピューティングシステムによって)取得することを含んでもよい。 Additionally and/or alternatively, the computer-implemented method measures one or more performance distances between one or more simulated performance measures and one or more target performance measures. (performance distance) (eg, by the computing system).
追加的および/または代替的に、このコンピュータによって実施される方法は、1つまたは複数の性能距離に少なくとも部分的に基づいて1つまたは複数の量子ハードウェアのパラメータの分布のうちの少なくとも1つを調整するための制御アクションを(たとえば、このコンピューティングシステムによって)実施することを含んでもよい。たとえば、一部の実装において、制御アクションは、1つもしくは複数の量子ハードウェアのパラメータの分布のうちの少なくとも1つをインクリメントすること、デクリメントすること、シフトすること、伸張すること(stretch)、置換すること、および/もしくはその分布の種類を変更することのうちのいずれか1つもしくは複数であってもよいかまたはそれらを含んでもよい。 Additionally and/or alternatively, the computer-implemented method comprises determining at least one of the distributions of the one or more quantum hardware parameters based at least in part on the one or more performance metrics. may include performing (eg, by the computing system) a control action to adjust the . For example, in some implementations, the control action includes incrementing, decrementing, shifting, stretching, or at least one distribution of one or more quantum hardware parameters. It may be or include any one or more of substituting and/or altering the type of distribution thereof.
コンピューティングシステムは、量子ハードウェアの性能をシミュレーションする量子ハードウェアのサンプルを生成するためのコンピュータによって実施される方法を(たとえば、1つまたは複数の命令を実施する1つまたは複数のプロセッサによって)実施することが可能である。 A computing system describes a computer-implemented method (e.g., by one or more processors implementing one or more instructions) for generating samples of quantum hardware that simulate the performance of quantum hardware. It is possible to implement.
このコンピュータによって実施される方法は、量子ハードウェアのサンプルを生成するように構成される量子ハードウェアサンプル生成モデルに(たとえば、1つまたは複数のコンピューティングデバイスを含むコンピューティングシステムによって)アクセスすることを含んでもよい。量子ハードウェアサンプル生成モデルは、1つまたは複数の量子ハードウェアのパラメータの分布および1つまたは複数の量子ハードウェアのパラメータの依存関係の統計的ネットワークを含んでもよい。 The computer-implemented method accesses (eg, by a computing system including one or more computing devices) a quantum hardware sample generation model configured to generate samples of quantum hardware. may include The quantum hardware sample generation model may include a statistical network of distributions of one or more quantum hardware parameters and dependencies of the one or more quantum hardware parameters.
追加的および/または代替的に、このコンピュータによって実施される方法は、量子ハードウェアのサンプルを取得するために量子ハードウェアサンプル生成モデルを(たとえば、このコンピューティングシステムによって)サンプリングすることを含んでもよい。量子ハードウェアサンプル生成モデルをサンプリングすることは、1つもしくは複数の量子ハードウェアのパラメータの分布の各々から1つもしくは複数のパラメータのサンプルをサンプリングすること、および/または1つもしくは複数の量子ハードウェアのパラメータの依存関係に基づく統計的ネットワークを通じて1つもしくは複数のパラメータのサンプルを伝播させることを含んでもよい。 Additionally and/or alternatively, the computer-implemented method may include sampling (eg, by the computing system) a quantum hardware sampling model to obtain samples of the quantum hardware. good. Sampling the quantum hardware sample generation model includes sampling one or more parameter samples from each of the parameter distributions of the one or more quantum hardware and/or the one or more quantum hardware. Propagating the samples of one or more parameters through a statistical network based on ware parameter dependencies may also be included.
本開示の態様は、多数の技術的効果および利点を提供する。量子ハードウェアのサンプルは、物理的なプロトタイプを使用して設計またはテストするのが非現実的である場合がある量子ハードウェアを含む量子ハードウェアをシミュレーションし、設計するために使用されてもよい。1つの例として、量子ハードウェアのサンプルは、多数のキュービットにスケーラブルであってもよい。これは、現代のシステムよりも著しく大きな量子ハードウェア上で量子アルゴリズムの性能を評価するために使用されてもよい量子ハードウェアのサンプルの生成を可能にしてもよい。たとえば、量子ハードウェアシステムが、概して、信頼性の高い動作を実行する数百のオーダーのキュービットを有する場合、数千個以上のキュービットを有する量子ハードウェアをシミュレーションする量子ハードウェアのサンプルが生成されてもよい。したがって、量子ハードウェアのサンプルは、製造するのが非現実的である場合があるキュービットサイズでの量子ハードウェアアーキテクチャおよび/または設計の評価を容易にすることができる。加えて、量子ハードウェアのサンプルは、量子ハードウェアの設計プロセス中の削減されたコストを提供することができる。たとえば、量子ハードウェアのサンプルは、物理的なプロトタイプおよび/または物理的なプロトタイプの修正に関連する製作コストを削減することができる。 Aspects of the disclosure provide numerous technical effects and advantages. A sample of quantum hardware may be used to simulate and design quantum hardware, including quantum hardware that may be impractical to design or test using a physical prototype. . As one example, a sample of quantum hardware may be scalable to a large number of qubits. This may allow generation of a sample of quantum hardware that may be used to evaluate the performance of quantum algorithms on quantum hardware that is significantly larger than modern systems. For example, if quantum hardware systems typically have qubits on the order of a few hundred that behave reliably, there are samples of quantum hardware simulating quantum hardware with thousands or more qubits. may be generated. Samples of quantum hardware can thus facilitate evaluation of quantum hardware architectures and/or designs at qubit sizes that may be impractical to manufacture. Additionally, a sample of quantum hardware can provide reduced costs during the quantum hardware design process. For example, quantum hardware samples can reduce manufacturing costs associated with physical prototypes and/or modifications of physical prototypes.
本開示の例示的な態様によれば、最適化アルゴリズムが、量子ハードウェアのサンプルのための動作パラメータを決定することができる。量子ハードウェアのサンプルの性能は、動作パラメータで評価されてもよい。たとえば、一部の実装において、評価モデルは、動作パラメータに基づいて、量子ハードウェアのサンプルによって表される量子ハードウェアの性能を推定することができる。これは、たとえばプロトタイプハードウェアの動作パラメータを決定すること、プロトタイプハードウェアの品質を評価することなどに有用であってもよい。さらに、最適化アルゴリズムは、量子ハードウェアのサンプルによって量子ハードウェアの開発の実現可能性を評価することに有用であってもよい。たとえば、量子ハードウェアのサンプルの性能が十分である場合、実際の量子ハードウェア(たとえば、量子プロセッサー)が、量子ハードウェアのパラメータの分布に従って開発、製作などされることが可能である。加えて、量子ハードウェアのサンプルは、量子ハードウェアのサンプルのパラメータに従った物理的ハードウェアの開発を必要とせずに、特定のアーキテクチャに関する潜在的に厄介な問題、特定のスケーリングにおける潜在的な厄介な問題などの潜在的に厄介な問題(たとえば、再帰(recursion))を示すことができる。たとえば、量子ハードウェアのサンプルの性能が不十分である(たとえば、目標アルゴリズムの所望の性能が達成されない)場合、量子ハードウェアのサンプルが望ましい性能を示すまで、アーキテクチャ(たとえば、パラメータ、依存関係など)が調整されることが可能であり、および/または量子ハードウェアサンプル生成モデルが再サンプリングされることが可能である。 According to exemplary aspects of the present disclosure, an optimization algorithm can determine operating parameters for a sample of quantum hardware. The performance of a sample of quantum hardware may be evaluated with operating parameters. For example, in some implementations, an evaluation model can estimate the performance of quantum hardware represented by a sample of quantum hardware based on operating parameters. This may be useful, for example, in determining operating parameters of prototype hardware, assessing the quality of prototype hardware, and the like. Additionally, the optimization algorithm may be useful in evaluating the feasibility of developing quantum hardware with a sample of quantum hardware. For example, if the performance of a sample of quantum hardware is sufficient, the actual quantum hardware (eg, quantum processor) can be developed, fabricated, etc. according to the distribution of quantum hardware parameters. In addition, a sample of quantum hardware solves potentially thorny problems with certain architectures, potential problems at certain scalings, without requiring the development of physical hardware according to the parameters of the sample of quantum hardware. Potentially annoying problems such as annoying problems (eg, recursion) can be indicated. For example, if a sample of quantum hardware is performing poorly (e.g., the desired performance of the target algorithm is not achieved), it is possible that the architecture (e.g., parameters, dependencies, etc.) will continue until the sample of quantum hardware exhibits the desired performance. ) can be adjusted and/or the quantum hardware sampling model can be resampled.
図1は、例示的な量子コンピューティングシステム100を示す。例示的なシステム100は、下で説明されるシステム、コンポーネント、および技術が実装されてもよい、1つまたは複数の場所における1つまたは複数の古典的なコンピュータまたは量子コンピューティングデバイス上のシステムの一例である。本明細書において提供される開示を使用する当業者は、その他の量子コンピューティング構造またはシステムが本開示の範囲から逸脱することなく使用されてもよいことを理解するであろう。たとえば、量子ハードウェアのサンプルは、本開示の例示的な態様によって、量子コンピューティングシステム100(たとえば、量子ハードウェア102)および/または任意のその他の好適な量子コンピューティングシステムの挙動をシミュレーションするように構成されてもよい。 FIG. 1 shows an exemplary quantum computing system 100. As shown in FIG. Exemplary system 100 is a system of systems on one or more classical or quantum computing devices at one or more locations in which the systems, components, and techniques described below may be implemented. An example. A person skilled in the art using the disclosure provided herein will understand that other quantum computing structures or systems may be used without departing from the scope of the present disclosure. For example, a sample of quantum hardware may be used to simulate the behavior of quantum computing system 100 (eg, quantum hardware 102) and/or any other suitable quantum computing system, according to exemplary aspects of this disclosure. may be configured to
システム100は、1つまたは複数の古典的プロセッサ104とデータ通信する量子ハードウェア102を含む。量子ハードウェア102は、量子計算を行うためのコンポーネントを含む。たとえば、量子ハードウェア102は、量子システム110、制御デバイス112、および読出しデバイス114(たとえば、読出し共振器)を含む。量子システム110は、キュービットのレジスタなどの1つまたは複数の多準位量子サブシステム(multi-level quantum subsystem)を含んでもよい。一部の実装において、多準位量子サブシステムは、たとえば磁束キュービット、電荷キュービット、トランズモンキュービット、gmonキュービットなどの超伝導キュービットを含んでもよい。 System 100 includes quantum hardware 102 in data communication with one or more classical processors 104 . Quantum hardware 102 includes components for performing quantum computations. For example, quantum hardware 102 includes quantum system 110, control device 112, and readout device 114 (eg, a readout resonator). Quantum system 110 may include one or more multi-level quantum subsystems, such as qubit registers. In some implementations, the multi-level quantum subsystem may include superconducting qubits, such as flux qubits, charge qubits, transmon qubits, gmon qubits, and the like.
システム100が利用する多準位量子サブシステムの種類は、様々であってよい。たとえば、場合によっては、1つまたは複数の超伝導キュービット、たとえばトランズモン、磁束、gmon、xmon、またはその他のキュービットに取り付けられた1つまたは複数の読出しデバイス114を含むことが都合がよい場合がある。その他の場合、イオントラップ、フォトニックデバイス(photonic device)、または超伝導空洞(この状態がキュービットを必要とせずに準備される可能性がある)が使用されてよい。多準位量子サブシステムの実現のさらなる例は、fluxmonキュービット、シリコンキュードット、またはリン不純物キュービットを含む。 The types of multi-level quantum subsystems utilized by system 100 may vary. For example, in some cases it is convenient to include one or more readout devices 114 attached to one or more superconducting qubits, such as transmon, flux, gmon, xmon, or other qubits. There is In other cases, ion traps, photonic devices, or superconducting cavities (where this state may be prepared without the need for qubits) may be used. Further examples of realizations of multilevel quantum subsystems include fluxmon qubits, silicon qudots, or phosphorus impurity qubits.
量子回路が構築され、1つまたは複数の制御デバイス112に結合される複数の制御線を介して、量子システム110に含まれるキュービットのレジスタに適用されてよい。キュービットのレジスタに対して動作する例示的な制御デバイス112は、量子論理ゲートまたは量子論理ゲートの回路、たとえばパウリゲート、アダマールゲート、制御NOT(CNOT)ゲート、制御位相ゲート、Tゲート、多キュービット量子ゲート、カプラ量子ゲート(coupler quantum gate)などを実装するために使用されてもよい。1つまたは複数の制御デバイス112は、1つまたは複数のそれぞれの制御パラメータ(たとえば、1つまたは複数の物理的な制御パラメータ)を通じて量子システム110に対して動作するように構成されてよい。たとえば、一部の実装において、多準位量子サブシステムは、超伝導キュービットであってよく、制御デバイス112は、キュービットの周波数を調整するための磁場を生成するために制御線に制御パルスを提供するように構成されてよい。 A quantum circuit may be constructed and applied to the registers of qubits included in the quantum system 110 via multiple control lines coupled to one or more control devices 112 . Exemplary control devices 112 operating on registers of qubits include quantum logic gates or circuits of quantum logic gates, such as Pauli gates, Hadamard gates, controlled NOT (CNOT) gates, controlled phase gates, T gates, multi-qubits. It may be used to implement quantum gates, coupler quantum gates, and the like. One or more control devices 112 may be configured to operate on quantum system 110 through one or more respective control parameters (eg, one or more physical control parameters). For example, in some implementations, the multilevel quantum subsystem may be a superconducting qubit, and the control device 112 applies control pulses to control lines to generate magnetic fields for tuning the frequency of the qubit. may be configured to provide
量子ハードウェア102は、読出しデバイス114(たとえば、読出し共振器)をさらに含んでよい。測定デバイスによって取得された測定結果108が、処理および解析のために古典的プロセッサ104に提供されてよい。一部の実装において、量子ハードウェア102は、量子回路を含んでよく、制御デバイス112および読出しデバイス114は、量子ハードウェア102に含まれる配線を介して送信される物理的な制御パラメータ(たとえば、マイクロ波パルス)を通じて量子システム102に対して動作する1つまたは複数の量子論理ゲートを実施してよい。制御デバイスのさらなる例は、DAC(デジタルアナログコンバータ)が信号を生成する任意波形発生器を含む。 Quantum hardware 102 may further include a readout device 114 (eg, a readout resonator). Measurement results 108 obtained by the measurement device may be provided to the classical processor 104 for processing and analysis. In some implementations, quantum hardware 102 may include quantum circuitry, and control device 112 and readout device 114 may be controlled by physical control parameters (e.g., One or more quantum logic gates that operate on the quantum system 102 through microwave pulses) may be implemented. Further examples of control devices include arbitrary waveform generators in which DACs (digital to analog converters) generate signals.
読出しデバイス114は、量子システム110に対して量子測定を実行し、測定結果108を古典的プロセッサ104に送信するように構成されてよい。さらに、量子ハードウェア102は、古典的プロセッサ104から物理的な制御キュービットパラメータ値106を指定するデータを受信するように構成されてよい。量子ハードウェア102は、受信された物理的な制御キュービットパラメータ値106を使用して、量子システム110に対する制御デバイス112および読出しデバイス114のアクションを更新してよい。たとえば、量子ハードウェア102は、制御デバイス112に含まれる1つまたは複数のDACの電圧強度を表す新しい値を指定するデータを受信してよく、それに応じて量子システム110に対するDACのアクションを更新してよい。古典的プロセッサ104は、たとえばパラメータ106の初期セットを指定するデータを量子ハードウェア102に送信することによって、量子システム110を初期量子状態に初期化するように構成されてよい。 Readout device 114 may be configured to perform quantum measurements on quantum system 110 and transmit measurement results 108 to classical processor 104 . Further, quantum hardware 102 may be configured to receive data specifying physical control qubit parameter values 106 from classical processor 104 . Quantum hardware 102 may use received physical control qubit parameter values 106 to update control device 112 and readout device 114 actions for quantum system 110 . For example, the quantum hardware 102 may receive data specifying new values representing the voltage strengths of one or more DACs included in the control device 112 and update the DAC's actions for the quantum system 110 accordingly. you can Classical processor 104 may be configured to initialize quantum system 110 to an initial quantum state, eg, by sending data specifying an initial set of parameters 106 to quantum hardware 102 .
読出しデバイス114は、キュービットのような量子システムの要素の|0〉および|1〉状態に関するインピーダンスの差を利用して、要素(たとえば、キュービット)の状態を測定することができる。たとえば、読出し共振器の共振周波数は、キュービットの非線形性が原因で、キュービットが状態|0〉または状態|1〉であるときに異なる値を持ってもよい。したがって、読出しデバイス114から反射されたマイクロ波パルスは、キュービットの状態に依存する振幅および位相シフトを運ぶ。一部の実装においては、パーセルフィルタ(Purcell filter)が、キュービットの周波数でのマイクロ波の伝播を妨げるために読出しデバイス114と併せて使用されてもよい。 The readout device 114 can use the difference in impedance for the |0> and |1> states of an element of a quantum system, such as a qubit, to measure the state of the element (eg, qubit). For example, the resonant frequency of the readout resonator may have different values when the qubit is in state |0> or state |1> due to qubit nonlinearities. Thus, microwave pulses reflected from readout device 114 carry amplitude and phase shifts that depend on the state of the qubits. In some implementations, a Purcell filter may be used in conjunction with readout device 114 to block microwave propagation at qubit frequencies.
図2は、本開示の例示的な実施形態による例示的な量子ハードウェアサンプル生成モデルシステム200のブロック図を示す。たとえば、量子ハードウェア生成モデルシステム200は、量子ハードウェアサンプル生成モデル202を含んでもよい。量子ハードウェアサンプル生成モデル202は、本開示の例示的な態様により、量子ハードウェアのサンプルを生成するためにサンプリングされてもよい。一部の実装において、量子ハードウェアサンプル生成モデル202は、コンピュータ可読データとして1つまたは複数のコンピュータ可読メモリデバイスに記憶されてもよい。 FIG. 2 shows a block diagram of an exemplary quantum hardware sample generation model system 200 according to an exemplary embodiment of this disclosure. For example, quantum hardware generative model system 200 may include quantum hardware sample generative model 202 . Quantum hardware sample generation model 202 may be sampled to generate quantum hardware samples according to exemplary aspects of this disclosure. In some implementations, the quantum hardware sample generation model 202 may be stored as computer readable data in one or more computer readable memory devices.
量子ハードウェアサンプル生成モデル202は、1つまたは複数の量子ハードウェアのパラメータの分布210を含んでもよい。量子ハードウェアのパラメータの分布210の各々は、量子ハードウェアのパラメータの統計的分布をモデリングしてもよい。たとえば、量子ハードウェアのパラメータの分布210は、量子ハードウェアの製作、製造、動作などの間のパラメータのばらつきを表す分布をモデリングしてもよい。量子ハードウェアのパラメータの分布210は、(たとえば、複数の物理的な量子ハードウェアから)実験によって測定され、および/もしくは設計され、ならびに/または本開示の例示的な態様によって任意のその他の好適な方法で決定されてもよい。たとえば、一部の実施形態において、1つまたは複数の量子ハードウェアのパラメータの分布210は、1つまたは複数の実験によって測定された量子ハードウェアのパラメータの分布を含んでもよい。追加的および/または代替的に、一部の実施形態において、1つまたは複数の量子ハードウェアのパラメータの分布は、1つまたは複数の設計された量子ハードウェアのパラメータの分布を含んでもよい。 The quantum hardware sample generation model 202 may include a distribution 210 of one or more quantum hardware parameters. Each of the quantum hardware parameter distributions 210 may model a statistical distribution of the quantum hardware parameters. For example, quantum hardware parameter distributions 210 may model distributions that represent variations in parameters during fabrication, manufacturing, operation, etc. of quantum hardware. Quantum hardware parameter distribution 210 is experimentally measured and/or designed (e.g., from a plurality of physical quantum hardware) and/or any other suitable parameters according to exemplary aspects of the present disclosure. may be determined in any manner. For example, in some embodiments, one or more quantum hardware parameter distributions 210 may include one or more experimentally measured quantum hardware parameter distributions. Additionally and/or alternatively, in some embodiments, the one or more quantum hardware parameter distributions may comprise one or more engineered quantum hardware parameter distributions.
一部の実施形態において、量子ハードウェアのパラメータの分布210は、1つもしくは複数の回路パラメータ、1つもしくは複数の電気パラメータ、1つもしくは複数の製作パラメータ、または1つもしくは複数の欠陥パラメータのうちの少なくとも1つであってもよいかあるいはそれらを含んでもよい。量子ハードウェアのパラメータの分布は、一部の実装において、キュービットの分布、キュービットの回路の分布、キュービットの緩和の分布、またはバックグラウンド損失(background loss)の分布のうちの少なくとも1つを含んでもよい。一部の実装において、1つまたは複数の量子ハードウェアのパラメータの分布は、キャパシタンス(たとえば、キュービットの自己キャパシタンス)、接合の抵抗(たとえば、ジョセフソン接合の抵抗)、キュービットの非調和性、キュービット制御相互インダクタンス分布、最大周波数、読出し共振器の周波数、ジョセフソン接合の非対称性、2準位系(TLS)のTLS数密度、TLSの周波数、TLSのコヒーレンス、TLSのキュービットデカップリング、キュービットの品質、キュービット制御相互インダクタンスプライム分布、駆動インピーダンス、共振器の内部品質、共振器のカップリング品質、共振器-キュービットカップリング効率、帯域通過フィルタの周波数、帯域通過フィルタの品質、トランズモンの周波数、T1スペクトル、単一のキュービットの周波数、またはキュービットグリッドの周波数のうちの少なくとも1つを含んでもよい。一部の実装において、量子ハードウェアサンプル生成モデル202は、量子ハードウェアのパラメータの分布210上の結合確率分布であってもよいかまたはそれを含んでもよい。 In some embodiments, the quantum hardware parameter distribution 210 is a distribution of one or more circuit parameters, one or more electrical parameters, one or more fabrication parameters, or one or more defect parameters. may be or include at least one of The quantum hardware parameter distribution is, in some implementations, at least one of a qubit distribution, a qubit circuit distribution, a qubit relaxation distribution, or a background loss distribution. may include In some implementations, the distribution of one or more parameters of the quantum hardware may be capacitance (e.g., qubit self-capacitance), junction resistance (e.g., Josephson junction resistance), qubit anharmonicity , qubit-controlled mutual inductance distribution, maximum frequency, readout resonator frequency, Josephson junction asymmetry, TLS number density in two-level system (TLS), TLS frequency, TLS coherence, TLS qubit decoupling , qubit quality, qubit-controlled mutual inductance prime distribution, drive impedance, resonator internal quality, resonator coupling quality, resonator-qubit coupling efficiency, bandpass filter frequency, bandpass filter quality , transmon frequencies, T1 spectra, single qubit frequencies, or qubit grid frequencies. In some implementations, the quantum hardware sample generation model 202 may be or include a joint probability distribution over the distribution 210 of the parameters of the quantum hardware.
一部の実装において、量子ハードウェアのパラメータの分布210は、たとえば回路パラメータ、製作パラメータ、TLSなどの量子ハードウェアのいくつかのパラメータに対応する1つまたは複数の数を返す「単純な分布(simple distribution)」であることが可能である。たとえば、図2Bは、例示的な量子ハードウェアのパラメータの分布212を含む量子ハードウェアサンプル生成システム200の拡大図を示す。たとえば、例示的な量子ハードウェアのパラメータの分布212は、複数の量子ハードウェアインスタンスに関するジョセフソン接合の抵抗の分布の1つの例であってもよい。例示的な分布212は、パラメータの分布のサンプル214を生成するためにサンプリングされてもよい。分布のサンプルは、量子ハードウェアサンプル生成モデル202を通じて(たとえば、少なくとも中間分布220を通じてなど、統計的ネットワークによって)伝播されてもよい。たとえば、例示的な量子ハードウェアのパラメータの分布212の例示的なジョセフソン接合の抵抗の分布が、パラメータの分布のサンプル214内の抵抗値を生成するためにサンプリングされてもよい。パラメータの分布のサンプル214内の抵抗値は、量子ハードウェアサンプル生成モデル202を通じて少なくともパラメータの分布のサンプル214を伝播させることによって生成される例示的な量子ハードウェアのサンプルなどの例示的な量子ハードウェアのサンプルに対するジョセフソン接合の抵抗を示してもよい。 In some implementations, the distribution of quantum hardware parameters 210 is a "simple distribution ( simple distribution)”. For example, FIG. 2B shows an enlarged view of quantum hardware sample generation system 200 including distribution 212 of exemplary quantum hardware parameters. For example, exemplary quantum hardware parameter distribution 212 may be one example of a Josephson junction resistance distribution for a plurality of quantum hardware instances. The exemplary distribution 212 may be sampled to generate a sample 214 of parameter distributions. A sample of the distribution may be propagated through the quantum hardware sample generation model 202 (eg, by a statistical network, such as through at least the intermediate distribution 220). For example, the exemplary Josephson junction resistance distribution of the exemplary quantum hardware parameter distribution 212 may be sampled to generate resistance values in the parameter distribution samples 214 . The resistance values in the parameter distribution samples 214 are represented by exemplary quantum hardware, such as exemplary quantum hardware samples generated by propagating at least the parameter distribution samples 214 through the quantum hardware sample generation model 202 . It may indicate the resistance of the Josephson junction to a sample of wear.
一部の実施形態において、量子ハードウェアサンプル生成モデル202内の依存関係(たとえば、量子ハードウェアのパラメータの依存関係)は、手動で実装されてもよい。たとえば、量子ハードウェアサンプル生成モデル202内の依存関係は、量子ハードウェア、物理学の規則などの理解に基づいて確立されてもよい。さらに、未知の依存関係を有する量子ハードウェアのパラメータの分布210は、独立していると仮定されてもよい。たとえば、一部の実施形態において、量子ハードウェアのパラメータの依存関係は、未知の依存関係を有する量子ハードウェアのパラメータの分布210の間の1つもしくは複数の条件付き独立関係、および既知の依存関係に基づいて量子ハードウェアのパラメータの分布210を関連付ける1つもしくは複数の条件付き依存関係を含んでもよい。このようにして、量子ハードウェアサンプル生成モデル202は、量子ハードウェアのパラメータの分布210のベイジアンネットワークなどの統計的ネットワークを定義することができる。追加的および/または代替的に、一部の実装においては(たとえば、十分な利用可能なトレーニングデータが存在する場合は)、ニューラルネットワークの使用などの機械学習されたモデリング技術が、量子ハードウェアサンプル生成モデル202内の量子ハードウェアのパラメータの依存関係に関する洞察を生成するおよび/またはそれ以外の方法で提供するために採用されてもよい。たとえば、統計的ネットワークのパラメータおよび/または依存関係は、機械学習されたモデリングおよび/またはトレーニング技術の適用によって学習されてもよい。 In some embodiments, dependencies within the quantum hardware sample generation model 202 (eg, quantum hardware parameter dependencies) may be manually implemented. For example, dependencies within the quantum hardware sample generation model 202 may be established based on an understanding of quantum hardware, the rules of physics, and the like. Furthermore, the distributions 210 of quantum hardware parameters with unknown dependencies may be assumed to be independent. For example, in some embodiments, the quantum hardware parameter dependencies include one or more conditional independence relationships between the quantum hardware parameter distributions 210 with unknown dependencies and known dependencies. It may include one or more conditional dependencies that relate distributions 210 of quantum hardware parameters based on the relationship. In this way, the quantum hardware sample generation model 202 can define a statistical network, such as a Bayesian network, of the distribution 210 of quantum hardware parameters. Additionally and/or alternatively, in some implementations (e.g., when there is sufficient training data available), machine-learned modeling techniques, such as the use of neural networks, can be implemented on a quantum hardware sample. It may be employed to generate and/or otherwise provide insight into the parameter dependencies of the quantum hardware within the generative model 202 . For example, parameters and/or dependencies of a statistical network may be learned by applying machine-learned modeling and/or training techniques.
一部の実施形態において、量子ハードウェアサンプル生成モデル202は、機械学習された量子ハードウェアサンプル生成モデルを形成してもよい。たとえば、量子ハードウェアサンプル生成モデル202内の依存関係(たとえば、量子ハードウェアのパラメータの依存関係)が、機械学習されたモデルによって学習されてもよい。たとえば、依存関係は、機械学習された量子ハードウェアサンプル生成モデルをトレーニングすることに少なくとも部分的に基づいて学習されてもよい。さらに、統計的ネットワークが、機械学習されたニューラルネットワークであることが可能である。1つの例として、機械学習されたモデル(たとえば、たとえば畳み込みニューラルネットワーク、再帰的ニューラルネットワークなどのニューラルネットワーク)は、既存の量子ハードウェアからのパラメータの分布および/または関係を含むトレーニングデータを用いてトレーニングされてもよい。ニューラルネットワークは、推論時に量子ハードウェアのアーキテクチャの仕様、パラメータなどを提供されることに応じて、量子ハードウェアサンプル生成モデル202を生成することを学習することができる。 In some embodiments, quantum hardware sample generation model 202 may form a machine-learned quantum hardware sample generation model. For example, dependencies within the quantum hardware sample generation model 202 (eg, dependencies of quantum hardware parameters) may be learned by a machine learned model. For example, dependencies may be learned based at least in part on training a machine-learned quantum hardware sampling model. Additionally, the statistical network can be a machine-learned neural network. As one example, a machine-learned model (e.g., a neural network, such as a convolutional neural network, a recursive neural network, etc.) uses training data containing parameter distributions and/or relationships from existing quantum hardware. may be trained. The neural network can learn to generate a quantum hardware sample generation model 202 in response to being provided architectural specifications, parameters, etc. of the quantum hardware during inference.
さらに、量子ハードウェアサンプル生成モデル202は、1つまたは複数の中間分布220を含んでもよい。中間分布220は、量子ハードウェアのパラメータの分布210よりも複雑になることがある。たとえば、中間分布220は、1つもしくは複数の量子ハードウェアのパラメータの分布210(および/または1つもしくは複数のその他の中間分布220)からのサンプルを、1つまたは複数の統計的ネットワークを介するなど、統計的に一貫した方法で組み合わせることができる。中間分布220は、場合によっては、パラメータの分布210よりも複雑なオブジェクトを返すことができる、いわゆる「一般化分布(generalized distribution)」であることが可能である。 Additionally, quantum hardware sample generation model 202 may include one or more intermediate distributions 220 . The intermediate distribution 220 can be more complex than the quantum hardware parameter distribution 210 . For example, the intermediate distribution 220 may pass samples from one or more quantum hardware parameter distributions 210 (and/or one or more other intermediate distributions 220) through one or more statistical networks. , etc., can be combined in a statistically consistent manner. The intermediate distribution 220 can possibly be a so-called “generalized distribution” that can return a more complex object than the parameter distribution 210 .
たとえば、図2Cは、例示的な中間分布222を含む量子ハードウェアサンプル生成システム200の拡大図を示す。例示的な中間分布222は、例示的なT1緩和スペクトル分布である。T1緩和は、キュービットに関する重要な性能指標になることがある。例示的な中間分布222は、中間分布のサンプル224を生成するためにサンプリングされてもよい。たとえば、中間分布のサンプル224は、1つのキュービットに関するT1緩和スペクトル対キュービットの周波数(たとえば、重要な動作パラメータ)のサンプルを含む。関連する基礎をなすパラメータの分布のサンプル(たとえば、量子ハードウェアのパラメータの分布210からのサンプル)は、たとえばキュービット回路パラメータ、製作パラメータ、および/またはTLS欠陥パラメータを含んでもよい。 For example, FIG. 2C shows an enlarged view of quantum hardware sample generation system 200 including exemplary median distribution 222. As shown in FIG. Exemplary intermediate distribution 222 is an exemplary T1 relaxation spectral distribution. T1 relaxation can be an important performance metric for qubits. The exemplary median distribution 222 may be sampled to generate a sample of median distributions 224 . For example, intermediate distribution samples 224 include samples of the T1 relaxation spectrum for one qubit versus the qubit's frequency (eg, the key operating parameter). Associated underlying parameter distribution samples (eg, samples from quantum hardware parameter distribution 210) may include, for example, qubit circuit parameters, fabrication parameters, and/or TLS defect parameters.
さらに、量子ハードウェアサンプル生成モデル202は、1つまたは複数の量子ハードウェアのコンポーネントの分布230を含んでもよい。量子ハードウェアのコンポーネントの分布230は、中間分布220よりも複雑になることがある。たとえば、量子ハードウェアのコンポーネントの分布230は、1つもしくは複数の量子ハードウェアのパラメータの分布210、1つもしくは複数の中間分布220、および/または1つもしくは複数のその他の量子ハードウェアのコンポーネントの分布230からのサンプルを、1つまたは複数の統計的ネットワークを介するなど、統計的に一貫した方法で組み合わせることができる。量子ハードウェアのコンポーネントの分布230によって表されるような量子ハードウェアのコンポーネントは、たとえばキュービット、読出し共振器、キュービット間カプラ(interqubit coupler)、および/または量子プロセッサなどの量子ハードウェアのその他の好適なコンピューティング要素などの量子ハードウェアのまとまったコンポーネントであってもよい。 Further, the quantum hardware sample generation model 202 may include a distribution 230 of one or more quantum hardware components. Quantum hardware component distributions 230 can be more complex than intermediate distributions 220 . For example, the quantum hardware component distribution 230 may be one or more quantum hardware parameter distributions 210, one or more intermediate distributions 220, and/or one or more other quantum hardware components. 230 can be combined in a statistically consistent manner, such as through one or more statistical networks. Quantum hardware components, such as represented by quantum hardware component distribution 230, may include, for example, qubits, readout resonators, interqubit couplers, and/or other components of quantum hardware such as quantum processors. It may also be a cohesive component of quantum hardware, such as a suitable computing element for .
たとえば、図2Dは、例示的な量子ハードウェアのコンポーネントの分布232を含む量子ハードウェアサンプル生成モデル202の拡大図を示す。サンプリングされるとき、量子ハードウェアのコンポーネントの分布230(たとえば、例示的な量子ハードウェアのコンポーネントの分布232)は、コンポーネントのサンプル234などのコンポーネントのサンプルを生成してもよい。コンポーネントのサンプル234は、例示的な量子ハードウェアのコンポーネントの分布232によるそれぞれのコンポーネントの性能が推定されてもよいデータを含む。1つの例として、(たとえば、キュービットに関して)コンポーネントのサンプル234は、T1緩和スペクトル、T2位相緩和スペクトル、および/またはその他の好適なデータであってよいかまたはそれを含んでよい。 For example, FIG. 2D shows an enlarged view of quantum hardware sample generation model 202 including distribution 232 of exemplary quantum hardware components. When sampled, quantum hardware component distribution 230 (eg, exemplary quantum hardware component distribution 232 ) may generate component samples, such as component samples 234 . The component sample 234 includes data from which the performance of each component according to the exemplary quantum hardware component distribution 232 may be estimated. As one example, the component samples 234 (eg, for qubits) may be or include T1 relaxation spectra, T2 phase relaxation spectra, and/or other suitable data.
さらに、量子ハードウェアサンプル生成モデル202は、量子ハードウェアの分布240を含んでもよい。1つの例として、量子ハードウェアの分布240は、量子ハードウェアサンプル生成モデル202の最終出力を表してもよい。量子ハードウェアの分布240は、本開示の例示的な態様により、量子ハードウェアのサンプル204を生成するためにサンプリングされてもよい。たとえば、一部の実施形態において、(たとえば、量子ハードウェアのパラメータの分布210、中間分布220、量子ハードウェアのコンポーネント230などを含む)量子ハードウェアの分布240は、事前サンプリングによってサンプリングされてもよい。たとえば、事前サンプリングは、基礎をなすパラメータの分布(たとえば、210、230、230など)をサンプリングすることによって量子ハードウェアの分布240から量子ハードウェアのサンプル204を生成する、ならびに/または量子ハードウェアサンプル生成モデル202の統計的ネットワークを特徴付ける中間ネットワークおよび/もしくは確率的関係を通じてサンプルを伝播させるエンドツーエンドの手順を含んでもよい。 Additionally, the quantum hardware sample generation model 202 may include a distribution 240 of quantum hardware. As one example, quantum hardware distribution 240 may represent the final output of quantum hardware sample generation model 202 . Quantum hardware distribution 240 may be sampled to generate quantum hardware samples 204 according to exemplary aspects of this disclosure. For example, in some embodiments, the quantum hardware distribution 240 (eg, including the quantum hardware parameter distribution 210, the intermediate distribution 220, the quantum hardware component 230, etc.) may be sampled by pre-sampling. good. For example, pre-sampling generates the quantum hardware samples 204 from the quantum hardware distribution 240 by sampling an underlying distribution of parameters (eg, 210, 230, 230, etc.) and/or the quantum hardware An end-to-end procedure for propagating samples through intermediate networks and/or probabilistic relationships that characterize the statistical network of the sample generation model 202 may be included.
量子ハードウェアの分布240(たとえば、プロセッサの分布)は、量子ハードウェアのサンプルの性能を推定するのに必要なデータを生成するために、量子ハードウェアのアーキテクチャのパラメータ245と組み合わされてもよい。たとえば、量子ハードウェアのアーキテクチャのパラメータ245は、たとえばプロセッサのジオメトリ、キュービットの種類、およびその他の好適なアーキテクチャ情報などの決まった非確率的な量であってもよいかまたはそれを含んでもよい。単一のサンプルは、サンプル内の各コンポーネントに関してコンポーネントの分布230からのサンプルを組み合わせることができる。 Quantum hardware distribution 240 (eg, processor distribution) may be combined with quantum hardware architectural parameters 245 to generate the data necessary to estimate the performance of a sample of quantum hardware. . For example, quantum hardware architectural parameters 245 may be or include fixed non-probabilistic quantities such as, for example, processor geometry, qubit types, and other suitable architectural information. . A single sample can combine samples from the distribution of components 230 for each component in the sample.
たとえば、図2Eは、量子ハードウェアサンプル生成モデル202の拡大図を示す。図2Eは、例示的なプロセッサの分布242および例示的な量子ハードウェアのサンプル244を示す。さらに、図2Eは、例示的な量子ハードウェアのアーキテクチャのパラメータ246を示す。例示的なプロセッサの分布242は、量子ハードウェアのアーキテクチャのパラメータ246に関して例示的な量子プロセッサのサンプル(たとえば、サンプル244)を生成するためにサンプリングされてもよい。図2Eに示された例は、最近傍カップリング(nearest neighbor coupling)および/または周波数調整可能なトランズモン特性を有する(たとえば、5x5構成で配列された25個のキュービットを有する)5x5プロセッサのためのアーキテクチャのパラメータ246を含む。したがって、たとえば例示的なプロセッサの分布242からのサンプル(たとえば、サンプル244)は、5x5 T1緩和スペクトルおよび5x5位相緩和スペクトル、ならびに指定された量子プロセッサに関するその他の指定された関連情報を含むことになる。 For example, FIG. 2E shows an expanded view of the quantum hardware sample generation model 202. As shown in FIG. FIG. 2E shows an exemplary processor distribution 242 and an exemplary quantum hardware sample 244 . Additionally, FIG. 2E illustrates exemplary quantum hardware architecture parameters 246 . The distribution 242 of exemplary processors may be sampled to generate a sample of exemplary quantum processors (eg, samples 244) with respect to parameters 246 of the architecture of the quantum hardware. The example shown in FIG. 2E is for a 5x5 processor with nearest neighbor coupling and/or frequency-tunable transmon properties (eg, with 25 qubits arranged in a 5x5 configuration). architecture parameters 246. Thus, for example, a sample (e.g., sample 244) from exemplary processor distribution 242 would include a 5x5 T1 relaxation spectrum and a 5x5 phase relaxation spectrum, as well as other specified relevant information about the specified quantum processor. .
統計的な量子ハードウェアの分布240からサンプリングされた量子ハードウェアのサンプル204は、オプティマイザ206に提供されてもよい。オプティマイザ206は、量子ハードウェアのサンプルに関する出力分布208(たとえば、ゲートの周波数などの動作パラメータ)を提供するように構成されてもよい。オプティマイザ206は、オプティマイザのパラメータ207(たとえば、オプティマイザ206の動作の制約を示すパラメータ)に関して動作可能である。たとえば、オプティマイザ206は、(たとえば、コンピューティングシステムによって実装される)最適化アルゴリズムを使用して、量子ハードウェアのサンプルの性能を最適化する1つまたは複数の動作パラメータを(たとえば、出力分布208の一部として)決定することができる。1つの例として、動作パラメータは、(たとえば、1つまたは複数のキュービットにおける)ゲートの周波数などの動作周波数を含んでもよい。別の例として、1つまたは複数のシミュレーションされた性能測定値は、たとえばたとえば量子論理ゲートエラー、(たとえば、量子テストアルゴリズムに基づく)アルゴリズムエラー、(たとえば、量子テストアルゴリズムの完了までの)実行時間などの性能指標の測定値であってもよい。 Samples of quantum hardware 204 sampled from statistical quantum hardware distribution 240 may be provided to optimizer 206 . The optimizer 206 may be configured to provide an output distribution 208 (eg, operating parameters such as gate frequencies) for a sample of quantum hardware. The optimizer 206 is operable with respect to optimizer parameters 207 (eg, parameters that constrain the operation of the optimizer 206). For example, optimizer 206 uses an optimization algorithm (eg, implemented by a computing system) to determine one or more operating parameters (eg, output distribution 208 ) that optimize the performance of a sample of quantum hardware. (as part of the As one example, operating parameters may include operating frequencies, such as frequencies of gates (eg, in one or more qubits). As another example, one or more of the simulated performance measurements may include, e.g., quantum logic gate errors, algorithm errors (e.g., based on a quantum test algorithm), execution times (e.g., to completion of a quantum test algorithm), It may be a measured value of a performance index such as
図3は、本開示の例示的な実施形態による例示的な量子ハードウェアサンプル生成モデルを採用する量子ハードウェアの設計のための例示的なシステム300の流れ図を示す。システム300は、量子ハードウェアサンプル生成モデル310を含んでもよい。たとえば、設計パラメータの分布312(たとえば、量子ハードウェアのパラメータの分布)が、量子ハードウェアのサンプル314を生成するために量子ハードウェアサンプル生成モデル310に提供されてもよい。システム300は、オプティマイザ320をさらに含んでもよい。オプティマイザ320は、量子ハードウェアのサンプル314を受信し、量子テストアルゴリズム323に関して動作パラメータ322(たとえば、動作周波数)を決定することができる。それから、オプティマイザ320は、シミュレーションされた性能測定値324(たとえば、ゲートエラー、アルゴリズムエラーなど)を生成することができる。シミュレーションされた性能測定値324は、設計パラメータの分布312を調整するためにフィードバックループ330を通じて伝播されてもよい。たとえば、システム300は、シミュレーションされた性能測定324を最適化する(たとえば、そのエラーを削減する/最小化する)ために設計パラメータの分布を調整するための制御アクションを(たとえば、ユーザからおよび/または自動的に)実施することができる。 FIG. 3 shows a flow diagram of an example system 300 for designing quantum hardware employing an example quantum hardware sample generation model according to an example embodiment of the present disclosure. System 300 may include quantum hardware sample generation model 310 . For example, a design parameter distribution 312 (eg, a quantum hardware parameter distribution) may be provided to the quantum hardware sample generation model 310 to generate quantum hardware samples 314 . System 300 may further include optimizer 320 . Optimizer 320 can receive a sample of quantum hardware 314 and determine operating parameters 322 (eg, operating frequency) for quantum test algorithm 323 . Optimizer 320 can then generate simulated performance measures 324 (eg, gate errors, algorithm errors, etc.). Simulated performance measurements 324 may be propagated through feedback loop 330 to adjust design parameter distribution 312 . For example, the system 300 may take control actions (e.g., from a user and/or or automatically).
図4は、本開示の例示的な実施形態による例示的な量子ハードウェアサンプル生成モデルを採用する量子ハードウェアの設計のための例示的なシステム400の流れ図を示す。システム400は、量子ハードウェアサンプル生成モデル410を含んでもよい。たとえば、設計パラメータの分布412(たとえば、量子ハードウェアのパラメータの分布)が、量子ハードウェアのサンプル414を生成するために量子ハードウェアサンプル生成モデル410に提供されてもよい。 FIG. 4 shows a flow diagram of an example system 400 for designing quantum hardware employing an example quantum hardware sample generation model according to an example embodiment of the present disclosure. System 400 may include quantum hardware sample generation model 410 . For example, a design parameter distribution 412 (eg, a quantum hardware parameter distribution) may be provided to the quantum hardware sample generation model 410 to generate quantum hardware samples 414 .
システム400は、オプティマイザ416をさらに含んでもよい。オプティマイザ416は、量子ハードウェアのサンプル414を受信し、量子テストアルゴリズム415に関して動作パラメータ(たとえば、動作周波数)を決定してもよい。それから、オプティマイザ416は、シミュレーションされた性能測定値418(たとえば、アルゴリズムエラー)を決定することができる。1つの例として、シミュレーションされた性能測定値418を決定することは、量子ハードウェアのサンプル414を(たとえば、オプティマイザ416の一部としての)量子回路シミュレータシステムに提供することと、量子回路シミュレータシステムから、1つまたは複数のテストアルゴリズム415に関するシミュレーションされた性能測定値418(たとえば、アルゴリズムエラー)を取得することとを含んでもよい。たとえば、量子回路シミュレータシステムは、1つまたは複数のテストアルゴリズム415に関して量子ハードウェアのサンプル414の性能をシミュレーションするように構成されてもよい。テストアルゴリズム415は、量子ハードウェアのサンプルの性能をテストするために使用される量子アルゴリズムであることが可能である。たとえば、テストアルゴリズム415は、たとえばパウリゲート(たとえば、パウリXゲート、パウリYゲート、および/もしくはパウリZゲート)、アダマールゲート、位相ゲート、Tゲート、制御NOT(CNOT)ゲート、制御Z(CZ)ゲート、スワップゲート、トフォリゲート、ならびに/または任意のその他の好適な量子ゲート、あるいはその組合せなどの1つまたは複数の量子ゲート動作のシーケンスを含んでもよい。シミュレーションされた実行エラー(simulated performance error)418は、量子ハードウェアのサンプル414がテストアルゴリズム415をどれだけ正確に実行することができるかを表すアルゴリズムエラーを含んでもよい。たとえば、し損なったまたは間違った動作、誤りなどが、アルゴリズムエラーを増大させることがある。 System 400 may further include optimizer 416 . Optimizer 416 may receive a sample of quantum hardware 414 and determine operating parameters (eg, operating frequency) for quantum test algorithm 415 . Optimizer 416 can then determine simulated performance measures 418 (eg, algorithmic errors). As one example, determining the simulated performance measurements 418 includes providing a sample of quantum hardware 414 to a quantum circuit simulator system (eg, as part of the optimizer 416); obtaining simulated performance measurements 418 (eg, algorithm errors) for one or more test algorithms 415 from. For example, a quantum circuit simulator system may be configured to simulate the performance of a sample of quantum hardware 414 with respect to one or more test algorithms 415 . Test algorithm 415 can be a quantum algorithm used to test the performance of a sample of quantum hardware. For example, test algorithm 415 may include, for example, Pauli gates (eg, Pauli X gates, Pauli Y gates, and/or Pauli Z gates), Hadamard gates, phase gates, T gates, controlled NOT (CNOT) gates, controlled Z (CZ) gates. , swap gates, tofoli gates, and/or any other suitable quantum gates, or a combination thereof. A simulated performance error 418 may include an algorithmic error that represents how accurately a sample of quantum hardware 414 is able to execute the test algorithm 415 . For example, missed or incorrect actions, errors, etc. can increase algorithmic error.
さらに、システム400は、1つまたは複数のシミュレーションされた性能測定値418と1つまたは複数の目標性能測定値422との間の1つまたは複数の性能距離420を取得することができる。1つの例として、性能距離420は、対応する目標性能測定値422からシミュレーションされた性能測定値418(たとえば、動作パラメータ、アルゴリズムエラーなどの測定値)を減算することによって取得されてもよい。たとえば、場合によっては、シミュレーションされた性能測定値418および/または目標性能測定値422は、算術減算を実行されてもよい単純な数であってもよいかまたはそれを含んでもよい。追加的および/または代替的に、場合によっては、シミュレーションされた性能測定値418および/または目標性能測定値422は、分布であってもよいかまたはそれを含んでもよい。分布を含む場合、性能距離420は、たとえば交差エントロピまたはKLダイバージェンスなどの統計的な距離の指標を計算するなど、好適な類似のプロセスによって取得されてもよい。性能距離420は、概して、量子ハードウェアのサンプルが設計要件などの目標仕様にどれだけ近い性能を発揮するかを示してもよい。一部の実施形態において、目標性能測定値422は、分布および/または閾値を含んでもよい。 Additionally, system 400 can obtain one or more performance distances 420 between one or more simulated performance measurements 418 and one or more target performance measurements 422 . As one example, performance metrics 420 may be obtained by subtracting simulated performance measurements 418 (eg, measurements of operating parameters, algorithm errors, etc.) from corresponding target performance measurements 422 . For example, in some cases, simulated performance measure 418 and/or target performance measure 422 may be or include simple numbers to which arithmetic subtraction may be performed. Additionally and/or alternatively, in some cases, simulated performance measures 418 and/or target performance measures 422 may be or include distributions. If distributions are involved, the performance metric 420 may be obtained by any suitable similar process, such as calculating a statistical distance measure such as cross-entropy or KL-divergence. Performance metric 420 may generally indicate how close a sample of quantum hardware performs to a target specification, such as a design requirement. In some embodiments, target performance measures 422 may include distributions and/or thresholds.
性能距離420に基づいて、システム400は、1つまたは複数の量子ハードウェアのパラメータの分布412のうちの少なくとも1つを調整するための制御アクション424を実施することができる。たとえば、一部の実施形態において、制御アクション424は、量子ハードウェアのパラメータの分布412の設計を最適化するためのフィードバックループの一部として、量子ハードウェアのパラメータの分布412を調整するために実施されてもよい。1つの例として、制御アクション424は、1つまたは複数の量子ハードウェアのパラメータの分布412のうちの少なくとも1つに対するインクリメント、デクリメント、シフト、伸張、置換、その分布の種類の変更、または任意のその他の好適な制御アクションの実行を含んでもよい。 Based on the performance metric 420, the system 400 can implement control actions 424 to adjust at least one of the distributions 412 of the one or more quantum hardware parameters. For example, in some embodiments, the control action 424 is used to adjust the quantum hardware parameter distribution 412 as part of a feedback loop for optimizing the design of the quantum hardware parameter distribution 412. may be implemented. As an example, the control action 424 may include incrementing, decrementing, shifting, stretching, permuting, changing the type of distribution of at least one of the one or more quantum hardware parameter distributions 412, or any Execution of other suitable control actions may also be included.
制御アクション424は、性能距離420を小さくするおよび/または最終的に最小化するために実施されてもよい。たとえば、一部の実施形態においては、量子ハードウェアサンプル生成モデル410からのシミュレーションされた性能測定値418、性能距離420、および/またはその他のデータが、ユーザに提供されてもよい。ユーザは、量子ハードウェアのパラメータの分布412を調整するために実装される制御アクション424をこのコンピューティングシステムに提供することができる。たとえば、ユーザは、量子ハードウェアのパラメータの分布412に対して、たとえばインクリメント、デクリメント、シフト、伸張、置換、分布の種類の変更などの動作を手動で実行することができる。追加的および/または代替的に、制御アクション424は、1つまたは複数の性能距離420から伝播されてもよい。たとえば、制御アクション424は、フィードバックループによって(たとえば、勾配降下によるなど勾配によって)決定されてもよい。 Control actions 424 may be performed to reduce and/or ultimately minimize performance metric 420 . For example, in some embodiments, simulated performance measurements 418, performance metrics 420, and/or other data from the quantum hardware sample generation model 410 may be provided to the user. A user can provide the computing system with control actions 424 that are implemented to adjust the distribution 412 of the parameters of the quantum hardware. For example, a user can manually perform operations on the quantum hardware parameter distribution 412, such as, for example, incrementing, decrementing, shifting, stretching, permuting, changing the type of distribution, and the like. Additionally and/or alternatively, control actions 424 may be propagated from one or more performance metrics 420 . For example, control action 424 may be determined by a feedback loop (eg, by gradient, such as by gradient descent).
図5は、本開示の例示的な実施形態による、量子ハードウェアの性能をシミュレーションするための例示的なコンピュータによって実施される方法500の流れ図を示す。図5は説明および検討を目的として特定の順序で実行されるステップを示すが、本開示の方法は、特に示される順序または配列に限定されない。方法500の様々なステップは、本開示の範囲から逸脱することなく様々な方法で省略され、再配列され、組み合わされ、および/または適合されてもよい。 FIG. 5 shows a flow diagram of an exemplary computer-implemented method 500 for simulating the performance of quantum hardware, according to an exemplary embodiment of the present disclosure. Although FIG. 5 shows steps performed in a particular order for purposes of illustration and discussion, the methods of the present disclosure are not limited to the order or arrangement specifically shown. Various steps of method 500 may be omitted, rearranged, combined, and/or adapted in various ways without departing from the scope of the present disclosure.
502において、方法500は、量子ハードウェアのサンプルを生成するように構成される量子ハードウェアサンプル生成モデルに(たとえば、1つまたは複数のコンピューティングデバイスを含むコンピューティングシステムによって)アクセスすることを含んでもよい。量子ハードウェアサンプル生成モデルは、1つまたは複数の量子ハードウェアのパラメータの分布を含んでもよい。たとえば、量子ハードウェアサンプル生成モデルは、図2から図4を参照して検討された量子ハードウェアサンプル生成モデルのいずれかであってもよいかまたはそれを含んでもよい。 At 502, method 500 includes accessing (eg, by a computing system including one or more computing devices) a quantum hardware sample generation model configured to generate samples of quantum hardware. It's okay. A quantum hardware sample generation model may include a distribution of one or more quantum hardware parameters. For example, the quantum hardware sample generation model may be or include any of the quantum hardware sample generation models discussed with reference to FIGS. 2-4.
1つの例として、量子ハードウェアサンプル生成モデルは、1つもしくは複数の量子ハードウェアのパラメータの分布および/または1つもしくは複数の量子ハードウェアのパラメータの分布の間の関係を定義する1つもしくは複数の量子ハードウェアのパラメータの依存関係を含んでもよい。1つまたは複数の量子ハードウェアのパラメータの分布および1つまたは複数の量子ハードウェアのパラメータの依存関係は、サンプリングされるときに、量子ハードウェアの挙動をモデリングするように構成される量子ハードウェアのサンプルを生成するハードウェアの分布を含む統計的(たとえば、ベイジアン)ネットワークを定義することができる。1つの例として、量子ハードウェアのパラメータの分布は、統計的ネットワークのノードを形成することができ、および/または量子ハードウェアのパラメータの依存関係は、統計的ネットワークのエッジを形成することができる。ノード(たとえば、量子ハードウェアのパラメータの分布)の一部またはすべてからのサンプルは、エッジ(たとえば、量子ハードウェアのパラメータの依存関係)によって統計的ネットワークを通じて、サンプリングされたときに量子ハードウェアのサンプルを生成した最終出力(たとえば、ハードウェアの分布)に伝播されてもよい。量子ハードウェアのパラメータの分布および/または量子ハードウェアのパラメータの依存関係は、実験による測定、量子ハードウェア(たとえば、物理学の規則)の事前の理解、および/または理論的なデータ(たとえば、望ましい設計パラメータ、仮定など)によって形成されてもよい。 As an example, a quantum hardware sample generation model defines a relationship between distributions of parameters of one or more quantum hardware and/or distributions of parameters of one or more quantum hardware. It may also include parameter dependencies of multiple quantum hardware. Quantum hardware configured to model the behavior of the quantum hardware when the distribution of the one or more quantum hardware parameters and the one or more dependencies of the one or more quantum hardware parameters are sampled A statistical (eg, Bayesian) network can be defined that includes hardware distributions that generate samples of . As one example, distributions of quantum hardware parameters can form nodes of a statistical network and/or dependencies of quantum hardware parameters can form edges of a statistical network. . Samples from some or all of the nodes (e.g., the distribution of the parameters of the quantum hardware) are sampled through the statistical network by edges (e.g., the dependencies of the parameters of the quantum hardware) of the quantum hardware when sampled. It may be propagated to the final output (eg, hardware distribution) that generated the samples. The distribution of the parameters of the quantum hardware and/or the dependencies of the parameters of the quantum hardware can be derived from experimental measurements, prior understanding of the quantum hardware (e.g. rules of physics), and/or theoretical data (e.g. desired design parameters, assumptions, etc.).
504において、方法500は、量子ハードウェアサンプル生成モデルから量子ハードウェアのサンプルを(たとえば、このコンピューティングシステムによって)サンプリングすることを含んでもよい。たとえば、一部の実施形態において、量子ハードウェアサンプル生成モデルから量子ハードウェアのサンプルをサンプリングすることは、1つまたは複数の量子ハードウェアのパラメータの分布の各々から1つまたは複数のパラメータのサンプルをサンプリングすることと、1つまたは複数の量子ハードウェアのパラメータの依存関係に基づく統計的ネットワークを通じて1つまたは複数のパラメータのサンプルを伝播させることとを含んでもよい。たとえば、一部の実施形態において、1つまたは複数のパラメータのサンプルをサンプリングすることは、1つまたは複数のパラメータのサンプルを事前サンプリングすることを含んでもよい。一例として、複数の量子ハードウェアのパラメータの分布の各々が、(たとえば、事前サンプリングによって)サンプリングされ、それらの依存関係に基づく統計的(たとえば、ベイジアン)ネットワークを通じて伝播されてもよい。たとえば、統計的ネットワークの最終出力(たとえば、ハードウェア分布ノード)が、量子ハードウェアのサンプルを生成するために(たとえば、事前サンプリングによって)サンプリングされてもよい。 At 504, the method 500 may include sampling (eg, by the computing system) quantum hardware samples from the quantum hardware sample generation model. For example, in some embodiments, sampling quantum hardware samples from a quantum hardware sampling model includes sampling one or more parameters from each of one or more quantum hardware parameter distributions. and propagating the one or more parameter samples through a statistical network based on the parameter dependencies of the one or more quantum hardware. For example, in some embodiments, sampling samples of one or more parameters may include pre-sampling samples of one or more parameters. As an example, each of the distributions of multiple quantum hardware parameters may be sampled (eg, by pre-sampling) and propagated through a statistical (eg, Bayesian) network based on their dependencies. For example, the final output of the statistical network (eg, hardware distribution node) may be sampled (eg, by pre-sampling) to generate samples for the quantum hardware.
506において、コンピュータによって実施される方法500は、量子ハードウェアのサンプルから1つまたは複数のシミュレーションされた性能測定値を(たとえば、このコンピューティングシステムによって)取得することを含んでもよい。たとえば、一部の実施形態において、1つまたは複数のシミュレーションされた性能測定値を取得することは、(たとえば、このコンピューティングシステムによって実施される)最適化アルゴリズムを使用して、1つまたは複数の動作パラメータを決定することと、1つまたは複数の動作パラメータに少なくとも部分的に基づいて1つまたは複数のシミュレーションされた性能測定値を(たとえば、このコンピューティングシステムによって)シミュレーションすることとを含んでもよい。1つの例として、動作パラメータは、(たとえば、1つまたは複数のキュービットにおける)ゲートの周波数などの動作周波数を含んでもよい。別の例として、1つまたは複数のシミュレーションされた性能測定値は、たとえばたとえばアルゴリズムエラー、実効時間などの性能指標の測定値であることが可能である。 At 506, the computer-implemented method 500 may include obtaining one or more simulated performance measurements from the sample of quantum hardware (eg, by the computing system). For example, in some embodiments, obtaining one or more simulated performance measurements includes using an optimization algorithm (e.g., performed by this computing system) to perform one or more and simulating (e.g., by the computing system) one or more simulated performance measurements based at least in part on the one or more operating parameters. It's okay. As one example, operating parameters may include operating frequencies, such as frequencies of gates (eg, in one or more qubits). As another example, one or more of the simulated performance measures can be measurements of performance metrics such as algorithm error, execution time, and the like.
1つの例として、1つまたは複数のシミュレーションされた性能測定値を取得することは、量子ハードウェアのサンプルを量子回路シミュレータシステムに(たとえば、このコンピューティングシステムによって)提供することと、このコンピューティングシステムによって、および量子回路シミュレータシステムから、1つまたは複数のテストアルゴリズムに関する1つまたは複数のアルゴリズムエラーを取得することとを含んでもよい。たとえば、量子回路シミュレータシステムは、1つまたは複数のテストアルゴリズムに関して量子ハードウェアのサンプルの性能をシミュレーションするように構成されてもよい。テストアルゴリズムは、量子ハードウェアのサンプルの性能をテストするために使用される量子アルゴリズムであることが可能である。たとえば、テストアルゴリズムは、たとえばパウリゲート(たとえば、パウリXゲート、パウリYゲート、および/もしくはパウリZゲート)、アダマールゲート、位相ゲート、Tゲート、制御NOT(CNOT)ゲート、制御Z(CZ)ゲート、スワップゲート、トフォリゲート、ならびに/または任意のその他の好適な量子ゲート、あるいはその組合せなどの1つまたは複数の量子ゲート動作のシーケンスを含んでもよい。アルゴリズムエラーは、量子ハードウェアのサンプルがテストアルゴリズムをどれだけ正確に実行することができるかを表してもよい。たとえば、し損なったまたは間違った動作、誤りなどが、アルゴリズムエラーを増大させることがある。アルゴリズムエラーは、シミュレーションされた性能測定値の一例であってもよい。 As one example, obtaining one or more simulated performance measurements includes providing samples of quantum hardware to a quantum circuit simulator system (e.g., by this computing system); obtaining one or more algorithm errors for the one or more test algorithms by the system and from the quantum circuit simulator system. For example, a quantum circuit simulator system may be configured to simulate the performance of a sample of quantum hardware with respect to one or more test algorithms. A test algorithm can be a quantum algorithm used to test the performance of a sample of quantum hardware. For example, test algorithms may include, for example, Pauli gates (e.g., Pauli X gates, Pauli Y gates, and/or Pauli Z gates), Hadamard gates, phase gates, T gates, controlled NOT (CNOT) gates, controlled Z (CZ) gates, It may include a sequence of one or more quantum gate operations such as swap gates, tofoli gates, and/or any other suitable quantum gates, or combinations thereof. Algorithm error may represent how accurately a sample of quantum hardware can execute a test algorithm. For example, missed or incorrect actions, errors, etc. can increase algorithmic error. Algorithm error may be an example of a simulated performance metric.
508において、コンピュータによって実施される方法500は、1つまたは複数のシミュレーションされた性能測定値と1つまたは複数の目標性能測定値との間の1つまたは複数の性能距離を(たとえば、このコンピューティングシステムによって)取得することを含んでもよい。1つの例として、性能距離は、対応する目標性能測定値からシミュレーションされた性能測定値(たとえば、動作パラメータ、アルゴリズムエラーなどの測定値)を減算することによって取得されてもよい。性能距離は、概して、量子ハードウェアのサンプルが設計要件などの目標仕様にどれだけ近い性能を発揮するかを示してもよい。 At 508, the computer-implemented method 500 determines one or more performance distances between the one or more simulated performance measures and the one or more target performance measures (e.g., the computer-implemented by a tracking system). As one example, performance metrics may be obtained by subtracting simulated performance measures (eg, measurements of operating parameters, algorithm errors, etc.) from corresponding target performance measures. A performance metric may generally indicate how close a sample of quantum hardware performs to a target specification, such as a design requirement.
510において、コンピュータによって実施される方法500は、1つまたは複数の性能距離に少なくとも部分的に基づいて1つまたは複数の量子ハードウェアのパラメータの分布のうちの少なくとも1つを調整するための制御アクションを(たとえば、このコンピューティングシステムによって)実施することを含んでもよい。たとえば、一部の実施形態において、制御アクションは、量子ハードウェアのパラメータの分布の設計を最適化するためのフィードバックループの一部として、量子ハードウェアのパラメータの分布を調整することができる。1つの例として、制御アクションは、1つまたは複数の量子ハードウェアのパラメータの分布のうちの少なくとも1つに対するインクリメント、デクリメント、シフト、伸張、置換、その分布の種類の変更、または任意のその他の好適な制御アクションの実行を含んでもよい。 At 510, the computer-implemented method 500 controls for adjusting at least one of the distributions of the one or more quantum hardware parameters based at least in part on the one or more performance metrics. It may include performing an action (eg, by the computing system). For example, in some embodiments, the control action may adjust the quantum hardware parameter distribution as part of a feedback loop to optimize the design of the quantum hardware parameter distribution. As an example, a control action may be incrementing, decrementing, shifting, stretching, permuting, changing the type of distribution of at least one of the distributions of one or more quantum hardware parameters, or any other It may also include performing suitable control actions.
制御アクションは、性能距離を小さくするおよび/または最終的に最小化するために実施されてもよい。たとえば、一部の実施形態においては、量子ハードウェアサンプル生成モデルからのシミュレーションされた性能測定値、性能距離、および/またはその他のデータが、ユーザに提供されてもよい。ユーザは、量子ハードウェアのパラメータの分布を調整するために実装される制御アクションをこのコンピューティングシステムに提供することができる。たとえば、ユーザは、量子ハードウェアのパラメータの分布に対して、たとえばインクリメント、デクリメント、シフト、伸張、置換、分布の種類の変更などの動作を手動で実行することができる。追加的および/または代替的に、制御アクションは、1つまたは複数の性能距離から伝播されてもよい。たとえば、制御アクションは、フィードバックループによって(たとえば、勾配降下によるなど勾配によって)決定されてもよい。 Control actions may be implemented to reduce and/or ultimately minimize the performance metric. For example, in some embodiments simulated performance measurements, performance metrics, and/or other data from the quantum hardware sample generation model may be provided to the user. A user can provide control actions to this computing system that are implemented to adjust the distribution of the parameters of the quantum hardware. For example, a user can manually perform operations such as increment, decrement, shift, stretch, permute, change the type of distribution, etc. on the distribution of parameters of the quantum hardware. Additionally and/or alternatively, control actions may be propagated from one or more performance metrics. For example, the control action may be determined by a feedback loop (eg, by gradient, such as by gradient descent).
図6は、本開示の例示的な実施形態による、量子ハードウェアの性能をシミュレーションする量子ハードウェアのサンプルを生成するための例示的なコンピュータによって実施される方法600の流れ図を示す。図6は説明および検討を目的として特定の順序で実行されるステップを示すが、本開示の方法は、特に示される順序または配列に限定されない。方法600の様々なステップは、本開示の範囲から逸脱することなく様々な方法で省略され、再配列され、組み合わされ、および/または適合されてもよい。 FIG. 6 shows a flow diagram of an exemplary computer-implemented method 600 for generating a sample of quantum hardware that simulates the performance of quantum hardware, according to an exemplary embodiment of the present disclosure. Although FIG. 6 shows steps performed in a particular order for purposes of illustration and discussion, the methods of the present disclosure are not limited to the order or arrangement specifically shown. Various steps of method 600 may be omitted, rearranged, combined, and/or adapted in various ways without departing from the scope of the present disclosure.
602において、コンピュータによって実施される方法600は、量子ハードウェアのサンプルを生成するように構成される量子ハードウェアサンプル生成モデルに(たとえば、1つまたは複数のコンピューティングデバイスを含むコンピューティングシステムによって)アクセスすることを含んでもよい。量子ハードウェアサンプル生成モデルは、1つまたは複数の量子ハードウェアのパラメータの分布および1つまたは複数の量子ハードウェアのパラメータの依存関係の統計的ネットワークを含んでもよい。たとえば、量子ハードウェアサンプル生成モデルは、図2から図4を参照して検討された量子ハードウェアサンプル生成モデルのいずれかであってもよいかまたはそれを含んでもよい。 At 602, the computer-implemented method 600 directs a quantum hardware sample generation model configured to generate samples of quantum hardware (eg, by a computing system including one or more computing devices). may include accessing. The quantum hardware sample generation model may include a statistical network of distributions of one or more quantum hardware parameters and dependencies of the one or more quantum hardware parameters. For example, the quantum hardware sample generation model may be or include any of the quantum hardware sample generation models discussed with reference to FIGS. 2-4.
1つの例として、量子ハードウェアサンプル生成モデルは、1つもしくは複数の量子ハードウェアのパラメータの分布および/または1つもしくは複数の量子ハードウェアのパラメータの分布の間の関係を定義する1つもしくは複数の量子ハードウェアのパラメータの依存関係を含んでもよい。1つまたは複数の量子ハードウェアのパラメータの分布および1つまたは複数の量子ハードウェアのパラメータの依存関係は、サンプリングされるときに、量子ハードウェアの挙動をモデリングするように構成される量子ハードウェアのサンプルを生成するハードウェアの分布を含む統計的(たとえば、ベイジアン)ネットワークを定義することができる。1つの例として、量子ハードウェアのパラメータの分布は、統計的ネットワークのノードを形成することができ、および/または量子ハードウェアのパラメータの依存関係は、統計的ネットワークのエッジを形成することができる。ノード(たとえば、量子ハードウェアのパラメータの分布)の一部またはすべてからのサンプルは、エッジ(たとえば、量子ハードウェアのパラメータの依存関係)によって統計的ネットワークを通じて、サンプリングされたときに量子ハードウェアのサンプルを生成した最終出力(たとえば、ハードウェアの分布)に伝播されてもよい。量子ハードウェアのパラメータの分布および/または量子ハードウェアのパラメータの依存関係は、実験による測定、量子ハードウェア(たとえば、物理学の規則)の事前の理解によって、および/または理論的なデータ(たとえば、望ましい設計パラメータ、仮定など)から形成されてもよい。量子ハードウェアのサンプルは、1つまたは複数の動作パラメータに関する量子ハードウェアの複数の性能指標の挙動をモデリングする複数の数学的モデル(たとえば、パラメータ、関数など)を含んでもよい。 As one example, the quantum hardware sample generation model defines a relationship between distributions of parameters of one or more quantum hardware and/or distributions of parameters of one or more quantum hardware. It may also include parameter dependencies of multiple quantum hardware. Quantum hardware configured to model the behavior of the quantum hardware when the distribution of the parameters of the one or more quantum hardware and the dependencies of the parameters of the one or more quantum hardware are sampled A statistical (e.g., Bayesian) network can be defined that includes hardware distributions that generate samples of . As one example, distributions of quantum hardware parameters can form nodes of a statistical network and/or dependencies of quantum hardware parameters can form edges of a statistical network. . Samples from some or all of the nodes (e.g., the distribution of the parameters of the quantum hardware) are sampled through the statistical network by an edge (e.g., the dependencies of the parameters of the quantum hardware), the It may be propagated to the final output (eg, hardware distribution) that generated the samples. The distribution of the parameters of the quantum hardware and/or the dependencies of the parameters of the quantum hardware can be determined by experimental measurements, by prior understanding of the quantum hardware (e.g. rules of physics) and/or by theoretical data (e.g. , desired design parameters, assumptions, etc.). A sample of quantum hardware may include multiple mathematical models (eg, parameters, functions, etc.) that model the behavior of multiple performance metrics of the quantum hardware with respect to one or more operating parameters.
604において、コンピュータによって実施される方法600は、量子ハードウェアのサンプルを取得するために量子ハードウェアサンプル生成モデルを(たとえば、このコンピューティングシステムによって)サンプリングすることを含んでもよい。量子ハードウェアサンプル生成モデルをサンプリングすることは、1つまたは複数の量子ハードウェアのパラメータの分布の各々から1つまたは複数のパラメータのサンプルをサンプリングすることと、1つまたは複数の量子ハードウェアのパラメータの依存関係に基づく統計的ネットワークを通じて1つまたは複数のパラメータのサンプルを伝播させることとを含んでもよい。たとえば、パラメータのサンプルは、量子ハードウェアのパラメータの分布からサンプリングされた単一のエンティティ、インスタンスなどであってもよいかまたはそれらを含んでもよい。1つの例として、量子ハードウェアのパラメータの分布が抵抗の分布である場合、パラメータのサンプルは抵抗値であることが可能である。 At 604, the computer-implemented method 600 may include sampling the quantum hardware sample generation model (eg, by the computing system) to obtain samples of the quantum hardware. Sampling the quantum hardware sample generation model includes sampling one or more parameter samples from each of the parameter distributions of the one or more quantum hardware; Propagating samples of one or more parameters through a statistical network based on parameter dependencies. For example, a sample of parameters may be or include a single entity, instance, etc. sampled from a distribution of parameters of the quantum hardware. As an example, if the quantum hardware parameter distribution is a resistance distribution, then the parameter samples can be resistance values.
図7Aは、本開示の例示的な実施形態による、量子ハードウェアサンプルモデル生成を実行する例示的なコンピューティングシステム700のブロック図を示す。システム700は、ネットワーク780を介して通信可能なように結合されるユーザコンピューティングデバイス702、サーバコンピューティングシステム730、およびトレーニングコンピューティングシステム750を含む。 FIG. 7A shows a block diagram of an exemplary computing system 700 that performs quantum hardware sample model generation, according to an exemplary embodiment of this disclosure. System 700 includes user computing device 702 , server computing system 730 , and training computing system 750 communicatively coupled via network 780 .
ユーザコンピューティングデバイス702は、たとえばパーソナルコンピューティングデバイス(たとえば、ラップトップもしくはデスクトップ)、モバイルコンピューティングデバイス(たとえば、スマートフォンもしくはタブレット)、ゲームコンソールもしくはコントローラ、ウェアラブルコンピューティングデバイス、組込みコンピューティングデバイス、または任意のその他の種類のコンピューティングデバイスなどの任意の種類のコンピューティングデバイスであることが可能である。 User computing device 702 can be, for example, a personal computing device (eg, laptop or desktop), mobile computing device (eg, smartphone or tablet), game console or controller, wearable computing device, embedded computing device, or any It can be any type of computing device, such as any other type of computing device.
ユーザコンピューティングデバイス702は、1つまたは複数のプロセッサ712およびメモリ714を含む。1つまたは複数のプロセッサ712は、任意の好適な処理デバイス(たとえば、プロセッサコア、マイクロプロセッサ、ASIC、FPGA、コントローラ、マイクロコントローラなど)であることが可能であり、1つのプロセッサまたは動作可能なように接続される複数のプロセッサであることが可能である。メモリ714は、RAM、ROM、EEPROM、EPROM、フラッシュメモリデバイス、磁気ディスクなど、およびその組合せなどの1つまたは複数の非一時的コンピュータ可読ストレージ媒体を含んでもよい。メモリ714は、データ716と、ユーザコンピューティングデバイス702に動作を実行させるためにプロセッサ712によって実行される命令718とを記憶することができる。 User computing device 702 includes one or more processors 712 and memory 714 . The one or more processors 712 can be any suitable processing device (eg, processor core, microprocessor, ASIC, FPGA, controller, microcontroller, etc.) and can be a single processor or operable. can be multiple processors connected to the Memory 714 may include one or more non-transitory computer-readable storage media such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof. Memory 714 can store data 716 and instructions 718 that are executed by processor 712 to cause user computing device 702 to perform operations.
一部の実装において、ユーザコンピューティングデバイス702は、1つまたは複数の量子ハードウェアサンプルモデル生成モデル720を記憶してもよいかまたは含んでもよい。たとえば、量子ハードウェアサンプルモデル生成モデル720は、ニューラルネットワーク(たとえば、深層ニューラルネットワーク)、または非線形のモデルおよび/もしくは線形モデルを含むその他の種類の機械学習されたモデルなどの様々な機械学習されたモデルであってもよいかまたはそうでなければそれらを含んでもよい。ニューラルネットワークは、順伝播型ニューラルネットワーク、リカレントニューラルネットワーク(たとえば、長期短期記憶リカレントニューラルネットワーク)、畳み込みニューラルネットワーク、またはその他の形態のニューラルネットワークを含んでもよい。 In some implementations, user computing device 702 may store or include one or more quantum hardware sample model generative models 720 . For example, the quantum hardware sample model generation model 720 can be various machine-learned models such as neural networks (e.g., deep neural networks) or other types of machine-learned models, including non-linear and/or linear models. may be models or otherwise contain them. Neural networks may include forward propagating neural networks, recurrent neural networks (eg, long short-term memory recurrent neural networks), convolutional neural networks, or other forms of neural networks.
一部の実装において、1つまたは複数の量子ハードウェアサンプルモデル生成モデル720は、ネットワーク780を介してサーバコンピューティングシステム730から受信され、ユーザコンピューティングデバイスのメモリ714に記憶され、それから1つまたは複数のプロセッサ712によって使用されるかまたはそうでなければ実施されることが可能である。一部の実装において、ユーザコンピューティングデバイス702は、(たとえば、量子ハードウェアサンプルモデル生成モデルの複数のインスタンスにわたって並列的な量子ハードウェアサンプルモデル生成を実行するために)単一の量子ハードウェアサンプルモデル生成モデル720の複数の並列的なインスタンスを実施することができる。 In some implementations, one or more quantum hardware sample model generation models 720 are received from the server computing system 730 via the network 780, stored in the user computing device's memory 714, and then one or more It can be used or otherwise implemented by multiple processors 712 . In some implementations, the user computing device 702 uses a single quantum hardware sample (e.g., to perform parallel quantum hardware sample model generation across multiple instances of the quantum hardware sample model generation model). Multiple parallel instances of model generation model 720 can be implemented.
追加的または代替的に、1つまたは複数の量子ハードウェアサンプルモデル生成モデル740が、クライアント-サーバの関係によりユーザコンピューティングデバイス702と通信するサーバコンピューティングシステム730に含まれるかまたはそうでなければそれによって記憶され、実施されることが可能である。たとえば、量子ハードウェアサンプルモデル生成モデル740は、ウェブサービス(たとえば、量子ハードウェアサンプルモデル生成サービス)の一部分としてサーバコンピューティングシステム740によって実施されてもよい。したがって、1つもしくは複数のモデル720が、ユーザコンピューティングデバイス702において記憶され、実施されることが可能であり、および/または1つもしくは複数のモデル740が、サーバコンピューティングシステム730において記憶され、実施されることが可能である。 Additionally or alternatively, one or more quantum hardware sample model generative models 740 are included or otherwise included in a server computing system 730 that communicates with the user computing device 702 in a client-server relationship. It can be stored and implemented thereby. For example, quantum hardware sample model generation model 740 may be implemented by server computing system 740 as part of a web service (eg, quantum hardware sample model generation service). Thus, one or more models 720 can be stored and implemented at the user computing device 702 and/or one or more models 740 can be stored at the server computing system 730, can be implemented.
ユーザコンピューティングデバイス702は、ユーザ入力を受け取る1つまたは複数のユーザ入力コンポーネント722も含んでもよい。たとえば、ユーザ入力コンポーネント722は、ユーザ入力オブジェクト(たとえば、指またはスタイラス)のタッチを感知可能であるタッチ感知式コンポーネント(たとえば、タッチ感知式ディスプレイスクリーンまたはタッチパッド)であることが可能である。タッチ感知式コンポーネントは、仮想キーボードを実施するように働いてもよい。その他の例示的なユーザ入力コンポーネントは、マイクロフォン、通常のキーボード、またはユーザがユーザ入力を与えることができるその他の手段を含む。 User computing device 702 may also include one or more user input components 722 for receiving user input. For example, user input component 722 can be a touch-sensitive component (eg, a touch-sensitive display screen or touchpad) capable of sensing touch of a user input object (eg, finger or stylus). A touch-sensitive component may serve to implement a virtual keyboard. Other exemplary user input components include a microphone, conventional keyboard, or other means by which a user can provide user input.
サーバコンピューティングシステム730は、1つまたは複数のプロセッサ732およびメモリ734を含む。1つまたは複数のプロセッサ732は、任意の好適な処理デバイス(たとえば、プロセッサコア、マイクロプロセッサ、ASIC、FPGA、コントローラ、マイクロコントローラなど)であることが可能であり、1つのプロセッサまたは動作可能なように接続される複数のプロセッサであることが可能である。メモリ734は、RAM、ROM、EEPROM、EPROM、フラッシュメモリデバイス、磁気ディスクなど、およびその組合せなどの1つまたは複数の非一時的コンピュータ可読ストレージ媒体を含んでもよい。メモリ734は、データ736と、サーバコンピューティングシステム730に動作を実行させるプロセッサ732によって実行される命令738とを記憶することができる。 Server computing system 730 includes one or more processors 732 and memory 734 . The one or more processors 732 can be any suitable processing device (eg, processor core, microprocessor, ASIC, FPGA, controller, microcontroller, etc.) and can be a single processor or operable. can be multiple processors connected to the Memory 734 may include one or more non-transitory computer-readable storage media such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof. Memory 734 may store data 736 and instructions 738 executed by processor 732 to cause server computing system 730 to perform operations.
一部の実装において、サーバコンピューティングシステム730は、1つもしくは複数のサーバコンピューティングデバイスを含むか、またはそうでなければ1つもしくは複数のサーバコンピューティングデバイスによって実装される。サーバコンピューティングシステム730が複数のサーバコンピューティングデバイスを含む場合、そのようなサーバコンピューティングデバイスは、逐次コンピューティングアーキテクチャ、並列コンピューティングアーキテクチャ、またはその何らかの組合せによって動作してもよい。 In some implementations, server-computing system 730 includes or is otherwise implemented by one or more server-computing devices. Where server-computing system 730 includes multiple server-computing devices, such server-computing devices may operate according to a sequential computing architecture, a parallel computing architecture, or some combination thereof.
上述のように、サーバコンピューティングシステム730は、1つまたは複数の機械学習された量子ハードウェアサンプルモデル生成モデル740を記憶するかまたはそうでなければ含むことが可能である。たとえば、モデル740は、様々な機械学習されたモデルであることが可能であるか、またはそうでなければ様々な機械学習されたモデルを含むことが可能である。例示的な機械学習されたモデルは、ニューラルネットワークまたはその他の多層非線形モデルを含む。例示的なニューラルネットワークは、順伝播型ニューラルネットワーク、深層ニューラルネットワーク、リカレントニューラルネットワーク、および畳み込みニューラルネットワークを含む。 As noted above, the server computing system 730 may store or otherwise include one or more machine-learned quantum hardware sample model generation models 740 . For example, model 740 can be a variety of machine-learned models or can otherwise include a variety of machine-learned models. Exemplary machine-learned models include neural networks or other multilayer nonlinear models. Exemplary neural networks include forward neural networks, deep neural networks, recurrent neural networks, and convolutional neural networks.
ユーザコンピューティングデバイス702および/またはサーバコンピューティングシステム730は、ネットワーク780を介して通信可能なように結合されるトレーニングコンピューティングシステム750とのインタラクションによってモデル720および/または740をトレーニングすることができる。トレーニングコンピューティングシステム750は、サーバコンピューティングシステム730と別れていることが可能であり、またはサーバコンピューティングシステム730の一部分であることが可能である。 User computing device 702 and/or server computing system 730 can train model 720 and/or 740 through interaction with training computing system 750 that is communicatively coupled via network 780 . Training computing system 750 can be separate from server computing system 730 or can be part of server computing system 730 .
トレーニングコンピューティングシステム750は、1つまたは複数のプロセッサ752およびメモリ754を含む。1つまたは複数のプロセッサ752は、任意の好適な処理デバイス(たとえば、プロセッサコア、マイクロプロセッサ、ASIC、FPGA、コントローラ、マイクロコントローラなど)であることが可能であり、1つのプロセッサまたは動作可能なように接続される複数のプロセッサであることが可能である。メモリ754は、RAM、ROM、EEPROM、EPROM、フラッシュメモリデバイス、磁気ディスクなど、およびその組合せなどの1つまたは複数の非一時的コンピュータ可読ストレージ媒体を含んでもよい。メモリ754は、データ756と、トレーニングコンピューティングシステム750に動作を実行させるプロセッサ752によって実行される命令758とを記憶することができる。一部の実装において、トレーニングコンピューティングシステム750は、1つもしくは複数のサーバコンピューティングデバイスを含むか、またはそうでなければ1つもしくは複数のサーバコンピューティングデバイスによって実装される。 Training Computing System 750 includes one or more processors 752 and memory 754 . The one or more processors 752 can be any suitable processing device (eg, processor core, microprocessor, ASIC, FPGA, controller, microcontroller, etc.) and can be a single processor or operable. can be multiple processors connected to the Memory 754 may include one or more non-transitory computer-readable storage media such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, etc., and combinations thereof. Memory 754 can store data 756 and instructions 758 executed by processor 752 to cause training computing system 750 to perform operations. In some implementations, training computing system 750 includes or is otherwise implemented by one or more server computing devices.
トレーニングコンピューティングシステム750は、たとえば誤差逆伝播法などの様々なトレーニングまたは学習技術を使用してユーザコンピューティングデバイス702および/またはサーバコンピューティングシステム730において記憶された機械学習されたモデル720および/または740をトレーニングするモデルトレーナ760を含んでもよい。たとえば、損失関数が、(たとえば、損失関数の勾配に基づいて)モデルの1つまたは複数のパラメータを更新するためにモデルを通して逆伝播されてもよい。平均二乗誤差、尤度損失、交差エントロピ損失、ヒンジ損失、および/または様々なその他の損失関数などの様々な損失関数が、使用されてもよい。勾配降下法が、多数のトレーニングの反復を介してパラメータを繰り返し更新するために使用されてもよい。 The training computing system 750 trains the machine-learned models 720 and/or stored in the user computing device 702 and/or the server computing system 730 using various training or learning techniques such as backpropagation, for example. A model trainer 760 for training 740 may be included. For example, a loss function may be backpropagated through the model to update one or more parameters of the model (eg, based on the slope of the loss function). Various loss functions such as mean squared error, likelihood loss, cross-entropy loss, hinge loss, and/or various other loss functions may be used. Gradient descent may be used to iteratively update the parameters through multiple training iterations.
一部の実装において、誤差逆伝播法を実行することは、打切り型通時的逆伝播(truncated backpropagation through time)を実行することを含んでもよい。モデルトレーナ760は、トレーニングされているモデルの汎化能力を高めるためにいくつかの汎化技術(たとえば、重み減衰、ドロップアウトなど)を実行することができる。 In some implementations, performing backpropagation may include performing truncated backpropagation through time. Model trainer 760 can perform several generalization techniques (eg, weight decay, dropout, etc.) to increase the generalization ability of the model being trained.
特に、モデルトレーナ760は、トレーニングデータ762のセットに基づいて量子ハードウェアサンプルモデル生成モデル720および/または740をトレーニングすることができる。トレーニングデータ762は、たとえば量子ハードウェアのパラメータの分布、量子ハードウェアのパラメータの依存関係、および/または実際の量子ハードウェアからのその他のサンプリングされた性能指標を含んでもよい。 In particular, model trainer 760 can train quantum hardware sample model generation models 720 and/or 740 based on a set of training data 762 . Training data 762 may include, for example, distributions of quantum hardware parameters, dependencies of quantum hardware parameters, and/or other sampled performance metrics from actual quantum hardware.
一部の実装において、ユーザが同意を与えた場合、トレーニング例は、ユーザコンピューティングデバイス702によって提供されてもよい。したがって、そのような実装において、ユーザコンピューティングデバイス702に提供されるモデル720は、ユーザコンピューティングデバイス702から受信されたユーザに固有のデータに対してトレーニングコンピューティングシステム750によってトレーニングされてもよい。場合によっては、このプロセスは、モデルのパーソナライズと呼ばれることがある。 In some implementations, training examples may be provided by the user computing device 702 if the user has given consent. Accordingly, in such implementations, the model 720 provided to the user computing device 702 may be trained by the training computing system 750 on user-specific data received from the user computing device 702 . In some cases, this process is referred to as model personalization.
モデルトレーナ760は、所望の機能を提供するために利用されるコンピュータ論理を含む。モデルトレーナ760は、ハードウェア、ファームウェア、および/または汎用プロセッサを制御するソフトウェアに実装されてもよい。たとえば、一部の実装において、モデルトレーナ760は、ストレージデバイス上に記憶され、メモリにロードされ、1つまたは複数のプロセッサによって実行されるプログラムファイルを含む。その他の実装において、モデルトレーナ760は、RAM、ハードディスク、または光学式もしくは磁気式媒体などの有形のコンピュータ可読ストレージ媒体に記憶されるコンピュータが実行可能な命令の1つまたは複数のセットを含む。 The model trainer 760 contains computer logic that is utilized to provide the desired functionality. Model trainer 760 may be implemented in hardware, firmware, and/or software controlling a general purpose processor. For example, in some implementations, model trainer 760 includes program files stored on a storage device, loaded into memory, and executed by one or more processors. In other implementations, model trainer 760 includes one or more sets of computer-executable instructions stored on a tangible computer-readable storage medium such as RAM, hard disk, or optical or magnetic media.
ネットワーク780は、ローカルエリアネットワーク(たとえば、イントラネット)、広域ネットワーク(たとえば、インターネット)、またはその何らかの組合せなどの任意の種類の通信ネットワークであることが可能であり、任意の数の有線またはワイヤレスリンクを含むことが可能である。概して、ネットワーク780を介した通信は、多種多様な通信プロトコル(たとえば、TCP/IP、HTTP、SMTP、FTP)、符号化もしくはフォーマット(たとえば、HTML、XML)、および/または保護方式(たとえば、VPN、セキュアHTTP、SSL)を使用して任意の種類の有線および/またはワイヤレス接続を介して運ばれてもよい。 Network 780 can be any type of communication network, such as a local area network (eg, an intranet), a wide area network (eg, the Internet), or some combination thereof, and includes any number of wired or wireless links. can be included. Generally, communications over network 780 may use a wide variety of communication protocols (eg, TCP/IP, HTTP, SMTP, FTP), encodings or formats (eg, HTML, XML), and/or protection schemes (eg, VPN , secure HTTP, SSL) over any kind of wired and/or wireless connection.
本明細書に記載の機械学習されたモデルは、様々なタスク、アプリケーション、および/またはユースケースにおいて使用されてよい。 The machine-learned models described herein may be used in various tasks, applications, and/or use cases.
一部の実装において、本開示の機械学習されたモデルへの入力は、画像データであってもよい。機械学習されたモデルは、出力を生成するために画像データを処理することができる。一例として、機械学習されたモデルは、画像認識出力(たとえば、画像データの認識、画像データの潜在埋込み、画像データの符号化された表現、画像データのハッシュなど)を生成するために画像データを処理することができる。別の例として、機械学習されたモデルは、画像セグメンテーション出力を生成するために画像データを処理することができる。別の例として、機械学習されたモデルは、画像分類出力を生成するために画像データを処理することができる。別の例として、機械学習されたモデルは、画像データ修正出力(たとえば、画像データの変更など)を生成するために画像データを処理することができる。別の例として、機械学習されたモデルは、符号化された画像データ出力(たとえば、画像データの符号化されたおよび/または圧縮された表現など)を生成するために画像データを処理することができる。別の例として、機械学習されたモデルは、アップスケールされた画像データ出力を生成するために画像データを処理することができる。別の例として、機械学習されたモデルは、予測出力を生成するために画像データを処理することができる。 In some implementations, the input to the machine-learned model of the present disclosure may be image data. A machine-learned model can process the image data to generate an output. As an example, machine-learned models use image data to generate image recognition outputs (e.g., recognition of image data, latent embeddings of image data, encoded representations of image data, hashes of image data, etc.). can be processed. As another example, a machine-learned model can process image data to generate an image segmentation output. As another example, a machine-learned model can process image data to generate an image classification output. As another example, a machine-learned model can process image data to generate an image data modification output (eg, changes to the image data, etc.). As another example, a machine-learned model may process image data to produce an encoded image data output (e.g., an encoded and/or compressed representation of the image data). can. As another example, a machine-learned model can process image data to generate an upscaled image data output. As another example, a machine-learned model can process image data to generate a predictive output.
一部の実装において、本開示の機械学習されたモデルへの入力は、テキストまたは自然言語データであってもよい。機械学習されたモデルは、出力を生成するためにテキストまたは自然言語データを処理することができる。一例として、機械学習されたモデルは、言語符号化出力を生成するために自然言語データを処理することができる。別の例として、機械学習されたモデルは、潜在テキスト埋込み出力を生成するためにテキストまたは自然言語データを処理することができる。別の例として、機械学習されたモデルは、翻訳出力を生成するためにテキストまたは自然言語データを処理することができる。別の例として、機械学習されたモデルは、分類出力を生成するためにテキストまたは自然言語データを処理することができる。別の例として、機械学習されたモデルは、テキストセグメンテーション出力を生成するためにテキストまたは自然言語データを処理することができる。別の例として、機械学習されたモデルは、意味的意図(semantic intent)出力を生成するためにテキストまたは自然言語データを処理することができる。別の例として、機械学習されたモデルは、アップスケールされたテキストまたは自然言語出力(たとえば、入力テキストまたは自然言語よりも高品質なテキストまたは自然言語データなど)を生成するためにテキストまたは自然言語データを処理することができる。別の例として、機械学習されたモデルは、予測出力を生成するためにテキストまたは自然言語データを処理することができる。 In some implementations, the input to the machine-learned model of the present disclosure may be text or natural language data. Machine-learned models can process text or natural language data to generate output. As an example, a machine-learned model can process natural language data to produce a language-encoded output. As another example, machine-learned models can process text or natural language data to generate latent text-embedding outputs. As another example, a machine-learned model can process text or natural language data to generate translation output. As another example, a machine-learned model can process text or natural language data to produce a classification output. As another example, a machine-learned model can process text or natural language data to generate a text segmentation output. As another example, machine-learned models can process text or natural language data to generate semantic intent output. As another example, a machine-learned model may use text or natural language data to produce upscaled text or natural language output (e.g., higher quality text or natural language data than the input text or natural language). Data can be processed. As another example, a machine-learned model can process text or natural language data to generate predictive output.
一部の実装において、本開示の機械学習されたモデルへの入力は、スピーチデータであってもよい。機械学習されたモデルは、出力を生成するためにスピーチデータを処理することができる。一例として、機械学習されたモデルは、音声認識出力を生成するためにスピーチデータを処理することができる。別の例として、機械学習されたモデルは、スピーチ翻訳出力を生成するためにスピーチデータを処理することができる。別の例として、機械学習されたモデルは、潜在埋込み出力を生成するためにスピーチデータを処理することができる。別の例として、機械学習されたモデルは、符号化されたスピーチ出力(たとえば、スピーチデータの符号化されたおよび/または圧縮された表現など)を生成するためにスピーチデータを処理することができる。別の例として、機械学習されたモデルは、アップスケールされたスピーチ出力(たとえば、入力スピーチデータよりも高品質なスピーチデータなど)を生成するためにスピーチデータを処理することができる。別の例として、機械学習されたモデルは、テキスト表現出力(たとえば、入力スピーチデータのテキスト表現など)を生成するためにスピーチデータを処理することができる。別の例として、機械学習されたモデルは、予測出力を生成するためにスピーチデータを処理することができる。 In some implementations, the input to the machine-learned model of the present disclosure may be speech data. Machine-learned models can process speech data to generate output. As an example, a machine-learned model can process speech data to generate speech recognition output. As another example, a machine-learned model can process speech data to generate a speech translation output. As another example, a machine-learned model can process speech data to generate potential embedding outputs. As another example, a machine-learned model can process speech data to produce encoded speech output (e.g., encoded and/or compressed representations of the speech data, etc.). . As another example, a machine-learned model can process speech data to produce upscaled speech output (eg, speech data of higher quality than the input speech data). As another example, a machine-learned model can process speech data to produce a textual representation output (eg, a textual representation of the input speech data, etc.). As another example, a machine-learned model can process speech data to generate a predictive output.
一部の実装において、本開示の機械学習されたモデルへの入力は、潜在符号化データ(たとえば、入力の潜在空間表現など)であってもよい。機械学習されたモデルは、出力を生成するために潜在符号化データを処理することができる。一例として、機械学習されたモデルは、認識出力を生成するために潜在符号化データを処理することができる。別の例として、機械学習されたモデルは、再構築出力を生成するために潜在符号化データを処理することができる。別の例として、機械学習されたモデルは、検索出力を生成するために潜在符号化データを処理することができる。別の例として、機械学習されたモデルは、再クラスタリング出力を生成するために潜在符号化データを処理することができる。別の例として、機械学習されたモデルは、予測出力を生成するために潜在符号化データを処理することができる。 In some implementations, inputs to machine-learned models of the present disclosure may be latent encoded data (eg, latent spatial representations of the inputs, etc.). A machine-learned model can process the latent encoded data to generate an output. As an example, a machine-learned model can process latent encoded data to generate recognition output. As another example, a machine-learned model can process latent encoded data to generate a reconstructed output. As another example, a machine-learned model can process latent encoded data to generate search output. As another example, a machine-learned model can process latent encoded data to produce a reclustered output. As another example, a machine-learned model can process latent encoded data to generate a predictive output.
一部の実装において、本開示の機械学習されたモデルへの入力は、統計データであってもよい。機械学習されたモデルは、出力を生成するために統計データを処理することができる。一例として、機械学習されたモデルは、認識出力を生成するために統計データを処理することができる。別の例として、機械学習されたモデルは、予測出力を生成するために統計データを処理することができる。別の例として、機械学習されたモデルは、分類出力を生成するために統計データを処理することができる。別の例として、機械学習されたモデルは、セグメンテーション出力を生成するために統計データを処理することができる。別の例として、機械学習されたモデルは、セグメンテーション出力を生成するために統計データを処理することができる。別の例として、機械学習されたモデルは、視覚化出力を生成するために統計データを処理することができる。別の例として、機械学習されたモデルは、診断出力を生成するために統計データを処理することができる。 In some implementations, inputs to machine-learned models of the present disclosure may be statistical data. Machine-learned models can process statistical data to generate output. As an example, a machine-learned model can process statistical data to generate recognition output. As another example, machine-learned models can process statistical data to generate predictive outputs. As another example, a machine-learned model can process statistical data to generate a classification output. As another example, a machine-learned model can process statistical data to generate a segmentation output. As another example, a machine-learned model can process statistical data to generate a segmentation output. As another example, a machine-learned model can process statistical data to generate a visualization output. As another example, a machine-learned model can process statistical data to generate diagnostic output.
一部の実装において、本開示の機械学習されたモデルへの入力は、センサデータであってもよい。機械学習されたモデルは、出力を生成するためにセンサデータを処理することができる。一例として、機械学習されたモデルは、認識出力を生成するためにセンサデータを処理することができる。別の例として、機械学習されたモデルは、予測出力を生成するためにセンサデータを処理することができる。別の例として、機械学習されたモデルは、分類出力を生成するためにセンサデータを処理することができる。別の例として、機械学習されたモデルは、セグメンテーション出力を生成するためにセンサデータを処理することができる。別の例として、機械学習されたモデルは、セグメンテーション出力を生成するためにセンサデータを処理することができる。別の例として、機械学習されたモデルは、視覚化出力を生成するためにセンサデータを処理することができる。別の例として、機械学習されたモデルは、診断出力を生成するためにセンサデータを処理することができる。別の例として、機械学習されたモデルは、検出出力を生成するためにセンサデータを処理することができる。 In some implementations, the input to the machine-learned model of the present disclosure may be sensor data. Machine-learned models can process sensor data to generate outputs. As an example, a machine-learned model can process sensor data to generate recognition output. As another example, a machine-learned model can process sensor data to generate a predictive output. As another example, a machine-learned model can process sensor data to produce a classification output. As another example, a machine-learned model can process sensor data to generate a segmentation output. As another example, a machine-learned model can process sensor data to generate a segmentation output. As another example, a machine-learned model can process sensor data to generate a visualization output. As another example, a machine-learned model can process sensor data to generate a diagnostic output. As another example, a machine-learned model can process sensor data to generate a detected output.
場合によっては、機械学習されたモデルは、信頼性の高いおよび/もしくは効率的な伝送または記憶のための入力データの符号化(ならびに/または対応する復号)を含むタスクを実行するように構成されてもよい。たとえば、タスクは、音声圧縮タスクである場合がある。入力は、音声データを含む場合があり、出力は、圧縮された音声データを含む場合がある。別の例において、入力は、視覚データ(たとえば、1つまたは複数の画像または動画)を含み、出力は、圧縮された視覚データを含み、タスクは、視覚データの圧縮タスクである。別の例において、タスクは、入力データ(たとえば、入力音声または視覚データ)に関する埋込みを生成することを含む場合がある。 In some cases, the machine-learned model is configured to perform tasks involving encoding (and/or corresponding decoding) of input data for reliable and/or efficient transmission or storage. may For example, the task may be an audio compression task. The input may include audio data and the output may include compressed audio data. In another example, the input includes visual data (eg, one or more images or movies), the output includes compressed visual data, and the task is a visual data compression task. In another example, a task may include generating embeddings for input data (eg, input audio or visual data).
図7Aは、本開示を実施するために使用されてもよい1つの例示的なコンピューティングシステムを示す。その他のコンピューティングシステムも、使用されてもよい。たとえば、一部の実装においては、ユーザコンピューティングデバイス702が、モデルトレーナ760およびトレーニングデータセット762を含んでもよい。そのような実装において、モデル720は、ユーザコンピューティングデバイス702のローカルでトレーニングされかつ使用されることが可能である。そのような実装の一部において、ユーザコンピューティングデバイス702は、ユーザに固有のデータに基づいてモデル720をパーソナライズするためにモデルトレーナ760を実装してもよい。 FIG. 7A shows one exemplary computing system that may be used to implement this disclosure. Other computing systems may also be used. For example, in some implementations user computing device 702 may include model trainer 760 and training data set 762 . In such implementations, model 720 can be trained and used locally on user computing device 702 . In some such implementations, user computing device 702 may implement model trainer 760 to personalize model 720 based on user-specific data.
図7Bは、本開示の例示的な実施形態による、量子ハードウェアサンプルモデル生成を実行する例示的なコンピューティングデバイス10のブロック図を示す。コンピューティングデバイス10は、ユーザコンピューティングデバイスまたはサーバコンピューティングデバイスであることが可能である。 FIG. 7B shows a block diagram of an exemplary computing device 10 performing quantum hardware sample model generation, according to an exemplary embodiment of the present disclosure. Computing device 10 may be a user computing device or a server computing device.
コンピューティングデバイス10は、いくつかのアプリケーション(たとえば、アプリケーション1からN)を含む。各アプリケーションは、独自の機械学習ライブラリおよび機械学習されたモデルを含む。たとえば、各アプリケーションは、機械学習されたモデルを含んでもよい。例示的なアプリケーションは、テキストメッセージングアプリケーション、電子メールアプリケーション、ディクテーションアプリケーション、仮想キーボードアプリケーション、ブラウザアプリケーションなどを含む。 Computing device 10 includes several applications (eg, applications 1 through N). Each application contains its own machine learning library and machine learned models. For example, each application may include a machine-learned model. Exemplary applications include text messaging applications, email applications, dictation applications, virtual keyboard applications, browser applications, and the like.
図7Bに示されるように、各アプリケーションは、たとえば1つもしくは複数のセンサ、コンテキストマネージャ(context manager)、デバイス状態コンポーネント、および/または追加的なコンポーネントなどのコンピューティングデバイスのいくつかのその他のコンポーネントと通信することができる。一部の実装において、各アプリケーションは、API(たとえば、パブリックAPI)を使用して各デバイスのコンポーネントと通信することができる。一部の実装において、各アプリケーションによって使用されるAPIは、そのアプリケーションに固有である。 As shown in FIG. 7B, each application includes several other components of the computing device, such as one or more sensors, a context manager, a device state component, and/or additional components. can communicate with In some implementations, each application may use APIs (eg, public APIs) to communicate with the components of each device. In some implementations, the APIs used by each application are specific to that application.
図7Cは、本開示の例示的な実施形態による、量子ハードウェアサンプルモデル生成を実行する例示的なコンピューティングデバイス50のブロック図を示す。コンピューティングデバイス50は、ユーザコンピューティングデバイスまたはサーバコンピューティングデバイスであることが可能である。 FIG. 7C shows a block diagram of an exemplary computing device 50 performing quantum hardware sample model generation, according to an exemplary embodiment of the present disclosure. Computing device 50 can be a user computing device or a server computing device.
コンピューティングデバイス50は、いくつかのアプリケーション(たとえば、アプリケーション1からN)を含む。各アプリケーションは、中央インテリジェンス層(central intelligence layer)と通信状態にある。例示的なアプリケーションは、テキストメッセージングアプリケーション、電子メールアプリケーション、ディクテーションアプリケーション、仮想キーボードアプリケーション、ブラウザアプリケーションなどを含む。一部の実装において、各アプリケーションは、API(たとえば、すべてのアプリケーションにまたがる共通のAPI)を使用して中央インテリジェンス層(およびそこに記憶されたモデル)と通信してもよい。 Computing device 50 includes several applications (eg, Applications 1 through N). Each application is in communication with a central intelligence layer. Exemplary applications include text messaging applications, email applications, dictation applications, virtual keyboard applications, browser applications, and the like. In some implementations, each application may communicate with the central intelligence layer (and models stored therein) using an API (eg, a common API across all applications).
中央インテリジェンス層は、いくつかの機械学習されたモデルを含む。たとえば、図7Cに示されるように、それぞれの機械学習されたモデル(たとえば、モデル)が、各アプリケーションに提供され、中央インテリジェンス層によって管理されてもよい。その他の実装においては、2つ以上のアプリケーションが、単一の機械学習されたモデルを共有してもよい。たとえば、一部の実装において、中央インテリジェンス層は、アプリケーションのすべてに単一のモデル(たとえば、単一モデル)を提供してもよい。一部の実装において、中央インテリジェンス層は、コンピューティングデバイス50のオペレーティングシステム内に含まれるかまたはそうでなければオペレーティングシステムによって実装される。 The central intelligence layer contains several machine-learned models. For example, as shown in FIG. 7C, respective machine-learned models (eg, models) may be provided to each application and managed by a central intelligence layer. In other implementations, two or more applications may share a single machine-learned model. For example, in some implementations the central intelligence tier may provide a single model (eg, a single model) for all of the applications. In some implementations, the central intelligence layer is included within or otherwise implemented by the operating system of computing device 50 .
中央インテリジェンス層は、中央デバイスデータ層(central device data layer)と通信することができる。中央デバイスデータ層は、コンピューティングデバイス50のためのデータの集中化されたリポジトリであることが可能である。図7Cに示されるように、中央デバイスデータ層は、たとえば1つもしくは複数のセンサ、コンテキストマネージャ、デバイス状態コンポーネント、および/または追加的なコンポーネントなどのコンピューティングデバイスのいくつかのその他のコンポーネントと通信することができる。一部の実装において、中央デバイスデータ層は、API(たとえば、プライベートAPI)を使用して各デバイスのコンポーネントと通信することができる。 A central intelligence layer may communicate with a central device data layer. A central device data layer may be a centralized repository of data for computing devices 50 . As shown in FIG. 7C, the central device data layer communicates with several other components of the computing device, such as one or more sensors, context manager, device state component, and/or additional components. can do. In some implementations, the central device data layer may communicate with each device's components using APIs (eg, private APIs).
本明細書に記載のデジタルの、古典的な、および/または量子の主題の実装ならびにデジタルの機能の動作および量子の動作は、本明細書で開示された構造およびそれらの構造的均等物を含む、デジタル電子回路、好適な量子回路、もしくはより広く、量子計算システムに、有形で実装されたデジタルおよび/もしくは量子コンピュータソフトウェアもしくはファームウェアに、デジタルおよび/もしくは量子コンピュータハードウェアに、またはそれらのうちの1つもしくは複数の組合せに実装されることが可能である。用語「量子コンピューティングシステム」は、量子コンピュータ/コンピューティングシステム、量子情報処理システム、量子暗号システム、または量子シミュレータを含む場合があるがこれらに限定されない。 Digital, classical, and/or quantum subject matter implementations and digital functional operations and quantum operations described herein include the structures disclosed herein and their structural equivalents. , digital electronic circuits, suitable quantum circuits, or more broadly, in quantum computing systems, in tangibly implemented digital and/or quantum computer software or firmware, in digital and/or quantum computer hardware, or among them. It can be implemented in one or more combinations. The term "quantum computing system" may include, but is not limited to, a quantum computer/computing system, a quantum information processing system, a quantum cryptography system, or a quantum simulator.
本明細書に記載のデジタルのおよび/または量子の主題の実装は、1つまたは複数のデジタルおよび/または量子コンピュータプログラム、すなわち、データ処理装置による実行のために、またはデータ処理装置の動作を制御するために有形の非一時的ストレージ媒体上に符号化されたデジタルおよび/または量子コンピュータプログラム命令の1つまたは複数のモジュールとして実装されることが可能である。デジタルおよび/または量子コンピュータストレージ媒体は、機械可読ストレージデバイス、機械可読ストレージ基板、ランダムもしくはシリアルアクセスメモリデバイス、1つもしくは複数のキュービット/キュービット構造、またはそれらのうちの1つもしくは複数の組合せであることが可能である。代替的または追加的に、プログラム命令は、データ処理装置による実行のために好適なレシーバ装置に伝送するためにデジタルおよび/または量子情報を符号化するように生成される、デジタルおよび/または量子情報を符号化することができる人為的に生成される伝播信号(たとえば、機械によって生成される電気的信号、光学的信号、または電磁的信号)上に符号化されてもよい。 An implementation of the digital and/or quantum subject matter described herein consists of one or more digital and/or quantum computer programs, i.e., for execution by or controlling the operation of a data processing apparatus. may be implemented as one or more modules of digital and/or quantum computer program instructions encoded on a tangible, non-transitory storage medium to do so. A digital and/or quantum computer storage medium may be a machine-readable storage device, a machine-readable storage substrate, a random or serial access memory device, one or more qubits/qubit structures, or one or more combinations thereof. can be Alternatively or additionally, the program instructions are digital and/or quantum information generated to encode the digital and/or quantum information for transmission to a suitable receiver device for execution by a data processing device. may be encoded onto an artificially-generated propagating signal (eg, a machine-generated electrical, optical, or electromagnetic signal).
量子情報および量子データという用語は、量子システムによって運ばれ、量子システムに保持され、または記憶される情報またはデータを指し、ここで、最小の重要なシステムは、キュービット、すなわち、量子情報の単位を定義するシステムである。用語「キュービット」は、対応する文脈において2準位系として好適に近似される場合があるすべての量子システムを包含することが理解される。このような量子システムは、たとえば2つ以上の準位を有する多準位システムを含む場合がある。例として、そのようなシステムは、原子、電子、光子、イオン、または超伝導キュービットを含んでもよい。多くの実装において、計算基礎状態は基底状態および第1励起状態と同一視されるが、計算状態がより高い準位の励起状態と同一視されるその他のセットアップ(たとえば、キューディット(qudit))が可能であることが理解される。 The terms quantum information and quantum data refer to information or data carried by, held by, or stored in a quantum system, where the smallest significant system is the qubit, i.e., the unit of quantum information. It is a system that defines The term "qubit" is understood to encompass all quantum systems which in the corresponding context may be suitably approximated as two-level systems. Such quantum systems may include, for example, multi-level systems having two or more levels. By way of example, such systems may include atoms, electrons, photons, ions, or superconducting qubits. In many implementations, the calculated ground state is identified with the ground state and the first excited state, but other setups where the calculated state is identified with higher excited states (e.g. qudit) is possible.
用語「データ処理装置」は、デジタルおよび/または量子データ処理ハードウェアを指し、例として、プログラミング可能なデジタルプロセッサ、プログラミング可能な量子プロセッサ、デジタルコンピュータ、量子コンピュータ、または複数のデジタルおよび量子プロセッサもしくはコンピュータ、ならびにその組合せを含む、デジタルおよび/または量子データを処理するためのすべての種類の装置、デバイス、および機械を包含する。装置は、特殊目的の論理回路、たとえばFPGA(フィールドプログラマブルゲートアレイ)、またはASIC(特定用途向け集積回路)、または量子シミュレータ、すなわち、特定の量子システムについての情報をシミュレーションもしくは生成するように設計される量子データ処理装置であることも可能であるかまたはそれをさらに含むことが可能である。特に、量子シミュレータは、普遍的な量子計算を実行する能力を持たない特殊目的の量子コンピュータである。任意で、装置は、ハードウェアに加えて、デジタルおよび/または量子コンピュータプログラムのための実行環境を作成するコード、たとえばプロセッサのファームウェア、プロトコルスタック、データベース管理システム、オペレーティングシステム、またはそれらのうちの1つもしくは複数の組合せを構成するコードを含んでもよい。 The term "data processor" refers to digital and/or quantum data processing hardware, for example programmable digital processors, programmable quantum processors, digital computers, quantum computers, or multiple digital and quantum processors or computers , and combinations thereof, all kinds of apparatus, devices and machines for processing digital and/or quantum data. The device is a special purpose logic circuit, such as an FPGA (Field Programmable Gate Array), or an ASIC (Application Specific Integrated Circuit), or a quantum simulator, i.e., designed to simulate or generate information about a particular quantum system. It can also be or further include a quantum data processor. In particular, quantum simulators are special-purpose quantum computers that do not have the ability to perform universal quantum computations. Optionally, the apparatus includes, in addition to hardware, code that creates an execution environment for digital and/or quantum computer programs, such as processor firmware, protocol stacks, database management systems, operating systems, or one of them. It may also include code that constitutes a combination of one or more.
プログラム、ソフトウェア、ソフトウェアアプリケーション、モジュール、ソフトウェアモジュール、スクリプト、またはコードと呼ばれるまたは称される場合もあるデジタルのまたは古典的なコンピュータプログラムは、コンパイラ型言語もしくはインタープリタ型言語、または宣言型言語もしくは手続き型言語を含む任意の形態のプログラミング言語で記述可能であり、独立型プログラムとしての形態、またはモジュール、コンポーネント、サブルーチン、もしくはデジタルコンピューティング環境内での使用に適したその他のユニットとしての形態を含む任意の形態でデプロイされてもよい。プログラム、ソフトウェア、ソフトウェアアプリケーション、モジュール、ソフトウェアモジュール、スクリプト、またはコードと呼ばれるまたは称される場合もある量子コンピュータプログラムは、コンパイラ型言語もしくはインタープリタ型言語、または宣言型言語もしくは手続き型言語を含む任意の形態のプログラミング言語で記述され、好適な量子プログラミング言語に変換されてもよいか、あるいは量子プログラミング言語、たとえばQCL、Quipper、Criqなどで記述されることが可能である。 A digital or classical computer program, called or sometimes referred to as a program, software, software application, module, software module, script, or code, is a compiled or interpreted language, or a declarative or procedural language written in any form of programming language, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use within a digital computing environment; may be deployed in the form of A quantum computer program, called or sometimes referred to as a program, software, software application, module, software module, script, or code, may be written in any language, including compiled or interpreted languages, or declarative or procedural languages. It may be written in a morphological programming language and converted to a suitable quantum programming language, or it may be written in a quantum programming language such as QCL, Quipper, Criq, and the like.
デジタルおよび/または量子コンピュータプログラムは、ファイルシステム内のファイルに対応する場合があるが、必ずしもそうであるとは限らない。プログラムは、その他のプログラムもしくはデータを保持するファイルの一部分、たとえばマークアップ言語のドキュメントに記憶された1つもしくは複数のスクリプト、問題にしているプログラムに専用の単一のファイル、または複数の組織されたファイル、たとえば1つもしくは複数のモジュール、サブプログラム、もしくはコードの一部分を記憶するファイルに記憶されることが可能である。デジタルおよび/または量子コンピュータプログラムは、1台のデジタルまたは1台の量子コンピュータ上で、あるいは1つの場所に置かれるか、または複数の場所に分散され、デジタルおよび/もしくは量子データ通信ネットワークによって相互に接続される複数のデジタルおよび/または量子コンピュータ上で実行されるようにデプロイされることが可能である。量子データ通信ネットワークは、量子システム、たとえばキュービットを使用して量子データを伝送してよいネットワークであると理解される。概して、デジタルデータ通信ネットワークは、量子データを伝送することができないが、量子データ通信ネットワークは、量子データとデジタルデータとの両方を伝送する場合がある。 Digital and/or quantum computer programs may, but do not necessarily, correspond to files in a file system. A program can be a part of another program or a file holding data, e.g., one or more scripts stored in a markup language document, a single file dedicated to the program in question, or multiple organized For example, a file that stores one or more modules, subprograms, or portions of code. Digital and/or quantum computer programs may be written on one digital or quantum computer, or located in one place or distributed in multiple places, and communicated with each other by a digital and/or quantum data communication network. It can be deployed to run on multiple connected digital and/or quantum computers. A quantum data communication network is understood to be a network in which quantum data may be transmitted using quantum systems, eg qubits. Generally, digital data communication networks cannot transmit quantum data, but quantum data communication networks may transmit both quantum and digital data.
本明細書に記載のプロセスおよび論理フローは、適宜、1つまたは複数のデジタルおよび/または量子プロセッサが、入力デジタルおよび量子データに対して動作し、出力を生成することによって機能を実行するために1つまたは複数のデジタルおよび/または量子コンピュータプログラムを実行するようにして動作する、1つまたは複数のプログラミング可能なデジタルおよび/または量子コンピュータによって実行されてもよい。プロセスおよび論理フローは、特殊目的の論理回路、たとえばFPGAもしくはASIC、または量子シミュレータによって、あるいは特殊目的の論理回路または量子シミュレータと1つまたは複数のプログラミングされたデジタルおよび/または量子コンピュータとの組合せによって実行されることも可能であり、装置が、特殊目的の論理回路、たとえばFPGAもしくはASIC、または量子シミュレータとして、あるいは特殊目的の論理回路または量子シミュレータと1つまたは複数のプログラミングされたデジタルおよび/または量子コンピュータとの組合せによって実装されることも可能である。 The processes and logic flows described herein are, where appropriate, for one or more digital and/or quantum processors to perform functions by operating on input digital and quantum data and generating output. It may be performed by one or more programmable digital and/or quantum computers operable to execute one or more digital and/or quantum computer programs. Processes and logic flows are implemented by special purpose logic circuits, such as FPGAs or ASICs, or quantum simulators, or by a combination of special purpose logic circuits or quantum simulators and one or more programmed digital and/or quantum computers. It is also possible that the device is implemented as a special purpose logic circuit, such as an FPGA or ASIC, or a quantum simulator, or as a special purpose logic circuit or quantum simulator and one or more programmed digital and/or It can also be implemented in combination with a quantum computer.
1つまたは複数のデジタルおよび/または量子コンピュータまたはプロセッサのシステムが特定の動作またはアクションを実行する「ように構成される」または「ように動作可能である」ことは、システムが、動作中にシステムに動作またはアクションを実行させるソフトウェア、ファームウェア、ハードウェア、またはそれらの組合せをそのシステム上にインストール済みであることを意味する。1つまたは複数のデジタルおよび/または量子コンピュータプログラムが特定の動作またはアクションを実行するように構成されることは、1つまたは複数のプログラムが、デジタルおよび/または量子データ処理装置によって実行されるときに装置に動作またはアクションを実行させる命令を含むことを意味する。量子コンピュータは、量子コンピューティング装置によって実行されるときに装置に動作またはアクションを実行させる命令をデジタルコンピュータから受信する場合がある。 A system of one or more digital and/or quantum computers or processors is "configured to" or "operable to" perform a particular operation or action when the system is in operation means that software, firmware, hardware, or a combination thereof that causes a computer to perform an operation or action has been installed on its system. One or more digital and/or quantum computer programs are configured to perform a particular operation or action when the one or more programs are executed by a digital and/or quantum data processing apparatus. contains instructions that cause a device to perform an operation or action. A quantum computer may receive instructions from a digital computer that, when executed by a quantum computing device, cause the device to perform operations or actions.
デジタルおよび/または量子コンピュータプログラムの実行に好適なデジタルおよび/または量子コンピュータは、汎用もしくは専用デジタルおよび/もしくは量子マイクロプロセッサもしくはそれら両方、または任意のその他の種類の中央デジタルおよび/もしくは量子処理ユニットに基づくことが可能である。概して、中央デジタルおよび/または量子処理ユニットは、命令ならびにデジタルおよび/または量子データを、読出し専用メモリ、またはランダムアクセスメモリ、または量子データ、たとえば光子を伝送するのに好適な量子システム、またはその組合せから受信することになる。 A digital and/or quantum computer suitable for executing a digital and/or quantum computer program may be a general purpose or special purpose digital and/or quantum microprocessor or both, or any other kind of central digital and/or quantum processing unit. can be based on Generally, a central digital and/or quantum processing unit stores instructions and digital and/or quantum data in a read-only memory, or random access memory, or a quantum system suitable for transmitting quantum data, e.g., photons, or combinations thereof. will be received from
デジタルおよび/または量子コンピュータの一部の例示的な要素は、命令を遂行または実行するための中央演算処理装置、および命令とデジタルおよび/または量子データとを記憶するための1つまたは複数のメモリデバイスである。中央演算処理装置およびメモリは、特殊目的の論理回路もしくは量子シミュレータによって補完されるか、または特殊目的の論理回路もしくは量子シミュレータに組み込まれることが可能である。概して、デジタルおよび/または量子コンピュータは、デジタルおよび/もしくは量子データを記憶するための1つもしくは複数の大容量ストレージデバイス、たとえば磁気ディスク、光磁気ディスク、もしくは光ディスク、または量子情報を記憶するのに好適な量子システムも含むか、あるいはそれらからデジタルおよび/もしくは量子データを受信するか、またはそれらにデジタルおよび/もしくは量子データを転送するか、またはそれら両方を行うために動作可能なように結合されることになる。しかし、デジタルおよび/または量子コンピュータは、そのようなデバイスを有していなくてもよい。 Some exemplary elements of a digital and/or quantum computer are a central processing unit for performing or executing instructions, and one or more memories for storing instructions and digital and/or quantum data. Device. The central processing unit and memory can be supplemented by, or incorporated into, a special purpose logic circuit or quantum simulator. Generally, a digital and/or quantum computer is one or more mass storage devices, such as magnetic, magneto-optical, or optical discs, for storing digital and/or quantum data, or for storing quantum information. Suitable quantum systems also include or are operably coupled to receive digital and/or quantum data from them, transfer digital and/or quantum data to them, or both. will be However, digital and/or quantum computers may not have such devices.
デジタルおよび/または量子コンピュータプログラム命令ならびにデジタルおよび/または量子データを記憶するのに好適なデジタルおよび/または量子コンピュータ可読媒体は、例として、半導体メモリデバイス、たとえばEPROM、EEPROM、およびフラッシュメモリデバイス、磁気ディスク、たとえば内蔵ハードディスクまたはリムーバブルディスク、光磁気ディスク、ならびにCD-ROMディスクおよびDVD-ROMディスク、ならびに量子システム、たとえばトラップされた原子または電子を含む、すべての形態の不揮発性デジタルおよび/または量子メモリ、媒体、およびメモリデバイスを含む。量子メモリは、量子データを高い忠実度および効率で長時間記憶することができるデバイス、たとえば光が伝送のために使用され、物質が重ね合わせまたは量子コヒーレンスなどの量子データの量子の特徴を記憶し、保存するために使用される光-物質インターフェース(light-matter interface)であることが理解される。 Digital and/or quantum computer readable media suitable for storing digital and/or quantum computer program instructions and digital and/or quantum data include, by way of example, semiconductor memory devices such as EPROM, EEPROM, and flash memory devices, magnetic All forms of non-volatile digital and/or quantum memory, including disks such as internal or removable disks, magneto-optical disks, and CD-ROM and DVD-ROM disks, and quantum systems such as trapped atoms or electrons , media, and memory devices. Quantum memory is a device that can store quantum data with high fidelity and efficiency for long periods of time, e.g. light is used for transmission and matter stores quantum features of quantum data such as superposition or quantum coherence. , is the light-matter interface used for storage.
本明細書に記載の様々なシステムまたはそれらの一部分の制御は、1つまたは複数の有形の非一時的な機械可読ストレージ媒体上に記憶され、1つまたは複数のデジタルおよび/または量子処理デバイス上で実行可能な命令を含むデジタルおよび/または量子コンピュータプログラム製品に実装されてもよい。本明細書に記載のシステムまたはそれらの一部分は、1つまたは複数のデジタルおよび/または量子処理デバイスと、本明細書に記載の動作を実行するための実行可能な命令を記憶するためのメモリとを含んでよい装置、方法、または電子システムとしてそれぞれ実装されてもよい。 Control of the various systems, or portions thereof, described herein may be stored on one or more tangible, non-transitory, machine-readable storage media and may be stored on one or more digital and/or quantum processing devices. may be implemented in a digital and/or quantum computer program product containing instructions executable in The systems or portions thereof described herein include one or more digital and/or quantum processing devices and memory for storing executable instructions for performing the operations described herein. may each be implemented as an apparatus, method, or electronic system that may include a
本明細書は多くの具体的な実装の詳細を含むが、これらは、特許請求される可能性があるものの範囲に対する限定と見なされるべきでなく、むしろ、特定の実装に固有である可能性がある特徴の説明と見なされるべきである。別々の実装に関連して本明細書において説明されている特定の特徴が、単一の実装に組み合わせて実装されることも可能である。反対に、単一の実装に関連して説明されている様々な特徴が、複数の実装に別々に、または任意の適切な部分的組合せで実装されることも可能である。さらに、特徴は、特定の組合せで働くものとして上で説明されている場合があり、最初にそのように主張されてさえいる場合があるが、主張された組合せからの1つまたは複数の特徴は、場合によっては組合せから削除されることが可能であり、主張された組合せは、部分的組合せ、または部分的組合せの変形を対象とする可能性がある。 Although this specification contains many specific implementation details, these should not be considered limitations on the scope of what may be claimed, but rather may be specific to particular implementations. should be regarded as a description of a feature. Certain features that are described in this specification in the context of separate implementations can also be implemented in combination in a single implementation. Conversely, various features that are described in the context of a single implementation can also be implemented in multiple implementations separately or in any suitable subcombination. Further, while features may be described above as working in particular combinations, or even initially claimed to be so, one or more of the features from the claimed combination may , in some cases can be omitted from the combination, and a claimed combination may cover a subcombination, or variations of a subcombination.
同様に、動作が図中に特定の順序で示されているが、これは、所望の結果を達成するために、そのような動作が示された特定の順序でもしくは逐次的順序で実行されること、または示されたすべての動作が実行されることを必要とするものと理解されるべきでない。特定の状況においては、マルチタスクおよび並列処理が有利である場合がある。さらに、上述の実装における様々なシステムモジュールおよびコンポーネントの分割は、すべての実装においてそのような分割を必要とするものと理解されるべきでなく、説明されたプログラムコンポーネントおよびシステムは、概して、単一のソフトウェア製品に一緒に統合されるか、または複数のソフトウェア製品にパッケージングされることが可能であることが理解されるべきである。 Similarly, although acts have been presented in the figures in a particular order, it is to be understood that such acts are performed in the specific order presented or in a sequential order to achieve desired results. It should not be construed as requiring that all or all of the acts shown be performed. Multitasking and parallel processing may be advantageous in certain situations. Furthermore, the division of various system modules and components in the implementations described above should not be understood to require such division in all implementations, and the described program components and systems are generally implemented in a single unit. can be integrated together into multiple software products or packaged into multiple software products.
主題の特定の実装が、説明された。その他の実装は、添付の請求項の範囲内にある。たとえば、請求項に挙げられたアクションは、異なる順序で実行され、それでも所望の結果を達成することができる。1つの例として、添付の図に示されたプロセスは、所望の結果を達成するために、必ずしも、示された特定の順序または逐次的順序を必要としない。場合によっては、マルチタスクおよび並列処理が有利である可能性がある。 A specific implementation of the subject has been described. Other implementations are within the scope of the appended claims. For example, the actions recited in the claims can be performed in a different order and still achieve desirable results. As one example, the processes depicted in the accompanying figures do not necessarily require the particular order or sequential order shown to achieve desired results. In some cases, multitasking and parallel processing can be advantageous.
10 コンピューティングデバイス
50 コンピューティングデバイス
100 量子コンピューティングシステム
102 量子ハードウェア
104 古典的プロセッサ
106 物理的な制御キュービットパラメータ値、パラメータ
108 測定結果
110 量子システム
112 制御デバイス
114 読出しデバイス
200 量子ハードウェアサンプル生成モデルシステム
202 量子ハードウェアサンプル生成モデル
204 量子ハードウェアのサンプル
206 オプティマイザ
207 オプティマイザのパラメータ
208 出力分布
210 量子ハードウェアのパラメータの分布、パラメータの分布
212 量子ハードウェアのパラメータの分布、ジョセフソン接合の抵抗の分布
214 パラメータの分布のサンプル、抵抗(オーム)
220 中間分布
222 中間分布、T1緩和スペクトルの分布
224 中間分布のサンプル
230 量子ハードウェアのコンポーネントの分布
232 量子ハードウェアのコンポーネントの分布、キュービットの分布
234 コンポーネントのサンプル
240 量子ハードウェアの分布
242 プロセッサの分布
244 量子ハードウェアのサンプル
245 量子ハードウェアのアーキテクチャのパラメータ、量子ハードウェアのアーキテクチャ
246 量子ハードウェアのアーキテクチャのパラメータ、5x5プロセッサ、最近傍カップリング、周波数調整可能なトランズモン
300 システム
310 量子ハードウェアサンプル生成モデル、生成モデル
312 設計パラメータの分布
314 量子ハードウェアのサンプル、量子ハードウェアのモデル
320 オプティマイザ、エラーのモデル/オプティマイザ
322 動作パラメータ
323 量子テストアルゴリズム、量子アルゴリズム
324 シミュレーションされた性能測定値
330 フィードバックループ、フィードバック
400 システム
410 量子ハードウェアサンプル生成モデル
412 設計パラメータの分布、設計の分布
414 量子ハードウェアのサンプル、量子ハードウェアのモデル
415 量子テストアルゴリズム、量子アルゴリズム、その他のハードウェア情報
416 オプティマイザ、オプティマイザによって生成された動作パラメータ
418 シミュレーションされた性能測定値、シミュレーションされた実行エラー
420 性能距離
422 目標性能測定値、所望の性能パラメータ
424 制御アクション、制御アクション(設計の更新)
500 コンピュータによって実施される方法
600 コンピュータによって実施される方法
700 コンピューティングシステム
702 ユーザコンピューティングデバイス
712 プロセッサ
714 メモリ
716 データ
718 命令
720 量子ハードウェアサンプルモデル生成モデル
722 ユーザ入力コンポーネント
730 サーバコンピューティングシステム
732 プロセッサ
734 メモリ
736 データ
738 命令
740 量子ハードウェアサンプルモデル生成モデル
750 トレーニングコンピューティングシステム
752 プロセッサ
754 メモリ
756 データ
758 命令
760 モデルトレーナ
762 トレーニングデータ
780 ネットワーク
10 computing devices
50 computing devices
100 quantum computing system
102 Quantum Hardware
104 classic processors
106 physical control qubit parameter value, parameter
108 measurement results
110 Quantum Systems
112 Control Device
114 readout device
200 quantum hardware sample generation model system
202 Quantum Hardware Sample Generation Model
204 Quantum Hardware Samples
206 Optimizer
207 optimizer parameters
208 power distribution
210 Distribution of Parameters of Quantum Hardware, Distribution of Parameters
212 Distribution of Parameters of Quantum Hardware, Distribution of Josephson Junction Resistance
214 samples of the distribution of parameters, resistance (ohms)
220 median distribution
222 intermediate distribution, distribution of T1 relaxation spectrum
224 median samples
230 Distribution of Components of Quantum Hardware
232 Distribution of Components of Quantum Hardware, Distribution of Qubits
234 component samples
240 Quantum Hardware Distribution
242 processor distribution
244 quantum hardware samples
245 Parameters of Quantum Hardware Architecture, Quantum Hardware Architecture
246 Architectural Parameters of Quantum Hardware, 5x5 Processors, Nearest Neighbor Coupling, and Frequency-tunable Transmons
300 systems
310 Quantum Hardware Sample Generative Model, Generative Model
312 Distribution of design parameters
314 Quantum Hardware Examples, Quantum Hardware Models
320 optimizer, error model/optimizer
322 operating parameters
323 Quantum Test Algorithm, Quantum Algorithm
324 Simulated performance measurements
330 feedback loop, feedback
400 system
410 Quantum Hardware Sample Generation Model
412 Distribution of Design Parameters, Distribution of Design
414 Quantum Hardware Examples, Quantum Hardware Models
415 Quantum Test Algorithms, Quantum Algorithms, and Other Hardware Information
416 optimizer, operating parameters generated by the optimizer
418 Simulated Performance Measure, Simulated Execution Error
420 performance distance
422 target performance measurements, desired performance parameters
424 control action, control action (design update)
500 computer-implemented method
600 computer-implemented method
700 computing system
702 User Computing Devices
712 processor
714 memory
716 data
718 instructions
720 Quantum Hardware Sample Model Generative Model
722 User Input Component
730 server computing system
732 processor
734 memory
736 data
738 instructions
740 Quantum Hardware Sample Model Generative Model
750 Training Computing System
752 processor
754 memory
756 Data
758 instructions
760 model trainer
762 training data
780 network
Claims (20)
1つまたは複数のメモリデバイスであって、量子ハードウェアサンプル生成モデルを定義するコンピュータ可読データ、および実施されるときに前記量子ハードウェアサンプル生成モデルに量子ハードウェアのサンプルを提供させる命令を記憶する、1つまたは複数のメモリデバイスと
を備え、
前記量子ハードウェアサンプル生成モデルが、
1つまたは複数の量子ハードウェアのパラメータの分布と、
前記1つまたは複数の量子ハードウェアのパラメータの分布の間の関係を定義する1つまたは複数の量子ハードウェアのパラメータの依存関係と
を含み、
前記1つまたは複数の量子ハードウェアのパラメータの分布および前記1つまたは複数の量子ハードウェアのパラメータの依存関係が、サンプリングされるときに量子ハードウェアのサンプルを生成するハードウェアの分布を有する統計的ネットワークを定義し、前記量子ハードウェアのサンプルが、量子ハードウェアの性能をモデリングするように構成される、コンピューティングシステム。 one or more processors;
One or more memory devices storing computer readable data defining a quantum hardware sample generation model and instructions that, when implemented, cause the quantum hardware sample generation model to provide samples of quantum hardware. , with one or more memory devices and
wherein the quantum hardware sample generation model comprises:
a distribution of parameters of one or more quantum hardware;
one or more quantum hardware parameter dependencies that define relationships between distributions of the one or more quantum hardware parameters;
A statistic comprising a distribution of the parameters of the one or more quantum hardware and a dependency of the parameters of the one or more quantum hardware having a distribution of hardware that, when sampled, produces a sample of the quantum hardware. A computing system, defining a quantum network, wherein the sample of quantum hardware is configured to model the performance of the quantum hardware.
1つまたは複数のコンピューティングデバイスを備えるコンピューティングシステムによって、量子ハードウェアのサンプルを生成するように構成される量子ハードウェアサンプル生成モデルにアクセスするステップであって、前記量子ハードウェアサンプル生成モデルが、1つまたは複数の量子ハードウェアのパラメータを含む、ステップと、
前記コンピューティングシステムによって、前記量子ハードウェアサンプル生成モデルから量子ハードウェアのサンプルをサンプリングするステップと、
前記コンピューティングシステムによって、前記量子ハードウェアのサンプルに少なくとも部分的に基づく1つまたは複数のシミュレーションされた性能測定値を取得するステップと
を含む、コンピュータによって実施される方法。 A computer-implemented method for simulating the performance of quantum hardware, comprising:
accessing, by a computing system comprising one or more computing devices, a quantum hardware sampling model configured to generate samples of quantum hardware, the quantum hardware sampling model comprising: , a step including parameters of one or more quantum hardware;
sampling, by the computing system, quantum hardware samples from the quantum hardware sample generation model;
obtaining, by the computing system, one or more simulated performance measurements based at least in part on the samples of the quantum hardware.
前記コンピューティングシステムによって、最適化アルゴリズムを使用して1つまたは複数の動作パラメータを決定することと、
前記コンピューティングシステムによって、前記1つまたは複数の動作パラメータに少なくとも部分的に基づいて前記1つまたは複数のシミュレーションされた性能測定値をシミュレーションすることと
を含む、請求項11に記載のコンピュータによって実施される方法。 Obtaining the one or more simulated performance measurements comprises:
determining, by the computing system, one or more operating parameters using an optimization algorithm;
12. The computer-implemented method of claim 11, comprising: simulating, by the computing system, the one or more simulated performance measures based at least in part on the one or more operating parameters. how to be
前記コンピューティングシステムによって、前記1つまたは複数の性能距離に少なくとも部分的に基づいて前記1つまたは複数の量子ハードウェアのパラメータの分布のうちの少なくとも1つを調整するための制御アクションを実施するステップと
をさらに含む、請求項11に記載のコンピュータによって実施される方法。 obtaining, by the computing device, one or more performance distances between the one or more simulated performance measurements and one or more target performance measurements;
Performing, by the computing system, control actions to adjust at least one of distributions of parameters of the one or more quantum hardware based at least in part on the one or more performance metrics. 12. The computer-implemented method of claim 11, further comprising the steps of:
前記コンピューティングシステムによって、前記量子ハードウェアのサンプルを量子回路シミュレータシステムに提供することであって、前記量子回路シミュレータシステムが、1つまたは複数のテストアルゴリズムに関して前記量子ハードウェアのサンプルの性能をシミュレーションするように構成される、提供することと、
前記コンピューティングシステムによって、および前記量子回路シミュレータシステムから、前記1つまたは複数のテストアルゴリズムに関する1つまたは複数のアルゴリズムエラーを取得することと
を含む、請求項11に記載のコンピュータによって実施される方法。 obtaining the one or more simulated performance measurements from the sample of quantum hardware;
providing, by the computing system, the sample of quantum hardware to a quantum circuit simulator system, wherein the quantum circuit simulator system simulates the performance of the sample of quantum hardware with respect to one or more test algorithms; providing, configured to
obtaining one or more algorithm errors for the one or more test algorithms by the computing system and from the quantum circuit simulator system. .
1つまたは複数のコンピューティングデバイスを備えるコンピューティングシステムによって、量子ハードウェアのサンプルを生成するように構成される量子ハードウェアサンプル生成モデルにアクセスするステップであって、前記量子ハードウェアサンプル生成モデルが、1つまたは複数の量子ハードウェアのパラメータの分布および1つまたは複数の量子ハードウェアのパラメータの依存関係の統計的ネットワークを含む、ステップと、
前記コンピューティングシステムによって、量子ハードウェアのサンプルを取得するために前記量子ハードウェアサンプル生成モデルをサンプリングするステップであって、前記1つまたは複数の量子ハードウェアのパラメータの分布の各々から1つまたは複数のパラメータのサンプルをサンプリングすること、および前記1つまたは複数の量子ハードウェアのパラメータの依存関係に基づく前記統計的ネットワークを通じて前記1つまたは複数のパラメータのサンプルを伝播させることを含む、ステップと
を含む、コンピュータによって実施される方法。 A computer-implemented method for generating a sample of quantum hardware that simulates performance of quantum hardware, comprising:
accessing, by a computing system comprising one or more computing devices, a quantum hardware sampling model configured to generate samples of quantum hardware, the quantum hardware sampling model comprising: , a statistical network of distributions of the one or more quantum hardware parameters and dependencies of the one or more quantum hardware parameters;
sampling, by the computing system, the quantum hardware sampling model to obtain a sample of quantum hardware, one from each of the one or more quantum hardware parameter distributions, or sampling a plurality of parameter samples, and propagating the one or more parameter samples through the statistical network based on parameter dependencies of the one or more quantum hardware; A computer-implemented method comprising:
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US202063052161P | 2020-07-15 | 2020-07-15 | |
US63/052,161 | 2020-07-15 | ||
PCT/US2021/041542 WO2022051030A2 (en) | 2020-07-15 | 2021-07-14 | Generative modeling of quantum hardware |
Publications (1)
Publication Number | Publication Date |
---|---|
JP2023534269A true JP2023534269A (en) | 2023-08-08 |
Family
ID=80119108
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2023502814A Pending JP2023534269A (en) | 2020-07-15 | 2021-07-14 | Generative modeling of quantum hardware |
Country Status (7)
Country | Link |
---|---|
US (1) | US20230259802A1 (en) |
EP (1) | EP4182857A2 (en) |
JP (1) | JP2023534269A (en) |
CN (1) | CN116075836A (en) |
AU (1) | AU2021336683C1 (en) |
CA (1) | CA3186096A1 (en) |
WO (1) | WO2022051030A2 (en) |
Families Citing this family (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11977957B2 (en) * | 2021-08-03 | 2024-05-07 | Amazon Technologies, Inc. | Quantum computing program compilation using cached compiled quantum circuit files |
-
2021
- 2021-07-14 US US18/005,493 patent/US20230259802A1/en active Pending
- 2021-07-14 WO PCT/US2021/041542 patent/WO2022051030A2/en unknown
- 2021-07-14 CN CN202180061588.XA patent/CN116075836A/en active Pending
- 2021-07-14 CA CA3186096A patent/CA3186096A1/en active Pending
- 2021-07-14 JP JP2023502814A patent/JP2023534269A/en active Pending
- 2021-07-14 EP EP21851993.2A patent/EP4182857A2/en active Pending
- 2021-07-14 AU AU2021336683A patent/AU2021336683C1/en active Active
Also Published As
Publication number | Publication date |
---|---|
AU2021336683C1 (en) | 2024-05-09 |
WO2022051030A2 (en) | 2022-03-10 |
US20230259802A1 (en) | 2023-08-17 |
WO2022051030A3 (en) | 2022-06-16 |
EP4182857A2 (en) | 2023-05-24 |
CA3186096A1 (en) | 2022-03-10 |
AU2021336683A1 (en) | 2023-02-16 |
AU2021336683B2 (en) | 2024-05-02 |
CN116075836A (en) | 2023-05-05 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
JP7362692B2 (en) | quantum neural network | |
US20200272905A1 (en) | Artificial neural network compression via iterative hybrid reinforcement learning approach | |
US20210174236A1 (en) | Variational quantum state preparation | |
US20230104058A1 (en) | Methods and systems for improving an estimation of a property of a quantum state | |
JP2019537129A (en) | Simulation of materials using quantum computation | |
US20220383177A1 (en) | Enhancing combinatorial optimization with quantum generative models | |
US11966707B2 (en) | Quantum enhanced word embedding for natural language processing | |
Youssry et al. | Characterization and control of open quantum systems beyond quantum noise spectroscopy | |
WO2023012375A1 (en) | Methods and systems for solving a stochastic differential equation using a hybrid computer system | |
US20230259802A1 (en) | Generative Modeling of Quantum Hardware | |
Alberts et al. | Physics-informed information field theory for modeling physical systems with uncertainty quantification | |
JP2022522807A (en) | Legendre memory unit for recurrent neural networks | |
CN114096970A (en) | Measurement of Quantum State purity | |
Jooya et al. | Accelerating neural network ensemble learning using optimization and quantum annealing techniques | |
EP4242934A1 (en) | Quantum-kernel-based regression | |
Vischi et al. | Simulating photonic devices with noisy optical elements | |
US20240160976A1 (en) | Backtesting Quantum Device Calibration | |
Quattromini et al. | Operator learning of RANS equations: a Graph Neural Network closure model | |
US20230081120A1 (en) | Operating Quantum Devices Using a Temporal Metric | |
US11550872B1 (en) | Systems and methods for quantum tomography using an ancilla | |
Chen | Physics Informed Learning for Dynamic Modeling of Beam Structures | |
De Prins | Photonic quantum reservoir computing | |
Luchi | Machine-Aware Enhancing of Quantum Computers | |
Wu et al. | The expressivity of classical and quantum neural networks on entanglement entropy | |
Stenmark | Deep neural networks for electromagnetics applied to optimization and inverse problems |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
A621 | Written request for application examination |
Free format text: JAPANESE INTERMEDIATE CODE: A621Effective date: 20230309 |
|
A977 | Report on retrieval |
Free format text: JAPANESE INTERMEDIATE CODE: A971007Effective date: 20240214 |
|
A131 | Notification of reasons for refusal |
Free format text: JAPANESE INTERMEDIATE CODE: A131Effective date: 20240325 |
US8131754B1 - Systems and methods for determining an article association measure - Google Patents
Systems and methods for determining an article association measure Download PDFInfo
- Publication number
- US8131754B1 US8131754B1 US10/882,066 US88206604A US8131754B1 US 8131754 B1 US8131754 B1 US 8131754B1 US 88206604 A US88206604 A US 88206604A US 8131754 B1 US8131754 B1 US 8131754B1
- Authority
- US
- United States
- Prior art keywords
- association
- article
- attribute
- article identifier
- date
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/903—Querying
Definitions
- the present invention relates generally to systems and methods for information retrieval.
- the present invention relates particularly to systems and methods for determining an article association measure.
- Conventional search engines receive a search query from a user and execute a search against a global index. Such conventional search engines typically use one or more conventional methods for performing a search. For example, one known method, described in an article entitled “The Anatomy of a Large-Scale Hypertextual Search Engine,” by Sergey Brin and Lawrence Page, assigns a degree of importance to an article, such as a web page, based on the link structure of the web.
- the search results are often presented in a list format, comprising article identifiers and brief snippets about the articles in a web page that can be resized.
- a user mentally associates articles that the user accesses close in time, that comprise similar content, or that originate from similar sources.
- the user is often unable to retrieve the articles since the association between the articles that is of interest to the user may not be captured by the information retrieval system.
- the conventional search engines are unlikely to capture the fact that a user has printed two articles in rapid succession.
- Embodiments of the present invention provide systems and methods for determining an article association measure.
- a computer program receives a first article identifier associated with a first attribute and a second article identifier associated with a second attribute and determines an association measure of the first article identifier to the second article identifier based at least in part on the first attribute and on the second attribute.
- the association measure provides a means for associating various article identifiers so that they may be, for example, retrieved and/or ranked in subsequent search queries.
- FIG. 1 is a block diagram illustrating an illustrative environment in which one embodiment of the present invention may operate
- FIG. 2 is a flowchart illustrating a method of computing an association measure for an article pair in one embodiment of the present invention
- FIG. 3 is a flowchart illustrating a method of associative retrieval in one embodiment of the present invention.
- FIG. 1 is a block diagram illustrating an illustrative environment for implementation of an embodiment of the present invention. While the environment shown reflects a client-side search engine architecture embodiment, other embodiments are possible.
- the system 100 shown in FIG. 1 includes multiple client devices 102 a - n in communication with a server device 150 over a wired or wireless network 106 .
- the network 106 shown comprises the Internet. In other embodiments, other networks, such as an intranet, may be used instead. Moreover, methods according to the present invention may operate within a single client device.
- the client devices 102 a - n shown each includes a computer-readable medium 108 .
- the embodiment shown includes a random access memory (RAM) 108 coupled to a processor 110 .
- the processor 110 executes computer-executable program instructions stored in memory 108 .
- Such processors may include a microprocessor, an ASIC, a state machine, or other processor, and can be any of a number of computer processors, such as processors from Intel Corporation of Santa Clara, Calif. and Motorola Corporation of Schaumburg, Ill.
- Such processors include, or may be in communication with, media, for example computer-readable media, which stores instructions that, when executed by the processor, cause the processor to perform the steps described herein.
- Embodiments of computer-readable media include, but are not limited to, an electronic, optical, magnetic, or other storage or transmission device capable of providing a processor, such as the processor 110 of client 102 a , with computer-readable instructions.
- suitable media include, but are not limited to, a floppy disk, CD-ROM, DVD, magnetic disk, memory chip, ROM, RAM, an ASIC, a configured processor, all optical media, all magnetic tape or other magnetic media, or any other medium from which a computer processor can read instructions.
- various other forms of computer-readable media may transmit or carry instructions to a computer, including a router, private or public network, or other transmission device or channel, both wired and wireless.
- the instructions may comprise code from any suitable computer-programming language, including, for example, C, C++, C#, Visual Basic, Java, Python, Perl, and JavaScript.
- Client devices 102 a - n can be connected to a network 106 as shown, or can be stand-alone machines. Client devices 102 a - n may also include a number of external or internal devices such as a mouse, a CD-ROM, DVD, a keyboard, a display, or other input or output devices. Examples of client devices 102 a - n are personal computers, digital assistants, personal digital assistants, cellular phones, mobile phones, smart phones, pagers, digital tablets, laptop computers, Internet appliances, and other processor-based devices. In general, the client devices 102 a - n may be any type of processor-based platform that operates on any operating system, such as Microsoft® Windows® or Linux, capable of supporting one or more client application programs.
- any operating system such as Microsoft® Windows® or Linux
- the client device 102 a shown comprises a personal computer executing client application programs, also known as client applications 120 .
- the client applications 120 can be contained in memory 108 and can include, for example, a word processing application, a spreadsheet application, an e-mail application, an instant messenger application, a presentation application, an Internet browser application, a calendar/organizer application, and any other application capable of being executed by a client device.
- the user 112 a can interact with the various client applications 120 and articles associated with the client applications 120 via various input and output devices of the client device 102 a .
- Articles include, for example, word processor, spreadsheet, presentation, e-mail, instant messenger, database, and other client application program content files or groups of files, web pages of various formats, such as Hypertext Markup Language (HTML), eXtensible Markup Language (XML), eXtensible Hypertext Markup Language (XHTML), Portable Document Format (PDF) files, and audio files, video files, or any other documents or groups of documents or information of any type whatsoever.
- HTML Hypertext Markup Language
- XML eXtensible Markup Language
- XHTML eXtensible Hypertext Markup Language
- PDF Portable Document Format
- the memory 108 of the client device 102 a shown also contains a capture processor 124 , a queue 126 , and a search engine 122 .
- the client device 102 a shown also contains or is in communication with a data store 140 .
- the search engine 122 can receive an explicit query from the user 112 a or generate an implicit query and retrieve information from the data store 140 in response to the query.
- the search engine 122 shown contains an indexer 130 , a query system 132 , and a formatter 134 . Events and performance data can be sent by the queue 126 to the query system 132 to provide the query system 132 with information concerning current user context. The query system 132 can use this information to generate an implicit query. The query system 132 can also receive and process explicit queries from the user 112 a.
- the data store 140 can be any type of computer-readable media and can be integrated with the client device 102 a , such as a hard drive, or external to the client device 102 a , such as an external hard drive or on another data storage device accessed through the network 106 .
- the data store 140 may include any one or combination of methods for storing data, including without limitation, arrays, hash tables, lists, and pairs.
- a user 112 a can input an explicit query into a search engine interface displayed on the client device 102 a , which is received by the search engine 122 .
- the search engine 122 can also generate an implicit query based on a current user context or state, which can be determined by the query system 132 from contextual real time events. Based on the query, the query system 132 can locate relevant information in the data store 140 and provide a result set.
- the result set comprises article identifiers identifying articles associated with the client applications 120 or client articles.
- Client articles stored in the data store 140 include articles associated with the user 112 a or client device 102 a , such as word-processing documents, previously viewed web pages and any other article associated with the client device 102 a or user 112 a .
- the result set also comprises identifiers identifying articles located on the network 106 or network articles located by a search engine on a server device.
- Network articles include articles located on the network 106 not previously viewed or otherwise referenced by the user 112 a , such as web pages not previously viewed by the user 112 a.
- the result sets comprise one or more article identifiers.
- An article identifier may be, for example, a Uniform Resource Locator (URL), a file name, a link, an icon, a path for a local file, or anything else that identifies an article.
- an article identifier comprises a URL associated with an article.
- Messaging articles stored in the data store 140 include user's emails, chat messages, and instant messaging messages. Each time a message is received, sent, modified, printed, or otherwise accessed, a record is stored in the data store 140 . This information can later be searched to identify messages that should be displayed in the user interface.
- An embodiment of the present invention may also store message threads in the data store 140 .
- messages are related together by various attributes, including, for example, the sender, recipient, date/time sent and received, the subject, the content, or any other attribute of the message.
- the related messages can then be retrieved as a thread, which may be treated as a document by the display processor 128 .
- the data store 140 comprises a local index.
- the local index in the embodiment shown in FIG. 1 may comprise information, such as articles, which are associated with the client device 102 a , a user 112 a of the client device 102 a , or a group of users of the client device 102 a .
- the local index in the data store 140 shown in FIG. 1 may comprise an index of articles created, edited, received, or stored by the client user 112 a using the client machine 102 a , or articles otherwise associated with the client user 102 a or the client machine 112 a .
- the local index may be stored in a client machine, such as in data store 140 , in a data store on a local network in a manner accessible by the client machine, on a server accessible to the client machine through the Internet, or in another accessible location.
- a global index may comprise information relevant to many users or many servers, such as, for example, an index of web pages located on multiple servers in communication with the World Wide Web.
- a global index is an index used by the GoogleTM search engine to provide search results in response to a search query.
- a single index may comprise both a local and a global index.
- an index may comprise both local and global information, and include a user or client identifier with the local information so that it may be identified with the user(s) or client(s) to which it pertains.
- an index, local or global may be present in one or multiple logical or physical locations.
- the formatter 134 can receive the search result set from the query system 132 of the search engine 122 and can format the results for output to a display processor 128 .
- the formatter 134 formats the results in XML or HTML.
- the display processor 128 can be contained in memory 108 and can control the display of the result set on a display device associated with the client device 102 a .
- the display processor 128 may comprise various components.
- the display processor 128 comprises a Hypertext Transfer Protocol (HTTP) server that receives requests for information and responds by constructing and transmitting HTML pages.
- the HTTP server comprises a scaled-down version of the Apache Web server.
- the functions described herein may be performed by various other components and devices.
- a server device 150 is also coupled to the network 106 .
- the search engine 122 can transmit a search query comprised of an explicit or implicit query or both to the server device 150 .
- the user 112 a can also enter a search query in a search engine interface, which can be transmitted to the server device 150 .
- the query signal may instead be sent to a proxy server (not shown), which then transmits the query signal to server device 150 .
- Other configurations are also possible.
- the server device 150 shown includes a server executing a search engine application program, such as the GoogleTM search engine. Similar to the client devices 102 a - n , the server device 150 shown includes a processor 160 coupled to a computer-readable memory 162 .
- Server device 150 depicted as a single computer system, may be implemented as a network of computer processors. Examples of a server device 150 are servers, mainframe computers, networked computers, a processor-based device, and similar types of systems and devices.
- the server processor 160 can be any of a number of computer processors, such as processors from Intel Corporation of Santa Clara, Calif. and Motorola Corporation of Schaumburg, Ill.
- Memory 162 contains the search engine application program, also known as a search engine 170 .
- the search engine 170 locates relevant information in response to a search query from a client device 102 a .
- the search engine 122 then provides the result set to the client device 102 a via the network 106 .
- the result set 134 comprises one or more article identifiers.
- An article identifier may be, for example, a URL, a file name, a link, an icon, a path for a local file, or anything else that identifies an article.
- an article identifier comprises a URL associated with an article.
- the server device 150 has previously performed a crawl of the network 106 to locate articles, such as web pages, stored at other devices or systems connected to the network 106 , and indexed the articles in memory 162 or on another data storage device.
- server device 150 may comprise a single physical or logical server, or there may be no server device.
- the system 100 shown in FIG. 1 is merely illustrative, and is used to explain the illustrative methods shown in FIGS. 2 and 3 .
- Methods according to the present invention may be implemented by, for example, a processor-executable program code stored on a computer-readable medium.
- a computer program such as the query system 132 , receives a first article identifier associated with a first attribute and a second article identifier associated with a second attribute and determines an association measure of the first article identifier to the second article identifier based at least in part on the first attribute and on the second attribute.
- the association measure provides a method of associating various article identifiers so that they may be, for example, retrieved and/or ranked in subsequent search queries.
- the association measure may also be referred to as an association score or similarity measure.
- the process may approximate a method or association that a user would perform implicitly. In other words, a user may draft a word-processing document and send it to another user. The two events and the two articles, the word-processing document and email message, are related or associated from the user's perspective.
- the determination of the association measure may be performed in various ways.
- the indexer 130 may create the associations between articles and/or events associated with the articles, i.e., the indexer 130 may determine the associated events/articles during indexing and store that information in the data store 140 . The information can then be used at query time.
- the query system 132 generates association information at query time.
- part of the processing may be done by the indexer 130 at indexing time and part done by the query system 132 at query time.
- association-in-content scores may be computed at indexing time by the indexer 130
- association-in-time scores are computed at query time by the query system 132 . Association in time and association in content are described in further detail below.
- the attribute may comprise any of a number of attributes of the article associated with the article identifier or with events associated with the article.
- the association may be between attributes of the article. In one embodiment, the association is between attributes of events associated with the article.
- Each article may be associated with one or more events. For instance, one article may be associated with four events, which correspond to the user viewing the article at times t 1 , t 2 , t 3 , and printing the article at time t 4 .
- FIG. 2 is a flowchart illustrating a method of computing an association measure for an article pair in one embodiment of the present invention.
- the query system 132 receives a first article identifier 202 .
- the query system 132 may receive a first article identifier as part of a result set received in response to an explicit or implicit query submitted to a search engine.
- the query system 132 determines an attribute associated with the first article identifier 204 .
- the attribute may comprise, for example, source, metadata, or content attributes, including, for example, the creation time, content, or source of the article associated with the article identifier.
- Each article may be associated with one or more attributes directly or indirectly.
- Embodiments of the present invention may include event capture.
- an event may be captured when an email message is sent.
- the email message may comprise the article in such an embodiment.
- the email message or the associated event (e.g., sending the email message) may include attributes, such as the recipient of the email message, the time the email message was sent, the subject, the content, and other attributes. These attributes are stored with the event, and the query system 132 may make use of these attributes to search for associated events and articles associated with the events.
- Another event may be captured when an article comprising a word-processing document is printed. If the article is printed soon after the email message is received, the email message and word-processing document may be associated.
- the query system 132 receives a second article identifier 206 . For instance, by searching for events that occur near in time to an event associated with the first article. The query system then determines an attribute of the second article identifier 208 . For example, if the first attribute is a date-time attribute, the second attribute may be a date-time attribute as well. The query system 132 then calculates an association measure or for the pair of articles based on the attributes 210 . The association measure is a measure corresponding the similarity, relevancy, or other suitable measure indicating that two or more articles or events associated with the articles are associated. In the embodiment shown in FIG. 2 , the query system then stores the association measure with the identifiers of the two associated articles 212 .
- an email message may include the term “budget” in the subject line.
- a word-processing article may comprise the term “budget” fifty times in the text.
- the query system 132 determines that these articles are similar.
- the query system 132 performs the association calculation for each pair of articles.
- the indexer 130 may perform all or part of the computation instead of, or in addition to, the query system 132 .
- Articles may be associated because events associated with the articles occur nearby in time.
- the query system identifies a first article, article a, finds all events related to article a, and then for each event e does the following: scan the other events e i occurring nearby in time to event e, computes an association measure (e.g., an association score), and adds the association measure to a sum for the article associated with the other event e i .
- an association measure e.g., an association score
- events e 1 and e 2 are associated with article a
- events e 3 and e 4 are associated with article b.
- Event e 1 is nearby in time to e 3
- e 2 is nearby in time to e 4 .
- events e 5 and e 6 are related to article c, and they occur nearby in time to e 1 and e 2 but not as close in time as events e 3 and e 4 .
- the process of calculating the association score may be repeated for every article that is related to events nearby in time to events associated with the article of interest.
- the articles may be ranked by the association score.
- article b has an association score of 2
- article c has a score of 1.
- scores are determined for a plurality of associated articles, and only the top n (e.g., twenty) articles are displayed or otherwise considered.
- the associated articles may be combined with regular search results or they may be displayed separately, e.g., below each search result, to the right of the search results, or in the sidebar.
- the database is organized such that is easy and efficient to retrieve events that occur nearby in time, e.g., for a given event, the n events occurring before/after that event may be easily retrieved and the association score accordingly computed accordingly.
- the association measure is determined to be 1 if the time difference between two events is below a threshold. Otherwise, the association measure is determined to be 0.
- the association measure may vary linearly from 0 at a maximum time difference threshold, to a maximum of 1 at a difference of 0 in time.
- another suitable function is used, such as a polynomial, linear, piecewise linear, or exponential function. The association measure is higher for lower time differences and lower for higher time differences.
- association measures may be associated with events and types of events.
- an article may be associated with a bookmarking event and a viewing event.
- bookmarking an article may have a higher relevancy or interest score than viewing an article.
- the score derived in relation to these events may be combined with the time-difference score. For example, this score may be multiplied by the time difference score to arrive at the association measure.
- the article identifier is associated with an article, and the article includes a date and time on which the article was created, edited, loaded, viewed, saved, or otherwise acted upon, interacted with, or accessed or is associated with an event that includes one or more attributes.
- the query system 132 may use the date-time attributes to determine the association measure.
- the query system 132 may calculate the association measure by determining the difference between a date-time attribute associated with the first article identifier and a second date-time attribute associated with the second article identifier.
- two events, a and b, occurring at times t a and t b , and corresponding to two articles, a 1 and a 2 result in an association between a 1 and a 2 according to the difference in time, with smaller time differences receiving a higher association score.
- the association score for these two articles is summed over all occurrences of the articles in events.
- the articles may be stored in relation to multiple events and may be more or less associated with one another depending on the event. For instance, two articles may be printed one after another on a first day, resulting in a high association score. On another day, one may be printed in the morning and the second in the afternoon, resulting in a lower association score.
- the association score may be based on various attributes of the articles.
- the association score is based on the time attributes of the articles. For example, the association of a 1 to a 2 may be equal to the absolute value of the difference in the time attribute for each article, subtracted from a maximum time difference threshold, and divided by a normalization factor. If a 1 is printed at 9:00 am, and a 2 is printed at 9:15 am, the association score may be equal to 60 (maximum time difference threshold) minus 15 divided by the normalization factor, which may be equal to the maximum time difference threshold, e.g., 60, resulting in an association score of 0.75. In one embodiment, if the difference in the time attribute is greater than some maximum (e.g., one hour), the association score is set to zero. In other words, the articles are determined to be dissimilar based on the attribute.
- some maximum e.g., one hour
- Articles may be associated because attributes associated with the articles, such as the content (e.g., text), or content associated with events that are associated with the articles, is similar. Each article may be associated with one or more events, and the content may be different for different events. For example, an article a may have four events associated with it. Two of the events contain text t 1 , and two contain text t 2 ; article b is associated with one event containing text t 3 .
- the query system 132 , indexer 130 , or other program computes an association measure between articles a and b by comparing the text t 1 with t 3 and comparing text t 2 with t 3 . The results are then combined.
- the program creates a combined or average representation of article a by combining t 1 and t 2 to create combined text t 4 .
- the program compares t 3 and t 4 to create an association measure between articles a and b in terms of content.
- the content association measure is computed based on an event e without referring to the associated article.
- event e contains or is associated with text t
- text t can be used to locate associated events or associated articles without reference to the article associated with event e.
- the attributes comprise source or metadata attributes.
- the source or metadata attribute may comprise, for example, an author of an article associated with an article identifier, an organization, a physical location, or any other attribute that relates to the source of the article.
- the source or metadata attributes may alternatively be associated with events, which are associated with article identifiers.
- articles may be associated because they share the same author, the same to: field, the same recipient, etc.
- an association measure in metadata may be computed without reference to the article to which an event refers.
- the query system 132 computes a plurality of association measures between two articles based on a plurality of attributes.
- the plurality of association measures may be combined to create a combined association measure.
- the association measures for a pair of articles are normalized using a normalization factor to create a normalized association measure.
- the normalized association measure may increase the ease with which various article identifiers are ranked.
- the query system 132 can locate related articles or related events based on the association measures. For example, a user performs a search and is provided with a list of events. Each event is associated with an article. The query system 132 finds related articles based on the association measures, and presents the related articles to the user. The query system 132 may present articles to the user (e.g., file f), or events (e.g., file f was saved at time t). The query system 132 may present associated items for each individual result or may combine them into one list of associated items. For instanced, a search returns two events, which may each reference different articles. The query system 132 may show two sets of associated items or may create a combined list of items associated to the two events.
- the query system 132 may show two sets of associated items or may create a combined list of items associated to the two events.
- the query system 132 may also analyze “related event objects”, e.g., a sequence of messages in a conversation may be in a related event object and the related event object may be thought of as an “article”.
- related event objects e.g., a sequence of messages in a conversation may be in a related event object and the related event object may be thought of as an “article”.
- An article may be dissimilar (i.e., not associated) based on a first attribute and similar or associated based on a second attribute.
- two articles may comprise very similar content but never be accessed in close time proximity. Accordingly, the association scores for the first and second article that are related to content would be high and those related to time would be low.
- the articles may be related by other attributes, including for example, the source of the article.
- the source may be the author, location, organization, or some other attribute that describes how or where the article was originated.
- the overall association score may be calculated as the sum of the various association scores.
- the overall association score may combine the individual association scores with different weights.
- the weights w 1 , w 2 , and w 3 may be set to specific values.
- the weights may be adjusted based on user interest measures, such as clickthrough. For example, if the user clicks on many articles that were presented to the user because of association in time, the weight for association in time may be increased.
- FIG. 3 is a flowchart illustrating a method of associative retrieval in one embodiment of the present invention.
- the query system 132 receives a search query 302 .
- the search query may be, for example, a keyword query and is a search query for events.
- the search query 132 may have been generated in response to various actions by the user 112 a or in response to some other activity on the client 102 a .
- the user 112 a may submit an explicit query that triggers the execution of the search query.
- the query system 132 submits the search query 132 to an event database, such as database 140 , to retrieve potentially related events 304 .
- the query system 132 receives a result set comprising one or more events that are related to the search query 306 .
- the query system 132 captures events.
- An event is printing a word-processing document; another example is sending an email message.
- Each of the events is associated with one or more articles.
- Each pair of articles may include an association score as described above in relation to FIG. 2 .
- the query system 132 locates one or more events that are related to each event in the result set 308 .
- the event(s) located by the query system may relate to the original event to a greater or lesser degree.
- the query system 132 computes a relevance score for each related event 210 .
- the relevance score is based on the association scores of the articles associated with the events.
- the query system 132 uses the relevance score to rank the events in the result set 312 .
- the query system 132 then generates displays the related events to the user 314 .
- An embodiment of the present invention may allow the user to retrieve associated content that would otherwise be difficult or impossible to retrieve as a group. For example, a user may spend several hours researching digital cameras. Later, the user wishes to review results from the searches. Since the searches were performed during a relatively contiguous period of time and related in article identifiers associated with digital cameras, the article identifiers would have high association measures. When the user performs the subsequent explicit query, the query system 132 uses the high association measures to present the user with the previous search results.
- the user specifies the period of time during which the queries of interest were performed and may also specify keywords. For example, the user may know that the “digital camera” queries were performed two days ago in the morning. The user provides this information to the query system 132 , which uses the information to identify events and associated article identifiers.
- the query system 132 executes a query based on the content attribute associated with an article identifier. For example, the query system 132 identifies an email message as related in time to an article that has been received in response to a search query. The query system 132 extracts the content from the email message and executes a search query using keywords from the content. The query system 132 provides the results of the search query to the user, either combined with the original results or in a separate list.
Abstract
Systems and methods for determining an article association measure are described. In one described method, a computer program receives a first article identifier associated with a first attribute and a second article identifier associated with a second attribute and determines a similarity measure of the first article identifier to the second article identifier based at least in part on the first attribute and on the second attribute. The similarity measure may provide a means for associating various article identifiers so that they may be, for example, retrieved and/or ranked in subsequent search queries.
Description
This application relates to U.S. patent application Ser. No. 10/882,059, filed herewith, titled “Systems and Methods for Associative Information Retrieval,” the entirety of which is incorporated herein by reference.
The present invention relates generally to systems and methods for information retrieval. The present invention relates particularly to systems and methods for determining an article association measure.
Conventional search engines receive a search query from a user and execute a search against a global index. Such conventional search engines typically use one or more conventional methods for performing a search. For example, one known method, described in an article entitled “The Anatomy of a Large-Scale Hypertextual Search Engine,” by Sergey Brin and Lawrence Page, assigns a degree of importance to an article, such as a web page, based on the link structure of the web. The search results are often presented in a list format, comprising article identifiers and brief snippets about the articles in a web page that can be resized.
Often, a user mentally associates articles that the user accesses close in time, that comprise similar content, or that originate from similar sources. In conventional information retrieval systems, the user is often unable to retrieve the articles since the association between the articles that is of interest to the user may not be captured by the information retrieval system. For example, the conventional search engines are unlikely to capture the fact that a user has printed two articles in rapid succession.
Embodiments of the present invention provide systems and methods for determining an article association measure. In one embodiment of the present invention, a computer program receives a first article identifier associated with a first attribute and a second article identifier associated with a second attribute and determines an association measure of the first article identifier to the second article identifier based at least in part on the first attribute and on the second attribute. The association measure provides a means for associating various article identifiers so that they may be, for example, retrieved and/or ranked in subsequent search queries.
These illustrative embodiments are mentioned not to limit or define the invention, but to provide examples of embodiments of the invention to aid understanding thereof. Illustrative embodiments are discussed in the Detailed Description, and further description of the invention is provided there. Advantages offered by the various embodiments of the present invention may be further understood by examining this specification.
These and other features, aspects, and advantages of the present invention are better understood when the following Detailed Description is read with reference to the accompanying drawings, wherein:
Embodiments of the present invention provide systems and methods for determining an article association measure. Referring now to the drawings in which like numerals indicate like elements throughout the several figures, FIG. 1 is a block diagram illustrating an illustrative environment for implementation of an embodiment of the present invention. While the environment shown reflects a client-side search engine architecture embodiment, other embodiments are possible.
The system 100 shown in FIG. 1 includes multiple client devices 102 a-n in communication with a server device 150 over a wired or wireless network 106. The network 106 shown comprises the Internet. In other embodiments, other networks, such as an intranet, may be used instead. Moreover, methods according to the present invention may operate within a single client device.
The client devices 102 a-n shown each includes a computer-readable medium 108. The embodiment shown includes a random access memory (RAM) 108 coupled to a processor 110. The processor 110 executes computer-executable program instructions stored in memory 108. Such processors may include a microprocessor, an ASIC, a state machine, or other processor, and can be any of a number of computer processors, such as processors from Intel Corporation of Santa Clara, Calif. and Motorola Corporation of Schaumburg, Ill. Such processors include, or may be in communication with, media, for example computer-readable media, which stores instructions that, when executed by the processor, cause the processor to perform the steps described herein.
Embodiments of computer-readable media include, but are not limited to, an electronic, optical, magnetic, or other storage or transmission device capable of providing a processor, such as the processor 110 of client 102 a, with computer-readable instructions. Other examples of suitable media include, but are not limited to, a floppy disk, CD-ROM, DVD, magnetic disk, memory chip, ROM, RAM, an ASIC, a configured processor, all optical media, all magnetic tape or other magnetic media, or any other medium from which a computer processor can read instructions. Also, various other forms of computer-readable media may transmit or carry instructions to a computer, including a router, private or public network, or other transmission device or channel, both wired and wireless. The instructions may comprise code from any suitable computer-programming language, including, for example, C, C++, C#, Visual Basic, Java, Python, Perl, and JavaScript.
Client devices 102 a-n can be connected to a network 106 as shown, or can be stand-alone machines. Client devices 102 a-n may also include a number of external or internal devices such as a mouse, a CD-ROM, DVD, a keyboard, a display, or other input or output devices. Examples of client devices 102 a-n are personal computers, digital assistants, personal digital assistants, cellular phones, mobile phones, smart phones, pagers, digital tablets, laptop computers, Internet appliances, and other processor-based devices. In general, the client devices 102 a-n may be any type of processor-based platform that operates on any operating system, such as Microsoft® Windows® or Linux, capable of supporting one or more client application programs. For example, the client device 102 a shown comprises a personal computer executing client application programs, also known as client applications 120. The client applications 120 can be contained in memory 108 and can include, for example, a word processing application, a spreadsheet application, an e-mail application, an instant messenger application, a presentation application, an Internet browser application, a calendar/organizer application, and any other application capable of being executed by a client device.
The user 112 a can interact with the various client applications 120 and articles associated with the client applications 120 via various input and output devices of the client device 102 a. Articles include, for example, word processor, spreadsheet, presentation, e-mail, instant messenger, database, and other client application program content files or groups of files, web pages of various formats, such as Hypertext Markup Language (HTML), eXtensible Markup Language (XML), eXtensible Hypertext Markup Language (XHTML), Portable Document Format (PDF) files, and audio files, video files, or any other documents or groups of documents or information of any type whatsoever.
The memory 108 of the client device 102 a shown also contains a capture processor 124, a queue 126, and a search engine 122. The client device 102 a shown also contains or is in communication with a data store 140. The search engine 122 can receive an explicit query from the user 112 a or generate an implicit query and retrieve information from the data store 140 in response to the query.
The search engine 122 shown contains an indexer 130, a query system 132, and a formatter 134. Events and performance data can be sent by the queue 126 to the query system 132 to provide the query system 132 with information concerning current user context. The query system 132 can use this information to generate an implicit query. The query system 132 can also receive and process explicit queries from the user 112 a.
The data store 140 can be any type of computer-readable media and can be integrated with the client device 102 a, such as a hard drive, or external to the client device 102 a, such as an external hard drive or on another data storage device accessed through the network 106. The data store 140 may include any one or combination of methods for storing data, including without limitation, arrays, hash tables, lists, and pairs.
In the embodiment shown in FIG. 1 , a user 112 a can input an explicit query into a search engine interface displayed on the client device 102 a, which is received by the search engine 122. The search engine 122 can also generate an implicit query based on a current user context or state, which can be determined by the query system 132 from contextual real time events. Based on the query, the query system 132 can locate relevant information in the data store 140 and provide a result set. In one embodiment, the result set comprises article identifiers identifying articles associated with the client applications 120 or client articles. Client articles stored in the data store 140 include articles associated with the user 112 a or client device 102 a, such as word-processing documents, previously viewed web pages and any other article associated with the client device 102 a or user 112 a. In another embodiment, the result set also comprises identifiers identifying articles located on the network 106 or network articles located by a search engine on a server device. Network articles include articles located on the network 106 not previously viewed or otherwise referenced by the user 112 a, such as web pages not previously viewed by the user 112 a.
The result sets comprise one or more article identifiers. An article identifier may be, for example, a Uniform Resource Locator (URL), a file name, a link, an icon, a path for a local file, or anything else that identifies an article. In the embodiment shown, an article identifier comprises a URL associated with an article.
Messaging articles stored in the data store 140 include user's emails, chat messages, and instant messaging messages. Each time a message is received, sent, modified, printed, or otherwise accessed, a record is stored in the data store 140. This information can later be searched to identify messages that should be displayed in the user interface.
An embodiment of the present invention may also store message threads in the data store 140. In such an embodiment, messages are related together by various attributes, including, for example, the sender, recipient, date/time sent and received, the subject, the content, or any other attribute of the message. The related messages can then be retrieved as a thread, which may be treated as a document by the display processor 128.
The data store 140 comprises a local index. The local index in the embodiment shown in FIG. 1 may comprise information, such as articles, which are associated with the client device 102 a, a user 112 a of the client device 102 a, or a group of users of the client device 102 a. For example, the local index in the data store 140 shown in FIG. 1 may comprise an index of articles created, edited, received, or stored by the client user 112 a using the client machine 102 a, or articles otherwise associated with the client user 102 a or the client machine 112 a. The local index may be stored in a client machine, such as in data store 140, in a data store on a local network in a manner accessible by the client machine, on a server accessible to the client machine through the Internet, or in another accessible location.
In contrast, a global index may comprise information relevant to many users or many servers, such as, for example, an index of web pages located on multiple servers in communication with the World Wide Web. One example of a global index is an index used by the Google™ search engine to provide search results in response to a search query.
A single index may comprise both a local and a global index. For example, in one embodiment, an index may comprise both local and global information, and include a user or client identifier with the local information so that it may be identified with the user(s) or client(s) to which it pertains. Moreover, an index, local or global, may be present in one or multiple logical or physical locations.
The formatter 134 can receive the search result set from the query system 132 of the search engine 122 and can format the results for output to a display processor 128. In one embodiment, the formatter 134 formats the results in XML or HTML. The display processor 128 can be contained in memory 108 and can control the display of the result set on a display device associated with the client device 102 a. The display processor 128 may comprise various components. For example, in one embodiment, the display processor 128 comprises a Hypertext Transfer Protocol (HTTP) server that receives requests for information and responds by constructing and transmitting HTML pages. In one such embodiment, the HTTP server comprises a scaled-down version of the Apache Web server. In various embodiments, the functions described herein may be performed by various other components and devices.
Through the client devices 102 a-n, users 112 a-n can communicate over the network 106, with each other and with other systems and devices coupled to the network 106. As shown in FIG. 1 , a server device 150 is also coupled to the network 106. In the embodiment shown, the search engine 122 can transmit a search query comprised of an explicit or implicit query or both to the server device 150. The user 112 a can also enter a search query in a search engine interface, which can be transmitted to the server device 150. In another embodiment, the query signal may instead be sent to a proxy server (not shown), which then transmits the query signal to server device 150. Other configurations are also possible.
The server device 150 shown includes a server executing a search engine application program, such as the Google™ search engine. Similar to the client devices 102 a-n, the server device 150 shown includes a processor 160 coupled to a computer-readable memory 162. Server device 150, depicted as a single computer system, may be implemented as a network of computer processors. Examples of a server device 150 are servers, mainframe computers, networked computers, a processor-based device, and similar types of systems and devices. The server processor 160 can be any of a number of computer processors, such as processors from Intel Corporation of Santa Clara, Calif. and Motorola Corporation of Schaumburg, Ill.
In the embodiment shown, the server device 150, or related device, has previously performed a crawl of the network 106 to locate articles, such as web pages, stored at other devices or systems connected to the network 106, and indexed the articles in memory 162 or on another data storage device.
It should be noted that embodiments of the present invention may comprise systems having different architecture than that which is shown in FIG. 1 . For example, in some systems according to the present invention, server device 150 may comprise a single physical or logical server, or there may be no server device. The system 100 shown in FIG. 1 is merely illustrative, and is used to explain the illustrative methods shown in FIGS. 2 and 3 .
Various methods may be implemented in the environment shown in FIG. 1 and other environments, according to the present invention. Methods according to the present invention may be implemented by, for example, a processor-executable program code stored on a computer-readable medium.
In one embodiment of the present invention, a computer program, such as the query system 132, receives a first article identifier associated with a first attribute and a second article identifier associated with a second attribute and determines an association measure of the first article identifier to the second article identifier based at least in part on the first attribute and on the second attribute. The association measure provides a method of associating various article identifiers so that they may be, for example, retrieved and/or ranked in subsequent search queries. The association measure may also be referred to as an association score or similarity measure. The process may approximate a method or association that a user would perform implicitly. In other words, a user may draft a word-processing document and send it to another user. The two events and the two articles, the word-processing document and email message, are related or associated from the user's perspective.
The determination of the association measure may be performed in various ways. For example, the indexer 130 may create the associations between articles and/or events associated with the articles, i.e., the indexer 130 may determine the associated events/articles during indexing and store that information in the data store 140. The information can then be used at query time. In another embodiment, the query system 132 generates association information at query time. Alternatively, part of the processing may be done by the indexer 130 at indexing time and part done by the query system 132 at query time. For example, in one embodiment, association-in-content scores may be computed at indexing time by the indexer 130, while association-in-time scores are computed at query time by the query system 132. Association in time and association in content are described in further detail below.
The attribute may comprise any of a number of attributes of the article associated with the article identifier or with events associated with the article. The association may be between attributes of the article. In one embodiment, the association is between attributes of events associated with the article. Each article may be associated with one or more events. For instance, one article may be associated with four events, which correspond to the user viewing the article at times t1, t2, t3, and printing the article at time t4.
The query system 132 determines an attribute associated with the first article identifier 204. The attribute may comprise, for example, source, metadata, or content attributes, including, for example, the creation time, content, or source of the article associated with the article identifier.
Each article may be associated with one or more attributes directly or indirectly. Embodiments of the present invention may include event capture.
As one example, an event may be captured when an email message is sent. The email message may comprise the article in such an embodiment. The email message or the associated event (e.g., sending the email message) may include attributes, such as the recipient of the email message, the time the email message was sent, the subject, the content, and other attributes. These attributes are stored with the event, and the query system 132 may make use of these attributes to search for associated events and articles associated with the events. Another event may be captured when an article comprising a word-processing document is printed. If the article is printed soon after the email message is received, the email message and word-processing document may be associated.
The query system 132 receives a second article identifier 206. For instance, by searching for events that occur near in time to an event associated with the first article. The query system then determines an attribute of the second article identifier 208. For example, if the first attribute is a date-time attribute, the second attribute may be a date-time attribute as well. The query system 132 then calculates an association measure or for the pair of articles based on the attributes 210. The association measure is a measure corresponding the similarity, relevancy, or other suitable measure indicating that two or more articles or events associated with the articles are associated. In the embodiment shown in FIG. 2 , the query system then stores the association measure with the identifiers of the two associated articles 212.
For example, an email message may include the term “budget” in the subject line. A word-processing article may comprise the term “budget” fifty times in the text. The query system 132 determines that these articles are similar. The query system 132 performs the association calculation for each pair of articles. In alternative embodiments, the indexer 130 may perform all or part of the computation instead of, or in addition to, the query system 132.
Articles may be associated because events associated with the articles occur nearby in time. For example, in one embodiment, the query system identifies a first article, article a, finds all events related to article a, and then for each event e does the following: scan the other events ei occurring nearby in time to event e, computes an association measure (e.g., an association score), and adds the association measure to a sum for the article associated with the other event ei. For instance, events e1 and e2 are associated with article a, and events e3 and e4 are associated with article b. Event e1 is nearby in time to e3, and e2 is nearby in time to e4. If the score for the time difference in each case is 1, article b would have an association score of 1+1=2 for its association with article a. Similarly, if events e5 and e6 are related to article c, and they occur nearby in time to e1 and e2 but not as close in time as events e3 and e4. The score for the time difference may be less, e.g., the score for the time difference between e1 and e3 and between e2 and e4 is 0.5, then, the association score for article c with respect to article a is 0.5+0.5=1.
The process of calculating the association score may be repeated for every article that is related to events nearby in time to events associated with the article of interest. In one embodiment, the articles may be ranked by the association score. In the example above, for article a, article b has an association score of 2 and article c has a score of 1. In one embodiment, scores are determined for a plurality of associated articles, and only the top n (e.g., twenty) articles are displayed or otherwise considered. The associated articles may be combined with regular search results or they may be displayed separately, e.g., below each search result, to the right of the search results, or in the sidebar. The database is organized such that is easy and efficient to retrieve events that occur nearby in time, e.g., for a given event, the n events occurring before/after that event may be easily retrieved and the association score accordingly computed accordingly.
In one embodiment, the association measure is determined to be 1 if the time difference between two events is below a threshold. Otherwise, the association measure is determined to be 0. In another embodiment, the association measure may vary linearly from 0 at a maximum time difference threshold, to a maximum of 1 at a difference of 0 in time. In yet another embodiment, another suitable function is used, such as a polynomial, linear, piecewise linear, or exponential function. The association measure is higher for lower time differences and lower for higher time differences.
Other association measures may be associated with events and types of events. For example, an article may be associated with a bookmarking event and a viewing event. In one embodiment, bookmarking an article may have a higher relevancy or interest score than viewing an article. The score derived in relation to these events may be combined with the time-difference score. For example, this score may be multiplied by the time difference score to arrive at the association measure.
For example, the article identifier is associated with an article, and the article includes a date and time on which the article was created, edited, loaded, viewed, saved, or otherwise acted upon, interacted with, or accessed or is associated with an event that includes one or more attributes. The query system 132 may use the date-time attributes to determine the association measure. The query system 132 may calculate the association measure by determining the difference between a date-time attribute associated with the first article identifier and a second date-time attribute associated with the second article identifier.
In one embodiment, two events, a and b, occurring at times ta and tb, and corresponding to two articles, a1 and a2, result in an association between a1 and a2 according to the difference in time, with smaller time differences receiving a higher association score. The association score for these two articles is summed over all occurrences of the articles in events. The articles may be stored in relation to multiple events and may be more or less associated with one another depending on the event. For instance, two articles may be printed one after another on a first day, resulting in a high association score. On another day, one may be printed in the morning and the second in the afternoon, resulting in a lower association score.
The association score may be based on various attributes of the articles. In one embodiment, the association score is based on the time attributes of the articles. For example, the association of a1 to a2 may be equal to the absolute value of the difference in the time attribute for each article, subtracted from a maximum time difference threshold, and divided by a normalization factor. If a1 is printed at 9:00 am, and a2 is printed at 9:15 am, the association score may be equal to 60 (maximum time difference threshold) minus 15 divided by the normalization factor, which may be equal to the maximum time difference threshold, e.g., 60, resulting in an association score of 0.75. In one embodiment, if the difference in the time attribute is greater than some maximum (e.g., one hour), the association score is set to zero. In other words, the articles are determined to be dissimilar based on the attribute.
Articles may be associated because attributes associated with the articles, such as the content (e.g., text), or content associated with events that are associated with the articles, is similar. Each article may be associated with one or more events, and the content may be different for different events. For example, an article a may have four events associated with it. Two of the events contain text t1, and two contain text t2; article b is associated with one event containing text t3. In one embodiment, the query system 132, indexer 130, or other program computes an association measure between articles a and b by comparing the text t1 with t3 and comparing text t2 with t3. The results are then combined. In another embodiment, the program creates a combined or average representation of article a by combining t1 and t2 to create combined text t4. The program then compares t3 and t4 to create an association measure between articles a and b in terms of content.
In one embodiment, the content association measure is computed based on an event e without referring to the associated article. For example, event e contains or is associated with text t, and text t can be used to locate associated events or associated articles without reference to the article associated with event e.
In yet another embodiment, the attributes comprise source or metadata attributes. The source or metadata attribute may comprise, for example, an author of an article associated with an article identifier, an organization, a physical location, or any other attribute that relates to the source of the article. The source or metadata attributes may alternatively be associated with events, which are associated with article identifiers. In one embodiment, articles may be associated because they share the same author, the same to: field, the same recipient, etc. As with content associations described above, an association measure in metadata may be computed without reference to the article to which an event refers.
In one embodiment of the present invention, the query system 132 computes a plurality of association measures between two articles based on a plurality of attributes. The plurality of association measures may be combined to create a combined association measure. In another embodiment, the association measures for a pair of articles are normalized using a normalization factor to create a normalized association measure. The normalized association measure may increase the ease with which various article identifiers are ranked.
Given one or more articles or one or more events, the query system 132 can locate related articles or related events based on the association measures. For example, a user performs a search and is provided with a list of events. Each event is associated with an article. The query system 132 finds related articles based on the association measures, and presents the related articles to the user. The query system 132 may present articles to the user (e.g., file f), or events (e.g., file f was saved at time t). The query system 132 may present associated items for each individual result or may combine them into one list of associated items. For instanced, a search returns two events, which may each reference different articles. The query system 132 may show two sets of associated items or may create a combined list of items associated to the two events.
In another embodiment, the query system 132 may also analyze “related event objects”, e.g., a sequence of messages in a conversation may be in a related event object and the related event object may be thought of as an “article”.
An article may be dissimilar (i.e., not associated) based on a first attribute and similar or associated based on a second attribute. For example, two articles may comprise very similar content but never be accessed in close time proximity. Accordingly, the association scores for the first and second article that are related to content would be high and those related to time would be low. The articles may be related by other attributes, including for example, the source of the article. The source may be the author, location, organization, or some other attribute that describes how or where the article was originated. The overall association score may be calculated as the sum of the various association scores.
The overall association score may combine the individual association scores with different weights. For example, in one embodiment, the overall association measure is calculated as follows: overall association=w1*time_association+w2*content association+w3*metadata_association. The weights w1, w2, and w3 may be set to specific values. In an alternative embodiment, the weights may be adjusted based on user interest measures, such as clickthrough. For example, if the user clicks on many articles that were presented to the user because of association in time, the weight for association in time may be increased.
As described herein in relation to FIG. 1 , the query system 132 captures events. One example of an event is printing a word-processing document; another example is sending an email message. Each of the events is associated with one or more articles. Each pair of articles may include an association score as described above in relation to FIG. 2 .
Referring still to FIG. 3 , the query system 132 locates one or more events that are related to each event in the result set 308. The event(s) located by the query system may relate to the original event to a greater or lesser degree. In order to determine the relevance, the query system 132 computes a relevance score for each related event 210. The relevance score is based on the association scores of the articles associated with the events. The query system 132 uses the relevance score to rank the events in the result set 312. The query system 132 then generates displays the related events to the user 314.
An embodiment of the present invention may allow the user to retrieve associated content that would otherwise be difficult or impossible to retrieve as a group. For example, a user may spend several hours researching digital cameras. Later, the user wishes to review results from the searches. Since the searches were performed during a relatively contiguous period of time and related in article identifiers associated with digital cameras, the article identifiers would have high association measures. When the user performs the subsequent explicit query, the query system 132 uses the high association measures to present the user with the previous search results.
In one embodiment, the user specifies the period of time during which the queries of interest were performed and may also specify keywords. For example, the user may know that the “digital camera” queries were performed two days ago in the morning. The user provides this information to the query system 132, which uses the information to identify events and associated article identifiers.
In one embodiment of the present invention, the query system 132 executes a query based on the content attribute associated with an article identifier. For example, the query system 132 identifies an email message as related in time to an article that has been received in response to a search query. The query system 132 extracts the content from the email message and executes a search query using keywords from the content. The query system 132 provides the results of the search query to the user, either combined with the original results or in a separate list.
The foregoing description of embodiments of the invention has been presented only for the purpose of illustration and description and is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Numerous modifications and adaptations thereof will be apparent to those skilled in the art without departing from the spirit and scope of the present invention.
Claims (20)
1. A method comprising:
capturing a plurality of events, wherein the events comprise user interactions with articles on a client device, and wherein the captured events are generated by user interactions involving multiple ones of the plurality of client applications;
receiving a first article identifier identifying a first article and associated with a first date-time attribute, the first date-time attribute associated with a first one of the plurality of events;
receiving a second article identifier identifying a second article and associated with a second date-time attribute, the second date-time attribute associated with a second one of the plurality of events; and
determining an association measure of the first article identifier to the second article identifier based at least in part on the first date-time attribute and on the second date-time attribute, the determining comprising:
determining a difference between the first date-time attribute and the second date-time attribute,
comparing the difference to a threshold,
setting the association measure equal to a first value if the difference exceeds the threshold, and
setting the association measure equal to a second value if the difference does not exceed the threshold.
2. The method of claim 1 , wherein the difference is inversely proportional to the association measure.
3. The method of claim 1 , wherein the association measure comprises a plurality of association measures, and further comprising combining the plurality of association measures to create a combined association measure.
4. The method of claim 1 , further comprising normalizing the association measure to create a normalized association measure.
5. The method of claim 1 , wherein the association measure is one of a linear, piecewise, or exponential function, wherein the measure indicates higher association for smaller differences.
6. The method of claim 1 , wherein the first article identifier is further associated with a first content attribute and the second article identifier is further associated with a second content attribute, the method further comprising determining the association measure of the first article identifier to the second article identifier based at least in part on the first content attribute and on the second content attribute.
7. The method of claim 1 , wherein the first article identifier is further associated with a first metadata attribute and the second article identifier is further associated with a second metadata attribute, the method further comprising determining the association measure of the first article identifier to the second article identifier based at least in part on the first metadata attribute and on the second metadata attribute.
8. The method of claim 1 , wherein the association score is determined by an indexer as part of indexing and applied as part of execution of a query.
9. The method of claim 1 , wherein the association score is determined as part of execution of a query.
10. The method of claim 1 , further comprising:
receiving a query;
receiving search results as a result of query execution, the search results comprising the first article identifier and omitting the second article identifier;
identifying the second article identifier as being related to the first article identifier based at least in part on the association measure; and
displaying the second article identifier along with the received search results.
11. The method of claim 7 , wherein the first metadata attribute comprises an author.
12. The method of claim 7 , wherein the first metadata attribute comprises an organization.
13. The method of claim 3 , wherein combining the plurality of association measures to create the combined association measure comprises weighting each association measure according to a weight corresponding to a type of the association measure.
14. A non-transitory computer-readable storage medium on which is encoded program code, the program code comprising:
program code for capturing a plurality of events, wherein the events comprise user interactions with articles on a client device, and wherein the events are generated by user interactions involving multiple ones of the plurality of client applications;
program code for receiving a first article identifier identifying a first article and associated with a first date-time attribute, the first date-time attribute associated with a first one of the plurality of events;
program code for receiving a second article identifier identifying a second article and associated with a second date-time attribute, the second date-time attribute associated with a second one of the plurality of events; and
program code for determining an association measure of the first article identifier to the second article identifier based at least in part on the first date-time attribute and on the second date-time attribute, the determining comprising;
determining a difference between the first date-time attribute and the second date-time attribute,
comparing the difference to a threshold,
setting the association measure equal to a first value if the difference exceeds the threshold, and
setting the association measure equal to a second value if the difference does not exceed the threshold.
15. The computer-readable storage medium of claim 14 , wherein the association measure comprises a plurality of association measures, and further comprising program code for combining the plurality of association measures to create a combined association measure.
16. The computer-readable storage medium of claim 14 , further comprising program code for normalizing the association measure to create a normalized association measure.
17. A computer system, comprising:
a computer processor; and
a non-transitory computer-readable medium storing processor-executable program instructions that when executed by the processor perform actions comprising:
capturing a plurality of events, wherein the events comprise user interactions with articles on a client device, and wherein the captured events are generated by user interactions involving multiple ones of the plurality of client applications;
receiving a first article identifier identifying a first article and associated with a first date-time attribute, the first date-time attribute associated with a first one of the plurality of events;
receiving a second article identifier identifying a second article and associated with a second date-time attribute, the second date-time attribute associated with a second one of the plurality of events; and
determining an association measure of the first article identifier to the second article identifier based at least in part on the first date-time attribute and on the second date-time attribute, the determining comprising:
determining a difference between the first date-time attribute and the second date-time attribute, comparing the difference to a threshold, setting the association measure equal to a first value if the difference exceeds the threshold, and setting the association measure equal to a second value if the difference does not exceed the threshold.
18. The computer system of claim 17 , wherein the first article identifier is further associated with a first content attribute and the second article identifier is further associated with a second content attribute, the actions further comprising determining the association measure of the first article identifier to the second article identifier based at least in part on the first content attribute and on the second content attribute.
19. The computer system of claim 17 , wherein the first article identifier is further associated with a first metadata attribute and the second article identifier is further associated with a second metadata attribute, the actions further comprising determining the association measure of the first article identifier to the second article identifier based at least in part on the first metadata attribute and on the second metadata attribute.
20. The computer system of claim 19 , wherein the first metadata attribute comprises an author.
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/882,066 US8131754B1 (en) | 2004-06-30 | 2004-06-30 | Systems and methods for determining an article association measure |
US13/360,593 US8667013B1 (en) | 2004-06-30 | 2012-01-27 | Systems and methods for determining an article association measure |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/882,066 US8131754B1 (en) | 2004-06-30 | 2004-06-30 | Systems and methods for determining an article association measure |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/360,593 Continuation US8667013B1 (en) | 2004-06-30 | 2012-01-27 | Systems and methods for determining an article association measure |
Publications (1)
Publication Number | Publication Date |
---|---|
US8131754B1 true US8131754B1 (en) | 2012-03-06 |
Family
ID=45758020
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/882,066 Expired - Fee Related US8131754B1 (en) | 2004-06-30 | 2004-06-30 | Systems and methods for determining an article association measure |
US13/360,593 Expired - Fee Related US8667013B1 (en) | 2004-06-30 | 2012-01-27 | Systems and methods for determining an article association measure |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/360,593 Expired - Fee Related US8667013B1 (en) | 2004-06-30 | 2012-01-27 | Systems and methods for determining an article association measure |
Country Status (1)
Country | Link |
---|---|
US (2) | US8131754B1 (en) |
Cited By (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120215792A1 (en) * | 2011-02-18 | 2012-08-23 | Hon Hai Precision Industry Co., Ltd. | Electronic device and method for searching related terms |
US20130104026A1 (en) * | 2011-10-20 | 2013-04-25 | Aol Inc. | Systems and methods for web site customization based on time-of-day |
US20140259133A1 (en) * | 2013-03-05 | 2014-09-11 | Vodafone Ip Licensing Limited | Method for Anonymously Associating Measurement Device Measurements to a Source ID |
Families Citing this family (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10331679B2 (en) | 2015-10-30 | 2019-06-25 | At&T Intellectual Property I, L.P. | Method and apparatus for providing a recommendation for learning about an interest of a user |
Citations (152)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5418948A (en) | 1991-10-08 | 1995-05-23 | West Publishing Company | Concept matching of natural language queries with a database of document concepts |
US5678038A (en) | 1994-06-21 | 1997-10-14 | International Business Machines Corporation | Storing and retrieving heterogeneous classification systems utilizing globally unique identifiers |
US5696962A (en) | 1993-06-24 | 1997-12-09 | Xerox Corporation | Method for computerized information retrieval using shallow linguistic analysis |
US5701469A (en) | 1995-06-07 | 1997-12-23 | Microsoft Corporation | Method and system for generating accurate search results using a content-index |
US5717913A (en) | 1995-01-03 | 1998-02-10 | University Of Central Florida | Method for detecting and extracting text data using database schemas |
US5754938A (en) | 1994-11-29 | 1998-05-19 | Herz; Frederick S. M. | Pseudonymous server for system for customized electronic identification of desirable objects |
US5796393A (en) | 1996-11-08 | 1998-08-18 | Compuserve Incorporated | System for intergrating an on-line service community with a foreign service |
US5826261A (en) | 1996-05-10 | 1998-10-20 | Spencer; Graham | System and method for querying multiple, distributed databases by selective sharing of local relative significance information for terms related to the query |
US5890152A (en) | 1996-09-09 | 1999-03-30 | Seymour Alvin Rapaport | Personal feedback browser for obtaining media files |
US5911139A (en) | 1996-03-29 | 1999-06-08 | Virage, Inc. | Visual image database search engine which allows for different schema |
US5933827A (en) | 1996-09-25 | 1999-08-03 | International Business Machines Corporation | System for identifying new web pages of interest to a user |
US5940821A (en) | 1997-05-21 | 1999-08-17 | Oracle Corporation | Information presentation in a knowledge base search and retrieval system |
US5964839A (en) | 1996-03-29 | 1999-10-12 | At&T Corp | System and method for monitoring information flow and performing data collection |
US5987446A (en) | 1996-11-12 | 1999-11-16 | U.S. West, Inc. | Searching large collections of text using multiple search engines concurrently |
US6006222A (en) | 1997-04-25 | 1999-12-21 | Culliss; Gary | Method for organizing information |
US6012067A (en) | 1998-03-02 | 2000-01-04 | Sarkar; Shyam Sundar | Method and apparatus for storing and manipulating objects in a plurality of relational data managers on the web |
US6014665A (en) | 1997-08-01 | 2000-01-11 | Culliss; Gary | Method for organizing information |
US6070158A (en) | 1996-08-14 | 2000-05-30 | Infoseek Corporation | Real-time document collection search engine with phrase indexing |
USRE36727E (en) | 1989-12-26 | 2000-06-06 | Kageneck; Karl-Erbo G. | Method of indexing and retrieval of electronically-stored documents |
US6078916A (en) | 1997-08-01 | 2000-06-20 | Culliss; Gary | Method for organizing information |
US6112203A (en) | 1998-04-09 | 2000-08-29 | Altavista Company | Method for ranking documents in a hyperlinked environment using connectivity and selective content analysis |
US6122647A (en) | 1998-05-19 | 2000-09-19 | Perspecta, Inc. | Dynamic generation of contextual links in hypertext documents |
US6167434A (en) | 1998-07-15 | 2000-12-26 | Pang; Stephen Y. | Computer code for removing junk e-mail messages |
US6182068B1 (en) | 1997-08-01 | 2001-01-30 | Ask Jeeves, Inc. | Personalized search methods |
US6199059B1 (en) | 1998-04-22 | 2001-03-06 | International Computex, Inc. | System and method for classifying and retrieving information with virtual object hierarchy |
US6272507B1 (en) | 1997-04-09 | 2001-08-07 | Xerox Corporation | System for ranking search results from a collection of documents using spreading activation techniques |
US20010037328A1 (en) | 2000-03-23 | 2001-11-01 | Pustejovsky James D. | Method and system for interfacing to a knowledge acquisition system |
US20010037377A1 (en) | 2000-04-27 | 2001-11-01 | Yumiko Nakano | Information searching apparatus and method |
US6321228B1 (en) | 1999-08-31 | 2001-11-20 | Powercast Media, Inc. | Internet search system for retrieving selected results from a previous search |
US20020016786A1 (en) | 1999-05-05 | 2002-02-07 | Pitkow James B. | System and method for searching and recommending objects from a categorically organized information repository |
US20020040311A1 (en) | 2000-10-04 | 2002-04-04 | John Douglass | Web browser page rating system |
US20020059272A1 (en) | 2000-04-20 | 2002-05-16 | Porter Edward W. | Apparatuses, methods, programming, and propagated signals for creating, editing, organizing and viewing collaborative databases |
US6397221B1 (en) | 1998-09-12 | 2002-05-28 | International Business Machines Corp. | Method for creating and maintaining a frame-based hierarchically organized databases with tabularly organized data |
US20020065800A1 (en) | 2000-11-30 | 2002-05-30 | Morlitz David M. | HTTP archive file |
US20020069194A1 (en) | 2000-12-06 | 2002-06-06 | Robbins Benjamin Jon | Client based online content meta search |
US6421675B1 (en) | 1998-03-16 | 2002-07-16 | S. L. I. Systems, Inc. | Search engine |
US20020095427A1 (en) | 2000-11-09 | 2002-07-18 | Kaplan Ari David | System, method and apparatus for the wireless monitoring and management of computer systems |
US20020099700A1 (en) | 1999-12-14 | 2002-07-25 | Wen-Syan Li | Focused search engine and method |
US20020103698A1 (en) | 2000-10-31 | 2002-08-01 | Christian Cantrell | System and method for enabling user control of online advertising campaigns |
US20020103737A1 (en) | 2000-09-07 | 2002-08-01 | Briere Daniel D. | Marketing collateral repository and supporting data management and communication environment |
US20020103806A1 (en) | 2000-10-18 | 2002-08-01 | Masafumi Yamanoue | Data supply controlling device, data supplying method, storage medium for data supplying program, and data supplying system |
US20020116291A1 (en) | 2000-12-22 | 2002-08-22 | Xerox Corporation | Recommender system and method |
US20020129059A1 (en) | 2000-12-29 | 2002-09-12 | Eck Jeffery R. | XML auto map generator |
US6460036B1 (en) * | 1994-11-29 | 2002-10-01 | Pinpoint Incorporated | System and method for providing customized electronic newspapers and target advertisements |
US6473752B1 (en) | 1997-12-04 | 2002-10-29 | Micron Technology, Inc. | Method and system for locating documents based on previously accessed documents |
US6484164B1 (en) | 2000-03-29 | 2002-11-19 | Koninklijke Philips Electronics N.V. | Data search user interface with ergonomic mechanism for user profile definition and manipulation |
US20020174101A1 (en) | 2000-07-12 | 2002-11-21 | Fernley Helen Elaine Penelope | Document retrieval system |
US6490575B1 (en) | 1999-12-06 | 2002-12-03 | International Business Machines Corporation | Distributed network search engine |
US6505191B1 (en) * | 1998-07-24 | 2003-01-07 | Jarg Corporation | Distributed computer database system and method employing hypertext linkage analysis |
US20030014398A1 (en) | 2001-06-29 | 2003-01-16 | Hitachi, Ltd. | Query modification system for information retrieval |
US20030020749A1 (en) | 2001-07-10 | 2003-01-30 | Suhayya Abu-Hakima | Concept-based message/document viewer for electronic communications and internet searching |
US20030033296A1 (en) * | 2000-01-31 | 2003-02-13 | Kenneth Rothmuller | Digital media management apparatus and methods |
US20030046311A1 (en) | 2001-06-19 | 2003-03-06 | Ryan Baidya | Dynamic search engine and database |
US6546388B1 (en) | 2000-01-14 | 2003-04-08 | International Business Machines Corporation | Metadata search results ranking system |
US20030069877A1 (en) | 2001-08-13 | 2003-04-10 | Xerox Corporation | System for automatically generating queries |
US20030079185A1 (en) | 1998-10-09 | 2003-04-24 | Sanjeev Katariya | Method and system for generating a document summary |
US20030093790A1 (en) | 2000-03-28 | 2003-05-15 | Logan James D. | Audio and video program recording, editing and playback systems using metadata |
US20030093276A1 (en) | 2001-11-13 | 2003-05-15 | Miller Michael J. | System and method for automated answering of natural language questions and queries |
US6571234B1 (en) | 1999-05-11 | 2003-05-27 | Prophet Financial Systems, Inc. | System and method for managing online message board |
US6581056B1 (en) | 1996-06-27 | 2003-06-17 | Xerox Corporation | Information retrieval system providing secondary content analysis on collections of information objects |
US20030115552A1 (en) | 2001-11-27 | 2003-06-19 | Jorg Jahnke | Method and system for automatic creation of multilingual immutable image files |
US6583798B1 (en) | 2000-07-21 | 2003-06-24 | Microsoft Corporation | On-object user interface |
US6587856B1 (en) | 1998-12-07 | 2003-07-01 | Oracle International Corporation | Method and system for representing and accessing object-oriented data in a relational database system |
US20030123443A1 (en) | 1999-04-01 | 2003-07-03 | Anwar Mohammed S. | Search engine with user activity memory |
US20030130982A1 (en) | 2002-01-09 | 2003-07-10 | Stephane Kasriel | Web-site analysis system |
US20030135490A1 (en) | 2002-01-15 | 2003-07-17 | Barrett Michael E. | Enhanced popularity ranking |
US20030135499A1 (en) | 2002-01-14 | 2003-07-17 | Schirmer Andrew Lewis | System and method for mining a user's electronic mail messages to determine the user's affinities |
US6602300B2 (en) | 1998-02-03 | 2003-08-05 | Fujitsu Limited | Apparatus and method for retrieving data from a document database |
US20030154071A1 (en) | 2002-02-11 | 2003-08-14 | Shreve Gregory M. | Process for the document management and computer-assisted translation of documents utilizing document corpora constructed by intelligent agents |
US20030158855A1 (en) * | 2002-02-20 | 2003-08-21 | Farnham Shelly D. | Computer system architecture for automatic context associations |
US20030167266A1 (en) | 2001-01-08 | 2003-09-04 | Alexander Saldanha | Creation of structured data from plain text |
US6633868B1 (en) | 2000-07-28 | 2003-10-14 | Shermann Loyall Min | System and method for context-based document retrieval |
US20030208493A1 (en) | 2002-04-12 | 2003-11-06 | Hall Bradley S. | Object relational database management system |
US6651054B1 (en) | 1999-10-30 | 2003-11-18 | International Business Machines Corporation | Method, system, and program for merging query search results |
US20030220913A1 (en) | 2002-05-24 | 2003-11-27 | International Business Machines Corporation | Techniques for personalized and adaptive search services |
US6665666B1 (en) | 1999-10-26 | 2003-12-16 | International Business Machines Corporation | System, method and program product for answering questions using a search engine |
US20040003097A1 (en) | 2002-05-17 | 2004-01-01 | Brian Willis | Content delivery system |
US20040001104A1 (en) | 2002-06-28 | 2004-01-01 | Microsoft Corporation | Resource browser sessions search |
US6687704B1 (en) | 2000-08-31 | 2004-02-03 | Hewlett-Packard Development Company, L.P. | Database model system and method |
US20040030741A1 (en) | 2001-04-02 | 2004-02-12 | Wolton Richard Ernest | Method and apparatus for search, visual navigation, analysis and retrieval of information from networks with remote notification and content delivery |
US6697840B1 (en) | 2000-02-29 | 2004-02-24 | Lucent Technologies Inc. | Presence awareness in collaborative systems |
US6697799B1 (en) | 1999-09-10 | 2004-02-24 | Requisite Technology, Inc. | Automated classification of items using cascade searches |
US20040036716A1 (en) | 2002-06-12 | 2004-02-26 | Jordahl Jena J. | Data storage, retrieval, manipulation and display tools enabling multiple hierarchical points of view |
US20040059564A1 (en) | 2002-09-19 | 2004-03-25 | Ming Zhou | Method and system for retrieving hint sentences using expanded queries |
US20040064447A1 (en) | 2002-09-27 | 2004-04-01 | Simske Steven J. | System and method for management of synonymic searching |
US20040068486A1 (en) | 2002-10-02 | 2004-04-08 | Xerox Corporation | System and method for improving answer relevance in meta-search engines |
US20040073534A1 (en) * | 2002-10-11 | 2004-04-15 | International Business Machines Corporation | Method and apparatus for data mining to discover associations and covariances associated with data |
US6745178B1 (en) | 2000-04-28 | 2004-06-01 | International Business Machines Corporation | Internet based method for facilitating networking among persons with similar interests and for facilitating collaborative searching for information |
US20040122656A1 (en) | 2001-03-16 | 2004-06-24 | Eli Abir | Knowledge system method and appparatus |
US20040133560A1 (en) | 2003-01-07 | 2004-07-08 | Simske Steven J. | Methods and systems for organizing electronic documents |
US20040139106A1 (en) | 2002-12-31 | 2004-07-15 | International Business Machines Corporation | Search engine facility with automated knowledge retrieval generation and maintenance |
US6766320B1 (en) | 2000-08-24 | 2004-07-20 | Microsoft Corporation | Search engine with natural language-based robust parsing for user query and relevance feedback learning |
US20040143569A1 (en) | 2002-09-03 | 2004-07-22 | William Gross | Apparatus and methods for locating data |
US6772188B1 (en) | 2000-07-14 | 2004-08-03 | America Online, Incorporated | Method and apparatus for communicating with an entity automatically identified in an electronic communication |
US6778951B1 (en) | 2000-08-09 | 2004-08-17 | Concerto Software, Inc. | Information retrieval method with natural language interface |
US6785671B1 (en) | 1999-12-08 | 2004-08-31 | Amazon.Com, Inc. | System and method for locating web-based product offerings |
US6795825B2 (en) | 2000-09-12 | 2004-09-21 | Naphtali David Rishe | Database querying system and method |
US6803906B1 (en) | 2000-07-05 | 2004-10-12 | Smart Technologies, Inc. | Passive touch system and method of detecting user input |
US20040225667A1 (en) | 2003-03-12 | 2004-11-11 | Canon Kabushiki Kaisha | Apparatus for and method of summarising text |
US6820093B2 (en) | 1996-07-30 | 2004-11-16 | Hyperphrase Technologies, Llc | Method for verifying record code prior to an action based on the code |
US6820237B1 (en) | 2000-01-21 | 2004-11-16 | Amikanow! Corporation | Apparatus and method for context-based highlighting of an electronic document |
US6834287B1 (en) | 2001-03-14 | 2004-12-21 | Trilogy Development Group, Inc. | Classification engine for managing attribute-based data |
US20040267700A1 (en) | 2003-06-26 | 2004-12-30 | Dumais Susan T. | Systems and methods for personal ubiquitous information retrieval and reuse |
US20040267813A1 (en) | 2003-06-30 | 2004-12-30 | Rivers-Moore Jonathan E. | Declarative solution definition |
US20040267730A1 (en) | 2003-06-26 | 2004-12-30 | Microsoft Corporation | Systems and methods for performing background queries from content and activity |
US6850934B2 (en) | 2001-03-26 | 2005-02-01 | International Business Machines Corporation | Adaptive search engine query |
US6853998B2 (en) | 2001-02-07 | 2005-02-08 | International Business Machines Corporation | Customer self service subsystem for classifying user contexts |
US20050065909A1 (en) | 2003-08-05 | 2005-03-24 | Musgrove Timothy A. | Product placement engine and method |
US6874126B1 (en) | 2001-11-30 | 2005-03-29 | View Space Technologies | Method and apparatus for controlling content display by the cursor motion |
US20050114306A1 (en) | 2003-11-20 | 2005-05-26 | International Business Machines Corporation | Integrated searching of multiple search sources |
US20050125382A1 (en) | 2003-12-03 | 2005-06-09 | Microsoft Corporation | Search system using user behavior data |
US20050125390A1 (en) | 2003-12-03 | 2005-06-09 | Oliver Hurst-Hiller | Automated satisfaction measurement for web search |
US20050187920A1 (en) | 2004-01-23 | 2005-08-25 | Porto Ranelli, Sa | Contextual searching |
US20050198026A1 (en) | 2004-02-03 | 2005-09-08 | Dehlinger Peter J. | Code, system, and method for generating concepts |
US6948134B2 (en) | 2000-07-21 | 2005-09-20 | Microsoft Corporation | Integrated method for creating a refreshable Web Query |
US6950791B1 (en) | 2000-09-13 | 2005-09-27 | Antartica Systems, Inc. | Method for describing objects in a virtual space |
US20050222987A1 (en) | 2004-04-02 | 2005-10-06 | Vadon Eric R | Automated detection of associations between search criteria and item categories based on collective analysis of user activity data |
US6961910B2 (en) | 2000-02-17 | 2005-11-01 | International Business Machines Corporation | System for interacting with participants at a web site through an interactive visual proxy |
US6961954B1 (en) | 1997-10-27 | 2005-11-01 | The Mitre Corporation | Automated segmentation, information extraction, summarization, and presentation of broadcast news |
US6963830B1 (en) | 1999-07-19 | 2005-11-08 | Fujitsu Limited | Apparatus and method for generating a summary according to hierarchical structure of topic |
US20050262073A1 (en) | 1989-10-26 | 2005-11-24 | Michael Reed | Multimedia search system |
US6976053B1 (en) | 1999-10-14 | 2005-12-13 | Arcessa, Inc. | Method for using agents to create a computer index corresponding to the contents of networked computers |
US6976090B2 (en) | 2000-04-20 | 2005-12-13 | Actona Technologies Ltd. | Differentiated content and application delivery via internet |
US20060010150A1 (en) | 1999-05-18 | 2006-01-12 | Kom, Inc. | Method and System for Electronic File Lifecycle Management |
US7007085B1 (en) | 2001-09-28 | 2006-02-28 | Bellsouth Intellectual Property Corporation | Message log for wireline, voice mail, email, fax, pager, instant messages and chat |
US7022905B1 (en) | 1999-10-18 | 2006-04-04 | Microsoft Corporation | Classification of information and use of classifications in searching and retrieval of information |
US7027975B1 (en) | 2000-08-08 | 2006-04-11 | Object Services And Consulting, Inc. | Guided natural language interface system and method |
US7032174B2 (en) | 2001-03-27 | 2006-04-18 | Microsoft Corporation | Automatically adding proper names to a database |
US7039650B2 (en) | 2002-05-31 | 2006-05-02 | Sypherlink, Inc. | System and method for making multiple databases appear as a single database |
US7043492B1 (en) | 2001-07-05 | 2006-05-09 | Requisite Technology, Inc. | Automated classification of items using classification mappings |
US7054870B2 (en) | 2000-11-15 | 2006-05-30 | Kooltorch, Llc | Apparatus and methods for organizing and/or presenting data |
US7054860B2 (en) | 2000-06-02 | 2006-05-30 | Hitachi, Ltd. | Method and system for retrieving a document and computer readable storage medium |
US7062442B2 (en) | 2001-02-23 | 2006-06-13 | Popcatcher Ab | Method and arrangement for search and recording of media signals |
US20060136405A1 (en) | 2003-01-24 | 2006-06-22 | Ducatel Gary M | Searching apparatus and methods |
US7082428B1 (en) | 2002-09-16 | 2006-07-25 | Bellsouth Intellectual Property Corporation | Systems and methods for collaborative searching |
US7099860B1 (en) | 2000-10-30 | 2006-08-29 | Microsoft Corporation | Image retrieval systems and methods with semantic and feature based relevance feedback |
US7146399B2 (en) | 2001-05-25 | 2006-12-05 | 2006 Trident Company | Run-time architecture for enterprise integration with transformation generation |
US7171352B2 (en) | 2004-04-23 | 2007-01-30 | Microsoft Corporation | Linguistic object model |
US7181459B2 (en) | 1999-05-04 | 2007-02-20 | Iconfind, Inc. | Method of coding, categorizing, and retrieving network pages and sites |
US7194485B2 (en) | 2003-11-21 | 2007-03-20 | International Business Machines Corporation | Mapping XML schema components to qualified java components |
US7194455B2 (en) | 2002-09-19 | 2007-03-20 | Microsoft Corporation | Method and system for retrieving confirming sentences |
US7231395B2 (en) | 2002-05-24 | 2007-06-12 | Overture Services, Inc. | Method and apparatus for categorizing and presenting documents of a distributed database |
US7293014B2 (en) | 2001-06-18 | 2007-11-06 | Siebel Systems, Inc. | System and method to enable searching across multiple databases and files using a single search |
US7293015B2 (en) | 2002-09-19 | 2007-11-06 | Microsoft Corporation | Method and system for detecting user intentions in retrieval of hint sentences |
US7305129B2 (en) | 2003-01-29 | 2007-12-04 | Microsoft Corporation | Methods and apparatus for populating electronic forms from scanned documents |
US7318049B2 (en) | 2000-11-17 | 2008-01-08 | Gregory Fx Iannacci | System and method for an automated benefit recognition, acquisition, value exchange, and transaction settlement system using multivariable linear and nonlinear modeling |
US7412708B1 (en) | 2004-03-31 | 2008-08-12 | Google Inc. | Methods and systems for capturing information |
US7421645B2 (en) | 2000-06-06 | 2008-09-02 | Microsoft Corporation | Method and system for providing electronic commerce actions based on semantically labeled strings |
US7437353B2 (en) | 2003-12-31 | 2008-10-14 | Google Inc. | Systems and methods for unification of search results |
US7451136B2 (en) | 2000-10-11 | 2008-11-11 | Microsoft Corporation | System and method for searching multiple disparate search engines |
US7478089B2 (en) | 2003-10-29 | 2009-01-13 | Kontera Technologies, Inc. | System and method for real-time web page context analysis for the real-time insertion of textual markup objects and dynamic content |
US7516118B1 (en) | 2003-12-31 | 2009-04-07 | Google Inc. | Methods and systems for assisted network browsing |
Family Cites Families (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7693825B2 (en) * | 2004-03-31 | 2010-04-06 | Google Inc. | Systems and methods for ranking implicit search results |
US20070282797A1 (en) * | 2004-03-31 | 2007-12-06 | Niniane Wang | Systems and methods for refreshing a content display |
US8631001B2 (en) * | 2004-03-31 | 2014-01-14 | Google Inc. | Systems and methods for weighting a search query result |
US9009153B2 (en) * | 2004-03-31 | 2015-04-14 | Google Inc. | Systems and methods for identifying a named entity |
-
2004
- 2004-06-30 US US10/882,066 patent/US8131754B1/en not_active Expired - Fee Related
-
2012
- 2012-01-27 US US13/360,593 patent/US8667013B1/en not_active Expired - Fee Related
Patent Citations (155)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050262073A1 (en) | 1989-10-26 | 2005-11-24 | Michael Reed | Multimedia search system |
USRE36727E (en) | 1989-12-26 | 2000-06-06 | Kageneck; Karl-Erbo G. | Method of indexing and retrieval of electronically-stored documents |
US5418948A (en) | 1991-10-08 | 1995-05-23 | West Publishing Company | Concept matching of natural language queries with a database of document concepts |
US5696962A (en) | 1993-06-24 | 1997-12-09 | Xerox Corporation | Method for computerized information retrieval using shallow linguistic analysis |
US5678038A (en) | 1994-06-21 | 1997-10-14 | International Business Machines Corporation | Storing and retrieving heterogeneous classification systems utilizing globally unique identifiers |
US5754938A (en) | 1994-11-29 | 1998-05-19 | Herz; Frederick S. M. | Pseudonymous server for system for customized electronic identification of desirable objects |
US6460036B1 (en) * | 1994-11-29 | 2002-10-01 | Pinpoint Incorporated | System and method for providing customized electronic newspapers and target advertisements |
US5717913A (en) | 1995-01-03 | 1998-02-10 | University Of Central Florida | Method for detecting and extracting text data using database schemas |
US5701469A (en) | 1995-06-07 | 1997-12-23 | Microsoft Corporation | Method and system for generating accurate search results using a content-index |
US5964839A (en) | 1996-03-29 | 1999-10-12 | At&T Corp | System and method for monitoring information flow and performing data collection |
US5911139A (en) | 1996-03-29 | 1999-06-08 | Virage, Inc. | Visual image database search engine which allows for different schema |
US5826261A (en) | 1996-05-10 | 1998-10-20 | Spencer; Graham | System and method for querying multiple, distributed databases by selective sharing of local relative significance information for terms related to the query |
US6581056B1 (en) | 1996-06-27 | 2003-06-17 | Xerox Corporation | Information retrieval system providing secondary content analysis on collections of information objects |
US6820093B2 (en) | 1996-07-30 | 2004-11-16 | Hyperphrase Technologies, Llc | Method for verifying record code prior to an action based on the code |
US6070158A (en) | 1996-08-14 | 2000-05-30 | Infoseek Corporation | Real-time document collection search engine with phrase indexing |
US5890152A (en) | 1996-09-09 | 1999-03-30 | Seymour Alvin Rapaport | Personal feedback browser for obtaining media files |
US5933827A (en) | 1996-09-25 | 1999-08-03 | International Business Machines Corporation | System for identifying new web pages of interest to a user |
US5796393A (en) | 1996-11-08 | 1998-08-18 | Compuserve Incorporated | System for intergrating an on-line service community with a foreign service |
US5987446A (en) | 1996-11-12 | 1999-11-16 | U.S. West, Inc. | Searching large collections of text using multiple search engines concurrently |
US6272507B1 (en) | 1997-04-09 | 2001-08-07 | Xerox Corporation | System for ranking search results from a collection of documents using spreading activation techniques |
US6006222A (en) | 1997-04-25 | 1999-12-21 | Culliss; Gary | Method for organizing information |
US5940821A (en) | 1997-05-21 | 1999-08-17 | Oracle Corporation | Information presentation in a knowledge base search and retrieval system |
US6014665A (en) | 1997-08-01 | 2000-01-11 | Culliss; Gary | Method for organizing information |
US6078916A (en) | 1997-08-01 | 2000-06-20 | Culliss; Gary | Method for organizing information |
US6182068B1 (en) | 1997-08-01 | 2001-01-30 | Ask Jeeves, Inc. | Personalized search methods |
US6961954B1 (en) | 1997-10-27 | 2005-11-01 | The Mitre Corporation | Automated segmentation, information extraction, summarization, and presentation of broadcast news |
US6473752B1 (en) | 1997-12-04 | 2002-10-29 | Micron Technology, Inc. | Method and system for locating documents based on previously accessed documents |
US6602300B2 (en) | 1998-02-03 | 2003-08-05 | Fujitsu Limited | Apparatus and method for retrieving data from a document database |
US6012067A (en) | 1998-03-02 | 2000-01-04 | Sarkar; Shyam Sundar | Method and apparatus for storing and manipulating objects in a plurality of relational data managers on the web |
US6421675B1 (en) | 1998-03-16 | 2002-07-16 | S. L. I. Systems, Inc. | Search engine |
US20030055831A1 (en) | 1998-03-16 | 2003-03-20 | S.L.I. Systems, Inc. | Search engine |
US6112203A (en) | 1998-04-09 | 2000-08-29 | Altavista Company | Method for ranking documents in a hyperlinked environment using connectivity and selective content analysis |
US6199059B1 (en) | 1998-04-22 | 2001-03-06 | International Computex, Inc. | System and method for classifying and retrieving information with virtual object hierarchy |
US6122647A (en) | 1998-05-19 | 2000-09-19 | Perspecta, Inc. | Dynamic generation of contextual links in hypertext documents |
US6167434A (en) | 1998-07-15 | 2000-12-26 | Pang; Stephen Y. | Computer code for removing junk e-mail messages |
US6505191B1 (en) * | 1998-07-24 | 2003-01-07 | Jarg Corporation | Distributed computer database system and method employing hypertext linkage analysis |
US6397221B1 (en) | 1998-09-12 | 2002-05-28 | International Business Machines Corp. | Method for creating and maintaining a frame-based hierarchically organized databases with tabularly organized data |
US20030079185A1 (en) | 1998-10-09 | 2003-04-24 | Sanjeev Katariya | Method and system for generating a document summary |
US6587856B1 (en) | 1998-12-07 | 2003-07-01 | Oracle International Corporation | Method and system for representing and accessing object-oriented data in a relational database system |
US20030123443A1 (en) | 1999-04-01 | 2003-07-03 | Anwar Mohammed S. | Search engine with user activity memory |
US7181459B2 (en) | 1999-05-04 | 2007-02-20 | Iconfind, Inc. | Method of coding, categorizing, and retrieving network pages and sites |
US20020016786A1 (en) | 1999-05-05 | 2002-02-07 | Pitkow James B. | System and method for searching and recommending objects from a categorically organized information repository |
US6571234B1 (en) | 1999-05-11 | 2003-05-27 | Prophet Financial Systems, Inc. | System and method for managing online message board |
US20060010150A1 (en) | 1999-05-18 | 2006-01-12 | Kom, Inc. | Method and System for Electronic File Lifecycle Management |
US6963830B1 (en) | 1999-07-19 | 2005-11-08 | Fujitsu Limited | Apparatus and method for generating a summary according to hierarchical structure of topic |
US6321228B1 (en) | 1999-08-31 | 2001-11-20 | Powercast Media, Inc. | Internet search system for retrieving selected results from a previous search |
US6697799B1 (en) | 1999-09-10 | 2004-02-24 | Requisite Technology, Inc. | Automated classification of items using cascade searches |
US6976053B1 (en) | 1999-10-14 | 2005-12-13 | Arcessa, Inc. | Method for using agents to create a computer index corresponding to the contents of networked computers |
US7022905B1 (en) | 1999-10-18 | 2006-04-04 | Microsoft Corporation | Classification of information and use of classifications in searching and retrieval of information |
US6665666B1 (en) | 1999-10-26 | 2003-12-16 | International Business Machines Corporation | System, method and program product for answering questions using a search engine |
US6651054B1 (en) | 1999-10-30 | 2003-11-18 | International Business Machines Corporation | Method, system, and program for merging query search results |
US6490575B1 (en) | 1999-12-06 | 2002-12-03 | International Business Machines Corporation | Distributed network search engine |
US6785671B1 (en) | 1999-12-08 | 2004-08-31 | Amazon.Com, Inc. | System and method for locating web-based product offerings |
US20020099700A1 (en) | 1999-12-14 | 2002-07-25 | Wen-Syan Li | Focused search engine and method |
US6546388B1 (en) | 2000-01-14 | 2003-04-08 | International Business Machines Corporation | Metadata search results ranking system |
US6820237B1 (en) | 2000-01-21 | 2004-11-16 | Amikanow! Corporation | Apparatus and method for context-based highlighting of an electronic document |
US20030033296A1 (en) * | 2000-01-31 | 2003-02-13 | Kenneth Rothmuller | Digital media management apparatus and methods |
US6961910B2 (en) | 2000-02-17 | 2005-11-01 | International Business Machines Corporation | System for interacting with participants at a web site through an interactive visual proxy |
US6697840B1 (en) | 2000-02-29 | 2004-02-24 | Lucent Technologies Inc. | Presence awareness in collaborative systems |
US20010037328A1 (en) | 2000-03-23 | 2001-11-01 | Pustejovsky James D. | Method and system for interfacing to a knowledge acquisition system |
US20030093790A1 (en) | 2000-03-28 | 2003-05-15 | Logan James D. | Audio and video program recording, editing and playback systems using metadata |
US6484164B1 (en) | 2000-03-29 | 2002-11-19 | Koninklijke Philips Electronics N.V. | Data search user interface with ergonomic mechanism for user profile definition and manipulation |
US20020059272A1 (en) | 2000-04-20 | 2002-05-16 | Porter Edward W. | Apparatuses, methods, programming, and propagated signals for creating, editing, organizing and viewing collaborative databases |
US6976090B2 (en) | 2000-04-20 | 2005-12-13 | Actona Technologies Ltd. | Differentiated content and application delivery via internet |
US20010037377A1 (en) | 2000-04-27 | 2001-11-01 | Yumiko Nakano | Information searching apparatus and method |
US6925456B2 (en) | 2000-04-27 | 2005-08-02 | Fujitsu Limited | Information searching apparatus and method for online award entry |
US6745178B1 (en) | 2000-04-28 | 2004-06-01 | International Business Machines Corporation | Internet based method for facilitating networking among persons with similar interests and for facilitating collaborative searching for information |
US7054860B2 (en) | 2000-06-02 | 2006-05-30 | Hitachi, Ltd. | Method and system for retrieving a document and computer readable storage medium |
US7421645B2 (en) | 2000-06-06 | 2008-09-02 | Microsoft Corporation | Method and system for providing electronic commerce actions based on semantically labeled strings |
US6803906B1 (en) | 2000-07-05 | 2004-10-12 | Smart Technologies, Inc. | Passive touch system and method of detecting user input |
US20020174101A1 (en) | 2000-07-12 | 2002-11-21 | Fernley Helen Elaine Penelope | Document retrieval system |
US6772188B1 (en) | 2000-07-14 | 2004-08-03 | America Online, Incorporated | Method and apparatus for communicating with an entity automatically identified in an electronic communication |
US6583798B1 (en) | 2000-07-21 | 2003-06-24 | Microsoft Corporation | On-object user interface |
US6948134B2 (en) | 2000-07-21 | 2005-09-20 | Microsoft Corporation | Integrated method for creating a refreshable Web Query |
US6633868B1 (en) | 2000-07-28 | 2003-10-14 | Shermann Loyall Min | System and method for context-based document retrieval |
US7027975B1 (en) | 2000-08-08 | 2006-04-11 | Object Services And Consulting, Inc. | Guided natural language interface system and method |
US6778951B1 (en) | 2000-08-09 | 2004-08-17 | Concerto Software, Inc. | Information retrieval method with natural language interface |
US6766320B1 (en) | 2000-08-24 | 2004-07-20 | Microsoft Corporation | Search engine with natural language-based robust parsing for user query and relevance feedback learning |
US6687704B1 (en) | 2000-08-31 | 2004-02-03 | Hewlett-Packard Development Company, L.P. | Database model system and method |
US20020103737A1 (en) | 2000-09-07 | 2002-08-01 | Briere Daniel D. | Marketing collateral repository and supporting data management and communication environment |
US6795825B2 (en) | 2000-09-12 | 2004-09-21 | Naphtali David Rishe | Database querying system and method |
US6950791B1 (en) | 2000-09-13 | 2005-09-27 | Antartica Systems, Inc. | Method for describing objects in a virtual space |
US20020040311A1 (en) | 2000-10-04 | 2002-04-04 | John Douglass | Web browser page rating system |
US7451136B2 (en) | 2000-10-11 | 2008-11-11 | Microsoft Corporation | System and method for searching multiple disparate search engines |
US20020103806A1 (en) | 2000-10-18 | 2002-08-01 | Masafumi Yamanoue | Data supply controlling device, data supplying method, storage medium for data supplying program, and data supplying system |
US7099860B1 (en) | 2000-10-30 | 2006-08-29 | Microsoft Corporation | Image retrieval systems and methods with semantic and feature based relevance feedback |
US20020103698A1 (en) | 2000-10-31 | 2002-08-01 | Christian Cantrell | System and method for enabling user control of online advertising campaigns |
US20020095427A1 (en) | 2000-11-09 | 2002-07-18 | Kaplan Ari David | System, method and apparatus for the wireless monitoring and management of computer systems |
US7054870B2 (en) | 2000-11-15 | 2006-05-30 | Kooltorch, Llc | Apparatus and methods for organizing and/or presenting data |
US7318049B2 (en) | 2000-11-17 | 2008-01-08 | Gregory Fx Iannacci | System and method for an automated benefit recognition, acquisition, value exchange, and transaction settlement system using multivariable linear and nonlinear modeling |
US20020065800A1 (en) | 2000-11-30 | 2002-05-30 | Morlitz David M. | HTTP archive file |
US20020069194A1 (en) | 2000-12-06 | 2002-06-06 | Robbins Benjamin Jon | Client based online content meta search |
US20020116291A1 (en) | 2000-12-22 | 2002-08-22 | Xerox Corporation | Recommender system and method |
US20020129059A1 (en) | 2000-12-29 | 2002-09-12 | Eck Jeffery R. | XML auto map generator |
US20030167266A1 (en) | 2001-01-08 | 2003-09-04 | Alexander Saldanha | Creation of structured data from plain text |
US6853998B2 (en) | 2001-02-07 | 2005-02-08 | International Business Machines Corporation | Customer self service subsystem for classifying user contexts |
US7062442B2 (en) | 2001-02-23 | 2006-06-13 | Popcatcher Ab | Method and arrangement for search and recording of media signals |
US6834287B1 (en) | 2001-03-14 | 2004-12-21 | Trilogy Development Group, Inc. | Classification engine for managing attribute-based data |
US20040122656A1 (en) | 2001-03-16 | 2004-06-24 | Eli Abir | Knowledge system method and appparatus |
US6850934B2 (en) | 2001-03-26 | 2005-02-01 | International Business Machines Corporation | Adaptive search engine query |
US7032174B2 (en) | 2001-03-27 | 2006-04-18 | Microsoft Corporation | Automatically adding proper names to a database |
US20040030741A1 (en) | 2001-04-02 | 2004-02-12 | Wolton Richard Ernest | Method and apparatus for search, visual navigation, analysis and retrieval of information from networks with remote notification and content delivery |
US7146399B2 (en) | 2001-05-25 | 2006-12-05 | 2006 Trident Company | Run-time architecture for enterprise integration with transformation generation |
US7293014B2 (en) | 2001-06-18 | 2007-11-06 | Siebel Systems, Inc. | System and method to enable searching across multiple databases and files using a single search |
US20030046311A1 (en) | 2001-06-19 | 2003-03-06 | Ryan Baidya | Dynamic search engine and database |
US20030014398A1 (en) | 2001-06-29 | 2003-01-16 | Hitachi, Ltd. | Query modification system for information retrieval |
US7043492B1 (en) | 2001-07-05 | 2006-05-09 | Requisite Technology, Inc. | Automated classification of items using classification mappings |
US20030020749A1 (en) | 2001-07-10 | 2003-01-30 | Suhayya Abu-Hakima | Concept-based message/document viewer for electronic communications and internet searching |
US20030069877A1 (en) | 2001-08-13 | 2003-04-10 | Xerox Corporation | System for automatically generating queries |
US7007085B1 (en) | 2001-09-28 | 2006-02-28 | Bellsouth Intellectual Property Corporation | Message log for wireline, voice mail, email, fax, pager, instant messages and chat |
US20030093276A1 (en) | 2001-11-13 | 2003-05-15 | Miller Michael J. | System and method for automated answering of natural language questions and queries |
US20030115552A1 (en) | 2001-11-27 | 2003-06-19 | Jorg Jahnke | Method and system for automatic creation of multilingual immutable image files |
US6874126B1 (en) | 2001-11-30 | 2005-03-29 | View Space Technologies | Method and apparatus for controlling content display by the cursor motion |
US20030130982A1 (en) | 2002-01-09 | 2003-07-10 | Stephane Kasriel | Web-site analysis system |
US20030135499A1 (en) | 2002-01-14 | 2003-07-17 | Schirmer Andrew Lewis | System and method for mining a user's electronic mail messages to determine the user's affinities |
US20030135490A1 (en) | 2002-01-15 | 2003-07-17 | Barrett Michael E. | Enhanced popularity ranking |
US20030154071A1 (en) | 2002-02-11 | 2003-08-14 | Shreve Gregory M. | Process for the document management and computer-assisted translation of documents utilizing document corpora constructed by intelligent agents |
US20030158855A1 (en) * | 2002-02-20 | 2003-08-21 | Farnham Shelly D. | Computer system architecture for automatic context associations |
US20030208493A1 (en) | 2002-04-12 | 2003-11-06 | Hall Bradley S. | Object relational database management system |
US20040003097A1 (en) | 2002-05-17 | 2004-01-01 | Brian Willis | Content delivery system |
US20030220913A1 (en) | 2002-05-24 | 2003-11-27 | International Business Machines Corporation | Techniques for personalized and adaptive search services |
US7231395B2 (en) | 2002-05-24 | 2007-06-12 | Overture Services, Inc. | Method and apparatus for categorizing and presenting documents of a distributed database |
US7039650B2 (en) | 2002-05-31 | 2006-05-02 | Sypherlink, Inc. | System and method for making multiple databases appear as a single database |
US20040036716A1 (en) | 2002-06-12 | 2004-02-26 | Jordahl Jena J. | Data storage, retrieval, manipulation and display tools enabling multiple hierarchical points of view |
US20040001104A1 (en) | 2002-06-28 | 2004-01-01 | Microsoft Corporation | Resource browser sessions search |
US20040143569A1 (en) | 2002-09-03 | 2004-07-22 | William Gross | Apparatus and methods for locating data |
US7082428B1 (en) | 2002-09-16 | 2006-07-25 | Bellsouth Intellectual Property Corporation | Systems and methods for collaborative searching |
US7293015B2 (en) | 2002-09-19 | 2007-11-06 | Microsoft Corporation | Method and system for detecting user intentions in retrieval of hint sentences |
US20040059564A1 (en) | 2002-09-19 | 2004-03-25 | Ming Zhou | Method and system for retrieving hint sentences using expanded queries |
US7194455B2 (en) | 2002-09-19 | 2007-03-20 | Microsoft Corporation | Method and system for retrieving confirming sentences |
US20040064447A1 (en) | 2002-09-27 | 2004-04-01 | Simske Steven J. | System and method for management of synonymic searching |
US20040068486A1 (en) | 2002-10-02 | 2004-04-08 | Xerox Corporation | System and method for improving answer relevance in meta-search engines |
US20040073534A1 (en) * | 2002-10-11 | 2004-04-15 | International Business Machines Corporation | Method and apparatus for data mining to discover associations and covariances associated with data |
US20040139106A1 (en) | 2002-12-31 | 2004-07-15 | International Business Machines Corporation | Search engine facility with automated knowledge retrieval generation and maintenance |
US20040133560A1 (en) | 2003-01-07 | 2004-07-08 | Simske Steven J. | Methods and systems for organizing electronic documents |
US20060136405A1 (en) | 2003-01-24 | 2006-06-22 | Ducatel Gary M | Searching apparatus and methods |
US7305129B2 (en) | 2003-01-29 | 2007-12-04 | Microsoft Corporation | Methods and apparatus for populating electronic forms from scanned documents |
US20040225667A1 (en) | 2003-03-12 | 2004-11-11 | Canon Kabushiki Kaisha | Apparatus for and method of summarising text |
US20040267700A1 (en) | 2003-06-26 | 2004-12-30 | Dumais Susan T. | Systems and methods for personal ubiquitous information retrieval and reuse |
US20040267730A1 (en) | 2003-06-26 | 2004-12-30 | Microsoft Corporation | Systems and methods for performing background queries from content and activity |
US7162473B2 (en) | 2003-06-26 | 2007-01-09 | Microsoft Corporation | Method and system for usage analyzer that determines user accessed sources, indexes data subsets, and associated metadata, processing implicit queries based on potential interest to users |
US20040267813A1 (en) | 2003-06-30 | 2004-12-30 | Rivers-Moore Jonathan E. | Declarative solution definition |
US20050065909A1 (en) | 2003-08-05 | 2005-03-24 | Musgrove Timothy A. | Product placement engine and method |
US7478089B2 (en) | 2003-10-29 | 2009-01-13 | Kontera Technologies, Inc. | System and method for real-time web page context analysis for the real-time insertion of textual markup objects and dynamic content |
US20050114306A1 (en) | 2003-11-20 | 2005-05-26 | International Business Machines Corporation | Integrated searching of multiple search sources |
US7194485B2 (en) | 2003-11-21 | 2007-03-20 | International Business Machines Corporation | Mapping XML schema components to qualified java components |
US20050125382A1 (en) | 2003-12-03 | 2005-06-09 | Microsoft Corporation | Search system using user behavior data |
US20050125390A1 (en) | 2003-12-03 | 2005-06-09 | Oliver Hurst-Hiller | Automated satisfaction measurement for web search |
US7516118B1 (en) | 2003-12-31 | 2009-04-07 | Google Inc. | Methods and systems for assisted network browsing |
US7437353B2 (en) | 2003-12-31 | 2008-10-14 | Google Inc. | Systems and methods for unification of search results |
US20050187920A1 (en) | 2004-01-23 | 2005-08-25 | Porto Ranelli, Sa | Contextual searching |
US20050198026A1 (en) | 2004-02-03 | 2005-09-08 | Dehlinger Peter J. | Code, system, and method for generating concepts |
US7412708B1 (en) | 2004-03-31 | 2008-08-12 | Google Inc. | Methods and systems for capturing information |
US20050222987A1 (en) | 2004-04-02 | 2005-10-06 | Vadon Eric R | Automated detection of associations between search criteria and item categories based on collective analysis of user activity data |
US7171352B2 (en) | 2004-04-23 | 2007-01-30 | Microsoft Corporation | Linguistic object model |
Non-Patent Citations (57)
Title |
---|
"askSam(TM) Making Information Useful," askSam,-Organize your Information with askSam, http://www.asksam.com/brochure.asp, printed Mar. 15, 2004. |
"askSam™ Making Information Useful," askSam,—Organize your Information with askSam, http://www.asksam.com/brochure.asp, printed Mar. 15, 2004. |
"Overview," Stuff I've Seen-Home Page, http://www.research.Microsoft.com/adapt/sis/index.htm, pp. 1-2, printed May 26, 2004. |
"Searching for the next Google-New trends are helping nimble startups elbow in to the plundered market," Red Herring-The Business of Technology, Mar. 9, 2004, http://redherring.com/PrintArticle.aspx?a=4782§or=Capital, p. 1-5, printed Mar. 30, 2004. |
"Selecting Task-Relevant Sources for Just-In-Time Retrieval" pp. 1-3, no date. |
"Standardization Priorities for the Directory-Directory Interoperability Forum White Paper," The Open Group, Dec. 2001, pp. 1-21. |
"WhenU Just-In-Time Marketing," http://www.whenu.com printed Mar. 19, 2004. |
80-20 Software-Products-80-20 One Search, http://www.80-20.com/products/one-search/retriever.asp printed Mar. 16, 2004. |
Alexa® Web Search-Toolbar Quick Tour, http://pages.alexa.com/prod-serv/quicktour.html pp. 1-5, printed Mar. 16, 2004. |
Barrett, R. et al., "How to Personalize the Web,"IBM Research, http://www.almaden.ibm.com/cs/wbi/papers/chi97/wbipaper.html, pp. 1-13, printed Mar. 16, 2004. |
Battelle, J., CNN.com "When geeks go camping, ideas hatch," http://www.cnn.com/2004/TECH/ptech/01/09/bus2.feat.geek.camp/index.html, pp. 1-3, printed Jan. 13, 2004. |
Berlin, J., et al., "Database Schema Matching Using Machine Learning with Feature Selection," CAISE 2002, LNCS 2348, pp. 452-466, http://www.springerlink.com/contant/73u6cpt0qek8rqh0/. |
Boyan, J., et al., "A Machine Learning Architecture for Optimizing Web Search Engines," School of Computer Science, Carnegie Mellon University, May 10, 1996, pp. 1-8. |
Bradenbaugh, F., "Chapter 1 The Client-Side Search Engine," JavaScript Cookbook, 1st Ed., Oct. 1999, O'Reilly(TM) Online Catalog, http://www.oreilly.com/catalog/iscook/chapter/ch01.html, pp. 1-30, printed Dec. 29, 2003. |
Bradenbaugh, F., "Chapter 1 The Client-Side Search Engine," JavaScript Cookbook, 1st Ed., Oct. 1999, O'Reilly™ Online Catalog, http://www.oreilly.com/catalog/iscook/chapter/ch01.html, pp. 1-30, printed Dec. 29, 2003. |
Brill, E., "A Simple Rule-Based Part of Speech Tagger," Department of Computer Science, University of Pennsylvania, 1992, pp. 1-5. |
Brin, S., et al, "The Anatomy of a Large-Scale Hypertextual Web Search Engine," http://www7.scu.edu.au/programme/fullpapers/1921/com1921.htm, pp. 1-18, 1998. |
Budzik, J., et al., User Interactions with Everyday Applications as Context for Just-in-time Information Access, Intelligent Information Laboratory, Northwestern University. pp. 1-8, no date. |
Claypool, M., et al., "Inferring User Interest," IEEE Internet Computing, 2001, pp. 1-17, vol. 5, No. 6, located at http://web.cs.wpi.edu/~claypool/papers/iui/iui.pdf. |
Claypool, M., et al., "Inferring User Interest," IEEE Internet Computing, 2001, pp. 1-17, vol. 5, No. 6, located at http://web.cs.wpi.edu/˜claypool/papers/iui/iui.pdf. |
Czerwinski, M., et al., "Visualizing Implicit Queries for Information Management and Retrieval," ACM CHI '99, May 15-20, 1999, pp. 560-567. |
DEVONthink, http://www.devon-techonologies.com/products/devonthink.php, printed Mar. 16, 2004. |
dtSearch®-http://www.dtsearch.com/, printed Mar. 15, 2004. |
Dumais. S., et al, "Stuff I've Seen: A System for Personal Information Retrieval and Re-Use," Microsoft Research, SIGIR'03, Jul. 28-Aug, 1, 2003, pp. 1-8. |
Enfish, http://www.enfish.com printed Mar. 16, 2004. |
Fast Search & Transfer-Home-Enterprise Search, http://solutions.altavista.com/en/news/pr-020402-desktop,shtmu, printed Mar. 16, 2004. |
Fertig, S., et al., "Lifestream : An Alternative to the Desktop Metaphor," http://www.acm.org/sigchi/chi98/proceedings/videos/Fertig/etf.htm, pp. 1-3, printed Mar. 16, 2004. |
Garofalakis, M., et al., "XTRACT: A System for Extracting Document Type Descriptors from XML Documents," SIGMOD, ACM, Jun. 2000, pp. 165-176, vol. 29, No. 2. |
Geisler, G., "Enriched Links: A Framework for Improving Web Navigation Using Pop-Up Views," pp. 1-14, 2000. |
Horvitz, E., et al., "The Lumiere project: Bayesian user modeling for inferring the goals and needs of software users", Proceedings of the Fourteenth Conference on Uncertainty, 1998, pp. 256-265, Morgan Kaufmann: San Francisco. |
International Search Report and Written Opinion, PCT/US2004/038562, Apr. 6, 2005, 12 pages. |
ISYS Search Software-ISYS: desktop, http://www.isysusa.com/products/desktop/index.html, printed Mar. 16, 2004. |
Joachims, T., et al., "WebWatcher: A Tour Guide for the World Wide Web," 1996. |
Joho, H., et al., "A Study of User Interaction with a Concept-Based Interactive Query Expansion Support Tool," Advances in Information Retrieval, A Study of User Interaction, Lecture Notes in Computer Science, Mar. 2, 2004, pp. 42-56, vol. 2997. |
Jones, G., et al., "Context-Aware Retrieval for Ubiquitous Computing Environments," Mobile and Ubiquitous Information Access, Lecture Notes in Computer Science, Jan. 27, 2004, pp. 227-243, vol. 2954. |
Knezevic, P. et al., "The Architecture of the Obelix-An Improved Internet Search Engine," Proceedings of the 33rd Annual Hawaii International Conference on System Sciences (HICSS) Jan. 4-7, 2000, Maui, HI, USA, pp. 2145-2155. |
Li, W., et al., "Semantic Integration in Heterogeneous Databases Using Neural Networks," Proceedings of the 20th International Conference on Very Large Data Bases, Sep. 12-15, 1994, pp. 1-12, Morgan Kaufmann Publishers, San Francisco, CA. |
Li, W., et al., "Semint: A Tool for Identifying Attribute Correspondences in Heterogeneous Databases Using Neural Networks," Data Knowl. Eng., Apr. 2000, pp. 484, vol. 33, No. 1, http://dx.doi.org/10.1016-/S0169-023X(99)00044-0. |
Lieberman, H., "Letizia: An Agent That Assists Web Browsing," AAAI Technical Report FS-95-03, 1995, pp. 97-102. |
Markoff, J., "Google Moves Toward Clash with Microsoft," The New York Times, May 19, 2004. http://www.nytimes.com/2004/5/19/technology/19google.html?ex=1085964389&ei=1&e.... pp. 1-4, printed May 19, 2004. |
Morita, M. et al., "Information Filtering Based on User Behavior Analysis and Best Match Text Retrieval," Proceedings of the Annual International ACM-SIGIR Conference on Research and Development in Information Retrieval, Dublin, Jul. 3-6, 1994, pp. 272-281. |
Naraine, R., "Future of Search Will Make You Dizzy," Enterprise, May 20, 2004, http://www.internetnews.com/ent-news/article.php/3356831, pp. 1-4, printed May 21, 2004. |
Phelps, A., "All You Can Seek," Special Services, Jul. 1999, vol. 7, Iss. 7, [online] [Retrieved on Oct. 16, 2006] Retrieved from the Internet: http://www.smartcomputing.com/editorial/article.asp?article.articles/archive/g0707/26g07/26g07.asp. |
Rhodes, B., "Margin Notes Building a Contextually Aware Associative Memory," The Proceedings of the International Conference on Intelligent User Interfaces (IUI'00). Jan. 9-12, 2000. |
Rhodes, B., et al., "Just-in-time information retrieval agents," Systems Journal, vol. 39, Nos. 3&4, 2000, pp. 685-704. |
Rhodes, B., et al., "Remembrance Agent-A continuously running automated information retrieval system," The Proceedings of the First International Conference on the Practical Application of Intelligent Agents and Multi Agent Technology (PAAM '96), pp. 487-495. |
Rizzo, T., "WinFS 101: Introducing the New Windows File System," Longhorn Developer Center Home: Headline Archive: WinFS 101: Introducing the New . . ., http://msdn.Microsoft.com/Longhorn/archive/default.aspx?pull+/library/en-us/dnwinfs/htm..., pp. 1-5, printed Apr. 21, 2004. |
Scha, R., et al., "An Augmented Context Free Grammar for Discourse," Proceedings of the 12th Conference on Computational Linguistics-vol. 2, Computational Linguistics, Aug. 22-27, 1988, pp. 573-577, Morristown, NJ, http://dx.doi.org/10.3115/991719.991756. |
Shepherd, M., et al., "Browsing and Keyword-Based Profiles: A Cautionary Tale," Proceedings of the 34th Hawaii International Conference on System Sciences, Jan. 3-6, 2001, pp. 1365-1373. |
Sherman, C., "HotBot's New Desktop Search Toolbar," www.searchenginewatch.com, http://searchenginewatch.com/searchday/print.php/34711-339921, pp. 1-3, printed Apr. 14, 2004. |
Sullivan, D., "Alta Vista Releases Search Software," The Search Engine Report, Aug. 4, 1998, pp. 1-2. |
U.S. Appl. No. 10/749,440, filed Dec. 31, 2003, Badros et al. |
WebWatcher Home Page "Welcome to the WebWatcher Project," http://www-2.cs.cmu.edu/~webwatcher/, printed Oct. 15, 2003. |
WebWatcher Home Page "Welcome to the WebWatcher Project," http://www-2.cs.cmu.edu/˜webwatcher/, printed Oct. 15, 2003. |
White, R., et al., "The Use of Implicit Evidence for Relevance Feedback in Web Retrieval," Lecture Notes in Computer Science, Jan. 1, 2002, pp. 93-109, vol. 2291. |
X1 instantly searches files & email. For outlook, Outlook, http://www.x1.com/, printed Mar. 15, 2004. |
Zellweger, P., et al., "Fluid Links for Informed and Incremental Link Transitions," Proceedings of Hypertext'98. Pittsburgh, PA, Jun. 20-24, 1998, pp. 50-57. |
Cited By (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20120215792A1 (en) * | 2011-02-18 | 2012-08-23 | Hon Hai Precision Industry Co., Ltd. | Electronic device and method for searching related terms |
US8489592B2 (en) * | 2011-02-18 | 2013-07-16 | Hon Hai Precision Industry Co., Ltd. | Electronic device and method for searching related terms |
US20130104026A1 (en) * | 2011-10-20 | 2013-04-25 | Aol Inc. | Systems and methods for web site customization based on time-of-day |
US9633122B2 (en) * | 2011-10-20 | 2017-04-25 | Aol Inc. | Systems and methods for web site customization based on time-of-day |
US20140259133A1 (en) * | 2013-03-05 | 2014-09-11 | Vodafone Ip Licensing Limited | Method for Anonymously Associating Measurement Device Measurements to a Source ID |
US9647990B2 (en) * | 2013-03-05 | 2017-05-09 | Vodafone Ip Licensing Limited | Method for anonymously associating measurement device measurements to a source ID |
Also Published As
Publication number | Publication date |
---|---|
US8667013B1 (en) | 2014-03-04 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7693825B2 (en) | Systems and methods for ranking implicit search results | |
US7788274B1 (en) | Systems and methods for category-based search | |
US7873632B2 (en) | Systems and methods for associating a keyword with a user interface area | |
US7725508B2 (en) | Methods and systems for information capture and retrieval | |
US8631001B2 (en) | Systems and methods for weighting a search query result | |
US7437353B2 (en) | Systems and methods for unification of search results | |
US10180980B2 (en) | Methods and systems for eliminating duplicate events | |
AU2005231112B2 (en) | Methods and systems for structuring event data in a database for location and retrieval | |
US7664734B2 (en) | Systems and methods for generating multiple implicit search queries | |
US9009153B2 (en) | Systems and methods for identifying a named entity | |
US7580568B1 (en) | Methods and systems for identifying an image as a representative image for an article | |
US8543572B2 (en) | Systems and methods for analyzing boilerplate | |
US20090276408A1 (en) | Systems And Methods For Generating A User Interface | |
US20080059419A1 (en) | Systems and methods for providing search results | |
US8346777B1 (en) | Systems and methods for selectively storing event data | |
US20070282797A1 (en) | Systems and methods for refreshing a content display | |
US7412708B1 (en) | Methods and systems for capturing information | |
US8667013B1 (en) | Systems and methods for determining an article association measure |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:LAWRENCE, STEPHEN R.;WANG, NINIANE;REEL/FRAME:015907/0918Effective date: 20041007 |
|
CC | Certificate of correction | ||
REMI | Maintenance fee reminder mailed | ||
LAPS | Lapse for failure to pay maintenance fees | ||
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20160306 |
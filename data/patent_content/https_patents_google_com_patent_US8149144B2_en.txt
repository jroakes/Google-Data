US8149144B2 - Hybrid arithmetic-combinatorial encoder - Google Patents
Hybrid arithmetic-combinatorial encoder Download PDFInfo
- Publication number
- US8149144B2 US8149144B2 US12/651,303 US65130309A US8149144B2 US 8149144 B2 US8149144 B2 US 8149144B2 US 65130309 A US65130309 A US 65130309A US 8149144 B2 US8149144 B2 US 8149144B2
- Authority
- US
- United States
- Prior art keywords
- coding
- code
- arithmetic
- combinatorial
- block
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M7/00—Conversion of a code where information is represented by a given sequence or number of digits to a code where the same, similar or subset of information is represented by a different sequence or number of digits
- H03M7/30—Compression; Expansion; Suppression of unnecessary data, e.g. redundancy reduction
- H03M7/3082—Vector coding
-
- H—ELECTRICITY
- H03—ELECTRONIC CIRCUITRY
- H03M—CODING; DECODING; CODE CONVERSION IN GENERAL
- H03M7/00—Conversion of a code where information is represented by a given sequence or number of digits to a code where the same, similar or subset of information is represented by a different sequence or number of digits
- H03M7/30—Compression; Expansion; Suppression of unnecessary data, e.g. redundancy reduction
- H03M7/40—Conversion to or from variable length codes, e.g. Shannon-Fano code, Huffman code, Morse code
- H03M7/4006—Conversion to or from arithmetic code
Definitions
- the present invention relates generally to digital data such as audio data.
- DSPs Digital Signal Processors
- Digital communication offers the major advantage of being able to more efficiently utilize bandwidth and allows for error correcting techniques to be used. Thus by using digital technology one can send more information through a given allocated spectrum space and send the information more reliably.
- Digital communication can use radio links (wireless) or physical network media (e.g., fiber optics, copper networks).
- Digital communication can be used for different types of communication such as audio, video or telemetry for example.
- a digital communication system includes a sending device and a receiving device. In a system capable of two-way communication each device has both sending and receiving circuits.
- a digital sending or receiving device there are multiple staged processes through which data is passed between the stage at which it is input through an input (e.g., microphone, camera, sensor) and the stage at which it is used to modulate a carrier wave and transmitted. After (1) being input and then digitized, (2) some initial noise filtering may be applied, followed by (3) source encoding and (4) finally channel encoding.
- the present invention as will be described in the succeeding pages can be considered to fall in the source encoding stage.
- Audio data is a specific type of data within the broader category of time series data.
- a communication system such as a cellular telephone system
- an encoding are applied to digitized audio before it is transmitted through the communication system.
- initial encoding can be based on a sophisticated yet somewhat simplified model of the human vocal apparatus, as in the case of Algebraic Code Excited Linear Predictive (ACELP) voice encoding.
- ACELP Algebraic Code Excited Linear Predictive
- MDCT Modified Discrete Cosine Transform
- the techniques that are applied to audio in the initial encoding stages produce output in the form of vectors with integer valued (quantized) elements. For example one vector can be output for each successive short time period of 20 milliseconds which is called an audio frame.
- One way to limit the amount of information that is used to represent an audio frame, in order to work within bandwidth constraints, is to limit the total number of quanta (sum of the integer valued elements) in an audio frame. Once such a limit is imposed, it is possible efficiently represent (losslessly compress) the vectors using a technique called Factorial Pulse Coding (FPC).
- FPC is a form of combinatorial coding. An early version of FPC is described in the paper J. P.
- AC and FPC are two completely different types of encoders and there are certain advantages to each.
- the inventors have made empirical observations that AC is more efficient when number of zero's and one's in binary vector to be encoded is more nearly equal, and otherwise FPC is more efficient. It would be desirable to be able to combine AC and FPC in order to obtain the advantages of both in one encoder and decoder system.
- FIG. 1 is a block diagram of a communication system according to an embodiment of the invention.
- FIG. 2 is a flowchart of the operation of an encoder that uses either combinatorial coding or AC according to an embodiment of the invention
- FIG. 3 is a flowchart of the operation of an encoder that dynamically switches between AC and combinatorial coding according to an embodiment of the invention
- FIG. 4 is a flowchart of the operation of a decoder for decoding codes produced by the encoder described in FIG. 3 ;
- FIG. 5 is a flowchart of an encoder that selectively uses AC and combinatorial coding to generate individual code words and combines the individual code words using an FPC combined code formula;
- FIG. 6 is a flowchart of decoder for decoding the codes generated by the encoder shown in FIG. 5 ;
- FIG. 7 is a flowchart of an AC encoder that uses and initial probability in order to make the AC codes generated thereby suitable for combination with FPC codes.
- FIG. 8 is a flowchart of an AC decoder for use with the AC encoder shown in FIG. 7 .
- embodiments of the invention described herein may be comprised of one or more conventional processors and unique stored program instructions that control the one or more processors to implement, in conjunction with certain non-processor circuits, some, most, or all of the functions of encoding and decoding described herein.
- the non-processor circuits may include, but are not limited to, a radio receiver, a radio transmitter, signal drivers, clock circuits, power source circuits, and user input devices. As such, these functions may be interpreted as steps of a method to perform encoding and decoding.
- FIG. 1 is a block diagram of a communication system 100 according to an embodiment of the invention.
- the communication system 100 includes a first communication device 102 and an N TH communication device 104 communicatively coupled through a communication network or peer-to-peer channel 106 .
- At least one of the communication devices 102 , 104 includes a transmitter and at least one of the communication devices 102 , 104 comprises a receiver.
- Certain embodiments provide for two-way communication in which case both communication devices 102 , 104 include both a transmitter and a receiver.
- FIG. 2 is a flowchart 200 of the operation of an encoder that uses either combinatorial coding or AC according to an embodiment of the invention.
- a binary sequence is input.
- Block 204 test if a ratio of the number of ones in the binary sequence to the number of bits in the sequence is between 1 ⁇ 4 and 3 ⁇ 4. Alternatively the lower bound is another number between 0 and 1 ⁇ 2 and alternatively the upper bound is another number between 1 ⁇ 2 and 1. If the outcome of block 204 is positive then in block 206 the sequence is encoded using arithmetic encoding. Alternatively, another type of range coding may be used in lieu of arithmetic coding.
- decision block 208 which tests if the ratio of the number of ones in the binary sequence to the number of bits in the binary sequence is less than or equal to 1 ⁇ 4 (or an alternative bound). If the outcome of decision block 208 is positive then in block 210 the positions of the ones in the sequence are encoded using combinatorial coding. If, on the other hand the outcome of decision block 208 is negative, then in block 212 the positions of the zeros are encoded using combinatorial coding. Encoding either the ones or zeros by combinatorial coding based on which is less numerous reduce the computational complexity involved in encoding.
- a flag may be set indicate what type of encoding has been used.
- FIG. 3 is a flowchart 300 of the operation of an encoder that dynamically switches between AC and combinatorial coding according to an embodiment of the invention.
- a binary sequence is input. Initially, in block 304 , the entire sequence is selected as the active sub-sequence. Subsequently, as the sequence is encoded, lesser parts of the sequence will be selected as the active sub-sequence.
- an upper bound and a lower bound are initialized. The upper and lower bound are used in decision blocks to decide whether positions of zeros or ones are to be encoded using combinatorial coding or whether sub-sequences are to be encoded using AC instead.
- the upper and lower bound may for example be initialized 3 ⁇ 4 and 1 ⁇ 4 respectively or to alternative values in the ranges discussed above with reference to FIG. 2 .
- Decision block 308 tests if the ratio of ones in the active sub-sequence to bits in the active sub-sequence is less than or equal to a current value (e.g., initially 1 ⁇ 4) of the lower bound. Note as discussed further below the bounds are altered in the course of encoding in order to effect hysteresis in order to limit the incurred computational cost of switching back and forth between AC and combinatorial. If the outcome of block 308 is positive then in block 310 the position of the last one in the active sub-sequence is encoded using combinatorial coding. To encode the position of the last bit acombinatorial function is evaluated to produce an additive term of the code. In a basic form the code term is given by:
- Equation 1 can be, in some cases, computationally intensive to evaluate.
- an approximation of F(n,d) such as taught in the aforementioned U.S. Pat. No. 7,461,106 can be used.
- the lower bound is set to a higher value in order to reduce the probability of switching to AC. For example if the lower bound was initialized to 1 ⁇ 4 it can be set to 0.33 in block 312 . Alternative, values in the range 0 to 1 ⁇ 2 are also possible.
- Next decision block 314 tests if there are more bits to be encoded. If there are further bits to be encoded, then in block 316 a remaining sub-sequence (not including bits already encoded) is selected as the active sub-sequence. After block 316 the flowchart 300 loops back to decision block 308 .
- decision block 318 tests if the ratio of the number of one bits to the number of bits is greater than or equal to the upper bound. If the outcome of decision block 318 is positive then in block 320 the last zero of the active sub-sequence is encoded using combinatorial coding. Next in block 322 the upper bound is set to a lower value in order to reduce the probability of switching to AC. For example if the upper bound was initialized to 3 ⁇ 4 it can be set to 0.66 in block 322 .
- the flowchart 300 loops back to block 314 to test if there are more bits to be encoded, and proceeds as previously described.
- the outcome of block 318 is negative meaning that the ratio of the remaining number of one bits to the remaining number of bits is between the lower bound and the upper bound
- the flowchart branches to block 324 .
- an initial probability for use in AC coding one or more next bits in the remaining sub-sequence is computed by evaluating F(n,d) or an approximation thereof.
- n is the remaining number of bits in the sub-sequence
- m is the remaining number of ones in the sub-sequence.
- a zero is appended to the remaining sub-sequence and the initial probability is used as the probability for this initial zero.
- the next bit in the remaining sub-sequence is encoded by AC. Applying the initial probability in this manner makes the code bits generated using AC commensurate and compatible with the code bits generated using combinatorial coding.
- another type of range coding may be used in lieu of AC.
- the lower bound is set to a lower value and in block 330 the upper bound is set to a higher value, both changes serving to reduce the probability of switching back to combinatorial coding.
- the lower bound was initialized to 1 ⁇ 4 then in block 328 it can be set to 0.2 (or alternatively another value in the range 0 to 0.5).
- the upper bound was initialized to 3 ⁇ 4, then in block 330 it can be set to 0.8 (or alternatively another value in the range 0.5 to 1).
- the flowchart 300 loops back to block 314 to again test if there any bits remaining to be encoded.
- the flowchart branches to block 322 in which the code parts generated using combinatorial coding and AC are summed.
- FIG. 4 is a flowchart 400 of the operation of a decoder for decoding codes produced by the encoder described in FIG. 3 .
- a hybrid AC-FPC code is received.
- an undecoded portion is set equal to the received code.
- the position index for the last position index that yields the large FPC function value that is less than the undecoded portion is determined. Note that the total number of ones can be a pre-programmed system parameter or can be communicated to the receiver separately.
- the decoder can decide whether to interpret the next code portion as encoding zeros by combinatorial coding ones by combinatorial coding or a bit sequence by AC.
- the FPC function used in block 406 can be that given by EQU. 1 or an approximation of F(n,d) such as taught in the aforementioned U.S. Pat. No. 7,461,106.
- d is fixed based on the remaining number of ones and n is varied to find the largest FPC function value that is less than the undecoded portion of the code. Once this value is found the corresponding value of n gives the position of the next one or zero depending on whether ones or zeros have been encoded by combinatorial coding at this point in the sequence.
- Next decision block 408 tests if there are any bits remaining to be decoded. If so then in block 410 the largest FPC function value that was found in block 406 is subtracted from the unencoded portion thereby generating a new “undecoded portion”.
- Next decision block 412 tests if the ratio of the number of ones remaining to be decoded to the number of bits remaining to be decoded is between an upper bound and a lower bound.
- the bounds used in the decoder are the same as used in the encoder and are altered in the decoder in the same fashion that they are altered in the encoder. If the outcome of decision block 412 is negative, meaning that decoding using combinatorial decoding is to continue, the flowchart loops back to block 406 and proceeds as previously described.
- the flowchart branches to block 414 .
- the upper bound is set to a higher value and the lower bound is set to a lower value.
- the FPC function such as given by EQU. 1 or an approximation thereof such as taught in the aforementioned U.S. Pat. No. 7,461,106 is evaluated with n equal to the remaining number of bits and d equal to the remaining number of ones in order to obtain an initial probability for AC decoding.
- AC is used to decode the next bit in the remaining undecoded portion.
- decision block 420 tests if there are any bits remaining to be decoded.
- decision block 422 tests if the ratio of the remaining number of ones to the remaining number of bits is between the upper bound and the lower bound. If the outcome of block 422 is positive, the flowchart 400 loops back to block 418 to decode a next bit using AC. When the outcome of block 422 is negative the flowchart 400 branches to block 424 in which the upper bound is set to a lower value and the lower bound is set to a higher value. Next in block 426 the undecoded portion is set equal to the remaining bit sequence (remaining after decoding a portion by AC). After block 426 the flowchart loops back to block 406 and proceeds as described above. When the outcome of either block 408 or block 420 is negative, meaning that all of the bits have been decoded, the flowchart terminates.
- an arithmetic code word encoding positions of non-zero elements of an integer valued vector or an arithmetic code word representing the magnitudes of such non-zero elements or both such arithmetic codes are combined together using an FPC combined code formula along with codes representing other information e.g., a code representing the signs of the non-zero elements and a code representing the number of non-zero elements.
- v is the number of non-zero elements
- C ⁇ is the arithmetic code word representing the locations of the non-zero elements
- C ⁇ is the arithmetic code word representing the magnitudes of the non-zero elements
- C ⁇ is an FPC code word representing the signs of the non-zero elements
- Cv is a code word representing a number of non-zero pulses and is given by:
- P(n,k) is an initial probability used to generate an arithmetic code word representing a binary sequence of n bits and k one-valued bits;
- M(m ⁇ 1,k ⁇ 1) is an initial probability used to generate an arithmetic code word representing a binary sequence that encodes the magnitudes of k pulses having a summed magnitude quanta equal to m.
- Such a binary sequence may be obtained from the original integer valued vector to be encoded by replacing each magnitude integer by a sequence of zeros numbering one less than the magnitude integer followed by a one.
- the following are examples of magnitude vectors at the left and corresponding binary vectors at the right that result from the foregoing conversion process:
- C ⁇ and/or C ⁇ are selectively determined by AC or combinatorial coding depending on how the ratio of the number one-valued bits to the total number of bits compares to certain bounds, in a manner such as described above with reference to FIGS. 2-4 .
- a ratio is the ratio of non-zero pulse to total possible pulse positions.
- this is the ratio of one-bits to total bits in the binary sequence representing the magnitudes which are described above.
- a stronger bound than that described by EQU. 4 may be obtained using a trellis method which is described as follows.
- a probability region [0, 1] is divided into smaller probability regions.
- the current probability region of length y is further divided in probability regions of length less than y.
- the number of bits needed to code the region is equal to the logarithm of inverse of the length of the final probability region.
- y( ⁇ (n 1 , v 1 )) as the length of the probability region of ⁇ (n 1 , v 1 ). Note that if we have infinite precision then the length of probability region for each of these sequences will be same. However, the finite fixed precision makes the length of the probability region dependent on the order of ones and zeros in the sequence.
- a binary sequence ⁇ (n 1 , v 1 ) is obtained from ⁇ (n 1 ⁇ 1, v 1 ⁇ 1) by concatenation of a one or from ⁇ (n 1 ⁇ 1, v 1 ) by concatenation of a 1. So the probability regions y( ⁇ (n 1 , v 1 )) is either
- y min (n, v, n 1 , v 1 ) is a function of y min (n, v, n 1 ⁇ 1, v 1 ⁇ 1) and y min (n, v, n 1 ⁇ 1, v 1 ).
- y min (n, v, n, v) is a function of y min (n, v, n 1 ⁇ 1, v 1 ⁇ 1) and y min (n, v, n 1 ⁇ 1, v 1 ).
- FPC is based on an approximation of the combinatorial formula given by EQU. 1 that are less computationally intensive to evaluate.
- One approximation that is used according to alternative embodiments of the invention is:
- P′(i) are obtained so that the unique decodability inequality: F ′( n,k ) ⁇ F ′( n ⁇ 1, k )+ F ′( n ⁇ 1, k ⁇ 1) holds.
- the approximate combinatorial function is generated using the same approach. However, in this case the P′(i) are obtained so that besides unique decodability inequality following inequalities are also satisfied.
- FIG. 5 is a flowchart of an encoder that selectively uses AC and combinatorial functions from FPC to generate individual code words and combines the individual code words using an FPC combined code formula.
- an integer valued vector representing a sequence of pulses is received.
- the length of the vector is equal to n and the sum of magnitudes of the integer valued elements is m.
- m can be said to be the sum of magnitude quanta of the pulses represented by the vector.
- the information included in the integer valued vector is divided into four parts, namely the number of non-zero positions denoted v, the actual locations of the non-zero positions denoted ⁇ , the magnitude of the non-zero elements denoted ⁇ , and the signs of the non-zero elements denoted ⁇ . This is a division of the information that is used in FPC.
- an FPC enumeration formula (EQU. 3) is used to generate a code word for the number of non-zero positions. This code word is denoted C v .
- ⁇ i is a binary code for the sign of the i TH non-zero element. ⁇ i is equal to one if the sign is positive and ⁇ i is equal to zero if the sign is negative.
- Decision block 510 test if a ratio (v ⁇ 1)/(m ⁇ 1) is between 1 ⁇ 4 and 3 ⁇ 4. As discussed above alternative bounds may be used in lieu of 1 ⁇ 4 and 3 ⁇ 4. For the magnitude information this ratio is analogous to the ratio of one-valued bits to the total number of bits. If the outcome of decision block 510 is positive then in block 512 AC is selected to code the magnitudes. If on the other hand the outcome of block 510 is negative then in block 514 combinatorial coding is selected to code the magnitudes. After a selection of AC or combinatorial is made in blocks 512 or 514 , in block 516 the code word for the magnitudes, denoted C ⁇ , is generated. In the case of AC the magnitude information is first transformed into a binary vector as discussed above.
- AC is the selected method than an initial probability is computed using an FPC combinatorial formula e.g., EQU. 1 or a low cost approximation thereof, e.g., EQU. 11.
- combinatorial coding is the selected method than an combinatorial code for the magnitudes can be computed using the following formula.
- m j is the magnitude of the j TH non-zero element and the function F is an FPC combinatorial formula, e.g., EQU. 1 or a low cost approximation thereof, e.g., EQU. 11.
- decision block 518 tests if the ratio of the number of non-zero elements v to the number of elements n in the input vector is between 1 ⁇ 4 and 3 ⁇ 4. Alternatively other bounds may be used. If the outcome of decision block 518 is positive then in block 520 AC is selected to encode the information as to the positions of the non-zero elements and an initial probability based on FPC (e.g., EQU. 1 or EQU. 11) is generated. Alternatively, another type of range coding may be used in lieu of arithmetic coding to code magnitudes and positions. If, on the other hand, the outcome of decision block 518 is negative then block 522 combinatorial coding is selected to encode the information as to the positions of the non-zero elements. After either block 520 or 522 , in block 524 the code for representing the position information, denoted C ⁇ is generated.
- FPC e.g., EQU. 1 or EQU. 11
- FIG. 6 is a flowchart 600 of decoder for decoding the codes generated by the encoder shown in FIG. 5 .
- a codeword C that represents an integer valued vector (sequence) of length n with a magnitude sum m is received.
- the number of non-zero positions v is found by finding the largest codeword C v that is less than C.
- C v is a function of v and n given by an FPC combinatorial function or enumeration method (e.g., EQU. 3).
- C′ is decombined to obtain C ⁇ C ⁇ and C ⁇ .
- One way to decombine is to extract the last v bits C′ and set these equal to C ⁇ .
- the remaining sequence of bits is denoted C′′.
- C ⁇ is then set equal to C′′ divided by P(n,k,w), and C ⁇ is set equal to C′′ mod P(n,k,w). This assumes that C′′ was equal to P(n,k,w) C ⁇ +C ⁇ .
- blocks 610 , 612 and 620 proceed in parallel.
- the signs of the non-zero elements of the vector denoted ⁇ are decoded from C ⁇ according to equation 18.
- Block 612 is a decision block that test if the ratio (v ⁇ 1)/(m ⁇ 1) is between 1 ⁇ 4 and 3 ⁇ 4. If so then in block 614 AC is selected for decoding C ⁇ and an initial probability for decoding C ⁇ to be used is generated by applying an FPC combinatorial function (e.g., EQU. 1 or EQU. 11). If the outcome of decision block 612 is negative then in block 616 combinatorial coding is selected for decoding C ⁇ . After either block 614 or block 616 in block 618 C ⁇ is decoded using the selected method.
- FPC combinatorial function e.g., EQU. 1 or EQU. 11
- Block 620 is a decision block that tests if the ratio of the number of non-zero elements v to the number of elements n in the input vector is between 1 ⁇ 4 and 3 ⁇ 4. If the outcome of decision block 622 is positive then in block 622 AC is selected for decoding C ⁇ , and an initial probability for decoding C ⁇ is generated using an FPC combinatorial function (e.g., EQU. 1 or EQU. 11). If the outcome of decision block 620 is negative then in block 624 combinatorial coding is selected for decoding C ⁇ . After either block 622 or 624 in block 626 C ⁇ is decoded using the selected method.
- FPC combinatorial function e.g., EQU. 1 or EQU. 11
- the information as to the positions of the non-zero elements from C ⁇ is combined to re-construct the encoded integer valued vector.
- FIG. 7 is a flowchart 700 of an arithmetic encoder according to an embodiment of the invention
- FIG. 8 is a flowchart 800 of an arithmetic decoder according to an embodiment of the invention.
- the flowcharts in FIG. 7 and FIG. 8 can be used respectively to encode and decode the positions and magnitudes of the pulses.
- the number of pulses and the signs of the pulses can also be encoded and decoded using appropriately configured arithmetic encoders and arithmetic decoders respectively.
- a single code word can be computed to represent collectively the number of pulses, the positions, the magnitudes, and the signs of the pulses.
- individual code words can be computed to represent separately the number of pulses, the positions, the magnitudes, and the signs of the pulses, and optionally these individual code words can be concatenated to form a single code word.
- a single code word can be computed to represent the positions and magnitudes together, and two individual code words can be computed to represent the number of pulses and the signs separately.
- the encoding algorithm will be described.
- the variables i, j, x, y, rl, ⁇ , and ⁇ 0 are initialized.
- the value P(n,k,w) to which y is initialized is the above mentioned initial probability (initial code space position) and in one form is given by equation 5 above.
- decision block 704 tests if there are any remaining ones in the sequence ⁇ being encoded. If so the flowchart branches to block 706 in which the quantity z is computed, the number of information bits yet to be coded ⁇ is decremented, and the index i is incremented. Initially the outcome of decision block 704 is positive.
- the quantity z is related to the size of the portion of the code space that is associated with a zero value for a current bit position in the sequence being encoded and is a fraction of the portion of the code space associated with a previous bit. In particular the fraction associated with a zero bit is set to the number of zero bits remaining divided by the total number of bits remaining. This is accomplished in the computation of z in block 706 .
- the region corresponding to a zero bit at the current position is obtained by multiplying y with the probability of a zero bit and rounding the result to the nearest integer.
- a bias of 1 ⁇ 2 and the floor function are used for rounding to the nearest integer.
- fixed probabilities can be used. For example if the pulse sign information is to be encoded separately, and there is an equal probability of pulses being positive and negative, the computation of z can be based on fixed probabilities of zero and one bits equal to 1 ⁇ 2.
- the flowchart 700 reaches decision block 708 which tests if the current bit in the sequence being encoded, identified by index i, is a zero or one. If the current bit is a zero then in block 710 the value y is set equal to z and ⁇ 0 (the number of zeros yet to be encountered) is decremented. The value of x is unchanged. On the other hand if the current bit is a one then in block 712 y is set equal to a previous value of y minus z and x is set equal to a previous value of x plus z. The new value of y is a proportion of the previous value of y with the proportion given by the probability of the current bit value (zero or one). x and y are related respectively to the starting point and the width of the area within the code space that corresponds to the bit sequence encoded so far.
- decision block 714 tests if the value of y is less than 2 w . (Note that blocks 706 , 710 and 712 will reduce the value of y.) If so then in block 716 the value of y is scaled up by a factor of 2 (e.g., by a left bit shift), the value of e is computed, and the value of x is reset to 2(x mod 2 w ). Using the mod function essentially isolates a portion of x that is relevant to remaining, less significant code bits.
- both y and x are scaled up in block 716 in a process referred to as renormalization, even as the encoding continues and more and more information bits are being encoded, the full value of 2 w is still used as the basis of comparison of x in the floor function to determine the value of the code bits. Similarly, the full value of 2 w is still used as the basis of comparison of y in the decision block 714 .
- decision block 718 tests if the variable e is equal to 1. If the outcome of decision block 718 is negative, then the flowchart 700 branches to decision block 720 which tests if the variable e is greater than 1 (e.g., if there is an overflow condition). If not, meaning that the value of e is zero, the flowchart 700 branches to block 722 wherein the value of the run bit variable rb is set equal to 1.
- the flowchart 700 reaches block 724 in which the code bit index j is incremented, the code bit v j is set equal to value of nb, and then nb is set equal to e. Note that for the first two executions of block 724 , j is set to values less than one, so the values of v j that are set will not be utilized as part of the output code.
- decision block 718 When the outcome of decision block 718 is positive the flowchart 700 will branch through block 726 in which the run length variable rl is incremented and then return to decision block 714 .
- Decision block 728 tests if the run length variable rl is greater than zero—the initial value. If so then in block 730 the index j is incremented, code bit v j is set to the run bit variable rb, and the run length rl is decremented, before returning to decision block 728 . When it is determined in decision block 728 that the run length variable rl is zero the flowchart 700 returns to block 714 .
- decision block 720 If the outcome of decision block 720 is positive, i.e., an overflow condition has been detected, then the flowchart 700 branches to block 732 in which the nb variable is incremented, the rb variable is zeroed, and the e is decremented by 2, after which the flowchart 700 proceeds with block 724 .
- the flowchart 700 branches to block 734 in which the value of the variable e is computed as the floor function of x divided by 2 w .
- Next decision block 736 tests if e is greater than 1. If so then in block 738 the next bit variable nb is incremented, the run bit variable rb is set equal to 0, and the variable e is decremented by 2. If the outcome of decision block 736 is negative, then in block 740 the run bit variable rb is set equal to 1. After either block 738 or 740 , in block 742 , the index j is incremented, the code bit v j is set equal to the next bit variable nb, and the next bit variable nb is set equal to e.
- Next decision block 744 tests if the run length variable rl is greater than zero. If so then in block 746 the index j is incremented, the code bit v j is set equal to the run bit variable rb, and the run length variable rl is decremented, after which the flowchart 700 returns to block 744 .
- next bit variable nb the index j is incremented, and the code bit v j is set equal to the next bit variable nb.
- Next decision block 750 tests if the index j is less than the code length l. If so then block 752 sets remaining code bits to 1. When j reaches l the encoding terminates.
- a flowchart 800 of an arithmetic decoding method corresponding to the encoding method shown in FIG. 7 will be described.
- the variables i, j, x, y, ⁇ , and ⁇ 0 are initialized.
- Y is initialized to an initial code space position P(n,k,w).
- Block 804 tests if y is less than 2 w .
- the flowchart 800 branches to decision block 806 which tests if the index j is less than l.
- the flowchart 800 branches to block 808 in which j is incremented, and the variable x is reset to 2x+v i .
- successive executions of block 808 build up the value of x based on the values of the code bits, taking into account the position (significance) of the bits.
- the value of y is similarly increased by multiplying by two.
- the flowchart 800 returns to decision block 804 .
- the outcome of decision block 806 will be negative, and in this case, in block 812 x is set to 2x+1. This is equivalent to reading in a code bit with a value of 1.
- block 810 is executed.
- the flowchart 800 branches to block 814 which computes the value of z as shown, decrements the number of information bits yet to be decoded ⁇ , and increments the index i which points to bits of the decoded sequence.
- decision block 816 tests if x is less than z. If not then in block 818 an i th decoded bit u i is set equal to one, x and y are decremented by z to account for the parts of x and y represented by the i th bit just decoded.
- decision block 816 determines that x is less than z then in block 820 the i th decoded bit u i is set equal to zero, y is set equal to z, and the number of zeros yet to be encountered ⁇ 0 is decremented to account for the zero bit u i just decoded.
- decision block 822 tests if the number of zeros remaining is less than the total number of bits remaining. If the outcome of block 822 is affirmative, the flowchart 800 loops back to decision block 804 . If the outcome of block 822 is negative, the flowchart branches to decision block 824 which tests if i is less than n. If so block 826 zero fills the remaining bits. When the outcome of decision block 824 is negative the decoding process terminates.
Abstract
Description
-
- An alternative to FPC is Arithmetic Coding (AC). AC is described in co-pending patent application Ser. No. 12/247,440 entitled “Arithmetic Encoding For CELP Encoders”. AC is a form of range coding. In AC a binary sequence is mapped to a sub-region (probability region) of a code space (e.g., a subinterval of the interval from zero to one), and a number within the sub-region is used as a code to represent the binary sequence. For the initial bit the code space is divided into two sub-regions. One sub-region has a size proportional to the probability of a zero bit in the first bit position and the remaining sub-region has a size proportional to the probability of a one bit (one minus the probability of zero bit). One of the sub-regions is selected based on the actual value of the first bit. Successive bits, successively divide previously selected sub-regions in like manner until the complete binary sequence has been processed and a final sub-region has been identified. As taught in U.S. patent application Ser. No. 12/247,440 AC can also be used to encode integer valued (as opposed to binary) vectors. In order to do so, various information defining the integer valued vector is first transformed into a set of binary vectors and these are encoded using AC.
-
- Where, n is the position index of the one (note that the indexing starts from zero at the first bit position); and
- d is an integer that indicates which one, i.e., the first, second or third, etc is in question.
- Where, n is the position index of the one (note that the indexing starts from zero at the first bit position); and
C=C v+(P(n,v)C μ +C π)2v +C σ EQU. 2
In this FPC combined code formula:
v is the number of non-zero elements;
Cπ is the arithmetic code word representing the locations of the non-zero elements;
Cμ is the arithmetic code word representing the magnitudes of the non-zero elements;
Cσ is an FPC code word representing the signs of the non-zero elements;
Cv is a code word representing a number of non-zero pulses and is given by:
where,
Now the smaller the value of P(n,v) the more is the advantage of using the coding technique described by EQU. 2 and EQU. 3. However, assigning lower value of P(n,v) will result in the code sequence having significantly higher information content than a sequence that does not use the initial probability and hence may require an extra bit. Basically the optimum valued of P(n,v) will be smallest value such that the number of bits required to code the modified sequence using arithmetic coding is the same as that of the length of codeword used for coding without using the initial probability. If this is so the coding technique described by EQU. 2 and EQU. 3 has the advantages that an extra bit is not needed, memory requirements are reduced compared to prior art FPC methods because AC is used for coding positions and magnitudes. Only a small amount of memory may be needed for storing values of P(n,v). In applicants co-pending patent application Ser. No. 12/247,440 an upper bound on the extra or overhead bits used for coding using AC with finite fixed precision length w was obtained. The upper bound is given by:
Ω(n,v,w)=log2(1/1−(n/v)2−(w+1))+log2(1/1−(n−1/v−1)2−(w+1))+ . . . +log2(1/1−(n−v+1/1)2−(w+1))+log2(1/1−(n/n−v)2−(w+1))+log2(1/1−(n−1/n−v−1)2−(w+1))+ . . . +log2(v+1/1)2−(w+1)) EQU. 4
Length of | Length of | |||
Binary | Number of | fixed | Bound From | Bound Using |
Sequence (n) | Ones (v) | Precision (w) | (9) | Trellis |
280 | 22 | 14 | 0.109368 | 0.021418 |
280 | 50 | 10 | 1.931138 | 0.377091 |
107 | 39 | 14 | 0.038382 | 0.006988 |
and R′(t) is an approximation of the function R′(t)≈2t, given as:
R′(t)=└2t
where t=ti+tf is broken down into integer and fractional components of t, and Tf=2t
F′(n,k)≧F′(n−1,k)+F′(n−1,k−1) holds. EQU. 14
In the case of dynamic switching between AC and FP, the approximate combinatorial function is generated using the same approach. However, in this case the P′(i) are obtained so that besides unique decodability inequality following inequalities are also satisfied.
C σ=
C μ=Σk=1 v F(Σj=1 k m j ,k) EQU. 19
where, mj is the magnitude of the jTH non-zero element and the function F is an FPC combinatorial formula, e.g., EQU. 1 or a low cost approximation thereof, e.g., EQU. 11.
TABLE I | ||
Upper | ||
Symbol | Meaning | bound |
ui | ith information bit | 1 |
i | index for the information word α: u1, u2, . . . , un | n |
vi | jth code bit | 1 |
j | index for the codeword β: v1, v2, . . . , vl | l |
w | precision parameter | design |
value | ||
x | (w + 2) least significant bits of the start of the | 2w+2 − 1 |
interval corresponding to α and its prefixes | ||
y | (w + 1) least significant bits of the width of the | 2w+1 − 1 |
interval corresponding to α and its prefixes | ||
n | number of information bits | design |
value | ||
l | number of code bits | design |
value | ||
k | number of 1's in α, i.e., the weight of α | design |
value | ||
ñ | number of bits yet to be scanned in α | n |
ñ0 | number of 0's yet to be scanned in α | n − k |
z | value of └(2yñ0 + ñ)/2ñ┘ | y |
e | ejected value from x, a code bit plus a possible carry | 3 |
nb | next bit to be stored away (or transmitted) | 1 |
rb | Run bit, 0 if there is a carry and 1 if there is |
1 |
rl | Run length | l |
Claims (16)
C=C v+(P(n,v)C μ +C π)2v +C σ
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/651,303 US8149144B2 (en) | 2009-12-31 | 2009-12-31 | Hybrid arithmetic-combinatorial encoder |
PCT/US2010/061714 WO2011082047A2 (en) | 2009-12-31 | 2010-12-22 | Hybrid arithmetic-combinatorial encoder |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/651,303 US8149144B2 (en) | 2009-12-31 | 2009-12-31 | Hybrid arithmetic-combinatorial encoder |
Publications (2)
Publication Number | Publication Date |
---|---|
US20110156932A1 US20110156932A1 (en) | 2011-06-30 |
US8149144B2 true US8149144B2 (en) | 2012-04-03 |
Family
ID=44073598
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/651,303 Active 2030-09-22 US8149144B2 (en) | 2009-12-31 | 2009-12-31 | Hybrid arithmetic-combinatorial encoder |
Country Status (2)
Country | Link |
---|---|
US (1) | US8149144B2 (en) |
WO (1) | WO2011082047A2 (en) |
Cited By (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20110125506A1 (en) * | 2009-11-26 | 2011-05-26 | Research In Motion Limited | Rate-distortion optimization for advanced audio coding |
US20120265540A1 (en) * | 2009-10-20 | 2012-10-18 | Guillaume Fuchs | Audio encoder, audio decoder, method for encoding an audio information, method for decoding an audio information and computer program using a detection of a group of previously-decoded spectral values |
US20130006646A1 (en) * | 2011-06-30 | 2013-01-03 | Volodya Grancharov | Transform Audio Codec and Methods for Encoding and Decoding a Time Segment of an Audio Signal |
US8645145B2 (en) | 2010-01-12 | 2014-02-04 | Fraunhoffer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Audio encoder, audio decoder, method for encoding and audio information, method for decoding an audio information and computer program using a hash table describing both significant state values and interval boundaries |
WO2016025282A1 (en) | 2014-08-15 | 2016-02-18 | Google Technology Holdings LLC | Method for coding pulse vectors using statistical properties |
US9336788B2 (en) | 2014-08-15 | 2016-05-10 | Google Technology Holdings LLC | Method for coding pulse vectors using statistical properties |
US9620136B2 (en) | 2014-08-15 | 2017-04-11 | Google Technology Holdings LLC | Method for coding pulse vectors using statistical properties |
US9990931B2 (en) | 2014-08-15 | 2018-06-05 | Google Technology Holdings LLC | Method for coding pulse vectors using statistical properties |
Families Citing this family (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8576096B2 (en) * | 2007-10-11 | 2013-11-05 | Motorola Mobility Llc | Apparatus and method for low complexity combinatorial coding of signals |
US20090234642A1 (en) * | 2008-03-13 | 2009-09-17 | Motorola, Inc. | Method and Apparatus for Low Complexity Combinatorial Coding of Signals |
US20100088090A1 (en) * | 2008-10-08 | 2010-04-08 | Motorola, Inc. | Arithmetic encoding for celp speech encoders |
US8280729B2 (en) * | 2010-01-22 | 2012-10-02 | Research In Motion Limited | System and method for encoding and decoding pulse indices |
RU2505921C2 (en) * | 2012-02-02 | 2014-01-27 | Корпорация "САМСУНГ ЭЛЕКТРОНИКС Ко., Лтд." | Method and apparatus for encoding and decoding audio signals (versions) |
US10389558B2 (en) * | 2016-10-03 | 2019-08-20 | Mediatek Inc. | Method and apparatus for synchronization |
Citations (44)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4560977A (en) | 1982-06-11 | 1985-12-24 | Mitsubishi Denki Kabushiki Kaisha | Vector quantizer |
US4670851A (en) | 1984-01-09 | 1987-06-02 | Mitsubishi Denki Kabushiki Kaisha | Vector quantizer |
US4727354A (en) | 1987-01-07 | 1988-02-23 | Unisys Corporation | System for selecting best fit vector code in vector quantization encoding |
US4853778A (en) | 1987-02-25 | 1989-08-01 | Fuji Photo Film Co., Ltd. | Method of compressing image signals using vector quantization |
US5006929A (en) | 1989-09-25 | 1991-04-09 | Rai Radiotelevisione Italiana | Method for encoding and transmitting video signals as overall motion vectors and local motion vectors |
US5067152A (en) | 1989-01-30 | 1991-11-19 | Information Technologies Research, Inc. | Method and apparatus for vector quantization |
US5327521A (en) | 1992-03-02 | 1994-07-05 | The Walt Disney Company | Speech transformation system |
US5692102A (en) | 1995-10-26 | 1997-11-25 | Motorola, Inc. | Method device and system for an efficient noise injection process for low bitrate audio compression |
US5729655A (en) | 1994-05-31 | 1998-03-17 | Alaris, Inc. | Method and apparatus for speech compression using multi-mode code excited linear predictive coding |
US6236960B1 (en) | 1999-08-06 | 2001-05-22 | Motorola, Inc. | Factorial packing method and apparatus for information coding |
US6263312B1 (en) | 1997-10-03 | 2001-07-17 | Alaris, Inc. | Audio compression and decompression employing subband decomposition of residual signal and distortion reduction |
US6304196B1 (en) | 2000-10-19 | 2001-10-16 | Integrated Device Technology, Inc. | Disparity and transition density control system and method |
US20010033699A1 (en) | 2000-02-18 | 2001-10-25 | Intelligent Pixels, Inc. | Very low-power parallel video processor pixel circuit |
US20020015415A1 (en) | 2000-05-08 | 2002-02-07 | Yukimasa Sugino | Transmission apparatus capable of transmitting high speed modem signal |
US20020052734A1 (en) | 1999-02-04 | 2002-05-02 | Takahiro Unno | Apparatus and quality enhancement algorithm for mixed excitation linear predictive (MELP) and other speech coders |
US6445686B1 (en) | 1998-09-03 | 2002-09-03 | Lucent Technologies Inc. | Method and apparatus for improving the quality of speech signals transmitted over wireless communication facilities |
US6504877B1 (en) | 1999-12-14 | 2003-01-07 | Agere Systems Inc. | Successively refinable Trellis-Based Scalar Vector quantizers |
US6662154B2 (en) | 2001-12-12 | 2003-12-09 | Motorola, Inc. | Method and system for information signal coding using combinatorial and huffman codes |
US20040141572A1 (en) | 2003-01-21 | 2004-07-22 | Johnson Phillip Marc | Multi-pass inband bit and channel decoding for a multi-rate receiver |
US6813602B2 (en) | 1998-08-24 | 2004-11-02 | Mindspeed Technologies, Inc. | Methods and systems for searching a low complexity random codebook structure |
US20040252768A1 (en) | 2003-06-10 | 2004-12-16 | Yoshinori Suzuki | Computing apparatus and encoding program |
US20050055203A1 (en) | 2003-09-09 | 2005-03-10 | Nokia Corporation | Multi-rate coding |
US6940431B2 (en) | 2003-08-29 | 2005-09-06 | Victor Company Of Japan, Ltd. | Method and apparatus for modulating and demodulating digital data |
US6975253B1 (en) | 2004-08-06 | 2005-12-13 | Analog Devices, Inc. | System and method for static Huffman decoding |
US20060022374A1 (en) | 2004-07-28 | 2006-02-02 | Sun Turn Industrial Co., Ltd. | Processing method for making column-shaped foam |
US7031493B2 (en) | 2000-10-27 | 2006-04-18 | Canon Kabushiki Kaisha | Method for generating and detecting marks |
US7161507B2 (en) | 2004-08-20 | 2007-01-09 | 1St Works Corporation | Fast, practically optimal entropy coding |
US7230550B1 (en) | 2006-05-16 | 2007-06-12 | Motorola, Inc. | Low-complexity bit-robust method and system for combining codewords to form a single codeword |
US7231091B2 (en) | 1998-09-21 | 2007-06-12 | Intel Corporation | Simplified predictive video encoder |
US7414549B1 (en) | 2006-08-04 | 2008-08-19 | The Texas A&M University System | Wyner-Ziv coding based on TCQ and LDPC codes |
US7461106B2 (en) | 2006-09-12 | 2008-12-02 | Motorola, Inc. | Apparatus and method for low complexity combinatorial coding of signals |
US20090019071A1 (en) | 2007-07-12 | 2009-01-15 | Donald Martin Monro | Blocking for combinatorial coding/decoding for electrical computers and digital data processing systems |
US20090100121A1 (en) | 2007-10-11 | 2009-04-16 | Motorola, Inc. | Apparatus and method for low complexity combinatorial coding of signals |
US20090112607A1 (en) | 2007-10-25 | 2009-04-30 | Motorola, Inc. | Method and apparatus for generating an enhancement layer within an audio coding system |
US20090234642A1 (en) | 2008-03-13 | 2009-09-17 | Motorola, Inc. | Method and Apparatus for Low Complexity Combinatorial Coding of Signals |
US20090259477A1 (en) | 2008-04-09 | 2009-10-15 | Motorola, Inc. | Method and Apparatus for Selective Signal Coding Based on Core Encoder Performance |
US20100088090A1 (en) | 2008-10-08 | 2010-04-08 | Motorola, Inc. | Arithmetic encoding for celp speech encoders |
US20100169101A1 (en) | 2008-12-29 | 2010-07-01 | Motorola, Inc. | Method and apparatus for generating an enhancement layer within a multiple-channel audio coding system |
US20100169100A1 (en) | 2008-12-29 | 2010-07-01 | Motorola, Inc. | Selective scaling mask computation based on peak detection |
US20100169099A1 (en) | 2008-12-29 | 2010-07-01 | Motorola, Inc. | Method and apparatus for generating an enhancement layer within a multiple-channel audio coding system |
US20100169087A1 (en) | 2008-12-29 | 2010-07-01 | Motorola, Inc. | Selective scaling mask computation based on peak detection |
US7864086B2 (en) * | 2008-10-06 | 2011-01-04 | Donald Martin Monro | Mode switched adaptive combinatorial coding/decoding for electrical computers and digital data processing systems |
US7889103B2 (en) | 2008-03-13 | 2011-02-15 | Motorola Mobility, Inc. | Method and apparatus for low complexity combinatorial coding of signals |
US20110096830A1 (en) | 2009-10-28 | 2011-04-28 | Motorola | Encoder that Optimizes Bit Allocation for Information Sub-Parts |
-
2009
- 2009-12-31 US US12/651,303 patent/US8149144B2/en active Active
-
2010
- 2010-12-22 WO PCT/US2010/061714 patent/WO2011082047A2/en active Application Filing
Patent Citations (46)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4560977A (en) | 1982-06-11 | 1985-12-24 | Mitsubishi Denki Kabushiki Kaisha | Vector quantizer |
US4670851A (en) | 1984-01-09 | 1987-06-02 | Mitsubishi Denki Kabushiki Kaisha | Vector quantizer |
US4727354A (en) | 1987-01-07 | 1988-02-23 | Unisys Corporation | System for selecting best fit vector code in vector quantization encoding |
US4853778A (en) | 1987-02-25 | 1989-08-01 | Fuji Photo Film Co., Ltd. | Method of compressing image signals using vector quantization |
US5067152A (en) | 1989-01-30 | 1991-11-19 | Information Technologies Research, Inc. | Method and apparatus for vector quantization |
US5006929A (en) | 1989-09-25 | 1991-04-09 | Rai Radiotelevisione Italiana | Method for encoding and transmitting video signals as overall motion vectors and local motion vectors |
US5327521A (en) | 1992-03-02 | 1994-07-05 | The Walt Disney Company | Speech transformation system |
US5729655A (en) | 1994-05-31 | 1998-03-17 | Alaris, Inc. | Method and apparatus for speech compression using multi-mode code excited linear predictive coding |
US5692102A (en) | 1995-10-26 | 1997-11-25 | Motorola, Inc. | Method device and system for an efficient noise injection process for low bitrate audio compression |
US6263312B1 (en) | 1997-10-03 | 2001-07-17 | Alaris, Inc. | Audio compression and decompression employing subband decomposition of residual signal and distortion reduction |
US6813602B2 (en) | 1998-08-24 | 2004-11-02 | Mindspeed Technologies, Inc. | Methods and systems for searching a low complexity random codebook structure |
US6445686B1 (en) | 1998-09-03 | 2002-09-03 | Lucent Technologies Inc. | Method and apparatus for improving the quality of speech signals transmitted over wireless communication facilities |
US7231091B2 (en) | 1998-09-21 | 2007-06-12 | Intel Corporation | Simplified predictive video encoder |
US20020052734A1 (en) | 1999-02-04 | 2002-05-02 | Takahiro Unno | Apparatus and quality enhancement algorithm for mixed excitation linear predictive (MELP) and other speech coders |
US6453287B1 (en) | 1999-02-04 | 2002-09-17 | Georgia-Tech Research Corporation | Apparatus and quality enhancement algorithm for mixed excitation linear predictive (MELP) and other speech coders |
US6236960B1 (en) | 1999-08-06 | 2001-05-22 | Motorola, Inc. | Factorial packing method and apparatus for information coding |
US6504877B1 (en) | 1999-12-14 | 2003-01-07 | Agere Systems Inc. | Successively refinable Trellis-Based Scalar Vector quantizers |
US20010033699A1 (en) | 2000-02-18 | 2001-10-25 | Intelligent Pixels, Inc. | Very low-power parallel video processor pixel circuit |
US20020015415A1 (en) | 2000-05-08 | 2002-02-07 | Yukimasa Sugino | Transmission apparatus capable of transmitting high speed modem signal |
US6304196B1 (en) | 2000-10-19 | 2001-10-16 | Integrated Device Technology, Inc. | Disparity and transition density control system and method |
US7031493B2 (en) | 2000-10-27 | 2006-04-18 | Canon Kabushiki Kaisha | Method for generating and detecting marks |
US6662154B2 (en) | 2001-12-12 | 2003-12-09 | Motorola, Inc. | Method and system for information signal coding using combinatorial and huffman codes |
US20040141572A1 (en) | 2003-01-21 | 2004-07-22 | Johnson Phillip Marc | Multi-pass inband bit and channel decoding for a multi-rate receiver |
US20040252768A1 (en) | 2003-06-10 | 2004-12-16 | Yoshinori Suzuki | Computing apparatus and encoding program |
US6940431B2 (en) | 2003-08-29 | 2005-09-06 | Victor Company Of Japan, Ltd. | Method and apparatus for modulating and demodulating digital data |
US20050055203A1 (en) | 2003-09-09 | 2005-03-10 | Nokia Corporation | Multi-rate coding |
US20060022374A1 (en) | 2004-07-28 | 2006-02-02 | Sun Turn Industrial Co., Ltd. | Processing method for making column-shaped foam |
US6975253B1 (en) | 2004-08-06 | 2005-12-13 | Analog Devices, Inc. | System and method for static Huffman decoding |
US7161507B2 (en) | 2004-08-20 | 2007-01-09 | 1St Works Corporation | Fast, practically optimal entropy coding |
US7230550B1 (en) | 2006-05-16 | 2007-06-12 | Motorola, Inc. | Low-complexity bit-robust method and system for combining codewords to form a single codeword |
US7414549B1 (en) | 2006-08-04 | 2008-08-19 | The Texas A&M University System | Wyner-Ziv coding based on TCQ and LDPC codes |
US7461106B2 (en) | 2006-09-12 | 2008-12-02 | Motorola, Inc. | Apparatus and method for low complexity combinatorial coding of signals |
US20090024398A1 (en) | 2006-09-12 | 2009-01-22 | Motorola, Inc. | Apparatus and method for low complexity combinatorial coding of signals |
US20090019071A1 (en) | 2007-07-12 | 2009-01-15 | Donald Martin Monro | Blocking for combinatorial coding/decoding for electrical computers and digital data processing systems |
US20090100121A1 (en) | 2007-10-11 | 2009-04-16 | Motorola, Inc. | Apparatus and method for low complexity combinatorial coding of signals |
US20090112607A1 (en) | 2007-10-25 | 2009-04-30 | Motorola, Inc. | Method and apparatus for generating an enhancement layer within an audio coding system |
US20090234642A1 (en) | 2008-03-13 | 2009-09-17 | Motorola, Inc. | Method and Apparatus for Low Complexity Combinatorial Coding of Signals |
US7889103B2 (en) | 2008-03-13 | 2011-02-15 | Motorola Mobility, Inc. | Method and apparatus for low complexity combinatorial coding of signals |
US20090259477A1 (en) | 2008-04-09 | 2009-10-15 | Motorola, Inc. | Method and Apparatus for Selective Signal Coding Based on Core Encoder Performance |
US7864086B2 (en) * | 2008-10-06 | 2011-01-04 | Donald Martin Monro | Mode switched adaptive combinatorial coding/decoding for electrical computers and digital data processing systems |
US20100088090A1 (en) | 2008-10-08 | 2010-04-08 | Motorola, Inc. | Arithmetic encoding for celp speech encoders |
US20100169101A1 (en) | 2008-12-29 | 2010-07-01 | Motorola, Inc. | Method and apparatus for generating an enhancement layer within a multiple-channel audio coding system |
US20100169100A1 (en) | 2008-12-29 | 2010-07-01 | Motorola, Inc. | Selective scaling mask computation based on peak detection |
US20100169099A1 (en) | 2008-12-29 | 2010-07-01 | Motorola, Inc. | Method and apparatus for generating an enhancement layer within a multiple-channel audio coding system |
US20100169087A1 (en) | 2008-12-29 | 2010-07-01 | Motorola, Inc. | Selective scaling mask computation based on peak detection |
US20110096830A1 (en) | 2009-10-28 | 2011-04-28 | Motorola | Encoder that Optimizes Bit Allocation for Information Sub-Parts |
Non-Patent Citations (33)
Title |
---|
"Frame error robust narrowband and wideband embedded variable bit-rate coding of speech and audio from 8-32 kbit/s", ITU-T G.718 Telecommunication Standardization Sector of ITU, (Jun. 2008). |
"Low-complexity coding at 24 and 32 kbit/s for hands-free operation in systems with low frame loss", ITU-T G.722.1 Telecommunication Standardization Sector of ITU (May 2005). |
3rd Generation Partnership Project 2 (3GPP2), "Enhanced Variable Rate Codec, Speech Service Options 3, 68, and 70 for Wideband Spread Spectrum Digital Systems", 3GPP2 C. S0014-C version 1.0, Jan. 2007, 5 pages, XP002510839. |
Andy C. Hung and Teresa H.-Y. Meng, "Error Resilient Pyramid Vector Quantization for Image Compression", IEEE Transactions on Image Processing, 1994, pp. 583-587. |
Andy C. Hung et al., "Error-Resilient Pyramid Vector Quantization for Image Compression", IEEE Transactions on Image Processing, Oct. 1998, pp. 1373-1386, vol. 7 No. 10. |
Boris Ya. Ryabko and Elena Matchikina, "Fast and Efficient Construction of an Unbiased Random Sequence", IEEE Transactions on Info. Theory, May 2000, pp. 1090-1093, vol. 46 No. 3. |
Christopher B. Jones, "An Efficient Coding System for Long Source Sequences," IEEE Transactions on Info. Theory, May 1981, pp. 280-291, vol. IT-27 No. 3. |
Christopher M. Garrido et al., "Towards iLBC Speech Coding at Lower Rates Through a New Formulation of the Start State Search", IEEE Proceedings of Int'l Conf. on Acoustics, Speech, and Signal Processing (ICASSP), Mar. 18, 2005, pp. 769-772, vol. 1. |
Daniele Cadel and Giorgio Parladori, "Pyramid Vector Coding for High Quality Audio Compression", IEEE Proceedings of Intl Conf. on Acoustics, Speech, and Signal Processing (ICASSP), Apr. 21-24, 1997, pp. 343-346, vol. 1. |
Ido Tal et al., "On Row-by-Row Coding for 2-D Constraints", IEEE Int'l Symp. on Info. Theory (ISIT), Jul. 9-14, 2006, pp. 1204-1208. |
James P. Ashley, Edgardo M. Cruz-Zeno, Udar Mittal, and Weimin Peng, "Wideband Coding of Speech Using a Scalable Pulse Codebook", Proc. of the 2000 IEEE Workshop on Speech Coding, Sep. 2000. |
Norman Abramson, "Some Properties of Codes", Information Theory and Coding, 1963, pp. 61-62, McGraw-Hill, Hill, New York. |
Patent Cooperation Treaty, "PCT Search Report and Written Opinion of the International Searching Authority" for International Application No. PCT/US2008/077321, May 28, 2009, 13 pages. |
Patent Cooperation Treaty, "PCT Search Report and Written Opinion of the International Searching Authority" for International Application No. PCT/US2009/036479, Jul. 28, 2009, 15 pages. |
Patent Cooperation Treaty, "PCT Search Report and Written Opinion of the International Searching Authority" for International Application No. PCT/US2009/036481, Jul. 20, 2009, 15 pages. |
Patent Cooperation Treaty, "PCT Search Report and Written Opinion of the International Searching Authority" for International Application No. PCT/US2009/058779, Feb. 16, 2010, 17 pages. |
Patent Cooperation Treaty, "PCT Search Report and Written Opinion of the International Searching Authority" for International Application No. PCT/US2010/061714, Jun. 29, 2011, 15 pages. |
Ralf Geiger et al., "ISO/IEC MPEG-4 High-Definition Scalable Advanced Audio Coding", J. of the Audio Engineering Soc'y, Jan. 2007, pp. 27-43, vol. 5 No. 1/2. |
Ratko V. Tomic, "Quantized Indexing: Background Information", 1stWorks Corporation Technical Report TR05-0625, Jun. 25, 2005, pp. 1-39, XP002535774. |
Sean A. Ramprashad, "Sparse Bit-Allocations Based on Partial Ordering Schemes With Application to Speech and Audio Coding", IEEE Transactions on Audio, Speech, and Language Processing, vol. 15, No. 1, Jan. 2007. |
Tassos Markas and John Reif, "Multispectral Image Compression Algorithms", IEEE Data Compression Conf., Mar. 30-Apr. 2, 1993, pp. 391-400. |
Tenkasi V. Ramabadran, "A Coding Scheme for rn-out-of-n Codes", IEEE Transactions on Communications, vol. 38, No. 8, August 1990. |
Udar Mittaf, James P. Ashley, and Edgardo M. Cmz-Zeno, "Coding Unconstrained FCB Excitation Using Combinatorial and Huffman Codes", 2002, IEEE Workshop Proceedings., 2002. |
Udar Mittal et al., "Coding Pulse Sequences Using a Combination of Factorial Pulse Coding and Arithmetic Coding", 2010 IEEE Int'l Conf. on Signal Processing and Comm. (SPCOM), Jul. 18, 2010, pp. 1-5, XP031744814. |
Udar Mittal et al., "Decoder for Audio Signal Including Generic Audio and Speech Frames", U.S. Appl. No. 12/844,206, filed Sep. 9, 2010. |
Udar Mittal et al., "Encoder for Audio Signal Including Generic Audio and Speech Frames", U.S. Appl. No. 12/844,199, filed Jul. 27, 2010, 37 pages. |
Udar Mittal, James P. Ashley, and Edgardo M. Cruz-Zeno, "Low Complexity Factorial Pulse Coding of MDCT Coefficients Using Approximation of Combinatorial Functions", in Proc. IEEE ICASSP, Honolulu, HI, USA, Apr. 2007, vol. 1. |
United States Patent and Trademark Office, "Non-Final Rejection" for U.S. Appl. No. 12/047,632, filed Oct. 18, 2011, 16 pages. |
United States Patent and Trademark Office, "Non-Final Rejection" for U.S. Appl. No. 12/047,632, Mar. 2, 2011, 40 pages. |
United States Patent and Trademark Office, "Non-Final Rejection" for U.S. Appl. No. 12/247,440, Apr. 22, 2011, 19 pages. |
United States Patent and Trademark Office, "Non-Final Rejection" for U.S. Appl. No. 12/247,440, filed Oct. 20, 2011, 13 pages. |
United States Patent and Trademark Office, "Notice of Allowance and Fee(s) Due" for U.S. Appl. No. 12/047,586, Nov. 20, 2009, 7 pages. |
Xiang Wei, Martyn J. Shaw and Martin R. Varley, "Optimum Bit Allocation and Decomposition for High Quality Audio Coding", 1997 IEEE International Conference on Acoustics, Speech, and Signal Processing (ICASSP'97)-vol. 1. |
Cited By (24)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8706510B2 (en) * | 2009-10-20 | 2014-04-22 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Audio encoder, audio decoder, method for encoding an audio information, method for decoding an audio information and computer program using a detection of a group of previously-decoded spectral values |
US11443752B2 (en) * | 2009-10-20 | 2022-09-13 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Audio encoder, audio decoder, method for encoding an audio information, method for decoding an audio information and computer program using a detection of a group of previously-decoded spectral values |
US9978380B2 (en) | 2009-10-20 | 2018-05-22 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Audio encoder, audio decoder, method for encoding an audio information, method for decoding an audio information and computer program using a detection of a group of previously-decoded spectral values |
US20180174593A1 (en) * | 2009-10-20 | 2018-06-21 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Audio encoder, audio decoder, method for encoding an audio information, method for decoding an audio information and computer program using a detection of a group of previously-decoded spectral values |
US20120265540A1 (en) * | 2009-10-20 | 2012-10-18 | Guillaume Fuchs | Audio encoder, audio decoder, method for encoding an audio information, method for decoding an audio information and computer program using a detection of a group of previously-decoded spectral values |
US8655669B2 (en) | 2009-10-20 | 2014-02-18 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Audio encoder, audio decoder, method for encoding an audio information, method for decoding an audio information and computer program using an iterative interval size reduction |
US8612240B2 (en) | 2009-10-20 | 2013-12-17 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Audio encoder, audio decoder, method for encoding an audio information, method for decoding an audio information and computer program using a region-dependent arithmetic coding mapping rule |
US8380524B2 (en) * | 2009-11-26 | 2013-02-19 | Research In Motion Limited | Rate-distortion optimization for advanced audio coding |
US20110125506A1 (en) * | 2009-11-26 | 2011-05-26 | Research In Motion Limited | Rate-distortion optimization for advanced audio coding |
US9633664B2 (en) | 2010-01-12 | 2017-04-25 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Audio encoder, audio decoder, method for encoding and audio information, method for decoding an audio information and computer program using a modification of a number representation of a numeric previous context value |
US8898068B2 (en) | 2010-01-12 | 2014-11-25 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Audio encoder, audio decoder, method for encoding and audio information, method for decoding an audio information and computer program using a modification of a number representation of a numeric previous context value |
US8645145B2 (en) | 2010-01-12 | 2014-02-04 | Fraunhoffer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Audio encoder, audio decoder, method for encoding and audio information, method for decoding an audio information and computer program using a hash table describing both significant state values and interval boundaries |
US8682681B2 (en) | 2010-01-12 | 2014-03-25 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Audio encoder, audio decoder, method for encoding and decoding an audio information, and computer program obtaining a context sub-region value on the basis of a norm of previously decoded spectral values |
US8831959B2 (en) * | 2011-06-30 | 2014-09-09 | Telefonaktiebolaget L M Ericsson (Publ) | Transform audio codec and methods for encoding and decoding a time segment of an audio signal |
US9546924B2 (en) | 2011-06-30 | 2017-01-17 | Telefonaktiebolaget Lm Ericsson (Publ) | Transform audio codec and methods for encoding and decoding a time segment of an audio signal |
US20130006646A1 (en) * | 2011-06-30 | 2013-01-03 | Volodya Grancharov | Transform Audio Codec and Methods for Encoding and Decoding a Time Segment of an Audio Signal |
US9336788B2 (en) | 2014-08-15 | 2016-05-10 | Google Technology Holdings LLC | Method for coding pulse vectors using statistical properties |
CN106664099A (en) * | 2014-08-15 | 2017-05-10 | 谷歌技术控股有限责任公司 | Method for coding pulse vectors using statistical properties |
US9672838B2 (en) | 2014-08-15 | 2017-06-06 | Google Technology Holdings LLC | Method for coding pulse vectors using statistical properties |
US9620136B2 (en) | 2014-08-15 | 2017-04-11 | Google Technology Holdings LLC | Method for coding pulse vectors using statistical properties |
US9990931B2 (en) | 2014-08-15 | 2018-06-05 | Google Technology Holdings LLC | Method for coding pulse vectors using statistical properties |
US9584833B2 (en) | 2014-08-15 | 2017-02-28 | Google Technology Holdings LLC | Method for coding pulse vectors using statistical properties |
US10515649B2 (en) | 2014-08-15 | 2019-12-24 | Google Technology Holdings LLC | Method for coding pulse vectors using statistical properties |
WO2016025282A1 (en) | 2014-08-15 | 2016-02-18 | Google Technology Holdings LLC | Method for coding pulse vectors using statistical properties |
Also Published As
Publication number | Publication date |
---|---|
WO2011082047A2 (en) | 2011-07-07 |
WO2011082047A3 (en) | 2011-09-01 |
WO2011082047A4 (en) | 2011-10-20 |
US20110156932A1 (en) | 2011-06-30 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8149144B2 (en) | Hybrid arithmetic-combinatorial encoder | |
US7978101B2 (en) | Encoder and decoder using arithmetic stage to compress code space that is not fully utilized | |
US9484951B2 (en) | Encoder that optimizes bit allocation for information sub-parts | |
KR101226566B1 (en) | Method for encoding a symbol, method for decoding a symbol, method for transmitting a symbol from a transmitter to a receiver, encoder, decoder and system for transmitting a symbol from a transmitter to a receiver | |
US20100088090A1 (en) | Arithmetic encoding for celp speech encoders | |
US7889103B2 (en) | Method and apparatus for low complexity combinatorial coding of signals | |
US8558724B2 (en) | Coding method, coding appartaus, decoding method, decoding apparatus, program, and recording medium | |
EP2301022A1 (en) | Multi-reference lpc filter quantization and inverse quantization device and method | |
RU2769255C2 (en) | Audio encoders, audio decoders, methods and computer programs using the least significant bits encoding and decoding | |
Mittal et al. | Coding pulse sequences using a combination of factorial pulse coding and arithmetic coding | |
Lakhdhar et al. | Context-based adaptive arithmetic encoding of EAVQ indices | |
EP2705517B1 (en) | Methods for combinatorial coding and decoding of speech/audio/image/video signals and corresponding electronic encoder/decoder | |
Gersho et al. | Entropy Coding | |
CN110771045A (en) | Encoding device, decoding device, encoding method, decoding method, and program | |
JPS63175899A (en) | Voice analyzer/synthesizer | |
Tabus et al. | Interleaved quantization-optimization and predictor structure selection for lossless compression of audio companded signals |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: MOTOROLA, INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:MITTAL, UDAR;ASHLEY, JAMES P;RAM, TENKASI;SIGNING DATES FROM 20100215 TO 20100223;REEL/FRAME:024042/0502 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY, INC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA, INC;REEL/FRAME:025673/0558Effective date: 20100731 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: CHANGE OF NAME;ASSIGNOR:MOTOROLA MOBILITY, INC.;REEL/FRAME:029216/0282Effective date: 20120622 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034447/0181Effective date: 20141028 |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
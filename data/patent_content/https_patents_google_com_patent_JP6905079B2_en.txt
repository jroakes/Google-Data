JP6905079B2 - Detection and representation of objects in images - Google Patents
Detection and representation of objects in images Download PDFInfo
- Publication number
- JP6905079B2 JP6905079B2 JP2019555456A JP2019555456A JP6905079B2 JP 6905079 B2 JP6905079 B2 JP 6905079B2 JP 2019555456 A JP2019555456 A JP 2019555456A JP 2019555456 A JP2019555456 A JP 2019555456A JP 6905079 B2 JP6905079 B2 JP 6905079B2
- Authority
- JP
- Japan
- Prior art keywords
- image
- sub
- embedding function
- pair
- type
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/50—Information retrieval; Database structures therefor; File system structures therefor of still image data
- G06F16/58—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
- G06F16/583—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually using metadata automatically derived from the content
- G06F16/5854—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually using metadata automatically derived from the content using shape and object relationship
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/21—Design or setup of recognition systems or techniques; Extraction of features in feature space; Blind source separation
- G06F18/213—Feature extraction, e.g. by transforming the feature space; Summarisation; Mappings, e.g. subspace methods
- G06F18/2134—Feature extraction, e.g. by transforming the feature space; Summarisation; Mappings, e.g. subspace methods based on separation criteria, e.g. independent component analysis
- G06F18/21347—Feature extraction, e.g. by transforming the feature space; Summarisation; Mappings, e.g. subspace methods based on separation criteria, e.g. independent component analysis using domain transformations
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/21—Design or setup of recognition systems or techniques; Extraction of features in feature space; Blind source separation
- G06F18/213—Feature extraction, e.g. by transforming the feature space; Summarisation; Mappings, e.g. subspace methods
- G06F18/2135—Feature extraction, e.g. by transforming the feature space; Summarisation; Mappings, e.g. subspace methods based on approximation criteria, e.g. principal component analysis
- G06F18/21355—Feature extraction, e.g. by transforming the feature space; Summarisation; Mappings, e.g. subspace methods based on approximation criteria, e.g. principal component analysis nonlinear criteria, e.g. embedding a manifold in a Euclidean space
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/21—Design or setup of recognition systems or techniques; Extraction of features in feature space; Blind source separation
- G06F18/214—Generating training patterns; Bootstrap methods, e.g. bagging or boosting
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/21—Design or setup of recognition systems or techniques; Extraction of features in feature space; Blind source separation
- G06F18/217—Validation; Performance evaluation; Active pattern learning techniques
- G06F18/2193—Validation; Performance evaluation; Active pattern learning techniques based on specific statistical tests
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/22—Matching criteria, e.g. proximity measures
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/23—Clustering techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/70—Arrangements for image or video recognition or understanding using pattern recognition or machine learning
- G06V10/74—Image or video pattern matching; Proximity measures in feature spaces
- G06V10/761—Proximity, similarity or dissimilarity measures
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/70—Arrangements for image or video recognition or understanding using pattern recognition or machine learning
- G06V10/77—Processing image or video features in feature spaces; using data integration or data reduction, e.g. principal component analysis [PCA] or independent component analysis [ICA] or self-organising maps [SOM]; Blind source separation
- G06V10/7715—Feature extraction, e.g. by transforming the feature space, e.g. multi-dimensional scaling [MDS]; Mappings, e.g. subspace methods
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/70—Arrangements for image or video recognition or understanding using pattern recognition or machine learning
- G06V10/77—Processing image or video features in feature spaces; using data integration or data reduction, e.g. principal component analysis [PCA] or independent component analysis [ICA] or self-organising maps [SOM]; Blind source separation
- G06V10/774—Generating sets of training patterns; Bootstrap methods, e.g. bagging or boosting
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/70—Arrangements for image or video recognition or understanding using pattern recognition or machine learning
- G06V10/82—Arrangements for image or video recognition or understanding using pattern recognition or machine learning using neural networks
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V20/00—Scenes; Scene-specific elements
- G06V20/30—Scenes; Scene-specific elements in albums, collections or shared content, e.g. social network photos or video
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V40/00—Recognition of biometric, human-related or animal-related patterns in image or video data
- G06V40/10—Human or animal bodies, e.g. vehicle occupants or pedestrians; Body parts, e.g. hands
- G06V40/103—Static body considered as a whole, e.g. static pedestrian or occupant recognition
Description
本明細書は、画像処理に関する。 The present specification relates to image processing.
格納された画像の手動での組織化および検索取得(retrieval)は、困難な場合がある。例えば、画像を手動で閲覧しグループ化することは、格納されている画像の量と複雑さのため、時間がかかる場合がある。 Manual organization and retrieval of stored images can be difficult. For example, manually browsing and grouping images can be time consuming due to the amount and complexity of the stored images.
画像組織化のための自動化された方法では、画像を、画像間で特定された類似性に基づいてグループ化することができる。これらの方法のいくつかでは、画像間の類似性を特定する際に使用するモデル関数の最適化を行っている。多様なモデル関数およびトレーニング方法を使用することができる。例えば、写真を検索取得するために、顔認識処理が使用されてよく、その場合、検出される「オブジェクト」は顔である。これにより、人物の写真を検出された顔の類似性に基づいてグループ化する、人物検索機能が可能になる。しかし、この手法は、小さすぎる顔、他のオブジェクトによって遮られた顔、または顔認識処理によって対処することのできない角度の顔など、顔が認識できない人物画像には機能しない。 An automated method for image organization allows images to be grouped based on the similarities identified between the images. Some of these methods optimize the model functions used to identify similarities between images. A variety of model functions and training methods can be used. For example, a face recognition process may be used to search and retrieve a photo, in which case the detected "object" is a face. This enables a person search function that groups people's photos based on the similarities of the detected faces. However, this technique does not work for unrecognizable portraits, such as faces that are too small, faces blocked by other objects, or faces at angles that cannot be addressed by face recognition processing.
本明細書は、画像処理に関する技術について、詳細には、指定の時間期間(duration of time)内に捕捉された特定タイプのオブジェクトの同一インスタンスを描いた画像については類似の特徴表現を生成し、特定タイプのオブジェクトの異なるインスタンスを描いた画像については非類似の特徴表現を生成する画像埋め込み関数のトレーニングについて説明する。 The present specification describes techniques relating to image processing, in particular, generating similar feature representations for images depicting the same instance of a particular type of object captured within a specified duration of time. For images depicting different instances of a particular type of object, training an image embedding function that produces dissimilar feature representations will be described.
一般に、本明細書において説明する本主題の一革新的態様は、画像埋め込み関数をトレーニングするための方法として具現化することができる。方法は、画像トレーニングセット中の各画像内の特定タイプのオブジェクトの出現を検出することであって、画像トレーニングセット中の画像が、第1の時間期間内に捕捉された画像である、検出することと、画像トレーニングセット中の画像から、検出されたオブジェクトの1回の出現をそれぞれが描いているサブ画像を抽出することと、画像埋め込み関数を反復的にトレーニングすることであって、画像埋め込み関数が、入力画像に作用して、出力として入力画像の特徴表現を生じさせる、1組のパラメータ重みを含み、トレーニングの各反復が、抽出されたサブ画像から、第1のタイプの画像ペアおよび第2のタイプの画像ペアを選択することであって、各画像ペアが、第1のサブ画像と第2のサブ画像との組合せであり、第1のタイプの画像ペアが、特定タイプのオブジェクトの同一インスタンスを描いた第1のサブ画像および第2のサブ画像を含み、第2のタイプの画像ペアが、特定タイプのオブジェクトの異なるインスタンスを描いた第1のサブ画像および第2のサブ画像を含み、かつ第1のタイプの画像ペアについて、画像ペアの少なくとも第1のサブ画像および第2のサブ画像が、第1の時間期間よりも短い第2の時間期間内に捕捉された画像から抽出されたものである、選択すること、選択された各画像ペアを入力として画像埋め込み関数に与え、対応する出力を生成すること、画像埋め込み関数の性能指標(performance measure)を決定すること、画像埋め込み関数のパラメータ重みを、性能指標に基づいて調整すること、およびトレーニングの別の反復を、停止事象が生じるまで実施することを含む、反復的にトレーニングすることとを含む。 In general, one innovative aspect of the subject described herein can be embodied as a method for training image embedding functions. The method is to detect the appearance of a particular type of object in each image in the image training set, which detects that the image in the image training set is an image captured within the first time period. That is, extracting sub-images that each depict one occurrence of the detected object from the images in the image training set, and iteratively training the image embedding function, which is image embedding. Each iteration of training contains a set of parameter weights in which the function acts on the input image to produce a feature representation of the input image as output, and each iteration of training is from the extracted sub-image, the first type of image pair and By selecting a second type of image pair, each image pair is a combination of a first sub-image and a second sub-image, and the first type of image pair is a particular type of object. A first sub-image and a second sub-image that contains a first sub-image and a second sub-image depicting the same instance of, and a second type image pair depicts different instances of a particular type of object. And for the first type of image pair, from images in which at least the first and second sub-images of the image pair were captured within a second time period shorter than the first time period. Extracted, selected, given each selected image pair as input to the image embedding function to generate the corresponding output, determining the performance measure of the image embedding function, the image It includes adjusting the parameter weights of the embedded function based on performance indicators, and iterative training, including performing another iteration of training until a stop event occurs.
いくつかの実装形態では、第1のタイプの画像ペアおよび第2のタイプの画像ペアを選択することが、画像トリプレットを選択することであって、各画像トリプレットが、第1のサブ画像と、第2のサブ画像と、第3のサブ画像との組合せであり、第1のサブ画像および第2のサブ画像を含む画像ペアが、第1のタイプの画像ペアであり、第1のサブ画像および第3のサブ画像を含む画像ペアが、第2のタイプの画像ペアである、選択することを含む。 In some embodiments, selecting an image pair of the first type and an image pair of the second type is selecting an image triplet, where each image triplet is associated with a first subimage. A combination of a second sub-image and a third sub-image, the image pair containing the first sub-image and the second sub-image is the first type of image pair and the first sub-image. And the image pair containing the third sub-image is the second type of image pair, comprising selecting.
いくつかの実装形態では、画像トリプレットを入力として画像埋め込み関数に与え、対応する出力を生成することが、画像埋め込み関数によって、画像トリプレット中の第1の画像の第1の特徴表現、画像トリプレット中の第2の画像の第2の特徴表現、および画像トリプレット中の第3の画像の第3の特徴表現を生成することを含む。 In some implementations, an image triplet can be given as an input to the image embedding function to generate the corresponding output, which can be used by the image embedding function to represent the first feature of the first image in the image triplet, in the image triplet. Includes generating a second feature representation of the second image of the image, and a third feature representation of the third image in the image triplet.
いくつかの実装形態では、画像埋め込みの性能指標を決定することが、選択された各画像トリプレットについて、第1の特徴表現および第2の特徴表現に基づいて、第1の特徴表現と第2の特徴表現の類似性を測定する第1の類似性指標を決定することと、第1の特徴表現および第3の特徴表現に基づいて、第1の特徴表現と第3の特徴表現の類似性を測定する第2の類似性指標を決定することとを含む。 In some implementations, determining the performance index of image embedding is based on the first and second feature representations for each selected image triplet, with a first feature representation and a second feature representation. Determining the first similarity index to measure the similarity of feature expressions and determining the similarity between the first and third feature expressions based on the first and third feature expressions. Includes determining a second similarity index to measure.
いくつかの実装形態では、画像埋め込み関数が、出力特徴表現として入力画像のユークリッド空間への写像を生成し、選択された各画像トリプレットについて、第1の類似性指標を決定することが、第1の特徴表現と第2の特徴表現との間の第1のユークリッド距離を決定することを含み、第2の類似性指標を決定することが、第1の特徴表現と第3の特徴表現との間の第2のユークリッド距離を決定することを含む。 In some embodiments, the image embedding function may generate a mapping of the input image to Euclidean space as an output feature representation and determine a first similarity index for each selected image triplet. The determination of the second similarity index involves determining the first Euclidean distance between the first and second feature representations of the first feature representation and the third feature representation. Includes determining the second Euclidean distance between.
いくつかの実装形態では、画像埋め込み関数の性能指標を決定することが、選択された各画像トリプレットについての第1のユークリッド距離および第2のユークリッド距離に基づいている。 In some implementations, determining the performance index of an image embedding function is based on a first Euclidean distance and a second Euclidean distance for each selected image triplet.
いくつかの実装形態では、選択された各画像トリプレットについての第1のユークリッド距離および第2のユークリッド距離に基づいて性能指標を決定することが、選択された各画像トリプレットについての第1のユークリッド距離と第2のユークリッド距離との差に基づくヒンジ損失を決定することを含む。 In some embodiments, the performance index can be determined based on the first Euclidean distance and the second Euclidean distance for each selected image triplet, but the first Euclidean distance for each selected image triplet. Includes determining hinge loss based on the difference between and the second Euclidean distance.
いくつかの実装形態では、性能指標を決定することが、選択された画像トリプレットについてのヒンジ損失を合計することを含む。 In some implementations, determining performance indicators involves summing the hinge losses for the selected image triplet.
いくつかの実装形態では、画像埋め込み関数が畳み込みニューラルネットワークを含む。 In some implementations, the image embedding function includes a convolutional neural network.
いくつかの実装形態では、オブジェクトが人体全身である。 In some implementations, the object is the whole human body.
いくつかの実装形態では、トレーニングされたニューラルネットワークによって生成された特徴表現が、クラスタ化アルゴリズムを使用してグループに割り当てられる。 In some implementations, the feature representations generated by the trained neural network are assigned to groups using a clustering algorithm.
いくつかの実装形態では、抽出された各サブ画像にキーポイントがアノテーションされ、画像埋め込み関数の出力が、入力画像の特徴表現、および入力画像の予測されたキーポイントアノテーションを含み、画像埋め込み関数の性能指標を決定することが、予測されたキーポイントアノテーションとキーポイントアノテーションとの間の類似性を決定することを含む。 In some implementations, each extracted sub-image is annotated with keypoints, and the output of the image embedding function includes feature representations of the input image and predicted keypoint annotations of the input image of the image embedding function. Determining performance indicators involves determining the similarity between the predicted keypoint annotations and the keypoint annotations.
いくつかの実装形態では、画像トレーニングセット中の画像からサブ画像を抽出することが、各サブ画像にキーポイントをアノテーションすることと、特定のサブ画像を基準画像として選択することと、各サブ画像を、そのキーポイントを基準サブ画像のキーポイントと位置整合させるように変換することとをさらに含む。 In some implementations, extracting sub-images from the images in the image training set can annotate each sub-image with key points, select a specific sub-image as the reference image, and each sub-image. Is further included in transforming the keypoint to align with the keypoint of the reference subimage.
いくつかの実装形態では、抽出された各サブ画像にキーポイントがアノテーションされ、画像埋め込み関数の入力が、入力画像、および入力画像のアノテーションされたキーポイントを含み、選択された各画像ペアを入力として画像埋め込み関数に与えることが、選択された各画像ペア中の各サブ画像のアノテーションされたキーポイントを入力として画像埋め込み関数に与えることをさらに含む。 In some implementations, each extracted sub-image is annotated with keypoints, and the input of the image embedding function contains the input image and the annotated keypoints of the input image, and inputs each selected image pair. Giving to the image embedding function as an input further includes giving the annotated keypoint of each subimage in each selected image pair to the image embedding function as input.
いくつかの実装形態では、第1のタイプの画像ペアについて、第1のサブ画像および第2のサブ画像が、それらの抽出元である、特定の事象中に捕捉された画像に基づいて選択される。 In some implementations, for the first type of image pair, the first and second sub-images are selected based on the images captured during a particular event from which they were extracted. NS.
いくつかの実装形態では、第1のタイプの画像ペアについて、第1のサブ画像および第2のサブ画像が、それらの抽出元である、第2の時間期間内に捕捉された画像に基づいて選択される。 In some implementations, for the first type of image pair, the first subimage and the second subimage are based on the images captured within the second time period from which they were extracted. Be selected.
いくつかの実装形態では、方法は、1つまたは複数の入力画像を受領することと、受領された入力画像のうちの1つ、一部、または全部について、(それぞれの)入力画像から1つまたは複数のサブ画像を抽出することと、(それぞれの)入力画像を、(それぞれの)入力画像から抽出されたサブ画像、および画像埋め込み関数を使用して分類することとをさらに含む。 In some embodiments, the method is to receive one or more input images and one from the (each) input image for one, some, or all of the received input images. Or it further includes extracting multiple sub-images and classifying the (each) input image using the sub-images extracted from the (each) input image and the image embedding function.
いくつかの実装形態では、方法は、入力画像を分類した結果に基づいて実体を制御することをさらに含む。例えば、入力画像が、自律車両上の1つまたは複数のカメラによって得られる場合、入力画像を分類した結果は、例えば、車両に接近する人物が(例えば、たとえその人物の顔が不明瞭だとしても)その車両の所有者であることを表すことができる。車両に接近する人物がその車両の所有者であるとの決定に応答して、車両は、そのドアをロック解除してもよく、(例えばその人物の注意を車両の位置に向けさせるために)その警笛を鳴らしてもよい。 In some implementations, the method further comprises controlling the entity based on the result of classifying the input image. For example, if the input image is obtained by one or more cameras on an autonomous vehicle, the result of classifying the input image is, for example, that a person approaching the vehicle (eg, even if that person's face is unclear). Can also indicate that you are the owner of the vehicle. In response to a decision that a person approaching a vehicle is the owner of the vehicle, the vehicle may unlock its doors (eg, to direct that person's attention to the vehicle's position). You may sound the horn.
本明細書において説明する本主題の別の革新的態様は、データ処理装置によって実施される画像分類のコンピュータで実行される方法であって、画像トレーニングセット中の各画像内の特定タイプのオブジェクトの出現を検出することであって、画像トレーニングセット中の画像が、第1の時間期間内に捕捉された画像である、検出することと、画像トレーニングセット中の画像から、検出されたオブジェクトの1回の出現をそれぞれが描いているサブ画像を抽出することと、画像埋め込み関数を反復的にトレーニングすることであって、画像埋め込み関数が、入力画像に作用して、出力として入力画像の特徴表現を生じさせる、1組のパラメータ重みを含み、トレーニングの各反復が、抽出されたサブ画像から、第1のタイプの画像ペアおよび第2のタイプの画像ペアを選択することであって、各画像ペアが、第1のサブ画像と第2のサブ画像との組合せであり、第1のタイプの画像ペアが、特定タイプのオブジェクトの同一インスタンスを描いた第1のサブ画像および第2のサブ画像を含み、第2のタイプの画像ペアが、特定タイプのオブジェクトの異なるインスタンスを描いた第1のサブ画像および第2のサブ画像を含み、かつ第1のタイプの画像ペアについて、画像ペアの少なくとも第1のサブ画像および第2のサブ画像が、第1の時間期間よりも短い第2の時間期間内に捕捉された画像から抽出されたものである、選択すること、選択された各画像ペアを入力として画像埋め込み関数に与え、対応する出力を生成すること、画像埋め込み関数の性能指標を決定すること、画像埋め込み関数のパラメータ重みを、性能指標に基づいて調整すること、トレーニングの別の反復を、停止事象が生じるまで実施することを含む、反復的にトレーニングすることと、1つまたは複数の入力画像を受領することと、受領された入力画像のうちの1つ、一部、または全部について、(それぞれの)入力画像から1つまたは複数のサブ画像を抽出することと、(それぞれの)入力画像を、(それぞれの)入力画像から抽出されたサブ画像および画像埋め込み関数を使用して分類することとを含む方法として具現化することができる。 Another innovative aspect of the subject described herein is a computer-executed method of image classification performed by a data processor for a particular type of object in each image in an image training set. To detect the appearance, the image in the image training set is the image captured within the first time period, to detect and to detect one of the objects detected from the image in the image training set. Extracting the sub-images that each depict the appearance of the times and iteratively training the image embedding function. The image embedding function acts on the input image to represent the characteristics of the input image as output. Each image of the training involves selecting a first type of image pair and a second type of image pair from the extracted sub-images, containing a set of parameter weights. A pair is a combination of a first sub-image and a second sub-image, and a first type of image pair is a first and second sub-image depicting the same instance of a particular type of object. The second type of image pair contains at least a first subimage and a second subimage depicting different instances of a particular type of object, and for the first type of image pair, at least the image pair. The first sub-image and the second sub-image are extracted from images captured within a second time period shorter than the first time period, select, each selected image pair. To the image embedding function as input to generate the corresponding output, to determine the performance index of the image embedding function, to adjust the parameter weights of the image embedding function based on the performance index, another iteration of training Repetitive training, including performing until a stop event occurs, receiving one or more input images, and one, part, or all of the received input images. To extract one or more sub-images from the (each) input image, and to use the (each) input image with the sub-images and image embedding functions extracted from the (each) input image. It can be embodied as a method that includes classification.
本明細書において説明する本主題の別の革新的態様は、1つまたは複数の入力画像を受領するための入力部と、(それぞれの)入力画像から1つまたは複数のサブ画像を抽出するためのオブジェクト抽出部と、(それぞれの)入力画像を、(それぞれの)入力画像から抽出されたサブ画像、および本開示の任意の態様または実装形態による方法によって生成された画像埋め込み関数を使用して分類するための分類部とを含む画像分類システムとして具現化することができる。 Another innovative aspect of the subject described herein is an input section for receiving one or more input images and extracting one or more sub-images from (each) input image. Using the object extractor of, the input image (each), the sub-image extracted from the input image (each), and the image embedding function generated by any aspect or implementation of the disclosure. It can be embodied as an image classification system including a classification unit for classification.
本明細書において説明する本主題の別の革新的態様は、先の態様の画像分類システムの出力に基づいて実体を制御するための制御システムとして具現化することができる。 Another innovative aspect of the subject described herein can be embodied as a control system for controlling an entity based on the output of the image classification system of the previous aspect.
他の態様は、1つまたは複数のコンピューティングデバイスと、1つまたは複数のコンピュータデバイスに結合され、1つまたは複数のコンピューティングデバイスによって実行されると、本開示の任意の態様または実装形態による方法を含む動作を1つまたは複数のコンピューティングデバイスに実施させる命令がその上に格納された、1つまたは複数のコンピュータ可読媒体とを含むシステム、ならびにコンピュータプログラムが符号化されたコンピュータ記憶媒体であって、データ処理装置によって実行されると、本開示の任意の態様または実装形態による方法を含む動作をデータ処理装置に実施させる命令をプログラムが含む、コンピュータ記憶媒体を含む。 Other aspects are coupled to one or more computing devices and one or more computer devices and are performed by one or more computing devices, according to any aspect or embodiment of the present disclosure. In a system containing one or more computer-readable media, on which instructions for causing one or more computing devices to perform operations, including methods, and in a computer storage medium in which a computer program is encoded. A computer storage medium, wherein, when executed by the data processing apparatus, the program comprises instructions to cause the data processing apparatus to perform an operation including a method according to any aspect or embodiment of the present disclosure.
本態様の他の実施形態は、対応するシステム、装置、およびコンピュータ記憶デバイス上に符号化された、方法のアクションを実施するように構成されたコンピュータプログラムを含む。 Other embodiments of this aspect include computer programs configured to perform method actions encoded on the corresponding systems, devices, and computer storage devices.
本明細書において説明する本主題の特定の実施形態は、次の利点のうちの1つまたは複数を実現するように実装することができる。下で説明するシステムおよび方法は、指定の時間期間内に捕捉された特定タイプのオブジェクトの同一インスタンスを描いた画像については類似の特徴表現を生成し、特定タイプのオブジェクトの異なるインスタンスを描いた画像については非類似の特徴表現を生成する画像埋め込み関数をトレーニングする。画像埋め込み関数に、指定の時間期間内のみに捕捉された特定タイプのオブジェクトの同一インスタンスを描いた画像については類似の特徴表現を生成するように要求することによって、画像埋め込み関数を、顔認識処理をしない人物認識の文脈に利用することができる。これは、一部には、指定の期間中の人物の外観はおそらくは変化しない、例えば、人物が同一の衣服、同一の宝飾品類などを身に着けているためである。これは、部分的にまたは全体が不明瞭な場合のある顔の画像の処理にとって特に有利であり、したがって、画像認識処理の技術分野における改善点である。 Certain embodiments of the subject described herein can be implemented to achieve one or more of the following advantages: The systems and methods described below generate similar feature representations for images depicting the same instance of a particular type of object captured within a specified time period, and images depicting different instances of a particular type of object. For training image embedding functions that generate dissimilar feature representations. Face recognition processing of the image embedding function by requiring the image embedding function to generate similar feature representations for images depicting the same instance of a particular type of object captured only within a specified time period. It can be used in the context of person recognition. This is in part because the appearance of the person during the specified period probably does not change, for example, the person wears the same clothing, the same jewelry, and so on. This is particularly advantageous for the processing of facial images, which may be partially or wholly obscured, and is therefore an improvement in the art of image recognition processing.
加えて、この画像埋め込み関数は、単純化モデルによって実装することができ、この画像埋め込み関数をトレーニングするプロセスは、画像埋め込み関数が画像の捕捉時相互間の時間期間に関わらず特定タイプのオブジェクトの同一インスタンスを描いた画像については類似の特徴表現を生成するように要求される場合よりも、時間のかからない、かつ計算量の少ないものになり得る。これらの利点も、画像処理の技術分野における改善点である。 In addition, this image embedding function can be implemented by a simplified model, and the process of training this image embedding function is that the image embedding function is of a particular type of object regardless of the time period between when the image was captured. Images depicting the same instance can be less time consuming and less computationally expensive than if they were required to generate similar feature representations. These advantages are also improvements in the technical field of image processing.
この画像埋め込み関数は、入力画像の特徴表現を生成することに加えて、入力画像内のキーポイントの位置を予測するようにトレーニングすることもできる。これにより、画像埋め込み関数によって生成される特徴表現の質が、キーポイントを使用しない埋め込み関数に比べて高まる。 In addition to generating a feature representation of the input image, this image embedding function can also be trained to predict the location of key points within the input image. As a result, the quality of the feature expression generated by the image embedding function is improved as compared with the embedding function that does not use the key point.
トレーニング中に所与の画像を入力として画像埋め込み関数に与える前に、所与の画像のキーポイントを基準画像のキーポイントと位置整合させるように変換が利用されてよい。そのような変換により、画像埋め込み関数を単純化モデルによって実装することが可能になり、画像埋め込み関数をトレーニングするプロセスが、キーポイントのそのような変換をせずにモデルがトレーニングされる場合よりも、時間のかからない、かつ計算量の少ないものになる。 A transformation may be utilized to align the key points of a given image with the key points of a reference image before giving the given image as input to the image embedding function during training. Such a transformation allows the image embedding function to be implemented by a simplified model, and the process of training the image embedding function is more than if the model were trained without such a key point transformation. It takes less time and requires less calculation.
本明細書において説明する本主題の1つまたは複数の実施形態の詳細については、添付の図面および下の説明中に記載されている。本主題の他の特徴、態様、および利点が、説明、図面、および特許請求の範囲から明らかとなろう。 Details of one or more embodiments of the subject matter described herein are described in the accompanying drawings and in the description below. Other features, aspects, and advantages of this subject will become apparent from the description, drawings, and claims.
さまざまな図面中の同様の参照番号および名称は、同様の要素を表す。 Similar reference numbers and names in various drawings represent similar elements.
画像埋め込み関数をトレーニングするために、システムは、画像トレーニングセット中の各画像内の特定タイプのオブジェクトの出現を検出する。画像トレーニングセット中の画像は、第1の時間期間内に捕捉された画像であり、各画像は、特定タイプの1つまたは複数のオブジェクトを描いていてよい。多くのオブジェクトタイプがあり、各オブジェクトタイプは、類似の視覚的特性を有するオブジェクトの分類とみなすことができる。例えば、オブジェクトタイプは、それぞれに類似の視覚的特性をそれぞれが有するような、人物、またはランドマーク、または車であってよい。 To train the image embedding function, the system detects the appearance of certain types of objects in each image in the image training set. The images in the image training set are images captured within the first time period, and each image may depict one or more objects of a particular type. There are many object types, and each object type can be considered as a classification of objects with similar visual characteristics. For example, the object type may be a person, a landmark, or a car, each having similar visual characteristics.
オブジェクトが検出されると、システムは、画像トレーニングセット中の画像からサブ画像を抽出する。各サブ画像は、検出されたオブジェクトの1回の出現を描いている。例えば、「人物」オブジェクトタイプの2回の出現を描いた画像の場合、検出された人物オブジェクトをそれぞれが描いている2つのサブ画像を、その画像から抽出することができる。 When the object is detected, the system extracts sub-images from the images in the image training set. Each sub-image depicts a single appearance of the detected object. For example, in the case of an image depicting two occurrences of the "person" object type, two sub-images, each depicting the detected person object, can be extracted from that image.
システムは次いで、画像埋め込み関数を、下でより詳細に説明する画像ペアまたは画像トリプレットに対して反復的にトレーニングする。画像埋め込み関数は、入力画像に作用して、出力として入力画像の特徴表現を生じさせる、1組のパラメータ重みを含む。トレーニングの各反復は、画像トリプレットを選択すること、および選択された各画像トリプレットを入力として画像埋め込み関数に与え、対応する出力を生成することを含む。画像埋め込み関数の性能指標が決定され、画像埋め込み関数のパラメータ重みが、性能指標に基づいて調整される。その後、別の反復が、停止事象が生じるまで実施される。 The system then iteratively trains the image embedding function on the image pair or image triplet described in more detail below. The image embedding function contains a set of parameter weights that act on the input image to produce a feature representation of the input image as output. Each iteration of training involves selecting an image triplet and feeding each selected image triplet as input to an image embedding function to produce the corresponding output. The performance index of the image embedding function is determined, and the parameter weights of the image embedding function are adjusted based on the performance index. Then another iteration is performed until a stop event occurs.
抽出されたサブ画像から画像トリプレットを選択するために、システムは、第1の画像から抽出された第1のサブ画像と、第2の画像から抽出された第2のサブ画像と、第3の画像から抽出された第3のサブ画像との組合せを選択する。第1および第2のサブ画像は、特定タイプのオブジェクトの同一インスタンスを描いている。例えば、第1および第2のサブ画像は、第1の時間期間未満である第2の時間期間内に撮影された画像からの、異なる2つの時間における特定人物を描いたものであってよい。第3のサブ画像は、第1および第2のサブ画像内に描かれたオブジェクトの同一インスタンスとは異なる、特定タイプのオブジェクトのインスタンスを描いている。例えば、第3のサブ画像は、第1および第2のサブ画像内に描かれたのとは異なる人物であってよい。第3のサブ画像は、第1の期間中の任意の時間に撮影された画像からのものであってよい。 To select an image triplet from the extracted sub-images, the system has a first sub-image extracted from the first image, a second sub-image extracted from the second image, and a third. Select a combination with a third sub-image extracted from the image. The first and second sub-images depict the same instance of a particular type of object. For example, the first and second sub-images may depict a particular person at two different times from an image taken during a second time period that is less than the first time period. The third sub-image depicts an instance of a particular type of object that is different from the same instance of the object depicted in the first and second sub-images. For example, the third sub-image may be a different person than that depicted in the first and second sub-images. The third sub-image may be from an image taken at any time during the first period.
これらの特徴およびさらなる特徴について、下でより詳細に説明する。 These features and additional features will be described in more detail below.
図1Aは、画像埋め込み関数f(.)を画像トリプレットトレーニングデータに基づいて学習させるためのシステム100のブロック図である。システム100は、1つまたは複数のネットワークコンピュータのデータ処理装置システム内に実装することができる。 FIG. 1A is a block diagram of the system 100 for training the image embedding function f (.) Based on the image triplet training data. System 100 can be implemented within a data processor system of one or more network computers.
システム100は、画像埋め込み関数を、3つの画像110、112、114からなる画像トリプレットに対して反復的にトレーニングする。画像110、112、および114は、第1の時間期間T1 124中に捕捉されたトレーニング画像102からオブジェクト検出部104によって検出された、特定タイプのオブジェクトの出現を描いたもの106である。画像埋め込み関数は、入力画像に作用して、出力として画像の特徴表現を生じさせる、1組のパラメータ重みWに基づいている。画像埋め込み関数を定義するデータが、モデルデータ128内に格納されている。
System 100 iteratively trains an image embedding function on an image triplet consisting of three
各画像トリプレットは、第1の画像110と、第2の画像112と、第3の画像114との組合せである。画像トリプレットの第1の画像110、第2の画像112、および第3の画像114は、典型的には、他の画像から抽出されたサブ画像であるが、それらは、どのようにオブジェクトが画像内に描かれているかに応じて、画像全体であってもよい。しかし、本説明の残りの部分では、トリプレットは、ほとんどの場合はより大きな画像から抽出されるので、「サブ画像」のことを指す。
Each image triplet is a combination of a
第1のサブ画像110は、「アンカー」画像Aとみなすことができ、第2のサブ画像112は、「ポジティブ」画像Pとみなすことができ、一方第3のサブ画像114は、「ネガティブ」画像Nとみなすことができる。トリプレットは、第1および第2のサブ画像が、特定タイプのオブジェクトの同一インスタンスを描いたものとして特定され、第3のサブ画像が、第1および第2の画像内に描かれたオブジェクトの同一インスタンスとは異なる、特定タイプの異なるオブジェクトを描いたものとして特定されるように、選択される。さらに、第1および第2の検出されたオブジェクトそれぞれの検出元となったサブ画像は、第1の時間期間T1の適切なサブセットである第2の時間期間T2 126内に捕捉されたものである。例えば、第1の時間期間が30日期間である場合、第2の時間期間は、6時間期間であってよい。 The first sub-image 110 can be considered as the "anchor" image A, the second sub-image 112 can be considered as the "positive" image P, while the third sub-image 114 can be considered as "negative". It can be regarded as image N. The triplet is identified as the first and second sub-images depicting the same instance of a particular type of object, and the third sub-image is the same object depicted in the first and second images. Selected to be identified as depicting a different object of a particular type, different from the instance. In addition, the subimages from which the first and second detected objects were detected were captured within the second time period T 2 126, which is an appropriate subset of the first time period T 1. Is. For example, if the first time period is a 30-day period, the second time period may be a 6-hour period.
下で説明するように、システム100はトリプレットを使用して、画像埋め込み関数をトレーニングすることができ、画像埋め込み関数は、トレーニングされると、指定の時間期間(T2)内に捕捉された特定タイプのオブジェクトの同一インスタンスの類似の特徴表現、および特定タイプのオブジェクトの異なるインスタンスの非類似の特徴表現を生成することができる。本説明では、特徴表現は、例えば、画像埋め込み関数によって出力される1組または複数組の特徴重みとすることができる。 As explained below, System 100 can use triplets to train image embedding functions, which, once trained, identify captured within a specified time period (T 2). It is possible to generate similar feature representations of the same instance of a type of object and dissimilar feature representations of different instances of a particular type of object. In this description, the feature representation can be, for example, one set or a plurality of sets of feature weights output by the image embedding function.
いくつかの実装形態では、トリプレットを選択する代わりに、画像ペアを選択することができる。図1Bは、画像埋め込み関数f(.)を画像ペアトレーニングデータに基づいて学習させるための、システム130のブロック図である。システム130は、1つまたは複数のネットワークコンピュータのデータ処理装置システム内に実装することができる。
In some implementations, instead of choosing a triplet, you can choose an image pair. FIG. 1B is a block diagram of the
システム130は、画像埋め込み関数f(.)を画像ペアトレーニングデータに基づいて学習させ、そのコンポーネントは、システム100と同様に定められる。システム130は、画像埋め込み関数を、2つのサブ画像140および142からなる画像ペアに対して反復的にトレーニングする。画像ペアは、2つのサブ画像が、特定タイプのオブジェクトの同一インスタンスを描いており、かつ第2の時間期間T2内に捕捉された画像から抽出されたものである、第1のタイプのものであってもよく、画像ペアは、2つのサブ画像が特定タイプのオブジェクトの異なるインスタンスを描いている、第2のタイプのものであってもよい。
The
下で説明するように、またシステム100と同様に、システム130は画像ペアを使用して、画像埋め込み関数をトレーニングし、画像埋め込み関数は、トレーニングされると、指定の時間期間(T2)内に捕捉された特定タイプのオブジェクトの同一インスタンスの類似の特徴表現、および特定タイプのオブジェクトの異なるインスタンスの非類似の特徴表現を生成することができる。
As explained below, and like System 100,
システム100の動作について、画像埋め込み関数を画像トリプレットトレーニングデータに基づいて学習させるための一例示的プロセス200の流れ図である図2Aを参照して説明する。プロセス200は、1つまたは複数のネットワークコンピュータのデータ処理装置システム内に実装することができ、このデータ処理装置は、別段明記しない限り、下で説明するステップを実施する。
The operation of the system 100 will be described with reference to FIG. 2A, which is a flow chart of an
プロセス200について、その類似性を距離計量に基づいて決定することのできる表現を生成する、特定の画像埋め込み関数の文脈の中で説明する。さらに、画像埋め込み関数f(.)の一例示的実装形態は、画像をユークリッド空間内の点に写像する。しかし、他の画像表現を生成する他の画像埋め込み関数を使用することもできる。したがって、プロセス200によって反復的にトレーニングすることのできるどんな適切な調整可能な関数も使用することができ、すなわち、画像埋め込み関数は、下で説明する特定の例示的関数である必要はない。
プロセス200が、特定タイプのオブジェクトの出現を検出する(202)。例えば、特定タイプのオブジェクトの出現は、画像トレーニングセット102中の画像内で検出される。画像トレーニングセット中の画像は、第1の時間期間T1 124中に捕捉された画像である。特定タイプのオブジェクトの出現を検出することは、自動化された方法によって実施することができる。画像トレーニングセット中の一部の画像は、特定タイプのオブジェクトの出現を含んでいない場合がある。
プロセス200が、検出されたオブジェクトの1回の出現をそれぞれが含むサブ画像を抽出する(204)。例えば、サブ画像は、画像トレーニングセット中の画像から抽出され、ここで各サブ画像は、画像トレーニングセットからの画像の内部の連続した領域である。各サブ画像は、検出されたオブジェクトの1回の出現を描いている。
画像トレーニングセット中の1つの画像から、複数のサブ画像が抽出されてよい。それらのサブ画像は重なり合っていてよく、具体的には、あるオブジェクトの同一出現が、画像トレーニングセット中の同一画像から抽出された複数のサブ画像によって描かれていてよい。サブ画像は、トレーニングセット中の画像内の矩形バウンディングボックス(または任意の幾何学的に定義されたバウンディングボックス)の内部として定義されてよい。バウンディングボックスの位置は、それらの頂点のデカルト座標によってパラメータ化することができる。サブ画像が検出されると、反復プロセスが開始する。 Multiple sub-images may be extracted from one image in the image training set. The sub-images may overlap, and specifically, the same appearance of an object may be depicted by a plurality of sub-images extracted from the same image in the image training set. The sub-image may be defined as the interior of a rectangular bounding box (or any geometrically defined bounding box) within the image in the training set. The position of the bounding box can be parameterized by the Cartesian coordinates of those vertices. When a sub-image is detected, an iterative process begins.
いくつかの実装形態では、抽出された各サブ画像に、所与のキーポイントがアノテーションされてよい。所与のキーポイントは、手動でアノテーションされてもよく、自動化された方法によってアノテーションされてもよく、また画像内の座標の順序付きリストを含みてよく、その場合、各座標はキーポイントの位置を表している。例えば、人間オブジェクトタイプの文脈では、キーポイントは、身体ポイントおよび骨格ポイント、例えば肘部、頭部、胴部、脚部などを描いたポイントであってよい。画像トレーニングセット中の一部の画像には、キーポイントのうちの適切なサブセットがアノテーションされてよい。例えば、人間オブジェクトタイプの文脈では、脚部からのキーポイントは、ウエストから上の人間を描いたサブ画像にはアノテーションすることができない。これらの実装形態では、抽出されたサブ画像が基準サブ画像として選択されてよく、抽出された他の各サブ画像が、それらのそれぞれのキーポイントを基準サブ画像のキーポイントと位置整合させるように変換されてよい。変換には、移動や回転などの一次変換と、制御ポイントのグリッドの変位によってパラメータ化される変換などの非一次変換の両方が関与してよい。変換は、変換されるサブ画像のキーポイントと基準サブ画像のキーポイントとの間の類似性指標を最大にすることによって算出されてよい。 In some implementations, each extracted sub-image may be annotated with a given key point. A given keypoint may be manually annotated, annotated by an automated method, or may include an ordered list of coordinates in the image, where each coordinate is the position of the keypoint. Represents. For example, in the context of human object types, key points may be body points and skeletal points, such as elbows, heads, torso, legs, and the like. Some images in the image training set may be annotated with the appropriate subset of key points. For example, in the context of human object types, key points from the legs cannot be annotated to sub-images depicting humans above the waist. In these implementations, the extracted sub-image may be selected as the reference sub-image so that each of the other extracted sub-images aligns their respective key points with the key points of the reference sub-image. May be converted. The transformation may involve both primary transformations such as movement and rotation and non-primary transformations such as transformations that are parameterized by the displacement of the grid of control points. The transformation may be calculated by maximizing the index of similarity between the keypoints of the subimage being transformed and the keypoints of the reference subimage.
プロセス200が、画像トリプレットを選択する(206)。トリプレット選択層108が、検出されたオブジェクトを含むサブ画像106から画像トリプレットを選択する。画像トリプレットを選択する一例示的方途について、次に本発明者らが移る図3のプロセス300を参照して説明する。
プロセス300が、可能な画像トリプレットを、次によって選択する。第1の検出されたオブジェクトを含む第1のサブ画像110を選択する(302)、また第2の検出されたオブジェクトを含む第2のサブ画像112を選択する、ここで、第2のサブ画像および第1のサブ画像は、特定タイプのオブジェクトの同一インスタンスを描いており、第2の時間期間T2内に捕捉された画像から抽出されたものである(304)。例えば、同一インスタンスは、第2の期間中の同一または異なる時間に撮影された、特定人物の2つの画像であってよい。いくつかの実装形態では、第1および第2のサブ画像が、それらの抽出元である、特定の事象、例えば誕生会中に捕捉された画像に基づいて選択される。プロセス300が次いで、第1および第2のサブ画像内に描かれたオブジェクトの同一インスタンスとは異なる、特定タイプの第3の検出されたオブジェクトを含む第3のサブ画像114を選択する(306)。
所与の反復において、可能な全ての画像トリプレットのうちの適切なサブセットが選択されてよい。任意の所与の反復において、画像埋め込み関数のトレーニングを加速させるために、画像トリプレット中の第1および第2のサブ画像の特徴表現が可能な限り非類似であり、画像トリプレット中の第1および第3のサブ画像の特徴表現が可能な限り類似している、「ハード」画像トリプレットが、好ましくは選択されてよい。 At a given iteration, the appropriate subset of all possible image triplets may be selected. In order to accelerate the training of the image embedding function at any given iteration, the feature representations of the first and second subimages in the image triplet are as dissimilar as possible, and the first and second subimages in the image triplet A "hard" image triplet, in which the feature representation of the third sub-image is as similar as possible, may be preferably selected.
ステップ206は、第1の反復ステップとして描かれているが、いくつかの実装形態では、ステップ206は1度実施されてよく、ステップ208が第1の反復ステップであってよいことに留意されたい。
Note that
図2Aに戻ると、プロセス200が、選択された各画像トリプレットの第1、第2、および第3のサブ画像の各々を入力として画像埋め込み関数に与える(208)。例えば、図1Aに示すように、トリプレット選択層108が、画像トリプレットの第1のサブ画像110、第2のサブ画像112、および第3のサブ画像114を、画像埋め込み関数f(.)に与えて、インスタンスf(.)116、f(.)118、およびf(.)120を生成する。各インスタンスは、同一埋め込み関数f(.)を使用しているが、画像トリプレット中の画像のうちの1つだけを入力として受領する。
Returning to FIG. 2A,
プロセス200が、画像埋め込み関数によって、各画像トリプレット中の画像の各々の視覚的特徴の表現を生成する(210)。例えば、図1Aに示すように、表現f(A)、f(P)、およびf(N)が生成される。いくつかの実装形態では、埋め込み関数が、出力特徴表現として画像のユークリッド空間への写像を生成する。しかし、他の表現を生成する他の関数を使用することができる。
プロセス200が、画像埋め込み関数の性能指標を、画像トリプレットのそれぞれの特徴表現の類似性指標に基づいて決定する(212)。性能指標を決定する一例示的方途について、次に本発明者らが移る図4のプロセス400を参照して説明する。
各トリプレットについて、プロセス400が、画像トリプレット中の第1の画像の第1の特徴表現とその画像トリプレット中の第2の画像の第2の特徴表現の類似性を測定する第1の類似性指標を決定する(402)。同様に、各画像トリプレットについて、プロセス400が、画像トリプレット中の第1の画像の第1の特徴表現とその画像トリプレット中の第3の画像の第3の特徴表現の類似性を測定する第2の類似性指標を決定する(404)。
For each triplet,
プロセス400が次いで、画像埋め込み関数の性能指標を、画像トリプレットの第1および第2の類似性指標に基づいて決定する(406)。埋め込み関数が画像をユークリッド空間に写像する場合、モデル性能指標層122は、類似性指標としてユークリッド距離、例えば、
を使用してよい。 May be used.
したがって、距離Dが小さいほど、特徴表現f(A)と特徴表現f(P)との(またはf(A)とf(N)との)間の類似性が高い。反対に、距離Dが大きいほど、特徴表現f(A)と特徴表現f(P)との(またはf(A)とf(N)との)間の類似性が低い。 Therefore, the smaller the distance D, the higher the similarity between the feature expression f (A) and the feature expression f (P) (or between f (A) and f (N)). On the contrary, the larger the distance D, the lower the similarity between the feature expression f (A) and the feature expression f (P) (or between f (A) and f (N)).
繰り返して言うが、他の計量法を使用して、特徴表現間の類似性を測定することができる。使用される類似性測定法は、画像埋め込み関数f(.)が生成する表現に応じて決まってよい。 Again, other measurements can be used to measure the similarity between feature representations. The similarity measurement method used may depend on the representation generated by the image embedding function f (.).
類似性指標がユークリッド距離である場合、モデル性能指標層122は、画像トリプレットについての第1および第2の類似性指標を、アンカー画像の特徴表現とポジティブ画像の特徴表現との間の第1のユークリッド距離、およびアンカー画像の特徴表現とネガティブ画像の特徴表現との間の第2のユークリッド距離に基づいて、決定することができる。このタイプの画像埋め込み関数が使用されるとき、システム100は、
When the similarity index is the Euclidean distance, the model
と表すことのできる、第1の類似性指標が第2の類似性指標よりも小さくなる画像トリプレットについての特徴表現を生成する画像埋め込み関数f(.)を学習させようと試みる。 Attempts are made to train an image embedding function f (.) That produces a feature representation for an image triplet in which the first similarity index is smaller than the second similarity index.
上式で、αは、ポジティブとネガティブのペア間に強いられる指定のマージンであり、Γは、選択された画像トリプレットのセットである。 In the above equation, α is the specified margin imposed between the positive and negative pairs, and Γ is the set of selected image triplets.
性能指標には、画像トリプレットについての第1のユークリッド距離と第2のユークリッド距離との差に基づくヒンジ損失を決定すること、例えば、 The performance index is to determine the hinge loss based on the difference between the first Euclidean distance and the second Euclidean distance for the image triplet, eg
が関与してよい。 May be involved.
性能指標には、選択された各画像トリプレットについてのヒンジ損失項を合計すること、例えば、 The performance index is the sum of the hinge loss terms for each selected image triplet, eg
が関与してよい。 May be involved.
いくつかの実装形態では、抽出された各サブ画像に、所与のキーポイントがアノテーションされてよく、画像埋め込み関数が、画像トリプレットおよびキーポイントアノテーションに対して反復的にトレーニングされてよい。いくつかの実装形態では、画像埋め込み関数の出力が、入力画像の特徴表現、および入力画像の予測されたキーポイントアノテーションを含む。これらの実装形態では、性能指標は、画像埋め込み関数によって予測されたキーポイントアノテーションと所与のキーポイントアノテーションとの間の類似性指標を含んでよい。他のいくつかのの実装形態では、画像埋め込み関数の入力が、入力画像、および入力画像のアノテーションされたキーポイントを含む。 In some implementations, each extracted sub-image may be annotated with a given keypoint, and the image embedding function may be iteratively trained on the image triplet and keypoint annotation. In some implementations, the output of the image embedding function includes a feature representation of the input image and a predicted keypoint annotation of the input image. In these implementations, the performance metric may include a similarity metric between the keypoint annotation predicted by the image embedding function and a given keypoint annotation. In some other implementations, the input of the image embedding function includes the input image and the annotated key points of the input image.
画像埋め込み関数f(.)の出力に応じた他のタイプの性能指標を使用することもできる。 Other types of performance indicators can also be used depending on the output of the image embedding function f (.).
図2Aに戻ると、プロセス200が、画像埋め込み関数のパラメータ重みを、性能指標に基づいて調整する(214)。例えば、画像埋め込み関数のパラメータ重みは、画像埋め込み関数の性能指標に基づいて調整される。パラメータ重みは、画像埋め込み関数の性能を性能指標に従って改善するように調整されてよい。調整には、ネットワークパラメータに関して損失関数の勾配を算出すること、およびネットワークパラメータをこの勾配に基づいて調整することが関与してよい。勾配に基づくパラメータ重み更新の積極性は、スカラー「学習率」変数に応じて決まってよい。学習率は、反復相互間で変化してよい。
Returning to Figure 2A,
プロセス200が、停止事象が生じたかどうかを判定する(216)。停止事象は、トレーニングプロセスにさらなるトレーニング反復の実施をストップさせる事象である。例えば、トレーニング反復の最大数に達したこと、性能指標が指定のしきい値を達成したこと、および反復相互間の性能指標の変化が指定のしきい値を達成したことが、停止事象となり得る。停止事象は、トレーニングプロセスの任意の反復に含めるために選択されたのではない画像トリプレットに基づいて評価された、画像埋め込み関数の第2の性能指標に基づいてよい。停止事象が生じたと判定された場合、トレーニングが終了する。
停止事象が生じていないと判定された場合、プロセス200は、ステップ206(または実装形態に応じてステップ208)に戻り、繰り返してよい。そうでない場合、トレーニングが終了する(218)。
If it is determined that no outage event has occurred,
上で説明したように、図2Bの例など、他の実装形態では、画像ペアが使用される。この例示的実装形態の動作について、画像埋め込み関数を画像ペアトレーニングデータに基づいて学習させるための一例示的プロセス220の流れ図である図2Bを参照して説明する。プロセス220は、1つまたは複数のネットワークコンピュータのデータ処理装置システム内に実装することができ、このデータ処理装置は、別段明記しない限り、下で説明するステップを実施する。 As described above, image pairs are used in other implementations, such as the example in Figure 2B. The operation of this exemplary implementation will be described with reference to FIG. 2B, which is a flow chart of an exemplary process 220 for training an image embedding function based on image pair training data. Process 220 may be implemented within the data processing equipment system of one or more network computers, which data processing equipment performs the steps described below unless otherwise specified.
プロセス220は、画像埋め込み関数が、画像トリプレットトレーニングデータの代わりに画像ペアトレーニングデータに基づいて学習することを除き、プロセス200に類似している。したがって、ステップ222、224、226、および228のみについて下で説明する。他のステップは、図2Aにおいて説明した通りである。
Process 220 is similar to
プロセス200が、第1のタイプおよび第2のタイプの画像ペアを選択し(ステップ222)、各画像ペアについて、第1および第2の画像を画像埋め込み関数に与え(ステップ224)、各画像ペアについて、画像埋め込み関数によって、画像の各々についての特徴表現を生成し(ステップ226)、画像埋め込み関数の性能指標を、画像ペアのそれぞれの特徴表現の類似性指標に基づいて決定し(ステップ228)、その他については、プロセス200と同様に進む。
トレーニングされたモデルは次いで、存続し、画像処理システム内に実装されてよい。トレーニングされた画像埋め込み関数の1つのそのような応用例について、図5を参照して説明する。図5は、画像セット502からの画像を、例えばトレーニングされた画像埋め込み関数を使用して画像をグループに分類すること(または写真を「グループ化すること」)によって分類するためのシステム500のブロック図である。システム500は、1つまたは複数のネットワークコンピュータのデータ処理装置システム内に実装することができる。 The trained model may then survive and be implemented within the image processing system. One such application of the trained image embedding function is described with reference to Figure 5. Figure 5 shows a block of system 500 for classifying images from image set 502, for example by grouping images (or "grouping" photos) using a trained image embedding function. It is a figure. System 500 can be implemented within a data processor system of one or more network computers.
システム500は、画像セットからの画像を、画像内の特定タイプのオブジェクトの出現に基づいてグループ化し、またはその他の形で分類する。モデルデータ128は、特定タイプのオブジェクトの表現を生成するようにプロセス200によってトレーニングされた画像埋め込み関数506に対応する。オブジェクト検出部104が、画像セット中の画像から特定タイプのオブジェクトを検出し、検出されたオブジェクトの出現を描いたサブ画像504が抽出される。上で説明したようにトレーニングされた画像埋め込み関数506が、特定タイプの検出されたオブジェクトを描いたサブ画像の特徴表現を生成し、クラスタ化アルゴリズム508が、これらの特徴表現をグループに割り当てる。上述したように、入力画像セットを分類した結果は、例えば、実体を制御する制御システムへの入力として使用されてよい。
System 500 groups images from an image set based on the appearance of certain types of objects in the image, or classifies them in some other way.
システム500の動作について、画像セットからの画像を画像内の特定タイプのオブジェクトの出現に基づいてグループ化するための一例示的プロセス600の流れ図である図6を参照して説明する。プロセス600は、1つまたは複数のネットワークコンピュータのデータ処理装置システム内に実装することができ、このデータ処理装置は、別途明記しない限り、下で説明するステップを実施する。 The operation of the system 500 will be described with reference to FIG. 6, which is a flow chart of an exemplary process 600 for grouping images from an image set based on the appearance of specific types of objects in the image. Process 600 can be implemented within the data processing equipment system of one or more network computers, the data processing equipment performing the steps described below unless otherwise specified.
プロセス600が、画像セット中の画像内の特定タイプのオブジェクトの出現を検出し、それらの画像から、特定タイプのオブジェクトの1回の出現をそれぞれが描いているサブ画像を抽出する(602)。このステップは、上で説明したステップ202および204に類似していてよい。
Process 600 detects the appearance of certain types of objects in the images in the image set and extracts from those images sub-images, each depicting a single appearance of the particular type of object (602). This step may be similar to
プロセス600が、特徴表現を生成するトレーニングされた画像埋め込み関数506に各サブ画像を入力することによって、各サブ画像についての特徴表現を生成する(604)。トレーニングされた画像埋め込み関数506は、上で説明したようにトレーニングされている。 Process 600 generates a feature representation for each sub-image by inputting each sub-image into a trained image embedding function 506 that generates a feature representation (604). The trained image embedding function 506 is trained as described above.
プロセス600が、抽出されたサブ画像の生成された特徴表現をクラスタ化することによって、生成された特徴表現を検出されたオブジェクトのグループに割り当てる(606)。例えば、画像埋め込み関数がユークリッド空間に写像する実装形態では、クラスタ化アルゴリズムがk平均アルゴリズムまたは期待値最大化(EM)アルゴリズムであってよい。 Process 600 assigns the generated feature representations to a group of detected objects by clustering the generated feature representations of the extracted subimages (606). For example, in an implementation in which the image embedding function maps to Euclidean space, the clustering algorithm may be a k-means algorithm or an expected value maximization (EM) algorithm.
プロセス600が、画像セット中の画像を画像グループに割り当てる(608)。割り当ては、検出されたオブジェクトのグループに基づいてよく、その際、第1の画像から抽出された第1のサブ画像および第2の画像から抽出された第2のサブ画像が、検出されたオブジェクトの同一グループに割り当てられる場合、画像セットからの第1の画像および画像セットからの第2の画像は、同一画像グループに割り当てられる。画像セット中の1つの画像が、複数の画像グループに割り当てられる場合があることに留意されたい。例えば、第1の画像がオブジェクトインスタンスAを示し、第2の画像がオブジェクトインスタンスBを示し、第3の画像が、オブジェクトインスタンスAとBの両方を示し、ここで、オブジェクトインスタンスAがオブジェクトインスタンスBとは異なるなら、第1の画像と第2の画像は、別々の画像グループに割り当てられ、第3の画像は、その別々の画像グループの両方に割り当てられることになる。 Process 600 assigns the images in the image set to an image group (608). The assignment may be based on a group of detected objects, in which the first sub-image extracted from the first image and the second sub-image extracted from the second image are the detected objects. When assigned to the same group, the first image from the image set and the second image from the image set are assigned to the same image group. Note that one image in an image set may be assigned to multiple image groups. For example, the first image shows object instance A, the second image shows object instance B, the third image shows both object instances A and B, where object instance A is object instance B. If not, the first and second images will be assigned to separate image groups, and the third image will be assigned to both of those separate image groups.
一実装形態では、オブジェクトの特定タイプが人体全身であり、システム500が、人物の写真をグループ化するために利用され、その際、同一人物を描いた写真が同一グループに割り当てられる。人物の写真を、検出された顔の類似性に基づいてグループ化するための方法では、顔が認識できない場合に写真を首尾よくグループ化することが困難である。顔は、小さいこと、遮られていること、または背景内にあること、を含む理由のため、認識できない場合がある。しかし、各画像内で検出された全身を描いたサブ画像の特徴表現が、検出されたオブジェクトの同一グループに割り当てられる場合に、2つの画像が同一画像グループに割り当てられるという、検出された全身の類似性に基づいた人物の写真のグループ化は、これらの課題に対してよりロバストである。 In one implementation, a particular type of object is the whole human body, and system 500 is used to group photos of people, with photos depicting the same person assigned to the same group. The method for grouping people's photos based on the detected facial similarities makes it difficult to successfully group the photos when the faces are unrecognizable. The face may be unrecognizable for reasons, including being small, obstructed, or in the background. However, when the feature representation of the sub-image depicting the whole body detected in each image is assigned to the same group of detected objects, the two images are assigned to the same image group, that is, the detected whole body. Grouping person photos based on similarity is more robust to these challenges.
いくつかの実装形態では、図1Aまたは図1Bのシステムを使用して、画像埋め込み関数f(.)を実装した人工ニューラルネットワーク構造をトレーニングすることができる。この人工ニューラルネットワークは、画像Iの埋め込み:f(I)∈Rd、ただしdは特徴埋め込みの次元である、を算出する。 In some implementations, the system of Figure 1A or Figure 1B can be used to train an artificial neural network structure that implements the image embedding function f (.). This artificial neural network calculates the embedding of image I: f (I) ∈ R d , where d is the dimension of feature embedding.
上で説明したように、性能指標層122が埋め込み関数の性能を評価する。ニューラルネットワークを使用して埋め込み関数を生成する場合、性能指標層122は、勾配をネットワークのより下位層に逆伝搬して、より下位層が、損失を最小限に抑えるようにそれらのパラメータを調整することができるようにする。
As explained above, the
ニューラルネットワークは、複数のニューロンからそれぞれがなり、各ニューロンが複数の入力を受領するように構成され、各ニューロンに活性化関数が備わった、複数の積み重なった層を含みてよい。これらの層は、畳み込み層、プーリング層、局所正規化層、および全結合層を含んでよい。活性化関数は、シグモイド、tanh、正規化線形、leaky正規化線形、またはmaxoutであってよい。 A neural network may contain multiple stacked layers, each consisting of multiple neurons, each neuron being configured to receive multiple inputs, and each neuron having an activation function. These layers may include a convolutional layer, a pooling layer, a locally normalized layer, and a fully connected layer. The activation function may be sigmoid, tanh, rectified linear, leaky rectified linear, or maxout.
畳み込み層は、入力を受領し、それを1組の学習済みカーネルと畳み込み積分して、特徴マップを生じさせる。カーネルは、埋め込みに関連する、エッジなどの局所画像特徴を検出するように、適応的に学習してよい。 The convolution layer takes the input and convolves and integrates it with a set of trained kernels to produce a feature map. The kernel may adaptively learn to detect local image features such as edges associated with embedding.
最大プーリング層は、画素周囲の局所近傍にわたって最大プーリングを実施する。最大プーリングは、プーリングされたブロックの最大値を選択するものである。平均プーリング層は、画素周囲の局所近傍にわたって平均プーリングを実施する。平均プーリングは、プーリングされたブロックの平均値を算出するものである。プーリング層は、特徴マップを、わずかな移動に対してロバストにすることができる。 The maximum pooling layer performs maximum pooling over a local neighborhood around the pixel. Maximum pooling selects the maximum value of the pooled block. The average pooling layer performs average pooling over a local vicinity around the pixel. The average pooling calculates the average value of the pooled blocks. The pooling layer can make the feature map robust for small movements.
正規化層は、畳み込みニューラルネットワークの出力を正規化スケールに正規化する。いくつかの実装形態では、正規化層は、局所近傍周囲の特徴マップを、単位ノルムおよびゼロ平均を有するように正規化する。これにより、照明およびコントラストの差に対してロバストな特徴マップがもたらされる。 The normalization layer normalizes the output of the convolutional neural network to the normalization scale. In some implementations, the normalization layer normalizes the feature map around the local neighborhood to have a unit norm and a zero average. This provides a robust feature map for differences in lighting and contrast.
ニューラルネットワークは、1つまたは複数のパラメータ重み正則化ストラテジを実装してよい。性能指標は、ニューラルネットワークのパラメータ重みのノルムを算出する正則化項を含む損失関数であってよい。ニューラルネットワークは、ニューロン共適応を防ぐためにニューロンをランダムに削除するものである、ドロップアウトを実装してよい。 Neural networks may implement one or more parameter weight regularization strategies. The performance index may be a loss function that includes a regularization term that calculates the norm of the parameter weights of the neural network. Neural networks may implement dropouts that randomly remove neurons to prevent neuron co-adaptation.
本明細書において説明した本主題および動作の実施形態は、デジタル電子回路として、またはコンピュータソフトウェア、コンピュータファームウェア、もしくは本明細書において開示した構造およびそれらの構造的等価物を含むコンピュータハードウェアとして、またはそれらのうちの1つもしくは複数の組合せとして、実装することができる。本明細書において説明した本主題の実施形態は、データ処理装置によって実行できるように、またはデータ処理装置の動作を制御するためにコンピュータ記憶媒体上に符号化された、1つまたは複数のコンピュータプログラム、すなわちコンピュータプログラム命令の1つまたは複数のモジュールとして、実装することができる。 Embodiments of the subject and operations described herein can be as digital electronic circuits, or as computer software, computer firmware, or computer hardware, including the structures disclosed herein and their structural equivalents. It can be implemented as one or more of them. The embodiments of the present subject described herein are one or more computer programs encoded on a computer storage medium so that they can be performed by a data processor or to control the operation of the data processor. That is, it can be implemented as one or more modules of computer program instructions.
コンピュータ記憶媒体は、コンピュータ可読記憶デバイス、コンピュータ可読記憶基板、ランダムもしくはシリアルアクセスメモリアレイもしくはデバイス、またはそれらのうちの1つもしくは複数の組合せとすることができ、またはその中に含めることができる。さらに、コンピュータ記憶媒体は、伝搬信号ではないが、人工的に生成された伝搬信号内に符号化されたコンピュータプログラム命令の供給元または供給先とすることができる。 The computer storage medium can be, or include, a computer-readable storage device, a computer-readable storage board, a random or serial access memory array or device, or a combination thereof. Further, the computer storage medium can be a source or destination of computer program instructions encoded in the artificially generated propagated signal, although it is not a propagated signal.
本明細書において説明した動作は、データ処理装置によって、1つまたは複数のコンピュータ可読記憶デバイス上に格納された、または他の供給元から受領されたデータに対して実施される動作として、実装することができる。 The operations described herein are implemented as operations performed by a data processor on data stored on one or more computer-readable storage devices or received from other sources. be able to.
「データ処理装置」という用語は、例としてプログラマブルプロセッサ、コンピュータ、システムオンチップ、または前述したもののうちの複数のもの、もしくは前述したものの組合せを含む、データを処理するためのあらゆる種類の装置、デバイス、およびマシンを包含する。装置は、専用論理回路、例えばFPGA(フィールドプログラマブルゲートアレイ)またはASIC(特定用途向け集積回路)を含むことができる。装置は、ハードウェアに加えて、当該のコンピュータプログラムのための実行環境を作り出すコード、例えばプロセッサファームウェア、プロトコルスタック、データベース管理システム、オペレーティングシステム、クロスプラットフォーム実行時環境、仮想マシン、またはそれらのうちの1つもしくは複数の組合せを構成するコードも含むことができる。装置および実行環境は、ウェブサービス、分散コンピューティング、およびグリッドコンピューティングのインフラストラクチャなど、さまざまな異なるコンピューティングモデルインフラストラクチャを実現することができる。 The term "data processor" refers to any type of device or device for processing data, including, for example, programmable processors, computers, system-on-chip, or multiple of the aforementioned, or a combination of those described above. , And the machine. The device can include dedicated logic circuits, such as FPGAs (Field Programmable Gate Arrays) or ASICs (Application Specific Integrated Circuits). A device, in addition to hardware, is code that creates an execution environment for the computer program in question, such as processor firmware, protocol stacks, database management systems, operating systems, cross-platform runtime environments, virtual machines, or any of them. It can also include code that makes up one or more combinations. Equipment and execution environments can implement a variety of different computing model infrastructures, including web services, distributed computing, and grid computing infrastructures.
(プログラム、ソフトウェア、ソフトウェアアプリケーション、スクリプト、またはコードとしても知られる)コンピュータプログラムは、コンパイル型言語またはインタープリタ型言語、宣言型言語または手続き型言語を含む、任意の形態のプログラミング言語で記述することができ、またそれは、スタンドアロンプログラムとして、またはモジュール、コンポーネント、サブルーチン、オブジェクト、もしくはコンピューティング環境において使用するのに適した他のユニットとして、を含む、任意の形態でデプロイすることができる。コンピュータプログラムは、その必要はないが、ファイルシステム内のファイルに対応してよい。プログラムは、他のプログラムもしくはデータを保持するファイルの一部分(例えば、マークアップ言語ドキュメント内に格納された1つもしくは複数のスクリプト)内に、当該のプログラムに専用の単一ファイル内に、または複数の連係されたファイル(例えば、コードの1つもしくは複数のモジュール、サブプログラム、もしくは一部分を格納するファイル)内に、格納することができる。コンピュータプログラムは、1つのコンピュータ上で、または1つのサイトに位置するかもしくは複数のサイトにわたって分散され、通信ネットワークによって相互接続された複数のコンピュータ上で実行されるように、デプロイすることができる。 Computer programs (also known as programs, software, software applications, scripts, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages. It can also be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. The computer program does not have to, but may correspond to the files in the file system. A program may be in another program or part of a file that holds data (for example, one or more scripts stored in a markup language document), in a single file dedicated to that program, or in multiples. Can be stored in a linked file (eg, a file that stores one or more modules, subprograms, or parts of code). Computer programs can be deployed to run on one computer, or on multiple computers located at one site or distributed across multiple sites and interconnected by communication networks.
本明細書において説明したプロセスおよび論理フローは、アクションを実施するための1つまたは複数のコンピュータプログラムを、入力データに作用し出力を生成することにより実行する、1つまたは複数のプログラマブルプロセッサによって実施することができる。コンピュータプログラムの実行に適したプロセッサとしては、例として、汎用マイクロプロセッサと専用マイクロプロセッサの両方、および任意の種類のデジタルコンピュータのいずれか1つまたは複数のプロセッサがある。一般に、プロセッサは、読出し専用メモリまたはランダムアクセスメモリまたはその両方から、命令およびデータを受領する。コンピュータの必須要素は、命令に従ってアクションを実施するためのプロセッサ、ならびに命令およびデータを格納するための1つまたは複数のメモリデバイスである。一般に、コンピュータはまた、データを格納するための1つまたは複数の大容量記憶デバイス、例えば磁気ディスク、光磁気ディスク、または光ディスクを含むか、またはそこからデータを受領するか、もしくはそこにデータを転送するか、もしくはその両方を行うように、動作可能に結合される。しかし、コンピュータは、そのようなデバイスを有している必要はない。 The processes and logical flows described herein are performed by one or more programmable processors that execute one or more computer programs to perform actions by acting on input data and producing outputs. can do. Suitable processors for running computer programs include, for example, both general purpose and dedicated microprocessors, and one or more processors of any type of digital computer. Generally, the processor receives instructions and data from read-only memory and / or random access memory. Essential elements of a computer are a processor for performing actions according to instructions, as well as one or more memory devices for storing instructions and data. In general, a computer also includes or receives data from, or stores, one or more mass storage devices for storing data, such as magnetic disks, magneto-optical disks, or optical disks. It is operably combined to transfer or both. However, the computer does not have to have such a device.
本明細書において説明した本主題の実施形態は、例えばデータサーバとしてのバックエンドコンポーネントを含むか、またはミドルウェアコンポーネント、例えばアプリケーションサーバを含むか、またはフロントエンドコンポーネント、例えば、本明細書において説明した本主題の実装形態とそれを通じてユーザが対話することのできるグラフィカルユーザインターフェースもしくはウェブブラウザを有するユーザコンピュータを含むか、または1つもしくは複数のそのようなバックエンドコンポーネント、ミドルウェアコンポーネント、もしくはフロントエンドコンポーネントの任意の組合せを含む、コンピューティングシステム内に実装することができる。システムのコンポーネントは、任意の形態または媒体のデジタルデータ通信、例えば通信ネットワークによって、相互接続することができる。 The embodiments of the subject described herein include, for example, a back-end component as a data server, or include a middleware component, such as an application server, or a front-end component, eg, the book described herein. Includes a user computer with a thematic implementation and a graphical user interface or web browser through which the user can interact, or any of one or more such back-end, middleware, or front-end components. Can be implemented within a computing system, including a combination of. The components of the system can be interconnected by any form or medium of digital data communication, such as a communication network.
コンピューティングシステムは、ユーザおよびサーバを含むことができる。ユーザとサーバは一般に、互いに遠隔にあり、典型的には、通信ネットワークを通じて対話する。ユーザとサーバの関係は、コンピュータプログラムがそれぞれのコンピュータ上でランし、互いにユーザ-サーバ関係を有することによって生じる。 Computing systems can include users and servers. Users and servers are generally remote from each other and typically interact through communication networks. A user-server relationship arises when a computer program runs on each computer and has a user-server relationship with each other.
本明細書は、実装形態の多くの具体的詳細を含んでいるが、これらは、特許請求され得るものの範囲に対する限定と解釈すべきではない。本明細書において別々の実施形態の文脈の中で説明される、いくつかの特徴は、単一の実施形態において組み合わせて実装することもできる。反対に、単一の実施形態の文脈の中で説明されるさまざまな特徴を、複数の実施形態において別々に、または任意の適切な部分組合せで実装することもできる。さらに、特徴については上で、ある特定の組合せで作用するものと説明されていることがあり、そういうものとして最初に特許請求されていることすらあるが、特許請求された組合せからの1つまたは複数の特徴を、場合によっては、その組合せから削除することができ、特許請求された組合せが、部分組合せまたは部分組合せの変形を対象としていてよい。 Although this specification contains many specific details of the embodiment, these should not be construed as a limitation to the scope of what can be claimed. Some features, described herein in the context of different embodiments, can also be implemented in combination in a single embodiment. Conversely, the various features described in the context of a single embodiment can be implemented separately in multiple embodiments or in any suitable subcombination. In addition, the features may be described above as acting in a particular combination, and even the first to be claimed as such, but one from the claimed combination or A plurality of features can be removed from the combination in some cases, and the claimed combination may be intended for a partial combination or a modification of the partial combination.
同様に、動作は図面中に特定の順序で描かれているが、これは、望ましい結果を達成するために、そのような動作が図示の特定の順序で、もしくは順番に実施されること、または示された全ての動作が実施されることを要求するものと理解すべきではない。ある特定の状況下では、マルチタスキングおよび並列処理が、有利となる場合がある。さらに、上で説明した実施形態におけるさまざまなシステムコンポーネントの分離は、全ての実施形態においてそのような分離を要求するものと理解すべきではなく、説明したプログラムコンポーネントおよびシステムは一般に、単一のソフトウェア製品に一緒に統合するか、または複数のソフトウェア製品にパッケージ化できる、ということを理解されたい。 Similarly, the actions are depicted in the drawings in a particular order, which means that such actions are performed in a particular order or sequence as shown, or in order to achieve the desired result. It should not be understood as requiring that all indicated actions be performed. Under certain circumstances, multitasking and parallelism may be advantageous. Moreover, the separation of the various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and the program components and systems described are generally a single piece of software. It should be understood that it can be integrated into a product together or packaged into multiple software products.
かくして、本主題の特定の実施形態について説明してきた。他の実施形態が、添付の特許請求の範囲に記載の範囲内に含まれる。場合によっては、特許請求の範囲内に記載されたアクションを、異なる順序で実施し、それでもなお、望ましい結果を達成することができる。加えて、添付の図中に描かれたプロセスは、望ましい結果を達成するために、図示の特定の順序、または順番を必ずしも要求するとは限らない。いくつかの実装形態では、マルチタスキングおよび並列処理が、有利となる場合がある。 Thus, a particular embodiment of the subject matter has been described. Other embodiments are included within the scope of the appended claims. In some cases, the actions described within the claims can be performed in a different order and still achieve the desired result. In addition, the processes depicted in the accompanying figures do not necessarily require the particular order, or order shown, in order to achieve the desired result. In some implementations, multitasking and parallelism may be advantageous.
100 システム
102 トレーニング画像、画像トレーニングセット
104 オブジェクト検出部
106 特定タイプのオブジェクトの出現を描いたもの、検出されたオブジェクトを含むサブ画像
108 トリプレット選択層
110 第1の画像、第1のサブ画像
112 第2の画像、第2のサブ画像
114 第3の画像、第3のサブ画像
122 モデル性能指標層
124 第1の時間期間T1
126 第1の時間期間T1の適切なサブセットである第2の時間期間T2
128 モデルデータ
130 システム
140 サブ画像
142 サブ画像
200 一例示的プロセス
220 一例示的プロセス
300 プロセス
400 プロセス
500 システム
502 画像セット
504 検出されたオブジェクトの出現を描いたサブ画像
506 画像埋め込み関数
508 クラスタ化アルゴリズム
600 一例示的プロセス
100 systems
102 training images, image training set
104 Object detector
106 Sub-images of the appearance of certain types of objects, including detected objects
108 Triplet selection layer
110 1st image, 1st sub image
112 Second image, second sub-image
114 Third image, third sub-image
122 Model performance indicator layer
124 First time period T 1
126 Second time period T 2 which is an appropriate subset of the first time period T 1
128 model data
130 system
140 sub-image
142 sub image
200 An exemplary process
220 An exemplary process
300 processes
400 processes
500 system
502 image set
504 Sub-image depicting the appearance of the detected object
506 Image embedding function
508 clustering algorithm
600 An exemplary process
Claims (18)
画像トレーニングセット中の各画像内の特定タイプのオブジェクトの出現を検出するステップであって、前記画像トレーニングセット中の画像が、第1の時間期間内に捕捉された画像である、抽出するステップと、
前記画像トレーニングセット中の前記画像から、検出されたオブジェクトの1回の出現をそれぞれが描いているサブ画像を抽出するステップと、
画像埋め込み関数を反復的にトレーニングするステップであって、前記画像埋め込み関数が、入力画像に作用して、出力として前記入力画像の特徴表現を生じさせる、1組のパラメータ重みを含み、前記トレーニングの各反復が、
前記抽出されたサブ画像から、第1のタイプの複数の画像ペアおよび第2のタイプの複数の画像ペアを選択するステップであって、各画像ペアが、第1のサブ画像と第2のサブ画像との組合せであり、
前記第1のタイプのそれぞれの画像ペアが、前記特定タイプのオブジェクトの同一インスタンスを描いた第1のサブ画像および第2のサブ画像を含み、
前記第2のタイプのそれぞれの画像ペアが、前記特定タイプのオブジェクトの異なるインスタンスを描いた第1のサブ画像および第2のサブ画像を含み、かつ
前記第1のタイプのそれぞれの画像ペアについて、前記画像ペアの少なくとも前記第1のサブ画像および前記第2のサブ画像が、第2の時間期間内に捕捉された画像から抽出されたものであり、
前記第2の時間期間が、前記第1の時間期間よりも短く、かつ前記第1の時間期間のサブセットである、
選択するステップ、
選択された各画像ペアを入力として前記画像埋め込み関数に与えるとともに、対応する出力を生成するステップ、
前記画像埋め込み関数の性能指標を決定するステップ、
前記画像埋め込み関数の前記パラメータ重みを、前記性能指標に基づいて調整するステップ、および
前記トレーニングの別の反復を、停止事象が生じるまで実施するステップを含む、反復的にトレーニングするステップと
を含む、
方法。 The method performed by the data processor
A step of detecting the appearance of a specific type of object in each image in the image training set, the step of extracting, wherein the image in the image training set is an image captured within the first time period. ,
From the images in the image training set, a step of extracting sub-images each depicting one occurrence of the detected object, and
A step of iteratively training an image embedding function, comprising a set of parameter weights in which the image embedding function acts on the input image to produce a feature representation of the input image as output. Each iteration
It is a step of selecting a plurality of image pairs of the first type and a plurality of image pairs of the second type from the extracted sub-images, and each image pair is a first sub-image and a second sub-image. It is a combination with an image,
Each image pair of the first type comprises a first sub-image and a second sub-image depicting the same instance of the particular type of object.
Each image pair of the second type comprises a first sub-image and second sub image depicting different instances of objects of the particular type, and for each image pair of the first type, at least the first sub-image and the second sub-image of the image pair state, and are not extracted from the captured image in the second period of time,
The second time period is shorter than the first time period and is a subset of the first time period.
Steps to choose,
A step of feeding each selected image pair as input to the image embedding function and generating a corresponding output.
Steps to determine the performance index of the image embedding function,
Includes a step of adjusting the parameter weights of the image embedding function based on the performance index, and a step of iterative training, including a step of performing another iteration of the training until a stop event occurs.
Method.
画像トリプレットを選択するステップであって、各画像トリプレットが、第1のサブ画像と、第2のサブ画像と、第3のサブ画像との組合せであり、
前記第1のサブ画像および前記第2のサブ画像を含む画像ペアが、前記第1のタイプの画像ペアであり、
前記第1のサブ画像および前記第3のサブ画像を含む画像ペアが、前記第2のタイプの画像ペアである、
選択するステップを含む、
請求項1に記載の方法。 The step of selecting the first type image pair and the second type image pair is
It is a step of selecting an image triplet, and each image triplet is a combination of a first sub-image, a second sub-image, and a third sub-image.
The image pair including the first sub-image and the second sub-image is the first type of image pair.
The image pair including the first sub-image and the third sub-image is the second type of image pair.
Including steps to select,
The method according to claim 1.
前記画像埋め込み関数によって、前記画像トリプレット中の前記第1のサブ画像の第1の特徴表現、前記画像トリプレット中の前記第2のサブ画像の第2の特徴表現、および前記画像トリプレット中の前記第3のサブ画像の第3の特徴表現を生成するステップを含む、
請求項2に記載の方法。 The step of giving the image triplet as input to the image embedding function and generating the corresponding output is
By the image embedding function, the first feature representation of the first sub-image in the image triplet, the second feature representation of the second sub-image in the image triplet, and the first feature representation in the image triplet. Including the step of generating the third feature representation of the 3 sub-images,
The method according to claim 2.
選択された各画像トリプレットについて、
前記第1の特徴表現および前記第2の特徴表現に基づいて、前記第1の特徴表現と前記第2の特徴表現の類似性を測定する第1の類似性指標を決定するステップと、
前記第1の特徴表現および前記第3の特徴表現に基づいて、前記第1の特徴表現と前記第3の特徴表現の類似性を測定する第2の類似性指標を決定するステップとを含む、
請求項3に記載の方法。 The step of determining the performance index of the image embedding is
For each selected image triplet
A step of determining a first similarity index for measuring the similarity between the first feature expression and the second feature expression based on the first feature expression and the second feature expression.
A step of determining a second similarity index for measuring the similarity between the first feature expression and the third feature expression based on the first feature expression and the third feature expression is included.
The method according to claim 3.
選択された各画像トリプレットについて、
前記第1の類似性指標を決定する前記ステップが、前記第1の特徴表現と前記第2の特徴表現との間の第1のユークリッド距離を決定するステップを含み、
前記第2の類似性指標を決定する前記ステップが、前記第1の特徴表現と前記第3の特徴表現との間の第2のユークリッド距離を決定するステップを含む、
請求項4に記載の方法。 The image embedding function generates a mapping of the input image to Euclidean space as an output feature representation.
For each selected image triplet
The step of determining the first similarity index includes a step of determining a first Euclidean distance between the first feature representation and the second feature representation.
The step of determining the second similarity index includes a step of determining a second Euclidean distance between the first feature representation and the third feature representation.
The method according to claim 4.
請求項5に記載の方法。 The determination of the performance index of the image embedding function is based on the first Euclidean distance and the second Euclidean distance for each selected image triplet.
The method according to claim 5.
選択された各画像トリプレットについての前記第1のユークリッド距離と前記第2のユークリッド距離との差に基づくヒンジ損失を決定するステップを含む、
請求項6に記載の方法。 The step of determining the performance index based on the first Euclidean distance and the second Euclidean distance for each selected image triplet is
Includes the step of determining the hinge loss based on the difference between the first Euclidean distance and the second Euclidean distance for each selected image triplet.
The method according to claim 6.
前記選択された画像トリプレットについての前記ヒンジ損失を合計するステップを含む、
請求項7に記載の方法。 The step of determining the performance index is
Including the step of summing the hinge losses for the selected image triplet.
The method according to claim 7.
請求項1から8のいずれか一項に記載の方法。 The image embedding function includes a convolutional neural network.
The method according to any one of claims 1 to 8.
請求項1から9のいずれか一項に記載の方法。 The object is the whole human body,
The method according to any one of claims 1 to 9.
請求項1から10のいずれか一項に記載の方法。 The feature representation generated by the trained neural network is assigned to a group using a clustering algorithm.
The method according to any one of claims 1 to 10.
前記画像埋め込み関数の出力が、前記入力画像の前記特徴表現、および前記入力画像の予測されたキーポイントアノテーションを含み、
前記画像埋め込み関数の前記性能指標を決定するステップが、
前記予測されたキーポイントアノテーションと前記キーポイントアノテーションとの間の類似性を決定するステップを含む、
請求項1から11のいずれか一項に記載の方法。 Key points are annotated in each extracted sub-image,
The output of the image embedding function comprises the feature representation of the input image and the predicted keypoint annotation of the input image.
The step of determining the performance index of the image embedding function is
Includes steps to determine the similarity between the predicted keypoint annotation and the keypoint annotation.
The method according to any one of claims 1 to 11.
各サブ画像にキーポイントをアノテーションするステップと、
特定のサブ画像を基準サブ画像として選択するステップと、
各サブ画像を、そのキーポイントを前記基準サブ画像の前記キーポイントと位置整合させるように変換するステップとを含む、
請求項1から12のいずれか一項に記載の方法。 The step of extracting a sub-image from the image in the image training set
Steps to annotate key points in each sub-image,
Steps to select a specific sub-image as the reference sub-image,
Each sub-image comprises a step of transforming its keypoints to align their keypoints with the keypoints of the reference sub-image.
The method according to any one of claims 1 to 12.
前記画像埋め込み関数の入力が、入力画像、および前記入力画像のアノテーションされたキーポイントを含み、
選択された各画像ペアを入力として前記画像埋め込み関数に与えることが、
選択された各画像ペア中の各サブ画像の前記アノテーションされたキーポイントを入力として前記画像埋め込み関数に与えることを含む、
請求項1から13のいずれか一項に記載の方法。 Key points are annotated in each extracted sub-image,
The input of the image embedding function comprises the input image and the annotated key points of the input image.
It is possible to give each selected image pair as input to the image embedding function.
Including giving the annotated keypoint of each sub-image in each selected image pair as input to the image embedding function.
The method according to any one of claims 1 to 13.
請求項1から14のいずれか一項に記載の方法。 For the first type of image pair, the first sub-image and the second sub-image are extracted and selected from images captured during a particular event.
The method according to any one of claims 1 to 14.
請求項1から15のいずれか一項に記載の方法。 For the first type of image pair, the first sub-image and the second sub-image are extracted and selected from the images captured within the second time period.
The method according to any one of claims 1 to 15.
前記1つまたは複数のコンピューティングデバイスに結合された1つまたは複数のコンピュータ可読記憶媒体と
を備えたシステムであって、前記1つまたは複数のコンピュータ可読記憶媒体が、前記1つまたは複数のコンピューティングデバイスに以下の動作を実行させるための命令を記憶し、前記動作が、
画像トレーニングセット中の各画像内の特定タイプのオブジェクトの出現を検出することであって、前記画像トレーニングセット中の前記画像が、第1の時間期間内に捕捉された画像である、検出することと、
前記画像トレーニングセット中の前記画像から、検出されたオブジェクトの1回の出現をそれぞれが描いているサブ画像を抽出することと、
画像埋め込み関数を反復的にトレーニングすることであって、前記画像埋め込み関数が、入力画像に作用して、出力として前記入力画像の特徴表現を生じさせる、1組のパラメータ重みを含み、前記トレーニングの各反復が、
前記抽出されたサブ画像から、第1のタイプの複数の画像ペアおよび第2のタイプの複数の画像ペアを選択することであって、各画像ペアが、第1のサブ画像と第2のサブ画像との組合せであり、
前記第1のタイプのそれぞれの画像ペアが、前記特定タイプのオブジェクトの同一インスタンスを描いた第1のサブ画像および第2のサブ画像を含み、
前記第2のタイプのそれぞれの画像ペアが、前記特定タイプのオブジェクトの異なるインスタンスを描いた第1のサブ画像および第2のサブ画像を含み、かつ
前記第1のタイプのそれぞれの画像ペアについて、前記画像ペアの少なくとも前記第1のサブ画像および前記第2のサブ画像が、第2の時間期間内に捕捉された画像から抽出されたものであり、
前記第2の時間期間が、前記第1の時間期間よりも短く、かつ前記第1の時間期間のサブセットである、
選択すること、
選択された各画像ペアを入力として前記画像埋め込み関数に与えるとともに、対応する出力を生成すること、
前記画像埋め込み関数の性能指標を決定すること、
前記画像埋め込み関数の前記パラメータ重みを、前記性能指標に基づいて調整すること、および
前記トレーニングの別の反復を、停止事象が生じるまで実施すること
を含む、反復的にトレーニングすることと
を含む、
システム。 With one or more computing devices,
A system comprising one or more computer-readable storage media coupled to the one or more computing devices, wherein the one or more computer-readable storage media is the one or more computings. The instruction for causing the wing device to execute the following operation is stored, and the operation is performed.
Detecting the appearance of a particular type of object in each image in an image training set, wherein the image in the image training set is an image captured within a first time period. When,
Extracting sub-images, each depicting one occurrence of the detected object, from the images in the image training set.
By iteratively training an image embedding function, the image embedding function comprises a set of parameter weights that act on the input image to produce a feature representation of the input image as output. Each iteration
From the extracted sub-image, the method comprising: selecting a first type of the plurality of image pairs and a second type of the plurality of image pairs, each image pair, the first sub-image and second sub It is a combination with an image,
Each image pair of the first type comprises a first sub-image and a second sub-image depicting the same instance of the particular type of object.
Each image pair of the second type comprises a first sub-image and second sub image depicting different instances of objects of the particular type, and for each image pair of the first type, at least the first sub-image and the second sub-image of the image pair state, and are not extracted from the captured image in the second period of time,
The second time period is shorter than the first time period and is a subset of the first time period.
To choose,
Feeding each selected image pair as input to the image embedding function and generating the corresponding output,
Determining the performance index of the image embedding function,
The parameter weights of the image embedding function are adjusted based on the performance index, and another iteration of the training is performed iteratively, including performing until a stop event occurs.
system.
画像トレーニングセット中の各画像内の特定タイプのオブジェクトの出現を検出することであって、前記画像トレーニングセット中の前記画像が、第1の時間期間内に捕捉された画像である、検出することと、
前記画像トレーニングセット中の前記画像から、検出されたオブジェクトの1回の出現をそれぞれが描いているサブ画像を抽出することと、
画像埋め込み関数を反復的にトレーニングすることであって、前記画像埋め込み関数が、入力画像に作用して、出力として前記入力画像の特徴表現を生じさせる、1組のパラメータ重みを含み、前記トレーニングの各反復が、
前記抽出されたサブ画像から複数の第1のタイプの画像ペアおよび第2のタイプの複数の画像ペアを選択することであって、各画像ペアが、第1のサブ画像と第2のサブ画像との組合せであり、
前記第1のタイプのそれぞれの画像ペアが、前記特定タイプのオブジェクトの同一インスタンスを描いた第1のサブ画像および第2のサブ画像を含み、
前記第2のタイプのそれぞれの画像ペアが、前記特定タイプのオブジェクトの異なるインスタンスを描いた第1のサブ画像および第2のサブ画像を含み、かつ
前記第1のタイプのそれぞれの画像ペアについて、前記画像ペアの少なくとも前記第1のサブ画像および前記第2のサブ画像が、第2の時間期間内に捕捉された画像から抽出されたものであり、
前記第2の時間期間が、前記第1の時間期間よりも短く、かつ前記第1の時間期間のサブセットである、
選択すること、
選択された各画像ペアを入力として前記画像埋め込み関数に与えるとともに、対応する出力を生成すること、
前記画像埋め込み関数の性能指標を決定すること、
前記画像埋め込み関数の前記パラメータ重みを、前記性能指標に基づいて調整すること、および
前記トレーニングの別の反復を、停止事象が生じるまで実施することを含む、
反復的にトレーニングすることと
を含む、
コンピュータ可読記憶媒体。 A computer-readable storage medium that stores a computer program, wherein the computer program includes an instruction for causing a data processing device to perform the following operations.
Detecting the appearance of a particular type of object in each image in an image training set, wherein the image in the image training set is an image captured within a first time period. When,
Extracting sub-images, each depicting one occurrence of the detected object, from the images in the image training set.
By iteratively training an image embedding function, the image embedding function comprises a set of parameter weights that act on the input image to produce a feature representation of the input image as output. Each iteration
A plurality of first type image pairs and a plurality of second type image pairs are selected from the extracted sub-images, and each image pair is a first sub-image and a second sub-image. In combination with
Each image pair of the first type comprises a first sub-image and a second sub-image depicting the same instance of the particular type of object.
Each image pair of the second type comprises a first sub-image and second sub image depicting different instances of objects of the particular type, and for each image pair of the first type, at least the first sub-image and the second sub-image of the image pair state, and are not extracted from the captured image in the second period of time,
The second time period is shorter than the first time period and is a subset of the first time period.
To choose,
Feeding each selected image pair as input to the image embedding function and generating the corresponding output,
Determining the performance index of the image embedding function,
The parameter weights of the image embedding function are adjusted based on the performance index, and another iteration of the training is performed until a stop event occurs.
Including repetitive training,
Computer-readable storage medium.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/704,746 | 2017-09-14 | ||
US15/704,746 US10452954B2 (en) | 2017-09-14 | 2017-09-14 | Object detection and representation in images |
PCT/US2018/036928 WO2019055080A1 (en) | 2017-09-14 | 2018-06-11 | Object detection and representation in images |
Publications (2)
Publication Number | Publication Date |
---|---|
JP2020522773A JP2020522773A (en) | 2020-07-30 |
JP6905079B2 true JP6905079B2 (en) | 2021-07-21 |
Family
ID=62779132
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2019555456A Active JP6905079B2 (en) | 2017-09-14 | 2018-06-11 | Detection and representation of objects in images |
Country Status (6)
Country | Link |
---|---|
US (1) | US10452954B2 (en) |
EP (1) | EP3593277A1 (en) |
JP (1) | JP6905079B2 (en) |
KR (1) | KR102252439B1 (en) |
CN (1) | CN110506274B (en) |
WO (1) | WO2019055080A1 (en) |
Families Citing this family (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
KR102648770B1 (en) * | 2016-07-14 | 2024-03-15 | 매직 립, 인코포레이티드 | Deep neural network for iris identification |
US11797838B2 (en) | 2018-03-13 | 2023-10-24 | Pinterest, Inc. | Efficient convolutional network for recommender systems |
CN110084161B (en) * | 2019-04-17 | 2023-04-18 | 中山大学 | Method and system for rapidly detecting key points of human skeleton |
KR102232880B1 (en) * | 2020-06-12 | 2021-03-29 | 주식회사 크라우드웍스 | Method for evaluating inspector of crowdsourcing based projects for collecting image or video for artificial intelligence training data generation |
KR20210155179A (en) * | 2020-06-15 | 2021-12-22 | 삼성전자주식회사 | Electronic apparatus and method for controlling thereof |
JP7425445B2 (en) | 2020-07-17 | 2024-01-31 | 日本電信電話株式会社 | Feature learning device, feature extraction device, feature learning method and program |
Family Cites Families (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8712156B2 (en) * | 2010-01-10 | 2014-04-29 | Bronstein Bronstein Kimmel Technologies Ltd. | Comparison of visual information |
US8582807B2 (en) * | 2010-03-15 | 2013-11-12 | Nec Laboratories America, Inc. | Systems and methods for determining personal characteristics |
US9445713B2 (en) * | 2013-09-05 | 2016-09-20 | Cellscope, Inc. | Apparatuses and methods for mobile imaging and analysis |
US9268793B2 (en) * | 2014-03-12 | 2016-02-23 | Google Inc. | Adjustment of facial image search results |
US10181091B2 (en) * | 2014-06-20 | 2019-01-15 | Google Llc | Fine-grained image similarity |
US9836641B2 (en) * | 2014-12-17 | 2017-12-05 | Google Inc. | Generating numeric embeddings of images |
US9767381B2 (en) * | 2015-09-22 | 2017-09-19 | Xerox Corporation | Similarity-based detection of prominent objects using deep CNN pooling layers as features |
US9953217B2 (en) * | 2015-11-30 | 2018-04-24 | International Business Machines Corporation | System and method for pose-aware feature learning |
CN105512273A (en) * | 2015-12-03 | 2016-04-20 | 中山大学 | Image retrieval method based on variable-length depth hash learning |
US10242266B2 (en) * | 2016-03-02 | 2019-03-26 | Mitsubishi Electric Research Laboratories, Inc. | Method and system for detecting actions in videos |
EP3433816A1 (en) * | 2016-03-22 | 2019-01-30 | URU, Inc. | Apparatus, systems, and methods for integrating digital media content into other digital media content |
US10753881B2 (en) * | 2016-05-27 | 2020-08-25 | Purdue Research Foundation | Methods and systems for crack detection |
WO2017212459A1 (en) * | 2016-06-09 | 2017-12-14 | Sentient Technologies (Barbados) Limited | Content embedding using deep metric learning algorithms |
CN106203533B (en) * | 2016-07-26 | 2019-09-20 | 厦门大学 | Deep learning face verification method based on combined training |
CN106649886A (en) * | 2017-01-13 | 2017-05-10 | 深圳市唯特视科技有限公司 | Method for searching for images by utilizing depth monitoring hash of triple label |
-
2017
- 2017-09-14 US US15/704,746 patent/US10452954B2/en active Active
-
2018
- 2018-06-11 JP JP2019555456A patent/JP6905079B2/en active Active
- 2018-06-11 EP EP18735148.1A patent/EP3593277A1/en active Pending
- 2018-06-11 KR KR1020197029644A patent/KR102252439B1/en active IP Right Grant
- 2018-06-11 CN CN201880024390.2A patent/CN110506274B/en active Active
- 2018-06-11 WO PCT/US2018/036928 patent/WO2019055080A1/en unknown
Also Published As
Publication number | Publication date |
---|---|
KR20190126857A (en) | 2019-11-12 |
US10452954B2 (en) | 2019-10-22 |
US20190080204A1 (en) | 2019-03-14 |
JP2020522773A (en) | 2020-07-30 |
WO2019055080A1 (en) | 2019-03-21 |
KR102252439B1 (en) | 2021-05-14 |
CN110506274B (en) | 2023-11-24 |
EP3593277A1 (en) | 2020-01-15 |
CN110506274A (en) | 2019-11-26 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
JP6905079B2 (en) | Detection and representation of objects in images | |
US11455807B2 (en) | Training neural networks for vehicle re-identification | |
US11163987B2 (en) | Compact language-free facial expression embedding and novel triplet training scheme | |
US10402448B2 (en) | Image retrieval with deep local feature descriptors and attention-based keypoint descriptors | |
US9396415B2 (en) | Neural network image representation | |
CN106408610A (en) | Method and system for machine learning based assessment of fractional flow reserve | |
EP3674974A1 (en) | Apparatus and method with user verification | |
CN113204988A (en) | Small sample viewpoint estimation | |
CN115053238A (en) | Adaptive co-distillation model | |
US20220229943A1 (en) | Joint retrieval and mesh deformation | |
EP3588441B1 (en) | Imagification of multivariate data sequences | |
CN113627522A (en) | Image classification method, device and equipment based on relational network and storage medium | |
Natesan et al. | Prediction of Healthy and Unhealthy Food Items using Deep Learning | |
Sakaguchi | Intelligent Interior Design-Style Compatibility of 3D Furniture Models using Neural Networks | |
Marathe et al. | A CNN-inspired Reverse Search Engine for Content-based Image Retrieval | |
Kanai et al. | Improvement of Accuracy for Estimating Permeability Distribution Using Deep Learning | |
Saputra et al. | Ball and Goal Image Recognition on Humanoid Robot Darwin OP Using Faster Region-Based Convolutional Neural Networks (Faster R-CNN) Method | |
Sovetbek | Facial Emotion Image Classification based on Face orientation | |
Ragab et al. | Synergizing Remora Optimization Algorithm and Transfer Learning for Visual Places Recognition in Intelligent Transportation Systems and Consumer Electronics | |
Hire et al. | Efficient rotated and scaled digital image retrieval model using deep learning-based hybrid features extraction | |
Kumar et al. | Face and Iris‐Based Secured Authorization Model Using CNN | |
Sun | Deep learning on curved surfaces: manifold-formulation of convolutional neural networks and its operations | |
Nguyen | Human Body Recognition on 3D Mesh Using Local Surface Patch | |
Cudjoe | Face recognition using neural network |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
A621 | Written request for application examination |
Free format text: JAPANESE INTERMEDIATE CODE: A621Effective date: 20191206 |
|
A977 | Report on retrieval |
Free format text: JAPANESE INTERMEDIATE CODE: A971007Effective date: 20210127 |
|
A131 | Notification of reasons for refusal |
Free format text: JAPANESE INTERMEDIATE CODE: A131Effective date: 20210215 |
|
A521 | Request for written amendment filed |
Free format text: JAPANESE INTERMEDIATE CODE: A523Effective date: 20210511 |
|
TRDD | Decision of grant or rejection written | ||
A01 | Written decision to grant a patent or to grant a registration (utility model) |
Free format text: JAPANESE INTERMEDIATE CODE: A01Effective date: 20210531 |
|
A61 | First payment of annual fees (during grant procedure) |
Free format text: JAPANESE INTERMEDIATE CODE: A61Effective date: 20210624 |
|
R150 | Certificate of patent or registration of utility model |
Ref document number: 6905079Country of ref document: JPFree format text: JAPANESE INTERMEDIATE CODE: R150 |
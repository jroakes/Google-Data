EP2761572B1 - Music on video site - Google Patents
Music on video site Download PDFInfo
- Publication number
- EP2761572B1 EP2761572B1 EP12835586.4A EP12835586A EP2761572B1 EP 2761572 B1 EP2761572 B1 EP 2761572B1 EP 12835586 A EP12835586 A EP 12835586A EP 2761572 B1 EP2761572 B1 EP 2761572B1
- Authority
- EP
- European Patent Office
- Prior art keywords
- list
- client
- matching
- videos
- video
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 230000004044 response Effects 0.000 claims description 19
- 238000000034 method Methods 0.000 claims description 14
- 238000012795 verification Methods 0.000 claims description 9
- 238000004891 communication Methods 0.000 description 9
- 230000005540 biological transmission Effects 0.000 description 5
- 230000006870 function Effects 0.000 description 5
- 230000008569 process Effects 0.000 description 5
- 238000012545 processing Methods 0.000 description 4
- 239000000203 mixture Substances 0.000 description 3
- 238000012986 modification Methods 0.000 description 3
- 230000004048 modification Effects 0.000 description 3
- 238000010586 diagram Methods 0.000 description 2
- 230000001413 cellular effect Effects 0.000 description 1
- 230000008859 change Effects 0.000 description 1
- 230000001419 dependent effect Effects 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/60—Network structure or processes for video distribution between server and client or between remote clients; Control signalling between clients, server and network components; Transmission of management data between server and client, e.g. sending from server to client commands for recording incoming content stream; Communication details between server and client
- H04N21/65—Transmission of management data between client and server
- H04N21/658—Transmission by the client directed to the server
- H04N21/6581—Reference data, e.g. a movie identifier for ordering a movie or a product identifier in a home shopping application
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/70—Information retrieval; Database structures therefor; File system structures therefor of video data
- G06F16/78—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
- G06F16/783—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually using metadata automatically derived from the content
- G06F16/7834—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually using metadata automatically derived from the content using audio features
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L65/00—Network arrangements, protocols or services for supporting real-time applications in data packet communication
- H04L65/60—Network streaming of media packets
- H04L65/61—Network streaming of media packets for supporting one-way streaming services, e.g. Internet radio
- H04L65/612—Network streaming of media packets for supporting one-way streaming services, e.g. Internet radio for unicast
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/80—Generation or processing of content or additional data by content creator independently of the distribution process; Content per se
- H04N21/81—Monomedia components thereof
- H04N21/8106—Monomedia components thereof involving special audio data, e.g. different tracks for different languages
- H04N21/8113—Monomedia components thereof involving special audio data, e.g. different tracks for different languages comprising music, e.g. song in MP3 format
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N9/00—Details of colour television systems
- H04N9/79—Processing of colour television signals in connection with recording
- H04N9/80—Transformation of the television signal for recording, e.g. modulation, frequency changing; Inverse transformation for playback
- H04N9/82—Transformation of the television signal for recording, e.g. modulation, frequency changing; Inverse transformation for playback the individual colour picture signal components being recorded simultaneously only
- H04N9/8205—Transformation of the television signal for recording, e.g. modulation, frequency changing; Inverse transformation for playback the individual colour picture signal components being recorded simultaneously only involving the multiplexing of an additional signal and the colour video signal
Definitions
- the disclosure relates to accessing music on internet video sites.
- Many computing devices allow users to store songs in digitally encoded media files for playback by the computing device or for transmission to and playback on another device. Examples of these devices are personal computers, tablet computers, dedicated music player devices, and mobile telephones. Users create libraries of songs that are stored on a device, for example, by purchasing the songs from on-line music stores or by copying the music from compact discs or other media. These songs then are accessible on the device and can be played on demand by the user. As an extension of this capability, these devices allow users to create lists of songs that can be executed to play a series of songs in the order they appear in the list, or in a randomized order. This is a popular feature of music playing devices, as it allows users to create different lists of music for different purposes, such as a music playlist for a party or a music playlist for jogging. Users invest significant amounts of time in developing these playlists.
- Some mobile devices such as mobile phones, have the capability to play music, but have limited storage capability. Also, it is inconvenient to transfer music from one device such as a personal computer and store it on other devices.
- JP 2008/146057 A relates to a music/video reproduction device capable of displaying a background video image which is suitable for a music piece data.
- Background genre data are read out from music piece data which are registered in a music piece reservation area, and set to the lowest rank of the data in which a check position for checking key information stored in a key information storing buffer.
- key information stored in the position matches key information in the background genre data
- a background genre corresponding to the matched key information is obtained
- background video data are obtained from background video management data corresponding to the determined background genre, and reproduction is started by sending the selected background video data to a background video signal creation circuit.
- US 2005/091508 A1 relates to a method and apparatus for managing digital rights of a portable storage device.
- the method comprises a device performing authentication together with the portable storage device and sharing an encryption key with the portable storage device as a result of the authentication, requesting a rights object list from the portable storage device, receiving the rights object list from the portable storage device, and processing and displaying the rights object list.
- Disclosed herein are systems and methods for identifying and playing music on a video site.
- a method that is performed by one or more server computers includes receiving, from a client, a plurality of music titles for respective music pieces that a user has the right to listen to; determining, for one of the plurality of music titles, that a matching video stored on the server has the respective music piece for the music title as an audio component of the matching video; adding the matching video to a list of matching videos; and storing the list of matching videos on the one or more server computers so that it is accessible to a user associated with the client.
- a video server including one or more server computers includes an object store containing a plurality of videos each having an audio component; a search component that receives a plurality of music titles for respective music pieces that a user has the right to listen to and determines, for one of the plurality of music titles, that a matching video of the plurality of videos in the object store has the respective music piece for the music title as an audio component of the matching video; and a list manager that adds the matching video to a list of matching videos and stores the list of matching videos on the one or more server computers so that it is accessible to a user associated with the client.
- a video server including one or more server computers includes an object store containing a plurality of videos each having an audio component; a list store; a search component that receives, from a client, a plurality of music titles for respective music pieces that a user has the right to listen to and determines, for one of the plurality of music titles, that a matching video of the plurality of videos in the object store has the respective music piece for the music title as an audio component of the matching video; and a list manager that adds the matching video to a list of matching videos, associates the list of matching videos with a user account specified by the client, and stores the list of matching videos in the list store so that it is accessible to a user associated with the user account.
- FIG. 1 shows a client 20, a server 50, and one or more other devices 100 that are all connected for transmission of data, signals, and other electrical communications with one another by a network 10, such as the internet.
- Client 20 and one or more other devices 100 are related to each other in that they are controlled by a common user and / or are used to access a single user account that is maintained by server 50.
- client 20 can be a personal computer that is utilized by the user, and other devices 100 could include an internet connected mobile telephone that is utilized by the user.
- server 50 In addition to servicing the user that is associated with client 20 and other devices 100, server 50 also services a large number of other, distributed users, each of which is associated with an additional client that is analogous to client 20 and optionally with one or more other devices that are analogous to other devices 100.
- Client 20 includes a client side object store 30.
- Client side object store 30 is a computer-readable media that is operable to store data in a form that can be accessed and used by client 20.
- Client side object store 30 can be a conventional storage device, such as a hard disk drive, an optical disk, a floppy disk; a memory card, or any other suitable type of storage now known or later developed.
- Client side object store 30 contains a plurality of client side objects 32 and object information 34 that relates to client side objects 32.
- Object information 34 can be encoded within each of client side objects 32, such that each client side object 32 contains object information 34 corresponding to the music piece encoded in it, or object information 34 could be encoded separately from client side objects 32.
- Client side objects 32 are music pieces that are encoded in a computer interpretable format.
- music piece refers to an audio recording of definite length, analogous to an audio track.
- a music piece can correspond to a single musical composition.
- music piece can encompass works other than musical compositions, such as an audio book or a portion of an audio book.
- the music pieces that are encoded as client side objects 32 can be music pieces that the user has the right to listen to, for example, on a music service, by possession of a license to listen to the music pieces, or by virtue of the public domain status of the music pieces.
- the user's right to listen to the respective music pieces can derive from content licenses that are associated with client 20.
- the content licenses can be computer readable documents that are stored in client side object store 30 in association with client side objects 32.
- MPEG-1 or MPEG-2 Audio Layer III format which is commonly referred to as MP3 format.
- Other audio encoding formats public or proprietary, now known or later developed, can be utilized as a basis for encoding the music titles as client side objects 32.
- Object information 34 is metadata that describes one or more characteristics of client side objects 32.
- Object information 34 can be stored in a metadata container that is a portion of each client side object 32.
- One example of storage of object information 34 within each client side object 32 is an ID3 format tag, which is commonly appended to MP3 format media files.
- object information 34 can be in the form of one or more files that are stored separately from client side objects 32 in client side object store 30.
- One example of separate storage of object information 34 separate from client side objects 32 is an index file that contains object information 34 for some or all of client side objects 32.
- An XML format file can be used for this purpose.
- an index file in which object information 34 can be stored is a playlist file that identifies a plurality of client side objects 32, such as by file name or music title, and also specifies a play order for client side objects 32.
- a playlist file format that can be used to encode object information 34 is an M3U format playlist file.
- Object information 34 includes music titles for one or more of the music pieces that are encoded as client side objects 32.
- object information 34 can optionally include additional information such as the artist, album, and track number for the music pieces that are encoded as client side objects 32.
- music title refers to a title that is used to identify a respective music piece, such as the title of an individual track of an album.
- a music title need not, however, be unique to that music piece.
- a music title that identifies one of client side objects 32 could also identify other music pieces.
- These other music pieces could be alternative versions of musical composition or other work on which the music piece is based, or could be otherwise unrelated works that coincidentally have the same music title.
- Client 20 also includes a connector application 40 that is operable to send object information 34 to the server 50.
- Connector application 40 can be an executable software program that is resident on client 20.
- the connector application can compile object information 34 from various sources on client 20, such as from client side objects 32 themselves or from object information 34 in the form of an index file, and upload object information 34 to the server, either in response to a user request, or as a scheduled task that executes periodically.
- connector application 40 can be a web application that is provided to client 20 by server 50, using web browser software that is resident on and executed by client 20.
- the web application either scans client side object store 30 to compile object information 42, or alternatively, is pointed to a specific file, such as an index or a playlist file that contains object information 34, by the user.
- Server 50 includes a search component 60, a server side object store 70, a list manager 80, and a list store 90.
- Server side object store 70 and list store 90 are storage devices or portions of storage devices.
- a single physical storage device can include both server side object store 70 and list store 90. Any suitable storage device can be utilized, as described in connection with client side object store 30.
- Search component 60 and list manager 80 can be implemented in the form of executable software programs or functions that are resident on server 50 and are operable to perform the functionality described herein when executed by server 50.
- Search component 60 and list manager 80 are in communication with one another, in that search component 60 receives input from list manager 80 and provides output to list manager 80 in response.
- List manager 80 is operable to receive object information 34 that is transmitted to server 50 from the connector application of client 20. Based on received object information 34, list manager 80 formulates search queries and transmits the search queries to search component 60.
- the search queries formulated and transmitted by list manager 80 can be in any suitable form, structured or unstructured. As an example, the queries could be unstructured lists of one or more keywords. As another example, the queries could be structured queries including a keyword to be searched for each of one or more identified search fields, such as title, album, artist name, etc.
- Search component 60 receives search queries from list manager 80.
- Search component 60 utilizes the search queries that it receives from list manager 80 to perform search queries based on object information 34 that is received from client 20 to determine whether one or more server side objects 72 that are disposed within server side object store 70 correspond to the parameters specified by object information 34.
- the search can be performed by the search component by comparing the parameters specified by the search queries to server side object information 74, which is metadata that describes server side objects 72.
- Server side objects 72 that are stored in server side object store 70 of server 50 are videos that include an audio component.
- search component 60 determines whether one of server side objects 72 within server side object store 70 is a matching video with respect to the music pieces stored as client side objects 32, search component 60 can do so on the basis that the music title specified by object information 34 corresponds to the music piece that is encoded as the audio component of the video that is stored as server side object 72 within server side object store 70.
- server side object information 74 can be stored within server side object store 70, either within server side objects 72 themselves or separate from server side objects 72.
- search component 60 After search component 60 executes the search queries, it provides search results to list manager 80 in the form of an identification of one or more of server side objects 72 that are present within server side object store 70. If the search results that are received from search component 60 indicate that one or more of server side objects 72 match client side objects 32 as described by object information 34, list manager 80 adds client side objects 32 that are identified as matching to a list 92 of matching objects. List manager 80 then stores the list of matching objects 72, 32 in list store 90.
- List 92 can be associated with a user account that is specified by client 20.
- list store 90 can be a portion of a profile that is associated with the user account.
- list 92 can be accessed by the user when using other devices 100. This allows the user to access list 92 from a device other than client 20 on which client side objects 32 are stored.
- Server 50 is operable to transmit server side objects 72 in response to a playback request.
- Transmission of server side objects 72 can be in the form of a streaming video transmission within a web page or web application.
- server 50 receives a playback request that is associated with the user account and that designates list 92 of matching videos, server 50 transmits one or more of server side objects 72 that are specified by list 92 in response to the playback request.
- the playback request can be made by one of other devices 100 that is associated with the user account, and server side objects 72 are transmitted to other device 100 in response to the playback request.
- list manager 80 can be configured to transmit a verification request to client 20 in order to verify that server side objects 72 identified as matching by search component 60 actually correspond to client side objects 32.
- the verification request is transmitted to client 20 by list manager 80 and identifies at least one of the matching objects of list 92.
- the verification request can cause a prompt to be displayed by client 20, which requests that the user provide input in the form of either a positive response, which indicates that server side object 72 is a match to client side object 32, or a negative response, which indicates that server side object 72 is not a match to client side object 32.
- the response is transmitted to list manager 80 of server 50 by client 20. If a negative response is received, list manager 80 removes the reference to server side object 72 from list 92.
- Server 50 can be configured to allow list 92 to be modified by client 20.
- client 20 can transmit to server 50 a request to modify list 92 of matching objects.
- This request could be, for example, in the form of selection, by the user of client 20, of a modification command that is present on a screen that is presented to a user of client 20, such as in the form of a web page.
- the request to modify list 92 includes an identification of one or more of server side objects 72 that is to be added or deleted from list 92.
- list manager 80 modifies list 92. Updated list 92 is then transmitted to client 20.
- step S101 object information 34 is compiled by connector application 40.
- Client 20 then transmits object information 34 to server 50 over network 10 in step S102, and list manager 80 of server 50 receives object information 34.
- transmission can be initiated by list manager 80.
- List manager 80 formulates a query based on object information 34 received from client 20 and transmits the query to search component 60. Search component 60 then executes the queries regarding client side objects 32 in step S103.
- search component 60 identifies one or more server side objects 72 and reports the results to list manager 80, which adds an identification of the matching objects of server side objects 72 to list 92 in step S105.
- list manager 80 determines which matching server side object 72 to add to list 92 (for example by random choice or by choosing an object that matches best).
- list manager 80 determines which matching server side object 72 to use based at least in part on the identity of the user that uploaded server side object 72 to server 50.
- list manager 80 determines which matching server side object 72 to use based on the number of times that server side object 72 has been viewed.
- the image resolution or other measure of quality of server side object 72 is used by list manager 80 as a basis for determining which server side object 72 to use.
- the preferences of other users such as indications by other users that they like a particular object (e.g., ratings), are used by list manager 80 as a basis for determining which server side object 72 to use.
- list manager 80 accepts input from a user to choose which of multiple matching objects 72 to use.
- step S106 it is determined whether object information 34 that was received by server 50 identifies additional client side objects 32 for which search queries must be performed by search component 60. If there are additional client side objects 32 for which searches must be performed, step S106 evaluates as "yes,” and the process returns to step S103. If there are no more client side objects 32 that are identified by object information 34 for which additional searches must be performed, step S106 evaluates as "no,” and the process proceeds to step S107. In step S107, completed list 92 is stored in list store 90.
- completed list 92 is available for the user associated with client 20.
- the user can access the video service to access a playlist of videos that have the same musical content as is stored on his client-side device. By playing the video playlist, the user can access his playlist when he is away from his client device.
- Some implementations also allow the user to manage his video playlist to change the order of the videos and to add or delete videos from the playlist.
- Some implementations also allow other users to access the user's playlist, either publicly or with permission of the user, or both.
- a user could use an implementation to create a playlist of videos that have the soundtrack of the songs stored on his personal music device. He could then play that playlist at a location where he did not have access to his personal music device.
- client side objects 32 and videos having an audio component as server side objects 72 could be movies, ebooks, contacts, and other types of media or objects.
- Client 20, server 50, other devices 100, and other elements of the systems discussed in this disclosure can be implemented in the form of one or more machines or devices capable of performing the described functions. These devices could be or include a processor, a computer, specialized hardware or any other device.
- the described functionality can be embodied in software instructions that are executable by the device or devices.
- the term "computer” means any device of any kind that is capable of processing a signal or other information. Examples of computers include, without limitation, an application-specific integrated circuit (ASIC) a programmable logic array (PLA), a microcontroller, a digital logic controller, a digital signal processor (DSP), a desktop computer, a laptop computer, a tablet computer, and a mobile device such as a mobile telephone.
- a computer does not necessarily include memory or a processor.
- a computer may include software in the form of programmable code, micro code, and or firmware or other hardware embedded logic.
- a computer may include multiple processors that operate in parallel. The processing performed by a computer may be distributed among multiple separate devices, and the term computer encompasses all such devices when configured to perform in accordance with the disclosed embodiments.
- Computer 1000 can be any suitable conventional computer.
- computer 1000 includes a processor such as a central processing unit (CPU) 1010 and memory such as RAM 1020 and ROM 1030.
- a storage device 1040 can be provided in the form of any suitable computer readable medium, such as a hard disk drive.
- One or more input devices 1050 such as a keyboard and mouse, a touch screen interface, etc., allow user input to be provided to CPU 1010.
- a display 1060 such as a liquid crystal display (LCD), a cathode-ray tube (CRT) or a light-emitting diode (LED) display, allows output to be presented to the user.
- a communications interface 1070 is any manner of wired or wireless means of communication that is operable to send and receive data or other signals using network 10.
- CPU 1010, RAM 1020, ROM 1030, storage device 1040, input devices 1050, display 1060 and communications interface 1070 may be all connected to one another by a bus 1080.
- Client 20, server 50, other devices 100, and other elements of the systems discussed in this disclosure can be implemented in the form of a single system or in the form of separate systems. Moreover, each of client 20, server 50, other devices 100, and other elements of the systems discussed in this disclosure can be implemented in the form of multiple computers, processors, or other systems working in concert. As an example, the functions of server 50 can be distributed among a plurality of computers, such as computer 1000, each of which is capable of performing some or all of the functions of server 50.
- components of the systems described herein can be connected for communications with one another by networks such as network 10.
- the communications functions described herein can be accomplished using any kind of network or communications means capable of transmitting data or signals. Suitable examples include the internet, which is a packet-switched network, a local area network (LAN), wide area network (WAN), virtual private network (VPN), cellular telephone network, or any other means of transferring data.
- LAN local area network
- WAN wide area network
- VPN virtual private network
- cellular telephone network or any other means of transferring data.
- a single network or multiple networks that are connected to one another can be used. It is specifically contemplated that multiple networks of varying types can be connected together and utilized to facilitate the communications contemplated by the systems and elements described in this disclosure.
Description
- The disclosure relates to accessing music on internet video sites.
- Many computing devices allow users to store songs in digitally encoded media files for playback by the computing device or for transmission to and playback on another device. Examples of these devices are personal computers, tablet computers, dedicated music player devices, and mobile telephones. Users create libraries of songs that are stored on a device, for example, by purchasing the songs from on-line music stores or by copying the music from compact discs or other media. These songs then are accessible on the device and can be played on demand by the user. As an extension of this capability, these devices allow users to create lists of songs that can be executed to play a series of songs in the order they appear in the list, or in a randomized order. This is a popular feature of music playing devices, as it allows users to create different lists of music for different purposes, such as a music playlist for a party or a music playlist for jogging. Users invest significant amounts of time in developing these playlists.
- Some mobile devices, such as mobile phones, have the capability to play music, but have limited storage capability. Also, it is inconvenient to transfer music from one device such as a personal computer and store it on other devices.
-
JP 2008/146057 A -
US 2005/091508 A1 relates to a method and apparatus for managing digital rights of a portable storage device. The method comprises a device performing authentication together with the portable storage device and sharing an encryption key with the portable storage device as a result of the authentication, requesting a rights object list from the portable storage device, receiving the rights object list from the portable storage device, and processing and displaying the rights object list. - Disclosed herein are systems and methods for identifying and playing music on a video site.
- The present invention is defined in the independent claims. The dependent claims define embodiments of the present invention.
- A method that is performed by one or more server computers, includes receiving, from a client, a plurality of music titles for respective music pieces that a user has the right to listen to; determining, for one of the plurality of music titles, that a matching video stored on the server has the respective music piece for the music title as an audio component of the matching video; adding the matching video to a list of matching videos; and storing the list of matching videos on the one or more server computers so that it is accessible to a user associated with the client.
- A video server including one or more server computers, includes an object store containing a plurality of videos each having an audio component; a search component that receives a plurality of music titles for respective music pieces that a user has the right to listen to and determines, for one of the plurality of music titles, that a matching video of the plurality of videos in the object store has the respective music piece for the music title as an audio component of the matching video; and a list manager that adds the matching video to a list of matching videos and stores the list of matching videos on the one or more server computers so that it is accessible to a user associated with the client.
- A video server including one or more server computers, includes an object store containing a plurality of videos each having an audio component; a list store; a search component that receives, from a client, a plurality of music titles for respective music pieces that a user has the right to listen to and determines, for one of the plurality of music titles, that a matching video of the plurality of videos in the object store has the respective music piece for the music title as an audio component of the matching video; and a list manager that adds the matching video to a list of matching videos, associates the list of matching videos with a user account specified by the client, and stores the list of matching videos in the list store so that it is accessible to a user associated with the user account.
- The description herein makes reference to the accompanying drawings wherein like reference numerals refer to like parts throughout the several views, and wherein:
-
FIG. 1 is block diagram showing an exemplary environment for operation of a system for indentifying and playing music on a video site; -
FIG. 2 is a flow chart showing an exemplary process for indentifying and playing music on a video site; and -
FIG. 3 is a block diagram showing an exemplary computer system in which embodiments of this disclosure may be implemented. - Publicly available, internet connected video sites have vast libraries of videos with music content. These sites are legally accessible by the public through the internet. Users of the internet are able to access the libraries on these sites and listen to the music by having the music streamed to an internet connected device. However, there is no facility for identifying videos corresponding to user libraries and playlists to allow more convenient access to the music available on these publicly available, internet connected video sites.
-
FIG. 1 shows aclient 20, aserver 50, and one or moreother devices 100 that are all connected for transmission of data, signals, and other electrical communications with one another by anetwork 10, such as the internet.Client 20 and one or moreother devices 100 are related to each other in that they are controlled by a common user and / or are used to access a single user account that is maintained byserver 50. For example,client 20 can be a personal computer that is utilized by the user, andother devices 100 could include an internet connected mobile telephone that is utilized by the user. In addition to servicing the user that is associated withclient 20 andother devices 100,server 50 also services a large number of other, distributed users, each of which is associated with an additional client that is analogous toclient 20 and optionally with one or more other devices that are analogous toother devices 100. -
Client 20 includes a clientside object store 30. Clientside object store 30 is a computer-readable media that is operable to store data in a form that can be accessed and used byclient 20. Clientside object store 30 can be a conventional storage device, such as a hard disk drive, an optical disk, a floppy disk; a memory card, or any other suitable type of storage now known or later developed. - Client
side object store 30 contains a plurality ofclient side objects 32 andobject information 34 that relates toclient side objects 32.Object information 34 can be encoded within each ofclient side objects 32, such that eachclient side object 32 containsobject information 34 corresponding to the music piece encoded in it, orobject information 34 could be encoded separately fromclient side objects 32. -
Client side objects 32 are music pieces that are encoded in a computer interpretable format. As used herein, "music piece" refers to an audio recording of definite length, analogous to an audio track. A music piece can correspond to a single musical composition. However, the term "music piece" can encompass works other than musical compositions, such as an audio book or a portion of an audio book. - The music pieces that are encoded as
client side objects 32 can be music pieces that the user has the right to listen to, for example, on a music service, by possession of a license to listen to the music pieces, or by virtue of the public domain status of the music pieces. The user's right to listen to the respective music pieces can derive from content licenses that are associated withclient 20. The content licenses can be computer readable documents that are stored in clientside object store 30 in association withclient side objects 32. - One well-known format by which music pieces can be encoded in a computer interpretable format is the MPEG-1 or MPEG-2 Audio Layer III format, which is commonly referred to as MP3 format. Other audio encoding formats, public or proprietary, now known or later developed, can be utilized as a basis for encoding the music titles as
client side objects 32. -
Object information 34 is metadata that describes one or more characteristics ofclient side objects 32.Object information 34 can be stored in a metadata container that is a portion of eachclient side object 32. One example of storage ofobject information 34 within eachclient side object 32 is an ID3 format tag, which is commonly appended to MP3 format media files. As an alternative,object information 34 can be in the form of one or more files that are stored separately fromclient side objects 32 in clientside object store 30. One example of separate storage ofobject information 34 separate fromclient side objects 32 is an index file that containsobject information 34 for some or all ofclient side objects 32. An XML format file can be used for this purpose. Another example of an index file in whichobject information 34 can be stored is a playlist file that identifies a plurality ofclient side objects 32, such as by file name or music title, and also specifies a play order forclient side objects 32. One example of a playlist file format that can be used to encodeobject information 34 is an M3U format playlist file. -
Object information 34 includes music titles for one or more of the music pieces that are encoded asclient side objects 32. In addition to the music title,object information 34 can optionally include additional information such as the artist, album, and track number for the music pieces that are encoded asclient side objects 32. - As used herein, the term "music title" refers to a title that is used to identify a respective music piece, such as the title of an individual track of an album. A music title need not, however, be unique to that music piece. On the contrary, a music title that identifies one of
client side objects 32 could also identify other music pieces. These other music pieces could be alternative versions of musical composition or other work on which the music piece is based, or could be otherwise unrelated works that coincidentally have the same music title. -
Client 20 also includes aconnector application 40 that is operable to sendobject information 34 to theserver 50.Connector application 40 can be an executable software program that is resident onclient 20. For example, the connector application can compileobject information 34 from various sources onclient 20, such as from client side objects 32 themselves or fromobject information 34 in the form of an index file, and uploadobject information 34 to the server, either in response to a user request, or as a scheduled task that executes periodically. As an alternative,connector application 40 can be a web application that is provided toclient 20 byserver 50, using web browser software that is resident on and executed byclient 20. The web application either scans clientside object store 30 to compile object information 42, or alternatively, is pointed to a specific file, such as an index or a playlist file that containsobject information 34, by the user. -
Server 50 includes asearch component 60, a serverside object store 70, alist manager 80, and alist store 90. Serverside object store 70 andlist store 90 are storage devices or portions of storage devices. A single physical storage device can include both serverside object store 70 andlist store 90. Any suitable storage device can be utilized, as described in connection with clientside object store 30. -
Search component 60 andlist manager 80 can be implemented in the form of executable software programs or functions that are resident onserver 50 and are operable to perform the functionality described herein when executed byserver 50.Search component 60 andlist manager 80 are in communication with one another, in thatsearch component 60 receives input fromlist manager 80 and provides output to listmanager 80 in response. -
List manager 80 is operable to receiveobject information 34 that is transmitted toserver 50 from the connector application ofclient 20. Based on receivedobject information 34,list manager 80 formulates search queries and transmits the search queries to searchcomponent 60. The search queries formulated and transmitted bylist manager 80 can be in any suitable form, structured or unstructured. As an example, the queries could be unstructured lists of one or more keywords. As another example, the queries could be structured queries including a keyword to be searched for each of one or more identified search fields, such as title, album, artist name, etc. -
Search component 60 receives search queries fromlist manager 80.Search component 60 utilizes the search queries that it receives fromlist manager 80 to perform search queries based onobject information 34 that is received fromclient 20 to determine whether one or more server side objects 72 that are disposed within serverside object store 70 correspond to the parameters specified byobject information 34. The search can be performed by the search component by comparing the parameters specified by the search queries to server side objectinformation 74, which is metadata that describes server side objects 72. - Server side objects 72 that are stored in server
side object store 70 ofserver 50 are videos that include an audio component. Whensearch component 60 determines whether one of server side objects 72 within serverside object store 70 is a matching video with respect to the music pieces stored as client side objects 32,search component 60 can do so on the basis that the music title specified byobject information 34 corresponds to the music piece that is encoded as the audio component of the video that is stored asserver side object 72 within serverside object store 70. In order to allow identification ofserver side object 72 bysearch component 60, server side objectinformation 74 can be stored within serverside object store 70, either within server side objects 72 themselves or separate from server side objects 72. - After
search component 60 executes the search queries, it provides search results tolist manager 80 in the form of an identification of one or more of server side objects 72 that are present within serverside object store 70. If the search results that are received fromsearch component 60 indicate that one or more of server side objects 72 match client side objects 32 as described byobject information 34,list manager 80 adds client side objects 32 that are identified as matching to alist 92 of matching objects.List manager 80 then stores the list of matchingobjects list store 90. -
List 92 can be associated with a user account that is specified byclient 20. For example,list store 90 can be a portion of a profile that is associated with the user account. By associatinglist 92 with a user account,list 92 can be accessed by the user when usingother devices 100. This allows the user to accesslist 92 from a device other thanclient 20 on which client side objects 32 are stored. -
Server 50 is operable to transmit server side objects 72 in response to a playback request. Transmission of server side objects 72 can be in the form of a streaming video transmission within a web page or web application. Whenserver 50 receives a playback request that is associated with the user account and that designateslist 92 of matching videos,server 50 transmits one or more of server side objects 72 that are specified bylist 92 in response to the playback request. For example, the playback request can be made by one ofother devices 100 that is associated with the user account, and server side objects 72 are transmitted toother device 100 in response to the playback request. - Additional related functionality can optionally be provided by
server 50. As an example,list manager 80 can be configured to transmit a verification request toclient 20 in order to verify that server side objects 72 identified as matching bysearch component 60 actually correspond to client side objects 32. The verification request is transmitted toclient 20 bylist manager 80 and identifies at least one of the matching objects oflist 92. The verification request can cause a prompt to be displayed byclient 20, which requests that the user provide input in the form of either a positive response, which indicates thatserver side object 72 is a match toclient side object 32, or a negative response, which indicates thatserver side object 72 is not a match toclient side object 32. The response is transmitted tolist manager 80 ofserver 50 byclient 20. If a negative response is received,list manager 80 removes the reference to server side object 72 fromlist 92. -
Server 50 can be configured to allowlist 92 to be modified byclient 20. For example,client 20 can transmit to server 50 a request to modifylist 92 of matching objects. This request could be, for example, in the form of selection, by the user ofclient 20, of a modification command that is present on a screen that is presented to a user ofclient 20, such as in the form of a web page. The request to modifylist 92 includes an identification of one or more of server side objects 72 that is to be added or deleted fromlist 92. In response to the request,list manager 80 modifieslist 92. Updatedlist 92 is then transmitted toclient 20. - An example of a process for playing music on a video site will be explained with reference to
FIG. 2 . - In step S101, object
information 34 is compiled byconnector application 40.Client 20 then transmitsobject information 34 toserver 50 overnetwork 10 in step S102, andlist manager 80 ofserver 50 receivesobject information 34. In other embodiments, transmission can be initiated bylist manager 80.List manager 80 formulates a query based onobject information 34 received fromclient 20 and transmits the query to searchcomponent 60.Search component 60 then executes the queries regarding client side objects 32 in step S103. - In step S104,
search component 60 identifies one or more server side objects 72 and reports the results to listmanager 80, which adds an identification of the matching objects of server side objects 72 to list 92 in step S105. In one embodiment, where multiple server side objects 72 are identified in response to a single query,list manager 80 determines which matching server side object 72 to add to list 92 (for example by random choice or by choosing an object that matches best). As one example,list manager 80 determines which matching server side object 72 to use based at least in part on the identity of the user that uploaded server side object 72 toserver 50. Certain users could be given status as an "official" or "preferred" uploader, based on quality of the content provided, a certification process, a licensing arrangement, or other circumstance, and this recognition would be given weight bylist manager 80 when selecting between multiple server side objects 72. As another example,list manager 80 determines which matching server side object 72 to use based on the number of times thatserver side object 72 has been viewed. In a further example, the image resolution or other measure of quality ofserver side object 72 is used bylist manager 80 as a basis for determining which server side object 72 to use. In another example, the preferences of other users, such as indications by other users that they like a particular object (e.g., ratings), are used bylist manager 80 as a basis for determining which server side object 72 to use. In other embodiments,list manager 80 accepts input from a user to choose which of multiple matching objects 72 to use. - In step S106, it is determined whether
object information 34 that was received byserver 50 identifies additional client side objects 32 for which search queries must be performed bysearch component 60. If there are additional client side objects 32 for which searches must be performed, step S106 evaluates as "yes," and the process returns to step S103. If there are no more client side objects 32 that are identified byobject information 34 for which additional searches must be performed, step S106 evaluates as "no," and the process proceeds to step S107. In step S107, completedlist 92 is stored inlist store 90. - Thus, completed
list 92 is available for the user associated withclient 20. The user can access the video service to access a playlist of videos that have the same musical content as is stored on his client-side device. By playing the video playlist, the user can access his playlist when he is away from his client device. Some implementations also allow the user to manage his video playlist to change the order of the videos and to add or delete videos from the playlist. Some implementations also allow other users to access the user's playlist, either publicly or with permission of the user, or both. - For example, a user could use an implementation to create a playlist of videos that have the soundtrack of the songs stored on his personal music device. He could then play that playlist at a location where he did not have access to his personal music device.
- Although the disclosure herein is made with reference to music pieces as client side objects 32 and videos having an audio component as server side objects 72, the invention can be applied in other contexts. For example, in alternative embodiments, client side objects 32 and server side objects 72 could be movies, ebooks, contacts, and other types of media or objects.
-
Client 20,server 50,other devices 100, and other elements of the systems discussed in this disclosure can be implemented in the form of one or more machines or devices capable of performing the described functions. These devices could be or include a processor, a computer, specialized hardware or any other device. The described functionality can be embodied in software instructions that are executable by the device or devices. - As used herein, the term "computer" means any device of any kind that is capable of processing a signal or other information. Examples of computers include, without limitation, an application-specific integrated circuit (ASIC) a programmable logic array (PLA), a microcontroller, a digital logic controller, a digital signal processor (DSP), a desktop computer, a laptop computer, a tablet computer, and a mobile device such as a mobile telephone. A computer does not necessarily include memory or a processor. A computer may include software in the form of programmable code, micro code, and or firmware or other hardware embedded logic. A computer may include multiple processors that operate in parallel. The processing performed by a computer may be distributed among multiple separate devices, and the term computer encompasses all such devices when configured to perform in accordance with the disclosed embodiments.
- An example of a device that can be used as a basis for implementing the systems and functionality described herein is a
computer 1000, as shown inFIG. 3 .Computer 1000 can be any suitable conventional computer. As an example,computer 1000 includes a processor such as a central processing unit (CPU) 1010 and memory such asRAM 1020 andROM 1030. Astorage device 1040 can be provided in the form of any suitable computer readable medium, such as a hard disk drive. One ormore input devices 1050, such as a keyboard and mouse, a touch screen interface, etc., allow user input to be provided toCPU 1010. Adisplay 1060, such as a liquid crystal display (LCD), a cathode-ray tube (CRT) or a light-emitting diode (LED) display, allows output to be presented to the user. Acommunications interface 1070 is any manner of wired or wireless means of communication that is operable to send and receive data or othersignals using network 10.CPU 1010,RAM 1020,ROM 1030,storage device 1040,input devices 1050,display 1060 andcommunications interface 1070 may be all connected to one another by abus 1080. -
Client 20,server 50,other devices 100, and other elements of the systems discussed in this disclosure can be implemented in the form of a single system or in the form of separate systems. Moreover, each ofclient 20,server 50,other devices 100, and other elements of the systems discussed in this disclosure can be implemented in the form of multiple computers, processors, or other systems working in concert. As an example, the functions ofserver 50 can be distributed among a plurality of computers, such ascomputer 1000, each of which is capable of performing some or all of the functions ofserver 50. - As previously noted, components of the systems described herein can be connected for communications with one another by networks such as
network 10. The communications functions described herein can be accomplished using any kind of network or communications means capable of transmitting data or signals. Suitable examples include the internet, which is a packet-switched network, a local area network (LAN), wide area network (WAN), virtual private network (VPN), cellular telephone network, or any other means of transferring data. A single network or multiple networks that are connected to one another can be used. It is specifically contemplated that multiple networks of varying types can be connected together and utilized to facilitate the communications contemplated by the systems and elements described in this disclosure. - While this disclosure includes certain embodiments, it is to be understood that the disclosure is not to be limited to the disclosed embodiments but, on the contrary, is intended to cover various modifications and equivalent arrangements included within the scope of the appended claims, which scope is to be accorded the broadest interpretation so as to encompass all such modifications and equivalent structures as is permitted under the law.
Claims (10)
- A method performed by one or more server computers, comprising:receiving, from a client, a plurality of music titles for respective music pieces that a user has the right to listen to;determining, for a music title of the plurality of music titles, that a matching video stored on the one or more server computers has the respective music piece for the music title as an audio component of the matching video (S104);adding the matching video to a list of matching videos (S105);storing the list of matching videos (S107) on the one or more server computers so that it is accessible to a user associated with the client;associating the list of matching videos with a user account specified by the client;receiving a playback request that is associated with the user account; andtransmitting one or more matching videos specified by the list of matching videos in response to the playback request.
- The method of claim 1, wherein the respective music pieces that the user has the right to listen to correspond to at least one of media files or content licenses that are stored on the client:
- The method of claim 1 or claim 2, wherein the playback request originates from a device that is separate from the client and the one or more matching videos are transmitted to the device.
- The method of claim 1 or claim 2, further comprising:receiving, from the client, a request to modify the list of matching videos;modifying the matching videos to produce an updated list of matching videos in response to the request to modify the list of matching videos; andstoring the updated list of matching videos on the one or more server computers so that it is accessible to a user associated with the client.
- The method of claim 1 or claim 2, further comprising:sending, to the client, a verification request that identifies at least one video of the list of matching videos; andremoving the at least one video identified by the verification request from the list of matching videos if a negative response is received in response to the verification request.
- A video server (50) including one or more server computers, comprising:an object store (70) containing a plurality of videos, each having an audio component;a search component (60) that receives, from a client. (20), a plurality of music titles for respective music pieces that a user has the right to listen to and determines, for a music title of the plurality of music titles, that a matching video of the plurality of videos in the object store (70) has the respective music piece for the music title as an audio component of the matching video;a list manager (80) that adds the matching video to a list (92) of matching videos and stores the list (92) of matching videos on the one or more server computers so that it is accessible to a user associated with the client (20);a list store (90), wherein the list manager (80) associates the list (92) of matching videos with a user account specified by the client (20), and stores the list (92) of matching videos in the list store (90); andwherein the list manager (80) is operable to receive a playback request that is associated with the user account, retrieve the list (92) of matching videos from the list store (90) based on the user account, and transmit the one or more matching videos specified by the list (92) of matching videos in response to the playback request.
- The video server (50) of claim 6, wherein the respective music pieces correspond to at least one of media files or content licenses that are stored on the client (20).
- The video server (50) of claim 6 or claim 7, wherein the playback request originates from a device (100) that is separate from the client (20), and the one or more matching videos are transmitted to the device (100).
- The video server (50) of claim 6 or claim 7, wherein the list manager (80) modifies the list (92) of matching videos to produce an updated list of matching videos in response to a request, from the client (20), to modify the list (92) of matching videos, and stores the updated list of matching videos on the one or more server computers so that it is accessible to a user associated with the client (20).
- The video server (50) of claim 6 or claim 7, wherein the list manager (80) sends, to the client (20), a verification request that identifies at least one video of the list (92) of matching videos, and removes the at least one video identified by the verification request from the list (92) of matching videos if a negative response is received in response to the verification request.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
EP16164945.4A EP3059706B1 (en) | 2011-09-30 | 2012-09-28 | Music on video site |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/250,187 US20130086143A1 (en) | 2011-09-30 | 2011-09-30 | Music On Video Site |
PCT/US2012/057989 WO2013049616A2 (en) | 2011-09-30 | 2012-09-28 | Music on video site |
Related Child Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP16164945.4A Division-Into EP3059706B1 (en) | 2011-09-30 | 2012-09-28 | Music on video site |
EP16164945.4A Division EP3059706B1 (en) | 2011-09-30 | 2012-09-28 | Music on video site |
Publications (3)
Publication Number | Publication Date |
---|---|
EP2761572A2 EP2761572A2 (en) | 2014-08-06 |
EP2761572A4 EP2761572A4 (en) | 2015-04-29 |
EP2761572B1 true EP2761572B1 (en) | 2016-06-01 |
Family
ID=47993662
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP12835586.4A Active EP2761572B1 (en) | 2011-09-30 | 2012-09-28 | Music on video site |
EP16164945.4A Active EP3059706B1 (en) | 2011-09-30 | 2012-09-28 | Music on video site |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP16164945.4A Active EP3059706B1 (en) | 2011-09-30 | 2012-09-28 | Music on video site |
Country Status (4)
Country | Link |
---|---|
US (1) | US20130086143A1 (en) |
EP (2) | EP2761572B1 (en) |
CN (1) | CN103975360B (en) |
WO (1) | WO2013049616A2 (en) |
Families Citing this family (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9411808B2 (en) | 2014-03-04 | 2016-08-09 | Microsoft Technology Licensing, Llc | Automapping of music tracks to music videos |
CN105743938A (en) * | 2014-12-09 | 2016-07-06 | 上海证大喜马拉雅网络科技有限公司 | Software and hardware integrated binding method and system based on wifi chip |
US10261964B2 (en) * | 2016-01-04 | 2019-04-16 | Gracenote, Inc. | Generating and distributing playlists with music and stories having related moods |
CN109756784B (en) * | 2018-12-21 | 2020-11-17 | 广州酷狗计算机科技有限公司 | Music playing method, device, terminal and storage medium |
Family Cites Families (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6697564B1 (en) * | 2000-03-03 | 2004-02-24 | Siemens Corporate Research, Inc. | Method and system for video browsing and editing by employing audio |
WO2003048948A1 (en) * | 2001-12-04 | 2003-06-12 | Yahoo!Inc. | Method and system for providing listener-requested music over a network |
KR100643278B1 (en) * | 2003-10-22 | 2006-11-10 | 삼성전자주식회사 | Method and Apparatus for managing digital rights of portable storage device |
US7818350B2 (en) * | 2005-02-28 | 2010-10-19 | Yahoo! Inc. | System and method for creating a collaborative playlist |
CN101313364B (en) * | 2005-11-21 | 2011-12-21 | 皇家飞利浦电子股份有限公司 | System and method for using content features and metadata of digital images to find related audio accompaniment |
US7603434B2 (en) * | 2006-04-13 | 2009-10-13 | Domingo Enterprises, Llc | Central system providing previews of a user's media collection to a portable media player |
JP4717734B2 (en) * | 2006-06-30 | 2011-07-06 | キヤノン株式会社 | Data reproducing apparatus and data reproducing method |
JP4860513B2 (en) * | 2007-03-15 | 2012-01-25 | 株式会社第一興商 | Music video playback device that specifies the music for viewing the continuation of the video work |
JP4483936B2 (en) * | 2007-12-03 | 2010-06-16 | ブラザー工業株式会社 | Music / video playback device |
US20090307227A1 (en) * | 2008-06-06 | 2009-12-10 | Disney Enterprises, Inc. | Methods and apparatuses for combining and distributing user enhanced video/audio content |
US8798777B2 (en) * | 2011-03-08 | 2014-08-05 | Packetvideo Corporation | System and method for using a list of audio media to create a list of audiovisual media |
US9697871B2 (en) * | 2011-03-23 | 2017-07-04 | Audible, Inc. | Synchronizing recorded audio content and companion content |
US9697265B2 (en) * | 2011-03-23 | 2017-07-04 | Audible, Inc. | Synchronizing digital content |
-
2011
- 2011-09-30 US US13/250,187 patent/US20130086143A1/en not_active Abandoned
-
2012
- 2012-09-28 WO PCT/US2012/057989 patent/WO2013049616A2/en active Application Filing
- 2012-09-28 CN CN201280058486.3A patent/CN103975360B/en active Active
- 2012-09-28 EP EP12835586.4A patent/EP2761572B1/en active Active
- 2012-09-28 EP EP16164945.4A patent/EP3059706B1/en active Active
Also Published As
Publication number | Publication date |
---|---|
US20130086143A1 (en) | 2013-04-04 |
CN103975360B (en) | 2017-09-19 |
EP2761572A2 (en) | 2014-08-06 |
EP3059706B1 (en) | 2018-11-14 |
WO2013049616A2 (en) | 2013-04-04 |
EP2761572A4 (en) | 2015-04-29 |
EP3059706A1 (en) | 2016-08-24 |
WO2013049616A3 (en) | 2013-05-23 |
CN103975360A (en) | 2014-08-06 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9542488B2 (en) | Associating audio tracks with video content | |
US11200299B2 (en) | Crowd sourcing for file recognition | |
US8903843B2 (en) | Historical media recommendation service | |
US7720871B2 (en) | Media management system and method | |
US9305060B2 (en) | System and method for performing contextual searches across content sources | |
US7908270B2 (en) | System and method for managing access to media assets | |
JP4596044B2 (en) | Information processing system and information processing method | |
US9344759B2 (en) | Associating audio tracks of an album with video content | |
US20040019658A1 (en) | Metadata retrieval protocols and namespace identifiers | |
JP2008522296A (en) | Management of unprotected content and protected content in private networks | |
US20230008201A1 (en) | Automated Content Medium Selection | |
EP2761572B1 (en) | Music on video site | |
US20140215544A1 (en) | Music on video site | |
JP5306555B1 (en) | System capable of providing a plurality of digital contents and method using the same | |
US20220188062A1 (en) | Skip behavior analyzer | |
JP2014191822A (en) | System capable of providing a plurality of digital contents and method using the same | |
Allasia et al. | A digital rights aware similarity measure for multimedia documents |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20140429 |
|
AK | Designated contracting states |
Kind code of ref document: A2Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
DAX | Request for extension of the european patent (deleted) | ||
A4 | Supplementary search report drawn up and despatched |
Effective date: 20150327 |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: H04L 29/06 20060101ALI20150323BHEPIpc: H04N 9/82 20060101ALI20150323BHEPIpc: G06F 17/30 20060101ALI20150323BHEPIpc: G06Q 50/10 20120101AFI20150323BHEPIpc: H04N 21/81 20110101ALI20150323BHEPIpc: H04N 21/658 20110101ALI20150323BHEP |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: H04N 21/658 20110101ALI20151030BHEPIpc: H04L 29/06 20060101ALI20151030BHEPIpc: H04N 9/82 20060101ALI20151030BHEPIpc: G06F 17/30 20060101ALI20151030BHEPIpc: H04N 21/81 20110101ALI20151030BHEPIpc: G06Q 50/10 20120101AFI20151030BHEP |
|
GRAP | Despatch of communication of intention to grant a patent |
Free format text: ORIGINAL CODE: EPIDOSNIGR1 |
|
INTG | Intention to grant announced |
Effective date: 20151217 |
|
GRAS | Grant fee paid |
Free format text: ORIGINAL CODE: EPIDOSNIGR3 |
|
GRAA | (expected) grant |
Free format text: ORIGINAL CODE: 0009210 |
|
AK | Designated contracting states |
Kind code of ref document: B1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
REG | Reference to a national code |
Ref country code: GBRef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: EPRef country code: ATRef legal event code: REFRef document number: 804276Country of ref document: ATKind code of ref document: TEffective date: 20160615 |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R096Ref document number: 602012019269Country of ref document: DE |
|
REG | Reference to a national code |
Ref country code: NLRef legal event code: FP |
|
REG | Reference to a national code |
Ref country code: LTRef legal event code: MG4DRef country code: FRRef legal event code: PLFPYear of fee payment: 5 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160601Ref country code: FIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160601Ref country code: NOFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160901 |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: MK05Ref document number: 804276Country of ref document: ATKind code of ref document: TEffective date: 20160601 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: HRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160601Ref country code: SEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160601Ref country code: ESFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160601Ref country code: LVFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160601Ref country code: RSFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160601Ref country code: GRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160902 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: CZFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160601Ref country code: EEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160601Ref country code: ITFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160601Ref country code: ISFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20161001Ref country code: ROFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160601Ref country code: SKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160601 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SMFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160601Ref country code: BEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20160601Ref country code: PTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20161003Ref country code: PLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160601Ref country code: ATFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160601 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R097Ref document number: 602012019269Country of ref document: DE |
|
PLBE | No opposition filed within time limit |
Free format text: ORIGINAL CODE: 0009261 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: NO OPPOSITION FILED WITHIN TIME LIMIT |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MCFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160601 |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: PL |
|
26N | No opposition filed |
Effective date: 20170302 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: DKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160601Ref country code: SIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160601 |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: MM4A |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: CHFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20160930Ref country code: IEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20160928Ref country code: LIFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20160930 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LUFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20160928 |
|
REG | Reference to a national code |
Ref country code: FRRef legal event code: PLFPYear of fee payment: 6 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R082Ref document number: 602012019269Country of ref document: DERepresentative=s name: BETTEN & RESCH PATENT- UND RECHTSANWAELTE PART, DERef country code: DERef legal event code: R081Ref document number: 602012019269Country of ref document: DEOwner name: GOOGLE LLC (N.D.GES.D. STAATES DELAWARE), MOUN, USFree format text: FORMER OWNER: GOOGLE INC., MOUNTAIN VIEW, CALIF., US |
|
REG | Reference to a national code |
Ref country code: FRRef legal event code: CDOwner name: GOOGLE INC., USEffective date: 20180213Ref country code: FRRef legal event code: CJEffective date: 20180213 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: HUFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT; INVALID AB INITIOEffective date: 20120928 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MTFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20160930Ref country code: MKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160601Ref country code: CYFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160601 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: BGFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160601 |
|
REG | Reference to a national code |
Ref country code: FRRef legal event code: PLFPYear of fee payment: 7 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: TRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160601Ref country code: ALFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160601 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230505 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: NLPayment date: 20230926Year of fee payment: 12Ref country code: GBPayment date: 20230927Year of fee payment: 12 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: FRPayment date: 20230925Year of fee payment: 12Ref country code: DEPayment date: 20230927Year of fee payment: 12 |
US8582872B1 - Place holder image detection via image clustering - Google Patents
Place holder image detection via image clustering Download PDFInfo
- Publication number
- US8582872B1 US8582872B1 US13/173,898 US201113173898A US8582872B1 US 8582872 B1 US8582872 B1 US 8582872B1 US 201113173898 A US201113173898 A US 201113173898A US 8582872 B1 US8582872 B1 US 8582872B1
- Authority
- US
- United States
- Prior art keywords
- image
- clusters
- images
- placeholder
- duplicate
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
- 238000001514 detection method Methods 0.000 title claims description 20
- 238000000034 method Methods 0.000 claims abstract description 42
- 238000004519 manufacturing process Methods 0.000 claims abstract description 8
- 230000015654 memory Effects 0.000 claims description 9
- 230000000007 visual effect Effects 0.000 claims description 5
- 238000010801 machine learning Methods 0.000 claims description 4
- 230000004044 response Effects 0.000 claims description 3
- 238000007796 conventional method Methods 0.000 description 6
- 238000004458 analytical method Methods 0.000 description 5
- 239000013598 vector Substances 0.000 description 5
- 238000004891 communication Methods 0.000 description 4
- 238000012986 modification Methods 0.000 description 4
- 230000004048 modification Effects 0.000 description 4
- 230000008859 change Effects 0.000 description 3
- 238000012015 optical character recognition Methods 0.000 description 3
- 238000013459 approach Methods 0.000 description 2
- 238000010586 diagram Methods 0.000 description 2
- 238000011156 evaluation Methods 0.000 description 2
- 230000006870 function Effects 0.000 description 2
- 238000000513 principal component analysis Methods 0.000 description 2
- 238000012706 support-vector machine Methods 0.000 description 2
- 230000006978 adaptation Effects 0.000 description 1
- 238000010276 construction Methods 0.000 description 1
- 230000009193 crawling Effects 0.000 description 1
- 238000013480 data collection Methods 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 238000000605 extraction Methods 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 230000002093 peripheral effect Effects 0.000 description 1
- 230000002085 persistent effect Effects 0.000 description 1
- 238000012552 review Methods 0.000 description 1
- 230000001131 transforming effect Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/50—Information retrieval; Database structures therefor; File system structures therefor of still image data
- G06F16/58—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
- G06F16/583—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually using metadata automatically derived from the content
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/21—Design or setup of recognition systems or techniques; Extraction of features in feature space; Blind source separation
- G06F18/217—Validation; Performance evaluation; Active pattern learning techniques
- G06F18/2178—Validation; Performance evaluation; Active pattern learning techniques based on feedback of a supervisor
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/24—Classification techniques
- G06F18/241—Classification techniques relating to the classification model, e.g. parametric or non-parametric approaches
- G06F18/2413—Classification techniques relating to the classification model, e.g. parametric or non-parametric approaches based on distances to training or reference patterns
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/70—Arrangements for image or video recognition or understanding using pattern recognition or machine learning
- G06V10/77—Processing image or video features in feature spaces; using data integration or data reduction, e.g. principal component analysis [PCA] or independent component analysis [ICA] or self-organising maps [SOM]; Blind source separation
- G06V10/778—Active pattern-learning, e.g. online learning of image or video features
- G06V10/7784—Active pattern-learning, e.g. online learning of image or video features based on feedback from supervisors
Definitions
- This disclosure relates generally to detection of placeholder images.
- Websites may have generic images that are displayed in lieu of the actual image corresponding to the particular context of the webpage. For example, in a listing of people, a generic image with the label “Image Not Available” may be displayed as the corresponding image next to the names of one or more people.
- a shopping web site may display generic images with labels such as “No Image Available,” “coming soon,” “under construction,” “placeholder,” “photo coming soon,” or other label indicating that the displayed image is not the actual image corresponding to the particular context of the webpage.
- Placeholder images The generic images that are used in place of actual images that are unavailable are referred to as “placeholder images.”
- a placeholder image can be any image that is used in place of the actual image for any reason, such as when the latter image is unavailable. Placeholder images are found in many forms.
- placeholder images can diminish the user experience by reducing the quality of the presented results. For example, a user may be presented with the results of a product search where a majority of the products are displayed as placeholder images instead of actual images of the respective products.
- Placeholder images can also reduce the accuracy of image search results. For example, depending on how the search query is structured, or based on how the system proceeds to search and categorize results, placeholder images may skew the search results by appearing in one or more of the resulting image sets.
- Tools to efficiently identify placeholder images can be used to improve the user-experience, and also to improve the accuracy of the search results. For example, by detecting the presence of a substantial number of placeholder images in a webpage to be presented to a user, a webpage rendering program can reformat the webpage so that the products that have available corresponding images are displayed first or more prominently than the products that have only placeholder images. Likewise, placeholder images can be detected and removed from the result set before a user is presented with the results of a search.
- placeholder images Due to the large number of websites that are accessible, there may be numerous forms of placeholder images. It may be desired that a method to detect placeholder images should be capable of identifying placeholder images that appear in any websites that are accessible over the Internet.
- a method of detecting placeholder images includes, accessing a collection of digital images, clustering the digital images to generate at least one of a plurality of exact-duplicate image clusters or a plurality of near-duplicate image clusters, and selecting one or more placeholder image clusters from at least one of the plurality of exact-duplicate image clusters or the plurality of near-duplicate image clusters.
- Another embodiment is a system for detecting placeholder images including at least one processor, at least one memory coupled to the processor, a collection of digital images configured to be accessible by a program implemented on the processor, and a placeholder image detection module configured to be implemented on the processor.
- the placeholder image detection module includes an exact-duplicate clustering module configured to cluster images from the collection of digital images into exact-duplicate image clusters, a near-duplicate image clustering module configured to cluster images from the collection of digital images into near-duplicate image clusters, and a placeholder image cluster selection module configured to select one or more placeholder image clusters from at least one of the exact-duplicate image clusters or the near-duplicate image clusters.
- Another embodiment is an article of manufacture including a non-transitory computer readable medium encoding instructions thereon that in response to execution by a computing device cause the computing device to perform operations including accessing a collection of digital images, clustering the digital images to generate at least one of a plurality of exact-duplicate image clusters or a plurality of near-duplicate image clusters, and selecting one or more placeholder image clusters from the at least one of the plurality of exact-duplicate image clusters or the plurality of near-duplicate image clusters.
- FIG. 1 a illustrates a system to detect placeholder images in accordance with an embodiment.
- FIG. 1 b illustrates a computer in which a system to detect placeholder images can be implemented in accordance with an embodiment.
- FIG. 2 illustrates a block diagram of a client server system in accordance with an embodiment.
- FIG. 3 illustrates a flowchart of a method for detecting placeholder images in accordance with an embodiment.
- FIG. 4 illustrates a flowchart of a method of performing near-duplicate image clustering for the detection of placeholder images.
- FIG. 5 illustrates a flowchart of a method selecting clusters of placeholder images in accordance with an embodiment.
- FIG. 6 illustrates a flowchart of another method of selecting clusters of placeholder images in accordance with an embodiment.
- Embodiments disclosed in the specification are directed to the detection of placeholder images using collections of digital images.
- a placeholder image as described above, is an image that is displayed on a website (such as, for example, shopping sites) when the actual image is unavailable. Placeholder images diminish the visual quality of the presented results, and make it harder to use the visual characteristics of the respective images in ranking and search.
- Embodiments described herein can be used to detect placeholder images based upon images that are displayed in numerous websites accessible over the Internet.
- Placeholder images are often found in large numbers relative to other images. This is particularly the case in the context of large image corpora accessible on the Internet.
- the placeholder images were identical or were substantially identical from merchant to merchant and across various websites.
- Embodiments disclosed herein are directed to identifying such placeholder images by finding relatively large clusters of duplicate or near-duplicate images.
- FIG. 1 a illustrates a system 100 to detect placeholder images, according to an embodiment.
- System 100 is configured to detect placeholder images using large image corpora, and optionally to build a database of placeholder images.
- the database of placeholder images can be used subsequently to identify other placeholder images.
- Other embodiments can be, for example, configured to establish a placeholder image identification service using the placeholder image database constructed from the large image corpora.
- Placeholder image database 114 comprises a collection of identified (or otherwise known) placeholder images 113 and associated metadata 115 .
- database implies any collection of data and methods to access the collection of data, and does not necessarily imply a commercially available database management system (DBMS).
- placeholder image database 114 includes one or more of a known placeholder image collection 113 , and an associated metadata collection 115 .
- the placeholder image database 114 may be local to other components of system 100 or may be remotely located.
- Placeholder images 113 represent images that have been selected as placeholder images.
- Metadata 115 includes information associated with respective images in placeholder images 113 . Methods of maintaining images and metadata in database 114 may be similar to those corresponding methods described below with respect to image collection database 116 .
- the image collection databases 116 can be of any size. Embodiments may be particularly advantageous, relative to conventional methods, where the image collections are very large.
- Image collection database 116 can comprise a single database directly connected to a computer implementing system 100 or may be a distributed database communicatively coupled to such a computer.
- image collection database 116 resides in a memory or persistent storage of a computer implementing system 100 .
- image collection database 116 can reside internally to a computer implementing system 100 as well as in remote computers.
- image collection database 116 comprises images acquired from websites and associated information.
- raw image data 117 may refer to images that were acquired from various websites.
- the actual images corresponding to raw image data 117 may not need to be stored locally in a computer implementing system 100 .
- the actual images themselves can remain in their original locations.
- sufficient information for the clustering and comparison operations such as a feature vector, wavelet fingerprint, or hash signature
- a pointer to the original location may be stored locally in a computer implementing system 100 .
- some or all images that are used in the placeholder detection system may be stored locally in a computer implementing system 100 , or in a locally accessible server.
- the image collection database 116 also includes metadata 118 about the images 117 that are available.
- the metadata associated with the images may be, for example, information that helps to distinguish placeholder images from other types of images.
- metadata associated with respective images include a “click-through rate” which is a quantifiable measure of how often a user clicked (or selected) the image upon it being displayed.
- the metadata can include a “linked sources count” which is a count of how many sources from which the image was linked to or otherwise made accessible. Metadata associated with the images 117 may be obtained from the same or different sources from which the corresponding images are obtained.
- Image collector 120 includes functionality to acquire images that, for example, may be stored in image collection database 116 .
- image collector 120 can automatically and periodically access websites to collect images and associated information.
- the image data collection by image collector 120 can be directed by an operator.
- Image collector 120 can receive images and associated data in response to its queries, which it then can store in image collection database 116 .
- image collector 120 can acquire images and associated data, or part of that data, from a source that tracks user visits to various websites.
- image collector 120 can also acquire manually input images along with associated metadata. Other means of acquiring images, such as by directly acquiring images by web crawling or incorporating collections of images that are already processed are possible and are contemplated within the scope of embodiments.
- Metadata collector 121 can be associated with the image collector 120 .
- Metadata collector 121 may include logic to acquire metadata, such as the click-through rates or linked sources information associated with each of the images acquired by image collector 120 .
- metadata collector 121 can, for each image acquired by the image collector, query a service (not shown) to determine the available metadata for that image.
- Placeholder image comparator 124 includes logic to compare a newly submitted image against the images in the placeholder image database 114 and determine if the newly submitted image is a placeholder image. According to an embodiment, placeholder image comparator 124 can compare the newly submitted image to each of the clusters identified as placeholder image clusters and stored in placeholder image database 114 .
- Placeholder image detector 130 includes logic to detect placeholder images in image collections, according to an embodiment.
- Placeholder image detector 130 includes an image accessing module 132 , exact-duplicate clusterer 134 , near-duplicate clusterer 136 , and a placeholder image cluster selector 138 .
- Image accessing module 132 includes logic to access the images and image metadata, for example, to access images and associated metadata stored in image collection database 114 .
- Exact-duplicate clusterer 134 includes logic to perform grouping of identical images. According to an embodiment, exact-duplicate clusterer 134 computes a hash signature based on MD5 for each image. The hash signature of various images can be calculated and the images can be grouped into clusters, where each cluster includes only exactly matched images.
- Near-duplicate clusterer 136 includes logic to perform clustering of images such that images that are nearly the same (i.e. nearly identical) are grouped into the same cluster. Near-duplicate image clusterer 136 would put in the same cluster, a first image and any other images that are close variations of the first image based on, for example, change of size, or change of color. Near-duplicate image clusterer 136 may include logic to implement one, or more than one, clustering operation on the input images. Near-duplicates can be identified by a method such as locality sensitive hashing, wavelet-based fingerprints, or local feature matching.
- near-duplicates may be identified by computing a wavelet transform of each image according to conventional methods, and then comparing the most significant wavelet coefficients.
- the one or more clustering operations may, for example, include conventional techniques such as leader clustering, connected component analysis, agglomerative clustering and the like.
- two or more stages of clustering can be performed, each stage using a different clustering method, so that each subsequent stage more finely groups clusters of the previous stage.
- Placeholder cluster selector 138 includes logic to select one or more placeholder image clusters. According to an embodiment, placeholder cluster selector 138 makes its selection from among the clusters of exact-duplicates and the near-duplicates clusters. Placeholder cluster selector 138 can be configured to perform the selection of the clusters using one or more predetermined criteria.
- Example predetermined cluster selection criteria include a threshold relative size of clusters, a threshold internal similarity of images in the cluster, appearance of text in images of the clusters, and the like. Other selection criteria can include threshold click-through rates, and threshold number of sources linking to the images in the cluster.
- System 100 can be implemented in software, hardware, or a combination thereof. According to an embodiment, system 100 can be implemented in a server or other network-connected computer, a server farm, a cloud computing platform, or the like.
- FIG. 1 b is a block diagram of a computer 101 that can be used to implement system 100 to detect placeholder images.
- computer 101 comprises at least one processor 102 , a memory 104 , a storage 106 , a network interface 108 , a user input/output device 110 , and communication infrastructure 112 .
- Processor 102 comprises one or more processors that are configured to execute applications such as placeholder image detector 130 .
- Memory 104 can comprise a single memory or multiple interconnected memories located in one or more computers.
- memory 104 comprises dynamic random access memory (DRAM).
- Storage 106 comprises one or more interconnected non-volatile computer readable medium, and may include hard disks, flash memory, optical storage device, and the like.
- Network interface 108 includes an interface to any type of network, such as, but not limited to, Ethernet and wireless local area network (LAN), to which computer 101 may be connected.
- User input/output device 110 comprises interfaces to one or more of keyboard, mouse, and display device through which a user, such as a human operator or an application, can control the operations of computer 101 and/or display output from computer 101 .
- Communication infrastructure 112 may include one or more communication buses such as, but not limited to, a system bus, Peripheral Component Interconnect (PCI) bus, Universal Serial Bus (USB), Firewire, or Ethernet. Communication infrastructure 112 provides the interconnection to communicatively couple components of computer 101 .
- PCI Peripheral Component Interconnect
- USB Universal Serial Bus
- Firewire or Ethernet.
- FIG. 2 illustrates a client/server system 200 for detecting placeholder images.
- Server 210 is a server that has access to a database (not shown) of placeholder images. According to an embodiment, for example, server 210 can include computer 100 .
- Client 202 is communicatively coupled to server 210 through network 208 .
- Network 208 can be based upon any network technology.
- Client 202 includes logic to determine whether a newly received image 204 is a placeholder image, by, for example, querying a remote database such as database 114 of system 100 .
- a module 206 may perform placeholder image detection at the client device, using a local or remote database.
- client placeholder image detection module 206 can query a placeholder image detection system and/or database of placeholder images located in server 210 .
- Server 210 upon receiving a client query, may implement a method such as that described below in relation to FIG. 3 or may access a database of placeholder images, in order to respond to the received query.
- FIG. 3 illustrates a method 300 of placeholder image detection, according to an embodiment.
- Method 300 can be implemented, for example, in system 100 or server 210 .
- a collection of digital images is accessed from which to detect placeholder images.
- the collection of digital images can be one or more databases, stored either locally or remotely, consisting of images that have been previously gathered. Images may have been gathered from various websites that are accessible through the Internet.
- the images stored in the collection database may include all images from various shopping websites by a web-crawler.
- the collection of images may be an index that stores a pointer to the actual image stored elsewhere, and stores information such as an image signature or other information useful in compare and clustering operations locally.
- the collection of digital images can also include metadata associated with the respective images.
- the URL information, click-through rate, number of linking sources, and the like can be stored as metadata.
- Information such as the click-through rate and the number of linking sources may be obtained from the websites themselves from which the respective images were obtained, or from a separate web tracking or web analysis software.
- step 304 the collection of images is clustered to generate a plurality of clusters of images that are exact-duplicates.
- Exact-duplicate images are images that are pixel-for-pixel the same. In general, detecting exact-duplicates is relatively more efficient than the detection of near-duplicates.
- any method for exact-duplicate image detection can be used.
- the MD5 hash value for each of the images is calculated, and the images are clustered based upon the MD5 scores.
- the clustering of exact-duplicates may significantly reduce the number of images that have to be considered in the next clustering stage which is, in general, more compute-intensive. For example, it is frequently the case that shopping sites have the same stock image that is displayed for every item for which an image is unavailable.
- the collection of images is clustered to generate a plurality of clusters of images that contain near-duplicates.
- Near-duplicate images refer to images that are not pixel-to-pixel identical but differ with respect to one or more of the size of the image, the format, or color while the scene of the image remains the same.
- One or more known methods of near-duplicate image detection can be used in step 306 to identify clusters of near-duplicates.
- placeholder image detection does not require that the detection method consider adversarial modifications to images, such as, for example, modifications made in spam or forgery situations.
- a shopping website may include either the exact-duplicate images (which are of the same size) or scaled-versions of those images as placeholders.
- a “near-duplicate” image may be defined to include two images that differ only in image size, color, format, or the like. Images that differ with respect to the scene or subject matter of the images are neither exact-duplicates nor near-duplicates.
- Example methods that can be used in step 306 to characterize images include wavelet-based fingerprints and feature vectors based on features such as Scale Invariant Feature Transform (SIFT) features.
- Image features can include, but are not limited to, one or more of edges, corners, ridges, interest points, and color histograms.
- Feature extraction may be based on one or more known methods such as, but not limited to, SIFT and Principal Component Analysis (PCA).
- wavelet-based fingerprints are used to characterize the images using wavelet coefficients, and images are compared based upon the most significant coefficients to identify near-duplicates.
- Clustering for near-duplicate images may be performed in one or more stages. Performing multiple stages of clustering can, for example, enable a high level of granularity in discovering near-duplicate images. According to an embodiment, connected component analysis is performed followed by leader clustering. Step 306 is discussed in further detail in relation to FIG. 4 below.
- clusters of exact-duplicate images identified at step 304 are placeholder image clusters.
- all of the near-duplicate image clusters identified at step 306 placeholder image clusters.
- one or more clusters from the exact-duplicate clusters and the near-duplicate clusters are determined to be placeholder image clusters. The determination may be made based upon one or more predetermined selection criteria.
- clusters of placeholder images may be required to be greater than a threshold size, or may be required to have distances less than a predetermined threshold between respective pairs of images in the cluster.
- the cluster may be required to have click-through rate measure that is below a predetermined threshold.
- a click-through rate measure for a cluster may be, for example, a minimum click-through rate of respective images in the cluster, or an average click-through rate of images in the cluster.
- images in a cluster may be required to have a greater than a minimum threshold of sources that are linking to the images.
- lexical analysis of URL information for the images in a cluster may be performed in order to determine the likelihood of a cluster being a cluster of placeholder images. The determination of placeholder image clusters is further described in relation to FIG. 5 below.
- a human evaluator may verify that the one or more clusters selected in 308 are clusters of placeholder images, and may prune any non-placeholder image clusters from the selected clusters. It should be noted that the preceding steps 302 - 308 typically result in a relatively small number of clusters that are presented (optionally) to a human evaluator for review. By allowing the human evaluator to focus only on the largest of the clusters, the manual operation is made more efficient. Alternatively, the exact-duplicate clusters and near-duplicate clusters that are borderline placeholder image clusters or borderline non-placeholder image clusters can be presented to the human evaluator, so as to ensure proper evaluation of clusters near the threshold of the selection criteria.
- the selected placeholder image clusters or the selected and verified placeholder image clusters are stored to a database.
- the placeholder image clusters can be written to a database 114 .
- Steps 314 - 316 can be performed, according to an embodiment, to determine if a new image is a placeholder image.
- a new image is compared to one or more of the clusters identified as placeholder image clusters. The comparison can be based upon comparing the similarity of the new image to each of the images in the placeholder image clusters.
- the new image may be associated with, for example, an average or median similarity score for each of the placeholder image clusters, based upon the comparison.
- FIG. 4 illustrates a method 400 for performing the near-duplicate image clustering, according to an embodiment.
- method 400 may be used in performing step 306 of method 300 .
- the image is represented in a manner suitable for near-duplicate image detection.
- One of many conventional methods of image representation can be used to represent the images in a manner suited for near-duplicate detection.
- Exemplary representations include a bag-of-visual words representation where an image is represented by a vector in which each element denotes the number of features in the image that are represented by given visual word.
- the set of visual words may be predetermined or may be dynamically determined from the input image data set.
- the images are represented as a feature vector of wavelet transforms.
- the image pixels may be represented in the wavelet domain by transforming each pixel to a value in a wavelet domain such as the conventional Haar wavelet domain. Thereafter the image can be represented as a feature vector of a predetermined number of the largest coefficients.
- the images in a collection of images are clustered using a first method of near-duplicate image clustering.
- One of many clustering methods can be used to determine near-duplicate image clusters.
- a conventional connected component analysis algorithm is used to perform the initial near-duplicate image clusters.
- images can be represented as nodes of a graph and edges represent the distance between the respective image pairs.
- the graph may be analyzed to identify connected components or subgraphs that include images within a desired distance of each other.
- the initial set of near-duplicate clusters may be obtained by performing the connected component analysis on the graph which has an edge connecting two images if the Jaccard distance between their wavelet-based fingerprints is less than a threshold.
- a second stage of near-duplicate clustering of the set of initial near-duplicate clusters can be performed using a conventional method such as a leader clustering.
- Leader clustering can be configured, for example, with a threshold distance according to a local feature-based method using SIFT descriptors.
- leader clustering may be performed using Jaccard distance between wavelet fingerprints of the respective images.
- the leader clustering may result in a set of clusters in which each cluster has images that are within a configured threshold distance (corresponding to a high match) from a cluster center.
- the threshold can be configured to a sufficiently low value so that images within clusters may have only limited differences such as a change in size of the image etc.
- FIG. 5 illustrates a method 500 for the selection of placeholder image clusters from the set of exact-duplicate clusters and near-duplicate clusters, according to an embodiment.
- method 500 may be used in performing step 308 in method 300 .
- image metadata is accessed.
- metadata associated with an image includes one or more of information associated with the image, click-through rates associated with the image, the number of sources linking to the image.
- the metadata may be stored in a collection of images, or may be acquired separately. Another metric to be evaluated for an image may be whether the image includes recognizable characters. For example, a numeric score for the presence of characters in the image can be configured to be higher if a term from a predefined set of terms indicative of placeholder images is found in the image.
- cluster parameters are determined.
- the cluster parameters can include one or more of the size of the cluster, the average inter-distance between images in the cluster, a statistical measure of the click-through rates associated with the images in the cluster, and a statistical measure of the number of sources linking to the respective images in the cluster.
- the clusters are ranked according to a metric.
- the clusters may be ranked based on one or more of the cluster parameters evaluated for each cluster in step 504 .
- the clusters are ranked based upon a weighted sum of two or more of the metrics evaluated in step 504 .
- a ranking metric may be created as a weighted sum of the size of the cluster, average inter-distance among images, and click-through rates.
- one or more clusters are selected based upon the ranked list of clusters.
- a number e.g., the five highest ranked
- the number of clusters to be considered may be experimentally determined for each ranking metric.
- selecting from the ranked lists may be based upon criteria, such as, but not limited to, selecting clusters ranked within a percentile, or selecting the highest consecutively ranked clusters based upon comparing distances between respective pairs of consecutively ranked clusters.
- FIG. 6 illustrates a method 600 for selecting placeholder image clusters from the set of exact-duplicate clusters and the set of near-duplicate clusters.
- a machine-learning classifier is configured to classify the exact-duplicate or near-duplicate clusters to select the set of placeholder image clusters.
- the classifier may be a support vector machine (SVM) classifier, a linear classifier, or other such classifier.
- SVM support vector machine
- the classifier may be trained on one or more signals suitable for the detection of placeholder images. Exemplary signals used for the classifier include appearance of image, text in the image, relative size of the cluster, number of images that come from the same source (e.g., same website).
- An exemplary classifier may assign a score to each of the clusters, the score being based upon a weighted sum of several signals.
- the classifier is used to rank the exact-duplicate and near-duplicate clusters according to their likelihood of being placeholder image clusters.
- the classifier can be executed linearly or in parallel to classify the clusters.
- the classifier by assigning to each cluster a score based on an evaluation of the selected signals in each cluster, ranks the set of clusters.
- the ranked set of clusters can subsequently be used to select the placeholder image clusters.
Abstract
Description
Claims (21)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/173,898 US8582872B1 (en) | 2011-06-30 | 2011-06-30 | Place holder image detection via image clustering |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/173,898 US8582872B1 (en) | 2011-06-30 | 2011-06-30 | Place holder image detection via image clustering |
Publications (1)
Publication Number | Publication Date |
---|---|
US8582872B1 true US8582872B1 (en) | 2013-11-12 |
Family
ID=49518097
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/173,898 Expired - Fee Related US8582872B1 (en) | 2011-06-30 | 2011-06-30 | Place holder image detection via image clustering |
Country Status (1)
Country | Link |
---|---|
US (1) | US8582872B1 (en) |
Cited By (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130067364A1 (en) * | 2011-09-08 | 2013-03-14 | Microsoft Corporation | Presenting search result items having varied prominence |
US20140279170A1 (en) * | 2013-03-15 | 2014-09-18 | Fashion For Globe Llc | Systems and methods for an online fashion design marketplace |
US9330079B1 (en) * | 2012-05-01 | 2016-05-03 | Amazon Technologies, Inc. | Systems and methods for blocking data management for distributed content delivery for interactive documents |
US9715714B2 (en) | 2015-08-17 | 2017-07-25 | Adobe Systems Incorporated | Content creation and licensing control |
US10366433B2 (en) | 2015-08-17 | 2019-07-30 | Adobe Inc. | Methods and systems for usage based content search results |
US10475098B2 (en) | 2015-08-17 | 2019-11-12 | Adobe Inc. | Content creation suggestions using keywords, similarity, and social networks |
US10592548B2 (en) | 2015-08-17 | 2020-03-17 | Adobe Inc. | Image search persona techniques and systems |
US10853983B2 (en) | 2019-04-22 | 2020-12-01 | Adobe Inc. | Suggestions to enrich digital artwork |
US10878021B2 (en) | 2015-08-17 | 2020-12-29 | Adobe Inc. | Content search and geographical considerations |
US11048779B2 (en) | 2015-08-17 | 2021-06-29 | Adobe Inc. | Content creation, fingerprints, and watermarks |
CN113052245A (en) * | 2021-03-30 | 2021-06-29 | 重庆紫光华山智安科技有限公司 | Image clustering method and device, electronic equipment and storage medium |
US11055344B2 (en) | 2018-03-21 | 2021-07-06 | Walmart Apollo, Llc | Product image evaluation system and method |
Citations (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6658423B1 (en) * | 2001-01-24 | 2003-12-02 | Google, Inc. | Detecting duplicate and near-duplicate files |
US6836801B1 (en) * | 2000-10-12 | 2004-12-28 | Hewlett-Packard Development Company, L.P. | System and method for tracking the use of a web tool by a web user by using broken image tracking |
US20070078846A1 (en) * | 2005-09-30 | 2007-04-05 | Antonino Gulli | Similarity detection and clustering of images |
US20080306913A1 (en) * | 2007-06-05 | 2008-12-11 | Aol, Llc | Dynamic aggregation and display of contextually relevant content |
US20090070346A1 (en) * | 2007-09-06 | 2009-03-12 | Antonio Savona | Systems and methods for clustering information |
US20090106226A1 (en) * | 2007-10-19 | 2009-04-23 | Erik Ojakaar | Search shortcut pullquotes |
US20090208097A1 (en) * | 2008-02-15 | 2009-08-20 | Ibrahim Husseini | Cost-effective image metadata creation using near-duplicate image detection |
US20100030798A1 (en) * | 2007-01-23 | 2010-02-04 | Clearwell Systems, Inc. | Systems and Methods for Tagging Emails by Discussions |
US20100150453A1 (en) * | 2006-01-25 | 2010-06-17 | Equivio Ltd. | Determining near duplicate "noisy" data objects |
US20100166321A1 (en) * | 2008-12-29 | 2010-07-01 | Yahoo! Inc. | Method and system for determining near duplicate images |
US20100316290A1 (en) * | 2009-06-16 | 2010-12-16 | Alibaba Group Holding Limited | Method and system for near-duplicate image searching |
US20110029491A1 (en) * | 2009-07-29 | 2011-02-03 | International Business Machines Corporation | Dynamically detecting near-duplicate documents |
US20110087668A1 (en) * | 2009-10-09 | 2011-04-14 | Stratify, Inc. | Clustering of near-duplicate documents |
US20110219012A1 (en) * | 2010-03-02 | 2011-09-08 | Yih Wen-Tau | Learning Element Weighting for Similarity Measures |
US20110280474A1 (en) * | 2010-05-11 | 2011-11-17 | Microsoft Corporation | Auto classifying images as "image not available" images |
-
2011
- 2011-06-30 US US13/173,898 patent/US8582872B1/en not_active Expired - Fee Related
Patent Citations (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6836801B1 (en) * | 2000-10-12 | 2004-12-28 | Hewlett-Packard Development Company, L.P. | System and method for tracking the use of a web tool by a web user by using broken image tracking |
US6658423B1 (en) * | 2001-01-24 | 2003-12-02 | Google, Inc. | Detecting duplicate and near-duplicate files |
US20070078846A1 (en) * | 2005-09-30 | 2007-04-05 | Antonino Gulli | Similarity detection and clustering of images |
US20100150453A1 (en) * | 2006-01-25 | 2010-06-17 | Equivio Ltd. | Determining near duplicate "noisy" data objects |
US20100030798A1 (en) * | 2007-01-23 | 2010-02-04 | Clearwell Systems, Inc. | Systems and Methods for Tagging Emails by Discussions |
US20080306913A1 (en) * | 2007-06-05 | 2008-12-11 | Aol, Llc | Dynamic aggregation and display of contextually relevant content |
US20090070346A1 (en) * | 2007-09-06 | 2009-03-12 | Antonio Savona | Systems and methods for clustering information |
US20090106226A1 (en) * | 2007-10-19 | 2009-04-23 | Erik Ojakaar | Search shortcut pullquotes |
US20090208097A1 (en) * | 2008-02-15 | 2009-08-20 | Ibrahim Husseini | Cost-effective image metadata creation using near-duplicate image detection |
US20100166321A1 (en) * | 2008-12-29 | 2010-07-01 | Yahoo! Inc. | Method and system for determining near duplicate images |
US20100316290A1 (en) * | 2009-06-16 | 2010-12-16 | Alibaba Group Holding Limited | Method and system for near-duplicate image searching |
US20110029491A1 (en) * | 2009-07-29 | 2011-02-03 | International Business Machines Corporation | Dynamically detecting near-duplicate documents |
US20110087668A1 (en) * | 2009-10-09 | 2011-04-14 | Stratify, Inc. | Clustering of near-duplicate documents |
US20110219012A1 (en) * | 2010-03-02 | 2011-09-08 | Yih Wen-Tau | Learning Element Weighting for Similarity Measures |
US20110280474A1 (en) * | 2010-05-11 | 2011-11-17 | Microsoft Corporation | Auto classifying images as "image not available" images |
Non-Patent Citations (8)
Title |
---|
Agnew, B., Faloutsos, C., Wang, Z., and Welch, D., Multi-media Indexing Over the Web, 1997, SPIE, VOI. 3022, pp. 72-83. * |
Chen et al., "Comparison of Near-Duplicate Image Matching," 3rd European Conference on Visual Media Production, CMVP 2006, 5 pages. |
Foo, J.J., Zobel, J., and Sinha, R., Clustering Near-Duplicate Images in Large Collections, 2007, MIR '07, pp. 21-30. * |
Jaimes, A., Chang, S., and Loui, A.C., Duplicate Detection in Consumer Photography and News Video, 2002, In Proc. MM Int. Conf. on Multimedia, pp. 423-424. * |
Jain, N., Dahlin, M., and Tewari, R., Using Bloom Filters to Refine Web Search Results, 2005, In Proc. 7th WebDB, pp. 25-30. * |
Wang et al., "Filtering Image Spam with Near-Duplicate Detection," In Proc. of the Fourth Conference on Email Antispam EAS 2007, 10 pages. |
Wu, X., Ngo, C., Hauptmann, A.G., and Tan, H. Real-Time Near-Duplicate Elimination for Web Video Search with Content and Context, 2009, IEEE Transactions on Multimedia, vol. 11, No. 2, pp. 196-207. * |
Yang, H. and Callan, J., Near-Duplicate Detection by Instance-level Constrianed Clustering, 2006, SIGIR '06, pp. 421-428. * |
Cited By (17)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130067364A1 (en) * | 2011-09-08 | 2013-03-14 | Microsoft Corporation | Presenting search result items having varied prominence |
US9335883B2 (en) * | 2011-09-08 | 2016-05-10 | Microsoft Technology Licensing, Llc | Presenting search result items having varied prominence |
US9330079B1 (en) * | 2012-05-01 | 2016-05-03 | Amazon Technologies, Inc. | Systems and methods for blocking data management for distributed content delivery for interactive documents |
US20140279170A1 (en) * | 2013-03-15 | 2014-09-18 | Fashion For Globe Llc | Systems and methods for an online fashion design marketplace |
US11205209B2 (en) * | 2013-03-15 | 2021-12-21 | Fashion For Globe Llc | Methods for searching and obtaining clothing designs while discouraging copying |
US10592548B2 (en) | 2015-08-17 | 2020-03-17 | Adobe Inc. | Image search persona techniques and systems |
US10366433B2 (en) | 2015-08-17 | 2019-07-30 | Adobe Inc. | Methods and systems for usage based content search results |
US10475098B2 (en) | 2015-08-17 | 2019-11-12 | Adobe Inc. | Content creation suggestions using keywords, similarity, and social networks |
US9911172B2 (en) | 2015-08-17 | 2018-03-06 | Adobe Systems Incorporated | Content creation and licensing control |
US10878021B2 (en) | 2015-08-17 | 2020-12-29 | Adobe Inc. | Content search and geographical considerations |
US11048779B2 (en) | 2015-08-17 | 2021-06-29 | Adobe Inc. | Content creation, fingerprints, and watermarks |
US9715714B2 (en) | 2015-08-17 | 2017-07-25 | Adobe Systems Incorporated | Content creation and licensing control |
US11288727B2 (en) | 2015-08-17 | 2022-03-29 | Adobe Inc. | Content creation suggestions using failed searches and uploads |
US11055344B2 (en) | 2018-03-21 | 2021-07-06 | Walmart Apollo, Llc | Product image evaluation system and method |
US10853983B2 (en) | 2019-04-22 | 2020-12-01 | Adobe Inc. | Suggestions to enrich digital artwork |
CN113052245A (en) * | 2021-03-30 | 2021-06-29 | 重庆紫光华山智安科技有限公司 | Image clustering method and device, electronic equipment and storage medium |
CN113052245B (en) * | 2021-03-30 | 2023-08-25 | 重庆紫光华山智安科技有限公司 | Image clustering method and device, electronic equipment and storage medium |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8582872B1 (en) | Place holder image detection via image clustering | |
US11693902B2 (en) | Relevance-based image selection | |
US10394878B2 (en) | Associating still images and videos | |
US11816888B2 (en) | Accurate tag relevance prediction for image search | |
US10043109B1 (en) | Attribute similarity-based search | |
CN107085585B (en) | Accurate tag relevance prediction for image search | |
US9558213B2 (en) | Refinement shape content search | |
US10282431B1 (en) | Image similarity-based group browsing | |
US8787679B1 (en) | Shape-based search of a collection of content | |
US10438050B2 (en) | Image analysis device, image analysis system, and image analysis method | |
US8433140B2 (en) | Image metadata propagation | |
AU2011210535B2 (en) | Joint embedding for item association | |
US8682071B1 (en) | Contour detection and image classification | |
US8447107B1 (en) | Processing and comparing images | |
US10380461B1 (en) | Object recognition | |
US8788503B1 (en) | Content identification | |
WO2019080411A1 (en) | Electrical apparatus, facial image clustering search method, and computer readable storage medium | |
US20160188633A1 (en) | A method and apparatus for tracking microblog messages for relevancy to an entity identifiable by an associated text and an image | |
WO2011054002A2 (en) | Content-based image search | |
US9424466B2 (en) | Shoe image retrieval apparatus and method using matching pair | |
US8208696B2 (en) | Relation tree | |
JP5971722B2 (en) | Method for determining transformation matrix of hash function, hash type approximate nearest neighbor search method using the hash function, apparatus and computer program thereof | |
JP2020098521A (en) | Information processing device, data extraction method, and data extraction program | |
JP2020140488A (en) | Information processing device, information processing method, and program | |
TW202004519A (en) | Method for automatically classifying images |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:IOFFE, SERGEY;BENGIO, SAMY;CHINEN, TROY;AND OTHERS;SIGNING DATES FROM 20110628 TO 20110629;REEL/FRAME:026531/0432 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
CC | Certificate of correction | ||
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0299Effective date: 20170929 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20211112 |
|
AS | Assignment |
Owner name: XEROX CORPORATION, CONNECTICUTFree format text: RELEASE BY SECURED PARTY;ASSIGNOR:JPMORGAN CHASE BANK, N.A. AS SUCCESSOR-IN-INTEREST ADMINISTRATIVE AGENT AND COLLATERAL AGENT TO JPMORGAN CHASE BANK;REEL/FRAME:066728/0193Effective date: 20220822 |
US11039138B1 - Adaptive coding of prediction modes using probability distributions - Google Patents
Adaptive coding of prediction modes using probability distributions Download PDFInfo
- Publication number
- US11039138B1 US11039138B1 US13/415,299 US201213415299A US11039138B1 US 11039138 B1 US11039138 B1 US 11039138B1 US 201213415299 A US201213415299 A US 201213415299A US 11039138 B1 US11039138 B1 US 11039138B1
- Authority
- US
- United States
- Prior art keywords
- block
- probability distribution
- prediction
- prediction mode
- current block
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/12—Selection from among a plurality of transforms or standards, e.g. selection between discrete cosine transform [DCT] and sub-band transform or selection between H.263 and H.264
- H04N19/122—Selection of transform size, e.g. 8x8 or 2x4x8 DCT; Selection of sub-band transforms of varying structure or type
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/157—Assigned coding mode, i.e. the coding mode being predefined or preselected to be further used for selection of another element or parameter
- H04N19/159—Prediction type, e.g. intra-frame, inter-frame or bidirectional frame prediction
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/13—Adaptive entropy coding, e.g. adaptive variable length coding [AVLC] or context adaptive binary arithmetic coding [CABAC]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/17—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object
- H04N19/176—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object the region being a block, e.g. a macroblock
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/103—Selection of coding mode or of prediction mode
- H04N19/11—Selection of coding mode or of prediction mode among a plurality of spatial predictive coding modes
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/60—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding
- H04N19/61—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using transform coding in combination with predictive coding
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/90—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using coding techniques not provided for in groups H04N19/10-H04N19/85, e.g. fractals
- H04N19/91—Entropy coding, e.g. variable length coding [VLC] or arithmetic coding
Definitions
- This disclosure relates to video encoding and decoding.
- Digital video can be used for various applications including, for example, video conferencing, high definition video entertainment, video advertisements, or sharing of user-generated videos.
- a digital video stream can contain a large amount of data and consume a significant amount of computing and/or communication resources of a computing device for processing, transmission and/or storage of the video data.
- One aspect of the disclosed embodiments is a method for encoding a frame in a video stream, the frame having a plurality of blocks including a current block.
- the method includes selecting, for the current block, a prediction mode from a plurality of prediction modes; identifying, for the current block, a quantization value; selecting, for the current block, a probability distribution from a plurality of probability distributions based on the identified quantization value using a processor; and entropy encoding the selected prediction mode using the selected probability distribution.
- Each of the plurality of probability distributions corresponds to a probability of occurrence of each of the plurality of prediction modes.
- Another aspect of the disclosed embodiments is a method for encoding a frame in a video stream, the frame having a plurality of blocks including a current block.
- the method includes selecting, for each of at least some of the blocks in the frame, a prediction mode from a plurality of prediction modes; determining, for each of the plurality of prediction modes, a count based on the frequency of selected prediction modes in the frame; selecting, for the frame, a probability distribution from a plurality of probability distributions based on the counts; entropy encoding, for the current block, the selected prediction mode using the selected probability distribution; and encoding a probability distribution value indicating the selected probability distribution.
- the apparatus includes a memory and at least one processor configured to execute instructions stored in the memory to select, for a current block of the plurality of blocks, a prediction mode from a plurality of prediction modes; identify, for the current block, a quantization value; select, for the current block, a probability distribution from a plurality of probability distributions based on the identified quantization value using a processor; and entropy encode the selected prediction mode using the selected probability distribution.
- the apparatus includes a memory and at least one processor configured to execute instructions stored in the memory to select, for each of at least some of the blocks in the frame, a prediction mode from a plurality of prediction modes; determine, for each of the plurality of prediction modes, a count based on the frequency of selected prediction modes in the frame; select, for the frame, a probability distribution from a plurality of probability distributions based on the counts; entropy encode, for the current block, the selected prediction mode using the selected probability distribution; and encode a probability distribution value indicating the selected probability distribution.
- FIG. 1 is a schematic of a video encoding and decoding system
- FIG. 2 is a diagram of a typical video stream to be encoded and decoded
- FIG. 3 is a block diagram of a video compression system in accordance with one embodiment
- FIG. 4 is a block diagram of a video decompression system in accordance with another embodiment
- FIG. 5 is a flow diagram of an example method of operation for encoding a video stream in accordance with an embodiment of this disclosure
- FIG. 6 is a diagram of an example of probability distributions used in encoding the video stream in accordance with one embodiment of this disclosure
- FIG. 7 is a diagram of another example of probability distributions used in encoding the video stream in accordance with one embodiment of this disclosure.
- FIG. 8 is a flow diagram of an example method of operation for encoding a video stream in accordance with one embodiment of this disclosure
- FIGS. 9 and 10 are diagrams of an example of selecting a probability distribution from the probability distributions in FIG. 6 using the example method of operation in FIG. 8 in accordance with one embodiment of this disclosure.
- FIG. 11 is a flow diagram of an example method of operation for decoding a video stream in accordance with one embodiment of this disclosure.
- Digital video is used for various purposes including, for example, remote business meetings via video conferencing, high definition video entertainment, video advertisements, and sharing of user-generated videos.
- Digital video streams can be in formats such as present and future versions of VPx and H.264.
- a video stream can include a video sequence having a number of frames.
- a frame can include a set of blocks, which can contain data corresponding to a pixel group in the frame.
- a block can be encoded using at least one prediction mode. The prediction mode can be selected from multiple prediction modes.
- Intra prediction is a technique used in modern image/video compression schemes. Intra prediction uses pixel values from prior-coded blocks within a same image frame to form a predictor block for a current block. The predictor block is subtracted from the current block; the difference, i.e., a residue block, is then encoded and transmitted to decoders.
- Image or video codecs may support many different intra prediction modes; each image block can use one of the prediction modes that provide a predictor block that is most similar to the current block to minimize the information to be encoded in the residue.
- the prediction mode for each block can also be encoded and transmitted, so a decoder can use same prediction mode(s) to form prediction blocks in the decoding and reconstruction process.
- intra prediction modes are encoded using a fixed distribution.
- This disclosure includes systems, methods and apparatuses to adaptively encode intra prediction modes using probability distributions, such as to adaptively encode intra prediction modes using probability distributions dependent on quantization parameters.
- the probability distribution can be selected from multiple probability distributions by one of the methods described below. For example, the probability distribution can be selected by identifying a quantization value for the block, and using the quantization value to select a probability distribution from multiple probability distributions.
- the probability distribution can also be selected by comparing the frequency of each prediction mode's occurrences with the probability distributions and selecting the probability distribution that uses the least amount of data to encode the prediction modes. Accordingly, the prediction mode itself can be entropy encoded using a probability distribution. An index value indicative of the selected prediction distribution can also be encoded.
- FIG. 1 is a schematic of a video encoding and decoding system 10 .
- An exemplary transmitting station 12 can be, for example, a computing device having an internal configuration of hardware including a processor such as a central processing unit (CPU) 14 and a memory 16 .
- the CPU 14 can be a controller for controlling the operations of the transmitting station 12 .
- the CPU 14 is connected to the memory 16 by, for example, a memory bus.
- the memory 16 can be random access memory (RAM) or any other suitable memory device.
- RAM random access memory
- the memory 16 can store data and program instructions which are used by the CPU 14 .
- Other suitable implementations of the transmitting station 12 are possible.
- the term “computing device” includes any device capable of processing information including without limitation: servers, hand-held devices, laptop computers, desktop computers, special purpose computers, and general purpose computers programmed to perform the techniques described herein.
- a network 28 connects the transmitting station 12 and a receiving station 30 for encoding and decoding of the video stream.
- the video stream can be encoded in the transmitting station 12 and the encoded video stream can be decoded in the receiving station 30 .
- the network 28 can, for example, be the Internet.
- the network 28 can also be a local area network (LAN), wide area network (WAN), virtual private network (VPN), a mobile phone network, or any other means of transferring the video stream from the transmitting station 12 .
- the receiving station 30 can be a computer having an internal configuration of hardware including a processor such as a central processing unit (CPU) 32 and a memory 34 .
- the CPU 32 is a controller for controlling the operations of the receiving station 30 .
- the CPU 32 can be connected to the memory 34 by, for example, a memory bus.
- the memory 34 can be RAM or any other suitable memory device.
- the memory 34 stores data and program instructions which are used by the CPU 32 . Other suitable implementations of the receiving station 30 are possible.
- a display 36 configured to display a video stream can be connected to the receiving station 30 .
- the display 36 can be implemented in various ways, including by a liquid crystal display (LCD), a light emitting diode display (LED), or a cathode-ray tube (CRT).
- the display 36 is coupled to CPU 32 and can be configured to display a rendering 38 of a video stream decoded by a decoder at the receiving station 30 .
- a video stream can be encoded and then stored for transmission at a later time by the receiving station 30 or any other device having memory.
- the receiving station 30 receives (e.g., via network 28 , a computer bus, and/or some communication pathway) the encoded video stream and stores the video stream for later decoding.
- additional components can be added to the encoder and decoder system 10 .
- a display or a video camera can be attached to the transmitting station 12 to capture the video stream to be encoded.
- FIG. 2 is a diagram of a typical video stream 50 to be encoded and decoded.
- the video stream 50 includes a video sequence 52 .
- the video sequence 52 includes a number of adjacent frames 54 . While three frames are depicted in adjacent frames 54 , the video sequence 52 can include any number of adjacent frames.
- the adjacent frames 54 can then be further subdivided into a single frame 56 .
- the single frame 56 can be divided into a set of blocks 58 , which can contain data corresponding to, for example, a 16 ⁇ 16 group of pixels in the frame 56 .
- the blocks 58 can also be of any other suitable size such as 16 ⁇ 8 pixel groups or 8 ⁇ 16 pixel groups.
- block can include a macroblock, a segment, a slice, or any other portion of a frame.
- a frame, a block, a pixel, or a combination thereof can include display information, such as luminance information, chrominance information, or any other information that can be used to store, modify, communicate, or display the video stream or a portion thereof.
- FIG. 3 is a block diagram of an encoder 70 in accordance with one embodiment.
- the encoder 70 can be implemented, as described above, in the transmitting station 12 such as by providing a computer software program stored in memory 16 , for example.
- the computer software program can include machine instructions that, when executed by CPU 14 , cause transmitting station 12 to encode video data.
- Encoder 70 can also be implemented as specialized hardware in, for example, transmitting station 12 .
- the encoder 70 encodes an input video stream 50 .
- the encoder 70 has the following stages to perform the various functions in a forward path (shown by the solid connection lines) to produce an encoded or a compressed bitstream 88 : an intra/inter prediction stage 72 , a transform stage 74 , a quantization stage 76 , and an entropy encoding stage 78 .
- the encoder 70 also includes a reconstruction path (shown by the dotted connection lines) to reconstruct a frame for encoding of further blocks.
- the encoder 70 has the following stages to perform the various functions in the reconstruction path: a dequantization stage 80 , an inverse transform stage 82 , a reconstruction stage 84 , and a loop filtering stage 86 .
- Other structural variations of the encoder 70 can be used to encode the video stream 50 .
- each frame 56 within the video stream 50 is processed in units of blocks.
- each block can be encoded using either intra-frame prediction (i.e., within a single frame) or inter-frame prediction (i.e. from frame to frame). In either case, a prediction block can be formed.
- intra-prediction a prediction block can be formed from samples in the current frame that have been previously encoded and reconstructed.
- inter-prediction a prediction block can be formed from samples in one or more previously constructed reference frames.
- the prediction block can be subtracted from the current block at the intra/inter prediction stage 72 to produce a residual block (residual).
- the transform stage 74 transforms the residual into transform coefficients in, for example, the frequency domain.
- block-based transforms include the Karhunen-Loève Transform (KLT), the Discrete Cosine Transform (“DCT”), and the Singular Value Decomposition Transform (“SVD”).
- KLT Karhunen-Loève Transform
- DCT Discrete Cosine Transform
- SVD Singular Value Decomposition Transform
- the DCT transforms the block into the frequency domain.
- the transform coefficient values are based on spatial frequency, with the lowest frequency (e.g., DC) coefficient at the top-left of the matrix and the highest frequency coefficient at the bottom-right of the matrix.
- the quantization stage 76 converts the transform coefficients into discrete quantum values, which are referred to as quantized transform coefficients or quantization levels.
- the quantized transform coefficients are then entropy encoded by the entropy encoding stage 78 .
- the entropy-encoded coefficients, together with the information used to decode the block, such as the type of prediction used, motion vectors, and quantization value, are then output to the compressed bitstream 88 .
- the compressed bitstream 88 can be formatted using various techniques, such as run-length encoding (RLE) and zero-run coding.
- the reconstruction path in FIG. 3 can be used to provide both the encoder 70 and a decoder 100 (described below) with the same reference frames to decode the compressed bitstream 88 .
- the reconstruction path performs functions that are similar to functions that take place during the decoding process that are discussed in more detail below, including dequantizing the quantized transform coefficients at the dequantization stage 80 and inverse transforming the dequantized transform coefficients at the inverse transform stage 82 to produce a derivative residual block (derivative residual).
- the prediction block that was predicted at the intra/inter prediction stage 72 can be added to the derivative residual to create a reconstructed block.
- the loop filtering stage 86 can be applied to the reconstructed block to reduce distortion such as blocking artifacts.
- encoder 70 can be used to encode the compressed bitstream 88 .
- a non-transform based encoder 70 can quantize the residual block directly without the transform stage 74 .
- an encoder 70 can have the quantization stage 76 and the dequantization stage 80 combined into a single stage.
- FIG. 4 is a block diagram of a decoder 100 in accordance with another embodiment.
- the decoder 100 can be implemented, for example, in the receiving station 30 , such as by providing a computer software program stored in memory for example.
- the computer software program can include machine instructions that, when executed by CPU 32 , cause receiving station 30 to decode video data in the manner described in FIG. 4 .
- Decoder 100 can also be implemented as specialized hardware included, for example, in transmitting station 12 or receiving station 30 .
- the decoder 100 similar to the reconstruction path of the encoder 70 discussed above, includes in one example the following stages to perform various functions to produce an output video stream 116 from the compressed bitstream 88 : an entropy decoding stage 102 , a dequantization stage 104 , an inverse transform stage 106 , an intra/inter prediction stage 108 , a reconstruction stage 110 , a loop filtering stage 112 and a deblocking filtering stage 114 .
- Other structural variations of the decoder 100 can be used to decode the compressed bitstream 88 .
- the data elements within the compressed bitstream 88 can be decoded by the entropy decoding stage 102 (using, for example, Context Adaptive Binary Arithmetic Decoding) to produce a set of quantized transform coefficients.
- the dequantization stage 104 dequantizes the quantized transform coefficients, and the inverse transform stage 106 inverse transforms the dequantized transform coefficients to produce a derivative residual that can be identical to that created by the reconstruction stage 84 in the encoder 70 .
- the decoder 100 can use the intra/inter prediction stage 108 to create the same prediction block as was created in the encoder 70 .
- the prediction block can be added to the derivative residual to create a reconstructed block.
- the loop filtering stage 112 can be applied to the reconstructed block to reduce blocking artifacts.
- the deblocking filtering stage 114 can be applied to the reconstructed block to reduce blocking distortion, and the result is output as the output video stream 116 .
- decoder 100 can be used to decode the compressed bitstream 88 .
- the decoder 100 can produce the output video stream 116 without the deblocking filtering stage 114 .
- FIG. 5 is a flowchart showing an example method of operation 500 for encoding a video stream that can be implemented in an encoder such as encoder 70 in accordance with an embodiment.
- Method of operation 500 can be implemented, for example, as a software program that is executed by computing devices such as transmitting station 12 .
- the software program can include machine-readable instructions that are stored in a memory such as memory 16 or memory 34 , and that when executed by a processor, such as CPU 14 , cause the computing device to perform the method of operation 500 .
- Method of operation 500 can also be implemented using specialized hardware.
- Some computing devices can have multiple memories and/or multiple processors, and the steps of method of operation 500 can, in such instances, be distributed using different processors and/or memories.
- the transmitting station 12 can be the computing device performing the encoding and/or decoding
- the receiving station 30 can be the computing device performing the decoding.
- the method of operation 500 is depicted and described as a series of steps. However, steps in accordance with this disclosure can occur in various orders or concurrently. Furthermore, not all illustrated steps may be required to implement a method in accordance with the disclosed subject matter.
- a frame of video data is received by a computing device, such as, for example, transmitting station 30 that is implementing the method of operation 500 .
- the video data (also referred to herein as a video stream) has a plurality of blocks that in some cases can be organized into frames. Each frame can capture a scene with one or more objects, such as people, background elements, graphics, text, a blank wall, or any other information.
- Video data can be received in any number of ways, such as by receiving the video data over a network, over a cable, or by reading the video data from a primary memory or other storage device, including a disk drive or removable media such as CompactFlash (CF) card, Secure Digital (SD) card, or the like.
- CF CompactFlash
- SD Secure Digital
- a block from the plurality of blocks can be a macroblock, which can include, for example, a block of 16 ⁇ 16 pixels, a block of 16 ⁇ 8 pixels, a block of 8 ⁇ 8 pixels, a block of 4 ⁇ 4 pixels, or any other block included in the frame.
- the pixels can be luminance (luma) pixels or chrominance (chroma) pixels.
- a prediction mode is selected for a current block of the frame of video data.
- the current block can be any block in the frame.
- the selection of prediction mode for the current block can include, for example, determining a prediction mode that minimizes the encoding residual for the current block.
- the selected prediction mode can be used to encode the current block by using the video data to fill part or all of the pixels in a prediction block for the current block.
- the prediction mode can be selected from one of multiple intra prediction modes including, for example, DC prediction mode (which can also be referred to as DC_PRED), horizontal prediction mode (which can also be referred to as H_PRED), vertical prediction mode (which can also be referred to as V_PRED), true motion prediction mode (which can also be referred to as TM_PRED), 8 ⁇ 8 split mode (which can also be referred to as I8X8_PRED) and 4 ⁇ 4 split mode (which can also be referred to as B_PRED).
- DC prediction mode which can also be referred to as DC_PRED
- H_PRED horizontal prediction mode
- V_PRED vertical prediction mode
- true motion prediction mode which can also be referred to as TM_PRED
- 8 ⁇ 8 split mode which can also be referred to as I8X8_PRED
- 4 ⁇ 4 split mode which can also be referred to as B_PRED
- Other intra prediction modes are also possible.
- DC prediction mode a single value using the average of the pixels in a row
- each column of a current block can be filled with a copy of a column to the left of the current block.
- each row of a current block can be filled with a copy of a row above the current block.
- TM_PRED in addition to the row above the current block and the column to the left of the current block, TM_PRED uses the pixel P above and to the left of the block. Horizontal differences between pixels in the row above the current block (starting from P) are propagated using the pixels from the column to the left of the current block to start each row.
- each 16 ⁇ 16 area is further split into 4 8 ⁇ 8 sub-blocks with each 8 ⁇ 8 having its own prediction mode.
- each 16 ⁇ 16 area is further split into 16 4 ⁇ 4 sub-blocks with each 4 ⁇ 4 having its own prediction mode. The prediction block is then compared with or subtracted from pixels in the current block to form a residual.
- a quantization value is identified for the current block.
- the quantization value can be used in the quantization stage 76 to convert the transform coefficients of the current block into discrete quantum values, which are sometimes referred to as quantized transform coefficients.
- a frame can have one or more quantization values, which can be applied to the blocks within the frame to reduce the data to be encoded.
- each block or group of blocks can have a quantization value, which may or may not differ from block to block. For example, some blocks can have a higher quantization value than others, which can cause more data reduction at the quantization stage 76 when encoding the block.
- one or more quantization values can be associated with all the blocks within the frame. For example, one quantization value can be defined for the frame and stored in the corresponding header information for the frame.
- a probability distribution is selected from a plurality of probability distributions, based on the quantization value identified in step 506 .
- the probability distributions can be stored in a table, such as a lookup table 600 shown in FIG. 6 .
- the probability distribution can be selected based on factors other than the quantization value, such as, for example, frequencies of the prediction modes in the frame, as will be described next in the examples shown in FIG. 8-10 .
- FIG. 6 is a diagram of an example of probability distributions used in encoding the video stream in accordance with one embodiment of this disclosure.
- the example is shown in a lookup table 600 , the columns of which are formed by the prediction modes.
- table 600 there are six prediction modes: M1, M2, M3, M4, M5, M6.
- M1 corresponds to DC prediction mode.
- M2 corresponds to horizontal prediction mode.
- M3-M6 correspond to vertical prediction mode, True Motion prediction mode, 8 ⁇ 8 split mode, and 4 ⁇ 4 split mode respectively.
- Rows of lookup table 600 are formed by quantization parameters, such as eight quantization parameters Q1, Q2, . . . , Q8.
- Each quantization parameter such as Q1 can be indicative of a range of quantization values.
- the range can be a predetermined range of values.
- Each row in table 600 can correspond to a probability distribution of the prediction modes (such as M1-M6) for the quantization parameter associated with the row.
- Each probability distribution can correspond to a probability of occurrence of each of the prediction modes for the current block.
- values of the probability distributions in table 600 can be determined in advance by using empirical data, and can include normalized counts of occurrences of the prediction modes. For example, in some instances, if a block has a higher quantization value, it may be more likely associated with prediction mode such as M1-M4. On the other hand, if a block has a lower quantization value, it may be more likely associated with prediction modes M5 and M6.
- row Q1 (in this instance a low quantization value) of table 600 has a probability distribution of ⁇ 17, 6, 5, 2, 22, 203, which shows that there is a probability of 17 occurrences of prediction mode M1, and 6 occurrences of prediction mode M2, among all the possible occurrences (such as, for example, 256 occurrences).
- These correlations are merely exemplary and other correlations may be derived from empirical data.
- Probability distributions in table 600 can also be formulated in any other suitable manner. For example, the probability distributions can be selected at random or can be set by a user or programmer.
- Each quantization parameter such as Q1 can be indicative of a range of predetermined rang of quantization values.
- a quantization parameter e.g., Q1
- Q1 can be selected from the plurality of quantization parameters (e.g., Q1, Q2, . . . Q8) if the quantization value falls into the range indicated by the quantization parameter.
- the identified quantization parameter has a corresponding row of probability distribution in table 600 .
- the corresponding probability distribution is then selected.
- Each quantization parameter such as Q1 can be indicative of a range of quantization values. In the example of FIG.
- the corresponding row having probability distribution of ⁇ 17, 6, 5, 2, 22, 203 ⁇ can be selected from table 600 .
- the next block to be encoded can have a different quantization value, such as a value that falls into the range of Q2, and the probability distribution of ⁇ 27, 13, 13, 6, 27, 170 ⁇ corresponding to Q2 can be selected for the next block.
- the probability distributions can be implemented in other forms or formats.
- table 600 can include any number of prediction modes or quantization parameters.
- the quantization parameters can take different ranges of values. Instead of eight distributions, corresponding to the eight different quantization parameters, fewer or more number of distributions may be used, e.g., 4 or 16 different distributions.
- FIG. 7 is a diagram of another example of probability distributions used in encoding the video stream in accordance with one embodiment of this disclosure.
- a m ⁇ n table 700 can include m rows of quantization parameters and n columns of prediction modes.
- m, n, and the values for the probability distributions can take any value, and not necessarily the same values as in FIG. 6 .
- the rows can represent the prediction modes and the columns can represent the quantization parameters.
- the prediction mode selected at 504 is entropy-encoded using the identified probability distribution.
- the entropy coding can include schemes such as, for example, arithmetic coding. Other suitable schemes are possible (e.g., Huffman coding).
- the entropy-encoded prediction mode can be stored and/or transmitted with the current block. For example, the entropy-encoded prediction mode can be stored and transmitted in a header associated with the current block.
- the encoded video stream can be transmitted, stored, and/or further processed.
- the encoded video stream can be stored in a memory, such as memory 34 shown in FIG. 1 and transmitted to a decoder, such as decoder 100 shown in FIG. 4 .
- FIG. 8 is a flowchart showing an example method of operation 800 for encoding a video stream that can be implemented in an encoder such as encoder 70 in accordance with another embodiment.
- Method of operation 800 can be implemented, for example, as a software program that is executed by computing devices such as transmitting station 12 .
- the software program can include machine-readable instructions that are stored in a memory such as memory 16 or memory 34 , and that when executed by a processor, such as CPU 14 , cause the computing device to perform the method of operation 800 .
- Method of operation 800 can also be implemented using specialized hardware.
- Some computing devices can have multiple memories and/or multiple processors, and the steps of method of operation 800 can in such cases be distributed using different processors and/or memories.
- Use of the terms “processor” and “memory” in the singular encompasses computing devices that have one processor or one memory as well as devices having multiple processors or memories that can each be used in the performance of some but not necessarily all of the recited steps.
- a frame of video data is received by a computing device, such as receiving station 30 that is implementing the method of operation 800 .
- a prediction mode is selected for each of at least some of the blocks in the frame, such as a current block of the frame of video data.
- the current block can be any block of the frame of video data.
- the prediction mode is selected from one of multiple intra prediction modes such as, for example, DC prediction mode, horizontal prediction mode, vertical prediction mode, true motion prediction mode, 8 ⁇ 8 split mode and 4 ⁇ 4 split mode, as described above. Other intra prediction modes are also possible.
- the selection of the prediction mode for the current block can include, for example, determining a prediction mode that minimizes the encoding residual for the current block.
- the selected prediction mode can be used to encode the current block by using video data to fill part or all of the pixels in a prediction block for the current block.
- a count based on the frequency of selected prediction modes in the frame is determined for each of the plurality of prediction modes.
- the count based on the frequency for a particular prediction mode can be the number of times the particular prediction mode is selected (e.g., at 804 ) for the blocks in the frame, collectively. For example, consider a frame that includes 256 blocks. In one example, a first prediction mode is selected for seventy of the blocks; a second prediction mode is selected for thirty of the blocks; a third prediction mode is selected for forty of the blocks; a fourth prediction mode is selected for fifteen of the blocks; a fifth prediction mode is selected for twenty five of the blocks; and a sixth prediction mode is selected for seventy six of the blocks.
- a count based on the frequency of selected prediction modes can be determined for each of the prediction modes (e.g., first prediction mode, second prediction mode, etc.).
- the count can correspond to the number of times a particular prediction mode is selected (e.g., seventy, thirty, forty, etc.).
- a probability distribution is selected for the frame.
- the probability distribution can be selected from the probability distributions based on the count for each of the prediction modes in step 805 .
- the probability distributions can be stored in a table, such as lookup table 600 as shown in FIGS. 6, 9 and 10 or table 700 as shown in FIG. 7 .
- FIGS. 9 and 10 are diagrams of an example of selecting a probability distribution from the probability distributions shown in FIG. 6 using the example method of operation in FIG. 8 in accordance with one embodiment of this disclosure.
- counts of the prediction modes used in the frame are shown as ⁇ C1, C2, C3, C4, C5, C6 ⁇ .
- the counts of the prediction modes used in the frame can be ⁇ 70, 30, 40, 15, 25, 70 ⁇ .
- Selecting the probability distribution can include, for example, comparing the counts of prediction modes used in the frame with the rows of probability distributions in table 600 (as illustrated in FIG. 9 ) and identifying the row of probability distribution that requires least amount of data to encode the prediction modes in the frame.
- the selected probability distribution can be, for example, row Q6 ( ⁇ 73, 33, 36, 17, 20, 78 ⁇ ) in table 600 , as seen in FIG. 10 .
- the selection of row Q6 over the other rows can be based on, for example, comparing the counts of the prediction modes used in the frame ( ⁇ 70, 30, 40, 15, 25, 70 ⁇ ) with each row (e.g., Q1, Q2, Q3, Q4, Q5, Q6) and identifying that using the probability distribution ⁇ 73, 33, 36, 17, 20, 78 ⁇ in Q6 requires the least amount of data to encode the prediction modes in the frame.
- An index value indicative of the selected probability distribution can be identified. For example, an index value between 0-7 can be selected from table 600 indicative of which row in table 600 should be used when decoding the prediction modes.
- the index value can be transmitted in the video stream, and be used by the decoder such as decoder 100 to select a probability distribution from table 600 to decode the prediction modes.
- the prediction mode selected at 804 is entropy-encoded using the probability distribution selected at 806 .
- the entropy coding can include schemes such as, for example, arithmetic coding. Other schemes can also be used such as, for example, Hoffman coding.
- the entropy-encoded prediction mode can be stored and/or transmitted in a header associated with the current block.
- a probability distribution value indicating the identified probability of distribution is encoded.
- the probability distribution value can be the index value described above.
- the encoding can include, for example, entropy-encoding the probability distribution value.
- the encoded probability distribution value can be stored and/or transmitted as part (such as a header) of a compressed bitstream, which the frame is encoded into.
- the prediction modes can be intra prediction modes.
- the plurality of prediction modes can also include other prediction modes such as inter prediction modes.
- some of the prediction modes can be grouped together.
- prediction modes M1, M2, M3, M4 can be grouped into a single mode “GM0.”
- a second index can be created to further indicate individual prediction mode such as M1-M4 within the mode GM0.
- FIG. 11 is a flowchart of an example method of operation 1100 that decodes blocks using the encoded video data including the encoded prediction modes in accordance with one embodiment of this disclosure.
- Method of operation 1100 can be implemented in encoder 70 and/or decoder 100 to decode a video signal.
- Method of operation 1100 can be implemented, for example, as a software program that is executed by computing devices such as transmitting station 12 or receiving station 30 .
- the software program can include machine-readable instructions that are stored in a memory such as memory 16 or memory 34 , and that when executed by a processor, such as CPU 14 or CPU 32 , cause the computing device to perform the method of operation 1100 .
- Method of operation 1100 can also be implemented using specialized hardware. As explained above, some computing devices may have multiple memories and/or processors, and the steps of method of operation 1100 can in such cases be distributed using different processors and memories.
- a computing device such as receiving station 30 receives encoded video data, such as compressed bitstream 88 .
- the encoded video data can be received in any number of ways, such as by receiving the video data over a network, over a cable, or by reading the video data from a primary memory or other storage device, including a disk drive or removable media such as a DVD, CompactFlash (CF) card, Secure Digital (SD) card, or the like.
- the computing device identifies, in the encoded video data, at least one encoded frame.
- the computing device identifies, in the at least one encoded frame, an encoded block.
- the computing device identifies encoded prediction mode data in the encoded bitstream. Identifying the encoded prediction mode data can include, for example, extracting encoded prediction mode data from the bitstream, such as a header or portion of a header associated with a current segment, frame or block.
- the encoded prediction mode data can include, for example, the prediction mode selected for encoding of the current block, such as intra coding.
- the encoded prediction mode data can also include, for example, a probability distribution value such as an index value indicative of the probability distribution used for encoding the prediction mode data.
- the encoded prediction mode data can also include, for example, a quantization value for the current block.
- the computing device decodes the encoded prediction mode data.
- the computing device can use, for example, the quantization value identified at step 1108 to identify a probability distribution corresponding to the quantization parameter from a plurality of probability distributions.
- the quantization value can be the quantization value identified at step 506 when encoding the video data.
- the quantization parameter can be selected by examining into which range of values the quantization value falls.
- the probability distribution can be selected from the plurality of probability distributions at the decoder 100 .
- the computing device can use, for example, the probability distribution value identified at step 1108 to select the probability distribution from the plurality of probability distributions.
- the probability distribution value can be the probability distribution value used to indicate the probability distribution at the encoding stage in FIG. 8 .
- the plurality of probability distributions can be stored and/or accessed in a table such as a probability distribution table, or a matrix.
- the table can be a copy of, for example, table 600 .
- Table 600 can be transmitted from, for example, encoder 70 .
- the table 600 can also be predetermined and/or stored at the decoder 100 .
- the table for decoding the prediction mode can contain the same probability distribution values as those used in encoding the video data.
- the computing device decodes the identified encoded block using the decoded prediction mode data.
- a decoded video stream such as the output video stream 116 shown in FIG. 4 , can be generated.
- the decoded video stream can be formed by frames, including the frame that includes the decoded block generated at step 1112 .
- the decoded video stream can be stored, further processed, or both stored and further processed.
- the decoded video stream can be filtered, stored in a memory, such as the memory 34 shown in FIG. 1 , and/or displayed at a display, such as the display 36 shown in FIG. 1 .
- encoding and decoding illustrated above illustrate some exemplary encoding and decoding techniques. However, it is to be understood that encoding and decoding, as those terms are used in the claims, could mean compression, decompression, transformation, or any other processing or change of data.
- example or “exemplary” are used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as “example’ or “exemplary” is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather, use of the words “example” or “exemplary” is intended to present concepts in a concrete fashion.
- the term “or” is intended to mean an inclusive “or” rather than an exclusive “or”. That is, unless specified otherwise, or clear from context, “X includes A or B” is intended to mean any of the natural inclusive permutations.
- a computing device implementing the techniques disclosed herein can be realized in hardware, software, or any combination thereof including, for example, IP cores, ASICS, programmable logic arrays, optical processors, programmable logic controllers, microcode, microcontrollers, servers, microprocessors, digital signal processors or any other suitable circuit or other information processing device, now existing or hereafter developed.
- processor should be understood as encompassing any of the foregoing hardware, either singly or in combination.
- the terms “signal” and “data” are used interchangeably.
- the techniques described herein can be implemented using a general purpose computer/processor with a computer program that, when executed, carries out any of the respective methods, algorithms and/or instructions described herein.
- a special purpose computer/processor can be utilized which can contain specialized hardware for carrying out any of the methods, algorithms, or instructions described herein.
- the transmitting station 12 and receiving station 30 can, for example, be implemented on computers in a screencasting system.
- the transmitting station 12 can be implemented on a server and the receiving station 30 can be implemented on a device separate from the server, such as a hand-held communications device (i.e. a cell phone).
- the transmitting station 12 can encode content using an encoder 70 into an encoded video signal and transmit the encoded video signal to the communications device.
- the communications device can then decode the encoded video signal using a decoder 100 .
- the communications device can decode content stored locally on the communications device, i.e. content that was not transmitted by the transmitting station 12 .
- the receiving station 30 can be a generally stationary personal computer rather than a portable communications device and/or a device including an encoder 70 may also include a decoder 100 .
- all or a portion of embodiments of the present invention can take the form of a computer program product accessible from, for example, a computer-usable or computer-readable medium.
- a computer-usable or computer-readable medium can be any device that can, for example, tangibly contain, store, communicate, or transport the program for use by or in connection with any processor.
- the medium can be, for example, an electronic, magnetic, optical, electromagnetic, or a semiconductor device. Other suitable mediums are also available.
Abstract
A system, apparatus, and method for encoding and decoding a video image having a plurality of frames is disclosed. Encoding and decoding the video image can include selecting, for a current block, a prediction mode from a plurality of prediction modes; identifying, for the current block, a quantization value; selecting, for the current block, a probability distribution from a plurality of probability distributions based on the identified quantization value using a processor; and entropy encoding the selected prediction mode using the selected probability distribution.
Description
This disclosure relates to video encoding and decoding.
Digital video can be used for various applications including, for example, video conferencing, high definition video entertainment, video advertisements, or sharing of user-generated videos. A digital video stream can contain a large amount of data and consume a significant amount of computing and/or communication resources of a computing device for processing, transmission and/or storage of the video data.
Disclosed herein are embodiments of systems, methods, and apparatuses for encoding and decoding a video signal.
One aspect of the disclosed embodiments is a method for encoding a frame in a video stream, the frame having a plurality of blocks including a current block. The method includes selecting, for the current block, a prediction mode from a plurality of prediction modes; identifying, for the current block, a quantization value; selecting, for the current block, a probability distribution from a plurality of probability distributions based on the identified quantization value using a processor; and entropy encoding the selected prediction mode using the selected probability distribution. Each of the plurality of probability distributions corresponds to a probability of occurrence of each of the plurality of prediction modes.
Another aspect of the disclosed embodiments is a method for encoding a frame in a video stream, the frame having a plurality of blocks including a current block. The method includes selecting, for each of at least some of the blocks in the frame, a prediction mode from a plurality of prediction modes; determining, for each of the plurality of prediction modes, a count based on the frequency of selected prediction modes in the frame; selecting, for the frame, a probability distribution from a plurality of probability distributions based on the counts; entropy encoding, for the current block, the selected prediction mode using the selected probability distribution; and encoding a probability distribution value indicating the selected probability distribution.
Another aspect of the disclosed embodiments is an apparatus for coding a frame in a video stream, the frame having a plurality of blocks. The apparatus includes a memory and at least one processor configured to execute instructions stored in the memory to select, for a current block of the plurality of blocks, a prediction mode from a plurality of prediction modes; identify, for the current block, a quantization value; select, for the current block, a probability distribution from a plurality of probability distributions based on the identified quantization value using a processor; and entropy encode the selected prediction mode using the selected probability distribution.
Another aspect of the disclosed embodiments is an apparatus for coding a frame in a video stream, the frame having a plurality of blocks. The apparatus includes a memory and at least one processor configured to execute instructions stored in the memory to select, for each of at least some of the blocks in the frame, a prediction mode from a plurality of prediction modes; determine, for each of the plurality of prediction modes, a count based on the frequency of selected prediction modes in the frame; select, for the frame, a probability distribution from a plurality of probability distributions based on the counts; entropy encode, for the current block, the selected prediction mode using the selected probability distribution; and encode a probability distribution value indicating the selected probability distribution.
The various features, advantages and other uses of the present apparatus will become more apparent by referring to the following detailed description and drawings. The description herein makes reference to the accompanying drawings wherein like reference numerals refer to like parts throughout the several views, and wherein:
Digital video is used for various purposes including, for example, remote business meetings via video conferencing, high definition video entertainment, video advertisements, and sharing of user-generated videos. Digital video streams can be in formats such as present and future versions of VPx and H.264.
A video stream can include a video sequence having a number of frames. A frame can include a set of blocks, which can contain data corresponding to a pixel group in the frame. A block can be encoded using at least one prediction mode. The prediction mode can be selected from multiple prediction modes.
Intra prediction (also referred to herein as intra-prediction or intra-frame prediction) is a technique used in modern image/video compression schemes. Intra prediction uses pixel values from prior-coded blocks within a same image frame to form a predictor block for a current block. The predictor block is subtracted from the current block; the difference, i.e., a residue block, is then encoded and transmitted to decoders. Image or video codecs may support many different intra prediction modes; each image block can use one of the prediction modes that provide a predictor block that is most similar to the current block to minimize the information to be encoded in the residue. The prediction mode for each block can also be encoded and transmitted, so a decoder can use same prediction mode(s) to form prediction blocks in the decoding and reconstruction process.
In some codecs, intra prediction modes are encoded using a fixed distribution. However, experiments indicate that the distribution of intra prediction modes used in video encoding can change significantly depending on input content and quantization parameters. This disclosure includes systems, methods and apparatuses to adaptively encode intra prediction modes using probability distributions, such as to adaptively encode intra prediction modes using probability distributions dependent on quantization parameters. The probability distribution can be selected from multiple probability distributions by one of the methods described below. For example, the probability distribution can be selected by identifying a quantization value for the block, and using the quantization value to select a probability distribution from multiple probability distributions. The probability distribution can also be selected by comparing the frequency of each prediction mode's occurrences with the probability distributions and selecting the probability distribution that uses the least amount of data to encode the prediction modes. Accordingly, the prediction mode itself can be entropy encoded using a probability distribution. An index value indicative of the selected prediction distribution can also be encoded.
These and other examples are now described with reference to the accompanying drawings. FIG. 1 is a schematic of a video encoding and decoding system 10. An exemplary transmitting station 12 can be, for example, a computing device having an internal configuration of hardware including a processor such as a central processing unit (CPU) 14 and a memory 16. The CPU 14 can be a controller for controlling the operations of the transmitting station 12. The CPU 14 is connected to the memory 16 by, for example, a memory bus. The memory 16 can be random access memory (RAM) or any other suitable memory device. The memory 16 can store data and program instructions which are used by the CPU 14. Other suitable implementations of the transmitting station 12 are possible. Throughout this disclosure, the term “computing device” includes any device capable of processing information including without limitation: servers, hand-held devices, laptop computers, desktop computers, special purpose computers, and general purpose computers programmed to perform the techniques described herein.
A network 28 connects the transmitting station 12 and a receiving station 30 for encoding and decoding of the video stream. Specifically, the video stream can be encoded in the transmitting station 12 and the encoded video stream can be decoded in the receiving station 30. The network 28 can, for example, be the Internet. The network 28 can also be a local area network (LAN), wide area network (WAN), virtual private network (VPN), a mobile phone network, or any other means of transferring the video stream from the transmitting station 12.
The receiving station 30, in one example, can be a computer having an internal configuration of hardware including a processor such as a central processing unit (CPU) 32 and a memory 34. The CPU 32 is a controller for controlling the operations of the receiving station 30. The CPU 32 can be connected to the memory 34 by, for example, a memory bus. The memory 34 can be RAM or any other suitable memory device. The memory 34 stores data and program instructions which are used by the CPU 32. Other suitable implementations of the receiving station 30 are possible.
A display 36 configured to display a video stream can be connected to the receiving station 30. The display 36 can be implemented in various ways, including by a liquid crystal display (LCD), a light emitting diode display (LED), or a cathode-ray tube (CRT). The display 36 is coupled to CPU 32 and can be configured to display a rendering 38 of a video stream decoded by a decoder at the receiving station 30.
Other implementations of the encoder and decoder system 10 are possible. For example, one implementation can omit the network 28 and/or the display 36. In another implementation, a video stream can be encoded and then stored for transmission at a later time by the receiving station 30 or any other device having memory. In one implementation, the receiving station 30 receives (e.g., via network 28, a computer bus, and/or some communication pathway) the encoded video stream and stores the video stream for later decoding. In another implementation, additional components can be added to the encoder and decoder system 10. For example, a display or a video camera can be attached to the transmitting station 12 to capture the video stream to be encoded.
When the video stream 50 is presented for encoding, each frame 56 within the video stream 50 is processed in units of blocks. At the intra/inter prediction stage 72, each block can be encoded using either intra-frame prediction (i.e., within a single frame) or inter-frame prediction (i.e. from frame to frame). In either case, a prediction block can be formed. In the case of intra-prediction, a prediction block can be formed from samples in the current frame that have been previously encoded and reconstructed. In the case of inter-prediction, a prediction block can be formed from samples in one or more previously constructed reference frames.
Next, still referring to FIG. 3 , the prediction block can be subtracted from the current block at the intra/inter prediction stage 72 to produce a residual block (residual). The transform stage 74 transforms the residual into transform coefficients in, for example, the frequency domain. Examples of block-based transforms include the Karhunen-Loève Transform (KLT), the Discrete Cosine Transform (“DCT”), and the Singular Value Decomposition Transform (“SVD”). In one example, the DCT transforms the block into the frequency domain. In the case of DCT, the transform coefficient values are based on spatial frequency, with the lowest frequency (e.g., DC) coefficient at the top-left of the matrix and the highest frequency coefficient at the bottom-right of the matrix.
The quantization stage 76 converts the transform coefficients into discrete quantum values, which are referred to as quantized transform coefficients or quantization levels. The quantized transform coefficients are then entropy encoded by the entropy encoding stage 78. The entropy-encoded coefficients, together with the information used to decode the block, such as the type of prediction used, motion vectors, and quantization value, are then output to the compressed bitstream 88. The compressed bitstream 88 can be formatted using various techniques, such as run-length encoding (RLE) and zero-run coding.
The reconstruction path in FIG. 3 (shown by the dotted connection lines) can be used to provide both the encoder 70 and a decoder 100 (described below) with the same reference frames to decode the compressed bitstream 88. The reconstruction path performs functions that are similar to functions that take place during the decoding process that are discussed in more detail below, including dequantizing the quantized transform coefficients at the dequantization stage 80 and inverse transforming the dequantized transform coefficients at the inverse transform stage 82 to produce a derivative residual block (derivative residual). At the reconstruction stage 84, the prediction block that was predicted at the intra/inter prediction stage 72 can be added to the derivative residual to create a reconstructed block. The loop filtering stage 86 can be applied to the reconstructed block to reduce distortion such as blocking artifacts.
Other variations of the encoder 70 can be used to encode the compressed bitstream 88. For example, a non-transform based encoder 70 can quantize the residual block directly without the transform stage 74. In another embodiment, an encoder 70 can have the quantization stage 76 and the dequantization stage 80 combined into a single stage.
The decoder 100, similar to the reconstruction path of the encoder 70 discussed above, includes in one example the following stages to perform various functions to produce an output video stream 116 from the compressed bitstream 88: an entropy decoding stage 102, a dequantization stage 104, an inverse transform stage 106, an intra/inter prediction stage 108, a reconstruction stage 110, a loop filtering stage 112 and a deblocking filtering stage 114. Other structural variations of the decoder 100 can be used to decode the compressed bitstream 88.
When the compressed bitstream 88 is presented for decoding, the data elements within the compressed bitstream 88 can be decoded by the entropy decoding stage 102 (using, for example, Context Adaptive Binary Arithmetic Decoding) to produce a set of quantized transform coefficients. The dequantization stage 104 dequantizes the quantized transform coefficients, and the inverse transform stage 106 inverse transforms the dequantized transform coefficients to produce a derivative residual that can be identical to that created by the reconstruction stage 84 in the encoder 70. Using header information decoded from the compressed bitstream 88, the decoder 100 can use the intra/inter prediction stage 108 to create the same prediction block as was created in the encoder 70. At the reconstruction stage 110, the prediction block can be added to the derivative residual to create a reconstructed block. The loop filtering stage 112 can be applied to the reconstructed block to reduce blocking artifacts. The deblocking filtering stage 114 can be applied to the reconstructed block to reduce blocking distortion, and the result is output as the output video stream 116.
Other variations of the decoder 100 can be used to decode the compressed bitstream 88. For example, the decoder 100 can produce the output video stream 116 without the deblocking filtering stage 114.
At a step 502, a frame of video data is received by a computing device, such as, for example, transmitting station 30 that is implementing the method of operation 500. The video data (also referred to herein as a video stream) has a plurality of blocks that in some cases can be organized into frames. Each frame can capture a scene with one or more objects, such as people, background elements, graphics, text, a blank wall, or any other information. Video data can be received in any number of ways, such as by receiving the video data over a network, over a cable, or by reading the video data from a primary memory or other storage device, including a disk drive or removable media such as CompactFlash (CF) card, Secure Digital (SD) card, or the like. In one implementation, a block from the plurality of blocks can be a macroblock, which can include, for example, a block of 16×16 pixels, a block of 16×8 pixels, a block of 8×8 pixels, a block of 4×4 pixels, or any other block included in the frame. The pixels can be luminance (luma) pixels or chrominance (chroma) pixels.
In step 504, a prediction mode is selected for a current block of the frame of video data. The current block can be any block in the frame. The selection of prediction mode for the current block can include, for example, determining a prediction mode that minimizes the encoding residual for the current block. The selected prediction mode can be used to encode the current block by using the video data to fill part or all of the pixels in a prediction block for the current block.
The prediction mode can be selected from one of multiple intra prediction modes including, for example, DC prediction mode (which can also be referred to as DC_PRED), horizontal prediction mode (which can also be referred to as H_PRED), vertical prediction mode (which can also be referred to as V_PRED), true motion prediction mode (which can also be referred to as TM_PRED), 8×8 split mode (which can also be referred to as I8X8_PRED) and 4×4 split mode (which can also be referred to as B_PRED). Other intra prediction modes are also possible. In one implementation of DC prediction mode, a single value using the average of the pixels in a row above a current block and a column to the left of the current block can be used to predict the current block. In one implementation of horizontal prediction, each column of a current block can be filled with a copy of a column to the left of the current block. In one implementation of vertical prediction, each row of a current block can be filled with a copy of a row above the current block. In one implementation of TrueMotion prediction, in addition to the row above the current block and the column to the left of the current block, TM_PRED uses the pixel P above and to the left of the block. Horizontal differences between pixels in the row above the current block (starting from P) are propagated using the pixels from the column to the left of the current block to start each row. In one implementation of I8X8_PRED, each 16×16 area is further split into 4 8×8 sub-blocks with each 8×8 having its own prediction mode. In one implementation of B_PRED, each 16×16 area is further split into 16 4×4 sub-blocks with each 4×4 having its own prediction mode. The prediction block is then compared with or subtracted from pixels in the current block to form a residual.
In step 506, a quantization value is identified for the current block. The quantization value can be used in the quantization stage 76 to convert the transform coefficients of the current block into discrete quantum values, which are sometimes referred to as quantized transform coefficients. A frame can have one or more quantization values, which can be applied to the blocks within the frame to reduce the data to be encoded. In some examples, each block or group of blocks can have a quantization value, which may or may not differ from block to block. For example, some blocks can have a higher quantization value than others, which can cause more data reduction at the quantization stage 76 when encoding the block. In another example, one or more quantization values can be associated with all the blocks within the frame. For example, one quantization value can be defined for the frame and stored in the corresponding header information for the frame.
In step 508, a probability distribution is selected from a plurality of probability distributions, based on the quantization value identified in step 506. The probability distributions can be stored in a table, such as a lookup table 600 shown in FIG. 6 . In other embodiments, the probability distribution can be selected based on factors other than the quantization value, such as, for example, frequencies of the prediction modes in the frame, as will be described next in the examples shown in FIG. 8-10 .
Each row in table 600 can correspond to a probability distribution of the prediction modes (such as M1-M6) for the quantization parameter associated with the row. Each probability distribution can correspond to a probability of occurrence of each of the prediction modes for the current block. In some implementations, values of the probability distributions in table 600 can be determined in advance by using empirical data, and can include normalized counts of occurrences of the prediction modes. For example, in some instances, if a block has a higher quantization value, it may be more likely associated with prediction mode such as M1-M4. On the other hand, if a block has a lower quantization value, it may be more likely associated with prediction modes M5 and M6. As one example of this correlation, row Q1 (in this instance a low quantization value) of table 600 has a probability distribution of {17, 6, 5, 2, 22, 203, which shows that there is a probability of 17 occurrences of prediction mode M1, and 6 occurrences of prediction mode M2, among all the possible occurrences (such as, for example, 256 occurrences). These correlations are merely exemplary and other correlations may be derived from empirical data. Probability distributions in table 600 can also be formulated in any other suitable manner. For example, the probability distributions can be selected at random or can be set by a user or programmer.
Each quantization parameter such as Q1 can be indicative of a range of predetermined rang of quantization values. After identifying the quantization value (e.g., at 506), a quantization parameter (e.g., Q1) can be selected from the plurality of quantization parameters (e.g., Q1, Q2, . . . Q8) if the quantization value falls into the range indicated by the quantization parameter. The identified quantization parameter has a corresponding row of probability distribution in table 600. The corresponding probability distribution is then selected. Each quantization parameter such as Q1 can be indicative of a range of quantization values. In the example of FIG. 6 , when the quantization value of the current block falls into the range of quantization parameter Q1, the corresponding row having probability distribution of {17, 6, 5, 2, 22, 203} can be selected from table 600. In some examples, the next block to be encoded can have a different quantization value, such as a value that falls into the range of Q2, and the probability distribution of {27, 13, 13, 6, 27, 170} corresponding to Q2 can be selected for the next block.
In other embodiments, the probability distributions can be implemented in other forms or formats. For example, table 600 can include any number of prediction modes or quantization parameters. The quantization parameters can take different ranges of values. Instead of eight distributions, corresponding to the eight different quantization parameters, fewer or more number of distributions may be used, e.g., 4 or 16 different distributions.
Back to FIG. 5 , in step 510, the prediction mode selected at 504 is entropy-encoded using the identified probability distribution. The entropy coding can include schemes such as, for example, arithmetic coding. Other suitable schemes are possible (e.g., Huffman coding). The entropy-encoded prediction mode can be stored and/or transmitted with the current block. For example, the entropy-encoded prediction mode can be stored and transmitted in a header associated with the current block.
The encoded video stream can be transmitted, stored, and/or further processed. For example, the encoded video stream can be stored in a memory, such as memory 34 shown in FIG. 1 and transmitted to a decoder, such as decoder 100 shown in FIG. 4 .
At a step 802, a frame of video data is received by a computing device, such as receiving station 30 that is implementing the method of operation 800. In step 804, a prediction mode is selected for each of at least some of the blocks in the frame, such as a current block of the frame of video data. The current block can be any block of the frame of video data. The prediction mode is selected from one of multiple intra prediction modes such as, for example, DC prediction mode, horizontal prediction mode, vertical prediction mode, true motion prediction mode, 8×8 split mode and 4×4 split mode, as described above. Other intra prediction modes are also possible. The selection of the prediction mode for the current block can include, for example, determining a prediction mode that minimizes the encoding residual for the current block. The selected prediction mode can be used to encode the current block by using video data to fill part or all of the pixels in a prediction block for the current block.
In step 805, a count based on the frequency of selected prediction modes in the frame is determined for each of the plurality of prediction modes. The count based on the frequency for a particular prediction mode can be the number of times the particular prediction mode is selected (e.g., at 804) for the blocks in the frame, collectively. For example, consider a frame that includes 256 blocks. In one example, a first prediction mode is selected for seventy of the blocks; a second prediction mode is selected for thirty of the blocks; a third prediction mode is selected for forty of the blocks; a fourth prediction mode is selected for fifteen of the blocks; a fifth prediction mode is selected for twenty five of the blocks; and a sixth prediction mode is selected for seventy six of the blocks. A count based on the frequency of selected prediction modes can be determined for each of the prediction modes (e.g., first prediction mode, second prediction mode, etc.). The count can correspond to the number of times a particular prediction mode is selected (e.g., seventy, thirty, forty, etc.).
In step 806, a probability distribution is selected for the frame. The probability distribution can be selected from the probability distributions based on the count for each of the prediction modes in step 805. The probability distributions can be stored in a table, such as lookup table 600 as shown in FIGS. 6, 9 and 10 or table 700 as shown in FIG. 7 .
An index value indicative of the selected probability distribution can be identified. For example, an index value between 0-7 can be selected from table 600 indicative of which row in table 600 should be used when decoding the prediction modes. The index value can be transmitted in the video stream, and be used by the decoder such as decoder 100 to select a probability distribution from table 600 to decode the prediction modes.
Referring back to FIG. 8 , in step 808, the prediction mode selected at 804 is entropy-encoded using the probability distribution selected at 806. The entropy coding can include schemes such as, for example, arithmetic coding. Other schemes can also be used such as, for example, Hoffman coding. The entropy-encoded prediction mode can be stored and/or transmitted in a header associated with the current block.
In step 810, a probability distribution value indicating the identified probability of distribution is encoded. For example, the probability distribution value can be the index value described above. The encoding can include, for example, entropy-encoding the probability distribution value. The encoded probability distribution value can be stored and/or transmitted as part (such as a header) of a compressed bitstream, which the frame is encoded into.
The prediction modes can be intra prediction modes. In some implementations, the plurality of prediction modes can also include other prediction modes such as inter prediction modes.
In some embodiments, some of the prediction modes can be grouped together. For example, prediction modes M1, M2, M3, M4 can be grouped into a single mode “GM0.” In these embodiments, a second index can be created to further indicate individual prediction mode such as M1-M4 within the mode GM0.
At a step 1102, a computing device such as receiving station 30 receives encoded video data, such as compressed bitstream 88. The encoded video data can be received in any number of ways, such as by receiving the video data over a network, over a cable, or by reading the video data from a primary memory or other storage device, including a disk drive or removable media such as a DVD, CompactFlash (CF) card, Secure Digital (SD) card, or the like. At a step 1104, the computing device identifies, in the encoded video data, at least one encoded frame. At a step 1106, the computing device identifies, in the at least one encoded frame, an encoded block.
At a step 1108, the computing device identifies encoded prediction mode data in the encoded bitstream. Identifying the encoded prediction mode data can include, for example, extracting encoded prediction mode data from the bitstream, such as a header or portion of a header associated with a current segment, frame or block. The encoded prediction mode data can include, for example, the prediction mode selected for encoding of the current block, such as intra coding. The encoded prediction mode data can also include, for example, a probability distribution value such as an index value indicative of the probability distribution used for encoding the prediction mode data. The encoded prediction mode data can also include, for example, a quantization value for the current block.
At a step 1110, the computing device decodes the encoded prediction mode data. In one embodiment, the computing device can use, for example, the quantization value identified at step 1108 to identify a probability distribution corresponding to the quantization parameter from a plurality of probability distributions. The quantization value can be the quantization value identified at step 506 when encoding the video data. The quantization parameter can be selected by examining into which range of values the quantization value falls. The probability distribution can be selected from the plurality of probability distributions at the decoder 100. In one embodiment, the computing device can use, for example, the probability distribution value identified at step 1108 to select the probability distribution from the plurality of probability distributions. The probability distribution value can be the probability distribution value used to indicate the probability distribution at the encoding stage in FIG. 8 . The plurality of probability distributions can be stored and/or accessed in a table such as a probability distribution table, or a matrix. The table can be a copy of, for example, table 600. Table 600 can be transmitted from, for example, encoder 70. The table 600 can also be predetermined and/or stored at the decoder 100. The table for decoding the prediction mode can contain the same probability distribution values as those used in encoding the video data.
At a step 1112, the computing device decodes the identified encoded block using the decoded prediction mode data. A decoded video stream, such as the output video stream 116 shown in FIG. 4 , can be generated. The decoded video stream can be formed by frames, including the frame that includes the decoded block generated at step 1112. The decoded video stream can be stored, further processed, or both stored and further processed. For example, the decoded video stream can be filtered, stored in a memory, such as the memory 34 shown in FIG. 1 , and/or displayed at a display, such as the display 36 shown in FIG. 1 .
The embodiments or implementations of encoding and decoding described above illustrate some exemplary encoding and decoding techniques. However, it is to be understood that encoding and decoding, as those terms are used in the claims, could mean compression, decompression, transformation, or any other processing or change of data.
The words “example” or “exemplary” are used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as “example’ or “exemplary” is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather, use of the words “example” or “exemplary” is intended to present concepts in a concrete fashion. As used in this application, the term “or” is intended to mean an inclusive “or” rather than an exclusive “or”. That is, unless specified otherwise, or clear from context, “X includes A or B” is intended to mean any of the natural inclusive permutations. That is, if X includes A; X includes B; or X includes both A and B, then “X includes A or B” is satisfied under any of the foregoing instances. In addition, the articles “a” and “an” as used in this application and the appended claims should generally be construed to mean “one or more” unless specified otherwise or clear from context to be directed to a singular form. Moreover, use of the term “an embodiment” or “one embodiment” or “an implementation” or “one implementation” throughout is not intended to mean the same embodiment or implementation unless described as such.
A computing device implementing the techniques disclosed herein (and the algorithms, methods, instructions, etc. stored thereon and/or executed thereby) can be realized in hardware, software, or any combination thereof including, for example, IP cores, ASICS, programmable logic arrays, optical processors, programmable logic controllers, microcode, microcontrollers, servers, microprocessors, digital signal processors or any other suitable circuit or other information processing device, now existing or hereafter developed. In the claims, the term “processor” should be understood as encompassing any of the foregoing hardware, either singly or in combination. The terms “signal” and “data” are used interchangeably.
Further, in some implementations, for example, the techniques described herein can be implemented using a general purpose computer/processor with a computer program that, when executed, carries out any of the respective methods, algorithms and/or instructions described herein. In addition or alternatively, for example, a special purpose computer/processor can be utilized which can contain specialized hardware for carrying out any of the methods, algorithms, or instructions described herein.
In some implementations, the transmitting station 12 and receiving station 30 can, for example, be implemented on computers in a screencasting system. Alternatively, the transmitting station 12 can be implemented on a server and the receiving station 30 can be implemented on a device separate from the server, such as a hand-held communications device (i.e. a cell phone). In this instance, the transmitting station 12 can encode content using an encoder 70 into an encoded video signal and transmit the encoded video signal to the communications device. In turn, the communications device can then decode the encoded video signal using a decoder 100. Alternatively, the communications device can decode content stored locally on the communications device, i.e. content that was not transmitted by the transmitting station 12. Other suitable transmitting station 12 and receiving station 30 implementation schemes are available. For example, the receiving station 30 can be a generally stationary personal computer rather than a portable communications device and/or a device including an encoder 70 may also include a decoder 100.
Further, all or a portion of embodiments of the present invention can take the form of a computer program product accessible from, for example, a computer-usable or computer-readable medium. A computer-usable or computer-readable medium can be any device that can, for example, tangibly contain, store, communicate, or transport the program for use by or in connection with any processor. The medium can be, for example, an electronic, magnetic, optical, electromagnetic, or a semiconductor device. Other suitable mediums are also available.
Other implementations or embodiments are within the scope of the following claims.
Claims (6)
1. A method comprising:
generating, by a processor in response to instructions stored on a non-transitory computer readable medium, an encoded block by encoding a current block from a current frame from an input video stream, wherein encoding includes:
generating a prediction block for the current block using a prediction mode;
generating a residual block based on a difference between the current block and the prediction block;
generating transform coefficients by transforming the residual block;
generating quantized transform coefficients by quantizing the transform coefficients using a quantization value;
entropy encoding the quantized transform coefficients;
identifying a probability distribution from a plurality of probability distributions based on the quantization value; and
entropy encoding the prediction mode using the probability distribution.
2. The method of claim 1 , wherein identifying the probability distribution includes:
identifying an index value from a plurality of index values, the index value corresponding to a quantization range that includes the quantization value; and
identifying the probability distribution based on the index value.
3. The method of claim 2 , wherein the plurality of index values includes eight index values.
4. An apparatus comprising:
a non-transitory computer readable memory; and
a processor configured to execute instructions stored in the memory to:
generate an encoded block by encoding a current block from a current frame from an input video stream by:
generating a prediction block for the current block using a prediction mode;
generating a residual block based on a difference between the current block and the prediction block;
generating transform coefficients by transforming the residual block;
generating quantized transform coefficients by quantizing the transform coefficients using a quantization value;
entropy encoding the quantized transform coefficients;
identifying a probability distribution from a plurality of probability distributions based on the quantization value; and
entropy encode the prediction mode using the probability distribution.
5. The apparatus of claim 4 , wherein the processor is configured to execute the instructions to:
identify an index value from a plurality of index values, the index value corresponding to a quantization range that includes the quantization value; and
identify the probability distribution based on the index value.
6. The apparatus of claim 5 , wherein the plurality of index values includes eight index values.
Priority Applications (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/415,299 US11039138B1 (en) | 2012-03-08 | 2012-03-08 | Adaptive coding of prediction modes using probability distributions |
US17/340,293 US11627321B2 (en) | 2012-03-08 | 2021-06-07 | Adaptive coding of prediction modes using probability distributions |
US18/188,364 US20230232001A1 (en) | 2012-03-08 | 2023-03-22 | Adaptive coding of prediction modes using probability distributions |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/415,299 US11039138B1 (en) | 2012-03-08 | 2012-03-08 | Adaptive coding of prediction modes using probability distributions |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US17/340,293 Continuation US11627321B2 (en) | 2012-03-08 | 2021-06-07 | Adaptive coding of prediction modes using probability distributions |
Publications (1)
Publication Number | Publication Date |
---|---|
US11039138B1 true US11039138B1 (en) | 2021-06-15 |
Family
ID=76320810
Family Applications (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/415,299 Active 2035-09-19 US11039138B1 (en) | 2012-03-08 | 2012-03-08 | Adaptive coding of prediction modes using probability distributions |
US17/340,293 Active US11627321B2 (en) | 2012-03-08 | 2021-06-07 | Adaptive coding of prediction modes using probability distributions |
US18/188,364 Pending US20230232001A1 (en) | 2012-03-08 | 2023-03-22 | Adaptive coding of prediction modes using probability distributions |
Family Applications After (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US17/340,293 Active US11627321B2 (en) | 2012-03-08 | 2021-06-07 | Adaptive coding of prediction modes using probability distributions |
US18/188,364 Pending US20230232001A1 (en) | 2012-03-08 | 2023-03-22 | Adaptive coding of prediction modes using probability distributions |
Country Status (1)
Country | Link |
---|---|
US (3) | US11039138B1 (en) |
Cited By (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN114025162A (en) * | 2021-11-12 | 2022-02-08 | 安谋科技（中国）有限公司 | Entropy decoding method, medium, program product, and electronic device |
US20220067737A1 (en) * | 2020-09-03 | 2022-03-03 | Capital One Services, Llc | Systems and method for enhanced active machine learning through processing of partitioned uncertainty |
CN117556832A (en) * | 2023-11-23 | 2024-02-13 | 合肥综合性国家科学中心人工智能研究院(安徽省人工智能实验室) | Semantic constraint-based emotion support dialogue bidirectional generation method |
Citations (146)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JPS6192073A (en) | 1984-10-12 | 1986-05-10 | Hitachi Ltd | Picture data compression system |
US4710810A (en) | 1984-03-06 | 1987-12-01 | Nec Corporation | Predictive coding/decoding apparatus for video signal |
JPH02217088A (en) | 1989-02-17 | 1990-08-29 | Victor Co Of Japan Ltd | Prediction coding circuit among movement compensation frames |
JPH02272970A (en) | 1989-04-14 | 1990-11-07 | Sony Corp | Data processing circuit |
US5150209A (en) | 1990-05-11 | 1992-09-22 | Picturetel Corporation | Hierarchical entropy coded lattice threshold quantization encoding method and apparatus for image and video compression |
US5461423A (en) | 1992-05-29 | 1995-10-24 | Sony Corporation | Apparatus for generating a motion vector with half-pixel precision for use in compressing a digital motion picture signal |
JPH08280032A (en) | 1995-03-28 | 1996-10-22 | Daewoo Electron Co Ltd | Digital video signal encoding device using adaptive scanningtechnique |
US5650782A (en) | 1994-01-18 | 1997-07-22 | Daewoo Electronics Co Ltd. | Variable length coder using two VLC tables |
JPH09247682A (en) | 1996-03-08 | 1997-09-19 | Oki Electric Ind Co Ltd | Image coding method and image coder |
US5686962A (en) | 1994-07-30 | 1997-11-11 | Samsung Electronics Co., Ltd. | Motion image coder using pre-filter to reduce quantization error |
US5708473A (en) | 1994-08-30 | 1998-01-13 | Hughes Aircraft Company | Two stage video film compression method and system |
US5777680A (en) | 1995-06-30 | 1998-07-07 | Daewoo Electronics Co., Ltd. | Video signal encoding system controller for deciding an inter/intra mode, a field/frame DCT mode, and a quantization parameter |
US5818536A (en) | 1995-09-29 | 1998-10-06 | U.S. Philips Corporation | Motion vector selection using a cost function relating accuracy to bit rate |
US5886652A (en) | 1995-08-03 | 1999-03-23 | Ntt Mobile Communications Network, Inc. | Pseudo fixed data transmission device and method |
JPH11262018A (en) | 1998-03-09 | 1999-09-24 | Victor Co Of Japan Ltd | Motion compensation coder, motion compensation coding method and motion compensation recording medium therefor |
JPH11289544A (en) | 1998-04-02 | 1999-10-19 | Sony Corp | Motion detector and its method |
JPH11513205A (en) | 1995-07-11 | 1999-11-09 | テレフオンアクチーボラゲツト エル エム エリクソン（パブル） | Video coding device |
JPH11313332A (en) | 1999-03-12 | 1999-11-09 | Rca Thomson Licensing Corp | Video signal compression/release device for even number and odd number field data compressed independently |
US6157326A (en) | 1996-03-15 | 2000-12-05 | U.S. Philips Corporation | Method of and device for coding a digital information signal |
US6212234B1 (en) | 1997-06-04 | 2001-04-03 | Fuji Xerox Co., Ltd. | Color image encoding apparatus and color image decoding apparatus |
KR20010030916A (en) | 1997-10-02 | 2001-04-16 | 월터 디. 어마럴 | System and method for fixed-rate block-based image compression with inferred pixel values |
US6256423B1 (en) | 1998-09-18 | 2001-07-03 | Sarnoff Corporation | Intra-frame quantizer selection for video compression |
WO2001050770A2 (en) | 1999-12-28 | 2001-07-12 | Sony Electronics Inc. | Methods and apparatus for motion estimation using neighboring macroblocks |
US20010022815A1 (en) | 1995-05-26 | 2001-09-20 | Rohit Agarwal | Temporal tile staggering for block based video compression |
US6314208B1 (en) | 1998-07-21 | 2001-11-06 | Hewlett-Packard Company | System for variable quantization in JPEG for compound documents |
US20020009153A1 (en) | 2000-05-17 | 2002-01-24 | Samsung Electronics Co., Ltd. | Variable length coding and decoding methods and apparatuses using plural mapping table |
US20020036705A1 (en) | 2000-06-13 | 2002-03-28 | Samsung Electronics Co., Ltd. | Format converter using bi-directional motion vector and method thereof |
JP2002141806A (en) | 2000-10-31 | 2002-05-17 | Hitachi Ltd | Variable length code decoding device |
US20020071485A1 (en) | 2000-08-21 | 2002-06-13 | Kerem Caglar | Video coding |
US20020080871A1 (en) | 2000-10-03 | 2002-06-27 | Realtime Data, Llc | System and method for data feed acceleration and encryption |
US6414995B2 (en) | 1999-07-29 | 2002-07-02 | Mitsubishi Denki Kabushiki Kaisha | Motion vector detection system |
US6418166B1 (en) | 1998-11-30 | 2002-07-09 | Microsoft Corporation | Motion estimation and block matching pattern |
US6434197B1 (en) | 1999-01-07 | 2002-08-13 | General Instrument Corporation | Multi-functional transcoder for compressed bit streams |
US6501860B1 (en) | 1998-01-19 | 2002-12-31 | Canon Kabushiki Kaisha | Digital signal coding and decoding based on subbands |
JP2003046944A (en) | 2001-08-02 | 2003-02-14 | Sony Corp | Signal processing equipment and method therefor, recording equipment and method therefor, regenerating equipment and method therefor, video camera, and image monitor |
US6522784B1 (en) | 2000-04-11 | 2003-02-18 | International Business Machines Corporation | Enhanced compression of gray-level images |
WO2003026315A1 (en) | 2001-09-14 | 2003-03-27 | Ntt Docomo, Inc. | Coding method, decoding method, coding apparatus, decoding apparatus, image processing system, coding program, and decoding program |
US20030081850A1 (en) | 2001-09-14 | 2003-05-01 | Nokia Corporation | Method and system for context-based adaptive binary arithmetic coding |
US6570924B1 (en) | 1998-11-20 | 2003-05-27 | Interval Research Corp | Low cost video compression using fast, modified Z-coding of wavelet pyramids |
JP2003235044A (en) | 2002-02-08 | 2003-08-22 | Nippon Telegr & Teleph Corp <Ntt> | Moving picture encoding method, moving picture decoding method, execution programs for the methods, and recording medium with the execution programs recorded thereon |
US20030185455A1 (en) * | 1999-02-04 | 2003-10-02 | Goertzen Kenbe D. | Digital image processor |
US20030215018A1 (en) | 2002-05-14 | 2003-11-20 | Macinnis Alexander G. | System and method for transcoding entropy-coded bitstreams |
US6661842B1 (en) | 2000-09-22 | 2003-12-09 | General Dynamics Decision Systems, Inc. | Methods and apparatus for error-resilient video coding |
US6661925B1 (en) | 2000-03-22 | 2003-12-09 | Board Of Supervisors Of Louisiana State University & Agricultural & Mechanical College | Functional set compression |
US20040013308A1 (en) | 2002-07-18 | 2004-01-22 | Lg Electronics Inc. | Calculation method for prediction motion vector |
US20040120398A1 (en) | 2002-12-19 | 2004-06-24 | Ximin Zhang | System and method for adaptive field and frame video encoding using rate-distortion characteristics |
US20040131117A1 (en) | 2003-01-07 | 2004-07-08 | Sheraizin Vitaly S. | Method and apparatus for improving MPEG picture compression |
US20040234144A1 (en) | 2002-04-26 | 2004-11-25 | Kazuo Sugimoto | Image encoding device, image decoding device, image encoding method, image decoding method, image encoding program, and image decoding program |
US20040258156A1 (en) * | 2002-11-22 | 2004-12-23 | Takeshi Chujoh | Video encoding/decoding method and apparatus |
US6907079B2 (en) | 2002-05-01 | 2005-06-14 | Thomson Licensing S.A. | Deblocking filter conditioned on pixel brightness |
US6917651B1 (en) | 2000-01-28 | 2005-07-12 | Samsung Electronics Co., Ltd. | Variable length coding method and apparatus |
US20050152459A1 (en) | 2004-01-14 | 2005-07-14 | Austin Lobo | Decoding method and decoding apparatus |
US20050180500A1 (en) | 2001-12-31 | 2005-08-18 | Stmicroelectronics Asia Pacific Pte Ltd | Video encoding |
US20050192085A1 (en) * | 2004-02-27 | 2005-09-01 | Aruze Corp. | Gaming machine with game effect |
US20050276323A1 (en) | 2002-09-27 | 2005-12-15 | Vanguard Software Solutions, Inc. | Real-time video coding/decoding |
US20060001557A1 (en) | 2003-11-24 | 2006-01-05 | Tom Dong Shiang | Computer-implemented method for compressing image files |
US6985527B2 (en) | 2001-03-07 | 2006-01-10 | Pts Corporation | Local constraints for motion matching |
US7010032B1 (en) | 1999-03-12 | 2006-03-07 | Kabushiki Kaisha Toshiba | Moving image coding apparatus and decoding apparatus |
US20060098738A1 (en) | 2003-01-09 | 2006-05-11 | Pamela Cosman | Video encoding methods and devices |
US20060126724A1 (en) | 2004-12-10 | 2006-06-15 | Lsi Logic Corporation | Programmable quantization dead zone and threshold for standard-based H.264 and/or VC1 video encoding |
US20060133481A1 (en) * | 2004-12-22 | 2006-06-22 | Kabushiki Kaisha Toshiba | Image coding control method and device |
US7085425B2 (en) | 1997-09-23 | 2006-08-01 | Telefonaktiebolaget Lm Ericsson (Publ) | Embedded DCT-based still image coding algorithm |
US20060203916A1 (en) | 2005-03-11 | 2006-09-14 | Chandramouly Ashwin A | Method, article of manufacture, and apparatus for high quality, fast intra coding usable for creating digital video content |
US7116831B2 (en) | 2002-04-10 | 2006-10-03 | Microsoft Corporation | Chrominance motion vector rounding |
US20070025441A1 (en) | 2005-07-28 | 2007-02-01 | Nokia Corporation | Method, module, device and system for rate control provision for video encoders capable of variable bit rate encoding |
US20070036443A1 (en) * | 2005-08-12 | 2007-02-15 | Microsoft Corporation | Adaptive coding and decoding of wide-range coefficients |
EP1768415A1 (en) | 2005-09-27 | 2007-03-28 | Matsushita Electric Industrial Co., Ltd. | Adaptive scan order of DCT coefficients and its signaling |
US7226150B2 (en) | 2003-07-14 | 2007-06-05 | Hitachi, Ltd. | Inkjet head and a method of manufacturing the same |
US20070127831A1 (en) | 2003-04-10 | 2007-06-07 | Kartik Venkataraman | Compression system for integrated sensor devices |
US20070177673A1 (en) | 2006-01-12 | 2007-08-02 | Lg Electronics Inc. | Processing multiview video |
US20070200737A1 (en) * | 2003-09-18 | 2007-08-30 | Wen Gao | Entropy Coding Method For Coding Video Prediction Residual Coefficients |
US20070253479A1 (en) * | 2006-04-30 | 2007-11-01 | Debargha Mukherjee | Robust and efficient compression/decompression providing for adjustable division of computational complexity between encoding/compression and decoding/decompression |
US20080170615A1 (en) | 2007-01-12 | 2008-07-17 | Mitsubishi Electric Corporation | Moving image decoding device and moving image decoding method |
US20080181299A1 (en) | 2007-01-16 | 2008-07-31 | Dihong Tian | Breakpoint determining for hybrid variable length coding using relationship to neighboring blocks |
US20080240250A1 (en) | 2007-03-30 | 2008-10-02 | Microsoft Corporation | Regions of interest for quality adjustments |
US7432329B2 (en) | 1997-05-24 | 2008-10-07 | Byk-Chemie Gmbh | Dispersing agents for pigments or extenders based on acrylic acid alkyl ester polymers |
US20080279466A1 (en) * | 2007-05-08 | 2008-11-13 | Kyeong Ho Yang | Methods and Systems for Rate-Distortion Optimized Quantization of Transform Blocks in Block Transform Video Coding |
US20080310504A1 (en) * | 2007-06-15 | 2008-12-18 | Qualcomm Incorporated | Adaptive coefficient scanning for video coding |
US20080310503A1 (en) | 2007-06-14 | 2008-12-18 | Samsung Electronics Co., Ltd. | Method and apparatus for entropy-coding/entropy-decoding video data |
US20080310745A1 (en) * | 2007-06-15 | 2008-12-18 | Qualcomm Incorporated | Adaptive coefficient scanning in video coding |
US20090003449A1 (en) * | 2007-06-28 | 2009-01-01 | Mitsubishi Electric Corporation | Image encoding device, image decoding device, image encoding method and image decoding method |
US20090034857A1 (en) * | 2005-07-22 | 2009-02-05 | Mitsubishi Electric Corporation | Image encoder and image decoder, image encoding method and image decoding method, image encoding program and image decoding program, and computer readable recording medium recorded with image encoding program and computer readable recording medium recorded with image decoding program |
US7496143B2 (en) | 2002-05-02 | 2009-02-24 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Method and arrangement for coding transform coefficients in picture and/or video coders and decoders and a corresponding computer program and a corresponding computer-readable storage medium |
US20090080532A1 (en) * | 2004-01-30 | 2009-03-26 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Video frame encoding and decoding |
US20090123066A1 (en) * | 2005-07-22 | 2009-05-14 | Mitsubishi Electric Corporation | Image encoding device, image decoding device, image encoding method, image decoding method, image encoding program, image decoding program, computer readable recording medium having image encoding program recorded therein, |
US20090175334A1 (en) * | 2007-10-12 | 2009-07-09 | Qualcomm Incorporated | Adaptive coding of video block header information |
US20090190659A1 (en) | 2008-01-25 | 2009-07-30 | Samsung Electronics Co., Ltd. | Video encoding method and apparatus, and video decoding method and apparatus |
US20090248767A1 (en) * | 2005-02-10 | 2009-10-01 | Netzer Moriya | System and method for statistically separating and characterizing noise which is added to a signal of a machine or a system |
US20100027625A1 (en) * | 2006-11-16 | 2010-02-04 | Tilo Wik | Apparatus for encoding and decoding |
US20100054328A1 (en) | 2006-11-01 | 2010-03-04 | Canon Kabushiki Kaisha | Encoding apparatus and control method thereof |
US20100061461A1 (en) * | 2008-09-11 | 2010-03-11 | On2 Technologies Inc. | System and method for video encoding using constructed reference frame |
US20100097250A1 (en) | 2008-10-17 | 2010-04-22 | Texas Instruments Incorporated | Parallel CABAC Decoding for Video Decompression |
US20100098169A1 (en) | 2008-10-16 | 2010-04-22 | Texas Instruments Incorporated | Method and apparatus for motion estimation using compressed reference frame |
US20100128995A1 (en) * | 2008-01-18 | 2010-05-27 | Virginie Drugeon | Image coding method and image decoding method |
US20100166069A1 (en) * | 2008-12-31 | 2010-07-01 | Nxp B.V. | System and method for video compression using predictive coding |
US20100195733A1 (en) * | 2009-02-02 | 2010-08-05 | Freescale Semiconductor, Inc. | Video scene change detection and encoding complexity reduction in a video encoder system having multiple processing devices |
EP2235950A1 (en) | 2008-01-18 | 2010-10-06 | Intel Corporation | Separate huffman coding of runlength and size data of dct coefficients |
US20100290568A1 (en) | 2006-03-31 | 2010-11-18 | Hajime Suzuki | Decoding frequency channelised signals |
US7843998B2 (en) | 2004-12-30 | 2010-11-30 | Tandberg Telecom As | Method for improved entropy coding |
US20100322306A1 (en) | 2009-06-19 | 2010-12-23 | The Hong Kong University Of Science And Technology | Scalar quantization using bit-stealing for video processing |
US20110002386A1 (en) * | 2009-07-06 | 2011-01-06 | Mediatek Singapore Pte. Ltd. | Video encoder and method for performing intra-prediction and video data compression |
US20110015933A1 (en) * | 2009-07-17 | 2011-01-20 | Yuuji Maeda | Signal encoding apparatus, signal decoding apparatus, signal processing system, signal encoding process method, signal decoding process method, and program |
US20110026595A1 (en) * | 2008-02-27 | 2011-02-03 | Kabushiki Kaisha Toshiba | Video encoding/decoding apparatus |
US20110080946A1 (en) | 2009-10-06 | 2011-04-07 | Junlin Li | Locally variable quantization and hybrid variable length coding for image and video compression |
US20110103467A1 (en) * | 2004-02-12 | 2011-05-05 | Thomas Wedi | Encoding and Decoding of Video Images Based on a Non-linear Quantization |
US20110158538A1 (en) * | 2008-09-01 | 2011-06-30 | Nec Corporation | Image feature extraction device |
US20110170606A1 (en) * | 2008-12-19 | 2011-07-14 | Kai Zhang | Video Processing Method and Apparatus with Residue Prediction |
US20110200101A1 (en) * | 2010-02-18 | 2011-08-18 | Jinwen Zan | Method and encoder for constrained soft-decision quantization in data compression |
US20110243225A1 (en) | 2010-04-05 | 2011-10-06 | Samsung Electronics Co., Ltd. | Determining intra prediction mode of image coding unit and image decoding unit |
US20120020408A1 (en) | 2010-07-20 | 2012-01-26 | Wen-Hsiung Chen | Video compression using multiple variable length coding methods for multiple types of transform coefficient blocks |
US20120027084A1 (en) * | 2010-03-15 | 2012-02-02 | Kai Zhang | Methods of utilizing tables adaptively updated for coding/decoding and related processing circuits thereof |
US20120170647A1 (en) | 2011-01-04 | 2012-07-05 | Slipstream Data Inc. | Coding of residual data in predictive compression |
US20120177109A1 (en) * | 2009-09-10 | 2012-07-12 | Dolby Laboratories Licensing Corporation | Speedup Techniques for Rate Distortion Optimized Quantization |
US20120201300A1 (en) * | 2009-09-14 | 2012-08-09 | Sk Telecom Co., Ltd. | Encoding/decoding method and device for high-resolution moving images |
US20120257677A1 (en) * | 2011-04-07 | 2012-10-11 | Google Inc. | Encoding and decoding motion via image segmentation |
US20120257676A1 (en) * | 2011-04-06 | 2012-10-11 | Google Inc. | Apparatus and method for coding using motion vector segmentation |
US20120314760A1 (en) | 2011-06-10 | 2012-12-13 | Research In Motion Limited | Method and system to reduce modelling overhead for data compression |
US20130003839A1 (en) * | 2011-06-30 | 2013-01-03 | Futurewei Technologies, Inc. | Fast Encoding Method for Lossless Coding |
US20130028326A1 (en) * | 2010-04-09 | 2013-01-31 | Mitsubishi Electric Corporation | Moving image encoding device and moving image decoding device |
US20130027230A1 (en) * | 2010-04-13 | 2013-01-31 | Detlev Marpe | Entropy coding |
US20130077687A1 (en) | 2011-09-23 | 2013-03-28 | Ye-Kui Wang | Coding reference pictures for a reference picture set |
US20130089152A1 (en) | 2011-10-05 | 2013-04-11 | Qualcomm Incorporated | Signaling picture identification for video coding |
US20130089136A1 (en) * | 2011-10-10 | 2013-04-11 | Texas Instruments Incorporated | Spatial Intra Prediction Estimation Based on Mode Suppression in Macroblocks of a Video Frame |
US20130089134A1 (en) | 2011-10-10 | 2013-04-11 | Qualcomm Incorporated | Efficient signaling of reference picture sets |
US8428119B2 (en) * | 2007-01-16 | 2013-04-23 | International Business Machines Corporation | Method and apparatus for multi-hypothesis decoder side-information coding |
US20130187798A1 (en) * | 2010-09-09 | 2013-07-25 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Entropy encoding and decoding scheme |
US20130243087A1 (en) * | 2010-12-21 | 2013-09-19 | Electronics And Telecommunications Research Institute | Intra prediction mode encoding/decoding method and apparatus for same |
US20130243089A1 (en) * | 2010-02-17 | 2013-09-19 | Electronics And Telecommucications Research Institute | Device for encoding ultra-high definition image and method thereof, and decoding device and method thereof |
US20130287104A1 (en) * | 2010-12-31 | 2013-10-31 | University-Industry Cooperation Group Of Kyung Hee University | Method for encoding video information and method for decoding video information, and apparatus using same |
US20130300591A1 (en) * | 2011-01-14 | 2013-11-14 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Entropy encoding and decoding scheme |
US8594189B1 (en) * | 2011-04-07 | 2013-11-26 | Google Inc. | Apparatus and method for coding video using consistent regions and resolution scaling |
US20130343465A1 (en) | 2012-06-26 | 2013-12-26 | Qualcomm Incorporated | Header parameter sets for video coding |
US20140003493A1 (en) | 2012-07-02 | 2014-01-02 | Qualcomm Incorporated | Video parameter set for hevc and extensions |
US20140023138A1 (en) | 2012-07-20 | 2014-01-23 | Qualcomm Incorporated | Reusing parameter sets for video coding |
US8638863B1 (en) * | 2010-05-18 | 2014-01-28 | Google Inc. | Apparatus and method for filtering video using extended edge-detection |
US8638854B1 (en) * | 2011-04-07 | 2014-01-28 | Google Inc. | Apparatus and method for creating an alternate reference frame for video compression using maximal differences |
US20140036998A1 (en) | 2011-11-03 | 2014-02-06 | Matthias Narroschke | Quantization parameter for blocks coded in the pcm mode |
US20140092984A1 (en) | 2012-10-01 | 2014-04-03 | General Instrument Corporation | Processing of pulse code modulation (pcm) parameters |
US20140140406A1 (en) | 2012-11-16 | 2014-05-22 | General Instrument Corporation | Devices and methods for processing of non-idr related syntax for high efficiency video coding (hevc) |
US20140140400A1 (en) * | 2011-06-16 | 2014-05-22 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Entropy coding supporting mode switching |
US8767817B1 (en) | 2011-04-07 | 2014-07-01 | Google Inc. | Apparatus and method for coding using parameterized equation |
US8780971B1 (en) * | 2011-04-07 | 2014-07-15 | Google, Inc. | System and method of encoding using selectable loop filters |
US8781004B1 (en) * | 2011-04-07 | 2014-07-15 | Google Inc. | System and method for encoding video using variable loop filter |
US20150010056A1 (en) * | 2012-01-19 | 2015-01-08 | Samsung Electronics Co., Ltd. | Method and apparatus for video encoding capable of parallel entropy encoding of subregions, method and apparatus for video decoding capable of parallel entropy decoding of subregions |
US20150071356A1 (en) | 2012-02-29 | 2015-03-12 | Lg Electronics Inc. | Inter-layer prediction method and apparatus using same |
US8990217B2 (en) * | 2011-07-13 | 2015-03-24 | International Business Machines Corporation | Lossless compression of high nominal-range data |
Family Cites Families (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CA2020084C (en) | 1989-06-29 | 1994-10-18 | Kohei Iseda | Voice coding/decoding system having selected coders and entropy coders |
US7804897B1 (en) * | 2002-12-16 | 2010-09-28 | Apple Inc. | Method for implementing an improved quantizer in a multimedia compression and encoding system |
US7953152B1 (en) * | 2004-06-28 | 2011-05-31 | Google Inc. | Video compression and encoding method |
JP2011024066A (en) * | 2009-07-17 | 2011-02-03 | Sony Corp | Image processing apparatus and method |
KR101663762B1 (en) | 2010-07-20 | 2016-10-07 | 에스케이 텔레콤주식회사 | Competition-Based Intra Prediction Coding/Decoding Apparatus and Method Using Multiple Prediction Filters |
US8995523B2 (en) * | 2011-06-03 | 2015-03-31 | Qualcomm Incorporated | Memory efficient context modeling |
WO2013026196A1 (en) | 2011-08-23 | 2013-02-28 | Huawei Technologies Co., Ltd. | Estimator for estimating a probability distribution of a quantization index |
CN104137541B (en) * | 2011-10-31 | 2018-07-20 | 南洋理工大学 | Lossless image and video-frequency compression method and device |
-
2012
- 2012-03-08 US US13/415,299 patent/US11039138B1/en active Active
-
2021
- 2021-06-07 US US17/340,293 patent/US11627321B2/en active Active
-
2023
- 2023-03-22 US US18/188,364 patent/US20230232001A1/en active Pending
Patent Citations (189)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4710810A (en) | 1984-03-06 | 1987-12-01 | Nec Corporation | Predictive coding/decoding apparatus for video signal |
JPS6192073A (en) | 1984-10-12 | 1986-05-10 | Hitachi Ltd | Picture data compression system |
JPH02217088A (en) | 1989-02-17 | 1990-08-29 | Victor Co Of Japan Ltd | Prediction coding circuit among movement compensation frames |
JPH02272970A (en) | 1989-04-14 | 1990-11-07 | Sony Corp | Data processing circuit |
US5150209A (en) | 1990-05-11 | 1992-09-22 | Picturetel Corporation | Hierarchical entropy coded lattice threshold quantization encoding method and apparatus for image and video compression |
US5461423A (en) | 1992-05-29 | 1995-10-24 | Sony Corporation | Apparatus for generating a motion vector with half-pixel precision for use in compressing a digital motion picture signal |
US5650782A (en) | 1994-01-18 | 1997-07-22 | Daewoo Electronics Co Ltd. | Variable length coder using two VLC tables |
KR100213018B1 (en) | 1994-07-30 | 1999-08-02 | 윤종용 | Apparatus for encoding moving picture |
US5686962A (en) | 1994-07-30 | 1997-11-11 | Samsung Electronics Co., Ltd. | Motion image coder using pre-filter to reduce quantization error |
US5708473A (en) | 1994-08-30 | 1998-01-13 | Hughes Aircraft Company | Two stage video film compression method and system |
JPH08280032A (en) | 1995-03-28 | 1996-10-22 | Daewoo Electron Co Ltd | Digital video signal encoding device using adaptive scanningtechnique |
US5767909A (en) | 1995-03-28 | 1998-06-16 | Daewoo Electronics, Co., Ltd. | Apparatus for encoding a digital video signal using an adaptive scanning technique |
US6473463B2 (en) | 1995-05-26 | 2002-10-29 | Intel Corporation | Temporal tile staggering for block based video compression |
US20010022815A1 (en) | 1995-05-26 | 2001-09-20 | Rohit Agarwal | Temporal tile staggering for block based video compression |
US5777680A (en) | 1995-06-30 | 1998-07-07 | Daewoo Electronics Co., Ltd. | Video signal encoding system controller for deciding an inter/intra mode, a field/frame DCT mode, and a quantization parameter |
JPH11513205A (en) | 1995-07-11 | 1999-11-09 | テレフオンアクチーボラゲツト エル エム エリクソン（パブル） | Video coding device |
US5886652A (en) | 1995-08-03 | 1999-03-23 | Ntt Mobile Communications Network, Inc. | Pseudo fixed data transmission device and method |
US5818536A (en) | 1995-09-29 | 1998-10-06 | U.S. Philips Corporation | Motion vector selection using a cost function relating accuracy to bit rate |
US6125144A (en) | 1996-03-08 | 2000-09-26 | Oki Electric Industry Co., Ltd. | Picture coding method and picture coder |
JPH09247682A (en) | 1996-03-08 | 1997-09-19 | Oki Electric Ind Co Ltd | Image coding method and image coder |
US6157326A (en) | 1996-03-15 | 2000-12-05 | U.S. Philips Corporation | Method of and device for coding a digital information signal |
US7432329B2 (en) | 1997-05-24 | 2008-10-07 | Byk-Chemie Gmbh | Dispersing agents for pigments or extenders based on acrylic acid alkyl ester polymers |
US6212234B1 (en) | 1997-06-04 | 2001-04-03 | Fuji Xerox Co., Ltd. | Color image encoding apparatus and color image decoding apparatus |
US7085425B2 (en) | 1997-09-23 | 2006-08-01 | Telefonaktiebolaget Lm Ericsson (Publ) | Embedded DCT-based still image coding algorithm |
KR20010030916A (en) | 1997-10-02 | 2001-04-16 | 월터 디. 어마럴 | System and method for fixed-rate block-based image compression with inferred pixel values |
US6501860B1 (en) | 1998-01-19 | 2002-12-31 | Canon Kabushiki Kaisha | Digital signal coding and decoding based on subbands |
JPH11262018A (en) | 1998-03-09 | 1999-09-24 | Victor Co Of Japan Ltd | Motion compensation coder, motion compensation coding method and motion compensation recording medium therefor |
JPH11289544A (en) | 1998-04-02 | 1999-10-19 | Sony Corp | Motion detector and its method |
US6314208B1 (en) | 1998-07-21 | 2001-11-06 | Hewlett-Packard Company | System for variable quantization in JPEG for compound documents |
US6256423B1 (en) | 1998-09-18 | 2001-07-03 | Sarnoff Corporation | Intra-frame quantizer selection for video compression |
US6570924B1 (en) | 1998-11-20 | 2003-05-27 | Interval Research Corp | Low cost video compression using fast, modified Z-coding of wavelet pyramids |
US6418166B1 (en) | 1998-11-30 | 2002-07-09 | Microsoft Corporation | Motion estimation and block matching pattern |
US6434197B1 (en) | 1999-01-07 | 2002-08-13 | General Instrument Corporation | Multi-functional transcoder for compressed bit streams |
US20030185455A1 (en) * | 1999-02-04 | 2003-10-02 | Goertzen Kenbe D. | Digital image processor |
US7010032B1 (en) | 1999-03-12 | 2006-03-07 | Kabushiki Kaisha Toshiba | Moving image coding apparatus and decoding apparatus |
JPH11313332A (en) | 1999-03-12 | 1999-11-09 | Rca Thomson Licensing Corp | Video signal compression/release device for even number and odd number field data compressed independently |
US6414995B2 (en) | 1999-07-29 | 2002-07-02 | Mitsubishi Denki Kabushiki Kaisha | Motion vector detection system |
WO2001050770A2 (en) | 1999-12-28 | 2001-07-12 | Sony Electronics Inc. | Methods and apparatus for motion estimation using neighboring macroblocks |
US6917651B1 (en) | 2000-01-28 | 2005-07-12 | Samsung Electronics Co., Ltd. | Variable length coding method and apparatus |
US6661925B1 (en) | 2000-03-22 | 2003-12-09 | Board Of Supervisors Of Louisiana State University & Agricultural & Mechanical College | Functional set compression |
US6522784B1 (en) | 2000-04-11 | 2003-02-18 | International Business Machines Corporation | Enhanced compression of gray-level images |
US20020009153A1 (en) | 2000-05-17 | 2002-01-24 | Samsung Electronics Co., Ltd. | Variable length coding and decoding methods and apparatuses using plural mapping table |
US20020036705A1 (en) | 2000-06-13 | 2002-03-28 | Samsung Electronics Co., Ltd. | Format converter using bi-directional motion vector and method thereof |
US20020071485A1 (en) | 2000-08-21 | 2002-06-13 | Kerem Caglar | Video coding |
US6661842B1 (en) | 2000-09-22 | 2003-12-09 | General Dynamics Decision Systems, Inc. | Methods and apparatus for error-resilient video coding |
US20020080871A1 (en) | 2000-10-03 | 2002-06-27 | Realtime Data, Llc | System and method for data feed acceleration and encryption |
JP2002141806A (en) | 2000-10-31 | 2002-05-17 | Hitachi Ltd | Variable length code decoding device |
US6985527B2 (en) | 2001-03-07 | 2006-01-10 | Pts Corporation | Local constraints for motion matching |
JP2003046944A (en) | 2001-08-02 | 2003-02-14 | Sony Corp | Signal processing equipment and method therefor, recording equipment and method therefor, regenerating equipment and method therefor, video camera, and image monitor |
US20030081850A1 (en) | 2001-09-14 | 2003-05-01 | Nokia Corporation | Method and system for context-based adaptive binary arithmetic coding |
US6856701B2 (en) | 2001-09-14 | 2005-02-15 | Nokia Corporation | Method and system for context-based adaptive binary arithmetic coding |
WO2003026315A1 (en) | 2001-09-14 | 2003-03-27 | Ntt Docomo, Inc. | Coding method, decoding method, coding apparatus, decoding apparatus, image processing system, coding program, and decoding program |
EP1351510A1 (en) | 2001-09-14 | 2003-10-08 | NTT DoCoMo, Inc. | Coding method,decoding method,coding apparatus,decoding apparatus,image processing system,coding program,and decoding program |
US20050180500A1 (en) | 2001-12-31 | 2005-08-18 | Stmicroelectronics Asia Pacific Pte Ltd | Video encoding |
JP2003235044A (en) | 2002-02-08 | 2003-08-22 | Nippon Telegr & Teleph Corp <Ntt> | Moving picture encoding method, moving picture decoding method, execution programs for the methods, and recording medium with the execution programs recorded thereon |
US7116831B2 (en) | 2002-04-10 | 2006-10-03 | Microsoft Corporation | Chrominance motion vector rounding |
US20040234144A1 (en) | 2002-04-26 | 2004-11-25 | Kazuo Sugimoto | Image encoding device, image decoding device, image encoding method, image decoding method, image encoding program, and image decoding program |
US6907079B2 (en) | 2002-05-01 | 2005-06-14 | Thomson Licensing S.A. | Deblocking filter conditioned on pixel brightness |
US7496143B2 (en) | 2002-05-02 | 2009-02-24 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Method and arrangement for coding transform coefficients in picture and/or video coders and decoders and a corresponding computer program and a corresponding computer-readable storage medium |
US20030215018A1 (en) | 2002-05-14 | 2003-11-20 | Macinnis Alexander G. | System and method for transcoding entropy-coded bitstreams |
US20040013308A1 (en) | 2002-07-18 | 2004-01-22 | Lg Electronics Inc. | Calculation method for prediction motion vector |
US20050276323A1 (en) | 2002-09-27 | 2005-12-15 | Vanguard Software Solutions, Inc. | Real-time video coding/decoding |
US20090323816A1 (en) * | 2002-11-22 | 2009-12-31 | Takeshi Chujoh | Video encoding/decoding method and apparatus |
US20040258156A1 (en) * | 2002-11-22 | 2004-12-23 | Takeshi Chujoh | Video encoding/decoding method and apparatus |
US20070153901A1 (en) * | 2002-11-22 | 2007-07-05 | Takeshi Chujoh | Video encoding/decoding method and apparatus |
US20090323806A1 (en) * | 2002-11-22 | 2009-12-31 | Takeshi Chujoh | Video encoding/decoding method and apparatus |
US20090323817A1 (en) * | 2002-11-22 | 2009-12-31 | Takeshi Chujoh | Video encoding/decoding method and apparatus |
US20090323805A1 (en) * | 2002-11-22 | 2009-12-31 | Takeshi Chujoh | Video encoding/decoding method and apparatus |
US20090316790A1 (en) * | 2002-11-22 | 2009-12-24 | Takeshi Chujoh | Video encoding/decoding method and apparatus |
US20090316791A1 (en) * | 2002-11-22 | 2009-12-24 | Takeshi Chujoh | Video encoding/decoding method and apparatus |
US20040120398A1 (en) | 2002-12-19 | 2004-06-24 | Ximin Zhang | System and method for adaptive field and frame video encoding using rate-distortion characteristics |
US20040131117A1 (en) | 2003-01-07 | 2004-07-08 | Sheraizin Vitaly S. | Method and apparatus for improving MPEG picture compression |
US20060098738A1 (en) | 2003-01-09 | 2006-05-11 | Pamela Cosman | Video encoding methods and devices |
US20070127831A1 (en) | 2003-04-10 | 2007-06-07 | Kartik Venkataraman | Compression system for integrated sensor devices |
US7226150B2 (en) | 2003-07-14 | 2007-06-05 | Hitachi, Ltd. | Inkjet head and a method of manufacturing the same |
US20070200737A1 (en) * | 2003-09-18 | 2007-08-30 | Wen Gao | Entropy Coding Method For Coding Video Prediction Residual Coefficients |
US20060001557A1 (en) | 2003-11-24 | 2006-01-05 | Tom Dong Shiang | Computer-implemented method for compressing image files |
US20050152459A1 (en) | 2004-01-14 | 2005-07-14 | Austin Lobo | Decoding method and decoding apparatus |
US20090080532A1 (en) * | 2004-01-30 | 2009-03-26 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Video frame encoding and decoding |
US7599435B2 (en) * | 2004-01-30 | 2009-10-06 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Video frame encoding and decoding |
US20110103467A1 (en) * | 2004-02-12 | 2011-05-05 | Thomas Wedi | Encoding and Decoding of Video Images Based on a Non-linear Quantization |
US20050192085A1 (en) * | 2004-02-27 | 2005-09-01 | Aruze Corp. | Gaming machine with game effect |
US20060126724A1 (en) | 2004-12-10 | 2006-06-15 | Lsi Logic Corporation | Programmable quantization dead zone and threshold for standard-based H.264 and/or VC1 video encoding |
US20060133481A1 (en) * | 2004-12-22 | 2006-06-22 | Kabushiki Kaisha Toshiba | Image coding control method and device |
US7843998B2 (en) | 2004-12-30 | 2010-11-30 | Tandberg Telecom As | Method for improved entropy coding |
US20090248767A1 (en) * | 2005-02-10 | 2009-10-01 | Netzer Moriya | System and method for statistically separating and characterizing noise which is added to a signal of a machine or a system |
US20060203916A1 (en) | 2005-03-11 | 2006-09-14 | Chandramouly Ashwin A | Method, article of manufacture, and apparatus for high quality, fast intra coding usable for creating digital video content |
US20090034857A1 (en) * | 2005-07-22 | 2009-02-05 | Mitsubishi Electric Corporation | Image encoder and image decoder, image encoding method and image decoding method, image encoding program and image decoding program, and computer readable recording medium recorded with image encoding program and computer readable recording medium recorded with image decoding program |
US20090123066A1 (en) * | 2005-07-22 | 2009-05-14 | Mitsubishi Electric Corporation | Image encoding device, image decoding device, image encoding method, image decoding method, image encoding program, image decoding program, computer readable recording medium having image encoding program recorded therein, |
US20070025441A1 (en) | 2005-07-28 | 2007-02-01 | Nokia Corporation | Method, module, device and system for rate control provision for video encoders capable of variable bit rate encoding |
US7565018B2 (en) * | 2005-08-12 | 2009-07-21 | Microsoft Corporation | Adaptive coding and decoding of wide-range coefficients |
US20070036443A1 (en) * | 2005-08-12 | 2007-02-15 | Microsoft Corporation | Adaptive coding and decoding of wide-range coefficients |
EP1768415A1 (en) | 2005-09-27 | 2007-03-28 | Matsushita Electric Industrial Co., Ltd. | Adaptive scan order of DCT coefficients and its signaling |
US20070177673A1 (en) | 2006-01-12 | 2007-08-02 | Lg Electronics Inc. | Processing multiview video |
US20100290568A1 (en) | 2006-03-31 | 2010-11-18 | Hajime Suzuki | Decoding frequency channelised signals |
US20070253479A1 (en) * | 2006-04-30 | 2007-11-01 | Debargha Mukherjee | Robust and efficient compression/decompression providing for adjustable division of computational complexity between encoding/compression and decoding/decompression |
US20100054328A1 (en) | 2006-11-01 | 2010-03-04 | Canon Kabushiki Kaisha | Encoding apparatus and control method thereof |
US20100027625A1 (en) * | 2006-11-16 | 2010-02-04 | Tilo Wik | Apparatus for encoding and decoding |
US20080170615A1 (en) | 2007-01-12 | 2008-07-17 | Mitsubishi Electric Corporation | Moving image decoding device and moving image decoding method |
US8428119B2 (en) * | 2007-01-16 | 2013-04-23 | International Business Machines Corporation | Method and apparatus for multi-hypothesis decoder side-information coding |
US20080181299A1 (en) | 2007-01-16 | 2008-07-31 | Dihong Tian | Breakpoint determining for hybrid variable length coding using relationship to neighboring blocks |
US20080240250A1 (en) | 2007-03-30 | 2008-10-02 | Microsoft Corporation | Regions of interest for quality adjustments |
US7957600B2 (en) * | 2007-05-08 | 2011-06-07 | Arris Group, Inc. | Methods and systems for rate-distortion optimized quantization of transform blocks in block transform video coding |
US20080279466A1 (en) * | 2007-05-08 | 2008-11-13 | Kyeong Ho Yang | Methods and Systems for Rate-Distortion Optimized Quantization of Transform Blocks in Block Transform Video Coding |
US20080310503A1 (en) | 2007-06-14 | 2008-12-18 | Samsung Electronics Co., Ltd. | Method and apparatus for entropy-coding/entropy-decoding video data |
US20080310504A1 (en) * | 2007-06-15 | 2008-12-18 | Qualcomm Incorporated | Adaptive coefficient scanning for video coding |
US20080310512A1 (en) * | 2007-06-15 | 2008-12-18 | Qualcomm Incorporated | Separable directional transforms |
US20080310745A1 (en) * | 2007-06-15 | 2008-12-18 | Qualcomm Incorporated | Adaptive coefficient scanning in video coding |
US20140112387A1 (en) * | 2007-06-15 | 2014-04-24 | Qualcomm Incorporated | Separable directional transforms |
US20080310507A1 (en) * | 2007-06-15 | 2008-12-18 | Qualcomm Incorporated | Adaptive coding of video block prediction mode |
US20090003448A1 (en) * | 2007-06-28 | 2009-01-01 | Mitsubishi Electric Corporation | Image encoding device, image decoding device, image encoding method and image decoding method |
US20090003449A1 (en) * | 2007-06-28 | 2009-01-01 | Mitsubishi Electric Corporation | Image encoding device, image decoding device, image encoding method and image decoding method |
US20090003441A1 (en) * | 2007-06-28 | 2009-01-01 | Mitsubishi Electric Corporation | Image encoding device, image decoding device, image encoding method and image decoding method |
US20090175334A1 (en) * | 2007-10-12 | 2009-07-09 | Qualcomm Incorporated | Adaptive coding of video block header information |
US20100128995A1 (en) * | 2008-01-18 | 2010-05-27 | Virginie Drugeon | Image coding method and image decoding method |
EP2235950A1 (en) | 2008-01-18 | 2010-10-06 | Intel Corporation | Separate huffman coding of runlength and size data of dct coefficients |
US20130251039A1 (en) * | 2008-01-18 | 2013-09-26 | Panasonic Corporation | Image coding method and image decoding method |
US8442334B2 (en) * | 2008-01-18 | 2013-05-14 | Panasonic Corporation | Image coding method and image decoding method based on edge direction |
US8971652B2 (en) * | 2008-01-18 | 2015-03-03 | Panasonic Intellectual Property Corporation Of America | Image coding method and image decoding method for coding and decoding image data on a block-by-block basis |
US20090190659A1 (en) | 2008-01-25 | 2009-07-30 | Samsung Electronics Co., Ltd. | Video encoding method and apparatus, and video decoding method and apparatus |
US20110026595A1 (en) * | 2008-02-27 | 2011-02-03 | Kabushiki Kaisha Toshiba | Video encoding/decoding apparatus |
US20110158538A1 (en) * | 2008-09-01 | 2011-06-30 | Nec Corporation | Image feature extraction device |
US8768064B2 (en) * | 2008-09-01 | 2014-07-01 | Nec Corporation | Image feature extraction device |
US8385404B2 (en) * | 2008-09-11 | 2013-02-26 | Google Inc. | System and method for video encoding using constructed reference frame |
US20100061461A1 (en) * | 2008-09-11 | 2010-03-11 | On2 Technologies Inc. | System and method for video encoding using constructed reference frame |
US20130044817A1 (en) * | 2008-09-11 | 2013-02-21 | James Bankoski | System and method for video encoding using constructed reference frame |
US20100098169A1 (en) | 2008-10-16 | 2010-04-22 | Texas Instruments Incorporated | Method and apparatus for motion estimation using compressed reference frame |
US20100097250A1 (en) | 2008-10-17 | 2010-04-22 | Texas Instruments Incorporated | Parallel CABAC Decoding for Video Decompression |
US20110170606A1 (en) * | 2008-12-19 | 2011-07-14 | Kai Zhang | Video Processing Method and Apparatus with Residue Prediction |
US20100166069A1 (en) * | 2008-12-31 | 2010-07-01 | Nxp B.V. | System and method for video compression using predictive coding |
US20100195733A1 (en) * | 2009-02-02 | 2010-08-05 | Freescale Semiconductor, Inc. | Video scene change detection and encoding complexity reduction in a video encoder system having multiple processing devices |
US20100322306A1 (en) | 2009-06-19 | 2010-12-23 | The Hong Kong University Of Science And Technology | Scalar quantization using bit-stealing for video processing |
US20110002386A1 (en) * | 2009-07-06 | 2011-01-06 | Mediatek Singapore Pte. Ltd. | Video encoder and method for performing intra-prediction and video data compression |
US20110015933A1 (en) * | 2009-07-17 | 2011-01-20 | Yuuji Maeda | Signal encoding apparatus, signal decoding apparatus, signal processing system, signal encoding process method, signal decoding process method, and program |
US20120177109A1 (en) * | 2009-09-10 | 2012-07-12 | Dolby Laboratories Licensing Corporation | Speedup Techniques for Rate Distortion Optimized Quantization |
US20120201300A1 (en) * | 2009-09-14 | 2012-08-09 | Sk Telecom Co., Ltd. | Encoding/decoding method and device for high-resolution moving images |
US9154809B2 (en) * | 2009-09-14 | 2015-10-06 | Sk Telecom Co., Ltd. | Encoding/decoding method and device for high-resolution moving images |
US20150229924A1 (en) * | 2009-09-14 | 2015-08-13 | Sk Telecom Co., Ltd. | Encoding/decoding method and device for high-resolution moving images |
US20110080946A1 (en) | 2009-10-06 | 2011-04-07 | Junlin Li | Locally variable quantization and hybrid variable length coding for image and video compression |
US20130243089A1 (en) * | 2010-02-17 | 2013-09-19 | Electronics And Telecommucications Research Institute | Device for encoding ultra-high definition image and method thereof, and decoding device and method thereof |
US8675726B2 (en) * | 2010-02-18 | 2014-03-18 | Blackberry Limited | Method and encoder for constrained soft-decision quantization in data compression |
US20110200101A1 (en) * | 2010-02-18 | 2011-08-18 | Jinwen Zan | Method and encoder for constrained soft-decision quantization in data compression |
US20120027084A1 (en) * | 2010-03-15 | 2012-02-02 | Kai Zhang | Methods of utilizing tables adaptively updated for coding/decoding and related processing circuits thereof |
US20110243225A1 (en) | 2010-04-05 | 2011-10-06 | Samsung Electronics Co., Ltd. | Determining intra prediction mode of image coding unit and image decoding unit |
US20130028326A1 (en) * | 2010-04-09 | 2013-01-31 | Mitsubishi Electric Corporation | Moving image encoding device and moving image decoding device |
US20130027230A1 (en) * | 2010-04-13 | 2013-01-31 | Detlev Marpe | Entropy coding |
US8798131B1 (en) * | 2010-05-18 | 2014-08-05 | Google Inc. | Apparatus and method for encoding video using assumed values with intra-prediction |
US8638863B1 (en) * | 2010-05-18 | 2014-01-28 | Google Inc. | Apparatus and method for filtering video using extended edge-detection |
US20120020408A1 (en) | 2010-07-20 | 2012-01-26 | Wen-Hsiung Chen | Video compression using multiple variable length coding methods for multiple types of transform coefficient blocks |
US20130187798A1 (en) * | 2010-09-09 | 2013-07-25 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Entropy encoding and decoding scheme |
US9130585B2 (en) * | 2010-09-09 | 2015-09-08 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Entropy encoding and decoding scheme |
US20180014026A1 (en) * | 2010-12-07 | 2018-01-11 | Electronics And Telecommunications Research Instit Ute | Method and device for simplifying the encoding and decoding of ultra-high definition images |
US20130243087A1 (en) * | 2010-12-21 | 2013-09-19 | Electronics And Telecommunications Research Institute | Intra prediction mode encoding/decoding method and apparatus for same |
US20130287104A1 (en) * | 2010-12-31 | 2013-10-31 | University-Industry Cooperation Group Of Kyung Hee University | Method for encoding video information and method for decoding video information, and apparatus using same |
US20120170647A1 (en) | 2011-01-04 | 2012-07-05 | Slipstream Data Inc. | Coding of residual data in predictive compression |
US20130300591A1 (en) * | 2011-01-14 | 2013-11-14 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Entropy encoding and decoding scheme |
US9083374B2 (en) * | 2011-01-14 | 2015-07-14 | Ge Video Compression, Llc | Entropy encoding and decoding scheme using VLC coding and pipe or entropy coding for high compression efficiency |
US20150270850A1 (en) * | 2011-01-14 | 2015-09-24 | Ge Video Compression, Llc | Entropy encoding and decoding scheme |
US8693547B2 (en) * | 2011-04-06 | 2014-04-08 | Google Inc. | Apparatus and method for coding using motion vector segmentation |
US20120257676A1 (en) * | 2011-04-06 | 2012-10-11 | Google Inc. | Apparatus and method for coding using motion vector segmentation |
US8780971B1 (en) * | 2011-04-07 | 2014-07-15 | Google, Inc. | System and method of encoding using selectable loop filters |
US8767817B1 (en) | 2011-04-07 | 2014-07-01 | Google Inc. | Apparatus and method for coding using parameterized equation |
US8594189B1 (en) * | 2011-04-07 | 2013-11-26 | Google Inc. | Apparatus and method for coding video using consistent regions and resolution scaling |
US8638854B1 (en) * | 2011-04-07 | 2014-01-28 | Google Inc. | Apparatus and method for creating an alternate reference frame for video compression using maximal differences |
US20120257677A1 (en) * | 2011-04-07 | 2012-10-11 | Google Inc. | Encoding and decoding motion via image segmentation |
US8781004B1 (en) * | 2011-04-07 | 2014-07-15 | Google Inc. | System and method for encoding video using variable loop filter |
US20120314760A1 (en) | 2011-06-10 | 2012-12-13 | Research In Motion Limited | Method and system to reduce modelling overhead for data compression |
US20140198841A1 (en) * | 2011-06-16 | 2014-07-17 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Context intialization in entropy coding |
US20140177707A1 (en) * | 2011-06-16 | 2014-06-26 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Entropy coding of motion vector differences |
US20140140400A1 (en) * | 2011-06-16 | 2014-05-22 | Fraunhofer-Gesellschaft Zur Foerderung Der Angewandten Forschung E.V. | Entropy coding supporting mode switching |
US20170142416A1 (en) * | 2011-06-16 | 2017-05-18 | Ge Video Compression, Llc | Entropy coding of motion vector differences |
US20160360204A1 (en) * | 2011-06-16 | 2016-12-08 | Ge Video Compression, Llc | Entropy coding of motion vector differences |
US9473170B2 (en) * | 2011-06-16 | 2016-10-18 | Ge Video Compression, Llc | Entropy coding of motion vector differences |
US9455744B2 (en) * | 2011-06-16 | 2016-09-27 | Ge Video Compression, Llc | Context initialization in entropy coding |
US20130003839A1 (en) * | 2011-06-30 | 2013-01-03 | Futurewei Technologies, Inc. | Fast Encoding Method for Lossless Coding |
US20130003840A1 (en) * | 2011-06-30 | 2013-01-03 | Futurewei Technologies, Inc. | Encoding of Prediction Residuals for Lossless Video Coding |
US8990217B2 (en) * | 2011-07-13 | 2015-03-24 | International Business Machines Corporation | Lossless compression of high nominal-range data |
US20130077687A1 (en) | 2011-09-23 | 2013-03-28 | Ye-Kui Wang | Coding reference pictures for a reference picture set |
US20130089152A1 (en) | 2011-10-05 | 2013-04-11 | Qualcomm Incorporated | Signaling picture identification for video coding |
US20130089134A1 (en) | 2011-10-10 | 2013-04-11 | Qualcomm Incorporated | Efficient signaling of reference picture sets |
US20130089136A1 (en) * | 2011-10-10 | 2013-04-11 | Texas Instruments Incorporated | Spatial Intra Prediction Estimation Based on Mode Suppression in Macroblocks of a Video Frame |
US20140036998A1 (en) | 2011-11-03 | 2014-02-06 | Matthias Narroschke | Quantization parameter for blocks coded in the pcm mode |
US20150010056A1 (en) * | 2012-01-19 | 2015-01-08 | Samsung Electronics Co., Ltd. | Method and apparatus for video encoding capable of parallel entropy encoding of subregions, method and apparatus for video decoding capable of parallel entropy decoding of subregions |
US20150071356A1 (en) | 2012-02-29 | 2015-03-12 | Lg Electronics Inc. | Inter-layer prediction method and apparatus using same |
US20130343465A1 (en) | 2012-06-26 | 2013-12-26 | Qualcomm Incorporated | Header parameter sets for video coding |
US20140003493A1 (en) | 2012-07-02 | 2014-01-02 | Qualcomm Incorporated | Video parameter set for hevc and extensions |
US20140023138A1 (en) | 2012-07-20 | 2014-01-23 | Qualcomm Incorporated | Reusing parameter sets for video coding |
US20140092984A1 (en) | 2012-10-01 | 2014-04-03 | General Instrument Corporation | Processing of pulse code modulation (pcm) parameters |
US20140140406A1 (en) | 2012-11-16 | 2014-05-22 | General Instrument Corporation | Devices and methods for processing of non-idr related syntax for high efficiency video coding (hevc) |
Non-Patent Citations (24)
Title |
---|
"Implementors' Guide; Series H: Audiovisual and Multimedia Systems; Coding of moving video: Implementors Guide for H.264: Advanced video coding for generic audiovisual services". H.264. International Telecommunication Union. Version 12. Dated Jul. 30, 2010. |
"Overview; VP7 Data Format and Decoder". Version 1.5. On2 Technologies, Inc. Dated Mar. 28, 2005. |
"Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services—Coding of moving video; Advanced video coding for generic audiovisual services". H.264. Amendment 1: Support of additional colour spaces and removal of the High 4:4:4 Profile. International Telecommunication Union. Dated Jun. 2006. |
"Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services—Coding of moving video; Advanced video coding for generic audiovisual services". H.264. Version 1. International Telecommunication Union. Dated May 2003. |
"Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services—Coding of moving video; Advanced video coding for generic audiovisual services". H.264. Version 3. International Telecommunication Union. Dated Mar. 2005. |
"Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services—Coding of moving video". H.264. Advanced video coding for generic audiovisual services. International Telecommunication Union. Version 11. Dated Mar. 2009. |
"Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services—Coding of moving video". H.264. Advanced video coding for generic audiovisual services. International Telecommunication Union. Version 12. Dated Mar. 2010. |
"Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services—Coding of moving video". H.264. Advanced video coding for generic audiovisual services. Version 8. International Telecommunication Union. Dated Nov. 1, 2007. |
"Series H: Audiovisual and Multimedia Systems; Infrastructure of audiovisual services—Coding of moving video". H.264. Amendment 2: New profiles for professional applications. International Telecommunication Union. Dated Apr. 2007. |
"VP6 Bitstream & Decoder Specification". Version 1.02. On2 Technologies, Inc. Dated Aug. 17, 2006. |
"VP6 Bitstream & Decoder Specification". Version 1.03. On2 Technologies, Inc. Dated Oct. 29, 2007. |
"VP8 Data Format and Decoding Guide". WebM Project. Google On2. Dated: Dec. 1, 2010. |
Anonymous: "Study Text of ISO/IEC DIS 23800-2 High EfficiexNCy Video Coding", 102. MPEG Meeting ; Oct. 15, 2012-Oct. 19, 2012; Shanghai; (Motion Picture Expert Group or ISO/IEC JTC1/SC29/WG11) No. N13155, Dec. 25, 2012, all pages. |
Anonymous: "Text of ISO/IEC DIS 23800-2 High EfficiexNCy Video Coding", 101. MPEG Meeting ; Jul. 16, 2012-Jul. 20, 2012; Stockholm; (Motion Picture Expert Group or ISO/IEC JTC1/SC29/WG11) No. N12935, Aug. 3, 2012, all pages. |
Bankoski et al. "Technical Overview of VP8, an Open Source Video CODEC for the Web". Dated Jul. 11, 2011. |
Bankoski et al. "VP8 Data Format and Decoding Guide; draft-bankoski-vp8-bitstream-02" Network Working Group. Dated May 18, 2011. |
Bankoski et al. "VP8 Data Format and Decoding Guide" Independent Submission. Dated Nov. 2011. |
Bross, Benjamin et al.: "High EfficiexNCy Video Coding (HEVC) text specification draft 7,"Joint Collaborative Team on Video Coding(JCT-VC) of ISO/IEC JTC1/SC29/WG11 and ITU-T SG16 WP3, 9th Meeting : Geneva, CH, Apr. 27-May 7, 2012, JCTVC-I1003_d9, 278 pages. |
Bross, Benjamin et al.: "High EfficiexNCy Video Coding (HEVC) text specification draft 9,"JCT-VC ,Nov. 8, 2012, Retrieved from the internet: URL: http://phenix.int-evry.fr/jet/doc_end_user/documents/11_Shanghai/wg11/JCTVC-K1003-v10.zip [retrieved on Mar. 7, 2014] all pages. |
International Preliminary Report of the International Searching Authority for International Application No. ISR/US2013/065870 dated May 28, 2015, 12 pages. |
ISR, "ISR Search Report and Written Opinion of the International Searching Authority" for International Application No. ISR/US2013/065870 (CS41073) dated Apr. 10, 2014, 15 pages. |
Mozilla, "Introduction to Video Coding". |
Park, Jun Sung, et al., "Selective Intra Prediction Mode Decision for H.264/AVC Encoders", World Academy of Science, Engineering and Technology 13, (2006). |
Wiegand, Thomas, Study of Final Committee Draft of Joint Video Specification (ITU-T Rec. H.264 | ISO/IEC 14496-10 AVC), Joint Video Team (JVT) of ISO/IEC MPEG & ITU-T VCEG (ISO/IEC JTC1/SC29/WG11 and ITU-T SG16 Q.6), JVT-F100, Dec. 5, 2002. |
Cited By (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20220067737A1 (en) * | 2020-09-03 | 2022-03-03 | Capital One Services, Llc | Systems and method for enhanced active machine learning through processing of partitioned uncertainty |
US11790369B2 (en) * | 2020-09-03 | 2023-10-17 | Capital One Services, Llc | Systems and method for enhanced active machine learning through processing of partitioned uncertainty |
CN114025162A (en) * | 2021-11-12 | 2022-02-08 | 安谋科技（中国）有限公司 | Entropy decoding method, medium, program product, and electronic device |
CN114025162B (en) * | 2021-11-12 | 2024-04-09 | 安谋科技（中国）有限公司 | Entropy decoding method, medium, program product, and electronic device |
CN117556832A (en) * | 2023-11-23 | 2024-02-13 | 合肥综合性国家科学中心人工智能研究院(安徽省人工智能实验室) | Semantic constraint-based emotion support dialogue bidirectional generation method |
CN117556832B (en) * | 2023-11-23 | 2024-04-09 | 合肥综合性国家科学中心人工智能研究院(安徽省人工智能实验室) | Semantic constraint-based emotion support dialogue bidirectional generation method |
Also Published As
Publication number | Publication date |
---|---|
US20220014744A1 (en) | 2022-01-13 |
US11627321B2 (en) | 2023-04-11 |
US20230232001A1 (en) | 2023-07-20 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9210432B2 (en) | Lossless inter-frame video coding | |
US9826250B1 (en) | Transform-domain intra prediction | |
US9106933B1 (en) | Apparatus and method for encoding video using different second-stage transform | |
US20170347094A1 (en) | Block size adaptive directional intra prediction | |
US20190020888A1 (en) | Compound intra prediction for video coding | |
US11627321B2 (en) | Adaptive coding of prediction modes using probability distributions | |
US10506240B2 (en) | Smart reordering in recursive block partitioning for advanced intra prediction in video coding | |
US10721482B2 (en) | Object-based intra-prediction | |
US9131073B1 (en) | Motion estimation aided noise reduction | |
US9503746B2 (en) | Determine reference motion vectors | |
US9510019B2 (en) | Two-step quantization and coding method and apparatus | |
US9369732B2 (en) | Lossless intra-prediction video coding | |
US20180302643A1 (en) | Video coding with degradation of residuals | |
US9350988B1 (en) | Prediction mode-based block ordering in video coding | |
US9756346B2 (en) | Edge-selective intra coding | |
US9729882B1 (en) | Variable-sized super block based direct prediction mode | |
US9781447B1 (en) | Correlation based inter-plane prediction encoding and decoding | |
US9681128B1 (en) | Adaptive pre-transform scanning patterns for video and image compression | |
US11785226B1 (en) | Adaptive composite intra prediction for image and video compression | |
US11870993B2 (en) | Transforms for large video and image blocks |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
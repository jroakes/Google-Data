US9892261B2 - Computer imposed countermeasures driven by malware lineage - Google Patents
Computer imposed countermeasures driven by malware lineage Download PDFInfo
- Publication number
- US9892261B2 US9892261B2 US14/698,534 US201514698534A US9892261B2 US 9892261 B2 US9892261 B2 US 9892261B2 US 201514698534 A US201514698534 A US 201514698534A US 9892261 B2 US9892261 B2 US 9892261B2
- Authority
- US
- United States
- Prior art keywords
- malware
- software
- families
- family
- artifact
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/50—Monitoring users, programs or devices to maintain the integrity of platforms, e.g. of processors, firmware or operating systems
- G06F21/57—Certifying or maintaining trusted computer platforms, e.g. secure boots or power-downs, version controls, system software checks, secure updates or assessing vulnerabilities
- G06F21/577—Assessing vulnerabilities and evaluating computer system security
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/50—Monitoring users, programs or devices to maintain the integrity of platforms, e.g. of processors, firmware or operating systems
- G06F21/55—Detecting local intrusion or implementing counter-measures
- G06F21/56—Computer malware detection or handling, e.g. anti-virus arrangements
- G06F21/566—Dynamic detection, i.e. detection performed at run-time, e.g. emulation, suspicious activities
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/14—Network architectures or network communication protocols for network security for detecting or protecting against malicious traffic
- H04L63/1441—Countermeasures against malicious traffic
- H04L63/145—Countermeasures against malicious traffic the attack involving the propagation of malware through the network, e.g. viruses, trojans or worms
Definitions
- the growing dependence on information technology in business, industry, and private lives is well known.
- Our computers are commonly linked by networks and are to some extent interdependent. This linkage may expose information and private networks to a variety of attacks which may be referred to generally as cyberattacks or cybercrimes.
- the attacks may be denial of service (DOS) attacks that bomb a public internet site with a very high volume of content requests that starves out other legitimate content requests.
- the attack may be an identity theft attack that steals financial information and uses it to perpetrate a financial fraud, such as an unauthorized credit card transaction.
- the attack may access private information and use that private information to thwart a business project.
- the attack may access private correspondence and release that correspondence to embarrass a corporation.
- malware can take a large variety of forms. Sometimes malware is shared among disparate cybercriminals to perpetrate different cybercrimes. A malware may go through a variety of different transformations over a period of time. The author of the malware may refine it and add functionality to the malware. Others may take the malware produced by an author and extend it or couple it with separate malware.
- Countermeasures have been developed to thwart or reduce the effectiveness of malware. As a new malware item is observed, new countermeasures are developed to parry the threat.
- Countermeasures may take the form of software and/or systems or platforms within an information technology system. For example, a firewall may be a platform that mediates between the unsecured internet and a corporate secure network. Other countermeasures, such as virus detection software, may execute periodically on computer systems.
- a system to identify and counter computer malware comprises a processor, a memory, a first data store comprising information about known computer malware, a second data store comprising cybercrime historical information, and an application stored in the memory.
- the information about known computer malware in the first data store is partitioned into a plurality of malware families, and comprising a plurality of mappings, wherein each mapping associates one malware family with at least one countermeasure for mitigating a risk to an information technology asset posed by the known computer malware associated with the malware family.
- the application When executed by the processor, the application analyzes a software artifact identified to be present in an information technology asset, based on the analysis of the software artifact determines a plurality of characteristics of the software artifact, and determines a plurality of metrics, each metric representing a degree of match between the software artifact and one of the plurality of malware families based on the characteristics of the software artifact and on the characteristics of each of the plurality of malware families stored in the first data store.
- the application further analyzes cybercrime historical information accessed from the second data store.
- the application further determines a malware family that best matches the software artifact, responsive to the metric associated with the best match malware family exceeding a pre-defined threshold, determines the software artifact to be computer malware, responsive to determining the software artifact to be computer malware, identifies at least one countermeasure based on the mapping for the best match malware family, and causes the at least one countermeasure to be activated on the information technology asset.
- a method of mitigating vulnerability of an information technology asset to a computer malware comprises determining a value of each of a plurality of characteristics of a software artifact by a computer system, comparing the characteristics of the software artifact to the characteristics of a plurality of families of known computer malware by the computer system, and associating the software artifact by the computer system to one of the plurality of families of known computer malware by the computer system based on comparing the software artifact to the families of known computer malware.
- the method further comprises selecting a countermeasure by the computer system from among a plurality of countermeasures based on the family of known computer malware that the software artifact is associated to and based on at least one of the characteristics of the software artifact and commanding the selected countermeasure to execute on the information technology asset.
- a method of mitigating risk of a cyberattack on an information technology asset comprises determining by a computer system a value of a plurality of characteristics of a malware software item, where the characteristics comprise at least two of a file path identified in the malware software item, a file name identified in the malware software item, a name of an author of the malware software item, an identity of a compiler used to compile the malware software item, a domain name identified in the malware software item, an internet protocol address identified in the malware software item, an email address identified in the software item, and an identity of a programming language used to create the malware software item.
- the method further comprises determining by the computer system a plurality of hashes of the malware software item, wherein each of the hashes corresponds to separate blocks of the malware software item and comparing the malware software item by the computer system to a plurality of malware families, wherein each of the characteristics of the malware software item is compared to a corresponding characteristic of each of the malware families and each of the hashes of the malware software item is compared to a corresponding hash associated with the malware families.
- the method further comprises, based on comparing the malware software item to the malware families, associating the malware software item to one of the malware families and based on the malware family to which the malware software item is associated, taking action to mitigate vulnerability of the information technology asset to the malware software item.
- FIG. 1 is a block diagram of an information technology system according to an embodiment of the disclosure.
- FIG. 2 is a flow chart of a method according to an embodiment of the disclosure.
- FIG. 3 is a flow chart of another method according to an embodiment of the disclosure.
- FIG. 4 is a block diagram of a computer system according to an embodiment of the disclosure.
- Cyberattacks have long been a concern to corporations and individuals. High profile cyberattacks of recent memory remind us that cyber threats are real and can cause great damage—both financial damage and damage to business and personal relationships. It seems that recent attacks may be even more damaging and costly than attacks before 2010. Information technologists responsible for protecting information technology assets are highly challenged by the creativity of cyberattacks and cybercriminals. The task of keeping ahead of new attacks and remaining vigilant threatens to exceed the capacities of the limited number of skilled information technology security personnel available.
- Malware is software that poses a threat to the security of a computer system or information technology asset.
- Suspected malware may also be referred to as a software artifact in some contexts herein.
- This preliminary analysis is directed, at least in part, to determining what type of software the suspected malware is, where the suspected malware comes from, who its author may have been, what other malware it may be related to, what specific information technology vulnerabilities the suspected malware may be directed to, and the like.
- the preliminary analysis may further determine or declare whether the suspected malware in fact is or is not malware. This preliminary analysis may be time consuming and divert the analyst from other tasks.
- the present disclosure teaches a system and method that automatically performs a preliminary analysis of the suspected malware. This can free the analyst for working on other cyber security issues that may not be amenable to automated processing and/or automated analysis. Additionally, this system and method may promote a more rapid initial response to a new malware, thereby reducing damages that might result from the malware. It is understood that the suspected malware is just that, a software artifact that is “suspected” to be malware. It is unknown, prior to processing by the system and method taught herein, what the suspected malware is and whether it is in fact malware.
- the system is contemplated to be able to cope with instances of known malware, it is more specifically directed to analyzing and acting on software artifacts that may be malware but are not previously known or identified malware which can be positively identified as such and then treated with a pre-canned solution or countermeasure. As such, the system is not a virus scanner (e.g., virus scanners search for known, previously identified specific malware).
- virus scanner e.g., virus scanners search for known, previously identified specific malware.
- the system automatically analyzes the suspected malware to determine a variety of characteristics or parameters about the suspected malware.
- One or more of authorship, source programming language, compiler used, embedded email addresses, and embedded internet protocol (IP) addresses may be determined.
- IP internet protocol
- a geographic location where the suspected malware was deployed and a language used in the malware may be determined. Whether the malware is multilingual may be determined. Further details of possible characteristics, parameters, and/or attributes of the software artifact or suspected malware that may be determined automatically by the system are described hereinafter. It is understood that some of the information (e.g., values of characteristics, parameters, or attributes) about the software artifact and/or suspected malware may be input by an analyst using the system.
- the analyst who desires the system to automatically analyze a given software artifact may use a user interface of the system to input known information such as where (what country, what enterprise) the software artifact came from, a computer system on which the software artifact was found, and the like.
- the system compares the values of the characteristics, parameters, and/or attributes of the suspected malware to the values of corresponding characteristics of a plurality of known malware families to determine whether the suspected malware belongs to an already known malware family. For example, a sum of weighted factors can be calculated, where the weighting values take into account the relative prioritization among the relative matches of the values of characteristics or parameters of the suspected malware to the values of corresponding characteristics of the malware families.
- rolling hashes of the suspected malware may be determined and compared to corresponding hashes determined for members of the known families of malware.
- Rolling hashes of the suspected malware may be determined having different windows or lengths. These rolling hashes may be compared with corresponding rolling hashes determined for members of the known families of malware. When a hashing match is found, this may comprise a strong factor in associating a suspected malware to a known family of malware, because it indicates that a portion of the suspect malware is the same as a portion of at least one member of the known malware family, suggesting a common lineage.
- a plurality of hashing matches between a suspected malware and members of the subject known malware family may increase the certainty of associating the suspected malware to that known malware family.
- malware When a suspected malware or software artifact is determined to match a known malware family, the software artifact may be declared or deemed malware (e.g., it is no longer suspected to be malware, it is determined to actually be, within predetermined limits of certainty, malware) and will then be treated as malware.
- a countermeasure that has been identified for use with the known family of malware may automatically be selected for use in countering the malware, for example for executing on a computer system that has been attacked by the malware or on which the malware has been detected.
- the countermeasure may be executed automatically, without the intervention of the information technology security analyst, which may result in reduced financial losses due to rapid response.
- a data store may contain a mapping of malware families to countermeasures that should be applied when a new malware (e.g., a previously unknown malware) associated with that malware family is encountered for the first time.
- An application on the system may access this data store, index into the information using a malware family identity, find a list of one or more countermeasures, and then cause the indexed countermeasures to be executed.
- the countermeasures that may be automatically applied may be a sub-set of available countermeasures.
- This sub-set of countermeasures may include countermeasures with relatively limited powers or authorizations.
- the countermeasures in this sub-set may aim at mitigating and/or slowing damages that may be caused by the suspected malware, a kind of stalling action to buy time for an information technology security analyst to manually analyze and identified a preferred countermeasure response.
- the countermeasures in this sub-set may be restricted to taking actions that are fully reversible. In an embodiment, restricting the selection of countermeasures that may automatically be applied may be prudent in the context of an uncertain, provisional, and/or preliminary diagnosis of suspected malware.
- the suspected malware may be confined to a quarantine area in memory rather than being deleted entirely; the suspected malware may be temporarily restricted by the operating system to executing a “safe” sub-set of operating system calls rather than totally shutdown; or the suspected malware may be scheduled for execution by the operating system at a lower frequency, for example at 1/10 normal frequency, to slow the damage it may do rather than killing the suspected malware.
- a countermeasure that shuts down the load balancer that distributes customer on-line purchase transactions to sales completion servers of a giant electronic commerce site on the Monday after Thanksgiving (“Cyber Monday”) when a suspected malware is detected in the load balancer server.
- a different countermeasure that may limit or slow the damage that the suspected malware might cause may be executed on the load balancer, a team of information technology security analysts may be notified of the threat posed by the suspected malware, and the team of information technology security analysts can make a choice of whether a more aggressive countermeasure ought to be applied. This may be likened to delegating some lower priority control functions to electronic systems (e.g., anti-lock braking systems, cruise control systems) while reserving higher priority control functions to human beings (e.g., manual control of the steering wheel).
- the list of one or more countermeasures associated with the malware family identities may further be indexed by other characteristics, parameters, or attributes of malware.
- a malware countermeasures launcher application may access the mapping of malware families to countermeasures with both an identify of a malware family as well as with values of one or more characteristics of the malware, for example a geographical location where the malware was found or introduced from, a language used for plain text in the malware, a target processor associated with the malware, and the like.
- the malware countermeasures launcher application may select and apply countermeasures (e.g., launch or cause countermeasures to be executed) that are specific not only to the malware family but to some of the particulars of the malware.
- results of preliminary analysis of the association of the suspected malware to malware families is further analyzed based on information in a tradecraft history data store.
- the information in the tradecraft history data store comprises information about known malware attacks, cybercrimes, espionage, hack attacks, hacktivism, and the like, and may provide information about who, when, where, and what. Who or what group initiated the malware attack or cybercrime? When did they launch the attack? Where did the attack occur or whom did the attack target? What did the attack strike? What information technology assets, what application or operating system vulnerabilities were targeted?
- tradecraft information stored in the tradecraft history data store may further be derived from other analysis and information collection, for example correlating data to identify a new threat.
- This information may be combined to further elaborate the picture provided by the preliminary analysis of the association of the suspected malware to malware families. For example, if the preliminary analysis determined that the suspected malware was substantially similar to three different malware families but the comparisons were too close to call a preference for one family alone, this preliminary result may be used in combination with information from the tradecraft history data store to select one malware family from the preliminary identification of three malware families. For example, possibly the value of one or more of the characteristics or parameters associated with the suspected malware can be associated with high probability to a known cybercrime group, based on the tradecraft history data store; and it is known that the cybercrime group sometimes uses malware associated with one of the three different malware families but never uses malware associated with the other two of the three different malware families. That analysis strongly supports the inference that the suspected malware should be associated with the malware family the cybercrime group is known to use (the one malware family among the three malware families identified in the preliminary result).
- membership in or association of suspected malware to a first malware family may be determined primarily based on a debug string, file metadata information, one or more rolling hash, and the header section of the suspected malware compared to the corresponding characteristics or properties of the first malware family while membership of suspected malware in or association to a second malware family may be determined primarily based on a geographical location, actor name, multilingual makers, and a file name of the suspected malware compared to the corresponding characteristics or properties of the second malware family.
- the matching criteria may be different from malware family to malware family.
- a cyber-analyst or a technician may define the matching criteria to the system for each malware family.
- the system 100 comprises a server computer 102 that executes a malware analysis application 104 .
- the analysis application 104 accesses a malware families data store 106 via a network 105 .
- a plurality of analysts may access and/or control the application 104 via analyst workstations 108 that are communicatively coupled to the network 105 .
- the network 105 may comprise one or more private networks, one or more public networks, or a combination thereof.
- the analysis application 104 may also access a tradecraft history data store 107 via the network 105 .
- a piece of suspected malware 111 may threaten an information technology asset 114 in an enterprise information technology system 112 .
- the IT asset 114 may be a firewall, a domain name system (DNS) server, a router, a web server, an application server, a content server, a memory storage device, a data based, a data store, a desktop computer, a laptop computer, or an embedded system computer (a computer system embedded within a hardware system such as a heating, ventilation, and air conditioning (HVAC) blower, an assembly line robot, a gasoline pump).
- the application server may execute any of one or more applications.
- the application server may provide an electronic commerce transaction functionality (e.g., receiving on-line purchase orders, brokering payment, commanding fulfillment of the order, etc.).
- the application server may execute enterprise applications of various kinds.
- the data store or data base may store confidential human resources records of an enterprise, confidential competitive business information such as marketing data, confidential tax records of the US Internal Revenue Service, confidential financial records such as bank accounts, confidential health and/or medical records, and the like confidential information.
- the analyst workstation 108 may transmit the suspected malware 111 to the malware analysis application 104 for analysis.
- the analyst workstation 108 may access the malware analysis application 104 via a web server 110 , for example via a web interface provided to the analyst workstation 108 via the network 105 .
- the analyst workstation 108 may access the malware analysis application 104 via a proprietary interface, for example using an application layer interface between the malware analysis application 104 and the analyst workstation 108 .
- the application 104 may automatically invoke a malware countermeasures launcher application 120 .
- the launcher 120 may determine an appropriate countermeasure to apply by accessing a malware to countermeasure mapping data store 122 and cause the appropriate countermeasure to execute, for example causing the selected malware countermeasure to be executed on one or more of the IT assets 114 in the enterprise information technology system 112 .
- one or more of countermeasure applications 116 within the enterprise information technology system 112 may be invoked by the malware countermeasures launcher application 120 to execute on one or more of the IT assets 114 .
- the launcher 120 may cause a security analysis or security field agent to take manual action to counter or mitigate the threat posed by the suspected malware 111 .
- a result of the matching analysis may be sent to the subject IT asset 114 , and the IT asset 114 may execute a countermeasures rule based on the result.
- the IT asset 114 that is integrated with server 102 or the launcher 120 may be configured with a definition of rules that associate to the possible matching results.
- the rules may be sent to the IT asset 114 by the malware analysis application 104 or the malware countermeasures launcher 120 in the form of a document, for example an XML document, an HTML document, a SNORT document, or other document format.
- the document may be generated by the malware countermeasures launcher 120 based on processing data in the malware to countermeasure mapping data store 122 .
- the IT asset 114 may be configured with a rules engine that processes the result based on the definition of rules to execute one or more countermeasures in response to the result.
- rules may command the IT asset 114 , responsive to the received result, to block SSH, HTTP, or ICMP packets in either an incoming direction where the source IP address matches an IP identified by the malware analysis application 104 in the suspected malware 111 or an outgoing direction where the destination IP address matches an IP identified by the malware analysis application 104 in the suspected malware 111 .
- Rules may command the IT asset 114 , responsive to the received result, to search and delete files with a filename identified by the malware analysis application 114 in the suspected malware 111 (e.g., a filename that is associated with the subject malware family).
- Rules may command the IT asset 114 , responsive to the received result, to block all emails from an email address identified in the suspected malware 111 (e.g., an email address associated with the subject malware family). Rules may command the IT asset 114 , responsive to the received result, to change a PERM_MODE configuration parameter of the IT asset 114 to a 0600 RECURSIVE value. As another example, permissions on an application file may be changed from 777 (read, write, execute permissions for owners, users, and groups) to 644 (only owners can read and write, groups and users can only read, and no one can execute).
- Countermeasures may comprise a large variety of software or actions. Countermeasures may mitigate or attenuate the severity of a cyberattack. In some cases, a countermeasure may thwart a cyberattack completely. Alternatively, a countermeasure may mitigate or reduce the potential damage of a cyberattack.
- a countermeasure may comprise quarantining a file in a portion of memory, for example quarantining the malware to a specific portion of memory that the operating system of the IT asset 114 imposes special restrictions upon.
- a countermeasure may entail executing the suspected malware 111 at a slower speed, for example causing the operating system to schedule execution of the suspected malware 111 less frequently.
- a countermeasure may slow or impede the suspected malware 111 , allowing information technology security analysts to have time to further analyze the suspected malware 111 and determine a further response to or a final disposition of the suspected malware 111 .
- the countermeasure may allow field operatives to track-down a source of the suspected malware 111 and/or a point of origin of an in-progress cyberattack to take-down the cybercriminal or cybercriminals themselves, for example leading law enforcement to apprehend the cybercriminal in the act.
- a countermeasure may comprise a patch that is applied to an existing application executing on one or more of the IT assets 114 , for example a patch applied to an email application executing on desktop computer.
- a countermeasure may comprise an application or a script that changes the domain name service (DNS) mapping of one or more domain names by updating one or more DNS servers and flushing a former DNS mapping from one or more DNS cache servers.
- DNS domain name service
- a countermeasure may comprise an application or a script that sniffs or otherwise analyzes service requests at a specific port number of a computer system and rejects requests that match a known malware service request signature.
- a specific example of a countermeasure is domain name system (DNS) sinkholing.
- countermeasures may comprise one or more of blocking communication relative to an internet protocol address embedded in the suspected malware 111 or software artifact, blocking communication relative to a domain name embedded in the software artifact, moving the software artifact to a quarantined area of memory of the information technology asset, and blocking communication from an email address embedded in the software artifact.
- the launcher 120 may look up one or more countermeasures to apply based partly on the malware family to which the suspected malware 111 is deemed associated and partly based on the values of one or more characteristics of the suspected malware 111 .
- a number of different countermeasures may be applied to mitigate the effects of malware from the same malware family when the malware is targeted to different target processors, when the malware is associated with different countries, when the malware is associated with different languages, and the like.
- a first countermeasure may be applied when the first malware is associated with Korean language embedded in the malware; for a second malware associated with the first malware family, a second countermeasure may be applied when the second malware is associated with English language embedded in the malware; and for a third malware associated with the first malware family, a third countermeasure may be applied when the third malware is associated with Spanish language embedded in the malware.
- the enterprise IT system 112 may be one of a plurality of customers of an information technology security services provider.
- the security services provider may operate and control the server computer 102 , the malware families data store 106 , the malware to countermeasures mapping data store 122 , the analyst work stations 108 , and the web server 110 .
- the customers may access the security services via a web page or web based interface that is supported by the web server 110 .
- a plurality of enterprise IT systems 112 may be supported by the same security services provider, for example by accessing the services via separate instances of the web page or web based interface.
- the server 102 , the data stores 106 , 107 , 122 , the analyst workstations 108 , and the web server 110 may be part of the enterprise IT system 112 , for example an IT security function of the enterprise.
- the suspected malware 111 may not be an actual component of the system 100 but is illustrated in FIG. 1 as an actor or relevant work piece for the system 100 to act upon and/or respond to.
- the suspected malware 111 is a software artifact, for example a computer program, a binary, a script, or other computer based logic, and as such may be referred to as a software artifact. It is understood that in some cases the suspected malware 111 may turn out to be benign and to have no intention or functionality that deliberately threatens the desired and ordinary functioning of IT assets 114 . In other cases, however, the suspected malware 111 , upon analysis and/or research, is determined to be malware.
- the term software artifact may be applied to any of a suspected malware item, to a known malware item, or a known benign (e.g., not malicious, not malware) software item.
- the malware families data store 106 stores a variety of information about known malware families and known malware. Some of the information comprises characteristics, properties, or attributes of the malware and malware families. It is understood that a characteristic may be known about one known malware item but not known about another known malware item. Malware characteristics of known malware or malware families may comprise a plurality of a debug string, a file path, a file name, an author name, a file size, a bitmap, one or more rolling hash values, a compiler used to compile the subject malware, file meta information, a header section, a code section, a data segment section, a stack segment section, a heap segment section, disassembly code for binaries, a domain name, an internet protocol address, an email address, a DOS header, a NT header, a function signature, an image, a version identity, a process name, a programming language of the malware, a data directory name, a registry key, an included file, a file executed, a file modified, a content string,
- Debug strings may be idiosyncratic and may contain words or phrases that would not likely be repeated by chance in unrelated code.
- presence of a specific debug string in the suspected malware 111 may be a strong confirmation of shared lineage with a known malware that embeds the same specific debug string.
- file path literals and file names may be idiosyncratic and provide evidence of shared lineage of the suspected malware 111 .
- a name of an author of a software artifact may provide evidence of shared lineage.
- This kind of information may be embedded in the binary executable or in metadata included in a file containing the suspected malware 111 . Some of the information may be input by an analyst or another when providing the suspected malware 111 to the malware analysis application 104 for processing.
- a bitmap may provide a graphical representation on a display screen when rendered during execution of the suspected malware 111 or of known malware.
- the presence of a known bitmap in the suspected malware 111 may be used to compare with a known malware that likewise comprises the bitmap.
- software files can be partitioned into header sections, code sections, data segment sections, stack segment sections, and/or heap segment sections.
- the partitioning of the suspected malware 111 may be used to compare with a known malware that may have like or similar partitioning.
- the presence of specific domain names, specific IP addresses, specific uniform resource locators (URLs), or specific email addresses may be useful for establishing a shared lineage between the suspected malware 111 and known malware.
- snippets of language may be present in plaintext (e.g., not code literals mandated by the employed programming language or scripting language itself) in the suspected malware 111 , and a language (Korean, Uzbek, Spanish, English, etc.) of the creator of the suspected malware 111 may be identified thereby.
- snippets of two or more languages may be present, which may be referred to as multilingual.
- the snippets of text may be embedded in the code as comments or as user interface descriptions.
- a programming language, configurations, and communication protocols relied upon by the suspected malware 111 on their own may not be determinative, but they may be used to corroborate or exclude association to a known malware family.
- the characteristics associated with the suspected malware 111 may comprise compilation flags, for example an indication that loop unrolling was enabled via an funroll-loops flag was set when the suspected malware 111 was compiled may be of use in establishing association of the suspected malware 111 to a malware family.
- Configurations of the suspected malware 111 may comprise selections of settings that make the software artifact suitable for use in specific execution environments, for example configured for execution on a specific target processor or specific platform.
- the names of equipment that is engaged by the suspected malware 111 can be helpful, for example names of printers, data stores, control work stations, and the like.
- the geographical location where the suspected malware 111 was discovered or deployed from can be helpful. It will be appreciated that the characteristics described above may not provide significant information in isolation, that it may be the combination of many factors that suggest shared lineage with one malware family and
- a rolling hash may be performed on different portions of the suspected malware 111 .
- a hash is a number that is calculated by processing a series of data elements using a hashing algorithm.
- the hash is typically a relatively short number, relative to the complete sequence of hashed data elements.
- the hash determined from hashing the same base data will be the same.
- hashing blocks of data or instructions that are copies of each other will result in hashes that will be the same.
- hashes of data elements that vary even slightly from each other may be completely different and not proximate in value.
- the rolling hash may be performed on blocks of 1,000 bytes of suspected malware or some other block size. This rolling hash may be compared to like rolling hashes determined on members of a malware family.
- Rolling hashes using smaller number of bytes may be performed on the suspected malware 111 and compared to like rolling hashes determined on members of the malware family.
- the results of these rolling hashes of the known malware may be stored in the malware families data store 106 .
- the determination of the rolling hashes on the suspected malware 111 may be performed by the malware analysis application 104 .
- the malware analysis application 104 first determines that the suspected malware 111 matches to a threshold degree of matching with a known family of malware before comparing the rolling hashes of the members of the known malware family to the rolling hashes of the suspected malware.
- the content in the malware families data store 106 may comprise identities of malware families (e.g., names of the families) and definitions of malware families.
- the malware families data store 106 comprises values of characteristics, properties, and/or attributes of malware families and members of malware families.
- the malware families data store 106 may comprise copies of malware and metadata about the malware.
- the content in the malware families data store 106 may be accumulated over time and populated into the malware families data store 106 as new content becomes available. Thus, the data in the malware families data store 106 remains refreshed and updated.
- the malware families data store 106 may store tens of thousands, hundreds of thousands, even millions of separate instances of malware.
- Families may be identified by subject matter experts, for example based on the knowledge of those subject matter experts. Some malware may be associated with specific malware families by subject matter experts. The values of characteristics, parameters, and/or attributes associated with a malware family may be defined by subject matter experts and/or defined based on the values of characteristics, parameters, and/or attributes of malware members of the given malware family. In an embodiment, an application or script (not shown) may execute on the server 102 or another computer system that automatically extracts values of characteristics, parameters, and/or attributes of malware members of a given malware family and updates the corresponding values of characteristics, parameters, and/or attributes of the malware family, for example on the instance of a malware first being assigned to be a member of the subject malware family.
- malware families may be identified and/or defined through the use of statistical clustering techniques. For example, an analysis of values of characteristics of malware is performed and mathematical techniques are used to define clustering definitions to segregate the malware into a predefined number of malware families, for example 10 malware families or 100 malware families. This clustering analysis may be performed on malware that the subject matter experts are not confident can be justifiably assigned to the malware families they have defined based on their expertise and knowledge.
- analysis of the suspected malware 111 to associate it to a known malware family may progress in an iterative fashion. For example, a preliminary analysis of the suspected malware 111 may narrow the related malware families to three different malware families but not be able to confidently associate the suspected malware 111 to only one of the malware families based on the information in the malware families data store 106 alone.
- the malware analysis application 104 may then access information from the tradecraft history data store 107 and use that information to choose between the runners-up malware families to associate to the suspected malware 111 .
- the malware analysis application 104 may search the tradecraft history data store 107 to find entries where the runners-up malware families are involved. These entries may then be analyzed in the context of the values of the characteristics of the suspected malware 111 to converge on one most likely malware family to which to associate the suspected malware 111 .
- a particular cybercrime group or gang is responsible for launching the suspected malware 111 , and it may be known, based on information in the tradecraft history data store 107 , that the subject cybercrime gang only uses malware associated with one of the runners-up families of malware. This would support the inference that the suspected malware 111 is associated with this one malware family.
- the analysis of relevant information accessed from the tradecraft history data store 107 may involve using values of two or more characteristics of the suspected malware 111 and the list of runners-up malware families to infer the malware family to associate to the suspected malware 111 .
- the language of plaintext in the suspected malware 111 , the location where the suspected malware 111 was launched, and the targeted technology (email tool, login sessions, the like) to be exploited can be combined to select the one most likely malware family out of three runners-up malware families.
- the malware analysis application 104 determines a plurality of metrics for the suspected malware 111 for each known malware family, each metric representing a degree of match between a characteristic of the suspected malware and the corresponding characteristic defined for the known malware family. For example, a degree of match between a list of IP addresses embedded in the software artifact and a list of IP addresses embedded in the members of the known malware family may be determined. These metrics may be Boolean in nature (true or false, 1 or 0). Alternatively, they could be represented as a percentage. In an embodiment, a plurality of characteristics may be compared as a group to a corresponding plurality of characteristics of the known family of malware.
- the metric may be 0.6 or 60%. If two of a language, a programming language, and a geographic location characteristics of the software artifact match the language, the programming language, and the geographic location characteristics of the known family of malware, the metric may be 0.66 of 66%.
- the calculation of metrics may be performed for the software artifact for each of the known malware families identified and stored in the malware families data store 106 . It is understood that the characteristics of the malware families stored in the data store 106 may be determined in advance and stored. Some of the values determined for characteristics or parameters of malware families may be an average across all the members of the known malware families. At the same time, some of the values determined for characteristics or parameters of malware families may be a sum or collection of values of the subject characteristic of all the members of the known malware families. For example, the IP address characteristic of a known malware family may include all of the IP addresses that appear in any member of the known malware family.
- the IP address characteristic of the malware family may include the first IP address, the second IP address, and any other IP addresses that appear in one or more member of the known malware family.
- the value of a characteristic of a malware family may be determined as a union of the values of the characteristics for all members of the malware family.
- the value of a characteristic of a malware family may be determined as an intersection of the values of the characteristics for all members of the malware family.
- a comparison among the matching metrics of the suspected malware 111 or software artifact for each malware family is performed by the malware analysis application 104 to determine a malware family to which the suspected malware 111 best matches. If the best match is below a predefined threshold matching value, the suspected malware 111 or software artifact may be deemed to not match any known malware family and/or to not be malware. If the best match is above a predefined threshold matching value, the suspected malware 111 is associated with the subject malware family. This may be referred to as assigning membership in the malware family to the suspected malware 111 .
- the comparison of the matching metrics of the suspected malware 111 for each malware family may be performed in a variety of ways.
- raw matching scores are used, for example summing all characteristic matching values for the suspected malware 111 to determine a matching score representing the degree of shared lineage between the suspected malware 111 and a known malware family, and comparing the sums associated with each known malware family.
- the suspected malware 111 may be deemed a member of the known malware family that has the highest sum.
- a sum of weighted factors is used to calculate the degree of shared lineage between the suspected malware 111 and the known malware family, and the sum of weighted factors of associated with each of the malware families are compared with each other to determine the best match of the suspected malware 111 to a known malware family (e.g., the sum with the highest value identifies the best matching malware family).
- the weights may be uniform across all the known malware families (i.e., the same weights may be used for calculating each sum of weighted factors).
- different weightings may be used for each different known malware family. When different weightings are used, the weights may be determined in such a way as to normalize the sum of weighted factors, for example to limit the maximum sum to a predefined value, whereby to compare matching values among the different known malware families.
- the weightings or coefficients W may be universal and used with every malware family.
- the weightings or coefficients W may be different for each malware family.
- an optimization or curve fitting algorithm may be used to determine a uniform set of weightings W to be applied across all the malware families by setting the weightings W to best associate the previously assigned members of malware families to their associated malware family.
- a different set of weightings W may be found for each different malware family based on best fitting the previously assigned members of the known malware family to that family.
- a set of malware families and members of malware families may have already been determined by prior manual efforts, for example based on analysis by subject matter experts.
- all the weightings may be constrained so that the sum of the weightings for any malware family sums to the same constant value, for example sum to 1 or to some other constant.
- Each match score represents the degree of match between the value of a characteristic of the suspected malware 111 and the value of the corresponding characteristic of the malware family.
- These match scores may be considered to be percentages, for example by multiplying the match score (which has a value in the range from 0 to 1) by 100 to obtain percentages in the range from 0% to 100%.
- This family overall match or family match score can be seen as the sum of each of the scalar values of the vector M w , as per Equation 3.
- the number of characteristics that have values for both the suspected malware 111 and a given known malware family may be different from family to family.
- the family overall score may be calculated to normalize the scores across different malware families, for example as:
- the special case of different number of characteristics for different malware families may be taken into account by normalizing the weightings W, for example constraining the weightings W for any malware family to sum to the same constant value such as 1 or another constant.
- the software artifact or suspected malware 111 may be assigned membership in a known malware family for which the family overall match for the suspected malware 111 is maximum and when that family overall match is at or above a pre-defined threshold. It is understood that the suspected malware 111 may not in fact be malware after all. If the maximum family overall match is not high enough, the suspected malware 111 may not be classified as malware.
- the vectors M and M w may each be translated to a representation as a magnitude and a “direction,” for example where the direction of the vector is represented as a unit vector (e.g., a vector of amplitude 1 that maintains the relative proportions among the elements of the vector).
- the amplitude or magnitude of vector M may be found as:
- a baseline percentage match may be calculated as
- MFB P T Equation ⁇ ⁇ 11
- P is the number of characteristics of parameters of the software artifact or suspected malware 111 that reached a predefined threshold of matching to the corresponding characteristics or parameters of the subject malware family and where T is the number of characteristics or parameters that are compared between the software artifact and the subject malware family.
- the predefined threshold for matching in determining P may defined on a characteristic by characteristic basis.
- the match may be defined to be agreement between the value of the first characteristic associated with the suspected malware 111 and the value of the first characteristic for the malware family within ⁇ 0.1 (e.g., when characteristic values range from 0.0 to 1.0) or alternatively within ⁇ 10%, while for a second characteristic, the match may be defined to be agreement between the value of the second characteristic associated with the suspected malware 111 and the value of the second characteristic for the malware family within ⁇ 0.2 or ⁇ 20%.
- the MF and the W associated with a software artifact or the suspected malware 111 and a specific known malware family may be used by the malware analysis application 104 to compare the degree of relation between the software artifact or suspected malware 111 and the several known malware families.
- the software artifact may be the suspected malware 111 described above with reference to FIG. 1 . It is understood that different software artifacts may allow determining different characteristics, parameters, or attributes. Said in another way, some of the characteristics that can be evaluated and determined for a first software artifact may not be present or able to be determined for a second software artifact. Likewise, some characteristics that can be evaluated and determined for the second software artifact may not be present or able to be determined for the first software artifact.
- block 202 comprises determining the values of characteristics of the software artifact that are accessible and/or determinable and not determining the values of other characteristics of the software artifact that are, for one reason or another, undeterminable based on the available information.
- the comparison of characteristics is based on comparing the values of the characteristics of the software artifact to the values of the corresponding characteristics of the known malware families.
- the values of the characteristics of the known malware families may be determined as described above with reference to FIG. 1 .
- the value of a characteristic, parameter, or attribute of a malware family may be a value that is based on an average of the value of the characteristic across multiple members of the malware family, based on an intersection of the set of values of the characteristic of members of the malware family, or based on a union of the set of values of the characteristic of members of the malware family.
- the result of the comparisons may be captured in metrics. Additionally, summary metrics may be determined by summing metrics associated with individual characteristics of the software artifact or suspected malware 111 as described above with reference to FIG. 1 .
- the decision to associate the software artifact or suspected malware 111 to a specific known malware family may be performed as described with reference to FIG. 1 above. For example, the decision may be based on comparing the metrics determined in block 204 or comparing summary metrics. In some cases, it may be determined that the software artifact is not in fact an item of malware, and in this case the software artifact is not associated to any malware family.
- the association of the software artifact to one malware family may involve identifying a plurality of preferred malware family candidates (e.g., runner-up families of malware) and selecting among the plurality of candidates based on analysis of related information accessed from the tradecraft history data store 107 .
- a plurality of preferred malware family candidates e.g., runner-up families of malware
- the software artifact further may be assigned to the malware family and the values of the characteristics or parameters of the software artifact may be combined or integrated with those of the malware family as a whole. Additionally, the binary or source code of the software artifact may be stored with other like binary or source of other members of the malware family in the malware families data store 106 . It is understood, however, that the software artifact may be associated to the malware family but may not be made a member of the malware family and may not have the value of its characteristics stored in the malware families data store 106 .
- the action of assigning the software artifact to the malware family and storing or integrating the value of its characteristics with those of the malware family is performed at a later time by an information security technology analyst, for example after more thorough scrutiny and analysis, to be sure of the decision.
- command the selected countermeasure to execute on the information technology asset For example, invoke a command that causes the countermeasure to execute on one of the IT assets 114 .
- field security personnel may be commanded to take actions to mitigate or thwart the threat posed by the software artifact.
- the field security personnel may arrange a sting operation in collaboration with out-of-country police forces to apprehend and take down a ring of cyber criminals who are offering to sell the software artifact or using the software artifact to perpetrate cybercrime.
- countermeasures may be applied at different phases of a cybercrime lifecycle or electronic crime business process: during a credential collection phase, during a monetization phase, or during a laundering phase.
- a method 220 determine by a computer system a value of a plurality of characteristics of a malware software item (e.g., the suspected malware 111 which may also be referred to as a software artifact or a software item), where the characteristics comprise at least two of a file path identified in the malware software item, a file name identified in the malware software item, a name of an author of the malware software item, an identity of a compiler used to compile the malware software item, a domain name identified in the malware software item, an internet protocol address identified in the malware software item, an email address identified in the malware software item, and an identity of a programming language used to create the malware software item.
- a malware software item e.g., the suspected malware 111 which may also be referred to as a software artifact or a software item
- the characteristics comprise at least two of a file path identified in the malware software item, a file name identified in the malware software item, a name of an author of the malware software item, an identity of a compiler used to compile the
- a hash is a number that results from processing a sequence of data (e.g., the bytes of the malware software item, which may be referred to generically as data even if the data encodes instructions, logic, or information) with a hashing algorithm or hash function.
- malware software item by the computer system compares the malware software item by the computer system to a plurality of malware families, wherein each of the characteristics of the malware software item is compared to a corresponding characteristic of each of the malware families and one or more of the hashes of the malware software item is compared to a corresponding hash associated with the malware families.
- each of the characteristics of the malware software item is compared to a corresponding characteristic of each of the malware families and one or more of the hashes of the malware software item is compared to a corresponding hash associated with the malware families.
- associate the malware software item to one of the malware families associate the malware software item to one of the malware families.
- FIG. 4 illustrates a computer system 380 suitable for implementing one or more embodiments disclosed herein.
- the server 102 the web server 110 , the analyst work stations 108 , and the IT assets 114 may be implemented as a computer system consistent with system 380 .
- one or more of the countermeasure applications 116 execute on a computer system consistent with system 380 .
- the computer system 380 includes a processor 382 (which may be referred to as a central processor unit or CPU) that is in communication with memory devices including secondary storage 384 , read only memory (ROM) 386 , random access memory (RAM) 388 , input/output (I/O) devices 390 , and network connectivity devices 392 .
- the processor 382 may be implemented as one or more CPU chips.
- a design that is still subject to frequent change may be preferred to be implemented in software, because re-spinning a hardware implementation is more expensive than re-spinning a software design.
- a design that is stable that will be produced in large volume may be preferred to be implemented in hardware, for example in an application specific integrated circuit (ASIC), because for large production runs the hardware implementation may be less expensive than the software implementation.
- ASIC application specific integrated circuit
- a design may be developed and tested in a software form and later transformed, by well-known design rules, to an equivalent hardware implementation in an application specific integrated circuit that hardwires the instructions of the software.
- a machine controlled by a new ASIC is a particular machine or apparatus, likewise a computer that has been programmed and/or loaded with executable instructions may be viewed as a particular machine or apparatus.
- the CPU 382 may execute a computer program or application.
- the CPU 382 may execute software or firmware stored in the ROM 386 or stored in the RAM 388 .
- the CPU 382 may copy the application or portions of the application from the secondary storage 384 to the RAM 388 or to memory space within the CPU 382 itself, and the CPU 382 may then execute instructions that the application is comprised of.
- the CPU 382 may copy the application or portions of the application from memory accessed via the network connectivity devices 392 or via the I/O devices 390 to the RAM 388 or to memory space within the CPU 382 , and the CPU 382 may then execute instructions that the application is comprised of.
- an application may load instructions into the CPU 382 , for example load some of the instructions of the application into a cache of the CPU 382 .
- an application that is executed may be said to configure the CPU 382 to do something, e.g., to configure the CPU 382 to perform the function or functions promoted by the subject application.
- the CPU 382 becomes a specific purpose computer or a specific purpose machine.
- the secondary storage 384 is typically comprised of one or more disk drives or tape drives and is used for non-volatile storage of data and as an over-flow data storage device if RAM 388 is not large enough to hold all working data. Secondary storage 384 may be used to store programs which are loaded into RAM 388 when such programs are selected for execution.
- the ROM 386 is used to store instructions and perhaps data which are read during program execution. ROM 386 is a non-volatile memory device which typically has a small memory capacity relative to the larger memory capacity of secondary storage 384 .
- the RAM 388 is used to store volatile data and perhaps to store instructions. Access to both ROM 386 and RAM 388 is typically faster than to secondary storage 384 .
- the secondary storage 384 , the RAM 388 , and/or the ROM 386 may be referred to in some contexts as computer readable storage media and/or non-transitory computer readable media.
- I/O devices 390 may include printers, video monitors, liquid crystal displays (LCDs), touch screen displays, keyboards, keypads, switches, dials, mice, track balls, voice recognizers, card readers, paper tape readers, or other well-known input devices.
- LCDs liquid crystal displays
- touch screen displays keyboards, keypads, switches, dials, mice, track balls, voice recognizers, card readers, paper tape readers, or other well-known input devices.
- the network connectivity devices 392 may take the form of modems, modem banks, Ethernet cards, universal serial bus (USB) interface cards, serial interfaces, token ring cards, fiber distributed data interface (FDDI) cards, wireless local area network (WLAN) cards, radio transceiver cards that promote radio communications using protocols such as code division multiple access (CDMA), global system for mobile communications (GSM), long-term evolution (LTE), worldwide interoperability for microwave access (WiMAX), near field communications (NFC), radio frequency identity (RFID), and/or other air interface protocol radio transceiver cards, and other well-known network devices. These network connectivity devices 392 may enable the processor 382 to communicate with the Internet or one or more intranets.
- CDMA code division multiple access
- GSM global system for mobile communications
- LTE long-term evolution
- WiMAX worldwide interoperability for microwave access
- NFC near field communications
- RFID radio frequency identity
- RFID radio frequency identity
- the processor 382 might receive information from the network, or might output information to the network in the course of performing the above-described method steps. Such information, which is often represented as a sequence of instructions to be executed using processor 382 , may be received from and outputted to the network, for example, in the form of a computer data signal embodied in a carrier wave.
- Such information may be received from and outputted to the network, for example, in the form of a computer data baseband signal or signal embodied in a carrier wave.
- the baseband signal or signal embedded in the carrier wave may be generated according to several methods well-known to one skilled in the art.
- the baseband signal and/or signal embedded in the carrier wave may be referred to in some contexts as a transitory signal.
- the processor 382 executes instructions, codes, computer programs, scripts which it accesses from hard disk, floppy disk, optical disk (these various disk based systems may all be considered secondary storage 384 ), flash drive, ROM 386 , RAM 388 , or the network connectivity devices 392 . While only one processor 382 is shown, multiple processors may be present. Thus, while instructions may be discussed as executed by a processor, the instructions may be executed simultaneously, serially, or otherwise executed by one or multiple processors.
- Instructions, codes, computer programs, scripts, and/or data that may be accessed from the secondary storage 384 for example, hard drives, floppy disks, optical disks, and/or other device, the ROM 386 , and/or the RAM 388 may be referred to in some contexts as non-transitory instructions and/or non-transitory information.
- the computer system 380 may comprise two or more computers in communication with each other that collaborate to perform a task.
- an application may be partitioned in such a way as to permit concurrent and/or parallel processing of the instructions of the application.
- the data processed by the application may be partitioned in such a way as to permit concurrent and/or parallel processing of different portions of a data set by the two or more computers.
- virtualization software may be employed by the computer system 380 to provide the functionality of a number of servers that is not directly bound to the number of computers in the computer system 380 .
- virtualization software may provide twenty virtual servers on four physical computers.
- Cloud computing may comprise providing computing services via a network connection using dynamically scalable computing resources.
- Cloud computing may be supported, at least in part, by virtualization software.
- a cloud computing environment may be established by an enterprise and/or may be hired on an as-needed basis from a third party provider.
- Some cloud computing environments may comprise cloud computing resources owned and operated by the enterprise as well as cloud computing resources hired and/or leased from a third party provider.
- the computer program product may comprise one or more computer readable storage medium having computer usable program code embodied therein to implement the functionality disclosed above.
- the computer program product may comprise data structures, executable instructions, and other computer usable program code.
- the computer program product may be embodied in removable computer storage media and/or non-removable computer storage media.
- the removable computer readable storage medium may comprise, without limitation, a paper tape, a magnetic tape, magnetic disk, an optical disk, a solid state memory chip, for example analog magnetic tape, compact disk read only memory (CD-ROM) disks, floppy disks, jump drives, digital cards, multimedia cards, and others.
- the computer program product may be suitable for loading, by the computer system 380 , at least portions of the contents of the computer program product to the secondary storage 384 , to the ROM 386 , to the RAM 388 , and/or to other non-volatile memory and volatile memory of the computer system 380 .
- the processor 382 may process the executable instructions and/or data structures in part by directly accessing the computer program product, for example by reading from a CD-ROM disk inserted into a disk drive peripheral of the computer system 380 .
- the processor 382 may process the executable instructions and/or data structures by remotely accessing the computer program product, for example by downloading the executable instructions and/or data structures from a remote server through the network connectivity devices 392 .
- the computer program product may comprise instructions that promote the loading and/or copying of data, data structures, files, and/or executable instructions to the secondary storage 384 , to the ROM 386 , to the RAM 388 , and/or to other non-volatile memory and volatile memory of the computer system 380 .
- the secondary storage 384 , the ROM 386 , and the RAM 388 may be referred to as a non-transitory computer readable medium or a computer readable storage media.
- a dynamic RAM embodiment of the RAM 388 likewise, may be referred to as a non-transitory computer readable medium in that while the dynamic RAM receives electrical power and is operated in accordance with its design, for example during a period of time during which the computer system 380 is turned on and operational, the dynamic RAM stores information that is written to it.
- the processor 382 may comprise an internal RAM, an internal ROM, a cache memory, and/or other internal non-transitory storage blocks, sections, or components that may be referred to in some contexts as non-transitory computer readable media or computer readable storage media.
Abstract
Description
W={ω 1,ω2,ω3, . . . }
The weightings or coefficients W may be universal and used with every malware family. Alternatively, the weightings or coefficients W may be different for each malware family. For example, an optimization or curve fitting algorithm may be used to determine a uniform set of weightings W to be applied across all the malware families by setting the weightings W to best associate the previously assigned members of malware families to their associated malware family. Alternatively, a different set of weightings W may be found for each different malware family based on best fitting the previously assigned members of the known malware family to that family. At an initial state of the
M={μ 1,μ2,μ3, . . . } Equation 2
where each match score reflects a value in the range from 0 to 1. Each match score represents the degree of match between the value of a characteristic of the suspected
M w={ω1μ1,ω2μ2,ω3μ3, . . . } Equation 3
family overall match=Σi=1 kωiμi Equation 4
where k represents the number of characteristics determined for both the known malware family and the suspected malware 111 (e.g., the author of the software artifact may be known but the author for the malware family may not be known, hence author would not be counted in the k number of characteristics determined for both), ωi represents the i-th weighting factor or weighting coefficient, and μi represents the i-th match score (amount of match between the value of the i-th characteristic of the software artifact and the value of the corresponding characteristic of the known software family). This family overall match or family match score can be seen as the sum of each of the scalar values of the vector Mw, as per Equation 3.
Alternatively, the special case of different number of characteristics for different malware families may be taken into account by normalizing the weightings W, for example constraining the weightings W for any malware family to sum to the same constant value such as 1 or another constant.
|M|=√{square root over (Σi=1 k(μi)2)} Equation 5
the direction or unit vector of vector M may be found as
and then
M=|M|θ M Equation 7
As such, likewise, the amplitude or magnitude of vector Mw may be found as:
|M w|=√{square root over (Σi=1 k(ωiμi)2)} Equation 8
the direction or unit vector of vector Mw may be found as
and then
M w =|M w|θM
Where P is the number of characteristics of parameters of the software artifact or suspected
MF={|M|,θ m ,|M W|,θM
The MF and the W associated with a software artifact or the suspected
Claims (34)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/698,534 US9892261B2 (en) | 2015-04-28 | 2015-04-28 | Computer imposed countermeasures driven by malware lineage |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/698,534 US9892261B2 (en) | 2015-04-28 | 2015-04-28 | Computer imposed countermeasures driven by malware lineage |
Publications (2)
Publication Number | Publication Date |
---|---|
US20160323295A1 US20160323295A1 (en) | 2016-11-03 |
US9892261B2 true US9892261B2 (en) | 2018-02-13 |
Family
ID=57205834
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/698,534 Active 2035-07-29 US9892261B2 (en) | 2015-04-28 | 2015-04-28 | Computer imposed countermeasures driven by malware lineage |
Country Status (1)
Country | Link |
---|---|
US (1) | US9892261B2 (en) |
Cited By (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20170169219A1 (en) * | 2015-12-15 | 2017-06-15 | Yokogawa Electric Corporation | Control device, integrated industrial system, and control method thereof |
US10063583B2 (en) | 2014-04-03 | 2018-08-28 | Fireeye, Inc. | System and method of mitigating cyber attack risks |
US10176321B2 (en) | 2015-09-22 | 2019-01-08 | Fireeye, Inc. | Leveraging behavior-based rules for malware family classification |
US10819742B2 (en) | 2015-12-15 | 2020-10-27 | Yokogawa Electric Corporation | Integrated industrial system and control method thereof |
US11176251B1 (en) | 2018-12-21 | 2021-11-16 | Fireeye, Inc. | Determining malware via symbolic function hash analysis |
US20220092506A1 (en) * | 2019-07-19 | 2022-03-24 | The Boston Consulting Group, Inc. | Methods and Systems for Determining an Optimal Portfolio of Cyber Security Related Projects |
US11310238B1 (en) | 2019-03-26 | 2022-04-19 | FireEye Security Holdings, Inc. | System and method for retrieval and analysis of operational data from customer, cloud-hosted virtual resources |
US11436327B1 (en) | 2019-12-24 | 2022-09-06 | Fireeye Security Holdings Us Llc | System and method for circumventing evasive code for cyberthreat detection |
US11522884B1 (en) | 2019-12-24 | 2022-12-06 | Fireeye Security Holdings Us Llc | Subscription and key management system |
US11601444B1 (en) | 2018-12-31 | 2023-03-07 | Fireeye Security Holdings Us Llc | Automated system for triage of customer issues |
US11636198B1 (en) | 2019-03-30 | 2023-04-25 | Fireeye Security Holdings Us Llc | System and method for cybersecurity analyzer update and concurrent management system |
US11677786B1 (en) | 2019-03-29 | 2023-06-13 | Fireeye Security Holdings Us Llc | System and method for detecting and protecting against cybersecurity attacks on servers |
US11743290B2 (en) | 2018-12-21 | 2023-08-29 | Fireeye Security Holdings Us Llc | System and method for detecting cyberattacks impersonating legitimate sources |
US11838300B1 (en) | 2019-12-24 | 2023-12-05 | Musarubra Us Llc | Run-time configurable cybersecurity system |
US11985149B1 (en) | 2023-03-06 | 2024-05-14 | Musarubra Us Llc | System and method for automated system for triage of cybersecurity threats |
Families Citing this family (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8813050B2 (en) | 2008-06-03 | 2014-08-19 | Isight Partners, Inc. | Electronic crime detection and tracking |
US9886581B2 (en) * | 2014-02-25 | 2018-02-06 | Accenture Global Solutions Limited | Automated intelligence graph construction and countermeasure deployment |
US9749344B2 (en) | 2014-04-03 | 2017-08-29 | Fireeye, Inc. | System and method of cyber threat intensity determination and application to cyber threat mitigation |
US9892261B2 (en) | 2015-04-28 | 2018-02-13 | Fireeye, Inc. | Computer imposed countermeasures driven by malware lineage |
US10454950B1 (en) | 2015-06-30 | 2019-10-22 | Fireeye, Inc. | Centralized aggregation technique for detecting lateral movement of stealthy cyber-attacks |
US10826933B1 (en) | 2016-03-31 | 2020-11-03 | Fireeye, Inc. | Technique for verifying exploit/malware at malware detection appliance through correlation with endpoints |
US10893059B1 (en) * | 2016-03-31 | 2021-01-12 | Fireeye, Inc. | Verification and enhancement using detection systems located at the network periphery and endpoint devices |
EP3276907B1 (en) * | 2016-07-29 | 2024-05-08 | Rohde & Schwarz GmbH & Co. KG | A method and apparatus for testing a security of communication of a device under test |
US10104101B1 (en) * | 2017-04-28 | 2018-10-16 | Qualys, Inc. | Method and apparatus for intelligent aggregation of threat behavior for the detection of malware |
US10089467B1 (en) * | 2017-05-23 | 2018-10-02 | Malwarebytes Inc. | Static anomaly-based detection of malware files |
WO2019112575A1 (en) * | 2017-12-06 | 2019-06-13 | Visa International Service Association | Method and system for prioritizing information technology findings for remediating information technology assets |
US10922407B2 (en) * | 2018-11-19 | 2021-02-16 | International Business Machines Corporation | Discriminant power based threat detection |
US11178171B2 (en) * | 2018-12-04 | 2021-11-16 | International Business Machines Corporation | Security mechanism for suspicious files |
US11363042B2 (en) * | 2019-01-21 | 2022-06-14 | Netapp, Inc. | Detection of anomalies in communities based on access patterns by users |
US11201893B2 (en) * | 2019-10-08 | 2021-12-14 | The Boeing Company | Systems and methods for performing cybersecurity risk assessments |
CN111225079B (en) * | 2019-12-31 | 2024-03-05 | 苏州三六零智能安全科技有限公司 | Method, device, storage medium and device for positioning geographical position of malicious software author |
US11689567B2 (en) * | 2020-03-06 | 2023-06-27 | Honeywell International Inc. | Mapping an attack tree and attack prediction in industrial control and IIoT environment using hash data analytics |
WO2023229894A1 (en) * | 2022-05-25 | 2023-11-30 | Bluevoyant Llc | Devices, systems, and methods for identifying cyber assets and generating cyber risk mitigation actions based on a democratic matching algorithm |
Citations (95)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20030009699A1 (en) | 2001-06-13 | 2003-01-09 | Gupta Ramesh M. | Method and apparatus for detecting intrusions on a computer system |
US20030051026A1 (en) | 2001-01-19 | 2003-03-13 | Carter Ernst B. | Network surveillance and security system |
US20030056116A1 (en) | 2001-05-18 | 2003-03-20 | Bunker Nelson Waldo | Reporter |
US20030097588A1 (en) | 2001-10-25 | 2003-05-22 | Fischman Reuben S. | Method and system for modeling, analysis and display of network security events |
US20030177376A1 (en) | 2002-01-30 | 2003-09-18 | Core Sdi, Inc. | Framework for maintaining information security in computer networks |
US20030233319A1 (en) | 2001-03-20 | 2003-12-18 | David Lawrence | Electronic fund transfer participant risk management clearing |
US20050149348A1 (en) | 2004-01-07 | 2005-07-07 | International Business Machines Corporation | Detection of unknown scenarios |
US6947978B2 (en) | 2000-12-29 | 2005-09-20 | The United States Of America As Represented By The Director, National Security Agency | Method for geolocating logical network addresses |
US20050210275A1 (en) | 1999-07-29 | 2005-09-22 | Intertrust Technologies Corporation | Software self-defense systems and methods |
US20060015941A1 (en) | 2004-07-13 | 2006-01-19 | Mckenna John J | Methods, computer program products and data structures for intrusion detection, intrusion response and vulnerability remediation across target computer systems |
US20060031940A1 (en) | 2004-08-07 | 2006-02-09 | Rozman Allen F | System and method for protecting a computer system from malicious software |
US20060059557A1 (en) | 2003-12-18 | 2006-03-16 | Honeywell International Inc. | Physical security management system |
US20060080637A1 (en) | 2004-10-12 | 2006-04-13 | Microsoft Corporation | System and method for providing malware information for programmatic access |
US20060191007A1 (en) | 2005-02-24 | 2006-08-24 | Sanjiva Thielamay | Security force automation |
US20060212932A1 (en) | 2005-01-10 | 2006-09-21 | Robert Patrick | System and method for coordinating network incident response activities |
US20070006315A1 (en) | 2005-07-01 | 2007-01-04 | Firas Bushnaq | Network asset security risk surface assessment apparatus and method |
US20070100642A1 (en) | 2005-10-07 | 2007-05-03 | Sap Ag | Enterprise integrity simulation |
US20070106981A1 (en) | 2004-12-28 | 2007-05-10 | Hercules Software, Llc | Creating a relatively unique environment for computing platforms |
US20070113281A1 (en) | 2003-10-31 | 2007-05-17 | John Leach | Method used in the control of a physical system affected by threats |
US20070169194A1 (en) | 2004-12-29 | 2007-07-19 | Church Christopher A | Threat scoring system and method for intrusion detection security networks |
US20070180522A1 (en) | 2006-01-30 | 2007-08-02 | Bagnall Robert J | Security system and method including individual applications |
US20070180525A1 (en) | 2006-01-30 | 2007-08-02 | Bagnall Robert J | Security system and method |
US20070186284A1 (en) | 2004-08-12 | 2007-08-09 | Verizon Corporate Services Group Inc. | Geographical Threat Response Prioritization Mapping System And Methods Of Use |
US20070192859A1 (en) | 2006-01-31 | 2007-08-16 | Deutsche Telekom Ag | Architecture for identifying electronic threat patterns |
US20070192867A1 (en) | 2003-07-25 | 2007-08-16 | Miliefsky Gary S | Security appliances |
US20070240217A1 (en) | 2006-04-06 | 2007-10-11 | George Tuvell | Malware Modeling Detection System And Method for Mobile Platforms |
US20070250441A1 (en) | 2006-04-25 | 2007-10-25 | Uc Group Limited | Systems and methods for determining regulations governing financial transactions conducted over a network |
US20070251988A1 (en) | 2006-04-28 | 2007-11-01 | Century Solutions Limited | Field servicing |
US20070255723A1 (en) | 2006-04-27 | 2007-11-01 | Searete Llc, A Limited Liability Corporation Of The State Of Delaware | Efficient distribution of a malware countermeasure |
US20070277241A1 (en) * | 2006-05-26 | 2007-11-29 | Rolf Repasi | Method and system to scan firmware for malware |
GB2439806A (en) | 2006-06-30 | 2008-01-09 | Sophos Plc | Classifying software as malware using characteristics (or "genes") |
US20080028470A1 (en) | 2006-07-25 | 2008-01-31 | Mark Remington | Systems and Methods for Vulnerability Detection and Scoring with Threat Assessment |
US20080040191A1 (en) | 2006-08-10 | 2008-02-14 | Novell, Inc. | Event-driven customizable automated workflows for incident remediation |
US20080082380A1 (en) | 2006-05-19 | 2008-04-03 | Stephenson Peter R | Method for evaluating system risk |
US20080086718A1 (en) | 2006-10-10 | 2008-04-10 | Bostick James E | Method and Apparatus for Identifying Authors of Changes Between Multiple Versions of a File |
US20080167930A1 (en) | 2007-01-10 | 2008-07-10 | Heng Cao | Method and structure for end-to-end workforce management |
US20080196104A1 (en) * | 2007-02-09 | 2008-08-14 | George Tuvell | Off-line mms malware scanning system and method |
US20080209517A1 (en) | 2007-02-27 | 2008-08-28 | Airdefense, Inc. | Systems and methods for generating, managing, and displaying alarms for wireless network monitoring |
US7457823B2 (en) | 2004-05-02 | 2008-11-25 | Markmonitor Inc. | Methods and systems for analyzing data related to possible online fraud |
US20080301051A1 (en) | 2007-06-01 | 2008-12-04 | F-Secure Oyj | Internet fraud prevention |
WO2009047113A1 (en) | 2007-10-10 | 2009-04-16 | Telefonaktiebolaget Lm Ericsson (Publ) | Apparatus for reconfiguration of a technical system based on security analysis and a corresponding technical decision support system and computer program product |
US20090099885A1 (en) | 2007-10-12 | 2009-04-16 | Yune-Gie Sung | Method for risk analysis using information asset modelling |
US20090128628A1 (en) | 2005-11-30 | 2009-05-21 | Rafael - Armament Development Authority Ltd | Surveillance system and method |
US20090150442A1 (en) | 2007-08-22 | 2009-06-11 | Ryan Barnard | Aggregation of persons-of-interest information for use in an identification system |
US7552480B1 (en) | 2002-04-23 | 2009-06-23 | Citibank, N.A. | Method and system of assessing risk using a one-dimensional risk assessment model |
US20090178139A1 (en) | 2008-01-09 | 2009-07-09 | Global Dataguard, Inc. | Systems and Methods of Network Security and Threat Management |
WO2009083036A1 (en) | 2007-12-31 | 2009-07-09 | Ip-Tap Uk | Assessing threat to at least one computer network |
US20090198560A1 (en) | 2008-02-01 | 2009-08-06 | Vincent Nahum | Graphical system for determining the relative attractiveness of investments |
US20090198641A1 (en) | 2007-10-12 | 2009-08-06 | Enforsys, Inc. | System and method for forecasting real-world occurrences |
WO2009148724A1 (en) | 2008-06-03 | 2009-12-10 | Isight Partners, Inc. | Electronic crime detection and tracking |
US20100043066A1 (en) | 2008-05-21 | 2010-02-18 | Miliefsky Gary S | Multiple security layers for time-based network admission control |
US20100050260A1 (en) | 2008-08-25 | 2010-02-25 | Hitachi Information Systems, Ltd. | Attack node set determination apparatus and method, information processing device, attack dealing method, and program |
US20100235918A1 (en) | 2009-03-13 | 2010-09-16 | Rami Mizrahi | Method and Apparatus for Phishing and Leeching Vulnerability Detection |
US20110039237A1 (en) | 2008-04-17 | 2011-02-17 | Skare Paul M | Method and system for cyber security management of industrial control systems |
US7958027B2 (en) | 2001-03-20 | 2011-06-07 | Goldman, Sachs & Co. | Systems and methods for managing risk associated with a geo-political area |
US20110173699A1 (en) | 2010-01-13 | 2011-07-14 | Igal Figlin | Network intrusion detection with distributed correlation |
US8010469B2 (en) | 2000-09-25 | 2011-08-30 | Crossbeam Systems, Inc. | Systems and methods for processing data flows |
US20110252479A1 (en) | 2010-04-08 | 2011-10-13 | Yolanta Beresnevichiene | Method for analyzing risk |
US20110264608A1 (en) | 2006-05-23 | 2011-10-27 | Gonsalves Paul G | Security System For and Method of Detecting and Responding to Cyber Attacks on Large Network Systems |
US20110302291A1 (en) | 2010-06-02 | 2011-12-08 | Lockheed Martin Corporation | Methods and systems for prioritizing network assets |
US8091065B2 (en) | 2007-09-25 | 2012-01-03 | Microsoft Corporation | Threat analysis and modeling during a software development lifecycle of a software application |
US8132260B1 (en) | 2006-06-12 | 2012-03-06 | Redseal Systems, Inc. | Methods and apparatus for prioritization of remediation techniques for network security risks |
US20120072983A1 (en) | 2010-09-20 | 2012-03-22 | Sonalysts, Inc. | System and method for privacy-enhanced cyber data fusion using temporal-behavioral aggregation and analysis |
US20120096558A1 (en) | 2009-05-27 | 2012-04-19 | Quantar Solutions Limited | Assessing Threat to at Least One Computer Network |
WO2012075336A1 (en) | 2010-12-01 | 2012-06-07 | Sourcefire, Inc. | Detecting malicious software through contextual convictions, generic signatures and machine learning techniques |
US20120180133A1 (en) | 2011-01-10 | 2012-07-12 | Saudi Arabian Oil Company | Systems, Program Product and Methods For Performing a Risk Assessment Workflow Process For Plant Networks and Systems |
US20120210265A1 (en) | 2011-02-10 | 2012-08-16 | International Business Machines Corporation | Designing task execution order based on location of the task icons within a graphical user interface |
US8250651B2 (en) | 2007-06-28 | 2012-08-21 | Microsoft Corporation | Identifying attributes of aggregated data |
US20130018796A1 (en) | 2011-07-15 | 2013-01-17 | Kolhatkar Jayashree S | Multi-Channel Data Driven, Real-Time Anti-Money Laundering System For Electronic Payment Cards |
US8375450B1 (en) * | 2009-10-05 | 2013-02-12 | Trend Micro, Inc. | Zero day malware scanner |
US8438644B2 (en) | 2011-03-07 | 2013-05-07 | Isight Partners, Inc. | Information system security based on threat vectors |
US8494974B2 (en) | 2010-01-18 | 2013-07-23 | iSIGHT Partners Inc. | Targeted security implementation through security loss forecasting |
US8566476B2 (en) | 2008-02-01 | 2013-10-22 | Mandiant Corporation | Method and system for analyzing data related to an event |
US20130318073A1 (en) | 2008-02-01 | 2013-11-28 | Jason Shiffer | Method and System for Collecting and Organizing Data Corresponding to an Event |
US20140082749A1 (en) | 2012-09-20 | 2014-03-20 | Amazon Technologies, Inc. | Systems and methods for secure and persistent retention of sensitive information |
US8713681B2 (en) | 2009-10-27 | 2014-04-29 | Mandiant, Llc | System and method for detecting executable machine instructions in a data stream |
US20140189687A1 (en) | 2012-12-28 | 2014-07-03 | Robert Jung | System and Method to Create a Number of Breakpoints in a Virtual Machine Via Virtual Machine Trapping Events |
US8793278B2 (en) | 2008-02-01 | 2014-07-29 | Mandiant, Llc | System and method for data preservation and retrieval |
US20140280245A1 (en) | 2013-03-15 | 2014-09-18 | Mandiant Corporation | System and method to visualize user sessions |
US20140283037A1 (en) | 2013-03-15 | 2014-09-18 | Michael Sikorski | System and Method to Extract and Utilize Disassembly Features to Classify Software Intent |
US8881271B2 (en) | 2008-08-01 | 2014-11-04 | Mandiant, Llc | System and method for forensic identification of elements within a computer system |
US20150096023A1 (en) * | 2013-09-30 | 2015-04-02 | Fireeye, Inc. | Fuzzy hash of behavioral results |
WO2015051181A1 (en) | 2013-10-03 | 2015-04-09 | Csg Cyber Solutions, Inc. | Dynamic adaptive defense for cyber-security threats |
US20160044000A1 (en) | 2014-08-05 | 2016-02-11 | Fireeye, Inc. | System and method to communicate sensitive information via one or more untrusted intermediate nodes with resilience to disconnected network topology |
US9268936B2 (en) | 2012-07-27 | 2016-02-23 | Mandiant, Llc | Physical memory forensics system and method |
US9275229B2 (en) | 2012-03-15 | 2016-03-01 | Mandiant, Llc | System to bypass a compromised mass storage device driver stack and method thereof |
US9413781B2 (en) | 2013-03-15 | 2016-08-09 | Fireeye, Inc. | System and method employing structured intelligence to verify and contain threats at endpoints |
US20160241581A1 (en) | 2014-04-03 | 2016-08-18 | Isight Partners, Inc. | System and Method of Cyber Threat Intensity Determination and Application to Cyber Threat Mitigation |
US20160241580A1 (en) | 2014-04-03 | 2016-08-18 | Isight Partners, Inc. | System and Method of Cyber Threat Structure Mapping and Application to Cyber Threat Mitigation |
US20160323295A1 (en) | 2015-04-28 | 2016-11-03 | Isight Partners, Inc. | Computer Imposed Countermeasures Driven by Malware Lineage |
US9497213B2 (en) | 2013-03-15 | 2016-11-15 | Fireeye, Inc. | System and method to manage sinkholes |
WO2016209993A1 (en) | 2015-06-22 | 2016-12-29 | Invotas Cyber Solutions, Inc. | Graphical user interface environment for creating threat response courses of action for computer networks |
US9633134B2 (en) | 2012-12-26 | 2017-04-25 | Fireeye, Inc. | Timeline wrinkling system and method |
US9654485B1 (en) | 2015-04-13 | 2017-05-16 | Fireeye, Inc. | Analytics-based security monitoring system and method |
US9690935B2 (en) | 2012-12-31 | 2017-06-27 | Fireeye, Inc. | Identification of obfuscated computer items using visual algorithms |
-
2015
- 2015-04-28 US US14/698,534 patent/US9892261B2/en active Active
Patent Citations (123)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050210275A1 (en) | 1999-07-29 | 2005-09-22 | Intertrust Technologies Corporation | Software self-defense systems and methods |
US8010469B2 (en) | 2000-09-25 | 2011-08-30 | Crossbeam Systems, Inc. | Systems and methods for processing data flows |
US8135657B2 (en) | 2000-09-25 | 2012-03-13 | Crossbeam Systems, Inc. | Systems and methods for processing data flows |
US6947978B2 (en) | 2000-12-29 | 2005-09-20 | The United States Of America As Represented By The Director, National Security Agency | Method for geolocating logical network addresses |
US20030051026A1 (en) | 2001-01-19 | 2003-03-13 | Carter Ernst B. | Network surveillance and security system |
US20030233319A1 (en) | 2001-03-20 | 2003-12-18 | David Lawrence | Electronic fund transfer participant risk management clearing |
US7958027B2 (en) | 2001-03-20 | 2011-06-07 | Goldman, Sachs & Co. | Systems and methods for managing risk associated with a geo-political area |
US20030056116A1 (en) | 2001-05-18 | 2003-03-20 | Bunker Nelson Waldo | Reporter |
US20030009699A1 (en) | 2001-06-13 | 2003-01-09 | Gupta Ramesh M. | Method and apparatus for detecting intrusions on a computer system |
US7234168B2 (en) | 2001-06-13 | 2007-06-19 | Mcafee, Inc. | Hierarchy-based method and apparatus for detecting attacks on a computer system |
US7308715B2 (en) | 2001-06-13 | 2007-12-11 | Mcafee, Inc. | Protocol-parsing state machine and method of using same |
US7624444B2 (en) | 2001-06-13 | 2009-11-24 | Mcafee, Inc. | Method and apparatus for detecting intrusions on a computer system |
US7409714B2 (en) | 2001-06-13 | 2008-08-05 | Mcafee, Inc. | Virtual intrusion detection system and method of using same |
US20060117386A1 (en) | 2001-06-13 | 2006-06-01 | Gupta Ramesh M | Method and apparatus for detecting intrusions on a computer system |
US20030097588A1 (en) | 2001-10-25 | 2003-05-22 | Fischman Reuben S. | Method and system for modeling, analysis and display of network security events |
US7293287B2 (en) | 2001-10-25 | 2007-11-06 | General Dynamics C4 Systems, Inc. | Method and system for modeling, analysis and display of network security events |
US20030177376A1 (en) | 2002-01-30 | 2003-09-18 | Core Sdi, Inc. | Framework for maintaining information security in computer networks |
US7552480B1 (en) | 2002-04-23 | 2009-06-23 | Citibank, N.A. | Method and system of assessing risk using a one-dimensional risk assessment model |
US20070192867A1 (en) | 2003-07-25 | 2007-08-16 | Miliefsky Gary S | Security appliances |
US20070113281A1 (en) | 2003-10-31 | 2007-05-17 | John Leach | Method used in the control of a physical system affected by threats |
US8272053B2 (en) | 2003-12-18 | 2012-09-18 | Honeywell International Inc. | Physical security management system |
US20060059557A1 (en) | 2003-12-18 | 2006-03-16 | Honeywell International Inc. | Physical security management system |
US20050149348A1 (en) | 2004-01-07 | 2005-07-07 | International Business Machines Corporation | Detection of unknown scenarios |
US7457823B2 (en) | 2004-05-02 | 2008-11-25 | Markmonitor Inc. | Methods and systems for analyzing data related to possible online fraud |
US20060015941A1 (en) | 2004-07-13 | 2006-01-19 | Mckenna John J | Methods, computer program products and data structures for intrusion detection, intrusion response and vulnerability remediation across target computer systems |
US20060031940A1 (en) | 2004-08-07 | 2006-02-09 | Rozman Allen F | System and method for protecting a computer system from malicious software |
US20070186284A1 (en) | 2004-08-12 | 2007-08-09 | Verizon Corporate Services Group Inc. | Geographical Threat Response Prioritization Mapping System And Methods Of Use |
US20060080637A1 (en) | 2004-10-12 | 2006-04-13 | Microsoft Corporation | System and method for providing malware information for programmatic access |
US20070106981A1 (en) | 2004-12-28 | 2007-05-10 | Hercules Software, Llc | Creating a relatively unique environment for computing platforms |
US20070169194A1 (en) | 2004-12-29 | 2007-07-19 | Church Christopher A | Threat scoring system and method for intrusion detection security networks |
US20060212932A1 (en) | 2005-01-10 | 2006-09-21 | Robert Patrick | System and method for coordinating network incident response activities |
US20060191007A1 (en) | 2005-02-24 | 2006-08-24 | Sanjiva Thielamay | Security force automation |
US20070006315A1 (en) | 2005-07-01 | 2007-01-04 | Firas Bushnaq | Network asset security risk surface assessment apparatus and method |
US20070100642A1 (en) | 2005-10-07 | 2007-05-03 | Sap Ag | Enterprise integrity simulation |
US20090128628A1 (en) | 2005-11-30 | 2009-05-21 | Rafael - Armament Development Authority Ltd | Surveillance system and method |
US20070180525A1 (en) | 2006-01-30 | 2007-08-02 | Bagnall Robert J | Security system and method |
US20070180522A1 (en) | 2006-01-30 | 2007-08-02 | Bagnall Robert J | Security system and method including individual applications |
US20070192859A1 (en) | 2006-01-31 | 2007-08-16 | Deutsche Telekom Ag | Architecture for identifying electronic threat patterns |
US20070240217A1 (en) | 2006-04-06 | 2007-10-11 | George Tuvell | Malware Modeling Detection System And Method for Mobile Platforms |
US20070240218A1 (en) * | 2006-04-06 | 2007-10-11 | George Tuvell | Malware Detection System and Method for Mobile Platforms |
WO2007117636A2 (en) | 2006-04-06 | 2007-10-18 | Smobile Systems, Inc. | Malware detection system and method for comprssed data on mobile platforms |
US20070250441A1 (en) | 2006-04-25 | 2007-10-25 | Uc Group Limited | Systems and methods for determining regulations governing financial transactions conducted over a network |
US20070255723A1 (en) | 2006-04-27 | 2007-11-01 | Searete Llc, A Limited Liability Corporation Of The State Of Delaware | Efficient distribution of a malware countermeasure |
US20070251988A1 (en) | 2006-04-28 | 2007-11-01 | Century Solutions Limited | Field servicing |
US20080082380A1 (en) | 2006-05-19 | 2008-04-03 | Stephenson Peter R | Method for evaluating system risk |
US20110264608A1 (en) | 2006-05-23 | 2011-10-27 | Gonsalves Paul G | Security System For and Method of Detecting and Responding to Cyber Attacks on Large Network Systems |
US20070277241A1 (en) * | 2006-05-26 | 2007-11-29 | Rolf Repasi | Method and system to scan firmware for malware |
US8132260B1 (en) | 2006-06-12 | 2012-03-06 | Redseal Systems, Inc. | Methods and apparatus for prioritization of remediation techniques for network security risks |
GB2439806A (en) | 2006-06-30 | 2008-01-09 | Sophos Plc | Classifying software as malware using characteristics (or "genes") |
US20080028470A1 (en) | 2006-07-25 | 2008-01-31 | Mark Remington | Systems and Methods for Vulnerability Detection and Scoring with Threat Assessment |
US20080040191A1 (en) | 2006-08-10 | 2008-02-14 | Novell, Inc. | Event-driven customizable automated workflows for incident remediation |
US20080086718A1 (en) | 2006-10-10 | 2008-04-10 | Bostick James E | Method and Apparatus for Identifying Authors of Changes Between Multiple Versions of a File |
US20080167930A1 (en) | 2007-01-10 | 2008-07-10 | Heng Cao | Method and structure for end-to-end workforce management |
US20080196104A1 (en) * | 2007-02-09 | 2008-08-14 | George Tuvell | Off-line mms malware scanning system and method |
US20080209517A1 (en) | 2007-02-27 | 2008-08-28 | Airdefense, Inc. | Systems and methods for generating, managing, and displaying alarms for wireless network monitoring |
US20080301051A1 (en) | 2007-06-01 | 2008-12-04 | F-Secure Oyj | Internet fraud prevention |
US8250651B2 (en) | 2007-06-28 | 2012-08-21 | Microsoft Corporation | Identifying attributes of aggregated data |
US20090150442A1 (en) | 2007-08-22 | 2009-06-11 | Ryan Barnard | Aggregation of persons-of-interest information for use in an identification system |
US8091065B2 (en) | 2007-09-25 | 2012-01-03 | Microsoft Corporation | Threat analysis and modeling during a software development lifecycle of a software application |
WO2009047113A1 (en) | 2007-10-10 | 2009-04-16 | Telefonaktiebolaget Lm Ericsson (Publ) | Apparatus for reconfiguration of a technical system based on security analysis and a corresponding technical decision support system and computer program product |
US20090099885A1 (en) | 2007-10-12 | 2009-04-16 | Yune-Gie Sung | Method for risk analysis using information asset modelling |
US20090198641A1 (en) | 2007-10-12 | 2009-08-06 | Enforsys, Inc. | System and method for forecasting real-world occurrences |
WO2009083036A1 (en) | 2007-12-31 | 2009-07-09 | Ip-Tap Uk | Assessing threat to at least one computer network |
US20090178139A1 (en) | 2008-01-09 | 2009-07-09 | Global Dataguard, Inc. | Systems and Methods of Network Security and Threat Management |
US20130325792A1 (en) | 2008-02-01 | 2013-12-05 | Jason Shiffer | Method and System for Analyzing Data Related to an Event |
US20130325872A1 (en) | 2008-02-01 | 2013-12-05 | Jason Shiffer | Method and System for Collecting and Organizing Data Corresponding to an Event |
US20130318073A1 (en) | 2008-02-01 | 2013-11-28 | Jason Shiffer | Method and System for Collecting and Organizing Data Corresponding to an Event |
US20130318038A1 (en) | 2008-02-01 | 2013-11-28 | Jason Shiffer | Method and System for Analyzing Data Related to an Event |
US8566476B2 (en) | 2008-02-01 | 2013-10-22 | Mandiant Corporation | Method and system for analyzing data related to an event |
US8949257B2 (en) | 2008-02-01 | 2015-02-03 | Mandiant, Llc | Method and system for collecting and organizing data corresponding to an event |
US20090198560A1 (en) | 2008-02-01 | 2009-08-06 | Vincent Nahum | Graphical system for determining the relative attractiveness of investments |
US8793278B2 (en) | 2008-02-01 | 2014-07-29 | Mandiant, Llc | System and method for data preservation and retrieval |
US20130325791A1 (en) | 2008-02-01 | 2013-12-05 | Jason Shiffer | Method and System for Analyzing Data Related to an Event |
US20130325871A1 (en) | 2008-02-01 | 2013-12-05 | Jason Shiffer | Method and System for Collecting and Organizing Data Corresponding to an Event |
US20110039237A1 (en) | 2008-04-17 | 2011-02-17 | Skare Paul M | Method and system for cyber security management of industrial control systems |
US20100043066A1 (en) | 2008-05-21 | 2010-02-18 | Miliefsky Gary S | Multiple security layers for time-based network admission control |
US20140297494A1 (en) | 2008-06-03 | 2014-10-02 | Isight Partners, Inc. | Electronic Crime Detection and Tracking |
WO2009148724A1 (en) | 2008-06-03 | 2009-12-10 | Isight Partners, Inc. | Electronic crime detection and tracking |
US8813050B2 (en) | 2008-06-03 | 2014-08-19 | Isight Partners, Inc. | Electronic crime detection and tracking |
US8881271B2 (en) | 2008-08-01 | 2014-11-04 | Mandiant, Llc | System and method for forensic identification of elements within a computer system |
US20100050260A1 (en) | 2008-08-25 | 2010-02-25 | Hitachi Information Systems, Ltd. | Attack node set determination apparatus and method, information processing device, attack dealing method, and program |
US20100235918A1 (en) | 2009-03-13 | 2010-09-16 | Rami Mizrahi | Method and Apparatus for Phishing and Leeching Vulnerability Detection |
US20120096558A1 (en) | 2009-05-27 | 2012-04-19 | Quantar Solutions Limited | Assessing Threat to at Least One Computer Network |
US8375450B1 (en) * | 2009-10-05 | 2013-02-12 | Trend Micro, Inc. | Zero day malware scanner |
US20140237600A1 (en) | 2009-10-27 | 2014-08-21 | Peter J Silberman | System and method for detecting executable machine instructions in a data stream |
US8713681B2 (en) | 2009-10-27 | 2014-04-29 | Mandiant, Llc | System and method for detecting executable machine instructions in a data stream |
US20110173699A1 (en) | 2010-01-13 | 2011-07-14 | Igal Figlin | Network intrusion detection with distributed correlation |
US8494974B2 (en) | 2010-01-18 | 2013-07-23 | iSIGHT Partners Inc. | Targeted security implementation through security loss forecasting |
US20130282426A1 (en) | 2010-01-18 | 2013-10-24 | Isight Partners, Inc. | Targeted Security Implementation Through Security Loss Forecasting |
US20110252479A1 (en) | 2010-04-08 | 2011-10-13 | Yolanta Beresnevichiene | Method for analyzing risk |
US20110302291A1 (en) | 2010-06-02 | 2011-12-08 | Lockheed Martin Corporation | Methods and systems for prioritizing network assets |
US20120072983A1 (en) | 2010-09-20 | 2012-03-22 | Sonalysts, Inc. | System and method for privacy-enhanced cyber data fusion using temporal-behavioral aggregation and analysis |
WO2012075336A1 (en) | 2010-12-01 | 2012-06-07 | Sourcefire, Inc. | Detecting malicious software through contextual convictions, generic signatures and machine learning techniques |
US20120180133A1 (en) | 2011-01-10 | 2012-07-12 | Saudi Arabian Oil Company | Systems, Program Product and Methods For Performing a Risk Assessment Workflow Process For Plant Networks and Systems |
US20120210265A1 (en) | 2011-02-10 | 2012-08-16 | International Business Machines Corporation | Designing task execution order based on location of the task icons within a graphical user interface |
EP2498198B1 (en) | 2011-03-07 | 2017-05-10 | iSIGHT Partners, Inc | Information system security based on threat vectors |
US9015846B2 (en) | 2011-03-07 | 2015-04-21 | Isight Partners, Inc. | Information system security based on threat vectors |
US8438644B2 (en) | 2011-03-07 | 2013-05-07 | Isight Partners, Inc. | Information system security based on threat vectors |
US20130018796A1 (en) | 2011-07-15 | 2013-01-17 | Kolhatkar Jayashree S | Multi-Channel Data Driven, Real-Time Anti-Money Laundering System For Electronic Payment Cards |
US9275229B2 (en) | 2012-03-15 | 2016-03-01 | Mandiant, Llc | System to bypass a compromised mass storage device driver stack and method thereof |
US9268936B2 (en) | 2012-07-27 | 2016-02-23 | Mandiant, Llc | Physical memory forensics system and method |
US20140082749A1 (en) | 2012-09-20 | 2014-03-20 | Amazon Technologies, Inc. | Systems and methods for secure and persistent retention of sensitive information |
US9633134B2 (en) | 2012-12-26 | 2017-04-25 | Fireeye, Inc. | Timeline wrinkling system and method |
US9459901B2 (en) | 2012-12-28 | 2016-10-04 | Fireeye, Inc. | System and method for the programmatic runtime de-obfuscation of obfuscated software utilizing virtual machine introspection and manipulation of virtual machine guest memory permissions |
US20140189687A1 (en) | 2012-12-28 | 2014-07-03 | Robert Jung | System and Method to Create a Number of Breakpoints in a Virtual Machine Via Virtual Machine Trapping Events |
US9690935B2 (en) | 2012-12-31 | 2017-06-27 | Fireeye, Inc. | Identification of obfuscated computer items using visual algorithms |
US20140283037A1 (en) | 2013-03-15 | 2014-09-18 | Michael Sikorski | System and Method to Extract and Utilize Disassembly Features to Classify Software Intent |
US20140280245A1 (en) | 2013-03-15 | 2014-09-18 | Mandiant Corporation | System and method to visualize user sessions |
US9413781B2 (en) | 2013-03-15 | 2016-08-09 | Fireeye, Inc. | System and method employing structured intelligence to verify and contain threats at endpoints |
US9497213B2 (en) | 2013-03-15 | 2016-11-15 | Fireeye, Inc. | System and method to manage sinkholes |
US20150096023A1 (en) * | 2013-09-30 | 2015-04-02 | Fireeye, Inc. | Fuzzy hash of behavioral results |
US20170063920A1 (en) | 2013-10-03 | 2017-03-02 | Bernard THOMAS | Dynamic adaptive defense for cyber-security threats |
WO2015051181A1 (en) | 2013-10-03 | 2015-04-09 | Csg Cyber Solutions, Inc. | Dynamic adaptive defense for cyber-security threats |
US20170230412A1 (en) | 2013-10-03 | 2017-08-10 | Invotas Cybr Solutions, Inc. | Dynamic adaptive defense for cyber-security threats |
US20160241580A1 (en) | 2014-04-03 | 2016-08-18 | Isight Partners, Inc. | System and Method of Cyber Threat Structure Mapping and Application to Cyber Threat Mitigation |
US20160241581A1 (en) | 2014-04-03 | 2016-08-18 | Isight Partners, Inc. | System and Method of Cyber Threat Intensity Determination and Application to Cyber Threat Mitigation |
US9749343B2 (en) | 2014-04-03 | 2017-08-29 | Fireeye, Inc. | System and method of cyber threat structure mapping and application to cyber threat mitigation |
US9749344B2 (en) | 2014-04-03 | 2017-08-29 | Fireeye, Inc. | System and method of cyber threat intensity determination and application to cyber threat mitigation |
US20160044000A1 (en) | 2014-08-05 | 2016-02-11 | Fireeye, Inc. | System and method to communicate sensitive information via one or more untrusted intermediate nodes with resilience to disconnected network topology |
US9654485B1 (en) | 2015-04-13 | 2017-05-16 | Fireeye, Inc. | Analytics-based security monitoring system and method |
US20160323295A1 (en) | 2015-04-28 | 2016-11-03 | Isight Partners, Inc. | Computer Imposed Countermeasures Driven by Malware Lineage |
WO2016209993A1 (en) | 2015-06-22 | 2016-12-29 | Invotas Cyber Solutions, Inc. | Graphical user interface environment for creating threat response courses of action for computer networks |
US20170048276A1 (en) | 2015-06-22 | 2017-02-16 | Invotas Cyber Solutions, Inc. | Methods and apparatus for graphical user interface environment for creating threat response courses of action for computer networks |
Non-Patent Citations (47)
Title |
---|
Advisory Action dated Apr. 10, 2017, U.S. Appl. No. 14/244,886, filed Apr. 3, 2014. |
European Search Report dated Apr. 28, 2017, EPC Application No. 14850557.1, International filing date Oct. 2, 2014. |
FAIPP Office Action dated Mar. 10, 2017, U.S. Appl. No. 13/850,296, filed Mar. 26, 2013. |
FAIPP Office Action dated Mar. 6, 2017, U.S. Appl. No. 14/244,884, filed Apr. 3, 2014. |
Final Office Action dated Aug. 10, 2017, U.S. Appl. No. 13/850,296, filed Mar. 26, 2013. |
Final Office Action dated Aug. 8, 2012, U.S. Appl. No. 12/132,327, filed Jun. 3, 2008. |
Final Office Action dated Feb. 9, 2017, U.S. Appl. No. 14/244,886, filed Apr. 3, 2014. |
FireEye, Inc., "FireEye Malware Analysis & Exchange Network, Malware Protection System," 2010, two pages, FireEye, Inc., Milpitas, CA. |
FireEye, Inc., "FireEye Malware Analysis, Modem Malware Forensics," 2010, two pages, FireEye, Inc., Milpitas, CA. |
Foreign Communication From a Related Counterpart Application-European Decision to Grant dated Apr. 13, 2017, European Application No. 12158396.7, Apr. 6, 2012, 5 pages. |
Foreign Communication From a Related Counterpart Application—European Decision to Grant dated Apr. 13, 2017, European Application No. 12158396.7, Apr. 6, 2012, 5 pages. |
Foreign Communication From a Related Counterpart Application-European Notice of Intention to Grant dated Nov. 7, 2016, European Application No. 12158396.7, Apr. 6, 2012, 5 pages. |
Foreign Communication From a Related Counterpart Application—European Notice of Intention to Grant dated Nov. 7, 2016, European Application No. 12158396.7, Apr. 6, 2012, 5 pages. |
Foreign Communication From a Related Counterpart Application-European Office Action dated Nov. 27, 2013, European Application No. 12158396.7, Apr. 6, 2012, 5 pages. |
Foreign Communication From a Related Counterpart Application—European Office Action dated Nov. 27, 2013, European Application No. 12158396.7, Apr. 6, 2012, 5 pages. |
Foreign Communication From a Related Counterpart Application-European Search Report, European Application No. 12158396.7, dated Apr. 6, 2012, 6 pages. |
Foreign Communication From a Related Counterpart Application—European Search Report, European Application No. 12158396.7, dated Apr. 6, 2012, 6 pages. |
Foreign Communication From a Related Counterpart Application-International Preliminary Report on Patentability, PCT/US2009/042006, dated Dec. 6, 2012, 8 pages. |
Foreign Communication From a Related Counterpart Application—International Preliminary Report on Patentability, PCT/US2009/042006, dated Dec. 6, 2012, 8 pages. |
Foreign Communication From a Related Counterpart Application-International Search Report and Written Opinion, PCT/US2009/042006, dated Jun. 19, 2009, 11 pages. |
Foreign Communication From a Related Counterpart Application—International Search Report and Written Opinion, PCT/US2009/042006, dated Jun. 19, 2009, 11 pages. |
Idika, Nwokedi, et al., "A Survey of Malware Detection Techniques," Feb. 2, 2007, 48 pgs., Department of Computer Science, Purdue University, West Lafayette, IN. |
International Preliminary Report on Patentability dated Apr. 5, 2016, International Application No. PCT/US2014/058909, International filing date Oct. 2, 2014. |
International Search Report and Written Opinion dated , 2016, International Application No. PCT/US2016/038809, International filing date Jun. 22, 2016. |
International Search Report and Written Opinion dated Mar. 2, 2015, International Application No. PCT/US2014/058909, International filing date Oct. 2, 2014. |
Notice of Allowance dated Apr. 26, 2017, U.S. Appl. No. 14/244,884, filed Apr. 3, 2014. |
Notice of Allowance dated Dec. 24, 2012, U.S. Appl. No. 12/689,160, filed Jan. 18, 2010. |
Notice of Allowance dated Feb. 20, 2015, U.S. Appl. No. 13/862,373, filed Apr. 12, 2013. |
Notice of Allowance dated Jan. 10, 2013, U.S. Appl. No. 13/042,066, filed Mar. 7, 2011. |
Notice of Allowance dated May 13, 2014, U.S. Appl. No. 12/132,327, filed Jun. 3, 2008. |
Notice of Allowance dated May 24, 2017, U.S. Appl. No. 14/244,886, filed Apr. 3, 2014. |
Notice of Allowance dated Oct. 11, 2017, U.S. Appl. No. 14/308,686, filed Jun. 18, 2014. |
Office Action dated Apr. 5, 2017, U.S. Appl. No. 14/308,686, filed Jun. 18, 2014. |
Office Action dated Aug. 8, 2012, U.S. Appl. No. 13/042,066, filed Mar. 7, 2011. |
Office Action dated Jan. 23, 2014, U.S. Appl. No. 12/132,327, filed Jun. 3, 2008. |
Office Action dated Jul. 3, 2012, U.S. Appl. No. 12/689,160, filed Jan. 18, 2010. |
Office Action dated May 3, 2012, U.S. Appl. No. 12/132,327, filed Jun. 3, 2008. |
Office Action dated Sep. 22, 2016, U.S. Appl. No. 14/244,886, filed Apr. 3, 2014. |
Pre-Interview Communication dated Dec. 15, 2014, U.S. Appl. No. 13/862,373, filed Apr. 12, 2013. |
Pre-Interview Communication dated Nov. 2, 2016, U.S. Appl. No. 13/850,296, filed Mar. 26, 2013. |
Pre-Interview Communication dated Sep. 29, 2016, U.S. Appl. No. 14/244,884, filed Apr. 3, 2014. |
Stewart, Joe, "Truman-The Reusable Unknown Malware Analysis Net," SecureWorks, Version 2, Jun. 1991, 1 page. |
Stewart, Joe, "Truman—The Reusable Unknown Malware Analysis Net," SecureWorks, Version 2, Jun. 1991, 1 page. |
Wikipedia, "Bayesian Inference," http://en.wikipedia.org/w/index.php?title=Bayesian-inference&printable=yes, May 15, 2008, 12 pages. |
Wikipedia, "Botnet," http://en.wikipedia.org/w/index.php?title=Botnet&printable=yes, May 11, 2008, 6 pages. |
Wikipedia, "Bayesian Inference," http://en.wikipedia.org/w/index.php?title=Bayesian—inference&printable=yes, May 15, 2008, 12 pages. |
Yin, Heng, et al., "Panorama: Capturing System-wide Information Flow for Malware Detection and Analysis," ACM Conference on Computer and Communications Security Oct. 29, 2007, 12 pgs., Alexandria, VA. |
Cited By (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10063583B2 (en) | 2014-04-03 | 2018-08-28 | Fireeye, Inc. | System and method of mitigating cyber attack risks |
US10176321B2 (en) | 2015-09-22 | 2019-01-08 | Fireeye, Inc. | Leveraging behavior-based rules for malware family classification |
US10819742B2 (en) | 2015-12-15 | 2020-10-27 | Yokogawa Electric Corporation | Integrated industrial system and control method thereof |
US10956567B2 (en) * | 2015-12-15 | 2021-03-23 | Yokogawa Electric Corporation | Control device, integrated industrial system, and control method thereof |
US20170169219A1 (en) * | 2015-12-15 | 2017-06-15 | Yokogawa Electric Corporation | Control device, integrated industrial system, and control method thereof |
US11176251B1 (en) | 2018-12-21 | 2021-11-16 | Fireeye, Inc. | Determining malware via symbolic function hash analysis |
US11743290B2 (en) | 2018-12-21 | 2023-08-29 | Fireeye Security Holdings Us Llc | System and method for detecting cyberattacks impersonating legitimate sources |
US11601444B1 (en) | 2018-12-31 | 2023-03-07 | Fireeye Security Holdings Us Llc | Automated system for triage of customer issues |
US11750618B1 (en) | 2019-03-26 | 2023-09-05 | Fireeye Security Holdings Us Llc | System and method for retrieval and analysis of operational data from customer, cloud-hosted virtual resources |
US11310238B1 (en) | 2019-03-26 | 2022-04-19 | FireEye Security Holdings, Inc. | System and method for retrieval and analysis of operational data from customer, cloud-hosted virtual resources |
US11677786B1 (en) | 2019-03-29 | 2023-06-13 | Fireeye Security Holdings Us Llc | System and method for detecting and protecting against cybersecurity attacks on servers |
US11636198B1 (en) | 2019-03-30 | 2023-04-25 | Fireeye Security Holdings Us Llc | System and method for cybersecurity analyzer update and concurrent management system |
US20220092506A1 (en) * | 2019-07-19 | 2022-03-24 | The Boston Consulting Group, Inc. | Methods and Systems for Determining an Optimal Portfolio of Cyber Security Related Projects |
US11522884B1 (en) | 2019-12-24 | 2022-12-06 | Fireeye Security Holdings Us Llc | Subscription and key management system |
US11436327B1 (en) | 2019-12-24 | 2022-09-06 | Fireeye Security Holdings Us Llc | System and method for circumventing evasive code for cyberthreat detection |
US11838300B1 (en) | 2019-12-24 | 2023-12-05 | Musarubra Us Llc | Run-time configurable cybersecurity system |
US11888875B1 (en) | 2019-12-24 | 2024-01-30 | Musarubra Us Llc | Subscription and key management system |
US11947669B1 (en) | 2019-12-24 | 2024-04-02 | Musarubra Us Llc | System and method for circumventing evasive code for cyberthreat detection |
US11985149B1 (en) | 2023-03-06 | 2024-05-14 | Musarubra Us Llc | System and method for automated system for triage of cybersecurity threats |
Also Published As
Publication number | Publication date |
---|---|
US20160323295A1 (en) | 2016-11-03 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9892261B2 (en) | Computer imposed countermeasures driven by malware lineage | |
Hull et al. | Ransomware deployment methods and analysis: views from a predictive model and human responses | |
US11483343B2 (en) | Phishing detection system and method of use | |
Sarmah et al. | A survey of detection methods for XSS attacks | |
US10523609B1 (en) | Multi-vector malware detection and analysis | |
JP6670907B2 (en) | System and method for blocking script execution | |
US8850570B1 (en) | Filter-based identification of malicious websites | |
Aslan et al. | Intelligent behavior-based malware detection system on cloud computing environment | |
US9147073B2 (en) | System and method for automatic generation of heuristic algorithms for malicious object identification | |
US11196746B2 (en) | Whitelisting of trusted accessors to restricted web pages | |
US8056136B1 (en) | System and method for detection of malware and management of malware-related information | |
US9197663B1 (en) | Methods and systems for identifying potential enterprise software threats based on visual and non-visual data | |
US11212305B2 (en) | Web application security methods and systems | |
US9055097B1 (en) | Social network scanning | |
CN111460445B (en) | Sample program malicious degree automatic identification method and device | |
CN103473501B (en) | A kind of Malware method for tracing based on cloud security | |
US11785044B2 (en) | System and method for detection of malicious interactions in a computer network | |
Kim et al. | Attack detection application with attack tree for mobile system using log analysis | |
EP3987728B1 (en) | Dynamically controlling access to linked content in electronic communications | |
US20220269782A1 (en) | Detection of malicious code that is obfuscated within a document file | |
US11349865B1 (en) | Signatureless detection of malicious MS Office documents containing embedded OLE objects | |
JPWO2018143097A1 (en) | Judgment apparatus, judgment method, and judgment program | |
Süren et al. | Know Your EK: A Content and Workflow Analysis Approach for Exploit Kits. | |
US7840958B1 (en) | Preventing spyware installation | |
RU2587424C1 (en) | Method of controlling applications |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: ISIGHT PARTNERS, INC., TEXASFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:JORAM, SHARWAN KUMAR;JHA, SHYAM PRAKASH;HARTLEY, WILLIAM MATTHEW;AND OTHERS;SIGNING DATES FROM 20150417 TO 20150428;REEL/FRAME:035544/0375 |
|
AS | Assignment |
Owner name: FIREEYE, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:ISIGHT PARTNERS;REEL/FRAME:042147/0915Effective date: 20170405 |
|
FEPP | Fee payment procedure |
Free format text: ENTITY STATUS SET TO UNDISCOUNTED (ORIGINAL EVENT CODE: BIG.) |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
|
AS | Assignment |
Owner name: MANDIANT, INC., CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:FIREEYE, INC.;REEL/FRAME:061456/0651Effective date: 20210928 |
|
AS | Assignment |
Owner name: MANDIANT, INC., VIRGINIAFree format text: RELEASE BY SECURED PARTY;ASSIGNOR:SILICON VALLEY BANK;REEL/FRAME:061947/0355Effective date: 20221101 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MANDIANT, INC.;REEL/FRAME:063238/0555Effective date: 20220912 |
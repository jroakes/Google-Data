US20120230407A1 - Interpolation Filter Selection Using Prediction Index - Google Patents
Interpolation Filter Selection Using Prediction Index Download PDFInfo
- Publication number
- US20120230407A1 US20120230407A1 US13/415,901 US201213415901A US2012230407A1 US 20120230407 A1 US20120230407 A1 US 20120230407A1 US 201213415901 A US201213415901 A US 201213415901A US 2012230407 A1 US2012230407 A1 US 2012230407A1
- Authority
- US
- United States
- Prior art keywords
- prediction
- interpolation
- video content
- interpolation filter
- mapping
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/50—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding
- H04N19/503—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using predictive coding involving temporal prediction
- H04N19/51—Motion estimation or motion compensation
- H04N19/523—Motion estimation or motion compensation with sub-pixel accuracy
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/117—Filters, e.g. for pre-processing or post-processing
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/46—Embedding additional information in the video signal during the compression process
Definitions
- Particular embodiments generally relate to video compression.
- High-efficiency video coding is a block-based hybrid spatial and temporal predictive coding scheme. Similar to other video coding standards, such as motion picture experts group (MPEG)-1, MPEG-2, and MPEG-4, HEVC supports intra-picture, such as I picture, and inter-picture, such as B picture. In HEVC, P and B pictures are consolidated into a general B picture that can be used as a reference picture.
- MPEG motion picture experts group
- Intra-picture is coded without referring to any other pictures. Thus, only spatial prediction is allowed for a coding unit (CU)/prediction unit (PU) inside an intra-picture. Inter-picture, however, supports both intra- and inter-prediction.
- a CU/PU in an inter-picture may be either spatially or temporally predictive coded.
- Temporal predictive coding may reference pictures that were previously coded.
- Temporal motion prediction is an effective method to increase the coding efficiency and provides high compression.
- HEVC uses a translational model for motion prediction. According to the translational model, a prediction signal for a given block in a current picture is generated from a corresponding block in a reference picture. The coordinates of the reference block are given by a motion vector that describes the translational motion along horizontal (x) and vertical (y) directions that would be added/subtracted to/from the coordinates of the current block. A decoder needs the motion vector to decode the compressed video.
- the pixels in the reference frame are used as the prediction.
- the motion may be captured in integer pixels.
- not all objects move with the spacing of integer pixels.
- HEVC allows for motion vectors with sub-pel (fractional) pixel accuracy.
- sub-pel pixel interpolation is performed using finite impulse response (FIR) filters.
- FIR finite impulse response
- the filter may have 8 taps to determine the sub-pel pixel values for sub-pel pixel positions, such as half-pel and quarter-pel positions.
- the taps of an interpolation filter weight the integer pixels with coefficient values to generate the sub-pel signals. Different coefficients may produce different compression performance in signal distortion and noise.
- the coefficients for the filter are fixed and applicable to compression of all sequences.
- the filter choice may vary from sequence to sequence, within a sequence, from picture to picture, from reference to reference, or within a picture, from PU to PU. This is referred to as an adaptive interpolation filter (AIF).
- AIF adaptive interpolation filter
- the explicit signaling increases the overhead as the information needs to be encoded and sent to the decoder for every PU that is being compressed and is costly because it increases the required bit rate in temporally predictive pictures.
- a method for encoding or decoding video content includes determining a set of interpolation filters for use in interpolating sub-pel pixel values and a mapping between interpolation filters in the set of interpolation filters and different prediction indexes of the video content.
- a unit of video content is received and a prediction index is determined in a plurality of prediction indexes that are used to determine a prediction block for the unit of video content.
- the method determines an interpolation filter in the set of interpolation filters based on a mapping between the interpolation filter and the prediction index to interpolate a sub-pel pixel value for use in a temporal prediction process for the unit of video content.
- an apparatus configured to encode or decode video content.
- the apparatus includes: one or more computer processors; and a computer-readable storage medium comprising instructions for controlling the one or more computer processors to be operable to: determine a set of interpolation filters for use in interpolating sub-pel pixel values and a mapping between interpolation filters in the set of interpolation filters and different prediction indexes of the video content; receive a unit of video content; determine a prediction index in a plurality of prediction indexes that are used to determine a prediction block for the unit of video content; and determine an interpolation filter in the set of interpolation filters based on a mapping between the interpolation filter and the prediction index to interpolate a sub-pel pixel value for use in a temporal prediction process for the unit of video content.
- a non-transitory computer-readable storage medium including instructions for encoding or decoding video content.
- the instructions are for controlling the one or more computer processors to be operable to: determine a set of interpolation filters for use in interpolating sub-pel pixel values and a mapping between interpolation filters in the set of interpolation filters and different prediction indexes of the video content; receive a unit of video content; a prediction index in a plurality of prediction indexes that are used to determine a prediction block for the unit of video content; and determine an interpolation filter in the set of interpolation filters based on a mapping between the interpolation filter and the prediction index to interpolate a sub-pel pixel value for use in a temporal prediction process for the unit of video content.
- FIG. 1 depicts an example of a system for encoding and decoding video content according to one embodiment.
- FIG. 2A depicts an example of an encoder according to one embodiment.
- FIG. 2B depicts an example of decoder according to one embodiment.
- FIG. 3 depicts positions of half-pel and quarter-pel pixels between full-pel pixels along a pixel line within an image according to one embodiment.
- FIG. 4 shows a more detailed example of a filter determiner according to one embodiment.
- FIG. 5 shows a simplified flowchart of a method for determining an interpolation filter using PU size according to one embodiment.
- FIG. 6 depicts a simplified flowchart of a method for determining an interpolation filter using a prediction index according to one embodiment.
- FIG. 7 depicts a simplified flowchart of a method for performing adaptive interpolation filter signaling according to one embodiment.
- FIG. 1 depicts an example of a system 100 for encoding and decoding video content according to one embodiment.
- System 100 includes an encoder 102 and a decoder 104 , both of which will be described in more detail below.
- Encoder 102 and decoder 104 perform temporal prediction through motion estimation and motion compensation. The temporal prediction searches for a best match prediction for a current prediction unit (PU) over reference pictures. The best match prediction is described by a motion vector (MV) and associated reference picture ID. Also, a PU in a B picture may have up to two motion vectors.
- MV motion vector
- the temporal prediction allows for fractional (sub-pel) picture accuracy.
- Sub-pel pixel prediction is used because motion during two instances of time (the current and reference frames' capture times) can correspond to a sub-pel pixel position in pixel coordinates and generation of different prediction data corresponding to each sub-pel pixel positions allows for the possibility of conditioning the prediction signal to better match the signal in the current PU.
- the temporal prediction may use adaptive sub-pel pixel interpolation for the PU.
- different interpolation filters 108 may be used to determine the sub-pel pixel values.
- Interpolation filters 108 include taps that weight full-pel pixel values with coefficient values that are used to determine the sub-pel pixel values for different sub-pel pixel positions, such as half-pel and quarter pel positions.
- the interpolation filter may use different values for coefficients and/or a different number of taps.
- Encoder 102 and decoder 104 need to know which interpolation filter 108 to use in encoding and decoding a unit of video content, such as a PU. Particular embodiments may use an implicit signaling method for determining which interpolation filter 108 to use to interpolate sub-pel pixel values. In one embodiment, information already available to both encoder 102 and decoder 104 is used to determine which interpolation filter 106 to use. For example, a filter determiner 106 in either encoder 102 or decoder 104 receives a set of interpolation filters with mappings between the interpolation filters and a coding parameter used in the compression process.
- the set of interpolation filters may be installed or stored in memory of encoder 102 and decoder 104 .
- Filter determiner 106 uses the coding parameter used in the compression process to determine an interpolation filter 108 based on the mapping. For example, filter determiner 106 may use PU size or a prediction index (for uni-prediction or bi-prediction mode) to determine which interpolation filter 108 to use.
- the mappings may be already known to encoder 102 and decoder 104 before the encoding of PU or decoding of bits for the PU.
- encoder 102 and decoder 104 use information already known to encoder 102 or decoder 104 to determine the appropriate interpolation filter 108 , the interpolation filter decision is implicitly determined without requiring explicit communication between encoder 102 and decoder 104 for encoding and decoding the unit of video content.
- the implicit signaling method may be used, it may be useful to explicitly have communication between encoder 102 and decoder 104 at certain times. For example, an explicit communication from encoder 102 to decoder 104 is used to determine which interpolation filter 108 to use.
- a filter signaling block 110 - 1 in encoder 102 may communicate a filter signaling block 110 - 2 in decoder 104 .
- the communication between encoder 102 and decoder 104 may vary, such as the communications may be the mappings themselves, an update to the mappings, or information for use in determining which interpolation filter to use based on the mappings.
- the explicit signaling may be communicated using high level syntax(es) in a sequence, picture, or slice header. The signaling may be performed during an effective period of the high level syntax(es).
- FIG. 2A depicts an example of an encoder 102 according to one embodiment.
- a general operation of encoder 102 will now be described. It will be understood that variations on the encoding process described will be appreciated by a person skilled in the art based on the disclosure and teachings herein.
- a spatial prediction block 204 may include different spatial prediction directions per PU, such as horizontal, vertical, 45-degree diagonal, 135-degree diagonal, DC (flat averaging), and planar.
- a temporal prediction block 206 performs temporal prediction through a motion estimation and motion compensation operation.
- the motion estimation operation searches for a best match prediction for the current PU over reference pictures.
- the best match prediction is described by a motion vector (MV) and associated reference picture (refldx).
- MV motion vector
- reffldx reference picture
- the motion vector and associated reference picture are included in the coded bit stream.
- Transform block 207 performs a transform operation with the residual PU, e. Transform block 207 outputs the residual PU in a transform domain, E.
- a quantizer 208 then quantizes the transform coefficients of the residual PU, E.
- Quantizer 208 converts the transform coefficients into a finite number of possible values.
- Entropy coding block 210 entropy encodes the quantized coefficients, which results in final compression bits to be transmitted. Different entropy coding methods may be used, such as context-adaptive variable length coding (CAVLC) or context-adaptive binary arithmetic coding (CABAC).
- CAVLC context-adaptive variable length coding
- CABAC context-adaptive binary arithmetic coding
- a de-quantizer 212 de-quantizes the quantized transform coefficients of the residual PU.
- De-quantizer 212 then outputs the de-quantized transform coefficients, E′.
- An inverse transform block 214 receives the de-quantized transform coefficients, which are then inverse transformed resulting in a reconstructed residual PU, e′.
- the reconstructed PU, e′ is then added to the corresponding prediction, x′, either spatial or temporal, to form the new reconstructed PU, x′′.
- a loop filter 216 performs de-blocking on the reconstructed PU, x′′, to reduce blocking artifacts.
- loop filter 216 may perform a sample adaptive offset process after the completion of the de-blocking filter process for the decoded picture, which compensates for a pixel value offset between reconstructed pixels and original pixels. Also, loop filter 216 may perform adaptive filtering over the reconstructed PU, which minimizes coding distortion between the input and output pictures. Additionally, if the reconstructed pictures are reference pictures, the reference pictures are stored in a reference buffer 218 for future temporal prediction.
- Interpolation filter 108 interpolates sub-pel pixel values for temporal prediction block 206 .
- Filter determiner 106 implicitly determines interpolation filter 108 as will be described below.
- filter signaling block 110 - 1 explicitly signals information for use in determining interpolation filter 108 at certain times.
- Temporal prediction block 206 then uses the sub-pel pixel values outputted by interpolation filter 108 to generate a prediction of a current PU.
- FIG. 2B depicts an example of decoder 104 according to one embodiment.
- Decoder 104 receives input bits from encoder 102 for compressed video content.
- An entropy decoding block 230 performs entropy decoding on input bits corresponding to quantized transform coefficients of a residual PU.
- a de-quantizer 232 de-quantizes the quantized transform coefficients of the residual PU.
- De-quantizer 232 then outputs the de-quantized transform coefficients of the residual PU, E′.
- An inverse transform block 234 receives the de-quantized transform coefficients, which are then inverse transformed resulting in a reconstructed residual PU, e′.
- the reconstructed PU, e′ is then added to the corresponding prediction, x′, either spatial or temporal, to form the new constructed PU, x′′.
- a loop filter 236 performs de-blocking on the reconstructed PU, x′′, to reduce blocking artifacts. Additionally, loop filter 236 may perform a sample adaptive offset process after the completion of the de-blocking filter process for the decoded picture, which compensates for a pixel value offset between reconstructed pixels and original pixels. Also, loop filter 236 may perform an adaptive loop filter over the reconstructed PU, which minimizes coding distortion between the input and output pictures. Additionally, if the reconstructed pictures are reference pictures, the reference pictures are stored in a reference buffer 238 for future temporal prediction.
- the prediction PU, x′ is obtained through either spatial prediction or temporal prediction.
- a spatial prediction block 240 may receive decoded spatial prediction directions per PU, such as horizontal, vertical, 45-degree diagonal, 135-degree diagonal, DC (flat averaging), and planar. The spatial prediction directions are used to determine the prediction PU, x′.
- Interpolation filter 108 interpolates sub-pel pixel values for input into a temporal prediction block 242 .
- Filter determiner 106 implicitly determines interpolation filter 108 as will be described below.
- filter signaling block 110 - 2 receives signals information for use in determining interpolation filter 108 at certain times.
- Temporal prediction block 242 performs temporal prediction using decoded motion vector information and interpolated sub-pel pixel values outputted by interpolation filter 108 in a motion compensation operation.
- Temporal prediction block 242 outputs the prediction PU, x′.
- FIG. 3 depicts positions of half-pel and quarter-pel pixels between full-pel pixels along a pixel line within an image according to one embodiment.
- the pixel line may be along a row or column of an image.
- Full-pel pixels are represented by integer pixels and are shown in FIG. 3 as pixels L 3 , L 2 , L 1 , L 0 , R 0 , R 1 , R 2 , and R 3 .
- H is a half-pel pixel between full-pel pixels L 0 and R 0 .
- FL is a sub-pel pixel (quarter-pel pixel) between full-pel pixels L 0 and H and FR is a sub-pel pixel between half-pel pixel H and full-pel pixel R 0 .
- the quarter-pel and half-pel pixels may be interpolated using the values of spatial neighboring full-pel pixels.
- the half-pel pixel H may be interpolated using the values of full-pel pixels L 3 , L 2 , L 1 , L 0 , R 0 , R 1 , R 2 , and R 3 .
- Different coefficients may also be used to weight the values of the neighboring pixels and provide different characteristics of filtering.
- interpolation filters 108 may be linear in phase with a unity gain.
- the constant (unity) gain is required to make sure the filters do not distort the signal.
- one of the goals for designing interpolation filters 108 is to make a linear phase filter (with appropriate phase slope or group delay) to have a gain response that is as flat and as wide as possible. Different trade-offs between flatness and wideness of a frequency response result in different sub-pixel interpolation filters.
- the sub-pixel interpolation filters 108 may attenuate signals where the noise is present.
- the shape of the noise may depend on the picture content and the amount of compression. For example, compression noise for low quantization regimes tends to be flatter. Due to the low frequency nature of natural scenes and the possibility of having high-frequency compression noise, it may be desirable to have a low-pass filter with a gain response to minimize the signal distortion due to compression noise and signal attenuation.
- a balance between the flatness and wideness of the sub-pixel interpolation filters 108 is desired in the interpolation filter design. Thus, different interpolation filters 108 may be used for different PUs based on localized characteristics of each PU.
- FIG. 4 shows a more detailed example of filter determiner 106 according to one embodiment.
- filter determiner 106 receives a mapping between the interpolation filters 108 and coding parameters associated with the compression process. For example, the mapping may be between interpolation filters 108 and a PU size or a prediction index.
- Filter determiner 106 then implicitly decides which interpolation filter 108 to use based on the mapping between the interpolation filter 108 and the characteristic.
- the determined interpolation filter 108 is then output and used to interpolate sub-pel pixel values.
- FIG. 5 shows a simplified flowchart 500 of a method for determining an interpolation filter 108 using PU size according to one embodiment.
- filter determiner 106 determines a set of interpolation filters 108 .
- a specific set of interpolation filters 108 may be provided for half-pel pixel interpolation and another specific set of interpolation filters 108 are provided for quarter-pel pixel interpolation.
- Each interpolation filter 108 may include different interpolation filter settings, such as the number of taps and the values of coefficients may vary. When different interpolation filters 108 are referred to, this may mean that different settings are used in interpolation filters 108 .
- filter determiner 106 determines mappings between interpolation filters 108 and different PU sizes.
- the PU size may be the size of the PU being encoded or decoded. Although a PU is discussed, other units of video content may be used (e.g., a coding unit size).
- the mapping may map, for each sub- pel pixel positions, an interpolation filter 108 to a PU size.
- the number of interpolation filters 108 used may be as large as the number of possible PU sizes.
- an interpolation filter 108 may be mapped to a PU size of a width or height of the PU that is less than or equal to 8 pixels. An example of the mapping will be described in more detail below.
- filter determiner 106 determines a PU size of a current PU being encoded or decoded. For example, decoder 104 may determine the PU size from the input bitstream. Also, encoder 102 may choose the PU size based on an evaluation of performance, video content, or some other characteristic. Using the PU size, at 508 , filter determiner 106 determines the interpolation filter associated with the PU size in the mapping, for example, the coefficient values used to an interpolate a sub-pel pixel value.
- Particular embodiments may use the size of a current PU to determine the interpolation filter 108 because PU size may be an indication of the characteristics of the reference block when the quality of coded pictures is consistent for consecutive frames. In other words, the compression quality from frame to frame may not generally change much.
- smaller PU sizes may use wider-band low pass interpolation filters 108 and larger PU sizes may use narrower-band low pass interpolation filters 108 .
- One reason why the wider-band low pass interpolation filter 108 is used for smaller PU sizes is because the smaller PU size is selected because of certain reasons. For example, a bit budget may be high so it is justifiable to send extra prediction mode information for smaller PU sizes.
- the quantization noise of the reference block may be negligible given the consistent quality of consecutive frames. In these cases, there is not much noise due to quantization meaning that there will not be much benefit from narrower band interpolation filters 108 . In this case, a wider band interpolation filter may be preferred to preserve the possible high frequency content of the signal. Also, when smaller PU sizes are selected, the image may contain considerable contrast that goes through inconsistent motion. Because high contrast usually implies high frequency content, a wider interpolation filter 108 may be suitable in this case. The opposite argument can be used to justify the use of a narrower band interpolation filter 108 for larger PU sizes. Although the above justifications are described, it will be understood that other justifications may be used to select different interpolation filters 108 .
- interpolation filters 108 to use based on PU size is described.
- the coefficients are used to weight the values of integer pixels depicted in FIG. 3 .
- sub-pel pixels FL and FR are interpolated using values of spatially neighboring full-pel pixels L 3 , L 2 , L 1 , L 0 , R 0 , R 1 , R 2 , and R 3 as follows:
- FR ( ⁇ 1* L 3+3* L 2 ⁇ 7* L 1 30 19* L 0+57* R 0 ⁇ 10* R 1+4* R 2 ⁇ 1* R 3+32)>>6;
- the quarter-pel positions (FL and FR) are calculated by applying coefficient values to the full-pel pixel values (L 3 , L 2 , L 1 , L 0 , R 0 , R 1 , R 2 , and R 3 ). For example, a full-pel pixel value is multiplied by a corresponding coefficient value. Then, the results of the multiplied values are added together. A value of “32” is added and the result is right shifted by “6”. The adding of “32” and shifting to the right (6 bits) is equivalent to adding 32 and dividing by 64, which truncates the value. Other operations are also contemplated. For example, a different truncating operation may be performed.
- sub-pel pixels FL and FR are interpolated using the following interpolation filter values:
- the operation in which a coefficient is 0, such as “0*R 3 ” or “0*L 3 ” may be skipped. That means only a 7-tap interpolation filter is needed if PU width is larger than 8 pixels and PU height is larger than 8 pixels because one of the taps has a coefficient of 0 for both of these conditions.
- interpolation filter 108 filter may be determined based on a prediction index.
- the prediction index may be a list.
- a number of prediction blocks may be used.
- the prediction blocks may differ and may be signaled by motion vectors in reference to a reference picture.
- the weighted averaging of these prediction blocks may be used to determine a final prediction for a current PU.
- the different choices for the prediction block may be specified in an indexing scheme. For example, with n prediction block choices, any combination of 2 n ⁇ 1 prediction blocks may be used. Each combination may be defined by a prediction combination index (PCI).
- PCI prediction combination index
- filter determiner 106 may use the prediction combination index to determine interpolation filter 108 .
- Different interpolation filters 108 may be selected based on the prediction combination index determined, and also for different sub-pel pixel positions. Although the prediction combination index is described, other information based on the prediction index may be used.
- FIG. 6 depicts a simplified flowchart 600 of a method for determining an interpolation filter 108 using a prediction index according to one embodiment.
- filter determiner 106 determines a set of interpolation filters 108 .
- filter determiner 106 determines a mapping between interpolation filters 108 and different prediction index combinations. For example, each prediction combination index may be associated with a different interpolation filter 108 .
- filter determiner 106 determines a PCI associated with a current PU.
- the PCI may be defined for a current PU being encoded or decoded.
- filter determiner 106 determines an interpolation filter 108 for the PCI.
- the mapping from each PCI to an interpolation filter 108 is used to determine the interpolation filter.
- uni-prediction mode may have a choice between two prediction indexes. Based on which of a first index and a second index is selected, different interpolation filters 108 may be determined Also, with bi-prediction, two prediction indices may be selected.
- a first interpolation filter may be selected and for the fourth index, a second interpolation filter may be selected.
- Different interpolation filters for first, second, third, and fourth indices in the uni prediction and the bi-prediction may be used.
- interpolation filter 108 there may be up to two reference blocks for each PU (bi-prediction mode). In one embodiment, the reference blocks would be found on two different prediction index lists. For example, a first prediction index is used to index reference blocks located before the PU in time and a second prediction index is used to index reference blocks located after the PU in time. If there are two reference blocks, then an interpolation filter 108 with a wider pass-band may be used to include more of the signal high frequencies. If there are two reference blocks, then it is also possible to have different interpolation filters 108 for each reference block.
- wider pass-band interpolation filters 108 pass more coding noise due to the averaging of the prediction block to form the final prediction for the current PU, the noise would be attenuated while the signal would be unchanged after averaging.
- filter determiner 106 applies an interpolation filter 108 that is narrower than the above wider-pass band interpolation filters 108 to cancel more noise.
- filter determiner 106 applies another interpolation filter 108 that is even narrower than in the second case to cancel even more noise.
- interpolation filters 108 are used. For example, the mode of uni-prediction or bi-prediction is used to determine interpolation filter 108 . If a bi-prediction mode is used, then a certain interpolation filter is used. However, if a uni-prediction mode is used for the PU, then a choice of prediction indexes may be made. Depending on which prediction index is selected, different interpolation filters 108 are used.
- implicit signaling is used to determine the interpolation filter.
- explicit signaling between an encoder 102 and decoder 104 is not needed to signal the interpolation filter that should be used. Rather, encoder 102 and decoder 102 use information that is already available to the encoder and decoder to make a determination on the interpolation filter that is used.
- FIG. 7 depicts a simplified flowchart 700 of a method for explicitly performing adaptive interpolation filter signaling according to one embodiment.
- a mapping between interpolation filters 108 and characteristics of the compression process is received.
- both encoder 102 and decoder 104 receive the mapping.
- This mapping may be received for the implicit determination of interpolation filter 108 .
- the encoding and decoding of video content is performed using the mappings.
- filter signaling block 110 - 1 determines when to send a signal including information regarding the mapping.
- filter signaling block 110 - 1 may send the signal for each PU, CU, picture, or part of picture that is being encoded. Also, other times, such as when the mappings are updated or when additional information is required for decoding the PU, filter signaling block 110 - 1 may send the signal.
- filter signaling block 110 - 1 sends the signal to filter signaling block 110 - 2 in decoder 104 for use in decoding video content when it is determined the signal should be sent.
- Decoder 104 uses the information to decode a block of video content by determining a coding parameter, such as PU size or a prediction index, used in the compression process and determining an interpolation filter 108 in the set of interpolation filters based on a mapping between the interpolation filter and the coding parameter.
- the information received from filter signaling block 110 - 1 is used to determine interpolation filter 108 .
- the selection of the mapping uses information in the signal to determine which interpolation filter 108 to use. The information may be used for one unit or may be used for multiple units.
- the information includes a change to the mapping between interpolation filters 108 in the set of interpolation filters 108 and coding parameters used in the compression process.
- the mapping that was previously stored at encoder 102 and decoder 104 is replaced. The new mappings will then be used thereafter.
- the information indicates which interpolation filter 108 in a group of interpolation filters 108 to select.
- decoder 104 uses a mapping to determine a filter family (multiple interpolation filters 108 ). Then, the information explicitly sent indicates which interpolation filter 108 in the filter family should be used. In another example, the information is used to select the family of interpolation filters.
- Particular embodiments may be implemented in a non-transitory computer-readable storage medium for use by or in connection with the instruction execution system, apparatus, system, or machine.
- the computer-readable storage medium contains instructions for controlling a computer system to perform a method described by particular embodiments.
- the instructions when executed by one or more computer processors, may be operable to perform that which is described in particular embodiments.
Abstract
Description
- The present application claims priority to U.S. Provisional App. No. 61/451,827 for “Adaptive Interpolation with Implicit Signaling of the Interpolation Choice” filed Mar. 11, 2011 and U.S. Provisional App. No. 61/453,278 for “High Level Adaptive Interpolation Filter Signaling” filed Mar. 16, 2011, the contents of which is incorporated herein by reference in their entirety.
- The present application is related to U.S. application Ser. No. ______ for “Interpolation Filter Selection Using PU Size” filed concurrently, the contents of which is incorporated herein by reference in their entirety.
- Particular embodiments generally relate to video compression.
- High-efficiency video coding (HEVC) is a block-based hybrid spatial and temporal predictive coding scheme. Similar to other video coding standards, such as motion picture experts group (MPEG)-1, MPEG-2, and MPEG-4, HEVC supports intra-picture, such as I picture, and inter-picture, such as B picture. In HEVC, P and B pictures are consolidated into a general B picture that can be used as a reference picture.
- Intra-picture is coded without referring to any other pictures. Thus, only spatial prediction is allowed for a coding unit (CU)/prediction unit (PU) inside an intra-picture. Inter-picture, however, supports both intra- and inter-prediction. A CU/PU in an inter-picture may be either spatially or temporally predictive coded. Temporal predictive coding may reference pictures that were previously coded.
- Temporal motion prediction is an effective method to increase the coding efficiency and provides high compression. HEVC uses a translational model for motion prediction. According to the translational model, a prediction signal for a given block in a current picture is generated from a corresponding block in a reference picture. The coordinates of the reference block are given by a motion vector that describes the translational motion along horizontal (x) and vertical (y) directions that would be added/subtracted to/from the coordinates of the current block. A decoder needs the motion vector to decode the compressed video.
- The pixels in the reference frame are used as the prediction. In one example, the motion may be captured in integer pixels. However, not all objects move with the spacing of integer pixels. For example, since an object motion is completely unrelated to the sampling grid, sometimes the object motion is more like a fractional-pel motion than a full-pel one. Thus, HEVC allows for motion vectors with sub-pel (fractional) pixel accuracy.
- In order to estimate and compensate sub-pel displacements, the image signal on these sub-pel positions is generated by an interpolation process. In HEVC, sub-pel pixel interpolation is performed using finite impulse response (FIR) filters. Generally, the filter may have 8 taps to determine the sub-pel pixel values for sub-pel pixel positions, such as half-pel and quarter-pel positions. The taps of an interpolation filter weight the integer pixels with coefficient values to generate the sub-pel signals. Different coefficients may produce different compression performance in signal distortion and noise.
- In one example, the coefficients for the filter are fixed and applicable to compression of all sequences. In another example, the filter choice may vary from sequence to sequence, within a sequence, from picture to picture, from reference to reference, or within a picture, from PU to PU. This is referred to as an adaptive interpolation filter (AIF). To use an adaptive interpolation filter, the choice of which adaptive filter needs to be communicated to the decoder explicitly by sending the filter coefficients or by sending information indicating the preferred filter to be used. The explicit signaling increases the overhead as the information needs to be encoded and sent to the decoder for every PU that is being compressed and is costly because it increases the required bit rate in temporally predictive pictures.
- In one embodiment, a method for encoding or decoding video content is provided. The method includes determining a set of interpolation filters for use in interpolating sub-pel pixel values and a mapping between interpolation filters in the set of interpolation filters and different prediction indexes of the video content. A unit of video content is received and a prediction index is determined in a plurality of prediction indexes that are used to determine a prediction block for the unit of video content. The method then determines an interpolation filter in the set of interpolation filters based on a mapping between the interpolation filter and the prediction index to interpolate a sub-pel pixel value for use in a temporal prediction process for the unit of video content.
- In one embodiment, an apparatus configured to encode or decode video content is provided. The apparatus includes: one or more computer processors; and a computer-readable storage medium comprising instructions for controlling the one or more computer processors to be operable to: determine a set of interpolation filters for use in interpolating sub-pel pixel values and a mapping between interpolation filters in the set of interpolation filters and different prediction indexes of the video content; receive a unit of video content; determine a prediction index in a plurality of prediction indexes that are used to determine a prediction block for the unit of video content; and determine an interpolation filter in the set of interpolation filters based on a mapping between the interpolation filter and the prediction index to interpolate a sub-pel pixel value for use in a temporal prediction process for the unit of video content.
- In one embodiment, a non-transitory computer-readable storage medium is provided including instructions for encoding or decoding video content. The instructions are for controlling the one or more computer processors to be operable to: determine a set of interpolation filters for use in interpolating sub-pel pixel values and a mapping between interpolation filters in the set of interpolation filters and different prediction indexes of the video content; receive a unit of video content; a prediction index in a plurality of prediction indexes that are used to determine a prediction block for the unit of video content; and determine an interpolation filter in the set of interpolation filters based on a mapping between the interpolation filter and the prediction index to interpolate a sub-pel pixel value for use in a temporal prediction process for the unit of video content.
- The following detailed description and accompanying drawings provide a more detailed understanding of the nature and advantages of the present invention.
-
FIG. 1 depicts an example of a system for encoding and decoding video content according to one embodiment. -
FIG. 2A depicts an example of an encoder according to one embodiment. -
FIG. 2B depicts an example of decoder according to one embodiment. -
FIG. 3 depicts positions of half-pel and quarter-pel pixels between full-pel pixels along a pixel line within an image according to one embodiment. -
FIG. 4 shows a more detailed example of a filter determiner according to one embodiment. -
FIG. 5 shows a simplified flowchart of a method for determining an interpolation filter using PU size according to one embodiment. -
FIG. 6 depicts a simplified flowchart of a method for determining an interpolation filter using a prediction index according to one embodiment. -
FIG. 7 depicts a simplified flowchart of a method for performing adaptive interpolation filter signaling according to one embodiment. - Described herein are techniques for a video compression system. In the following description, for purposes of explanation, numerous examples and specific details are set forth in order to provide a thorough understanding of embodiments of the present invention. Particular embodiments as defined by the claims may include some or all of the features in these examples alone or in combination with other features described below, and may further include modifications and equivalents of the features and concepts described herein.
-
FIG. 1 depicts an example of asystem 100 for encoding and decoding video content according to one embodiment.System 100 includes anencoder 102 and adecoder 104, both of which will be described in more detail below.Encoder 102 anddecoder 104 perform temporal prediction through motion estimation and motion compensation. The temporal prediction searches for a best match prediction for a current prediction unit (PU) over reference pictures. The best match prediction is described by a motion vector (MV) and associated reference picture ID. Also, a PU in a B picture may have up to two motion vectors. - The temporal prediction allows for fractional (sub-pel) picture accuracy. Sub-pel pixel prediction is used because motion during two instances of time (the current and reference frames' capture times) can correspond to a sub-pel pixel position in pixel coordinates and generation of different prediction data corresponding to each sub-pel pixel positions allows for the possibility of conditioning the prediction signal to better match the signal in the current PU.
- The temporal prediction may use adaptive sub-pel pixel interpolation for the PU. In this case,
different interpolation filters 108 may be used to determine the sub-pel pixel values. Interpolation filters 108 include taps that weight full-pel pixel values with coefficient values that are used to determine the sub-pel pixel values for different sub-pel pixel positions, such as half-pel and quarter pel positions. When adifferent interpolation filter 108 is used, the interpolation filter may use different values for coefficients and/or a different number of taps. -
Encoder 102 anddecoder 104 need to know whichinterpolation filter 108 to use in encoding and decoding a unit of video content, such as a PU. Particular embodiments may use an implicit signaling method for determining whichinterpolation filter 108 to use to interpolate sub-pel pixel values. In one embodiment, information already available to bothencoder 102 anddecoder 104 is used to determine whichinterpolation filter 106 to use. For example, afilter determiner 106 in eitherencoder 102 ordecoder 104 receives a set of interpolation filters with mappings between the interpolation filters and a coding parameter used in the compression process. For example, the set of interpolation filters may be installed or stored in memory ofencoder 102 anddecoder 104.Filter determiner 106 uses the coding parameter used in the compression process to determine aninterpolation filter 108 based on the mapping. For example, filterdeterminer 106 may use PU size or a prediction index (for uni-prediction or bi-prediction mode) to determine whichinterpolation filter 108 to use. The mappings may be already known to encoder 102 anddecoder 104 before the encoding of PU or decoding of bits for the PU. Becauseencoder 102 anddecoder 104 use information already known to encoder 102 ordecoder 104 to determine theappropriate interpolation filter 108, the interpolation filter decision is implicitly determined without requiring explicit communication betweenencoder 102 anddecoder 104 for encoding and decoding the unit of video content. - Although the implicit signaling method may be used, it may be useful to explicitly have communication between
encoder 102 anddecoder 104 at certain times. For example, an explicit communication fromencoder 102 todecoder 104 is used to determine whichinterpolation filter 108 to use. In one example, a filter signaling block 110-1 inencoder 102 may communicate a filter signaling block 110-2 indecoder 104. The communication betweenencoder 102 anddecoder 104 may vary, such as the communications may be the mappings themselves, an update to the mappings, or information for use in determining which interpolation filter to use based on the mappings. The explicit signaling may be communicated using high level syntax(es) in a sequence, picture, or slice header. The signaling may be performed during an effective period of the high level syntax(es). -
FIG. 2A depicts an example of anencoder 102 according to one embodiment. A general operation ofencoder 102 will now be described. It will be understood that variations on the encoding process described will be appreciated by a person skilled in the art based on the disclosure and teachings herein. - For a current PU, x, a prediction PU, x′, is obtained through either spatial prediction or temporal prediction. The prediction PU is then subtracted from the current PU, resulting in a residual PU, e. A
spatial prediction block 204 may include different spatial prediction directions per PU, such as horizontal, vertical, 45-degree diagonal, 135-degree diagonal, DC (flat averaging), and planar. - A
temporal prediction block 206 performs temporal prediction through a motion estimation and motion compensation operation. The motion estimation operation searches for a best match prediction for the current PU over reference pictures. The best match prediction is described by a motion vector (MV) and associated reference picture (refldx). The motion vector and associated reference picture are included in the coded bit stream. -
Transform block 207 performs a transform operation with the residual PU, e.Transform block 207 outputs the residual PU in a transform domain, E. - A
quantizer 208 then quantizes the transform coefficients of the residual PU,E. Quantizer 208 converts the transform coefficients into a finite number of possible values.Entropy coding block 210 entropy encodes the quantized coefficients, which results in final compression bits to be transmitted. Different entropy coding methods may be used, such as context-adaptive variable length coding (CAVLC) or context-adaptive binary arithmetic coding (CABAC). - Also, in a decoding process within
encoder 102, a de-quantizer 212 de-quantizes the quantized transform coefficients of the residual PU.De-quantizer 212 then outputs the de-quantized transform coefficients, E′. Aninverse transform block 214 receives the de-quantized transform coefficients, which are then inverse transformed resulting in a reconstructed residual PU, e′. The reconstructed PU, e′, is then added to the corresponding prediction, x′, either spatial or temporal, to form the new reconstructed PU, x″. Aloop filter 216 performs de-blocking on the reconstructed PU, x″, to reduce blocking artifacts. Additionally,loop filter 216 may perform a sample adaptive offset process after the completion of the de-blocking filter process for the decoded picture, which compensates for a pixel value offset between reconstructed pixels and original pixels. Also,loop filter 216 may perform adaptive filtering over the reconstructed PU, which minimizes coding distortion between the input and output pictures. Additionally, if the reconstructed pictures are reference pictures, the reference pictures are stored in areference buffer 218 for future temporal prediction. -
Interpolation filter 108 interpolates sub-pel pixel values fortemporal prediction block 206.Filter determiner 106 implicitly determinesinterpolation filter 108 as will be described below. Also, filter signaling block 110-1 explicitly signals information for use in determininginterpolation filter 108 at certain times.Temporal prediction block 206 then uses the sub-pel pixel values outputted byinterpolation filter 108 to generate a prediction of a current PU. -
FIG. 2B depicts an example ofdecoder 104 according to one embodiment. A general operation ofdecoder 104 will now be described. It will be understood that variations on the decoding process described will be appreciated by a person skilled in the art based on the disclosure and teachings herein.Decoder 104 receives input bits fromencoder 102 for compressed video content. - An
entropy decoding block 230 performs entropy decoding on input bits corresponding to quantized transform coefficients of a residual PU. A de-quantizer 232 de-quantizes the quantized transform coefficients of the residual PU.De-quantizer 232 then outputs the de-quantized transform coefficients of the residual PU, E′. Aninverse transform block 234 receives the de-quantized transform coefficients, which are then inverse transformed resulting in a reconstructed residual PU, e′. - The reconstructed PU, e′, is then added to the corresponding prediction, x′, either spatial or temporal, to form the new constructed PU, x″. A
loop filter 236 performs de-blocking on the reconstructed PU, x″, to reduce blocking artifacts. Additionally,loop filter 236 may perform a sample adaptive offset process after the completion of the de-blocking filter process for the decoded picture, which compensates for a pixel value offset between reconstructed pixels and original pixels. Also,loop filter 236 may perform an adaptive loop filter over the reconstructed PU, which minimizes coding distortion between the input and output pictures. Additionally, if the reconstructed pictures are reference pictures, the reference pictures are stored in areference buffer 238 for future temporal prediction. - The prediction PU, x′, is obtained through either spatial prediction or temporal prediction. A
spatial prediction block 240 may receive decoded spatial prediction directions per PU, such as horizontal, vertical, 45-degree diagonal, 135-degree diagonal, DC (flat averaging), and planar. The spatial prediction directions are used to determine the prediction PU, x′. -
Interpolation filter 108 interpolates sub-pel pixel values for input into atemporal prediction block 242.Filter determiner 106 implicitly determinesinterpolation filter 108 as will be described below. Also, filter signaling block 110-2 receives signals information for use in determininginterpolation filter 108 at certain times.Temporal prediction block 242 performs temporal prediction using decoded motion vector information and interpolated sub-pel pixel values outputted byinterpolation filter 108 in a motion compensation operation.Temporal prediction block 242 outputs the prediction PU, x′. - To estimate a fractional pixel (sub-pel displacements), an image signal on each sub-pel position is generated by an interpolation process.
FIG. 3 depicts positions of half-pel and quarter-pel pixels between full-pel pixels along a pixel line within an image according to one embodiment. For example, the pixel line may be along a row or column of an image. Full-pel pixels are represented by integer pixels and are shown inFIG. 3 as pixels L3, L2, L1, L0, R0, R1, R2, and R3. H is a half-pel pixel between full-pel pixels L0 and R0. FL is a sub-pel pixel (quarter-pel pixel) between full-pel pixels L0 and H and FR is a sub-pel pixel between half-pel pixel H and full-pel pixel R0. - The quarter-pel and half-pel pixels may be interpolated using the values of spatial neighboring full-pel pixels. For example, the half-pel pixel H may be interpolated using the values of full-pel pixels L3, L2, L1, L0, R0, R1, R2, and R3. Different coefficients may also be used to weight the values of the neighboring pixels and provide different characteristics of filtering.
- The number of taps and coefficient values may be varied. For example, to determine an ideal sub-pixel value, interpolation filters 108 may be linear in phase with a unity gain. The constant (unity) gain is required to make sure the filters do not distort the signal. However, in practice, it may not be possible to have a constant unity gain for all frequencies. Thus, one of the goals for designing
interpolation filters 108 is to make a linear phase filter (with appropriate phase slope or group delay) to have a gain response that is as flat and as wide as possible. Different trade-offs between flatness and wideness of a frequency response result in different sub-pixel interpolation filters. For example, since for natural images most of the signal is concentrated at low and middle frequencies, it may be preferred to have aninterpolation filter 108 that is as flat as possible in the low and middle frequencies, while the high frequencies may have more fluctuations. For noise cancellation, it may be preferable that thesub-pixel interpolation filters 108 attenuate signals where the noise is present. The shape of the noise may depend on the picture content and the amount of compression. For example, compression noise for low quantization regimes tends to be flatter. Due to the low frequency nature of natural scenes and the possibility of having high-frequency compression noise, it may be desirable to have a low-pass filter with a gain response to minimize the signal distortion due to compression noise and signal attenuation. A balance between the flatness and wideness of the sub-pixel interpolation filters 108 is desired in the interpolation filter design. Thus,different interpolation filters 108 may be used for different PUs based on localized characteristics of each PU. - As discussed above, particular embodiments use implicit signaling to determine which
interpolation filter 108 to use.FIG. 4 shows a more detailed example offilter determiner 106 according to one embodiment. As shown,filter determiner 106 receives a mapping between the interpolation filters 108 and coding parameters associated with the compression process. For example, the mapping may be betweeninterpolation filters 108 and a PU size or a prediction index.Filter determiner 106 then implicitly decides whichinterpolation filter 108 to use based on the mapping between theinterpolation filter 108 and the characteristic. Thedetermined interpolation filter 108 is then output and used to interpolate sub-pel pixel values. - As discussed above, the coding parameter used may be PU size or a prediction index.
FIG. 5 shows asimplified flowchart 500 of a method for determining aninterpolation filter 108 using PU size according to one embodiment. At 502,filter determiner 106 determines a set of interpolation filters 108. For example, a specific set ofinterpolation filters 108 may be provided for half-pel pixel interpolation and another specific set ofinterpolation filters 108 are provided for quarter-pel pixel interpolation. Eachinterpolation filter 108 may include different interpolation filter settings, such as the number of taps and the values of coefficients may vary. Whendifferent interpolation filters 108 are referred to, this may mean that different settings are used in interpolation filters 108. - At 504,
filter determiner 106 determines mappings betweeninterpolation filters 108 and different PU sizes. The PU size may be the size of the PU being encoded or decoded. Although a PU is discussed, other units of video content may be used (e.g., a coding unit size). The mapping may map, for each sub- pel pixel positions, aninterpolation filter 108 to a PU size. In one example, the number ofinterpolation filters 108 used may be as large as the number of possible PU sizes. In one example, aninterpolation filter 108 may be mapped to a PU size of a width or height of the PU that is less than or equal to 8 pixels. An example of the mapping will be described in more detail below. - At 506,
filter determiner 106 determines a PU size of a current PU being encoded or decoded. For example,decoder 104 may determine the PU size from the input bitstream. Also,encoder 102 may choose the PU size based on an evaluation of performance, video content, or some other characteristic. Using the PU size, at 508,filter determiner 106 determines the interpolation filter associated with the PU size in the mapping, for example, the coefficient values used to an interpolate a sub-pel pixel value. - Particular embodiments may use the size of a current PU to determine the
interpolation filter 108 because PU size may be an indication of the characteristics of the reference block when the quality of coded pictures is consistent for consecutive frames. In other words, the compression quality from frame to frame may not generally change much. In this case, smaller PU sizes may use wider-band low pass interpolation filters 108 and larger PU sizes may use narrower-band low pass interpolation filters 108. One reason why the wider-band lowpass interpolation filter 108 is used for smaller PU sizes is because the smaller PU size is selected because of certain reasons. For example, a bit budget may be high so it is justifiable to send extra prediction mode information for smaller PU sizes. Using the high bit-budget assumption, the quantization noise of the reference block may be negligible given the consistent quality of consecutive frames. In these cases, there is not much noise due to quantization meaning that there will not be much benefit from narrower band interpolation filters 108. In this case, a wider band interpolation filter may be preferred to preserve the possible high frequency content of the signal. Also, when smaller PU sizes are selected, the image may contain considerable contrast that goes through inconsistent motion. Because high contrast usually implies high frequency content, awider interpolation filter 108 may be suitable in this case. The opposite argument can be used to justify the use of a narrowerband interpolation filter 108 for larger PU sizes. Although the above justifications are described, it will be understood that other justifications may be used to select different interpolation filters 108. - One example of
different interpolation filters 108 to use based on PU size is described. The coefficients are used to weight the values of integer pixels depicted inFIG. 3 . In one example using PU size, if PU width is no larger than 8 pixels or PU height is no larger than 8 pixels, then sub-pel pixels FL and FR are interpolated using values of spatially neighboring full-pel pixels L3, L2, L1, L0, R0, R1, R2, and R3 as follows: -
FL=(−1*L3+4*L2−10*L1+57*L0+19*R0−7*R1+3*R2−1*R3+32)>>6; -
FR=(−1*L3+3*L2−7*L1 30 19*L0+57*R0−10*R1+4*R2−1*R3+32)>>6; - The quarter-pel positions (FL and FR) are calculated by applying coefficient values to the full-pel pixel values (L3, L2, L1, L0, R0, R1, R2, and R3). For example, a full-pel pixel value is multiplied by a corresponding coefficient value. Then, the results of the multiplied values are added together. A value of “32” is added and the result is right shifted by “6”. The adding of “32” and shifting to the right (6 bits) is equivalent to adding 32 and dividing by 64, which truncates the value. Other operations are also contemplated. For example, a different truncating operation may be performed.
- If the PU width is larger than 8 pixels and PU height is larger than 8 pixels, sub-pel pixels FL and FR are interpolated using the following interpolation filter values:
-
FL=(−1*L3+3*L2−9*L1+57*L0+18*R0−6*R1+2*R2−0*R3+32)>>6; -
FR=(−0*L3+2*L2−6*L1+18*L0+57*R0−9*R1+3*R2−1*R3+32)>>6; - Table 1 summarizes the filter coefficients used as follows:
-
TABLE 1 POSITION COEFFICIENTS PUWIDTH <= 8 OR FL {−1, 4, −10, 57, 19, −7, 3, −1,} PUHEIGHT <= 8 FR {−1, 3, −7, 19, 57, −10, 4, −1,} PUWIDTH > 8 AND FL {−1, 3, −9, 57, 18, −6, 2, 0,} PUHEIGHT > 8 FR {0, 2, −6, 18, 57, −9, 3, −1,} - In one implementation, the operation in which a coefficient is 0, such as “0*R3” or “0*L3” may be skipped. That means only a 7-tap interpolation filter is needed if PU width is larger than 8 pixels and PU height is larger than 8 pixels because one of the taps has a coefficient of 0 for both of these conditions.
- In another embodiment,
interpolation filter 108 filter may be determined based on a prediction index. The prediction index may be a list. For prediction of a current PU, a number of prediction blocks may be used. The prediction blocks may differ and may be signaled by motion vectors in reference to a reference picture. The weighted averaging of these prediction blocks may be used to determine a final prediction for a current PU. The different choices for the prediction block may be specified in an indexing scheme. For example, with n prediction block choices, any combination of 2n−1 prediction blocks may be used. Each combination may be defined by a prediction combination index (PCI). In one embodiment, filterdeterminer 106 may use the prediction combination index to determineinterpolation filter 108.Different interpolation filters 108 may be selected based on the prediction combination index determined, and also for different sub-pel pixel positions. Although the prediction combination index is described, other information based on the prediction index may be used. -
FIG. 6 depicts asimplified flowchart 600 of a method for determining aninterpolation filter 108 using a prediction index according to one embodiment. At 602,filter determiner 106 determines a set of interpolation filters 108. Also, at 604,filter determiner 106 determines a mapping betweeninterpolation filters 108 and different prediction index combinations. For example, each prediction combination index may be associated with adifferent interpolation filter 108. - At 606,
filter determiner 106 determines a PCI associated with a current PU. For example, the PCI may be defined for a current PU being encoded or decoded. At 608,filter determiner 106 determines aninterpolation filter 108 for the PCI. For example, the mapping from each PCI to aninterpolation filter 108 is used to determine the interpolation filter. In one example, uni-prediction mode may have a choice between two prediction indexes. Based on which of a first index and a second index is selected,different interpolation filters 108 may be determined Also, with bi-prediction, two prediction indices may be selected. For a third index, a first interpolation filter may be selected and for the fourth index, a second interpolation filter may be selected. Different interpolation filters for first, second, third, and fourth indices in the uni prediction and the bi-prediction may be used. - One example of using the prediction index to determine
interpolation filter 108 will now be described, but other examples may also be appreciated. In one embodiment, in HEVC, there may be up to two reference blocks for each PU (bi-prediction mode). In one embodiment, the reference blocks would be found on two different prediction index lists. For example, a first prediction index is used to index reference blocks located before the PU in time and a second prediction index is used to index reference blocks located after the PU in time. If there are two reference blocks, then aninterpolation filter 108 with a wider pass-band may be used to include more of the signal high frequencies. If there are two reference blocks, then it is also possible to havedifferent interpolation filters 108 for each reference block. Although wider pass-band interpolation filters 108 pass more coding noise due to the averaging of the prediction block to form the final prediction for the current PU, the noise would be attenuated while the signal would be unchanged after averaging. In another case, if there is only one prediction block for the current PU (uni-prediction mode) and that prediction block comes from a first reference list (e.g., a reference list that includes pictures that are located before the PU in time), then filterdeterminer 106 applies aninterpolation filter 108 that is narrower than the above wider-pass band interpolation filters 108 to cancel more noise. In a third case, if there is only one prediction block for a current PU and that prediction block comes from a second reference list (e.g., a reference list that includes pictures that are located after the PU in time), then filterdeterminer 106 applies anotherinterpolation filter 108 that is even narrower than in the second case to cancel even more noise. - One example of determining
interpolation filters 108 based on the prediction index is described. For example, the mode of uni-prediction or bi-prediction is used to determineinterpolation filter 108. If a bi-prediction mode is used, then a certain interpolation filter is used. However, if a uni-prediction mode is used for the PU, then a choice of prediction indexes may be made. Depending on which prediction index is selected,different interpolation filters 108 are used. - Accordingly, implicit signaling is used to determine the interpolation filter. Thus, explicit signaling between an
encoder 102 anddecoder 104 is not needed to signal the interpolation filter that should be used. Rather,encoder 102 anddecoder 102 use information that is already available to the encoder and decoder to make a determination on the interpolation filter that is used. - Even though implicitly deriving
interpolation filter 108 is used, particular embodiments use explicit signaling at certain times. The explicit signaling may be used in conjunction with the implicit derivation and/or without the implicit derivation.FIG. 7 depicts asimplified flowchart 700 of a method for explicitly performing adaptive interpolation filter signaling according to one embodiment. At 702, a mapping betweeninterpolation filters 108 and characteristics of the compression process is received. For example, bothencoder 102 anddecoder 104 receive the mapping. This mapping may be received for the implicit determination ofinterpolation filter 108. As described above, the encoding and decoding of video content is performed using the mappings. - At 704, filter signaling block 110-1 determines when to send a signal including information regarding the mapping. In one embodiment, filter signaling block 110-1 may send the signal for each PU, CU, picture, or part of picture that is being encoded. Also, other times, such as when the mappings are updated or when additional information is required for decoding the PU, filter signaling block 110-1 may send the signal.
- At 706, filter signaling block 110-1 sends the signal to filter signaling block 110-2 in
decoder 104 for use in decoding video content when it is determined the signal should be sent.Decoder 104 uses the information to decode a block of video content by determining a coding parameter, such as PU size or a prediction index, used in the compression process and determining aninterpolation filter 108 in the set of interpolation filters based on a mapping between the interpolation filter and the coding parameter. The information received from filter signaling block 110-1 is used to determineinterpolation filter 108. For example, the selection of the mapping uses information in the signal to determine whichinterpolation filter 108 to use. The information may be used for one unit or may be used for multiple units. - In one example, the information includes a change to the mapping between
interpolation filters 108 in the set ofinterpolation filters 108 and coding parameters used in the compression process. In this case, the mapping that was previously stored atencoder 102 anddecoder 104 is replaced. The new mappings will then be used thereafter. - In another example, the information indicates which
interpolation filter 108 in a group ofinterpolation filters 108 to select. For example,decoder 104 uses a mapping to determine a filter family (multiple interpolation filters 108). Then, the information explicitly sent indicates whichinterpolation filter 108 in the filter family should be used. In another example, the information is used to select the family of interpolation filters. - Particular embodiments may be implemented in a non-transitory computer-readable storage medium for use by or in connection with the instruction execution system, apparatus, system, or machine. The computer-readable storage medium contains instructions for controlling a computer system to perform a method described by particular embodiments. The instructions, when executed by one or more computer processors, may be operable to perform that which is described in particular embodiments.
- As used in the description herein and throughout the claims that follow, “a”, “an”, and “the” includes plural references unless the context clearly dictates otherwise. Also, as used in the description herein and throughout the claims that follow, the meaning of “in” includes “in” and “on” unless the context clearly dictates otherwise.
- The above description illustrates various embodiments of the present invention along with examples of how aspects of the present invention may be implemented. The above examples and embodiments should not be deemed to be the only embodiments, and are presented to illustrate the flexibility and advantages of the present invention as defined by the following claims. Based on the above disclosure and the following claims, other arrangements, embodiments, implementations and equivalents may be employed without departing from the scope of the invention as defined by the claims.
Claims (20)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/415,901 US20120230407A1 (en) | 2011-03-11 | 2012-03-09 | Interpolation Filter Selection Using Prediction Index |
PCT/US2012/028457 WO2012125450A1 (en) | 2011-03-11 | 2012-03-09 | Interpolation filter selection using prediction index |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201161451827P | 2011-03-11 | 2011-03-11 | |
US201161453278P | 2011-03-16 | 2011-03-16 | |
US13/415,901 US20120230407A1 (en) | 2011-03-11 | 2012-03-09 | Interpolation Filter Selection Using Prediction Index |
Publications (1)
Publication Number | Publication Date |
---|---|
US20120230407A1 true US20120230407A1 (en) | 2012-09-13 |
Family
ID=46795573
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/415,907 Active 2033-03-26 US9313519B2 (en) | 2011-03-11 | 2012-03-09 | Interpolation filter selection using prediction unit (PU) size |
US13/415,901 Abandoned US20120230407A1 (en) | 2011-03-11 | 2012-03-09 | Interpolation Filter Selection Using Prediction Index |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/415,907 Active 2033-03-26 US9313519B2 (en) | 2011-03-11 | 2012-03-09 | Interpolation filter selection using prediction unit (PU) size |
Country Status (1)
Country | Link |
---|---|
US (2) | US9313519B2 (en) |
Cited By (16)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2015199515A1 (en) * | 2014-06-27 | 2015-12-30 | Samsung Electronics Co., Ltd. | System and method for motion compensation in video coding |
US9264725B2 (en) | 2011-06-24 | 2016-02-16 | Google Inc. | Selection of phase offsets for interpolation filters for motion compensation |
US9313519B2 (en) | 2011-03-11 | 2016-04-12 | Google Technology Holdings LLC | Interpolation filter selection using prediction unit (PU) size |
US9319711B2 (en) | 2011-07-01 | 2016-04-19 | Google Technology Holdings LLC | Joint sub-pixel interpolation filter for temporal prediction |
WO2018067848A1 (en) * | 2016-10-05 | 2018-04-12 | Qualcomm Incorporated | Systems and methods of switching interpolation filters |
US10009622B1 (en) | 2015-12-15 | 2018-06-26 | Google Llc | Video coding with degradation of residuals |
US10116957B2 (en) | 2016-09-15 | 2018-10-30 | Google Inc. | Dual filter type for motion compensated prediction in video coding |
US10178388B2 (en) | 2013-07-17 | 2019-01-08 | Gurulogic Microsystems Oy | Encoder, decoder and method of operation using interpolation |
WO2019135419A1 (en) * | 2018-01-03 | 2019-07-11 | 엘지전자 주식회사 | Method and apparatus for inter prediction on basis of interpolation filter of current block in image coding system |
WO2020094000A1 (en) * | 2018-11-05 | 2020-05-14 | Beijing Bytedance Network Technology Co., Ltd. | Interpolation for inter prediction with refinement |
TWI704799B (en) * | 2018-07-13 | 2020-09-11 | 大陸商北京字節跳動網絡技術有限公司 | Shape dependent interpolation order |
WO2020182965A1 (en) * | 2019-03-12 | 2020-09-17 | Fraunhofer-Gesellschaft zur Förderung der angewandten Forschung e.V. | Encoders, decoders, methods, and video bit streams, and computer programs for hybrid video coding |
CN112543334A (en) * | 2019-09-22 | 2021-03-23 | 腾讯美国有限责任公司 | Video decoding method, video decoding device, computer equipment and storage medium |
JP2021513813A (en) * | 2018-02-14 | 2021-05-27 | ホアウェイ・テクノロジーズ・カンパニー・リミテッド | Adaptive interpolation filter |
CN113228637A (en) * | 2018-12-17 | 2021-08-06 | 北京字节跳动网络技术有限公司 | Shape dependent interpolation filter |
CN113841412A (en) * | 2019-03-12 | 2021-12-24 | 腾讯美国有限责任公司 | Signaling of CU-based interpolation filter selection |
Families Citing this family (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CA2807404C (en) * | 2012-09-04 | 2017-04-04 | Research In Motion Limited | Methods and devices for inter-layer prediction in scalable video compression |
CN105165011A (en) * | 2013-02-25 | 2015-12-16 | 三星电子株式会社 | Device and method for scalable video encoding considering memory bandwidth and computational quantity, and device and method for scalable video decoding |
US9313493B1 (en) * | 2013-06-27 | 2016-04-12 | Google Inc. | Advanced motion estimation |
US10412387B2 (en) * | 2014-08-22 | 2019-09-10 | Qualcomm Incorporated | Unified intra-block copy and inter-prediction |
US9918105B2 (en) * | 2014-10-07 | 2018-03-13 | Qualcomm Incorporated | Intra BC and inter unification |
US10275863B2 (en) | 2015-04-03 | 2019-04-30 | Cognex Corporation | Homography rectification |
US9542732B2 (en) * | 2015-04-03 | 2017-01-10 | Cognex Corporation | Efficient image transformation |
US10834419B2 (en) | 2016-04-13 | 2020-11-10 | Qualcomm Incorporated | Conformance constraint for collocated reference index in video coding |
KR102511546B1 (en) * | 2017-02-24 | 2023-03-17 | 주식회사 케이티 | Method and apparatus for processing a video signal |
EP3454556A1 (en) * | 2017-09-08 | 2019-03-13 | Thomson Licensing | Method and apparatus for video encoding and decoding using pattern-based block filtering |
KR20200002011A (en) * | 2018-06-28 | 2020-01-07 | 한국전자통신연구원 | Method and apparatus for encoding/decoding image and recording medium for storing bitstream |
CN113056909A (en) * | 2018-12-31 | 2021-06-29 | 松下电器（美国）知识产权公司 | Encoding device, decoding device, encoding method, and decoding method |
US20230179763A1 (en) * | 2021-12-06 | 2023-06-08 | Tencent America LLC | Interpolation Filters for Adaptive Motion Vector Difference Resolution |
Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040062307A1 (en) * | 2002-07-09 | 2004-04-01 | Nokia Corporation | Method and system for selecting interpolation filter type in video coding |
US20080075165A1 (en) * | 2006-09-26 | 2008-03-27 | Nokia Corporation | Adaptive interpolation filters for video coding |
US7555043B2 (en) * | 2002-04-25 | 2009-06-30 | Sony Corporation | Image processing apparatus and method |
US20120008686A1 (en) * | 2010-07-06 | 2012-01-12 | Apple Inc. | Motion compensation using vector quantized interpolation filters |
US8208564B2 (en) * | 2005-06-24 | 2012-06-26 | Ntt Docomo, Inc. | Method and apparatus for video encoding and decoding using adaptive interpolation |
Family Cites Families (49)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CA1335794C (en) | 1988-04-07 | 1995-06-06 | Yoshiyuki Okada | Process and apparatus for image magnification |
US6252576B1 (en) | 1998-08-06 | 2001-06-26 | In-System Design, Inc. | Hardware-efficient system for hybrid-bilinear image scaling |
US6724847B1 (en) | 2000-09-06 | 2004-04-20 | Motorola, Inc. | Feed-forward symbol synchronizer and methods of operation therefor |
US6950469B2 (en) | 2001-09-17 | 2005-09-27 | Nokia Corporation | Method for sub-pixel value interpolation |
CN101448162B (en) | 2001-12-17 | 2013-01-02 | 微软公司 | Method for processing video image |
US7110459B2 (en) | 2002-04-10 | 2006-09-19 | Microsoft Corporation | Approximate bicubic filter |
US7190724B2 (en) | 2002-04-12 | 2007-03-13 | Seiko Epson Corporation | Method and apparatus for transform domain video processing |
US20040076333A1 (en) | 2002-10-22 | 2004-04-22 | Huipin Zhang | Adaptive interpolation filter system for motion compensated predictive video coding |
FR2854259B1 (en) | 2003-04-28 | 2005-10-21 | France Telecom | SYSTEM FOR AIDING THE GENERATION OF REQUESTS AND CORRESPONDING METHOD |
CN101616330B (en) | 2003-07-16 | 2012-07-04 | 三星电子株式会社 | Video encoding/decoding apparatus and method for color image |
NO319660B1 (en) | 2003-11-17 | 2005-09-05 | Tandberg Telecom As | Procedure for interpolating pixel values |
NO319629B1 (en) | 2003-11-28 | 2005-09-05 | Tandberg Telecom As | Procedure for correcting interpolated pixel values |
US7505636B2 (en) | 2004-03-04 | 2009-03-17 | Broadcom Corporation | System and method for two-pass interpolation for quarter-pel motion compensation |
EP1617672A1 (en) | 2004-07-13 | 2006-01-18 | Matsushita Electric Industrial Co., Ltd. | Motion estimator/compensator including a 16-bit 1/8 pel interpolation filter |
US7653132B2 (en) | 2004-12-21 | 2010-01-26 | Stmicroelectronics, Inc. | Method and system for fast implementation of subpixel interpolation |
US7941006B2 (en) | 2005-02-25 | 2011-05-10 | Panasonic Corporation | Pixel interpolating method and device |
US7876833B2 (en) * | 2005-04-11 | 2011-01-25 | Sharp Laboratories Of America, Inc. | Method and apparatus for adaptive up-scaling for spatially scalable coding |
KR20070012201A (en) | 2005-07-21 | 2007-01-25 | 엘지전자 주식회사 | Method for encoding and decoding video signal |
EP1761062A1 (en) | 2005-09-06 | 2007-03-07 | BRITISH TELECOMMUNICATIONS public limited company | Generating and storing image data |
US7965177B2 (en) | 2005-09-16 | 2011-06-21 | Sharp Kabushiki Kaisha | Display system, screen design setting tool, display system program, screen design setting program, and recording medium |
US7155213B1 (en) | 2005-09-16 | 2006-12-26 | James R. Almeda | Remote control system |
US7778494B2 (en) | 2005-10-13 | 2010-08-17 | Texas Instruments Incorporated | FIR-based interpolation in advanced video codecs on VLIW processor |
CN1794821A (en) | 2006-01-11 | 2006-06-28 | 浙江大学 | Method and device of interpolation in grading video compression |
KR100827093B1 (en) | 2006-10-13 | 2008-05-02 | 삼성전자주식회사 | Method for video encoding and apparatus for the same |
US7958177B2 (en) | 2006-11-29 | 2011-06-07 | Arcsoft, Inc. | Method of parallelly filtering input data words to obtain final output data words containing packed half-pel pixels |
EP1983759A1 (en) | 2007-04-19 | 2008-10-22 | Matsushita Electric Industrial Co., Ltd. | Estimation of separable adaptive interpolation filters for hybrid video coding |
US8509567B2 (en) | 2007-07-09 | 2013-08-13 | Analog Devices, Inc. | Half pixel interpolator for video motion estimation accelerator |
CN101453646B (en) | 2007-12-04 | 2012-02-22 | 华为技术有限公司 | Image interpolation method, apparatus and interpolation coefficient obtaining method |
WO2009088340A1 (en) | 2008-01-08 | 2009-07-16 | Telefonaktiebolaget Lm Ericsson (Publ) | Adaptive filtering |
KR101456487B1 (en) | 2008-03-04 | 2014-10-31 | 삼성전자주식회사 | Method and apparatus for encoding and decoding using sub-pixel motion prediction |
US8971412B2 (en) * | 2008-04-10 | 2015-03-03 | Qualcomm Incorporated | Advanced interpolation techniques for motion compensation in video coding |
US20090257499A1 (en) * | 2008-04-10 | 2009-10-15 | Qualcomm Incorporated | Advanced interpolation techniques for motion compensation in video coding |
US8811484B2 (en) * | 2008-07-07 | 2014-08-19 | Qualcomm Incorporated | Video encoding by filter selection |
US9078007B2 (en) | 2008-10-03 | 2015-07-07 | Qualcomm Incorporated | Digital video coding with interpolation filters and offsets |
WO2011003326A1 (en) | 2009-07-06 | 2011-01-13 | Mediatek Singapore Pte. Ltd. | Single pass adaptive interpolation filter |
EP2489189A1 (en) | 2009-10-14 | 2012-08-22 | Thomson Licensing | Methods and apparatus for adaptive coding of motion information |
US20110200108A1 (en) | 2010-02-18 | 2011-08-18 | Qualcomm Incorporated | Chrominance high precision motion filtering for motion interpolation |
KR101682147B1 (en) | 2010-04-05 | 2016-12-05 | 삼성전자주식회사 | Method and apparatus for interpolation based on transform and inverse transform |
US9219921B2 (en) | 2010-04-12 | 2015-12-22 | Qualcomm Incorporated | Mixed tap filters |
US8792559B2 (en) | 2010-10-26 | 2014-07-29 | Sony Corporation | Method to improve accuracy and reliability of motion estimated with phase correlation |
US20120134425A1 (en) | 2010-11-29 | 2012-05-31 | Faouzi Kossentini | Method and System for Adaptive Interpolation in Digital Video Coding |
US9049454B2 (en) | 2011-01-19 | 2015-06-02 | Google Technology Holdings Llc. | High efficiency low complexity interpolation filters |
US20120224639A1 (en) | 2011-03-03 | 2012-09-06 | General Instrument Corporation | Method for interpolating half pixels and quarter pixels |
US8437581B2 (en) | 2011-03-04 | 2013-05-07 | General Instrument Corporation | Method and system for interpolating fractional video pixels |
US9313519B2 (en) | 2011-03-11 | 2016-04-12 | Google Technology Holdings LLC | Interpolation filter selection using prediction unit (PU) size |
EP2724532A1 (en) | 2011-06-22 | 2014-04-30 | Motorola Mobility LLC | Fractional pixel interpolation filter for video compression |
EP2724534A2 (en) | 2011-06-24 | 2014-04-30 | Motorola Mobility LLC | Selection of phase offsets for interpolation filters for motion compensation |
JP5727673B2 (en) | 2011-07-01 | 2015-06-03 | モトローラ モビリティ エルエルシーＭｏｔｏｒｏｌａ Ｍｏｂｉｌｉｔｙ Ｌｌｃ | Joint subpixel interpolation filter for temporal prediction |
US20140078394A1 (en) | 2012-09-17 | 2014-03-20 | General Instrument Corporation | Selective use of chroma interpolation filters in luma interpolation process |
-
2012
- 2012-03-09 US US13/415,907 patent/US9313519B2/en active Active
- 2012-03-09 US US13/415,901 patent/US20120230407A1/en not_active Abandoned
Patent Citations (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7555043B2 (en) * | 2002-04-25 | 2009-06-30 | Sony Corporation | Image processing apparatus and method |
US20040062307A1 (en) * | 2002-07-09 | 2004-04-01 | Nokia Corporation | Method and system for selecting interpolation filter type in video coding |
US8208564B2 (en) * | 2005-06-24 | 2012-06-26 | Ntt Docomo, Inc. | Method and apparatus for video encoding and decoding using adaptive interpolation |
US20080075165A1 (en) * | 2006-09-26 | 2008-03-27 | Nokia Corporation | Adaptive interpolation filters for video coding |
US20120008686A1 (en) * | 2010-07-06 | 2012-01-12 | Apple Inc. | Motion compensation using vector quantized interpolation filters |
Cited By (28)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9313519B2 (en) | 2011-03-11 | 2016-04-12 | Google Technology Holdings LLC | Interpolation filter selection using prediction unit (PU) size |
US9264725B2 (en) | 2011-06-24 | 2016-02-16 | Google Inc. | Selection of phase offsets for interpolation filters for motion compensation |
US9319711B2 (en) | 2011-07-01 | 2016-04-19 | Google Technology Holdings LLC | Joint sub-pixel interpolation filter for temporal prediction |
US10178388B2 (en) | 2013-07-17 | 2019-01-08 | Gurulogic Microsystems Oy | Encoder, decoder and method of operation using interpolation |
RU2683614C2 (en) * | 2013-07-17 | 2019-03-29 | Гурулоджик Микросистемс Ой | Encoder, decoder and method of operation using interpolation |
US11122262B2 (en) | 2014-06-27 | 2021-09-14 | Samsung Electronics Co., Ltd. | System and method for motion compensation in video coding |
WO2015199515A1 (en) * | 2014-06-27 | 2015-12-30 | Samsung Electronics Co., Ltd. | System and method for motion compensation in video coding |
US10009622B1 (en) | 2015-12-15 | 2018-06-26 | Google Llc | Video coding with degradation of residuals |
US10116957B2 (en) | 2016-09-15 | 2018-10-30 | Google Inc. | Dual filter type for motion compensated prediction in video coding |
US10341659B2 (en) * | 2016-10-05 | 2019-07-02 | Qualcomm Incorporated | Systems and methods of switching interpolation filters |
WO2018067848A1 (en) * | 2016-10-05 | 2018-04-12 | Qualcomm Incorporated | Systems and methods of switching interpolation filters |
CN109792524A (en) * | 2016-10-05 | 2019-05-21 | 高通股份有限公司 | Switch the system and method for interpolation filter |
KR102546383B1 (en) | 2016-10-05 | 2023-06-22 | 퀄컴 인코포레이티드 | Systems and methods for switching interpolation filters |
TWI775780B (en) * | 2016-10-05 | 2022-09-01 | 美商高通公司 | Systems and methods of switching interpolation filters |
KR20190059282A (en) * | 2016-10-05 | 2019-05-30 | 퀄컴 인코포레이티드 | Systems and methods for switching interpolation filters |
WO2019135419A1 (en) * | 2018-01-03 | 2019-07-11 | 엘지전자 주식회사 | Method and apparatus for inter prediction on basis of interpolation filter of current block in image coding system |
JP7109558B2 (en) | 2018-02-14 | 2022-07-29 | ホアウェイ・テクノロジーズ・カンパニー・リミテッド | adaptive interpolation filter |
JP2021513813A (en) * | 2018-02-14 | 2021-05-27 | ホアウェイ・テクノロジーズ・カンパニー・リミテッド | Adaptive interpolation filter |
TWI704799B (en) * | 2018-07-13 | 2020-09-11 | 大陸商北京字節跳動網絡技術有限公司 | Shape dependent interpolation order |
US11064206B2 (en) | 2018-11-05 | 2021-07-13 | Beijing Bytedance Network Technology Co., Ltd. | Inter prediction with refinement in video processing |
US11089310B2 (en) | 2018-11-05 | 2021-08-10 | Beijing Bytedance Network Technology Co., Ltd. | Interpolation for inter prediction with refinement |
WO2020094000A1 (en) * | 2018-11-05 | 2020-05-14 | Beijing Bytedance Network Technology Co., Ltd. | Interpolation for inter prediction with refinement |
US11706421B2 (en) | 2018-11-05 | 2023-07-18 | Beijing Bytedance Network Technology Co., Ltd. | Inter prediction with refinement in video processing |
US11902535B2 (en) | 2018-11-05 | 2024-02-13 | Beijing Bytedance Network Technology Co., Ltd | Prediction precision improvements in video coding |
CN113228637A (en) * | 2018-12-17 | 2021-08-06 | 北京字节跳动网络技术有限公司 | Shape dependent interpolation filter |
CN113841412A (en) * | 2019-03-12 | 2021-12-24 | 腾讯美国有限责任公司 | Signaling of CU-based interpolation filter selection |
WO2020182965A1 (en) * | 2019-03-12 | 2020-09-17 | Fraunhofer-Gesellschaft zur Förderung der angewandten Forschung e.V. | Encoders, decoders, methods, and video bit streams, and computer programs for hybrid video coding |
CN112543334A (en) * | 2019-09-22 | 2021-03-23 | 腾讯美国有限责任公司 | Video decoding method, video decoding device, computer equipment and storage medium |
Also Published As
Publication number | Publication date |
---|---|
US20120230413A1 (en) | 2012-09-13 |
US9313519B2 (en) | 2016-04-12 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9313519B2 (en) | Interpolation filter selection using prediction unit (PU) size | |
US9264725B2 (en) | Selection of phase offsets for interpolation filters for motion compensation | |
US9319711B2 (en) | Joint sub-pixel interpolation filter for temporal prediction | |
CN108028931B (en) | Method and apparatus for adaptive inter-frame prediction for video coding and decoding | |
US10531116B2 (en) | Adaptive motion vector resolution signaling for video coding | |
US20140078394A1 (en) | Selective use of chroma interpolation filters in luma interpolation process | |
US8897360B2 (en) | Method and apparatus for encoding and decoding images by adaptively using an interpolation filter | |
US9100649B2 (en) | Method and apparatus for processing a video signal | |
US9036706B2 (en) | Fractional pixel interpolation filter for video compression | |
US9185428B2 (en) | Motion vector scaling for non-uniform motion vector grid | |
KR102374687B1 (en) | Bit width control for bidirectional optical flow | |
Kamp et al. | Multihypothesis prediction using decoder side-motion vector derivation in inter-frame video coding | |
JP2017513326A (en) | Deblock filtering using pixel distance | |
US20100220788A1 (en) | Video coding method and video decoding method | |
US9049454B2 (en) | High efficiency low complexity interpolation filters | |
WO2022206735A1 (en) | Intra-prediction on non-dyadic blocks | |
WO2012125452A1 (en) | Interpolation filter selection using prediction unit (pu) size | |
WO2012125450A1 (en) | Interpolation filter selection using prediction index | |
WO2012100085A1 (en) | High efficiency low complexity interpolation filters | |
WO2022214055A1 (en) | Interaction of multiple partitions | |
US20240022721A1 (en) | Constraints on partitioning of video blocks | |
WO2014042838A1 (en) | Selective use of chroma interpolation filters in luma interpolation process | |
EP2774373B1 (en) | Motion vector scaling for non-uniform motion vector grid | |
WO2024010832A1 (en) | Methods and apparatus on chroma motion compensation using adaptive cross-component filtering | |
WO2024064422A1 (en) | Method and apparatus for implicitly indicating motion vector predictor precision |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GENERAL INSTRUMENT CORPORATION, PENNSYLVANIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:MINOO, KOOHYAR;BAYLON, DAVID M.;LOU, JIAN;AND OTHERS;SIGNING DATES FROM 20120320 TO 20120322;REEL/FRAME:028012/0290 |
|
AS | Assignment |
Owner name: GENERAL INSTRUMENT HOLDINGS, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT CORPORATION;REEL/FRAME:030764/0575Effective date: 20130415Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT HOLDINGS, INC.;REEL/FRAME:030866/0113Effective date: 20130528 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034280/0001Effective date: 20141028 |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
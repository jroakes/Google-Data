JP5902222B2 - Computer-implemented method, distributed storage system, and computer-readable recording medium - Google Patents
Computer-implemented method, distributed storage system, and computer-readable recording medium Download PDFInfo
- Publication number
- JP5902222B2 JP5902222B2 JP2014061617A JP2014061617A JP5902222B2 JP 5902222 B2 JP5902222 B2 JP 5902222B2 JP 2014061617 A JP2014061617 A JP 2014061617A JP 2014061617 A JP2014061617 A JP 2014061617A JP 5902222 B2 JP5902222 B2 JP 5902222B2
- Authority
- JP
- Japan
- Prior art keywords
- redundant
- global index
- devices
- replica
- storage cluster
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 238000000034 method Methods 0.000 title claims description 77
- 238000012545 processing Methods 0.000 claims description 34
- 238000012217 deletion Methods 0.000 claims description 29
- 230000037430 deletion Effects 0.000 claims description 29
- 230000004044 response Effects 0.000 claims description 5
- 230000003362 replicative effect Effects 0.000 claims description 3
- 230000008569 process Effects 0.000 description 55
- 230000010076 replication Effects 0.000 description 47
- 238000004891 communication Methods 0.000 description 6
- 238000010586 diagram Methods 0.000 description 5
- 230000007246 mechanism Effects 0.000 description 4
- 230000008859 change Effects 0.000 description 3
- 238000012986 modification Methods 0.000 description 2
- 230000004048 modification Effects 0.000 description 2
- 230000003068 static effect Effects 0.000 description 2
- 238000004458 analytical method Methods 0.000 description 1
- 238000003491 array Methods 0.000 description 1
- 230000006399 behavior Effects 0.000 description 1
- 239000004020 conductor Substances 0.000 description 1
- 230000001934 delay Effects 0.000 description 1
- 230000001419 dependent effect Effects 0.000 description 1
- 230000001066 destructive effect Effects 0.000 description 1
- 230000007717 exclusion Effects 0.000 description 1
- 230000006870 function Effects 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 230000002085 persistent effect Effects 0.000 description 1
- 230000001360 synchronised effect Effects 0.000 description 1
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
- H04L67/1095—Replication or mirroring of data, e.g. scheduling or transport for data synchronisation between network nodes
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/10—File systems; File servers
- G06F16/17—Details of further file system functions
- G06F16/174—Redundancy elimination performed by the file system
- G06F16/1748—De-duplication implemented within the file system, e.g. based on file segments
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/10—File systems; File servers
- G06F16/17—Details of further file system functions
- G06F16/178—Techniques for file synchronisation in file systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/10—File systems; File servers
- G06F16/18—File system types
- G06F16/182—Distributed file systems
- G06F16/184—Distributed file systems implemented as replicated file system
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/23—Updating
- G06F16/2365—Ensuring data consistency and integrity
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2455—Query execution
- G06F16/24553—Query execution of query operations
- G06F16/24554—Unary operations; Data partitioning operations
- G06F16/24556—Aggregation; Duplicate elimination
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/27—Replication, distribution or synchronisation of data between databases or within a distributed database system; Distributed database system architectures therefor
Description
背景
企業コンピューティングランドスケープは、中央サービスアーキテクチャが分散型ストレージクラスタへ移行したという点で、ストレージアーキテクチャにおいて抜本的な変化をもたらした。ビジネスは記憶効率を増加するための手法を模索しているので、汎用コンピュータから構築されるストレージクラスタは、新しいデータ量の多いアプリケーションのための高い性能、利用可能性、およびスケーラビリティを、モノリシックディスクアレイと比較して、わずかなコストで供給し得る。ストレージクラスタの全潜在能力を解き放つために、データは複数の地理的位置にわたって複製され、それによって、利用可能性を増大させるとともに、クライエントからのネットワーク距離を低減する。
Background Enterprise computing landscapes have brought about a radical change in storage architecture in that the central services architecture has moved to a distributed storage cluster. Because businesses are looking for ways to increase storage efficiency, storage clusters built from general-purpose computers offer high performance, availability, and scalability for new data-intensive applications, with monolithic disk arrays. Compared to, it can be supplied at a small cost. In order to unlock the full potential of the storage cluster, data is replicated across multiple geographic locations, thereby increasing availability and reducing network distance from the client.
データの重複排除は、重複オブジェクトを識別し、重複を除去することによって必要とされる記憶空間を低減し得る。結果として、データ重複排除は、ストレージ産業について非常に重要となりつつあり、多くの重複を含み得る大規模システムの必要性によって促進されつつある。 Data deduplication may reduce the storage space required by identifying duplicate objects and eliminating duplicates. As a result, data deduplication is becoming very important for the storage industry and is being driven by the need for large systems that can contain many duplicates.
要約
１つの実行例によれば、方法は、分散型データ複製システムにおける、装置群のうちの１つの装置によって実行され得る。方法は、分散型データ複製システムにおいて、オブジェクトのインデックスを記憶することを含み、オブジェクトの複製が分散型データ複製システムにおける複数の装置によって局部的に記憶される間に、そのインデックスが複製される。方法は、そのインデックスの少なくとも一部のスキャンを実行すること、および、インデックのスキャンに基づいて、オブジェクトの少なくとも１つの冗長な複製を識別することも含み得る。方法は、さらに、インデックスの一部に重複排除レコードを書き込むことによって、冗長な複製の重複排除を行なうことを含み得る。
Summary According to one implementation, the method may be performed by one of a group of devices in a distributed data replication system. The method includes storing an index of an object in a distributed data replication system, wherein the index is replicated while the replica of the object is stored locally by a plurality of devices in the distributed data replication system. The method may also include performing a scan of at least a portion of the index and identifying at least one redundant replica of the object based on the scan of the index. The method may further include performing redundant duplicate deduplication by writing a deduplication record to a portion of the index.
他の実行例によれば、分散型データ複製システムにおける装置群のうちの１つの装置は、分散型データ複製システムにおけるオブジェクトのインデックスを記憶するための手段と、インデックスの変化を書き込んでオブジェクトのうちの１つの複製の状態を指定するための手段と、そのインデックスへの変化を分散型データ複製システムにおける複数の装置に複製するための手段と、インデックスの少なくとも一部のスキャンを実行するための手段と、インデックスのスキャンに基づいてオブジェクトのうちの１つの冗長な複製を識別するための手段と、冗長な複製を重複排除するための手段とを含み得る。 According to another implementation, one of the devices in the distributed data replication system includes a means for storing an index of the object in the distributed data replication system, and a change in the index to write the change in the object. Means for specifying the status of one of the replicas, means for replicating changes to the index to a plurality of devices in a distributed data replication system, and means for performing a scan of at least a portion of the index And means for identifying a redundant replica of one of the objects based on a scan of the index and means for deduplicating the redundant replica.
さらに他の実行例によれば、システムは、指令、オブジェクトのデータストア、およびオブジェクトのインデックスを記憶するためのメモリと、プロセッサとを含み得る。プロセッサは、メモリ内の指令を実行して、データストア内のオブジェクトの状態を識別し、その状態は、オブジェクトが複製を有しているか否か、および削除リクエストがそのオブジェクトに関連しているか否かに関連し、プロセッサは、オブジェクトの状態に基づいて重複排除指示レコードをそのインデックスに書き込み、その重複排除指示レコードを伴うインデックスを１つまたはより多くの装置に複製し、その１つまたはより多くの装置から、そのオブジェクトに関連する他の重複排除指示レコードを受信し、重複排除指示レコードおよび他の重複排除指示レコードは、そのオブジェクトの１つまたはより多くの複製の
削除のための基準を提供する。
According to yet another implementation, the system may include a memory for storing instructions, an object data store, and an object index, and a processor. The processor executes instructions in memory to identify the state of the object in the data store, whether that state has a duplicate and whether a delete request is associated with that object The processor writes a deduplication indication record to the index based on the state of the object, replicates the index with the deduplication indication record to one or more devices, and the one or more Receive other deduplication indication records associated with the object from the device, and the deduplication indication record and other deduplication indication records provide a basis for deletion of one or more duplicates of the object To do.
さらに他の実行例によれば、１つまたより多くの装置によって実行される方法は、分散型データ複製システムにおける複数の装置内のオブジェクトのインデックスを記憶すること、およびそのオブジェクトを局部的に記憶する間に、分散型データ複製システムを通してそのインデックスを複製することを含み、各装置はそのインデックスの特定のサブセットにおけるオブジェクトの重複排除に関与し、方法は、そのインデックスのサブセットの各々のスキャンを実行してそのスキャンに基づいて冗長な複製を識別すること、その冗長を重複排除すること、および進行中の削除リクエストを有する複製を伴う装置からのオブジェクトを、以前に重複排除された複製を伴う装置に自動的にコピーすることをさらに含み得る。 According to yet another implementation, a method performed by one or more devices stores an index of an object in multiple devices in a distributed data replication system and stores the object locally. While replicating the index through a distributed data replication system, each device is responsible for deduplication of objects in a particular subset of the index, and the method performs a scan of each of the subset of the index Identifying a redundant replica based on the scan, deduplicating the redundancy, and an object from a device with a replica that has an ongoing delete request, a device with a previously deduplicated replica It may further include copying automatically.
さらなる実行例によれば、コンピュータ読取可能メモリは、コンピュータ実行可能指令を含み得る。コンピュータ読取可能メモリは、分散型データ複製システムにおけるオブジェクトのインデックスの一部のスキャンを実行するための１つまたはより多くの指令と、そのインデックスの一部のスキャンに基づいてオブジェクトのうちの１つの複製の冗長な複製を識別するための１つまたはより多くの指令と、その冗長な複製を重複排除するための１つまたはより多くの指令とを含み得る。 According to a further implementation, the computer readable memory may include computer executable instructions. The computer readable memory may include one or more instructions for performing a scan of a portion of the object's index in a distributed data replication system and one of the objects based on the scan of the portion of the index. One or more instructions for identifying a redundant replica of a replica and one or more instructions for deduplicating the redundant replica may be included.
図面の簡単な説明
添付の図面は、この明細書に含まれるとともにこの明細書の一部を成し、明細書に記載される１つまたはより多くの実施形態を例示し、その記述とともに、これらの実施形態を説明する。
BRIEF DESCRIPTION OF THE DRAWINGS The accompanying drawings are included in and constitute a part of this specification, illustrating one or more embodiments described in the specification, and together with the description, these The embodiment will be described.
詳細な説明
以下の詳細な説明は、添付の図面を参照する。異なる図面における同じ参照番号は、同じまたは類似の要素を特定し得る。また、以下の詳細な説明は、本発明を限定するものではない。
DETAILED DESCRIPTION The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements. Also, the following detailed description does not limit the invention.
本明細書に記載されるシステムおよび／または方法は、不変オブジェクト（immutable object）についての利用可能性、活性（liveness）および一貫性保証を提供する複製されたストレージクラスタのための、非同期分散型重複排除アルゴリズムを提供し得る。本明細書に記載される実行例は、分散型マルチマスタデータ複製システムの下部複製層を用いて、異なるストレージクラスタ間のコンテンツアドレス可能インデックス（本明細書においては、「グローバルインデックス」とも称する。）を複製し得る。グローバルインデックスの各オブジェクトは、固有のコンテンツ処理（たとえば、ハッシュ値またはデジタル署名）を有し得る。本明細書に記載される実行例においては、冗長な複製の除去プロセスが、少なくとも１つの活性中の複製を保持し得る。 The systems and / or methods described herein provide for asynchronous distributed duplication for replicated storage clusters that provide availability, liveness and consistency guarantees for immutable objects. An exclusion algorithm may be provided. The example implementation described herein uses a lower replication layer of a distributed multi-master data replication system to provide a content addressable index between different storage clusters (also referred to herein as a “global index”). Can be duplicated. Each object in the global index may have a unique content processing (eg, hash value or digital signature). In the implementation described herein, the redundant replica removal process may retain at least one active replica.
例示的なネットワーク構成
図１は、本明細書において説明されるシステムおよび方法が実行され得る例示的なシステム１００の図である。システム１００は、ネットワーク１３０を介して接続される、クライエント１１０−１〜１１０−Ｎ（総称してクライエント１１０、および個々にクライエント１１０とも称する。）およびストレージクラスタ１２０−１〜１２０−Ｍ（総称してストレージクラスタ１２０、および個々にストレージクラスタ１２０とも称する。）を含む。ストレージクラスタ１２０は、（図１の点線によって示されるような）ファイルシステム１４０を形成する。
Exemplary Network Configuration FIG. 1 is a diagram of an exemplary system 100 in which the systems and methods described herein may be implemented. The system 100 includes clients 110-1 to 110-N (collectively referred to as clients 110 and individually referred to as clients 110) and storage clusters 120-1 to 120-M connected via a network 130. (Collectively referred to as storage cluster 120 and individually referred to as storage cluster 120). The storage cluster 120 forms a file system 140 (as indicated by the dotted line in FIG. 1).
ネットワーク１３０は、ローカルエリアネットワーク（local area network：ＬＡＮ）、広域ネットワーク（wide area network：ＷＡＮ）、電話回線ネットワーク（たとえば、公衆交換電話網（Public Switched Telephone Network：ＰＳＴＮ））、イントラネット、インターネット、類似または非類似ネットワーク、あるいはネットワークの組み合わせのような、１つまたはより多くのネットワークを含み得る。クライエント１１０およびストレージクラスタ１２０は、有線または無線接続を介してネットワーク１３０と接続し得る。 The network 130 may be a local area network (LAN), a wide area network (WAN), a telephone line network (eg, Public Switched Telephone Network (PSTN)), an intranet, the Internet, and the like. Or it may include one or more networks, such as dissimilar networks, or combinations of networks. Client 110 and storage cluster 120 may be connected to network 130 via a wired or wireless connection.
クライエント１１０は、パーソナルコンピュータ、無線電話、携帯情報端末（personal digital assistant：ＰＤＡ）、ラップトップ、または他のタイプの通信装置、および／または、これらの装置のうちの１つにおいて実行されるスレッドまたはプロセスのような、１つまたはより多くのタイプの装置を含み得る。一実行例においては、クライエント１１０は、そのクライエント１１０に代わってファイルデータを読出しまたは修正する（たとえば、書き込む）ためにストレージクラスタ１２０と通信するアプリケーションを含み、あるいはアプリケーションにリンクされる。 The client 110 may be a personal computer, a wireless telephone, a personal digital assistant (PDA), a laptop, or other type of communication device, and / or a thread that executes on one of these devices. Or it may include one or more types of equipment, such as processes. In one implementation, the client 110 includes or is linked to an application that communicates with the storage cluster 120 to read or modify (eg, write) file data on behalf of the client 110.
ストレージクラスタ１２０は、本明細書で説明される態様で情報を記憶し、処理し、検索し、およびまたは提供し得る１つまたはより多くのサーバ装置、あるいは、他のタイプのコンピュータまたは通信装置を含み得る。一実行例においては、ストレージクラスタ１２０は、ファイルに対して、大規模でランダムな読出し／書込みアクセスデータストアを維持することが可能な、１つまたはより多くのサーバ（たとえば、コンピュータシステムおよび／またはアプリケーション）を含み得る。ストレージクラスタ１２０のデータストアは、変化が生じた場合に、インデキシングシステムが迅速にインデックスの一部を更新することを許可し得る。ストレージクラスタ１２０のデータストアは、１つまたはより多くのテーブル（たとえば、ユニフォームリソースロケータ（uniform resource locator：ＵＲＬ）ごとに１つの列を含む文書テーブル、ＵＲＬ以外の値によって検索される補助テーブルなど）を含み得る。一例においては、ストレージクラスタ１２０は、非常に大規模（たとえば、数千のサーバにわたるペタバイトのデータ）に設計され得る構造データ（たとえば、文書のランダムアクセスストレージクラスタ）を管理するための、分散型記憶システム（たとえば、チャン（Chang）らによって書かれた「ビッグテーブル：構造データ用の分散型記憶システム（Bigtable: A Distributed Storage System for Structured Data）」、第７回ＯＳＤＩ会報、２０５〜２１８ページ（２００６年１１月）における「ビッグテーブル（Bigtable）」）に含まれ得る。 Storage cluster 120 includes one or more server devices, or other types of computers or communication devices, that may store, process, retrieve, and / or provide information in the manner described herein. May be included. In one implementation, the storage cluster 120 can maintain one or more servers (eg, computer systems and / or) that can maintain a large, random read / write access data store for files. Application). The data store of the storage cluster 120 may allow the indexing system to quickly update a portion of the index when changes occur. The data store of the storage cluster 120 can be one or more tables (eg, a document table containing one column for each uniform resource locator (URL), an auxiliary table searched by a value other than a URL, etc.) Can be included. In one example, the storage cluster 120 is a distributed storage for managing structural data (eg, random access storage clusters of documents) that can be designed to be very large (eg, petabytes of data across thousands of servers). System (eg, “Bigtable: A Distributed Storage System for Structured Data” written by Chang et al., 7th OSDI Bulletin, pages 205-218 (2006) (November year) "Bigtable").
図１には示されていないが、システム１００は、１つまたはより多くの専用の民生サーバまたはハブのような、多数の他の要素を含み得る。民生サーバは、たとえば、クライエント１１０によるアクセスのために、１つまたはより多くのストレージクラスタ１２０からのデータストアの読出し専用コピーを記憶し得る。ハブは、たとえば、１つまたはより多くの民生サーバへ分配するために、１つまたはより多くのストレージクラスタ１２０からのデータストアの読出し専用コピーを記憶し得る。 Although not shown in FIG. 1, system 100 may include a number of other elements, such as one or more dedicated consumer servers or hubs. The consumer server may store a read-only copy of the data store from one or more storage clusters 120, for example, for access by the client 110. The hub may store a read-only copy of the data store from one or more storage clusters 120, for example, for distribution to one or more consumer servers.
例示的なストレージクラスタ構造
図２は、ファイルシステム１４０の例示的構成の図である。図２に示されるように、ファイルシステム１４０は、ストレージクラスタ１２０−１、１２０−２、１２０−３、および１２０−４を含み得る。一実行例においては、ファイルシステム１４０は、分散型マルチマスタデータ複製システムであり、ストレージクラスタ１２０−１、１２０−２、１２０−３、および１２０−４の各々は、他のストレージクラスタについてのマスタサーバとして動作し得る。ファイルシステム１４０においては、データは、（たとえば、複数の地理的場所において）ストレージクラスタ１２０−１、１２０−２、１２０−３、および１２０−４にわたって複製され、データ利用可能性を増加するとともにクライエント（たとえば、クライエント１１０）からのネットワーク距離を低減し得る。一般的に、分散型オブジェクトおよび参照は、異なるストレージクラスタ１２０において、動的に生成され、変化され、模造され、そして削除され得、下部データ複製層（図示せず）は、書込み順の忠実性を維持して、すべてのストレージクラスタ１２０が同じデータのバージョンに至ることを保証する。したがって、データ複製層は、単一のオブジェクトについての同じ複製についての書込み順を遵守する。
Exemplary Storage Cluster Structure FIG. 2 is a diagram of an exemplary configuration of file system 140. As shown in FIG. 2, the file system 140 may include storage clusters 120-1, 120-2, 120-3, and 120-4. In one implementation, the file system 140 is a distributed multi-master data replication system, and each of the storage clusters 120-1, 120-2, 120-3, and 120-4 is a master for other storage clusters. Can act as a server. In file system 140, data is replicated across storage clusters 120-1, 120-2, 120-3, and 120-4 (eg, in multiple geographic locations) to increase data availability and client. Network distance from the client (eg, client 110). In general, distributed objects and references can be dynamically created, changed, imitated, and deleted in different storage clusters 120, and the lower data replication layer (not shown) provides write order fidelity. To ensure that all storage clusters 120 reach the same data version. Thus, the data replication layer respects the writing order for the same replica for a single object.
分散型マルチマスタデータ複製システムにおけるすべてのオブジェクトのグローバルインデックスは、各ストレージクラスタ１２０に関連し得る。各記憶されたオブジェクトは、グローバルインデックスにおいて、（ハッシュ値、デジタル署名などのような）固有のコンテンツ処理によってリスト化され得る。選択されたストレージクラスタは、各々、グローバルインデックスにおけるコンテンツ処理の個別の領域に関与するように割り当てられ得る。たとえば、単一のストレージクラスタ１２０は、特定のコンテンツ処理に関連するオブジェクトの重複排除に関与し得る。１つのストレージクラスタによってなされたグローバルインデックスへの変更は、他のストレージクラスタに複製され得る。 A global index of all objects in a distributed multi-master data replication system can be associated with each storage cluster 120. Each stored object can be listed by unique content processing (such as hash values, digital signatures, etc.) in the global index. Each selected storage cluster may be assigned to participate in a separate area of content processing in the global index. For example, a single storage cluster 120 may be involved in deduplicating objects associated with a particular content process. Changes to the global index made by one storage cluster can be replicated to other storage clusters.
図２は、ファイルシステム１４０の例示的な機能要素を示すが、他の実行例においては、ファイルシステム１４０は、図２に記載されているよりも、より少ない要素、追加的な要素、異なる要素、または異なった配置の要素を含み得る。さらの他の実行例においては、ファイルシステム１４０の１つまたはより多くの要素は、ファイルシステム１４０の１つまたはより多くの要素によって実行されるものとして記述された１つまたはより多くのタスクを実行し得る。 2 illustrates exemplary functional elements of the file system 140, but in other implementations, the file system 140 may include fewer elements, additional elements, and different elements than those described in FIG. , Or differently arranged elements. In yet other implementations, one or more elements of the file system 140 may perform one or more tasks described as being performed by one or more elements of the file system 140. Can be executed.
図３は、ストレージクラスタ１２０の例示的な要素の図である。ストレージクラスタ１２０は、バス３１０と、プロセッサ３２０と、メインメモリ３３０と、読み取り専用メモリ（ＲＯＭ）３４０と、記憶装置３５０と、入力装置３６０と、出力装置３７０と、通信インターフェース３８０とを含み得る。バス３１０は、ストレージクラスタ１２０の要素間の通信を許可する、１つまたはより多くの導体を含み得る。 FIG. 3 is a diagram of exemplary elements of the storage cluster 120. The storage cluster 120 may include a bus 310, a processor 320, a main memory 330, a read only memory (ROM) 340, a storage device 350, an input device 360, an output device 370, and a communication interface 380. Bus 310 may include one or more conductors that allow communication between elements of storage cluster 120.
プロセッサ３２０は、指令を解釈して実行し得る、任意のプロセッサまたはマイクロプロセッサを含み得る。メインメモリ３３０は、プロセッサ３２０によって実行される情報および指令を記憶し得る、ランダムアクセスメモリ（ＲＡＭ）または他のタイプのダイナミック記憶装置を含み得る。ＲＯＭ３４０は、プロセッサ３２０による使用のための、静的情報および指令を記憶し得る、ＲＯＭ装置または他のタイプのスタティック記憶装置を含み得る。記憶装置３５０は、磁気およびまたは光記録媒体、ならびにそれに対応するドライブを含み得る。たとえば記憶装置３５０は、持続性記憶を提供する１つまたはより多くのローカルディスクを含み得る。一実行例においては、ストレージクラスタ１２０は、ファイルシステム１４０に記憶されたオブジェクトのためのメタデータを、メインメモリ３３０および／または記憶装置３５０のような１つまたはより多くのコンピュータ読取可能媒体内に維持し得る。たとえば、ストレージクラスタ１２０は、分散型マルチマスタデータ複製システムにおいて記憶されたすべてのオブジェクトのために、記憶装置３５０内にグローバルインデックスを記憶し得る。 The processor 320 may include any processor or microprocessor that can interpret and execute the instructions. Main memory 330 may include random access memory (RAM) or other types of dynamic storage that may store information and instructions executed by processor 320. ROM 340 may include a ROM device or other type of static storage device that may store static information and instructions for use by processor 320. Storage device 350 may include magnetic and / or optical recording media and corresponding drives. For example, storage device 350 may include one or more local disks that provide persistent storage. In one implementation, the storage cluster 120 stores metadata for objects stored in the file system 140 in one or more computer-readable media, such as the main memory 330 and / or the storage device 350. Can be maintained. For example, storage cluster 120 may store a global index in storage device 350 for all objects stored in a distributed multi-master data replication system.
入力装置３６０は、キーボード、キーパッド、ボタン、マウス、ペンなどのような、操作者がストレージクラスタ１２０に情報を入力することを許可する１つまたはより多くの機構を含み得る。出力装置３７０は、ディスプレイ、発光ダイオード（light emitting diode：ＬＥＤ）などを含む、操作者に情報を出力する１つまたはより多くの機構を含み得る。通信インターフェース３８０は、ストレージクラスタ１２０が、他の装置および／またはシステムと通信できるようにする、任意の送受信機のような機構を含み得る。たとえば、通信インターフェース３８０は、他のストレージクラスタ１２０および／またはクライエント１１０と通信するための機構を含み得る。 Input device 360 may include one or more mechanisms that allow an operator to enter information into storage cluster 120, such as a keyboard, keypad, buttons, mouse, pen, and the like. The output device 370 may include one or more mechanisms that output information to an operator, including a display, a light emitting diode (LED), and the like. The communication interface 380 may include any transceiver-like mechanism that allows the storage cluster 120 to communicate with other devices and / or systems. For example, the communication interface 380 may include a mechanism for communicating with other storage clusters 120 and / or clients 110.
図４は、ストレージクラスタ１２０の機能ブロック図を示す。図４に示されるように、ストレージクラスタ１２０は、データストア４１０および重複排除論理４２０を含み得る。一実行例においては、図４に示されるように、データストア４１０が、ストレージクラスタ１２０内に設けられる。他の実行例においては、データストア４１０のいくつかまたはすべては、ストレージクラスタ１２０との通信により、インデックスシステムに関連する外部メモリ装置（図示せず）のような、システム１００の１つまたはより多くの装置内に記憶され得る。 FIG. 4 shows a functional block diagram of the storage cluster 120. As shown in FIG. 4, the storage cluster 120 may include a data store 410 and deduplication logic 420. In one implementation, a data store 410 is provided in the storage cluster 120 as shown in FIG. In other implementations, some or all of the data stores 410 may communicate with the storage cluster 120 as one or more of the systems 100, such as an external memory device (not shown) associated with the index system. Can be stored in other devices.
データストア４１０は、複製インデックスストア４１２およびローカルオブジェクトストア４１４を含み得る。複製インデックスストア４１２は、分散化マルチマスタデータ複製システムの複製層の一部として含まれ得る。複製インデックスストア４１２は、グローバルインデックスに関連する情報を記憶し得る。複製インデックスストア４１２の少なくとも一部は、複数のストレージクラスタ１２０において複製され得る。各複製インデックスストア４１２についての複製の数は、ユーザ設定可能であり得る。ローカルオブジェクトストア４１４は、ストレージクラスタ１２０において局部的にオブジェクトを記憶し得る。ローカルオブジェクトストア４１４は、クライエント（たとえば、クライエント１１０）によってアップロードされた画像またはビデオのような、ファイルを含み得る。 Data store 410 may include a replication index store 412 and a local object store 414. The replication index store 412 can be included as part of the replication layer of a distributed multi-master data replication system. Replica index store 412 may store information related to the global index. At least a portion of the replication index store 412 may be replicated in multiple storage clusters 120. The number of replicas for each replica index store 412 may be user configurable. The local object store 414 may store objects locally in the storage cluster 120. Local object store 414 may include files, such as images or videos uploaded by a client (eg, client 110).
複製削除論理４２０は、分散化マルチマスタデータ複製システム内のストレージクラスタ（たとえば、ストレージクラスタ１２０−１、１２０−２、１２０−３、および１２０−４）から冗長な複製を除去するための論理を含み得る。各参加ストレージクラスタについての複製削除論理４２０は、グローバルインデックスの特定のセクションに関与するように割り当てられ得る。たとえば、複製削除論理４２０は、グローバルインデックスについてのコンテンツ処理の特定の範囲に割り当てられ得る。したがって、分散化マルチマスタデータ複製システム内の１つのストレージクラスタだけが、システム内の複製オブジェクトについての破壊的操作（destructive operation）（たとえば、複製の削除）を実行することができる。 Replication deletion logic 420 includes logic for removing redundant replicas from storage clusters (eg, storage clusters 120-1, 120-2, 120-3, and 120-4) in a distributed multi-master data replication system. May be included. The delete replication logic 420 for each participating storage cluster may be assigned to participate in a particular section of the global index. For example, the duplicate deletion logic 420 may be assigned to a specific range of content processing for the global index. Thus, only one storage cluster in a distributed multi-master data replication system can perform a destructive operation (e.g., deletion of replication) on a replication object in the system.
重複排除を容易にするために、レコードが重複排除論理４２０によって生成され、特定のコンテンツ処理に関連するグローバルインデックスの一部に追加され得る。レコードは、たとえば、活性中の複製を示すための「データ（Data）」指示子、実行中の削除リクエストを示す「削除リクエスト（DeleteRequest）」指示子、および重複排除のために選択された複製を示す「重複排除（Deduped）」指示子を含み得る。レコードフォーマットおよびその使用は、以下でより詳細に説明される。 To facilitate deduplication, records can be generated by deduplication logic 420 and added to a portion of the global index associated with a particular content process. The record contains, for example, a “Data” indicator to indicate an active copy, a “DeleteRequest” indicator to indicate an ongoing delete request, and a copy selected for deduplication. It may include a “Deduped” indicator to indicate. The record format and its use are described in more detail below.
図４は、ストレージクラスタ１２０の例示的な機能要素を示すが、他の実行例においては、ストレージクラスタ１２０は、図４に示されたものよりも、より少ない機能要素、追加の機能要素、異なる機能要素、または、異なる配列の機能要素を含み得る。さらに他の実行例においては、ストレージクラスタ１２０の１つまたはより多くの機能要素は、１つまたはより多くの他の機能要素によって実行されるものとして記述される１つまたはより多くの他のタスクを実行し得る。 4 illustrates exemplary functional elements of storage cluster 120, but in other implementations, storage cluster 120 has fewer functional elements, additional functional elements, and different than those illustrated in FIG. Functional elements or different sequences of functional elements may be included. In yet other implementations, one or more functional elements of the storage cluster 120 are described as one or more other tasks described as being performed by one or more other functional elements. Can be performed.
例示的なレコード構造
図５は、例示的な実行例においてグローバルインデックスに書き込まれ得る、重複排除指示子レコードについての例示的なレコード構造５００の図を提供する。重複排除指示子レコードは、オブジェクト複製の特定のコンテンツ処理を有するグローバルインデックスに関連し得る。図５に示されるように、レコード構造５００は、ストレージクラスタ識別子（ＩＤ）セクション５１０と、記憶位置セクション５２０と、指示セクション５３０とを含み得る。ストレージクラスタ識別セクション５１０は、レコードが書き込まれるオブジェクト複製を記憶しているストレージクラスタ１２０についての固有の識別（たとえば、「クラスタＩＤ」）を含み得る。位置セクション５２０は、ストレージクラスタ識別セクション５１０によって識別されたストレージクラスタ１２０における複製の位置についてのアドレスを含み得る。指示セクション５３０は、たとえば、「データ」指示子、「削除リクエスト」指示子、または「重複排除」指示子を含み得る。
Exemplary Record Structure FIG. 5 provides an illustration of an exemplary record structure 500 for a deduplication indicator record that can be written to a global index in an exemplary implementation. The deduplication indicator record may be associated with a global index that has specific content processing for object duplication. As shown in FIG. 5, the record structure 500 may include a storage cluster identifier (ID) section 510, a storage location section 520, and an indication section 530. The storage cluster identification section 510 may include a unique identification (eg, “cluster ID”) for the storage cluster 120 that stores the object copy to which the record is written. Location section 520 may include an address for the location of the replica in storage cluster 120 identified by storage cluster identification section 510. The indication section 530 may include, for example, a “data” indicator, a “delete request” indicator, or a “deduplication” indicator.
レコード構造５００は、「クラスタＩＤ：位置：指示」の形式でリスト化され得る。たとえば、複製のためのレコードは、ストレージクラスタ１２０−１によって、レコード「01：234523/2000：削除リクエスト」でグローバルインデックスに追加され得、ここで、「01」はストレージクラスタ１２０−１のクラスタＩＤであり、「234523/2000」はストレージクラスタ１２０−１内の複製が記憶される位置であり、「削除リクエスト」は指示子である。ストレージクラスタ１２０−２における同じオブジェクトの他の複製のレコードは、「02：234544/1000：データ」であり得、ここで、「02」はストレージクラスタ１２０−２のクラスタＩＤであり、「234544/1000」はストレージクラスタ１２０−２における位置であり、「データ」は指示子である。 The record structure 500 can be listed in the format of “cluster ID: location: instruction”. For example, a record for replication may be added to the global index by the storage cluster 120-1 with the record “01: 234523/2000: delete request”, where “01” is the cluster ID of the storage cluster 120-1. “234523/2000” is a position where a copy in the storage cluster 120-1 is stored, and “deletion request” is an indicator. The record of other duplicates of the same object in the storage cluster 120-2 may be “02: 234544/1000: data”, where “02” is the cluster ID of the storage cluster 120-2 and “234544 / “1000” is a position in the storage cluster 120-2, and “data” is an indicator.
例示的なプロセスフロー
図６Ａおよび図６Ｂは、クライエント起動アップロード／削除動作を管理するための例示的なプロセスのフローチャートである。図６Ａは、クライエントからオブジェクトをアップロードする例示的なプロセス６００についてのフローチャートを示す。図６Ｂは、クライエントによって削除されるオブジェクトを除去する例示的なプロセス６５０についてのフローチャートを示す。一実行例においては、プロセス６００および６５０は、ストレージクラスタ１２０の１つによって実行され得る。プロセス６００および６５０は、クライエント（たとえば、クライエント１１０）の動作に応答して実行され得る。以下に説明されるプロセス６００および６５０の特有の例については、参照は、ファイルシステム１４０のストレージクラスタ１２０−１に対してなされ、ストレージクラスタ１２０は、クラスタＩＤ「01」を含む。
Exemplary Process Flow FIGS. 6A and 6B are flowcharts of an exemplary process for managing client-initiated upload / delete operations. FIG. 6A shows a flowchart for an exemplary process 600 for uploading objects from a client. FIG. 6B shows a flowchart for an exemplary process 650 for removing objects that are deleted by a client. In one implementation, processes 600 and 650 may be performed by one of storage clusters 120. Processes 600 and 650 may be performed in response to the operation of a client (eg, client 110). For the specific example of processes 600 and 650 described below, reference is made to storage cluster 120-1 of file system 140, which includes cluster ID “01”.
図６Ａを参照して、プロセス６００は、アップロードファイルが、クライエントから受信されたると開始し得る（ブロック６１０）。たとえば、ストレージクラスタ１２０−１は、クライエント１１０のうちの１つから新しいファイルを受信し得る。アップロードファイルは記憶され（ブロック６２０）、アップロードファイルについての「データ」指示子がグローバルインデックスに書き込まれ得る（ブロック６３０）。たとえば、ストレージクラスタ１２０−１は、メモリ（たとえば、記憶装置３５０）にアップロードファイルを記憶し、オブジェクトについてのコンテンツ処理をグローバルインデックスに追加し得る。ストレージクラスタ１２０−１は、また、データレコード（たとえば、「01：位置：データ」）を、オブジェクトのコンテンツ処理によってアドレス指定された、複製されたグローバルインデックスに書き込み得る。 Referring to FIG. 6A, process 600 may begin when an upload file is received from a client (block 610). For example, storage cluster 120-1 may receive a new file from one of clients 110. The upload file is stored (block 620) and a “data” indicator for the upload file may be written to the global index (block 630). For example, storage cluster 120-1 may store the uploaded file in memory (eg, storage device 350) and add content processing for the object to the global index. Storage cluster 120-1 may also write a data record (eg, “01: location: data”) to the replicated global index addressed by the object's content processing.
図６Ｂを参照して、プロセス６５０は、削除ファイルの通知が受信されると開始し得る（ブロック６６０）。たとえば、ストレージクラスタ１２０−１は、クライエント１１０のうちの１つがファイルを削除した指示を受信し得る。削除リクエストが起動され（ブロック６７０）、削除ファイルについての「削除リクエスト」指示子がグローバルインデックスに書き込まれ得る（ブロック６８０）。たとえば、ストレージクラスタ１２０−１は、削除リクエストを起動して、ファイルシステム１４０から削除ファイルを非同期に除去する。ストレージ装置１２０−１は、また、オブジェクトのコンテンツ処理によってアドレス指定された、複製グローバルインデックスに、「削除リクエスト」レコード（たとえば、「01：位置：削除リクエスト」）を書き込み得る。 With reference to FIG. 6B, process 650 may begin when a notification of a deleted file is received (block 660). For example, storage cluster 120-1 may receive an indication that one of clients 110 has deleted a file. A delete request is invoked (block 670), and a “delete request” indicator for the deleted file may be written to the global index (block 680). For example, the storage cluster 120-1 activates a delete request and removes the delete file from the file system 140 asynchronously. The storage device 120-1 may also write a “delete request” record (eg, “01: location: delete request”) to the duplicate global index addressed by object content processing.
図７は、分散型マルチマスタデータ複製システム（たとえば、ファイルシステム１４０）における重複排除を実行するための例示的なプロセス７００のフローチャートである。一実行例においては、プロセス７００は、ストレージクラスタ１２０のうちの１つによって実行され得る。他の実行例においては、プロセス７００のいくつかまたはすべてが、ストレージクラスタ１２０を含むまたは含まない、他の装置または装置群によって実行され得る。プロセス７００は、各ストレージクラスタ１２０において周期的に実行され、ストレージクラスタ１２０内のオブジェクトのすべてまたは一部のスキャンを含み得る。以下に説明されるプロセス７００の特定の例について、参照はファイルシステム１４０のストレージクラスタ１２０−１および１２０−２に対してなされ、ここでストレージクラスタ１２０−１は「01」のクラスタＩＤを含み、ストレージクラスタ１２０−２は「02」のクラスタＩＤを含む。 FIG. 7 is a flowchart of an exemplary process 700 for performing deduplication in a distributed multi-master data replication system (eg, file system 140). In one implementation, process 700 may be performed by one of storage clusters 120. In other implementations, some or all of the process 700 may be performed by other devices or groups of devices that include or do not include the storage cluster 120. Process 700 is performed periodically in each storage cluster 120 and may include scanning all or a portion of the objects in storage cluster 120. For the specific example of process 700 described below, reference is made to storage clusters 120-1 and 120-2 of file system 140, where storage cluster 120-1 includes a cluster ID of “01”; The storage cluster 120-2 includes a cluster ID “02”.
図７に示されるように、プロセス７００は、グローバルインデックスのスキャンの実行で始まり得る（ブロック７１０）。たとえば、（たとえば、重複排除論理４２０を用いた）ストレージクラスタ１２０−２は、グローバルインデックスに列挙されたすべてまたは一部のオブジェクトのスキャンを実行し得る。スキャンは、たとえば、削除のマークが付けられた複数の複製および／またはオブジェクトを識別し得る。 As shown in FIG. 7, process 700 may begin with performing a global index scan (block 710). For example, storage cluster 120-2 (eg, using deduplication logic 420) may perform a scan of all or some objects listed in the global index. A scan may, for example, identify multiple copies and / or objects that are marked for deletion.
削除リクエストに遭遇したか否かが判定され得る（ブロック７２０）。たとえば、ストレージクラスタ１２０−１は、グローバルインデックスにおいて、他のストレージクラスタから（たとえば、ストレージクラスタ１２０−２から）の削除リクエスト指示子（たとえば、「02：位置：削除リクエスト」）を含むオブジェクトに遭遇し得る。削除リクエストに遭遇したと判定された場合（ブロック７２０−ＹＥＳ）は、削除リクエストが処理され得る（ブロック７３０）。たとえば、ストレージクラスタ１２０−１は、図８を参照してより詳細に説明されるように、削除リクエストを処理し得る。 It may be determined whether a delete request has been encountered (block 720). For example, storage cluster 120-1 encounters an object in the global index that contains a delete request indicator (eg, “02: location: delete request”) from another storage cluster (eg, from storage cluster 120-2). Can do. If it is determined that a delete request has been encountered (block 720—YES), the delete request may be processed (block 730). For example, storage cluster 120-1 may process a delete request, as described in more detail with reference to FIG.
削除リクエストに遭遇しなかったと判定された場合（ブロック７２０−ＮＯ）は、冗長な複製が存在するか否かが判定され得る（ブロック７４０）。冗長な複製は、オブジェクトについての実行中の削除リクエストを有していない、異なる位置における複製されたオブジェクトであり得る。たとえば、ストレージクラスタ１２０−１は、ストレージクラスタ１２０−１が関与するコンテンツ処理に対応する、同じオブジェクトについての複数の複製を識別し得る。複数の複製は、たとえば、異なるストレージクラスタ（たとえば、ストレージクラスタ１２０−１およびストレージクラスタ１２０−２）または同じストレージクラスタ内の異なる位置に記憶され得る。 If it is determined that a delete request has not been encountered (block 720-NO), it can be determined whether there are redundant replicas (block 740). A redundant replica can be a replicated object at a different location that does not have an ongoing delete request for the object. For example, storage cluster 120-1 may identify multiple replicas for the same object that correspond to content processing involving storage cluster 120-1. Multiple replicas may be stored, for example, in different storage clusters (eg, storage cluster 120-1 and storage cluster 120-2) or in different locations within the same storage cluster.
冗長な複製が存在すると判定された場合（ブロック７４０−ＹＥＳ）は、冗長な複製は除去され得る（ブロック７５０）。たとえば、ストレージクラスタ１２０−１は、図９を参照してより詳細に説明されるように、冗長な複製を除去し得る。冗長な複製が存在しないと判定された場合（ブロック７４０−ＮＯ）は、プロセスはブロック７１０に戻り、グローバルインデックスの他のスキャンが実行され得る（ブロック７１０）。 If it is determined that a redundant replica exists (block 740—YES), the redundant replica may be removed (block 750). For example, storage cluster 120-1 may remove redundant replicas, as described in more detail with reference to FIG. If it is determined that there are no redundant replicas (block 740—NO), the process returns to block 710 and another scan of the global index may be performed (block 710).
図８は、図６のブロック６６０の削除リクエストの処理に関連した例示的な動作を示す。削除リクエストは、オブジェクトについて見つけられ得る（ブロック８１０）。たとえば、ストレージクラスタ１２０−１によって実行されるスキャンは、グローバルインデックス内において、特定のストレージクラスタにおける複製を削除するための、ストレージクラスタ１２０−１によって事前に書き込まれた削除リクエスト指示子（たとえば、「02：位置：削除リクエスト」）を有するコンテンツ処理を識別し得る。ストレージクラスタ１２０−１がそのコンテンツ処理に関与すると想定すると、ストレージクラスタ１２０−１は、動作を適用して、その複製がまさに重複排除され得るか否かを判定する。 FIG. 8 illustrates exemplary operations associated with processing the delete request of block 660 of FIG. A delete request may be found for the object (block 810). For example, a scan performed by storage cluster 120-1 may include a delete request indicator (eg, “ 02: Location: Delete request ") can be identified. Assuming that storage cluster 120-1 is involved in its content processing, storage cluster 120-1 applies an operation to determine whether the replica can be exactly deduplicated.
重複排除指示子が存在するか否かが判定され得る（ブロック８２０）。たとえば、ストレージクラスタ１２０−１は、グローバルインデックスにおいてそのコンテンツ処理に関連する他のレコードを調べ、重複排除指示子（たとえば、「02：位置：重複排除」）が存在するか否かを判定する。重複排除指示子が存在すると判定された場合（ブロック８２０−ＹＥＳ）は、グローバルインデックスにおける複製および関連するレコードが、重複排除され得る（ブロック８３０）。たとえば、ストレージクラスタ１２０−１は、削除リクエストを起動して、（もし、あれば）ストレージクラスタ１２０−２における複製を削除し、その削除された複製についてのコンテンツ処理に関連するすべてのレコード（たとえば、「02：位置：＊」、ここで「＊」は任意の指示子）をグローバルインデックスから削除する。 It may be determined whether a deduplication indicator is present (block 820). For example, the storage cluster 120-1 examines other records related to the content processing in the global index, and determines whether or not a deduplication indicator (for example, “02: position: deduplication”) exists. If it is determined that a deduplication indicator is present (block 820-YES), the duplicates and associated records in the global index may be deduplicated (block 830). For example, storage cluster 120-1 initiates a delete request, deletes the replica in storage cluster 120-2 (if any), and all records related to content processing for the deleted replica (eg, , “02: position: *”, where “*” is an arbitrary indicator) is deleted from the global index.
重複排除指示子が存在しないと判定された場合（ブロック８２０−ＮＯ）は、他の活性中の複製が存在するか否かが判定され得る（ブロック８４０）。たとえば、ストレージクラスタ１２０−２は、グローバルインデックスについてのコンテンツ処理を調べて、そのオブジェクトについての他の活性中の複製が存在するか否かを判定する。グローバルインデックスは、たとえば、他のストレージクラスタからのコンテンツ処理についてのデータレコード（たとえば、「03：位置：データ」）を含み得る。 If it is determined that there is no deduplication indicator (block 820-NO), it may be determined whether there are other active replicas (block 840). For example, storage cluster 120-2 examines content processing for the global index and determines whether there are other active replicas for the object. The global index may include, for example, data records for content processing from other storage clusters (eg, “03: location: data”).
他の活性中の複製が存在する場合（ブロック８４０−ＹＥＳ）は、ブロック８３０を参照して上記で説明されたように、その複製は重複排除され得る。他の活性中の複製が存在しない場合（ブロック８４０−ＮＯ）は、すべての複製が削除リクエストを有しているか否かが判定され得る（ブロック８５０）。たとえば、ストレージクラスタ１２０−１は、グローバルインデックスについてのコンテンツ処理を調べ、そのコンテンツ処理に関連するすべての複製が実行中の削除リクエストを有しているか否かを判定し得る（たとえば、「＊：＊：削除リクエスト」、ここで、「＊」は、それぞれ任意のクラスタＩＤおよび任意の位置であり得る）。 If there are other active replicas (block 840-YES), the replicas can be deduplicated as described above with reference to block 830. If there are no other active replicas (block 840-NO), it may be determined whether all replicas have a delete request (block 850). For example, storage cluster 120-1 may examine content processing for a global index and determine whether all replicas associated with that content processing have an ongoing delete request (eg, “*: *: Delete request ”, where“ * ”can be any cluster ID and any location, respectively).
すべての複製が削除リクエストを有していると判定された場合（ブロック８５０−ＹＥＳ）は、複製は、ブロック８３０を参照して上記で説明されたように、重複排除され得る。すべての複製が削除リクエストを有してはいないと判定された場合（ブロック８５０−ＮＯ）は、オブジェクトは、削除リクエストを起動したストレージクラスタから異なるストレージクラスタへコピーされ、グローバルインデックスが更新され得る（ブロック８６０）。たとえば、レコード「02：位置：削除リクエスト」に応答して、ストレージクラスタ１２０−１は、ストレージクラスタ１２０−２から、重複排除レコード（たとえば、「03：位置：重複排除」）がありかつ実行中の削除リクエストがない他のストレージクラスタ１２０−３へオブジェクトをコピーし得る。ストレージクラスタ１２０−１は、その複製に関連する以前の重複排除レコード（たとえば、「03：位置：重複排除」）を削除し、グローバルインデックスにおいてそのオブジェクトの対応するコンテンツ処理に、データ指示子（たとえば、「03：位置：データ」）を書き込む。 If it is determined that all replicas have a delete request (block 850-YES), the replicas may be deduplicated as described above with reference to block 830. If it is determined that all replicas do not have a delete request (block 850-NO), the object can be copied from the storage cluster that initiated the delete request to a different storage cluster and the global index can be updated ( Block 860). For example, in response to record “02: location: deletion request”, storage cluster 120-1 has a deduplication record (eg, “03: location: deduplication”) from storage cluster 120-2 and is executing. The object can be copied to another storage cluster 120-3 that has no deletion request. Storage cluster 120-1 deletes the previous deduplication record (eg, “03: location: deduplication”) associated with the replica, and the data index (eg, , “03: Position: Data”).
図９は、図７のブロック７５０の、重複参照（duplicate reference）の除去に関連する例示的な動作を示す。削除リクエストを有しない複数の複製が、識別され得る（ブロック９１０）。たとえば、ストレージクラスタ１２０−１は、グローバルインデックスを調べて、ストレージクラスタ１２０−０１が関与するコンテンツ処理に対応する実行中の削除リクエストを有しない、２つまたはより多くの複製を識別する。 FIG. 9 illustrates exemplary operations associated with removing duplicate references in block 750 of FIG. Multiple replicas that do not have a delete request may be identified (block 910). For example, storage cluster 120-1 examines the global index and identifies two or more replicas that do not have a running delete request corresponding to the content processing that involves storage cluster 120-01.
重複排除されるべき複製を決定する基準が、適用され得る（ブロック９２０）。たとえば、ストレージクラスタ１２０−１は、ストレージクラスタ１２０−１内に記憶され得る冗長な複製の重複排除を行なうための基準を適用し得る。冗長な複製を重複排除する基準は、複製の地理的近接性、ストレージクラスタにおける利用可能な記憶容量、または他の要因のような、様々な要因に基づき得る。（たとえば、重複排除論理４２０を用いる）ストレージクラスタ１２０−１は、上記識別された、実行中の削除リクエストを有しない２つまたはより多くの複製に、その基準を適用し得る。いくつかの実行例においては、複数の複製が、重複排除されるべきであると識別され得る。他の実行例においては、ストレージクラスタ１２０−１は、（たとえば、重複排除のマークが付けられていない）１つより多くの活性中の複製を残し得る。 Criteria that determine the replicas to be deduplicated may be applied (block 920). For example, storage cluster 120-1 may apply criteria for deduplicating redundant replicas that may be stored in storage cluster 120-1. The criteria for deduplicating redundant replicas may be based on various factors such as the geographical proximity of the replicas, the available storage capacity in the storage cluster, or other factors. Storage cluster 120-1 (eg, using deduplication logic 420) may apply the criteria to the identified two or more replicas that do not have an ongoing delete request. In some implementations, multiple replicas may be identified that should be deduplicated. In other implementations, storage cluster 120-1 may leave more than one active replica (eg, not marked for deduplication).
グローバルインデックスは、更新されて、重複排除された複製を「重複排除」と指定し得る（ブロック９３０）。たとえば、重複排除された各複製について、ストレージクラスタ１２０−１は、その複製に関連する以前のデータレコード（たとえば、「02：位置：データ」）を削除し、グローバルインデックスの対応するコンテンツ処理に、重複排除指示子（たとえば、「02：位置：重複排除」）を書き込み得る。 The global index may be updated to designate the deduplicated replica as “deduplicated” (block 930). For example, for each deduplicated replica, storage cluster 120-1 deletes the previous data record associated with that replica (eg, “02: location: data”) and performs the corresponding content processing of the global index, A deduplication indicator (eg, “02: position: deduplication”) may be written.
冗長な複製の重複排除は、グローバルインデックスの一部として複製された重複排除メッセージを用いて達成され得る。重複排除のマークが付けられた複製は、ストレージクラスタ１２０−１または他のストレージクラスタ（たとえば、ストレージクラスタ１２０−２，１２０−３，１２０−４など）に記憶され得る。一実行例においては、ストレージクラスタ１２０−１は、局部的に記憶された複製および対応する「01：位置：データ」のレコードをグローバルインデックスから削除し、「01：位置：重複排除」をグローバルインデックスに追加し得る。ストレージクラスタ１２０−１は、また、複製されたグローバルインデックスを用いて、削除メッセージを起動し、他のクラスタに記憶された複製を削除する。 Redundant duplicate deduplication can be accomplished using duplicate duplicate messages as part of the global index. Replicas marked for deduplication may be stored in storage cluster 120-1 or other storage clusters (eg, storage clusters 120-2, 120-3, 120-4, etc.). In one implementation, the storage cluster 120-1 deletes the locally stored replica and the corresponding “01: location: data” record from the global index and “01: location: deduplication” as the global index. Can be added to. The storage cluster 120-1 also activates a delete message using the replicated global index, and deletes the replica stored in the other cluster.
図１０は、分散化マルチマスタデータ複製システム（たとえば、ファイルシステム１４０）における、バンド幅消費の最適化および時間遅れの低減のための例示的なプロセス１０００のフローチャートを与える。一実行例においては、プロセス１０００は、ストレージクラスタ１２０のうちの１つによって実行され得る。他の実行例においては、プロセス１０００のいくつかまたはすべてが、ストレージクラスタ１２０を含むまたは含まない、他の装置または装置群によって実行され得る。以下に説明されるプロセス１０００の特定の例について、参照はファイルシステム１４０のストレージクラスタ１２０−１でなされ、ここでストレージクラスタ１２０−１は「01」のクラスタＩＤを含む。 FIG. 10 provides a flowchart of an exemplary process 1000 for optimizing bandwidth consumption and reducing time lag in a distributed multi-master data replication system (eg, file system 140). In one implementation, process 1000 may be performed by one of storage clusters 120. In other implementations, some or all of the process 1000 may be performed by other devices or groups of devices that include or do not include the storage cluster 120. For the specific example of process 1000 described below, reference is made to storage cluster 120-1 of file system 140, where storage cluster 120-1 includes a cluster ID of “01”.
図１０に示されるように、プロセス１０００は、オブジェクトについてのリクエストの受信で開始され得る（ブロック１０１０）。たとえば、ストレージクラスタ１２０−１は、クライエント（たとえば、クライエント１１０）から、オブジェクトを取得するリクエストを受信し得る。 As shown in FIG. 10, process 1000 may begin with receipt of a request for an object (block 1010). For example, storage cluster 120-1 may receive a request to obtain an object from a client (eg, client 110).
オブジェクト位置は、グローバルインデックスにおいて検索され得る（ブロック１０２０）。たとえば、ストレージクラスタ１２０−１は、オブジェクトのコンテンツ処理を用いて、複製されたグローバルインデックス内のオブジェクトについての複製位置を検索し得る。 The object location may be searched in the global index (block 1020). For example, storage cluster 120-1 may use object content processing to find the replication location for an object in the replicated global index.
「最良の」複製位置が識別され得る（ブロック１０３０）。たとえば、１つより多くの複製が利用可能であると想定すると、ストレージクラスタ１２０−１は、ネットワークリソースを最小化するように読み出すための「最良の」複製を決定し得る。たとえば、「最良の」複製は、ストレージクラスタ１２０−１に最も近い地理的位置を有する複製であり得る。他の実行例においては、「最良の」複製は、利用可能なネットワーク接続性、地理的位置、および／または他の基準の組み合わせに基づき得る。したがって、いくつかの実行例においては、オブジェクトについての「最良の」複製は、ストレージクラスタ１２０−１内に局部的に記憶され得る。 The “best” replication location may be identified (block 1030). For example, assuming that more than one replica is available, the storage cluster 120-1 may determine the “best” replica to read to minimize network resources. For example, the “best” replica may be the replica that has the geographic location closest to the storage cluster 120-1. In other implementations, the “best” replica may be based on a combination of available network connectivity, geographic location, and / or other criteria. Thus, in some implementations, the “best” replica for the object may be stored locally in the storage cluster 120-1.
オブジェクトは、識別された位置から読み出され得る（ブロック１０４０）。たとえば、ストレージクラスタ１２０−１は、最も近い利用可能なストレージクラスタから「最良の」複製を要求し、クライアントの要求を満たす複製を受信し得る。そして、ストレージクラスタ１２０−１は、クライエントにその複製を送信し得る。 The object may be read from the identified location (block 1040). For example, storage cluster 120-1 may request the “best” replica from the closest available storage cluster and receive a replica that satisfies the client's request. The storage cluster 120-1 can then send the copy to the client.
事例
図１１は、本明細書で説明される実行例に従う、例示的なグローバルインデックス部１１００を与える。インデックスは、他の情報の中で、コンテンツ処理列１１１０および重複排除指示子レコード列１１２０を含み得る。例示的なインデックス部１１００において、分散型マルチマスタデータ複製システムが、３つのストレージクラスタＸＸ、ＹＹ、およびＺＺを含むものと仮定する。重複排除アルゴリズムは、ストレージクラスタＸＸ、ＹＹ、およびＺＺの各々において周期的に実行され、グローバルインデックスのすべてまたは一部をスキャンし得る。また、レコード（たとえば、データ、削除リクエスト、および重複排除）は、ストレージクラスタＸＸ、ＹＹ、およびＺＺのうちの１つによって、特定のオブジェクトコンテンツ処理に関連するグローバルインデックスに書き込まれ得る。グローバルインデックスへの修正は、他のすべての参加クラスタ（たとえば、残余のストレージクラスタＸＸ、ＹＹ、およびＺＺ）へ複製され得る。
Example FIG. 11 provides an exemplary global index portion 1100 in accordance with the example implementation described herein. The index may include a content processing column 1110 and a deduplication indicator record column 1120, among other information. In the exemplary index unit 1100, assume that a distributed multi-master data replication system includes three storage clusters XX, YY, and ZZ. The deduplication algorithm is executed periodically in each of the storage clusters XX, YY, and ZZ, and may scan all or part of the global index. Also, records (eg, data, delete requests, and deduplication) may be written to a global index associated with specific object content processing by one of storage clusters XX, YY, and ZZ. Modifications to the global index can be replicated to all other participating clusters (eg, remaining storage clusters XX, YY, and ZZ).
図１１に示されるように、インデックス部１１００は、コンテンツ処理と、４つのオブジェクトについての関連する削除指示子レコードを含む。「処理１１」は、複製が、ストレージクラスタＸＸ（「ＸＸ：位置０１：データ」）およびストレージクラスタＹＹ（「ＹＹ：位置０１：データ」）に記憶されていることをそれぞれ示すレコードを有する。「処理２１」は、１つの複製がストレージクラスタＸＸ（「ＸＸ：位置０２：データ」）に記憶され、ストレージクラスタＹＹの他の複製が実行中の削除リクエスト（「ＹＹ：位置０２：削除リクエスト」）を有することを示すレコードを有する。「処理３１」は、複製がストレージクラスタＹＹ（「ＹＹ：位置０３：データ」）およびストレージクラスタＺＺ（「ＺＺ：位置０１：データ」）にそれぞれ記憶されていることを示すレコードを有する。「処理３１」は、さらに、複製が、ストレージクラスタＹＹ（「ＹＹ：位置０３：削除リクエスト」）およびストレージクラスタＺＺ（「ＺＺ：位置０１：削除リクエスト」）における実行中の削除リクエストを有する２つのレコードを有する。「処理４１」は、複製がストレージクラスタＹＹに記憶されていることを示すレコード（「ＹＹ：位置０４：データ」）、およびストレージクラスタＹＹにおける実行中の削除リクエストを有する複製を示すレコード（「ＹＹ：位置０４：削除リクエスト」）を有する。処理４１は、さらに、複製の重複排除が生じたことを示す１つのレコード（「ＺＺ：位置０２：重複排除」）を有する。ストレージクラスタによって用いられる重複排除アルゴリズムは、本明細書で説明される原理に一致するガイドラインを用いて動作し得る。ストレージクラスタＸＸは、「処理１１」、「処理２１」、「処理３１」、および「処理４１」を含むグローバルインデックスの部分への関与に割り当てられるものと仮定する。 As shown in FIG. 11, the index unit 1100 includes content processing and associated deletion indicator records for four objects. “Process 11” has a record indicating that the replica is stored in the storage cluster XX (“XX: position 01: data”) and the storage cluster YY (“YY: position 01: data”). In “Process 21”, one copy is stored in the storage cluster XX (“XX: position 02: data”) and another copy of the storage cluster YY is being executed (“YY: position 02: deletion request”). ). The “process 31” has a record indicating that the replica is stored in the storage cluster YY (“YY: location 03: data”) and the storage cluster ZZ (“ZZ: location 01: data”). “Process 31” further includes two copies having deletion requests being executed in the storage cluster YY (“YY: location 03: deletion request”) and storage cluster ZZ (“ZZ: location 01: deletion request”). Have a record. “Process 41” includes a record (“YY: position 04: data”) indicating that a replica is stored in the storage cluster YY, and a record (“YY” indicating a copy having a deletion request being executed in the storage cluster YY. : Position 04: Delete request "). The process 41 further includes one record (“ZZ: position 02: deduplication”) indicating that duplicate deduplication has occurred. The deduplication algorithm used by the storage cluster may operate using guidelines that are consistent with the principles described herein. Assume that the storage cluster XX is assigned to participate in the part of the global index including “Process 11”, “Process 21”, “Process 31”, and “Process 41”.
オブジェクトが、ストレージクラスタに完全にアップロードされると、ストレージクラスタは、オブジェクトのコンテンツ処理によってアドレス指定された複製グローバルインデックスへ、データレコード（たとえば、「クラスタＩＤ：位置：データ」）を書き込み得る。たとえば、「ＸＸ：位置０１：データ」および「ＹＹ：位置０１：データ」は、「処理１１」の複製についてのデータレコードを示す。また、「ＸＸ：位置０２：データ」は、「処理２１」の複製についてのデータレコードを示す。類似のデータレコードが、「処理３１」および「処理４１」について見ることができる。 Once the object is fully uploaded to the storage cluster, the storage cluster may write a data record (eg, “cluster ID: location: data”) to the duplicate global index addressed by the content processing of the object. For example, “XX: position 01: data” and “YY: position 01: data” indicate data records for a copy of “process 11”. Further, “XX: position 02: data” indicates a data record regarding a copy of “process 21”. Similar data records can be seen for “Process 31” and “Process 41”.
オブジェクトがストレージクラスタ内で要求されると、ストレージクラスタは、オブジェクトのコンテンツ処理を用いて、複製グローバルインデックスにおける複製位置を検索し、「最良の」（たとえば、最も近い）クラスタから複製を取得する。たとえば、「処理１１」に対応するオブジェクトがストレージクラスタＺＺで要求され、ストレージクラスタＹＹがストレージクラスタＸＸよりもストレージクラスタＺＺに近いと仮定すると、ストレージクラスタＺＺは、ストレージクラスタＹＹからの「処理１１」に対応するオブジェクト複製を要求し得る。 When an object is requested in the storage cluster, the storage cluster uses the object's content processing to find the replication location in the replication global index and obtains the replication from the “best” (eg, closest) cluster. For example, assuming that an object corresponding to “Process 11” is requested in the storage cluster ZZ, and the storage cluster YY is closer to the storage cluster ZZ than the storage cluster XX, the storage cluster ZZ receives “Process 11” from the storage cluster YY. May request object duplication corresponding to.
オブジェクトがストレージクラスタにおいて削除されると、ストレージクラスタは、そのオブジェクトのコンテンツ処理によってアドレス指定された複製グローバルインデックスへ、「クラスタＩＤ：位置：削除リクエスト」を書き込み得る。たとえば、「ＹＹ：位置０２：削除リクエスト」は、ストレージクラスタＹＹにおける「処理２１」の削除された複製についてのレコードを示す。同様に、「ＹＹ：位置０３：削除リクエスト」および「ＺＺ：位置０１：削除リクエスト」は、それぞれ、ストレージクラスタＹＹおよびＺＺについての「処理３１」の削除された複製についてのレコードを示す。 When an object is deleted in the storage cluster, the storage cluster may write “cluster ID: location: delete request” to the duplicate global index addressed by the content processing of the object. For example, “YY: position 02: delete request” indicates a record regarding a deleted copy of “process 21” in the storage cluster YY. Similarly, “YY: position 03: deletion request” and “ZZ: position 01: deletion request” indicate records of deleted copies of “processing 31” for storage clusters YY and ZZ, respectively.
ストレージクラスタにおけるスキャンが、そのストレージクラスタが関与するコンテンツ処理に対応する実行中の削除リクエストを有しない複数の複製に遭遇した場合、ストレージクラスタはそのオブジェクトの冗長な複製を削除し得る（あるいは、１つより多くの活性中の複製を残す）。他のストレージクラスタにおける削除された各複製について、ストレージクラスタは、データレコードを削除するとともに、重複排除レコードを書き込み得る。たとえば、ストレージクラスタＸＸにおけるスキャンは、複製がストレージクラスタＸＸ（「ＸＸ：位置０１：データ」）およびストレージクラスタＹＹ（「ＹＹ：位置０１：データ」）にそれぞれ記憶されていることを示すレコードを「処理１１」が有していると識別し得る。冗長な参照を除去するために与えられた基準に基づいて、ストレージクラスタＸＸは、ストレージクラスタＹＹにおける複製の削除を起動し得る。ストレージクラスタＸＸは、図１１に示されるレコード「ＹＹ：位置０１：データ」を削除するとともに、その代わりに「ＹＹ：位置０１：重複排除」を書き込み得る。 If a scan in a storage cluster encounters multiple replicas that do not have an ongoing delete request corresponding to the content processing that the storage cluster is involved in, the storage cluster may delete redundant copies of the object (or 1 Leaving more than two active replicas). For each deleted replica in the other storage cluster, the storage cluster can delete the data record and write a deduplication record. For example, the scan in the storage cluster XX includes records indicating that the replicas are stored in the storage cluster XX (“XX: position 01: data”) and the storage cluster YY (“YY: position 01: data”), respectively. It can be identified that the process 11 "has. Based on the criteria given to remove redundant references, the storage cluster XX can trigger the deletion of replicas in the storage cluster YY. The storage cluster XX can delete the record “YY: position 01: data” shown in FIG. 11 and write “YY: position 01: deduplication” instead.
ストレージクラスタＸＸにおけるスキャンが、ストレージクラスタＸＸが関与するコンテンツ処理に対応する、他のストレージクラスタ（たとえば、ストレージクラスタＹＹまたはＺＺ）における複製についての削除リクエスト（たとえば、「クラスタＩＤ：位置：削除リクエスト」）に遭遇した場合、ストレージクラスタＸＸは、以下のような解析を適用し得る。削除リクエストと同じストレージクラスタおよび同じ位置についての「重複排除」レコードがある場合、そのオブジェクトの他の活性中の複製が存在する場合、または、すべての複製が実行中の削除リクエストを有している場合は、ストレージクラスタＸＸは、（もしあれば）ストレージクラスタＹＹまたはＺＺにおけるオブジェクトの複製を削除し、レコード「ＹＹ：位置：＊」または「ＺＺ：位置：＊」を削除し得る。たとえば、（レコード「ＸＸ：位置０２：データ」によって示される）他の活性中のオブジェクトが存在しているので、ストレージクラスタＹＹにおける「処理２１」についての複製およびレコード「ＹＹ：位置０２：削除リクエスト」が、ストレージクラスタＸＸによって削除され得る。同様に、ストレージクラスタＹＹおよびストレージクラスタＺＺにおける両方の複製が実行中の削除リクエストを有しているので、ストレージクラスタＹＹにおける「処理３１」についての複製およびレコード「ＹＹ：位置０３：削除リクエスト」が、ストレージクラスタＸＸによって削除され得る。 A delete request for a replication in another storage cluster (eg, storage cluster YY or ZZ) whose scan in storage cluster XX corresponds to a content process involving storage cluster XX (eg, “Cluster ID: Location: Delete Request”) ), The storage cluster XX can apply the following analysis. If there is a “deduplication” record for the same storage cluster and location as the delete request, there are other active replicas of the object, or all replicas have an active delete request In this case, the storage cluster XX may delete the duplicate of the object in the storage cluster YY or ZZ (if any) and delete the record “YY: position: *” or “ZZ: position: *”. For example, because there is another active object (indicated by record “XX: position 02: data”), the replication and record “YY: position 02: deletion request” for “processing 21” in the storage cluster YY. Can be deleted by the storage cluster XX. Similarly, since both the replications in the storage cluster YY and the storage cluster ZZ have deletion requests being executed, the replication and the record “YY: position 03: deletion request” for “processing 31” in the storage cluster YY Can be deleted by the storage cluster XX.
ストレージクラスタＸＸが、ストレージクラスタＹＹまたはＺＺにおけるオブジェクトの複製を削除できない（たとえば、「重複排除」レコードまたはオブジェクトの他の活性中の複製がなく、かつ、すべての複製が実行中の削除リクエストを有していない）場合、ストレージクラスタＸＸは、ＹＹまたはＺＺから、重複排除レコードがありかつ実行中の削除リクエストのない他のストレージクラスタへオブジェクトをコピーし、重複排除レコードを削除するとともにデータレコードを書き込み得る。たとえば、ストレージクラスタＹＹにおける「処理４１」の複製（「ＹＹ：位置０４：削除リクエスト」）は、ストレージクラスタＸＸを起動して、ストレージクラスタＺＺに「処理４１」に関連するオブジェクトをコピーさせ得る。ストレージクラスタＸＸは、グローバルインデックスを更新し、「ＺＺ：位置０２：重複排除」を「ＺＺ：位置０２：データ」に変化させる。 Storage cluster XX cannot delete a copy of an object in storage cluster YY or ZZ (for example, there is no “deduplication” record or other active copy of the object, and all copies have a delete request in progress. Storage cluster XX copies the object from YY or ZZ to another storage cluster that has a deduplication record and does not have a delete request in progress, deletes the deduplication record, and writes a data record obtain. For example, a copy of “process 41” in the storage cluster YY (“YY: position 04: delete request”) may activate the storage cluster XX and cause the storage cluster ZZ to copy the object associated with “process 41”. The storage cluster XX updates the global index and changes “ZZ: position 02: deduplication” to “ZZ: position 02: data”.
オブジェクトについてのすべての削除動作が、そのコンテンツ処理に関与するストレージクラスタにおける、スキャンプロセスによってのみ実行され得るので、アルゴリズムの正確さは直接的である。アルゴリズムは、また、異なる位置（たとえば、ＸＸ：位置１およびＸＸ：位置２）を有する同じクラスタにおける複数のオブジェクト複製を透過的に処理する。 The accuracy of the algorithm is straightforward because all delete operations on an object can only be performed by a scanning process in the storage cluster involved in its content processing. The algorithm also transparently handles multiple object replicas in the same cluster with different positions (eg, XX: position 1 and XX: position 2).
結論
本明細書に記載されたシステムおよび／または方法は、分散型データ複製システムにおけるオブジェクトのグローバルインデックスを記憶するとともに、分散型データ複製システムを通して、グローバルインデックスおよびいくつかのオブジェクトを複製し得る。ストレージクラスタは、グローバルインデックスの特定のサブセットにおける重複排除のための、重要なエンティティとして割り当てられる。ストレージクラスタは、グローバルインデックスのサブセットのスキャンを実行し、そのスキャンに基づいて冗長な複製を識別し得る。ストレージクラスタは、局部的に記憶された冗長な複製、または遠隔ストレージクラスタ内の冗長な複製を重複排除し得る。
CONCLUSION The systems and / or methods described herein can store a global index of objects in a distributed data replication system and can replicate the global index and some objects through the distributed data replication system. A storage cluster is assigned as a key entity for deduplication in a specific subset of the global index. The storage cluster may perform a scan of a subset of the global index and identify redundant replicas based on the scan. A storage cluster may deduplicate locally stored redundant replicas or redundant replicas in a remote storage cluster.
上記の実行例の記載は、例示および説明を提供するが、包括的であること、または、開示されたそのままの形式に本発明を限定することを意図したものではない。修正および変更が、上記の教示に照らして可能であり、または本発明の実施から得られる。 The above description of implementations provides examples and explanations, but is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Modifications and changes are possible in light of the above teachings or may be derived from practice of the invention.
たとえば、他の実行例においては、重複排除アルゴリズムの同期バージョンが用いられ、それにおいては、分散型データ複製システムにおける複製層を用いるよりはむしろ、異なるストレージクラスタが直接的に通信する。 For example, in other implementations, a synchronized version of the deduplication algorithm is used, in which different storage clusters communicate directly rather than using a replication layer in a distributed data replication system.
また、図６Ａ〜１０に関連して一連のブロックが説明されたが、他の実行例においては、ブロックの順序は修正され得る。さらに、非従属ブロックが並行して実行され得る。 Also, although a series of blocks has been described in connection with FIGS. 6A-10, in other implementations, the order of the blocks can be modified. Furthermore, non-dependent blocks can be executed in parallel.
本明細書に記載される実施形態は、図中の示された実行例において、ソフトウェア、ファームウェア、およびハードウェアの多くの異なる形式で実現され得ることが明らかであろう。本明細書に記載される実施形態を実行するために用いられる実際のソフトウェアコードまたは特別の制御ハードウェアは、本発明を限定するものではない。したがって、実施形態に動作および振る舞いは、特定のソフトウェアコードを考慮せずに説明されたが、ソフトウェアおよび制御ハードウェアは、本明細書における記述に基づく実施形態を実現するために設計され得ることが理解される。さらに、本明細書において記載された特定の実行例は、１つまたはより多くの機能を実行する「論理」または「要素」として実現され得る。この論理または要素は、プロセッサ、マイクロプロセッサ、特定用途向け集積回路、またはフィールドプログラマブルゲートアレイのようなハードウェア、あるいは、ハードウェおよびソフトウェアの組み合わせ（たとえば、プロセッサによって実行されるソフトウェア）を含み得る。語句「備える（comprises）」および／または「備えている（comprising）」は、本明細書において用いられるときは、言及された特徴、整数、ステップ、または要素の存在を特定するために採用されるが、１つまたはより多くの他の特徴、整数、ステップ、要素、またはそのグループの存在または追加を除外するものではないことが強調されるべきである。 It will be apparent that the embodiments described herein may be implemented in many different forms of software, firmware, and hardware in the illustrated example implementation. The actual software code or special control hardware used to implement the embodiments described herein is not limiting of the invention. Thus, although the operations and behaviors of the embodiments have been described without considering specific software code, the software and control hardware may be designed to implement embodiments based on the description herein. Understood. Further, the particular implementations described herein may be implemented as “logic” or “elements” that perform one or more functions. The logic or elements may include hardware such as a processor, microprocessor, application specific integrated circuit, or field programmable gate array, or a combination of hardware and software (eg, software executed by a processor). The phrases “comprises” and / or “comprising”, as used herein, are employed to identify the presence of a feature, integer, step, or element referred to. It should be emphasized that this does not exclude the presence or addition of one or more other features, integers, steps, elements, or groups thereof.
たとえ、特徴の特定の組み合わせが特許請求の範囲に記載され、および／または明細書中に開示されているとしても、これらの組み合わせは、本発明の開示を制限することが意図されたものではない。実際、これらの特徴の多くは、特許請求の範囲に具体的に記載されておらず、および／または、明細書中に具体的に開示されていない手法で組み合わされ得る。 Even though specific combinations of features are recited in the claims and / or disclosed in the specification, these combinations are not intended to limit the disclosure of the invention . Indeed, many of these features are not specifically recited in the claims and / or may be combined in ways not specifically disclosed in the specification.
本願の記載において用いられる要素、動作、または指令のいずれも、そのように明示的に記載されていなければ、本発明に必須または必要不可欠なものとして解釈されるべきではない。また、本明細書で用いられる、冠詞「a」は、１つまたはより多くの事項含むことが意図される。１つの事項のみが意図される場合は、語句「one」または同様の言語が用いられる。さらに、本明細書において用いられる、句「基づいて」は、そうでないものと明示的に言及されていなければ、「少なくとも一部に基づいて」を意味することが意図される。 Any element, operation, or command used in the description of this application should not be construed as essential or essential to the invention unless explicitly described as such. Also, as used herein, the article “a” is intended to include one or more items. Where only one item is intended, the phrase “one” or similar language is used. Further, as used herein, the phrase “based on” is intended to mean “based at least in part” unless explicitly stated otherwise.
Claims (18)
分散型記憶システムの複数の装置の中の、１以上のプロセッサと当該１以上のプロセッサによって実行されるプログラムを記憶するメモリとを含む第１の装置において、
前記分散型記憶システムにおいて記憶されているオブジェクトのグローバルインデックスにアクセスするステップを含み、前記グローバルインデックスは、前記複数の装置のそれぞれに記憶されており、前記グローバルインデックスは、前記分散型記憶システムにおいて記憶されている各オブジェクトの複製を前記複数の装置の中のどれが記憶しているかを指定し、
前記方法は、前記グローバルインデックスの第１の部分をスキャンするステップを含み、前記第１の部分は、前記第１の装置に割り当てられ、前記第１の装置は、その固有の処理が前記第１の部分において記憶されるオブジェクトの重複排除に関与し、
前記方法は、前記スキャンするステップに応じて、前記オブジェクトの中の１つの冗長な複製を識別するステップを含み、前記冗長な複製は前記複数の装置の中の第２の装置にあり、
前記方法は、前記グローバルインデックスの冗長な複製に対応する前記第１の部分に重複排除に対応する新しいレコードを書き込むステップを含み、前記新しいレコードは、重複排除の前記冗長な複製を指定し、
前記方法は、前記書き込むステップに続いて、前記グローバルインデックスの前記第１の部分を前記第２の装置での前記冗長な複製の重複排除のために前記複数の装置に複製するステップを含む、方法。 A method performed by a computer,
In a first device that includes one or more processors and a memory that stores a program executed by the one or more processors among the plurality of devices of the distributed storage system.
Accessing a global index of an object stored in the distributed storage system, wherein the global index is stored in each of the plurality of devices, and the global index is stored in the distributed storage system Specifying which of the plurality of devices stores a copy of each object being
The method includes scanning a first portion of the global index, wherein the first portion is assigned to the first device, and the first device has its own processing as the first portion. Involved in the deduplication of objects stored in
The method includes identifying one redundant replica in the object in response to the scanning step, the redundant replica being in a second device of the plurality of devices;
The method includes writing a new record corresponding to deduplication in the first portion corresponding to a redundant copy of the global index, the new record specifying the redundant copy of deduplication;
The method includes, following the step of writing, replicating the first portion of the global index to the plurality of devices for deduplication of the redundant replica at the second device. .
１以上のプロセッサと、
メモリと、
前記１以上のプロセッサによって実行されるように構成される、前記メモリに記憶された１以上のプログラムとを含み、前記１以上のプログラムは、
前記複数の装置の中の第１の装置に、
前記分散型記憶システムにおいて記憶されたオブジェクトのグローバルインデックスにアクセスさせるための命令を備え、前記グローバルインデックスは、前記複数の装置のそれぞれに記憶され、前記グローバルインデックスは、前記分散型記憶システムにおいて記憶されている各オブジェクトの複製を前記複数の装置の中のどれが記憶しているかを指定し、
前記グローバルインデックスの第１の部分をスキャンさせるための命令を備え、前記第１の部分は、前記第１の装置に割り当てられ、前記第１の装置は、その固有の処理が前記第１の部分において記憶されるオブジェクトの重複排除に関与し、
前記スキャンするステップに応じて、前記オブジェクトの中の１つの冗長な複製を識別させるための命令を備え、前記冗長な複製は前記複数の装置の中の第２の装置にあり、
前記グローバルインデックスの冗長な複製に対応する前記第１の部分に重複排除に対応する新しいレコードを書き込ませるための命令を備え、前記新しいレコードは、重複排除の前記冗長な複製を指定し、
前記書き込ませることに続いて、前記グローバルインデックスの前記第１の部分を前記第２の装置での前記冗長な複製の重複排除のために前記複数の装置に複製させるための命令を備える、分散型記憶システム。 A distributed storage system comprising a plurality of devices, each device
One or more processors;
Memory,
One or more programs stored in the memory configured to be executed by the one or more processors, the one or more programs comprising:
A first device of the plurality of devices,
Instructions for accessing a global index of an object stored in the distributed storage system, wherein the global index is stored in each of the plurality of devices, and the global index is stored in the distributed storage system; Specifying which of the plurality of devices remembers a copy of each object being
Instructions for scanning a first portion of the global index, wherein the first portion is assigned to the first device, and the first device is responsible for its unique processing. Involved in the deduplication of objects stored in
In response to the scanning step, comprising instructions for identifying one redundant replica in the object, wherein the redundant replica is in a second device of the plurality of devices;
Instructions for causing a new record corresponding to deduplication to be written to the first portion corresponding to a redundant copy of the global index, wherein the new record specifies the redundant copy of deduplication;
Distributed, comprising instructions for causing the plurality of devices to replicate the first portion of the global index subsequent to the writing to deduplicate the redundant copy at the second device Storage system .
前記複数の装置の中の第１の装置に、
前記分散型記憶システムにおいて記憶されたオブジェクトのグローバルインデックスにアクセスさせるための命令を備え、前記グローバルインデックスは、前記複数の装置のそれぞれに記憶され、前記グローバルインデックスは、前記分散型記憶システムにおいて記憶されている各オブジェクトの複製を前記複数の装置の中のどれが記憶しているかを指定し、
前記グローバルインデックスの第１の部分をスキャンさせるための命令を備え、前記第１の部分は、前記第１の装置に割り当てられ、前記第１の装置は、その固有の処理が前記第１の部分において記憶されるオブジェクトの重複排除に関与し、
前記スキャンするステップに応じて、前記オブジェクトの中の１つの冗長な複製を識別させるための命令を備え、前記冗長な複製は前記複数の装置の中の第２の装置にあり、
前記グローバルインデックスの冗長な複製に対応する前記第１の部分に重複排除に対応する新しいレコードを書き込ませるための命令を備え、前記新しいレコードは、重複排除の前記冗長な複製を指定し、
前記書き込ませることに続いて、前記グローバルインデックスの前記第１の部分を前記第２の装置での前記冗長な複製の重複排除のために前記複数の装置に複製させるための命令を備える、コンピュータ読取可能な記録媒体。 A computer-readable recording medium storing one or more programs configured to be executed by a plurality of devices in a distributed storage system, wherein each of the plurality of devices includes one or more processors and a memory. And the one or more programs are:
A first device of the plurality of devices,
Instructions for accessing a global index of an object stored in the distributed storage system, wherein the global index is stored in each of the plurality of devices, and the global index is stored in the distributed storage system; Specifying which of the plurality of devices remembers a copy of each object being
Instructions for scanning a first portion of the global index, wherein the first portion is assigned to the first device, and the first device is responsible for its unique processing. Involved in the deduplication of objects stored in
In response to the scanning step, comprising instructions for identifying one redundant replica in the object, wherein the redundant replica is in a second device of the plurality of devices;
Instructions for causing a new record corresponding to deduplication to be written to the first portion corresponding to a redundant copy of the global index, wherein the new record specifies the redundant copy of deduplication;
Computer read comprising instructions for causing the plurality of devices to replicate the first portion of the global index subsequent to the writing for deduplication of the redundant copy at the second device. Possible recording media .
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13985708P | 2008-12-22 | 2008-12-22 | |
US61/139,857 | 2008-12-22 |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2011542576A Division JP5579195B2 (en) | 2008-12-22 | 2009-12-22 | Asynchronous distributed deduplication for replicated content addressable storage clusters |
Publications (2)
Publication Number | Publication Date |
---|---|
JP2014139824A JP2014139824A (en) | 2014-07-31 |
JP5902222B2 true JP5902222B2 (en) | 2016-04-13 |
Family
ID=41719028
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2011542576A Active JP5579195B2 (en) | 2008-12-22 | 2009-12-22 | Asynchronous distributed deduplication for replicated content addressable storage clusters |
JP2014061617A Active JP5902222B2 (en) | 2008-12-22 | 2014-03-25 | Computer-implemented method, distributed storage system, and computer-readable recording medium |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2011542576A Active JP5579195B2 (en) | 2008-12-22 | 2009-12-22 | Asynchronous distributed deduplication for replicated content addressable storage clusters |
Country Status (9)
Country | Link |
---|---|
US (4) | US8712974B2 (en) |
EP (1) | EP2368199B1 (en) |
JP (2) | JP5579195B2 (en) |
CN (2) | CN102317938B (en) |
AU (1) | AU2009330073B2 (en) |
BR (1) | BRPI0922990B1 (en) |
CA (1) | CA2747746C (en) |
DE (1) | DE202009019139U1 (en) |
WO (1) | WO2010075407A1 (en) |
Families Citing this family (238)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8645137B2 (en) | 2000-03-16 | 2014-02-04 | Apple Inc. | Fast, language-independent method for user authentication by voice |
US8140786B2 (en) | 2006-12-04 | 2012-03-20 | Commvault Systems, Inc. | Systems and methods for creating copies of data, such as archive copies |
US8677377B2 (en) | 2005-09-08 | 2014-03-18 | Apple Inc. | Method and apparatus for building an intelligent automated assistant |
US8190742B2 (en) * | 2006-04-25 | 2012-05-29 | Hewlett-Packard Development Company, L.P. | Distributed differential store with non-distributed objects and compression-enhancing data-object routing |
US9318108B2 (en) | 2010-01-18 | 2016-04-19 | Apple Inc. | Intelligent automated assistant |
US7840537B2 (en) | 2006-12-22 | 2010-11-23 | Commvault Systems, Inc. | System and method for storing redundant information |
US8977255B2 (en) | 2007-04-03 | 2015-03-10 | Apple Inc. | Method and system for operating a multi-function portable electronic device using voice-activation |
US10002189B2 (en) | 2007-12-20 | 2018-06-19 | Apple Inc. | Method and apparatus for searching using an active ontology |
US9330720B2 (en) | 2008-01-03 | 2016-05-03 | Apple Inc. | Methods and apparatus for altering audio output signals |
US8996376B2 (en) | 2008-04-05 | 2015-03-31 | Apple Inc. | Intelligent text-to-speech conversion |
US8103628B2 (en) * | 2008-04-09 | 2012-01-24 | Harmonic Inc. | Directed placement of data in a redundant data storage system |
US10496753B2 (en) | 2010-01-18 | 2019-12-03 | Apple Inc. | Automatically adapting user interfaces for hands-free interaction |
US9098495B2 (en) | 2008-06-24 | 2015-08-04 | Commvault Systems, Inc. | Application-aware and remote single instance data management |
US8219524B2 (en) * | 2008-06-24 | 2012-07-10 | Commvault Systems, Inc. | Application-aware and remote single instance data management |
US8166263B2 (en) | 2008-07-03 | 2012-04-24 | Commvault Systems, Inc. | Continuous data protection over intermittent connections, such as continuous data backup for laptops or wireless devices |
US20100030549A1 (en) | 2008-07-31 | 2010-02-04 | Lee Michael M | Mobile device having human language translation capability with positional feedback |
US9015181B2 (en) | 2008-09-26 | 2015-04-21 | Commvault Systems, Inc. | Systems and methods for managing single instancing data |
CA2729078C (en) | 2008-09-26 | 2016-05-24 | Commvault Systems, Inc. | Systems and methods for managing single instancing data |
US8676904B2 (en) | 2008-10-02 | 2014-03-18 | Apple Inc. | Electronic devices with voice command and contextual data processing capabilities |
US8412677B2 (en) * | 2008-11-26 | 2013-04-02 | Commvault Systems, Inc. | Systems and methods for byte-level or quasi byte-level single instancing |
WO2010067118A1 (en) | 2008-12-11 | 2010-06-17 | Novauris Technologies Limited | Speech recognition involving a mobile device |
CN102317938B (en) * | 2008-12-22 | 2014-07-30 | 谷歌公司 | Asynchronous distributed de-duplication for replicated content addressable storage clusters |
US8401996B2 (en) | 2009-03-30 | 2013-03-19 | Commvault Systems, Inc. | Storing a variable number of instances of data objects |
US20100281077A1 (en) * | 2009-04-30 | 2010-11-04 | Mark David Lillibridge | Batching requests for accessing differential data stores |
US9141621B2 (en) | 2009-04-30 | 2015-09-22 | Hewlett-Packard Development Company, L.P. | Copying a differential data store into temporary storage media in response to a request |
US8578120B2 (en) | 2009-05-22 | 2013-11-05 | Commvault Systems, Inc. | Block-level single instancing |
US9858925B2 (en) | 2009-06-05 | 2018-01-02 | Apple Inc. | Using context information to facilitate processing of commands in a virtual assistant |
US10706373B2 (en) | 2011-06-03 | 2020-07-07 | Apple Inc. | Performing actions associated with task items that represent tasks to perform |
US10241752B2 (en) | 2011-09-30 | 2019-03-26 | Apple Inc. | Interface for a virtual digital assistant |
US10241644B2 (en) | 2011-06-03 | 2019-03-26 | Apple Inc. | Actionable reminder entries |
US9431006B2 (en) | 2009-07-02 | 2016-08-30 | Apple Inc. | Methods and apparatuses for automatic speech recognition |
US8572137B2 (en) | 2009-09-08 | 2013-10-29 | International Business Machines Corporation | Data de-duplication in a distributed network |
US10679605B2 (en) | 2010-01-18 | 2020-06-09 | Apple Inc. | Hands-free list-reading by intelligent automated assistant |
US10705794B2 (en) | 2010-01-18 | 2020-07-07 | Apple Inc. | Automatically adapting user interfaces for hands-free interaction |
US10553209B2 (en) | 2010-01-18 | 2020-02-04 | Apple Inc. | Systems and methods for hands-free notification summaries |
US10276170B2 (en) | 2010-01-18 | 2019-04-30 | Apple Inc. | Intelligent automated assistant |
US8682667B2 (en) | 2010-02-25 | 2014-03-25 | Apple Inc. | User profiling for selecting user specific voice input processing information |
US9135016B1 (en) * | 2010-05-14 | 2015-09-15 | Emc Corporation | Methods and apparatus for managing replication of objects in a storage environment |
US8935492B2 (en) | 2010-09-30 | 2015-01-13 | Commvault Systems, Inc. | Archiving data objects using secondary copies |
US10762293B2 (en) | 2010-12-22 | 2020-09-01 | Apple Inc. | Using parts-of-speech tagging and named entity recognition for spelling correction |
US9262612B2 (en) | 2011-03-21 | 2016-02-16 | Apple Inc. | Device access using voice authentication |
US8433681B2 (en) | 2011-05-12 | 2013-04-30 | Dell Products L.P. | System and method for managing replication in an object storage system |
US10057736B2 (en) | 2011-06-03 | 2018-08-21 | Apple Inc. | Active transport based notifications |
US10672399B2 (en) | 2011-06-03 | 2020-06-02 | Apple Inc. | Switching between text data and audio data based on a mapping |
US8994660B2 (en) | 2011-08-29 | 2015-03-31 | Apple Inc. | Text correction processing |
US9286052B1 (en) * | 2011-09-15 | 2016-03-15 | Emc Corporation | Upgrading software on a pair of nodes in a clustered environment |
US20130073286A1 (en) * | 2011-09-20 | 2013-03-21 | Apple Inc. | Consolidating Speech Recognition Results |
US8682868B2 (en) * | 2011-12-02 | 2014-03-25 | International Business Machines Corporation | Removal of data remanence in deduplicated storage clouds |
US8468138B1 (en) | 2011-12-02 | 2013-06-18 | International Business Machines Corporation | Managing redundant immutable files using deduplication in storage clouds |
US8504595B2 (en) * | 2011-12-07 | 2013-08-06 | Jeffrey Tofano | De-duplication for a global coherent de-duplication repository |
US20130151483A1 (en) * | 2011-12-07 | 2013-06-13 | Quantum Corporation | Adaptive experience based De-duplication |
KR101583748B1 (en) * | 2011-12-08 | 2016-01-19 | 엠파이어 테크놀로지 디벨롭먼트 엘엘씨 | Storage discounts for allowing cross-user deduplication |
US10134385B2 (en) | 2012-03-02 | 2018-11-20 | Apple Inc. | Systems and methods for name pronunciation |
US9483461B2 (en) | 2012-03-06 | 2016-11-01 | Apple Inc. | Handling speech synthesis of content for multiple languages |
US8732124B1 (en) * | 2012-03-26 | 2014-05-20 | Emc Corporation | Multisite replication with coordinated cycle switching |
US9020890B2 (en) | 2012-03-30 | 2015-04-28 | Commvault Systems, Inc. | Smart archiving and data previewing for mobile devices |
US9280610B2 (en) | 2012-05-14 | 2016-03-08 | Apple Inc. | Crowd sourcing information to fulfill user requests |
US10417037B2 (en) | 2012-05-15 | 2019-09-17 | Apple Inc. | Systems and methods for integrating third party services with a digital assistant |
US8984028B2 (en) | 2012-05-29 | 2015-03-17 | Recommind, Inc. | Systems and methods for storing data and eliminating redundancy |
US9721563B2 (en) | 2012-06-08 | 2017-08-01 | Apple Inc. | Name recognition system |
CN103491124B (en) * | 2012-06-14 | 2018-08-14 | 南京中兴软件有限责任公司 | A kind of method that multimedia message data is handled and distributed cache system |
US9495129B2 (en) | 2012-06-29 | 2016-11-15 | Apple Inc. | Device, method, and user interface for voice-activated navigation and browsing of a document |
US9086819B2 (en) * | 2012-07-25 | 2015-07-21 | Anoosmar Technologies Private Limited | System and method for combining deduplication and encryption of data |
US20140067775A1 (en) * | 2012-09-05 | 2014-03-06 | salesforce.com,inc | System, method and computer program product for conditionally performing de-duping on data |
US9576574B2 (en) | 2012-09-10 | 2017-02-21 | Apple Inc. | Context-sensitive handling of interruptions by intelligent digital assistant |
US9547647B2 (en) | 2012-09-19 | 2017-01-17 | Apple Inc. | Voice-based media searching |
US9633022B2 (en) | 2012-12-28 | 2017-04-25 | Commvault Systems, Inc. | Backup and restoration for a deduplicated file system |
CN104969289B (en) | 2013-02-07 | 2021-05-28 | 苹果公司 | Voice trigger of digital assistant |
US9368114B2 (en) | 2013-03-14 | 2016-06-14 | Apple Inc. | Context-sensitive handling of interruptions |
US10652394B2 (en) | 2013-03-14 | 2020-05-12 | Apple Inc. | System and method for processing voicemail |
KR101759009B1 (en) | 2013-03-15 | 2017-07-17 | 애플 인크. | Training an at least partial voice command system |
WO2014144579A1 (en) | 2013-03-15 | 2014-09-18 | Apple Inc. | System and method for updating an adaptive speech recognition model |
US10748529B1 (en) | 2013-03-15 | 2020-08-18 | Apple Inc. | Voice activated device for use with a voice-based digital assistant |
WO2014197336A1 (en) | 2013-06-07 | 2014-12-11 | Apple Inc. | System and method for detecting errors in interactions with a voice-based digital assistant |
US9582608B2 (en) | 2013-06-07 | 2017-02-28 | Apple Inc. | Unified ranking with entropy-weighted information for phrase-based semantic auto-completion |
WO2014197334A2 (en) | 2013-06-07 | 2014-12-11 | Apple Inc. | System and method for user-specified pronunciation of words for speech synthesis and recognition |
WO2014197335A1 (en) | 2013-06-08 | 2014-12-11 | Apple Inc. | Interpreting and acting upon commands that involve sharing information with remote devices |
US10176167B2 (en) | 2013-06-09 | 2019-01-08 | Apple Inc. | System and method for inferring user intent from speech inputs |
KR101959188B1 (en) | 2013-06-09 | 2019-07-02 | 애플 인크. | Device, method, and graphical user interface for enabling conversation persistence across two or more instances of a digital assistant |
WO2014200731A1 (en) | 2013-06-13 | 2014-12-18 | Apple Inc. | System and method for emergency calls initiated by voice command |
WO2015016817A1 (en) * | 2013-07-29 | 2015-02-05 | Hewlett-Packard Development Company, L.P. | Integrity of frequently used de-duplication objects |
KR101749009B1 (en) | 2013-08-06 | 2017-06-19 | 애플 인크. | Auto-activating smart responses based on activities from remote devices |
US10296160B2 (en) | 2013-12-06 | 2019-05-21 | Apple Inc. | Method for extracting salient dialog usage from live data |
US10324897B2 (en) | 2014-01-27 | 2019-06-18 | Commvault Systems, Inc. | Techniques for serving archived electronic mail |
US9430490B1 (en) * | 2014-03-28 | 2016-08-30 | Formation Data Systems, Inc. | Multi-tenant secure data deduplication using data association tables |
US9620105B2 (en) | 2014-05-15 | 2017-04-11 | Apple Inc. | Analyzing audio input for efficient speech and music recognition |
US10592095B2 (en) | 2014-05-23 | 2020-03-17 | Apple Inc. | Instantaneous speaking of content on touch devices |
US9502031B2 (en) | 2014-05-27 | 2016-11-22 | Apple Inc. | Method for supporting dynamic grammars in WFST-based ASR |
US10170123B2 (en) | 2014-05-30 | 2019-01-01 | Apple Inc. | Intelligent assistant for home automation |
US9760559B2 (en) | 2014-05-30 | 2017-09-12 | Apple Inc. | Predictive text input |
US9842101B2 (en) | 2014-05-30 | 2017-12-12 | Apple Inc. | Predictive conversion of language input |
US9715875B2 (en) | 2014-05-30 | 2017-07-25 | Apple Inc. | Reducing the need for manual start/end-pointing and trigger phrases |
US9966065B2 (en) | 2014-05-30 | 2018-05-08 | Apple Inc. | Multi-command single utterance input method |
US9633004B2 (en) | 2014-05-30 | 2017-04-25 | Apple Inc. | Better resolution when referencing to concepts |
US9734193B2 (en) | 2014-05-30 | 2017-08-15 | Apple Inc. | Determining domain salience ranking from ambiguous words in natural speech |
US9430463B2 (en) | 2014-05-30 | 2016-08-30 | Apple Inc. | Exemplar-based natural language processing |
US9785630B2 (en) | 2014-05-30 | 2017-10-10 | Apple Inc. | Text prediction using combined word N-gram and unigram language models |
US10078631B2 (en) | 2014-05-30 | 2018-09-18 | Apple Inc. | Entropy-guided text prediction using combined word and character n-gram language models |
US10289433B2 (en) | 2014-05-30 | 2019-05-14 | Apple Inc. | Domain specific language for encoding assistant dialog |
US10659851B2 (en) | 2014-06-30 | 2020-05-19 | Apple Inc. | Real-time digital assistant knowledge updates |
US9338493B2 (en) | 2014-06-30 | 2016-05-10 | Apple Inc. | Intelligent automated assistant for TV user interactions |
US10446141B2 (en) | 2014-08-28 | 2019-10-15 | Apple Inc. | Automatic speech recognition based on user feedback |
GB2529859A (en) | 2014-09-04 | 2016-03-09 | Ibm | Device and method for storing data in a distributed file system |
US9818400B2 (en) | 2014-09-11 | 2017-11-14 | Apple Inc. | Method and apparatus for discovering trending terms in speech requests |
US10789041B2 (en) | 2014-09-12 | 2020-09-29 | Apple Inc. | Dynamic thresholds for always listening speech trigger |
US11095715B2 (en) | 2014-09-24 | 2021-08-17 | Ebay Inc. | Assigning storage responsibility in a distributed data storage system with replication |
US9800575B1 (en) * | 2014-09-24 | 2017-10-24 | Ebay Inc. | Assigning storage responsibility in a distributed data storage system with replication |
US9668121B2 (en) | 2014-09-30 | 2017-05-30 | Apple Inc. | Social reminders |
US10127911B2 (en) | 2014-09-30 | 2018-11-13 | Apple Inc. | Speaker identification and unsupervised speaker adaptation techniques |
US9886432B2 (en) | 2014-09-30 | 2018-02-06 | Apple Inc. | Parsimonious handling of word inflection via categorical stem + suffix N-gram language models |
US9646609B2 (en) | 2014-09-30 | 2017-05-09 | Apple Inc. | Caching apparatus for serving phonetic pronunciations |
US10074360B2 (en) | 2014-09-30 | 2018-09-11 | Apple Inc. | Providing an indication of the suitability of speech recognition |
US10552013B2 (en) | 2014-12-02 | 2020-02-04 | Apple Inc. | Data detection |
US9711141B2 (en) | 2014-12-09 | 2017-07-18 | Apple Inc. | Disambiguating heteronyms in speech synthesis |
CN104462396B (en) * | 2014-12-10 | 2017-12-19 | 北京国双科技有限公司 | Character string processing method and device |
US9865280B2 (en) | 2015-03-06 | 2018-01-09 | Apple Inc. | Structured dictation using intelligent automated assistants |
US10152299B2 (en) | 2015-03-06 | 2018-12-11 | Apple Inc. | Reducing response latency of intelligent automated assistants |
US9886953B2 (en) | 2015-03-08 | 2018-02-06 | Apple Inc. | Virtual assistant activation |
US10567477B2 (en) | 2015-03-08 | 2020-02-18 | Apple Inc. | Virtual assistant continuity |
US9721566B2 (en) | 2015-03-08 | 2017-08-01 | Apple Inc. | Competing devices responding to voice triggers |
US9899019B2 (en) | 2015-03-18 | 2018-02-20 | Apple Inc. | Systems and methods for structured stem and suffix language models |
US9842105B2 (en) | 2015-04-16 | 2017-12-12 | Apple Inc. | Parsimonious continuous-space phrase representations for natural language processing |
US10460227B2 (en) | 2015-05-15 | 2019-10-29 | Apple Inc. | Virtual assistant in a communication session |
US10324914B2 (en) | 2015-05-20 | 2019-06-18 | Commvalut Systems, Inc. | Handling user queries against production and archive storage systems, such as for enterprise customers having large and/or numerous files |
US10083688B2 (en) | 2015-05-27 | 2018-09-25 | Apple Inc. | Device voice control for selecting a displayed affordance |
US10127220B2 (en) | 2015-06-04 | 2018-11-13 | Apple Inc. | Language identification from short strings |
US10101822B2 (en) | 2015-06-05 | 2018-10-16 | Apple Inc. | Language input correction |
US9578173B2 (en) | 2015-06-05 | 2017-02-21 | Apple Inc. | Virtual assistant aided communication with 3rd party service in a communication session |
US10255907B2 (en) | 2015-06-07 | 2019-04-09 | Apple Inc. | Automatic accent detection using acoustic models |
US10186254B2 (en) | 2015-06-07 | 2019-01-22 | Apple Inc. | Context-based endpoint detection |
US11025565B2 (en) | 2015-06-07 | 2021-06-01 | Apple Inc. | Personalized prediction of responses for instant messaging |
US20160378747A1 (en) | 2015-06-29 | 2016-12-29 | Apple Inc. | Virtual assistant for media playback |
CN105187517A (en) * | 2015-08-20 | 2015-12-23 | 浪潮(北京)电子信息产业有限公司 | Metadata clustering method and metadata cluster |
US10747498B2 (en) | 2015-09-08 | 2020-08-18 | Apple Inc. | Zero latency digital assistant |
US10671428B2 (en) | 2015-09-08 | 2020-06-02 | Apple Inc. | Distributed personal assistant |
US10089358B2 (en) * | 2015-09-21 | 2018-10-02 | The Nielsen Company (Us), Llc | Methods and apparatus to partition data |
US9697820B2 (en) | 2015-09-24 | 2017-07-04 | Apple Inc. | Unit-selection text-to-speech synthesis using concatenation-sensitive neural networks |
US11010550B2 (en) | 2015-09-29 | 2021-05-18 | Apple Inc. | Unified language modeling framework for word prediction, auto-completion and auto-correction |
US10366158B2 (en) | 2015-09-29 | 2019-07-30 | Apple Inc. | Efficient word encoding for recurrent neural network language models |
US11587559B2 (en) | 2015-09-30 | 2023-02-21 | Apple Inc. | Intelligent device identification |
US10042885B2 (en) * | 2015-10-29 | 2018-08-07 | International Business Machines Corporation | Index table based routing for query resource optimization |
US10691473B2 (en) | 2015-11-06 | 2020-06-23 | Apple Inc. | Intelligent automated assistant in a messaging environment |
US10049668B2 (en) | 2015-12-02 | 2018-08-14 | Apple Inc. | Applying neural network language models to weighted finite state transducers for automatic speech recognition |
US10223066B2 (en) | 2015-12-23 | 2019-03-05 | Apple Inc. | Proactive assistance based on dialog communication between devices |
US10446143B2 (en) | 2016-03-14 | 2019-10-15 | Apple Inc. | Identification of voice inputs providing credentials |
US9934775B2 (en) | 2016-05-26 | 2018-04-03 | Apple Inc. | Unit-selection text-to-speech synthesis based on predicted concatenation parameters |
US9972304B2 (en) | 2016-06-03 | 2018-05-15 | Apple Inc. | Privacy preserving distributed evaluation framework for embedded personalized systems |
US11227589B2 (en) | 2016-06-06 | 2022-01-18 | Apple Inc. | Intelligent list reading |
US10249300B2 (en) | 2016-06-06 | 2019-04-02 | Apple Inc. | Intelligent list reading |
US10049663B2 (en) | 2016-06-08 | 2018-08-14 | Apple, Inc. | Intelligent automated assistant for media exploration |
DK179309B1 (en) | 2016-06-09 | 2018-04-23 | Apple Inc | Intelligent automated assistant in a home environment |
US10490187B2 (en) | 2016-06-10 | 2019-11-26 | Apple Inc. | Digital assistant providing automated status report |
US10509862B2 (en) | 2016-06-10 | 2019-12-17 | Apple Inc. | Dynamic phrase expansion of language input |
US10067938B2 (en) | 2016-06-10 | 2018-09-04 | Apple Inc. | Multilingual word prediction |
US10192552B2 (en) | 2016-06-10 | 2019-01-29 | Apple Inc. | Digital assistant providing whispered speech |
US10586535B2 (en) | 2016-06-10 | 2020-03-10 | Apple Inc. | Intelligent digital assistant in a multi-tasking environment |
DK179415B1 (en) | 2016-06-11 | 2018-06-14 | Apple Inc | Intelligent device arbitration and control |
DK179343B1 (en) | 2016-06-11 | 2018-05-14 | Apple Inc | Intelligent task discovery |
DK201670540A1 (en) | 2016-06-11 | 2018-01-08 | Apple Inc | Application integration with a digital assistant |
DK179049B1 (en) | 2016-06-11 | 2017-09-18 | Apple Inc | Data driven natural language event detection and classification |
US10474753B2 (en) | 2016-09-07 | 2019-11-12 | Apple Inc. | Language identification using recurrent neural networks |
US10043516B2 (en) | 2016-09-23 | 2018-08-07 | Apple Inc. | Intelligent automated assistant |
US11281993B2 (en) | 2016-12-05 | 2022-03-22 | Apple Inc. | Model and ensemble compression for metric learning |
US10593346B2 (en) | 2016-12-22 | 2020-03-17 | Apple Inc. | Rank-reduced token representation for automatic speech recognition |
US11204787B2 (en) | 2017-01-09 | 2021-12-21 | Apple Inc. | Application integration with a digital assistant |
DK201770383A1 (en) | 2017-05-09 | 2018-12-14 | Apple Inc. | User interface for correcting recognition errors |
US10417266B2 (en) | 2017-05-09 | 2019-09-17 | Apple Inc. | Context-aware ranking of intelligent response suggestions |
US10395654B2 (en) | 2017-05-11 | 2019-08-27 | Apple Inc. | Text normalization based on a data-driven learning network |
DK201770439A1 (en) | 2017-05-11 | 2018-12-13 | Apple Inc. | Offline personal assistant |
US10726832B2 (en) | 2017-05-11 | 2020-07-28 | Apple Inc. | Maintaining privacy of personal information |
DK201770427A1 (en) | 2017-05-12 | 2018-12-20 | Apple Inc. | Low-latency intelligent automated assistant |
DK179496B1 (en) | 2017-05-12 | 2019-01-15 | Apple Inc. | USER-SPECIFIC Acoustic Models |
US11301477B2 (en) | 2017-05-12 | 2022-04-12 | Apple Inc. | Feedback analysis of a digital assistant |
DK179745B1 (en) | 2017-05-12 | 2019-05-01 | Apple Inc. | SYNCHRONIZATION AND TASK DELEGATION OF A DIGITAL ASSISTANT |
DK201770432A1 (en) | 2017-05-15 | 2018-12-21 | Apple Inc. | Hierarchical belief states for digital assistants |
DK201770431A1 (en) | 2017-05-15 | 2018-12-20 | Apple Inc. | Optimizing dialogue policy decisions for digital assistants using implicit feedback |
US10311144B2 (en) | 2017-05-16 | 2019-06-04 | Apple Inc. | Emoji word sense disambiguation |
US20180336892A1 (en) | 2017-05-16 | 2018-11-22 | Apple Inc. | Detecting a trigger of a digital assistant |
DK179560B1 (en) | 2017-05-16 | 2019-02-18 | Apple Inc. | Far-field extension for digital assistant services |
US10403278B2 (en) | 2017-05-16 | 2019-09-03 | Apple Inc. | Methods and systems for phonetic matching in digital assistant services |
US10303715B2 (en) | 2017-05-16 | 2019-05-28 | Apple Inc. | Intelligent automated assistant for media exploration |
US10489087B2 (en) | 2017-05-24 | 2019-11-26 | International Business Machines Corporation | Using a space release data structure to indicate tracks to release for a space release command to release space of tracks in a consistency group being formed |
US10528256B2 (en) | 2017-05-24 | 2020-01-07 | International Business Machines Corporation | Processing a space release command to free release space in a consistency group |
US10896097B1 (en) * | 2017-05-25 | 2021-01-19 | Palantir Technologies Inc. | Approaches for backup and restoration of integrated databases |
US10657328B2 (en) | 2017-06-02 | 2020-05-19 | Apple Inc. | Multi-task recurrent neural network architecture for efficient morphology handling in neural language modeling |
US20190034475A1 (en) * | 2017-07-28 | 2019-01-31 | Enigma Technologies, Inc. | System and method for detecting duplicate data records |
US10445429B2 (en) | 2017-09-21 | 2019-10-15 | Apple Inc. | Natural language understanding using vocabularies with compressed serialized tries |
US10755051B2 (en) | 2017-09-29 | 2020-08-25 | Apple Inc. | Rule-based natural language processing |
US10789002B1 (en) * | 2017-10-23 | 2020-09-29 | EMC IP Holding Company LLC | Hybrid data deduplication for elastic cloud storage devices |
US10636424B2 (en) | 2017-11-30 | 2020-04-28 | Apple Inc. | Multi-turn canned dialog |
US11086823B2 (en) | 2017-12-28 | 2021-08-10 | Dropbox, Inc. | File deduplication using signature information |
US10733982B2 (en) | 2018-01-08 | 2020-08-04 | Apple Inc. | Multi-directional dialog |
US10733375B2 (en) | 2018-01-31 | 2020-08-04 | Apple Inc. | Knowledge-based framework for improving natural language understanding |
US10789959B2 (en) | 2018-03-02 | 2020-09-29 | Apple Inc. | Training speaker recognition models for digital assistants |
US10592604B2 (en) | 2018-03-12 | 2020-03-17 | Apple Inc. | Inverse text normalization for automatic speech recognition |
US10818288B2 (en) | 2018-03-26 | 2020-10-27 | Apple Inc. | Natural assistant interaction |
US10909331B2 (en) | 2018-03-30 | 2021-02-02 | Apple Inc. | Implicit identification of translation payload with neural machine translation |
US11145294B2 (en) | 2018-05-07 | 2021-10-12 | Apple Inc. | Intelligent automated assistant for delivering content from user experiences |
US10928918B2 (en) | 2018-05-07 | 2021-02-23 | Apple Inc. | Raise to speak |
US10984780B2 (en) | 2018-05-21 | 2021-04-20 | Apple Inc. | Global semantic word embeddings using bi-directional recurrent neural networks |
DK180639B1 (en) | 2018-06-01 | 2021-11-04 | Apple Inc | DISABILITY OF ATTENTION-ATTENTIVE VIRTUAL ASSISTANT |
DK179822B1 (en) | 2018-06-01 | 2019-07-12 | Apple Inc. | Voice interaction at a primary device to access call functionality of a companion device |
US11386266B2 (en) | 2018-06-01 | 2022-07-12 | Apple Inc. | Text correction |
DK201870355A1 (en) | 2018-06-01 | 2019-12-16 | Apple Inc. | Virtual assistant operation in multi-device environments |
US10892996B2 (en) | 2018-06-01 | 2021-01-12 | Apple Inc. | Variable latency device coordination |
US10496705B1 (en) | 2018-06-03 | 2019-12-03 | Apple Inc. | Accelerated task performance |
US11010561B2 (en) | 2018-09-27 | 2021-05-18 | Apple Inc. | Sentiment prediction from textual data |
US11462215B2 (en) | 2018-09-28 | 2022-10-04 | Apple Inc. | Multi-modal inputs for voice commands |
US10839159B2 (en) | 2018-09-28 | 2020-11-17 | Apple Inc. | Named entity normalization in a spoken dialog system |
US11170166B2 (en) | 2018-09-28 | 2021-11-09 | Apple Inc. | Neural typographical error modeling via generative adversarial networks |
US11475898B2 (en) | 2018-10-26 | 2022-10-18 | Apple Inc. | Low-latency multi-speaker speech recognition |
US10649676B1 (en) | 2018-12-28 | 2020-05-12 | Microsoft Technology Licensing, Llc | Memory compression for immutable data structures |
US11638059B2 (en) | 2019-01-04 | 2023-04-25 | Apple Inc. | Content playback on multiple devices |
US11348573B2 (en) | 2019-03-18 | 2022-05-31 | Apple Inc. | Multimodality in digital assistant systems |
CN111814003B (en) * | 2019-04-12 | 2024-04-23 | 伊姆西Ip控股有限责任公司 | Method, electronic device and computer program product for establishing metadata index |
US11307752B2 (en) | 2019-05-06 | 2022-04-19 | Apple Inc. | User configurable task triggers |
US11423908B2 (en) | 2019-05-06 | 2022-08-23 | Apple Inc. | Interpreting spoken requests |
DK201970509A1 (en) | 2019-05-06 | 2021-01-15 | Apple Inc | Spoken notifications |
US11475884B2 (en) | 2019-05-06 | 2022-10-18 | Apple Inc. | Reducing digital assistant latency when a language is incorrectly determined |
US11140099B2 (en) | 2019-05-21 | 2021-10-05 | Apple Inc. | Providing message response suggestions |
DK201970510A1 (en) | 2019-05-31 | 2021-02-11 | Apple Inc | Voice identification in digital assistant systems |
US11289073B2 (en) | 2019-05-31 | 2022-03-29 | Apple Inc. | Device text to speech |
DK180129B1 (en) | 2019-05-31 | 2020-06-02 | Apple Inc. | User activity shortcut suggestions |
US11496600B2 (en) | 2019-05-31 | 2022-11-08 | Apple Inc. | Remote execution of machine-learned models |
US11360641B2 (en) | 2019-06-01 | 2022-06-14 | Apple Inc. | Increasing the relevance of new available information |
US11488406B2 (en) | 2019-09-25 | 2022-11-01 | Apple Inc. | Text detection using global geometry estimators |
US11429573B2 (en) | 2019-10-16 | 2022-08-30 | Dell Products L.P. | Data deduplication system |
CN114610227B (en) * | 2020-12-09 | 2024-03-19 | 戴尔产品有限公司 | Clustering storage systems to share data patterns for deduplication |
US11709743B2 (en) | 2021-03-31 | 2023-07-25 | Netapp, Inc. | Methods and systems for a non-disruptive automatic unplanned failover from a primary copy of data at a primary storage system to a mirror copy of the data at a cross-site secondary storage system |
US11481139B1 (en) | 2021-03-31 | 2022-10-25 | Netapp, Inc. | Methods and systems to interface between a multi-site distributed storage system and an external mediator to efficiently process events related to continuity |
US11360867B1 (en) | 2021-03-31 | 2022-06-14 | Netapp, Inc. | Re-aligning data replication configuration of primary and secondary data serving entities of a cross-site storage solution after a failover event |
US11934670B2 (en) | 2021-03-31 | 2024-03-19 | Netapp, Inc. | Performing various operations at the granularity of a consistency group within a cross-site storage solution |
US11550679B2 (en) | 2021-03-31 | 2023-01-10 | Netapp, Inc. | Methods and systems for a non-disruptive planned failover from a primary copy of data at a primary storage system to a mirror copy of the data at a cross-site secondary storage system |
US11740811B2 (en) | 2021-03-31 | 2023-08-29 | Netapp, Inc. | Reseeding a mediator of a cross-site storage solution |
US11409622B1 (en) | 2021-04-23 | 2022-08-09 | Netapp, Inc. | Methods and systems for a non-disruptive planned failover from a primary copy of data at a primary storage system to a mirror copy of the data at a cross-site secondary storage system without using an external mediator |
US11893261B2 (en) | 2021-05-05 | 2024-02-06 | Netapp, Inc. | Usage of OP logs to synchronize across primary and secondary storage clusters of a cross-site distributed storage system and lightweight OP logging |
US11892982B2 (en) | 2021-10-20 | 2024-02-06 | Netapp, Inc. | Facilitating immediate performance of volume resynchronization with the use of passive cache entries |
US11907562B2 (en) | 2022-07-11 | 2024-02-20 | Netapp, Inc. | Methods and storage nodes to decrease delay in resuming input output (I/O) operations after a non-disruptive event for a storage object of a distributed storage system by utilizing asynchronous inflight replay of the I/O operations |
Family Cites Families (69)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP2583010B2 (en) * | 1993-01-07 | 1997-02-19 | インターナショナル・ビジネス・マシーンズ・コーポレイション | Method of maintaining consistency between local index table and global index table in multi-tier index structure |
AU6500596A (en) * | 1995-07-20 | 1997-02-18 | Novell, Inc. | Transaction log management in a disconnectable computer and network |
US5897664A (en) * | 1996-07-01 | 1999-04-27 | Sun Microsystems, Inc. | Multiprocessor system having mapping table in each node to map global physical addresses to local physical addresses of page copies |
US6412017B1 (en) * | 1996-07-01 | 2002-06-25 | Microsoft Corporation | Urgent replication facility |
US5812773A (en) * | 1996-07-12 | 1998-09-22 | Microsoft Corporation | System and method for the distribution of hierarchically structured data |
US6438562B1 (en) * | 1999-08-24 | 2002-08-20 | Oracle Corporation | Parallel index maintenance |
CN1232914C (en) | 2000-04-26 | 2005-12-21 | 计算机合作者思维公司 | Method and apparatus for maintaining data integrity across distributed computer systems |
JP4096147B2 (en) | 2000-10-25 | 2008-06-04 | 株式会社日立製作所 | Replication method for duplicated and replicated data in distributed computer systems |
US7231391B2 (en) * | 2001-02-06 | 2007-06-12 | Quest Software, Inc. | Loosely coupled database clusters with client connection fail-over |
US20020161907A1 (en) * | 2001-04-25 | 2002-10-31 | Avery Moon | Adaptive multi-protocol communications system |
US6988124B2 (en) * | 2001-06-06 | 2006-01-17 | Microsoft Corporation | Locating potentially identical objects across multiple computers based on stochastic partitioning of workload |
US7451217B2 (en) | 2002-12-19 | 2008-11-11 | International Business Machines Corporation | Method and system for peer-to-peer authorization |
US7573500B2 (en) | 2003-03-24 | 2009-08-11 | Sensormatic Electronics Corporation | System and method for communicating data in a video system |
US7296008B2 (en) * | 2004-08-24 | 2007-11-13 | Symantec Operating Corporation | Generation and use of a time map for accessing a prior image of a storage device |
US7685384B2 (en) * | 2004-02-06 | 2010-03-23 | Globalscape, Inc. | System and method for replicating files in a computer network |
US7200604B2 (en) * | 2004-02-17 | 2007-04-03 | Hewlett-Packard Development Company, L.P. | Data de-duplication |
US8688634B2 (en) * | 2004-02-27 | 2014-04-01 | International Business Machines Corporation | Asynchronous peer-to-peer data replication |
US7206790B2 (en) * | 2004-07-13 | 2007-04-17 | Hitachi, Ltd. | Data management system |
US7778984B2 (en) * | 2004-11-19 | 2010-08-17 | Microsoft Corporation | System and method for a distributed object store |
JP2006185041A (en) | 2004-12-27 | 2006-07-13 | Matsushita Electric Ind Co Ltd | Content distributed arrangement system, terminal, and operation method of content distributed arrangement system |
WO2007014296A2 (en) * | 2005-07-25 | 2007-02-01 | Parascale, Inc. | Scalable distributed file storage access and management |
US7584338B1 (en) * | 2005-09-27 | 2009-09-01 | Data Domain, Inc. | Replication of deduplicated storage system |
US7788223B2 (en) | 2005-12-05 | 2010-08-31 | Microsoft Corporation | Resource freshness and replication |
JP4920979B2 (en) * | 2006-01-25 | 2012-04-18 | 株式会社日立製作所 | Storage apparatus and control method thereof |
US7921077B2 (en) * | 2006-06-29 | 2011-04-05 | Netapp, Inc. | System and method for managing data deduplication of storage systems utilizing persistent consistency point images |
US7747584B1 (en) * | 2006-08-22 | 2010-06-29 | Netapp, Inc. | System and method for enabling de-duplication in a storage system architecture |
US8635194B2 (en) * | 2006-10-19 | 2014-01-21 | Oracle International Corporation | System and method for data compression |
JP4945232B2 (en) | 2006-12-21 | 2012-06-06 | 株式会社日立製作所 | Access control method, computer system, and object replication program |
US7840537B2 (en) * | 2006-12-22 | 2010-11-23 | Commvault Systems, Inc. | System and method for storing redundant information |
JP4951331B2 (en) * | 2006-12-26 | 2012-06-13 | 株式会社日立製作所 | Storage system |
US8719375B2 (en) | 2007-03-22 | 2014-05-06 | Microsoft Corporation | Remote data access techniques for portable devices |
US7873809B2 (en) * | 2007-03-29 | 2011-01-18 | Hitachi, Ltd. | Method and apparatus for de-duplication after mirror operation |
US8768895B2 (en) * | 2007-04-11 | 2014-07-01 | Emc Corporation | Subsegmenting for efficient storage, resemblance determination, and transmission |
US8204866B2 (en) * | 2007-05-18 | 2012-06-19 | Microsoft Corporation | Leveraging constraints for deduplication |
US8315984B2 (en) | 2007-05-22 | 2012-11-20 | Netapp, Inc. | System and method for on-the-fly elimination of redundant data |
US7827168B2 (en) * | 2007-05-30 | 2010-11-02 | Red Hat, Inc. | Index clustering for full text search engines |
US7669023B2 (en) * | 2007-07-10 | 2010-02-23 | Hitachi, Ltd. | Power efficient storage with data de-duplication |
US8793226B1 (en) * | 2007-08-28 | 2014-07-29 | Netapp, Inc. | System and method for estimating duplicate data |
WO2009032712A2 (en) * | 2007-08-29 | 2009-03-12 | Nirvanix, Inc. | Method and system for moving requested files from one storage location to another |
US7822939B1 (en) * | 2007-09-25 | 2010-10-26 | Emc Corporation | Data de-duplication using thin provisioning |
US7870409B2 (en) * | 2007-09-26 | 2011-01-11 | Hitachi, Ltd. | Power efficient data storage with data de-duplication |
US8548953B2 (en) * | 2007-11-12 | 2013-10-01 | F5 Networks, Inc. | File deduplication using storage tiers |
US7870105B2 (en) * | 2007-11-20 | 2011-01-11 | Hitachi, Ltd. | Methods and apparatus for deduplication in storage system |
US7949622B2 (en) * | 2007-12-13 | 2011-05-24 | Yahoo! Inc. | System and method for generating a classifier model for classifying web content |
US8190835B1 (en) * | 2007-12-31 | 2012-05-29 | Emc Corporation | Global de-duplication in shared architectures |
US8135918B1 (en) * | 2007-12-31 | 2012-03-13 | Emc Corporation | Data de-duplication for iSCSI |
US7783604B1 (en) * | 2007-12-31 | 2010-08-24 | Emc Corporation | Data de-duplication and offsite SaaS backup and archiving |
US20090204636A1 (en) * | 2008-02-11 | 2009-08-13 | Microsoft Corporation | Multimodal object de-duplication |
US7962706B2 (en) * | 2008-02-14 | 2011-06-14 | Quantum Corporation | Methods and systems for improving read performance in data de-duplication storage |
US7814074B2 (en) * | 2008-03-14 | 2010-10-12 | International Business Machines Corporation | Method and system for assuring integrity of deduplicated data |
US7984022B2 (en) * | 2008-04-18 | 2011-07-19 | International Business Machines Corporation | Space recovery with storage management coupled with a deduplicating storage system |
US8346730B2 (en) * | 2008-04-25 | 2013-01-01 | Netapp. Inc. | Deduplication of data on disk devices based on a threshold number of sequential blocks |
US7908436B1 (en) * | 2008-04-25 | 2011-03-15 | Netapp, Inc. | Deduplication of data on disk devices using low-latency random read memory |
US7930306B2 (en) * | 2008-04-30 | 2011-04-19 | Msc Intellectual Properties B.V. | System and method for near and exact de-duplication of documents |
US8645333B2 (en) * | 2008-05-29 | 2014-02-04 | International Business Machines Corporation | Method and apparatus to minimize metadata in de-duplication |
US7996371B1 (en) * | 2008-06-10 | 2011-08-09 | Netapp, Inc. | Combining context-aware and context-independent data deduplication for optimal space savings |
US8682850B2 (en) * | 2008-06-11 | 2014-03-25 | International Business Machines Corporation | Method of enhancing de-duplication impact by preferential selection of master copy to be retained |
US8108353B2 (en) * | 2008-06-11 | 2012-01-31 | International Business Machines Corporation | Method and apparatus for block size optimization in de-duplication |
US8484162B2 (en) * | 2008-06-24 | 2013-07-09 | Commvault Systems, Inc. | De-duplication systems and methods for application-specific data |
US8335776B2 (en) * | 2008-07-02 | 2012-12-18 | Commvault Systems, Inc. | Distributed indexing system for data storage |
US8788466B2 (en) * | 2008-08-05 | 2014-07-22 | International Business Machines Corporation | Efficient transfer of deduplicated data |
US7814149B1 (en) * | 2008-09-29 | 2010-10-12 | Symantec Operating Corporation | Client side data deduplication |
US8495032B2 (en) * | 2008-10-01 | 2013-07-23 | International Business Machines Corporation | Policy based sharing of redundant data across storage pools in a deduplicating system |
CN102317938B (en) * | 2008-12-22 | 2014-07-30 | 谷歌公司 | Asynchronous distributed de-duplication for replicated content addressable storage clusters |
US8356017B2 (en) * | 2009-08-11 | 2013-01-15 | International Business Machines Corporation | Replication of deduplicated data |
US8868508B2 (en) * | 2010-02-09 | 2014-10-21 | Google Inc. | Storage of data in a distributed storage system |
US9646067B2 (en) * | 2013-05-14 | 2017-05-09 | Actifio, Inc. | Garbage collection predictions |
US9928248B2 (en) * | 2013-07-08 | 2018-03-27 | International Business Machines Corporation | Self-healing by hash-based deduplication |
US9817865B2 (en) * | 2015-12-07 | 2017-11-14 | International Business Machines Corporation | Direct lookup for identifying duplicate data in a data deduplication system |
-
2009
- 2009-12-22 CN CN200980156970.8A patent/CN102317938B/en active Active
- 2009-12-22 CN CN201410306908.5A patent/CN104166673B/en active Active
- 2009-12-22 BR BRPI0922990-6A patent/BRPI0922990B1/en active IP Right Grant
- 2009-12-22 EP EP09799831.4A patent/EP2368199B1/en active Active
- 2009-12-22 CA CA2747746A patent/CA2747746C/en active Active
- 2009-12-22 WO PCT/US2009/069234 patent/WO2010075407A1/en active Application Filing
- 2009-12-22 AU AU2009330073A patent/AU2009330073B2/en active Active
- 2009-12-22 DE DE202009019139.7U patent/DE202009019139U1/en not_active Expired - Lifetime
- 2009-12-22 JP JP2011542576A patent/JP5579195B2/en active Active
- 2009-12-22 US US12/644,693 patent/US8712974B2/en active Active
-
2014
- 2014-03-25 JP JP2014061617A patent/JP5902222B2/en active Active
- 2014-04-29 US US14/265,298 patent/US20140236888A1/en not_active Abandoned
-
2016
- 2016-01-13 US US14/995,171 patent/US10291699B2/en active Active
-
2019
- 2019-04-22 US US16/390,613 patent/US11943290B2/en active Active
Also Published As
Publication number | Publication date |
---|---|
EP2368199A1 (en) | 2011-09-28 |
US10291699B2 (en) | 2019-05-14 |
JP2012513640A (en) | 2012-06-14 |
CN102317938B (en) | 2014-07-30 |
CA2747746C (en) | 2015-08-11 |
WO2010075407A1 (en) | 2010-07-01 |
US20190268411A1 (en) | 2019-08-29 |
US20140236888A1 (en) | 2014-08-21 |
DE202009019139U1 (en) | 2017-01-20 |
JP2014139824A (en) | 2014-07-31 |
JP5579195B2 (en) | 2014-08-27 |
CA2747746A1 (en) | 2010-07-01 |
CN102317938A (en) | 2012-01-11 |
US20160134696A1 (en) | 2016-05-12 |
BRPI0922990A2 (en) | 2016-01-26 |
CN104166673A (en) | 2014-11-26 |
AU2009330073A1 (en) | 2011-07-07 |
EP2368199B1 (en) | 2018-10-31 |
US20100161554A1 (en) | 2010-06-24 |
US11943290B2 (en) | 2024-03-26 |
US8712974B2 (en) | 2014-04-29 |
CN104166673B (en) | 2017-09-19 |
AU2009330073B2 (en) | 2012-11-15 |
BRPI0922990B1 (en) | 2020-11-10 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
JP5902222B2 (en) | Computer-implemented method, distributed storage system, and computer-readable recording medium | |
JP5433074B2 (en) | Asynchronous distributed object upload for replicated content that can specify a storage cluster | |
JP5479490B2 (en) | Asynchronous distributed garbage collection for replicated storage clusters | |
Wang et al. | Deister: A light-weight autonomous block management in data-intensive file systems using deterministic declustering distribution | |
US20220197944A1 (en) | File metadata service | |
AU2013209349B2 (en) | Asynchronous distributed object uploading for replicated content addressable storage clusters | |
Pandey et al. | A review on google file system | |
KR20170116354A (en) | Variable Replication Method according to the Data Access Frequency in In-Memory DB |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
A977 | Report on retrieval |
Free format text: JAPANESE INTERMEDIATE CODE: A971007Effective date: 20141126 |
|
A131 | Notification of reasons for refusal |
Free format text: JAPANESE INTERMEDIATE CODE: A131Effective date: 20141209 |
|
A601 | Written request for extension of time |
Free format text: JAPANESE INTERMEDIATE CODE: A601Effective date: 20150306 |
|
A521 | Request for written amendment filed |
Free format text: JAPANESE INTERMEDIATE CODE: A523Effective date: 20150409 |
|
A131 | Notification of reasons for refusal |
Free format text: JAPANESE INTERMEDIATE CODE: A131Effective date: 20150908 |
|
A521 | Request for written amendment filed |
Free format text: JAPANESE INTERMEDIATE CODE: A523Effective date: 20151207 |
|
TRDD | Decision of grant or rejection written | ||
A01 | Written decision to grant a patent or to grant a registration (utility model) |
Free format text: JAPANESE INTERMEDIATE CODE: A01Effective date: 20160209 |
|
A61 | First payment of annual fees (during grant procedure) |
Free format text: JAPANESE INTERMEDIATE CODE: A61Effective date: 20160309 |
|
R150 | Certificate of patent or registration of utility model |
Ref document number: 5902222Country of ref document: JPFree format text: JAPANESE INTERMEDIATE CODE: R150 |
|
S533 | Written request for registration of change of name |
Free format text: JAPANESE INTERMEDIATE CODE: R313533 |
|
R350 | Written notification of registration of transfer |
Free format text: JAPANESE INTERMEDIATE CODE: R350 |
|
R250 | Receipt of annual fees |
Free format text: JAPANESE INTERMEDIATE CODE: R250 |
|
R250 | Receipt of annual fees |
Free format text: JAPANESE INTERMEDIATE CODE: R250 |
|
R250 | Receipt of annual fees |
Free format text: JAPANESE INTERMEDIATE CODE: R250 |
|
R250 | Receipt of annual fees |
Free format text: JAPANESE INTERMEDIATE CODE: R250 |
|
R250 | Receipt of annual fees |
Free format text: JAPANESE INTERMEDIATE CODE: R250 |
|
R250 | Receipt of annual fees |
Free format text: JAPANESE INTERMEDIATE CODE: R250 |
CN108139886A - For the multi-functional execution channel of image processor - Google Patents
For the multi-functional execution channel of image processor Download PDFInfo
- Publication number
- CN108139886A CN108139886A CN201680060253.5A CN201680060253A CN108139886A CN 108139886 A CN108139886 A CN 108139886A CN 201680060253 A CN201680060253 A CN 201680060253A CN 108139886 A CN108139886 A CN 108139886A
- Authority
- CN
- China
- Prior art keywords
- instruction
- alu
- logic units
- alu logic
- result
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 238000000034 method Methods 0.000 claims description 27
- 238000013461 design Methods 0.000 claims description 10
- 238000004364 calculation method Methods 0.000 claims description 5
- 230000015572 biosynthetic process Effects 0.000 claims 1
- 238000003786 synthesis reaction Methods 0.000 claims 1
- 230000006870 function Effects 0.000 description 15
- 238000012545 processing Methods 0.000 description 14
- 230000008569 process Effects 0.000 description 8
- 238000006073 displacement reaction Methods 0.000 description 7
- 238000005516 engineering process Methods 0.000 description 4
- 230000009471 action Effects 0.000 description 3
- 238000007726 management method Methods 0.000 description 3
- 238000012360 testing method Methods 0.000 description 3
- 230000008859 change Effects 0.000 description 2
- 238000004891 communication Methods 0.000 description 2
- 238000004590 computer program Methods 0.000 description 2
- 238000013500 data storage Methods 0.000 description 2
- 238000005538 encapsulation Methods 0.000 description 2
- 238000012546 transfer Methods 0.000 description 2
- 230000000007 visual effect Effects 0.000 description 2
- 230000006399 behavior Effects 0.000 description 1
- 230000001413 cellular effect Effects 0.000 description 1
- 230000000295 complement effect Effects 0.000 description 1
- 239000004020 conductor Substances 0.000 description 1
- 235000013399 edible fruits Nutrition 0.000 description 1
- 230000002708 enhancing effect Effects 0.000 description 1
- 238000004519 manufacturing process Methods 0.000 description 1
- 238000007620 mathematical function Methods 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 230000002093 peripheral effect Effects 0.000 description 1
- 230000009467 reduction Effects 0.000 description 1
- 238000009877 rendering Methods 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 238000010977 unit operation Methods 0.000 description 1
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F7/00—Methods or arrangements for processing data by operating upon the order or content of the data handled
- G06F7/38—Methods or arrangements for performing computations using exclusively denominational number representation, e.g. using binary, ternary, decimal representation
- G06F7/48—Methods or arrangements for performing computations using exclusively denominational number representation, e.g. using binary, ternary, decimal representation using non-contact-making devices, e.g. tube, solid state device; using unspecified devices
- G06F7/57—Arithmetic logic units [ALU], i.e. arrangements or devices for performing two or more of the operations covered by groups G06F7/483 – G06F7/556 or for performing logical operations
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F15/00—Digital computers in general; Data processing equipment in general
- G06F15/76—Architectures of general purpose stored program computers
- G06F15/80—Architectures of general purpose stored program computers comprising an array of processing units with common control, e.g. single instruction multiple data processors
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/30—Arrangements for executing machine instructions, e.g. instruction decode
- G06F9/30003—Arrangements for executing specific machine instructions
- G06F9/30007—Arrangements for executing specific machine instructions to perform operations on data operands
- G06F9/3001—Arithmetic instructions
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/30—Arrangements for executing machine instructions, e.g. instruction decode
- G06F9/30003—Arrangements for executing specific machine instructions
- G06F9/30007—Arrangements for executing specific machine instructions to perform operations on data operands
- G06F9/3001—Arithmetic instructions
- G06F9/30014—Arithmetic instructions with variable precision
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/30—Arrangements for executing machine instructions, e.g. instruction decode
- G06F9/38—Concurrent instruction execution, e.g. pipeline, look ahead
- G06F9/3885—Concurrent instruction execution, e.g. pipeline, look ahead using a plurality of independent parallel functional units
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/30—Arrangements for executing machine instructions, e.g. instruction decode
- G06F9/38—Concurrent instruction execution, e.g. pipeline, look ahead
- G06F9/3885—Concurrent instruction execution, e.g. pipeline, look ahead using a plurality of independent parallel functional units
- G06F9/3887—Concurrent instruction execution, e.g. pipeline, look ahead using a plurality of independent parallel functional units controlled by a single instruction for multiple data lanes [SIMD]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/30—Arrangements for executing machine instructions, e.g. instruction decode
- G06F9/38—Concurrent instruction execution, e.g. pipeline, look ahead
- G06F9/3885—Concurrent instruction execution, e.g. pipeline, look ahead using a plurality of independent parallel functional units
- G06F9/3893—Concurrent instruction execution, e.g. pipeline, look ahead using a plurality of independent parallel functional units controlled in tandem, e.g. multiplier-accumulator
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/30—Arrangements for executing machine instructions, e.g. instruction decode
- G06F9/38—Concurrent instruction execution, e.g. pipeline, look ahead
- G06F9/3877—Concurrent instruction execution, e.g. pipeline, look ahead using a slave processor, e.g. coprocessor
Abstract
A kind of equipment including execution unit is described, the execution unit has multiply-add computing unit, the first ALU logic units and the 2nd ALU logic units.The first instruction, the second instruction, third instructs and the 4th instruction for performing for the ALU units.First instruction is multiply-add instruction.Second instruction for performing parallel ALU operations in the case of operation to generate the corresponding output results of difference of second instruction simultaneously in the first and second ALU logic units.Execution sequence ALU operations are with the output result of the determining third instruction in the case that the third instruction carries out operation for another output of one in the ALU logic units in the ALU logic units.4th instruction is for performing iterative division operation, wherein the first ALU logic units and the 2nd ALU logic units carry out operation to determine the first and second result of division digit values.
Description
Technical field
The technical field of the present invention relates generally to computational science, and more particularly relate to the more of image processor
Function performs channel.
Background technology
Image procossing generally comprises the processing of the pixel value to being organized into array.Herein, the two-dimentional battle array spatially organized
Row capture images two-dimensional nature (additional dimension can include time (for example, two-dimensional image sequence) and data type (for example,
Color).In a typical scenario, into the pixel value of array by having generated the frame sequence of the image of still image or capture movement
The camera of row provides.Traditional images processor be generally fall into two it is extreme in either side.
The first extreme image processing tasks that perform are used as in general processor or similar general processor (for example, having
The general processor of directed quantity instruction enhancing) on the software program that performs.Although the first extreme highly versatile that generally provides should
With Software Development Platform, but the use of fine-grained data structure that its pair is combined with associated expense is (for example, instruction fetch is conciliate
Code, the outer data of on piece and piece disposition, speculate perform) eventually lead to during program code is performed the consumption of per unit data more
Energy.
Fixed function hard-wired circuitry opposite extreme is applied to much bigger data block by second.Using directly should
The energy of per unit data is largely reduced for larger (opposite with the fine granularity) data block of the circuit of custom design
Consumption.However, typically resulting in processor using the fixed function circuit system of custom design is able to carry out limited set of tasks.Together
Sample, second extreme extensive general programmed environment of shortage (extremely associated with first).
The technology for providing the power efficiency of the raising of the applied software development chance and per unit data of highly versatile is put down
Platform is still the solution it is expected but lacked.
Invention content
A kind of equipment including execution unit is described, which has multiply-add computing unit, the first ALU logic lists
Member and the 2nd ALU logic units.The first instruction, the second instruction, third instructs and the 4th instruction for performing for ALU units.The
One instruction is multiply-add instruction.Second instruction is in the situation of the first ALU logic units and the operation simultaneously of the 2nd ALU logic units
It is lower to perform parallel ALU operations to generate the corresponding output result of the difference of the second instruction.Third is instructed in ALU logic units
Another a output in ALU logic units performed in the case of operation sequence ALU operations to determine the
The output result of three instructions.4th instruction is for performing iterative division operation, wherein the first ALU logic units and the 2nd ALU are patrolled
Operation is with quotient place value determining during iteration with collecting units alternately.
Describe a kind of equipment of the execution unit including image processor.ALU units include performing the first instruction
Device, this first instruction be multiply-add instruction.ALU units include the device for performing the second instruction, perform second instruction
Parallel ALU operations are performed in the case of being included in the operation simultaneously of the first ALU logic units and the 2nd ALU logic units to generate the
The corresponding output result of difference of two instructions.ALU units include the device for performing third instruction, perform third instruction and include
Another the output in ALU logic units in ALU logic units carries out performing sequence in the case of operation
ALU operations are with the output result of determining third instruction.ALU units include the device for performing the 4th instruction, perform the 4th
Instruction includes performing iterative division operation, wherein the first ALU logic units and the 2nd ALU logic units carry out operation with determining the
One and the second numerical digit result digit value.
Description of the drawings
Illustrate the embodiment of the present invention using the following description and drawings.In the accompanying drawings：
Fig. 1 shows the template processor component of image processor；
Fig. 2 shows perform channel and its example coupled with two-dimensional shift register；
Fig. 3 shows the relative delay of function that the embodiment by the execution channel of Fig. 2 performs；
Fig. 4 shows the multi-functional design for performing channel；
Fig. 5 a and the circuit system and method Figure 5b shows that execution iterative division operation；
Fig. 6 shows the method for performing channel and performing by being described about Fig. 3 to Fig. 5 a, b；
Fig. 7 shows the embodiment of computing system.
Specific embodiment
Fig. 1 shows the embodiment of template (stencil) processor architecture 100.The mould that following discussion will become apparent from description
Sheet processor is optimised or is otherwise designed to the processor of the template of processing image data.Can by one or
Multiple template processor is integrated into image processor, which performs based on template the image handled by processor
Task.As seen in Fig. 1, template processor includes Data Computation Unit 101, scalar processor 102 and associated deposits
Reservoir 103 and I/O units 104.Data Computation Unit 101 include perform channel array 105, two-dimensional shift array structure 106,
The associated individual random access memory 107 with the specific row or column of the array.
I/O units 104 are responsible for the input " list " of the image data received being loaded into Data Computation Unit 101 simultaneously
And store the output data list of the Data Computation Unit outside template processor.In one embodiment, by list number
According to being loaded into the row/column that the list that will be received is needed to be parsed into image data in Data Computation Unit 101, and by picture number
According to row/column be loaded into perform channel array row/column two-dimensional shift register structure 106 or corresponding random access memory
It (is more fully hereinafter described) in device 107.
If initially list is loaded into memory 107, each execution channel in channel array 105 is performed then
Form data can be loaded into from random access memory 107 in two-dimensional shift register structure 106 in appropriate circumstances
(for example, being instructed as the loading just before operation is carried out to form data).It completes data form being loaded into deposit
In device structure 106 (either directly from form builder still directly from memory 107) after, perform channel array 105
Perform the data or the number by completion that channel carries out data operation and finally " write-back " is completed outside template processor
According to being written back into random access memory 107.If I/O units 104 obtain data with shape from random access memory 107 later
Into output list, the output list is then written outside template processor.
Scalar processor 102 includes cyclelog 109, which reads template from command memory 103
The instruction of the program code of processor and the execution channel publication instruction into execution channel array 105.In one embodiment
In, all execution channels into array 105 broadcast single identical instruction, to reach the class from Data Computation Unit 101
Like the behavior of SIMD.In one embodiment, from scalar memory 103 read and to perform channel array 105 execution
The instruction format of the instruction of channel publication includes very long instruction word (VLIW) type format, very long instruction word (VLIW) the type lattice
Formula includes often instructing more than one command code.In another embodiment, VLIW forms include guiding by each execution channel
ALU perform mathematical function ALU operation code and storage operation code (the storage operation code guide it is specific execution channel or
Perform the storage operation of channel set).
Term " perform channel " refers to the set for one or more execution unit for being able to carry out instruction (for example, can be with
The logic circuitry of execute instruction).However, it in various embodiments, performs channel and can comprise more than execution unit in itself
More similar processors function.For example, other than one or more execution unit, performing channel can also include pair
Logic circuitry that the instruction received is decoded or in the case of the design of more similar MIMD, performs channel
It can include the logic circuitry for obtaining instruction and being decoded to instruction.Relative to the method for similar MIMD, although this
Text largely describes centralized program control method, but can be realized more in each alternative embodiment
Distributed method (e.g., including each program code and cyclelog performed in channel of array 105).
Perform channel array 105, cyclelog 109 and two-dimensional shift register structure 106 be combined as it is in extensive range
Programmable functions provide and be suitable for/can configure hardware platform extensively.For example, it is contemplated that it is able to carry out respectively to each execution channel
It plants function and the input image data close to any output array position can be easily accessed, applied software development person can
Kernel with various different function abilities and dimension (for example, template size) is programmed.
During operation, due to performing channel array 105 and two-dimensional shift register 106, the multiple template of image can be with
Concurrent operation (as understood in the art, the continuous NxM NxMxC pixel groups being usually embodied as template in image
(wherein, N can be equal to M)).Herein, it is performed for example, each performing channel for there is specific template valency in image data
The operation that the data of value are handled, while two-dimensional shift array shifts its data in order by the data transfer of each template
To register space, which is coupled to the execution channel for being carrying out template of the task.Note that two-dimensional shift is deposited
Device 106 can also have than perform the size of 105 bigger of channel array (if for example, perform the size of channel array as XxX,
Then the size of two-dimensional shift register 106 can be YxY, wherein, Y>X).Herein, in order to be handled completely template, work as mould
When the left hand edge of plate is being performed channel processing, " release " is performed channel array 105 by the data in shift register 106
Right hand edge.The extra dimension of shift register 106 can bear the data released from the edge for performing channel array.
Other than serving as by the data storage of the image data of 105 operation of execution channel array, random access memory
107 can also preserve one or more look-up table.It in various embodiments, can also be in scalar memory 103 by one
Or multiple scalar look-up table instantiations.
Scalar lookup, which is related to the identical data of the identical look-up table from same index being transferred to, performs channel array 105
Interior each execution channel.In various embodiments, above-described VLIW instruction form, which is extended to, further includes scalar operations
Code, the scalar operations code will be directed to by the search operation that scalar processor performs in scalar look-up table.Specified confession and command code
The index being used together can be immediate operand or can be obtained from some other data storage locations.Anyway, exist
In one embodiment, the lookup of the scalar look-up table in scalar memory was related in essence in identical phase clock cycle
Between to all execution channels performed in channel array 105 broadcast identical data value.
Fig. 2 shows to performing the unit packet (unit cell) of the ALU execution units 205 in channel 201 and corresponding to local
The more detailed description of shift register structure.In one embodiment, perform channel and with perform channel array in it is each
The associated register space in position passes through the circuit system example that will see in Fig. 2 at each node for performing channel array
Change to realize.As seen in Figure 2, unit packet (unit cell) is including being coupled to register file (register file)
202 execution channel 201, the register file 202 are made of four register R1 to R4.It, can be from posting during any period
ALU execution units are read in any one of storage R1 to R4, and will be in ALU execution units write-in register R1 to R4
Any one.
In one embodiment, two-dimensional shift register structure is realized by following：Permit posting during signal period
The content of any one of storage R1 to R3 (only one) is moved " going out " posting to its neighbour by output multi-channel multiplexer 203
It one in storage heap and is replaced by input multiplexer 204 with from corresponding one content for moving " entering " in its neighbour
Change the content of any one of register R1 to R3 (only one) so that the displacement between neighbours be in the same direction (for example,
It is all execution channels to move to left, it is all execution channel move right).In various embodiments, it performs channel and performs it in itself certainly
The corresponding shift instruction of body is to realize the extensive SIMD two-dimensional shifts of shift register content.Although identical register makes in it
It may be common to hold the content for removing and moving into same period to replace its content, but multiplexer is arranged
203rd, 204 permit the different displacement sources during same period in identical register file and shifted target register.
As described in Fig. 2, it is noted that during shift sequence, perform channel and be moved to content from its register file 202
Its is left and right, upper (top) and under each in (bottom) neighbours.With reference to identical shift sequence, channel is performed also by
Specific one neighbour held from its left and right, upper and lower neighbour are moved into its register file.Again, target and immigration are removed
It source should be consistent with all identical direction of displacement for performing channel (if for example, removed towards right neighbours, immigration should come from
Left neighbours).
It is shifted although in one embodiment, each cycle often performs channel and only permits the content of a register, its
The content that its embodiment can permit more than one register is moved into/removes.It is if for example, more by what is seen in fig. 2
Second example of path multiplexer circuit system 203,204 is incorporated in the design of Fig. 2, then can removal/shifting during same period
Enter the content of two registers.Certainly, in the embodiment for only permitting that the content of a register is shifted in each cycle, by disappearing
More rnultidock cycle is consumed for being shifted between mathematical operation, can carry out coming from multiple registers between mathematical operation
Displacement (for example, by consume two between mathematics op (operation) displacement op, two deposits can be shifted between mathematics op
The content of device).
If the register file for performing channel is removed during shift sequence is no more than full content, note that each
The content for performing the register of the non-removal of channel is held in place and (not shifting).Equally, it is unused to move into any of content replacement
Non- displacement content is maintained at across shift cycle and performs channel local.Memory execution unit --- for convenience of description in fig. 2
Be not shown --- can also exist on it is each execution channel 201 in, with from perform channel array in execution channel row and/
Or row associated RAM space loading data/to it store data.Herein, memory cell serves as standard M
Unit, this is because be commonly used for loading can not from perform channel itself register space loading data/storage can not
The data stored to the register space for performing channel itself.In various embodiments, the primary operational of M units be will from this
In the data write-in memory of ground register, and local register is written from memory read data and by the data.
Relative to the ISA operation code that the ALU units 205 of hardware execution paths 201 are supported, in various embodiments, ALU
The mathematical operations code that unit 205 is supported can include any following ALU operations：Add (ADD), subtract (SUB), mobile (MOV), multiply
(MUL), multiply-add (MAD), absolute value (ABS), except (DIV), move to left (SHL), move to right (SHR), return to minimum value or maximum value
(MIN/MAX), select (SEL), logical AND (AND), logic or (OR), logic exclusive or (XOR), leading zero count (CLZ or
) and logical complement (NOT) LZC.ALU units 205 or the implementation of its part is described in further detail below with reference to Fig. 3 to Fig. 5
Example.As described above, memory reference instruction can be performed by execution channel 201 to be obtained from its associated random access memory
Data/to its associated random access memory store data.In addition, the support displacement op of hardware execution paths 201 instructions (right,
It is left, upper and lower) in two-dimensional shift register structure internal shift data.As described above, program control instruction is mainly handled by template
The scalar processor of device performs.
Fig. 3 shows the elapsed time figure of the execution unit or its part as described above for performing channel.Specifically, scheme
3 depict can be by each time quantum consumed in multiple and different instructions that execution unit performs.As seen in figure 3
, execution unit can perform：1) multiply two parallel overall withs (FW) of register file or four half-breadth (HW) ALU fortune
Calculate 302；3) double wide (2XW) ALU operations 303；4) form is the FUSED operations 304 of ((C op D) op B)；And 5) iteration is removed
Method (DIV) operation 306.
As seen in Figure 3, it is consumed in each instruction that MAD operations 301 itself can be performed in execution unit most
Time.Equally, design viewpoint be in addition to perform MAD operations logic other than, can also using multiple ALU logic units come
Enhance execution unit, for example to perform multiple ALU operations (such as, operation 302) parallel and/or serially perform multiple ALU operations
(such as, operation 304).
Fig. 4 shows the embodiment of the design of the execution unit 405 for the different instruction that can support to be illustrated in Fig. 3.Such as exist
See in Fig. 4, execution unit 405 includes the first ALU logic units 401 and the 2nd ALU logic units 402 and multiply-add logic
Unit 403.Input from register file is marked as A, B, C, D, and the output of write-back registers heap is marked as X and Y.It is logical
With execution unit 405 is 4 input ports, 2 output port execution units.
In one embodiment, multiply-add logic unit 403 performs complete multiply-add instruction.That is, multiply-add logic unit 403 performs
Function (A*B)+(C, D), wherein, A is overall with input operand, and B is overall with operand, and (C, D) is to form double wide summations
The cascade of two overall with operands of item.For example, if overall with is corresponding with 16, A is 16, and B is 16, and is summed
Item is 32.As understood in the art, two the multiply-add of overall with value can generate double wide results.Equally, across X, Y output terminal
Mouthful write-in MAD operations as a result, wherein, for example, X includes the top half of result, and Y includes the lower half portion of result.
In another embodiment, multiplicaton addition unit 403 supports that half-breadth is multiply-add.It herein, will for example, the lower half portion of A is used as the first multiplicand
The lower half portion of B is used as the second multiplicand, and by any one in C or D (but not being cascade) as addend.
It is mentioned as discussed above concerning Fig. 3, the times more more than typical ALU logic units can be consumed by performing MAD operations.Together
When, execution unit includes a pair of ALU logic units 401,402, can not only realize the parallel execution of ALU operations, and can also
Realization sequence ALU operations.
Herein, with reference to Fig. 3 to Fig. 4, the first overall with is performed about double parallel FW operations 302, the first ALU logic units 401
ALU operations (A op B), while the 2nd ALU and the first overall with ALU operations perform the second overall with ALU operations (C op D) parallel.
Again, in one embodiment, overall with operation is corresponding with 16.Herein, the first ALU logic units 401 are by (A op B)
As a result in write-in register X, while register Y is written in the result of (C op D) by the 2nd ALU logic units 402.
In one embodiment, it is parallel complete including specified pair for performing the instruction format of double parallel overall with ALU operations 302
The command code and destination register of wide operation.In another embodiment, other than specified double parallel overall with operations, command code is also
Specify one or two ALU operations.If command code only specifies an operation, two ALU logic units 401,402 all will
Perform identical operation.In contrast, if command code specifies the first and second different ALU operations, the first ALU logic lists
Member 401 performs an operation in operation, and the 2nd ALU logic units 402 perform the second operation in operation.
About half-breadth (HW) feature of operation 302, four half-breadth ALU operations are performed parallel.Herein, A, B, C and D are inputted
In each be understood as that include two individual input operands.That is, for example, the top half of A is grasped with the first input
It counts corresponding, the lower half portion of A is corresponding with the second input operand, and the top half of B is opposite with third input operand
Should, the lower half portion of B is corresponding with the 4th input operand etc..
Equally, the two ALU operations of disposition parallel of ALU logic units 401, and the disposition two parallel of ALU logic units 402
ALU operations.Therefore, during execution, four all half-breadth operations are performed parallel.At the end of operation 302, ALU logic lists
Two half-breadth results are written in register X member 401, and register Y is written in two half-breadth results by ALU logic units 402
In.Equally, there are four individual half-breadth results in register X and Y.
In one embodiment, instruction format, which specifies not only, will perform parallel half-breadth operation, but also specify which to be performed
A little ALU operations.In various embodiments, instruction format can specify four all operations all identical and only specified one is transported
It calculates and/or four all operations can be specified all different and specify four nonidentity operations.In the latter case, alternative
Identical operation is realized in ground in order to be directed to four all operations, and instruction format can specify four identical operations.These instruction lattice
The various combinations of formula method are also possible.
About double wide ALU operations 303 of Fig. 3, in one embodiment, execution unit 405 performs (A, C) op (B, D),
In, (A, C) is the cascade for the input A and C to form first pair of wide input operand, and (B, D) is to form second pair of wide input
The cascade of the input B and D of operand.Herein, carry term can be transferred to along carry line 404 from the first ALU logic units 401
2nd ALU logic units 402 with by operation from overall with forward carry to double wide.
That is, in one embodiment, the rank (lowered of C and the D reductions for representing two double wide input operands
Ordered half part).2nd ALU logic units 402 perform two lower half portion specified operation (for example, ADD), and
The result generated is corresponding with the lower half portion of entire double wide results.Equally, by the knot from the 2nd ALU logic units 402
In fruit write-in register Y.Carry term can be generated to the operation of lower half portion, the carry term carry to the first ALU logic units
401, the first ALU logic units 401 continue the operation of two corresponding top half A and C of input operand.From first
The result of ALU logic units 401 is corresponding with the top half of the whole result in write-in output register X.Because pass through
One ALU logic units 401 are to the operation that top half carries out in the first ALU logic units 401 from the 2nd ALU logic units 402
Possibly it can not start before receiving carry term, therefore the operation of ALU logic units 402,401 is sequence rather than parallel.
Equally, as seen in Figure 3, double wide operations 303 can spend the time for being approximately twice parallel complete/half-breadth operation 302.
Even so, because MAD operations 301 can consume than two continuous ALU logic unit operations more times,
Therefore machine can be built around execution unit 405, which can attempt to be able to carry out as more as possible
Function be inserted into the period that its longest propagation delay operation is consumed.Equally, in one embodiment, execution unit 405
Cycle time and MAD instruction 301 the execution time it is corresponding.In one embodiment, the instruction format of double wide operations is not only
The specified operation to be performed, but also specified operation is double wide operations.
About FUSED operations 304, execution unit 405 performs operation (C op D) op B.Herein, as discussed above
Double wide ALU operations 303, because the second operation carries out operation, therefore double ALU logic units 401,402 to the result of the first operation
Sequential operation.Herein, the 2nd ALU logic units 402 input C and D to overall with and perform initial operation.As by the 2nd ALU logics
Replacement in 402 result write-in result register space is more by the result of the 2nd ALU logics 402 via multiplexer 406
Road is multiplexed into the input of the first ALU logic units 401.Then, the first ALU logic units 401 perform the second operation and will
As a result in write-in register X.
In another embodiment, half-breadth FUSED operations can also be performed.Herein, in addition to merely with the half of input operand
Except part, operation is all carried out as described above.That is, for example, when calculating (C op D) op B, using only the lower half of C
Divide the lower half portion with D to determine the half-breadth result of the first operation.Then, it is only used together with the half-breadth result of the first operation
The lower half portion of B performs the second operation.Using result as in half width values write-in register X.Further, it can hold parallel
Two half-breadth FUSED operations of row.Herein, operation is carried out at the same time as described above with identity logic operation, but for operand
Top half.The result is that the two half-unit point with the value in write-in register X.
In one embodiment, the instruction format of FUSED operations specifies FUSED operations to be performed, and specified two fortune
It calculates.If performing identical operation twice, in one embodiment, the only specified operation of instruction is primary or specified operation twice.
In another embodiment, other than specified FUSED operations and the operation to be performed, instruction format, which can further specify that, to be held
The operation of row overall with or half-breadth operation.
The operation 306 of Fig. 3 illustrates that iterative division operation can also be performed by execution unit.Specifically, following article is more detailed
What ground was explained, in various embodiments, both ALU logic units 401,402 are joined to concurrent collaborative during iterative division operation
With.
Fig. 5 a and Fig. 5 b are related to performing the embodiment that the iterative division of Fig. 3 instructs 306.Fig. 5 a, which are shown, to be added to
The execution unit circuit system 405 of Fig. 4 enables to perform the additional circuitry of iterative division instruction (in addition to being understood to
Except the ALU logic units 501,502 of the identical ALU logic units 401,402 of Fig. 4).Figure 5b shows that removed in execution iteration
The embodiment of micro- Sequence Operation Theory of execution unit during method instruction.Such as will be by following discussion more clearly, the single of instruction
Execution substantially performs iteration twice, and iteration is similar to the atomic action (atomic act) of long division twice for this, wherein, it is intended to
With the leading digit of (value is divided into) molecule divided by (value is divided into molecule) divisor.
For simplicity, describing 16 divisions, (this introduction will be extended to different in width by those of ordinary skill
Embodiment).Using the embodiment described herein for performing two long division atomic actions, performed using eight sequences of instruction
16 molecules are removed completely with 16 divisors.That is, each atom long division action and next (next) significance bit of molecule
Processing it is corresponding.Two such significance bits are handled during the single of instruction performs.Therefore, in order to molecule
All positions are handled, and instruct eight sequences is needed to perform to perform complete division completely.The output of first instruction is write
Enter register file and the input as next subsequent instructions.
With reference to Fig. 5 a, molecule input is provided in B inputs, and molecule input is presented in D inputs.Again, in this public affairs
In opening, both B and D input operands are all 16.Cascade A, B as A and B input operands (A operands are also 16)
" encapsulation " 32 data structures " PACK " primary data structure of complete division process can be considered as.As initially
It is numerator value that condition A, which is arranged to the character string of 16 zero (000 ... 0) and B,.
With reference to Fig. 5 a and Fig. 5 b, during first micro- sequence, perform moving to left for PACK data structures and be known as PACK to create
Most significant word (" PACK msw ") data structure A [14:0], B [15].Then by the 2nd ALU logic units 502 from
Divisor D (511) is subtracted in PACK msw.The long division of leading digit of the operation with divisor to be initially divided into molecule is corresponding.
Note that in one embodiment, ALU logic units 501,502 are actually three input ALU rather than as proposed in Figure 4
Two input ALU (retaining third input for divisor D for being iterated division arithmetic).
Then different data handling procedures is followed according to the symbol 512 of the result of subtraction 511.Importantly, the first quotient
As a result position (that is, first of result of division) is stage by stage so that the second of Y output ports 509 (" NEXT B [1] ") is written
To least significant bit.If the result of subtraction is negative, quotient's result position B [1] settings 513 are a0.If the result of subtraction is just,
Then quotient's result position B [1] settings 514 are a1.The setting of this is corresponding with the process in long division, wherein, by checking and verify divisor
Whether value can be divided into the first numerical digit of molecule to determine the first numerical digit of quotient's result.
In addition, it makes two different data structures and is presented to the (multiplexer of multiplexer 506
506 can be the multiplexer identical with the multiplexer of Fig. 4 406) respective input mouth (" 1 ", " 2 ").First number
According to structure and Pack msw (A [13:0], B [15], B [14]) move to left corresponding and be present in multiplexer 506
It inputs at 1.The process that the data structure is created with long division is corresponding, wherein, if divisor is not divided into the effective neighbours of highest,
Next numerical digit of molecule is then attached to the effective neighbours of its highest.
Second making data structure and the subtraction just performed by the 2nd ALU logic units 502 for being added with a B [13]
511 result is moved to left at the second input (" 2 ") that is corresponding and being present in multiplexer 506.The data structure
Create corresponding with the situation of long division, divisor is divided into the first numerical digit of molecule under the situation, and the molecule is by next divisor
It is established as the result of the first numerical digit of molecule and the difference of the multiple of divisor.
Then, according to by perform subtraction of the 2nd ALU logic units 502 the result is that generate positive result or negative test,
First data structure or the second data structure are selected by multiplexer 506.If subtraction produces negative test (negative test
The divisor of next significant digit with that can not be divided into molecule is corresponding), then select the first data structure (513).If subtract
Method produces positive result (divisor of next significant digit of the positive result with that can be divided into molecule is corresponding), then selects
Two data structures (514).
The new highest that the output of multiplexer 506 is interpreted as to PACK data structures (new PACK msw) now is effective
Next value in word and the long division sequence with to attempt divisor being divided into is corresponding.Equally, the first ALU logic units
501 subtract divisor D (515) from new PACK msw values.According to the symbol of the subtraction result from the first ALU 501, Y outputs
The least significant bit 510 of B [0] is stage by stage to be write as a 1 or a 0 and represent next in quotient's result 517,518
Numerical digit.
According to the symbol (516) of the subtraction 515 of the first ALU logic units, the second multiplexer 508 is in the first data knot
It is selected between structure and the second data structure.The first data structure presented at the input " 1 " of the second multiplexer 508
It is corresponding with new PACK msw values.The second data structure presented at the input " 2 " of the second multiplexer 508 with by the
The result for the subtraction that one ALU logic units 501 perform is corresponding.According to the result of subtraction 515 performed by the first ALU 501
Symbol selects which of two data structures.If the result of subtraction is negative, multiplexer selection new PACK
Msw values 517.If the result of subtraction is just, multiplexer selects new PACK msw-D values 518.
The output of second multiplexer 508 is corresponding with exporting the NEXT A values in write-in register file from X.It is defeated in Y
Go out (B [15:0] value presented at) forms at the leading edge for the B operand for subtracting two most significant bit, two highests
Significance bit is by (the B [13 of iteration twice that has just performed:0] it) consumes.By these remainder positions of B and two quotients being newly calculated
The cascade of position result is written as new B operand NEXT B in register file.For next iteration, previous instruction will be come from
X output read in A operands, and will from the Y of previous instruction export read in B operand.The process and then repetition, until
(eight sequences for consuming instruction are performed in 16 B operands until handling all numerical digits of original B operand
In the case of, which repeats again).At the end of all iteration, final quotient is exported from Y in write-in register file, and
Any remainder will be indicated as exporting the NEXT A values in write-in register file from X.
Fig. 6 shows the embodiment of the method performed by above-mentioned ALU units.As seen in Figure 6, method including the use of
The ALU units of image processor perform following operation.The first instruction is performed, which is multiply-add instruction 601.Perform second
Instruction, second instruction perform parallel in the case of being included in the first ALU logic units and the operation simultaneously of the 2nd ALU logic units
ALU operations are to generate the different corresponding output results of the second instruction 602.Third instruction is performed, third instruction includes：It performs
Another the output in ALU logic units in ALU logic units carries out the sequence ALU operations of operation to determine
The output result of third instruction 603.The 4th instruction is performed, the 4th instruction includes performing iterative division operation, wherein the first ALU
Logic unit and the 2nd ALU logic units carry out operation to determine the first result of division numerical digit and the second result of division digit value
604。
It is necessary to note that above-mentioned each image processor architecture feature is not necessarily limited to traditional image procossing,
And therefore, can be applied to may (or may not) so that the other application that image processor is characterized again.Example
Such as, with to actual camera image handle relatively, if when creating and/or generating and/or rendering animation using above-mentioned each
Any one of a image processor architecture feature, then image processor can be characterized as graphics processing unit.It is in addition, above-mentioned
Graphics processor architectural features can be applied to other technology applications, such as video processing, visual processes, image identification and machine
Study.Apply in this manner, image processor can with (for example, as the CPU of computing system or as computing system
CPU a part) more general processor integrates (for example, as coprocessor) or can be in computing system
Free-standing processor.
Hardware design embodiment discussed above be can be embodied in semiconductor chip and/or be embodied as to finally for half
The description of the circuit design of conductor manufacturing process.In the latter case, such circuit description can be taken (for example, VHDL
Or Verilog) description of Method at Register Transfer Level (RTL) circuit, gate level circuit description, transistor level circuitry description or mask
Description or the form of their various combinations.Circuit description is commonly implemented in computer readable storage medium (such as, CD-
ROM or other types of memory technology) on.
It will recognize from foregoing character, image processor as described above can be embodied in the hardware in computer system
In (for example, one of system on chip (SOC) of the handheld apparatus of data as camera of the processing from handheld apparatus
Point).In the case where image processor is implemented as hardware circuit, it is noted that can directly be received from camera by image processor
The image data handled.Herein, image processor can be a part for discrete camera or the meter with integrated camera
A part for calculation system.In the latter case, figure can be received directly from camera or from the system storage of computing system
As data (for example, its image data is sent to system storage rather than is sent to image processor by camera).Also to note
Meaning, most of features described in foregoing character can be adapted for graphics processor unit, and (graphics processor unit renders
Animation).
Fig. 7 provides the exemplary description of computing system.Many components of calculation as described below system are suitable for having
The computing system of integrated camera and associated image processor is (for example, hand-held device, such as smart phone or tablet calculate
Machine).Those of ordinary skill in the art will easily be described therebetween.
As seen in Figure 7, basic calculating system can include central processing unit 701 (for example, the central processing list
Member 701 can include the multiple general procedure core 715_1 being arranged on multi-core processor or application processor to 715_N and master
Memory Controller 717), system storage 702, display 703 (for example, touch screen, tablet), local wired point-to-point link
(for example, USB) interface 704, each network I/O functions 705 (such as, Ethernet interface and/or cellular modem subsystem
System), WLAN (for example, WiFi) interface 706, wireless point-to-point link (for example, bluetooth) interface 707 and global location
System interface 708, each sensor 709_1 to 709_N, one or more camera 710, battery 711, power management control are single
Member 712, loud speaker and microphone 713 and audio encoder/decoder 714.
Application processor or multi-core processor 750 can include one or more general procedure in its CPU 701
Core 715, one or more graphics processing unit 716, memory management functions 717 (for example, Memory Controller), I/O controls
Function 718 processed and image processing unit 719.General procedure core 715 usually performs the operating system of computing system and using soft
Part.Graphics processing unit 716 usually performs graphic with for example, the figure that generation is presented on display 703 is believed
Breath.Memory control function 717 docks that data/be read from counting are written to from system storage 702 with system storage 702
According to.The power consumption of 712 usual control system 700 of power supply management control unit.
It can be realized at image according to any image processing unit embodiment being described in detail in foregoing character above
Manage unit 719.As an alternative or in combination, IPU 719 can be used as its coprocessor coupled in GPU 716 and GPU 701
Any one or both.In addition, in various embodiments, can with any image processor feature of above-detailed come
Realize GPU716.
Relative to entire computing system, touch-screen display 703, communication interface 704 to 707, GPS interface 708, sensor
709th, each in camera 710 and speaker/microphone codec 713,714 can be considered various forms of I/O
(input and/or output), in the case that suitably, the entire computing system further include imcorporating peripherals (for example, one or
Multiple cameras 710).According to embodiment, each I/O components in these I/O components can be integrated in application processor/multinuclear
It can either be located at except tube core (die) or outside the encapsulation of application processor/multi-core processor 750 on processor 750.
In the embodiment of one or more camera 710 including depth camera, the depth camera can measure camera with
The depth between object in its visual field.Application processor either other processors universal cpu kernel (or with perform
Other functional blocks of the instruction execution pipeline of program code) on the application software that performs, operating system software, device driver it is soft
Part, and/or firmware can perform any of the above described function.
The embodiment of the present invention can include each process as stated.These processes, which may be embodied as machine, to be held
Row instruction.These instructions can be used general processor or application specific processor to be caused to perform particular procedure.It as an alternative, can be with
By the specific hardware components comprising the firmware hardwired logic for implementation procedure or by programmed computer components and custom hardware
Any combinations of component perform these processes.
The element of the present invention can also be provided as storing the machine readable media of machine-executable instruction.Machine can
Read medium can include but is not limited to, floppy disk, CD, CD-ROM and magneto-optic disk, FLASH memory, ROM, RAM, EPROM,
EEPROM, magnetic card either light-card or be suitable for store e-command propagation medium or other types of medium/machine can
Read medium.For example, the present invention can be downloaded as computer program, it can be via communication link (for example, modem
Either network connection) by being embodied as the data-signal of carrier wave or other propagation mediums by the computer program from remote computation
Machine (for example, server) is transmitted to requesting computer (for example, client).
In the foregoing specification, the present invention is described with reference to the certain exemplary embodiments of the present invention.However, it is aobvious and
It is clear to, the situation of the wider range of spirit and scope of the present invention that can be illustrated in not departing from such as following claims
Under it is carry out various modifications and changed.Therefore, the description and the appended drawings are considered illustrative rather than restrictive.
Claims (23)
1. a kind of equipment, including：
Execution unit, the execution unit include multiply-add computing unit, the first ALU logic units and the 2nd ALU logic units,
The execution unit is used to perform：
First instruction, first instruction is multiply-add instruction；
Second instruction, second instruction is in the first ALU logic units and the same luck of the 2nd ALU logic units
Parallel ALU operations are performed in the case of calculation to generate the corresponding output result of difference of second instruction；
Third instructs, and the third instruction is for one in the ALU logic units according in the ALU logic units
Execution sequence ALU operations are with the output result of the determining third instruction in the case that another output carries out operation；
4th instruction, the 4th instruction is for performing iterative division operation, wherein the first ALU logic units and described the
Two ALU logic units carry out operation to determine the first result of division digit value and the second result of division digit value.
2. equipment according to claim 1, wherein, the execution unit further performs the 5th instruction, the five fingers
Order is also used for performing parallel ALU in the case of the first ALU logic units and the 2nd ALU logic units operation simultaneously
Operation.
3. equipment according to claim 2, wherein, second instruction and the described 5th instruction are wide according to different data
Spend operation.
4. equipment according to claim 3, wherein, a width in the width is 8, and in the width
Another width is 16.
5. equipment according to claim 1, wherein, the first ALU logic units and the 2nd ALU logic units with
Carry term signal wire couples.
6. equipment according to claim 1, wherein, the execution unit further performs the 5th instruction, the five fingers
Order is FUSED instructions.
7. equipment according to claim 1, wherein, the execution unit further performs the 5th instruction, the five fingers
Order is double wide instructions, wherein the first ALU logic units and the 2nd ALU logic units generate the different of result respectively
Half part.
8. equipment according to claim 1, wherein, second instruction, third instruction and the 4th instruction do not have
Have and consume more times than the described first instruction, and the circulation time of the execution unit matches with the multiply-add instruction.
9. a kind of equipment, including：
Image processor, described image processor include performing channel array, and every performs channel and includes execution unit, described to hold
Row unit includes multiply-add computing unit, the first ALU logic units and the 2nd ALU logic units, and the ALU units are used to perform：
First instruction, first instruction is multiply-add instruction；
Second instruction, second instruction is in the first ALU logic units and the same luck of the 2nd ALU logic units
Parallel ALU operations are performed in the case of calculation to generate the corresponding output result of difference of second instruction；
Third instructs, and the third instruction is for one in the ALU logic units according in the ALU logic units
Execution sequence ALU operations are with the output result of the determining third instruction in the case that another output carries out operation；
4th instruction, the 4th instruction is for performing iterative division operation, wherein the first ALU logic units and described the
Two ALU logic units carry out operation to determine the first result digit value and the second result digit value.
10. equipment according to claim 9, wherein, described image processor further comprises two-dimensional shift register battle array
Array structure, wherein, the array position of the two-dimensional shift register array, which is locally coupled to described, performs the corresponding of channel array
Perform channel.
11. equipment according to claim 9, wherein, the execution unit further performs the 5th instruction, the five fingers
Order is also used for performing parallel ALU in the case of the first ALU logic units and the 2nd ALU logic units operation simultaneously
Operation.
12. equipment according to claim 11, wherein, second instruction and the described 5th instruction are according to different data
Width operation.
13. equipment according to claim 12, wherein, a width in the width is 8, and in the width
Another width be 16.
14. equipment according to claim 11, wherein, the first ALU logic units and the 2nd ALU logic units
It is coupled with carry term signal wire.
15. equipment according to claim 10, wherein, the execution unit further performs the 5th and instructs, and the described 5th
Instruction is FUSED instructions.
16. equipment according to claim 10, wherein, the execution unit further performs the 5th and instructs, and the described 5th
Instruction is double wide instructions, wherein the first ALU logic units and the 2nd ALU logic units generate the difference of result respectively
Half part.
17. equipment according to claim 9, wherein, second instruction, third instruction and the 4th instruction
Less time is consumed than the described first instruction, and the circulation time of the execution unit by described first with instructing consumption
Time matches.
18. equipment according to claim 9, wherein, described image processor is in computing system.
19. a kind of equipment, including：
The circuit design synthesis tool compatibility description of execution unit, the execution unit includes multiply-add computing unit, the first ALU is patrolled
Unit and the 2nd ALU logic units are collected, the ALU units are used to perform：
First instruction, first instruction is multiply-add instruction；
Second instruction, second instruction is in the first ALU logic units and the same luck of the 2nd ALU logic units
Parallel ALU operations are performed in the case of calculation to generate the corresponding output result of difference of second instruction；
Third instructs, and the third instruction is for one in the ALU logic units according in the ALU logic units
Execution sequence ALU operations are with the output result of the determining third instruction in the case that another output carries out operation；
4th instruction, the 4th instruction is for performing iterative division operation, wherein the first ALU logic units and described the
Two ALU logic units carry out operation to determine the first result of division digit value and the second result of division digit value.
20. equipment according to claim 19, wherein, the description further describes the figure including performing channel array
As processor, one performed in channel performs channel and includes the execution unit.
21. equipment according to claim 20, wherein, described image processor further comprises two-dimensional shift register battle array
Column circuits, wherein, the array position of the two-dimensional shift register array circuit is locally coupled into the execution channel array
Corresponding ALU units.
22. equipment according to claim 19, wherein, the execution unit further performs the 5th and instructs, and the described 5th
Instruction is also used for performing in the case of the first ALU logic units and the 2nd ALU logic units operation simultaneously parallel
ALU operations.
23. a kind of method, including：
It is performed with the execution unit of image processor following：
The first instruction is performed, first instruction is multiply-add instruction；
The second instruction is performed, is performed simultaneously in the case of being included in the first ALU logic units and the operation simultaneously of the 2nd ALU logic units
To generate, the difference of second instruction is corresponding to export result for row ALU operations；
Perform third instruction, be included in one in the ALU logic units in the ALU logic units another
Execution sequence ALU operations are with the output result of the determining third instruction in the case that output carries out operation；
The 4th instruction is performed, including performing iterative division operation, wherein the first ALU logic units and the 2nd ALU are patrolled
It collects unit and carries out operation to determine the first result of division digit value and the second result of division digit value.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/960,334 | 2015-12-04 | ||
US14/960,334 US9830150B2 (en) | 2015-12-04 | 2015-12-04 | Multi-functional execution lane for image processor |
PCT/US2016/057771 WO2017095547A1 (en) | 2015-12-04 | 2016-10-19 | Multi-functional execution lane for image processor |
Publications (2)
Publication Number | Publication Date |
---|---|
CN108139886A true CN108139886A (en) | 2018-06-08 |
CN108139886B CN108139886B (en) | 2021-11-16 |
Family
ID=57223790
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201680060253.5A Active CN108139886B (en) | 2015-12-04 | 2016-10-19 | Multi-function execution channel for image processor |
Country Status (9)
Country | Link |
---|---|
US (4) | US9830150B2 (en) |
EP (2) | EP3633504B1 (en) |
JP (1) | JP6789287B2 (en) |
KR (1) | KR102000894B1 (en) |
CN (1) | CN108139886B (en) |
DE (1) | DE112016005521T5 (en) |
GB (1) | GB2561306A (en) |
TW (3) | TWI622014B (en) |
WO (1) | WO2017095547A1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN109902795A (en) * | 2019-02-01 | 2019-06-18 | 京微齐力(北京)科技有限公司 | Processing unit is provided with the artificial intelligence module and System on Chip/SoC of inputoutput multiplexer |
Families Citing this family (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10261786B2 (en) | 2017-03-09 | 2019-04-16 | Google Llc | Vector processing unit |
US10534736B1 (en) * | 2018-12-31 | 2020-01-14 | Texas Instruments Incorporated | Shared buffer for multi-output display systems |
US10552939B1 (en) | 2019-02-12 | 2020-02-04 | Google Llc | Image processor complex transfer functions |
Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4486848A (en) * | 1982-07-28 | 1984-12-04 | Sperry Corporation | Microprocessor parallel additive execution of a computer count ones instruction |
US5258944A (en) * | 1992-09-01 | 1993-11-02 | Cray Research, Inc. | High performance mantissa divider |
US5426600A (en) * | 1993-09-27 | 1995-06-20 | Hitachi America, Ltd. | Double precision division circuit and method for digital signal processor |
US5751618A (en) * | 1994-02-22 | 1998-05-12 | Texas Instruments Incorporated | Arithmetic circuit |
CN102637124A (en) * | 2012-03-22 | 2012-08-15 | 中国电子科技集团公司第五十八研究所 | Device and method for parallel processing of radix 4 FFT (fast Fourier transform) algorithm |
CN102750133A (en) * | 2012-06-20 | 2012-10-24 | 中国电子科技集团公司第五十八研究所 | 32-Bit triple-emission digital signal processor supporting SIMD |
Family Cites Families (89)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US542600A (en) * | 1895-07-09 | Lattice hedge fence and method of plashing | ||
US4445177A (en) | 1981-05-22 | 1984-04-24 | Data General Corporation | Digital data processing system utilizing a unique arithmetic logic unit for handling uniquely identifiable addresses for operands and instructions |
DE3851005T2 (en) | 1987-06-01 | 1995-04-20 | Applied Intelligent Syst Inc | Parallel neighboring processing system and method. |
US4935894A (en) | 1987-08-31 | 1990-06-19 | Motorola, Inc. | Multi-processor, multi-bus system with bus interface comprising FIFO register stocks for receiving and transmitting data and control information |
US5253308A (en) | 1989-06-21 | 1993-10-12 | Amber Engineering, Inc. | Massively parallel digital image data processor using pixel-mapped input/output and relative indexed addressing |
WO1994009595A1 (en) | 1991-09-20 | 1994-04-28 | Shaw Venson M | Method and apparatus including system architecture for multimedia communications |
JP3482660B2 (en) | 1993-09-08 | 2003-12-22 | ソニー株式会社 | Image data processing apparatus and image data processing method |
US5612693A (en) | 1994-12-14 | 1997-03-18 | International Business Machines Corporation | Sliding window data compression using a toroidal bit shift register |
US7395298B2 (en) * | 1995-08-31 | 2008-07-01 | Intel Corporation | Method and apparatus for performing multiply-add operations on packed data |
US5777918A (en) * | 1995-12-22 | 1998-07-07 | International Business Machines Corporation | Fast multiple operands adder/subtracter based on shifting |
JP3573755B2 (en) | 1996-01-15 | 2004-10-06 | シーメンス アクチエンゲゼルシヤフト | Image processing processor |
US5892962A (en) | 1996-11-12 | 1999-04-06 | Lucent Technologies Inc. | FPGA-based processor |
US6366289B1 (en) | 1998-07-17 | 2002-04-02 | Microsoft Corporation | Method and system for managing a display image in compressed and uncompressed blocks |
US6587158B1 (en) | 1998-07-23 | 2003-07-01 | Dvdo, Inc. | Method and apparatus for reducing on-chip memory in vertical video processing |
US7010177B1 (en) | 1998-08-27 | 2006-03-07 | Intel Corporation | Portability of digital images |
EP1164544B1 (en) | 1999-03-16 | 2011-11-02 | Hamamatsu Photonics K.K. | High-speed vision sensor |
JP3922859B2 (en) | 1999-12-28 | 2007-05-30 | 株式会社リコー | Image processing apparatus, image processing method, and computer-readable recording medium storing program for causing computer to execute the method |
US6745319B1 (en) | 2000-02-18 | 2004-06-01 | Texas Instruments Incorporated | Microprocessor with instructions for shuffling and dealing data |
US6606700B1 (en) * | 2000-02-26 | 2003-08-12 | Qualcomm, Incorporated | DSP with dual-mac processor and dual-mac coprocessor |
US7124160B2 (en) * | 2000-03-08 | 2006-10-17 | Sun Microsystems, Inc. | Processing architecture having parallel arithmetic capability |
US6728862B1 (en) | 2000-05-22 | 2004-04-27 | Gazelle Technology Corporation | Processor array and parallel data processing methods |
US6728722B1 (en) | 2000-08-28 | 2004-04-27 | Sun Microsystems, Inc. | General data structure for describing logical data spaces |
US6675376B2 (en) * | 2000-12-29 | 2004-01-06 | Intel Corporation | System and method for fusing instructions |
US7286717B2 (en) | 2001-10-31 | 2007-10-23 | Ricoh Company, Ltd. | Image data processing device processing a plurality of series of data items simultaneously in parallel |
JP4146654B2 (en) | 2002-02-28 | 2008-09-10 | 株式会社リコー | Image processing circuit, composite image processing circuit, and image forming apparatus |
US9170812B2 (en) | 2002-03-21 | 2015-10-27 | Pact Xpp Technologies Ag | Data processing system having integrated pipelined array data processor |
WO2003088033A1 (en) | 2002-04-09 | 2003-10-23 | University Of Rochester | Multiplier-based processor-in-memory architectures for image and graphics processing |
AU2003286131A1 (en) | 2002-08-07 | 2004-03-19 | Pact Xpp Technologies Ag | Method and device for processing data |
WO2004092949A2 (en) * | 2003-04-15 | 2004-10-28 | Koninklijke Philips Electronics N.V. | Processing system with instruction-and thread-level parallelism |
EP1656622B1 (en) * | 2003-08-15 | 2007-05-16 | Koninklijke Philips Electronics N.V. | Parallel processing array |
GB2409065B (en) * | 2003-12-09 | 2006-10-25 | Advanced Risc Mach Ltd | Multiplexing operations in SIMD processing |
US7873815B2 (en) * | 2004-03-04 | 2011-01-18 | Qualcomm Incorporated | Digital signal processors with configurable dual-MAC and dual-ALU |
US20060044576A1 (en) | 2004-07-30 | 2006-03-02 | Kabushiki Kaisha Toshiba | Apparatus for image processing |
US7667764B2 (en) | 2004-06-04 | 2010-02-23 | Konica Minolta Holdings, Inc. | Image sensing apparatus |
JP4219887B2 (en) | 2004-12-28 | 2009-02-04 | 富士通マイクロエレクトロニクス株式会社 | Image processing apparatus and image processing method |
ATE504043T1 (en) | 2005-04-28 | 2011-04-15 | Univ Edinburgh | RECONFIGURABLE INSTRUCTION CELL ARRAY |
US7882339B2 (en) | 2005-06-23 | 2011-02-01 | Intel Corporation | Primitives to enhance thread-level speculation |
JP2007067917A (en) | 2005-08-31 | 2007-03-15 | Matsushita Electric Ind Co Ltd | Image data processing apparatus |
US7602974B2 (en) | 2005-10-21 | 2009-10-13 | Mobilic Technology (Cayman) Corp. | Universal fixed-pixel-size ISP scheme |
FR2895103B1 (en) | 2005-12-19 | 2008-02-22 | Dxo Labs Sa | METHOD AND SYSTEM FOR PROCESSING DIGITAL DATA |
US7555514B2 (en) * | 2006-02-13 | 2009-06-30 | Atmel Corportation | Packed add-subtract operation in a microprocessor |
US7802073B1 (en) | 2006-03-29 | 2010-09-21 | Oracle America, Inc. | Virtual core management |
US7882307B1 (en) * | 2006-04-14 | 2011-02-01 | Tilera Corporation | Managing cache memory in a parallel processing environment |
US20080111823A1 (en) | 2006-11-13 | 2008-05-15 | Faraday Technology Corp. | Graphics processing system |
EP1927949A1 (en) | 2006-12-01 | 2008-06-04 | Thomson Licensing | Array of processing elements with local registers |
US8321849B2 (en) | 2007-01-26 | 2012-11-27 | Nvidia Corporation | Virtual architecture and instruction set for parallel thread computing |
US20080244222A1 (en) | 2007-03-30 | 2008-10-02 | Intel Corporation | Many-core processing using virtual processors |
JP4389976B2 (en) | 2007-06-29 | 2009-12-24 | ブラザー工業株式会社 | Image processing apparatus and image processing program |
US8521800B1 (en) * | 2007-08-15 | 2013-08-27 | Nvidia Corporation | Interconnected arithmetic logic units |
JP4844853B2 (en) | 2007-09-05 | 2011-12-28 | 国立大学法人東北大学 | Solid-state imaging device and driving method thereof |
CN102047241B (en) | 2008-05-30 | 2014-03-12 | 先进微装置公司 | Local and global data share |
JP4999791B2 (en) | 2008-06-30 | 2012-08-15 | キヤノン株式会社 | Information processing apparatus, control method thereof, and program |
US8456480B2 (en) | 2009-01-14 | 2013-06-04 | Calos Fund Limited Liability Company | Method for chaining image-processing functions on a SIMD processor |
KR101572879B1 (en) | 2009-04-29 | 2015-12-01 | 삼성전자주식회사 | Dynamic parallel system and method for parallel application program |
JP5385982B2 (en) | 2009-07-16 | 2014-01-08 | 株式会社日立製作所 | A management system that outputs information indicating the recovery method corresponding to the root cause of the failure |
TWI398781B (en) * | 2009-08-03 | 2013-06-11 | Hon Hai Prec Ind Co Ltd | Discrete cosine transformation circuit and apparatus utilizing the same |
US20110055495A1 (en) | 2009-08-28 | 2011-03-03 | Qualcomm Incorporated | Memory Controller Page Management Devices, Systems, and Methods |
US8976195B1 (en) | 2009-10-14 | 2015-03-10 | Nvidia Corporation | Generating clip state for a batch of vertices |
US8436857B2 (en) | 2009-10-20 | 2013-05-07 | Oracle America, Inc. | System and method for applying level of detail schemes |
US8595428B2 (en) | 2009-12-22 | 2013-11-26 | Intel Corporation | Memory controller functionalities to support data swizzling |
US8749667B2 (en) | 2010-08-02 | 2014-06-10 | Texas Instruments Incorporated | System and method for maintaining maximum input rate while up-scaling an image vertically |
US8508612B2 (en) | 2010-09-30 | 2013-08-13 | Apple Inc. | Image signal processor line buffer configuration for processing ram image data |
US8797323B2 (en) | 2011-01-18 | 2014-08-05 | Intel Corporation | Shadowing dynamic volumetric media |
WO2012105174A1 (en) | 2011-01-31 | 2012-08-09 | パナソニック株式会社 | Program generation device, program generation method, processor device, and multiprocessor system |
US20120254588A1 (en) | 2011-04-01 | 2012-10-04 | Jesus Corbal San Adrian | Systems, apparatuses, and methods for blending two source operands into a single destination using a writemask |
US9092267B2 (en) | 2011-06-20 | 2015-07-28 | Qualcomm Incorporated | Memory sharing in graphics processing unit |
US20130027416A1 (en) | 2011-07-25 | 2013-01-31 | Karthikeyan Vaithianathan | Gather method and apparatus for media processing accelerators |
JP5742651B2 (en) | 2011-10-15 | 2015-07-01 | コニカミノルタ株式会社 | Image processing apparatus, linkage method, and linkage program |
JP5746100B2 (en) | 2011-12-27 | 2015-07-08 | 京セラドキュメントソリューションズ株式会社 | Image forming apparatus |
WO2013101147A1 (en) | 2011-12-30 | 2013-07-04 | Intel Corporation | Configurable reduced instruction set core |
US8823736B2 (en) | 2012-01-20 | 2014-09-02 | Intel Corporation | Graphics tiling architecture with bounding volume hierarchies |
US10244246B2 (en) | 2012-02-02 | 2019-03-26 | Texas Instruments Incorporated | Sub-pictures for pixel rate balancing on multi-core platforms |
US9235769B2 (en) | 2012-03-15 | 2016-01-12 | Herta Security, S.L. | Parallel object detection method for heterogeneous multithreaded microarchitectures |
TWI520598B (en) | 2012-05-23 | 2016-02-01 | 晨星半導體股份有限公司 | Image processing apparatus and image processing method |
US9232139B2 (en) | 2012-07-24 | 2016-01-05 | Apple Inc. | Image stabilization using striped output transformation unit |
US9588766B2 (en) | 2012-09-28 | 2017-03-07 | Intel Corporation | Accelerated interlane vector reduction instructions |
US10318308B2 (en) | 2012-10-31 | 2019-06-11 | Mobileye Vision Technologies Ltd. | Arithmetic logic unit |
US9378181B2 (en) | 2012-11-09 | 2016-06-28 | Intel Corporation | Scalable computing array |
US8954992B2 (en) | 2013-03-15 | 2015-02-10 | Lenovo Enterprise Solutions (Singapore) Pte. Ltd. | Distributed and scaled-out network switch and packet processing |
US9323535B2 (en) | 2013-06-28 | 2016-04-26 | Intel Corporation | Instruction order enforcement pairs of instructions, processors, methods, and systems |
GB2522290B (en) * | 2014-07-14 | 2015-12-09 | Imagination Tech Ltd | Running a 32-bit operating system on a 64-bit machine |
US9749548B2 (en) | 2015-01-22 | 2017-08-29 | Google Inc. | Virtual linebuffers for image signal processors |
US9785423B2 (en) | 2015-04-23 | 2017-10-10 | Google Inc. | Compiler for translating between a virtual image processor instruction set architecture (ISA) and target hardware having a two-dimensional shift array structure |
US9769356B2 (en) | 2015-04-23 | 2017-09-19 | Google Inc. | Two dimensional shift array for image processor |
US9965824B2 (en) | 2015-04-23 | 2018-05-08 | Google Llc | Architecture for high performance, power efficient, programmable image processing |
US10291813B2 (en) | 2015-04-23 | 2019-05-14 | Google Llc | Sheet generator for image processor |
US9772852B2 (en) | 2015-04-23 | 2017-09-26 | Google Inc. | Energy efficient processor core architecture for image processor |
US10095479B2 (en) | 2015-04-23 | 2018-10-09 | Google Llc | Virtual image processor instruction set architecture (ISA) and memory model and exemplary target hardware having a two-dimensional shift array structure |
US9756268B2 (en) | 2015-04-23 | 2017-09-05 | Google Inc. | Line buffer unit for image processor |
-
2015
- 2015-12-04 US US14/960,334 patent/US9830150B2/en active Active
-
2016
- 2016-10-19 CN CN201680060253.5A patent/CN108139886B/en active Active
- 2016-10-19 JP JP2018519299A patent/JP6789287B2/en active Active
- 2016-10-19 EP EP19213291.8A patent/EP3633504B1/en active Active
- 2016-10-19 GB GB1805590.5A patent/GB2561306A/en not_active Withdrawn
- 2016-10-19 WO PCT/US2016/057771 patent/WO2017095547A1/en active Application Filing
- 2016-10-19 DE DE112016005521.8T patent/DE112016005521T5/en active Pending
- 2016-10-19 EP EP16790499.4A patent/EP3384376B1/en active Active
- 2016-10-19 KR KR1020187010230A patent/KR102000894B1/en active IP Right Grant
- 2016-11-17 TW TW105137593A patent/TWI622014B/en active
- 2016-11-17 TW TW107106346A patent/TWI680435B/en active
- 2016-11-17 TW TW108133222A patent/TWI724545B/en active
-
2017
- 2017-05-10 US US15/591,955 patent/US10185560B2/en active Active
-
2019
- 2019-01-18 US US16/251,887 patent/US20190213006A1/en not_active Abandoned
-
2022
- 2022-03-10 US US17/691,615 patent/US20220206796A1/en active Pending
Patent Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4486848A (en) * | 1982-07-28 | 1984-12-04 | Sperry Corporation | Microprocessor parallel additive execution of a computer count ones instruction |
US5258944A (en) * | 1992-09-01 | 1993-11-02 | Cray Research, Inc. | High performance mantissa divider |
US5426600A (en) * | 1993-09-27 | 1995-06-20 | Hitachi America, Ltd. | Double precision division circuit and method for digital signal processor |
US5751618A (en) * | 1994-02-22 | 1998-05-12 | Texas Instruments Incorporated | Arithmetic circuit |
CN102637124A (en) * | 2012-03-22 | 2012-08-15 | 中国电子科技集团公司第五十八研究所 | Device and method for parallel processing of radix 4 FFT (fast Fourier transform) algorithm |
CN102750133A (en) * | 2012-06-20 | 2012-10-24 | 中国电子科技集团公司第五十八研究所 | 32-Bit triple-emission digital signal processor supporting SIMD |
Non-Patent Citations (2)
Title |
---|
Z. GAJDA 等: "A Core Generator for Multi-ALU Processors Utilized in Genetic Parallel Programming", 《2006 IEEE DESIGN AND DIAGNOSTICS OF ELECTRONIC CIRCUITS AND SYSTEMS》 * |
黄海林 等: "微控制器中ALU与移位逻辑的设计与改进", 《计算机科学与工程》 * |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN109902795A (en) * | 2019-02-01 | 2019-06-18 | 京微齐力(北京)科技有限公司 | Processing unit is provided with the artificial intelligence module and System on Chip/SoC of inputoutput multiplexer |
Also Published As
Publication number | Publication date |
---|---|
TWI622014B (en) | 2018-04-21 |
TW201721580A (en) | 2017-06-16 |
JP2018532200A (en) | 2018-11-01 |
JP6789287B2 (en) | 2020-11-25 |
US9830150B2 (en) | 2017-11-28 |
EP3384376A1 (en) | 2018-10-10 |
TWI680435B (en) | 2019-12-21 |
US20190213006A1 (en) | 2019-07-11 |
US20170161064A1 (en) | 2017-06-08 |
US20170242695A1 (en) | 2017-08-24 |
GB201805590D0 (en) | 2018-05-23 |
WO2017095547A1 (en) | 2017-06-08 |
TWI724545B (en) | 2021-04-11 |
US20220206796A1 (en) | 2022-06-30 |
KR20180052721A (en) | 2018-05-18 |
CN108139886B (en) | 2021-11-16 |
US10185560B2 (en) | 2019-01-22 |
EP3384376B1 (en) | 2019-12-04 |
TW201816715A (en) | 2018-05-01 |
KR102000894B1 (en) | 2019-07-16 |
EP3633504A1 (en) | 2020-04-08 |
EP3633504B1 (en) | 2021-10-06 |
TW202004655A (en) | 2020-01-16 |
DE112016005521T5 (en) | 2018-08-30 |
GB2561306A (en) | 2018-10-10 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN105849690B (en) | Merge product-accumulating operation processor and method | |
CN108139886A (en) | For the multi-functional execution channel of image processor | |
CN106445468A (en) | Direct execution of execution unit for loading micro-operation of framework cache file by employing framework instruction of processor | |
CN106599990A (en) | Neural network unit with neural memory and array of neural processing units that collectively shift row of data received from neural memory | |
CN107563953A (en) | The blocks operation of channel array and the image processor of two-dimensional shift register is performed with two dimension | |
CN107533750A (en) | Virtual Image Processor instruction set architecture（ISA）With memory model and the exemplary goal hardware with two-dimensional shift array structure | |
WO1998048345A1 (en) | Arithmetic processor | |
TWI752343B (en) | Execution unit circuits, image processors, and methods for performing a sum of absolute difference computation | |
CN106528044A (en) | Processor, instruction execution method, and calculating system | |
CN107563951A (en) | Statistical operation on two dimensional image processor | |
JP2008250471A (en) | Reconfigurable simd processor | |
WO2021072732A1 (en) | Matrix computing circuit, apparatus and method | |
JP2005209095A (en) | Multiple length data sum of product arithmetic processing circuit and montgomery product sum remainder arithmetic circuit | |
EP1936492A1 (en) | SIMD processor with reduction unit | |
Bensaali et al. | An FPGA implementation of 3D affine transformations | |
Le Masle et al. | Mapping loop structures onto parametrized hardware pipelines | |
KR20240063137A (en) | Hardware accelerator-optimized group convolution-based neural network model | |
KR20230159488A (en) | Data compressor for matrix approximation for matrix multiplication operations | |
CN109947477A (en) | The device and method for shifting for four words will to be packaged and extracting packing word | |
CN109669667A (en) | A kind of data processing method realized in fixed-point DSP chip and device | |
JP2005141533A5 (en) |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
GR01 | Patent grant | ||
GR01 | Patent grant |
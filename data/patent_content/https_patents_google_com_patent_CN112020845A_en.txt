CN112020845A - Quantitative analysis of physical risks due to geospatial proximity of network infrastructure - Google Patents
Quantitative analysis of physical risks due to geospatial proximity of network infrastructure Download PDFInfo
- Publication number
- CN112020845A CN112020845A CN201980026292.7A CN201980026292A CN112020845A CN 112020845 A CN112020845 A CN 112020845A CN 201980026292 A CN201980026292 A CN 201980026292A CN 112020845 A CN112020845 A CN 112020845A
- Authority
- CN
- China
- Prior art keywords
- point
- network
- spof
- span
- intervals
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L41/00—Arrangements for maintenance, administration or management of data switching networks, e.g. of packet switching networks
- H04L41/06—Management of faults, events, alarms or notifications
- H04L41/0677—Localisation of faults
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L41/00—Arrangements for maintenance, administration or management of data switching networks, e.g. of packet switching networks
- H04L41/14—Network analysis or design
- H04L41/145—Network analysis or design involving simulating, designing, planning or modelling of a network
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L41/00—Arrangements for maintenance, administration or management of data switching networks, e.g. of packet switching networks
- H04L41/06—Management of faults, events, alarms or notifications
- H04L41/0654—Management of faults, events, alarms or notifications using network fault recovery
- H04L41/0659—Management of faults, events, alarms or notifications using network fault recovery by isolating or reconfiguring faulty entities
- H04L41/0661—Management of faults, events, alarms or notifications using network fault recovery by isolating or reconfiguring faulty entities by reconfiguring faulty entities
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L41/00—Arrangements for maintenance, administration or management of data switching networks, e.g. of packet switching networks
- H04L41/06—Management of faults, events, alarms or notifications
- H04L41/0654—Management of faults, events, alarms or notifications using network fault recovery
- H04L41/0663—Performing the actions predefined by failover planning, e.g. switching to standby network elements
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L41/00—Arrangements for maintenance, administration or management of data switching networks, e.g. of packet switching networks
- H04L41/08—Configuration management of networks or network elements
- H04L41/0803—Configuration setting
- H04L41/0823—Configuration setting characterised by the purposes of a change of settings, e.g. optimising configuration for enhancing reliability
- H04L41/0836—Configuration setting characterised by the purposes of a change of settings, e.g. optimising configuration for enhancing reliability to enhance reliability, e.g. reduce downtime
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L41/00—Arrangements for maintenance, administration or management of data switching networks, e.g. of packet switching networks
- H04L41/40—Arrangements for maintenance, administration or management of data switching networks, e.g. of packet switching networks using virtualisation of network functions or resources, e.g. SDN or NFV entities
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L43/00—Arrangements for monitoring or testing data switching networks
- H04L43/06—Generation of reports
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L45/00—Routing or path finding of packets in data switching networks
- H04L45/22—Alternate routing
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L45/00—Routing or path finding of packets in data switching networks
- H04L45/28—Routing or path finding of packets in data switching networks using route fault recovery
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/14—Network architectures or network communication protocols for network security for detecting or protecting against malicious traffic
- H04L63/1433—Vulnerability analysis
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L41/00—Arrangements for maintenance, administration or management of data switching networks, e.g. of packet switching networks
- H04L41/08—Configuration management of networks or network elements
- H04L41/0803—Configuration setting
- H04L41/0813—Configuration setting characterised by the conditions triggering a change of settings
- H04L41/0816—Configuration setting characterised by the conditions triggering a change of settings the condition being an adaptation, e.g. in response to network events
Abstract
Systems and methods for evaluating a single point of failure in a computer network are provided. The system includes a processor configured to receive at least two multi-segment lines that approximate a respective network span. For each point in a set of points representing a geographic location, the processor is capable of determining a risk level that an event at the point will affect at least the first and second polylines. The processor can determine an overall failure risk by combining the risk levels for each of the set of points. The processor can output a report indicating at least one point is determined to be a potential SPoF based on the risk level for the at least one point.
Description
RELATED APPLICATIONS
The present application claims the benefit and priority OF U.S. patent application No.16/039,003 entitled "QUANTITATIVE ANALYSIS OF physical risks DUE TO GEOSPATIAL PROXIMITY OF NETWORK INFRASTRUCTURE," filed on 2018, 7, 18, month, 7, 18, the entire contents OF which are hereby incorporated by reference in their entirety for all purposes.
Background
Computer networks rely primarily on physical cables to transmit signals between computers, whether they are inside buildings or across continents and oceans. Such networks take advantage of redundancy in the form of two or more network paths between the same end points but spanning different geographical routes. This allows a cable failure (e.g., physical damage that results in the optical fibers or wires being cut) to not completely compromise connectivity between the end points. A single point of failure (SPoF) is an area where two or more redundant cable paths may be affected by the same outage event. For example, if two cables are in close proximity to each other and a construction project breaks one, it is likely that the other will also break, resulting in complete impairment of connectivity despite the expected redundancy.
Disclosure of Invention
At least one aspect relates to a system for evaluating a single point of failure (SPoF) in a computer network. The system includes one or more processors and memory storing instructions configured to cause the one or more processors to receive a first multi-segment line approximating at least a first network span and a second multi-segment line approximating a second network span. For each point in a set of points representing a geographic location, the processor can determine a risk level that an event at the point will affect at least the first and second polylines. The processor can determine an overall failure risk by combining the risk levels for each point in the set of points. The processor can output a report indicating that at least one point is determined to be a potential SPoF based on the risk level for the at least one point.
At least one aspect relates to a method for evaluating a single point of failure (SPoF) in a computer network. The method is performed on one or more processors. The method comprises the following steps: a first multi-segment line approximating at least a first network span and a second multi-segment line approximating a second network span are received. For each point in a set of points representing a geographic location, determining a risk level that an event at that point will affect at least the first and second polylines. The method comprises the following steps: the overall failure risk is determined by combining the risk levels for each point in the set of points. The method comprises the following steps: based on the risk level for at least one point, a report is output indicating that the at least one point is determined to be a potential SPoF.
These and other aspects and embodiments are discussed in detail below. The foregoing information and the following detailed description include illustrative examples of various aspects and embodiments, and provide an overview or framework for understanding the nature and character of the claimed aspects and embodiments. The accompanying drawings are included to provide an illustration and a further understanding of the various aspects and embodiments, and are incorporated in and constitute a part of this specification.
Drawings
The drawings are not intended to be drawn to scale. Like reference numbers and designations in the various drawings indicate like elements. For purposes of clarity, not every component may be labeled in every drawing. In the drawings:
FIG. 1 illustrates an example system for evaluating a single point of failure in a computer network in accordance with an illustrative embodiment;
FIG. 2 shows a map including two network spans and a potential single point failure region corresponding to a higher risk level threshold in accordance with an illustrative embodiment;
FIG. 3 shows a map including two network spans and potential single point failure regions corresponding to a lower risk level threshold in accordance with an illustrative embodiment;
FIG. 4 shows a map including three network spans and potential single point failure regions corresponding to the corruption of the first and second network spans, but not the third network span, in accordance with an illustrative embodiment;
FIG. 5 is a conceptual diagram illustrating the calculation of a cumulative distribution function in accordance with an illustrative embodiment;
FIG. 6 is a representation 600, 610, and 620 showing improved levels of accuracy for a cell-based overlay of a circular crown on Earth, achieved by projecting them onto a cube and dividing each face into arbitrary depths in a quadtree manner, in accordance with an illustrative embodiment;
FIG. 7 shows an example mapping of a cell in a 2D plane to a series of one-dimensional intervals using a Hilbert curve in accordance with an illustrative embodiment;
FIG. 8 shows a flowchart of an example method for evaluating a single point of failure in a computer network in accordance with an illustrative embodiment.
FIG. 9 is a block diagram illustrating a general architecture of a computer system that may be employed to implement elements of the systems and methods described and illustrated herein, in accordance with an illustrative embodiment.
Detailed Description
The present disclosure relates generally to quantitative analysis of physical risks due to geospatial proximity of network infrastructure. Computer networks rely primarily on physical cables to transmit signals between computers, whether they are inside buildings or across continents and oceans. Such networks take advantage of redundancy in the form of two or more network paths between the same end points but spanning different geographical routes. This allows a cable to fail (e.g., physical damage that results in the optical fiber being cut) without completely compromising connectivity between the end points.
A single point of failure (SPoF) is an area where two or more redundant cable paths may be affected by the same outage event. For example, if two cables are in close proximity to each other and a construction project breaks one, it is likely that the other will also break, resulting in a complete compromise of connectivity despite the expected redundancy.
A brute force method of checking cable pairs for SPoF is to check every possible pairing of cables. For a large number of cables n, where n is a non-zero positive integer, n (n-1)/2 different, unordered pairs can be chosen, which will result in a process with computational complexity expressed in Big-O notation as O (n ^ 2). Big-O notation describes the computational complexity of the process as O (f (n)), where f (n) is some function of n, and n is some value specific to the size of the problem. For this problem, n may be the number of cables to be SPoF checked, and n ^2 may represent the square of n. The Big-O notation describes the relative amount of computation time or memory resources required to solve a problem with a particular process. It is common practice to ignore constant factors in Big-O notation, so that, for example, O (3n) is simply written as O (n), while only the so-called dominance term remains; for example, O (n ^2+ n) becomes O (n ^ 2).
The present disclosure describes a process that can check cables using o (n) time in the worst case. This significantly reduces computational complexity compared to the O (n ^2) brute force method. Theoretically, it is not possible to perform such inspections in less than o (n) time, since all cables must be inspected at least once. Thus, the process disclosed herein may achieve the best possible performance.
In the process disclosed herein, each cable, sometimes referred to as a network span, may be approximated by a polyline having a series of latitude/longitude vertices on the earth connected by geodesic lines (the shortest line around the sphere). Any line segment of span that is not properly approximated by geodesic lines may have any number of additional vertices added along the line segment until sufficiently approximated.
Next, the process may map all points on earth to cells on the cube surface. Consider placing a cube around the earth and projecting a line directly upward (i.e., radially outward from the center of the earth) from each point on the planet until it touches the cube. Each set of latitude/longitude coordinates now has a different corresponding point on the cube in a one-to-one mapping. These faces (referred to herein as levels 0) are then divided into four equal squares (level 1), each of which is in turn divided into four equal squares (level 2), and so on up to any arbitrary level of depth. Each square is called a cell regardless of its rank. Since each coordinate on earth has one mirror point on the cube, the coordinate will lie exactly within one cell for any given rank.
For a given span, a set of cells can now be defined that covers all vertices and geodesic lines that define the span. Note that the cells need not all be at the same level. The coverage group of cells is looked up once for each cable, thus constituting the o (n) contribution of the process as a whole. Mapping the corresponding spans in this manner may be performed in parallel.
The detection of cables can be performed by a process similar to coloring in a cell covering each cable-only one cable at a time-and checking if there is already color in the cell. First, each group of cells is mapped to a series of one-dimensional intervals. One possible way of mapping the cells to the intervals may include using a hilbert curve. A Hilbert curve (Hilbert curve) is a space-filling curve that maps one-dimensional lines to a fractal that fills the entire square. Thus, any cell can be mapped to an interval within the range of [0,1] using inverse mapping, where the interval for the entire face of the cube is [0,1], the intervals for level 1 cells are [0,0.25], [0.25,0.5], [0.5,0.75] and [0.75,1], and so on for any arbitrary level. The nature of the hilbert curve is that the interval of any cell that is a descendant of a lower-ranked cell must lie strictly within the interval of its ancestors. A hilbert curve may be applied to each of the six faces of the cube. The start and end positions of the six faces of the cube are aligned so that their respective Hilbert curves are continuous, so we can traverse the entire earth and map it to values between 0 and 6; for example, the first face is [0,1], the second face is [1,2], and so on. The case of linearizing a 2D cell into a 1D interval using a hilbert curve will be further described below with reference to fig. 7. Other space-filling curves having the same properties may be used.
For each span, its set of coverage cells is converted into a set of intervals on the six hilbert curves, i.e., between 0 and 6. The determination of the intervals requires O (n) time and can be performed in parallel. The open and closed points of the entire interval may then be sorted. Although this operation is typically performed at O (n log n) time, since all processing has been performed in parallel, sorting may be done using, for example, parallel merge ordering when collecting and merging intervals. In this way, it is possible to obtain the sub-O (n) times while retaining the dominant O (n) terms.
Detecting SPoF is now a problem in determining all overlapping intervals in the sorted list. This can be done in o (m) time, where m is the number of one-dimensional intervals, by iterating through the open and closed points, and noting which other intervals are open when a new interval is open, thereby indicating the potential SPoF between their respective cables. This also requires O (m) memory.
By setting a lower limit on the cell size used to approximate a single span, any proximity between the span and any other span can be detected. This can be achieved by creating a buffer around the cell, e.g. by adding all not yet included neighbouring cells, which not only covers the span, but also the whole area within the lowest proximity tolerance.
Once one or more potential spofs are determined, the system can issue a report of the region that includes the potential spofs.
In some implementations, the system can send instructions to the network devices to, for example, change switching and routing behavior to mitigate SPoF.
The process generally includes the following steps:
1. each multi-segment line is mapped to a set of cells, where each multi-segment line approximates a network span, and each cell represents a different geographic area.
2. For each point in a set of points representing a geographic location, a risk level is determined that an event at the point will affect at least two of the polylines.
3. For at least one point region, if the combined risk level of all points of the region exceeds a threshold, then the region is determined to be a potential SPoF.
4. A report of the region including the potential spofs is generated.
5. Network devices of a computer network are reconfigured to mitigate potential spofs.
In some embodiments, further savings in computing resources may be achieved by limiting the problem to only a set of points that are predetermined to have a non-zero risk of a single point of failure. For example, the set of points representing the geographic location may include the steps of:
1. each group of cells is mapped to a series of one-dimensional intervals.
2. A set of overlap intervals between respective series of one-dimensional intervals is determined, wherein each overlap interval corresponds to a cell representing a candidate potential SPoF.
3. The set of points is generated from the set of overlapping intervals.
Recognizing that an event that breaches two network spans may result in a failure situation distinct from an event that breaches three network spans, in some embodiments, the system may determine the probability that an event at a point would breach both network spans but not the third network span. This process can be further generalized to any number where for a set of n cells, the probability that an event will destroy 2 ≦ r ≦ n cells but will not destroy the remaining n-r cells can be determined.
In some embodiments, the system may additionally or alternatively take into account additional parameters including region-dependent failure probabilities. The area-dependent failure probability is represented by a predetermined baseline risk level for one or more of the set of points, or may be represented by a different function for calculating the failure risk from the span proximity. A baseline risk level for a point may indicate that the network infrastructure is more prone to failure, or that an outage event is more common or has a different magnitude distribution in the geographic area.
Other capabilities and benefits of the system will become apparent from the description below.
The following is a mathematical description of a proposed severity analysis for quantifying SPoF risk for a given set of network spans (polylines).
1. Term(s) for
The following definitions will assist the following description.
Cell (cell): a quadrilateral area on the surface of the earth. Cells within the same class have approximately the same area.
Polyline (polyline): representation of network cables on the earth's surface. The multi-segment line is composed of an ordered set of vertices and connecting geodetic lines that define the path of the cable.
Interrupt event (outage event): assuming an event, the effect of a circle with radius r, if associated with any polyline LiIntersection, will cause network disruption, affecting LiThe cable shown.
The probability of occurrence of an event will be based on a memoryless distribution throughout the process. This means that the duration of the observation will be ignored and the probability is equal to the proportion of the duration.
2. Problem definition
Given:
a set of multi-segment lines { L }i}; and
cumulative Distribution Function (CDF) for break event radius, CDF (x) P (r < x).
What is the probability of SPoF being defined as at least one interrupt event, such that its circular area of influence is associated with LiIs each of the cable paths described intersect?
Assume that there is a known set of cells CjClose enough to all polylines to be considered and the outage event must be centered around one cell. There is also a calculated threshold radius t for each celljOf (a) a process of (b), such that if and only if ("iff") rj＞＝tjA time-out event results in all { LiA failure occurs.
3. Solution scheme
Defining:
·Fij: is shown as being CjA centric interrupt event results in LiA failed interrupt event;
·Fj: is shown as being CjRadius r as centerjResults in all { L }iFailed interrupt event (i.e., if and only if rj＞＝tjWhen F is presentjOccurs);
- | F |: representing F computed across all j cellsjThe number of occurrences of (c); and
s: representing a SPoF event with | F | > 0.
Therefore, the problem is to calculate p(s). We first consider that all cells have equal area.
Equation (1) is based on the definition of the threshold radius and CDF, i.e., the minimum size of the outage event that would cause all network cables to fail and the probability that the event radius is less than this value. Because FjIs relative to cell CjThe central interrupt events are defined so they are independent. Even if the outage events centered around neighboring cells may have overlapping areas of influence, this does not negate the assertion that they occur independently. Thus, by joint probability of independent events:
and substituting (1) into (2):
4. taking into account cell area differences
(2) In (1)
when all ajWhen 1, the folding is (2).
The use of cells is a discrete approximation to the continuous problem in the real world. Equivalently, for cell CjAll coordinates in, | tlat，lng-tjL < ∈, where e is a suitable smaller error threshold. A cell with m unit areas must have the same probability of failure and the same cdf (t) as m sub-cells of a single unit areaj) Therefore, (5) is established. Reducing the approximate cell size, and thus increasing the resolution, has the effect of reducing e to within a tolerable upper limit.
5. Calculation of threshold radius
Radius r when interrupting an eventj＞＝dijTemporal occurrence of event FijWherein d isijIs from cell CjCenter to polyline LiThe shortest distance of any portion of (a). This may be calculated by means of a geometry library, such as the geometry library 120 of the SPoF evaluation system 110 described further below. Thus, event FjThreshold t of occurrence (i.e. failure of all cables)jThe method comprises the following steps:
6. exclusive cable failure
Define will { LiIs divided to include { L }incAnd exclusion of { L }excDisjoint sets of cables; namely:
{Linc}∪{Lexc}＝{Li} (8)
now we want to derive P (S) for exclusive SPoFE) As occurring such that at least one interrupt event is of sufficient size to result in all { L }incFail but do not cause any LexcProbability of a failed SPoF event.
First, the threshold radius is determined
For all previously defined events and random variables F*Aim it at the equivalent F of the exclusive SPoFE *Is defined as an event, wherein F*For all { LincAll are true, but for all { L }excNeither is true. Review dijMultiple segment line specific fault distance, by cell CjThe probability of an exclusive SPoF resulting from an interrupt event at (a) is defined as:
when excluding set { LexcAt least one of the multi-segment lines is closer to C than the farthest member of the group involvedjAt center of (c), a zero probability occurs, which means that it is unlikely that L will have an effectincAll of (L) and only influence (L)incThe exclusive SPoF of.
An exclusive SpoF possible scenario corresponds to a ring describing the zone of influence of an exclusive break event. The inner radius of the ring being
When in use
The same logic follows as for the non-exclusive SPoF:
where (9) should be substituted for (12). The associative and commutative nature of equation (11) (and its standard non-exclusive counterpart equations (3) and (5)) allows concurrent computation of the failure probability contribution across one or more processors and one or more computer servers in a distributed system.
7. Defining interrupt events CDF
The goal of this work was to derive a theoretical model of empirical SPoF data-all tuning of the model was done by CDF. The use of break events is purely a hypothetical construct since we have no data about the event radius, but instead have a proxy in the form of a historical break.
We describe a generalization of the straight line approximation from SpoF failure risk of one of two parallel spans to failure formulation of two or more arbitrarily shaped spans. The straight-line approximation is always called the norm (P)std) And it is necessary to define a probability of failure proportional to the length of the spans and inversely proportional to the spacing distance between the spans, limited to zero risk as the spacing distance tends to infinity. Herein we describe the derivation for a generic exponential function, where 0 < k < 1 and λ > 0, the separation distance per unit length of cable is 2 s:
S＝2s (13)
Pstd(S)＝ke-2λs (14)
note that the use of 2s distance instead of s is purely for mathematical convenience.
For a cable with length d, we translate into a survival probability; i.e., 1-Pstd(S) then raised to the power of d before reconversion: 1- (1-P)std(S))d. This is equivalent to stating that the entire length of the segment, and therefore the entire cable, can survive and that it gradually tends towards 1 as d tends towards infinity, as a matter of probability. This is implicitly acquired by a cell-based approach.
The objective is to define a CDF that results in P (S) approximating Pstd(S)), and equivalence occurs when the cell tends towards zero area. Then, the cell-based method implicitly generalizes to cables of any shape and spofs with n ≧ 2 cables.
For the purposes of deriving the CDF, we will assume that the polylines lie on planes having arbitrarily defined x and y axes, and that the width and height are the dimensions along these axes, respectively. Further, assume that all four boundaries of a cell are parallel to their respective axes. These assumptions do not violate reality because using smaller and smaller cells, near zero area, results in equivalence.
Consider two cables, each parallel to the x-axis, offset by + -s (i.e., as P)stdHas a spacing distance of 2S as in (S), and for the same above-mentioned distance d>0, span x ═ 0, d]. We now try to calculate the contribution of a column of cells to a unit width and equal height h, the column spanning an infinite range in the positive direction of the y-axis. By symmetry, we simply square the contribution, so that y<0 and raised to a power of d to account for all columns along the length of the cable.
For cell j, it is vertically centered on yj>0, threshold interruption event radius of two Cable faults tj＝yj+ s because the break event must first reach the x-axis (ensuring an intersection with the cable above the x-axis) and then reach the additional spacing s, resulting in a failure of the cable below the axis.
Having a unit width, the area of a cell is equal to its height. Therefore, except for the unit width column of interrupt events above the y-axis, | F is introduced+Is equivalent to | F |, and for non-negative integers
since the cell-based calculation is only a discrete approximation to the continuous value problem, we consider the reduction of cell height. A graphical representation of this operation is shown in fig. 5, which will be further described below.
Therefore, the temperature of the molten metal is controlled,we see that CDF is a linear approximation standard geometric derivative (Grossman and Katz, 1972) and introduces that of Grossman and Katz
for an arbitrary function f (x), where f' (x) is the standard derivative and f*(x) Is a geometric derivative, and Grossman and Katz indicate that the presence of f' (x) suggests that f*(x) And vice versa, we note the following characteristics:
and
therefore, what remains is to find some f (x) to satisfy equations (16), (19), and (20) at the same time, and substitute equation (21) to define the CDF. (Note that this form can generally account for CDF conditions for any function f(s) that goes to infinity and gradually to 0 s.)
as required
Thus, for an interrupt event of radius r:
according to the CDF requirements, it is positive, increasing monotonically with respect to r, and asymptotically 1 with r → ∞.
There will be two semicircles centered at (0, 0) and (0, d) that constitute the penumbra of the cell-based approach to calculating SPoF probability. Since the length of the cables (in kilometers) is much greater than the typical separation distance of spofs (in meters), the contribution of the crowns is negligible and therefore they can be safely ignored.
The correctness of the method is proved in a calculation test. The approximation of the geometric integral (by the ring of decreasing height) proves no error in algebra, while the risk analysis is performed on a virtual cable of known length, while the interval proves the usual applicability to the current problem.
8. Fully enclosed cell
Exceeding CjOf course, contribute P (S), but, for example, a number of lines { L }CaliforniaWill result inDetection Engine 118 detects t exclusivelyj＜tmaxOf a cell ofMiddle tmaxIs adjustable. For any given CDF and/or coefficient, there will be an upper bound at which the double-precision floating-point representation of CDF (t) 1, and hence t ≡ 1, is definedmaxThe upper limit of calculation of (c) — in the above case about 60 m.
FIG. 1 shows an example system 110 for evaluating a single point of failure (SPoF) in a computer network in accordance with an illustrative embodiment. The SPoF evaluation system 110 may operate in the example environment 100. The environment 100 includes a SPoF evaluation system 110, a network 105, and network devices 140a, 140b, and 140c (collectively, "network devices 140"). The environment may optionally include a geometry library 120 and/or a map library 130.
Each network device 140 may be a switch, router, modem, gateway, software-defined network application, or other component of a computer network infrastructure. In some implementations, each network device 140 may be a network device 1524, such as the network device 1524 discussed below with reference to fig. 9. Each network device 140 may receive data packets and other network traffic from other network devices 140, hosts, servers, and/or client devices, including, for example, the SPoF evaluation system 110, and forward data packets and other network traffic to other network devices 140, hosts, servers, and/or client devices, including, for example, the SPoF evaluation system 110. In some implementations, the network device 140 may operate in one or more Software Defined Networks (SDNs). In some implementations, the network device 140 can receive and forward data packets and other network traffic in the data plane. In some implementations, network device 140 may send and receive messages including control commands and telemetry data from one or more SDN controllers via a control plane.
The SPoF evaluation system 110 can receive as input data representing a network span of a computer network and output a report indicating all areas determined to contain potential spofs. The SPoF evaluation system 110 includes a mapping engine 112a, a quantization engine 114, a reporting engine 116, and a memory 115. In some implementations, the SPoF evaluation system 110 can optionally include additional mapping engines 112b and 112 c. Mapping engines 112a, 112b, and 112c may be collectively referred to as "mapping engines 112". In some implementations, the SPoF evaluation system 110 can include more or fewer mapping engines 112. The mapping engine 112 may perform the mapping operations in parallel, as will be described in more detail below. In some implementations, the SPoF evaluation system 110 can include a reconfiguration engine 117. In some implementations, the SPoF evaluation system 110 can include a detection engine 118. In some implementations, the SPoF evaluation system 110 and/or components thereof can be implemented in a computing system, such as the computing system 1510 described below with reference to fig. 9.
Memory 115 may include one or more memory devices including one or a combination of volatile and/or nonvolatile memory. Memory 115 may include Random Access Memory (RAM), flash memory, magnetic memory such as a hard disk drive or a tape drive, or optical memory such as an optical disk. In some embodiments, memory 115 may include cache 1575 and/or memory 1570 described below with reference to FIG. 9. In some implementations, the memory 115 may be divided into multiple memory spaces or regions. The various memory spaces may exist in the same physical memory device or may be distributed among multiple physical memory devices. Each memory space may store, for example, computer program instructions for implementing the methods described herein, as well as data received, processed, and generated by such methods.
The mapping engine 112 may receive as input data representing network spans of the network and output data representing groups of cells respectively covering the network spans. Mapping engine 112 may convert each network span into a multi-segment line having a series of latitude/longitude vertices on earth connected by geodesic lines. The mapping engine 112 may add additional vertices along the line segment until the multiple segment line approximation sufficiently represents the network span with respect to the accuracy required to detect the potential SPoF. Mapping engine 112 may map all points on the earth to cells on the surface of a cube surrounding the earth. Consider placing a cube around the earth and projecting a line directly upward from each point on the earth until it touches the cube. Each set of latitude/longitude coordinates now has a different corresponding point on the cube in a one-to-one mapping. These faces (referred to herein as levels 0) are then divided into four equal squares (level 1), each of which is in turn divided into four equal squares (level 2), and so on up to any arbitrary level of depth. Each square is called a cell regardless of the rank. Since each coordinate on earth has one mirror point on the cube, the coordinate will lie exactly within one cell for any given rank. Mapping engine 112 may then map each multi-segment line to a set of cells covering all vertices and geodesic lines defining the multi-segment line corresponding to the network span. The cells may be in different classes. For example, one cell covering the area of the span may be a level 1 cell, while another cell covering another area of the span may be a level 2 cell. The set of coverage cells is looked up once for each cable, thus constituting the o (n) contribution of the process as a whole. In some implementations, the SPoF evaluation system 110 can include more than one mapping engine 112, such as mapping engine 112a, mapping engine 112b, and mapping engine 112 c. The mapping engine 112 may map respective network spans in parallel to groups of cells. For example, during the overlapping time period, the first mapping engine 112a may map a first multi-segment line to a first set of cells, while the second mapping engine 112b maps a second multi-segment line to a second set of cells.
In some implementations, the mapping engine 112 may operate in conjunction with the geometry library 120. In some implementations, the geometry library 120 can be internal to the SPoF evaluation system 110. In some implementations, the geometry library 120 can be a third party service, such as a cloud computing service that resides on one or more computer servers external to the SPoF evaluation system 110. The geometry library 120 may help map points on the earth, a sphere, to points on one or more planes, such as the cubes described above. This mapping may be referred to as a projection. The cells to which the polylines are mapped may be a subdivision of these planes. An example of a publicly available Geometry library 120 is the S2Geometry library, available from http:// S2Geometry.
In some embodiments, the SPoF evaluation system 110 may operate in conjunction with a map library 130. In some implementations, the map library 130 can be internal to the SPoF evaluation system 110. In some implementations, the map library 130 can be a third party service, such as a cloud computing service that resides on one or more computer servers external to the SPoF evaluation system 110. The map library 130 can provide data regarding geography, infrastructure, development, etc. to the SPoF evaluation system 110. The SPoF evaluation system 110 can use the geographic data as a map layer on which network spans/polylines can be placed. Thus, the geographic data may provide a background of the SPoF and its vicinity; such as land or water, developed or undeveloped, etc. An example of a publicly available map library 130 is Google Maps Platform, available from https:// group.
The quantification engine 114 may quantify the level of risk that an event at a given point will affect at least two network spans. For example, two network spans may be mapped by mapping engine 112 to respective multi-segment lines that approximate the network span. The quantization engine 114 may then determine, for each point in the set of points representing the geographic location, whether an event of a certain size would affect at least two network spans. In some implementations, the size of the event can be modeled as a radius from the point. Thus, the quantization engine 114 may determine whether a circle of a given radius from that point will reach a polyline corresponding to two or more network spans. If so, the point may be considered to be a potential SPoF. In some implementations, the quantization engine 114 can determine, for each point in the set of points, an event size (i.e., a radius) required to reach all network spans in a set of two or more network spans. The required size is inversely proportional to the risk level at which an event at the point will affect a network span in a set of two or more network spans. The risk levels between all points may be combined and the quantification engine 114 may determine that the region contains potential spofs. The quantization engine 114 may then notify the reporting engine 116 of the potential SPoF.
In some implementations, the quantization engine 114 can determine potential SPoF scenarios in which some, but not all, of the network spans in a geographic region are affected. For example, for a geographic location, an event of a first size may affect a first network span and a second network span, but not a third network span. Multiple, but not complete, network span disruptions represent a failure condition that is distinct from a condition in which all of the network spans between two endpoints are disrupted. Fig. 4 illustrates an analysis of multiple, but not complete, network span corruption scenarios. Fig. 4 shows a map 400 of a geographic area in which three network spans 410, 420, and 430 extend a distance close to each other before the network span 430 is disconnected. In FIG. 4, the area of interest has been limited to a subset of the entire geographic area, as shown at block 440. In some embodiments, this limit for the set of points to be quantified may be manually entered into the SPoF evaluation system 110. In some implementations, the points to be quantified can be predetermined by the detection engine 118 according to a process described further below. In embodiments where the quantization engine 114 determines potential SPoF scenarios where some, but not all, of the network spans in the geographic region are affected, the mapping engine 112 may map the first, second, and third polylines to the first, second, and third sets of cells, respectively. The quantification engine 114 may then determine, for each point in the set of points, a first threshold for a risk level that an event at the point would affect the first and second network spans without affecting the third network span. The quantification engine 114 may then determine, for each point in the set of points, a second threshold of risk levels that an event at that point would affect all three network spans. If the first risk level for the point exceeds the first threshold but is less than the second threshold, the quantization engine 114 may determine that the point is a potential SPoF. The risk associated with each point may be reported graphically, as shown by shading 450 in the map 400 of FIG. 4, which is described further below, with higher risk represented by greater opacity and zero risk represented by transparent regions.
In some implementations, the quantization engine 114 can additionally or alternatively consider additional parameters including a probability of failure associated with a region. The area-related failure probability may be represented by a predetermined baseline risk level for one or more of the set of points. A baseline risk level for a point may indicate that the network infrastructure in the geographic area is more prone to failure, or that outage events are more common. Thus, in some embodiments, each point in the set of points comprises a region-specific distribution of baseline risk levels and event radii, wherein the baseline risk levels and the region-specific distribution represent outage event probabilities associated with a geographic region. Thus, the risk level for each point includes the baseline risk level for that point, plus the risk that an event at that point will affect at least a first cell in the first set of cells and a second cell in the second set of cells. Consideration of area-related failures may be achieved by replacing area-specific CDFs or area-specific CDF coefficients.
The SPoF mitigation system 110 includes a reporting engine 116. The reporting engine 116 may output a report indicating all regions determined to contain potential spofs. The report may include a digital file or transmission that includes data indicating the points determined to be potential spofs. The reporting engine 116 may provide the report to another module of the SPoF mitigation system, e.g., the reconfiguration engine 117, or output the report to an external system or client. In some embodiments, the report may be used to create a record of visualizations and alerts or potential spofs. In some implementations, the report may include other detailed information evaluated, such as a risk level for each point and a threshold for determining that each point is a potential SPoF. In some implementations, the report may include data regarding the span of the network affected by each potential SPoF. In some embodiments, the report may include a probability that two or more network spans will be affected by a potential SPoF. In some embodiments, the report may include a probability that two or more network spans will be affected by the potential SPoF while one or more other network spans are not significantly affected. In some embodiments, the report may include a probability that the potential SPoF will affect the entire network span between the two network nodes. In some embodiments, the report may include or take the form of a graphical display of SPoF data. Such data may be displayed in a tabular format (e.g., sorted by SPoF probability, potential network performance impact of SPoF, or a function of both the probability and potential performance impact of SPoF at a given location) or on a map that identifies the geographic location of SPoF. In some implementations, the graphical identification of the SPoF can be color coded, for example, based on the SPoF probability, the potential impact, or a function of the SPoF probability and the potential impact.
In some embodiments, the SPoF evaluation process can be performed as needed and the report output as requested. In some embodiments, the evaluation process may run periodically or continuously and output a report when a potential SPoF is determined.
In some implementations, the SPoF evaluation system 110 can include a reconfiguration engine 117. The reconfiguration engine 117 can receive a report from the reporting engine 116 indicating the potential SPoF and output a command or instruction to reconfigure one or more network devices 140 to mitigate the potential SPoF. SPoF mitigation may be achieved in several ways, including reconfiguring the network device 140 to route traffic to a destination via a different network span, reconfiguring the network device 140 to set a network span to a backup route to handle traffic when one or more other network spans fail, and/or reconfiguring the network device 140 to divide data traffic between a network span that traverses a potential SPoF and another network span that does not traverse a potential SPoF. In some implementations, the reconfiguration engine 117 can reconfigure the network device 140 to mitigate the potential SPoF affecting the first network span and the second network span by rerouting data traffic through the network device 140 to a third network span between a first point on the first network span and a second point on the first network span such that the third network span does not traverse the potential SPoF. That is, the third network span is sufficiently removed geographically from the potential single point of failure that the likelihood of an event corrupting the first, second, and third network spans is negligible. In some implementations, in the event of a disruption event at a potential SPoF, the reconfiguration engine 117 can reconfigure the network device 140 to mitigate the potential SPoF affecting the first and second network spans by setting a third network span as a backup route between a first point on the first network span and a second point on the second network span. In this case, in the event that data traffic along both the first and second network spans is interrupted, the network device 140 may quickly reroute the data traffic to the third network span without having to calculate a new route or wait for instructions from the controller. In some implementations, the reconfiguration engine 117 can reconfigure the network device 140 to mitigate the potential SPoF affecting the first network span and the second network span by dividing data traffic through the network device 140 between the first network span and a third network span that does not traverse the potential SPoF. A network span may sometimes include multiple optical fibers or cables logically bundled together to serve as a single connection between respective network devices 140. In some implementations, the reconfiguration engine 117 can instruct the network device 140 to logically repacketize the bundles so that the bundles include cables from two different network spans, where one network span does not traverse the potential spofs. Thus, if an interruption event corrupts data traffic in both the first and second network spans, some, if not all, of the data traffic previously traversing the first network span may be automatically rerouted to a third network span instead of being bundled.
In some implementations, the SPoF evaluation system can include a detection engine 118. The detection engine 118 may help conserve the computational resources of the quantization engine 114 by limiting the quantization operations to only a set of points that are predetermined to have a non-zero or non-negligible risk of a single point of failure. For example, in FIG. 4, the area of interest has been limited to a subset of the entire geographic area, as shown at block 440. The detection engine 118 can determine the set of points that the quantization engine 114 is to consider in determining the potential SPoF. The set of points may be a subset of all points in a geographic area of interest, which may include a portion or all of the earth. The detection engine may map the set of cells corresponding to each polyline determined by the mapping engine 112 to a corresponding series of one-dimensional intervals. The detection engine 118 can determine a set of overlapping intervals between a respective series of one-dimensional intervals. Each overlap interval may correspond to a cell representing the location of a candidate potential SPoF. The detection engine 118 can generate the set of points through the set of overlapping intervals. In some implementations, the detection engine 118 can map the sets of cells to the respective sets of one-dimensional intervals using a space-filling curve, e.g., a hilbert curve. An example of mapping a cell to a one-dimensional interval using a hilbert curve is shown in fig. 7, which will be described in detail below. In some embodiments, other space-filling curves or shapes may be applied, or the overlap region may be determined in two-dimensional space without the need for a curve. In some implementations, the detection engine 118 can determine the overlap interval using a sorting method. For example, each individual interval has an open point and a closed point. The detection engine 118 can order all of the individual intervals according to the open points of each interval. Then, for each individual span having an open point and a closed point, detection engine 118 can determine that the open point of the second individual span falls between the open point and the closed point of the individual span. This operation is similar to coloring the cells traversed for each multi-segment line and detecting where the colored cells coincide or overlap. Overlapping cells may be considered candidate potential spofs for defining the set of points considered by the quantization engine 114. When performing the detection operation, the polyline representing the network span should be mapped to a cell large enough to create a reasonable geographical buffer around the polyline. Mapping a network span to a relatively large cell in this manner increases the amount of overlap detected in the set of cells representing the corresponding network span. The result includes "false positives" in the sense that the set of points provided to the quantization engine 114 for consideration will include a number of points for which the quantization engine 114 will look for a sufficiently low risk level at which the quantization engine 114 cannot determine that they are potential spofs for any practical threshold. However, these false positives would not be expected to disadvantageously increase the computational load on the quantization engine 114 when determining the potential SPoF. On the other hand, it may be beneficial to accept a certain percentage of false positives to avoid the occurrence of false negatives, because any point that is not detected and therefore not provided to the quantization engine 114 is not considered likely to have SPoF by such pre-screening of the set of points by the detection engine 118.
Fig. 2 shows a map 200 that includes two network spans 210 and 220, and two regions of potential single point failures 230 and 240 corresponding to higher risk level thresholds, in accordance with an illustrative embodiment. The set of potential spofs 230 and 240 are areas where the risk level of an event occurring in the middle or centroid of an indicated one of the cells that would disrupt traffic in both of the network spans 210 and 220 is above a threshold level. Note that the cells indicating potential spofs 230 and 240 may have different sizes.
Fig. 3 shows a map 300 including two network spans 210 and 220 and a potential single point of failure 330 area corresponding to a lower risk level threshold in accordance with an illustrative embodiment. The map 300 covers a similar geographic area as the map 200 and includes the same two network spans 210 and 220. However, the map 300 reveals a set of potential spofs determined for a lower threshold relative to the map 200. That is, the risk that an event will disrupt traffic in both network spans 210 and 220 is low, and thus the area or cell is considered a potential SPoF 330. Thus, the map 300 reveals more potential spofs than the map 200. Note that the cells indicating potential spofs 330 may have different sizes.
Fig. 4 shows a map 400 that includes three network spans 410, 420, and 430, and potential single point failure regions (shaded regions) corresponding to the corruption of the first network span 410 and the second network span 420, but not the third network span 430. In map 400, the three network spans 410, 420, and 430 extend a distance close to each other before the network span 430 is disconnected. In the map 400, potential spofs are determined only within the defined geographic area 440. The map 400 thus shows the following example: the detection engine 118 has predetermined a set of points for the quantization engine 114 to make potential SPoF determinations. In some implementations, the limits on the set of points to be quantified can be manually input into the SPoF evaluation system 110. The risk associated with each point may be reported graphically, as shown by shading 450, with higher risk represented by greater opacity and zero risk (or unquantized points) represented by transparent regions. Note that the cells used in the quantization engine 114 may have the same or smaller size than the cells used in the detection engine 118, and as the cell size decreases, the accuracy of the quantization engine 114 increases.
Shading represents the risk that an event of a certain magnitude may affect the first and second network spans but not the third network span; i.e. darker shading indicates higher risk. Multiple, but incomplete, network span corruptions represent a failure condition that is different from a condition in which all of the network span between two endpoints is corrupted. In a simple example, if network spans 410 and 420 are corrupted, it is still possible to reroute traffic at least partially through network span 430. However, a failure scenario that corrupts all three network spans 410, 420, and 430 may not allow such a fallback opportunity.
FIG. 5 is a conceptual diagram illustrating the calculation of a cumulative distribution function in accordance with an illustrative embodiment. In this example, the lengths of wire, cable a and cable B, lie on any plane defined by the x and y axes, and the width and height are dimensions along the respective axes. The boundaries of each cell are parallel to their respective axes.
Cables a and B extend parallel to the x-axis and are offset from the x-axis by ± s, such as Pstd(S) they are spaced apart by a distance of 2S and d for a shared destiny distance>0, span x ═ 0, d]. Fig. 5 shows three columns of cells 510, 520, and 530. Each column extends infinitely in the positive y-axis direction. Each cell has a unit width and thus its area is equal to its height h.
As previously described, for cell j, it is vertically centered on yj>0, threshold interruption event radius of two cable faults tj＝yj+ s because the break event must first reach the x-axis and then reach the additional interval s, resulting in a cable failure below the axis. Therefore, except for the unit width column of interrupt events above the y-axis, | F is introduced+Is equivalent to | F |, and for non-negative integers
Since the cell-based calculation is only a discrete approximation to the continuous value problem, we can take the limits of the function when the height of the cell shrinks to zero, as shown by the continuous columns of cells 510, 520, and 530. Thus, the cumulative distribution function is a straight line approximation PstdThe geometric derivative of (a).
Fig. 6 shows representations 600, 610, and 620 of cell-based coverage for a circular crown on earth (rather than for a network spanning polylines) with an improved level of accuracy, in accordance with an illustrative embodiment, by projecting it onto a cube and dividing each face into arbitrary depths (referred to as levels) in a quadtree manner. Any shape (including the circular crown in fig. 6 or the network span for detection engine 118) may be mapped using cells of different sizes depending on the accuracy and/or precision of the mapping desired. Representations 600, 610, and 620 progressively map the same circular crown with more cells, thereby achieving greater accuracy. In some cases, the ball may be projected onto six planes of a cube surrounding the ball. Each face of the cube may represent a level 0 cell. Each face may then be further subdivided; for example, four squares (level 1), each of which may be further divided into four squares (level 2), and so on, until a desired level of accuracy or precision is achieved. In the example result representation 620, the circular crown has mapped relatively small cells in areas at its edges, but relatively large cells in areas away from its edges. If the analysis is performed for each cell, then mapping the shapes and features to cells of different sizes may reduce the amount of processing required, thereby saving computational resources.
Fig. 7 shows an example mapping of a cell in a 2D plane using a hilbert curve to a series of one-dimensional intervals in accordance with an illustrative embodiment. Each square 700, 710 and 720 represents a different level of subdivision: if the primary square is considered to be level 0, then four of the squares 700 are subdivided into level 1 cells, 16 of the squares 710 are subdivided into level 2 cells, and 64 of the squares 720 are subdivided into level 3 cells. In each square 700, 710 and 720, the hubert curve may propagate through each cell as indicated by the numeral. For example, in square 700, the hilbert curve propagates through each cell starting with "1" in the lower left corner, "2" in the upper left corner, "3" in the upper right corner, and "4" in the lower right corner. In square 710, the hilbert curve takes a more complex shape to traverse each cell, and in square 720, the shape still becomes more complex. In each case, the hilbert curve would traverse each cell of the square. Intervals (and/or portions thereof) in a one-dimensional representation overlap if and only if their corresponding regions (and/or their respective portions) overlap in the 2D representation. Thus, the hilbert curve may be used to map a two-dimensional space into a one-dimensional construct. A one-dimensional construct can be decomposed into a series of one-dimensional intervals. For example, a hilbert curve may be mapped to an interval of zero to one. As the hilbert curve traverses the cells, the interval for each cell may be a suitable fraction of the total interval. For example, in a square 700 with four cells, for a hilbert curve with an overall interval of zero to one, the interval corresponding to each cell may be as follows: 0-0.25 for the lower left cell, 0.25-0.5 for the upper left cell, 0.5-0.75 for the upper right cell, and 0.75-1.0 for the lower right cell. In square 710, the intervals will be 0-0.0625, 0.0625-0.125, 0.125-0.1875, etc. This convention can only be used to convert a single two-dimensional spaceA cell or subset of cells is mapped to a series of one-dimensional intervals. For example, if we are only concerned with the cell labeled "2" in square 700, the one-dimensional interval representing the area of interest in square 700 would be 0.25-0.50. Likewise, if we are only concerned with the cell labeled "6" in square 710, the one-dimensional interval representing the area of interest in square 710 will be 0.3125-0.375. In this way, a cell of interest, e.g., a cell containing a portion of a polyline representing a network span, may be transformed into a series of one-dimensional intervals. If every point on the earth is projected upward until it intersects an imaginary cube around the earth, the total interval for each of the six faces of the cube may be 0-1, 1-2, and so on, up to 6, each face may be subdivided into 2xCell, the value of x is sufficient to provide the required spatial resolution. In some embodiments, other space-filling shapes may be used; for example a Peano curve or a Moore curve.
FIG. 8 shows a flowchart of an example method 800 of evaluating a single point of failure in a computer network in accordance with an illustrative embodiment. Method 800 includes receiving a multi-segment line approximating a network span (stage 810). Method 800 includes determining a risk level that an event at a point will affect at least two of the multi-segment lines (stage 860). Method 800 includes determining whether there are more points in the set of points to evaluate (decision block 870). If there are more points to evaluate, the method 800 returns to stage 860. If all points in the set of points have been evaluated, method 800 proceeds to stage 880. Method 800 includes determining an overall risk of failure (stage 880). Method 800 includes outputting a report indicating at least one point determined to be a potential SPoF (stage 890). Method 800 may be performed by a SPoF mitigation system, such as SPoF mitigation system 110 described previously.
In some implementations, the method 800 may include reconfiguring a network switch to mitigate potential spofs. If the quantification engine determines that the risk level of a point exceeds a threshold, the reporting engine may provide an indication of the point to a reconfiguration engine, such as the reconfiguration engine 117 of the SPoF assessment system 110 described previously. The reconfiguration engine 117 may send instructions or commands to one or more network devices, such as network device 140 of environment 100, to effect reconfiguration of the network to mitigate potential spofs in one or more of the ways described above with reference to fig. 1. For example, the reconfiguration engine may implement SPoF mitigation in a number of ways, including reconfiguring the network device 140 to route traffic to a destination via a different network span, reconfiguring the network device 140 to set the network span to a backup route to handle traffic when one or more other network spans fail, and reconfiguring the network device 140 to divide data traffic between a network span that traverses a potential SPoF and another network span that does not traverse a potential SPoF.
In some embodiments, the method 800 may include additional steps to determine whether an outage event at a point may corrupt multiple nearby network spans, but less than all nearby network spans.
In some implementations, the method 800 may include additional stages to generate a set of points representing candidate potential spofs. In some implementations, the set of points represents a geographic area of interest. These pre-screening operations may save the computational resources needed to determine potential spofs by reducing the number of points to be examined. In these embodiments, method 800 may include mapping multiple segments representing a network span to multiple groups of cells (stage 820), mapping the multiple groups of cells representing the network span to a series of one-dimensional intervals (stage 830), determining a set of overlapping intervals from the series of one-dimensional intervals (stage 840), and generating a set of points from the set of overlapping intervals (stage 850). This set of points may be used to limit risk quantification operations to a smaller candidate set, thereby saving computational resources and speeding up the determination and mitigation of potential spofs.
FIG. 9 is a block diagram illustrating a general architecture of a computer system 1500 that may be used to implement the elements of the systems and methods described and illustrated herein, according to an illustrative embodiment. The computing system 1500 may be used to implement one or more of the devices described above, including the SPoF evaluation system 110, the network device 130, the geometry library 120, and/or the map library 130. The computing system 1500 may be used to implement one or more components of the SPoF evaluation system 110 described above, including the mapping engine 112, the quantification engine 114, the reconfiguration engine 117, and/or the optional detection engine 118. Computing system 1500 may be used to implement the evaluation of single point of failure in the computer network method 800 shown in fig. 8.
In general, computing system 1510 includes at least one processor 1550 for performing actions in accordance with instructions; and one or more storage devices 1570 or 1575, the one or more storage devices 1570 or 1575 for storing instructions and data. The illustrated example computing system 1510 includes one or more processors 1550, the one or more processors 1550 in communication via a bus 1515 with at least one network interface controller 1520 having one or more network interface ports 1522 connected to one or more network devices 1524, a memory 1570, and any other devices 1580; such as an I/O interface. Typically, processor 1550 will execute instructions received from memory. Processor 1550 is shown incorporating or directly connected to cache memory 1575.
In more detail, processor 1550 may be any logic circuitry that processes instructions fetched from, for example, memory 1570 or cache 1575. In many embodiments, processor 1550 is a microprocessor unit or a special-purpose processor. Computing device 1500 may be based on any processor or collection of processors capable of operating as described herein. In some embodiments, processor 1550 is capable of executing a single point of evaluation of a failure in the computer network shown in fig. 8. Processor 1550 may be a single core or a multi-core processor. Processor 1550 may be a plurality of processors. In some embodiments, processor 1550 may be configured to run multithreading. In some embodiments, processor 1550 may host one or more virtual machines or containers and a hypervisor or container manager for managing the operation of the virtual machines or containers. In such embodiments, the single point of evaluation of failure in the computer network method 800 illustrated in fig. 8 may be implemented within a virtualized or containerized environment provided on processor 1550.
Memory 1570 may be any device suitable for storing computer-readable data. The memory 1570 may be a device with fixed storage or a device for reading removable storage media. Examples include all forms of non-volatile memory, media and memory devices, semiconductor memory devices (e.g., EPROM, EEPROM, SDRAM, and flash memory devices), magnetic disks, magneto-optical disks, and optical disks (e.g., CD ROM, DVD-ROM, and CD ROMComputing system 1500 may have any number of memory devices 1570. In some embodiments, memory 1570 may include instructions corresponding to a single point of evaluation of a failure in the computer network method 800 shown in fig. 8. In some embodiments, memory 1570 supports virtualized or containerized memory that is accessible by a virtual machine or container execution environment provided by computing system 1510.
The network interface controller 1520 manages the exchange of data via the network interface 1522 (also referred to as a network interface port). Network interface controller 1520 handles the physical layer and data link layer of the OSI model for network communications. In some embodiments, some of the tasks of the network interface controller are handled by processor 1550. In some embodiments, network interface controller 1520 is part of processor 1550. In some embodiments, computing system 1510 has multiple network interface controllers 1520. Network interface 1522 is a connection point for a physical network link. In some embodiments, the network interface controller 1520 supports wireless network connections and the interface port 1522 is a wireless receiver/transmitter. Typically, the computing device 1510 exchanges data with other network devices 1524 via a physical or wireless link to the network interface 1522. In some embodiments, the network interface controller 1520 implements a network protocol such as ethernet.
Other devices 1580 may include I/O interfaces, external serial device ports, and any additional coprocessors. For example, computing system 1510 may include an interface (e.g., a Universal Serial Bus (USB) interface) for connecting input devices (e.g., keyboard, microphone, mouse, or other pointing device), output devices (e.g., video display, speakers, or printer), or other storage devices (e.g., a portable flash drive or external media drive). In some embodiments, computing device 1500 includes additional devices 1580 such as coprocessors, for example, math coprocessors can assist processor 1550 in performing high precision or complex computations.
Implementations of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software embodied in tangible media, firmware, or hardware, including the structures disclosed in this specification and their equivalents, or in combinations of one or more of them. Implementations of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on one or more computer storage media for execution by, or to control the operation of, data processing apparatus. The computer storage media may be or be included in a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more thereof. The computer storage media may also be or be included in one or more separate components or media (e.g., multiple CDs, disks, or other storage devices). The computer storage medium may be tangible and non-transitory.
The operations described in this specification may be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources. Operations may be performed within a native environment of the data processing apparatus or within one or more virtual machines or containers hosted by the data processing apparatus.
A computer program (also known as a program, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers or on one or more virtual machines or containers that are located at one site or distributed across multiple sites and interconnected by a communication network. Examples of communication networks include a local area network ("LAN") and a wide area network ("WAN"), an internetwork (e.g., the Internet), and a peer-to-peer network (e.g., an ad hoc peer-to-peer network).
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any invention or of what may be claimed, but rather as descriptions of features specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In some cases, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the implementations described above should not be understood as requiring such separation in all implementations, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
References to "or" may be construed as inclusive such that any term described using "or" may refer to any single, more than one, or all of the described terms. The labels "first", "second", "third", etc. do not necessarily indicate an order and are generally only used to distinguish between similar items or elements.
Various modifications to the embodiments described in this disclosure will be readily apparent to those skilled in the art, and the generic principles defined herein may be applied to other embodiments without departing from the spirit or scope of the disclosure. Thus, the claims are not intended to be limited to the embodiments shown herein but are to be accorded the widest scope consistent with the present disclosure, principles and novel features disclosed herein.
What is claimed is:
Claims (20)
1. a method of evaluating a single point failure, SPoF, in a computer network, the method executing on one or more processors and comprising:
receiving at least a first multi-segment line approximating a first network span and a second multi-segment line approximating a second network span;
for each point in a set of points representing a geographic location, determining a risk level that an event at the point will affect at least the first and second polylines;
determining an overall failure risk by combining risk levels for each point in the set of points; and
outputting a report indicating that at least one point is determined to be a potential SPoF based on the risk level for the at least one point.
2. The method of claim 1, comprising generating the set of points by:
mapping at least the first multi-segment to a first set of cells and the second multi-segment to a second set of cells;
mapping at least the first set of cells to a first series of one-dimensional intervals and the second set of cells to a second series of one-dimensional intervals;
determining a set of overlapping intervals between at least the first series of one-dimensional intervals and the second series of one-dimensional intervals, wherein each overlapping interval corresponds to a cell representing a candidate potential SPoF; and
generating the set of points from the set of overlapping intervals.
3. The method of claim 2, wherein mapping the first set of cells to a first series of one-dimensional intervals and mapping the second set of cells to a second series of one-dimensional intervals comprises: each group of cells is mapped to a series of intervals on the hilbert curve.
4. The method of claim 2, wherein:
each individual interval in the set of overlapping intervals has an open point and a closed point; and
determining the set of overlap intervals comprises:
sorting the combined individual intervals of the first series of one-dimensional intervals and the second series of one-dimensional intervals according to the open point of each individual interval; and
for a first individual interval having an open point and a closed point, determining that an open point of a second individual interval falls between the open point and the closed point of the first individual interval.
5. The method of claim 1, wherein the risk level is a first risk level, the method comprising:
for each point in the set of points, determining a second risk level that an event at the point would affect the first and second polylines but would not affect a third polyline that approximates a third net span.
6. The method of claim 1, comprising:
reconfiguring a network device of the computer network to mitigate the at least one potential SPoF based on the report.
7. The method of claim 6, wherein reconfiguring the network device comprises: rerouting data traffic through the network device to a third network span between a first point on the first network span and a second point on the first network span such that the third network span does not traverse the potential SPoF.
8. The method of claim 6, wherein reconfiguring the network device comprises: setting a third network span between a first point on the first network span and a second point on the first network span as a backup route in an event of a disruption event at the potential SPoF.
9. The method of claim 6, wherein reconfiguring the network device comprises: dividing data traffic through the network device between the first network span and a third network span that does not traverse the potential SPoF.
10. The method of claim 1, wherein:
each point in the set of points comprises a zone-specific distribution of baseline risk levels and event radii, the baseline risk levels and the zone-specific distribution representing a geographic zone-related failure event probability; and is
The risk level for each point includes the baseline risk level for that point plus the risk that an event at that point will affect at least the first and second multi-segment lines.
11. A system for evaluating a single point failure, SPoF, in a computer network, the system comprising one or more processors and a memory storing instructions configured to cause the one or more processors to:
receiving at least a first multi-segment line approximating a first network span and a second multi-segment line approximating a second network span;
for each point in a set of points representing a geographic location, determining a risk level that an event at the point will affect at least the first and second polylines;
determining an overall failure risk by combining risk levels for each point in the set of points; and
outputting a report indicating that at least one point is determined to be a potential SPoF based on the risk level for the at least one point.
12. The system of claim 11, wherein the instructions are configured to cause the one or more processors to generate the set of points by causing the one or more processors to:
mapping at least the first multi-segment to a first set of cells and the second multi-segment to a second set of cells;
mapping at least the first set of cells to a first series of one-dimensional intervals and the second set of cells to a second series of one-dimensional intervals;
determining a set of overlapping intervals between at least the first series of one-dimensional intervals and the second series of one-dimensional intervals, wherein each overlapping interval corresponds to a cell representing a candidate potential SPoF; and
generating the set of points from the set of overlapping intervals.
13. The system of claim 12, wherein the instructions are configured to cause the one or more processors to:
mapping the first set of cells to a first series of one-dimensional intervals and mapping the second set of cells to a second series of one-dimensional intervals by mapping each set of cells to a series of intervals on a Hilbert curve.
14. The system of claim 12, wherein:
each individual interval in the set of overlapping intervals has an open point and a closed point; and
the instructions are configured to cause the one or more processors to determine the set of overlap intervals by causing the one or more processors to:
sorting the combined individual intervals of the first series of one-dimensional intervals and the second series of one-dimensional intervals according to the open point of each individual interval; and
for a first individual interval having an open point and a closed point, determining that an open point of a second individual interval falls between the open point and the closed point of the first individual interval.
15. The system of claim 11, wherein the risk level is a first risk level, and the instructions are configured to cause the one or more processors to:
for each point in the set of points, determining a second risk level that an event at the point would affect the first and second polylines but would not affect a third polyline that approximates a third net span.
16. The system of claim 11, comprising instructions configured to cause the one or more processors to:
based on the report, reconfiguring network devices of the computer network to mitigate the at least one potential SPoF.
17. The system of claim 16, comprising instructions configured to cause the one or more processors to:
reconfiguring the network device by rerouting data traffic through the network device to a third network span between a first point on the first network span and a second point on the first network span such that the third network span does not traverse the potential SpoF.
18. The system of claim 16, comprising instructions configured to cause the one or more processors to:
reconfiguring the network device by setting a third network span between a first point on the first network span and a second point on the first network span as a backup route in an event of a disruption event at the potential SPoF.
19. The system of claim 16, comprising instructions configured to cause the one or more processors to:
reconfiguring the network device by dividing data traffic through the network device between the first network span and a third network span that does not traverse the potential SPoF.
20. The system of claim 11, wherein:
each point in the set of points comprises a zone-specific distribution of baseline risk levels and event radii, the baseline risk levels and the zone-specific distribution representing a geographic zone-related failure event probability; and is
The risk level for each point includes the baseline risk level for that point plus the risk that an event at that point will affect at least the first and second multi-segment lines.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US16/039,003 US10938631B2 (en) | 2018-07-18 | 2018-07-18 | Quantitative analysis of physical risk due to geospatial proximity of network infrastructure |
US16/039,003 | 2018-07-18 | ||
PCT/US2019/041975 WO2020018518A1 (en) | 2018-07-18 | 2019-07-16 | Quantitative analysis of physical risk due to geospatial proximity of network infrastructure |
Publications (2)
Publication Number | Publication Date |
---|---|
CN112020845A true CN112020845A (en) | 2020-12-01 |
CN112020845B CN112020845B (en) | 2023-09-19 |
Family
ID=67480439
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201980026292.7A Active CN112020845B (en) | 2018-07-18 | 2019-07-16 | Quantitative analysis of physical risk due to geospatial proximity of network infrastructure |
Country Status (5)
Country | Link |
---|---|
US (1) | US10938631B2 (en) |
EP (1) | EP3824597B1 (en) |
CN (1) | CN112020845B (en) |
DK (1) | DK3824597T3 (en) |
WO (1) | WO2020018518A1 (en) |
Families Citing this family (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20220028557A1 (en) | 2020-07-22 | 2022-01-27 | Pandemic Insights, Inc. | Natural-language text generation with pandemic-bio-surveillance multi pathogen systems |
Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20030131130A1 (en) * | 2002-01-08 | 2003-07-10 | Menachem Malkosh | Method and device for selecting a communication path |
US20130208584A1 (en) * | 2010-10-28 | 2013-08-15 | Eunkyung Kim | Mobile station, base station, and relay station for a wireless access system |
US20140208167A1 (en) * | 2011-10-28 | 2014-07-24 | Hewlett-Packard Development Company, L.P. | Method and system for single point of failure analysis and remediation |
US20140267788A1 (en) * | 2013-03-15 | 2014-09-18 | General Instrument Corporation | Method for identifying and prioritizing fault location in a cable plant |
CN104335182A (en) * | 2012-06-04 | 2015-02-04 | 阿尔卡特朗讯公司 | Method and apparatus for single point of failure elimination for cloud-based applications |
US20150242674A1 (en) * | 2014-02-26 | 2015-08-27 | Google Inc. | System and Method for Conflating Datasets |
Family Cites Families (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
WO2000033519A1 (en) * | 1998-12-01 | 2000-06-08 | Thor Simon | Improved signaling system for telecommunications |
IL149960A0 (en) * | 2000-09-21 | 2001-11-10 | Hal Tech Corp | System and method for network infrastructure management |
US7583605B2 (en) * | 2005-03-10 | 2009-09-01 | At&T Intellectual Property I, L.P. | Method and system of evaluating survivability of ATM switches over SONET networks |
US20120158445A1 (en) * | 2010-12-16 | 2012-06-21 | Cox Communications, Inc. | Geo-Spatial Mapping and Service Provision Analysis |
US8510150B2 (en) * | 2011-03-04 | 2013-08-13 | Verizon North Llc | Fiber to the premises network modeling systems and methods |
US20120323786A1 (en) * | 2011-06-16 | 2012-12-20 | OneID Inc. | Method and system for delayed authorization of online transactions |
US20190207807A1 (en) * | 2015-04-02 | 2019-07-04 | Elementum Scm (Cayman) Ltd. | Method and system for determining and locating nodal weaknesses in a network |
-
2018
- 2018-07-18 US US16/039,003 patent/US10938631B2/en active Active
-
2019
- 2019-07-16 CN CN201980026292.7A patent/CN112020845B/en active Active
- 2019-07-16 EP EP19746376.3A patent/EP3824597B1/en active Active
- 2019-07-16 DK DK19746376.3T patent/DK3824597T3/en active
- 2019-07-16 WO PCT/US2019/041975 patent/WO2020018518A1/en active Application Filing
Patent Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20030131130A1 (en) * | 2002-01-08 | 2003-07-10 | Menachem Malkosh | Method and device for selecting a communication path |
US20130208584A1 (en) * | 2010-10-28 | 2013-08-15 | Eunkyung Kim | Mobile station, base station, and relay station for a wireless access system |
US20140208167A1 (en) * | 2011-10-28 | 2014-07-24 | Hewlett-Packard Development Company, L.P. | Method and system for single point of failure analysis and remediation |
CN104335182A (en) * | 2012-06-04 | 2015-02-04 | 阿尔卡特朗讯公司 | Method and apparatus for single point of failure elimination for cloud-based applications |
US20140267788A1 (en) * | 2013-03-15 | 2014-09-18 | General Instrument Corporation | Method for identifying and prioritizing fault location in a cable plant |
US20150242674A1 (en) * | 2014-02-26 | 2015-08-27 | Google Inc. | System and Method for Conflating Datasets |
Also Published As
Publication number | Publication date |
---|---|
CN112020845B (en) | 2023-09-19 |
DK3824597T3 (en) | 2022-10-10 |
EP3824597A1 (en) | 2021-05-26 |
WO2020018518A1 (en) | 2020-01-23 |
US10938631B2 (en) | 2021-03-02 |
EP3824597B1 (en) | 2022-07-13 |
US20200028735A1 (en) | 2020-01-23 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
Argyroudis et al. | Digital technologies can enhance climate resilience of critical infrastructure | |
Mao et al. | Assessment of the impact of interdependencies on the resilience of networked critical infrastructure systems | |
US7529195B2 (en) | System and method of mapping and analyzing vulnerabilities in networks | |
EP3541015B1 (en) | Method and device for analyzing service survivability | |
EP2651098B1 (en) | Event processing system for an electrical power system | |
US10951646B2 (en) | Biology based techniques for handling information security and privacy | |
CN107431639B (en) | Method and device for managing risks in network | |
US9298084B2 (en) | Preventing double patterning odd cycles | |
US10726268B2 (en) | Building black box | |
US10423751B2 (en) | Semiconductor package floating metal checks | |
CN112040506A (en) | Reliability evaluation method and device of wireless sensor network and storage medium | |
Vass et al. | How to model and enumerate geographically correlated failure events in communication networks | |
CN112020845B (en) | Quantitative analysis of physical risk due to geospatial proximity of network infrastructure | |
Tapolcai et al. | Fast enumeration of regional link failures caused by disasters with limited size | |
Vass et al. | Enumerating maximal shared risk link groups of circular disk failures hitting k nodes | |
US10467888B2 (en) | System and method for dynamically adjusting an emergency coordination simulation system | |
Venkataramanan et al. | Enhancing microgrid resiliency against cyber vulnerabilities | |
US10423752B2 (en) | Semiconductor package metal shadowing checks | |
Hu et al. | Spatial vulnerability of network systems under spatially local hazards | |
US11175679B2 (en) | Drone elastic map | |
Karamouz et al. | Cloud computing in urban flood disaster management | |
CN114826147A (en) | Fault inspection method, device and medium for photovoltaic power station | |
Liu et al. | Vulnerability change of container shipping network on Maritime Silk Road under simulation disruption | |
US9158871B2 (en) | Graph modeling systems and methods | |
Gardner et al. | Determining geographic vulnerabilities using a novel impact based resilience metric |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
GR01 | Patent grant | ||
GR01 | Patent grant |
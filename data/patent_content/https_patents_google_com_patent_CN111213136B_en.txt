CN111213136B - Generation of domain-specific models in networked systems - Google Patents
Generation of domain-specific models in networked systems Download PDFInfo
- Publication number
- CN111213136B CN111213136B CN201980005097.6A CN201980005097A CN111213136B CN 111213136 B CN111213136 B CN 111213136B CN 201980005097 A CN201980005097 A CN 201980005097A CN 111213136 B CN111213136 B CN 111213136B
- Authority
- CN
- China
- Prior art keywords
- digital component
- component
- request
- digital
- knowledge graph
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 230000004044 response Effects 0.000 claims abstract description 97
- 238000012545 processing Methods 0.000 claims description 175
- 238000000034 method Methods 0.000 claims description 92
- 230000005236 sound signal Effects 0.000 claims description 69
- 238000003058 natural language processing Methods 0.000 claims description 44
- 230000004913 activation Effects 0.000 claims 4
- 230000008569 process Effects 0.000 description 14
- 238000009877 rendering Methods 0.000 description 13
- 238000004590 computer program Methods 0.000 description 11
- 238000004891 communication Methods 0.000 description 8
- 230000009471 action Effects 0.000 description 7
- 238000010586 diagram Methods 0.000 description 7
- 230000000007 visual effect Effects 0.000 description 5
- 230000003287 optical effect Effects 0.000 description 4
- 238000013515 script Methods 0.000 description 4
- 230000005540 biological transmission Effects 0.000 description 3
- 238000001914 filtration Methods 0.000 description 3
- 230000006870 function Effects 0.000 description 3
- 230000000670 limiting effect Effects 0.000 description 3
- 230000000644 propagated effect Effects 0.000 description 3
- 230000009467 reduction Effects 0.000 description 3
- 230000003213 activating effect Effects 0.000 description 2
- 230000003993 interaction Effects 0.000 description 2
- 239000004973 liquid crystal related substance Substances 0.000 description 2
- 230000033001 locomotion Effects 0.000 description 2
- 238000010801 machine learning Methods 0.000 description 2
- 238000007781 pre-processing Methods 0.000 description 2
- 238000000926 separation method Methods 0.000 description 2
- 230000003068 static effect Effects 0.000 description 2
- 230000001360 synchronised effect Effects 0.000 description 2
- IRLPACMLTUPBCL-KQYNXXCUSA-N 5'-adenylyl sulfate Chemical compound C1=NC=2C(N)=NC=NC=2N1[C@@H]1O[C@H](COP(O)(=O)OS(O)(=O)=O)[C@@H](O)[C@H]1O IRLPACMLTUPBCL-KQYNXXCUSA-N 0.000 description 1
- 241000282412 Homo Species 0.000 description 1
- 238000004364 calculation method Methods 0.000 description 1
- 239000000470 constituent Substances 0.000 description 1
- 230000008878 coupling Effects 0.000 description 1
- 238000010168 coupling process Methods 0.000 description 1
- 238000005859 coupling reaction Methods 0.000 description 1
- 238000013480 data collection Methods 0.000 description 1
- 238000003066 decision tree Methods 0.000 description 1
- 230000002950 deficient Effects 0.000 description 1
- 238000001514 detection method Methods 0.000 description 1
- 238000011143 downstream manufacturing Methods 0.000 description 1
- 230000000694 effects Effects 0.000 description 1
- 239000011159 matrix material Substances 0.000 description 1
- 238000010295 mobile communication Methods 0.000 description 1
- 230000006855 networking Effects 0.000 description 1
- 238000011045 prefiltration Methods 0.000 description 1
- 230000011218 segmentation Effects 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000011273 social behavior Effects 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 238000013179 statistical model Methods 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 238000012549 training Methods 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 238000013519 translation Methods 0.000 description 1
Abstract
The present disclosure relates generally to the generation of domain-specific, voice-activated systems in an interconnection network. The system may receive an input signal detected at a client device. The input signal may be a speech-based input signal, a text-based input signal, an image-based input signal, or other type of input signal. Based on the input signals, the system may select a domain-specific knowledge graph and generate a response based on the selected knowledge graph.
Description
Cross Reference to Related Applications
The present application claims priority from U.S. non-provisional patent application No.16/008,988, filed on 6/14 at 2018, and entitled "GENERATION OF DOMAIN-SPECIFIC MODELS IN NETWORKED SYSTEM," which is incorporated herein by reference in its entirety.
Background
In a networking environment such as the internet or other network, a first party content provider may provide information for public presentation on resources such as web pages, documents, applications, and other resources. The first party content may include text, video and audio information provided by the first party content provider. A user accessing a resource may request or wish to receive other information about the resource. To view or receive other information, the user needs to leave the currently viewed resource.
Disclosure of Invention
In accordance with at least one aspect of the present disclosure, a system for generating a natural language processing model in a networked system may include a data processing system. The data processing system may include one or more processors and memory. The one or more processors may execute a natural language processor component and a digital component selector. The data processing system may receive, via the natural language processor component and via an interface of the data processing system, an input audio signal detected by a sensor at the first client device. The data processing system may parse the input audio signal by the natural language processor component to identify a first search request of the first search requests in the input audio signal. The data processing system may select the search results based at least on the first search request by a digital component selector executed by the data processing system. The data processing system may select the digital component based on the first search request through a digital component selector. The digital component may include a link to a data source. The data source may include a plurality of entities. The digital component may include an input interface to request a knowledge graph based response.
The data processing system may transmit, via the interface, the digital component including the link to the data source and associated with the knowledge graph to the first client device along with the search results. The data processing system may receive a second search request through the interface and via an input interface of the digital component rendered by the client device. The data processing system may select the response based on the second search request by the digital component selector and based on the knowledge graph. The data processing system may transmit the response to the first client device through the interface to render the response within the digital component.
In accordance with at least one aspect of the present disclosure, a method of generating a natural language processing model in a networked system may include receiving, by a natural language processor component executed by a data processing system and via an interface of the data processing system, an input audio signal detected by a sensor at a first client device. The method may include parsing, by a natural language processor component, the input audio signal to identify a first search request of the first search requests in the input audio signal. The method may include selecting, by a digital component selector executed by the data processing system, search results based on at least a first search request. The method may include selecting, by a digital component selector, a digital component based on the first search request. The digital component may be associated with a data source and a knowledge graph based on the data source. The method may include transmitting, by the digital component selector, the digital component associated with the data source and the knowledge graph based on the data source to the first client device along with the search results.
In accordance with at least one aspect of the present disclosure, a system for generating a natural language processing model in a networked system may include a data processing system. The data processing system may include one or more processors and memory. The one or more processors may execute the digital component selector and natural language processor components. The data processing system may receive a content request from a client device through a digital component selector. The data processing system may select the digital component based on the content request through a digital component selector. The digital component may be associated with a data source and a knowledge graph based on the data source. The data processing system may transmit the digital component to the client computing device through the digital component selector to render the digital component in the content slot. The data processing system may receive the input audio signal detected by the sensor at the client device through the natural language processor component and via an interface of the data processing system. The data processing system may parse the input audio signal by the natural language processor component to identify a request in the input audio signal. The data processing system may select a response to the request based on the knowledge graph by the natural language processor component. The data processing system may transmit the response to the client computing device through the interface.
In accordance with at least one aspect of the present disclosure, a method of generating a natural language processing model in a networked system may include receiving, by a digital component selector executed by a data processing system, a content request from a client computing device. The method may include selecting, by a digital component selector, a digital component based on the content request. The digital component may be associated with a data source and a knowledge graph based on the data source. The method may include transmitting, by the digital component selector, the digital component to the client computing device to render the digital component in the content slot. The method may include receiving, by a natural language processor, an input audio signal detected by a sensor at a client device. The method may include parsing, by a natural language processor component, the input audio signal to identify a request in the input audio signal. The method may include selecting, by the natural language processor component, a response to the request based on the knowledge graph. The method may include transmitting the response to the client computing device through the interface.
These and other aspects and embodiments are discussed in detail below. The foregoing information and the following detailed description include illustrative examples of various aspects and embodiments, and provide an overview or framework for understanding the nature and character of the claimed aspects and embodiments. The accompanying drawings provide a description and a further understanding of various aspects and embodiments, and are incorporated in and constitute a part of this specification.
Drawings
The drawings are not intended to be drawn to scale. Like reference numbers and designations in the various drawings indicate like elements. In the interest of clarity, not every component may be labeled in every drawing.
In the drawings:
FIG. 1 illustrates an example system for generating a response based on a domain-specific natural language model in a networked computer environment, according to examples of this disclosure.
Fig. 2 illustrates a block diagram of the system illustrated in fig. 1 that generates and uses an example knowledge graph, in accordance with an example of the present disclosure.
Fig. 3 and 4 illustrate block diagrams of example methods of generating responses based on domain-specific natural language processing models in networked systems according to examples of the present disclosure.
Fig. 5 illustrates a block diagram of an example computer system that may be used in the system illustrated in fig. 1, according to an example of the present disclosure.
Detailed Description
The following is a more detailed description of various concepts related to methods, apparatus, and systems for generating voice-activated data streams in an interconnection network, and embodiments thereof. The various concepts introduced above and discussed in more detail below may be implemented in any of a number of ways.
The present disclosure is generally directed to the generation of domain-specific, voice-activated systems in an interconnection network. The system may receive an input signal detected at a client device. The input signal may be a speech-based input signal, a text-based input signal, an image-based input signal, or other type of input signal. The input signal may include a request, such as a search request. The request may be ambiguous, extensive, or contextual due to the conversational nature of the input signal. The system may use domain-specific knowledge maps to generate responses to requests. The interface to the domain-specific knowledge graph may be incorporated into a digital component that is provided in response to a search request or provided with first party content on a web page.
The system and method of the present technical solution achieves a reduction in network bandwidth by reducing the number of network transmissions required to complete a voice-based request. The present solution may enable the digital assistant to select a particular response to an ambiguous request, which may reduce the number of subsequent input audio signals required to complete the request. For example, when a first search request is received, a numeric component associated with a domain-specific knowledge graph may be selected based on the first search request. When a second search request is received, the domain-specific knowledge graph may be used to process the second search request. Domain-specific knowledge graphs may help provide a response to a second query, even if the second query is an ambiguous, broad, or context-deficient natural language query. This, in turn, may reduce the number of subsequent input audio signals required to complete the request. In some embodiments, the digital component may include an input interface through which the second search request may be received. Providing an input interface in the digital component may avoid the need for the user to leave the currently viewed resource to submit a second search request related to the digital component. In some embodiments, the digital component may be configured to render a response to the second search request within the digital component. Rendering the response within the digital component may avoid the need for the user to leave the currently viewed resource to view or receive a response to the second search request.
FIG. 1 illustrates an example system 100, the example system 100 generating a response based on a domain-specific natural language model in a networked computer environment. System 100 may include a data processing system 102. The data processing system 102 may communicate with one or more digital component provider devices 106 (e.g., content provider devices) or client computing devices 104 via a network 105.
The system 100 may include one or more networks 105. Network 105 may include a computer network such as the internet, a local area network, a wide area network, a metropolitan area network, or other area network; an intranet; a satellite network; other communication networks such as voice or data mobile telephone networks, or any combination thereof.
Data processing system 102 and client computing device 104 may access digital components and data sources 135 via network 105. The network 105 may be used to access a data source, such as a web page, a website, a domain (e.g., a collection of web pages), or a uniform resource locator. The digital components may be presented, output, rendered, or displayed on at least one computing device 104, such as a laptop computer, desktop computer, tablet computer, digital assistant, personal digital assistant, smart watch, wearable device, smart phone, portable computer, or speaker. For example, via network 105, a user of client computing device 104 may access a website (example data source 135) provided by digital component provider device 106. The website may include one or more digital components, such as first party and third party content.
The network 105 may include or constitute a display network, such as a subset of information resources available on the Internet that are associated with a content placement or search engine results system or that are entitled to include third party digital components. Data processing system 102 can access information resources, such as web pages, websites, domain names, or uniform resource locators, that can be presented, output, rendered, or displayed by client computing device 104 using network 105.
The network 105 may be any type or form of network and may include any of the following: point-to-point networks, broadcast networks, wide area networks, local area networks, telecommunication networks, data communication networks, computer networks, ATM (asynchronous transfer mode) networks, SONET (synchronous optical network) networks, SDH (synchronous digital hierarchy) networks, wireless networks, and wired networks. The network 105 may include wireless links such as infrared channels or satellite bands. The topology of the network 105 may include a bus, star, or ring network topology. The network may include a mobile telephone network using any one or more protocols for communicating among mobile devices, including advanced mobile phone protocol ("AMPS"), time division multiple access ("TDMA"), code division multiple access ("CDMA"), global system for mobile communications ("GSM"), general packet radio service ("GPRS"), or universal mobile telecommunications system ("UMTS"). Different types of data may be transmitted via different protocols or the same type of data may be transmitted via different protocols.
System 100 may include at least one data processing system 102. The data processing system 102 may include at least one logic device, such as a computing device having a processor to communicate with, for example, the computing device 104 or the digital component provider device 106 via the network 105. Data processing system 102 may include at least one computing resource, server, processor, or memory. For example, data processing system 102 may include multiple computing resources or servers located in at least one data center. Data processing system 102 may include multiple servers grouped logically and facilitate distributed computing techniques. The logical group of servers may be referred to as a data center, a server farm, or a machine farm. Servers may also be geographically dispersed. The data center or machine farm may be managed as a single entity or the machine farm may include multiple machine farms. Servers within each machine farm may be heterogeneous; one or more of the servers or machines may operate in accordance with one or more types of operating system platforms.
Servers in the machine farm may be stored in a high-density rack system along with associated storage systems, and may be located in an enterprise data center. Combining servers in this manner may improve manageability of the system, data security, physical security of the system, and system performance, for example, by locating the servers and high-performance storage systems on a localized high-performance network. The centralization of all or some of the data processing system 102 component parts, including the server and storage systems, and coupling them with the advanced system management tool, allows for more efficient use of server resources, which saves power and processing requirements and reduces bandwidth usage.
The client computing device 104 may include, execute, interface, or otherwise communicate with one or more of the following: at least one local digital assistant 134, at least one sensor 138, at least one transducer 140, at least one audio driver 142, or at least one display 144. The client computing device 104 may be combined with one or more interfaces, such as graphics or physical keywords.
The sensor 138 may include, for example, a camera, an ambient light sensor, a proximity sensor, a temperature sensor, an accelerometer, a gyroscope, a motion detector, a GPS sensor, a position sensor, a microphone, a video, image detection, or a touch sensor. Transducer 140 may include or be part of a speaker or microphone. The audio driver 142 may provide a software interface to the hardware transducer 140. The audio driver 142 may execute audio files or other instructions provided by the data processing system 102 to control the transducer 140 to generate corresponding sound waves or sound waves. The display 144 may include one or more hardware or software components configured to provide a visual indication or optical output, such as a light emitting diode, an organic light emitting diode, a liquid crystal display, a laser, or a display.
The client computing device 104 may or may not include a display. For example, the client computing device 104 may include a limited type of user interface, such as a microphone and speaker (e.g., the client computing device 104 may include a voice-driven or audio-based interface). The client computing device 104 may be a speaker-based digital assistant. The primary user interface of the computing device 104 may include a microphone and a speaker.
The client computing device 104 may include, execute, interface, or otherwise communicate with the local digital assistant 134. The local digital assistant 134 may detect an input signal, such as an audio input signal, at the client computing device 104. The input signal may include a request or a search request. Local digital assistant 134 may be an instance of remote digital assistant component 112 executing at data processing system 102, or may perform any of the functions of remote digital assistant component 112.
The local digital assistant 134 can filter out one or more terms or modify the terms before transmitting the terms as data to the data processing system 102 (e.g., the remote digital assistant component 112) for further processing. Local digital assistant 134 may convert the analog audio signals detected by transducer 140 into digital audio signals and transmit one or more data packets carrying the digital audio signals to data processing system 102 via network 105. In response to detecting an instruction to perform such a transmission, the local digital assistant 134 may transmit data packets carrying some or all of the input audio signal. The instructions may include, for example, a trigger key or other key or approval to transmit a data packet including the input audio signal to the data processing system 102.
The local digital assistant 134 may interface with one or more of the knowledge graphs 126 hosted or generated by the data processing system 102. The local digital assistant 134 may provide or render an interface to the knowledge graph 126. For example, local digital assistant 134 may receive input signals transmitted to data processing system 102. The remote digital component assistant 112 can determine a response to the request based at least on the knowledge graph 126. The local digital assistant 134 may interface with the knowledge graph 126 to provide results or responses to requests parsed from the input signal.
The local digital assistant 134 may perform pre-filtering or pre-processing on the input audio signal to remove certain frequencies of the audio. The pre-filter may comprise a filter such as a low pass filter, a high pass filter or a band pass filter. The filter may be applied in the frequency domain. The filters may be applied using digital signal processing techniques. The filter may be configured to maintain frequencies corresponding to human speech or human voice while eliminating frequencies that fall outside of typical frequencies of human voice. For example, the band pass filter may be configured to remove frequencies below a first threshold (e.g., 70Hz, 75Hz, 80Hz, 85Hz, 90Hz, 95Hz, 100Hz, or 105 Hz) and above a second threshold (e.g., 200Hz, 205Hz, 210Hz, 225Hz, 235Hz, 245Hz, or 255 Hz). Applying a bandpass filter may reduce computational resource utilization in downstream processing. The local digital assistant 134 on the computing device 104 may apply a band pass filter before transmitting the input audio signal to the data processing system 102, thereby reducing network bandwidth utilization. However, it may be more efficient to provide the input audio signal to the data processing system 102 to allow the data processing system 102 to perform filtering based on the computing resources available to the computing device 104 and the available network bandwidth.
The local digital assistant 134 may apply additional preprocessing or pre-filtering techniques, such as noise reduction techniques, to reduce the level of ambient noise that may interfere with the natural language processor. Noise reduction techniques may increase the accuracy and speed of the natural language processor, thereby improving the performance of the data processing system 102 and managing the rendering of the graphical user interface provided via the display 144.
The client computing device 104 may be associated with an end user that enters the voice query as audio input into the client computing device 104 (via the sensor 138 or transducer 140) and receives audio (or other) output from the data processing system 102 or digital component provider device 106 for presentation, display, or rendering to the end user of the client computing device 104.
The digital component may include computer generated speech that may be provided to the client computing device 104 from the data processing system 102 or the digital component provider device 106. The client computing device 104 may render the computer-generated speech to an end user via a transducer 140 (e.g., a speaker). The computer-generated speech may include a sound recording from a real person or a computer-generated language. The client computing device 104 may provide visual output via a display device 144 communicatively coupled to the computing device 104. The client computing device 104 may receive a query from an end user via a keyboard. The query may be a request or a search request.
The client computing device 104 may receive an input audio signal detected by a sensor 138 (e.g., a microphone) of the computing device 104. The input audio signal or other form of input signal may include, for example, a query, question, command, instruction, request, search request, or other statement provided in spoken language.
The client computing device 104 may include, execute, or be referred to as a digital assistant device. The digital assistant device may include one or more constituent components of the computing device 104. The digital assistant device may include a graphics driver that may receive display output from the data processing system 102 and render the display output on the display 132. The graphics driver may include hardware or software components that control or enhance how graphics or visual output is displayed on the display 144. The graphics driver may include, for example, a program that controls how the graphics components work with the rest of the computing device 104 (or digital assistant). The local digital assistant 134 may filter the input audio signal to create a filtered input audio signal, convert the filtered input audio signal into data packets, and transmit the data packets to a data processing system including one or more processors and memory.
The digital assistant device may include an audio driver 142 and a speaker assembly (e.g., transducer 140). The preprocessor component 140 can receive the indication of the display output and instruct the audio driver 142 to generate an output audio signal to cause the speaker component (e.g., transducer 140) to transmit an audio output corresponding to the indication of the display output.
The system 100 may include components, access, or otherwise interact with at least a digital component provider device 106. Digital component provider device 106 may include one or more servers that may provide digital components to client computing device 104 or data processing system 102. Digital component provider device 106 may provide data sources 135 or be associated with data sources 135. Data source 135 may be a website or landing page. The digital component provided by digital component provider device 106 may be associated with a data source 135 provided by digital component provider device 106. For example, the digital component may be third party content that includes a link to the data source 135, such as a landing page provided by the digital component provider device 106.
Digital component provider device 106 or components thereof may be integrated with data processing system 102 or at least partially executed by data processing system 102. Digital component provider device 106 may include at least one logic device, such as a computing device having a processor to communicate with computing device 104, data processing system 102, or digital component provider device 106 via network 105, for example. The digital component provider device 106 may include at least one computing resource, server, processor, or memory. For example, digital component provider device 106 may include a plurality of computing resources or servers located in at least one data center.
The digital component provider device 106 may provide audio, visual, or multimedia-based digital components for presentation by the client computing device 104 as output digital components or visual output digital components. The term "digital component" generally refers to data that may be rendered by a client computing device 104. The digital component may be a website, web page, application, text-based content, audio-based content, video-based content, other digital file, or any combination thereof. The digital component may be or include digital content. The digital component may be or may include a digital object. The digital component may include a plurality of digital content items or other digital components. For example, the digital component may be a website that includes other digital components such as advertisements or content from third parties. The digital components may include an instance of the local digital assistant 134 or cause the client computing device 104 to execute an instance of the local digital assistant 134.
Digital component provider device 106 may provide digital components to client computing device 104 via network 105 and bypass data processing system 102. Digital component provider device 106 may provide digital components to client computing device 104 via network 105 and data processing system 102. For example, digital component provider device 106 may provide digital components to data processing system 102, which may store digital components and provide digital components to client computing device 104 when requested by a client. The digital components may come from a data source 135. The data source may be a server hosting a web page, landing page, or other content.
Data processing system 102 may include at least one computing resource or server. Data processing system 102 may include, interface with, or otherwise communicate with at least one interface 110. Data processing system 102 can include, interface with, or otherwise communicate with at least one remote digital assistant component 112. Remote digital assistant component 112 can include, engage, or otherwise communicate with at least one NLP component 114 and at least one domain processor 117. Data processing system 102 may include, interface with, or otherwise communicate with at least one digital component part selector 120. Data processing system 102 may include, interface with, or otherwise communicate with at least one data store 124. The at least one data store 124 may include or store knowledge graph 126 and content data 132 in one or more data structures or databases.
The components of data processing system 102 may each include at least one processing unit or other logic device, such as a programmable logic array engine or module configured to communicate with a database store or database 124. The components of data processing system 102 can be separate components, a single component, or a portion of multiple data processing systems 102. System 100 and its components, such as data processing system 10, may include hardware elements, such as one or more processors, logic devices, or circuits.
Data processing system 102 may include an interface 110. Interface 110 may be configured, constructed, or operative to receive and transmit information using, for example, data packets. Interface 110 may receive and transmit information using one or more protocols, such as network protocols. The interface 110 may include a hardware interface, a software interface, a wired interface, or a wireless interface. The interface 110 may facilitate converting or formatting data from one format to another. For example, the interface 110 may include an application programming interface ("API") that includes definitions for communicating between various components, such as software components.
Remote digital assistant component 112 of data processing system 102 can execute or run NLP component 114 to receive or obtain data packets comprising an input signal. The input signals may include input audio signals or other input signals, such as typed text, detected by the sensor 138 of the computing device 104. For example, the input signals may include text entered by a user into the client computing device 104 via a keyboard or other text entry system. The data packets may provide a digital file. The NLP component 114 can receive or obtain a digital file or data packet that includes an input signal and parse the input signal. For example, the NLP component 114 can enable interactions between humans and computers. The NLP component 114 may be configured with techniques for converting input signals into text and understanding natural language to enable the data processing system 102 to derive meaning from human or natural language input.
The NLP component 114 may include or be configured with machine learning based techniques, such as statistical machine learning. The NLP component 114 may parse the input audio signal using a decision tree, statistical model, or probabilistic model. The NLP component 114 can perform functions such as, for example, named entity recognition (e.g., given a text stream, determining which terms in the text map to names, such as people or places, and what the type of each such name is, such as people, places (e.g., "home") or organizations), natural language generation (e.g., converting information from a computer database or semantic intent to an understandable human language), natural language understanding (e.g., converting text to a more formal representation, such as a first-order logical structure that a computer module can manipulate), machine translation (e.g., automatically translating text from one human language to another), lexical segmentation (e.g., separating words into individual morphemes and identifying the classes of morphemes, which can be challenging based on the lexical or structural complexity of the words of the language under consideration), question answering (e.g., determining answers to human language that can be specific or open), or semantic processing (e.g., processing that occurs after recognizing words and encoding their meanings in order to associate the recognized words with other words having similar meanings).
The NLP component 114 can convert the input audio signal to recognized text by comparing the input signal to a stored set of representative audio waveforms (e.g., in the data store 124) and selecting the closest match. The set of audio waveforms may be stored in data repository 124 or other database accessible to data processing system 102. The representative waveforms may be generated across a large set of users and may then be enhanced by speech samples from the users. After the audio signal is converted to recognized text, NLP component 114 matches the text with words that are associated with actions that data processing system 102 can service, for example, through training across users or through manual designation. The NLP component 114 can convert image or video input into text or digital files. NLP component 114 can process, analyze, or interpret image or video input to perform actions, generate requests, or select or identify data structures.
The NLP component 114 may obtain an input signal. Based on the input signal, NLP component 114 can identify at least one request. The request may indicate an intent or a numerical component, or may be a search request. The request may be a request for information that is explicitly stated. For example, the request may be "what color would be used by automobile model X? "problem. The intent may also be derived or not explicitly stated. For example, in the input signal "car model X2018", the input signal does not explicitly state that the user wants information about 2018 car model X, but the NLP component 114 may derive intent.
The NLP component 114 can parse the input signal to identify, determine, retrieve, or otherwise obtain a request from the input signal. For example, the NLP component 114 can apply semantic processing techniques to the input signal to identify search requests in the input signal.
Data processing system 102 may include or interface with an instance of domain processor 117. The domain processor 117 may be any script, file, program, application, set of instructions, or computer executable code configured to implement a computing device on which the domain processor 117 is executed to generate the knowledge graph 126. As explained in more detail below, a "knowledge graph" may be a data structure (e.g., graph data structure) that represents relationships between multiple entities. An entity may be any data associated with (e.g., stored by and/or referenced by) a data source.
The domain processor 117 may generate a domain-specific knowledge graph 126. For example, domain processor 117 may generate knowledge graph 126 for different particular websites, domains, data collections, other data sources 135. Domain processor 117 may generate knowledge graph 126 for each digital component received by data processing system 102 from digital component provider device 106. Domain processor 117 may save knowledge graph 126 to data store 124. The domain processor 117 may save the knowledge graph 126 in a relational database.
Data sources 135, such as websites under a particular domain, may include terms, phrases, or other data that may be generally referred to as entities. Knowledge graph 126 for a given data source 135 may include nodes representing entities in data source 135.
Knowledge graph 126 may include edges or links that connect related nodes in knowledge graph 126. Edges may represent relationships between entities. For example, two nodes that are wired by an edge may indicate that the entities represented by the nodes are associated. The domain processor 117 may assign weights to the edges. The weight may indicate a degree of association between nodes connected by a wire. For example, an edge with a higher weight may indicate that two entities represented by a node are more related to each other than two entities connected by an edge with a relatively lower weight. An edge may represent a semantic relationship between entities represented by nodes connected by the edge. Domain processor 117 can process text, phrases, or other entities of the data source using NLP component 114 to generate knowledge graph 126.
The domain processor 117 may generate the knowledge graph 126 based on the entities of the data sources. The data source may be associated with or associated with the digital component. For example, the digital component may be third party content that is displayed with the first party content of the web page. The digital component may include a link to a landing page, website, or other data source. The domain processor 117 may generate a knowledge graph 126 of the data sources (e.g., landing pages) to which the digital components are linked. The domain processor 117 may store the knowledge graph 126 in association with an indication of the data source in the data store 124. The domain processor 117 may generate a different knowledge graph 126 for each digital component part that is transmitted to the client computing device 104 for rendering.
Knowledge graph 126 of the digital components may be generated from only the first order data. For example, knowledge graph 126 may be generated based solely on entities and other data included in data sources 135 associated with the digital component. Knowledge maps 126 of the digital components may be generated from the first and second order data. The first order data may be entities and other data contained in data sources 135 associated with the digital components. The second order data may be entities and other data associated with different data sources 135 or web searches. The domain processor 117 may assign different weight factors to the first order data and the second order data. For example, an entity from first order data may have a relatively large impact on edge strength between two nodes when compared to an entity from second order data.
Digital component provider device 106 may transmit digital components to data processing system 102. Data processing system 102 may store the digital components as content data 132. The digital component may be used as third party content for a website. The digital components may include a uniform resource locator or a link to a landing page or other data source 135. When data processing system 102 receives a digital component from digital component provider device 106, domain processor 117 can generate knowledge graph 126 of data source 135 to which the digital component is linked. The domain processor 117 may store the knowledge graph 126 in association with an indication of the data source or digital component in the data store 124.
The domain processor 117 may generate an interface to the knowledge graph 126 and include the interface to the knowledge graph 126 into the digital component. The interface may be a link or deep link that causes an instance of the local digital assistant 134 to execute on the client computing device 104. For example, the client computing device 104 may receive the digital component in response to a request. Rendering the digital component may cause the client computing device 104 to launch or execute an instance of the local digital assistant 134. A response to the request presented to the rendered digital component may be generated based on the knowledge graph 126.
Data processing system 102 may execute or run an instance of digital component selector 120. The digital component selector 120 may select digital components that include text, strings, characters, video files, image files, or audio files that the client computing device 104 may process and present to a user via the display 144 or the transducer 140 (e.g., a speaker).
The digital component selector 120 may select a digital component responsive to or associated with a request in the input audio signal identified by the NLP component 114. The digital component selector 120 may select which digital component provider device 106 should or may satisfy the request and may forward the request to the digital component provider device 106. For example, data processing system 102 can initiate a session between digital component provider device 106 and client computing device 104 to enable digital component provider device 106 to transmit digital components to client computing device 104. Digital component selector 120 may request a digital component from digital component provider device 106. Digital component provider device 106 may provide digital components to data processing system 102, which may store the digital components in data store 124. In response to a request for a digital component, digital component selector 120 may retrieve the digital component from data store 124.
The digital component selector 120 may select a plurality of digital components via a real-time content selection process. The number component selector 120 may score and rank the number components and may select a number component from a plurality of number components based on the score or ranking of the number components. The digital component selector 120 may select one or more additional digital components to be transmitted to the second client computing device 104 based on the input audio signal (or keywords and requests contained therein). The digital component selector 120 may select additional digital components (e.g., advertisements) associated with different digital component provider devices 106.
The digital component selector 120 may provide the digital component selected in response to the request identified in the input signal to the computing device 104 or the local digital assistant 134 or an application executing on the computing device 104 for presentation. Accordingly, the digital component selector 120 may receive a content request from the client computing device 104, select a digital component in response to the content request, and transmit the digital component to the client computing device 104 for presentation. The digital component selector 120 may transmit the selected digital component to the local digital assistant 134 for presentation by the local digital assistant 134 itself or a third party application executed by the client computing device 104. For example, the local digital assistant 134 may play or output an audio signal corresponding to the selected digital component.
The data store 124 may store content data 132, which content data 132 may include digital components provided by, for example, the digital component provider device 106 or obtained or determined by the data processing system 102 to facilitate content selection. The content data 132 may include, for example, digital components (or digital component objects) that may include, for example, content items, online documents, audio, images, video, multimedia content, or third party content. The content data 132 may include digital components, data, or information provided by the client computing device 104 (or end user thereof). For example, the content data 132 may include user preferences, user information stored by the user, or data from previously input audio signals.
FIG. 2 illustrates a block diagram of the system 100 generating and using an example knowledge graph 126 to generate a response. As illustrated in fig. 2, the system 100 includes a client computing device 104. Client computing device 104 communicates with data processing system 102 and digital component provider device 106. Digital component provider device 106 may host, service, or otherwise be associated with data source 135. As illustrated in fig. 2, data source 135 may be a landing page. The landing page may be a website associated with the digital component. For example, the digital component may include a link to a landing page. The digital component may be third party content presented on a website having first party content. In this example, the digital component may be an image, video, audio clip, or text related to the ACME coffee machine, and the data source 135 may be a landing page of the ACME coffee machine.
Digital component provider device 106 may provide a digital component (in this example, an ACME coffee machine) to data processing system 102. Digital component selector 120 may receive the digital component and store the digital component in data store 124. The data processing system 102 may generate the knowledge graph 126 based on the digital components. Data processing system 102 can generate knowledge graph 126 based on data sources 135 associated with the digital components. For example, domain processor 117 may process text or other content of a landing page associated with a digital component via NLP component 114. Data processing system 102 may store knowledge graph 126 in data store 124. The digital component provider device 106 may generate a knowledge graph 126 associated with the digital component and provide the knowledge graph 126 with the digital component to the data processing system 102.
In the example illustrated in fig. 2, the client computing device 104 may be a mobile phone. The client computing device 104 may receive the input signal 200. The client computing device 104 may receive the input signal as an input audio signal. For example, the user may speak a request to the client computing device 104. Instances of the NLP component 114 (executing at the client computing device 104 or the data processing system 102) can parse the input signal to determine text of the input signal. The client computing device 104 may receive input signals via a keyboard. For example, the user may type in a request. The NLP component 114 can parse the input signal to identify a request, such as a search request, in the input signal 200. As illustrated in fig. 2, the NLP component 114 may parse the input signal 200 to identify the search request as "WHERE IS THE NEAREST coffee shop? (where is the nearest coffee shop?
Client computing device 104 may transmit the input signal to data processing system 102. The data processing system 102 may select a response to the search request parsed from the input signal. Data processing system 102 may transmit the search response to client computing device 104 for rendering. As illustrated in fig. 2, the response may be rendered to the user as a search response 202. Search response 202 may be rendered as text, images, video, audio, or any combination thereof. For example, as illustrated in fig. 2, search response 202 is rendered as text. When the client computing device 104 is a speaker-based digital assistant, the search response 202 may be rendered as an audio output signal.
Based on the search request, digital component selector 120 of data processing system 102 may select digital component 204. Data processing system 102 may transmit digital component 204 to client computing device 104. The client computing device 104 may render the digital component 204 to display or present the digital component 204 to the user along with the search response 202. The digital component 204 may be included in another digital component 206. Digital component 206 may be executed by local digital assistant 134. The digital component 206 may include an interface 208 to the knowledge graph 126. The interface 208 may be configured to receive an input signal, such as a text-based or audio-based input signal. The interface 208 may be referred to as an input interface 208. The digital component 204 or 206 may include a link to the landing page 135. Selecting the digital component 204 or 206 may cause the client computing device 104 to activate a web browser that loads the address identified in the link of the landing page 135.
The interface 208 may accept an input signal, such as an audio-based or text-based input signal. Client computing device 104 may receive input signals via interface 208 and transmit the input signals to data processing system 102. To receive an input signal, the interface 208 may be activated by a user. For example, a user may select, click, or tap on digital component 206 or interface 208 to activate interface 208, causing interface 208 to begin receiving input signals. Activating interface 208 may cause an input signal to enter interface 208 rather than an interface through which input signal 200 is received. Local digital assistant 134 may determine whether the input signal should be provided to interface 208 or to data processing system 102 (as with input signal 200). For example, the local digital assistant 134 can process the input signal using a local instance of the NLP component 114 and provide the input signal to the interface 208 based on one or more terms parsed from the input signal and based on the context or keywords of the digital component 204.
When the data processing system 102 receives an input signal via the interface 208, it may generate a response based on the knowledge graph 126. For example, the NLP component 114 can process an input signal to parse a request in the input signal. The request may be a request for additional information related to digital component 204. For example, in the example illustrated in fig. 2, the request may be additional information about the ACME coffee machine. The data processing system 102 can generate a response to the request using the knowledge graph 126 associated with the digital component 204. For example, knowledge graph 126 may be based on a landing page 135 associated with digital component 204 such that the response provides a response specific to entities, text, and other data contained within landing page 135. For example, the request received via interface 208 may be "WHAT IS THE cost of the coffee maker? (what is the price of the coffee machine. The response may include the price of the coffee machine as indicated on the landing page 135.
The digital component 206 may be transmitted to the client computing device 104 in response to the search request. The digital component 206 may be transmitted to the client computing device 104 in response to a request for third party content. For example, the client computing device 104 may load a web page that includes first party content. The web page may include a slot for third party content. The web page may include scripts or other processor-executable instructions that, when executed, cause the client computing device 104 to request third-party content from the data processing system 102. Data processing system 102, via digital component selector 120, may select digital component 206 based on an entity, keyword, content, or data associated with a first party content of a web page. Data processing system 102 may generate digital component 206 to include digital component 204 from digital component provider device 106 and interface 208. The interface 208 may be processor-executable instructions that cause the client computing device 104 to launch an instance of a local digital assistant. When the user views a web page that includes first party content and digital component 206, the user may input a signal into interface 208. Interface 208 may transmit the input signals to data processing system 102. Interface 208 may transmit the input signal to data processing system 102 without taking the browser off of the web page. This may enable the user to collect or request additional information about digital component 204 without leaving the web page.
The client computing device 104 may include a voice-only interface. For example, instead of displaying the search response 202, the client computing device 104 may render the search response 202 as an output audio file. For example, after rendering search response 202, digital components 206 and 204 may also be rendered to the user as output audio signals. The user may speak with the client computing device 104 to provide an input signal to the interface 208.
FIG. 3 illustrates a block diagram of an example method 300 of generating a response based on a domain-specific natural language processing model in a networked system. The method 300 may include receiving an input audio signal (ACT 302). The method 300 may include parsing the input audio signal (ACT 304). The method 300 may include selecting search results (ACT 306). Method 300 may include selecting a digital component (ACT 308). The method 300 may include transmitting the search results and the digital component (ACT 310). The method 300 may include receiving a request (ACT 312). The method 300 may include selecting a response (ACT 314). The method 300 may include transmitting a response (ACT 316).
The method 300 may include receiving an input signal (ACT 302). The method may include receiving an input signal by an NLP component that is executed by a data processing system. The input signal may be an input audio signal that is detected by a sensor on the first client device and transmitted to the data processing system. The sensor may be a microphone of the first client device. The input signal may be a typed request. A digital assistant component, at least partially executed by a data processing system comprising one or more processors and memory, can receive an input signal. The input signal may include a dialog facilitated by a digital assistant. A dialog may include one or more inputs and outputs. The dialog may be audio-based, text-based, or a combination of audio and text. The input audio signal may include text input, or other types of input that may provide dialog information. The data processing system may receive input for a session corresponding to the conversation.
The method 300 may include parsing the input signal (ACT 304). The NLP component of the data processing system can parse the input signal to identify the request. The request may be a search request. The request may be an intent or request for data, information, web pages or searches. The NLP component may identify one or more entities in the request, such as terms or phrases.
The method 300 may include selecting search results (ACT 306). The data processing system may select search results based at least on the search request parsed from the input signal. The data processing system may include or be interfaced with a search engine or search data processing system that may select one or more search results and provide the search results to the client computing device.
Method 300 may include selecting a digital component (ACT 308). The data processing system may select the digital component based on the search request. For example, a digital component provider device may provide data processing system candidate digital components. The digital component provider device may associate or tag candidate digital components with the keywords. The number component selector may select one or more number components from the candidate number components based on similarity between the key of the number component and the entity (e.g., term) identified in the request.
The similarity may be a match. For example, the data processing system may select a digital component having a key that exists as an entity in the request. For example, and referring to FIG. 2, the digital component 204 may be labeled with the keyword "coffee". The digital component selector may select the digital component 204 because the term "coffee" is present in the input signal 200.
The similarity may be based on semantic relationships. For example, the search may be for a vacation lease, and the data processing system may match the search with a numeric component that includes the keyword "flight reservation" because the phrase "flight reservation" may be semantically related to the vacation lease.
The digital component may be associated with a data source such as a landing page or other website. When the digital component includes a link to a data source, the digital component may be associated with the data source. The digital component may include a link such that when the link is activated by the client computing device, the link causes a web browser executed by the client computing device to retrieve the data source. The data processing system may generate a knowledge graph based on the data sources. For example, knowledge graphs may be generated from terms, phrases, or other entities included in the data source. The digital component provider device may generate a knowledge graph and provide the knowledge graph with the candidate digital components to the data processing system.
The method 300 may include transmitting the results and the digital component (ACT 310). The data processing system may transmit the search results and the digital component portions to a client computing device that transmits the input signals to the data processing system. Once the client computing device receives the results and the digital component, the client computing device may render the results and the digital component. Rendering the digital component may result in activating or executing an instance of the local digital assistant at the client computing device. The local digital assistant may render or otherwise display the digital components. The local digital assistant may render or display the results.
The digital component may include an interface to a knowledge graph. For example, the digital components, when rendered, may present an input interface, such as a graphical interface, to a user. Via the input interface, the user may input a request. The request may be transmitted to the data processing system via the digital component.
The method 300 may include receiving a request (ACT 312). The request may be within the input signal. The input signal may be an audio-based or text-based input signal. For example, the user may speak into the input interface a question that may be detected by a microphone of the client computing device. The local digital assistant may receive the input signal and transmit the input signal to the data processing system. When the input signal is an input audio signal, the NLP component may receive the input signal and parse the request from the input signal.
The method 300 may include selecting a response (ACT 314). The digital component selector may select a response to a request included in the input signal. The data processing system may generate a response based on the knowledge graph associated with the digital component transmitted to the client computing device at ACT 310.
The method 300 may include transmitting a response (ACT 316). The data processing system may transmit the response to the client computing device. The data processing system may include the response in a digital component that includes the response and instructions on how to render the response at the client computing device. The client computing device may render or display the response within the digital component transmitted to the client computing device at ACT 310. Rendering the response within the digital component previously transmitted to the client computing device may enable the response to be presented to the user without altering or changing the content currently displayed to the user. For example, and referring also to FIG. 2, rendering results in digital component 206 may enable input signal 200 and search response 202 to remain displayed to the user while the user requests and receives additional information about digital component 204.
FIG. 4 illustrates a block diagram of an example method 400 of generating a response based on a domain-specific natural language processing model in a networked system. The method 400 may include receiving a request (ACT 402). The method 400 may include selecting a digital component (ACT 404). Method 400 may include transmitting a digital component (ACT 406). The method 400 may include receiving an input signal (ACT 408). The method 400 may include parsing an input signal (ACT 410). The method 400 may include selecting a response (ACT 412). The method 400 may include transmitting a response (ACT 414).
The method 400 may include receiving a request (ACT 402). The request may be a request for third party content. The request may be received from a client computing device. For example, the client computing device may include a web browser. The web browser may receive and render a website including the first party content. The website may contain slots for third party content. The slots may include processor-executable instructions that may cause the web browser to transmit content requests to the data processing system. The request may include content parameters. The content parameter may be a size requirement of the returned digital component or a key that the data processing system may use to select the digital component.
The method 400 may include selecting a digital component (ACT 404). The data processing system may select a digital component from a plurality of digital components. A digital component selector of the data processing system may select the digital component. The digital component selector may select the plurality of digital components via a real-time content selection process. The number component selector may score and rank the number components. The number component selector may select a number component from a plurality of number components based on the scoring and ranking of the number components. For example, the number component selector may select the number component with the highest ranking or score. The data processing system may include the digital component in another digital component having an interface to a knowledge graph associated with the selected digital component.
Method 400 may include transmitting a digital component (ACT 406). The data processing system may transmit the selected digital component to the client computing device. The client computing device may receive the digital component and render the digital component as third-party content in one of the slots of the web page. Rendering the digital component with the first party content may present an interface to a knowledge graph associated with the digital component to an end user. For example, the rendering of the digital component may cause the client computing device to launch or execute a local instance of the digital assistant. The interface may be configured to receive an input signal. The input signal may be text-based or audio-based. The client computing device may transmit an input signal received via the digital component to the data processing system.
The method 400 may include receiving an input signal (ACT 408). Method 400 may include receiving an input signal by an NLP component executed by a data processing system. The input signal may be an input audio signal that is detected by a sensor on the first client device and transmitted to the data processing system. The sensor may be a microphone of the first client device. The input signal may be a typed request. A digital assistant component, at least partially executed by a data processing system comprising one or more processors and memory, can receive an input signal.
The method 400 may include parsing an input signal (ACT 410). The NLP component of the data processing system can parse the input signal to identify the request. The request may be a search request. The request may be an intent or request for data, information, web pages or searches. The NLP component may identify one or more entities in the request, such as terms or phrases. For example, the request may be for information or data related to a digital component provided as third-party content to the client computing device.
The method 400 may include selecting a response (ACT 412). The digital components from which the input signal is transmitted may be associated with a knowledge graph. The knowledge graph may be generated from terms or entities contained in a data source (e.g., landing page) associated with the digital component. The data processing system may select the response based on a knowledge graph associated with the digital component. For example, the NLP component of the data processing system can use the knowledge graph to generate a response based on the entities and data contained in the landing page.
The method 400 may include transmitting a response (ACT 414). The data processing system may transmit the response to the client computing device. The client computing device may receive the response and render the response within the digital component transmitted to the client computing device at ACT 406. Rendering the response within the digital component may enable the response to be presented to the user without altering or changing the first party content presented to the user. For example, the user does not need to leave the original website displaying the first party content to view or receive the response.
Fig. 5 is a block diagram of an example computer system 500. Computer system or computing device 500 may include or be used to implement system 100 or components thereof, such as data processing system 102. Data processing system 102 may include an intelligent personal assistant or a voice-based digital assistant. Computing system 500 includes a bus 505 or other communication component for communicating information, and a processor 510 or processing circuit coupled to bus 505 for processing information. Computing system 500 may also include one or more processors 510 or processing circuits coupled to a bus to process information. Computing system 500 also includes a main memory 515, such as a Random Access Memory (RAM) or other dynamic storage device, coupled to bus 505 for storing information and instructions to be executed by processor 510. Main memory 515 may be or include data store 124. Main memory 515 may also be used for storing location information, temporary variables, or other intermediate information during execution of instructions by processor 510. Computing system 500 may also include a Read Only Memory (ROM) 520 or a static storage device coupled to bus 505 for storing static information and instructions for processor 510. A storage device 525, such as a solid state device, magnetic disk, or optical disk, may be coupled to bus 505 for storing information and instructions continuously. Storage 525 may include or be part of data store 124.
The computing system 500 may be coupled via bus 505 to a display 535, such as a liquid crystal display or an active matrix display, to display information to a user. An input device 530, such as a keyboard including alphanumeric and other keys, may be coupled to bus 505 for communicating information and command selections to processor 510. The input device 530 may include a touch screen display 535. The input device 530 may also include a cursor control, such as a mouse, a trackball, or cursor direction keys for communicating direction information and command selections to the processor 510 and for controlling cursor movement on the display 535. For example, the display 535 may be part of the data processing system 102, the client computing device 104, or other components of fig. 1.
The processes, systems, and methods described herein may be implemented by computing system 500 in response to processor 510 executing an arrangement of instructions contained in main memory 515. Such instructions may be read into main memory 515 from another computer-readable medium, such as storage device 525. Execution of the arrangement of instructions contained in main memory 515 causes computing system 500 to perform the illustrative processes described herein. One or more processors in a multi-processing arrangement may also be employed to execute the instructions contained in main memory 515. Hardwired circuitry may be used in place of or in combination with software instructions to implement the systems and methods described herein. The systems and methods described herein are not limited to any specific combination of hardware circuitry and software.
Although an example computing system has been described in FIG. 5, the subject matter comprising the operations described in this specification can be implemented in other types of digital electronic circuitry, or in computer software, firmware, or hardware, including the structures and structural equivalents disclosed in this specification, or in combinations of one or more of them.
For the case where the system discussed herein gathers personal information about a user or may use personal information, the user may be provided with the following opportunities: whether or not the control program or function can collect personal information (e.g., information about a person's social network, social behavior or activity, user preferences, or user's location), or control whether or how content is received from a content server or other data processing system that may be more relevant to the user. In addition, certain data may be anonymized in one or more ways prior to storage or use in order to delete personally identifiable information when generating the parameters. For example, the identity of a user may be anonymously processed so that no personally identifiable information can be determined for the user, or the geographic location of the user may be generalized (such as city, zip code, or state level) where location information is obtained so that a particular location of the user cannot be determined. Thus, the user can control how information is collected about him or her and how the information is used by the content server.
The subject matter and operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. The subject matter described in this specification can be implemented as one or more computer programs (e.g., one or more circuits of computer program instructions) encoded on one or more computer storage media for execution by, or to control the operation of, data processing apparatus. Alternatively or additionally, the program instructions may be encoded on a manually generated propagated signal (e.g., a machine-generated electrical, optical, or electromagnetic signal) that is generated to encode information for transmission to suitable receiver apparatus for execution by data processing apparatus. The computer storage medium may be or be included in a computer readable storage device, a computer readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Although the computer storage medium is not a propagated signal, the computer storage medium may be a source or destination of computer program instructions encoded with an artificially generated propagated signal. The computer storage media may also be or be included in one or more separate components or media (e.g., multiple CDs, disks, or other storage devices). The operations described in this specification may be implemented as operations performed by a data processing apparatus on data stored on one or more computer readable storage devices or received from other sources.
The terms "data processing system," "computing device," "component," or "data processing apparatus" encompass a variety of devices, apparatuses, and machines for processing data, including, for example, a programmable processor, a computer, a system on a chip, or multiple chips, or a combination of the foregoing. The apparatus may comprise dedicated logic circuitry (e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit)). In addition to hardware, the apparatus may include code that creates an execution environment for the computer program in question, (e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them). The apparatus and execution environment may implement a variety of different computing model infrastructures, such as web services, distributed computing, and grid computing infrastructures. For example, the interface 110, digital component selector 120, domain processor 117, or NLP component 114, as well as other components of the data processing system 102, may include or share one or more data processing apparatuses, systems, computing devices, or processors.
A computer program (also known as a program, software application, app, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. The computer program may correspond to a file in a file system. A computer program can be stored in a portion of a file (e.g., one or more scripts stored in a markup language document), a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code) that store other programs or data. A computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs (e.g., components of data processing system 102) to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry (e.g., an FPGA or ASIC). Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and storage devices, including by way of example semiconductor memory devices (e.g., EPROM, EEPROM, and flash memory devices); magnetic disks (e.g., internal hard disks or removable disks); magneto-optical disk; CD-ROM and DVD-ROM disks. The processor and the memory may be supplemented by, or incorporated in, special purpose logic circuitry.
The subject matter described herein may be implemented in a computing system that includes a back-end component (e.g., as a data server) or that includes a middleware component (e.g., an application server) or that includes a front-end component (e.g., a client computer having a graphical user interface or a web browser through which a user can interact with an implementation of the subject matter described in this specification), or a combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include local area networks ("LANs") and wide area networks ("WANs"), internets (e.g., the internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
A computing system, such as system 100 or system 500, may include clients and servers. The client and server are typically remote from each other and typically interact through a communication network (e.g., network 105). The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some implementations, the server transmits data (e.g., data packets representing the data components) to the client device (e.g., for the purpose of displaying data to and receiving user input from a user interacting with the client device). Data generated at the client device (e.g., results of user interactions) may be received from the client device at the server (e.g., received by the data processing system 102 from the client computing device 104 or the digital component provider device 106).
Although operations are depicted in the drawings in a particular order, such operations need not be performed in the particular order shown or in sequential order, and not all illustrated operations need be performed. The acts described herein may be performed in a different order.
The separation of individual system components does not require separation in all embodiments, and the described program components can be included in a single hardware or software product. For example, NLP component 114, domain processor 117, or digital component selector 120 may be a single component, app, or program, or part of one or more servers having one or more processing circuit logic devices, or data processing system 102.
Having now described some illustrative embodiments, it should be apparent that the foregoing has been presented by way of example and not limitation. In particular, although many of the examples presented herein involve specific combinations of method acts or system elements, those acts and those elements may be combined in other ways to achieve the same objectives. Acts, elements and features discussed in connection with one embodiment are not intended to be excluded from a similar role in other embodiments or embodiments.
The phraseology and terminology used herein is for the purpose of description and should not be regarded as limiting. The use of "including," "comprising," "having," "containing," "involving," "characterized by" and variations thereof herein is meant to encompass the items listed thereafter and equivalents thereof as well as additional items and alternative embodiments consisting solely of the items listed thereafter. In one embodiment, the systems and methods described herein consist of one, more than one, each, or all of the elements, acts, or components described.
Any reference to an embodiment or element or act of a system and method recited in the singular and proceeded with the word "a" or "an" may also encompass embodiments comprising plural of such elements, and any reference to any embodiment, or element or act, herein plural, may also encompass embodiments comprising only a single element. Singular or plural references are not intended to limit the presently disclosed systems or methods, their components, acts, or elements to a single or multiple configurations. References to any action or element based on any information, action or element may include embodiments in which the action or element is based at least in part on any information, action or element.
Any embodiment disclosed herein may be combined with any other embodiment or example, and references to "an embodiment," "some embodiments," "one embodiment," etc., are not necessarily mutually exclusive, and are intended to indicate that a particular feature, structure, or characteristic described in connection with the embodiment may be included in at least one embodiment or example. Such terms as used herein do not necessarily all refer to the same embodiment. Any embodiment may be combined with any other embodiment, either inclusive or exclusive, in any manner consistent with aspects and embodiments disclosed herein.
Reference to "or" may be construed as inclusive such that any term described using "or" may indicate any one of a single, more than one, and all of the described terms. For example, references to "at least one of a 'and B' may include" a "only," B "only, and both" a "and" B ". Such references, used in conjunction with "comprising" or other open terms, may include additional items.
Where technical features in the drawings, detailed description, or any claim are followed by reference signs, the reference signs have been included to increase the intelligibility of the drawings, detailed description, and claims. Accordingly, neither the reference signs nor the absence thereof have any limiting effect on the scope of any claim elements.
The systems and methods described herein may be embodied in other specific forms without departing from the characteristics thereof. For example, the computing device 104 may generate a packetized data object and forward it to the third party application when the application is launched. The foregoing embodiments are illustrative and not limiting of the systems and methods described. The scope of the systems and methods described herein are, therefore, indicated by the appended claims rather than by the foregoing description, and all changes which come within the meaning and range of equivalency of the claims are therefore intended to be embraced therein.
Claims (23)
1. A system for generating a response in a networked system based on a domain-specific natural language processing model, comprising:
a data processing system comprising one or more processors and memory, the one or more processors executing a natural language processor component and a digital component selector for:
Receiving, by the natural language processor component and via an interface of the data processing system, an input audio signal detected by a sensor at a first client device;
Parsing, by the natural language processor component, the input audio signal to identify a first search request in the input audio signal;
Selecting, by a digital component selector executed by the data processing system, search results based on the first search request;
Selecting, by the digital component selector, a digital component to be presented with the search result using the first search request identified from the input audio signal, the digital component comprising:
a link for accessing a data source in response to activation of the link, the data source being associated with a knowledge graph generated using content of the data source, the knowledge graph representing relationships between a plurality of entities identified from the content of the data source, and
An input interface for processing a search request received via the first client device using the knowledge graph;
Transmitting the digital component and the search results selected based on the first search request through the interface for presentation via the first client device;
Receiving, by the interface, a second search request for delivery to an input interface of the digital component in response to activation of the digital component presented by the client device;
Selecting, by the digital component selector, a response based on the second search request corresponding to at least one of the plurality of entities represented by the knowledge graph in accordance with the knowledge graph; and
The response is transmitted to the first client device over the interface to present the response within the digital component.
2. The system of claim 1, comprising:
A domain processor executed by the data processing system to generate the knowledge graph based on the plurality of entities of the data source.
3. The system of claim 1, wherein the knowledge graph represents semantic relationships between the plurality of entities of the data source.
4. The system of claim 1, wherein the data source comprises a landing page of the digital component.
5. The system of claim 1, comprising:
The natural language processor component receives the second search request via an input interface of the digital component as a second input audio signal detected by the sensor of the first client device;
the natural language processor component parses the second input audio signal to identify a request in the second input audio signal;
A domain processor that generates a second digital component based at least on the knowledge graph, the second digital component comprising a response to a request in the second input audio signal; and
The interface transmits the second digital component portion to the first client device.
6. The system of claim 5, comprising:
the digital component selector selecting a content provider based on a request in the second input audio signal;
The digital component selector includes a link to the content provider in the second digital component.
7. The system of claim 2, comprising:
The digital component selector selecting a second data source based on the second search request, the second data source comprising a plurality of second entities; and
The domain processor generates the knowledge graph representing semantic relationships between a plurality of entities of the data source and a plurality of second entities of the second data source.
8. The system of claim 1, wherein a knowledge graph includes nodes representing each of a plurality of entities of the data source and edges representing relationships between the nodes.
9. The system of claim 8, comprising:
a domain processor that calculates a weight for each of the edges representing a relationship between nodes.
10. The system of claim 1, comprising:
The natural language processor component receives a second input signal detected by the first client device;
the natural language processor component parses the second input signal to identify a request in the second input signal;
a domain processor that generates a second digital component based at least on the knowledge graph, the second digital component comprising a response to a request in the second input signal; and
The interface transmits the second digital component portion to the first client device in response to a request in the second input signal.
11. The system of claim 1, comprising:
The digital component selector receiving a content request from the first client device;
The digital component selector selecting a second digital component based on the content request, the second digital component being associated with a second data source and a second knowledge graph based on the second data source;
the digital component selector transmitting the second digital component to the first client device to render the second digital component in a content slot;
The natural language processor component receives a second input audio signal detected by a sensor at the first client device;
The natural language processor component parses the input audio signal to identify a second request in the input audio signal;
the natural language processor component selects a response to the second request based on the second knowledge graph; and
The interface transmits the response to the first client device.
12. A method for generating a response in a networked system based on a domain-specific natural language processing model, comprising:
Receiving, by a natural language processor component executed by a data processing system and via an interface of the data processing system, an input audio signal detected by a sensor at a first client device;
Parsing, by the natural language processor component, the input audio signal to identify a first search request in the input audio signal;
Selecting, by a digital component selector executed by the data processing system, search results based on the first search request;
Selecting, by the digital component selector, a digital component to be presented with the search result using the first search request identified from the input audio signal, the digital component comprising:
A link for accessing a data source in response to activation of the link, the data source being associated with a knowledge graph generated based on content of the data source, the knowledge graph representing a relationship between a plurality of entities identified from the content of the data source, and
An input interface for processing a search request received via the first client device using the knowledge graph;
transmitting, by the digital component selector, the digital components associated with the data source and the knowledge graph based on the data source for presentation with the search results via the first client device;
Receiving, by the interface, a second search request for delivery to an input interface of the digital component in response to activation of the digital component presented by the client device;
Selecting, by the digital component selector, a response based on the second search request corresponding to at least one of the plurality of entities represented by the knowledge graph in accordance with the knowledge graph; and
The response is transmitted to the first client device over the interface to present the response within the digital component.
13. The method of claim 12, comprising:
The knowledge graph is generated by a domain processor executed by the data processing system based on one or more entities contained in the data source.
14. The method of claim 12, wherein the knowledge graph represents semantic relationships between a plurality of entities of the data source.
15. The method of claim 12, wherein the data source comprises a landing page of the digital component.
16. The method of claim 12, comprising:
Receiving, by the natural language processor component, a second input audio signal detected by the sensor of the first client device via the digital component;
Parsing, by the natural language processor component, the second input audio signal to identify a request in the second input audio signal;
Generating, by a domain processor, a second digital component based at least on the knowledge graph, the second digital component comprising a response to a request in the second input audio signal; and
Transmitting the second digital component part to the first client device through the interface.
17. The method of claim 16, comprising:
Selecting, by the digital component selector, a content provider based on the request in the second input audio signal;
generating a link to the content provider through the digital component selector; and
A link to the content provider is included in the second digital component.
18. The method of claim 16, comprising:
Selecting, by the digital component selector, a second data source based on a request in the second input audio signal, the second data source comprising a plurality of second entities; and
The knowledge graph representing semantic relationships between a plurality of entities of the data source and a plurality of second entities of the second data source is generated by the domain processor.
19. The method of claim 12, comprising:
Receiving, by the natural language processor component and via the digital component, a second input signal detected by the first client device;
Parsing, by the natural language processor component, the second input signal to identify a request in the second input signal;
Generating, by a domain processor, a second digital component based at least on the knowledge graph, the second digital component comprising a response to a request in the second input signal; and
Transmitting, by the domain processor, the second digital component portion to the first client device in response to a request in the second input signal.
20. The method of claim 12, comprising:
Receiving a content request from the first client device through a digital component selector executed by the data processing system;
Selecting, by the digital component selector, a second digital component based on the content request, the second digital component being associated with a second data source and a second knowledge graph based on the second data source;
transmitting the second digital component part to the first client device through the digital component part selector to render the second digital component part in a content slot;
Receiving, by the natural language processor component, a second input audio signal detected by a sensor at the first client device;
Parsing, by the natural language processor component, the input audio signal to identify a second request in the input audio signal;
Selecting, by the natural language processor component, a response to the second request based on the second knowledge graph; and
Transmitting the response to the first client device through the interface.
21. The method of claim 12, wherein the knowledge graph includes nodes representing each of a plurality of entities of the data source and edges representing relationships between the nodes.
22. The method of claim 21, further comprising calculating a weight for each of the edges representing a relationship between the nodes.
23. A non-transitory computer readable storage medium comprising instructions which, when executed by a computer, cause the computer to perform the method of any of claims 12 to 22.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US16/008,988 | 2018-06-14 | ||
US16/008,988 US10963492B2 (en) | 2018-06-14 | 2018-06-14 | Generation of domain-specific models in networked system |
PCT/US2019/021882 WO2019240857A1 (en) | 2018-06-14 | 2019-03-12 | Generation of domain-specific models in networked system |
Publications (2)
Publication Number | Publication Date |
---|---|
CN111213136A CN111213136A (en) | 2020-05-29 |
CN111213136B true CN111213136B (en) | 2024-05-14 |
Family
ID=
Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9009192B1 (en) * | 2011-06-03 | 2015-04-14 | Google Inc. | Identifying central entities |
CN105074694A (en) * | 2013-03-15 | 2015-11-18 | 卡马祖伊发展公司 | System and method for natural language processing |
CN105528349A (en) * | 2014-09-29 | 2016-04-27 | 华为技术有限公司 | Method and apparatus for analyzing question based on knowledge base |
Patent Citations (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9009192B1 (en) * | 2011-06-03 | 2015-04-14 | Google Inc. | Identifying central entities |
CN105074694A (en) * | 2013-03-15 | 2015-11-18 | 卡马祖伊发展公司 | System and method for natural language processing |
CN105528349A (en) * | 2014-09-29 | 2016-04-27 | 华为技术有限公司 | Method and apparatus for analyzing question based on knowledge base |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11562009B2 (en) | Generation of domain-specific models in networked system | |
CN111108476B (en) | Graphical user interface rendering management through voice-driven computing infrastructure | |
US11908462B2 (en) | Adaptive interface in a voice-activated network | |
US11514907B2 (en) | Activation of remote devices in a networked system | |
US11776536B2 (en) | Multi-modal interface in a voice-activated network | |
CN111344694B (en) | Interface for distributed network system | |
CN111213136B (en) | Generation of domain-specific models in networked systems | |
CN110720098B (en) | Adaptive interface in voice activated networks |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
GR01 | Patent grant |
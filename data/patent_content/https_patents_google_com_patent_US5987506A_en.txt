US5987506A - Remote access and geographically distributed computers in a globally addressable storage environment - Google Patents
Remote access and geographically distributed computers in a globally addressable storage environment Download PDFInfo
- Publication number
- US5987506A US5987506A US08/850,364 US85036497A US5987506A US 5987506 A US5987506 A US 5987506A US 85036497 A US85036497 A US 85036497A US 5987506 A US5987506 A US 5987506A
- Authority
- US
- United States
- Prior art keywords
- data
- computers
- file
- directory
- local
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/46—Multiprogramming arrangements
- G06F9/50—Allocation of resources, e.g. of the central processing unit [CPU]
- G06F9/5005—Allocation of resources, e.g. of the central processing unit [CPU] to service a request
- G06F9/5011—Allocation of resources, e.g. of the central processing unit [CPU] to service a request the resources being hardware resources other than CPUs, Servers and Terminals
- G06F9/5016—Allocation of resources, e.g. of the central processing unit [CPU] to service a request the resources being hardware resources other than CPUs, Servers and Terminals the resource being the memory
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/07—Responding to the occurrence of a fault, e.g. fault tolerance
- G06F11/0703—Error or fault processing not based on redundancy, i.e. by taking additional measures to deal with the error or fault not making use of redundancy in operation, in hardware, or in data representation
- G06F11/0706—Error or fault processing not based on redundancy, i.e. by taking additional measures to deal with the error or fault not making use of redundancy in operation, in hardware, or in data representation the processing taking place on a specific hardware platform or in a specific software environment
- G06F11/0721—Error or fault processing not based on redundancy, i.e. by taking additional measures to deal with the error or fault not making use of redundancy in operation, in hardware, or in data representation the processing taking place on a specific hardware platform or in a specific software environment within a central processing unit [CPU]
- G06F11/0724—Error or fault processing not based on redundancy, i.e. by taking additional measures to deal with the error or fault not making use of redundancy in operation, in hardware, or in data representation the processing taking place on a specific hardware platform or in a specific software environment within a central processing unit [CPU] in a multiprocessor or a multi-core unit
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/07—Responding to the occurrence of a fault, e.g. fault tolerance
- G06F11/0703—Error or fault processing not based on redundancy, i.e. by taking additional measures to deal with the error or fault not making use of redundancy in operation, in hardware, or in data representation
- G06F11/0751—Error or fault detection not based on redundancy
- G06F11/0754—Error or fault detection not based on redundancy by exceeding limits
- G06F11/0757—Error or fault detection not based on redundancy by exceeding limits by exceeding a time limit, i.e. time-out, e.g. watchdogs
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/07—Responding to the occurrence of a fault, e.g. fault tolerance
- G06F11/14—Error detection or correction of the data by redundancy in operation
- G06F11/1402—Saving, restoring, recovering or retrying
- G06F11/1415—Saving, restoring, recovering or retrying at system level
- G06F11/142—Reconfiguring to eliminate the error
- G06F11/1425—Reconfiguring to eliminate the error by reconfiguration of node membership
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/07—Responding to the occurrence of a fault, e.g. fault tolerance
- G06F11/14—Error detection or correction of the data by redundancy in operation
- G06F11/1402—Saving, restoring, recovering or retrying
- G06F11/1415—Saving, restoring, recovering or retrying at system level
- G06F11/1435—Saving, restoring, recovering or retrying at system level using file system or storage system metadata
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/07—Responding to the occurrence of a fault, e.g. fault tolerance
- G06F11/16—Error detection or correction of the data by redundancy in hardware
- G06F11/18—Error detection or correction of the data by redundancy in hardware using passive fault-masking of the redundant circuits
- G06F11/182—Error detection or correction of the data by redundancy in hardware using passive fault-masking of the redundant circuits based on mutual exchange of the output between redundant processing components
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F11/00—Error detection; Error correction; Monitoring
- G06F11/07—Responding to the occurrence of a fault, e.g. fault tolerance
- G06F11/16—Error detection or correction of the data by redundancy in hardware
- G06F11/20—Error detection or correction of the data by redundancy in hardware using active fault-masking, e.g. by switching out faulty elements or by switching in spare elements
- G06F11/2053—Error detection or correction of the data by redundancy in hardware using active fault-masking, e.g. by switching out faulty elements or by switching in spare elements where persistent mass storage functionality or persistent mass storage control functionality is redundant
- G06F11/2094—Redundant storage or storage space
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F12/00—Accessing, addressing or allocating within memory systems or architectures
- G06F12/02—Addressing or allocation; Relocation
- G06F12/08—Addressing or allocation; Relocation in hierarchically structured memory systems, e.g. virtual memory systems
- G06F12/0802—Addressing of a memory level in which the access to the desired data or data block requires associative addressing means, e.g. caches
- G06F12/0806—Multiuser, multiprocessor or multiprocessing cache systems
- G06F12/0813—Multiuser, multiprocessor or multiprocessing cache systems with a network or matrix configuration
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F12/00—Accessing, addressing or allocating within memory systems or architectures
- G06F12/02—Addressing or allocation; Relocation
- G06F12/08—Addressing or allocation; Relocation in hierarchically structured memory systems, e.g. virtual memory systems
- G06F12/10—Address translation
- G06F12/1072—Decentralised address translation, e.g. in distributed shared memory systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F15/00—Digital computers in general; Data processing equipment in general
- G06F15/16—Combinations of two or more digital computers each having at least an arithmetic unit, a program unit and a register, e.g. for a simultaneous processing of several programs
- G06F15/163—Interprocessor communication
- G06F15/167—Interprocessor communication using a common memory, e.g. mailbox
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
- G06F16/9574—Browsing optimisation, e.g. caching or content distillation of access to content, e.g. by caching
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/02—Protocols based on web technology, e.g. hypertext transfer protocol [HTTP]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
- H04L67/1001—Protocols in which an application is distributed across nodes in the network for accessing one among a plurality of replicated servers
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/75—Indicating network or usage conditions on the user display
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L69/00—Network arrangements, protocols or services independent of the application payload and not provided for in the other groups of this subclass
- H04L69/30—Definitions, standards or architectural aspects of layered protocol stacks
- H04L69/32—Architecture of open systems interconnection [OSI] 7-layer type protocol stacks, e.g. the interfaces between the data link level and the physical level
- H04L69/322—Intralayer communication protocols among peer entities or protocol data unit [PDU] definitions
- H04L69/329—Intralayer communication protocols among peer entities or protocol data unit [PDU] definitions in the application layer [OSI layer 7]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L69/00—Network arrangements, protocols or services independent of the application payload and not provided for in the other groups of this subclass
- H04L69/40—Network arrangements, protocols or services independent of the application payload and not provided for in the other groups of this subclass for recovering from a failure of a protocol instance or entity, e.g. service redundancy protocols, protocol state redundancy or protocol service redirection
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/40—Network security protocols
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L69/00—Network arrangements, protocols or services independent of the application payload and not provided for in the other groups of this subclass
- H04L69/24—Negotiation of communication capabilities
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/964—Database arrangement
- Y10S707/966—Distributed
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99941—Database schema or data structure
- Y10S707/99943—Generating database or data structure, e.g. via user interface
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99941—Database schema or data structure
- Y10S707/99944—Object-oriented database structure
- Y10S707/99945—Object-oriented database structure processing
Definitions
- the present invention relates in general to distributed computer workgroups and, more specifically, to a globally addressable storage environment that accommodates remote access and two or more interconnected computer networks.
- the conventional computer network includes a number of client computers connected together and further connected to a server computer that stores the data and the programs that client computers employ during network operation.
- This configuration is generally referred to as a client-server network.
- each client is a conventional computer system that includes a private main memory, typically a RAM memory, and a persistent storage, typically a hard disk.
- the server is usually an expensive high end machine that includes a high speed processor unit and a large memory, often having ten to one hundred times more storage than the individual client computers.
- the clients and server cooperate to share data and services among the different users, and thereby the individual computers appear as a unified distributed system.
- the server acts as a central controller that provides through its large memory a central repository of network data, and that distributes services to the individual client computers, generally on an as-available basis.
- these services are provided by means of specialized software running on a high speed processor on the server computer.
- the client-server computer networking model allows organizations of all sizes to utilize group productivity products such as e-mail. Many business organizations have grown to rely heavily on network services. Employees who travel typically need to access the same network services and resources provided to them at work. Field offices also frequently need to access the headquarters' network services.
- the term "telecommuter” has been used to describe an employee who stays at home and conducts business by accessing the network services provided at the traditional worksite.
- These types of users are sometimes referred to as "remote” or “remote clients” because they typically are located in a physically remote place from the networks and because they do not connect to the networks locally or directly. Remote users typically connect to the networks via telephone lines.
- a remote user generally can utilize any type of computer to access the network including, for example, a personal computer, a workstation, or a portable computer such as a laptop computer, a notebook computer, or a palmtop computer.
- a remote user typically connects a modem (or other communications adapter such as a digital adapter if the telephones lines are wholly digital) to a serial port of the computer.
- the modem connected to the user's remote computer communicates over the telephone lines with another modem that is coupled to a device coupled to the network.
- the other modem and the device are located at the network that the remote client is attempting to access.
- the device can be coupled directly to the network, or it can be coupled to the network which the remote client is attempting to access via a communications link (e.g., a WAN link) to that network.
- the device typically is referred to as a "remote access server” or a "remote access device.”
- a typical remote access device provides a point of network access for one or more remote clients.
- client-server networks provide a static operating environment that is set for optimal performance at a certain level of network activity. Consequently, client-server networks fail to exploit available resources as network activity changes and cannot improve system performance. In particular, as network activity rises above or drops below the expected level, the static operating environment of a client-server network lacks any ability to reconfigure dynamically the allocation of network resources to a configuration providing better performance for the present level of activity.
- the client-server computer networking model requires that computer programs written to operate in a client-server environment distribute themselves between clients and the server. This requires that the application programs implement a set of functions that divide the program between the clients and the server. This distribution of the application programs requires that the client-server application programs be quite complex. For example, a client-server computer application program that shares data between different machines must include functionality that allows for the distribution of multiple copies of data files, the maintenance of coherency for the distributed copies, and other such low-level management services.
- the client-server network stores all important applications and data files in the memory of the server system. Consequently, the client-server network is subject to complete system failure each time the server system crashes.
- a further object of the invention is to provide computer network systems that have adaptable system configurations for dynamically exploiting distributed network resources and thereby increasing network performance and productivity.
- Another object of the invention is to provide computer network systems that have improved fault tolerance and that are more readily scaleable to allow the addition of more network nodes as well as to allow the interconnection of two or more networks.
- the environment in which the invention operates includes systems that create and manage a virtual storage space shared by each computer on a network.
- the virtual space spans each storage device (e.g., RAM and hard disk) connected to the network. Accordingly, all data stored on the network can be stored within the virtual space and the actual physical location of the data can be in any of the storage devices connected to the network.
- the system can create or receive a global address signal that represents a portion (e.g., 4 kilobytes) of the virtual space.
- the global address signal can be decoupled from (i.e., unrelated to) the physical and virtual address spaces of the underlying computer hardware to provide support for a memory space large enough to span each volatile (e.g., RAM, etc.) and persistent (e.g., hard disk, tape drive, etc.) storage device connected to the network.
- volatile e.g., RAM, etc.
- persistent e.g., hard disk, tape drive, etc.
- systems of the invention can operate on 32-bit computers, but can employ global address signals that can be 128 bits wide. Accordingly, the virtual memory space spans 2 128 bytes, which is much larger than the 2 32 address space supported by any one of the underlying computer hardware.
- Such a huge address space is large enough to provide a separate address for every byte of data storage on the network including all RAM, disk, and tape storage.
- the system includes a directory manager that tracks those portions of the virtual space that are in use.
- the system provides physical storage for each portion of the virtual space in use by mapping (i.e., assigning) each such portion to a physical device such as RAM or a hard disk.
- mapping provides a level of indirection that facilitates data migration, fault-tolerant operation, and load balancing.
- each computer can share the space. This allows the networked computers to appear to have a single memory, and therefore can allow application programs running on different computers to communicate using techniques currently employed to communicate between applications running on the same machine.
- a computer system employs a globally addressable storage environment that allows a plurality of networked computers to access data by addressing even when the data is stored on a persistent storage device such as a computer hard disk and other traditionally non-addressable data storage devices.
- the computers can be located on a single computer network or on a plurality of interconnected computer networks such as two local area networks (LANs) coupled by a wide area network (WAN).
- the computers can include remote computers that access the network(s) via a communications adapter (e.g., a modem) and the telephone lines.
- the globally addressable storage environment allows data to be accessed and shared by such remote computers and among the computers on the plurality of networks.
- the invention involves a computer system comprising a computer network, a persistent data storage device coupled to the network, a globally addressable data storage system, and a plurality of computers coupled to the network and the globally addressable data storage system.
- the globally addressable storage system provides addressable access to data stored in the persistent data storage device.
- the plurality of computers access data stored in the persistent data storage device by addressing via the globally addressable data storage system.
- At least one of the computers can be located remote from the network and coupled thereto by, for example, a communications adapter such as a modem.
- the globally addressable data storage system preferably replicates and/or migrates data stored in the persistent data storage device among two or more of the computers based on, for example, accesses by the computers of the globally addressable data storage system to obtain data stored in the persistent data storage device.
- the invention in another aspect, involves a computer system comprising a first computer network coupled to a second, remote computer network.
- the first computer network includes a first plurality of computers, a first persistent data storage device, and a first globally addressable data storage system that maintains and allows access to data on the first network and that provides addressable access to data stored in the first persistent data storage device.
- the second computer network includes a second plurality of computers, a second persistent data storage device, and a second globally addressable data storage system that maintains and allows access to data on the second network and that provides addressable access to data stored in the second persistent data storage device.
- the first and second globally addressable data storage systems interoperate to allow the first computers to access data on the second network including data stored in the second persistent data storage device and to allow the second computers to access data on the first network including data stored in the first persistent data storage device.
- the first and second globally addressable data storage systems preferably replicate and/or migrate data among the various computers and persistent data storage devices.
- Embodiments according to one or both of these aspects of the invention include, for example, security mechanisms, disconnect/reconcile mechanisms, and proxy mechanisms.
- the first computer network can have a first security domain and the second computer network can have a second security domain that is separate from the first security domain, and the first and second computer networks share data between the first and second security domains.
- the first and second computers can set file-level or record-level access control rights on both the first and second computer networks, and the first and second globally addressable data storage systems can control access to data based on passwords or security identifiers.
- the first and second computers can access, and even modify, shared data after the first and second computer networks are disconnected.
- the modified shared data is reconciled after the first and second computer networks are reconnected.
- the first and second globally addressable data storage systems can utilize a proxy mechanism to maintain consistency of shared data.
- first and second globally addressable data storage systems can utilize a global directory mechanism to track the location of the data on the first and second computer networks.
- This global directory mechanism can include a first directory for tracking data stored on the persistent data storage devices (e.g., hard disks) and a second directory for tracking data stored on volatile storage devices (e.g., RAM) on the first and second computer networks.
- FIG. 1 is a conceptual block diagram of a distributed addressable shared memory structured data storage system.
- FIG. 2 is a diagram of one possible embodiment of the system of FIG. 1, namely a distributed addressable shared memory file system providing storage for computer files such as source code files, wordprocessing documents files, etc.
- FIG. 3 is a graphical representation of the organization of directory entries and associated file descriptors (also known as "Inodes”), suitable for use with the file system of FIG. 2.
- FIG. 4 is a diagram of an Inode suitable for use with the file system of FIG. 2.
- FIG. 5 illustrates a distributed shared memory computer network.
- FIG. 6 is a functional block diagram that illustrates in more detail one distributed shared memory computer network of the type shown in FIG. 5.
- FIG. 7 illustrates in more detail a shared memory subsystem suitable for practice with the network illustrated in FIG. 6.
- FIG. 8 is a functional block diagram of one shared memory subsystem.
- FIG. 9 illustrates a directory page that can be provided by a shared memory subsystem of the type depicted in FIG. 8.
- FIG. 10 illustrates a directory that can be distributed within a shared memory and formed of directory pages of the type illustrated in FIG. 9.
- FIG. 11 is a functional block diagram of a system that employs a directory according to FIG. 10 for tracking portions of a distributed shared memory.
- FIGS. 12A and 12B are diagrams showing two networks sharing files in accordance with the invention.
- FIG. 13 is a exemplary diagram of a globally addressable storage engine being used to share a folder in a multi-network environment with a remote access computer dialed in via a modem and the telephone lines, according to the invention.
- a network system 10 includes a plurality of network nodes that access a memory space storing a structured store of data, such as a structured file system or a database.
- Each of the nodes includes at least a data control program which accesses and manages the structured store of data.
- the structured store of data may be stored in an addressable shared memory or the structured store may be stored in a more traditional fashion.
- each node may be responsible for storing a particular element or elements of the structured store of data.
- the data control program can access a desired portion of the structured store using a globally unique identifier.
- the underlying system would translate the identifier into one or more commands for accessing the desired data, including network transfer commands.
- the structured store of data is stored in an addressable shared memory space, which allows the nodes to transparently access portions of the structured store using standard memory access commands.
- the system 10 can be a file system, a database system, a Web server, an object repository system, or any other structured storage system that maintains an organized set of data.
- Web server means any processor which transmits data objects (such as Active X objects), applications (such as JAVA applets), or files (such as HTML files), to a requester via Web protocols (e.g., http or ftp).
- the system 10 is a file system that maintains various computer files. However, this is just one embodiment that is provided for illustrative purposes. Any one of a plurality of structured storage systems (e.g., database system, Web page system, Intranet, etc.) can be provided. This disclosure is not to be limited to the file system or other particular embodiments described herein.
- a network system 10 includes a plurality of network nodes 12a-12d and an addressable shared memory space 20 that has a portion 22 for storing a structured store of data 28.
- Each of the nodes 12a-12d can include several sub-elements.
- node 12a includes a processor 30a, a data control program 32a, and a shared memory subsystem 34a.
- two of the nodes, 12a and 12c include monitors that provide displays 40 and 42 graphically depicting the structured store of data 28 within the addressable shared memory space 20.
- the addressable shared memory space 20 interconnects each of the network nodes 12a-12d and provides each node 12a-12d with access to the structured store of data 28 contained within the addressable shared memory space 20.
- a system 10 can provide, among other things, each network node 12a-12d with shared control over the structured store of data 28 and, therefore, the system 10 can distribute control of the data store across the nodes of the network.
- each node of the system 10 such as node 12a, includes a data control program 32a that interfaces to a shared memory subsystem 34a.
- the data control program 32a can operate as a structured storage system, such as a file system, that is adapted to maintain a structured store of data and to employ the shared memory system as an addressable memory device that can store a structured store of data.
- the shared memory subsystem 34a can access and store data within the addressable shared memory space 20.
- the system 10 maintains within the addressable shared memory space 20 a structured store of data 28.
- Each of the nodes 12a-12d can access the addressable shared memory space 20 through the shared memory subsystems 34a-34d.
- Each of the shared memory subsystems 34a-34d provides its node with access to the addressable shared memory space 20.
- the shared memory subsystems 34a-34d coordinate each of the respective node's memory access operations to provide access to the desired data and maintain data coherency within the addressable shared memory space 20. This allows the interconnected nodes 12a-12d to employ the addressable shared memory space 20 as a space for storing and retrieving data. At least a portion of the addressable shared memory space 20 is supported by a physical memory system that provides persistent storage of data.
- FIG. 1 illustrates that shared memory subsystems provide the network nodes with access to an addressable shared memory space, wherein at least a portion of that space is assigned to at least a portion of one or more of the persistent storage memory devices (e.g., hard disks) to allow the nodes addressably to store and retrieve data to and from the one or more persistent storage memory devices.
- the persistent storage memory devices e.g., hard disks
- each of the nodes 12a-12d can employ its respective shared memory subsystem as a memory device that provides persistent data storage.
- Each of the data control programs 32a-32d is a software module that couples to the respective shared memory subsystem 34a-34d in a way that operates similarly to an interface between a conventional data storage program and a local memory device.
- the data control program 32a can stream data to, and collect data from, the shared memory subsystem 34a. Because the shared memory subsystems coordinate the memory accesses to the addressable shared memory space 20, each of the data control programs is relieved from having to manage and coordinate its activities with the other data control programs on the network or from having to manage and coordinate its activities with one or more central servers.
- each of the data control programs 32a-32d can be a peer incarnation (i.e., an instance) residing on a different one of the network nodes 12a-12d and can treat the respective shared memory subsystem 34a-34d as a local memory device such as a local hard disk.
- One or more of the data control programs 32a-32d can provide a graphical user interface 42 that graphically depicts the structured store of data 28 contained within the addressable shared memory space 20.
- the graphical user interface 42 allows a user at a node, for example at node 12a, to insert data objects graphically within the structured store of data 28.
- the data control program 32a can generate a set of commands that will present a stream of data to the shared memory subsystem 34a and the shared memory subsystem 34a will employ the data stream to store an object within the structured store of data 28.
- the other shared memory subsystems 34b-34d can provide information to their respective nodes that is indicative of this change to the structured store of data 28. Accordingly, as shown depicted in FIG.
- node 12c that node (which includes a graphical user interface 40) reflects the change to the structured store of data 28 affected by the data control program 32a of the node 12a.
- the graphical user interface 40 of the node 12c can depict to a user that an object is being placed within the structured store of data 28.
- the addressable shared memory space 20 also contains the data objects 50a-50c which can be placed within the structured data store 28 to become part of that structured data store.
- a system user at node 12a can direct object 50a to be inserted at a set location within the data store 28.
- the data control program 32a then directs the shared memory subsystem 34a to place the object 50a within the data store 28 at the proper location.
- the shared memory subsystem 34c on node 12c detects the change within the data store 28 and reflects that change within the graphical user interface 40.
- a structured file system 60 employs the properties of the addressable shared memory space 20 to implement what looks to all network nodes like a coherent, single file system when in fact it spans all network nodes coupled to the addressable shared memory space 20.
- the file system 60 of FIG. 2 differs from known physical and distributed file systems in a variety of ways.
- the file system 60 manages the mapping of a directory and file structure onto a distributed addressable shared memory system 20 which has at least a portion of its addressable space mapped or assigned to at least a portion of one or more persistent storage devices (e.g., hard disks) on the network.
- the file system 60 employs peer nodes, each of which have an incarnation or instance of the same data control program.
- the file system 60 maintains data coherence among network nodes; automatically replicates data for redundancy and fault tolerance; automatically and dynamically migrates data to account for varying network usage and traffic patterns; and provides a variety of other advantages and advances, some of which are disclosed in the commonly-owned U.S. patent application Ser. No. 08/754,481 filed Nov. 22, 1996, and incorporated by reference above.
- the file system 60 resides in part within the addressable shared memory space 20, and includes a structured store of data 62, a super root 64, file sets 66-74, directory entry 80, and file or document 82.
- Two network nodes 84 and 86 are shown accessing the addressable shared memory space 20 (in the manner described previously with reference to FIG. 1) via the logical drives 90 and 94.
- Application programs 92 and 96 executing on the nodes interact with the data control programs (not shown in FIG. 2 but shown in FIG. 1 as 32a-32d) and cause the data control programs in the nodes to access the logical drives 90 and 94.
- the logical drives are DOS devices that "connect to" the fileset directories via Installable File System drivers associated with the file system 60.
- the file system 60 supports one global file system per addressable shared memory space 20 shared by all of the network nodes. This global file system is organized into one or more independent collections of files, depicted as the filesets 66-74.
- a fileset can be thought as logically equivalent to a traditional file system partition. It is a collection of files organized hierarchically as a directory tree structure rooted in a root directory. The non-leaf nodes in the tree are the directories 80, and the leaves in the tree are regular files 82 or empty directories. Sub-directory trees within a fileset can overlap by linking a file to multiple directories.
- a benefit of breaking up the file system 60 into filesets 66-74 is that it provides more flexible file system management for users of the system 60.
- the file system 60 grows into very large sizes (e.g., hundreds of nodes with thousands of gigabits of storage), it is desirable to have the files organized into groups of management entities such that management actions can be independently applied to individual groups without affecting the operation of the others.
- the filesets in the addressable shared memory space 20 are described and enumerated in a common structure, the root 64 of which provides the starting point to locate the filesets in the addressable shared memory space 20.
- the root 64 can be stored in a static and well-known memory location in the addressable shared memory space 20, and it can be accessed via a distributed shared memory system program interface.
- a node When a node is accessing a fileset for the first time, it first looks up the root 64 to determine the identifier associated with the fileset, e.g., the shared memory address used to access the fileset. Once it has determined the identifier, the node can access the root directory of the fileset. From the root directory, it then can traverse the entire fileset directory tree to locate the desired file.
- Filesets used by the file system 60 are described in greater detail below under the heading "Fileset.”
- a directory 126 (such as the directory 80 of FIG. 2) is accessed by starting at a directory Inode or descriptor 128 containing an address that points to a directory entries stream descriptor 130.
- This descriptor 130 is a pointer to a block of data containing directory entries for files File 1 through File 3.
- the directory entry for File 1 has a number of entries; one of the entries is a string containing the name of the file and another entry is the address of the Inodes and stream descriptors 132.
- the stream descriptors for File 1 are used to locate and retrieve the various 4 kilobyte pages in the addressable shared memory space 20 that constitute File 1. Other files are retrieved and constructed from the addressable shared memory space 20 in the same fashion.
- the directories used by the file system 60 are described in greater detail below under the heading "Directory.”
- a file 98 (such as the file 82 of FIG. 2) is represented by one or more shared pages of data 100, 102, 104, 106, and 108 in the addressable shared memory space 20.
- Each file 98 has a file Inode or descriptor 110 that includes various file attributes 112.
- the file descriptor 110 contains an address that points to a data stream descriptor 114, and the data stream itself includes one or more addresses 116, 118, 120, 122, and 124 that point to particular pages in the identifiable shared memory space 20.
- a page is the atomic unit in the addressable shared memory space 20, and it contains up to 4 kilobytes of data. Even if the entire 4 kbytes is not needed, an entire page is used. This is illustrated by the page 108 that only contains about 2 kbytes of data.
- the files used by the file system 60 are described in greater detail below under the heading "Files.”
- the filesets are the basic unit for the file system 60. Each fileset is identified with a name having up to 255 characters.
- the file system 60 exports a set of fileset level operations that allow an administrator to manage the filesets through the following type of actions.
- Fileset Creation This operation creates a new fileset.
- the fileset is initially created with one file, the empty root directory.
- a default fileset is created automatically at the initialization of the addressable shared memory space 20.
- Fileset Deletion This operation deletes a fileset. All files in the fileset are removed, and all shared memory space allocated to the files in the fileset is discarded and the backing physical storage freed for new storage.
- the file system 60 will only allow deletion of a fileset until there are no open handles to file data stream in the fileset. In order to ready a fileset for deletion, the fileset must be "shutdown" by putting it off-line.
- Fileset Enumeration This operation enumerates a specific fileset, or all the filesets, in the addressable shared memory space 20.
- Fileset Control This operation performs fileset level control routines such as setting fileset attributes.
- Mount Export Control Directory are attached to local devices, i.e. "mounted” using parameters stored in the Windows NT registry, or some other similar central storage area for such information.
- the data control program 60 accesses the central storage and determines which filesets should be mounted.
- the data control program creates a file object representing each fileset identified by the entries in the central storage.
- an API may be provided which allows the data control program 60 to dynamically mount and unmount filesets by making appropriate API calls.
- the users of the file system 60 are not aware of the shared memory "logical volume,” but rather view each fileset as a volume (or partition in the sense of a traditional physical file system).
- the Win32 Get VolumeInformation is used to get information on the fileset (more precisely, on the logical device on which the fileset is attached to). Because all the filesets share the same pool of the storage in the addressable shared memory space 20, the total volume size returned to the user for each fileset is the current aggregate storage capacity in the addressable shared memory space 20. The same approach is taken for the total free space information, and the aggregate value of the addressable shared memory space 20 is returned for each fileset.
- Directory entry scanning is one of the most frequently performed operations by user applications. It is also may be the most visible operation in terms of performance. Consequently, much attention is directed to making the directory scan efficient and the WindowsNT File System (NTFS) duplicates sufficient file Inode information in the directory entry such that a read directory operation can be satisfied by scanning and reading the directory entries without going out to read the information from the file Inodes.
- NTFS WindowsNT File System
- the problem with this scheme is that the doubly stored file metadata, such as the file time stamps and file size, can be updated quite frequently, making the metadata update more expensive. However, this overhead is considered acceptable in face of the performance gained in directory scan operations.
- the file system 60 adopts the same philosophy of providing efficient directory scanning by duplicating file Inode information in directory entries. Each directory entry contains sufficient information to satisfy the Win32 query file information requests.
- the file Inode is stored with the file stream descriptors on a separate page. The Inode is located via a pointer in the directory entry.
- the file system's directory entries are stored in the directory file's directory entry data stream. To maximize space utilization, each directory entry is allocated on the first available free space in a page that can hold the entire entry. The length of the entry varies depending on the length of the file's primary name. The following information is part of the directory entry: creation time; change time; last write time; last accessed time; pointers to stream descriptor; pointer to parent directory Inode; MS-DOS type file attributes; and MS-DOS style file name (8.3 naming convention). For average file name lengths, a page contains up to about 30 entries. All the file information in the directory entry is also contained in the file Inode, except for the file primary name and MS-DOS file name. The file primary names and associated short names are only stored in the directory entries. This makes the Inode size fixed.
- the Inode When a file information is modified (except for file names), the Inode is updated in the context of the update transaction and therefore always contains the most up-to-date information.
- the associated directory entry change is lazily flushed to reduce the cost of double updating. This means the Inode updates are either flushed or recoverable, but not the corresponding directory entry updates. If the directory entry gets out of synch with the Inode (when the Inode change is successfully flushed but not the directory change), the entry is updated the next time the Inode is updated.
- the directory entries Inodes
- FIG. 3 illustrates the organization of directory entries and associated Inodes.
- a file of the file system 60 comprises streams of data and the file system metadata to describe the file.
- Files are described in the file system 60 by objects called Inodes.
- the Inode is a data structure that stores the file metadata. It represents the file in the file system 60.
- a data stream is a logically contiguous stream of bytes. It can be the data stored by applications or the internal information stored by the file system 60.
- the data streams are mapped onto pages allocated from the addressable shared memory space 20 for storage.
- the file system 60 segments a data stream into a sequence of 4 kilobyte segments, each segment corresponding to a page.
- the file system 60 maintains two pieces of size information per data stream: the number of bytes in the data stream; and the allocation size in number of pages.
- the byte-stream to segment/page mapping information is part of the file metadata and is stored in a structure called data stream descriptor. See FIG. 4.
- Users' requests for data are specified in terms of range of bytes and the position of the starting byte measured by its offset from the beginning of the data stream, byte position zero.
- the file system 60 maps the offset into the page containing the starting byte and the intra-page offset from the beginning of the page.
- Every file of the file system 60 has at least two data streams: the default data stream; and the Access Control List (ACL) stream. Each file may optionally have other data streams.
- the ACL stream is used to store the security Access Control Lists set on the file.
- Each data stream is individually named so that the user can create or open access to a specific data stream.
- the name of the default data stream is assumed to be the primary name of the file.
- To access a data stream, the user of the file system 60 must first open a file handle to the desired data stream by name. If the file name is used then the handle to the default data stream is opened. This open file handle represents the data stream in all the file system services that operates on the data stream.
- the file system 60 exports a set of services to operate at the file level.
- the input to the services are the file object handle anode) or the data stream object handle, and the operation specific parameters, including the desired portions of the data stream in byte positions.
- Open files are represented by data stream objects (or just file objects). Users access files using these file objects, identified to the users through file handles.
- a file handle is a 32-bit entity representing an instance of an open file stream. For example, WindowsNT creates the file object and returns a file handle to the users in response to the user request for file creation or file open.
- the file system 60 initializes a pointer to a file control block. Multiple file objects point to the same file control block and each file control block maintains separate stream objects for each open context. Externally, the file handle is opaque to the users. Multiple opens can be issued against the same file. When the user closes a file, the file object and the associated file handle is removed.
- the file system 60 maps file streams into sequences of segments which become progressively larger; each segment corresponds to one or more pages.
- the file system 60 attempts to reserve contiguous pages for data streams but only allocates real backing storage on an as needed basis, usually as a result of a file extension requested by writing beyond the data stream allocation size.
- the file system 60 rounds the extension size in number of bytes up to a multiple of 4 kilobytes to make it an integer number of pages, and requests pages for actual allocation.
- the number of 4 kilobyte pages allocated by the file system depends on the number of file extension requests made.
- the file system 60 allocate one 4 kilobyte page for the first extension request, two 4 kilobyte pages for the second request, four 4 kilobyte pages for the third extension request, and so on.
- the newly allocated pages are zero filled.
- the file system 60 can reduce the amount of bookkeeping information on the byte offset to page mapping.
- the file system 60 reserves (sometimes much) larger than requested memory space for a file, and substantiates the storage by allocating backing storage page by page.
- a 4 kilobyte segment also maps naturally to a page, simplifying the data stream segment to page mapping.
- an analogy could be made with the NTFS's allocation policy of 4 kilobyte clusters (segment) size for large disks to speed up allocation and reduce fragmentation, such analogy is not completely valid because the actual on-disk allocation segment size depends greatly on the local disk size and the physical file systems.
- the file system 60 Similar to the NTFS, which controls the allocation of each disk partition and therefore can quickly determine the free volume space available for allocation, the file system 60 requests the total available space information and uses this information to quickly determine whether to proceed with the allocation processing. If the total available space is less than the required allocation size, the request is denied immediately. Otherwise, the file system 60 will proceed to allocate the pages to satisfy the request. The fact that the file system 60 can proceed with the allocation does not guarantee that the allocation will succeed, because the actual total available space may change constantly.
- the file system 60 takes advantage of the page level replication capability of the underlying distributed addressable shared memory system 20 disclosed in the U.S. patent application incorporated by reference above.
- Page level replication allows the system to provide file replication.
- the data streams of a replicated file are backed by pages, which are themselves replicated. In this way, data streams are replicated automatically without intervention of the file system 60.
- the extra space consumed by the multiple replicas is not reflected in the file (data stream) sizes.
- the stream allocation size still reports the total allocation size in pages required for one replica.
- the pages backing temporary files, however, are not replicated.
- the shared memory provides the distribution mechanism for resource sharing among peer nodes running the file system 60 software.
- Each instance of the file system 60 on each network node views the shared memory resources (i.e., pages) as being shared with other local or remote threads.
- the file system 60 needs a way to implement high level, file system locks to provide consistent resource sharing. Any concurrency control structure can be used to implement locks, such as lock objects or semaphores. In database applications, locking may also be achieved by implementing concurrency control structures associated with database indices or keys. In file system applications access to files or directories may be controlled. Another example of file system locks is Byte Range Locking, which provides the users the ability to coordinate shared access to files.
- a byte range lock is a lock set on a range of bytes of a file.
- Coordinated shared access to a file can be accomplished by taking locks on the desired byte ranges.
- the high level file system lock works in the following fashion: (a) a file system resource is to be shared by each file system 60 instance, and the access to the resource is coordinated by a locking protocol using a lock object data structure that represents the high level lock to coordinate the shared resource, and it is the value of the data structure that represents the current state of the lock; (b) to access the resource, the instance at each node must be able to look at the state (or value) of the lock data structure, and if it is "free,” modify it so that it becomes “busy,” but if it is "busy,” then it has to wait to become “free,” and there could be intermediate states between “free” and “busy” (i.e., more than two lock states), but in any event, in this byte range locking example, a lock is a description of a certain byte range being shared/exclusively locked by some thread of the file system 60, and a conflicting new byte range
- the engine can also be used to coordinate access to resources, but in the case of complex high level resource locking such as Byte Range Locking, using the engine's locking features and capabilities directly to provide locks may be too costly for the following reasons: (a) each byte range lock would require a page representing the lock, and since the number of byte range locks can be large, the cost in terms of page consumption may be too high; and (b) the engine locks only provide two lock states (i.e., shared and exclusive), and high level file system locks may require more lock states.
- the file system 60 implements the file system locking using the engine locking as a primitive to provide serialization to access and update the lock data structures.
- the file system 60 takes a shared lock on the data structure's page using the engine locking features and capabilities before it reads the page to prevent the data structure being modified.
- To modify the lock structure it sets a exclusive lock on the page. The page lock is taken and released as soon as the lock structure value is read or modified.
- the file system 60 implements the high level locks in the following way: (a) to take a file system lock (FS lock), the file system 60 sets a shared lock on the FS lock page and reads the page and then examines the lock structure; (b) if the lock structure indicates the resource is unlocked or locked in compatible lock mode, then the file system 60 requests to exclusively lock the page, and this guarantees only one file system 60 node instance can modify the lock data structure, and if the request succeeds then the file system 60 write maps the lock page and then changes the lock structure to set the lock and unlocks the page and sets page access to none; and (c) if the resource is locked in incompatible lock mode, the file system 60 unlocks the page but retains the page read mapped, and it then puts itself (the current thread) in a queue and waits for a system event notifying that the lock value has changed, and when the lock value does change then the file system 60 thread gets notified and repeats the step (a) above.
- FS lock file system lock
- the file system 60 sets a
- the file system 60 implements the notification using a signal primitive.
- the file system 60 threads waiting for a lock are blocked on a system event.
- a signal is sent to each blocked file system 60 thread.
- Each blocked file system 60 threads then wakes up and repeats step (a).
- FS locks are stored in volatile pages.
- Byte Range Locking is a file system locking service exported to the users through the Win32 LockFile() and LockFileEx() API. It allows simultaneous access to different non-overlapping regions of a file data stream by multiple users. To access the data stream, the user locks the region (byte range) of the file to gain exclusive or shared read access to the region.
- the file system 60 supports byte range locking for each individual data stream of the file.
- the following Win32-style byte range locking behavior is supported: (a) locking a region of a file is used to acquire shared or exclusive access to the specified region of the file, and the file system 60 will track byte range locks by file handle, therefore file handles provide a way to identify uniquely the owner of the lock; (b) locking a region that goes beyond the current end-of-file position is not an error; (c) locking a portion of a file for exclusive access denies all other processes both read and write access to the specified region of the file, and locking a portion of a file for shared access denies all other processes write access to the specified region of the file but allows other processes to read the locked region, and this means that the file system 60 must check byte range locks set on the data stream not only for lock requests but for every read or write access; (d) if an exclusive lock is requested for a region that is already locked either shared or exclusively by other threads, the request blocks or fails immediately depending on the calling option specified
- the file system 60 For each byte range lock, the file system 60 creates a byte range lock record to represent the lock.
- the record contains the following information: (a) byte range; (b) lock mode (shared or exclusive); (c) process identification; and (d) a Win32 lock key value.
- the file system 60 regards the file byte ranges as resources with controlled access. For each byte range lock record, the file system 60 creates a file system lock (as discussed above) to coordinate the access to the byte range "resource.” A compatible byte range lock request (share lock) translates into taking read lock on the file system lock associated with the byte range record. An exclusive byte range lock request is mapped to taking write lock on the file system lock.
- lock requests waiting on the page containing the desired byte range will be notified when the page content changes.
- the addressable shared memory system disclosed in the U.S. patent application incorporated by reference is an "engine" that can create and manage a virtual memory space that can be shared by each computer on a network and can span the storage space of each memory device connected to the network. Accordingly, all data stored on the network can be stored within the virtual memory space and the actual physical location of the data can be in any of the memory devices connected to the network.
- the engine or system can create or receive, a global address signal that represents a portion, for example 4k bytes, of the virtual memory space.
- the global address signal can be decoupled from, i.e. unrelated to, the physical and identifier spaces of the underlying computer hardware, to provide support for a memory space large enough to span each volatile and persistent memory device connected to the system.
- systems can operate on 32-bit computers, but can employ global address signals that can be 128 bits wide.
- the virtual memory space spans 2 128 bytes, which is much larger than the 2 32 address space supported by the underlying computer hardware.
- Such an address space can be large enough to provide a separate address for every byte of data storage on the network, including all RAM, disk and tape storage.
- the system includes a directory manager that tracks those portions of the virtual memory space that are in use.
- the system provides physical memory storage for each portion of the virtual memory space in use by mapping each such portion to a physical memory device, such as a RAM memory or a hard-drive.
- the mapping includes a level of indirection that facilitates data migration, fault-tolerant operation, and load balancing.
- each computer can share the memory space. This allows the networked computers to appear to have a single memory, and therefore can allow application programs running on different computers to communicate using techniques currently employed to communicate between applications running on the same machine.
- the invention of the above-identified, incorporated-by-reference U.S. patent application can be understood to include computer systems having a addressable shared memory space.
- the systems can comprise a data network that carries data signals representative of computer readable information a persistent memory device that couples to the data network and that provides persistent data storage, and plural computers that each have an interface that couples to the data network, for accessing the data network to exchange data signals therewith.
- each of the computers can include a shared memory subsystem for mapping a portion of the addressable memory space to a portion of the persistent storage to provide addressable persistent storage for data signals.
- the persistent memory device will be understood to include a plurality of local persistent memory devices that each couple to a respective one of the plural computers.
- the system can also include a distributor for mapping portions of the addressable memory space across the plurality of local persistent memory devices and a disk directory manager for tracking the mapped portions of the addressable memory space to provide information representative of the local persistent memory device that stores that portion of the addressable memory space mapped thereon.
- the systems can also include a cache system for operating one of the local persistent memory devices as a cache memory for cache storing data signals associated with recently accessed portions of the addressable memory space.
- the system can include a migration controller for selectively moving portions of the addressable memory space between the local persistent memory devices of the plural computers.
- the migration controller can determine and respond to data access patterns, resource demands or any other suitable criteria or heuristic. Accordingly, the migration controller can balance the loads on the network, and move data to nodes from which it is commonly accessed.
- the cache controller can be a software program running on a host computer to provide a software managed RAM and disk cache.
- the RAM can be any volatile memory including SRAM, DRAM or any other volatile memory.
- the disk can be any persistent memory including any disk, RAID, tape or other device that provides persistent data storage.
- the systems can also include a coherent replication controller for generating a copy, or select number of copies, of a portion of the addressable memory space maintained in the local persistent memory device of a first computer and for storing the copy in the local persistent memory device of a second computer.
- the coherent replication controller can maintain the coherency of the copies to provide coherent data replication.
- the systems can also be understood to provide integrated control of data stored in volatile memory and in persistent memory.
- a volatile memory device has volatile storage for data signals
- the shared memory subsystem includes an element, typically a software module, for mapping a portion of the addressable memory space to a portion of the volatile storage.
- the volatile memory device can be comprised of a plurality of local volatile memory devices each coupled to a respective one of the plural computers
- the persistent memory device can be comprised of a plurality of local persistent memory devices each coupled to a respective one of the plural computers.
- a directory manager can track the mapped portions of the addressable memory space, and can include two sub-components; a disk directory manager for tracking portions of the addressable memory space mapped to the local persistent memory devices, and a RAM directory manager for tracking portions of the addressable memory space mapped to the local volatile memory devices.
- a RAM cache system can operate one of the local volatile memory devices as a cache memory for cache storing data signals associated with recently accessed portions of the addressable memory space.
- the systems can include additional elements including a paging element for remapping a portion of the addressable memory space between one of the local volatile memory devices and one of the local persistent memory devices; a policy controller for determining a resource available signal representative of storage available on each of the plural computers and, a paging element that remaps the portion of addressable memory space from a memory device of a first computer to a memory device of a second computer, responsive to the resource available signal; and a migration controller for moving portions of addressable memory space between the local volatile memory devices of the plural computers.
- a paging element for remapping a portion of the addressable memory space between one of the local volatile memory devices and one of the local persistent memory devices
- a policy controller for determining a resource available signal representative of storage available on each of the plural computers and, a paging element that remaps the portion of addressable memory space from a memory device of a first computer to a memory device of a second computer, responsive to the resource available signal
- the systems can include a hierarchy manager for organizing the plural computers into a set of hierarchical groups wherein each group includes at least one of the plural computers.
- Each group can include a group memory manager for migrating portions of addressable memory space as a function of the hierarchical groups.
- the system can maintain coherency between copied portions of the memory space by including a coherent replication controller for generating a coherent copy of a portion of addressable memory space.
- the system can generate or receive global address signals.
- the systems can include an address generator for generating a global address signal representative of a portion of addressable memory space.
- the address generator can include a spanning unit for generating global address signals as a function of a storage capacity associated with the persistent memory devices, to provide global address signals capable of logically addressing the storage capacity of the persistent memory devices.
- the directory manager can be a distributed directory manager for storing within the distributed memory space, a directory signal representative of a storage location of a portion of the addressable memory space.
- the distributed directory manager can include a directory page generator for allocating a portion of the addressable memory space and for storing therein an entry signal representative of a portion of the directory signal.
- the directory page generator optionally includes a range generator for generating a range signal representative of a portion of the addressable memory space, and for generating the entry signal responsive to the range signal, to provide an entry signal representative of a portion of the directory signal that corresponds to the portion of the addressable memory space.
- the distributed directory manager can include a linking system for linking the directory pages to form a hierarchical data structure of the linked directory pages as well as a range linking system for linking the directory pages, as a function of the range signal, to form a hierarchical data structure of linked directory pages.
- a computer system can include a directory page generator that has a node selector for generating a responsible node signal representative of a select one of the plural computers having location information for a portion of the shared address space. This provides a level of indirection that decouples the directory from the physical storage location of the data. Accordingly, the directory needs only to identify the node, or other device, that tracks the physical location of the data. This way, each time data migrates between physical storage locations, the directory does not have to be updated, since the node tracking the location of the data has not changed and still provides the physical location information.
- the system can include page generators that generate directory pages that carry information representative of a location monitor, such as a responsible computer node, that tracks a data storage location, to provide a directory structure for tracking homeless data.
- a location monitor such as a responsible computer node
- the directory itself can be stored as pages within the virtual memory space. Therefore, the data storage location can store information representative of a directory page, to store the directory structure as pages of homeless data.
- the invention of the above-identified, incorporated-by-reference U.S. patent application can be understood as methods for providing a computer system having a addressable shared memory space.
- the method can include the steps of providing a network for carrying data signals representative of computer readable information, providing a hard-disk, coupled to the network, and having persistent storage for data signals, providing plural computers, each having an interface, coupled to the data network, for exchanging data signals between the plural computers, and assigning a portion of the addressable memory space to a portion of the persistent storage of the hard disk to provide addressable persistent storage for data signals.
- FIG. 5 illustrates a computer network 10 that provides a shared memory that spans the memory space of each node of the depicted computer network 210.
- FIG. 5 illustrates a computer network 210 that includes a plurality of nodes 212a-212c, each having a CPU 214, an operating system 216, an optional private memory device 218, and a shared memory subsystem 220.
- each node 212a-212c connects via the shared memory subsystem 220 to a virtual shared memory 222.
- the computer network 210 enables network nodes 212a-212c to communicate and share functionality using the same techniques employed by applications when communicating between applications running on the same machine. These techniques can employ object linking and embedding, dynamic link libraries, class registering, and other such techniques.
- the nodes 212 can employ the virtual shared memory 222 to exchange data and objects between application programs running on the different nodes 212 of the network 210.
- each node 212 can be a conventional computer system such as a commercially available IBM PC compatible computer system.
- the processor 214 can be any processor unit suitable for performing the data processing for that computer system.
- the operating system 216 can be any commercially available or proprietary operating system that includes, or can access, functions for accessing the local memory of the computer system and networking.
- the private memory device 218 can be any computer memory device suitable for storing data signals representative of computer readable information.
- the private memory provides the node with local storage that can be kept inaccessible to the other nodes on the network.
- the private memory device 218 includes a RAM, or a portion of a RAM memory, for temporarily storing data and application programs and for providing the processor 214 with memory storage for executing programs.
- the private memory device 18 can also include persistent memory storage, typically a hard disk unit or a portion of a hard disk unit, for the persistent storage of data.
- the shared memory subsystem 220 depicted in FIG. 5 couples between the operating system 216 and the virtual shared memory 222 and forms an interface between the operating system 216 and the virtual shared memory to allow the operating system 216 to access the virtual shared memory 222.
- the depicted shared memory subsystem 220 is a software module that operates as a stand-alone distributed shared memory engine.
- the depicted system is illustrative and other systems of the invention can be realized as shared memory subsystems that can be embedded into an application program, or be implemented as an embedded code of a hardware device. Other such applications can be practiced without departing from the scope of the invention.
- the depicted virtual shared memory 222 illustrates a virtual shared memory that is accessible by each of the nodes 212a-212c via the shared memory subsystem 220.
- the virtual shared memory 222 can map to devices that provide physical storage for computer readable data, depicted in FIG. 5 as a plurality of pages 224a-224d.
- the pages form portions of the shared memory space and divide the address space of the shared memory into page addressable memory spaces.
- the address space can be paged into 4K byte sections.
- alternative granularity can be employed to manage the shared memory space.
- Each node 212a-212c through the shared memory subsystem 220 can access each page 224a-224d stored in the virtual shared memory 222.
- Each page 224a-224d represents a unique entry of computer data stored within the virtual shared memory 222.
- Each page 224a-224d is accessible to each one of the nodes 212a-212c, and alternatively, each node can store additional pages of data within the virtual shared memory 222. Each newly stored page of data can be accessible to each of the other nodes 212a-212c.
- the virtual shared memory 222 provides a system for sharing and communicating data between each node 212 of the computer network 210.
- FIG. 6 illustrates in functional block diagram form a computer network 230 that has a distributed shared memory.
- each node 212a-212c has a memory subsystem 232 that connects between the operating system 216 and the two local memory devices, the RAM 234 and the disk 236, and that further couples to a network 238 that couples to each of the depicted nodes 212a, 212b and 212c and to a network memory device 226.
- FIG. 6 illustrates a distributed shared memory network 30 that includes a plurality of nodes 212a-212c, each including a processing unit 214, an operating system 216, a memory subsystem 232, a RAM 234, and a disk 236.
- FIG. 6 further depicts a computer network system 38 that connects between the nodes 212a-212c and the network memory device 226.
- the network 238 provides a network communication system across these elements.
- the illustrated memory subsystems 232a-232c that connect between the operating system 216a-216c, the memory elements 234a-234c, 236a-236c, and the network 238, encapsulate the local memories of each of the nodes to provide an abstraction of a shared virtual memory system that spans across each of the nodes 212a-212c on the network 238.
- the memory subsystems 232a-232c can be software modules that act as distributors to map portions of the addressable memory space across the depicted memory devices.
- the memory subsystems further track the data stored in the local memory of each node 212 and further operate network connections with network 238 for transferring data between the nodes 212a-212c.
- the memory subsystems 232a-232c access and control each memory element on the network 238 to perform memory access operations that are transparent to the operating system 216. Accordingly, the operating system 216 interfaces with the memory subsystem 232 as an interface to a global memory space that spans each node 212a-212c on the network 238.
- FIG. 6 further depicts that the system 230 provides a distributed shared memory that includes persistent storage for portions of the distributed memory.
- the depicted embodiment includes a memory subsystem, such as subsystem 232a, that interfaces to a persistent memory device, depicted as the disk 236a.
- the subsystem 232a can operate the persistent memory device to provide persistent storage for portions of the distributed shared memory space.
- each persistent memory device 236 depicted in FIG. 6 has a portion of the addressable memory space mapped onto it.
- device 236a has the portions of the addressable memory space, C o , C d , C g , mapped onto it, and provides persistent storage for data signals stored in those ranges of addresses.
- the subsystem 232a can provide integrated control of persistent storage devices and electronic memory to allow the distributed shared memory space to span across both types of storage devices, and to allow portions of the distributed shared memory to move between persistent and electronic memory depending on predetermined conditions, such as recent usage.
- the nodes of the network are organized into a hierarchy of groups.
- the memory subsystems 232a-232c can include a hierarchy manager that provides hierarchical control for the distribution of data. This includes controlling the migration controller, and policy controller, which are discussed in detail below, to perform hierarchical data migration and load balancing, such that data migrates primarily between computers of the same group, and passes to other groups in hierarchical order. Resource distribution is similarly managed.
- FIG. 7 illustrates in more detail one shared memory subsystem 240.
- FIG. 7 depicts a shared memory subsystem 240, that includes an interface 242, a DSM directory manager 244, a memory controller 246, a local disk cache controller 248, and a local RAM cache controller 250.
- FIG. 7 further depicts the network 254, an optional consumer of the DSM system, depicted as the service 258, the operating system 216, a disk driver 260, a disk element 262 and a RAM element 264.
- the shared memory subsystem 240 depicted in FIG. 7 can encapsulate the memory management operations of the network node 212 to provide a virtual shared memory that can span across each node that connects into the network 254. Accordingly, each local node 212 views the network as a set of nodes that are each connected to a large shared computer memory.
- the depicted interface 242 provides an entry point for the local node to access the shared memory space of the computer network.
- the interface 242 can couple directly to the operating system 216, to a distributed service utility such as the depicted DSM file system 258, to a distributed user-level service utility, or alternatively to any combination thereof
- the depicted interface 242 provides an API that is a memory oriented API.
- the illustrated interface 242 can export a set of interfaces that provide low-level control of the distributed memory.
- the interface 242 exports the API to the operating system 216 or to the optional DSM service 258.
- the operating system 216 or the service employs the interface 242 to request standard memory management techniques, such as reading and writing from portions of the memory space.
- These portions of the memory space can be the pages as described above which can be 4K byte portions of the shared memory space, or other units of memory, such as objects or segments.
- Each page can be located within the shared memory space which is designated by a global address signal for that page of memory.
- the system can receive address signals from an application program or, optionally, can include a global address generator that generates the address signals.
- the address generator can include a spanning module that generates address signals for a memory space that spans the storage capacity of the network.
- the interface 242 receives requests to manipulate pages of the shared memory space.
- the interface 242 can comprise a software module that includes a library of functions that can be called by services, the OS 216, or other caller, or device.
- the function calls provide the OS 216 with an API of high level memory oriented services, such as read data, write data, and allocate memory.
- the implementation of the functions can include a set of calls to controls that operate the directory manager 244, and the local memory controller 246.
- the interface 242 can be a set of high level memory function calls to interface to the low-level functional elements of shared memory subsystem 240.
- FIG. 7 further depicts a DSM directory manager 244 that couples to the interface 242.
- the interface 242 passes request signals that represent requests to implement memory operations such as allocating a portion of memory, locking a portion of memory, mapping a portion of memory, or some other such memory function.
- the directory manager 244 manages a directory that can include mappings than can span across each memory device connected to the network 238 depicted in FIG. 6, including each RAM and disk element accessible by the network.
- the directory manager 244 stores a global directory structure that provides a map of the global address space. In one embodiment as will be explained in greater detail hereinafter, the directory manager 244 provides a global directory that maps between global address signals and responsible nodes on the network. A responsible node stores information regarding the location and attributes of data associated with a respective global address, and optionally stores a copy of that page's data. Consequently, the directory manager 244 tracks information for accessing any address location within the identifier space.
- the control of the distributed shared memory can be coordinated by the directory manager 244 and the memory controller 246.
- the directory manager 244 maintains a directory structure that can operate on a global address received from the interface 242 and identify, for that address, a node on the network that is responsible for maintaining the page associated with that address of the shared memory space. Once the directory manager 244 identifies which node is responsible for maintaining a particular address, the directory manager 244 can identify a node that stores information for locating a copy of the page, and make the call to the memory controller 246 of that node and pass to that node's memory controller the memory request provided by the memory interface 242.
- the depicted directory manager 244 is responsible for managing a directory structure that identifies for each page of the shared memory space a responsible node that tracks the physical location of the data stored in the respective page.
- the directory rather than directly providing the location of the page, can optionally identify a responsible node, or other device, that tracks the location of the page. This indirection facilitates maintenance of the directory as pages migrate between nodes.
- the memory controller 246 performs the low level memory access functions that physically store data within the memory elements connected to the network.
- the directory manager 244 of a first node can pass a memory access request through the interface 242, to the network module of the OS 216, and across the network 254 to a second node that the directory manager 244 identifies as the responsible node for the given address.
- the directory manager 244 can then query the responsible node to determine the attributes and the current owner node of the memory page that is associated with the respective global address.
- the owner of the respective page is the network node that has control over the memory storage element on which the data of the associated page is stored.
- the memory controller 246 of the owner can access, through the OS 216 of that node or through any interface, the memory of the owner node to access the data of the page that is physically stored on that owner node.
- the directory manager 244 couples to the network module 252 which couples to the network 254.
- the directory manager can transmit to the network module 252 a command and associated data that directs the network interface 252 to pass a data signal to the owner node.
- the owner node receives the memory request across network 254 and through network module 252 that passes the memory request to the interface 242 of that owner node.
- the interface 242 couples to the memory controller 246 and can pass the memory request to the local memory controller of that owner node for operating the local storage elements, such as the disk or RAM elements, to perform the requested memory operation.
- the memory subsystem 240 of the owner node can then transfer the page of data, or a copy of the page of data, via the network 254 to the node that originally requested access to that portion of the shared memory.
- the page of data is transferred via the network 254 to the network module 252 of the requesting node and the shared memory subsystem 240 operates the memory controller 246 to store in the local memory of the requesting node a copy of the accessed data.
- the directory manager 244 identifies a node that has a copy of the data stored in that page and moves a copy of that data into the local memory of the requesting node.
- the local memory storage, both volatile and persistent, of the requesting node therefore becomes a cache for pages that have been requested by that local node.
- FIG. 7 depicts a memory controller that has a local disk cache controller 248 and a local RAM cache controller 250. Both of these local cache controllers can provide to the operating system 216, or other consumer pages of the shared memory space that are cache stored in the local memory of the node, including local persistent memory and local volatile memory.
- the shared memory subsystem can include a coherent replication controller that maintains coherency between cached pages by employing a coherence through invalidation process, a coherence through migration process, or other suitable coherence process.
- the coherent replication controller can automatically generate a copy of the data stored in each page and can store the copy in a memory device that is separate from the memory device of the original copy. This provides for fault tolerant operation, as the failure of any one memory device will not result in the loss of data.
- the coherent replication controller can be a software model that monitors all copies of pages kept in volatile memory and made available for writing.
- the controller can employ any of the coherency techniques named above, and can store tables of location information that identifies the location information for all generated copies.
- FIG. 8 illustrates in greater detail one embodiment of a shared memory subsystem.
- the shared memory subsystem 270 depicted in FIG. 8 includes a remote operations element 274, a local RAM cache 276, a RAM copyset 278, a global RAM directory 280, a disk copyset 282, a global disk directory 284, a configuration manager 288, a policy element 290, and a local disk cache 94.
- FIG. 8 further depicts a network element 304, a physical memory 300, shared data element 302, a physical file system 298, which is part of the operating system 216, a configuration service 308, a diagnostic service 310, and a memory access request 312.
- the depicted subsystem 270 can be a computer program that couples to the physical memory, file system, and network system of the host node, or can be electrical circuit card assemblies that interface to the host node, or can be a combination of programs and circuit card assemblies.
- the flow scheduler 272 depicted in FIG. 8 can orchestrate the controls provided by an API of the subsystem 270.
- the flow scheduler 272 can be a state machine that monitors and responds to the requests 312 and remote requests through network 304 which can be instructions for memory operations and which can include signals representative of the global addresses being operated on.
- These memory operation requests 312 can act as op-codes for primitive operations on one or more global addresses. They can be read and write requests, or other memory operations.
- the flow scheduler 272 can be a program, such as an interpreter, that provides an execution environment and can map these op-codes into control flow programs called applets.
- the applets can be independent executable programs that employ both environment services, such as threading, synchronization, and buffer management, and the elements depicted in FIG. 8.
- the API is capable of being called from both external clients, like a distributed shared memory file system, as well as recursively by the applets and the other elements 274-294 of the subsystem 270.
- Each element can provide a level of encapsulation to the management of a particular resource or aspect of the system.
- each element can export an API consisting of functions to be employed by the applets. This structure is illustrated in FIG. 8. Accordingly, the flow scheduler 272 can provide an environment to load and execute applets.
- the applets are dispatched by the flow scheduler 272 on a per op-code basis and can perform the control flow for sequential or parallel execution of an element to implement the op-code on the specified global address, such as a read or write operation.
- the flow scheduler 272 can include an element to change dynamically the applet at run time as well as execute applets in parallel and in interpreted mode.
- the depicted shared memory subsystem 270 includes a bifurcated directory manager that includes the global RAM directory 280 and the global disk directory 284.
- the global RAM directory 280 is a directory manager that tracks information that can provide the location of pages that are stored in the volatile memory, typically RAM, of the network nodes.
- the global disk directory 284 is a global disk directory manager that manages a directory structure that tracks information that can provide the location of pages that are stored on persistent memory devices. Together, the global RAM directory 280 and the global disk directory 284 provide the shared memory subsystem 270 with integrated directory management for pages that are stored in persistent storage and volatile memory.
- a paging element can operate the RAM and disk directory managers to remap portions of the addressable memory space between one of the volatile memories and one of the persistent memories.
- this allows the paging element to remap pages from the volatile memory of one node to a disk memory of another node.
- the RAM directory manager passes control of that page to the disk directory manager which can then treat the page as any other page of data. This allows for improved load balancing, by removing data from RAM memory, and storing it in the disk devices, under the control of the disk directory manager.
- the local memory controller of the subsystem 270 is provided by the local RAM cache 276 and the local disk cache 294.
- the local RAM cache 276 which couples to the physical memory 300 of the local node can access, as described above, the virtual memory space of the local node to access data that is physically stored within the RAM memory 300.
- the local disk cache 294 couples to the persistent storage device 298 and can access a physical location that maintains in the local persistent storage data of the distributed shared memory.
- FIG. 8 also depicts a remote operations element 274 that couples between the network 304 and the flow scheduler 272.
- the remote operations element 274 negotiates the transfer of data across the network 304 for moving portions of the data stored in the shared memory space between the nodes of the network.
- the remote operations element 274 can also request services from remote peers, i.e. invalidate to help maintain coherency or for other reasons.
- FIG. 8 also depicts a policy element 290 that can be a software module that acts as a controller to determine the availability of resources, such as printer capabilities, hard-disk space, available RAM and other such resources.
- the policy controller can employ any of the suitable heuristics to direct the elements, such as the paging controller, disk directory manager, and other elements to dynamically distribute the available resources.
- FIG. 8 further depicts a memory subsystem 270 that includes a RAM copyset 278 and a disk copyset 282.
- the disk copyset 282 can maintain information on copies of pages that are stored in the local disk cache, which can be the local persistent memory.
- the RAM copyset 278 can maintain information on copies of pages that are stored in the local RAM cache which can be the local RAM.
- These copysets encapsulate indexing and storage of copyset data that can be employed by applets or other executing code for purposes of maintaining the coherency of data stored in the shared memory space.
- the copyset elements can maintain copyset data that identifies the pages cached by the host node.
- the copyset can identify the other nodes on the network that maintain a copy of that page, and can further identify for each page which of these nodes is the owner node, wherein the owner node can be a node which has write privileges to the page being accessed.
- the copysets themselves can be stored in pages of the distributed shared memory space.
- the local RAM cache 276 provides storage for memory pages and their attributes.
- the local RAM cache 276 provides a global address index for accessing the cached pages of the distributed memory and the attributes based on that page.
- the local ram cache 276 provides the index by storing in memory a list of each global address cached in the local RAM. With each listed global address, the index provides a pointer into a buffer memory and to the location of the page data.
- the index can further provide attribute information including a version tag representative of the version of the data, a dirty bit representative of whether the RAM cached data is a copy of the data held on disk, or whether the RAM cached data has been modified but not yet flushed to disk, a volatile bit to indicate if the page is backed by backing store in persistent memory, and other such attribute information useful for managing the coherency of the stored data.
- attribute information including a version tag representative of the version of the data, a dirty bit representative of whether the RAM cached data is a copy of the data held on disk, or whether the RAM cached data has been modified but not yet flushed to disk, a volatile bit to indicate if the page is backed by backing store in persistent memory, and other such attribute information useful for managing the coherency of the stored data.
- the memory subsystem 270 provides the node access to the distributed memory space by the coordinated operation of the directory manager that includes the global RAM directory 280 and the global disk directory 284, the cache controller that includes the local RAM cache and the local disk cache elements 276 and 294, and the copyset elements which include the RAM copyset 278 and the disk copyset 282.
- the directory manager provides a directory structure that indexes the shared address space. Continuing with the example of a paged shared address space, the directory manager of the subsystem 270 allows the host node to access, by global addresses, pages of the shared memory space.
- FIGS. 9 and 10 illustrate one example of a directory structure that provides access to the shared memory space.
- FIG. 9 depicts a directory page 320 that includes a page header 322, directory entries 324 and 326, wherein each directory entry includes a range field 330, a responsible node field 332, and an address field 334.
- the directory pages can be generated by a directory page generator that can be a software module controlled by the directory manager. It will be understood that the directory manager can generate multiple directories, including one for the Global disk and one for the Global RAM directories.
- the depicted directory page 320 can be a page of the global address space, such as a 4K byte portion of the shared address space. Therefore, the directory page can be stored in the distributed shared memory space just as the other pages to which the directory pages provide access.
- each directory page 120 includes a page header 322 that includes attribute information for that page header, which is typically metadata for the directory page, and further includes directory entries such as the depicted directory entries, 324 and 326, which provide an index into a portion of the shared address space wherein that portion can be one or more pages, including all the pages of the distributed shared memory space.
- the depicted directory page 320 includes directory entries that index a selected range of global addresses of the shared memory space.
- the directory generator can include a range generator so that each directory entry can include a range field 330 that describes the start of a range of addresses that entry locates.
- each directory page 320 can include a plurality of directory entries, such as entries 324 and 326, that can subdivide the address space into a subset of address ranges.
- the depicted directory page 320 includes two directory entries 324 and 326.
- the directory entries 324 and 326 can, for example, subdivide the address space into two sub-portions.
- the start address range of the directory entry 324 could be the base address of the address space
- the start address range of the directory entry 326 could be the address for the upper half of the memory space.
- the directory entry 324 provides an index for pages stored in the address space between the base address and up to the mid-point of the memory space and, in complement thereto, the directory entry 326 provides an index to pages stored in the address space that ranges from the mid-point of the address space to the highest address.
- FIG. 9 further depicts a directory page 320 that includes, in each directory entry, a responsible node field 332 and the child page global address field 334. These fields 332, 334 provide further location information for the data stored in pages within the address range identified in field 330.
- FIG. 10 depicts a directory 340 formed from directory pages similar to those depicted in FIG. 9.
- FIG. 10 depicts that the directory 340 includes directory pages 342, 350-354, and 360-366.
- FIG. 10 further depicts that the directory 340 provides location information to the pages of the distributed shared memory space depicted in FIG. 10 as pages 370-384.
- the directory page 342 depicted in FIG. 10 acts like a root directory page and can be located at a static address that is known to each node coupled to the distributed address space.
- the root directory page 342 includes three directory entries 344, 346, and 348.
- Each directory entry depicted in FIG. 10 has directory entries similar to those depicted in FIG. 9.
- directory entry 344 includes a variable Co which represents the address range field 330, a variable Nj representative of the field 332, and a variable Cs representative of the field 334.
- the depicted root directory page 342 subdivides the address space into three ranges illustrated as an address range that extends between the address Co and Cd, a second address range that extends between the address Cd and Cg, and a third address range that extends between Cg and the highest memory location of the address space.
- each directory entry 344, 346, and 348 points to a subordinate directory page, depicted as directory pages 350, 352, and 354, each of which further subdivides the address range index by the associated directory entry of the root directory 342.
- this subdivision process continues as each of the directory pages 350, 352, and 354 each again have directory entries that locate subordinate directory pages including the depicted examples of directory pages 360, 362, 364, and 366.
- the depicted example of directory pages 360, 362, 364, and 366 are each leaf entries.
- the leaf entries contain directory entries such as the directory entries 356 and 358 of the leaf entry 360, that store a range field 330 and the responsible node field 332. These leaf entries identify an address and a responsible node for the page in the distributed memory space that is being accessed, such as the depicted pages 370-384.
- the leaf entry 356 points to the page 370 that corresponds to the range field 330 of the leaf entry 356, which for a leaf entry is the page being accessed.
- the directory structure 340 provides location information for pages stored in the distributed address space.
- a node selector can select a responsible node for each page, as described above, so that the leaf entry 356 provides information of the address and responsible node of the page being located. Accordingly, this directory tracks ownership and responsibility for data, to provide a level of indirection between the directory and the physical location of the data.
- the memory subsystem 270 passes to the responsible node indicated in the leaf entry 356 the address of the page being accessed.
- the shared memory subsystem of that node can identify a node that stores a copy of the page being accessed, including the owner node. This identification of a node having a copy can be performed by the RAM copyset or disk copyset of the responsible node.
- the node having a copy stored in its local physical memory can employ its local cache elements, including the local RAM cache and local disk cache to the identify from the global address signal a physical location of the data stored in the page being accessed.
- the cache element can employ the operating system of the owner node to access the memory device that maintains that physical location in order that the data stored in the page can be accessed.
- the data read from the physical memory of the owner node can be passed via the network to the memory subsystem of the node requesting the read and subsequently stored into the virtual memory space of the requesting node for use by that node.
- the depicted directory structure 340 comprises a hierarchical structure.
- the directory structure 340 provides a structure that continually subdivides the memory space into smaller and smaller sections. Further, each section is represented by directory pages of the same structure, but indexes address spaces of different sizes.
- a linker inserts or deletes the pages from the directory.
- the linker is a software module for linking data structures. The linker can operate responsive to the address ranges to provide the depicted hierarchical structure. Accordingly, the depicted directory 340 provides a scaleable directory for the shared address space.
- the directory pages are stored in the distributed address space and maintained by the distributed shared memory system.
- a root for the directory can be stored in known locations to allow for bootstrap of the system. Consequently, commonly used pages are copied and distributed, and rarely used pages are shuffled off to disk. Similarly, directory pages will migrate to those nodes that access them most, providing a degree of self-organization that reduces network traffic.
- FIG. 11 depicts the directory of FIG. 10 being employed by a system.
- FIG. 11 depicts a system 400 that includes two nodes, 406a and 406b, a directory structure 340, and a pair of local memories having volatile memory devices 264a and 264b, and persistent memory devices 262a and 262b.
- Depicted node 406a includes an address consumer 408a, a global address 410a, and interface 242a, a directory manager 244a and a memory controller 246a.
- Node 406b has corresponding elements.
- the nodes are connected by the network 254.
- the directory 340 has a root page, directory pages A-F, and pages 1-5.
- Each node 406a and 406b operates as discussed above.
- the depicted address consumers 408a and 408b can be an application program, file system, hardware device or any other such element that requests access to the virtual memory.
- the address consumers 408a and 408b request an address, or range of addresses, and the directory manager can include a global address generator that provides the consumer with the requested address, or a pointer to the requested address.
- the respective directory managers 244a and 244b generate directory pages and store the pages in the directory structure 340.
- the directory structure 340 tracks the portions of the address space being employed by the system 400, and physical storage for each page is provided within the local memories.
- the data associated with the directory pages are distributively stored across the two local memories and duplicate copies can exist.
- the data can move between different local memories and also move, or page, between volatile and persistent storage.
- the data movement can be responsive to data requests made by memory users like application programs, or by operation of the migration controller described above.
- the movement of data between different memory locations can occur without requiring changes to the directory 340. This is achieved by providing a directory 340 that is decoupled from the physical location of the data by employing a pointer to a responsible node that tracks the data storage location. Accordingly, although the data storage location can change, the responsible node can remain constant, thereby avoiding any need to change the directory 340.
- the invention provides a peer-to-peer network that spans WANs.
- the invention spans multiple nodes, some of which may be separated from one another by relatively unstable, low bandwidth links (e.g., modems or WANs).
- the invention might span a collection of nodes on a LAN and a single remote access computer such as a portable computer connected to the LAN via a modem.
- An alternative form might include nodes on two or more LANs in different buildings sharing some set of files. For example, a folder could be shared between a group of architects and an engineering consulting group cooperating on the design of a building.
- a “cloud” is a collection of networked computers interoperating to implement the huge virtual space and global storage scheme described in detail hereinabove.
- a cloud includes nodes on the same network (e.g., LAN), and two clouds (e.g., two LANs) can be interconnected and interoperated according to this invention, although it is possible to think of two or more interconnected networks as defining a single cloud that spans all interconnected networks.
- Data pages shared between multiple clouds have the same addresses on both sides of the link such that pages can freely migrate between clouds or be replicated on multiple clouds as appropriate.
- Metadata pages are not shared between clouds. Instead of using the shared address space to maintain consistency of data structures between the clouds, each cloud maintains its own copy of each data structure and uses proxy techniques to keep the different data structures consistent.
- a protocol involves a "proxy" when a node in one cloud cannot directly manipulate all versions of a "global" data structure, but must instead send a request to a node in a remote cloud, the proxy node, and ask the proxy node to perform an operation on its behalf.
- GDD global disk directory
- Proxy operations typically will be performed via remote procedure calls (RPCs). Put another way, the metadata structures are partitioned.
- the data structures affected include the global disk directory (GDD, FIG. 8), global RAM directory (GRD, FIG. 8), and the RAM copyset structures (FIG. 8).
- GDD global disk directory
- GDD global RAM directory
- FOG. 8 RAM copyset structures
- these data structures are not shared between clouds, they are coordinated to maintain the same consistency and fault tolerance guarantees present in the base version of the technology described hereinabove.
- the leaf nodes in each GDD that store disk core copy set information can include "virtual" entries that refer to core copies in remote clouds.
- the GRD and RAM copy set structures can include similar "virtual" entries. The structure of these virtual entries and the proxy mechanisms used to keep them consistent are described below.
- a core copy is a copy of a shared page stored on a persistent storage device (e.g., local hard disk of one of the network nodes) that is updated whenever the contents of that page are modified by any network node.
- a persistent storage device e.g., local hard disk of one of the network nodes
- the invention is designed for use with a structured data storage system such as the file system described hereinabove.
- the invention at the component level, is comprised of: (1) a set of Policies that deal with controlling inter-cloud behavior; (2) Intercloud linkages that deal with issues such as how the LAN mechanisms and structures can be made to span clouds and how potential address allocation conflicts are handled; (3) a Communication Subsystem that deals with how to establish WAN and dial-up (i.e., remote access) connectivity, how to adapt to differing network performance (e.g., 28.8 Kbps versus 100 Mbps), and how to handle unexpected link failures; (4) a File System that deals with how to ensure file coherence, how to provide a seamless view, and how to manage updates; and (5) a set of Security Mechanisms that deal with what is an acceptable security model and how to handle multi-domain security.
- a "loose copy" of a page is a copy stored on a persistent storage device (e.g., a local hard disk of a network node) that is not updated whenever a node modifies the page.
- a persistent storage device e.g., a local hard disk of a network node
- its version number is checked against that of any core copy, and if they match, the contents of the loose copy are up-to-date and thus can be served, otherwise the contents of the loose copy are discarded and a new copy of the page's data is loaded from a core copy.
- Loose copies have good read characteristics, although it may be desirable to aggregate version number checks for blocks of related pages across a slow link. Core copies require flushing on every update across a slow link. This is a bad idea unless the local read rate justifies it. Rather than synchronously updating core copies across slow links, it generally is better to update copies asynchronously in the background if access is frequent enough to warrant doing so.
- various aspects of the invention include the ability to maintain unique global addresses across all clouds and to perform all operations even when two or more clouds are interconnected.
- the invention does not allow the same address to be allocated in more than one cloud.
- the invention tolerates the connection of one cloud or network to another (or to two or more already-interconnected networks), the disconnection of a network, and/or the reconnection of a network while maintaining and allowing normal operations by all nodes in the cloud(s).
- Addressing is an important issue for disjoint clouds. It must be possible for a node on a "foreign" cloud to gain access to a file folder or other structured storage entity shared between clouds via the common shared memory system.
- files and folders are collections of pages in which addresses are used to add structure. For example, inode pages contain addresses pointing to the associated file data pages and file system directory pages contain addresses pointing to inode pages. Because file system data structures contain addresses, there is a issue of how to handle addresses that were allocated in a remote cloud if the file system is going to be able to interpret folders created in that cloud.
- DSM consumers e.g., a shared file system, database, email repository, web server, etc.
- DSM consumers e.g., a shared file system, database, email repository, web server, etc.
- file system metadata contents can be interpreted normally whether or not the inode refers to a purely local file or a file being shared between clouds.
- the 40-bit header is a unique per-node value based on the node's license number.
- a node header was selected rather than a cloud header because it solves the problems of mapping clouds to licenses and because it allows for multi-cloud nodes. Bundling the header with the license allows the 40-bit field to be used as a densely packed uniqueness identifier. Given this division, addresses can be guaranteed to be unique if each node allocates addresses only with its node header.
- the three most important data structures at that level for managing the location and consistency of a shared page are the Global RAM Directory (GRD), the local RAM copyset structures, and the Global Disk Directory (GDD).
- GRD Global RAM Directory
- GDD Global Disk Directory
- the global directories can be managed by walking a tree from root to desired leaf node, "paging" in the appropriate pages as you need them.
- One way to extend the GRD and GDD semantics across clouds would be to simply integrate the clouds' directories into unified directories, and transfer the needed directory pages between the clouds on demand.
- RCLids remote cloud identifiers
- An RCLid acts as a virtual placeholder for one or more cloud identifiers (CLids) in a remote cloud. For example, if an RCLid is found in a core copy member list, this means that one or more core copies of the page are present in the remote cloud. Similarly, an RCLid in a RAM copyset means that one or more remote nodes are currently being served RAM pages from the local node. RCLids are opaque such that a member of one cloud cannot tell how many nodes in the remote cloud are represented by a given RCLid. It may be necessary for the RCLid associated with a particular cloud to be unique and identical for all clouds that are sharing with that particular cloud. It needs to be ensured that RCLid values never collide with CLid values.
- the proxy mechanism involves contacting a node willing to act as a proxy for the nodes represented by the RCLid.
- the proxy node could be a single special member of the remote cloud through which all operations to that node must pass.
- the proxy node could be a single special member of the local cloud that knows how to perform operations in the remote cloud.
- the proxy node could be a single special member of the local cloud that knows how to talk to a special proxy "server" node in the remote cloud to have it perform requested operations.
- the basic mechanism utilized is as follows.
- a local node is designated to act as the proxy for an entire remote cloud, which it will do by communicating with a peer in the remote cloud. Note that this does not mean that the virtual node maps to a single physical node.
- This approach has some significant advantages. First, it provides a single point to handle sporadic connectivity. Since a local node is acting as the proxy, it will be available even if the communication link falls. It can enqueue operations that must be applied when the link returns. It also can transparently "failover" to a different remote node should its remote peer "server” fail. Second, it provides a local framework from which to consider asynchronous lazy inter-cloud protocols.
- a remote node is the proxy or is acting as the proxy server for a local proxy node
- the node that wants to perform the desired operation will specify the RClid as the destination node for the desired engine operation, but the communications layer will redirect the request to a CLid that is currently serving as a proxy node for that RCLid, marking the request as being a proxy request.
- the remote proxy server node Upon receiving the request, the remote proxy server node will execute the request in the remote cloud on behalf of the original requester. Depending on the semantics of the operation, the proxy server node may contact multiple nodes local to its cloud as part of performing the operation.
- a request such as "activate a core copy and send me the page contents” can be handled by any core copyholder, while a request such as “invalidate all copies of this page” would need to be sent to all copyholders in the remote cloud.
- the identity of the nodes that need to be contacted can be determined by the proxy node from the remote cloud's metadata (e.g., the local core copy holders can be determined by walking the remote GDD). More specific details of the proxy mechanism for various types of engine data structures are disclosed below.
- FIGS. 12A and 12B in which a shared file system tree is depicted between cloud A and cloud B wherein solid lines represent having copies of blocks composing an object stored locally and dashed/dotted lines represent having no local data for those pages, both a physical view (FIG. 12A) and a logical view (FIG. 12B) of the file system are shown.
- the physical view of clouds A and B show what files are on what cloud, while the logical view shows how all files are part of a single logical tree structure.
- FIG. 12A some directory files are stored in both cloud A and cloud B such as files 100 and 110. Some directory files are physically stored only in one cloud such as file 120 (on cloud B). The same is true for user files.
- file 132 is common to both clouds, while user file 142 is not replicated on both clouds and instead is on only cloud A
- directory trees do not need to be fully connected above a file for the tree to be cached locally.
- File 142 in cloud A shows a tree that is not fully connected as shown by the location of file 142 in cloud A's tree of FIG. 12A.
- an unconnected file like file 142 may be cached locally, that unconnected file will be unavailable if the clouds disconnect at a point when the file is unconnected in the tree structure.
- FIG. 13 where two clouds are shown sharing a folder and where an example of how file sharing can be implemented is depicted.
- somebody in "cloud L" i.e., the cloud on the LAN
- clouds P i.e., the cloud with a portable, remote access computer
- FIG. 13 only the disk metadata is shown in FIG. 13.
- the RAM metadata would look very similar.
- address ranges from which nodes in each cloud allocate pages are exchanged.
- a key issue in this invention is how to resolve "remote" addresses. This is handled as follows.
- a cloud connects to a remote cloud, it imports a list of client headers for nodes in that cloud. This list implies a set of address ranges that can be allocated by members of the remote cloud. The list is walked and a GDD entry is added for each list element to represent the associated address range. For example, if the remote cloud has two nodes with client tags 0xABC014011E and 0x123f0tf3afc, entries for address ranges 0XABC014011E00 . . . 000 through 0xABC014011EFF .
- this operation would correspond to adding a new address range to the root directory page 342 for each client header received as part of the initialization process, with the remote cloud's RCLid as the responsible node field.
- each node will need to send one or more IP addresses for local nodes that can act as proxy servers for remote requests.
- Normal operation can occur. During normal operation, it is possible for nodes in either cloud to access, lock, modify consistently, flush, etc. arbitrary data (file system) pages in the shared collaboration. Normal operation is as follows.
- a node when a node attempts to access a shared page for which it does not have a local core copy, including pages that have never before been accessed in that cloud, it will find an entry for a range of addresses spanning that page in its local GDD containing an RCLid pointing at the page's original home cloud. In this case, it sends a proxy RPC request to the remote cloud to activate the page.
- a node when a node wants to modify a GDD entry that is shared (e.g., it wants to create a core copy for data created remotely in the local cloud for the first time), it locks its local GDD page for that entry (using the GDD traversal mechanisms) and then sends a proxy request to the appropriate proxy node.
- the proxy server When the proxy server has completed the operation (traversing its GDD, locking pages, adding an RCLid representing the node that is creating a new core copy to its GDD entry, etc.), it responds back to the original requester, which completes the operation locally and unlocks its local GDD page.
- the GRDs on each cloud must be synchronized.
- the approach involves proxying the GRD mechanism similar to how the GDD operations are handled. For example, a remote GRD lookup is invoked whenever an attempt is made to activate a page with remote core copies prior to activating a local core copy, since a remote node might have the associated file open in shared mode and changes must be consistent with any remote changes. In the case where both a local and remote core copy exists, it might be preferable to activate a local core copy and communicate with the remote GRD asynchronously to see if there is a sharing collision and/or inform it that an active copy of the page exists.
- the GRDs are treated the same as the GDDs.
- the structure and functionality of the GRDs generally is the same as the GDDs.
- RCLids can be used as forwarding pointers. As an optimization, it is possible to start anywhere having a copy of the page if the location of any copy can be determined without contacting its original "home.”
- the invention supports modification of shared files across clouds both while connected and while disconnected. While connected, the file system will simply operate as it does in the environment provided by the base version of the technology that is described hereinabove, perhaps with minor changes for performance reasons.
- the invention requires that if a cloud contains a core copy of any page(s) of a file, it must have a core copy of all pages in the file. This axiom will be applied, on mobile systems, to all file system directory pages and to the contents of data files that are targeted for disconnected access. Given this assumption, disconnected operation and reconciliation will now be explored.
- the file system In the disconnected case (that is, when there is no communication channel between two clouds because of either a voluntary or involuntary network disconnect), the file system must be able to detect and resolve file update conflicts. This processing cannot be performed at just the page level because of atomicity requirements at the file level.
- the implementation mechanism for this solution exploits a synergistic file system/engine relationship.
- the RCLid proxy mechanism will drive and control disconnected operation. This isolates the unique connectivity requirements of mobile and WAN from the core components.
- the file system is responsible for providing assistance with file level coherence. This assistance will take the form of page type specific exception and reconciliation handlers.
- the general model here is that when the RCLid proxy has declared a remote cloud inaccessible, it will drive disconnected processing via an exception handling mechanism for RCLid operations. This mechanism will be based on page type. Exceptions on loose copies are handled as in the base engine design described hereinabove; that is, the pages are dropped and the attempted access fails with an appropriate error code. Exceptions on core copies are handled with a special symmetric logging facility, as described below. In particular, during a communication outage, all clouds with core copies of a page must engage in file system-level state logging when a shared file or directory is modified. Exceptions on tight copies, a postulated new page type for mobile systems, use asymmetric logging. This means that logging is performed on the mobile system, but not in the base cloud, if one of the clouds is a lone portable remote-accessing computer.
- Page update failures that occur to an RCLid are handled specially.
- the proxy When an update to a page containing an RCLid fails, the proxy returns a remote update failure error code.
- remote update failure means that the copyset entry associated with the RCLid should be flagged as suspect, but no other error recovery is needed at this time.
- file system metadata the remote update failure needs to be reflected up to file system in addition to marking, the copyset entry as suspect.
- file system will generate a reconciliation log entry that identifies the file operation that failed. The file system hands this log entry to the RCLid proxy.
- the log entry represents an operation to be performed by file system during the proxy-driven reconciliation process.
- Reconciliation is the process whereby the contents of two clouds are synchronized when the communication channel between two previously disconnected clouds is re-established.
- file system directories and metadata will be made coherent.
- data files will be in one of three states: (1) the file has no changes--following reconciliation, the file is unchanged; (2) the file has been changed on one system (i.e., cloud)--following reconciliation, the new file is visible everywhere; or (3) the file has been changed on both clouds--following reconciliation, there are two copies of the file and both are visible and independently addressable everywhere.
- Reconciliation is driven by the RCLid proxy mechanism, and is primarily a proxy to proxy operation.
- the proxy mechanism determines that the remote cloud is again accessible, and both sides enter into a reconnecting phase.
- one cloud is designated the reconciliation master.
- the master In the case of a mobile node reconnecting to a base cloud, the master is always the base cloud.
- the master cloud spawns a reconciliation process to perform reconciliation--this process can be a thread within file system or a separate driver module. It may be that each consumer of the shared memory engine (e.g., the file system) will need to provide a reconciliation process tailored for its specific needs. In this way, it is possible to continue to separate the functionality of the engine from that of its consumers, placing the consumer-specific reconciliation logic in a consumer-specific reconciliation process and the engine-specific reconciliation logic in the proxy mechanism.
- Reconciliation log entries contain the following information: (1) filename--the complete path of the file on which the operation was performed; (2) operation--the operation that was performed (e.g., create, delete, rename, append, . . .
- the master cloud parses the reconciliation log, and for each reconciliation log entry it performs a series of operations in its local cloud, interacting when appropriate with the remote cloud.
- the two clouds in question are a portable and its base LAN cloud, and that the file ⁇ tmp ⁇ foo was created on the portable when it was disconnected.
- the LAN cloud is designated master and drives the reconciliation process.
- the file creation there will be a log entry on the portable of the form ( ⁇ tmp ⁇ foo, create, ⁇ inode address>, ⁇ null>).
- tmp already exists in the base LAN cloud (if not, the creation of ⁇ tmp will appear before the creation of ⁇ tmp ⁇ foo in the reconciliation log and thus should already have been created)
- this entry is reconciled as follows.
- the reconciliation process (1) locks the tmp directory in the master cloud so that it can update its contents atomically; (2) compares the previous timestamp of the file with the current timestamp in the base cloud--if they differ, there was a write-write conflict and reconciliation on this file proceeds by creating a new file containing the data from the portable, as described below; (3) locks the ⁇ inode address> page using the normal engine mechanisms, which will involve the proxy mechanism locating the page in the slave cloud, locking it, and forwarding its most recent contents to the master cloud; (4) allocates an entry for foo in tmp with the appropriate file information and inode address--if the file is to be cached locally, which is always the case if the remote cloud is a portable, a local core copy of the inode page is created and its contents are stored locally; and (5) unlocks the tmp directory to allow other clients to access its contents.
- the base case described above is fairly straightforward. It gets tricky, however, when the file has been modified on both sides of the link, or apparently self-contradictory operations are performed while disconnected. If the file has been modified on both sides of the link, which can be detected using the timestamp comparison mechanism described above, the reconciliation process needs to create a new file, rather than replacing the contents of the old file. For now, a simple user interface is used for this. If the reconciliation process determines that a file has been created and/or modified on both sides of the link while disconnected, it will create a new file with a ". #" extension, where the value of # is one greater than the highest numbered . # file that exists with the same file prefix in that directory (e.g., foo. 1, foo.2, foo.3).
- the reconciliation process needs to be able to access the contents of the page(s) associated with the file from the remote cloud. Since these pages are at the same addresses as the newly modified local file's contents, it generally is not possible simply to access the page normally, because this would invoke the engine page-level reconciliation process and eliminate one of the versions of the page. Instead, it is desirable to acquire the remote contents while a copy-on-write is performed of the remote version of the file to a new file name with new addresses. Thus, it is necessary to have a way to request "page ⁇ foo>" from the remote cloud.
- the proxy mechanism can be extended to do this without interacting with the local cloud metadata.
- the base engine API may be extended for other reasons such as to get directly to the proxy mechanism (remote cloud) without interacting with the local cloud's metadata (e.g., "Invalidate your version of ⁇ address>").
- the master side is up to date. Once all the logs have been processed on the master, the reconnecting phase ends and the non-master side judiciously re-bootstraps itself This is a controlled, optimized reactivation of pages, starting with the GDD and continuing through a walk of the file system file directories. The ensuing page activations pull updated pages from the now up to date master cloud. Recurse till done. When the second cloud has finished bootstrapping itself, the two clouds are again in synch. Failures in the midst of reconciliation do not impact file integrity, because the use of locks lets us guarantee that file reconciliation is atomic at the file level.
- Changes to the slave filesystem will be appended to the end of the reconciliation log and need to be handled until reconciliation is complete.
- the state of the system, following reconciliation, is simple.
- the file system directories and metadata will be made coherent.
- Data files will be in one of three states, depending on what changes were made to the file while communication was down between the clouds: (1) no changes were made to the file in either cloud--following reconciliation, the file is unchanged everywhere; (2) the file changed in one of the clouds following reconciliation, the new file is visible everywhere; or (3) the file changed in both clouds--following reconciliation, there are two copies of the file (e.g., foo and foo. 1), and both are visible and independently addressable everywhere.
- the reconnecting phase of reconciliation is driven by the RCLid proxy and is primarily a proxy-to-proxy operation, as described above.
- reconciliation has been completed in both clouds, they both execute a restart-type mechanism (such as the mechanism described in attorney docket no. CLC-005 filed on the same date) to reconcile their RAM subsystems and then continue normal operation. This mechanism is described in the following paragraph.
- GRD global RAM directory
- one of the nodes on each network is designated as a master for the reconciliation, and this master then queries synchronously all of the other nodes in the local cloud and the remote proxy node to determine the contents of the local RAM cache of each of those other nodes (or the entire remote cloud in the case of the proxy node).
- the master uses the information it obtains from the local RAM caches to rebuild a GRD for the combined cloud.
- the clouds then resume operation, with the non-master nodes obtaining a copy of their local cloud's GRD during the course of normal operation.
- This reconciliation GRD rebuild process is bounded and guaranteed to terminate with all surviving GRD pages at the master node in a finite amount of time, barring failures during the reconciliation process. Such during-reconciliation failures will result in starting the same recovery process again, this time without the nodes that have failed.
- the invention can suffer from network partitions where multiple nodes can become "unavailable"without crashing.
- a common situation involving a partitioned network is expected to be a disconnected portable operating in isolation. When communication between clouds fails, both sides will continue normal operation to the extent possible.
- a page can be in at any given time: (1) The page has no RCLids in its disk core copyset, and thus all core copies reside in the local cloud. (2) The page has only RCLids in its disk core copyset, and thus no core copies reside in the local cloud. (3) The page has both local CLids and RCLids in its disk core copyset and is active in the local RAM subsystem. This situation occurs when the page has been activated by one or more local cloud members from a local core copy. In this case, the page can be located via the local cloud's GRD. (4) The page has one or more RCLids in its disk core copyset, is not active in the local RAM subsystem, but is active in the local Disk subsystem. This situation occurs when a remote cloud has activated the page from a core copy in the local cloud. (5) The page has both local CLids and RCLids in its disk core copyset, but is inactive in the local cloud.
- network partitions can be handled via two separate mechanisms, partition detection and metadata rebuild.
- proxy nodes are treated as virtual nodes in the local cloud for the purpose of connectivity checking.
- the remote cloud looks like a single virtual node in the local cloud.
- the proxy mechanism includes an inter-cloud heartbeat mechanism.
- a remote cloud's local proxy will respond (or choose not to respond) to queries based on whether or not the remote cloud is accessible.
- the inter-cloud heartbeat is independent of and hidden from the local cloud heartbeat mechanism. Also, the inter-cloud heartbeat is only performed while there are pages actively shared between clouds.
- the invention makes it possible to detect connectivity loss between clouds, maintain quorum independently in both clouds, and trigger exception-based processing when RCLid page updates are requested during periods of lost inter-cloud connectivity. Once connectivity is lost, the RAM subsystem is rebuilt. Subsequent page update failures that occur to an RCLid are handled specially.
- the security design for the above-described base global addressing system addresses the two fundamental network security issues of authentication and authorization. Authentication involves, for example, how user accounts and passwords are managed and validated. Authorization involves, for example, performing access checks on authenticated users to determine what such users are actually allowed to do on the network. With the invention, the same fundamental questions and issues are addressed, but the solution is different because the invention involves two or more interconnected and interoperating networks.
- the security model of the invention partitions responsibility for user authentication between the file system, which performs user/file-level authentication, and the engine, which performs cloud/page-level authentication. These two basic forms of authentication are described in the following two subsections--file-level security and page-level security.
- File-Level Security Responsibility for file-level security is divided in a manner similar to how management of engine metadata is partitioned.
- Each cloud retains its own independent security domain, similar to the way in which each cloud maintains its own GDD and GRD, and then a proxy mechanism is provided for performing intercloud security-related operations (both for adding remote users to file ACLs and for validating users).
- intercloud security-related operations both for adding remote users to file ACLs and for validating users.
- it must be known what users in the remote cloud may share files that are in a shared fileset so that different levels of access can be given to different users in a remote cloud (via the ACLs mechanism).
- a "virtual account” is introduced to the local security database to represent all of the accounts in a remote cloud, analogous to how an RCLid represents a set of nodes in a remote cloud.
- This virtual account in the security database is called a Virtual Account (VA).
- VA Virtual Account
- the file system When a user pulls down the security property sheet associated with a file, the file system will use a simple proxy mechanism to translate any VAs that it finds in to the list of users in the associated remote cloud (and an indication that they are remote users).
- a user with sufficient privilege on a file can set up an ACL for a remote user by selecting that user from the property sheet and specifying its access rights. This will cause a new ACL to be added to the file's ACL stream.
- ACEs Access Control Entries
- cloud-qualified user names e.g., Jones@Acme or Smith@ABC Corp.
- ACEs of shared files contain both the userid and domain/cloud identifier of the associated user.
- Virtual accounts are never authenticated within the local cloud. They are present only for usage in property sheets.
- Page-Level Security In addition to file system level security, it is necessary to control unauthorized access to pages by untrusted (or not completely trusted) clouds. Each cloud is in a separate security domain, and only the identified filesets can be shared among the plurality of security domains. Other information is not allowed to be shared among clouds. This issue is addressed by having clouds authenticate each other as part of the proxy mechanism, and then verifying for each page request that the authenticated remote cloud has access rights to that page. The key to this level of security is the interface between file system and the engine by which file system can specify to the engine which clouds have access to which pages (because they have access to some fileset(s)).
- both clouds Before fileset sharing can take place, both clouds must authenticate each other. Intercloud page sharing must ensure that only the pages that contain file system metadata and user data for a specific fileset are accessible between clouds. It must be ensured that a malicious, highly privileged user in one cloud cannot circumvent another cloud's security. Mechanisms for enforcing this level of access control are discussed in this section.
- Exporting a fileset entails specifying what remote cloud(s) can access it. Before a remote cloud is first allowed to access a fileset, both the exporting cloud and the importing cloud must authenticate one another. This process is repeated each time two clouds connect to one another. As part of the engine proxy setup phase, each cloud authenticates the other. This is not peer-to-peer authentication. It is a pair of independent, client/server-style checks. Each cloud requests access rights to the other cloud, which gives the requester the right to activate pages and request RCLid's to be created in the other cloud's directory structure. This level of security allows each cloud to protect the integrity of its directory structures and control what pages it exports. Note that both authentication exchanges must be successful for the system to correctly operate.
- the mechanism for performing authentication checks is to use distributed system security authentication techniques such as, for example, the SSPI on Windows NT.
- distributed system security authentication techniques such as, for example, the SSPI on Windows NT.
- each side exchanges (cloud name, password) pairs.
- the SSPI protocol performs challenge/response style authentication, where both a password and a private DES key are used to avoid various impersonation techniques. Strong security is provided here because of the ability of the invention to run over physically insecure WANs such as the Internet.
Abstract
Description
Claims (22)
Priority Applications (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/850,364 US5987506A (en) | 1996-11-22 | 1997-05-02 | Remote access and geographically distributed computers in a globally addressable storage environment |
AU73032/98A AU7303298A (en) | 1996-11-22 | 1997-11-21 | remote access in a globally addressable storage environment |
PCT/US1997/021460 WO1998022881A1 (en) | 1996-11-22 | 1997-11-21 | Remote access in a globally addressable storage environment |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/754,481 US6148377A (en) | 1996-11-22 | 1996-11-22 | Shared memory computer networks |
US08/827,534 US5918229A (en) | 1996-11-22 | 1997-03-28 | Structured data storage using globally addressable memory |
US08/850,364 US5987506A (en) | 1996-11-22 | 1997-05-02 | Remote access and geographically distributed computers in a globally addressable storage environment |
Related Parent Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US08/754,481 Continuation-In-Part US6148377A (en) | 1996-11-22 | 1996-11-22 | Shared memory computer networks |
US08/827,534 Continuation-In-Part US5918229A (en) | 1996-11-22 | 1997-03-28 | Structured data storage using globally addressable memory |
Publications (1)
Publication Number | Publication Date |
---|---|
US5987506A true US5987506A (en) | 1999-11-16 |
Family
ID=27419466
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US08/850,364 Expired - Lifetime US5987506A (en) | 1996-11-22 | 1997-05-02 | Remote access and geographically distributed computers in a globally addressable storage environment |
Country Status (3)
Country | Link |
---|---|
US (1) | US5987506A (en) |
AU (1) | AU7303298A (en) |
WO (1) | WO1998022881A1 (en) |
Cited By (594)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6047001A (en) * | 1997-12-18 | 2000-04-04 | Advanced Micro Devices, Inc. | Apparatus and method in a network interface device for storing a data frame and corresponding tracking information in a buffer memory |
US6064656A (en) * | 1997-10-31 | 2000-05-16 | Sun Microsystems, Inc. | Distributed system and method for controlling access control to network resources |
WO2000067416A2 (en) * | 1999-05-05 | 2000-11-09 | Contact Networks, Inc. | Method and system for storing and updating personal information over the network |
WO2000072142A1 (en) * | 1999-05-24 | 2000-11-30 | Hewlett-Packard Company | Partitioning in distributed computer system |
US6163856A (en) * | 1998-05-29 | 2000-12-19 | Sun Microsystems, Inc. | Method and apparatus for file system disaster recovery |
US6173413B1 (en) * | 1998-05-12 | 2001-01-09 | Sun Microsystems, Inc. | Mechanism for maintaining constant permissions for multiple instances of a device within a cluster |
WO2001006393A1 (en) * | 1998-10-08 | 2001-01-25 | Easynet Access Inc. | User interface method |
US6212612B1 (en) * | 1998-07-15 | 2001-04-03 | Intelect Communications Inc. | System and method for synchronized, multi-channel data management with dynamically configurable routing |
WO2001025930A1 (en) * | 1999-10-01 | 2001-04-12 | Infraworks Corporation | Shared memory blocking method and system |
US6222529B1 (en) | 1999-05-05 | 2001-04-24 | Shareware, Inc. | Method and apparatus for providing multiple sessions on a single user operating system |
US6226667B1 (en) | 1998-05-26 | 2001-05-01 | International Business Machines Corporation | Method and apparatus for preloading data in a distributed data processing system |
WO2001033829A2 (en) * | 1999-11-01 | 2001-05-10 | Mangosoft Corporation | Internet-based shared file service and distributed access control |
US6237024B1 (en) * | 1998-03-20 | 2001-05-22 | Sun Microsystem, Inc. | Method and apparatus for the suspension and continuation of remote processes |
LT4797B (en) | 1998-09-24 | 2001-05-25 | Mirror Image Internet Inc | An internet caching system and a method and an arrangement in such a sysytem |
US6289362B1 (en) * | 1998-09-01 | 2001-09-11 | Aidministrator Nederland B.V. | System and method for generating, transferring and using an annotated universal address |
US6295584B1 (en) * | 1997-08-29 | 2001-09-25 | International Business Machines Corporation | Multiprocessor computer system with memory map translation |
US6295639B1 (en) | 1998-09-01 | 2001-09-25 | Aidministrator Nederland B.V. | Securely accessing a file system of a remote server computer |
US6298428B1 (en) * | 1998-03-30 | 2001-10-02 | International Business Machines Corporation | Method and apparatus for shared persistent virtual storage on existing operating systems |
US6298419B1 (en) * | 1998-03-26 | 2001-10-02 | Compaq Computer Corporation | Protocol for software distributed shared memory with memory scaling |
US20010027470A1 (en) * | 2000-01-11 | 2001-10-04 | Friedemann Ulmer | System, method and computer program product for providing a remote support service |
US20010027467A1 (en) * | 2000-03-30 | 2001-10-04 | Anderson David P. | Massively distributed database system and associated method |
US20010034795A1 (en) * | 2000-02-18 | 2001-10-25 | Moulton Gregory Hagan | System and method for intelligent, globally distributed network storage |
US20010037192A1 (en) * | 2000-04-03 | 2001-11-01 | Nobuyuki Shimamoto | Method and system for providing service to remote users by inter-computer communications |
US20010044879A1 (en) * | 2000-02-18 | 2001-11-22 | Moulton Gregory Hagan | System and method for distributed management of data storage |
US6330571B1 (en) * | 1999-01-15 | 2001-12-11 | International Business Machines Corporation | Method and computer program product for implementing datalink path protection |
US6330709B1 (en) * | 1998-03-30 | 2001-12-11 | International Business Machines Corporation | Virtual machine implementation for shared persistent objects |
WO2001098918A1 (en) * | 2000-06-20 | 2001-12-27 | Fatwire Corporation | System and method for least work publishing |
US6338138B1 (en) * | 1998-01-27 | 2002-01-08 | Sun Microsystems, Inc. | Network-based authentication of computer user |
US20020004857A1 (en) * | 2000-07-06 | 2002-01-10 | Hiroshi Arakawa | Computer system |
US6343346B1 (en) * | 1997-07-10 | 2002-01-29 | International Business Machines Corporation | Cache coherent network adapter for scalable shared memory processing systems |
US6351776B1 (en) * | 1999-11-04 | 2002-02-26 | Xdrive, Inc. | Shared internet storage resource, user interface system, and method |
US20020027927A1 (en) * | 1997-12-31 | 2002-03-07 | Farhad Barzegar | Circuit to provide backup telephone service for a multiple service access system using a twisted pair |
US20020032801A1 (en) * | 1997-10-03 | 2002-03-14 | Myron Mosbarger | Method and system for asymmetric satellite communications for local area networks |
US6377979B1 (en) * | 1997-12-25 | 2002-04-23 | Kabushiki Kaisha Kobe Seiko Sho | Multiple-processor system and method for transferring data and/or a program stored in one processor to another processor in order to process the data or to execute the program therein |
US6385693B1 (en) * | 1997-12-31 | 2002-05-07 | At&T Corp. | Network server platform/facilities management platform caching server |
US6389540B1 (en) | 1998-02-26 | 2002-05-14 | Sun Microsystems, Inc. | Stack based access control using code and executor identifiers |
US6393497B1 (en) | 1998-03-20 | 2002-05-21 | Sun Microsystems, Inc. | Downloadable smart proxies for performing processing associated with a remote procedure call in a distributed system |
US6397270B1 (en) * | 1999-01-05 | 2002-05-28 | Agere Systems Guardian Corp. | System for indirect communication between two computers, each having write access to its own portion of a dual-access disk drive and read access to the entire drive |
US6405224B1 (en) | 1998-09-01 | 2002-06-11 | Aidministrator Nederland B.V. | Method and apparatus for HTML control |
US20020073209A1 (en) * | 1999-12-13 | 2002-06-13 | Nienhuis Ronald J. | Method for redirecting a network communication |
US20020078445A1 (en) * | 2000-07-11 | 2002-06-20 | Imran Sharif | Internet appliance for interactive audio/video display using a remote control unit for user input |
US6415316B1 (en) * | 1998-09-01 | 2002-07-02 | Aidministrator Nederland B.V. | Method and apparatus for implementing a web page diary |
US6421704B1 (en) | 1998-03-20 | 2002-07-16 | Sun Microsystems, Inc. | Method, apparatus, and product for leasing of group membership in a distributed system |
US20020099768A1 (en) * | 2001-01-25 | 2002-07-25 | Wright Robert A. | High performance client-server communication system |
US20020103907A1 (en) * | 2000-06-20 | 2002-08-01 | Erik Petersen | System and method of storing data to a recording medium |
US6438614B2 (en) | 1998-02-26 | 2002-08-20 | Sun Microsystems, Inc. | Polymorphic token based control |
US6438659B1 (en) * | 1997-12-31 | 2002-08-20 | Unisys Corporation | Directory based cache coherency system supporting multiple instruction processor and input/output caches |
US6446119B1 (en) * | 1997-08-07 | 2002-09-03 | Laslo Olah | System and method for monitoring computer usage |
US6446070B1 (en) | 1998-02-26 | 2002-09-03 | Sun Microsystems, Inc. | Method and apparatus for dynamic distributed computing over a network |
US20020133620A1 (en) * | 1999-05-24 | 2002-09-19 | Krause Michael R. | Access control in a network system |
US20020133539A1 (en) * | 2001-03-14 | 2002-09-19 | Imation Corp. | Dynamic logical storage volumes |
US6457053B1 (en) * | 1998-09-21 | 2002-09-24 | Microsoft Corporation | Multi-master unique identifier allocation |
US6460113B1 (en) | 2000-01-25 | 2002-10-01 | Dell Products L.P. | System and method for performing backup operations using a fibre channel fabric in a multi-computer environment |
US6460071B1 (en) * | 1997-11-21 | 2002-10-01 | International Business Machines Corporation | System and method for managing client application state in a stateless web browser environment |
US6463446B1 (en) | 1998-02-26 | 2002-10-08 | Sun Microsystems, Inc. | Method and apparatus for transporting behavior in an event-based distributed system |
US6467011B2 (en) * | 1999-03-19 | 2002-10-15 | Times N Systems, Inc. | Shared memory apparatus and method for multiprocessor systems |
US6466947B2 (en) | 1998-03-20 | 2002-10-15 | Sun Microsystems, Inc. | Apparatus and method for dynamically verifying information in a distributed system |
US20020152217A1 (en) * | 2001-04-13 | 2002-10-17 | Shigeki Kawai | Communication system and method having communication data dividing and transmitting functions |
US6480863B1 (en) | 1997-11-17 | 2002-11-12 | Sun Microsystems, Inc. | Method and system for multi-entry and multi-template matching in a database |
US20020169881A1 (en) * | 2001-05-10 | 2002-11-14 | International Business Machines Corporation | Method and apparatus for distributed access to services in a network data processing system |
US20020174128A1 (en) * | 2000-07-31 | 2002-11-21 | Oracle International Corporation | Opaque types |
US6487607B1 (en) | 1998-02-26 | 2002-11-26 | Sun Microsystems, Inc. | Methods and apparatus for remote method invocation |
US20020176930A1 (en) * | 2000-11-07 | 2002-11-28 | Kuang-Chung Peng | Method for fabricating an organic light emitting diode |
US6490592B1 (en) * | 1999-12-30 | 2002-12-03 | Nortel Networks Limited | Method of and apparatus for generating a tree data structure supporting longest match lookup |
US20020184241A1 (en) * | 2001-05-31 | 2002-12-05 | Yu-Fu Wu | System and method for shared directory management |
US20020184224A1 (en) * | 1997-11-13 | 2002-12-05 | Hyperspace Communications, Inc. | File transfer system |
US20020186711A1 (en) * | 2001-05-17 | 2002-12-12 | Kazunori Masuyama | Fault containment and error handling in a partitioned system with shared resources |
US20020199017A1 (en) * | 2001-06-25 | 2002-12-26 | Russell Lance W. | Routing meta data for network file access |
US6510541B1 (en) * | 1999-04-30 | 2003-01-21 | Matsushita Electric Industrial Co., Ltd. | Database having a hierarchical structure utilized for designing system-on-chip integrated circuit devices and a method of designing the same |
US6510456B1 (en) * | 1998-03-25 | 2003-01-21 | Hitachi, Ltd. | Data transfer control method and system, data transfer control program file, and file storage medium |
WO2003007191A1 (en) * | 2001-07-11 | 2003-01-23 | Apple Computer, Inc. | Method and apparatus for managing file extensions in a digital processing system |
US6514079B1 (en) | 2000-03-27 | 2003-02-04 | Rume Interactive | Interactive training method for demonstrating and teaching occupational skills |
US6519615B1 (en) | 1996-10-11 | 2003-02-11 | Sun Microsystems, Inc. | Method and system for leasing storage |
US20030033543A1 (en) * | 2000-03-30 | 2003-02-13 | United Devices, Inc. | Massively distributed processing system with modular client agent and associated method |
US20030033285A1 (en) * | 1999-02-18 | 2003-02-13 | Neema Jalali | Mechanism to efficiently index structured data that provides hierarchical access in a relational database system |
US6523066B1 (en) * | 1999-08-23 | 2003-02-18 | Harris-Exigent, Inc. | Dynamic distributed memory locking in a computer network |
WO2003025801A1 (en) * | 2001-09-21 | 2003-03-27 | Polyserve, Inc. | System and method for implementing journaling in a multi-node environment |
US20030061060A1 (en) * | 2001-09-27 | 2003-03-27 | I2 Technologies Us, Inc. | Dynamic database redirection using semantic taxonomy information |
US6542926B2 (en) * | 1998-06-10 | 2003-04-01 | Compaq Information Technologies Group, L.P. | Software partitioned multi-processor system with flexible resource sharing levels |
WO2003027882A1 (en) * | 2001-09-26 | 2003-04-03 | Mark Saake | Sharing objects between computer systems |
US6546404B1 (en) * | 2000-01-29 | 2003-04-08 | International Business Machines Corporation | Data migration tool |
US20030069949A1 (en) * | 2001-10-04 | 2003-04-10 | Chan Michele W. | Managing distributed network infrastructure services |
US20030069939A1 (en) * | 2001-10-04 | 2003-04-10 | Russell Lance W. | Packet processing in shared memory multi-computer systems |
US20030069938A1 (en) * | 2001-10-04 | 2003-04-10 | Russell Lance W. | Shared memory coupling of network infrastructure devices |
US6553409B1 (en) * | 1999-07-09 | 2003-04-22 | Microsoft Corporation | Background cache synchronization |
US6553466B1 (en) | 1999-10-01 | 2003-04-22 | Infraworks Corporation | Shared memory blocking method and system |
US20030076526A1 (en) * | 2001-10-18 | 2003-04-24 | International Business Machines Corporation | Method and apparatus for printing documents using a document repository in a distributed data processing system |
US6560656B1 (en) | 1998-02-26 | 2003-05-06 | Sun Microsystems, Inc. | Apparatus and method for providing downloadable code for use in communicating with a device in a distributed system |
US20030093439A1 (en) * | 2001-11-12 | 2003-05-15 | Kazuhiko Mogi | Method and apparatus for relocating data related to database management system |
US6571277B1 (en) * | 1999-10-19 | 2003-05-27 | International Business Machines Corporation | Method and apparatus for scaling universal plug and play networks using atomic proxy replication |
US6578044B1 (en) | 1997-11-17 | 2003-06-10 | Sun Microsystems, Inc. | Method and system for typesafe attribute matching |
US20030115167A1 (en) * | 2000-07-11 | 2003-06-19 | Imran Sharif | Web browser implemented in an Internet appliance |
US20030126465A1 (en) * | 2001-12-31 | 2003-07-03 | Joseph Tassone | Internet-based card access and security systems and methods |
US20030125022A1 (en) * | 2002-01-03 | 2003-07-03 | International Business Machines Corporation | Mobile messaging global directory |
US20030126118A1 (en) * | 2002-01-02 | 2003-07-03 | International Business Machines Corporation | Method, system and program for direct client file access in a data management system |
US6594661B1 (en) * | 1999-12-27 | 2003-07-15 | International Business Machines Corporation | Method and system for controlling access to a source application |
US6598094B1 (en) | 1998-03-20 | 2003-07-22 | Sun Microsystems, Inc. | Method and apparatus for determining status of remote objects in a distributed system |
US6598131B2 (en) * | 1999-11-08 | 2003-07-22 | Ondotek, Inc. | Data image management via emulation of non-volatile storage device |
US20030140308A1 (en) * | 2001-09-28 | 2003-07-24 | Ravi Murthy | Mechanism for mapping XML schemas to object-relational database systems |
US6604127B2 (en) | 1998-03-20 | 2003-08-05 | Brian T. Murphy | Dynamic lookup service in distributed system |
US20030149765A1 (en) * | 2000-03-30 | 2003-08-07 | Hubbard Edward A. | Dynamic coordination and control of network connected devices for large-scale network site testing and associated architectures |
US20030149762A1 (en) * | 2001-10-05 | 2003-08-07 | Knight Gregory John | Storage area network methods and apparatus with history maintenance and removal |
US20030167327A1 (en) * | 2001-10-05 | 2003-09-04 | Baldwin Duane Mark | Storage area network methods and apparatus for topology rendering |
US20030177233A1 (en) * | 2002-03-14 | 2003-09-18 | Yahoo! Inc. | Proxy client-server communication system |
US20030182312A1 (en) * | 2002-03-19 | 2003-09-25 | Chen Raymond C. | System and method for redirecting access to a remote mirrored snapshop |
US6629154B1 (en) | 1998-02-26 | 2003-09-30 | Sun Microsystems, Inc. | Method and system for deterministic hashes to identify remote methods |
US20030187983A1 (en) * | 2002-03-29 | 2003-10-02 | Rajic Hrabri L. | Method and system for distributing applications |
US20030191911A1 (en) * | 2002-04-03 | 2003-10-09 | Powerquest Corporation | Using disassociated images for computer and storage resource management |
US6633862B2 (en) * | 2000-12-29 | 2003-10-14 | Intel Corporation | System and method for database cache synchronization across multiple interpreted code engines |
US6643672B1 (en) * | 2000-07-31 | 2003-11-04 | Hewlett-Packard Development Company, Lp. | Method and apparatus for asynchronous file writes in a distributed file system |
US6643650B1 (en) | 2000-05-09 | 2003-11-04 | Sun Microsystems, Inc. | Mechanism and apparatus for using messages to look up documents stored in spaces in a distributed computing environment |
US20030212868A1 (en) * | 2002-05-13 | 2003-11-13 | Nvidia Corporation | Method and apparatus for providing an integrated virtual disk subsystem |
US6654783B1 (en) | 2000-03-30 | 2003-11-25 | Ethergent Corporation | Network site content indexing method and associated system |
US6654772B1 (en) * | 1999-04-28 | 2003-11-25 | Emc Corporation | Multi-volume extent based file system |
US6654793B1 (en) | 1996-04-23 | 2003-11-25 | Sun Microsystems, Inc. | System and method for facilitating dynamic loading of stub information to enable a program operating in one address space to invoke processing of a remote method or procedure in another address space |
US20030225861A1 (en) * | 2002-06-03 | 2003-12-04 | Hitachi, Ltd. | Storage system |
US20030233370A1 (en) * | 2000-10-13 | 2003-12-18 | Miosoft Corporation, A Delaware Corporation | Maintaining a relationship between two different items of data |
US20030236826A1 (en) * | 2002-06-24 | 2003-12-25 | Nayeem Islam | System and method for making mobile applications fault tolerant |
US20040003013A1 (en) * | 2002-06-26 | 2004-01-01 | International Business Machines Corporation | Transferring data and storing metadata across a network |
US20040003029A1 (en) * | 2002-06-24 | 2004-01-01 | Nayeem Islam | Method and system for application load balancing |
US6675205B2 (en) * | 1999-10-14 | 2004-01-06 | Arcessa, Inc. | Peer-to-peer automated anonymous asynchronous file sharing |
US20040006565A1 (en) * | 2002-07-08 | 2004-01-08 | International Business Machines Corporation | Method, apparatus and computer program product for mapping file handles |
KR100415067B1 (en) * | 2001-07-09 | 2004-01-13 | 김한규 | Method of remote connecting of hardware devices using the network |
US20040010568A1 (en) * | 2002-06-26 | 2004-01-15 | International Business Machines Corporation | Handling node address failure in a distributed nodal system of processors |
US20040019898A1 (en) * | 1999-06-14 | 2004-01-29 | International Business Machines Corporation | Accessing local objects using local access proxies |
US6691112B1 (en) | 2000-08-01 | 2004-02-10 | Darren Michael Siegal | Method for indexing and managing a searchable community of non-HTML information |
US6701344B1 (en) | 2000-07-31 | 2004-03-02 | The Boeing Company | Distributed game environment |
US20040044702A1 (en) * | 2002-08-29 | 2004-03-04 | Ferreira Alves Luis Antonio | Method, system, and program for determining whether data has been modified |
US20040049553A1 (en) * | 2002-09-05 | 2004-03-11 | Takashige Iwamura | Information processing system having data migration device |
US6708171B1 (en) | 1996-04-23 | 2004-03-16 | Sun Microsystems, Inc. | Network proxy |
US20040054748A1 (en) * | 2002-09-16 | 2004-03-18 | Emmanuel Ackaouy | Apparatus and method for processing data in a network |
US20040054777A1 (en) * | 2002-09-16 | 2004-03-18 | Emmanuel Ackaouy | Apparatus and method for a proxy cache |
US20040054861A1 (en) * | 2002-09-17 | 2004-03-18 | Harres John M. | Method and tool for determining ownership of a multiple owner lock in multithreading environments |
US20040059866A1 (en) * | 2001-06-25 | 2004-03-25 | Kayuri Patel | System and method for representing named data streams within an on-disk structure of a file system |
US6714966B1 (en) | 2000-07-31 | 2004-03-30 | The Boeing Company | Information delivery service |
US6714941B1 (en) * | 2000-07-19 | 2004-03-30 | University Of Southern California | Learning data prototypes for information extraction |
US20040064466A1 (en) * | 2002-09-27 | 2004-04-01 | Oracle International Corporation | Techniques for rewriting XML queries directed to relational database constructs |
US6718392B1 (en) | 2000-10-24 | 2004-04-06 | Hewlett-Packard Development Company, L.P. | Queue pair partitioning in distributed computer system |
US6718372B1 (en) * | 2000-01-07 | 2004-04-06 | Emc Corporation | Methods and apparatus for providing access by a first computing system to data stored in a shared storage device managed by a second computing system |
US6721739B1 (en) * | 2000-12-05 | 2004-04-13 | Silicon Graphics, Inc. | System and method for maintaining and recovering data consistency across multiple pages |
US6725392B1 (en) | 1999-03-03 | 2004-04-20 | Adaptec, Inc. | Controller fault recovery system for a distributed file system |
US20040078370A1 (en) * | 2002-10-17 | 2004-04-22 | International Business Machines Corporation | Method and apparatus for real time creation and modification of a change log for multi-server synchronization |
US6728737B2 (en) | 1996-10-11 | 2004-04-27 | Sun Microsystems, Inc. | Method and system for leasing storage |
US6732147B1 (en) | 2000-07-31 | 2004-05-04 | The Boeing Company | Leaving a broadcast channel |
US20040093295A1 (en) * | 2002-11-13 | 2004-05-13 | Spotware Technologies, Inc. | Retail distributive computing |
US20040098415A1 (en) * | 2002-07-30 | 2004-05-20 | Bone Jeff G. | Method and apparatus for managing file systems and file-based data storage |
US6742034B1 (en) | 1999-12-16 | 2004-05-25 | Dell Products L.P. | Method for storage device masking in a storage area network and storage controller and storage subsystem for using such a method |
US6742020B1 (en) * | 2000-06-08 | 2004-05-25 | Hewlett-Packard Development Company, L.P. | System and method for managing data flow and measuring service in a storage network |
US20040103099A1 (en) * | 2002-11-20 | 2004-05-27 | Fujitsu Limited | Inter-network relay storage apparatus and inter-network relay method |
US6745233B1 (en) * | 1999-09-28 | 2004-06-01 | Fujitsu Limited | Data transfer technique for distributed memory type parallel computer |
US6751636B1 (en) | 2000-12-05 | 2004-06-15 | Silicon Graphics, Inc. | System and method for maintaining and recovering data consistency across multiple instances of a database |
US6760815B1 (en) | 2000-06-02 | 2004-07-06 | Sun Microsystems, Inc. | Caching mechanism for a virtual heap |
US6763440B1 (en) | 2000-06-02 | 2004-07-13 | Sun Microsystems, Inc. | Garbage collection using nursery regions for new objects in a virtual heap |
US20040148336A1 (en) * | 2000-03-30 | 2004-07-29 | Hubbard Edward A | Massively distributed processing system architecture, scheduling, unique device identification and associated methods |
US20040148409A1 (en) * | 2003-01-24 | 2004-07-29 | Davis Lee M. | Business platform with networked, association-based business entity access management and active content website configuration |
US6775668B1 (en) * | 2000-09-11 | 2004-08-10 | Novell, Inc. | Method and system for enhancing quorum based access control to a database |
US20040158496A1 (en) * | 2001-09-27 | 2004-08-12 | I2 Technologies Us, Inc. | Order acceleration through user document storage and reuse |
US6782450B2 (en) | 2001-12-06 | 2004-08-24 | Raidcore, Inc. | File mode RAID subsystem |
US6782389B1 (en) * | 2000-09-12 | 2004-08-24 | Ibrix, Inc. | Distributing files across multiple, permissibly heterogeneous, storage devices |
US6789077B1 (en) | 2000-05-09 | 2004-09-07 | Sun Microsystems, Inc. | Mechanism and apparatus for web-based searching of URI-addressable repositories in a distributed computing environment |
US6789126B1 (en) | 2000-05-09 | 2004-09-07 | Sun Microsystems, Inc. | Addressing message gates in a distributed computing environment |
US20040177353A1 (en) * | 2003-02-28 | 2004-09-09 | Rao Bindu Rama | Electronic device network having graceful denial of service |
US6792466B1 (en) | 2000-05-09 | 2004-09-14 | Sun Microsystems, Inc. | Trusted construction of message endpoints in a distributed computing environment |
US6798782B1 (en) | 1999-12-10 | 2004-09-28 | Sun Microsystems, Inc. | Truly anonymous communications using supernets, with the provision of topology hiding |
US20040189707A1 (en) * | 2003-03-27 | 2004-09-30 | Microsoft Corporation | System and method for filtering and organizing items based on common elements |
US20040215829A1 (en) * | 2000-03-30 | 2004-10-28 | United Devices, Inc. | Data conversion services and associated distributed processing system |
WO2004097681A1 (en) * | 2003-03-27 | 2004-11-11 | Microsoft Corporation | System and method utilizing virtual folders |
US20040236798A1 (en) * | 2001-09-11 | 2004-11-25 | Sudhir Srinivasan | Migration of control in a distributed segmented file system |
US6829634B1 (en) | 2000-07-31 | 2004-12-07 | The Boeing Company | Broadcasting network |
US6832223B1 (en) | 1996-04-23 | 2004-12-14 | Sun Microsystems, Inc. | Method and system for facilitating access to a lookup service |
US20040255048A1 (en) * | 2001-08-01 | 2004-12-16 | Etai Lev Ran | Virtual file-sharing network |
US20040267804A1 (en) * | 2003-06-27 | 2004-12-30 | Sun Microsystems, Inc. | Hybrid system implementing distinct and co-existing application execution environments and methods for implementing the same |
US20040267821A1 (en) * | 2001-11-29 | 2004-12-30 | Jiro Kiyama | Data recording method, data deletion method, data display method, recording apparatus, recording medium, and program |
US20040267807A1 (en) * | 2000-10-13 | 2004-12-30 | Miosoft Corporation, A Delaware Corporation | Persistent data storage techniques |
US20050010664A1 (en) * | 2000-03-30 | 2005-01-13 | United Devices, Inc. | Method of managing workloads and associated distributed processing system |
US6845489B1 (en) * | 1999-04-30 | 2005-01-18 | Matsushita Electric Industrial Co., Ltd. | Database for design of integrated circuit device and method for designing integrated circuit device |
US20050015461A1 (en) * | 2003-07-17 | 2005-01-20 | Bruno Richard | Distributed file system |
US20050015355A1 (en) * | 2003-07-16 | 2005-01-20 | Apple Computer, Inc. | Method and system for data sharing between application programs |
US6847995B1 (en) | 2000-03-30 | 2005-01-25 | United Devices, Inc. | Security architecture for distributed processing systems and associated method |
US20050021540A1 (en) * | 2003-03-26 | 2005-01-27 | Microsoft Corporation | System and method for a rules based engine |
US6857056B2 (en) * | 2000-10-06 | 2005-02-15 | Koninklijke Philips Electronics N.V. | Virtual memory device for a digital home network |
US20050044301A1 (en) * | 2003-08-20 | 2005-02-24 | Vasilevsky Alexander David | Method and apparatus for providing virtual computing services |
US6862594B1 (en) | 2000-05-09 | 2005-03-01 | Sun Microsystems, Inc. | Method and apparatus to discover services using flexible search criteria |
US6870842B1 (en) | 1999-12-10 | 2005-03-22 | Sun Microsystems, Inc. | Using multicasting to provide ethernet-like communication behavior to selected peers on a network |
EP1246064A3 (en) * | 2001-03-30 | 2005-03-23 | Kabushiki Kaisha Toshiba | Startup method of a new node in a distributed database management system |
US20050063401A1 (en) * | 1997-06-18 | 2005-03-24 | Brian Kenner | System and method for server-side optimization of data delivery on a distributed computer network |
US20050080982A1 (en) * | 2003-08-20 | 2005-04-14 | Vasilevsky Alexander D. | Virtual host bus adapter and method |
US20050091518A1 (en) * | 2003-10-23 | 2005-04-28 | Agarwal Sameet H. | System and methods providing enhanced security model |
US20050097141A1 (en) * | 2003-10-30 | 2005-05-05 | International Business Machines Corporation | Autonomic filesystem recovery |
US20050097126A1 (en) * | 2000-08-24 | 2005-05-05 | Microsoft Corporation | Partial migration of an object to another storage location in a computer system |
US6891802B1 (en) | 2000-03-30 | 2005-05-10 | United Devices, Inc. | Network site testing method and associated system |
US6895418B1 (en) * | 1999-04-28 | 2005-05-17 | Emc Corporation | Versatile indirection in an extent based file system |
US20050108231A1 (en) * | 2003-11-17 | 2005-05-19 | Terrascale Technologies Inc. | Method for retrieving and modifying data elements on a shared medium |
US20050108300A1 (en) * | 2003-11-17 | 2005-05-19 | Terrascale Technologies Inc. | Method for the management of local client cache buffers in a clustered computer environment |
US20050114297A1 (en) * | 2002-03-22 | 2005-05-26 | Edwards John K. | System and method for performing an on-line check of a file system |
US20050114363A1 (en) * | 2003-11-26 | 2005-05-26 | Veritas Operating Corporation | System and method for detecting and storing file identity change information within a file system |
US20050120160A1 (en) * | 2003-08-20 | 2005-06-02 | Jerry Plouffe | System and method for managing virtual servers |
US20050120173A1 (en) * | 2003-11-27 | 2005-06-02 | Nobuyuki Minowa | Device and method for performing information processing using plurality of processors |
US6910069B1 (en) | 2000-07-31 | 2005-06-21 | The Boeing Company | Joining a broadcast channel |
US20050138034A1 (en) * | 2003-12-17 | 2005-06-23 | International Business Machines Corporation | System and method for sharing resource properties in a multi-user environment |
US6912537B2 (en) * | 2000-06-20 | 2005-06-28 | Storage Technology Corporation | Dynamically changeable virtual mapping scheme |
US6918022B2 (en) * | 2001-02-28 | 2005-07-12 | Intel Corporation | Memory space organization |
US20050154829A1 (en) * | 2004-01-09 | 2005-07-14 | Nobuhiro Maki | Storage system and storage system management method |
WO2005045594A3 (en) * | 2003-10-23 | 2005-07-14 | Microsoft Corp | System and method for virtual folder and sharing items |
US6920497B1 (en) | 2000-07-31 | 2005-07-19 | The Boeing Company | Contacting a broadcast channel |
US6922688B1 (en) * | 1998-01-23 | 2005-07-26 | Adaptec, Inc. | Computer system storage |
US20050165862A1 (en) * | 2004-01-12 | 2005-07-28 | International Business Machines Corporation | Autonomic and fully recovering filesystem operations |
US20050171956A1 (en) * | 1999-11-04 | 2005-08-04 | O'brien Brett | Shared internet storage resource, user interface system, and method |
US20050185597A1 (en) * | 2004-02-20 | 2005-08-25 | Le Cuong M. | Method, system, and program for checking and repairing a network configuration |
US6938169B1 (en) * | 1999-12-10 | 2005-08-30 | Sun Microsystems, Inc. | Channel-specific file system views in a private network using a public-network infrastructure |
US6941410B1 (en) | 2000-06-02 | 2005-09-06 | Sun Microsystems, Inc. | Virtual heap for a virtual machine |
US20050203835A1 (en) * | 1998-01-30 | 2005-09-15 | Eli Nhaissi | Internet billing |
US20050203819A1 (en) * | 1999-11-29 | 2005-09-15 | Actuate Corporation | Method and apparatus for generating page-level security in a computer generated report |
US20050203907A1 (en) * | 2004-03-12 | 2005-09-15 | Vijay Deshmukh | Pre-summarization and analysis of results generated by an agent |
US6961772B1 (en) * | 1999-11-30 | 2005-11-01 | Recursion Software, Inc. | Transparent connection type binding by address range |
US6963897B1 (en) | 2000-03-30 | 2005-11-08 | United Devices, Inc. | Customer services and advertising based upon device attributes and associated distributed processing system |
US20050251508A1 (en) * | 2004-05-10 | 2005-11-10 | Masaaki Shimizu | Program and method for file access control in a storage system |
US6965924B1 (en) * | 2000-04-26 | 2005-11-15 | Hewlett-Packard Development Company, L.P. | Method and system for transparent file proxying |
US6970941B1 (en) | 1999-12-10 | 2005-11-29 | Sun Microsystems, Inc. | System and method for separating addresses from the delivery scheme in a virtual private network |
US20050267638A1 (en) * | 2001-02-12 | 2005-12-01 | The Stanley Works | System and architecture for providing a modular intelligent assist system |
US20050278552A1 (en) * | 2004-06-14 | 2005-12-15 | Vincent Delisle | Secure virtual account |
US20050278220A1 (en) * | 2004-06-09 | 2005-12-15 | Hahn-Carlson Dean W | Automated transaction processing system and approach |
US6977929B1 (en) | 1999-12-10 | 2005-12-20 | Sun Microsystems, Inc. | Method and system for facilitating relocation of devices on a network |
US6980313B2 (en) | 2000-07-11 | 2005-12-27 | Imran Sharif | Fax-compatible internet appliance |
US20060004765A1 (en) * | 2004-06-10 | 2006-01-05 | Anderson Owen T | Remote access agent for caching in a SAN file system |
WO2006005039A2 (en) * | 2004-06-30 | 2006-01-12 | Eztakes, Inc. | Digital content protection for peer to peer networks |
US20060010150A1 (en) * | 1999-05-18 | 2006-01-12 | Kom, Inc. | Method and System for Electronic File Lifecycle Management |
US6993523B1 (en) | 2000-12-05 | 2006-01-31 | Silicon Graphics, Inc. | System and method for maintaining and recovering data consistency in a data base page |
US20060031528A1 (en) * | 2004-06-01 | 2006-02-09 | Domenico Raguseo | Method and system for downloading software products with reduced transmission time |
US7003547B1 (en) | 2000-03-30 | 2006-02-21 | United Devices, Inc. | Distributed parallel processing system having capability-based incentives and associated method |
US20060041619A1 (en) * | 2004-08-19 | 2006-02-23 | International Business Machines Corporation | System and method for an on-demand peer-to-peer storage virtualization infrastructure |
US20060047503A1 (en) * | 2004-08-30 | 2006-03-02 | Lin David H | System and method for controlling sound data |
US7010532B1 (en) * | 1997-12-31 | 2006-03-07 | International Business Machines Corporation | Low overhead methods and apparatus for shared access storage devices |
US7016971B1 (en) | 1999-05-24 | 2006-03-21 | Hewlett-Packard Company | Congestion management in a distributed computer system multiplying current variable injection rate with a constant to set new variable injection rate at source node |
US7020678B1 (en) | 2000-03-30 | 2006-03-28 | United Devices, Inc. | Machine generated sweepstakes entry model and associated distributed processing system |
US7032006B2 (en) | 2000-01-26 | 2006-04-18 | Zhuk Jeff Yefim | Distributed active knowledge and process base allowing system elements to be shared within a collaborative framework |
US7039663B1 (en) * | 2002-04-19 | 2006-05-02 | Network Appliance, Inc. | System and method for checkpointing and restarting an asynchronous transfer of data between a source and destination snapshot |
US7047250B1 (en) | 2001-09-28 | 2006-05-16 | Oracle International Corporation | Indexing to efficiently manage versioned data in a database system |
US7047253B1 (en) | 2001-09-28 | 2006-05-16 | Oracle Interntional Corporation | Mechanisms for storing content and properties of hierarchically organized resources |
US7051039B1 (en) * | 2001-09-28 | 2006-05-23 | Oracle International Corporation | Mechanism for uniform access control in a database system |
US20060112151A1 (en) * | 2002-03-19 | 2006-05-25 | Manley Stephen L | System and method for storage of snapshot metadata in a remote file |
US7054841B1 (en) | 2001-09-27 | 2006-05-30 | I2 Technologies Us, Inc. | Document storage and classification |
US7058696B1 (en) * | 1996-11-22 | 2006-06-06 | Mangosoft Corporation | Internet-based shared file service with native PC client access and semantics |
US20060129627A1 (en) * | 1996-11-22 | 2006-06-15 | Mangosoft Corp. | Internet-based shared file service with native PC client access and semantics and distributed version control |
US20060136516A1 (en) * | 2004-12-16 | 2006-06-22 | Namit Jain | Techniques for maintaining consistency for different requestors of files in a database management system |
US20060136508A1 (en) * | 2004-12-16 | 2006-06-22 | Sam Idicula | Techniques for providing locks for file operations in a database management system |
US20060136376A1 (en) * | 2004-12-16 | 2006-06-22 | Oracle International Corporation | Infrastructure for performing file operations by a database server |
US20060136509A1 (en) * | 2004-12-16 | 2006-06-22 | Syam Pannala | Techniques for transaction semantics for a database server performing file operations |
US7082474B1 (en) | 2000-03-30 | 2006-07-25 | United Devices, Inc. | Data sharing and file distribution method and associated distributed processing system |
US20060179156A1 (en) * | 2005-02-08 | 2006-08-10 | Cisco Technology, Inc. | Multi-threaded packeting processing architecture |
US7092967B1 (en) | 2001-09-28 | 2006-08-15 | Oracle International Corporation | Loadable units for lazy manifestation of XML documents |
US20060187908A1 (en) * | 2003-06-18 | 2006-08-24 | Hitachi, Ltd. | Network system and its switches |
US20060195648A1 (en) * | 1998-11-24 | 2006-08-31 | Oracle International Corporation | Managing checkpoint queues in a multiple node system |
US7103626B1 (en) | 2000-05-24 | 2006-09-05 | Hewlett-Packard Development, L.P. | Partitioning in distributed computer system |
US7103611B2 (en) | 2003-05-01 | 2006-09-05 | Oracle International Corporation | Techniques for retaining hierarchical information in mapping between XML documents and relational data |
US20060236378A1 (en) * | 2005-04-19 | 2006-10-19 | Burshan Chen Y | Connecting VPN users in a public network |
US20060235840A1 (en) * | 2005-04-19 | 2006-10-19 | Anand Manikutty | Optimization of queries over XML views that are based on union all operators |
US7127472B1 (en) * | 1999-04-27 | 2006-10-24 | Canon Kabushiki Kaisha | Data processing method and data processing device |
US20060277221A1 (en) * | 2005-06-01 | 2006-12-07 | Green Hills Software, Inc. | Transactional file system with client partitioning |
US20060288080A1 (en) * | 2000-09-12 | 2006-12-21 | Ibrix, Inc. | Balanced computer architecture |
US20070005555A1 (en) * | 2005-06-29 | 2007-01-04 | Namit Jain | Method and mechanism for supporting virtual content in performing file operations at a RDBMS |
US20070005603A1 (en) * | 2005-06-29 | 2007-01-04 | Namit Jain | Sharing state information among a plurality of file operation servers |
US7162528B1 (en) * | 1998-11-23 | 2007-01-09 | The United States Of America As Represented By The Secretary Of The Navy | Collaborative environment implemented on a distributed computer network and software therefor |
US7162476B1 (en) * | 2003-09-11 | 2007-01-09 | Cisco Technology, Inc | System and method for sharing global data within distributed computing systems |
US7162488B2 (en) | 2005-04-22 | 2007-01-09 | Microsoft Corporation | Systems, methods, and user interfaces for storing, searching, navigating, and retrieving electronic information |
US20070011167A1 (en) * | 2005-07-08 | 2007-01-11 | Muralidhar Krishnaprasad | Optimization of queries on a repository based on constraints on how the data is stored in the repository |
US20070011212A1 (en) * | 2002-04-19 | 2007-01-11 | George Koppich | Document management system for automating operations performed on documents in data storage areas |
US20070022148A1 (en) * | 2005-07-20 | 2007-01-25 | Akers David G | Reserving an area of a storage medium for a file |
US7171484B1 (en) | 2000-05-24 | 2007-01-30 | Krause Michael R | Reliable datagram transport service |
US20070038649A1 (en) * | 2005-08-11 | 2007-02-15 | Abhyudaya Agrawal | Flexible handling of datetime XML datatype in a database system |
US7181463B2 (en) | 2003-10-24 | 2007-02-20 | Microsoft Corporation | System and method for managing data using static lists |
US7185011B1 (en) | 1998-04-10 | 2007-02-27 | Microsoft Corporation | Method and system for directory balancing |
US7188305B1 (en) | 2000-08-31 | 2007-03-06 | International Business Machines Corporation | Method and apparatus for providing local data persistence for web applications |
US7188316B2 (en) | 2003-03-24 | 2007-03-06 | Microsoft Corporation | System and method for viewing and editing multi-value properties |
US7194513B2 (en) | 2001-07-08 | 2007-03-20 | Imran Sharif | System and method for using an internet appliance to send/receive digital content files as E-mail attachments |
US20070078961A1 (en) * | 2005-09-14 | 2007-04-05 | Seiichi Kumano | Method for distributing data input/output load |
US20070083538A1 (en) * | 2005-10-07 | 2007-04-12 | Roy Indroniel D | Generating XML instances from flat files |
US20070083529A1 (en) * | 2005-10-07 | 2007-04-12 | Oracle International Corporation | Managing cyclic constructs of XML schema in a rdbms |
US20070130157A1 (en) * | 2005-12-05 | 2007-06-07 | Namit Jain | Techniques for performing file operations involving a link at a database management system |
US20070136382A1 (en) * | 2005-12-14 | 2007-06-14 | Sam Idicula | Efficient path-based operations while searching across versions in a repository |
US7234114B2 (en) | 2003-03-24 | 2007-06-19 | Microsoft Corporation | Extensible object previewer in a shell browser |
US20070143477A1 (en) * | 2001-08-01 | 2007-06-21 | Cisco Technology, Inc. | Reducing round trips across a wide area network for resource locking by extended locking and delayed unlocking |
US20070150271A1 (en) * | 2003-12-10 | 2007-06-28 | France Telecom | Optimized multiple coding method |
US7240292B2 (en) | 2003-04-17 | 2007-07-03 | Microsoft Corporation | Virtual address bar user interface control |
US20070162441A1 (en) * | 2006-01-12 | 2007-07-12 | Sam Idicula | Efficient queriability of version histories in a repository |
US20070162579A1 (en) * | 2006-01-09 | 2007-07-12 | Microsoft Corporation | Dynamic storage of documents |
US7245291B2 (en) | 2000-07-11 | 2007-07-17 | Imran Sharif | System and method for internet appliance data entry and navigation |
US20070168720A1 (en) * | 2005-11-30 | 2007-07-19 | Oracle International Corporation | Method and apparatus for providing fault tolerance in a collaboration environment |
US20070192470A1 (en) * | 2006-02-13 | 2007-08-16 | Kazunari Fujiwara | File transfer system |
US20070198792A1 (en) * | 2006-02-22 | 2007-08-23 | David Dice | Methods and apparatus to implement parallel transactions |
US20070198545A1 (en) * | 2006-02-22 | 2007-08-23 | Fei Ge | Efficient processing of path related operations on data organized hierarchically in an RDBMS |
US20070198653A1 (en) * | 2005-12-30 | 2007-08-23 | Kurt Jarnagin | Systems and methods for remote computer-based analysis of user-provided chemogenomic data |
US20070198463A1 (en) * | 2006-02-16 | 2007-08-23 | Callplex, Inc. | Virtual storage of portable media files |
US20070239952A1 (en) * | 2006-04-10 | 2007-10-11 | Wen-Shyang Hwang | System And Method For Remote Mirror Data Backup Over A Network |
US20070239695A1 (en) * | 2006-04-10 | 2007-10-11 | Al Chakra | Transient storage in distributed collaborative computing environments |
US20070239943A1 (en) * | 2006-02-22 | 2007-10-11 | David Dice | Methods and apparatus to implement parallel transactions |
US20070261103A1 (en) * | 2006-05-02 | 2007-11-08 | Steven Viavant | Method and apparatus for imposing quorum-based access control in a computer system |
US20070271239A1 (en) * | 2006-05-18 | 2007-11-22 | Tsinghua University | Method for transferring data between terminal apparatuses in a transparent computation system |
US20070299659A1 (en) * | 2006-06-21 | 2007-12-27 | Harris Corporation | Vocoder and associated method that transcodes between mixed excitation linear prediction (melp) vocoders with different speech frame rates |
US7318102B1 (en) | 1999-05-24 | 2008-01-08 | Hewlett-Packard Development Company, L.P. | Reliable datagram |
US20080016148A1 (en) * | 2006-07-12 | 2008-01-17 | Arsenal Digital Solutions Usa, Inc. | Systems, methods and computer program products for performing remote data storage for client devices |
US20080022392A1 (en) * | 2006-07-05 | 2008-01-24 | Cisco Technology, Inc. | Resolution of attribute overlap on authentication, authorization, and accounting servers |
US7336790B1 (en) | 1999-12-10 | 2008-02-26 | Sun Microsystems Inc. | Decoupling access control from key management in a network |
US20080052556A1 (en) * | 2006-08-25 | 2008-02-28 | Donovan Steven R | System and method for maintaining resiliency of subscriptions to an event server |
US20080083031A1 (en) * | 2006-12-20 | 2008-04-03 | Microsoft Corporation | Secure service computation |
US20080082533A1 (en) * | 2006-09-28 | 2008-04-03 | Tak Fung Wang | Persistent locks/resources for concurrency control |
US20080104009A1 (en) * | 2006-10-25 | 2008-05-01 | Jonathan Back | Serializable objects and a database thereof |
US20080104085A1 (en) * | 2006-10-25 | 2008-05-01 | Papoutsakis Emmanuel A | Distributed database |
US20080104699A1 (en) * | 2006-09-28 | 2008-05-01 | Microsoft Corporation | Secure service computation |
US20080114896A1 (en) * | 2006-10-05 | 2008-05-15 | Holt John M | Asynchronous data transmission |
US7383503B2 (en) | 2005-02-23 | 2008-06-03 | Microsoft Corporation | Filtering a collection of items |
US20080133654A1 (en) * | 2006-12-01 | 2008-06-05 | Chei-Yol Kim | Network block device using network asynchronous i/o |
US7406484B1 (en) | 2000-09-12 | 2008-07-29 | Tbrix, Inc. | Storage allocation in a distributed segmented file system |
US7406476B1 (en) * | 2005-04-04 | 2008-07-29 | Apple Inc. | Updating a data structure |
US7409644B2 (en) | 2003-05-16 | 2008-08-05 | Microsoft Corporation | File system shell |
US7412404B1 (en) * | 2001-09-27 | 2008-08-12 | I2 Technologies Us, Inc. | Generating, updating, and managing multi-taxonomy environments |
US7412518B1 (en) | 2000-05-09 | 2008-08-12 | Sun Microsystems, Inc. | Method and apparatus for proximity discovery of services |
US20080195671A1 (en) * | 2005-10-01 | 2008-08-14 | Te-Hyun Kim | Device Management System Using Log Management Object and Method for Generating and Controlling Logging Data Therein |
US7440954B2 (en) | 2004-04-09 | 2008-10-21 | Oracle International Corporation | Index maintenance for operations involving indexed XML data |
US7447712B2 (en) * | 1997-09-28 | 2008-11-04 | Global 360, Inc. | Structured workfolder |
US7448079B2 (en) | 2000-07-05 | 2008-11-04 | Ernst & Young, Llp | Method and apparatus for providing computer services |
US20080276195A1 (en) * | 2007-05-04 | 2008-11-06 | Microsoft Corporation | Live companion window |
US7464125B1 (en) * | 2002-04-15 | 2008-12-09 | Ibrix Inc. | Checking the validity of blocks and backup duplicates of blocks during block reads |
US20080320025A1 (en) * | 2007-06-22 | 2008-12-25 | Microsoft Corporation | Gathering and using awareness information |
US7490093B2 (en) | 2003-08-25 | 2009-02-10 | Oracle International Corporation | Generating a schema-specific load structure to load data into a relational database based on determining whether the schema-specific load structure already exists |
US7496583B2 (en) | 2004-04-30 | 2009-02-24 | Microsoft Corporation | Property tree for metadata navigation and assignment |
US20090055472A1 (en) * | 2007-08-20 | 2009-02-26 | Reiji Fukuda | Communication system, communication method, communication control program and program recording medium |
US7499909B2 (en) | 2006-07-03 | 2009-03-03 | Oracle International Corporation | Techniques of using a relational caching framework for efficiently handling XML queries in the mid-tier data caching |
US7499925B2 (en) | 2003-03-27 | 2009-03-03 | Microsoft Corporation | File system for displaying items of different types and from different physical locations |
US20090077202A1 (en) * | 2002-02-08 | 2009-03-19 | Pitts William M | Method for creating an extensible content distribution framework |
US20090077141A1 (en) * | 2007-09-13 | 2009-03-19 | Frank Hady | Aggregation of file/directory structures |
US20090089341A1 (en) * | 2007-09-28 | 2009-04-02 | Microsoft Corporation | Distriuted storage for collaboration servers |
US20090100069A1 (en) * | 2001-09-18 | 2009-04-16 | Bosley Carleton J | Systems, methods and programming for routing and indexing globally addressable objects and associated business models |
US7523131B2 (en) | 2005-02-10 | 2009-04-21 | Oracle International Corporation | Techniques for efficiently storing and querying in a relational database, XML documents conforming to schemas that contain cyclic constructs |
US7526483B2 (en) * | 2003-03-27 | 2009-04-28 | Microsoft Corporation | System and method for virtual folder sharing including utilization of static and dynamic lists |
US20090112870A1 (en) * | 2007-10-31 | 2009-04-30 | Microsoft Corporation | Management of distributed storage |
US7529750B2 (en) * | 2000-08-11 | 2009-05-05 | International Business Machines Corporation | Accessing information on a network |
US7552223B1 (en) * | 2002-09-16 | 2009-06-23 | Netapp, Inc. | Apparatus and method for data consistency in a proxy cache |
US7552449B1 (en) * | 2000-01-21 | 2009-06-23 | Sun Microsystems, Inc. | Method for enabling multiple concurrent subprocess handling on a system using a global process |
US20090177855A1 (en) * | 2008-01-04 | 2009-07-09 | International Business Machines Corporation | Backing up a de-duplicated computer file-system of a computer system |
US20090182860A1 (en) * | 2008-01-15 | 2009-07-16 | Samsung Electronics Co., Ltd. | Method and system for securely sharing content |
US7565517B1 (en) | 2002-04-03 | 2009-07-21 | Symantec Corporation | Retargeting a captured image to new hardware while in a pre-boot environment |
US20090193110A1 (en) * | 2005-05-05 | 2009-07-30 | International Business Machines Corporation | Autonomic Storage Provisioning to Enhance Storage Virtualization Infrastructure Availability |
US20090204546A1 (en) * | 2000-11-15 | 2009-08-13 | Mahmoud Nabih Youssef Haidar | Electronic payment and associated systems |
US20090216908A1 (en) * | 2008-02-22 | 2009-08-27 | Microsoft Corporation | Personal Computing Environment With Virtual Computing Device |
US7587411B2 (en) | 2003-03-27 | 2009-09-08 | Microsoft Corporation | System and method for filtering and organizing items based on common elements |
US7596609B1 (en) | 1998-01-30 | 2009-09-29 | Net-Express, Ltd. | WWW addressing |
US7614016B2 (en) | 2005-04-21 | 2009-11-03 | Microsoft Corporation | Multiple roots in navigation pane |
US20090292850A1 (en) * | 1999-10-14 | 2009-11-26 | Bluearc Uk Limited | File System Adapter for Hardware Implementation or Acceleration of File System Functions |
US7630994B1 (en) | 2004-03-12 | 2009-12-08 | Netapp, Inc. | On the fly summarization of file walk data |
US7631032B1 (en) | 1998-01-30 | 2009-12-08 | Net-Express, Ltd. | Personalized internet interaction by adapting a page format to a user record |
US7634453B1 (en) * | 1999-08-13 | 2009-12-15 | Storage Technology Corporation | Distributed file data location |
US20090319058A1 (en) * | 2008-06-20 | 2009-12-24 | Invensys Systems, Inc. | Systems and methods for immersive interaction with actual and/or simulated facilities for process, environmental and industrial control |
US7650575B2 (en) | 2003-03-27 | 2010-01-19 | Microsoft Corporation | Rich drag drop user interface |
US20100017456A1 (en) * | 2004-08-19 | 2010-01-21 | Carl Phillip Gusler | System and Method for an On-Demand Peer-to-Peer Storage Virtualization Infrastructure |
US7657846B2 (en) | 2004-04-23 | 2010-02-02 | Microsoft Corporation | System and method for displaying stack icons |
US20100030827A1 (en) * | 2006-02-16 | 2010-02-04 | Callplex, Inc. | Distributed virtual storage of portable media files |
US7660887B2 (en) | 2001-09-07 | 2010-02-09 | Sun Microsystems, Inc. | Systems and methods for providing dynamic quality of service for a distributed system |
US7665028B2 (en) | 2005-07-13 | 2010-02-16 | Microsoft Corporation | Rich drag drop user interface |
US20100064033A1 (en) * | 2008-09-08 | 2010-03-11 | Franco Travostino | Integration of an internal cloud infrastructure with existing enterprise services and systems |
US7680879B2 (en) | 1996-07-18 | 2010-03-16 | Computer Associates Think, Inc. | Method and apparatus for maintaining data integrity across distributed computer systems |
US7694236B2 (en) | 2004-04-23 | 2010-04-06 | Microsoft Corporation | Stack icons representing multiple objects |
US20100088317A1 (en) * | 2002-07-30 | 2010-04-08 | Stored Iq, Inc. | Method and apparatus for harvesting file system metadata |
US7702869B1 (en) | 2006-04-28 | 2010-04-20 | Netapp, Inc. | System and method for verifying the consistency of mirrored data sets |
US7712034B2 (en) | 2003-03-24 | 2010-05-04 | Microsoft Corporation | System and method for shell browser |
US7716492B1 (en) | 2000-05-09 | 2010-05-11 | Oracle America, Inc. | Method and apparatus to obtain service capability credentials |
US20100131545A1 (en) * | 2008-11-26 | 2010-05-27 | Yahoo! Inc. | Distribution Data Items Within Geographically Distributed Databases |
US7734747B2 (en) | 1998-02-26 | 2010-06-08 | Oracle America, Inc. | Dynamic lookup service in a distributed system |
US20100145917A1 (en) * | 2002-07-30 | 2010-06-10 | Stored Iq, Inc. | System, method and apparatus for enterprise policy management |
US7739426B1 (en) | 2005-10-31 | 2010-06-15 | Cisco Technology, Inc. | Descriptor transfer logic |
US20100169452A1 (en) * | 2004-06-01 | 2010-07-01 | Rajeev Atluri | Causation of a data read operation against a first storage system by a server associated with a second storage system according to a host generated instruction |
US7756969B1 (en) | 2001-09-07 | 2010-07-13 | Oracle America, Inc. | Dynamic provisioning of identification services in a distributed system |
US7765581B1 (en) | 1999-12-10 | 2010-07-27 | Oracle America, Inc. | System and method for enabling scalable security in a virtual private network |
US7769794B2 (en) | 2003-03-24 | 2010-08-03 | Microsoft Corporation | User interface for a file system shell |
US20100199276A1 (en) * | 2009-02-04 | 2010-08-05 | Steven Michael Umbehocker | Methods and Systems for Dynamically Switching Between Communications Protocols |
US20100202314A1 (en) * | 2000-02-17 | 2010-08-12 | Hauck Jerrold V | Methods and apparatus for ensuring compatibility on a high performance serial bus |
US7792874B1 (en) | 2004-01-30 | 2010-09-07 | Oracle America, Inc. | Dynamic provisioning for filtering and consolidating events |
USRE41706E1 (en) | 1999-11-30 | 2010-09-14 | Glass Graham W | Moving objects in a distributed computing environment |
US7797310B2 (en) | 2006-10-16 | 2010-09-14 | Oracle International Corporation | Technique to estimate the cost of streaming evaluation of XPaths |
US20100235901A1 (en) * | 2009-03-12 | 2010-09-16 | Richard Adam Simpkins | Cifs proxy authentication |
US7802180B2 (en) | 2004-06-23 | 2010-09-21 | Oracle International Corporation | Techniques for serialization of instances of the XQuery data model |
US7801894B1 (en) | 2004-10-28 | 2010-09-21 | Stored IQ | Method and apparatus for harvesting file system metadata |
US7805602B1 (en) | 2005-11-10 | 2010-09-28 | Cisco Technology, Inc. | Prioritized call admission control for internet key exchange |
US20100250867A1 (en) * | 2009-03-30 | 2010-09-30 | The Boeing Company | Computer architectures using shared storage |
US20100250700A1 (en) * | 2009-03-30 | 2010-09-30 | Sun Microsystems, Inc. | Data storage system and method of processing a data access request |
US7814188B2 (en) | 2003-12-16 | 2010-10-12 | Honeywell International Inc. | Synchronized wireless communications system |
US20100260067A1 (en) * | 2007-11-08 | 2010-10-14 | Nokia Corporation | Connectivity architecture for service discovery |
US7818299B1 (en) | 2002-03-19 | 2010-10-19 | Netapp, Inc. | System and method for determining changes in two snapshots and for transmitting changes to a destination snapshot |
US7823077B2 (en) | 2003-03-24 | 2010-10-26 | Microsoft Corporation | System and method for user modification of metadata in a shell browser |
US20100274762A1 (en) * | 2009-04-24 | 2010-10-28 | Microsoft Corporation | Dynamic placement of replica data |
US20100274765A1 (en) * | 2009-04-24 | 2010-10-28 | Microsoft Corporation | Distributed backup and versioning |
US20100274982A1 (en) * | 2009-04-24 | 2010-10-28 | Microsoft Corporation | Hybrid distributed and cloud backup architecture |
US7827561B2 (en) | 2003-03-26 | 2010-11-02 | Microsoft Corporation | System and method for public consumption of communication events between arbitrary processes |
US7831642B1 (en) * | 2004-09-30 | 2010-11-09 | Symantec Operating Corporation | Page cache management for a shared file |
US7836098B2 (en) | 2007-07-13 | 2010-11-16 | Oracle International Corporation | Accelerating value-based lookup of XML document in XQuery |
US7836017B1 (en) | 2000-09-12 | 2010-11-16 | Hewlett-Packard Development Company, L.P. | File replication in a distributed segmented file system |
US7840609B2 (en) | 2007-07-31 | 2010-11-23 | Oracle International Corporation | Using sibling-count in XML indexes to optimize single-path queries |
US7844582B1 (en) | 2004-10-28 | 2010-11-30 | Stored IQ | System and method for involving users in object management |
US7844646B1 (en) * | 2004-03-12 | 2010-11-30 | Netapp, Inc. | Method and apparatus for representing file system metadata within a database for efficient queries |
US7844584B1 (en) * | 2006-06-23 | 2010-11-30 | Netapp, Inc. | System and method for persistently storing lock state information |
US20100305721A1 (en) * | 2009-05-29 | 2010-12-02 | Invensys Systems, Inc. | Methods and apparatus for control configuration with control objects that self-define tracked parameters |
US20100306177A1 (en) * | 2009-05-29 | 2010-12-02 | Khosravi Hormuzd M | Host operating system independent storage-related remote access and operations |
US20100325729A1 (en) * | 2009-06-19 | 2010-12-23 | Khosravi Hormuzd M | Determination by circuitry of presence of authorized and/or malicious data |
US20100332744A1 (en) * | 2009-06-26 | 2010-12-30 | Khosravi Hormuzd M | Data recovery and overwrite independent of operating system |
US7865904B2 (en) | 2003-03-26 | 2011-01-04 | Microsoft Corporation | Extensible user context system for delivery of notifications |
US7885980B2 (en) | 2004-07-02 | 2011-02-08 | Oracle International Corporation | Mechanism for improving performance on XML over XML data using path subsetting |
US20110035728A1 (en) * | 2005-11-07 | 2011-02-10 | Slawomir Adam Janczewski | Object-Oriented Support for Dynamic Assignment of Parallel Computing Resources |
USRE42153E1 (en) * | 2000-03-30 | 2011-02-15 | Hubbard Edward A | Dynamic coordination and control of network connected devices for large-scale network site testing and associated architectures |
US20110055272A1 (en) * | 2009-08-28 | 2011-03-03 | International Business Machines Corporation | Extended data storage system |
US7917604B1 (en) | 2007-06-29 | 2011-03-29 | Emc Corporation | Techniques for operating a data storage assembly via a series of web pages and a commit-at-the-end, wizard-style behavior |
US20110078384A1 (en) * | 2009-09-30 | 2011-03-31 | Ganesh Kumar | Memory mirroring and migration at home agent |
US7921110B1 (en) | 2003-12-23 | 2011-04-05 | Netapp, Inc. | System and method for comparing data sets |
US7930277B2 (en) | 2004-04-21 | 2011-04-19 | Oracle International Corporation | Cost-based optimizer for an XML data repository within a database |
US7933935B2 (en) | 2006-10-16 | 2011-04-26 | Oracle International Corporation | Efficient partitioning technique while managing large XML documents |
US7933928B2 (en) | 2005-12-22 | 2011-04-26 | Oracle International Corporation | Method and mechanism for loading XML documents into memory |
US20110119364A1 (en) * | 2009-11-18 | 2011-05-19 | Icelero Llc | Method and system for cloud computing services for use with client devices having memory cards |
US20110119353A1 (en) * | 2002-08-06 | 2011-05-19 | Tsao Sheng Tai Ted | Method and Apparatus for information exchange over a web based environment |
US7949941B2 (en) | 2005-04-22 | 2011-05-24 | Oracle International Corporation | Optimizing XSLT based on input XML document structure description and translating XSLT into equivalent XQuery expressions |
US7958112B2 (en) | 2008-08-08 | 2011-06-07 | Oracle International Corporation | Interleaving query transformations for XML indexes |
US20110137879A1 (en) * | 2009-12-07 | 2011-06-09 | Saurabh Dubey | Distributed lock administration |
US20110154462A1 (en) * | 2008-07-08 | 2011-06-23 | Gemalto Sa | Method for managing an access from a remote device to data accessible from a local device and corresponding system |
US20110178991A1 (en) * | 2010-01-20 | 2011-07-21 | Siemens Aktiengesellschaft | Method for operating an archiving system for data sets, in particular medical image data sets, and archiving system |
US7991768B2 (en) | 2007-11-08 | 2011-08-02 | Oracle International Corporation | Global query normalization to improve XML index based rewrites for path subsetted index |
US7992103B2 (en) | 2004-04-26 | 2011-08-02 | Microsoft Corporation | Scaling icons for representing files |
US8001232B1 (en) | 2000-05-09 | 2011-08-16 | Oracle America, Inc. | Event message endpoints in a distributed computing environment |
US8024309B1 (en) | 2004-03-12 | 2011-09-20 | Netapp, Inc. | Storage resource management across multiple paths |
US8024335B2 (en) | 2004-05-03 | 2011-09-20 | Microsoft Corporation | System and method for dynamically generating a selectable search extension |
US8028272B2 (en) | 1999-05-17 | 2011-09-27 | Invensys Systems, Inc. | Control system configurator and methods with edit selection |
US20110252071A1 (en) * | 2010-02-22 | 2011-10-13 | Sookasa Inc | Cloud Based Operating and Virtual File System |
US20110289215A1 (en) * | 2010-05-19 | 2011-11-24 | Cleversafe, Inc. | Accessing a global vault in multiple dispersed storage networks |
US20110289146A1 (en) * | 2010-05-21 | 2011-11-24 | Hormuzd Khosravi | Method and apparatus allowing scan of data storage device from remote server |
US20110289306A1 (en) * | 2010-05-21 | 2011-11-24 | Khosravi Hormuzd M | Method and apparatus for secure scan of data storage device from remote server |
US8073841B2 (en) | 2005-10-07 | 2011-12-06 | Oracle International Corporation | Optimizing correlated XML extracts |
US8082491B1 (en) | 2000-05-09 | 2011-12-20 | Oracle America, Inc. | Dynamic displays in a distributed computing environment |
US20110320568A1 (en) * | 2000-01-28 | 2011-12-29 | Slik David B | Content distribution system for generating content streams to suit different users and facilitating e-commerce transactions using broadcast content metadata |
US8090452B2 (en) | 1999-06-11 | 2012-01-03 | Invensys Systems, Inc. | Methods and apparatus for control using control devices that provide a virtual machine environment and that communicate via an IP network |
US8108430B2 (en) | 2004-04-30 | 2012-01-31 | Microsoft Corporation | Carousel control for metadata navigation and assignment |
US8127060B2 (en) | 2009-05-29 | 2012-02-28 | Invensys Systems, Inc | Methods and apparatus for control configuration with control objects that are fieldbus protocol-aware |
US8127217B2 (en) | 2002-04-19 | 2012-02-28 | Kabushiki Kaisha Toshiba | Document management system for transferring a plurality of documents |
US8135796B1 (en) | 2000-05-09 | 2012-03-13 | Oracle America, Inc. | Mechanism and apparatus for accessing and addressing services in a distributed computing environment |
US8161075B1 (en) * | 2006-05-31 | 2012-04-17 | Verizon Laboratories Inc. | Systems and methods for managing integrated and customizable data |
US20120102486A1 (en) * | 2011-12-22 | 2012-04-26 | Software Ag | Distributed cloud application deployment systems and/or associated methods |
USRE43375E1 (en) | 1999-11-30 | 2012-05-08 | Reware Asset Group, L.L.C. | System and method for communications in a distributed computing environment |
US8195646B2 (en) | 2005-04-22 | 2012-06-05 | Microsoft Corporation | Systems, methods, and user interfaces for storing, searching, navigating, and retrieving electronic information |
US8208477B1 (en) * | 2005-08-24 | 2012-06-26 | Hewlett-Packard Development Company, L.P. | Data-dependent overlay network |
US8229932B2 (en) | 2003-09-04 | 2012-07-24 | Oracle International Corporation | Storing XML documents efficiently in an RDBMS |
US20120210399A1 (en) * | 2011-02-16 | 2012-08-16 | Waldeck Technology, Llc | Location-enabled access control lists for real-world devices |
US8250062B2 (en) | 2007-11-09 | 2012-08-21 | Oracle International Corporation | Optimized streaming evaluation of XML queries |
US8249940B2 (en) | 2000-03-30 | 2012-08-21 | Niration Network Group, LLC | Capability based distributed processing |
US20120226746A1 (en) * | 2002-08-06 | 2012-09-06 | Tsao Sheng Tai Ted | Method and Apparatus for Information Exchange Over a Web Based Environment |
US8266024B2 (en) | 2004-06-09 | 2012-09-11 | Syncada Llc | Transaction accounting auditing approach and system therefor |
US8291324B2 (en) | 1996-07-18 | 2012-10-16 | Ca, Inc. | Network management system using virtual reality techniques to display and simulate navigation to network components |
US20120278817A1 (en) * | 2011-04-26 | 2012-11-01 | Oracle International Corporation | Event distribution pattern for use with a distributed data grid |
US20120303576A1 (en) * | 2011-05-23 | 2012-11-29 | Microsoft Corporation | Synchronous replication in a distributed storage environment |
US8331855B2 (en) | 2010-07-12 | 2012-12-11 | Invensys Systems, Inc. | Methods and apparatus for process control with improved communication links |
US20130007065A1 (en) * | 2011-06-30 | 2013-01-03 | Accenture Global Services Limited | Distributed computing system hierarchal structure manipulation |
US8368640B2 (en) | 1999-05-17 | 2013-02-05 | Invensys Systems, Inc. | Process control configuration system with connection validation and configuration |
US8392285B2 (en) | 1996-11-12 | 2013-03-05 | Syncada Llc | Multi-supplier transaction and payment programmed processing approach with at least one supplier |
US8396811B1 (en) | 1999-02-26 | 2013-03-12 | Syncada Llc | Validation approach for auditing a vendor-based transaction |
US8429196B2 (en) | 2008-06-06 | 2013-04-23 | Oracle International Corporation | Fast extraction of scalar values from binary encoded XML |
US8463964B2 (en) | 2009-05-29 | 2013-06-11 | Invensys Systems, Inc. | Methods and apparatus for control configuration with enhanced change-tracking |
US8490015B2 (en) | 2005-04-15 | 2013-07-16 | Microsoft Corporation | Task dialog and programming interface for same |
US8510292B2 (en) | 2006-05-25 | 2013-08-13 | Oracle International Coporation | Isolation for applications working on shared XML data |
US8510331B1 (en) | 2004-10-28 | 2013-08-13 | Storediq, Inc. | System and method for a desktop agent for use in managing file systems |
US20130212152A1 (en) * | 2012-02-10 | 2013-08-15 | Adobe Systems Inc. | Method and Apparatus for Efficiently Performing File Services Using Cloud Computing |
US8522154B2 (en) | 2005-04-22 | 2013-08-27 | Microsoft Corporation | Scenario specialization of file browser |
US8526940B1 (en) | 2004-08-17 | 2013-09-03 | Palm, Inc. | Centralized rules repository for smart phone customer care |
US20130246553A1 (en) * | 2012-03-16 | 2013-09-19 | Empire Technology Development Llc | Data migration |
US8543898B2 (en) | 2007-11-09 | 2013-09-24 | Oracle International Corporation | Techniques for more efficient generation of XML events from XML data sources |
US20130254325A1 (en) * | 2012-03-21 | 2013-09-26 | Nhn Corporation | Cache system and cache service providing method using network switch |
US20130254852A1 (en) * | 2012-03-26 | 2013-09-26 | International Business Machines Corporation | Providing multiple authentications to authenticate users with respect to a system and file systems offered through the system |
US8560439B2 (en) | 2004-06-09 | 2013-10-15 | Syncada Llc | Transaction processing with core and distributor processor implementations |
US20130282774A1 (en) * | 2004-11-15 | 2013-10-24 | Commvault Systems, Inc. | Systems and methods of data storage management, such as dynamic data stream allocation |
US8578361B2 (en) | 2004-04-21 | 2013-11-05 | Palm, Inc. | Updating an electronic device with update agent code |
US8589268B2 (en) | 1996-11-12 | 2013-11-19 | Syncada Llc | Financial institution-based transaction processing system and approach |
US8645321B1 (en) | 2006-05-31 | 2014-02-04 | Verizon Data Services Llc | Asynchronous data integrity for enterprise computing |
US8650119B2 (en) | 2004-06-09 | 2014-02-11 | Syncada Llc | Order-resource fulfillment and management system and approach |
US8661036B2 (en) | 2004-04-29 | 2014-02-25 | Microsoft Corporation | Metadata editing control |
US20140074841A1 (en) * | 2012-09-10 | 2014-03-13 | Apple Inc. | Concurrent access methods for tree data structures |
US8694510B2 (en) | 2003-09-04 | 2014-04-08 | Oracle International Corporation | Indexing XML documents efficiently |
US20140101234A1 (en) * | 2012-10-09 | 2014-04-10 | National Cheng Kung University | Multi-cloud communication system |
US8706872B2 (en) | 2012-07-09 | 2014-04-22 | Parentsware, Llc | Agreement compliance controlled information throttle |
US8707209B2 (en) | 2004-04-29 | 2014-04-22 | Microsoft Corporation | Save preview representation of files being created |
US8712884B2 (en) | 2006-10-06 | 2014-04-29 | Syncada Llc | Transaction finance processing system and approach |
US8738725B2 (en) | 2011-01-03 | 2014-05-27 | Planetary Data LLC | Community internet drive |
US8751337B2 (en) | 2008-01-25 | 2014-06-10 | Syncada Llc | Inventory-based payment processing system and approach |
US8752044B2 (en) | 2006-07-27 | 2014-06-10 | Qualcomm Incorporated | User experience and dependency management in a mobile device |
US20140172950A1 (en) * | 2012-12-13 | 2014-06-19 | Ca, Inc. | Methods And Systems For Speeding Up Data Recovery |
US8762238B2 (en) | 2004-06-09 | 2014-06-24 | Syncada Llc | Recurring transaction processing system and approach |
US8793223B1 (en) | 2009-02-09 | 2014-07-29 | Netapp, Inc. | Online data consistency checking in a network storage system with optional committal of remedial changes |
US8799335B2 (en) | 2012-09-28 | 2014-08-05 | International Business Machines Corporation | Supporting coordinated access to a file system's shared storage using automatic alignment of a parallel file access protocol and metadata management |
US20140245429A1 (en) * | 2011-07-27 | 2014-08-28 | International Business Machines Corporation | Visually representing and managing access control of resources |
US8825549B2 (en) | 1996-11-12 | 2014-09-02 | Syncada Llc | Transaction processing with core and distributor processor implementations |
US8893110B2 (en) | 2006-06-08 | 2014-11-18 | Qualcomm Incorporated | Device management in a network |
US20140344391A1 (en) * | 2012-12-13 | 2014-11-20 | Level 3 Communications, Llc | Content Delivery Framework having Storage Services |
US8935307B1 (en) | 2000-09-12 | 2015-01-13 | Hewlett-Packard Development Company, L.P. | Independent data access in a segmented file system |
US8949455B2 (en) | 2005-11-21 | 2015-02-03 | Oracle International Corporation | Path-caching mechanism to improve performance of path-related operations in a repository |
US20150046399A1 (en) * | 2012-04-12 | 2015-02-12 | Hitachi, Ltd. | Computer system, data allocation management method, and program |
US20150134703A1 (en) * | 2013-11-13 | 2015-05-14 | Cellco Partnership D/B/A Verizon Wireless | Method and system for unified technological stack management for relational databases |
US9043462B2 (en) | 2012-07-09 | 2015-05-26 | Parentsware, Inc. | Schedule and location responsive agreement compliance controlled information throttle |
US9081839B2 (en) | 2011-01-28 | 2015-07-14 | Oracle International Corporation | Push replication for use with a distributed data grid |
US20150205858A1 (en) * | 2014-01-17 | 2015-07-23 | Facebook, Inc. | Client-Side Search Templates for Online Social Networks |
US9095002B2 (en) | 2010-07-12 | 2015-07-28 | Invensys Systems, Inc. | Methods and apparatus for process control with improved communication links |
US9098455B2 (en) | 2004-06-01 | 2015-08-04 | Inmage Systems, Inc. | Systems and methods of event driven recovery management |
US9098462B1 (en) | 2010-09-14 | 2015-08-04 | The Boeing Company | Communications via shared memory |
US9100246B1 (en) * | 2008-06-19 | 2015-08-04 | Symantec Corporation | Distributed application virtualization |
US9135279B2 (en) | 2007-05-04 | 2015-09-15 | Microsoft Technology Licensing, Llc | Mesh-managing data across a distributed set of devices |
USRE45729E1 (en) * | 2005-12-12 | 2015-10-06 | Electronics And Telecommunications Research Institute | Apparatus and method for managing application context |
US9215279B1 (en) * | 2009-02-17 | 2015-12-15 | Netapp, Inc. | Servicing of storage device software components of nodes of a cluster storage system |
US9244015B2 (en) | 2010-04-20 | 2016-01-26 | Hewlett-Packard Development Company, L.P. | Self-arranging, luminescence-enhancement device for surface-enhanced luminescence |
US9251021B2 (en) | 2011-05-23 | 2016-02-02 | Bradley Gene Calder | Asynchronous replication in a distributed storage environment |
US9274058B2 (en) | 2010-10-20 | 2016-03-01 | Hewlett-Packard Development Company, L.P. | Metallic-nanofinger device for chemical sensing |
US9279767B2 (en) | 2010-10-20 | 2016-03-08 | Hewlett-Packard Development Company, L.P. | Chemical-analysis device integrated with metallic-nanofinger device for chemical sensing |
US9325790B1 (en) | 2009-02-17 | 2016-04-26 | Netapp, Inc. | Servicing of network software components of nodes of a cluster storage system |
US9361243B2 (en) | 1998-07-31 | 2016-06-07 | Kom Networks Inc. | Method and system for providing restricted access to a storage medium |
US9367642B2 (en) | 2005-10-07 | 2016-06-14 | Oracle International Corporation | Flexible storage of XML collections within an object-relational database |
US9378212B2 (en) | 1999-11-04 | 2016-06-28 | Xdrive, Llc | Methods and systems for providing file data and metadata |
US9432454B2 (en) | 2011-08-29 | 2016-08-30 | At&T Intellectual Property I, L.P. | Cloud-to-cloud peering |
US20160328436A1 (en) * | 2015-05-04 | 2016-11-10 | Netapp, Inc. | Cluster scale synchronization of producer consumer file access via multi-protocol nodes |
US9529821B2 (en) | 2012-09-28 | 2016-12-27 | International Business Machines Corporation | Coordinated access to a clustered file system's shared storage using shared-lock architecture |
US20170006317A1 (en) * | 2006-05-24 | 2017-01-05 | Time Warner Cable Enterprises Llc | Secondary content insertion apparatus and methods |
US20170024200A1 (en) * | 2000-12-29 | 2017-01-26 | Vmware, Inc. | Disk block streaming using a broker computer system |
US9558078B2 (en) | 2014-10-28 | 2017-01-31 | Microsoft Technology Licensing, Llc | Point in time database restore from storage snapshots |
US9591489B2 (en) | 2015-07-09 | 2017-03-07 | International Business Machines Corporation | Controlling application access to applications and resources via graphical representation and manipulation |
US20170075630A1 (en) * | 2015-09-10 | 2017-03-16 | Kabushiki Kaisha Toshiba | Memory module, electronic device and method |
US20170083257A1 (en) * | 2015-09-23 | 2017-03-23 | Oracle International Corporation | On-chip Atomic Transaction Engine |
US9628345B2 (en) | 2012-12-13 | 2017-04-18 | Level 3 Communications, Llc | Framework supporting content delivery with collector services network |
US9634918B2 (en) | 2012-12-13 | 2017-04-25 | Level 3 Communications, Llc | Invalidation sequencing in a content delivery framework |
US9654500B2 (en) | 2014-07-30 | 2017-05-16 | Iboss, Inc. | Web redirection for content filtering |
US9678968B1 (en) * | 2010-05-03 | 2017-06-13 | Panzura, Inc. | Deleting a file from a distributed filesystem |
US9727578B2 (en) | 2012-09-28 | 2017-08-08 | International Business Machines Corporation | Coordinated access to a file system's shared storage using dynamic creation of file access layout |
US9773002B2 (en) | 2012-03-30 | 2017-09-26 | Commvault Systems, Inc. | Search filtered file system using secondary storage, including multi-dimensional indexing and searching of archived files |
US9805076B2 (en) | 2010-12-13 | 2017-10-31 | Oracle International Corporation | Extensible RDF databases |
US9842090B2 (en) | 2007-12-05 | 2017-12-12 | Oracle International Corporation | Efficient streaming evaluation of XPaths on binary-encoded XML schema-based documents |
US9854393B2 (en) | 2012-07-09 | 2017-12-26 | Eturi Corp. | Partial information throttle based on compliance with an agreement |
US9880891B2 (en) | 2008-09-30 | 2018-01-30 | Hewlett-Packard Development Company, L.P. | Assignment and failover of resources |
US9887887B2 (en) | 2012-07-09 | 2018-02-06 | Eturi Corp. | Information throttle based on compliance with electronic communication rules |
US9923932B2 (en) | 2004-11-24 | 2018-03-20 | Global Tel*Link Corporation | Electronic messaging exchange |
US9960979B1 (en) * | 2013-03-12 | 2018-05-01 | Western Digital Technologies, Inc. | Data migration service |
US10009412B1 (en) | 2017-02-09 | 2018-06-26 | International Business Machines Corporation | Distributed file transfer with high performance |
US10037542B2 (en) | 2013-11-14 | 2018-07-31 | Wells Fargo Bank, N.A. | Automated teller machine (ATM) interface |
US10079931B2 (en) | 2012-07-09 | 2018-09-18 | Eturi Corp. | Information throttle that enforces policies for workplace use of electronic devices |
US10083307B2 (en) | 2012-12-26 | 2018-09-25 | Barracuda Networks, Inc. | Distributed encryption and access control scheme in a cloud environment |
US10223326B2 (en) * | 2013-07-31 | 2019-03-05 | Oracle International Corporation | Direct access persistent memory shared storage |
US10230844B1 (en) | 2013-11-14 | 2019-03-12 | Wells Fargo Bank, N.A. | Call center interface |
US10242342B1 (en) * | 2013-11-14 | 2019-03-26 | Wells Fargo Bank, N.A. | Vehicle interface |
US10257274B2 (en) * | 2014-09-15 | 2019-04-09 | Foundation for Research and Technology—Hellas (FORTH) | Tiered heterogeneous fast layer shared storage substrate apparatuses, methods, and systems |
US10268402B2 (en) | 2012-03-30 | 2019-04-23 | Commvault Systems, Inc. | Shared network-available storage that permits concurrent data access |
US10282764B2 (en) | 2010-06-15 | 2019-05-07 | Oracle International Corporation | Organizing data in a virtual computing infrastructure |
US10326858B2 (en) | 2017-05-23 | 2019-06-18 | Cdk Global, Llc | System and method for dynamically generating personalized websites |
US10324902B2 (en) * | 2015-09-24 | 2019-06-18 | EMC IP Holding Company LLC | Method and apparatus for locking file in memory |
US10332068B2 (en) | 2016-04-21 | 2019-06-25 | Cdk Global, Llc | Systems and methods for stocking an automobile |
US10346850B2 (en) | 2012-10-22 | 2019-07-09 | International Business Machines Corporation | Case management integration with external content repositories |
US10346422B2 (en) * | 2012-10-18 | 2019-07-09 | International Business Machines Corporation | Use of proxy objects for integration between a content management system and a case management system |
US10362110B1 (en) * | 2016-12-08 | 2019-07-23 | Amazon Technologies, Inc. | Deployment of client data compute kernels in cloud |
US10387270B2 (en) | 2005-04-21 | 2019-08-20 | Justservice.Net Llc | Data backup, storage, transfer and retrieval system, method and computer program product |
US10440063B1 (en) | 2018-07-10 | 2019-10-08 | Eturi Corp. | Media device content review and management |
US10459810B2 (en) | 2017-07-06 | 2019-10-29 | Oracle International Corporation | Technique for higher availability in a multi-node system using replicated lock information to determine a set of data blocks for recovery |
US10476868B2 (en) | 2005-04-21 | 2019-11-12 | Justservice.Net Llc | Data backup and transfer system, method and computer program product |
US10482475B2 (en) | 2011-02-10 | 2019-11-19 | Adp Dealer Services, Inc. | Systems and methods for providing targeted advertising |
US20200004685A1 (en) * | 2019-09-11 | 2020-01-02 | Intel Corporation | Proactive data prefetch with applied quality of service |
US10623462B2 (en) | 2006-05-24 | 2020-04-14 | Time Warner Cable Enterprises Llc | Personal content server apparatus and methods |
US10652087B2 (en) | 2012-12-13 | 2020-05-12 | Level 3 Communications, Llc | Content delivery framework having fill services |
US10701149B2 (en) | 2012-12-13 | 2020-06-30 | Level 3 Communications, Llc | Content delivery framework having origin services |
US10715457B2 (en) | 2010-06-15 | 2020-07-14 | Oracle International Corporation | Coordination of processes in cloud computing environments |
US10719446B2 (en) | 2017-08-31 | 2020-07-21 | Oracle International Corporation | Directly mapped buffer cache on non-volatile memory |
US10754767B2 (en) | 2015-05-19 | 2020-08-25 | Guangzhou Ucweb Computer Technology Co., Ltd. | Method and apparatus for loading a resource in a web page on a device |
US10791050B2 (en) | 2012-12-13 | 2020-09-29 | Level 3 Communications, Llc | Geographic location determination in a content delivery framework |
US10853769B2 (en) | 2016-04-21 | 2020-12-01 | Cdk Global Llc | Scheduling an automobile service appointment in a dealer service bay based on diagnostic trouble codes and service bay attributes |
US10863330B1 (en) * | 2015-12-03 | 2020-12-08 | Eta Vision Inc. | Systems and methods for sensing, recording, analyzing and reporting environmental conditions in data centers and similar facilities |
US10867285B2 (en) | 2016-04-21 | 2020-12-15 | Cdk Global, Llc | Automatic automobile repair service scheduling based on diagnostic trouble codes and service center attributes |
US10891283B2 (en) | 2015-03-20 | 2021-01-12 | D&B Business Information Solutions | System and method for preserving interdependent corporate data consistency in a globally distributed environment |
US10996866B2 (en) | 2015-01-23 | 2021-05-04 | Commvault Systems, Inc. | Scalable auxiliary copy processing in a data storage management system using media agent resources |
US20210149918A1 (en) * | 2019-11-15 | 2021-05-20 | International Business Machines Corporation | Intelligent data pool |
US11076203B2 (en) | 2013-03-12 | 2021-07-27 | Time Warner Cable Enterprises Llc | Methods and apparatus for providing and uploading content to personalized network storage |
US11080734B2 (en) | 2013-03-15 | 2021-08-03 | Cdk Global, Llc | Pricing system for identifying prices for vehicles offered by vehicle dealerships and other entities |
US11080105B1 (en) | 2020-11-18 | 2021-08-03 | Cdk Global, Llc | Systems, methods, and apparatuses for routing API calls |
US11086876B2 (en) | 2017-09-29 | 2021-08-10 | Oracle International Corporation | Storing derived summaries on persistent memory of a storage device |
US11190608B2 (en) | 2018-03-21 | 2021-11-30 | Cdk Global Llc | Systems and methods for an automotive commerce exchange |
US11284544B1 (en) * | 2015-12-03 | 2022-03-22 | Eta Vision Inc. | Systems and methods for sensing, recording, analyzing and reporting environmental conditions in data centers and similar facilities |
US11308035B2 (en) * | 2009-06-30 | 2022-04-19 | Commvault Systems, Inc. | Data object store and server for a cloud storage environment, including data deduplication and data management across multiple cloud storage sites |
US20220138175A1 (en) * | 2020-11-04 | 2022-05-05 | Salesforce.Com, Inc. | Lock wait tracing |
US11340788B2 (en) * | 2009-12-29 | 2022-05-24 | International Business Machines Corporation | Security checks for proxied requests |
US11368548B2 (en) | 2012-12-13 | 2022-06-21 | Level 3 Communications, Llc | Beacon services in a content delivery framework |
US11403849B2 (en) | 2019-09-25 | 2022-08-02 | Charter Communications Operating, Llc | Methods and apparatus for characterization of digital content |
US11501351B2 (en) | 2018-03-21 | 2022-11-15 | Cdk Global, Llc | Servers, systems, and methods for single sign-on of an automotive commerce exchange |
US11514021B2 (en) | 2021-01-22 | 2022-11-29 | Cdk Global, Llc | Systems, methods, and apparatuses for scanning a legacy database |
US11616992B2 (en) | 2010-04-23 | 2023-03-28 | Time Warner Cable Enterprises Llc | Apparatus and methods for dynamic secondary content and data insertion and delivery |
US11652717B2 (en) * | 2019-12-16 | 2023-05-16 | Vmware, Inc. | Simulation-based cross-cloud connectivity checks |
US11669595B2 (en) | 2016-04-21 | 2023-06-06 | Time Warner Cable Enterprises Llc | Methods and apparatus for secondary content management and fraud prevention |
US11695665B2 (en) | 2019-07-09 | 2023-07-04 | Vmware, Inc. | Cross-cloud connectivity checks |
US11741196B2 (en) | 2018-11-15 | 2023-08-29 | The Research Foundation For The State University Of New York | Detecting and preventing exploits of software vulnerability using instruction tags |
US11803535B2 (en) | 2021-05-24 | 2023-10-31 | Cdk Global, Llc | Systems, methods, and apparatuses for simultaneously running parallel databases |
US11983145B2 (en) | 2022-08-31 | 2024-05-14 | Cdk Global, Llc | Method and system of modifying information on file |
Families Citing this family (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7100106B1 (en) * | 1998-12-14 | 2006-08-29 | Microsoft Corporation | Mirroring operations performed on linked files and folders |
US6754696B1 (en) | 1999-03-25 | 2004-06-22 | Micosoft Corporation | Extended file system |
EP1181652B1 (en) * | 1999-03-25 | 2009-07-01 | Microsoft Corporation | Extended file system |
US9081633B2 (en) | 2010-05-24 | 2015-07-14 | Microsoft Technology Licensing, Llc | Remote application connection sharing |
Citations (56)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4096567A (en) * | 1976-08-13 | 1978-06-20 | Millard William H | Information storage facility with multiple level processors |
US4426688A (en) * | 1981-08-03 | 1984-01-17 | Ncr Corporation | Memory system having an alternate memory |
US4710926A (en) * | 1985-12-27 | 1987-12-01 | American Telephone And Telegraph Company, At&T Bell Laboratories | Fault recovery in a distributed processing system |
EP0288636A2 (en) * | 1987-04-24 | 1988-11-02 | Network Systems Corporation | Network communications adapter |
US4868738A (en) * | 1985-08-15 | 1989-09-19 | Lanier Business Products, Inc. | Operating system independent virtual memory computer system |
US4934764A (en) * | 1989-03-31 | 1990-06-19 | Kendall Square Research Corporation | Computer system module assembly |
US5055999A (en) * | 1987-12-22 | 1991-10-08 | Kendall Square Research Corporation | Multiprocessor digital data processing system |
US5077736A (en) * | 1988-06-28 | 1991-12-31 | Storage Technology Corporation | Disk drive memory |
US5117350A (en) * | 1988-12-15 | 1992-05-26 | Flashpoint Computer Corporation | Memory address mechanism in a distributed memory architecture |
US5119481A (en) * | 1987-12-22 | 1992-06-02 | Kendall Square Research Corporation | Register bus multiprocessor system with shift |
GB2257273A (en) * | 1991-06-27 | 1993-01-06 | Digital Equipment Corp | Data storage system with device independent file directories |
US5226039A (en) * | 1987-12-22 | 1993-07-06 | Kendall Square Research Corporation | Packet routing switch |
US5245563A (en) * | 1991-09-20 | 1993-09-14 | Kendall Square Research Corporation | Fast control for round unit |
US5247673A (en) * | 1989-12-04 | 1993-09-21 | Bull Hn Information Systems Italia S.P.A. | Multiprocessor system having distributed shared resources and dynamic global data replication |
US5251308A (en) * | 1987-12-22 | 1993-10-05 | Kendall Square Research Corporation | Shared memory multiprocessor with data hiding and post-store |
US5274789A (en) * | 1990-03-19 | 1993-12-28 | Bull Hn Information Systems Italia S.P.A. | Multiprocessor system having distributed shared resources and dynamic and selective global data replication |
US5282201A (en) * | 1987-12-22 | 1994-01-25 | Kendall Square Research Corporation | Dynamic packet routing network |
US5313647A (en) * | 1991-09-20 | 1994-05-17 | Kendall Square Research Corporation | Digital data processor with improved checkpointing and forking |
US5335325A (en) * | 1987-12-22 | 1994-08-02 | Kendall Square Research Corporation | High-speed packet switching apparatus and method |
US5341483A (en) * | 1987-12-22 | 1994-08-23 | Kendall Square Research Corporation | Dynamic hierarchial associative memory |
US5390316A (en) * | 1990-08-31 | 1995-02-14 | International Business Machines Corporation | Multicomputer complex having a distributed shared memory system for providing a single system view from multiple consoles |
US5390326A (en) * | 1993-04-30 | 1995-02-14 | The Foxboro Company | Local area network with fault detection and recovery |
US5394555A (en) * | 1992-12-23 | 1995-02-28 | Bull Hn Information Systems Inc. | Multi-node cluster computer system incorporating an external coherency unit at each node to insure integrity of information stored in a shared, distributed memory |
US5408649A (en) * | 1993-04-30 | 1995-04-18 | Quotron Systems, Inc. | Distributed data access system including a plurality of database access processors with one-for-N redundancy |
WO1995014279A1 (en) * | 1993-11-15 | 1995-05-26 | Conner Peripherals, Inc. | Network management system having virtual catalog overview of files distributively stored across network domain |
US5423037A (en) * | 1992-03-17 | 1995-06-06 | Teleserve Transaction Technology As | Continuously available database server having multiple groups of nodes, each group maintaining a database copy with fragments stored on multiple nodes |
EP0661651A1 (en) * | 1993-12-29 | 1995-07-05 | Microsoft Corporation | Unification of directory service with file system services |
WO1995022111A1 (en) * | 1994-02-08 | 1995-08-17 | Telefonaktiebolaget Lm Ericsson | Distributed data base system |
US5452447A (en) * | 1992-12-21 | 1995-09-19 | Sun Microsystems, Inc. | Method and apparatus for a caching file server |
WO1995025306A2 (en) * | 1994-03-14 | 1995-09-21 | Stanford University | Distributed shared-cache for multi-processors |
US5490272A (en) * | 1994-01-28 | 1996-02-06 | International Business Machines Corporation | Method and apparatus for creating multithreaded time slices in a multitasking operating system |
US5493728A (en) * | 1993-02-19 | 1996-02-20 | Borland International, Inc. | System and methods for optimized access in a multi-user environment |
US5513314A (en) * | 1995-01-27 | 1996-04-30 | Auspex Systems, Inc. | Fault tolerant NFS server system and mirroring protocol |
US5519855A (en) * | 1994-01-14 | 1996-05-21 | Microsoft Corporation | Summary catalogs |
US5522045A (en) * | 1992-03-27 | 1996-05-28 | Panasonic Technologies, Inc. | Method for updating value in distributed shared virtual memory among interconnected computer nodes having page table with minimal processor involvement |
WO1996023268A1 (en) * | 1995-01-23 | 1996-08-01 | Tandem Computers Incorporated | Reconstructing directory pathnames from file handles in a computer system |
US5551035A (en) * | 1989-06-30 | 1996-08-27 | Lucent Technologies Inc. | Method and apparatus for inter-object communication in an object-oriented program controlled system |
US5560027A (en) * | 1993-12-15 | 1996-09-24 | Convex Computer Corporation | Scalable parallel processing systems wherein each hypernode has plural processing modules interconnected by crossbar and each processing module has SCI circuitry for forming multi-dimensional network with other hypernodes |
US5560029A (en) * | 1991-07-22 | 1996-09-24 | Massachusetts Institute Of Technology | Data processing system with synchronization coprocessor for multiple threads |
WO1996030847A1 (en) * | 1995-03-17 | 1996-10-03 | Tele-Communications, Inc. | Method and apparatus for transaction processing in a distributed database system |
US5588147A (en) * | 1994-01-14 | 1996-12-24 | Microsoft Corporation | Replication facility |
US5613079A (en) * | 1994-04-20 | 1997-03-18 | Microsoft Corporation | System for verifying the proper operation of a replication facility |
US5617537A (en) * | 1993-10-05 | 1997-04-01 | Nippon Telegraph And Telephone Corporation | Message passing system for distributed shared memory multiprocessor system and message passing method using the same |
US5687308A (en) * | 1995-06-07 | 1997-11-11 | Tandem Computers Incorporated | Method to improve tolerance of non-homogeneous power outages |
US5701462A (en) * | 1993-12-29 | 1997-12-23 | Microsoft Corporation | Distributed file system providing a unified name space with efficient name resolution |
US5727150A (en) * | 1995-05-05 | 1998-03-10 | Silicon Graphics, Inc. | Apparatus and method for page migration in a non-uniform memory access (NUMA) system |
US5768510A (en) * | 1996-07-01 | 1998-06-16 | Sun Microsystems, Inc. | Object-oriented system, method and article of manufacture for a client-server application enabler system |
US5778429A (en) * | 1994-07-04 | 1998-07-07 | Hitachi, Ltd. | Parallel processor system including a cache memory subsystem that has independently addressable local and remote data areas |
US5781537A (en) * | 1995-07-07 | 1998-07-14 | International Business Machines Corporation | Setting up, taking down and maintaining connections in a communications network |
US5802578A (en) * | 1996-06-12 | 1998-09-01 | Sequent Computer Systems, Inc. | Multinode computer system with cache for combined tags |
US5805786A (en) * | 1996-07-23 | 1998-09-08 | International Business Machines Corporation | Recovery of a name server managing membership of a domain of processors in a distributed computing environment |
US5805785A (en) * | 1996-02-27 | 1998-09-08 | International Business Machines Corporation | Method for monitoring and recovery of subsystems in a distributed/clustered system |
US5812533A (en) * | 1994-02-28 | 1998-09-22 | British Telecommunications Public Limited Company | Service provision in communications networks |
US5812751A (en) * | 1995-05-19 | 1998-09-22 | Compaq Computer Corporation | Multi-server fault tolerance using in-band signalling |
US5832514A (en) * | 1996-06-26 | 1998-11-03 | Microsoft Corporation | System and method for discovery based data recovery in a store and forward replication process |
US5909540A (en) * | 1996-11-22 | 1999-06-01 | Mangosoft Corporation | System and method for providing highly available data storage using globally addressable memory |
-
1997
- 1997-05-02 US US08/850,364 patent/US5987506A/en not_active Expired - Lifetime
- 1997-11-21 WO PCT/US1997/021460 patent/WO1998022881A1/en active Application Filing
- 1997-11-21 AU AU73032/98A patent/AU7303298A/en not_active Abandoned
Patent Citations (61)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4096567A (en) * | 1976-08-13 | 1978-06-20 | Millard William H | Information storage facility with multiple level processors |
US4426688A (en) * | 1981-08-03 | 1984-01-17 | Ncr Corporation | Memory system having an alternate memory |
US4868738A (en) * | 1985-08-15 | 1989-09-19 | Lanier Business Products, Inc. | Operating system independent virtual memory computer system |
US4710926A (en) * | 1985-12-27 | 1987-12-01 | American Telephone And Telegraph Company, At&T Bell Laboratories | Fault recovery in a distributed processing system |
EP0288636A2 (en) * | 1987-04-24 | 1988-11-02 | Network Systems Corporation | Network communications adapter |
US5055999A (en) * | 1987-12-22 | 1991-10-08 | Kendall Square Research Corporation | Multiprocessor digital data processing system |
US5251308A (en) * | 1987-12-22 | 1993-10-05 | Kendall Square Research Corporation | Shared memory multiprocessor with data hiding and post-store |
US5341483A (en) * | 1987-12-22 | 1994-08-23 | Kendall Square Research Corporation | Dynamic hierarchial associative memory |
US5119481A (en) * | 1987-12-22 | 1992-06-02 | Kendall Square Research Corporation | Register bus multiprocessor system with shift |
US5335325A (en) * | 1987-12-22 | 1994-08-02 | Kendall Square Research Corporation | High-speed packet switching apparatus and method |
US5226039A (en) * | 1987-12-22 | 1993-07-06 | Kendall Square Research Corporation | Packet routing switch |
US5297265A (en) * | 1987-12-22 | 1994-03-22 | Kendall Square Research Corporation | Shared memory multiprocessor system and method of operation thereof |
US5282201A (en) * | 1987-12-22 | 1994-01-25 | Kendall Square Research Corporation | Dynamic packet routing network |
US5077736A (en) * | 1988-06-28 | 1991-12-31 | Storage Technology Corporation | Disk drive memory |
US5117350A (en) * | 1988-12-15 | 1992-05-26 | Flashpoint Computer Corporation | Memory address mechanism in a distributed memory architecture |
US4934764A (en) * | 1989-03-31 | 1990-06-19 | Kendall Square Research Corporation | Computer system module assembly |
US5551035A (en) * | 1989-06-30 | 1996-08-27 | Lucent Technologies Inc. | Method and apparatus for inter-object communication in an object-oriented program controlled system |
US5247673A (en) * | 1989-12-04 | 1993-09-21 | Bull Hn Information Systems Italia S.P.A. | Multiprocessor system having distributed shared resources and dynamic global data replication |
US5274789A (en) * | 1990-03-19 | 1993-12-28 | Bull Hn Information Systems Italia S.P.A. | Multiprocessor system having distributed shared resources and dynamic and selective global data replication |
US5390316A (en) * | 1990-08-31 | 1995-02-14 | International Business Machines Corporation | Multicomputer complex having a distributed shared memory system for providing a single system view from multiple consoles |
GB2257273A (en) * | 1991-06-27 | 1993-01-06 | Digital Equipment Corp | Data storage system with device independent file directories |
US5560029A (en) * | 1991-07-22 | 1996-09-24 | Massachusetts Institute Of Technology | Data processing system with synchronization coprocessor for multiple threads |
US5245563A (en) * | 1991-09-20 | 1993-09-14 | Kendall Square Research Corporation | Fast control for round unit |
US5313647A (en) * | 1991-09-20 | 1994-05-17 | Kendall Square Research Corporation | Digital data processor with improved checkpointing and forking |
US5423037A (en) * | 1992-03-17 | 1995-06-06 | Teleserve Transaction Technology As | Continuously available database server having multiple groups of nodes, each group maintaining a database copy with fragments stored on multiple nodes |
US5592625A (en) * | 1992-03-27 | 1997-01-07 | Panasonic Technologies, Inc. | Apparatus for providing shared virtual memory among interconnected computer nodes with minimal processor involvement |
US5522045A (en) * | 1992-03-27 | 1996-05-28 | Panasonic Technologies, Inc. | Method for updating value in distributed shared virtual memory among interconnected computer nodes having page table with minimal processor involvement |
US5452447A (en) * | 1992-12-21 | 1995-09-19 | Sun Microsystems, Inc. | Method and apparatus for a caching file server |
US5394555A (en) * | 1992-12-23 | 1995-02-28 | Bull Hn Information Systems Inc. | Multi-node cluster computer system incorporating an external coherency unit at each node to insure integrity of information stored in a shared, distributed memory |
US5493728A (en) * | 1993-02-19 | 1996-02-20 | Borland International, Inc. | System and methods for optimized access in a multi-user environment |
US5408649A (en) * | 1993-04-30 | 1995-04-18 | Quotron Systems, Inc. | Distributed data access system including a plurality of database access processors with one-for-N redundancy |
US5390326A (en) * | 1993-04-30 | 1995-02-14 | The Foxboro Company | Local area network with fault detection and recovery |
US5617537A (en) * | 1993-10-05 | 1997-04-01 | Nippon Telegraph And Telephone Corporation | Message passing system for distributed shared memory multiprocessor system and message passing method using the same |
WO1995014279A1 (en) * | 1993-11-15 | 1995-05-26 | Conner Peripherals, Inc. | Network management system having virtual catalog overview of files distributively stored across network domain |
US5560027A (en) * | 1993-12-15 | 1996-09-24 | Convex Computer Corporation | Scalable parallel processing systems wherein each hypernode has plural processing modules interconnected by crossbar and each processing module has SCI circuitry for forming multi-dimensional network with other hypernodes |
US5649194A (en) * | 1993-12-29 | 1997-07-15 | Microsoft Corporation | Unification of directory service with file system services |
EP0661651A1 (en) * | 1993-12-29 | 1995-07-05 | Microsoft Corporation | Unification of directory service with file system services |
US5701462A (en) * | 1993-12-29 | 1997-12-23 | Microsoft Corporation | Distributed file system providing a unified name space with efficient name resolution |
US5689700A (en) * | 1993-12-29 | 1997-11-18 | Microsoft Corporation | Unification of directory service with file system services |
US5675787A (en) * | 1993-12-29 | 1997-10-07 | Microsoft Corporation | Unification of directory service with file system services |
US5519855A (en) * | 1994-01-14 | 1996-05-21 | Microsoft Corporation | Summary catalogs |
US5588147A (en) * | 1994-01-14 | 1996-12-24 | Microsoft Corporation | Replication facility |
US5490272A (en) * | 1994-01-28 | 1996-02-06 | International Business Machines Corporation | Method and apparatus for creating multithreaded time slices in a multitasking operating system |
WO1995022111A1 (en) * | 1994-02-08 | 1995-08-17 | Telefonaktiebolaget Lm Ericsson | Distributed data base system |
US5812533A (en) * | 1994-02-28 | 1998-09-22 | British Telecommunications Public Limited Company | Service provision in communications networks |
WO1995025306A2 (en) * | 1994-03-14 | 1995-09-21 | Stanford University | Distributed shared-cache for multi-processors |
US5613079A (en) * | 1994-04-20 | 1997-03-18 | Microsoft Corporation | System for verifying the proper operation of a replication facility |
US5778429A (en) * | 1994-07-04 | 1998-07-07 | Hitachi, Ltd. | Parallel processor system including a cache memory subsystem that has independently addressable local and remote data areas |
WO1996023268A1 (en) * | 1995-01-23 | 1996-08-01 | Tandem Computers Incorporated | Reconstructing directory pathnames from file handles in a computer system |
US5513314A (en) * | 1995-01-27 | 1996-04-30 | Auspex Systems, Inc. | Fault tolerant NFS server system and mirroring protocol |
WO1996030847A1 (en) * | 1995-03-17 | 1996-10-03 | Tele-Communications, Inc. | Method and apparatus for transaction processing in a distributed database system |
US5727150A (en) * | 1995-05-05 | 1998-03-10 | Silicon Graphics, Inc. | Apparatus and method for page migration in a non-uniform memory access (NUMA) system |
US5812751A (en) * | 1995-05-19 | 1998-09-22 | Compaq Computer Corporation | Multi-server fault tolerance using in-band signalling |
US5687308A (en) * | 1995-06-07 | 1997-11-11 | Tandem Computers Incorporated | Method to improve tolerance of non-homogeneous power outages |
US5781537A (en) * | 1995-07-07 | 1998-07-14 | International Business Machines Corporation | Setting up, taking down and maintaining connections in a communications network |
US5805785A (en) * | 1996-02-27 | 1998-09-08 | International Business Machines Corporation | Method for monitoring and recovery of subsystems in a distributed/clustered system |
US5802578A (en) * | 1996-06-12 | 1998-09-01 | Sequent Computer Systems, Inc. | Multinode computer system with cache for combined tags |
US5832514A (en) * | 1996-06-26 | 1998-11-03 | Microsoft Corporation | System and method for discovery based data recovery in a store and forward replication process |
US5768510A (en) * | 1996-07-01 | 1998-06-16 | Sun Microsystems, Inc. | Object-oriented system, method and article of manufacture for a client-server application enabler system |
US5805786A (en) * | 1996-07-23 | 1998-09-08 | International Business Machines Corporation | Recovery of a name server managing membership of a domain of processors in a distributed computing environment |
US5909540A (en) * | 1996-11-22 | 1999-06-01 | Mangosoft Corporation | System and method for providing highly available data storage using globally addressable memory |
Non-Patent Citations (86)
Title |
---|
"Java Dynamic Class Loader," IBM Technical Disclosure Bulletin, vol. 39, No. 11, Nov. 1996, pp. 107-108. |
"Software Agents," Genesereth et al., Communications of the ACM, Jul. 1994, vol. 37, No. 7, pp. 48-53. |
"Support for Collaborative Design: Agents and Emergence, Edmonds et al.," Communications of the ACM, Jul. 1994, vol. 37, No. 7, pp. 41-47. |
Amaral et al. "A Model for Persistent Shared Memory Addressing in Distributed Systems," Object Orientation in Operating Systems, 1992, IEEE, pp. 2-11. |
Amaral et al. A Model for Persistent Shared Memory Addressing in Distributed Systems, Object Orientation in Operating Systems, 1992, IEEE, pp. 2 11. * |
Anderson et al. "Scheduler Activations: Effective Kernel Support for the User-Level Management of Parallelism," Operating Systems Review (SIGOPS), vol. 25, No. 1, Jan. 1, 1991, pp. 95-109. |
Anderson et al. Scheduler Activations: Effective Kernel Support for the User Level Management of Parallelism, Operating Systems Review ( SIGOPS ), vol. 25, No. 1, Jan. 1, 1991, pp. 95 109. * |
Anderson, T., et al. "Serverless Network File Systems," Operating Systems Review (SIGOPS), vol. 29, No. 5, Dec. 1, 1995, pp. 109-126. |
Anderson, T., et al. Serverless Network File Systems, Operating Systems Review ( SIGOPS ), vol. 29, No. 5, Dec. 1, 1995, pp. 109 126. * |
Barton Davis et al. Adding Scheduler Activations to Mach 3.0, Proceedings of the USENIX Mach III Symposium, Santa Fe, NM, USA, Apr. 19 21, 1993, pp. 119 136. * |
Barton-Davis et al. "Adding Scheduler Activations to Mach 3.0," Proceedings of the USENIX Mach III Symposium, Santa Fe, NM, USA, Apr. 19-21, 1993, pp. 119-136. |
Carter, J., et al. "Network Multicomputing Using Recoverable Distributed Shared Memory," Proceedings of the Spring Computer Society International Conference (COMPCON), San Francisco, Feb. 22-26, 1993, pp. 519-527. |
Carter, J., et al. Network Multicomputing Using Recoverable Distributed Shared Memory, Proceedings of the Spring Computer Society International Conference ( COMPCON ), San Francisco, Feb. 22 26, 1993, pp. 519 527. * |
Carter, J.B. et al., "Optimistic Implementation of Bulk Data Transfer Protocols," In Proceedings of the 1989 Signetrics Conference, pp. 61-69 (May, 1989). |
Carter, J.B. et al., Optimistic Implementation of Bulk Data Transfer Protocols, In Proceedings of the 1989 Signetrics Conference, pp. 61 69 (May, 1989). * |
Carter, J.B. et als., "Distributed Operating Systems Based on a Protected Global Virtual Address Space," In the Proceedings of the Third Workshop on Workstation Operating Systems (WWOS)(May, 1992). |
Carter, J.B. et als., "FLEX: A Tool for Building Efficient and Flexible Systems," In the Proceedings of the Fourth Workshop on Workstation Operating Systems ((WWOS)(Oct., 1993). |
Carter, J.B. et als., "Reducing Consistency Traffic and Cache Misses in the Avalanche Multiprocessor," University of Utah technical report. |
Carter, J.B. et als., "Techniques for Reducing Consistency-Related Communication in Distributed Shared Memory Systems," ACM Transactions on Computer Systems, pp.205-243, vol. 13, No. 3 (Aug., 1995). |
Carter, J.B. et als., Distributed Operating Systems Based on a Protected Global Virtual Address Space, In the Proceedings of the Third Workshop on Workstation Operating Systems (WWOS)(May, 1992). * |
Carter, J.B. et als., FLEX: A Tool for Building Efficient and Flexible Systems, In the Proceedings of the Fourth Workshop on Workstation Operating Systems ((WWOS)(Oct., 1993). * |
Carter, J.B. et als., Reducing Consistency Traffic and Cache Misses in the Avalanche Multiprocessor, University of Utah technical report. * |
Carter, J.B. et als., Techniques for Reducing Consistency Related Communication in Distributed Shared Memory Systems, ACM Transactions on Computer Systems , pp.205 243, vol. 13, No. 3 (Aug., 1995). * |
Carter, John B., "Design of the Munin Distributed Shared memory System," To appear in the special issue of the Journal of Parallel and Distributed Computing on distributed shared memory (1995). |
Carter, John B., Design of the Munin Distributed Shared memory System, To appear in the special issue of the Journal of Parallel and Distributed Computing on distributed shared memory (1995). * |
Dryden, P. "Users throwing cache at networks delays" Computerworld, Oct. 7, 1996, http://ww.computerworld.com/search/AT-html/9610/961007SL41cacheb.html, originally printed on May 22, 1997, reprinted on Nov. 18, 1998. |
Dryden, P. Users throwing cache at networks delays Computerworld , Oct. 7, 1996, http://ww.computerworld.com/search/AT html/9610/961007SL41cacheb.html, originally printed on May 22, 1997, reprinted on Nov. 18, 1998. * |
Enterprise Networking Web Page, http://www.lancache.com/enad1.html, printed on May 20, 1997. * |
European Patent Office, European Search Report, Application No. EP 97 30 9471, mailed on Apr. 23, 1998, 3 pages. * |
Henskens et al. "Course and Fine Grain Objects in a Distributed Persistent Store," Object Orientation in Operating Systems, 1993, IEEE, pp. 116-123. |
Henskens et al. Course and Fine Grain Objects in a Distributed Persistent Store, Object Orientation in Operating Systems, 1993, IEEE, pp. 116 123. * |
Huber, J. et al. "PPFS: A High Performance Portable Parallel File System," Proceedings of the International Conference on Supercomputing, Barcelona, Jul. 3-7, 1995, pp. 385-394. |
Huber, J. et al. PPFS: A High Performance Portable Parallel File System, Proceedings of the International Conference on Supercomputing , Barcelona, Jul. 3 7, 1995, pp. 385 394. * |
Irelenbusch et al. "Towards a Resilient Shared Memory Concept for Distributed Persistent Object Systems," Proceedings of the 28th Annual Hawaii Intl. Conference on System Sciences, 1995, IEEE, pp. 675-684. |
Irelenbusch et al. Towards a Resilient Shared Memory Concept for Distributed Persistent Object Systems, Proceedings of the 28th Annual Hawaii Intl. Conference on System Sciences, 1995, IEEE, pp. 675 684. * |
Java Dynamic Class Loader, IBM Technical Disclosure Bulletin , vol. 39, No. 11, Nov. 1996, pp. 107 108. * |
Koppe C. "Sleeping Threads: A Kernel Mechanism for Support of Efficient User Level Threads," Proceedings of Seventh IASTED-ISMM International Conference on Parallel and Distributed Computing and Systems, Washington, DC, Oct. 19-21, pp. 11-15. |
Koppe C. Sleeping Threads: A Kernel Mechanism for Support of Efficient User Level Threads, Proceedings of Seventh IASTED ISMM International Conference on Parallel and Distributed Computing and Systems, Washington, DC, Oct. 19 21, pp. 11 15. * |
Lea et al. "COOL: System Support for Distributed Programming," Communications of the ACM, vol. 36, No. 9, pp. 37-46. |
Lea et al. COOL: System Support for Distributed Programming, Communications of the ACM , vol. 36, No. 9, pp. 37 46. * |
Lee, E., et al. "Petal: Distributed Virtual Disks," 7th International Conference on Architectural Support for Programming Languages and Operation Systems, Cambridge, MA, Oct. 1-5, 1996, pp. 84-92. |
Lee, E., et al. Petal: Distributed Virtual Disks, 7th International Conference on Architectural Support for Programming Languages and Operation Systems, Cambridge, MA, Oct. 1 5, 1996, pp. 84 92. * |
Li, Kai, "Shared Virtual Memory on Loosely Coupled Multiprocessors," Yale University, Department of Computer Science, (Sep. 1986). |
Li, Kai, Shared Virtual Memory on Loosely Coupled Multiprocessors, Yale University, Department of Computer Science, (Sep. 1986). * |
Measurement Techniques Inc. Web Page, http://www.lancache.com/pr1 4.html, printed on May 20, 1997. * |
Measurement Techniques Inc. Web Page, http://www.lancache.com/pr1-- 4.html, printed on May 20, 1997. |
Measurement Techniques Inc. Web Page, http://www.lancache.com/slc.html, printed on May 20, 1997. * |
Neal, D. "The Harvest Object Cache in New Zealand," Computer Networks and ISDN Systems, vol. 11, No. 28, May 1996, pp. 1415-1430. |
Neal, D. The Harvest Object Cache in New Zealand, Computer Networks and ISDN Systems , vol. 11, No. 28, May 1996, pp. 1415 1430. * |
Network Appliance, Inc. Web Page, http://www.netapp.com/news/level3b/news rel 970421.html, printed on May 22, 1997. * |
Network Appliance, Inc. Web Page, http://www.netapp.com/news/level3b/news-- rel-- 970421.html, printed on May 22, 1997. |
Network Appliance, Inc. Web Page, http://www.netapp.com/products/level3/netcache datasheet.html, printed on May 22, 1997. * |
Network Appliance, Inc. Web Page, http://www.netapp.com/products/level3/nfs.html, printed on May 22, 1997. * |
Network Appliance, Inc. Web Page, http://www.netapp.com/products/level3/ontap.html, printed on May 22, 1997. * |
Network Appliance, Inc. Web Page, http://www.netapp.com/products/level3/webfiler.html, printed on May 22, 1997. * |
Network Appliance, Inc. Web Page, http://www.netapp.com/products/level3/windows.html, printed on May 22, 1997. * |
Ng, T. "The Design and Implementation of a Reliable Distributed Operating System--ROSE," Proceedings of the Symposium on Reliable Distributed Systems, Huntsville, Oct. 9-11, 1990, pp. 2-11. |
Ng, T. The Design and Implementation of a Reliable Distributed Operating System ROSE, Proceedings of the Symposium on Reliable Distributed Systems, Huntsville, Oct. 9 11, 1990, pp. 2 11. * |
Patent Cooperation Treaty, International Search Report, International Application No. PCT/US 97/21458, mailed on Apr. 23, 1998, 3 pages. * |
Patent Cooperation Treaty, International Search Report, International Application No. PCT/US 97/21459, mailed on Apr. 23, 1998, 4 pages. * |
Patent Cooperation Treaty, International Search Report, International Application No. PCT/US 97/21460, mailed on Apr. 23, 1998, 5 pages. * |
Patent Cooperation Treaty, International Search Report, International Application No. PCT/US 97/21466, mailed on Apr. 23, 1998, 3 pages. * |
Patent Cooperation Treaty, International Search Report, International Application No. PCT/US 97/21733, mailed on Apr. 23, 1998, 3 pages. * |
Patent Cooperation Treaty, International Search Report, International Application No. PCT/US 97/21734, mailed on Apr. 23, 1998, 4 pages. * |
Patent Cooperation Treaty, International Search Report, International Application No. PCT/US97/21457, mailed on Apr. 23, 1998, 4 pages. * |
Peak Technologies, Inc. Web Page, http://www.peak media.com/PeakJet/quick.html, printed on May 20, 1997. * |
Peak Technologies, Inc. Web Page, http://www.peakJet/PeakJet.html, printed on May 20, 1997. * |
Peak Technologies, Inc. Web Page, http://www.peak-media.com/PeakJet/quick.html, printed on May 20, 1997. |
Raghavan, G. "A Domain Model of WWW Browsers," Proceedings of Southeastcon, Bringing Together Education, Science and Technology, Tampa, Apr. 11-14, 1996, pp. 436-439. |
Raghavan, G. A Domain Model of WWW Browsers, Proceedings of Southeastcon, Bringing Together Education, Science and Technology , Tampa, Apr. 11 14, 1996, pp. 436 439. * |
Relay Web Page, http.//www.relay.com/product/otg.html, printed on May 22, 1997. * |
Relay Web Page, http://www.relay.com/product/gold.html, printed on May 22, 1997. * |
Sequel Technology Web Page, http://www.sequeltech.com/product/netPIM/prodinfo.html, printed on May 22, 1997. * |
Software Agents, Genesereth et al., Communications of the ACM, Jul. 1994, vol. 37, No. 7, pp. 48 53. * |
Stac Inc. Web Page, http://www.stac.com/replica/pr legatoagreement.html, printed on May 22, 1997. * |
Stac Inc. Web Page, http://www.stac.com/replica/pr-legatoagreement.html, printed on May 22, 1997. |
Support for Collaborative Design: Agents and Emergence, Edmonds et al., Communications of the ACM, Jul. 1994, vol. 37, No. 7, pp. 41 47. * |
Tricord Systems, Inc. Web Page, http://www.tricord.com/2/10/10 3 96.html, printed on May 22, 1997. * |
Tricord Systems, Inc. Web Page, http://www.tricord.com/2/10/10-3-96.html, printed on May 22, 1997. |
WebGlimpse search site http://library.med.nyu.edu/library/webglimpse.html, Oct. 1998. * |
Wilson, Andrew W., "Hierachical Cache/Bus Architecture for Shared Memory Multiprocessors," ACM, pp. 244-252 (1987). |
Wilson, Andrew W., "Organization and Statistical Simulation of Hierarchical Multiprocessors," UMI Dissertation Information Service (1985). |
Wilson, Andrew W., Hierachical Cache/Bus Architecture for Shared Memory Multiprocessors, ACM , pp. 244 252 (1987). * |
Wilson, Andrew W., Organization and Statistical Simulation of Hierarchical Multiprocessors, UMI Dissertation Information Service (1985). * |
Yeung, D., et al. "MGS" A Multigrain Shared Memory System, Computer Architecture News, vol. 24, No. 2, May 1, 1996, pp. 44-55. |
Yeung, D., et al. MGS A Multigrain Shared Memory System, Computer Architecture News , vol. 24, No. 2, May 1, 1996, pp. 44 55. * |
Cited By (1085)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6708171B1 (en) | 1996-04-23 | 2004-03-16 | Sun Microsystems, Inc. | Network proxy |
US6832223B1 (en) | 1996-04-23 | 2004-12-14 | Sun Microsystems, Inc. | Method and system for facilitating access to a lookup service |
US6654793B1 (en) | 1996-04-23 | 2003-11-25 | Sun Microsystems, Inc. | System and method for facilitating dynamic loading of stub information to enable a program operating in one address space to invoke processing of a remote method or procedure in another address space |
US7680879B2 (en) | 1996-07-18 | 2010-03-16 | Computer Associates Think, Inc. | Method and apparatus for maintaining data integrity across distributed computer systems |
US8291324B2 (en) | 1996-07-18 | 2012-10-16 | Ca, Inc. | Network management system using virtual reality techniques to display and simulate navigation to network components |
US6760736B2 (en) | 1996-10-11 | 2004-07-06 | Sun Microsystems, Inc. | Methods and systems for distributed failure detection and recovery using leasing techniques |
US6816875B2 (en) | 1996-10-11 | 2004-11-09 | Sun Microsystems Inc | Methods, apparatus, and product for distributed garbage collection |
US6519615B1 (en) | 1996-10-11 | 2003-02-11 | Sun Microsystems, Inc. | Method and system for leasing storage |
US6704756B2 (en) | 1996-10-11 | 2004-03-09 | Sun Microsystems, Inc. | Methods, apparatus, and product for distributed garbage collection |
US6728737B2 (en) | 1996-10-11 | 2004-04-27 | Sun Microsystems, Inc. | Method and system for leasing storage |
US6564240B2 (en) | 1996-10-11 | 2003-05-13 | Sun Microsystems, Inc. | Method, apparatus, and product for leasing of group membership in a distributed system |
US8392285B2 (en) | 1996-11-12 | 2013-03-05 | Syncada Llc | Multi-supplier transaction and payment programmed processing approach with at least one supplier |
US8825549B2 (en) | 1996-11-12 | 2014-09-02 | Syncada Llc | Transaction processing with core and distributor processor implementations |
US8595099B2 (en) | 1996-11-12 | 2013-11-26 | Syncada Llc | Financial institution-based transaction processing system and approach |
US8589268B2 (en) | 1996-11-12 | 2013-11-19 | Syncada Llc | Financial institution-based transaction processing system and approach |
US20060129627A1 (en) * | 1996-11-22 | 2006-06-15 | Mangosoft Corp. | Internet-based shared file service with native PC client access and semantics and distributed version control |
US7058696B1 (en) * | 1996-11-22 | 2006-06-06 | Mangosoft Corporation | Internet-based shared file service with native PC client access and semantics |
US7136903B1 (en) * | 1996-11-22 | 2006-11-14 | Mangosoft Intellectual Property, Inc. | Internet-based shared file service with native PC client access and semantics and distributed access control |
US7366793B2 (en) * | 1997-06-18 | 2008-04-29 | Akamai Technologies, Inc. | System and method for server-side optimization of data delivery on a distributed computer network |
US20050063401A1 (en) * | 1997-06-18 | 2005-03-24 | Brian Kenner | System and method for server-side optimization of data delivery on a distributed computer network |
US6343346B1 (en) * | 1997-07-10 | 2002-01-29 | International Business Machines Corporation | Cache coherent network adapter for scalable shared memory processing systems |
US20060031423A1 (en) * | 1997-07-21 | 2006-02-09 | Helius, Inc. | Method and system for asymmetric satellite communications for local area networks |
US6446119B1 (en) * | 1997-08-07 | 2002-09-03 | Laslo Olah | System and method for monitoring computer usage |
US6295584B1 (en) * | 1997-08-29 | 2001-09-25 | International Business Machines Corporation | Multiprocessor computer system with memory map translation |
US7447712B2 (en) * | 1997-09-28 | 2008-11-04 | Global 360, Inc. | Structured workfolder |
US20020032801A1 (en) * | 1997-10-03 | 2002-03-14 | Myron Mosbarger | Method and system for asymmetric satellite communications for local area networks |
US6947974B2 (en) * | 1997-10-03 | 2005-09-20 | Helius, Inc | Method and system for asymmetric satellite communications for local are networks wherein the server being programmed to route the downloaded data to client computers irrespective of the client computer's operating systems |
US6064656A (en) * | 1997-10-31 | 2000-05-16 | Sun Microsystems, Inc. | Distributed system and method for controlling access control to network resources |
US7536554B2 (en) | 1997-11-13 | 2009-05-19 | Haff Maurice W | Third party authentication of files in digital systems |
US8046825B2 (en) * | 1997-11-13 | 2011-10-25 | Intellectual Ventures I Llc | Selective acceptance of electronic messages in communication systems |
US7263528B2 (en) * | 1997-11-13 | 2007-08-28 | Hyperspace Communications, Inc. | File transfer system |
US8522313B2 (en) | 1997-11-13 | 2013-08-27 | Intellectual Ventures I Llc | Method and apparatus for data file transfer using destination linked directories |
US8185736B2 (en) | 1997-11-13 | 2012-05-22 | Intellectual Ventures I Llc | File transfer system for direct transfer between computers |
US8677460B2 (en) * | 1997-11-13 | 2014-03-18 | Intellectual Ventures I Llc | File transfer system |
US7810144B2 (en) | 1997-11-13 | 2010-10-05 | Haff Maurice W | File transfer system for direct transfer between computers |
US20020184224A1 (en) * | 1997-11-13 | 2002-12-05 | Hyperspace Communications, Inc. | File transfer system |
US20100299728A1 (en) * | 1997-11-13 | 2010-11-25 | Haff Maurice W | File transfer system for direct transfer between computers |
US20040049515A1 (en) * | 1997-11-13 | 2004-03-11 | Hyperspace Communications, Inc. | Third party authentication of files in digital systems |
US9912516B2 (en) | 1997-11-13 | 2018-03-06 | Intellectual Ventures I Llc | Method and apparatus for data file transfer using destination linked directories |
US20130073597A1 (en) * | 1997-11-13 | 2013-03-21 | Intellectual Ventures I Llc | File transfer system |
US20100281164A1 (en) * | 1997-11-13 | 2010-11-04 | Haff Maurice W | Selective acceptance of electronic messages in communication systems |
US6578044B1 (en) | 1997-11-17 | 2003-06-10 | Sun Microsystems, Inc. | Method and system for typesafe attribute matching |
US6567820B1 (en) | 1997-11-17 | 2003-05-20 | Sun Microsystems, Inc. | Method and system for in-place modifications in a database |
US6480863B1 (en) | 1997-11-17 | 2002-11-12 | Sun Microsystems, Inc. | Method and system for multi-entry and multi-template matching in a database |
US6460071B1 (en) * | 1997-11-21 | 2002-10-01 | International Business Machines Corporation | System and method for managing client application state in a stateless web browser environment |
US6047001A (en) * | 1997-12-18 | 2000-04-04 | Advanced Micro Devices, Inc. | Apparatus and method in a network interface device for storing a data frame and corresponding tracking information in a buffer memory |
US6377979B1 (en) * | 1997-12-25 | 2002-04-23 | Kabushiki Kaisha Kobe Seiko Sho | Multiple-processor system and method for transferring data and/or a program stored in one processor to another processor in order to process the data or to execute the program therein |
US6385693B1 (en) * | 1997-12-31 | 2002-05-07 | At&T Corp. | Network server platform/facilities management platform caching server |
US6868060B2 (en) | 1997-12-31 | 2005-03-15 | At&T Corp. | Circuit to provide backup telephone service for a multiple service access system using a twisted pair |
US6438659B1 (en) * | 1997-12-31 | 2002-08-20 | Unisys Corporation | Directory based cache coherency system supporting multiple instruction processor and input/output caches |
US20020027927A1 (en) * | 1997-12-31 | 2002-03-07 | Farhad Barzegar | Circuit to provide backup telephone service for a multiple service access system using a twisted pair |
US7010532B1 (en) * | 1997-12-31 | 2006-03-07 | International Business Machines Corporation | Low overhead methods and apparatus for shared access storage devices |
US7299232B2 (en) * | 1997-12-31 | 2007-11-20 | International Business Machines Corporation | Low overhead methods and apparatus shared access storage devices |
US6922688B1 (en) * | 1998-01-23 | 2005-07-26 | Adaptec, Inc. | Computer system storage |
US6338138B1 (en) * | 1998-01-27 | 2002-01-08 | Sun Microsystems, Inc. | Network-based authentication of computer user |
US20050203835A1 (en) * | 1998-01-30 | 2005-09-15 | Eli Nhaissi | Internet billing |
US20110191410A1 (en) * | 1998-01-30 | 2011-08-04 | Net-Express, Ltd. | WWW Addressing |
US8661094B2 (en) | 1998-01-30 | 2014-02-25 | Net-Express Ltd. | WWW addressing |
US8464159B2 (en) | 1998-01-30 | 2013-06-11 | Net-Express, Ltd. | Personalized internet interaction |
US20100050078A1 (en) * | 1998-01-30 | 2010-02-25 | Net-Express, Ltd. | Personalized internet interaction |
US7596609B1 (en) | 1998-01-30 | 2009-09-29 | Net-Express, Ltd. | WWW addressing |
US7631032B1 (en) | 1998-01-30 | 2009-12-08 | Net-Express, Ltd. | Personalized internet interaction by adapting a page format to a user record |
US6560656B1 (en) | 1998-02-26 | 2003-05-06 | Sun Microsystems, Inc. | Apparatus and method for providing downloadable code for use in communicating with a device in a distributed system |
US6389540B1 (en) | 1998-02-26 | 2002-05-14 | Sun Microsystems, Inc. | Stack based access control using code and executor identifiers |
US6487607B1 (en) | 1998-02-26 | 2002-11-26 | Sun Microsystems, Inc. | Methods and apparatus for remote method invocation |
US6446070B1 (en) | 1998-02-26 | 2002-09-03 | Sun Microsystems, Inc. | Method and apparatus for dynamic distributed computing over a network |
US6438614B2 (en) | 1998-02-26 | 2002-08-20 | Sun Microsystems, Inc. | Polymorphic token based control |
US6629154B1 (en) | 1998-02-26 | 2003-09-30 | Sun Microsystems, Inc. | Method and system for deterministic hashes to identify remote methods |
US6463446B1 (en) | 1998-02-26 | 2002-10-08 | Sun Microsystems, Inc. | Method and apparatus for transporting behavior in an event-based distributed system |
US7734747B2 (en) | 1998-02-26 | 2010-06-08 | Oracle America, Inc. | Dynamic lookup service in a distributed system |
US8713089B2 (en) | 1998-02-26 | 2014-04-29 | Oracle America, Inc. | Dynamic lookup service in a distributed system |
US6393497B1 (en) | 1998-03-20 | 2002-05-21 | Sun Microsystems, Inc. | Downloadable smart proxies for performing processing associated with a remote procedure call in a distributed system |
US6237024B1 (en) * | 1998-03-20 | 2001-05-22 | Sun Microsystem, Inc. | Method and apparatus for the suspension and continuation of remote processes |
US6604127B2 (en) | 1998-03-20 | 2003-08-05 | Brian T. Murphy | Dynamic lookup service in distributed system |
US9183066B2 (en) | 1998-03-20 | 2015-11-10 | Oracle America Inc. | Downloadable smart proxies for performing processing associated with a remote procedure call in a distributed system |
US6598094B1 (en) | 1998-03-20 | 2003-07-22 | Sun Microsystems, Inc. | Method and apparatus for determining status of remote objects in a distributed system |
US6421704B1 (en) | 1998-03-20 | 2002-07-16 | Sun Microsystems, Inc. | Method, apparatus, and product for leasing of group membership in a distributed system |
US6466947B2 (en) | 1998-03-20 | 2002-10-15 | Sun Microsystems, Inc. | Apparatus and method for dynamically verifying information in a distributed system |
US6510456B1 (en) * | 1998-03-25 | 2003-01-21 | Hitachi, Ltd. | Data transfer control method and system, data transfer control program file, and file storage medium |
US6298419B1 (en) * | 1998-03-26 | 2001-10-02 | Compaq Computer Corporation | Protocol for software distributed shared memory with memory scaling |
US6298428B1 (en) * | 1998-03-30 | 2001-10-02 | International Business Machines Corporation | Method and apparatus for shared persistent virtual storage on existing operating systems |
US6330709B1 (en) * | 1998-03-30 | 2001-12-11 | International Business Machines Corporation | Virtual machine implementation for shared persistent objects |
US7185011B1 (en) | 1998-04-10 | 2007-02-27 | Microsoft Corporation | Method and system for directory balancing |
US6173413B1 (en) * | 1998-05-12 | 2001-01-09 | Sun Microsystems, Inc. | Mechanism for maintaining constant permissions for multiple instances of a device within a cluster |
US6226667B1 (en) | 1998-05-26 | 2001-05-01 | International Business Machines Corporation | Method and apparatus for preloading data in a distributed data processing system |
US6163856A (en) * | 1998-05-29 | 2000-12-19 | Sun Microsystems, Inc. | Method and apparatus for file system disaster recovery |
US6542926B2 (en) * | 1998-06-10 | 2003-04-01 | Compaq Information Technologies Group, L.P. | Software partitioned multi-processor system with flexible resource sharing levels |
US6212612B1 (en) * | 1998-07-15 | 2001-04-03 | Intelect Communications Inc. | System and method for synchronized, multi-channel data management with dynamically configurable routing |
US9361243B2 (en) | 1998-07-31 | 2016-06-07 | Kom Networks Inc. | Method and system for providing restricted access to a storage medium |
US6405224B1 (en) | 1998-09-01 | 2002-06-11 | Aidministrator Nederland B.V. | Method and apparatus for HTML control |
US6289362B1 (en) * | 1998-09-01 | 2001-09-11 | Aidministrator Nederland B.V. | System and method for generating, transferring and using an annotated universal address |
US6415316B1 (en) * | 1998-09-01 | 2002-07-02 | Aidministrator Nederland B.V. | Method and apparatus for implementing a web page diary |
US6295639B1 (en) | 1998-09-01 | 2001-09-25 | Aidministrator Nederland B.V. | Securely accessing a file system of a remote server computer |
US6457053B1 (en) * | 1998-09-21 | 2002-09-24 | Microsoft Corporation | Multi-master unique identifier allocation |
LT4797B (en) | 1998-09-24 | 2001-05-25 | Mirror Image Internet Inc | An internet caching system and a method and an arrangement in such a sysytem |
WO2001006393A1 (en) * | 1998-10-08 | 2001-01-25 | Easynet Access Inc. | User interface method |
US7162528B1 (en) * | 1998-11-23 | 2007-01-09 | The United States Of America As Represented By The Secretary Of The Navy | Collaborative environment implemented on a distributed computer network and software therefor |
US7577690B2 (en) * | 1998-11-24 | 2009-08-18 | Oracle International Corporation | Managing checkpoint queues in a multiple node system |
US20060195648A1 (en) * | 1998-11-24 | 2006-08-31 | Oracle International Corporation | Managing checkpoint queues in a multiple node system |
US6397270B1 (en) * | 1999-01-05 | 2002-05-28 | Agere Systems Guardian Corp. | System for indirect communication between two computers, each having write access to its own portion of a dual-access disk drive and read access to the entire drive |
US6330571B1 (en) * | 1999-01-15 | 2001-12-11 | International Business Machines Corporation | Method and computer program product for implementing datalink path protection |
US7366708B2 (en) | 1999-02-18 | 2008-04-29 | Oracle Corporation | Mechanism to efficiently index structured data that provides hierarchical access in a relational database system |
US20030033285A1 (en) * | 1999-02-18 | 2003-02-13 | Neema Jalali | Mechanism to efficiently index structured data that provides hierarchical access in a relational database system |
US8396811B1 (en) | 1999-02-26 | 2013-03-12 | Syncada Llc | Validation approach for auditing a vendor-based transaction |
US6725392B1 (en) | 1999-03-03 | 2004-04-20 | Adaptec, Inc. | Controller fault recovery system for a distributed file system |
US6467011B2 (en) * | 1999-03-19 | 2002-10-15 | Times N Systems, Inc. | Shared memory apparatus and method for multiprocessor systems |
US7127472B1 (en) * | 1999-04-27 | 2006-10-24 | Canon Kabushiki Kaisha | Data processing method and data processing device |
US6654772B1 (en) * | 1999-04-28 | 2003-11-25 | Emc Corporation | Multi-volume extent based file system |
US6895418B1 (en) * | 1999-04-28 | 2005-05-17 | Emc Corporation | Versatile indirection in an extent based file system |
US6845489B1 (en) * | 1999-04-30 | 2005-01-18 | Matsushita Electric Industrial Co., Ltd. | Database for design of integrated circuit device and method for designing integrated circuit device |
US6510541B1 (en) * | 1999-04-30 | 2003-01-21 | Matsushita Electric Industrial Co., Ltd. | Database having a hierarchical structure utilized for designing system-on-chip integrated circuit devices and a method of designing the same |
WO2000067416A2 (en) * | 1999-05-05 | 2000-11-09 | Contact Networks, Inc. | Method and system for storing and updating personal information over the network |
WO2000067416A3 (en) * | 1999-05-05 | 2001-03-01 | Contact Networks Inc | Method and system for storing and updating personal information over the network |
US6222529B1 (en) | 1999-05-05 | 2001-04-24 | Shareware, Inc. | Method and apparatus for providing multiple sessions on a single user operating system |
US8056056B2 (en) | 1999-05-17 | 2011-11-08 | Invensys Systems, Inc. | Methods and apparatus for configuring a process control system with a configuration editor executing on a digital data processing device |
US8368640B2 (en) | 1999-05-17 | 2013-02-05 | Invensys Systems, Inc. | Process control configuration system with connection validation and configuration |
US8229579B2 (en) | 1999-05-17 | 2012-07-24 | Invensys Systems, Inc. | Control systems and methods with versioning |
US8225271B2 (en) | 1999-05-17 | 2012-07-17 | Invensys Systems, Inc. | Apparatus for control systems with objects that are associated with live data |
US8028272B2 (en) | 1999-05-17 | 2011-09-27 | Invensys Systems, Inc. | Control system configurator and methods with edit selection |
US8060862B2 (en) | 1999-05-17 | 2011-11-15 | Invensys Systems, Inc. | Apparatus and method for configuring a process control system having one or more digital data processors |
US20060010150A1 (en) * | 1999-05-18 | 2006-01-12 | Kom, Inc. | Method and System for Electronic File Lifecycle Management |
US8782009B2 (en) | 1999-05-18 | 2014-07-15 | Kom Networks Inc. | Method and system for electronic file lifecycle management |
US20080177890A1 (en) * | 1999-05-24 | 2008-07-24 | Krause Michael R | Reliable datagram via independent source destination resources |
US7904576B2 (en) | 1999-05-24 | 2011-03-08 | Hewlett-Packard Development Company, L.P. | Reliable datagram via independent source destination resources |
US20020133620A1 (en) * | 1999-05-24 | 2002-09-19 | Krause Michael R. | Access control in a network system |
US7016971B1 (en) | 1999-05-24 | 2006-03-21 | Hewlett-Packard Company | Congestion management in a distributed computer system multiplying current variable injection rate with a constant to set new variable injection rate at source node |
US7318102B1 (en) | 1999-05-24 | 2008-01-08 | Hewlett-Packard Development Company, L.P. | Reliable datagram |
WO2000072142A1 (en) * | 1999-05-24 | 2000-11-30 | Hewlett-Packard Company | Partitioning in distributed computer system |
US7346699B1 (en) | 1999-05-24 | 2008-03-18 | Hewlett-Packard Development Company, L.P. | Reliable multicast |
US8090452B2 (en) | 1999-06-11 | 2012-01-03 | Invensys Systems, Inc. | Methods and apparatus for control using control devices that provide a virtual machine environment and that communicate via an IP network |
US20040019898A1 (en) * | 1999-06-14 | 2004-01-29 | International Business Machines Corporation | Accessing local objects using local access proxies |
US6553409B1 (en) * | 1999-07-09 | 2003-04-22 | Microsoft Corporation | Background cache synchronization |
US7634453B1 (en) * | 1999-08-13 | 2009-12-15 | Storage Technology Corporation | Distributed file data location |
US6523066B1 (en) * | 1999-08-23 | 2003-02-18 | Harris-Exigent, Inc. | Dynamic distributed memory locking in a computer network |
US6745233B1 (en) * | 1999-09-28 | 2004-06-01 | Fujitsu Limited | Data transfer technique for distributed memory type parallel computer |
US6553466B1 (en) | 1999-10-01 | 2003-04-22 | Infraworks Corporation | Shared memory blocking method and system |
WO2001025930A1 (en) * | 1999-10-01 | 2001-04-12 | Infraworks Corporation | Shared memory blocking method and system |
US8028115B2 (en) * | 1999-10-14 | 2011-09-27 | Bluearc Uk Limited | File system adapter for hardware implementation or acceleration of file system functions |
USRE42051E1 (en) | 1999-10-14 | 2011-01-18 | Tripp Gary W | Peer-to-peer automated anonymous asynchronous file sharing |
US20090292850A1 (en) * | 1999-10-14 | 2009-11-26 | Bluearc Uk Limited | File System Adapter for Hardware Implementation or Acceleration of File System Functions |
US8180897B2 (en) | 1999-10-14 | 2012-05-15 | Bluearc Uk Limited | Apparatus and method for hardware implementation or acceleration of operating system functions |
US6675205B2 (en) * | 1999-10-14 | 2004-01-06 | Arcessa, Inc. | Peer-to-peer automated anonymous asynchronous file sharing |
US6571277B1 (en) * | 1999-10-19 | 2003-05-27 | International Business Machines Corporation | Method and apparatus for scaling universal plug and play networks using atomic proxy replication |
WO2001033829A2 (en) * | 1999-11-01 | 2001-05-10 | Mangosoft Corporation | Internet-based shared file service and distributed access control |
WO2001033829A3 (en) * | 1999-11-01 | 2002-03-28 | Mangosoft Corp | Internet-based shared file service and distributed access control |
US20050193132A1 (en) * | 1999-11-04 | 2005-09-01 | O'brien Brett | Shared internet storage resource, user interface system, and method |
US20070073840A1 (en) * | 1999-11-04 | 2007-03-29 | O'brien Brett | Network personal digital video recorder system (NPDVR) |
US7337207B2 (en) * | 1999-11-04 | 2008-02-26 | Xdrive, Llc | Shared internet storage resource, user interface system, and method |
US6351776B1 (en) * | 1999-11-04 | 2002-02-26 | Xdrive, Inc. | Shared internet storage resource, user interface system, and method |
US9378212B2 (en) | 1999-11-04 | 2016-06-28 | Xdrive, Llc | Methods and systems for providing file data and metadata |
US7496578B2 (en) | 1999-11-04 | 2009-02-24 | Aol Llc | Shared internet storage resource, user interface system, and method |
US20050204063A1 (en) * | 1999-11-04 | 2005-09-15 | O'brien Brett | Shared internet storage resource, user interface system, and method |
US7171472B2 (en) | 1999-11-04 | 2007-01-30 | Xdrive, Llc | Shared internet storage resource, user interface system, and method |
US10397224B2 (en) | 1999-11-04 | 2019-08-27 | Oath Inc. | Network personal digital video recorder system (NPDVR) |
US9369770B2 (en) * | 1999-11-04 | 2016-06-14 | Xdrive, Llc | Network personal digital video recorder system (NPDVR) |
US20050171956A1 (en) * | 1999-11-04 | 2005-08-04 | O'brien Brett | Shared internet storage resource, user interface system, and method |
US20050204020A1 (en) * | 1999-11-04 | 2005-09-15 | O'brien Brett | Shared internet storage resource, user interface system, and method |
US6985927B2 (en) | 1999-11-04 | 2006-01-10 | Xdrive, Llc. | Shared internet storage resource, user interface system, and method |
US6598131B2 (en) * | 1999-11-08 | 2003-07-22 | Ondotek, Inc. | Data image management via emulation of non-volatile storage device |
US7487154B2 (en) * | 1999-11-29 | 2009-02-03 | Actuate Corporation | Method and apparatus for generating page-level security in a computer generated report |
US20050203819A1 (en) * | 1999-11-29 | 2005-09-15 | Actuate Corporation | Method and apparatus for generating page-level security in a computer generated report |
USRE43375E1 (en) | 1999-11-30 | 2012-05-08 | Reware Asset Group, L.L.C. | System and method for communications in a distributed computing environment |
US6961772B1 (en) * | 1999-11-30 | 2005-11-01 | Recursion Software, Inc. | Transparent connection type binding by address range |
USRE41706E1 (en) | 1999-11-30 | 2010-09-14 | Glass Graham W | Moving objects in a distributed computing environment |
US6938169B1 (en) * | 1999-12-10 | 2005-08-30 | Sun Microsystems, Inc. | Channel-specific file system views in a private network using a public-network infrastructure |
US6798782B1 (en) | 1999-12-10 | 2004-09-28 | Sun Microsystems, Inc. | Truly anonymous communications using supernets, with the provision of topology hiding |
US6870842B1 (en) | 1999-12-10 | 2005-03-22 | Sun Microsystems, Inc. | Using multicasting to provide ethernet-like communication behavior to selected peers on a network |
US20060077977A1 (en) * | 1999-12-10 | 2006-04-13 | Sun Microsystems, Inc. | System and method for separating addresses from the delivery scheme in a virtual private network |
US7685309B2 (en) | 1999-12-10 | 2010-03-23 | Sun Microsystems, Inc. | System and method for separating addresses from the delivery scheme in a virtual private network |
US7765581B1 (en) | 1999-12-10 | 2010-07-27 | Oracle America, Inc. | System and method for enabling scalable security in a virtual private network |
US6977929B1 (en) | 1999-12-10 | 2005-12-20 | Sun Microsystems, Inc. | Method and system for facilitating relocation of devices on a network |
US7336790B1 (en) | 1999-12-10 | 2008-02-26 | Sun Microsystems Inc. | Decoupling access control from key management in a network |
US6970941B1 (en) | 1999-12-10 | 2005-11-29 | Sun Microsystems, Inc. | System and method for separating addresses from the delivery scheme in a virtual private network |
US20020073209A1 (en) * | 1999-12-13 | 2002-06-13 | Nienhuis Ronald J. | Method for redirecting a network communication |
US6742034B1 (en) | 1999-12-16 | 2004-05-25 | Dell Products L.P. | Method for storage device masking in a storage area network and storage controller and storage subsystem for using such a method |
US6594661B1 (en) * | 1999-12-27 | 2003-07-15 | International Business Machines Corporation | Method and system for controlling access to a source application |
US6490592B1 (en) * | 1999-12-30 | 2002-12-03 | Nortel Networks Limited | Method of and apparatus for generating a tree data structure supporting longest match lookup |
US6718372B1 (en) * | 2000-01-07 | 2004-04-06 | Emc Corporation | Methods and apparatus for providing access by a first computing system to data stored in a shared storage device managed by a second computing system |
US20010027470A1 (en) * | 2000-01-11 | 2001-10-04 | Friedemann Ulmer | System, method and computer program product for providing a remote support service |
US7552449B1 (en) * | 2000-01-21 | 2009-06-23 | Sun Microsystems, Inc. | Method for enabling multiple concurrent subprocess handling on a system using a global process |
US6460113B1 (en) | 2000-01-25 | 2002-10-01 | Dell Products L.P. | System and method for performing backup operations using a fibre channel fabric in a multi-computer environment |
US7032006B2 (en) | 2000-01-26 | 2006-04-18 | Zhuk Jeff Yefim | Distributed active knowledge and process base allowing system elements to be shared within a collaborative framework |
US20110320568A1 (en) * | 2000-01-28 | 2011-12-29 | Slik David B | Content distribution system for generating content streams to suit different users and facilitating e-commerce transactions using broadcast content metadata |
US6546404B1 (en) * | 2000-01-29 | 2003-04-08 | International Business Machines Corporation | Data migration tool |
US20100202314A1 (en) * | 2000-02-17 | 2010-08-12 | Hauck Jerrold V | Methods and apparatus for ensuring compatibility on a high performance serial bus |
US8295302B2 (en) * | 2000-02-17 | 2012-10-23 | Apple Inc. | Methods and apparatus for ensuring compatibility on a high performance serial bus |
US9215097B2 (en) | 2000-02-17 | 2015-12-15 | Apple, Inc. | Methods and apparatus for ensuring compatibility on a high performance serial bus |
US20050120137A1 (en) * | 2000-02-18 | 2005-06-02 | Moulton Gregory H. | System and method for intelligent, globally distributed network storage |
US20010034795A1 (en) * | 2000-02-18 | 2001-10-25 | Moulton Gregory Hagan | System and method for intelligent, globally distributed network storage |
US7558856B2 (en) * | 2000-02-18 | 2009-07-07 | Emc Corporation | System and method for intelligent, globally distributed network storage |
US7509420B2 (en) * | 2000-02-18 | 2009-03-24 | Emc Corporation | System and method for intelligent, globally distributed network storage |
US20010044879A1 (en) * | 2000-02-18 | 2001-11-22 | Moulton Gregory Hagan | System and method for distributed management of data storage |
US6514079B1 (en) | 2000-03-27 | 2003-02-04 | Rume Interactive | Interactive training method for demonstrating and teaching occupational skills |
US20040215829A1 (en) * | 2000-03-30 | 2004-10-28 | United Devices, Inc. | Data conversion services and associated distributed processing system |
US7020678B1 (en) | 2000-03-30 | 2006-03-28 | United Devices, Inc. | Machine generated sweepstakes entry model and associated distributed processing system |
US20010027467A1 (en) * | 2000-03-30 | 2001-10-04 | Anderson David P. | Massively distributed database system and associated method |
US6891802B1 (en) | 2000-03-30 | 2005-05-10 | United Devices, Inc. | Network site testing method and associated system |
US7092985B2 (en) | 2000-03-30 | 2006-08-15 | United Devices, Inc. | Method of managing workloads and associated distributed processing system |
US20050010664A1 (en) * | 2000-03-30 | 2005-01-13 | United Devices, Inc. | Method of managing workloads and associated distributed processing system |
US10269025B2 (en) | 2000-03-30 | 2019-04-23 | Intellectual Ventures Ii Llc | Monetizing network connected user bases utilizing distributed processing systems |
USRE42153E1 (en) * | 2000-03-30 | 2011-02-15 | Hubbard Edward A | Dynamic coordination and control of network connected devices for large-scale network site testing and associated architectures |
US7003547B1 (en) | 2000-03-30 | 2006-02-21 | United Devices, Inc. | Distributed parallel processing system having capability-based incentives and associated method |
US6654783B1 (en) | 2000-03-30 | 2003-11-25 | Ethergent Corporation | Network site content indexing method and associated system |
US6847995B1 (en) | 2000-03-30 | 2005-01-25 | United Devices, Inc. | Security architecture for distributed processing systems and associated method |
US20030033543A1 (en) * | 2000-03-30 | 2003-02-13 | United Devices, Inc. | Massively distributed processing system with modular client agent and associated method |
US8010703B2 (en) | 2000-03-30 | 2011-08-30 | Prashtama Wireless Llc | Data conversion services and associated distributed processing system |
US7254607B2 (en) | 2000-03-30 | 2007-08-07 | United Devices, Inc. | Dynamic coordination and control of network connected devices for large-scale network site testing and associated architectures |
US7039670B2 (en) | 2000-03-30 | 2006-05-02 | United Devices, Inc. | Massively distributed processing system with modular client agent and associated method |
US8249940B2 (en) | 2000-03-30 | 2012-08-21 | Niration Network Group, LLC | Capability based distributed processing |
US6963897B1 (en) | 2000-03-30 | 2005-11-08 | United Devices, Inc. | Customer services and advertising based upon device attributes and associated distributed processing system |
US20030149765A1 (en) * | 2000-03-30 | 2003-08-07 | Hubbard Edward A. | Dynamic coordination and control of network connected devices for large-scale network site testing and associated architectures |
US7082474B1 (en) | 2000-03-30 | 2006-07-25 | United Devices, Inc. | Data sharing and file distribution method and associated distributed processing system |
US20040148336A1 (en) * | 2000-03-30 | 2004-07-29 | Hubbard Edward A | Massively distributed processing system architecture, scheduling, unique device identification and associated methods |
US6883142B2 (en) * | 2000-04-03 | 2005-04-19 | Komatsu Ltd. | Method and system for providing service to remote users by inter-computer communications |
US20010037192A1 (en) * | 2000-04-03 | 2001-11-01 | Nobuyuki Shimamoto | Method and system for providing service to remote users by inter-computer communications |
US6965924B1 (en) * | 2000-04-26 | 2005-11-15 | Hewlett-Packard Development Company, L.P. | Method and system for transparent file proxying |
US6789077B1 (en) | 2000-05-09 | 2004-09-07 | Sun Microsystems, Inc. | Mechanism and apparatus for web-based searching of URI-addressable repositories in a distributed computing environment |
US6792466B1 (en) | 2000-05-09 | 2004-09-14 | Sun Microsystems, Inc. | Trusted construction of message endpoints in a distributed computing environment |
US7412518B1 (en) | 2000-05-09 | 2008-08-12 | Sun Microsystems, Inc. | Method and apparatus for proximity discovery of services |
US8001232B1 (en) | 2000-05-09 | 2011-08-16 | Oracle America, Inc. | Event message endpoints in a distributed computing environment |
US7716492B1 (en) | 2000-05-09 | 2010-05-11 | Oracle America, Inc. | Method and apparatus to obtain service capability credentials |
US8135796B1 (en) | 2000-05-09 | 2012-03-13 | Oracle America, Inc. | Mechanism and apparatus for accessing and addressing services in a distributed computing environment |
US8082491B1 (en) | 2000-05-09 | 2011-12-20 | Oracle America, Inc. | Dynamic displays in a distributed computing environment |
US9110711B2 (en) | 2000-05-09 | 2015-08-18 | Oracle International Corporation | Dynamic displays in a distributed computing environment |
US6643650B1 (en) | 2000-05-09 | 2003-11-04 | Sun Microsystems, Inc. | Mechanism and apparatus for using messages to look up documents stored in spaces in a distributed computing environment |
US6789126B1 (en) | 2000-05-09 | 2004-09-07 | Sun Microsystems, Inc. | Addressing message gates in a distributed computing environment |
US6862594B1 (en) | 2000-05-09 | 2005-03-01 | Sun Microsystems, Inc. | Method and apparatus to discover services using flexible search criteria |
US7171484B1 (en) | 2000-05-24 | 2007-01-30 | Krause Michael R | Reliable datagram transport service |
US7103626B1 (en) | 2000-05-24 | 2006-09-05 | Hewlett-Packard Development, L.P. | Partitioning in distributed computer system |
US6760815B1 (en) | 2000-06-02 | 2004-07-06 | Sun Microsystems, Inc. | Caching mechanism for a virtual heap |
US6941410B1 (en) | 2000-06-02 | 2005-09-06 | Sun Microsystems, Inc. | Virtual heap for a virtual machine |
US6763440B1 (en) | 2000-06-02 | 2004-07-13 | Sun Microsystems, Inc. | Garbage collection using nursery regions for new objects in a virtual heap |
US6742020B1 (en) * | 2000-06-08 | 2004-05-25 | Hewlett-Packard Development Company, L.P. | System and method for managing data flow and measuring service in a storage network |
WO2001098918A1 (en) * | 2000-06-20 | 2001-12-27 | Fatwire Corporation | System and method for least work publishing |
US6912537B2 (en) * | 2000-06-20 | 2005-06-28 | Storage Technology Corporation | Dynamically changeable virtual mapping scheme |
US7593960B2 (en) | 2000-06-20 | 2009-09-22 | Fatwire Corporation | System and method for least work publishing |
US20060195616A1 (en) * | 2000-06-20 | 2006-08-31 | Erik Petersen | System and method for storing data to a recording medium |
US7392365B2 (en) | 2000-06-20 | 2008-06-24 | Storage Technology Corporation | Dynamically changeable virtual mapping scheme |
US20080120303A1 (en) * | 2000-06-20 | 2008-05-22 | Storage Technology Corporation | Dynamically changeable virtual mapping scheme |
US20020103907A1 (en) * | 2000-06-20 | 2002-08-01 | Erik Petersen | System and method of storing data to a recording medium |
US7448079B2 (en) | 2000-07-05 | 2008-11-04 | Ernst & Young, Llp | Method and apparatus for providing computer services |
US20070266216A1 (en) * | 2000-07-06 | 2007-11-15 | Hitachi, Ltd. | Data reallocation among storage systems |
US20020004857A1 (en) * | 2000-07-06 | 2002-01-10 | Hiroshi Arakawa | Computer system |
US7260696B2 (en) * | 2000-07-06 | 2007-08-21 | Hitachi, Ltd. | Data reallocation among storage systems |
US6763442B2 (en) * | 2000-07-06 | 2004-07-13 | Hitachi, Ltd. | Data reallocation among storage systems |
US6766430B2 (en) * | 2000-07-06 | 2004-07-20 | Hitachi, Ltd. | Data reallocation among storage systems |
US20040236772A1 (en) * | 2000-07-06 | 2004-11-25 | Hitachi, Ltd. | Data reallocation among storage systems |
US7953949B2 (en) * | 2000-07-06 | 2011-05-31 | Hitachi, Ltd. | Data reallocation among storage systems |
US20020184463A1 (en) * | 2000-07-06 | 2002-12-05 | Hitachi, Ltd. | Computer system |
US20020078445A1 (en) * | 2000-07-11 | 2002-06-20 | Imran Sharif | Internet appliance for interactive audio/video display using a remote control unit for user input |
US20030115167A1 (en) * | 2000-07-11 | 2003-06-19 | Imran Sharif | Web browser implemented in an Internet appliance |
US6980313B2 (en) | 2000-07-11 | 2005-12-27 | Imran Sharif | Fax-compatible internet appliance |
US7245291B2 (en) | 2000-07-11 | 2007-07-17 | Imran Sharif | System and method for internet appliance data entry and navigation |
US6714941B1 (en) * | 2000-07-19 | 2004-03-30 | University Of Southern California | Learning data prototypes for information extraction |
US6920497B1 (en) | 2000-07-31 | 2005-07-19 | The Boeing Company | Contacting a broadcast channel |
US6732147B1 (en) | 2000-07-31 | 2004-05-04 | The Boeing Company | Leaving a broadcast channel |
US20040148348A1 (en) * | 2000-07-31 | 2004-07-29 | Holt Fred B | Leaving a broadcast channel |
US6714966B1 (en) | 2000-07-31 | 2004-03-30 | The Boeing Company | Information delivery service |
US6910069B1 (en) | 2000-07-31 | 2005-06-21 | The Boeing Company | Joining a broadcast channel |
US7130855B2 (en) * | 2000-07-31 | 2006-10-31 | Hewlett-Packard Development Company, L.P. | Method and apparatus for asynchronous file writes in a distributed file system |
US7412537B2 (en) | 2000-07-31 | 2008-08-12 | The Boeing Company | Method for determining an estimated diameter of a broadcast channel |
US6701344B1 (en) | 2000-07-31 | 2004-03-02 | The Boeing Company | Distributed game environment |
US6829634B1 (en) | 2000-07-31 | 2004-12-07 | The Boeing Company | Broadcasting network |
US6643672B1 (en) * | 2000-07-31 | 2003-11-04 | Hewlett-Packard Development Company, Lp. | Method and apparatus for asynchronous file writes in a distributed file system |
US20020174128A1 (en) * | 2000-07-31 | 2002-11-21 | Oracle International Corporation | Opaque types |
US7007037B2 (en) | 2000-07-31 | 2006-02-28 | Oracle International Corporation | Opaque types |
US20040078396A1 (en) * | 2000-07-31 | 2004-04-22 | Diane Lebel | Method and apparatus for asynchronous file writes in a distributed file system |
US6691112B1 (en) | 2000-08-01 | 2004-02-10 | Darren Michael Siegal | Method for indexing and managing a searchable community of non-HTML information |
US7529750B2 (en) * | 2000-08-11 | 2009-05-05 | International Business Machines Corporation | Accessing information on a network |
US6981005B1 (en) * | 2000-08-24 | 2005-12-27 | Microsoft Corporation | Partial migration of an object to another storage location in a computer system |
US7072914B2 (en) * | 2000-08-24 | 2006-07-04 | Microsft Corporation | Partial migration of an object to another storage location in a computer system |
US20050097126A1 (en) * | 2000-08-24 | 2005-05-05 | Microsoft Corporation | Partial migration of an object to another storage location in a computer system |
US7188305B1 (en) | 2000-08-31 | 2007-03-06 | International Business Machines Corporation | Method and apparatus for providing local data persistence for web applications |
US6775668B1 (en) * | 2000-09-11 | 2004-08-10 | Novell, Inc. | Method and system for enhancing quorum based access control to a database |
US7406484B1 (en) | 2000-09-12 | 2008-07-29 | Tbrix, Inc. | Storage allocation in a distributed segmented file system |
US20060288080A1 (en) * | 2000-09-12 | 2006-12-21 | Ibrix, Inc. | Balanced computer architecture |
US8977659B2 (en) | 2000-09-12 | 2015-03-10 | Hewlett-Packard Development Company, L.P. | Distributing files across multiple, permissibly heterogeneous, storage devices |
US20070288494A1 (en) * | 2000-09-12 | 2007-12-13 | Ibrix, Inc. | Distributing files across multiple, permissibly heterogeneous, storage devices |
US7769711B2 (en) | 2000-09-12 | 2010-08-03 | Hewlett-Packard Development Company, L.P. | Migration of control in a distributed segmented file system |
US8935307B1 (en) | 2000-09-12 | 2015-01-13 | Hewlett-Packard Development Company, L.P. | Independent data access in a segmented file system |
US20070226331A1 (en) * | 2000-09-12 | 2007-09-27 | Ibrix, Inc. | Migration of control in a distributed segmented file system |
US20050144178A1 (en) * | 2000-09-12 | 2005-06-30 | Chrin David M. | Distributing files across multiple, permissibly heterogeneous, storage devices |
US7836017B1 (en) | 2000-09-12 | 2010-11-16 | Hewlett-Packard Development Company, L.P. | File replication in a distributed segmented file system |
US6782389B1 (en) * | 2000-09-12 | 2004-08-24 | Ibrix, Inc. | Distributing files across multiple, permissibly heterogeneous, storage devices |
US6857056B2 (en) * | 2000-10-06 | 2005-02-15 | Koninklijke Philips Electronics N.V. | Virtual memory device for a digital home network |
US8489567B2 (en) | 2000-10-13 | 2013-07-16 | Microsoft Corporation | Persistent data storage techniques |
US7587428B2 (en) * | 2000-10-13 | 2009-09-08 | Microsoft Corporation | Maintaining a relationship between two different items of data |
US9189536B2 (en) | 2000-10-13 | 2015-11-17 | Miosoft Corporation | Maintaining a relationship between two different items of data |
US20040267807A1 (en) * | 2000-10-13 | 2004-12-30 | Miosoft Corporation, A Delaware Corporation | Persistent data storage techniques |
US8935225B2 (en) | 2000-10-13 | 2015-01-13 | Miosoft Corporation | Persistent data storage techniques |
US20030233370A1 (en) * | 2000-10-13 | 2003-12-18 | Miosoft Corporation, A Delaware Corporation | Maintaining a relationship between two different items of data |
US7689560B2 (en) | 2000-10-13 | 2010-03-30 | Miosoft Corporation | Persistent data storage techniques |
US9830348B2 (en) | 2000-10-13 | 2017-11-28 | Miosoft Corporation | Persistent data storage techniques |
US20100153397A1 (en) * | 2000-10-13 | 2010-06-17 | Miosoft Corporation | Maintaining a relationship between two different items of data |
US6718392B1 (en) | 2000-10-24 | 2004-04-06 | Hewlett-Packard Development Company, L.P. | Queue pair partitioning in distributed computer system |
US20020176930A1 (en) * | 2000-11-07 | 2002-11-28 | Kuang-Chung Peng | Method for fabricating an organic light emitting diode |
US20090204546A1 (en) * | 2000-11-15 | 2009-08-13 | Mahmoud Nabih Youssef Haidar | Electronic payment and associated systems |
US6751636B1 (en) | 2000-12-05 | 2004-06-15 | Silicon Graphics, Inc. | System and method for maintaining and recovering data consistency across multiple instances of a database |
US6721739B1 (en) * | 2000-12-05 | 2004-04-13 | Silicon Graphics, Inc. | System and method for maintaining and recovering data consistency across multiple pages |
US6993523B1 (en) | 2000-12-05 | 2006-01-31 | Silicon Graphics, Inc. | System and method for maintaining and recovering data consistency in a data base page |
US10303454B2 (en) * | 2000-12-29 | 2019-05-28 | Vmware, Inc. | Disk block streaming using a broker computer system |
US20170024200A1 (en) * | 2000-12-29 | 2017-01-26 | Vmware, Inc. | Disk block streaming using a broker computer system |
US6633862B2 (en) * | 2000-12-29 | 2003-10-14 | Intel Corporation | System and method for database cache synchronization across multiple interpreted code engines |
US20020099768A1 (en) * | 2001-01-25 | 2002-07-25 | Wright Robert A. | High performance client-server communication system |
US7325030B2 (en) | 2001-01-25 | 2008-01-29 | Yahoo, Inc. | High performance client-server communication system |
US20050267638A1 (en) * | 2001-02-12 | 2005-12-01 | The Stanley Works | System and architecture for providing a modular intelligent assist system |
US7120508B2 (en) * | 2001-02-12 | 2006-10-10 | The Stanley Works | System and architecture for providing a modular intelligent assist system |
US6918022B2 (en) * | 2001-02-28 | 2005-07-12 | Intel Corporation | Memory space organization |
US20020133539A1 (en) * | 2001-03-14 | 2002-09-19 | Imation Corp. | Dynamic logical storage volumes |
US7143082B2 (en) | 2001-03-30 | 2006-11-28 | Kabushiki Kaisha Toshiba | Distributed-processing database-management system |
EP1246064A3 (en) * | 2001-03-30 | 2005-03-23 | Kabushiki Kaisha Toshiba | Startup method of a new node in a distributed database management system |
US7136917B2 (en) * | 2001-04-13 | 2006-11-14 | Denso Corporation | Communication system and method having communication data dividing and transmitting functions |
US20020152217A1 (en) * | 2001-04-13 | 2002-10-17 | Shigeki Kawai | Communication system and method having communication data dividing and transmitting functions |
US20020169881A1 (en) * | 2001-05-10 | 2002-11-14 | International Business Machines Corporation | Method and apparatus for distributed access to services in a network data processing system |
US7380001B2 (en) * | 2001-05-17 | 2008-05-27 | Fujitsu Limited | Fault containment and error handling in a partitioned system with shared resources |
US20020186711A1 (en) * | 2001-05-17 | 2002-12-12 | Kazunori Masuyama | Fault containment and error handling in a partitioned system with shared resources |
US20020184241A1 (en) * | 2001-05-31 | 2002-12-05 | Yu-Fu Wu | System and method for shared directory management |
US7162497B2 (en) * | 2001-05-31 | 2007-01-09 | Taiwan Semiconductor Manufacturing Co., Ltd. | System and method for shared directory management |
US20020199017A1 (en) * | 2001-06-25 | 2002-12-26 | Russell Lance W. | Routing meta data for network file access |
US20040059866A1 (en) * | 2001-06-25 | 2004-03-25 | Kayuri Patel | System and method for representing named data streams within an on-disk structure of a file system |
US7162486B2 (en) * | 2001-06-25 | 2007-01-09 | Network Appliance, Inc. | System and method for representing named data streams within an on-disk structure of a file system |
US8010503B1 (en) | 2001-06-25 | 2011-08-30 | Netapp, Inc. | System and method for restoring a single data stream file from a snapshot |
US7194513B2 (en) | 2001-07-08 | 2007-03-20 | Imran Sharif | System and method for using an internet appliance to send/receive digital content files as E-mail attachments |
KR100415067B1 (en) * | 2001-07-09 | 2004-01-13 | 김한규 | Method of remote connecting of hardware devices using the network |
WO2003007191A1 (en) * | 2001-07-11 | 2003-01-23 | Apple Computer, Inc. | Method and apparatus for managing file extensions in a digital processing system |
US20060265419A1 (en) * | 2001-07-11 | 2006-11-23 | Scott Forstall | Method and apparatus for managing file extensions in a digital processing system |
US7099869B1 (en) | 2001-07-11 | 2006-08-29 | Apple Computer, Inc. | Method and apparatus for managing file extensions in a digital processing system |
US7792881B2 (en) | 2001-07-11 | 2010-09-07 | Apple Inc. | Method and apparatus for managing file extensions in a digital processing system |
US20100332460A1 (en) * | 2001-07-11 | 2010-12-30 | Scott Forstall | Method and apparatus for managing file extensions in a digital processing system |
US8190656B2 (en) | 2001-07-11 | 2012-05-29 | Apple Inc. | Method and apparatus for managing file extensions in a digital processing system |
US7711788B2 (en) | 2001-08-01 | 2010-05-04 | Actona Technologies Ltd. | Double-proxy remote data access system |
US7743109B2 (en) | 2001-08-01 | 2010-06-22 | Cisco Technology, Inc. | Reducing round trips across a wide area network for resource locking by extended locking and delayed unlocking |
US9547726B2 (en) | 2001-08-01 | 2017-01-17 | Cisco Technology, Inc. | Virtual file-sharing network |
US7139811B2 (en) * | 2001-08-01 | 2006-11-21 | Actona Technologies Ltd. | Double-proxy remote data access system |
US20040255048A1 (en) * | 2001-08-01 | 2004-12-16 | Etai Lev Ran | Virtual file-sharing network |
US20070143477A1 (en) * | 2001-08-01 | 2007-06-21 | Cisco Technology, Inc. | Reducing round trips across a wide area network for resource locking by extended locking and delayed unlocking |
WO2003012578A3 (en) * | 2001-08-01 | 2005-05-26 | Actona Technologies Ltd | Virtual file-sharing network |
US20070174428A1 (en) * | 2001-08-01 | 2007-07-26 | Actona Technologies Ltd. | Double-proxy remote data access system |
US20100169392A1 (en) * | 2001-08-01 | 2010-07-01 | Actona Technologies Ltd. | Virtual file-sharing network |
US7756969B1 (en) | 2001-09-07 | 2010-07-13 | Oracle America, Inc. | Dynamic provisioning of identification services in a distributed system |
US7660887B2 (en) | 2001-09-07 | 2010-02-09 | Sun Microsystems, Inc. | Systems and methods for providing dynamic quality of service for a distributed system |
US20040236798A1 (en) * | 2001-09-11 | 2004-11-25 | Sudhir Srinivasan | Migration of control in a distributed segmented file system |
US20090100069A1 (en) * | 2001-09-18 | 2009-04-16 | Bosley Carleton J | Systems, methods and programming for routing and indexing globally addressable objects and associated business models |
US8600951B2 (en) * | 2001-09-18 | 2013-12-03 | Skype | Systems, methods and programming for routing and indexing globally addressable objects and associated business models |
US20030065760A1 (en) * | 2001-09-21 | 2003-04-03 | Polyserve, Inc | System and method for management of a storage area network |
WO2003025801A1 (en) * | 2001-09-21 | 2003-03-27 | Polyserve, Inc. | System and method for implementing journaling in a multi-node environment |
US7149853B2 (en) | 2001-09-21 | 2006-12-12 | Polyserve, Inc. | System and method for synchronization for enforcing mutual exclusion among multiple negotiators |
CN1320483C (en) * | 2001-09-21 | 2007-06-06 | 泛伺服公司 | System and method for implementing journaling in a multi-node environment |
US7240057B2 (en) | 2001-09-21 | 2007-07-03 | Kingsbury Brent A | System and method for implementing journaling in a multi-node environment |
US7437386B2 (en) | 2001-09-21 | 2008-10-14 | Hewlett-Packard Development Company, L.P. | System and method for a multi-node environment with shared storage |
US7111197B2 (en) | 2001-09-21 | 2006-09-19 | Polyserve, Inc. | System and method for journal recovery for multinode environments |
US20040202013A1 (en) * | 2001-09-21 | 2004-10-14 | Polyserve, Inc. | System and method for collaborative caching in a multinode system |
US7266722B2 (en) | 2001-09-21 | 2007-09-04 | Hewlett-Packard Development Company, L.P. | System and method for efficient lock recovery |
US20050015640A1 (en) * | 2001-09-21 | 2005-01-20 | Polyserve, Inc. | System and method for journal recovery for multinode environments |
US7496646B2 (en) | 2001-09-21 | 2009-02-24 | Hewlett-Packard Development Company, L.P. | System and method for management of a storage area network |
US20030065672A1 (en) * | 2001-09-21 | 2003-04-03 | Polyserve, Inc. | System and method for implementing journaling in a multi-node environment |
US20030079155A1 (en) * | 2001-09-21 | 2003-04-24 | Polyserve, Inc. | System and method for efficient lock recovery |
US20030065686A1 (en) * | 2001-09-21 | 2003-04-03 | Polyserve, Inc. | System and method for a multi-node environment with shared storage |
US20030065896A1 (en) * | 2001-09-21 | 2003-04-03 | Polyserve, Inc. | System and method for synchronization for enforcing mutual exclusion among multiple negotiators |
US20040133540A1 (en) * | 2001-09-26 | 2004-07-08 | Mark Saake | Efficient management of large files |
CN1559041B (en) * | 2001-09-26 | 2011-11-30 | Emc公司 | Sharing objects between computer systems |
WO2003027882A1 (en) * | 2001-09-26 | 2003-04-03 | Mark Saake | Sharing objects between computer systems |
US8484172B2 (en) | 2001-09-26 | 2013-07-09 | Emc Corporation | Efficient search for migration and purge candidates |
US7500246B2 (en) | 2001-09-26 | 2009-03-03 | Emc Corporation | Sharing objects between computer systems |
US20040143563A1 (en) * | 2001-09-26 | 2004-07-22 | Mark Saake | Sharing objects between computer systems |
US20040133608A1 (en) * | 2001-09-26 | 2004-07-08 | Mark Saake | Efficient search for migration and purge candidates |
US8442957B2 (en) * | 2001-09-26 | 2013-05-14 | Emc Corporation | Efficient management of large files |
US20030061060A1 (en) * | 2001-09-27 | 2003-03-27 | I2 Technologies Us, Inc. | Dynamic database redirection using semantic taxonomy information |
US10282765B2 (en) | 2001-09-27 | 2019-05-07 | Jda Software Group, Inc. | Order acceleration through user document storage and reuse |
US20040158496A1 (en) * | 2001-09-27 | 2004-08-12 | I2 Technologies Us, Inc. | Order acceleration through user document storage and reuse |
US7225146B2 (en) | 2001-09-27 | 2007-05-29 | I2 Technologies Us, Inc. | Method, system and article of manufacturing for dynamic database redirection using semantic taxonomy information |
US7054841B1 (en) | 2001-09-27 | 2006-05-30 | I2 Technologies Us, Inc. | Document storage and classification |
US7412404B1 (en) * | 2001-09-27 | 2008-08-12 | I2 Technologies Us, Inc. | Generating, updating, and managing multi-taxonomy environments |
US7047253B1 (en) | 2001-09-28 | 2006-05-16 | Oracle Interntional Corporation | Mechanisms for storing content and properties of hierarchically organized resources |
US7158981B2 (en) | 2001-09-28 | 2007-01-02 | Oracle International Corporation | Providing a consistent hierarchical abstraction of relational data |
US7047250B1 (en) | 2001-09-28 | 2006-05-16 | Oracle International Corporation | Indexing to efficiently manage versioned data in a database system |
US7051039B1 (en) * | 2001-09-28 | 2006-05-23 | Oracle International Corporation | Mechanism for uniform access control in a database system |
US7096224B2 (en) | 2001-09-28 | 2006-08-22 | Oracle International Corporation | Mechanism for mapping XML schemas to object-relational database systems |
US7051033B2 (en) | 2001-09-28 | 2006-05-23 | Oracle International Corporation | Providing a consistent hierarchical abstraction of relational data |
US7092967B1 (en) | 2001-09-28 | 2006-08-15 | Oracle International Corporation | Loadable units for lazy manifestation of XML documents |
US20030140308A1 (en) * | 2001-09-28 | 2003-07-24 | Ravi Murthy | Mechanism for mapping XML schemas to object-relational database systems |
US20030069938A1 (en) * | 2001-10-04 | 2003-04-10 | Russell Lance W. | Shared memory coupling of network infrastructure devices |
US6920485B2 (en) * | 2001-10-04 | 2005-07-19 | Hewlett-Packard Development Company, L.P. | Packet processing in shared memory multi-computer systems |
US20030069939A1 (en) * | 2001-10-04 | 2003-04-10 | Russell Lance W. | Packet processing in shared memory multi-computer systems |
US20030069949A1 (en) * | 2001-10-04 | 2003-04-10 | Chan Michele W. | Managing distributed network infrastructure services |
US6999998B2 (en) | 2001-10-04 | 2006-02-14 | Hewlett-Packard Development Company, L.P. | Shared memory coupling of network infrastructure devices |
US7430593B2 (en) | 2001-10-05 | 2008-09-30 | International Business Machines Corporation | Storage area network for topology rendering |
US20030167327A1 (en) * | 2001-10-05 | 2003-09-04 | Baldwin Duane Mark | Storage area network methods and apparatus for topology rendering |
US20030149762A1 (en) * | 2001-10-05 | 2003-08-07 | Knight Gregory John | Storage area network methods and apparatus with history maintenance and removal |
US20030076526A1 (en) * | 2001-10-18 | 2003-04-24 | International Business Machines Corporation | Method and apparatus for printing documents using a document repository in a distributed data processing system |
US7054893B2 (en) * | 2001-11-12 | 2006-05-30 | Hitachi, Ltd. | Method and apparatus for relocating data related to database management system |
US20030093439A1 (en) * | 2001-11-12 | 2003-05-15 | Kazuhiko Mogi | Method and apparatus for relocating data related to database management system |
US20040267821A1 (en) * | 2001-11-29 | 2004-12-30 | Jiro Kiyama | Data recording method, data deletion method, data display method, recording apparatus, recording medium, and program |
US8370324B2 (en) | 2001-11-29 | 2013-02-05 | Sharp Kabushiki Kaisha | Data management method using a table, and related storage device, storage medium and program |
US20100185708A1 (en) * | 2001-11-29 | 2010-07-22 | Sharp Kabushiki Kaisha | Data recording method, data erasure method, data display method, storage device, storage medium, and program |
US20100185707A1 (en) * | 2001-11-29 | 2010-07-22 | Sharp Kabushiki Kaisha | Data recording method, data erasure method, data display method, storage device, storage medium, and program |
US20100191709A1 (en) * | 2001-11-29 | 2010-07-29 | Sharp Kabushiki Kaisha | Data recording method, data erasure method, data display method, storage device, storage medium, and program |
US9330724B2 (en) | 2001-11-29 | 2016-05-03 | Sharp Kabushiki Kaisha | Data recording method, data erasure method, data display method, storage device, storage medium, and program |
US20100185709A1 (en) * | 2001-11-29 | 2010-07-22 | Sharp Kabushiki Kaisha | Data recording method, data erasure method, data display method, storage device, storage medium, and program |
US20090164487A1 (en) * | 2001-11-29 | 2009-06-25 | Sharp Kabushiki Kaisha | Data management method using a table, and related storage device, storage medium and program |
US20100185710A1 (en) * | 2001-11-29 | 2010-07-22 | Sharp Kabushiki Kaisha | Data recording method, data erasure method, data display method, storage device, storage medium, and program |
US7054998B2 (en) | 2001-12-06 | 2006-05-30 | Broadcom Company | File mode RAID subsystem |
US6782450B2 (en) | 2001-12-06 | 2004-08-24 | Raidcore, Inc. | File mode RAID subsystem |
US20050021615A1 (en) * | 2001-12-06 | 2005-01-27 | Raidcore, Inc. | File mode RAID subsystem |
US20030126465A1 (en) * | 2001-12-31 | 2003-07-03 | Joseph Tassone | Internet-based card access and security systems and methods |
US20030126118A1 (en) * | 2002-01-02 | 2003-07-03 | International Business Machines Corporation | Method, system and program for direct client file access in a data management system |
US8682928B2 (en) | 2002-01-02 | 2014-03-25 | International Business Machines Corporation | Method, system and program for direct client file access in a data management system |
US20070112787A1 (en) * | 2002-01-02 | 2007-05-17 | International Business Machines Corporation | Method, system and program for direct client file access in a data management system |
US7177868B2 (en) | 2002-01-02 | 2007-02-13 | International Business Machines Corporation | Method, system and program for direct client file access in a data management system |
US20030125022A1 (en) * | 2002-01-03 | 2003-07-03 | International Business Machines Corporation | Mobile messaging global directory |
US6996408B2 (en) * | 2002-01-03 | 2006-02-07 | International Business Machines Corporation | Mobile messaging global directory |
US8005951B2 (en) * | 2002-02-08 | 2011-08-23 | Pitts William M | Method for creating an extensible content distribution framework |
US20090077202A1 (en) * | 2002-02-08 | 2009-03-19 | Pitts William M | Method for creating an extensible content distribution framework |
US20110307597A1 (en) * | 2002-02-08 | 2011-12-15 | Willaim M Pitts | Method for creating global distributed namespace |
US8185630B2 (en) * | 2002-02-08 | 2012-05-22 | Willaim M Pitts | Method for creating global distributed namespace |
US7103671B2 (en) * | 2002-03-14 | 2006-09-05 | Yahoo! Inc. | Proxy client-server communication system |
US20030177233A1 (en) * | 2002-03-14 | 2003-09-18 | Yahoo! Inc. | Proxy client-server communication system |
US7010553B2 (en) * | 2002-03-19 | 2006-03-07 | Network Appliance, Inc. | System and method for redirecting access to a remote mirrored snapshot |
US7644109B2 (en) | 2002-03-19 | 2010-01-05 | Netapp, Inc. | System and method for storage of snapshot metadata in a remote file |
US8069149B1 (en) | 2002-03-19 | 2011-11-29 | Netapp, Inc. | System and method for redirecting access to a remote mirrored snapshot |
US7991791B1 (en) | 2002-03-19 | 2011-08-02 | Netapp, Inc. | System and method for redirecting access to a remote mirrored snapshot |
US20060112151A1 (en) * | 2002-03-19 | 2006-05-25 | Manley Stephen L | System and method for storage of snapshot metadata in a remote file |
US7818299B1 (en) | 2002-03-19 | 2010-10-19 | Netapp, Inc. | System and method for determining changes in two snapshots and for transmitting changes to a destination snapshot |
US20030182312A1 (en) * | 2002-03-19 | 2003-09-25 | Chen Raymond C. | System and method for redirecting access to a remote mirrored snapshop |
US7499959B2 (en) * | 2002-03-22 | 2009-03-03 | Network Appliance, Inc. | System and method for performing an on-line check of a file system |
US20050114297A1 (en) * | 2002-03-22 | 2005-05-26 | Edwards John K. | System and method for performing an on-line check of a file system |
US20030187983A1 (en) * | 2002-03-29 | 2003-10-02 | Rajic Hrabri L. | Method and system for distributing applications |
US7096249B2 (en) * | 2002-03-29 | 2006-08-22 | Intel Corporation | Method and system for distributing applications |
US20030191911A1 (en) * | 2002-04-03 | 2003-10-09 | Powerquest Corporation | Using disassociated images for computer and storage resource management |
US7565517B1 (en) | 2002-04-03 | 2009-07-21 | Symantec Corporation | Retargeting a captured image to new hardware while in a pre-boot environment |
US9182969B1 (en) | 2002-04-03 | 2015-11-10 | Symantec Corporation | Using disassociated images for computer and storage resource management |
US7565495B2 (en) * | 2002-04-03 | 2009-07-21 | Symantec Corporation | Using disassociated images for computer and storage resource management |
US7464125B1 (en) * | 2002-04-15 | 2008-12-09 | Ibrix Inc. | Checking the validity of blocks and backup duplicates of blocks during block reads |
US8127217B2 (en) | 2002-04-19 | 2012-02-28 | Kabushiki Kaisha Toshiba | Document management system for transferring a plurality of documents |
US20070011212A1 (en) * | 2002-04-19 | 2007-01-11 | George Koppich | Document management system for automating operations performed on documents in data storage areas |
US7039663B1 (en) * | 2002-04-19 | 2006-05-02 | Network Appliance, Inc. | System and method for checkpointing and restarting an asynchronous transfer of data between a source and destination snapshot |
US6920484B2 (en) * | 2002-05-13 | 2005-07-19 | Nvidia Corporation | Method and apparatus for providing an integrated virtual disk subsystem |
US20030212868A1 (en) * | 2002-05-13 | 2003-11-13 | Nvidia Corporation | Method and apparatus for providing an integrated virtual disk subsystem |
US8560631B2 (en) | 2002-06-03 | 2013-10-15 | Hitachi, Ltd. | Storage system |
US20030225861A1 (en) * | 2002-06-03 | 2003-12-04 | Hitachi, Ltd. | Storage system |
US20070283366A1 (en) * | 2002-06-03 | 2007-12-06 | Hitachi, Ltd. | Storage System |
US7254620B2 (en) | 2002-06-03 | 2007-08-07 | Hitachi, Ltd. | Storage system |
US7454458B2 (en) * | 2002-06-24 | 2008-11-18 | Ntt Docomo, Inc. | Method and system for application load balancing |
US20030236826A1 (en) * | 2002-06-24 | 2003-12-25 | Nayeem Islam | System and method for making mobile applications fault tolerant |
US20040003029A1 (en) * | 2002-06-24 | 2004-01-01 | Nayeem Islam | Method and system for application load balancing |
US20040010568A1 (en) * | 2002-06-26 | 2004-01-15 | International Business Machines Corporation | Handling node address failure in a distributed nodal system of processors |
US7617222B2 (en) * | 2002-06-26 | 2009-11-10 | International Business Machines Corporation | Transferring data and storing metadata across a network |
US20040003013A1 (en) * | 2002-06-26 | 2004-01-01 | International Business Machines Corporation | Transferring data and storing metadata across a network |
US7092990B2 (en) | 2002-06-26 | 2006-08-15 | International Business Machines Corporation | Handling node address failure in a distributed nodal system of processors |
US6980994B2 (en) | 2002-07-08 | 2005-12-27 | International Business Machines Corporation | Method, apparatus and computer program product for mapping file handles |
US20040006565A1 (en) * | 2002-07-08 | 2004-01-08 | International Business Machines Corporation | Method, apparatus and computer program product for mapping file handles |
US20100088317A1 (en) * | 2002-07-30 | 2010-04-08 | Stored Iq, Inc. | Method and apparatus for harvesting file system metadata |
US20080091739A1 (en) * | 2002-07-30 | 2008-04-17 | Bone Jeff G | Method and apparatus for managing file systems and file-based data storage |
US8086553B2 (en) | 2002-07-30 | 2011-12-27 | Stored Iq, Inc. | Method and apparatus for managing file systems and file-based data storage |
US8032501B2 (en) | 2002-07-30 | 2011-10-04 | Stored Iq, Inc. | Method and apparatus for managing file systems and file-based data |
US8898101B2 (en) | 2002-07-30 | 2014-11-25 | International Business Machines Corporation | Managing file systems and file-based data storage |
US20080046404A1 (en) * | 2002-07-30 | 2008-02-21 | Bone Jeff G | Method and apparatus for managing file systems and file-based data storage |
US20100145917A1 (en) * | 2002-07-30 | 2010-06-10 | Stored Iq, Inc. | System, method and apparatus for enterprise policy management |
US9330109B2 (en) | 2002-07-30 | 2016-05-03 | International Business Machines Corporation | System, method and apparatus for enterprise policy management |
US7610329B2 (en) | 2002-07-30 | 2009-10-27 | Storediq, Inc. | Method and apparatus for managing file systems and file-based data storage |
US20040098415A1 (en) * | 2002-07-30 | 2004-05-20 | Bone Jeff G. | Method and apparatus for managing file systems and file-based data storage |
US8612404B2 (en) | 2002-07-30 | 2013-12-17 | Stored Iq, Inc. | Harvesting file system metsdata |
US8417678B2 (en) | 2002-07-30 | 2013-04-09 | Storediq, Inc. | System, method and apparatus for enterprise policy management |
US20120226746A1 (en) * | 2002-08-06 | 2012-09-06 | Tsao Sheng Tai Ted | Method and Apparatus for Information Exchange Over a Web Based Environment |
US20110119353A1 (en) * | 2002-08-06 | 2011-05-19 | Tsao Sheng Tai Ted | Method and Apparatus for information exchange over a web based environment |
US7117491B2 (en) * | 2002-08-29 | 2006-10-03 | International Business Machines Corporation | Method, system, and program for determining whether data has been modified |
US20040044702A1 (en) * | 2002-08-29 | 2004-03-04 | Ferreira Alves Luis Antonio | Method, system, and program for determining whether data has been modified |
US20040049553A1 (en) * | 2002-09-05 | 2004-03-11 | Takashige Iwamura | Information processing system having data migration device |
US7631078B2 (en) | 2002-09-16 | 2009-12-08 | Netapp, Inc. | Network caching device including translation mechanism to provide indirection between client-side object handles and server-side object handles |
US20040054777A1 (en) * | 2002-09-16 | 2004-03-18 | Emmanuel Ackaouy | Apparatus and method for a proxy cache |
US7191290B1 (en) | 2002-09-16 | 2007-03-13 | Network Appliance, Inc. | Apparatus and method for tandem operation in a storage network |
US20070192444A1 (en) * | 2002-09-16 | 2007-08-16 | Emmanuel Ackaouy | Apparatus and method for a proxy cache |
US7171469B2 (en) * | 2002-09-16 | 2007-01-30 | Network Appliance, Inc. | Apparatus and method for storing data in a proxy cache in a network |
US20040054748A1 (en) * | 2002-09-16 | 2004-03-18 | Emmanuel Ackaouy | Apparatus and method for processing data in a network |
US7552223B1 (en) * | 2002-09-16 | 2009-06-23 | Netapp, Inc. | Apparatus and method for data consistency in a proxy cache |
US7284030B2 (en) | 2002-09-16 | 2007-10-16 | Network Appliance, Inc. | Apparatus and method for processing data in a network |
US20040054861A1 (en) * | 2002-09-17 | 2004-03-18 | Harres John M. | Method and tool for determining ownership of a multiple owner lock in multithreading environments |
US6886081B2 (en) * | 2002-09-17 | 2005-04-26 | Sun Microsystems, Inc. | Method and tool for determining ownership of a multiple owner lock in multithreading environments |
US20040064466A1 (en) * | 2002-09-27 | 2004-04-01 | Oracle International Corporation | Techniques for rewriting XML queries directed to relational database constructs |
US7120645B2 (en) | 2002-09-27 | 2006-10-10 | Oracle International Corporation | Techniques for rewriting XML queries directed to relational database constructs |
US6976038B2 (en) * | 2002-10-17 | 2005-12-13 | International Business Machines Corporation | Method and apparatus for real time creation and modification of a change log for multi-server synchronization |
US20040078370A1 (en) * | 2002-10-17 | 2004-04-22 | International Business Machines Corporation | Method and apparatus for real time creation and modification of a change log for multi-server synchronization |
US20040093295A1 (en) * | 2002-11-13 | 2004-05-13 | Spotware Technologies, Inc. | Retail distributive computing |
US20040103099A1 (en) * | 2002-11-20 | 2004-05-27 | Fujitsu Limited | Inter-network relay storage apparatus and inter-network relay method |
WO2004068284A3 (en) * | 2003-01-24 | 2005-11-10 | Cobalt Group Inc | Business platform with networked, association-based business entitiy access management and active content website configuration |
US20040148409A1 (en) * | 2003-01-24 | 2004-07-29 | Davis Lee M. | Business platform with networked, association-based business entity access management and active content website configuration |
US20060259633A1 (en) * | 2003-01-24 | 2006-11-16 | Spearman Robert M | Business platform with networked, association-based business entity access management and active content website configuration |
WO2004068284A2 (en) * | 2003-01-24 | 2004-08-12 | The Cobalt Group, Inc. | Business platform with networked, association-based business entitiy access management and active content website configuration |
US7861309B2 (en) | 2003-01-24 | 2010-12-28 | The Cobalt Group, Inc. | Business platform with networked, association-based business entity access management and active content website configuration |
US7039704B2 (en) * | 2003-01-24 | 2006-05-02 | The Cobalt Group, Inc. | Business platform with networked, association-based business entity access management and active content website configuration |
US20040177353A1 (en) * | 2003-02-28 | 2004-09-09 | Rao Bindu Rama | Electronic device network having graceful denial of service |
US8082339B2 (en) * | 2003-02-28 | 2011-12-20 | Hewlett-Packard Development Company, L.P. | Electronic device network having graceful denial of service |
US7769794B2 (en) | 2003-03-24 | 2010-08-03 | Microsoft Corporation | User interface for a file system shell |
US7234114B2 (en) | 2003-03-24 | 2007-06-19 | Microsoft Corporation | Extensible object previewer in a shell browser |
US7823077B2 (en) | 2003-03-24 | 2010-10-26 | Microsoft Corporation | System and method for user modification of metadata in a shell browser |
US7188316B2 (en) | 2003-03-24 | 2007-03-06 | Microsoft Corporation | System and method for viewing and editing multi-value properties |
US7712034B2 (en) | 2003-03-24 | 2010-05-04 | Microsoft Corporation | System and method for shell browser |
US20050021540A1 (en) * | 2003-03-26 | 2005-01-27 | Microsoft Corporation | System and method for a rules based engine |
US7865904B2 (en) | 2003-03-26 | 2011-01-04 | Microsoft Corporation | Extensible user context system for delivery of notifications |
US7827561B2 (en) | 2003-03-26 | 2010-11-02 | Microsoft Corporation | System and method for public consumption of communication events between arbitrary processes |
US7512586B2 (en) | 2003-03-27 | 2009-03-31 | Microsoft Corporation | System and method for filtering and organizing items based on common elements |
US7707197B2 (en) | 2003-03-27 | 2010-04-27 | Microsoft Corporation | System and method for filtering and organizing items based on common elements |
US20040189707A1 (en) * | 2003-03-27 | 2004-09-30 | Microsoft Corporation | System and method for filtering and organizing items based on common elements |
US7149729B2 (en) | 2003-03-27 | 2006-12-12 | Microsoft Corporation | System and method for filtering and organizing items based on common elements |
US7650575B2 (en) | 2003-03-27 | 2010-01-19 | Microsoft Corporation | Rich drag drop user interface |
US9361313B2 (en) | 2003-03-27 | 2016-06-07 | Microsoft Technology Licensing, Llc | System and method for filtering and organizing items based on common elements |
US7587411B2 (en) | 2003-03-27 | 2009-09-08 | Microsoft Corporation | System and method for filtering and organizing items based on common elements |
WO2004097681A1 (en) * | 2003-03-27 | 2004-11-11 | Microsoft Corporation | System and method utilizing virtual folders |
US7499925B2 (en) | 2003-03-27 | 2009-03-03 | Microsoft Corporation | File system for displaying items of different types and from different physical locations |
US9361312B2 (en) | 2003-03-27 | 2016-06-07 | Microsoft Technology Licensing, Llc | System and method for filtering and organizing items based on metadata |
US7627552B2 (en) | 2003-03-27 | 2009-12-01 | Microsoft Corporation | System and method for filtering and organizing items based on common elements |
US7536386B2 (en) * | 2003-03-27 | 2009-05-19 | Microsoft Corporation | System and method for sharing items in a computer system |
US7925682B2 (en) | 2003-03-27 | 2011-04-12 | Microsoft Corporation | System and method utilizing virtual folders |
US7162466B2 (en) | 2003-03-27 | 2007-01-09 | Microsoft Corporation | System and method for filtering and organizing items based on common elements |
US7526483B2 (en) * | 2003-03-27 | 2009-04-28 | Microsoft Corporation | System and method for virtual folder sharing including utilization of static and dynamic lists |
US8209624B2 (en) | 2003-04-17 | 2012-06-26 | Microsoft Corporation | Virtual address bar user interface control |
US7240292B2 (en) | 2003-04-17 | 2007-07-03 | Microsoft Corporation | Virtual address bar user interface control |
US7853890B2 (en) | 2003-04-17 | 2010-12-14 | Microsoft Corporation | Address bar user interface control |
US7103611B2 (en) | 2003-05-01 | 2006-09-05 | Oracle International Corporation | Techniques for retaining hierarchical information in mapping between XML documents and relational data |
US7409644B2 (en) | 2003-05-16 | 2008-08-05 | Microsoft Corporation | File system shell |
US20060187908A1 (en) * | 2003-06-18 | 2006-08-24 | Hitachi, Ltd. | Network system and its switches |
US20040267804A1 (en) * | 2003-06-27 | 2004-12-30 | Sun Microsystems, Inc. | Hybrid system implementing distinct and co-existing application execution environments and methods for implementing the same |
US8104085B2 (en) * | 2003-06-27 | 2012-01-24 | Oracle America, Inc. | Hybrid system implementing distinct and co-existing application execution environments and methods for implementing the same |
US20050015355A1 (en) * | 2003-07-16 | 2005-01-20 | Apple Computer, Inc. | Method and system for data sharing between application programs |
US20050015461A1 (en) * | 2003-07-17 | 2005-01-20 | Bruno Richard | Distributed file system |
US8776050B2 (en) | 2003-08-20 | 2014-07-08 | Oracle International Corporation | Distributed virtual machine monitor for managing multiple virtual resources across multiple physical nodes |
US20050120160A1 (en) * | 2003-08-20 | 2005-06-02 | Jerry Plouffe | System and method for managing virtual servers |
US20050080982A1 (en) * | 2003-08-20 | 2005-04-14 | Vasilevsky Alexander D. | Virtual host bus adapter and method |
US20050044301A1 (en) * | 2003-08-20 | 2005-02-24 | Vasilevsky Alexander David | Method and apparatus for providing virtual computing services |
US7490093B2 (en) | 2003-08-25 | 2009-02-10 | Oracle International Corporation | Generating a schema-specific load structure to load data into a relational database based on determining whether the schema-specific load structure already exists |
US8229932B2 (en) | 2003-09-04 | 2012-07-24 | Oracle International Corporation | Storing XML documents efficiently in an RDBMS |
US8694510B2 (en) | 2003-09-04 | 2014-04-08 | Oracle International Corporation | Indexing XML documents efficiently |
US7162476B1 (en) * | 2003-09-11 | 2007-01-09 | Cisco Technology, Inc | System and method for sharing global data within distributed computing systems |
US7971230B2 (en) * | 2003-10-23 | 2011-06-28 | Microsoft Corporation | System and methods providing enhanced security model |
CN1860723B (en) * | 2003-10-23 | 2011-04-13 | 微软公司 | System and methods providing enhanced security model |
US7251822B2 (en) * | 2003-10-23 | 2007-07-31 | Microsoft Corporation | System and methods providing enhanced security model |
EP1588519A4 (en) * | 2003-10-23 | 2013-07-31 | Microsoft Corp | System and methods providing enhanced security model |
WO2005045594A3 (en) * | 2003-10-23 | 2005-07-14 | Microsoft Corp | System and method for virtual folder and sharing items |
US20050091518A1 (en) * | 2003-10-23 | 2005-04-28 | Agarwal Sameet H. | System and methods providing enhanced security model |
EP1588519A1 (en) * | 2003-10-23 | 2005-10-26 | Microsoft Corporation | System and methods providing enhanced security model |
US20080022358A1 (en) * | 2003-10-23 | 2008-01-24 | Microsoft Corporation | System and methods providing enhanced security model |
US7181463B2 (en) | 2003-10-24 | 2007-02-20 | Microsoft Corporation | System and method for managing data using static lists |
US7711754B2 (en) | 2003-10-24 | 2010-05-04 | Microsoft Corporation | System and method for managing data using static lists |
US20050097141A1 (en) * | 2003-10-30 | 2005-05-05 | International Business Machines Corporation | Autonomic filesystem recovery |
US20050108300A1 (en) * | 2003-11-17 | 2005-05-19 | Terrascale Technologies Inc. | Method for the management of local client cache buffers in a clustered computer environment |
US7324995B2 (en) | 2003-11-17 | 2008-01-29 | Rackable Systems Inc. | Method for retrieving and modifying data elements on a shared medium |
US20050108231A1 (en) * | 2003-11-17 | 2005-05-19 | Terrascale Technologies Inc. | Method for retrieving and modifying data elements on a shared medium |
US7328217B2 (en) * | 2003-11-26 | 2008-02-05 | Symantec Operating Corporation | System and method for detecting and storing file identity change information within a file system |
US20080126374A1 (en) * | 2003-11-26 | 2008-05-29 | Dhrubajyoti Borthakur | System and method for detecting and storing file identity change information within a file system |
US7912866B2 (en) | 2003-11-26 | 2011-03-22 | Symantec Operating Corporation | System and method for detecting and storing file identity change information within a file system |
US20050114363A1 (en) * | 2003-11-26 | 2005-05-26 | Veritas Operating Corporation | System and method for detecting and storing file identity change information within a file system |
US7111119B2 (en) | 2003-11-27 | 2006-09-19 | Hitachi, Ltd. | Device and method for performing information processing using plurality of processors |
US20050120173A1 (en) * | 2003-11-27 | 2005-06-02 | Nobuyuki Minowa | Device and method for performing information processing using plurality of processors |
US20070150271A1 (en) * | 2003-12-10 | 2007-06-28 | France Telecom | Optimized multiple coding method |
US7792679B2 (en) * | 2003-12-10 | 2010-09-07 | France Telecom | Optimized multiple coding method |
US7814188B2 (en) | 2003-12-16 | 2010-10-12 | Honeywell International Inc. | Synchronized wireless communications system |
US20050138034A1 (en) * | 2003-12-17 | 2005-06-23 | International Business Machines Corporation | System and method for sharing resource properties in a multi-user environment |
US7921110B1 (en) | 2003-12-23 | 2011-04-05 | Netapp, Inc. | System and method for comparing data sets |
US20110083033A1 (en) * | 2004-01-09 | 2011-04-07 | Hitachi, Ltd. | Computer system duplicating writes by synchronous remote copy with multiple host computers using heterogeneous operating systems |
US20090216976A1 (en) * | 2004-01-09 | 2009-08-27 | Hitachi, Ltd. | Computer system allowing any computer to copy any storage area within a storage system |
US7543121B2 (en) * | 2004-01-09 | 2009-06-02 | Hitachi, Ltd. | Computer system allowing any computer to copy any storage area within a storage system |
US20050154829A1 (en) * | 2004-01-09 | 2005-07-14 | Nobuhiro Maki | Storage system and storage system management method |
US8589642B2 (en) | 2004-01-09 | 2013-11-19 | Hitachi, Ltd. | Computer system duplicating writes by synchronous remote copy with multiple host computers using heterogeneous operating systems |
US20050165862A1 (en) * | 2004-01-12 | 2005-07-28 | International Business Machines Corporation | Autonomic and fully recovering filesystem operations |
US7792874B1 (en) | 2004-01-30 | 2010-09-07 | Oracle America, Inc. | Dynamic provisioning for filtering and consolidating events |
US7397770B2 (en) | 2004-02-20 | 2008-07-08 | International Business Machines Corporation | Checking and repairing a network configuration |
US20080205300A1 (en) * | 2004-02-20 | 2008-08-28 | International Business Machines Corporation | Checking and repairing a network configuration |
US20050185597A1 (en) * | 2004-02-20 | 2005-08-25 | Le Cuong M. | Method, system, and program for checking and repairing a network configuration |
US7788353B2 (en) | 2004-02-20 | 2010-08-31 | International Business Machines Corporation | Checking and repairing a network configuration |
US7787456B2 (en) | 2004-02-20 | 2010-08-31 | International Business Machines Corporation | Checking and repairing a network configuration |
US20080209015A1 (en) * | 2004-02-20 | 2008-08-28 | International Business Machines Corporation | Checking and repairing a network configuration |
US8990285B2 (en) | 2004-03-12 | 2015-03-24 | Netapp, Inc. | Pre-summarization and analysis of results generated by an agent |
US7539702B2 (en) | 2004-03-12 | 2009-05-26 | Netapp, Inc. | Pre-summarization and analysis of results generated by an agent |
US7844646B1 (en) * | 2004-03-12 | 2010-11-30 | Netapp, Inc. | Method and apparatus for representing file system metadata within a database for efficient queries |
US20080155011A1 (en) * | 2004-03-12 | 2008-06-26 | Vijay Deshmukh | Pre-summarization and analysis of results generated by an agent |
US20050203907A1 (en) * | 2004-03-12 | 2005-09-15 | Vijay Deshmukh | Pre-summarization and analysis of results generated by an agent |
US7630994B1 (en) | 2004-03-12 | 2009-12-08 | Netapp, Inc. | On the fly summarization of file walk data |
US8024309B1 (en) | 2004-03-12 | 2011-09-20 | Netapp, Inc. | Storage resource management across multiple paths |
US7440954B2 (en) | 2004-04-09 | 2008-10-21 | Oracle International Corporation | Index maintenance for operations involving indexed XML data |
US7921101B2 (en) | 2004-04-09 | 2011-04-05 | Oracle International Corporation | Index maintenance for operations involving indexed XML data |
US7930277B2 (en) | 2004-04-21 | 2011-04-19 | Oracle International Corporation | Cost-based optimizer for an XML data repository within a database |
US8578361B2 (en) | 2004-04-21 | 2013-11-05 | Palm, Inc. | Updating an electronic device with update agent code |
US7694236B2 (en) | 2004-04-23 | 2010-04-06 | Microsoft Corporation | Stack icons representing multiple objects |
US7657846B2 (en) | 2004-04-23 | 2010-02-02 | Microsoft Corporation | System and method for displaying stack icons |
US7992103B2 (en) | 2004-04-26 | 2011-08-02 | Microsoft Corporation | Scaling icons for representing files |
US8972342B2 (en) | 2004-04-29 | 2015-03-03 | Microsoft Corporation | Metadata editing control |
US8707209B2 (en) | 2004-04-29 | 2014-04-22 | Microsoft Corporation | Save preview representation of files being created |
US8661036B2 (en) | 2004-04-29 | 2014-02-25 | Microsoft Corporation | Metadata editing control |
US7496583B2 (en) | 2004-04-30 | 2009-02-24 | Microsoft Corporation | Property tree for metadata navigation and assignment |
US8108430B2 (en) | 2004-04-30 | 2012-01-31 | Microsoft Corporation | Carousel control for metadata navigation and assignment |
US8024335B2 (en) | 2004-05-03 | 2011-09-20 | Microsoft Corporation | System and method for dynamically generating a selectable search extension |
US20050251508A1 (en) * | 2004-05-10 | 2005-11-10 | Masaaki Shimizu | Program and method for file access control in a storage system |
US7865520B2 (en) * | 2004-05-10 | 2011-01-04 | Hitachi, Ltd. | Program and method for file access control in a storage system |
US20060031528A1 (en) * | 2004-06-01 | 2006-02-09 | Domenico Raguseo | Method and system for downloading software products with reduced transmission time |
US20100169452A1 (en) * | 2004-06-01 | 2010-07-01 | Rajeev Atluri | Causation of a data read operation against a first storage system by a server associated with a second storage system according to a host generated instruction |
US9209989B2 (en) * | 2004-06-01 | 2015-12-08 | Inmage Systems, Inc. | Causation of a data read operation against a first storage system by a server associated with a second storage system according to a host generated instruction |
US7454463B2 (en) * | 2004-06-01 | 2008-11-18 | International Business Machines Corporation | Method and system for downloading software products with reduced transmission time |
US9098455B2 (en) | 2004-06-01 | 2015-08-04 | Inmage Systems, Inc. | Systems and methods of event driven recovery management |
US8560439B2 (en) | 2004-06-09 | 2013-10-15 | Syncada Llc | Transaction processing with core and distributor processor implementations |
US20050278220A1 (en) * | 2004-06-09 | 2005-12-15 | Hahn-Carlson Dean W | Automated transaction processing system and approach |
US8762238B2 (en) | 2004-06-09 | 2014-06-24 | Syncada Llc | Recurring transaction processing system and approach |
US7925551B2 (en) * | 2004-06-09 | 2011-04-12 | Syncada Llc | Automated transaction processing system and approach |
US8266024B2 (en) | 2004-06-09 | 2012-09-11 | Syncada Llc | Transaction accounting auditing approach and system therefor |
US8650119B2 (en) | 2004-06-09 | 2014-02-11 | Syncada Llc | Order-resource fulfillment and management system and approach |
US8229899B2 (en) * | 2004-06-10 | 2012-07-24 | International Business Machines Corporation | Remote access agent for caching in a SAN file system |
US7685128B2 (en) | 2004-06-10 | 2010-03-23 | International Business Machines Corporation | Remote access agent for caching in a SAN file system |
US20060004765A1 (en) * | 2004-06-10 | 2006-01-05 | Anderson Owen T | Remote access agent for caching in a SAN file system |
US20100205156A1 (en) * | 2004-06-10 | 2010-08-12 | International Business Machines Corporation | Remote Access Agent for Caching in a SAN File System |
US20050278552A1 (en) * | 2004-06-14 | 2005-12-15 | Vincent Delisle | Secure virtual account |
US7802180B2 (en) | 2004-06-23 | 2010-09-21 | Oracle International Corporation | Techniques for serialization of instances of the XQuery data model |
US20060075225A1 (en) * | 2004-06-30 | 2006-04-06 | Flynn James P | Digital content protection for peer to peer networks |
WO2006005039A3 (en) * | 2004-06-30 | 2007-03-15 | Eztakes Inc | Digital content protection for peer to peer networks |
WO2006005039A2 (en) * | 2004-06-30 | 2006-01-12 | Eztakes, Inc. | Digital content protection for peer to peer networks |
US7885980B2 (en) | 2004-07-02 | 2011-02-08 | Oracle International Corporation | Mechanism for improving performance on XML over XML data using path subsetting |
US8526940B1 (en) | 2004-08-17 | 2013-09-03 | Palm, Inc. | Centralized rules repository for smart phone customer care |
US8307026B2 (en) * | 2004-08-19 | 2012-11-06 | International Business Machines Corporation | On-demand peer-to-peer storage virtualization infrastructure |
US20060041619A1 (en) * | 2004-08-19 | 2006-02-23 | International Business Machines Corporation | System and method for an on-demand peer-to-peer storage virtualization infrastructure |
US7499980B2 (en) * | 2004-08-19 | 2009-03-03 | International Business Machines Corporation | System and method for an on-demand peer-to-peer storage virtualization infrastructure |
US20100017456A1 (en) * | 2004-08-19 | 2010-01-21 | Carl Phillip Gusler | System and Method for an On-Demand Peer-to-Peer Storage Virtualization Infrastructure |
US20060047503A1 (en) * | 2004-08-30 | 2006-03-02 | Lin David H | System and method for controlling sound data |
US7610200B2 (en) * | 2004-08-30 | 2009-10-27 | Lsi Corporation | System and method for controlling sound data |
US7831642B1 (en) * | 2004-09-30 | 2010-11-09 | Symantec Operating Corporation | Page cache management for a shared file |
US7801894B1 (en) | 2004-10-28 | 2010-09-21 | Stored IQ | Method and apparatus for harvesting file system metadata |
US7805449B1 (en) | 2004-10-28 | 2010-09-28 | Stored IQ | System, method and apparatus for enterprise policy management |
US7844582B1 (en) | 2004-10-28 | 2010-11-30 | Stored IQ | System and method for involving users in object management |
US8510331B1 (en) | 2004-10-28 | 2013-08-13 | Storediq, Inc. | System and method for a desktop agent for use in managing file systems |
US20130282774A1 (en) * | 2004-11-15 | 2013-10-24 | Commvault Systems, Inc. | Systems and methods of data storage management, such as dynamic data stream allocation |
US9256606B2 (en) * | 2004-11-15 | 2016-02-09 | Commvault Systems, Inc. | Systems and methods of data storage management, such as dynamic data stream allocation |
US9923932B2 (en) | 2004-11-24 | 2018-03-20 | Global Tel*Link Corporation | Electronic messaging exchange |
US20060136376A1 (en) * | 2004-12-16 | 2006-06-22 | Oracle International Corporation | Infrastructure for performing file operations by a database server |
US20060136509A1 (en) * | 2004-12-16 | 2006-06-22 | Syam Pannala | Techniques for transaction semantics for a database server performing file operations |
US20060136508A1 (en) * | 2004-12-16 | 2006-06-22 | Sam Idicula | Techniques for providing locks for file operations in a database management system |
US7627574B2 (en) * | 2004-12-16 | 2009-12-01 | Oracle International Corporation | Infrastructure for performing file operations by a database server |
US7716260B2 (en) | 2004-12-16 | 2010-05-11 | Oracle International Corporation | Techniques for transaction semantics for a database server performing file operations |
US20060136516A1 (en) * | 2004-12-16 | 2006-06-22 | Namit Jain | Techniques for maintaining consistency for different requestors of files in a database management system |
US7548918B2 (en) | 2004-12-16 | 2009-06-16 | Oracle International Corporation | Techniques for maintaining consistency for different requestors of files in a database management system |
US20060179156A1 (en) * | 2005-02-08 | 2006-08-10 | Cisco Technology, Inc. | Multi-threaded packeting processing architecture |
US20060179204A1 (en) * | 2005-02-08 | 2006-08-10 | Cohen Earl T | Method and apparatus for communicating over a resource interconnect |
US7551617B2 (en) * | 2005-02-08 | 2009-06-23 | Cisco Technology, Inc. | Multi-threaded packet processing architecture with global packet memory, packet recirculation, and coprocessor |
US7664897B2 (en) | 2005-02-08 | 2010-02-16 | Cisco Technology Inc. | Method and apparatus for communicating over a resource interconnect |
WO2006086101A2 (en) * | 2005-02-08 | 2006-08-17 | Cisco Technology, Inc | Multi-threaded packet processing architecture |
WO2006086101A3 (en) * | 2005-02-08 | 2009-04-16 | Cisco Tech Inc | Multi-threaded packet processing architecture |
US7523131B2 (en) | 2005-02-10 | 2009-04-21 | Oracle International Corporation | Techniques for efficiently storing and querying in a relational database, XML documents conforming to schemas that contain cyclic constructs |
US7383503B2 (en) | 2005-02-23 | 2008-06-03 | Microsoft Corporation | Filtering a collection of items |
US7406476B1 (en) * | 2005-04-04 | 2008-07-29 | Apple Inc. | Updating a data structure |
US8490015B2 (en) | 2005-04-15 | 2013-07-16 | Microsoft Corporation | Task dialog and programming interface for same |
US7568220B2 (en) | 2005-04-19 | 2009-07-28 | Cisco Technology, Inc. | Connecting VPN users in a public network |
US20060236378A1 (en) * | 2005-04-19 | 2006-10-19 | Burshan Chen Y | Connecting VPN users in a public network |
US20060235840A1 (en) * | 2005-04-19 | 2006-10-19 | Anand Manikutty | Optimization of queries over XML views that are based on union all operators |
US7685150B2 (en) | 2005-04-19 | 2010-03-23 | Oracle International Corporation | Optimization of queries over XML views that are based on union all operators |
US11425116B2 (en) | 2005-04-21 | 2022-08-23 | Justservice.Net Llc | Data backup and transfer system, method and computer program product |
US7614016B2 (en) | 2005-04-21 | 2009-11-03 | Microsoft Corporation | Multiple roots in navigation pane |
US11436095B2 (en) | 2005-04-21 | 2022-09-06 | Justservice.Net Llc | Data backup, storage, transfer and retrieval system, method and computer program product |
US10387270B2 (en) | 2005-04-21 | 2019-08-20 | Justservice.Net Llc | Data backup, storage, transfer and retrieval system, method and computer program product |
US10476868B2 (en) | 2005-04-21 | 2019-11-12 | Justservice.Net Llc | Data backup and transfer system, method and computer program product |
US7162488B2 (en) | 2005-04-22 | 2007-01-09 | Microsoft Corporation | Systems, methods, and user interfaces for storing, searching, navigating, and retrieving electronic information |
US7949941B2 (en) | 2005-04-22 | 2011-05-24 | Oracle International Corporation | Optimizing XSLT based on input XML document structure description and translating XSLT into equivalent XQuery expressions |
US8522154B2 (en) | 2005-04-22 | 2013-08-27 | Microsoft Corporation | Scenario specialization of file browser |
US8195646B2 (en) | 2005-04-22 | 2012-06-05 | Microsoft Corporation | Systems, methods, and user interfaces for storing, searching, navigating, and retrieving electronic information |
US20090193110A1 (en) * | 2005-05-05 | 2009-07-30 | International Business Machines Corporation | Autonomic Storage Provisioning to Enhance Storage Virtualization Infrastructure Availability |
US20060277221A1 (en) * | 2005-06-01 | 2006-12-07 | Green Hills Software, Inc. | Transactional file system with client partitioning |
US8224837B2 (en) | 2005-06-29 | 2012-07-17 | Oracle International Corporation | Method and mechanism for supporting virtual content in performing file operations at a RDBMS |
US20070005603A1 (en) * | 2005-06-29 | 2007-01-04 | Namit Jain | Sharing state information among a plurality of file operation servers |
US7809675B2 (en) | 2005-06-29 | 2010-10-05 | Oracle International Corporation | Sharing state information among a plurality of file operation servers |
US20070005555A1 (en) * | 2005-06-29 | 2007-01-04 | Namit Jain | Method and mechanism for supporting virtual content in performing file operations at a RDBMS |
US7409397B2 (en) | 2005-06-29 | 2008-08-05 | Oracle International Corporation | Supporting replication among a plurality of file operation servers |
US20070005604A1 (en) * | 2005-06-29 | 2007-01-04 | Namit Jain | Supporting replication among a plurality of file operation servers |
US8166059B2 (en) | 2005-07-08 | 2012-04-24 | Oracle International Corporation | Optimization of queries on a repository based on constraints on how the data is stored in the repository |
US20070011167A1 (en) * | 2005-07-08 | 2007-01-11 | Muralidhar Krishnaprasad | Optimization of queries on a repository based on constraints on how the data is stored in the repository |
US10489044B2 (en) | 2005-07-13 | 2019-11-26 | Microsoft Technology Licensing, Llc | Rich drag drop user interface |
US7665028B2 (en) | 2005-07-13 | 2010-02-16 | Microsoft Corporation | Rich drag drop user interface |
US20070022148A1 (en) * | 2005-07-20 | 2007-01-25 | Akers David G | Reserving an area of a storage medium for a file |
US7406478B2 (en) | 2005-08-11 | 2008-07-29 | Oracle International Corporation | Flexible handling of datetime XML datatype in a database system |
US20070038649A1 (en) * | 2005-08-11 | 2007-02-15 | Abhyudaya Agrawal | Flexible handling of datetime XML datatype in a database system |
US8208477B1 (en) * | 2005-08-24 | 2012-06-26 | Hewlett-Packard Development Company, L.P. | Data-dependent overlay network |
US20070078961A1 (en) * | 2005-09-14 | 2007-04-05 | Seiichi Kumano | Method for distributing data input/output load |
US20080195671A1 (en) * | 2005-10-01 | 2008-08-14 | Te-Hyun Kim | Device Management System Using Log Management Object and Method for Generating and Controlling Logging Data Therein |
US7917476B2 (en) * | 2005-10-01 | 2011-03-29 | Lg Electronics Inc. | Device management system using log management object and method for generating and controlling logging data therein |
US8073841B2 (en) | 2005-10-07 | 2011-12-06 | Oracle International Corporation | Optimizing correlated XML extracts |
US9367642B2 (en) | 2005-10-07 | 2016-06-14 | Oracle International Corporation | Flexible storage of XML collections within an object-relational database |
US8554789B2 (en) | 2005-10-07 | 2013-10-08 | Oracle International Corporation | Managing cyclic constructs of XML schema in a rdbms |
US8024368B2 (en) | 2005-10-07 | 2011-09-20 | Oracle International Corporation | Generating XML instances from flat files |
US20070083538A1 (en) * | 2005-10-07 | 2007-04-12 | Roy Indroniel D | Generating XML instances from flat files |
US20070083529A1 (en) * | 2005-10-07 | 2007-04-12 | Oracle International Corporation | Managing cyclic constructs of XML schema in a rdbms |
US7739426B1 (en) | 2005-10-31 | 2010-06-15 | Cisco Technology, Inc. | Descriptor transfer logic |
US20110035728A1 (en) * | 2005-11-07 | 2011-02-10 | Slawomir Adam Janczewski | Object-Oriented Support for Dynamic Assignment of Parallel Computing Resources |
US8464217B2 (en) * | 2005-11-07 | 2013-06-11 | Slawomir Adam Janczewski | Object-oriented support for dynamic assignment of parallel computing resources |
US7805602B1 (en) | 2005-11-10 | 2010-09-28 | Cisco Technology, Inc. | Prioritized call admission control for internet key exchange |
US8949455B2 (en) | 2005-11-21 | 2015-02-03 | Oracle International Corporation | Path-caching mechanism to improve performance of path-related operations in a repository |
US9898545B2 (en) | 2005-11-21 | 2018-02-20 | Oracle International Corporation | Path-caching mechanism to improve performance of path-related operations in a repository |
US20070168720A1 (en) * | 2005-11-30 | 2007-07-19 | Oracle International Corporation | Method and apparatus for providing fault tolerance in a collaboration environment |
US20070130157A1 (en) * | 2005-12-05 | 2007-06-07 | Namit Jain | Techniques for performing file operations involving a link at a database management system |
US7610304B2 (en) | 2005-12-05 | 2009-10-27 | Oracle International Corporation | Techniques for performing file operations involving a link at a database management system |
USRE45729E1 (en) * | 2005-12-12 | 2015-10-06 | Electronics And Telecommunications Research Institute | Apparatus and method for managing application context |
US8015165B2 (en) | 2005-12-14 | 2011-09-06 | Oracle International Corporation | Efficient path-based operations while searching across versions in a repository |
US20070136382A1 (en) * | 2005-12-14 | 2007-06-14 | Sam Idicula | Efficient path-based operations while searching across versions in a repository |
US7933928B2 (en) | 2005-12-22 | 2011-04-26 | Oracle International Corporation | Method and mechanism for loading XML documents into memory |
US20070198653A1 (en) * | 2005-12-30 | 2007-08-23 | Kurt Jarnagin | Systems and methods for remote computer-based analysis of user-provided chemogenomic data |
WO2007079384A3 (en) * | 2005-12-30 | 2008-05-08 | Iconix Biosciences Inc | Systems and methods for remote computer-based analysis of user-provided chemogenomic data |
US20070162579A1 (en) * | 2006-01-09 | 2007-07-12 | Microsoft Corporation | Dynamic storage of documents |
US8024427B2 (en) * | 2006-01-09 | 2011-09-20 | Microsoft Corporation | Dynamic storage of documents |
US20070162441A1 (en) * | 2006-01-12 | 2007-07-12 | Sam Idicula | Efficient queriability of version histories in a repository |
US7730032B2 (en) * | 2006-01-12 | 2010-06-01 | Oracle International Corporation | Efficient queriability of version histories in a repository |
US8788697B2 (en) * | 2006-02-13 | 2014-07-22 | Panasonic Corporation | File transmitting apparatus, file transmitting method, file receiving apparatus, file receiving method, and file transfer system |
US20070192470A1 (en) * | 2006-02-13 | 2007-08-16 | Kazunari Fujiwara | File transfer system |
US10303783B2 (en) | 2006-02-16 | 2019-05-28 | Callplex, Inc. | Distributed virtual storage of portable media files |
US8996586B2 (en) | 2006-02-16 | 2015-03-31 | Callplex, Inc. | Virtual storage of portable media files |
US20070198463A1 (en) * | 2006-02-16 | 2007-08-23 | Callplex, Inc. | Virtual storage of portable media files |
US20100030827A1 (en) * | 2006-02-16 | 2010-02-04 | Callplex, Inc. | Distributed virtual storage of portable media files |
US9229967B2 (en) | 2006-02-22 | 2016-01-05 | Oracle International Corporation | Efficient processing of path related operations on data organized hierarchically in an RDBMS |
US8065499B2 (en) | 2006-02-22 | 2011-11-22 | Oracle America, Inc. | Methods and apparatus to implement parallel transactions |
US7669015B2 (en) | 2006-02-22 | 2010-02-23 | Sun Microsystems Inc. | Methods and apparatus to implement parallel transactions |
US8028133B2 (en) * | 2006-02-22 | 2011-09-27 | Oracle America, Inc. | Globally incremented variable or clock based methods and apparatus to implement parallel transactions |
US20070239943A1 (en) * | 2006-02-22 | 2007-10-11 | David Dice | Methods and apparatus to implement parallel transactions |
US20070198979A1 (en) * | 2006-02-22 | 2007-08-23 | David Dice | Methods and apparatus to implement parallel transactions |
US20070198519A1 (en) * | 2006-02-22 | 2007-08-23 | David Dice | Methods and apparatus to implement parallel transactions |
US20070198792A1 (en) * | 2006-02-22 | 2007-08-23 | David Dice | Methods and apparatus to implement parallel transactions |
US20070198545A1 (en) * | 2006-02-22 | 2007-08-23 | Fei Ge | Efficient processing of path related operations on data organized hierarchically in an RDBMS |
US20070239952A1 (en) * | 2006-04-10 | 2007-10-11 | Wen-Shyang Hwang | System And Method For Remote Mirror Data Backup Over A Network |
US7464239B2 (en) * | 2006-04-10 | 2008-12-09 | Industrial Technology Research Institute | System and method for remote mirror data backup over a network |
US7743018B2 (en) * | 2006-04-10 | 2010-06-22 | International Business Machines Corporation | Transient storage in distributed collaborative computing environments |
US20070239695A1 (en) * | 2006-04-10 | 2007-10-11 | Al Chakra | Transient storage in distributed collaborative computing environments |
US7702869B1 (en) | 2006-04-28 | 2010-04-20 | Netapp, Inc. | System and method for verifying the consistency of mirrored data sets |
US7975288B2 (en) * | 2006-05-02 | 2011-07-05 | Oracle International Corporation | Method and apparatus for imposing quorum-based access control in a computer system |
US20070261103A1 (en) * | 2006-05-02 | 2007-11-08 | Steven Viavant | Method and apparatus for imposing quorum-based access control in a computer system |
US7818390B2 (en) * | 2006-05-18 | 2010-10-19 | Tsinghua University | Method for transferring data between terminal apparatuses in a transparent computation system |
US20070271239A1 (en) * | 2006-05-18 | 2007-11-22 | Tsinghua University | Method for transferring data between terminal apparatuses in a transparent computation system |
US11082723B2 (en) * | 2006-05-24 | 2021-08-03 | Time Warner Cable Enterprises Llc | Secondary content insertion apparatus and methods |
US20170006317A1 (en) * | 2006-05-24 | 2017-01-05 | Time Warner Cable Enterprises Llc | Secondary content insertion apparatus and methods |
US10623462B2 (en) | 2006-05-24 | 2020-04-14 | Time Warner Cable Enterprises Llc | Personal content server apparatus and methods |
US8510292B2 (en) | 2006-05-25 | 2013-08-13 | Oracle International Coporation | Isolation for applications working on shared XML data |
US8930348B2 (en) * | 2006-05-25 | 2015-01-06 | Oracle International Corporation | Isolation for applications working on shared XML data |
US20130318109A1 (en) * | 2006-05-25 | 2013-11-28 | Oracle International Corporation | Isolation for applications working on shared xml data |
US8161075B1 (en) * | 2006-05-31 | 2012-04-17 | Verizon Laboratories Inc. | Systems and methods for managing integrated and customizable data |
US8645321B1 (en) | 2006-05-31 | 2014-02-04 | Verizon Data Services Llc | Asynchronous data integrity for enterprise computing |
US8893110B2 (en) | 2006-06-08 | 2014-11-18 | Qualcomm Incorporated | Device management in a network |
US8589151B2 (en) * | 2006-06-21 | 2013-11-19 | Harris Corporation | Vocoder and associated method that transcodes between mixed excitation linear prediction (MELP) vocoders with different speech frame rates |
US20070299659A1 (en) * | 2006-06-21 | 2007-12-27 | Harris Corporation | Vocoder and associated method that transcodes between mixed excitation linear prediction (melp) vocoders with different speech frame rates |
US7844584B1 (en) * | 2006-06-23 | 2010-11-30 | Netapp, Inc. | System and method for persistently storing lock state information |
US7499909B2 (en) | 2006-07-03 | 2009-03-03 | Oracle International Corporation | Techniques of using a relational caching framework for efficiently handling XML queries in the mid-tier data caching |
US20080022392A1 (en) * | 2006-07-05 | 2008-01-24 | Cisco Technology, Inc. | Resolution of attribute overlap on authentication, authorization, and accounting servers |
US20080016148A1 (en) * | 2006-07-12 | 2008-01-17 | Arsenal Digital Solutions Usa, Inc. | Systems, methods and computer program products for performing remote data storage for client devices |
US8019872B2 (en) * | 2006-07-12 | 2011-09-13 | International Business Machines Corporation | Systems, methods and computer program products for performing remote data storage for client devices |
US8752044B2 (en) | 2006-07-27 | 2014-06-10 | Qualcomm Incorporated | User experience and dependency management in a mobile device |
US9081638B2 (en) | 2006-07-27 | 2015-07-14 | Qualcomm Incorporated | User experience and dependency management in a mobile device |
US20080052556A1 (en) * | 2006-08-25 | 2008-02-28 | Donovan Steven R | System and method for maintaining resiliency of subscriptions to an event server |
US8046626B2 (en) * | 2006-08-25 | 2011-10-25 | Cisco Technology, Inc. | System and method for maintaining resiliency of subscriptions to an event server |
US20080104699A1 (en) * | 2006-09-28 | 2008-05-01 | Microsoft Corporation | Secure service computation |
US20080082533A1 (en) * | 2006-09-28 | 2008-04-03 | Tak Fung Wang | Persistent locks/resources for concurrency control |
US20080114896A1 (en) * | 2006-10-05 | 2008-05-15 | Holt John M | Asynchronous data transmission |
US8712884B2 (en) | 2006-10-06 | 2014-04-29 | Syncada Llc | Transaction finance processing system and approach |
US7933935B2 (en) | 2006-10-16 | 2011-04-26 | Oracle International Corporation | Efficient partitioning technique while managing large XML documents |
US7797310B2 (en) | 2006-10-16 | 2010-09-14 | Oracle International Corporation | Technique to estimate the cost of streaming evaluation of XPaths |
US7761485B2 (en) * | 2006-10-25 | 2010-07-20 | Zeugma Systems Inc. | Distributed database |
US20100023552A1 (en) * | 2006-10-25 | 2010-01-28 | Zeugma Systems Inc. | Serializable objects and a database thereof |
US20100017416A1 (en) * | 2006-10-25 | 2010-01-21 | Zeugma Systems Inc. | Serializable objects and a database thereof |
US20080104085A1 (en) * | 2006-10-25 | 2008-05-01 | Papoutsakis Emmanuel A | Distributed database |
US7620526B2 (en) | 2006-10-25 | 2009-11-17 | Zeugma Systems Inc. | Technique for accessing a database of serializable objects using field values corresponding to fields of an object marked with the same index value |
US20080104009A1 (en) * | 2006-10-25 | 2008-05-01 | Jonathan Back | Serializable objects and a database thereof |
US20080133654A1 (en) * | 2006-12-01 | 2008-06-05 | Chei-Yol Kim | Network block device using network asynchronous i/o |
US20080083031A1 (en) * | 2006-12-20 | 2008-04-03 | Microsoft Corporation | Secure service computation |
US8677270B2 (en) | 2007-05-04 | 2014-03-18 | Microsoft Corporation | Live companion user interface |
US20080276195A1 (en) * | 2007-05-04 | 2008-11-06 | Microsoft Corporation | Live companion window |
US9274674B2 (en) | 2007-05-04 | 2016-03-01 | Microsoft Technology Licensing, Llc | Live companion user interface |
US9135279B2 (en) | 2007-05-04 | 2015-09-15 | Microsoft Technology Licensing, Llc | Mesh-managing data across a distributed set of devices |
US8954507B2 (en) | 2007-06-22 | 2015-02-10 | Microsoft Corporation | Gathering and using awareness information |
US20080320025A1 (en) * | 2007-06-22 | 2008-12-25 | Microsoft Corporation | Gathering and using awareness information |
US7917604B1 (en) | 2007-06-29 | 2011-03-29 | Emc Corporation | Techniques for operating a data storage assembly via a series of web pages and a commit-at-the-end, wizard-style behavior |
US7836098B2 (en) | 2007-07-13 | 2010-11-16 | Oracle International Corporation | Accelerating value-based lookup of XML document in XQuery |
US7840609B2 (en) | 2007-07-31 | 2010-11-23 | Oracle International Corporation | Using sibling-count in XML indexes to optimize single-path queries |
US8938539B2 (en) * | 2007-08-20 | 2015-01-20 | Chepro Co., Ltd. | Communication system applicable to communications between client terminals and a server |
US20090055472A1 (en) * | 2007-08-20 | 2009-02-26 | Reiji Fukuda | Communication system, communication method, communication control program and program recording medium |
US8140474B2 (en) * | 2007-09-13 | 2012-03-20 | Intel Corporation | Aggregation of file/directory structures |
US20090077141A1 (en) * | 2007-09-13 | 2009-03-19 | Frank Hady | Aggregation of file/directory structures |
US8195700B2 (en) * | 2007-09-28 | 2012-06-05 | Microsoft Corporation | Distributed storage for collaboration servers |
US20090089341A1 (en) * | 2007-09-28 | 2009-04-02 | Microsoft Corporation | Distriuted storage for collaboration servers |
US8650216B2 (en) | 2007-09-28 | 2014-02-11 | Microsoft Corporation | Distributed storage for collaboration servers |
US20090112870A1 (en) * | 2007-10-31 | 2009-04-30 | Microsoft Corporation | Management of distributed storage |
US20100260067A1 (en) * | 2007-11-08 | 2010-10-14 | Nokia Corporation | Connectivity architecture for service discovery |
US8493888B2 (en) * | 2007-11-08 | 2013-07-23 | Nokia Corporation | Connectivity architecture for service discovery |
US7991768B2 (en) | 2007-11-08 | 2011-08-02 | Oracle International Corporation | Global query normalization to improve XML index based rewrites for path subsetted index |
US8543898B2 (en) | 2007-11-09 | 2013-09-24 | Oracle International Corporation | Techniques for more efficient generation of XML events from XML data sources |
US8250062B2 (en) | 2007-11-09 | 2012-08-21 | Oracle International Corporation | Optimized streaming evaluation of XML queries |
US9842090B2 (en) | 2007-12-05 | 2017-12-12 | Oracle International Corporation | Efficient streaming evaluation of XPaths on binary-encoded XML schema-based documents |
US8447938B2 (en) * | 2008-01-04 | 2013-05-21 | International Business Machines Corporation | Backing up a deduplicated filesystem to disjoint media |
US20090177855A1 (en) * | 2008-01-04 | 2009-07-09 | International Business Machines Corporation | Backing up a de-duplicated computer file-system of a computer system |
US8275884B2 (en) * | 2008-01-15 | 2012-09-25 | Samsung Electronics Co., Ltd. | Method and system for securely sharing content |
US20090182860A1 (en) * | 2008-01-15 | 2009-07-16 | Samsung Electronics Co., Ltd. | Method and system for securely sharing content |
US8751337B2 (en) | 2008-01-25 | 2014-06-10 | Syncada Llc | Inventory-based payment processing system and approach |
US8959248B2 (en) | 2008-02-22 | 2015-02-17 | Microsoft Corporation | Personal computing environment with virtual computing device |
US20090216908A1 (en) * | 2008-02-22 | 2009-08-27 | Microsoft Corporation | Personal Computing Environment With Virtual Computing Device |
US8429196B2 (en) | 2008-06-06 | 2013-04-23 | Oracle International Corporation | Fast extraction of scalar values from binary encoded XML |
US9100246B1 (en) * | 2008-06-19 | 2015-08-04 | Symantec Corporation | Distributed application virtualization |
US20090319058A1 (en) * | 2008-06-20 | 2009-12-24 | Invensys Systems, Inc. | Systems and methods for immersive interaction with actual and/or simulated facilities for process, environmental and industrial control |
US8594814B2 (en) | 2008-06-20 | 2013-11-26 | Invensys Systems, Inc. | Systems and methods for immersive interaction with actual and/or simulated facilities for process, environmental and industrial control |
US20110154462A1 (en) * | 2008-07-08 | 2011-06-23 | Gemalto Sa | Method for managing an access from a remote device to data accessible from a local device and corresponding system |
US10038681B2 (en) * | 2008-07-08 | 2018-07-31 | Gemalto Sa | Method for managing an access from a remote device to data accessible from a local device and corresponding system |
US7958112B2 (en) | 2008-08-08 | 2011-06-07 | Oracle International Corporation | Interleaving query transformations for XML indexes |
US20100064033A1 (en) * | 2008-09-08 | 2010-03-11 | Franco Travostino | Integration of an internal cloud infrastructure with existing enterprise services and systems |
US9880891B2 (en) | 2008-09-30 | 2018-01-30 | Hewlett-Packard Development Company, L.P. | Assignment and failover of resources |
US20100131545A1 (en) * | 2008-11-26 | 2010-05-27 | Yahoo! Inc. | Distribution Data Items Within Geographically Distributed Databases |
US8495021B2 (en) * | 2008-11-26 | 2013-07-23 | Yahoo! Inc. | Distribution data items within geographically distributed databases |
US9344401B2 (en) | 2009-02-04 | 2016-05-17 | Citrix Systems, Inc. | Methods and systems for providing translations of data retrieved from a storage system in a cloud computing environment |
US20100198972A1 (en) * | 2009-02-04 | 2010-08-05 | Steven Michael Umbehocker | Methods and Systems for Automated Management of Virtual Resources In A Cloud Computing Environment |
US8918488B2 (en) * | 2009-02-04 | 2014-12-23 | Citrix Systems, Inc. | Methods and systems for automated management of virtual resources in a cloud computing environment |
US8775544B2 (en) | 2009-02-04 | 2014-07-08 | Citrix Systems, Inc. | Methods and systems for dynamically switching between communications protocols |
US9391952B2 (en) | 2009-02-04 | 2016-07-12 | Citrix Systems, Inc. | Methods and systems for dynamically switching between communications protocols |
US20100199276A1 (en) * | 2009-02-04 | 2010-08-05 | Steven Michael Umbehocker | Methods and Systems for Dynamically Switching Between Communications Protocols |
US20100199037A1 (en) * | 2009-02-04 | 2010-08-05 | Steven Michael Umbehocker | Methods and Systems for Providing Translations of Data Retrieved From a Storage System in a Cloud Computing Environment |
US8793223B1 (en) | 2009-02-09 | 2014-07-29 | Netapp, Inc. | Online data consistency checking in a network storage system with optional committal of remedial changes |
US9170883B2 (en) | 2009-02-09 | 2015-10-27 | Netapp, Inc. | Online data consistency checking in a network storage system with optional committal of remedial changes |
US10693970B2 (en) | 2009-02-17 | 2020-06-23 | Netapp Inc. | Servicing of storage device software components of nodes of a cluster storage system |
US9215279B1 (en) * | 2009-02-17 | 2015-12-15 | Netapp, Inc. | Servicing of storage device software components of nodes of a cluster storage system |
US10404711B2 (en) | 2009-02-17 | 2019-09-03 | Netapp, Inc. | Servicing of network software components of nodes of a cluster storage system |
US9325790B1 (en) | 2009-02-17 | 2016-04-26 | Netapp, Inc. | Servicing of network software components of nodes of a cluster storage system |
US11290545B2 (en) * | 2009-02-17 | 2022-03-29 | Netapp, Inc. | Servicing of storage device software components of nodes of a cluster storage system |
US11546337B2 (en) * | 2009-02-17 | 2023-01-03 | Netapp, Inc. | Servicing of network software components of nodes of a cluster storage system |
US9866556B2 (en) * | 2009-03-12 | 2018-01-09 | Cisco Technology, Inc. | Common internet file system proxy authentication of multiple servers |
US20100235901A1 (en) * | 2009-03-12 | 2010-09-16 | Richard Adam Simpkins | Cifs proxy authentication |
US20170026372A1 (en) * | 2009-03-12 | 2017-01-26 | Cisco Technology, Inc. | Common internet file system proxy authentication of multiple servers |
US9338165B2 (en) * | 2009-03-12 | 2016-05-10 | Cisco Technology, Inc. | Common internet file system proxy authentication of multiple servers |
US20100250867A1 (en) * | 2009-03-30 | 2010-09-30 | The Boeing Company | Computer architectures using shared storage |
US20120185652A1 (en) * | 2009-03-30 | 2012-07-19 | The Boeing Company | Computer architectures using shared storage |
US8601309B2 (en) * | 2009-03-30 | 2013-12-03 | The Boeing Company | Computer architectures using shared storage |
US20100257374A1 (en) * | 2009-03-30 | 2010-10-07 | The Boeing Company | Computer architectures using shared storage |
US20100250700A1 (en) * | 2009-03-30 | 2010-09-30 | Sun Microsystems, Inc. | Data storage system and method of processing a data access request |
US8601307B2 (en) * | 2009-03-30 | 2013-12-03 | The Boeing Company | Computer architectures using shared storage |
US20120185653A1 (en) * | 2009-03-30 | 2012-07-19 | The Boeing Company | Computer architectures using shared storage |
US9164689B2 (en) * | 2009-03-30 | 2015-10-20 | Oracle America, Inc. | Data storage system and method of processing a data access request |
US20120185725A1 (en) * | 2009-03-30 | 2012-07-19 | The Boeing Company | Computer architectures using shared storage |
US9098562B2 (en) | 2009-03-30 | 2015-08-04 | The Boeing Company | Computer architectures using shared storage |
US8171337B2 (en) * | 2009-03-30 | 2012-05-01 | The Boeing Company | Computer architectures using shared storage |
US8972515B2 (en) | 2009-03-30 | 2015-03-03 | The Boeing Company | Computer architectures using shared storage |
US9690839B2 (en) | 2009-03-30 | 2017-06-27 | The Boeing Company | Computer architectures using shared storage |
US20100251010A1 (en) * | 2009-03-30 | 2010-09-30 | The Boeing Company | Computer architectures using shared storage |
US8601308B2 (en) * | 2009-03-30 | 2013-12-03 | The Boeing Company | Computer architectures using shared storage |
US8560639B2 (en) | 2009-04-24 | 2013-10-15 | Microsoft Corporation | Dynamic placement of replica data |
US8769055B2 (en) | 2009-04-24 | 2014-07-01 | Microsoft Corporation | Distributed backup and versioning |
US8935366B2 (en) | 2009-04-24 | 2015-01-13 | Microsoft Corporation | Hybrid distributed and cloud backup architecture |
US20100274765A1 (en) * | 2009-04-24 | 2010-10-28 | Microsoft Corporation | Distributed backup and versioning |
US20100274982A1 (en) * | 2009-04-24 | 2010-10-28 | Microsoft Corporation | Hybrid distributed and cloud backup architecture |
US20100274762A1 (en) * | 2009-04-24 | 2010-10-28 | Microsoft Corporation | Dynamic placement of replica data |
US8463964B2 (en) | 2009-05-29 | 2013-06-11 | Invensys Systems, Inc. | Methods and apparatus for control configuration with enhanced change-tracking |
US20100305721A1 (en) * | 2009-05-29 | 2010-12-02 | Invensys Systems, Inc. | Methods and apparatus for control configuration with control objects that self-define tracked parameters |
US20100306177A1 (en) * | 2009-05-29 | 2010-12-02 | Khosravi Hormuzd M | Host operating system independent storage-related remote access and operations |
US8127060B2 (en) | 2009-05-29 | 2012-02-28 | Invensys Systems, Inc | Methods and apparatus for control configuration with control objects that are fieldbus protocol-aware |
US8122434B2 (en) | 2009-05-29 | 2012-02-21 | Invensys Sytems, Inc. | Methods and apparatus for control configuration control objects associated with a track attribute for selecting configuration information |
US20100325729A1 (en) * | 2009-06-19 | 2010-12-23 | Khosravi Hormuzd M | Determination by circuitry of presence of authorized and/or malicious data |
US8214902B2 (en) | 2009-06-19 | 2012-07-03 | Intel Corporation | Determination by circuitry of presence of authorized and/or malicious data |
US8307175B2 (en) | 2009-06-26 | 2012-11-06 | Intel Corporation | Data recovery and overwrite independent of operating system |
US20100332744A1 (en) * | 2009-06-26 | 2010-12-30 | Khosravi Hormuzd M | Data recovery and overwrite independent of operating system |
US11308035B2 (en) * | 2009-06-30 | 2022-04-19 | Commvault Systems, Inc. | Data object store and server for a cloud storage environment, including data deduplication and data management across multiple cloud storage sites |
US11907168B2 (en) | 2009-06-30 | 2024-02-20 | Commvault Systems, Inc. | Data object store and server for a cloud storage environment, including data deduplication and data management across multiple cloud storage sites |
US8229972B2 (en) | 2009-08-28 | 2012-07-24 | International Business Machines Corporation | Extended data storage system |
US20110055272A1 (en) * | 2009-08-28 | 2011-03-03 | International Business Machines Corporation | Extended data storage system |
US8468176B2 (en) * | 2009-08-28 | 2013-06-18 | International Business Machines Corporation | Extended data storage system |
US20120233223A1 (en) * | 2009-08-28 | 2012-09-13 | International Business Machines Corporation | Extended data storage system |
US20110078384A1 (en) * | 2009-09-30 | 2011-03-31 | Ganesh Kumar | Memory mirroring and migration at home agent |
US8799586B2 (en) * | 2009-09-30 | 2014-08-05 | Intel Corporation | Memory mirroring and migration at home agent |
CN102033715A (en) * | 2009-09-30 | 2011-04-27 | 英特尔公司 | Memory mirroring and migration at home agent |
US20110119364A1 (en) * | 2009-11-18 | 2011-05-19 | Icelero Llc | Method and system for cloud computing services for use with client devices having memory cards |
US9727384B2 (en) * | 2009-11-18 | 2017-08-08 | Satellite Technologies, Llc | Method and system for cloud computing services for use with client devices having memory cards |
US9575985B2 (en) | 2009-12-07 | 2017-02-21 | Novell, Inc. | Distributed lock administration |
US20110137879A1 (en) * | 2009-12-07 | 2011-06-09 | Saurabh Dubey | Distributed lock administration |
US11340788B2 (en) * | 2009-12-29 | 2022-05-24 | International Business Machines Corporation | Security checks for proxied requests |
US20110178991A1 (en) * | 2010-01-20 | 2011-07-21 | Siemens Aktiengesellschaft | Method for operating an archiving system for data sets, in particular medical image data sets, and archiving system |
US8527549B2 (en) * | 2010-02-22 | 2013-09-03 | Sookasa Inc. | Cloud based operating and virtual file system |
US20110252071A1 (en) * | 2010-02-22 | 2011-10-13 | Sookasa Inc | Cloud Based Operating and Virtual File System |
US9244015B2 (en) | 2010-04-20 | 2016-01-26 | Hewlett-Packard Development Company, L.P. | Self-arranging, luminescence-enhancement device for surface-enhanced luminescence |
US11616992B2 (en) | 2010-04-23 | 2023-03-28 | Time Warner Cable Enterprises Llc | Apparatus and methods for dynamic secondary content and data insertion and delivery |
US9678968B1 (en) * | 2010-05-03 | 2017-06-13 | Panzura, Inc. | Deleting a file from a distributed filesystem |
US8626871B2 (en) * | 2010-05-19 | 2014-01-07 | Cleversafe, Inc. | Accessing a global vault in multiple dispersed storage networks |
US20110289215A1 (en) * | 2010-05-19 | 2011-11-24 | Cleversafe, Inc. | Accessing a global vault in multiple dispersed storage networks |
US20110289306A1 (en) * | 2010-05-21 | 2011-11-24 | Khosravi Hormuzd M | Method and apparatus for secure scan of data storage device from remote server |
US20110289146A1 (en) * | 2010-05-21 | 2011-11-24 | Hormuzd Khosravi | Method and apparatus allowing scan of data storage device from remote server |
US8489686B2 (en) * | 2010-05-21 | 2013-07-16 | Intel Corporation | Method and apparatus allowing scan of data storage device from remote server |
US8856534B2 (en) * | 2010-05-21 | 2014-10-07 | Intel Corporation | Method and apparatus for secure scan of data storage device from remote server |
US11657436B2 (en) | 2010-06-15 | 2023-05-23 | Oracle International Corporation | Managing storage volume in a virtual computing infrastructure |
US10970757B2 (en) | 2010-06-15 | 2021-04-06 | Oracle International Corporation | Organizing data in a virtual computing infrastructure |
US10282764B2 (en) | 2010-06-15 | 2019-05-07 | Oracle International Corporation | Organizing data in a virtual computing infrastructure |
US10715457B2 (en) | 2010-06-15 | 2020-07-14 | Oracle International Corporation | Coordination of processes in cloud computing environments |
US8331855B2 (en) | 2010-07-12 | 2012-12-11 | Invensys Systems, Inc. | Methods and apparatus for process control with improved communication links |
US9095002B2 (en) | 2010-07-12 | 2015-07-28 | Invensys Systems, Inc. | Methods and apparatus for process control with improved communication links |
US9098462B1 (en) | 2010-09-14 | 2015-08-04 | The Boeing Company | Communications via shared memory |
US9274058B2 (en) | 2010-10-20 | 2016-03-01 | Hewlett-Packard Development Company, L.P. | Metallic-nanofinger device for chemical sensing |
US9594022B2 (en) | 2010-10-20 | 2017-03-14 | Hewlett-Packard Development Company, L.P. | Chemical-analysis device integrated with metallic-nanofinger device for chemical sensing |
US9279767B2 (en) | 2010-10-20 | 2016-03-08 | Hewlett-Packard Development Company, L.P. | Chemical-analysis device integrated with metallic-nanofinger device for chemical sensing |
US9805076B2 (en) | 2010-12-13 | 2017-10-31 | Oracle International Corporation | Extensible RDF databases |
US11863380B2 (en) | 2011-01-03 | 2024-01-02 | Planetary Data LLC | Community internet drive |
US11218367B2 (en) | 2011-01-03 | 2022-01-04 | Planetary Data LLC | Community internet drive |
US8738725B2 (en) | 2011-01-03 | 2014-05-27 | Planetary Data LLC | Community internet drive |
US10177978B2 (en) | 2011-01-03 | 2019-01-08 | Planetary Data LLC | Community internet drive |
US9800464B2 (en) | 2011-01-03 | 2017-10-24 | Planetary Data LLC | Community internet drive |
US9081839B2 (en) | 2011-01-28 | 2015-07-14 | Oracle International Corporation | Push replication for use with a distributed data grid |
US10482475B2 (en) | 2011-02-10 | 2019-11-19 | Adp Dealer Services, Inc. | Systems and methods for providing targeted advertising |
US20120210399A1 (en) * | 2011-02-16 | 2012-08-16 | Waldeck Technology, Llc | Location-enabled access control lists for real-world devices |
US10127077B2 (en) * | 2011-04-26 | 2018-11-13 | Oracle International Corporation | Event distribution pattern for use with a distributed data grid |
US20120278817A1 (en) * | 2011-04-26 | 2012-11-01 | Oracle International Corporation | Event distribution pattern for use with a distributed data grid |
US9519555B2 (en) * | 2011-05-23 | 2016-12-13 | Microsoft Technology Licensing, Llc | Synchronous replication in a distributed storage environment |
US9251021B2 (en) | 2011-05-23 | 2016-02-02 | Bradley Gene Calder | Asynchronous replication in a distributed storage environment |
US20120303576A1 (en) * | 2011-05-23 | 2012-11-29 | Microsoft Corporation | Synchronous replication in a distributed storage environment |
US11720594B2 (en) | 2011-05-23 | 2023-08-08 | Microsoft Technology Licensing, Llc | Synchronous replication in a distributed storage environment |
US20130007065A1 (en) * | 2011-06-30 | 2013-01-03 | Accenture Global Services Limited | Distributed computing system hierarchal structure manipulation |
US8856190B2 (en) * | 2011-06-30 | 2014-10-07 | Accenture Global Services Limited | Distributed computing system hierarchal structure manipulation |
US8943413B2 (en) * | 2011-07-27 | 2015-01-27 | International Business Machines Corporation | Visually representing and managing access control of resources |
US9137253B2 (en) * | 2011-07-27 | 2015-09-15 | International Business Machines Corporation | Visually representing and managing access control of resources |
US20140245429A1 (en) * | 2011-07-27 | 2014-08-28 | International Business Machines Corporation | Visually representing and managing access control of resources |
US9231958B2 (en) * | 2011-07-27 | 2016-01-05 | International Business Machines Corporation | Visually representing and managing access control of resources |
US20150163227A1 (en) * | 2011-07-27 | 2015-06-11 | International Business Machines Corporation | Visually representing and managing access control of resources |
US11025715B2 (en) | 2011-08-29 | 2021-06-01 | At&T Intellectual Property I, L.P. | Cloud-to-cloud peering |
US9432454B2 (en) | 2011-08-29 | 2016-08-30 | At&T Intellectual Property I, L.P. | Cloud-to-cloud peering |
US8434080B2 (en) * | 2011-12-22 | 2013-04-30 | Software Ag Usa, Inc. | Distributed cloud application deployment systems and/or associated methods |
US20120102486A1 (en) * | 2011-12-22 | 2012-04-26 | Software Ag | Distributed cloud application deployment systems and/or associated methods |
US8856216B2 (en) * | 2012-02-10 | 2014-10-07 | Adobe Systems Incorporated | Method and apparatus for efficiently performing file services using cloud computing |
US20130212152A1 (en) * | 2012-02-10 | 2013-08-15 | Adobe Systems Inc. | Method and Apparatus for Efficiently Performing File Services Using Cloud Computing |
US20130246553A1 (en) * | 2012-03-16 | 2013-09-19 | Empire Technology Development Llc | Data migration |
US20130254325A1 (en) * | 2012-03-21 | 2013-09-26 | Nhn Corporation | Cache system and cache service providing method using network switch |
US9552326B2 (en) * | 2012-03-21 | 2017-01-24 | Nhn Corporation | Cache system and cache service providing method using network switch |
US8935756B2 (en) * | 2012-03-26 | 2015-01-13 | International Business Machines Corporation | Providing multiple authentications to authenticate users with respect to a system and file systems offered through the system |
US20130254852A1 (en) * | 2012-03-26 | 2013-09-26 | International Business Machines Corporation | Providing multiple authentications to authenticate users with respect to a system and file systems offered through the system |
US10268402B2 (en) | 2012-03-30 | 2019-04-23 | Commvault Systems, Inc. | Shared network-available storage that permits concurrent data access |
US10963422B2 (en) | 2012-03-30 | 2021-03-30 | Commvault Systems, Inc. | Search filtered file system using secondary storage, including multi-dimensional indexing and searching of archived files |
US11347408B2 (en) | 2012-03-30 | 2022-05-31 | Commvault Systems, Inc. | Shared network-available storage that permits concurrent data access |
US10108621B2 (en) | 2012-03-30 | 2018-10-23 | Commvault Systems, Inc. | Search filtered file system using secondary storage, including multi-dimensional indexing and searching of archived files |
US11494332B2 (en) | 2012-03-30 | 2022-11-08 | Commvault Systems, Inc. | Search filtered file system using secondary storage, including multi-dimensional indexing and searching of archived files |
US10895993B2 (en) | 2012-03-30 | 2021-01-19 | Commvault Systems, Inc. | Shared network-available storage that permits concurrent data access |
US9773002B2 (en) | 2012-03-30 | 2017-09-26 | Commvault Systems, Inc. | Search filtered file system using secondary storage, including multi-dimensional indexing and searching of archived files |
US9898518B2 (en) * | 2012-04-12 | 2018-02-20 | Hitachi, Ltd. | Computer system, data allocation management method, and program |
US20150046399A1 (en) * | 2012-04-12 | 2015-02-12 | Hitachi, Ltd. | Computer system, data allocation management method, and program |
US10412538B2 (en) | 2012-07-09 | 2019-09-10 | Eturi Corporation | Partial information throttle based on compliance with an agreement |
US10079931B2 (en) | 2012-07-09 | 2018-09-18 | Eturi Corp. | Information throttle that enforces policies for workplace use of electronic devices |
US8706872B2 (en) | 2012-07-09 | 2014-04-22 | Parentsware, Llc | Agreement compliance controlled information throttle |
US10834249B2 (en) | 2012-07-09 | 2020-11-10 | Eturi Corp. | Information throttle that enforces policies for workplace use of electronic devices |
US9847948B2 (en) | 2012-07-09 | 2017-12-19 | Eturi Corp. | Schedule and location responsive agreement compliance controlled device throttle |
US9887887B2 (en) | 2012-07-09 | 2018-02-06 | Eturi Corp. | Information throttle based on compliance with electronic communication rules |
US11140444B2 (en) | 2012-07-09 | 2021-10-05 | Eturi Corp. | Data mining system for agreement compliance controlled information throttle |
US10075764B2 (en) | 2012-07-09 | 2018-09-11 | Eturi Corp. | Data mining system for agreement compliance controlled information throttle |
US8966064B2 (en) | 2012-07-09 | 2015-02-24 | Parentsware, Llc | Agreement compliance controlled electronic device throttle |
US9660923B2 (en) | 2012-07-09 | 2017-05-23 | Eturi Corp. | Schedule and location responsive agreement compliance controlled information throttle |
US9854393B2 (en) | 2012-07-09 | 2017-12-26 | Eturi Corp. | Partial information throttle based on compliance with an agreement |
US9043462B2 (en) | 2012-07-09 | 2015-05-26 | Parentsware, Inc. | Schedule and location responsive agreement compliance controlled information throttle |
US20140074841A1 (en) * | 2012-09-10 | 2014-03-13 | Apple Inc. | Concurrent access methods for tree data structures |
US8868531B2 (en) * | 2012-09-10 | 2014-10-21 | Apple Inc. | Concurrent access methods for tree data structures |
US8799335B2 (en) | 2012-09-28 | 2014-08-05 | International Business Machines Corporation | Supporting coordinated access to a file system's shared storage using automatic alignment of a parallel file access protocol and metadata management |
US9529821B2 (en) | 2012-09-28 | 2016-12-27 | International Business Machines Corporation | Coordinated access to a clustered file system's shared storage using shared-lock architecture |
US9727578B2 (en) | 2012-09-28 | 2017-08-08 | International Business Machines Corporation | Coordinated access to a file system's shared storage using dynamic creation of file access layout |
US20140101234A1 (en) * | 2012-10-09 | 2014-04-10 | National Cheng Kung University | Multi-cloud communication system |
US10346422B2 (en) * | 2012-10-18 | 2019-07-09 | International Business Machines Corporation | Use of proxy objects for integration between a content management system and a case management system |
US10346850B2 (en) | 2012-10-22 | 2019-07-09 | International Business Machines Corporation | Case management integration with external content repositories |
US9667506B2 (en) | 2012-12-13 | 2017-05-30 | Level 3 Communications, Llc | Multi-level peering in a content delivery framework |
US9647900B2 (en) | 2012-12-13 | 2017-05-09 | Level 3 Communications, Llc | Devices and methods supporting content delivery with delivery services |
US9819554B2 (en) | 2012-12-13 | 2017-11-14 | Level 3 Communications, Llc | Invalidation in a content delivery framework |
US9787551B2 (en) | 2012-12-13 | 2017-10-10 | Level 3 Communications, Llc | Responsibility-based request processing |
US9755914B2 (en) | 2012-12-13 | 2017-09-05 | Level 3 Communications, Llc | Request processing in a content delivery network |
US9887885B2 (en) | 2012-12-13 | 2018-02-06 | Level 3 Communications, Llc | Dynamic fill target selection in a content delivery framework |
US9749192B2 (en) | 2012-12-13 | 2017-08-29 | Level 3 Communications, Llc | Dynamic topology transitions in a content delivery framework |
US9749191B2 (en) | 2012-12-13 | 2017-08-29 | Level 3 Communications, Llc | Layered request processing with redirection and delegation in a content delivery network (CDN) |
US9749190B2 (en) | 2012-12-13 | 2017-08-29 | Level 3 Communications, Llc | Maintaining invalidation information |
US9722882B2 (en) | 2012-12-13 | 2017-08-01 | Level 3 Communications, Llc | Devices and methods supporting content delivery with adaptation services with provisioning |
US9722883B2 (en) | 2012-12-13 | 2017-08-01 | Level 3 Communications, Llc | Responsibility-based peering |
US10791050B2 (en) | 2012-12-13 | 2020-09-29 | Level 3 Communications, Llc | Geographic location determination in a content delivery framework |
US9722884B2 (en) | 2012-12-13 | 2017-08-01 | Level 3 Communications, Llc | Event stream collector systems, methods, and devices |
US11368548B2 (en) | 2012-12-13 | 2022-06-21 | Level 3 Communications, Llc | Beacon services in a content delivery framework |
US9705754B2 (en) | 2012-12-13 | 2017-07-11 | Level 3 Communications, Llc | Devices and methods supporting content delivery with rendezvous services |
US9686148B2 (en) | 2012-12-13 | 2017-06-20 | Level 3 Communications, Llc | Responsibility-based cache peering |
US10742521B2 (en) | 2012-12-13 | 2020-08-11 | Level 3 Communications, Llc | Configuration and control in content delivery framework |
US10826793B2 (en) | 2012-12-13 | 2020-11-03 | Level 3 Communications, Llc | Verification and auditing in a content delivery framework |
US9660874B2 (en) | 2012-12-13 | 2017-05-23 | Level 3 Communications, Llc | Devices and methods supporting content delivery with delivery services having dynamically configurable log information |
US9660876B2 (en) | 2012-12-13 | 2017-05-23 | Level 3 Communications, Llc | Collector mechanisms in a content delivery network |
US10135697B2 (en) | 2012-12-13 | 2018-11-20 | Level 3 Communications, Llc | Multi-level peering in a content delivery framework |
US10142191B2 (en) | 2012-12-13 | 2018-11-27 | Level 3 Communications, Llc | Content delivery framework with autonomous CDN partitioned into multiple virtual CDNs |
US9660875B2 (en) | 2012-12-13 | 2017-05-23 | Level 3 Communications, Llc | Devices and methods supporting content delivery with rendezvous services having dynamically configurable log information |
US9661046B2 (en) | 2012-12-13 | 2017-05-23 | Level 3 Communications, Llc | Devices and methods supporting content delivery with adaptation services |
US10708145B2 (en) | 2012-12-13 | 2020-07-07 | Level 3 Communications, Llc | Devices and methods supporting content delivery with adaptation services with feedback from health service |
US9654355B2 (en) | 2012-12-13 | 2017-05-16 | Level 3 Communications, Llc | Framework supporting content delivery with adaptation services |
US11121936B2 (en) | 2012-12-13 | 2021-09-14 | Level 3 Communications, Llc | Rendezvous optimization in a content delivery framework |
US9654354B2 (en) | 2012-12-13 | 2017-05-16 | Level 3 Communications, Llc | Framework supporting content delivery with delivery services network |
US10701149B2 (en) | 2012-12-13 | 2020-06-30 | Level 3 Communications, Llc | Content delivery framework having origin services |
US9654353B2 (en) | 2012-12-13 | 2017-05-16 | Level 3 Communications, Llc | Framework supporting content delivery with rendezvous services network |
US9654356B2 (en) | 2012-12-13 | 2017-05-16 | Level 3 Communications, Llc | Devices and methods supporting content delivery with adaptation services |
US9647899B2 (en) | 2012-12-13 | 2017-05-09 | Level 3 Communications, Llc | Framework supporting content delivery with content delivery services |
US9647901B2 (en) | 2012-12-13 | 2017-05-09 | Level 3 Communications, Llc | Configuring a content delivery network (CDN) |
US9847917B2 (en) | 2012-12-13 | 2017-12-19 | Level 3 Communications, Llc | Devices and methods supporting content delivery with adaptation services with feedback |
US9641402B2 (en) | 2012-12-13 | 2017-05-02 | Level 3 Communications, Llc | Configuring a content delivery network (CDN) |
US10700945B2 (en) | 2012-12-13 | 2020-06-30 | Level 3 Communications, Llc | Role-specific sub-networks in a content delivery framework |
US9641401B2 (en) | 2012-12-13 | 2017-05-02 | Level 3 Communications, Llc | Framework supporting content delivery with content delivery services |
US10992547B2 (en) | 2012-12-13 | 2021-04-27 | Level 3 Communications, Llc | Rendezvous systems, methods, and devices |
US10701148B2 (en) * | 2012-12-13 | 2020-06-30 | Level 3 Communications, Llc | Content delivery framework having storage services |
US9634906B2 (en) | 2012-12-13 | 2017-04-25 | Level 3 Communications, Llc | Devices and methods supporting content delivery with adaptation services with feedback |
US9634907B2 (en) | 2012-12-13 | 2017-04-25 | Level 3 Communications, Llc | Devices and methods supporting content delivery with adaptation services with feedback |
US9634904B2 (en) | 2012-12-13 | 2017-04-25 | Level 3 Communications, Llc | Framework supporting content delivery with hybrid content delivery services |
US9634905B2 (en) | 2012-12-13 | 2017-04-25 | Level 3 Communications, Llc | Invalidation systems, methods, and devices |
US9634918B2 (en) | 2012-12-13 | 2017-04-25 | Level 3 Communications, Llc | Invalidation sequencing in a content delivery framework |
US9628342B2 (en) | 2012-12-13 | 2017-04-18 | Level 3 Communications, Llc | Content delivery framework |
US9628347B2 (en) | 2012-12-13 | 2017-04-18 | Level 3 Communications, Llc | Layered request processing in a content delivery network (CDN) |
US9628343B2 (en) | 2012-12-13 | 2017-04-18 | Level 3 Communications, Llc | Content delivery framework with dynamic service network topologies |
US10931541B2 (en) | 2012-12-13 | 2021-02-23 | Level 3 Communications, Llc | Devices and methods supporting content delivery with dynamically configurable log information |
US9628346B2 (en) | 2012-12-13 | 2017-04-18 | Level 3 Communications, Llc | Devices and methods supporting content delivery with reducer services |
US9628344B2 (en) | 2012-12-13 | 2017-04-18 | Level 3 Communications, Llc | Framework supporting content delivery with reducer services network |
US9628345B2 (en) | 2012-12-13 | 2017-04-18 | Level 3 Communications, Llc | Framework supporting content delivery with collector services network |
US20140344391A1 (en) * | 2012-12-13 | 2014-11-20 | Level 3 Communications, Llc | Content Delivery Framework having Storage Services |
US10862769B2 (en) | 2012-12-13 | 2020-12-08 | Level 3 Communications, Llc | Collector mechanisms in a content delivery network |
US10841177B2 (en) | 2012-12-13 | 2020-11-17 | Level 3 Communications, Llc | Content delivery framework having autonomous CDN partitioned into multiple virtual CDNs to implement CDN interconnection, delegation, and federation |
US20140172950A1 (en) * | 2012-12-13 | 2014-06-19 | Ca, Inc. | Methods And Systems For Speeding Up Data Recovery |
US10608894B2 (en) | 2012-12-13 | 2020-03-31 | Level 3 Communications, Llc | Systems, methods, and devices for gradual invalidation of resources |
US9241046B2 (en) * | 2012-12-13 | 2016-01-19 | Ca, Inc. | Methods and systems for speeding up data recovery |
US10652087B2 (en) | 2012-12-13 | 2020-05-12 | Level 3 Communications, Llc | Content delivery framework having fill services |
US10083307B2 (en) | 2012-12-26 | 2018-09-25 | Barracuda Networks, Inc. | Distributed encryption and access control scheme in a cloud environment |
US11076203B2 (en) | 2013-03-12 | 2021-07-27 | Time Warner Cable Enterprises Llc | Methods and apparatus for providing and uploading content to personalized network storage |
US9960979B1 (en) * | 2013-03-12 | 2018-05-01 | Western Digital Technologies, Inc. | Data migration service |
US11080734B2 (en) | 2013-03-15 | 2021-08-03 | Cdk Global, Llc | Pricing system for identifying prices for vehicles offered by vehicle dealerships and other entities |
US10223326B2 (en) * | 2013-07-31 | 2019-03-05 | Oracle International Corporation | Direct access persistent memory shared storage |
US9465820B2 (en) * | 2013-11-13 | 2016-10-11 | Cellco Partnership | Method and system for unified technological stack management for relational databases |
US10331627B2 (en) | 2013-11-13 | 2019-06-25 | Cellco Partnership | Method and system for unified technological stack management for relational databases |
US20150134703A1 (en) * | 2013-11-13 | 2015-05-14 | Cellco Partnership D/B/A Verizon Wireless | Method and system for unified technological stack management for relational databases |
US10037542B2 (en) | 2013-11-14 | 2018-07-31 | Wells Fargo Bank, N.A. | Automated teller machine (ATM) interface |
US11455600B1 (en) | 2013-11-14 | 2022-09-27 | Wells Fargo Bank, N.A. | Mobile device interface |
US10242342B1 (en) * | 2013-11-14 | 2019-03-26 | Wells Fargo Bank, N.A. | Vehicle interface |
US11868963B1 (en) | 2013-11-14 | 2024-01-09 | Wells Fargo Bank, N.A. | Mobile device interface |
US10832274B1 (en) | 2013-11-14 | 2020-11-10 | Wells Fargo Bank, N.A. | Automated teller machine (ATM) interface |
US10230844B1 (en) | 2013-11-14 | 2019-03-12 | Wells Fargo Bank, N.A. | Call center interface |
US11729316B1 (en) | 2013-11-14 | 2023-08-15 | Wells Fargo Bank, N.A. | Call center interface |
US10853765B1 (en) | 2013-11-14 | 2020-12-01 | Wells Fargo Bank, N.A. | Vehicle interface |
US11316976B1 (en) | 2013-11-14 | 2022-04-26 | Wells Fargo Bank, N.A. | Call center interface |
US9720956B2 (en) | 2014-01-17 | 2017-08-01 | Facebook, Inc. | Client-side search templates for online social networks |
US20150205858A1 (en) * | 2014-01-17 | 2015-07-23 | Facebook, Inc. | Client-Side Search Templates for Online Social Networks |
US9336300B2 (en) * | 2014-01-17 | 2016-05-10 | Facebook, Inc. | Client-side search templates for online social networks |
AU2014377694B2 (en) * | 2014-01-17 | 2016-10-13 | Facebook, Inc. | Client-side search templates for online social networks |
US9654500B2 (en) | 2014-07-30 | 2017-05-16 | Iboss, Inc. | Web redirection for content filtering |
US9900341B2 (en) * | 2014-07-30 | 2018-02-20 | Iboss, Inc. | Web redirection for caching |
US10257274B2 (en) * | 2014-09-15 | 2019-04-09 | Foundation for Research and Technology—Hellas (FORTH) | Tiered heterogeneous fast layer shared storage substrate apparatuses, methods, and systems |
US9558078B2 (en) | 2014-10-28 | 2017-01-31 | Microsoft Technology Licensing, Llc | Point in time database restore from storage snapshots |
US10996866B2 (en) | 2015-01-23 | 2021-05-04 | Commvault Systems, Inc. | Scalable auxiliary copy processing in a data storage management system using media agent resources |
US11513696B2 (en) | 2015-01-23 | 2022-11-29 | Commvault Systems, Inc. | Scalable auxiliary copy processing in a data storage management system using media agent resources |
US10891283B2 (en) | 2015-03-20 | 2021-01-12 | D&B Business Information Solutions | System and method for preserving interdependent corporate data consistency in a globally distributed environment |
US9830331B2 (en) * | 2015-05-04 | 2017-11-28 | Netapp, Inc. | Cluster scale synchronization of producer consumer file access via multi-protocol nodes |
US20160328436A1 (en) * | 2015-05-04 | 2016-11-10 | Netapp, Inc. | Cluster scale synchronization of producer consumer file access via multi-protocol nodes |
US10754767B2 (en) | 2015-05-19 | 2020-08-25 | Guangzhou Ucweb Computer Technology Co., Ltd. | Method and apparatus for loading a resource in a web page on a device |
US9591489B2 (en) | 2015-07-09 | 2017-03-07 | International Business Machines Corporation | Controlling application access to applications and resources via graphical representation and manipulation |
US10481756B2 (en) | 2015-07-09 | 2019-11-19 | International Business Machines Corporation | Controlling application access to applications and resources via graphical representation and manipulation |
US20170075630A1 (en) * | 2015-09-10 | 2017-03-16 | Kabushiki Kaisha Toshiba | Memory module, electronic device and method |
US9864548B2 (en) * | 2015-09-10 | 2018-01-09 | Toshiba Memory Corporation | Memory module, electronic device and method |
US11334262B2 (en) | 2015-09-23 | 2022-05-17 | Oracle International Corporation | On-chip atomic transaction engine |
US10732865B2 (en) * | 2015-09-23 | 2020-08-04 | Oracle International Corporation | Distributed shared memory using interconnected atomic transaction engines at respective memory interfaces |
US11868628B2 (en) | 2015-09-23 | 2024-01-09 | Oracle International Corporation | On-chip atomic transaction engine |
US20170083257A1 (en) * | 2015-09-23 | 2017-03-23 | Oracle International Corporation | On-chip Atomic Transaction Engine |
US10324902B2 (en) * | 2015-09-24 | 2019-06-18 | EMC IP Holding Company LLC | Method and apparatus for locking file in memory |
US10863330B1 (en) * | 2015-12-03 | 2020-12-08 | Eta Vision Inc. | Systems and methods for sensing, recording, analyzing and reporting environmental conditions in data centers and similar facilities |
US11405760B1 (en) * | 2015-12-03 | 2022-08-02 | EtaVision Inc. | Systems and methods for sensing, recording, analyzing and reporting environmental conditions in data centers and similar facilities |
US11284544B1 (en) * | 2015-12-03 | 2022-03-22 | Eta Vision Inc. | Systems and methods for sensing, recording, analyzing and reporting environmental conditions in data centers and similar facilities |
US10853769B2 (en) | 2016-04-21 | 2020-12-01 | Cdk Global Llc | Scheduling an automobile service appointment in a dealer service bay based on diagnostic trouble codes and service bay attributes |
US10867285B2 (en) | 2016-04-21 | 2020-12-15 | Cdk Global, Llc | Automatic automobile repair service scheduling based on diagnostic trouble codes and service center attributes |
US10332068B2 (en) | 2016-04-21 | 2019-06-25 | Cdk Global, Llc | Systems and methods for stocking an automobile |
US11669595B2 (en) | 2016-04-21 | 2023-06-06 | Time Warner Cable Enterprises Llc | Methods and apparatus for secondary content management and fraud prevention |
US10362110B1 (en) * | 2016-12-08 | 2019-07-23 | Amazon Technologies, Inc. | Deployment of client data compute kernels in cloud |
US10218774B2 (en) | 2017-02-09 | 2019-02-26 | International Business Machines Corporation | Distributed file transfer with high performance |
US10594771B2 (en) | 2017-02-09 | 2020-03-17 | International Business Machines Corporation | Distributed file transfer with high performance |
US10594772B2 (en) | 2017-02-09 | 2020-03-17 | International Business Machines Corporation | Distributed file transfer with high performance |
US10225321B2 (en) | 2017-02-09 | 2019-03-05 | International Business Machines Corporation | Distributed file transfer with high performance |
US10009412B1 (en) | 2017-02-09 | 2018-06-26 | International Business Machines Corporation | Distributed file transfer with high performance |
US10326858B2 (en) | 2017-05-23 | 2019-06-18 | Cdk Global, Llc | System and method for dynamically generating personalized websites |
US10459810B2 (en) | 2017-07-06 | 2019-10-29 | Oracle International Corporation | Technique for higher availability in a multi-node system using replicated lock information to determine a set of data blocks for recovery |
US10719446B2 (en) | 2017-08-31 | 2020-07-21 | Oracle International Corporation | Directly mapped buffer cache on non-volatile memory |
US11256627B2 (en) | 2017-08-31 | 2022-02-22 | Oracle International Corporation | Directly mapped buffer cache on non-volatile memory |
US11086876B2 (en) | 2017-09-29 | 2021-08-10 | Oracle International Corporation | Storing derived summaries on persistent memory of a storage device |
US11616856B2 (en) | 2018-03-21 | 2023-03-28 | Cdk Global, Llc | Systems and methods for an automotive commerce exchange |
US11501351B2 (en) | 2018-03-21 | 2022-11-15 | Cdk Global, Llc | Servers, systems, and methods for single sign-on of an automotive commerce exchange |
US11190608B2 (en) | 2018-03-21 | 2021-11-30 | Cdk Global Llc | Systems and methods for an automotive commerce exchange |
US10868838B2 (en) | 2018-07-10 | 2020-12-15 | Eturi Corp. | Media device content review and management |
US10868837B2 (en) | 2018-07-10 | 2020-12-15 | Eturi Corp. | Media device content review and management |
US11343286B2 (en) | 2018-07-10 | 2022-05-24 | Eturi Corp. | Media device content review and management |
US10440063B1 (en) | 2018-07-10 | 2019-10-08 | Eturi Corp. | Media device content review and management |
US11741196B2 (en) | 2018-11-15 | 2023-08-29 | The Research Foundation For The State University Of New York | Detecting and preventing exploits of software vulnerability using instruction tags |
US11695665B2 (en) | 2019-07-09 | 2023-07-04 | Vmware, Inc. | Cross-cloud connectivity checks |
US11573900B2 (en) * | 2019-09-11 | 2023-02-07 | Intel Corporation | Proactive data prefetch with applied quality of service |
US20200004685A1 (en) * | 2019-09-11 | 2020-01-02 | Intel Corporation | Proactive data prefetch with applied quality of service |
US11403849B2 (en) | 2019-09-25 | 2022-08-02 | Charter Communications Operating, Llc | Methods and apparatus for characterization of digital content |
US20210149918A1 (en) * | 2019-11-15 | 2021-05-20 | International Business Machines Corporation | Intelligent data pool |
US11652717B2 (en) * | 2019-12-16 | 2023-05-16 | Vmware, Inc. | Simulation-based cross-cloud connectivity checks |
US11698898B2 (en) * | 2020-11-04 | 2023-07-11 | Salesforce, Inc. | Lock wait tracing |
US20220138175A1 (en) * | 2020-11-04 | 2022-05-05 | Salesforce.Com, Inc. | Lock wait tracing |
US11080105B1 (en) | 2020-11-18 | 2021-08-03 | Cdk Global, Llc | Systems, methods, and apparatuses for routing API calls |
US11514021B2 (en) | 2021-01-22 | 2022-11-29 | Cdk Global, Llc | Systems, methods, and apparatuses for scanning a legacy database |
US11803535B2 (en) | 2021-05-24 | 2023-10-31 | Cdk Global, Llc | Systems, methods, and apparatuses for simultaneously running parallel databases |
US11983145B2 (en) | 2022-08-31 | 2024-05-14 | Cdk Global, Llc | Method and system of modifying information on file |
Also Published As
Publication number | Publication date |
---|---|
AU7303298A (en) | 1998-06-10 |
WO1998022881A1 (en) | 1998-05-28 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US5987506A (en) | Remote access and geographically distributed computers in a globally addressable storage environment | |
WO1998022881A9 (en) | Remote access in a globally addressable storage environment | |
US5909540A (en) | System and method for providing highly available data storage using globally addressable memory | |
US5918229A (en) | Structured data storage using globally addressable memory | |
US6026474A (en) | Shared client-side web caching using globally addressable memory | |
MacCormick et al. | Boxwood: Abstractions as the Foundation for Storage Infrastructure. | |
TWI232382B (en) | A distributed storage system for data-sharing among client computers running different operating system types | |
US7007024B2 (en) | Hashing objects into multiple directories for better concurrency and manageability | |
US7165096B2 (en) | Storage area network file system | |
US7194467B2 (en) | Using whole-file and dual-mode locks to reduce locking traffic in data storage systems | |
US8255364B2 (en) | System for emulating a virtual boundary of a file system for data management at a fileset granularity | |
US20090030957A1 (en) | Technique For Virtualizing Storage Using Stateless Servers | |
Carter et al. | Khazana: An infrastructure for building distributed services | |
US10387384B1 (en) | Method and system for semantic metadata compression in a two-tier storage system using copy-on-write | |
Lim et al. | Active disk file system: A distributed, scalable file system | |
Preslan et al. | Scalability and failure recovery in a linux cluster file system | |
Krzyzanowski | Distributed File Systems Design | |
Welch | A comparison of three distributed file system architectures: Vnode, Sprite, and Plan 9 | |
US10628391B1 (en) | Method and system for reducing metadata overhead in a two-tier storage architecture | |
Dubeyko | Comparative Analysis of Distributed and Parallel File Systems' Internal Techniques | |
Dechamboux et al. | The Arias distributed shared memory: An overview | |
WO1998022890A1 (en) | System for tracking data | |
Susarla et al. | Experience using a globally shared state abstraction to support distributed applications | |
Dyade | The Arias Distributed Shared Memory: an Overview | |
Khalidi et al. | Spring File System, The |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: MANGOSOFT CORPORATION, MASSACHUSETTSFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:CARTER, JOHN B.;DAVIS, SCOTT H.;FRANK, STEVEN J.;REEL/FRAME:008810/0833;SIGNING DATES FROM 19970711 TO 19971030 |
|
AS | Assignment |
Owner name: IMPERIAL BANK, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MANGOSOFT CORPORATION;REEL/FRAME:009277/0209Effective date: 19980528 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: MANGOSOFT INTELLECTUAL PROPERTY, INC., NEW YORKFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MANGOSOFT CORPORATION;REEL/FRAME:018247/0438Effective date: 20060911 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
FEPP | Fee payment procedure |
Free format text: PAT HOLDER CLAIMS SMALL ENTITY STATUS, ENTITY STATUS SET TO SMALL (ORIGINAL EVENT CODE: LTOS); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
FPAY | Fee payment |
Year of fee payment: 12 |
|
AS | Assignment |
Owner name: MANGOSOFT CORPORATION, NEW YORKFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:COMERCIA BANK, A TEXAS BANKING ASSOCIATION, SUCCESSOR IN INTEREST TO IMPERIAL BANK;REEL/FRAME:028083/0471Effective date: 20120416 |
|
AS | Assignment |
Owner name: MANGOSOFT INTELLECTUAL PROPERTY, INC., NEW YORKFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MANGOSOFT CORPORATION;REEL/FRAME:028089/0846Effective date: 20120423 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MANGOSOFT INTELLECTUAL PROPERTY INC.;REEL/FRAME:028687/0383Effective date: 20120501 |
|
FEPP | Fee payment procedure |
Free format text: PAT HOLDER NO LONGER CLAIMS SMALL ENTITY STATUS, ENTITY STATUS SET TO UNDISCOUNTED (ORIGINAL EVENT CODE: STOL); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044695/0115Effective date: 20170929 |
US8798988B1 - Identifying related terms in different languages - Google Patents
Identifying related terms in different languages Download PDFInfo
- Publication number
- US8798988B1 US8798988B1 US11/877,407 US87740707A US8798988B1 US 8798988 B1 US8798988 B1 US 8798988B1 US 87740707 A US87740707 A US 87740707A US 8798988 B1 US8798988 B1 US 8798988B1
- Authority
- US
- United States
- Prior art keywords
- terms
- term
- pair
- collection
- candidate
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/237—Lexical tools
- G06F40/247—Thesauruses; Synonyms
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/903—Querying
- G06F16/9032—Query formulation
- G06F16/90324—Query formulation using system suggestions
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/40—Processing or translation of natural language
- G06F40/58—Use of machine translation, e.g. for multi-lingual retrieval, for server-side translation for client devices or for real-time translation
Definitions
- Embodiments of the present invention generally relate to the field of information retrieval, and more specifically to the task of identifying valid synonyms for query terms to facilitate retrieving documents which relate to the query terms.
- a user may enter the query [Web hosting+fort wayne] when the city of Fort Wayne is usually referred to as Ft. Wayne.
- a user may enter [free loops for flash movie] when most relevant pages use the term “music,” rather than “loops” and the term “animation” rather than “movie.”
- documents that satisfy a user's informational needs may use different terms than the specific query terms chosen by the user. This problem is further aggravated as the number of terms in a query increases. For queries longer than three or four words, there is a strong likelihood that at least one of the terms is not the best term to describe the user's intended search. It is therefore desirable for a search engine to automatically modify and/or expand user queries to include synonyms for query terms, so that retrieved documents can better meet the user's informational needs.
- One embodiment of the present invention provides a system that uses a known set of related terms to identify additional related terms in different languages. During operation, the system receives two terms that are known to be related. The system translates these two related terms into a given language, and then adds the translations of the two related terms to a list of known related pairs.
- the two related terms are specified in a common language.
- the two related terms are specified in different languages.
- the system translates the two related terms into different languages.
- the system translates one or both of the terms into one or more target languages.
- the system generates one or more translations and/or word forms for the two related terms.
- Each of the possible translations and/or word forms for the first term is individually paired with each possible translation and/or word form of the second term.
- the system then adds the resulting pairs to the list of known related pairs.
- system normalizes a possible translation and/or word form for a term.
- the system determines variations for one or both of the two terms, and then performs the described method for each possible pairing between the two sets of variations derived from the two terms.
- the system determines variations for a term by: determining a high-confidence synonym for the term; and/or normalizing the term.
- the system uses the list of known related pairs to create a blacklist of suspicious synonyms.
- the system accesses the blacklist during a query to determine whether a possible synonym for a term should be considered during the query.
- the system reduces the confidence for a pair of possible synonym terms if the pair is present in the blacklist of suspicious synonyms.
- the system accesses the blacklist to determine whether a synonym rule should be used during a query.
- two or more related terms can be specified as a list.
- the system expands this list into all possible pairings for the list and uses the pairings as a list of known related pairs.
- terms known to be related include one or more of the following: different colors; different months; different days of the week; different numbers; different animals; and/or terms specified by a user to be related.
- the two terms are specified in any automatically-translatable language.
- the system uses terms known to be related in a first language to improve query results for queries specified in a second language.
- One embodiment of the present invention provides a system that uses a known set of related terms to identify additional related terms in different languages. During operation, the system receives two terms that are known to be related. The system translates one of the related terms into a given language, and then adds the translation of the term and the un-translated term to a list of known related pairs.
- FIG. 1 illustrates the crawling, ranking and searching processes in accordance with an embodiment of the present invention.
- FIG. 2A presents a flowchart illustrating a method for producing altered queries in accordance with one embodiment of the present invention.
- FIG. 2B presents a flowchart illustrating a process for determining one or more synonymous terms in the context of a query in accordance with one embodiment of the present invention.
- FIG. 3 illustrates an exemplary method for determining candidate synonyms for search query terms in accordance with one embodiment of the present invention.
- FIG. 4 presents a table illustrating several tests that may be used to qualify the quality or strength of a candidate synonym in accordance with one embodiment of the present invention.
- FIG. 5 illustrates how a geographic data set can be visualized as a tree of geographic entities in accordance with an embodiment of the present invention.
- FIG. 6 illustrates the process of determining correlated geographic synonyms in accordance with an embodiment of the present invention.
- FIG. 7 presents a flow chart illustrating the process of identifying correlated pairs in accordance with one embodiment of the present invention.
- FIG. 8 presents a flow chart illustrating the process of screening correlated term pairs in accordance with one embodiment of the present invention.
- FIG. 9 illustrates an exemplary computer system for identifying common co-occurring elements in lists in accordance with one embodiment of the present invention.
- FIG. 10 presents a flow chart illustrating the process of generating a gathered list of known related pairs from an initial pair of known related terms in accordance with an embodiment of the present invention.
- FIG. 11 presents a flow chart illustrating the process of using a gathered list of related term pairs to detect non-synonym terms in accordance with an embodiment of the present invention.
- a computer-readable storage medium which may be any device or medium that can store code and/or data for use by a computer system.
- FIG. 1 illustrates the crawling, ranking and searching processes in accordance with an embodiment of the present invention.
- a Web crawler 104 crawls or otherwise searches through websites on Web 102 to select Web pages to be stored in indexed form in data center 108 .
- the selected Web pages are then compressed, indexed and ranked in module 105 (using the ranking process described above) before being stored in data center 108 .
- a search engine 112 receives a query 113 from a user 111 through a Web browser 114 .
- This query 113 specifies a number of terms to be searched for in the set of documents.
- search engine 112 uses search terms specified in the query as well as synonyms for search terms to identify highly-ranked documents that satisfy the query.
- Search engine 112 then returns a response 115 through Web browser 114 , wherein the response 115 contains matching pages along with ranking information and references to the identified documents.
- Some embodiments of the present invention do not require Web crawling.
- the techniques described herein can also work with other document search and retrieval systems based on manually-controlled system such as human-maintained Web portals, directories, and paid inclusion.
- FIG. 2A is a flowchart illustrating a method for altering queries to incorporate synonyms in accordance with an embodiment of the present invention.
- a front-end server After receiving a search query from a client, a front-end server provides the query to the search engine, which evaluates the query (operation 210 ).
- the front-end server and/or search engine can maintain log files or lookup tables for storing each received query and other information. For example, each query can be stored with a user identifier that identifies the browser and/or computer used by the user, a timestamp, and a list of some search results, such as the top ten document IDs that correspond to the search. Other information related to user context or the search itself may also be stored.
- a list of search results for the search query is identified (operation 220 ).
- the search engine evaluates the query to retrieve a set of search results for the search query and returns the results to the front-end server.
- the search engine communicates with one or more content servers to select documents relevant to the search query.
- a content server stores a large number of indexed documents, which are indexed and/or retrieved from different websites.
- the content server can store an index of documents stored on various websites. “Documents” are understood here to be any form of indexable content, including textual documents, images, video, audio, multimedia, presentations, and so forth.
- each indexed document is assigned a page rank according to the document's link structure.
- This page rank serves as a query-independent measure of the document's importance.
- An exemplary form of page rank is described in U.S. Pat. No. 6,285,999, which is incorporated by reference herein.
- the search engine assigns a score to each document based on the document's page rank (and/or other query-independent measure of the document's importance), as well as one or more query-dependent signals of the document's importance (e.g., the location and frequency of search terms in the document).
- FIG. 2B is a flowchart illustrating a process for determining one or more synonymous terms in the context of a search query according to one embodiment of the present invention.
- query pairs are identified (operation 240 ). (An example of this process is further described in conjunction with FIG. 3 below.) In one embodiment, this is accomplished by analyzing user query logs and lookup tables. The set of all queries received over some period are reviewed and all original and altered query pairs are identified. An altered query is a query obtained by replacing a phrase in the original query with a candidate synonym.
- a “phrase,” in the context of the present invention, is one or more individual words or terms.
- an original query might be [free loops for flash movie], and the altered query might be [free music for flash movie].
- certain queries may be eliminated as having insufficient context.
- queries used in the analysis may be required to have at least three terms.
- possible query fragments, or “pseudo-queries” are formed by removing phrases from the query and replacing each phrase with a token (e.g., “:”) that acts as a variable. Then, queries that vary only by the phrase marked with the token are identified as query pairs.
- information about the query pairs is analyzed (operation 250 ). For each query pair, additional information to suggest that the phrase in the original query and altered query are synonymous is identified.
- the evidence may include the frequency with which both queries in the pair are entered by the same user within a short time interval, or the number of top results that the original query and altered query share.
- one or more additional tests can be used.
- One such test is to determine whether for every query containing a phrase A, a corresponding altered query with a phrase B substituted for A has a moderately high probability of occurrence in the stored data. In one embodiment of the present invention, the required probability is 1%.
- a second test is that, for every query containing A, the corresponding query with B substituted for A has a minimum probability of being entered by the same user in a short time interval.
- the interval is an hour and the probability is 0.1% or greater.
- a third test is that, for every query containing A, if the corresponding query with B substituted for A occurs, the two queries have a minimum probability of having a number of the top results in common. In one embodiment, the probability is 60-70% and the number of results in common is 1-3.
- the additional tests can be performed to determine the confidence level of a query candidate. Additionally, the system can perform a combination of these tests and assign a different weight to each test to compute an overall confidence level of the efficacy of a query candidate.
- the statistics used for the above tests can be gathered for each of the most common contexts in which the phrase occurs.
- the query would be reflected in statistics for all occurrences of “free” in the general context (:); for only occurrences of “free” following “whale” in the context (whale :); for only occurrences of “free” preceding “photos” in the context (: photos); and for only occurrences of “free” between “whale” and “photos” in the context (whale : photos). Because many queries containing the phrase “free” are processed, statistics will be obtained for many contexts in which “free” has occurred, quite possibly many thousands of different contexts.
- the above tests are performed for the overall context, to determine whether the substitution is generally a good one. For example, it may be determined that “download” is not a good synonym for “free” in the general context, is a good synonym in the context (: photos), and is not a good synonym in the context (: press). The conclusion in this example is that the context (: photos) is an exception to the general rule that “download” is not a good synonym for “free.”
- a subset is selected (operation 260 ) including phrases with candidate synonyms that meet certain criteria.
- the criteria are some or all of the tests discussed above in the general context.
- a number of top candidate synonyms are selected for the subset of query pairs.
- a synonym can be considered more significant than other synonyms, for example, if it is used in an altered query more often within user sessions, or if its altered query yields more search results in common with the original query.
- candidate synonyms are ranked (operation 270 ), or qualified, using the criteria discussed above.
- the system applies a set of threshold conditions, using the data gathered above as is discussed in greater detail in conjunction with FIG. 4 .
- the conditions may specify that, for at least 65% of the original-altered query pairs, there is at least one search result in common and that the frequency with which the altered query follows (e.g., occurs within five sequential queries) the original query within a user session is at least 1 in 2000.
- the statistics from operation 250 are evaluated using a float scale function to determine a score for each qualified synonym, as discussed in greater detail in conjunction with FIG. 3 . This score is a measure of the confidence in a qualified synonym. Depending on the application, greater or lesser confidence or strength will be required. Consequently, whether a qualified synonym is declared a useful synonym depends on the threshold value of evidence that is sufficient for the application.
- one or more altered queries are derived (operation 280 ).
- One such method is disclosed in U.S. patent application Ser. No. 10/629,479, filed on Jul. 28, 2003, entitled “System and Method for Providing a User Interface with Search Query Broadening,” which is incorporated herein by reference.
- alternative queries are suggested that include the synonym, either as a substitution in or an addition to the query.
- a number of alternative queries can be provided back to the user, along with the search results for the original query according to various methods.
- the synonym is treated as equivalent to the original phrase automatically for purposes of document retrieval.
- the original query can be modified by replacing the phrase with a synonym or a disjunction of the original phrase and a synonym when producing search results for the query.
- a list of altered search results for the altered query is identified (operation 290 ).
- this list may include a maximum number of results.
- FIG. 3 depicts an exemplary method for determining candidate synonyms for search query terms according to one embodiment of the invention.
- the system sorts all queries received over a period of time, such as a week (operation 310 ) by user ID (e.g., by cookie), and then by time.
- This operation organizes the queries into individual user sessions, where a session is defined as queries from an individual client device (or user) occurring with a given time interval, for example one hour (though longer or shorter definitions of a session may be used, as desired). Assume that within a one hour window from one user, the following queries were logged from an individual client device:
- the system first eliminates certain queries as having insufficient context.
- queries used in the analysis have at least three terms.
- the query [gm cars] is eliminated.
- all possible query fragments, or pseudo-queries are formed by replacing a sequence of one or more terms with a marker or token (e.g., “:”), while leaving at least two words in the pseudo-queries (operation 320 ).
- a marker or token e.g., “:”
- Each pseudo-query record is keyed by its pseudo-query, the original query from which it was derived, and the phrase that was replaced by the token to produce the pseudo-query.
- the keying of the pseudo-query records in this manner allows for multiple different sorts and aggregations of the pseudo-query records as further described below.
- Operation 330 also optionally annotates a pseudo-query record with the first ten resultant document IDs (indicated below as “url#”) returned by the search engine in response to the query, either extracted from the log files (if available), or indirectly with a pointer or other reference to an external store of the results. According to one embodiment, fewer or no document IDs may be annotated, to reduce the required storage space.
- url# the first ten resultant document IDs
- top_results ⁇ url370293847, url123985709, . . . >
- top_results ⁇ url370293847, url123985709, . . . >
- top_results ⁇ url370293847, url123985709, . . . >
- Generating pseudo-queries operates specifies the range of potential contexts of each phrase implicit within each query.
- the records corresponding to an individual pseudo-query reflect what is known (i.e., across all user queries in the logs) about one set of queries that differ in only one phrase.
- the system then analyzes records for each pseudo-query to generate a new set of records that reflect how well each phrase can function as a synonym for some other phrase, if it occurs in the given pseudo-query (operation 340 ).
- Pseudo-query records are sorted by pseudo-query such that all records with the same pseudo-query are grouped together. For example, assume that the records for the pseudo-query [: used car prices] include the two examples from above, plus two more, all of which are shown below:
- top_results ⁇ url370293847, url123985709, . . . >
- Operation 340 generates a single record for each phrase that is identified in a pseudo-query. In other words, all records with the same pseudo-query are grouped together and a new record is created for each phrase covered by the group, reflecting how that phrase relates to the other phrases of the group for that pseudo-query. Continuing the present example, operation 340 creates a record for each of the phrases “gm,” “general motors” and “ford.” Each record includes candidate synonyms for the respective phrase.
- each record output by operation 340 identifies the ten most significant potential synonyms for each phrase.
- the significance of synonyms is determined at this stage independent of context according to a hierarchy of tests. First, a synonym that occurs in more related queries within sessions is considered more significant than one that appears in fewer related queries. Second, if two synonyms occur in the same number of related queries within sessions (as is likely to be the case, because relatively few sessions have related queries), a synonym is considered more significant than another if the results returned for a search query that includes the first synonym have more results in common with the results returned for a query with the phrase. Finally, if two synonyms still evaluate as equally significant, one is considered more significant if it occurs more often within the queries corresponding to the respective pseudo-query.
- operation 340 would output:
- operation 340 passes on the session information from operation 330 .
- the data record above reflects the session queries “gm used car prices,” “general motors used car prices,” and “ford used car prices.” In many cases, like “ford” in this example, there the original and altered queries may occur in different sessions, yet not occur together in a single session.
- Operation 340 also compares the search results (using, e.g., the document IDs) for each original and altered query if they were recorded, and tracks how many were in common. Thus, in the present example, [gm used car prices] and [general motors used car prices] had 5 documents in common among their respective top ten, while the results for [gm used car prices] had no documents in common with those for [ford used car prices]. Then, the records produced by this operation are sorted by phrase, gathering together all records produced by operation 340 for each phrase.
- operation 350 For each phrase, operation 350 computes statistics that reflect how well each candidate synonym functions as a synonym in general (i.e., in the general context, “:”), as well as in specific contexts. In the examples at this level of the analysis, candidate synonyms are selected from the observed “related phrases.” Continuing the present example, assume that for the phrase “gm,” operation 350 receives the above record, plus two more:
- Operation 350 determines how many queries contained a particular phrase and computes statistics for each candidate synonym of the phrase. In one embodiment, this operation includes determining the number of queries for which the corresponding query with the synonym:
- operation 350 also gathers statistics for each context in which the phrase occurs frequently. For example, statistics can be gathered for the 10,000 contexts for which the most queries exist. In this example, the contexts would be (:), (: used), (: used car), (: new), (: new car), (of :), (nutrition of :), (: food), and (of : food). Only one of the queries discussed in the above example (original queries [gm used car prices], gm new car prices], and nutrition of gm food]) belongs to each of these specialized contexts, except the general context, (:), which subsumes all three queries. Realistically, however, some contexts will include data from many queries. Operation 350 evaluates the above statistics for each context, retaining, for each context, only the 20 most common candidate synonyms.
- Operation 360 further qualifies candidate synonyms using various tests.
- FIG. 4 is a table illustrating several tests that may be used to quantify the quality or strength or confidence of a candidate synonym according to one embodiment of the present invention.
- the tests 410 apply to statistics gathered in operation 350 .
- the process begins by confirming that two preliminary conditions are satisfied.
- the first preliminary condition is that for at least 65% of the original-altered query pairs, there is at least one search result (e.g., a URL) in common.
- the 65% parameter is empirically derived, and other thresholds can be used as well, depending on the corpus of documents.
- the second preliminary condition is that for at least 1 in 2000 of the query pairs, a user in a session enters the original query followed by the altered query within, e.g., five queries.
- the threshold values used in this particular embodiment are also for illustrative purposes only, and other values can be used as well.
- operation 360 evaluates a number of the statistics from operation 350 as a group and accords weight to each statistic.
- the evaluation can be based on the following function scale ( ):
- score 420 ratio the test determines
- base 430 target value
- high 440 scaling factor
- the value of base 430 reflects a desired value for the given test.
- the individual tests are defined as follows.
- frequently_alterable 450 provides a measure of whether, for each query with the phrase of interest, the corresponding altered query occurs frequently enough (preferable more than 1%) to suggest that the candidate synonym makes sense in context.
- the result of this test is computed as the result (i) from operation 350 (queries in log) over the total number of distinct queries including the phrase (TDQ).
- frequently_much_in_common 460 evaluates whether the original queries and altered queries typically exhibit enough results in common to suggest that the meanings of the phrase and candidate synonym are similar. Preferably, at least 60% of altered queries have at least 3 search results in common with the original user query. The result of this test is computed as result (iv) from operation 350 (had at least one result in common) over result (ii) of operation 350 (result data existed for both original and altered queries).
- frequently_altered 470 evaluates whether users occasionally try the substitution. Preferably, for every 2000 user queries, there is a corresponding altered query within the same session. The result of this test is computed as result (v) from operation 350 (appeared earlier within a session) over TDQ.
- high_altering_ratio 480 measures whether users do not preferentially substitute in the opposite direction, i.e., substitute the phrase for the candidate synonym, which would suggest that the original phrase is much better than the candidate synonym.
- the value of evidence is a measure of the strength of or confidence in a synonym. An evidence value approaching 1.0 indicates very high confidence, while a value of 0.6 reflects good confidence. Depending on the application, greater or lesser confidence or strength can be required. Consequently, whether a candidate synonym is declared a validated synonym depends on the threshold value of evidence that is sufficient for the application. It has been empirically determined that for many applications, for example, a candidate synonym can be validated, e.g., considered equivalent to a phrase, if the value of evidence is greater than 0.6. Again, other thresholds and variations of the Scale function, and its subordinate functions may also be used.
- a set of validated synonyms and the corresponding contexts in which they are effective can be utilized in several ways.
- a conservative approach is to suggest to the user alternative queries into which the synonym has been substituted. For example, when a user enters a given query, a number of alternative queries can be provided back to the user, along with the search results for the original query. Each of the alternative queries can be linked to its associated search results, so that the user does not have to manually re-enter the alternative query.
- An aspect of the present invention includes a computer-implemented method to determine synonyms to serve as substitutions for phrases within an information search query.
- Candidate substitutions may be suggested to the user or automatically included in addition to or in place of the original query.
- the candidate substitution may be used solely to modify the score associated with the retrieved documents.
- a formula may be used to assess the strength or quality of candidate synonyms, and the strength or quality may be compared to a threshold that is determined according to the application of interest.
- One technique for detecting synonyms that differ from the original word only by punctuation or spacing is to run through the original word and the synonym, and remove all punctuation and spaces (both defined according to an accepted standard of character sets, e.g. UTF8). The system then compares the results, and if they are equal, the synonym falls into this class.
- These types of synonyms tend to be prevalent in Germanic languages. An example in English is woodshed ⁇ “wood shed”. Stripping out the spaces from both, we get “woodshed” and “woodshed” which are identical.
- An example of a punctuation difference is albertson's ⁇ albertsons. After punctuation removal, “albertson's” and “albertsons” become the same.
- the system can run a edit-distance procedure to align the original word and the phrase.
- Edit distance refers to the number of edits required to change one word to another word.
- the system detects this word as an acronym.
- the system collects the first characters of all the words in the phrase and runs the edit-distance procedure again against the single word. If they are sufficiently similar within a predetermined number of edits, the system deems the single word as an acronym.
- the system checks that all characters in the word align with the first character of each word in the phrase.
- Standard stemming as a conventional synonym-generation technique can often be overly conservative, because in the past it have been used to identify stems without the help of any additional signals.
- Embodiments of the present invention use standard stemming as just one signal in a system that produces high quality synonyms and stems.
- embodiments of the present invention uses “pseudostemming,” a technique that is fairly aggressive compared to conventional stemmers.
- the system concludes that the candidate synonym is a pseudostem. Otherwise, the system uses a sequence of tests: First the system computes the length of the common prefix the two words share. In one embodiment of the present invention, the system determines whether the number of characters of matching prefix divided by the maximum length of either string is greater than a given threshold. For example, for “shuttler” and “shuttling,” the common prefix is “shuttl,” of length five. The maximum length is nine, therefore the ratio is 5/9, which is 0.56. An empirically determined threshold can be 0.5, hence this first test passes.
- the system examines the leftover strings of both words after the common prefix, which in the above example would be “er” from “shuttler” and the string “ing” from “shuttling.”
- the system calculates the edit distance between the leftover strings, which is an edit distance of three in this example (using a character mismatch cost of one).
- the system can also require this edit distance of the leftover strings be less than a fraction of the maximum length of both strings.
- An edit distance of three is less than 4.4, hence in this case, the leftover edits would also pass this test. Because the two words in this example pass both tests, the system declares them to be pseudostems.
- the system can remove these marks with both language-specific and universal de-accenting. If the words are substantially similar after accent removal, they classify as lexical variants. In addition to removing accents in the original words, the system can further input the de-accented words to any of the above techniques. This additional operation allows the system to capture the case where, for example, a character may be accented in the phrase for an acronym, but is not accented in the acronym itself. In one embodiment, comparing an accented to unaccented character does not count as an edit in the pseudo-stemming or other techniques.
- the system can use linguistic rules specific to each language and develop a classifier that detects a word to be a “conservative” stemming variant of another word.
- the system can detect abbreviations by removing vowels from both words and measure the edit distance. The system then determines whether the edit distance between the two shortened words is sufficiently small compared with the maximum length of both words. For example, removing the vowels from “hours” produces “hrs.” The system computes the edit distance between “hrs” and “hrs,” which is 0. The maximum length in this example is three characters, hence the ratio is 0/3, or 0.0. This ratio is less than an acceptable edit-distance threshold, which is empirically determined.
- the above listed techniques are not exhaustive.
- the system can use the above techniques in addition to standard stemming techniques to identify trusted lexical synonyms.
- the system can use the Lovins and Porter stemmers.
- Other stemmers can also be suitable replacements.
- determining whether a word is a synonym involves considering: (1) a common result requirement, which specifies how frequently common query results should be produced when the word is substituted with the synonym in a query; and (2) a session switching requirement, which specifies how often a user switched the word with the synonym in a given session.
- the common result frequency and the session switching frequency provide a rough estimate of how closely the original word and the synonym are semantically related. Because the above detectors for lexical synonyms give us a stronger belief that the words are semantically related, we can lower our requirements for common results and for session switching for these classes of synonyms. The system can also determine how far to lower these requirements empirically.
- the system requires no common results for such lexical variants.
- the system can use 1 ⁇ 3 of the requirement for session switching as compared with general synonyms, because compounds and simple punctuation variants generally carry the same meaning and therefore are more likely to be synonyms.
- the system can trade-off a high session switching rate and a high frequency of occurrence of queries with the substitution anywhere in the logs for a decreased common results requirement.
- this includes a high threshold on session switching and the appearance anywhere in the logs (outside of sessions) of the synonym, which then triggers a lower threshold on common results.
- a synonym-generation technique that uses query changes to generate synonym rules may find synonym rules such as white ⁇ yellow or January ⁇ February, which can sometimes shift the topic of the query (e.g., cause “topicality-drifting”). Examples of such topic shifts can include transitions between locations, which can cause the system to return query results that apply to a completely different geographical region.
- the system uses a set of techniques that detect correlated terms, and may adjust system behavior in response. For instance, the system may detect a set of correlated terms that relate to a query term, and then structure a set of results for the query that convey both a “strict” set of results that do not encompass results from the set of correlated terms as well as an “expanded” set of results that also include search results derived from the correlated terms. Alternatively, the system may determine that such correlated are a negative influence, and be more conservative in building synonym rules for such correlated terms, or even filter out synonym rules relating to such correlated terms, For instance, the system may demote the signals generated by synonym rules that involve correlated terms.
- Techniques to detect correlated terms can include techniques to:
- a query term and a possible synonym can each comprise one or more words.
- Synonym transitions between locations can often affect query results. Synonyms that cause location transitions relate geographical entities to one another, e.g. New York ⁇ New Jersey, San Francisco ⁇ California, Miami ⁇ Florida, and Germany ⁇ France. Note that such problematic transitions can occur in multiple languages. For instance, the system may detect a transition from Ungarn ⁇ Oeck, the terms used for Hungary and Austria in the German language.
- the system uses geographic data to identify correlated geographic terms.
- the system receives a term and a possible synonym for the term.
- the system determines whether the term and the possible synonym are both present in the geographic data set, and, if so, uses the geographic data set to determine whether the possible synonym is a correlated geographic synonym for the term.
- the system receives as an input a geographic data set that lists major world geographic entities and the relationships between them.
- this geographic data set can include a list of countries, and the major cities within the countries.
- the geographic data set can also be more specific, e.g. including regions such as states, provinces, and/or counties.
- the geographic data set can optionally assign to each geographic entity one or more coordinates and/or a bounding box that describes a multi-dimensional area (such as a state, country, or large city) and/or shape.
- the system can use an automatic translation system to translate the name of each geographic entity in the geographic data set into a set of different available languages. For instance, if an entity name is “Deutschland” in German, the system can translate the entity name into “Alemania” (in Spanish) and “Germany” (in English), thereby producing a list of entity names in a number of languages that are associated with the same location. Furthermore, the system can take the output list from this translation process and add all of the diacritical variants (in each respective language) to the set of possible entity names for a location. Hence, the system associates the set of geographic entities in the geographic data set with a list of different ways to write each entity name in each of many languages.
- the system can then invert this list to create a mapping from all of the entity names in each list to each respective corresponding geographic entity.
- the translation process allows the translation of terms, but not transitions between words.
- the entity name “Munich” may be translated to “Munchen” (the German name for Kunststoff) as well, because both correspond to the same location, but “Munich” would never be mapped to “Berlin,” because the two cities are distinct.
- the geographic data set can be visualized as a tree of geographic entities, as shown in FIG. 5 .
- a set of countries 502 At the top level of the tree are a set of countries 502 , where each tree node that represents a country includes the set of words that are considered equivalent names for that country.
- the countries may be further broken down into geographic regions 504 , such as states, provinces, and/or counties, each of which can include associated cities 506 .
- the tree node for the country may instead point directly to a number of cities 506 in the country.
- a bounding box technique e.g.
- based on longitude and latitude data may be used to distinguish the areas covered by a geographic entity or to determine if two geographic entities overlap. Note that when the system checks to see if a term is a geographic entity in the geographic data set, the system typically does not simply stop after the first match of the term with a location and/or area. Instead, because a given entity name may show up more than once at different levels or within the same level of the tree, the system may continue to search through the entire geographic data set for additional matches. For instance, the system may check whether the term is the name of one or more countries 502 , regions 504 , and/or cities 506 .
- FIG. 6 illustrates the process of determining correlated geographic synonyms in one embodiment of the present invention.
- the system receives a term and a possible synonym for the term (operation 610 ).
- the system determines whether the term and the possible synonym are both present in the geographic data set (operation 620 ), which can involve determining geographic locations and/or areas related to the term and the possible synonym in the geographic data set. If the system finds no geographic entities in the geographic data set that match the term and/or the possible synonym (operation 630 ), the system determines that the term and the possible synonym are not correlated geographic synonyms, and the process completes.
- the system compares the two geographic locations and/or areas against a set of criteria to determine whether the possibly synonym term is a correlated geographic synonym (operation 640 ). For instance, the system may determine that the term and possible synonym to form a correlated geographic synonym if:
- the system analyzes the parent geographic area for transitions between cities and identifies the proximity of the two cities to determine whether the cities might be unrelated but have names that often correspond to reasonable synonyms. If the parent area or region for two cities is substantially the same, the system flags the two terms as correlated geographic synonyms. For example, “San Jose” and “San Francisco” share a parent region, California, and hence might be flagged as a correlated geographic synonym. To determine this, the system might make use of various proximity tests that identify whether an entity pair may be correlated. For instance, the system may only identify correlated geographic synonyms when the two terms are actually related in the real world due to a specified level of proximity.
- a fine-grained geographic data set may include cities contained in sub-country entities such as states or provinces, in which case this check may determine whether two cities are in the same state (e.g. a synonym rule mapping the city of Minneapolis and the city of St. Paul in the state of Minnesota, or a synonym rule mapping the city Davis to the city Sacramento in the state of California).
- the immediate parent region may have a coarser granularity, and checking the parent region for two cities may result in the system checking to see if the cities are both in the same country (e.g. mapping the city Kunststoff to the city Berlin in the country of Germany).
- the system can also determine a language variation and/or a lexical variation for the term and/or the possible synonym. For instance, the system may translate one or more terms into another language, or compute an unaccented form of one or more terms using a diacritical system. The system can then also check whether these additional variations are present as geographic entities in the geographic data set, thereby checking all translated and/or modified versions at the same time. Alternatively, the system may look up only one normalized form, for instance the unaccented form of a term. Looking up an unaccented form of a term or phrase may provide benefits when available synonym data includes obscure accented forms of terms which may not be present in an index of geographic entities.
- the system may determine that an expanded set of terms representing the original term and an expanded set of terms representing the possible synonyms can produce a number of geographic entities in the geographic data set (e.g. a single term, such as “Springfield,” may map to more than one town).
- the system may analyze the geographic data for all possible pairings from the two sets of possible terms to determine whether each respective pair forms a correlated geographic synonym. For instance, for every element original_entity in the geographic entity set corresponding to the original term, the system can iterate through every element synonym_entity in the geographic entity set for the possible synonym, adding each pair (original_entity, synonym_entity) to the list of pairs to be tested.
- the system can generate the pairs ⁇ (o1, s1) (o1, s2) (o1, s3) ⁇ for o1, and a corresponding set of pairs for o2 and o3 as well.
- the system determines the possible pairs of geographic entities, it can apply a set of tests and/or criteria (as described above) to determine whether each pair forms a correlated geographic synonym.
- the system considers how geographically-dense the city data for a country is in the geographic data set. Such geo-density data may be used as a factor in how aggressively the system decides on and/or handles correlated geographic synonyms. For instance, for countries with dense city data, the system can apply stricter geographic-closeness tests. Additionally, the system may automatically determine the density of cities in a region or country, and adapt accordingly.
- the system may interactively seek user feedback. For instance, the system may present the user with identified correlated geographic synonyms, and allow the user to make adjustments and/or corrections to the query and/or synonym behavior.
- the system may determine possible synonyms based on the context (e.g. the surrounding terms) for the original term and the context of the possible synonym.
- the system tracks subsuming contexts, where each subsequent context may be more general than a given target context. For instance, the terms York and Jersey alone may not be commonly found as a synonym rule. However, when the two include an anchoring term (“New”), the rule York ⁇ Jersey in the context (new :) becomes more likely, and the two terms become recognizable geographic entities (e.g., state names). Hence, checking for correlated geographic synonyms may involve checking longer phrases derived from the surrounding context.
- the geographic data set typically includes a limited amount of geographic data, and the system checks whether all or a number of possible terms and/or phrases in a given context are present in the geographic data set.
- the system may also incorporate data from the geographic data set as well as other query terms to determine whether the context of the query is incorrect (e.g. “Golden Gate Bridge Oakland” vs. “Golden Gate Bridge San Francisco”).
- geographic synonyms may improve query results. For instance, a user searching for a restaurant located near the border of the cities of Minneapolis and St. Paul, but actually in St. Paul, may (erroneously) use the query “Hunan Garden Minneapolis.” Collected synonym data may provide a synonym rule “Minneapolis ⁇ St. Paul” that could assist in this case, but such a rule might in turn be eliminated by a system that detects correlated geographic synonyms.
- One alternative is for the system to demote, but not eliminate, correlated geographic synonyms, so that high-rank results arising via the synonym rule will still be considered in the query results. In this example, a high-ranking result for the restaurant in the town of St. Paul could still be returned, even though the query specified Minneapolis.
- Another example is the query “Australia scuba rental” in light of a synonym rule Australia ⁇ Sydney. While Sydney is geographically in Australia, using the synonym rule may provide some beneficial results, and synonym rule demotion may be more appropriate than synonym rule elimination, depending on the circumstances, the query context, and the set of query results for all related queries.
- the system may be tuned to weigh separate criteria differently. For instance, the system may always eliminate country-to-country and city-to-containing-state transitions, but only reduce the weight of, and not eliminate, city-to-city transitions for cities in the same geographic region.
- the system may determine whether a term and a possibly synonym for the term are correlated geographic synonyms while actively processing queries (e.g. in an online mode), or while evaluating one or more synonym rules in an offline mode.
- synonym-generation approaches can be very effective in generating synonym candidates.
- synonym misidentification can still occur and words with opposite meanings can be falsely considered as synonyms.
- the above approach could misidentify “army” and “navy,” “cat” and “dog,” or “LCD” and “CRT” as synonyms. It is therefore desirable to screen the synonym-candidate pairs and filter out non-synonyms.
- Embodiments of the present invention provide a method and a system for generating a collection of non-synonymous pairs and using this collection as a heuristic to apply higher confidence thresholds to such pairs for inclusion as a synonyms.
- the inventive system includes two components. The first component identifies correlated pairs based on a document corpus. The second component uses a collection of correlated pairs to demote them as synonyms.
- the first task in identifying correlated pairs is to traverse a corpus of documents.
- a corpus refers a collection of documents, and can include all the pages available on the Web.
- a “document” is not limited to a Web page.
- a document can include any information based on conventional media, such as paper, or electronic media. Examples of documents include books, newspapers, news letters, emails, electronic files, applications, instant messenger (IM) messages, audio files, video files, or other data or applications that may reside on one or several of computer systems, such as a network.
- IM instant messenger
- the importance, or weight, of the occurrence of a term in a document increases proportionally with the number of times the term appears in the document, but is offset by the frequency of the word in the corpus. In other words, if a term is more likely to occur in a large number of documents, the importance of this word's occurrence decreases, because it is more likely that the term is commonly used and its occurrence carries less significance. In addition, documents from the same source or same author are more likely to contain the same words, and therefore such documents carry less weight in determining the importance of those terms which occur therein.
- the system can filter the corpus to improve the quality of the documents.
- the system can restrict the documents within a corpus to be of different authorship.
- “authorship” herein is broadly defined and not limited to mean only authors who wrote the document.
- documents of different authorship can be documents from different pages within one Web site, documents from different IP addresses, or documents submitted by different users.
- the system can differentiate documents according to the type of Web site where the document is hosted. For example, if a document is hosted on a Web page, the system can determine authorship based on the IP address and sub-directory names of the location where the document resides. If a document is within a Web-based bulletin-board system (BBS), the system can determine authorship of a post by the user ID of the user who posted.
- BBS Web-based bulletin-board system
- any type of document filtering schemes can be used to improve the quality of the corpus.
- list generally refers to structured data containing enumerated pieces of information, such as lists of restaurants, lists of automobile types, lists of names, etc.
- a list can be defined in a number of different ways. For example, a list may include an ordered list or unordered list.
- Special tags in a HyperText Markup Language (HTML) document identify the presence of ordered and unordered lists. An ordered list commences with an ⁇ OL> tag; whereas an unordered list commences with an ⁇ UL> tag. Each item in an ordered or unordered list is preceded by an ⁇ LI> tag.
- HTML HyperText Markup Language
- Another type of list may include a definition list.
- a special tag in an HTML document identifies the presence of a definition list, which commences with a ⁇ DL> tag. Each item in a definition list is preceded by a ⁇ DT> tag.
- Yet another type of list may include document headers. Special tags in a HTML document identify headers using ⁇ H1> through ⁇ H6> tags.
- Other types of lists may be presented in yet other ways. For example, a list may be presented as items in a table or as items separated by commas, spaces, or tabs. Details of how to identify and generate a list are provided in U.S.
- lists are not limited only to HTML lists.
- a list can be any enumeration of information delimited by one or more special characters.
- the system can traverse the lists during Web crawling. Other manual or automatic methods for list traversing are also possible.
- these lists of terms are considered as sets of interrelated terms.
- the system For each set of terms, the system records the frequency of encountering the set while traversing the corpus. Once all unique sets of terms, or lists, are collected, the system searches for term co-occurrence and rarity within sets. Particularly, the system searches for terms that occur frequently together, but do not occur frequently in all of the lists. For example, if “abc” and “123” occur in many lists, but only very occasionally together in a list, the correlation between “abc” and “123” is considered to be very low.
- the system computes an association or correlation value that represents the strength of equivalence between two terms.
- the system can adopt various models in computing the correlation between co-occurring list elements.
- the system computes the correlation as follows. The system measures the number of lists where both terms occur. For example, the system records a first number of lists where both “Lakers” and “Rockets” are present. The system also measures the total number of lists where either “Lakers,” or “Rockets,” or both are present. In one embodiment, the correlation is then computed as the first number divided by the total number. The result indicates the correlation between the two terms. If this result is greater than a predetermined threshold, the system places the two terms in a correlated-pair “blacklist.” Note that this example is only for illustration purposes. The system can adopt more fine-tuned and subtle models to more accurately reflect actual measured statistics.
- FIG. 7 presents a flow chart illustrating the process of identifying correlated pairs in accordance with one embodiment of the present invention.
- the system first traverses the documents in the corpus (operation 702 ).
- the system retrieves the lists from the corpus (operation 704 ).
- the system further records term presence in all the lists and frequency of occurrence within lists (operation 706 ).
- the system builds a map of terms and the number of unique lists in which they occur (operation 708 ). In one embodiment, the system only builds a map for terms for which the observed occurrence frequency is greater than a predetermined value (for example, 50).
- a predetermined value for example, 50.
- the system computes an association between two terms for all the terms that have been mapped (operation 710 ).
- the system performs the following operations.
- the system determines whether a term A co-occurs with a term B in lists containing over N associations and also in M unique lists.
- N is chosen to be 2 and M to be 10.
- an association refers to a correspondence between two terms within a list, such as two corresponding entries in a row. For example, “republican” and “democrat” can be one association.
- the system can identify an association by analyzing the HTML tags. Alternatively, or in addition, the system can identify associations based on human inputs.
- the system computes term A's correlation to term B, which is denoted as A ⁇ B and defined as: (number of times term A co-occurs with term B )*log[(total number of unique lists observed)/(number of unique lists containing term A )].
- the system records the association A ⁇ B.
- the system performs the above screening process for all the term pairs, and obtains a collection, or “blacklist,” of term pairs which can potentially be non-synonymous pairs (correlated pairs). Based on this blacklist, the system performs the second task of demoting the correlated pairs when determining whether the pair qualify as synonyms.
- the system can preclude term pairs present in the blacklist from being considered as synonyms.
- the system can also apply a threshold function to reflect a more subtle penalty, or demotion, imposed upon a correlated pair.
- the system applies a penalty formula to a correlated pair to ensure that, in order for the correlated pair to qualify as synonyms, a user is switching between the terms sufficiently frequently or that each term occurs frequently in high-ranking documents returned by queries based on the other term.
- the system determines whether a large number of switches are present from a query containing the original term (denoted as “o”) to an alternative query containing a substitute term or a synonym candidate (denoted as “a”).
- the system can measure a likelihood of the o ⁇ a switch over a large number of query sessions by different users. For example, the system can compute the ratio of the number of o ⁇ a switches over the total number of distinct queries including the original word or phrase over a long period of time, based on a large pool of users. This measurement indicates the likelihood or probability of a user switching from an original query to an alternative query.
- the system does not change the synonym thresholds. That is, even if the candidate words or phrases appear in the correlated-pair blacklist, the system does not penalize or demote the pair for consideration as synonyms, because a user is likely to switch between the pair based on empirical data.
- the system applies stricter requirements for the pair to qualify as synonyms. For example, the system can increase one or more thresholds as described in the computation model for the evidence variable.
- the system can set an o ⁇ a switch probability threshold to be 0.1. That is, the system measures the total number of o ⁇ a switches from a pool of users over a long period, and divide this number with the total number of queries containing the original word or phrase. If the result is equal to or greater than 0.1, the system does not change any of the thresholds used in the computation of evidence. If the result is less than 0.1, the system increases the base threshold for frequently_much_in_common to 0.9 and maintains the high threshold, thus making it more difficult for the correlated pair to qualify as synonyms.
- FIG. 8 presents a flow chart illustrating the process of screening correlated term pairs in accordance with one embodiment of the present invention.
- the system performs this process on every identified synonym candidate based on an original query.
- the system first determines whether a pair of synonym candidates are in the list of correlated pairs (operation 802 ). If so, the system applies further confidence constraints on the synonym candidates as described above (operation 804 ).
- the system determines whether the synonym candidates meet the new confidence thresholds (operation 806 ). If so, the system keeps the candidates as synonyms and generates an altered query based on the synonym (operation 808 ). Otherwise, the system discards the candidate (operation 812 ).
- the system determines whether the candidates meet the original confidence threshold as described in conjunction with FIG. 4 (operation 806 ). If so, the candidates are kept as synonyms (operation 808 ). Otherwise, the system discards the candidate (operation 812 ).
- FIG. 9 illustrates an exemplary computer system for identifying common co-occurring elements in lists in accordance with one embodiment of the present invention.
- a computer system 902 includes a processor 904 , a memory 906 and a storage device 908 .
- Computer system 902 is coupled to a display 914 , a keyboard 910 , and a pointing device 912 .
- Storage device 908 stores a number of applications, such as applications 920 and 922 . Also stored therein is a synonym identification program 916 , which includes a co-occurring elements determination module 918 . During operation, synonym identification program 916 is loaded into memory 906 and executed by processor 904 to perform the aforementioned operations.
- synonym rules provide generalized methods for discovering and generating context-sensitive synonyms, but may sometimes produce rules for words that are related but not really synonymous. Examples of such rules include white ⁇ yellow, 1 ⁇ 2, Monday ⁇ Tuesday, and cat ⁇ dog.
- a list of such related terms may be specified for a synonym system to adjust synonym rules and/or system behavior. For instance, synonym rules that involve such terms may be displayed differently, or may be given either an increased or reduced weight.
- specifying such a list of related terms in every possible language, and across languages, can involve considerable effort.
- the system uses a set of terms known to be related to identify additional related terms in different languages. During operation, the system receives two terms that are known to be related. Next, the system translates both terms into another language using an automated translation system. The system then adds the pair of translated terms to a gathered list of known related pairs.
- the system can receive one or more automatically-generated or manually-created pairs of related terns, where each pair in the list indicates two words that are related.
- Terms in the list of input pairs and in each given related pair may be specified in a common language or in different languages. For instance, a list of pairs specified in English can include: (red, green), (blue, red), (one, two), (vi, vii), and (dog, cat).
- a list of pairs may also be specified across languages, e.g. a mix of English and German: (red, blue), (red, pertaining) (eins, two), (aux, gelb).
- the technique described in the present invention can be used to determine related pairs across multiple languages for a wide range of input pairs.
- the set of examples in the previous paragraph comprise pairs of terms that are related to one another but typically considered non-synonyms.
- the system finds additional non-synonyms of this type across multiple languages.
- the system can instead receive as input a set of related pairs that are synonyms, for instance (cat, kitten), (fast, quick), and (weird, strange).
- the system finds additional synonyms across multiple languages.
- the system may use the resulting list of known related pairs in very different ways, depending on the relationship between the terms of the initial input pairs.
- the system uses an automatic translation system to translate terms into multiple languages. For instance, the system may receive the pair (red, green) (in this case, specified in English), and then translate the pair into French, Spanish, Italian, and/or other languages. In some cases, the system may find more than one possible translation in the new language, especially in languages where there may be multiple word forms for a given word. In this case, the system may add pairs to the gathered list of known related pairs for each combination of possible translations for the pair.
- the system may determine that “red” can be translated into both “roja” and “rojo,” and that green can be translated into “verde.” In this case, the system might determine that two additional pairs output for Spanish would be (roja, verde) and (rojo, verde). The system could automatically add these pairs into the gathered list, and then repeat the translation process for the original pair into another language, such as French.
- the system translates one or both terms into one or more languages.
- the system can then use the two resulting sets of translated terms to form same-language and/or cross-language pairs, and add those pairs to the gathered list. For instance, the system can take the cross-product of the two sets of translated terms found for the two original terms, and then add every possible pairing combination between the two sets to the gathered list.
- the system can use an access method to compare a potential pair of terms with the pairs in the gathered list. For instance, consider an application that has used the described techniques to determine pairs of non-synonym terms by expanding an initial set of known non-synonym pairs into a gathered list of non-synonym pairs. If a potential synonym pair being evaluated matches a pair in the gathered list, the system determines that the potential synonym pair is a non-synonym pair.
- the access method finds that this pair is present in the gathered list, and returns that the pair is likely to be a non-synonym pair. Otherwise, if a pair is not in the list, the access method may return “false,” to indicate that the pair was not in the gathered list.
- the gathered list of known related pairs may be used both interactively (online) and in a batch (offline) way.
- the system can access the gathered list during a query, to determine whether a possible synonym for a term should be considered during the query.
- the system may receive as input a set of possible synonym rules for an online query system, and adjust the confidence of or otherwise change behavior relating to non-synonym pairs based on the contents of the gathered list.
- the system can normalize a term and/or a translated term during the translation and/or lookup process. For instance, the system may generate both normalized and unnormalized versions of the pairs to ensure that unusual variations of terms are identified correctly.
- the system determines variations for one or both of the terms in the original input pair, thereby effectively increasing the number of known related pairs. For instance, the system can determine high-confidence synonyms for a term and/or normalize a term prior to translating the term. The system can take the cross-product for two sets of such variations (derived from an original known related pair), and then use all of the resulting known related pairs as inputs to the described method, thereby generating additional known related pairs for the gathered list.
- the system receives as an input a set of terms that collectively are related. For instance, the system might receive a set of all common colors, e.g. ⁇ red, green, blue, yellow, purple, etc ⁇ .
- the system can expand this set into an equivalent list of pairs comprising all possible pairings from the set, and then proceed to execute the previously-described method for each resulting pair.
- Exemplary sets of such related terms can include one or more of the following: different colors; different months; different days of the week; different numbers; different animals; and/or a set of terms specified by a user to be related.
- FIG. 10 presents a flow chart illustrating the process of generating a gathered list of known related pairs from an initial pair of known related terms. For instance, in the case where the initial pair of known related terms are two terms that are known to be related non-synonyms, this gathered list could serve as a blacklist of known non-synonym pairs.
- the system receives two terms known to be related (operation 1010 ).
- the system computes variations and/or normalized versions for each of the two terms (operation 1020 ), and then takes the cross-product of the resulting two sets of variations for the terms to generate a set of known related input pairs (operation 1030 ).
- the system translates each of the two terms in the pair into all available languages (operation 1040 ), and generates a normalized version of each resulting translated term (operation 1050 ).
- the system takes the cross-product between the two sets of translated terms generated for the two original terms (operation 1060 ). (Note that the system can include the original terms in the two sets when taking this cross-product, or also limit the cross-product operation to be on a per-language basis).
- the system then adds the initial and translated lists of known related pairs to a gathered list that can be used to detect related terms (operation 1070 ).
- FIG. 11 illustrates the process of using a gathered list of related term pairs to detect related terms.
- the system receives two possibly-related terms (operation 1110 ).
- the system proceeds to look up the two possibly-related terms in the gathered list of related terms (operation 1120 ). If both terms are present as a pair in the gathered list (operation 1130 ), the system flags the two possibly-related terms as a related pair (operation 1140 ), and handles them accordingly. Otherwise, the system continues to consider the two terms as unrelated terms.
- the system translates terms known to be related into other languages to increase the set of known related terms.
- the described technique allows terms known to be related in a first language to be used to improve query results for queries specified in additional languages.
- the input of the source list can be specified in any language (or mix of languages) that can be automatically translated into another language.
Abstract
Description
-
- [gm cars]
- [gm new car prices]
- [gm used car prices]
- [general motors used car prices]
-
- [: used car prices]
- [gm : car prices]
- [gm used : prices]
- [gm used car :]
- [: car prices]
- [gm : prices]
- [gm used :]
-
- before: no, after:yes}>
-
- before: no, after: yes}>
-
- before: no, after: yes},
{phrase: ford, common_urls: 0, before:no, after: no}>
}
- before: no, after: yes},
-
- {phrase: ford, common_urls: 0, before:no, after: no}>
}
{phrase: gm,
- {phrase: ford, common_urls: 0, before:no, after: no}>
-
- {phrase: 2005, common_urls: 0, before:no, after: no},
- {phrase: best, common_urls: 1, before:no, after: no}>
}
{phrase: gm,
-
- before: no, after: yes},
- {phrase: macdonalds, common_urls: 0, before: no, after: no}>
}
- {phrase: macdonalds, common_urls: 0, before: no, after: no}>
- before: no, after: yes},
-
- float x=(score-base)/(high-base);
- float y=(x−sqrt(x*x+4.0))/2.0;
- return 1.0+y;
- soft_and =frequently_alterable+2*frequently_much_in_common+0.5*frequently_altered+high_altering_ratio; evidence=1.0−exp(-soft_and/1.5),
where exp ( ) is the natural exponential function, and soft_and reflects the totality of the test metrics. The above formula is only one possible embodiment of the present invention. Other formulae are also possible for computing the confidence level of a synonym candidate.
-
- both terms identify different countries (e.g. Germany and the United States);
- both terms identify different regions in the same country and/or region (e.g. two states within the same country, such as New York and New Jersey);
- both terms identify different cities in the same country and/or region (e.g. two cities in the same state, such as San Francisco and San Jose in California);
- one term identifies a location, city, and/or area that is contained within a country or region specified by the other geographic location and/or area (e.g., “London” and “United Kingdom,” where United Kingdom is the country to which the city London belongs in the geographic data set; and/or the city “Atlanta,” which is in the region/state “Georgia” in the geographic data set); and/or
- both terms identify different cities contained within a bounded area defined by a specified distance and/or shape (e.g. two cities within 100 miles of one another).
The system may determine criteria for correlated geographic synonyms based on observed problem synonyms or criteria received from a user or administrator. For instance, the system may determine the above criteria based on an observation that issues with correlated synonyms often arise for two geographic entities at a peer level (e.g. two countries, or two peer geographic entities in a country and/or region) or when one geographic entity contains the second geographic entity. If the system finds based on the criteria that the two terms form a correlated geographic synonym (operation 650), the system may in response filter a synonym rule or otherwise adjust synonym behavior (operation 660). If not, the system continues to consider the term and the possible synonym as valid synonyms.
(number of times term A co-occurs with term B)*log[(total number of unique lists observed)/(number of unique lists containing term A)].
Claims (27)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/877,407 US8798988B1 (en) | 2006-10-24 | 2007-10-23 | Identifying related terms in different languages |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US85440906P | 2006-10-24 | 2006-10-24 | |
US94886507P | 2007-07-10 | 2007-07-10 | |
US11/877,407 US8798988B1 (en) | 2006-10-24 | 2007-10-23 | Identifying related terms in different languages |
Publications (1)
Publication Number | Publication Date |
---|---|
US8798988B1 true US8798988B1 (en) | 2014-08-05 |
Family
ID=51229147
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/877,407 Expired - Fee Related US8798988B1 (en) | 2006-10-24 | 2007-10-23 | Identifying related terms in different languages |
Country Status (1)
Country | Link |
---|---|
US (1) | US8798988B1 (en) |
Cited By (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20140149106A1 (en) * | 2012-11-29 | 2014-05-29 | Hewlett-Packard Development Company, L.P | Categorization Based on Word Distance |
US20150161291A1 (en) * | 2013-09-16 | 2015-06-11 | Here Global B.V. | Enhanced system and method for static query generation and entry |
US9164985B1 (en) * | 2011-11-29 | 2015-10-20 | Google Inc. | Techniques for detecting poor machine translations of key terms |
US20150302012A1 (en) * | 2010-12-10 | 2015-10-22 | Amazon Technologies, Inc. | Generating suggested search queries |
US9361362B1 (en) * | 2009-08-15 | 2016-06-07 | Google Inc. | Synonym generation using online decompounding and transitivity |
US20170357642A1 (en) * | 2016-06-14 | 2017-12-14 | Babel Street, Inc. | Cross Lingual Search using Multi-Language Ontology for Text Based Communication |
US20180046618A1 (en) * | 2016-08-10 | 2018-02-15 | Samsung Electronics Co., Ltd. | Parallel processing-based translation method and apparatus |
US10671577B2 (en) * | 2016-09-23 | 2020-06-02 | International Business Machines Corporation | Merging synonymous entities from multiple structured sources into a dataset |
Citations (26)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5331556A (en) * | 1993-06-28 | 1994-07-19 | General Electric Company | Method for natural language data processing using morphological and part-of-speech information |
US5594641A (en) * | 1992-07-20 | 1997-01-14 | Xerox Corporation | Finite-state transduction of related word forms for text indexing and retrieval |
US5832474A (en) * | 1996-02-26 | 1998-11-03 | Matsushita Electric Industrial Co., Ltd. | Document search and retrieval system with partial match searching of user-drawn annotations |
US5956711A (en) * | 1997-01-16 | 1999-09-21 | Walter J. Sullivan, III | Database system with restricted keyword list and bi-directional keyword translation |
US6226638B1 (en) * | 1998-03-18 | 2001-05-01 | Fujitsu Limited | Information searching apparatus for displaying an expansion history and its method |
US6466901B1 (en) * | 1998-11-30 | 2002-10-15 | Apple Computer, Inc. | Multi-language document search and retrieval system |
US20030061122A1 (en) | 2001-08-08 | 2003-03-27 | Berkowitz Gary Charles | Knowledge-based e-catalog procurement system and method |
US20030083860A1 (en) * | 2001-03-16 | 2003-05-01 | Eli Abir | Content conversion method and apparatus |
US20030149686A1 (en) * | 2002-02-01 | 2003-08-07 | International Business Machines Corporation | Method and system for searching a multi-lingual database |
US20030171910A1 (en) * | 2001-03-16 | 2003-09-11 | Eli Abir | Word association method and apparatus |
US20040059564A1 (en) * | 2002-09-19 | 2004-03-25 | Ming Zhou | Method and system for retrieving hint sentences using expanded queries |
US20040064447A1 (en) * | 2002-09-27 | 2004-04-01 | Simske Steven J. | System and method for management of synonymic searching |
US20040122656A1 (en) * | 2001-03-16 | 2004-06-24 | Eli Abir | Knowledge system method and appparatus |
US6847960B1 (en) * | 1999-03-29 | 2005-01-25 | Nec Corporation | Document retrieval by information unit |
US20050125215A1 (en) * | 2003-12-05 | 2005-06-09 | Microsoft Corporation | Synonymous collocation extraction using translation information |
US20060106595A1 (en) * | 2004-11-15 | 2006-05-18 | Microsoft Corporation | Unsupervised learning of paraphrase/translation alternations and selective application thereof |
US20060142994A1 (en) * | 2002-09-19 | 2006-06-29 | Microsoft Corporation | Method and system for detecting user intentions in retrieval of hint sentences |
US7152031B1 (en) * | 2000-02-25 | 2006-12-19 | Novell, Inc. | Construction, manipulation, and comparison of a multi-dimensional semantic space |
US7155427B1 (en) * | 2002-10-30 | 2006-12-26 | Oracle International Corporation | Configurable search tool for finding and scoring non-exact matches in a relational database |
US20070203929A1 (en) * | 2006-02-28 | 2007-08-30 | Ebay Inc. | Expansion of database search queries |
US7277851B1 (en) * | 2000-11-22 | 2007-10-02 | Tellme Networks, Inc. | Automated creation of phonemic variations |
US20100125605A1 (en) * | 2008-11-18 | 2010-05-20 | Yahoo! Inc. | System and method for data privacy in url based context queries |
US7853555B2 (en) * | 2006-04-19 | 2010-12-14 | Raytheon Company | Enhancing multilingual data querying |
US7991608B2 (en) * | 2006-04-19 | 2011-08-02 | Raytheon Company | Multilingual data querying |
US8566363B2 (en) * | 2011-02-25 | 2013-10-22 | Empire Technology Development Llc | Ontology expansion |
US8577924B2 (en) * | 2008-12-15 | 2013-11-05 | Raytheon Company | Determining base attributes for terms |
-
2007
- 2007-10-23 US US11/877,407 patent/US8798988B1/en not_active Expired - Fee Related
Patent Citations (32)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5594641A (en) * | 1992-07-20 | 1997-01-14 | Xerox Corporation | Finite-state transduction of related word forms for text indexing and retrieval |
US5331556A (en) * | 1993-06-28 | 1994-07-19 | General Electric Company | Method for natural language data processing using morphological and part-of-speech information |
US5832474A (en) * | 1996-02-26 | 1998-11-03 | Matsushita Electric Industrial Co., Ltd. | Document search and retrieval system with partial match searching of user-drawn annotations |
US5956711A (en) * | 1997-01-16 | 1999-09-21 | Walter J. Sullivan, III | Database system with restricted keyword list and bi-directional keyword translation |
US6226638B1 (en) * | 1998-03-18 | 2001-05-01 | Fujitsu Limited | Information searching apparatus for displaying an expansion history and its method |
US6466901B1 (en) * | 1998-11-30 | 2002-10-15 | Apple Computer, Inc. | Multi-language document search and retrieval system |
US6847960B1 (en) * | 1999-03-29 | 2005-01-25 | Nec Corporation | Document retrieval by information unit |
US7152031B1 (en) * | 2000-02-25 | 2006-12-19 | Novell, Inc. | Construction, manipulation, and comparison of a multi-dimensional semantic space |
US7277851B1 (en) * | 2000-11-22 | 2007-10-02 | Tellme Networks, Inc. | Automated creation of phonemic variations |
US20030171910A1 (en) * | 2001-03-16 | 2003-09-11 | Eli Abir | Word association method and apparatus |
US7711547B2 (en) * | 2001-03-16 | 2010-05-04 | Meaningful Machines, L.L.C. | Word association method and apparatus |
US20030083860A1 (en) * | 2001-03-16 | 2003-05-01 | Eli Abir | Content conversion method and apparatus |
US20040122656A1 (en) * | 2001-03-16 | 2004-06-24 | Eli Abir | Knowledge system method and appparatus |
US7860706B2 (en) * | 2001-03-16 | 2010-12-28 | Eli Abir | Knowledge system method and appparatus |
US20030061122A1 (en) | 2001-08-08 | 2003-03-27 | Berkowitz Gary Charles | Knowledge-based e-catalog procurement system and method |
US6952691B2 (en) * | 2002-02-01 | 2005-10-04 | International Business Machines Corporation | Method and system for searching a multi-lingual database |
US20030149686A1 (en) * | 2002-02-01 | 2003-08-07 | International Business Machines Corporation | Method and system for searching a multi-lingual database |
US7562082B2 (en) * | 2002-09-19 | 2009-07-14 | Microsoft Corporation | Method and system for detecting user intentions in retrieval of hint sentences |
US20060142994A1 (en) * | 2002-09-19 | 2006-06-29 | Microsoft Corporation | Method and system for detecting user intentions in retrieval of hint sentences |
US7171351B2 (en) * | 2002-09-19 | 2007-01-30 | Microsoft Corporation | Method and system for retrieving hint sentences using expanded queries |
US20040059564A1 (en) * | 2002-09-19 | 2004-03-25 | Ming Zhou | Method and system for retrieving hint sentences using expanded queries |
US20040064447A1 (en) * | 2002-09-27 | 2004-04-01 | Simske Steven J. | System and method for management of synonymic searching |
US7155427B1 (en) * | 2002-10-30 | 2006-12-26 | Oracle International Corporation | Configurable search tool for finding and scoring non-exact matches in a relational database |
US7689412B2 (en) * | 2003-12-05 | 2010-03-30 | Microsoft Corporation | Synonymous collocation extraction using translation information |
US20050125215A1 (en) * | 2003-12-05 | 2005-06-09 | Microsoft Corporation | Synonymous collocation extraction using translation information |
US20060106595A1 (en) * | 2004-11-15 | 2006-05-18 | Microsoft Corporation | Unsupervised learning of paraphrase/translation alternations and selective application thereof |
US20070203929A1 (en) * | 2006-02-28 | 2007-08-30 | Ebay Inc. | Expansion of database search queries |
US7853555B2 (en) * | 2006-04-19 | 2010-12-14 | Raytheon Company | Enhancing multilingual data querying |
US7991608B2 (en) * | 2006-04-19 | 2011-08-02 | Raytheon Company | Multilingual data querying |
US20100125605A1 (en) * | 2008-11-18 | 2010-05-20 | Yahoo! Inc. | System and method for data privacy in url based context queries |
US8577924B2 (en) * | 2008-12-15 | 2013-11-05 | Raytheon Company | Determining base attributes for terms |
US8566363B2 (en) * | 2011-02-25 | 2013-10-22 | Empire Technology Development Llc | Ontology expansion |
Non-Patent Citations (24)
Title |
---|
Abusalah, Mustafa, John Tait, and Michael Oakes. "Cross Language Information Retrieval using Multilingual Ontology as Translation and Query Expansion Base." Polibits 40 (2009): 13-16. * |
Ben Carterette, Rosie Jones, Wiley Greiner, and Cory Barr. 2006. N semantic classes are harder than two. In Proceedings of the COLING/ACL on Main conference poster sessions (COLING-ACL '06). Association for Computational Linguistics, Stroudsburg, PA, USA, 49-56. * |
Bollegala, Danushka; Matsuo, Yutaka; Ishizuka, Mitsuru. Measuring semantic similarity between words using web search engines. In Proceedings of the 16th international conference on World Wide Web (WWW '07). ACM, New York, NY, USA, 757-766. DOI=10.1145/1242572.1242675 http://doi.acm.org/10.1145/1242572.1242675. * |
Diana Inkpen, Graeme Hirst. Building and Using a Lexical Knowledge Base of Near-Synonym Differences. Computational Linguistics. Jun. 2006, vol. 32, No. 2, pp. 223-262. Posted Online Jun. 27, 2006. * |
Diana lnkpen Graeme Hirst. Building and Using a Lexical Knowledge Base of Near-Synonym Differences. Computational Linguistics. Jun. 2006, vol. 32, No. 2, pp. 223-262. Posted Online Jun. 27, 2006. * |
Diana Zaiu Inkpen and Graeme Hirst. 2002. Acquiring collocations for lexical choice between near-synonyms. In Proceedings of the ACL-02 workshop on Unsupervised lexical acquisition-vol. 9 (ULA '02), vol. 9. Association for Computational Linguistics, Stroudsburg, PA, USA, 67-76. DOI=10.3115/1118627.1118636 http://dx.doi.org/10.3115/1118627.1118. * |
Diana Zaiu Inkpen and Graeme Hirst. 2002. Acquiring collocations for lexical choice between near-synonyms. In Proceedings of the ACL-02 workshop on Unsupervised lexical acquisition—vol. 9 (ULA '02), vol. 9. Association for Computational Linguistics, Stroudsburg, PA, USA, 67-76. DOI=10.3115/1118627.1118636 http://dx.doi.org/10.3115/1118627.1118. * |
Frank Smadja, Kathleen R. McKeown, and Vasileios Hatzivassiloglou. 1996. Translating collocations for bilingual lexicons: a statistical approach. Comput. Linguist. 22, (Mar. 1, 1996), 1-38. * |
G. Totkov, P. Ivanova, Iv. Riskov. Automated Improving and Forming Wordnet Synsets on Conventional (Non Computer Based) Synonym and Bilingual Dictionaries. 2003. * |
Hua Wu and Ming Zhou. 2003. Optimizing synonym extraction using monolingual and bilingual resources. In Proceedings of the second international workshop on Paraphrasing-vol. 16 (Paraphrase '03), vol. 16. Association for Computational Linguistics, Stroudsburg, PA, USA, 72-79. DOI=10.3115/1118984.1118994 http://dx.doi.org/10.3115/1118984.1118994. * |
Hua Wu and Ming Zhou. 2003. Optimizing synonym extraction using monolingual and bilingual resources. In Proceedings of the second international workshop on Paraphrasing—vol. 16 (Paraphrase '03), vol. 16. Association for Computational Linguistics, Stroudsburg, PA, USA, 72-79. DOI=10.3115/1118984.1118994 http://dx.doi.org/10.3115/1118984.1118994. * |
Hua Wu and Ming Zhou. 2003. Synonymous collocation extraction using translation information. In Proceedings of the 41st Annual Meeting on Association for Computational Linguistics-vol. 1 (ACL '03), vol. 1. Association for Computational Linguistics, Stroudsburg, PA, USA, 120-127. DOI=10.3115/1075096.1075112 http://dx.doi.org/10.3115/1075096.1075. * |
Hua Wu and Ming Zhou. 2003. Synonymous collocation extraction using translation information. In Proceedings of the 41st Annual Meeting on Association for Computational Linguistics—vol. 1 (ACL '03), vol. 1. Association for Computational Linguistics, Stroudsburg, PA, USA, 120-127. DOI=10.3115/1075096.1075112 http://dx.doi.org/10.3115/1075096.1075. * |
Inkpen Diana, and Graeme Hirst. "Building and using a lexical knowledge base of near-synonym differences." Computational Linguistics 32.2 ( Jun. 2006): 223-262. * |
Jones, Rosie, et al. "Generating query substitutions." Proceedings of the 15th international conference on World Wide Web. ACM, 2006. * |
Knight, Kevin. "Building a large ontology for machine translation." Proceedings of the workshop on Human Language Technology. Association for Computational Linguistics, 1993. * |
Noy, Natalya F., and Mark A. Musen. "The PROMPT suite: interactive tools for ontology merging and mapping." International Journal of Human-Computer Studies 59.6 (2003): 983-1024. * |
Office Action for related case (U.S. Appl. No. 11/582,767), mailed from USPTO on Sep. 15, 2008. |
Philip Edmonds and Graeme Hirst. 2002. Near-synonymy and lexical choice. <em>Comput. Linguist.</em> 28, (Jun. 2, 2002), 105-144. DOI=10.1162/089120102760173625 http://dx.doi.org/10.1162/089120102760173625. * |
Philip Edmonds and Graeme Hirst. 2002. Near-synonymy and lexical choice. Comput. Linguist. 28, (Jun. 2, 2002), 105-144. DOI=10.1162/089120102760173625 http://dx.doi.org/10.1162/089120102760173625. * |
Sang, Erik Tjong Kim, and Katja Hofmann. "Automatic extraction of dutch hypernym-hyponym pairs." Proceedings of CLIN-2006. Leuven, Belgium (2007). * |
Sang, Erik Tjong Kim, and Katja Hofmann. "Automatic extraction of dutch hypernym-hyponym pairs." Proceedings of CLIN—2006. Leuven, Belgium (2007). * |
Sarrafzadeh, Bahareh, and Mehrnoush Shamsfard. "Parallel Annotation and Population: A Cross-Language Experience." Computer Engineering and Technology, 2009. ICCET'09. International Conference on. vol. 2. IEEE, 2009. * |
Snow, Rion, Daniel Jurafsky, and Andrew Y. Ng. "Semantic taxonomy induction from heterogenous evidence." Proceedings of the 21st International Conference on Computational Linguistics and the 44th annual meeting of the Association for Computational Linguistics. Association for Computational Linguistics, 2006. * |
Cited By (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9361362B1 (en) * | 2009-08-15 | 2016-06-07 | Google Inc. | Synonym generation using online decompounding and transitivity |
US20150302012A1 (en) * | 2010-12-10 | 2015-10-22 | Amazon Technologies, Inc. | Generating suggested search queries |
US9164985B1 (en) * | 2011-11-29 | 2015-10-20 | Google Inc. | Techniques for detecting poor machine translations of key terms |
US20140149106A1 (en) * | 2012-11-29 | 2014-05-29 | Hewlett-Packard Development Company, L.P | Categorization Based on Word Distance |
US9098487B2 (en) * | 2012-11-29 | 2015-08-04 | Hewlett-Packard Development Company, L.P. | Categorization based on word distance |
US20150161291A1 (en) * | 2013-09-16 | 2015-06-11 | Here Global B.V. | Enhanced system and method for static query generation and entry |
US9600228B2 (en) * | 2013-09-16 | 2017-03-21 | Here Global B.V. | Enhanced system and method for static query generation and entry |
US20170357642A1 (en) * | 2016-06-14 | 2017-12-14 | Babel Street, Inc. | Cross Lingual Search using Multi-Language Ontology for Text Based Communication |
US20180046618A1 (en) * | 2016-08-10 | 2018-02-15 | Samsung Electronics Co., Ltd. | Parallel processing-based translation method and apparatus |
US10902216B2 (en) * | 2016-08-10 | 2021-01-26 | Samsung Electronics Co., Ltd. | Parallel processing-based translation method and apparatus |
US10671577B2 (en) * | 2016-09-23 | 2020-06-02 | International Business Machines Corporation | Merging synonymous entities from multiple structured sources into a dataset |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9239823B1 (en) | Identifying common co-occurring elements in lists | |
US8484188B1 (en) | Using geographic data to identify correlated geographic synonyms | |
US8392441B1 (en) | Synonym generation using online decompounding and transitivity | |
US7925498B1 (en) | Identifying a synonym with N-gram agreement for a query phrase | |
US8001136B1 (en) | Longest-common-subsequence detection for common synonyms | |
US8661012B1 (en) | Ensuring that a synonym for a query phrase does not drop information present in the query phrase | |
US7636714B1 (en) | Determining query term synonyms within query context | |
US9400838B2 (en) | System and method for searching for a query | |
US8122022B1 (en) | Abbreviation detection for common synonym generation | |
US8798988B1 (en) | Identifying related terms in different languages | |
US9697249B1 (en) | Estimating confidence for query revision models | |
CA2471592C (en) | Systems, methods and software for hyperlinking names | |
CA2536265C (en) | System and method for processing a query | |
US8086557B2 (en) | Method and system for retrieving statements of information sources and associating a factuality assessment to the statements | |
US11222310B2 (en) | Automatic tagging for online job listings | |
US20050222989A1 (en) | Results based personalization of advertisements in a search engine | |
US20150006563A1 (en) | Transitive Synonym Creation | |
US20110179026A1 (en) | Related Concept Selection Using Semantic and Contextual Relationships | |
US9183297B1 (en) | Method and apparatus for generating lexical synonyms for query terms | |
Milić-Frayling | Text processing and information retrieval | |
AU2011253680B2 (en) | Systems, methods, and software for hyperlinking names | |
Viriyayudhakorn | Thai-English Translation and Synonym Pairs Extraction in Health-related Web Documents |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:UPSTILL, TRYSTAN G.;BAKER, STEVEN D.;SIGNING DATES FROM 20070506 TO 20070522;REEL/FRAME:020203/0488 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044277/0001Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551)Year of fee payment: 4 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20220805 |
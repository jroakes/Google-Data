US20140019431A1 - Method and Apparatus for Conducting a Search - Google Patents
Method and Apparatus for Conducting a Search Download PDFInfo
- Publication number
- US20140019431A1 US20140019431A1 US13/804,382 US201313804382A US2014019431A1 US 20140019431 A1 US20140019431 A1 US 20140019431A1 US 201313804382 A US201313804382 A US 201313804382A US 2014019431 A1 US2014019431 A1 US 2014019431A1
- Authority
- US
- United States
- Prior art keywords
- image
- query
- feature
- search
- user
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/50—Information retrieval; Database structures therefor; File system structures therefor of still image data
- G06F16/53—Querying
- G06F16/532—Query formulation, e.g. graphical querying
-
- G06F17/30277—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/50—Information retrieval; Database structures therefor; File system structures therefor of still image data
- G06F16/58—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
- G06F16/583—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually using metadata automatically derived from the content
Definitions
- This invention relates to a method and apparatus for searching for images, in particular the field known as CBIR (Content based image retrieval) or reverse image searching.
- CBIR Content based image retrieval
- reverse image searching a method and apparatus for searching for images, in particular the field known as CBIR (Content based image retrieval) or reverse image searching.
- CBIR CBIR
- TinEye http://www.tineye.com/.
- US2012123976 describes methods and systems for object-sensitive image searches. These methods and systems are usable for receiving a query for an image of an object and providing a ranked list of query results to the user based on a ranking of the images.
- the object-sensitive image searches may generate a pre-trained multi-instance learning (MIL) model trained from free training data from users sharing images at web sites to identify a common pattern of the object.
- MIL multi-instance learning
- US2012117051 describes how search queries containing multiple modes of query input are used to identify responsive results.
- the search queries can be composed of combinations of keyword or text input, image input, video input, audio input, or other modes of input.
- the multiple modes of query input can be presented in an initial search request, or an initial request containing a single type of query input can be supplemented with a second type of input.
- US2012030234 describes a computer-implemented method for generating a search query for searching a source of data.
- the method comprises: a) receiving image and/or text data; b) extracting one or more search query parameters from the image and/or text data; and c) generating the search query from the or each extracted parameter.
- Search is, fundamentally, a way to explore a space.
- the space that is being searched is typically the space of web pages, and the space is organized around the textual content of those pages, as well as the relationships between them.
- This space can be visualized as a large graph (in the mathematical sense of nodes connected by edges with arbitrary connections, including cycles, permissible). Navigating the space is only really possible by following links from one site to another: in other words, the search engine's influence ends as soon as you visit a page it has linked you to.
- US2010/0312787 recognizes the problem of specifying parameters that control the scope of the search.
- a user interface is presented which comprises a first screen portion for enabling a search and at least one further screen portion for enabling a sub-search.
- the user is able to dynamically vary the scope of the on-going search by varying the prioritization of the sub-searches and/or varying the sub-searches which are part of the search.
- the results of the search are provided in real time as the search progresses and the scope is varied without terminating the on-going search.
- WO2012/129062 describes a graphical user interface having a query screen with a query development workspace and a search results panel.
- the visual representation may enable users of a document searching system to more fully understand the query that is being submitted or has been submitted.
- WO2007/137289 describes a user interface having multiple sections which are independently updatable.
- the sections include a section for inputting a search query, a section for displaying search results and a drop region for moving a result into a notebook.
- the notebook may be shared with other users and is a virtual basket for collecting and organizing search results.
- US2012/0159368 aims to facilitate search history navigation.
- First and second search icons corresponding to first and second searches are presented on a graphical user interface. By selecting one of the icons, a user can access the search criteria used to generate the results, the quantity of results, the results themselves or any combination thereof.
- US2010/0088647 describes the difficulties of searching for images based on a text-based submission of an image query. This is addressed by providing a graphical user interface in which the images are clustered and each cluster is presented with a name for that cluster.
- the applicant has recognized the need for an improved searching method and apparatus.
- a computer-implemented method of conducting a search comprising receiving a first image query which comprises a user selection of a first feature within a first user selected image; searching for results which match said first image query; outputting said first search results to a graphical user interface for said user; receiving a second image query which comprises a user selection of a second feature within a second user selected image which is selected from within said first search results; repeating said searching and outputting steps based on said second image query; displaying said first and second search results together on said graphical user interface and receiving a third image query based on a third user selected image which is selected from within said first search results and said second search results.
- This method may be implemented on a system.
- a system for conducting a search comprising: a processor which is configured to receive a first user image query comprising a user selection of a first feature within a first user selected image; a search engine which is configured to search for results which match said first image query; output said search results to a graphical user interface for said user; wherein said processor is further configured to receive a second image query which is comprises a user selection of a second feature within a second user selected image selected from within said first search results; wherein said search engine is further configured to repeat said searching and outputting steps based on said second image query; display said first and second search results together on said graphical user interface and receive a third image query based on a third user selected image which is selected from within said first search results and said second search results.
- the third image query may be processed in a similar manner to the first and second image queries. In other words, the searching, outputting and displaying steps may be repeated. It will be appreciated that there is no limit to the number of subsequent image queries which may be received.
- Each feature may be a subsection of said user selected image, e.g. a chair within a picture of a room.
- the feature may be a shape, color, texture, pattern or other parameter of an object within said user selected image.
- the or each selected feature from each selected image may be the same or different.
- each image query may be a composite image query comprising at least one feature selected from each of a plurality of user selected images.
- the second query may comprise a composite image query formed from a user selection of a second feature within a second image selected from within said first search results and a user selection of a feature within a different image also selected from within said first search results.
- the third query may comprise a composite image query formed from a user selection of a third feature within a third image selected from within said second search results and a user selection of a feature within an image selected from within said first search results.
- the composite image query may be a combination all the selected features.
- the invention allows the user to search from multiple images as well as specifying what exactly it is about an image that they want to search for.
- an improved apparatus for searching is provided.
- At least one of said user selected images may be segmented into a plurality of objects which may be presented to a user, e.g. on a user interface. Said feature may be selected from one of said plurality of objects, e.g. by clicking on said object.
- a weight may be applied to each selected feature when combining to form said composite image. Said weight may be adjusted by said user.
- the invention further provides processor control code to implement the above-described systems and methods, for example on a general purpose computer system or on a digital signal processor (DSP).
- the code is provided on a physical data carrier such as a disk, CD- or DVD-ROM, programmed memory such as non-volatile memory (eg Flash) or read-only memory (Firmware).
- Code (and/or data) to implement embodiments of the invention may comprise source, object or executable code in a conventional programming language (interpreted or compiled) such as C, or assembly code. As the skilled person will appreciate such code and/or data may be distributed between a plurality of coupled components in communication with one another.
- FIG. 1 is a flowchart showing the steps of a method for selecting images
- FIG. 2 a shows one application of the method of FIG. 1 ;
- FIG. 2 b shows an alternative application of the method of FIG. 1 ;
- FIGS. 3 a and 3 b are representations of weighting which is an optional feature in the method of FIG. 1 ;
- FIGS. 4 a and 4 b illustrate different ways of selecting an input image for the method of FIG. 1 ;
- FIG. 5 a is an illustration of a typical system for implementing the method
- FIG. 5 b is a screenshot showing an example of how the browser extension (with Google's Chrome browser) might be implemented;
- FIG. 6 is a flowchart of an iterative search through multiple search results
- FIGS. 7 a to 7 c show graphical user interface at various stages through FIG. 6 allowing a user to navigate a search
- FIGS. 8 a and 8 b are alternative graphical user interfaces for presenting search results to a user.
- FIG. 9 is a block diagram of the system for implementing the method of FIG. 6 .
- the first step S 100 is for a user to select an image to form the basis of the search.
- the user specifies which feature(s) within the selected image are to be used in the search (step S 102 ).
- the features may be one or more of color, coherence, pattern, texture or shape of an image, or a subsection of an image.
- the feature may be the whole image itself.
- Color coherence is a measure of the importance of the color within an image. For example, some red may be scattered (perhaps invisibly) through an image (say of a human face) and this would have a value for coherence that is less than an image containing a coherent block of red (say in a rose).
- Rectangular selection boxes which are overlaid on the original image (as shown in FIG. 2 a )
- Polygonal (the user selects a number of points on the edge of the area they're interested in, and a polygon is created that joins those points)
- Automatic segmentation in this case, the system automatically segments the image into a number of objects, and the user is able to simply click on one object (or more than one object) to indicate which one they are interested in).
- the next step S 104 is to consider whether or not other images are to be added into the search. If additional images are to be used, the method loops back to the first step and repeats the selection of the image and the selection of the feature within the image. If additional images are not to be used, the method combines the selected image(s) and feature(s) at step S 106 to create a composite query which is searched. Creating the composite query may comprise creating a composite image made up of the selected image(s) or feature(s) but it is also possible to combine the selections without creating a composite image. This combination step may be termed ‘Clamp and Combine’.
- clamping and combining allows the user to select specific aspects of an image (for example its shape alone, or a combination of color and texture) which are then “clamped” into the search. This effectively filters the search results with multiple clamps, which when combined provide a more refined and useful end result.
- the feature(s) selected may be part of an image or a feature within the part.
- the user can indicate which features they want to search, and can combine that partial image with another (whole or partial) image.
- the user indication of the feature(s) within a (whole or partial) image(s) may be a textual description. For example, the user may say “I want to search for an image that has the color of this part of image 1 but the shape of this part of image 2”.
- Automated segmentation facilitates such selection. The segmentation would enable the user to select an object within an image (e.g. a car, a dress, a cat or a tree) by simply clicking on the object of interest.
- the system could optionally provide a textual description of the selected feature(s) and image(s), for example by displaying a message such as: “You have selected an image of a lady wearing a black dress”. The user indication could then be confirmation that the message is in line with their selection.
- An improvement which is optionally included in the method is to add weight features according to how strongly the user would like to see those features displayed in the next round of search results. As shown at step S 108 , these weights may be presented to a user. At step S 110 , user input on weighting is received. The user input may be in response to the presentation at step S 108 or may be independently input.
- the user also has the ability to impose a structured domain filter on the image. For example, the user might select an image of a dress but restrict the search to the domain of skirts or curtains, to find a different type of item that is of the same color.
- step S 114 the search is carried out at step S 114 and the results are output (step S 116 ).
- a number of different algorithms may be applied for the searching itself. Examples include:
- Color matching comparing histograms of colors using chi-squared distance.
- Shape matching a method such as Histogram of oriented gradients (HOG: http://en.wikipedia.org/wiki/Histogram_of_oriented_gradients)
- Texture matching a method such as that described by Haralick in his 1973 paper: http://dceanalysis.bigr.nl/Haralick73Textural %20features %20for %20image %20classification.pdf
- Pattern matching matching larger-scale patterns such as stripes, dots, flowers and checks that appear on clothing and other products.
- the invention is not dependent on these specific methods: it could be deployed using a different set of algorithms for matching shape, color, pattern and texture, or indeed using algorithms for matching a range of other feature types (e.g. automatically extracted objects).
- the output of the searches may be a ranked list as is well known in the art. Alternatively, the output may not be ranked.
- an extension may be to generate new images at step S 114 .
- the user may select an image of a dress and select the color green to form the composite image to the input to the system, i.e. the user might say “I'm looking for a dress like this, but in green”.
- the system would use its knowledge of images, objects, shape, color, pattern and texture to generate a new image that reflects that requirement. Similarly it might be asked to combine features from two or more images and use those to create a new image that reflects those combined features.
- This could, for example, be applied to icons: If a user has found a pair of icons, one of which has the color they are looking for and one which has the right shape, they might initiate a search using those selected features. If the search finds an existing icon that combines these features, this will be presented to the user, but in the case where no such icon exists, the system might generate a new icon which combines the selected features.
- the results may just be the first round of the search process and thus a user is queried whether or not the search results are acceptable at step S 118 . If the user has found what they are looking for, no further searching is required and the process ends. Otherwise, the search results themselves may be used to form the basis of the next round of searching. This may be as simple as a user clicking on one of the images from the search in which case the method returns to step S 100 . Alternatively, an iterative search as detailed in relation to FIGS. 6 a to 9 may be started.
- the method described here encourages a new way of searching for images via an evolutionary navigational process.
- a user might start with a query (e.g. a dress), narrow the search by specifying a particular feature (e.g. color), narrow the search further by combining this with a feature from another image (e.g. the texture of a shirt) and then navigate by clicking on the images that seem closest to the one they are looking for.
- a query e.g. a dress
- a particular feature e.g. color
- narrow the search further by combining this with a feature from another image (e.g. the texture of a shirt) and then navigate by clicking on the images that seem closest to the one they are looking for.
- Each click on an image starts a new search (possibly modulated by the elements included in the original search) and brings the user one step closer to what they are looking for. And when it doesn't, i.e., when it takes the user further from what they're looking for, they back-track and try again.
- FIG. 2 a shows one application of the method of FIG. 1 .
- the user selects an image and selects a feature (or more than one feature) from part of an image in accordance with steps S 100 and S 102 of FIG. 1 .
- the user has found a photo 10 of a room, and they have selected the armchair 12 as being the item they are interested in basing the search on.
- no additional images are used and thus the combination step only has one input, the armchair.
- No weighting is applied but clearly the method could be optionally adapted to add weighting.
- Three different results 14 are returned by the search. Each of these results is a different armchair or sofa having similar color and style to the one selected. A user could then repeat the process with one or more of these search results.
- FIG. 2 b shows an alternative application of the method of FIG. 1 in which a user selects a feature (or more than one feature) from multiple images and combines them to form an item for searching.
- a user selects the shape 20 from a first image 30 (in this case a dress) image in accordance with steps S 100 and S 102 of FIG. 1 .
- the user decides to use additional images and method repeats steps S 100 and S 102 to select the color 22 from a second image 32 (in this case a different dress).
- the pattern 24 from a third image 34 (also a different dress) is selected.
- the color and pattern have been selected from parts of the second and third images, rather than using the colors of the images as a whole, although the latter would also be possible.
- the features are shape, color and pattern together with a part of the image.
- the selected images and their features are combined to form a composite query.
- a composite image 28 having the selected shape 20 , color 22 and pattern 24 . No weighting is applied but clearly the method could be optionally adapted to add weighting.
- the composite image is used as the basis for the search.
- FIG. 3 a illustrates one method of presenting a user with a weighting for a feature.
- the user may be shown the colors that were identified in the image which forms the basis of the search.
- the image 40 selected is a dress
- the bar 42 above the image shows the relative weights of each color contained in the image.
- a bright red has the highest weighting with a first shade of black having the next highest weighting.
- the user can adjust the relative weights of the individual colors, for example, by dragging the divisions between the colors.
- a user can remove colors, for example by clicking on the color and selecting delete. Removal of the color shows that a user is not interested in this color, e.g. the black parts of this image.
- a user may be able to add in new colors. This may be done by a user inputting a textual description (e.g. “I'd like to find an item that is this shade of red, but with a bit of green added in as well”) or alternatively a menu could be provided (perhaps by clicking on the bar) to allow a user to select other colors.
- a textual description e.g. “I'd like to find an item that is this shade of red, but with a bit of green added in as well”
- a menu could be provided (perhaps by clicking on the bar) to allow a user to select other colors.
- the user may be shown the representation of FIG. 3 a along with their search results. This may help a user to adjust the weighting to remove the results that they are not interested in.
- the representation of FIG. 3 a may also be adapted to show other features which could be weighted for example as shown in FIG. 3 b .
- the bar may show the weighting of the shape as well as the color and other features (e.g. texture) which enables a user to set the relative importance of each feature, e.g. to say that shape is more important than color which is more important than texture.
- a representation of the weighting of the color (or other feature) from each element forming the composite query may be shown.
- a user may be able to show that the color of the first image is more important (and thus to be more highly weighted) than that of the second. This could be enabled through a set of sliders that the user can slide to set the relative weights.
- FIGS. 4 a and 4 b illustrate how the first step of the method of FIG. 1 may be completed.
- step S 100 which starts a search from an image may not be the first step in the process.
- the user could start a search by selecting a color or more than one color:
- FIG. 4 a the user is presented with a color palette 50 comprising a plurality of colors.
- a user selects one color, e.g. by clicking on it and a bar 52 showing the selected color is presented to the user.
- a mechanism is also provided for a user to deselect the bar 52 , in this case by clicking on the cross button.
- images 54 that are largely made up of that single color.
- FIG. 4 b the user has selected a second color (yellow) and is shown images 56 made up of those two colors in combination.
- the first step S 100 of FIG. 1 may be to select one (or more) of these images.
- the system preferably also provides a storage so that having identified images they are interested in, the user would have the ability to save those images (or parts of the images, or specific features of the whole or partial image) for future searches.
- the user might see a dress whose style they like, and could say “Find me dresses like this, but in the color of that pair of shoes I saved last week”.
- FIG. 5 a shows a system in which the method may be implemented.
- the search service is deployed using the normal components of a search engine which includes at least one query engine 74 to prompt for and respond to queries from users.
- This system can be formed of many servers and databases distributed across a network, or in principle they can be consolidated at a single location or machine.
- the term search engine can refer to the front end, which is the query engine in this case, and some, all or none of the back end parts used by the query engine, whose functions can be replaced with calls to external services.
- a user can make searches via the query engine using an input device 70 .
- the input device may be any suitable device, including computers, laptops, mobile phones.
- the input device 70 is connected over a network 72 , e.g. a wireless network managed by a network operator, which is in turn connected to the Internet via a WAP gateway, IP router or other similar device (not shown explicitly).
- Each input device typically comprises one or more processors 84 , memory, user interface 86 , e.g. devices such as keypad, keyboard, microphone, touch screen, a display and a wireless network radio interface.
- the processor 84 of the input device 70 may be configured to create the composite query which is sent to the query server 72 for searching.
- the processor of the input device may be configured to receive a user selection of at least one image and at least one feature within each image, e.g. from the user interface on the input device 70 .
- the processor 84 may then combine the selections, add any weighting or filters and send the composite query to the query server.
- Some or all of the steps in creating the composite query may be undertaken by the processor 82 of the query server.
- the processor of the query server may be configured to receive a user selection of at least one image and at least one feature within each image from the input device 70 .
- the processor 82 may then combine the selections, add any weighting or filters and search for the resulting composite query.
- the method provides a better query which initiates the search and thus when the query engine is enabling a user to the input this improved query, the query engine is effectively acting as a more efficient query server.
- the query engine(s) 74 are connected to an image database 76 and a feature database 78 . These are stores of images and features which can be presented to a user on the user interface of the input device 70 for selection. These databases can also be used to store images and features for individual users, for example, as explained with reference to FIGS. 4 a and 4 b . Both the image and feature databases 76 , 78 are connected to a feature extractor 80 . The feature extractor 80 takes images from the image database 76 and automatically segments them into individual features which are then stored in the feature database 78 . The method could be implemented in a number of forms, for example:
- the method could effectively provide an online shopping assistant.
- This enables people to search for items that they might otherwise find hard to find.
- One example of the mechanism might be a tool that a user can click on to indicate they are interested in finding other images similar to one they are viewing on a web page.
- This could have a commerce aspect: the user might be viewing a picture of a watch, and by clicking on the image they could be shown similar watches for sale, with links to sites (or a single site) selling similar watches.
- FIG. 6 illustrates a way of allowing the user to navigate a search space iteratively, providing the user with a sense of context, their location within the search space, and also providing them far more fine-grained control over where they go in the search space.
- This method can be applied to searching for content of all kinds, but in this example we will focus on image-searching.
- the user starts by entering a query (S 200 ), which could be specified as a keyword query or by pointing to an image (e.g., by uploading it from a phone or by clicking on an image on a web page).
- the user is shown images that meet their search criteria (S 202 ) (e.g., by being similar to the query image).
- the search may be conducted using any known technique including those detailed above in relation to a composite query.
- the user may then review the search results to see whether or not one of the image from the search results matches their expectations (S 204 ). If the correct image is shown, the user can click on it to see it in its original context (for example, the page on which it was hosted and from which the item pictured can be purchased) and the system can output more details as required (S 206 ). However, if the correct image has not been found, the user has a number of choices.
- the user can initiate a new search from one or a combination of the search results (S 208 ). This could be achieved simply by selecting one of the displayed images and initiating a new search.
- the selected image may be very close to what a user is seeking or alternatively, may just be a step closer to what they are looking for than anything else.
- the user is embarking on an evolutionary-style process of manual artificial-selection. In other words, they are perhaps searching for a blue dress of a particular shade of dark blue, and the system has shown a lot of dresses in various colors. Accordingly, they select the one that is pale blue because it is, at least, blue.
- the next set of search results contains a lot of blue dresses, including some that are darker blue, so the user selects one of these darker blue images.
- the next set of images are all dark blue dresses, and the user can keep following this process until they have narrowed in on the precise item they are searching for.
- a combination of features from different images within the search results may also be selected. For example as shown in FIG. 7 b , the user has selected the color of the first image, all features (color, pattern and type of object) in the third image and the pattern from the fourth image. A new search is run on this combination and the results of the second search are shown on the user interface (S 210 ). A key difference to a standard set of search results is that the results of the second search are shown on the same user interface as the original search results (in this case below).
- the method then loops back to step S 204 to determine whether or not the correct image is shown. As before, if one of the search results is suitable, the search is terminated. However, if the search results are not what is desired, the user can run another search.
- the user can then select a single feature or a combination of features from one or more images in the second set of results and run a new search. For example, the user can select the pattern from the fifth image and the results of this search are shown in FIG. 7 c . Again the results for the third search are shown with the results from the first and second searches. In this case, the search has returned a variety of different images all having stripes as the predominant pattern.
- Such a presentation of results allows the user to follow an iterative search mechanism. For example, after following a thread towards stripes, perhaps the user realizes that the he is only interested in striped shirts.
- the user interface of FIG. 7 c gives quick and easy access to the search results for the previous queries. So the user can point at one of the current cohort of images and say “this color” and can then point back to an earlier query and say “this pattern” or “this style”, creating a new combined query which is effectively illuminating a more focused path through the search space of images.
- the user has followed a search thread towards darker dresses and now realizes that although they are seeing dresses of the right color, the dresses are no longer in the right style. Perhaps they are looking for a ball-gown and the search has produced mainly plain dresses such as cocktail dresses. The user now wants to be able to say something like “I want dresses that are this color but have the same style as the dresses I had in the results list for my first query”. The iterative search system provides this capability. Similarly, the user may go down a wrong path, perhaps making the dresses too dark, and they can then easily backtrack up a level to see the previous set of dresses and follow a new path from one of those.
- This process can be repeated, enabling the user to add many images to their search: “I want something that captures the essence of these 5 images”. And this process can be hidden from the user and made automatic: effectively learning from the user's behavior what are the kinds of images, colors, shapes, styles or objects that they are more likely to be interested in, meaning that when a user initiates a completely new search this additional information can be taken into account to bias the first set of results.
- FIGS. 7 a to 7 c only six results are shown at the end of each search because this is the number that can be reasonably shown across a graphical user interface.
- FIG. 8 a shows an alternative graphical user interface in which more than six results are shown. The user can scroll along the string of search results to access more than the six results which can reasonably be shown on the interface.
- FIG. 8 b shows another graphical user interface in which four search results are presented. Symbols rather than letters are used to depict the features (color, pattern and type) that may be selected.
- FIGS. 7 a to 8 b show linear representations for the search results, a linear display with rows of images is not the only (or perhaps even the preferable) way to display the results. The system is effectively allowing a user to navigate a search space by expanding branches of a very large tree, so it could also be possible to show results in a tree-structure or in a number of other possible layouts (e.g., concentric circles).
- FIGS. 7 a to 8 b also show only a maximum of four sets of search results on a single page of the graphical user interface. However, all of the earlier sets of search results are also retained so that a user may select feature(s) from image(s) in any previous search. It is expected that a vertical scroll bar will also be included to allow a user to access previous search results. However, it will be difficult for a user to navigate all the previous sets of search results if too many results are presented. Accordingly, the user interface may be enhanced by including a side-bar or other drop zone on the screen into which a user can move individual images. These images may form a set of favorites for a user. Any images moved (or simply dragged and dropped) into this area may be stored for ease of including them in subsequent searches.
- Some or all of the images in the drop zone may be combined with some or all of the images in other search result sets. This means, for example, that it's possible (and easy) to combine an image from one query with an image from a query that is carried out many queries later. It also could become a mechanism for a user to store all kinds of items that they like, indicating that they like everything about one image (i.e., all features) and the color of one and the pattern of another. The user could then say “carry out a search for an image like this dress, but take into account my entire set of favorites”, which would create a very large query, combining features from lots of images or any other items stored in the drop zone.
- FIG. 9 shows an alternative system diagram in which the system of FIG. 5 a has been adapted for the iterative search method of FIGS. 6 to 8 b .
- a user inputs a query on their input device 50 .
- the input device 50 is a personal computer but it will be appreciated that any suitable computing device (e.g. phone, laptop etc) may be used.
- the search query may be input into an application running on a web browser on the PC.
- the input device preferably also has local storage which may store the search results from each iteration of the search.
- the query is submitted, via the Internet, to the query engine or server 52 .
- the server 52 comprises a plurality of modules including a web server 54 , image search engine 56 , a feature extractor 58 and images on disk 60 .
- the search query is received at the web server which in turn passes the query to the image search engine 56 .
- the image search engine 56 checks whether the features for the query image are already available. If they are not available, the image search engine 56 passes the query image to the feature extractor 58 to extracts feature from the query image as described above. Once the image search engine has the required features, these features are then compared with the features for the images in the image database 62 to find the most similar images. These images are submitted back, via the web server, to the user's browser as a set of search results.
- a key difference in the proposed method is the common display of multiple historic searches. Accordingly, it is necessary to store the set of search results.
- Information about the query and its results may be stored in the local storage on a user input device. Such storage may be managed by the web browser. For example, on a subsequent query, information from the local storage may be combined with the information from the current query results to generate a new query, which proceeds as above.
- a user's query information could be stored by the query server in a user database 64 , so that subsequent queries that the user makes (say, from a different PC or just after the local storage has been cleared) could still take into account previous query results or stored information.
- the image is preferably a digital image which may be stored in any convenient file format, such as JPEG, GIF, BMP etc.
- the image may be a photograph, a graphic, a video image or any combination thereof.
- Each digital image includes image data for an array of pixels forming the image.
- the server is shown a single computing device with multiple internal components which may be implemented from a single or multiple central processing units, e.g. microprocessors. It will be appreciated that the functionality of the server may be distributed across several computing devices. It will also be appreciated that the individual components may be combined into one or more components providing the combined functionality. Moreover, any of the modules, databases or devices shown in FIGS. 5 a and 9 may be implemented in a general purpose computer modified (e.g. programmed or configured) by software to be a special-purpose computer to perform the functions described herein.
- the query engine or server for conducting the search can be implemented using standard hardware.
- the hardware components of any server typically include: a central processing unit (CPU), an Input/Output (I/O) Controller, a system power and clock source; display driver; RAM; ROM; and a hard disk drive.
- a network interface provides connection to a computer network such as Ethernet, TCP/IP or other popular protocol network interfaces.
- the functionality may be embodied in software residing in computer-readable media (such as the hard drive, RAM, or ROM).
- BIOS Basic Input Output System
- BIOS Basic Input Output System
- Device drivers are hardware specific code used to communicate between the operating system and hardware peripherals.
- Applications are software applications written typically in C/C++, Java, assembler or equivalent which implement the desired functionality, running on top of and thus dependent on the operating system for interaction with other software code and hardware. The operating system loads after BIOS initializes, and controls and runs the hardware. Examples of operating systems include LinuxTM, SolarisTM, UnixTM, OSXTM Windows XPTM and equivalents.
- a user is a casual shopper wanting to find some jewelry for his wife. He knows the kinds of things she likes, but have no idea what they have in common. He can recognize the right kind of thing, but has no idea how to describe it. Initially, he would select a random set of jewelry and would click on the one that was closest to what he was looking for, and would navigate from there. 2.
- a user is a shopper with a specific need for a replacement item of jewelry.
- the shape is like a polo (a circle with a hole in the middle) and the kind of material is quartz, maybe, or some crystalline pink-ish material.
- the composite image would be formed by selected an image and selecting the polo shape and by selecting an image and selecting the color pink. The user would navigate from there. 3.
- a user is a designer, looking for a good background image to go on a piece of marketing material. As shown in FIGS. 4 a and 4 b , the user could start by selecting the three main colors in the palette and navigate through the space of images until a suitable one is found. Ideally, the resulting image should fit with the color palette but not be too dominant in the picture. 4.
- a user is a casual shopper wanting to buy a coffee table for the lounge. The user uploads a photo of the lounge as the image to be searched. The results will return similar lounges, possibly with coffee tables. Once an image with a suitable table is returned, the user can select the table as the input to the search to find a place to buy that (or a similar) table. 5.
- a user is an art lover wanting to buy a painting that will look good in a room that already has two paintings. Photos of the two paintings are uploaded to form the composite image for the search. The search results will return other paintings with similar properties (color, texture, etc.) to those two. 6.
- a user is a casual shopper looking for a bed-spread that matches the curtains. A photo of my curtains as the image in step S 100 , and the user follows the other steps of the method.
- a user is a casual window shopper who likes to browse the internet looking at things he might buy one day. Occasionally he'll buy something. Starting from a link sent by a friend, he is shown other similar items.
- a user is a house-buyer. He uploads a photo of a house he likes that is not for sale as the image in step S 100 .
- Features such as style, age, shape can be used to generate the composite image and a filter can be applied to generate results in the right area.
- a user is a female shopper browsing the internet looking for new clothes. One day, she sees a dress she likes and clicks on the “I like this” button on the browser add-on. This triggers the searching by the system which returns a collection of similar dresses, and other types of clothing that have similar patterns and colors depending on the features and/or weighting applied by the user. 10.
- a user is a shopper who sees an architectural feature on a building. He uploads a photo of the feature to find an object for inside the home (a sculpture, a light—fitting etc.) that is similar in style. 11.
- a user is redecorating his house, and looking for a bath shower-tap thing that is similar in shape to an old-fashioned phone handset.
- the image in step S 100 is a picture of a phone which can be combined with the shower category (either by filtering of using an image of a shower).
- a user is building a web site and looking for an icon that will fit with my existing design. The composite image is built from an icon that has the right shape and another that has the right color palette. The search is thus initiated from these two icons.
Abstract
Description
- The Present application is a continuation of U.S. patent application Ser. No. 13/648,105 entitled “Method and Apparatus for Image Searching” and filed by Coppin et al. on Oct. 9, 2012, which claims priority to Great Britain Patent Application GB 1212518.3 filed on Jul. 13, 2012. The entirety of the aforementioned references are incorporated herein by reference for all purposes.
- This invention relates to a method and apparatus for searching for images, in particular the field known as CBIR (Content based image retrieval) or reverse image searching.
- The weakness with traditional image search technologies is that they rely on the user being able to describe what they are searching for in terms of keywords. This works extremely well in some cases (e.g., “photo of Barack Obama”) but is entirely useless when what you are searching for can only be expressed by pointing at an object or another photo, or an abstract idea. CBIR attempts to solve that problem by allowing the user to start a search by supplying an image to search from.
- The idea of CBIR is to allow users to search for images based on content rather than by entering keyword queries. The two best known examples of this kind of technology are Google http://www.google.com/insidesearch/features/images/searchbyimage.html and TinEye: http://www.tineye.com/.
- Searches based around images are also known in the patent literature. For example, US2012123976 describes methods and systems for object-sensitive image searches. These methods and systems are usable for receiving a query for an image of an object and providing a ranked list of query results to the user based on a ranking of the images. The object-sensitive image searches may generate a pre-trained multi-instance learning (MIL) model trained from free training data from users sharing images at web sites to identify a common pattern of the object.
- US2012117051 describes how search queries containing multiple modes of query input are used to identify responsive results. The search queries can be composed of combinations of keyword or text input, image input, video input, audio input, or other modes of input. The multiple modes of query input can be presented in an initial search request, or an initial request containing a single type of query input can be supplemented with a second type of input.
- US2012030234 describes a computer-implemented method for generating a search query for searching a source of data. The method comprises: a) receiving image and/or text data; b) extracting one or more search query parameters from the image and/or text data; and c) generating the search query from the or each extracted parameter. Search is, fundamentally, a way to explore a space. In the case of a text-based search engine like those described above, the space that is being searched is typically the space of web pages, and the space is organized around the textual content of those pages, as well as the relationships between them. This space can be visualized as a large graph (in the mathematical sense of nodes connected by edges with arbitrary connections, including cycles, permissible). Navigating the space is only really possible by following links from one site to another: in other words, the search engine's influence ends as soon as you visit a page it has linked you to.
- The problem with this model is that it means that you lose your place in the search space, or your ability to perceive your place in the search space, meaning that you are only able to follow a single strand through the space without any guidance related to relevance from elsewhere apart from the information provided by the links on the page you're looking at.
- So, after entering a query in a search-engine and clicking on a promising-seeming link, the user is taken to a page which may or may not be what they are looking for. If it's not, the only options they have are to follow links from that page or go back to the search results and try again. But perhaps the user has found that the page is very close to being what they are looking for, and they want to find pages that are like this one; more like this one than the average of the results presented by the search engine. The only way to achieve this is to go back to the search engine and enter a modified query, using keywords learned from the interesting page.
- This means that the user needs to understand quite a lot about the way that search engines work, and how to optimize their queries accordingly. It also means that the user needs to store a lot of information in their head, and if they don't then finding the right content can be a hit-or-miss process.
- US2010/0312787 recognizes the problem of specifying parameters that control the scope of the search. A user interface is presented which comprises a first screen portion for enabling a search and at least one further screen portion for enabling a sub-search. The user is able to dynamically vary the scope of the on-going search by varying the prioritization of the sub-searches and/or varying the sub-searches which are part of the search. The results of the search are provided in real time as the search progresses and the scope is varied without terminating the on-going search.
- WO2012/129062 describes a graphical user interface having a query screen with a query development workspace and a search results panel. The visual representation may enable users of a document searching system to more fully understand the query that is being submitted or has been submitted.
- WO2007/137289 describes a user interface having multiple sections which are independently updatable. The sections include a section for inputting a search query, a section for displaying search results and a drop region for moving a result into a notebook. The notebook may be shared with other users and is a virtual basket for collecting and organizing search results.
- US2012/0159368 aims to facilitate search history navigation. First and second search icons corresponding to first and second searches are presented on a graphical user interface. By selecting one of the icons, a user can access the search criteria used to generate the results, the quantity of results, the results themselves or any combination thereof.
- US2010/0088647 describes the difficulties of searching for images based on a text-based submission of an image query. This is addressed by providing a graphical user interface in which the images are clustered and each cluster is presented with a name for that cluster.
- The applicant has recognized the need for an improved searching method and apparatus.
- According to a first aspect of the invention, there is provided a computer-implemented method of conducting a search comprising receiving a first image query which comprises a user selection of a first feature within a first user selected image; searching for results which match said first image query; outputting said first search results to a graphical user interface for said user; receiving a second image query which comprises a user selection of a second feature within a second user selected image which is selected from within said first search results; repeating said searching and outputting steps based on said second image query; displaying said first and second search results together on said graphical user interface and receiving a third image query based on a third user selected image which is selected from within said first search results and said second search results. This method may be implemented on a system.
- According to another aspect of the invention, there is provided a system for conducting a search comprising: a processor which is configured to receive a first user image query comprising a user selection of a first feature within a first user selected image; a search engine which is configured to search for results which match said first image query; output said search results to a graphical user interface for said user; wherein said processor is further configured to receive a second image query which is comprises a user selection of a second feature within a second user selected image selected from within said first search results; wherein said search engine is further configured to repeat said searching and outputting steps based on said second image query; display said first and second search results together on said graphical user interface and receive a third image query based on a third user selected image which is selected from within said first search results and said second search results.
- These tools encourage users to adopt an exploratory search method, where the user starts from one point (perhaps an image they've seen on a web site) and systematically refines their search in a series of steps and possibly through one or more iterations of these series of steps until they find the image or images they are looking for. The third image query may be processed in a similar manner to the first and second image queries. In other words, the searching, outputting and displaying steps may be repeated. It will be appreciated that there is no limit to the number of subsequent image queries which may be received.
- Each feature may be a subsection of said user selected image, e.g. a chair within a picture of a room. The feature may be a shape, color, texture, pattern or other parameter of an object within said user selected image. The or each selected feature from each selected image may be the same or different.
- The iterative nature of the search may be supplemented by using a composite image as the basis of the image query. There may be more than one feature selected from within each selected image for each image query. For example, a user selection of a first feature may be received from within said first user selected image and a user selection of a second and third feature may be received from within said second user selected image. Moreover, each image query may be a composite image query comprising at least one feature selected from each of a plurality of user selected images. For example, the second query may comprise a composite image query formed from a user selection of a second feature within a second image selected from within said first search results and a user selection of a feature within a different image also selected from within said first search results. The third query may comprise a composite image query formed from a user selection of a third feature within a third image selected from within said second search results and a user selection of a feature within an image selected from within said first search results. The composite image query may be a combination all the selected features.
- By combining features from two or more images, the invention allows the user to search from multiple images as well as specifying what exactly it is about an image that they want to search for. By providing this functionality in the query server, an improved apparatus for searching is provided.
- At least one of said user selected images may be segmented into a plurality of objects which may be presented to a user, e.g. on a user interface. Said feature may be selected from one of said plurality of objects, e.g. by clicking on said object.
- A weight may be applied to each selected feature when combining to form said composite image. Said weight may be adjusted by said user.
- The invention further provides processor control code to implement the above-described systems and methods, for example on a general purpose computer system or on a digital signal processor (DSP). The code is provided on a physical data carrier such as a disk, CD- or DVD-ROM, programmed memory such as non-volatile memory (eg Flash) or read-only memory (Firmware). Code (and/or data) to implement embodiments of the invention may comprise source, object or executable code in a conventional programming language (interpreted or compiled) such as C, or assembly code. As the skilled person will appreciate such code and/or data may be distributed between a plurality of coupled components in communication with one another.
- The invention is diagrammatically illustrated, by way of example, in the accompanying drawings, in which:
-
FIG. 1 is a flowchart showing the steps of a method for selecting images; -
FIG. 2 a shows one application of the method ofFIG. 1 ; -
FIG. 2 b shows an alternative application of the method ofFIG. 1 ; -
FIGS. 3 a and 3 b are representations of weighting which is an optional feature in the method ofFIG. 1 ; -
FIGS. 4 a and 4 b illustrate different ways of selecting an input image for the method ofFIG. 1 ; -
FIG. 5 a is an illustration of a typical system for implementing the method, -
FIG. 5 b is a screenshot showing an example of how the browser extension (with Google's Chrome browser) might be implemented; -
FIG. 6 is a flowchart of an iterative search through multiple search results; -
FIGS. 7 a to 7 c show graphical user interface at various stages throughFIG. 6 allowing a user to navigate a search; -
FIGS. 8 a and 8 b are alternative graphical user interfaces for presenting search results to a user; and -
FIG. 9 is a block diagram of the system for implementing the method ofFIG. 6 . - As
FIG. 1 shows the steps used in by the system to assist users in searching for images. The first step S100 is for a user to select an image to form the basis of the search. The user then specifies which feature(s) within the selected image are to be used in the search (step S102). The features may be one or more of color, coherence, pattern, texture or shape of an image, or a subsection of an image. The feature may be the whole image itself. Color coherence is a measure of the importance of the color within an image. For example, some red may be scattered (perhaps invisibly) through an image (say of a human face) and this would have a value for coherence that is less than an image containing a coherent block of red (say in a rose). These features may be used individually or in combination to refine the next round of search results. - In order for the user of the system to specify which part of the image they are interested in, they need a mechanism for selecting parts of images. Examples of the kinds of selection methods that might be used include:
- Rectangular selection boxes which are overlaid on the original image (as shown in
FIG. 2 a) - Polygonal (the user selects a number of points on the edge of the area they're interested in, and a polygon is created that joins those points)
- Lasso (the user draws free-hand around the area they are interested in).
- Automatic segmentation (in this case, the system automatically segments the image into a number of objects, and the user is able to simply click on one object (or more than one object) to indicate which one they are interested in).
- The next step S104 is to consider whether or not other images are to be added into the search. If additional images are to be used, the method loops back to the first step and repeats the selection of the image and the selection of the feature within the image. If additional images are not to be used, the method combines the selected image(s) and feature(s) at step S106 to create a composite query which is searched. Creating the composite query may comprise creating a composite image made up of the selected image(s) or feature(s) but it is also possible to combine the selections without creating a composite image. This combination step may be termed ‘Clamp and Combine’. ‘Clamping and combining’ allows the user to select specific aspects of an image (for example its shape alone, or a combination of color and texture) which are then “clamped” into the search. This effectively filters the search results with multiple clamps, which when combined provide a more refined and useful end result.
- As set out above, the feature(s) selected may be part of an image or a feature within the part. The user can indicate which features they want to search, and can combine that partial image with another (whole or partial) image. The user indication of the feature(s) within a (whole or partial) image(s) may be a textual description. For example, the user may say “I want to search for an image that has the color of this part of image 1 but the shape of this part of image 2”. Automated segmentation facilitates such selection. The segmentation would enable the user to select an object within an image (e.g. a car, a dress, a cat or a tree) by simply clicking on the object of interest. In this case, the system could optionally provide a textual description of the selected feature(s) and image(s), for example by displaying a message such as: “You have selected an image of a lady wearing a black dress”. The user indication could then be confirmation that the message is in line with their selection.
- An improvement which is optionally included in the method is to add weight features according to how strongly the user would like to see those features displayed in the next round of search results. As shown at step S108, these weights may be presented to a user. At step S110, user input on weighting is received. The user input may be in response to the presentation at step S108 or may be independently input.
- Another optional improvement is to add domain filtering. At step S112, the user also has the ability to impose a structured domain filter on the image. For example, the user might select an image of a dress but restrict the search to the domain of skirts or curtains, to find a different type of item that is of the same color.
- Once all the inputs are received, the search is carried out at step S114 and the results are output (step S116). A number of different algorithms may be applied for the searching itself. Examples include:
- Color matching: comparing histograms of colors using chi-squared distance.
- Shape matching: a method such as Histogram of oriented gradients (HOG: http://en.wikipedia.org/wiki/Histogram_of_oriented_gradients)
- Texture matching: a method such as that described by Haralick in his 1973 paper: http://dceanalysis.bigr.nl/Haralick73Textural %20features %20for %20image %20classification.pdf
- Pattern matching: matching larger-scale patterns such as stripes, dots, flowers and checks that appear on clothing and other products.
- In fact, the invention is not dependent on these specific methods: it could be deployed using a different set of algorithms for matching shape, color, pattern and texture, or indeed using algorithms for matching a range of other feature types (e.g. automatically extracted objects). Furthermore, the output of the searches may be a ranked list as is well known in the art. Alternatively, the output may not be ranked.
- As an alternative for searching for matching results, an extension may be to generate new images at step S114. For example, the user may select an image of a dress and select the color green to form the composite image to the input to the system, i.e. the user might say “I'm looking for a dress like this, but in green”. The system would use its knowledge of images, objects, shape, color, pattern and texture to generate a new image that reflects that requirement. Similarly it might be asked to combine features from two or more images and use those to create a new image that reflects those combined features. This could, for example, be applied to icons: If a user has found a pair of icons, one of which has the color they are looking for and one which has the right shape, they might initiate a search using those selected features. If the search finds an existing icon that combines these features, this will be presented to the user, but in the case where no such icon exists, the system might generate a new icon which combines the selected features.
- The results may just be the first round of the search process and thus a user is queried whether or not the search results are acceptable at step S118. If the user has found what they are looking for, no further searching is required and the process ends. Otherwise, the search results themselves may be used to form the basis of the next round of searching. This may be as simple as a user clicking on one of the images from the search in which case the method returns to step S100. Alternatively, an iterative search as detailed in relation to
FIGS. 6 a to 9 may be started. - The selection (or non selection) of features effectively turns off or on a range of features (together or individually) as part of the search process. Thus it becomes possible for a user to provide non-linguistic, highly intuitive feedback to the image search engine. This is much more like the way humans naturally describe things to one another by pointing and showing, and saying ‘more like this bit’ or ‘similar to this shape’. By the iterative repetition of the search steps, a user can ‘steer’ their way towards a satisfactory end result, without needing to describe in words what they are looking for.
- The method described here encourages a new way of searching for images via an evolutionary navigational process. In other words, a user might start with a query (e.g. a dress), narrow the search by specifying a particular feature (e.g. color), narrow the search further by combining this with a feature from another image (e.g. the texture of a shirt) and then navigate by clicking on the images that seem closest to the one they are looking for. Each click on an image starts a new search (possibly modulated by the elements included in the original search) and brings the user one step closer to what they are looking for. And when it doesn't, i.e., when it takes the user further from what they're looking for, they back-track and try again. Back-tracking may be facilitated by use of a specially adapted user interface as described in more detail below.
-
FIG. 2 a shows one application of the method ofFIG. 1 . The user selects an image and selects a feature (or more than one feature) from part of an image in accordance with steps S100 and S102 ofFIG. 1 . In this case, the user has found aphoto 10 of a room, and they have selected thearmchair 12 as being the item they are interested in basing the search on. In this implementation, no additional images are used and thus the combination step only has one input, the armchair. No weighting is applied but clearly the method could be optionally adapted to add weighting. Threedifferent results 14 are returned by the search. Each of these results is a different armchair or sofa having similar color and style to the one selected. A user could then repeat the process with one or more of these search results. -
FIG. 2 b shows an alternative application of the method ofFIG. 1 in which a user selects a feature (or more than one feature) from multiple images and combines them to form an item for searching. A user selects theshape 20 from a first image 30 (in this case a dress) image in accordance with steps S100 and S102 ofFIG. 1 . The user then decides to use additional images and method repeats steps S100 and S102 to select thecolor 22 from a second image 32 (in this case a different dress). Finally, in a third iteration, thepattern 24 from a third image 34 (also a different dress) is selected. In this case, the color and pattern have been selected from parts of the second and third images, rather than using the colors of the images as a whole, although the latter would also be possible. Accordingly, in this implementation, the features are shape, color and pattern together with a part of the image. The selected images and their features are combined to form a composite query. In this example, acomposite image 28 having the selectedshape 20,color 22 andpattern 24. No weighting is applied but clearly the method could be optionally adapted to add weighting. The composite image is used as the basis for the search. -
FIG. 3 a illustrates one method of presenting a user with a weighting for a feature. For example, the user may be shown the colors that were identified in the image which forms the basis of the search. In this case, theimage 40 selected is a dress, and thebar 42 above the image shows the relative weights of each color contained in the image. In this example, a bright red has the highest weighting with a first shade of black having the next highest weighting. The user can adjust the relative weights of the individual colors, for example, by dragging the divisions between the colors. Alternatively, a user can remove colors, for example by clicking on the color and selecting delete. Removal of the color shows that a user is not interested in this color, e.g. the black parts of this image. Finally, a user may be able to add in new colors. This may be done by a user inputting a textual description (e.g. “I'd like to find an item that is this shade of red, but with a bit of green added in as well”) or alternatively a menu could be provided (perhaps by clicking on the bar) to allow a user to select other colors. - The user may be shown the representation of
FIG. 3 a along with their search results. This may help a user to adjust the weighting to remove the results that they are not interested in. The representation ofFIG. 3 a may also be adapted to show other features which could be weighted for example as shown inFIG. 3 b. The bar may show the weighting of the shape as well as the color and other features (e.g. texture) which enables a user to set the relative importance of each feature, e.g. to say that shape is more important than color which is more important than texture. A representation of the weighting of the color (or other feature) from each element forming the composite query may be shown. For example, where the composite query combines the colors of two images, a user may be able to show that the color of the first image is more important (and thus to be more highly weighted) than that of the second. This could be enabled through a set of sliders that the user can slide to set the relative weights. -
FIGS. 4 a and 4 b illustrate how the first step of the method ofFIG. 1 may be completed. Thus step S100 which starts a search from an image may not be the first step in the process. As explained below, the user could start a search by selecting a color or more than one color: - In
FIG. 4 a, the user is presented with acolor palette 50 comprising a plurality of colors. A user selects one color, e.g. by clicking on it and abar 52 showing the selected color is presented to the user. A mechanism is also provided for a user to deselect thebar 52, in this case by clicking on the cross button. Once the color selection has been made, a user is shownimages 54 that are largely made up of that single color. InFIG. 4 b, the user has selected a second color (yellow) and is shownimages 56 made up of those two colors in combination. - Thus, the first step S100 of
FIG. 1 may be to select one (or more) of these images. The system preferably also provides a storage so that having identified images they are interested in, the user would have the ability to save those images (or parts of the images, or specific features of the whole or partial image) for future searches. Hence, the user might see a dress whose style they like, and could say “Find me dresses like this, but in the color of that pair of shoes I saved last week”. -
FIG. 5 a shows a system in which the method may be implemented. The search service is deployed using the normal components of a search engine which includes at least onequery engine 74 to prompt for and respond to queries from users. This system can be formed of many servers and databases distributed across a network, or in principle they can be consolidated at a single location or machine. The term search engine can refer to the front end, which is the query engine in this case, and some, all or none of the back end parts used by the query engine, whose functions can be replaced with calls to external services. - A user can make searches via the query engine using an
input device 70. The input device may be any suitable device, including computers, laptops, mobile phones. Theinput device 70 is connected over anetwork 72, e.g. a wireless network managed by a network operator, which is in turn connected to the Internet via a WAP gateway, IP router or other similar device (not shown explicitly). Each input device typically comprises one ormore processors 84, memory, user interface 86, e.g. devices such as keypad, keyboard, microphone, touch screen, a display and a wireless network radio interface. - The
processor 84 of theinput device 70 may be configured to create the composite query which is sent to thequery server 72 for searching. Thus the processor of the input device may be configured to receive a user selection of at least one image and at least one feature within each image, e.g. from the user interface on theinput device 70. Theprocessor 84 may then combine the selections, add any weighting or filters and send the composite query to the query server. Some or all of the steps in creating the composite query may be undertaken by theprocessor 82 of the query server. In this case, the processor of the query server may be configured to receive a user selection of at least one image and at least one feature within each image from theinput device 70. Theprocessor 82 may then combine the selections, add any weighting or filters and search for the resulting composite query. As explained above, the method provides a better query which initiates the search and thus when the query engine is enabling a user to the input this improved query, the query engine is effectively acting as a more efficient query server. - As shown in
FIG. 5 a, the query engine(s) 74 are connected to animage database 76 and afeature database 78. These are stores of images and features which can be presented to a user on the user interface of theinput device 70 for selection. These databases can also be used to store images and features for individual users, for example, as explained with reference toFIGS. 4 a and 4 b. Both the image andfeature databases feature extractor 80. Thefeature extractor 80 takes images from theimage database 76 and automatically segments them into individual features which are then stored in thefeature database 78. The method could be implemented in a number of forms, for example: - As a browser plug-in/extension. When a user views an image in a
user interface 60 they are interested in, they could right-click on the image to reveal a context-sensitive menu 62. Within this menu would be an option to search for similar images. Having selected this, a side-bar 64 would appear showing similar images and providing further options. This is illustrated inFIG. 5 b. - As a dedicated web site.
- As an addition to an existing e-commerce site.
- As a native app on a mobile phone or other hand-held device (and in this case it could be used to find similar objects to one contained in a photo taken using the device).
- There are various applications for the described method. For example, with reference to
FIG. 5 b, the method could effectively provide an online shopping assistant. This enables people to search for items that they might otherwise find hard to find. One example of the mechanism might be a tool that a user can click on to indicate they are interested in finding other images similar to one they are viewing on a web page. This could have a commerce aspect: the user might be viewing a picture of a watch, and by clicking on the image they could be shown similar watches for sale, with links to sites (or a single site) selling similar watches. - Clearly, there is a more general application as a tool for helping people find interesting content. Like
FIG. 5 b, this could sit as a side-bar in the web browser, and as the user views a page, the side-bar would update with images similar to the ones on the page. Another application is as a tool to assist designers in finding images (photos, icons, drawings, etc.) that have appropriate colors, patterns or shapes for use in marketing material, web site design and other design elements. -
FIG. 6 illustrates a way of allowing the user to navigate a search space iteratively, providing the user with a sense of context, their location within the search space, and also providing them far more fine-grained control over where they go in the search space. - This method can be applied to searching for content of all kinds, but in this example we will focus on image-searching. The user starts by entering a query (S200), which could be specified as a keyword query or by pointing to an image (e.g., by uploading it from a phone or by clicking on an image on a web page).
- As shown in
FIG. 7 a, the user is shown images that meet their search criteria (S202) (e.g., by being similar to the query image). The search may be conducted using any known technique including those detailed above in relation to a composite query. The user may then review the search results to see whether or not one of the image from the search results matches their expectations (S204). If the correct image is shown, the user can click on it to see it in its original context (for example, the page on which it was hosted and from which the item pictured can be purchased) and the system can output more details as required (S206). However, if the correct image has not been found, the user has a number of choices. - First, the user can initiate a new search from one or a combination of the search results (S208). This could be achieved simply by selecting one of the displayed images and initiating a new search. The selected image may be very close to what a user is seeking or alternatively, may just be a step closer to what they are looking for than anything else. In this last case, the user is embarking on an evolutionary-style process of manual artificial-selection. In other words, they are perhaps searching for a blue dress of a particular shade of dark blue, and the system has shown a lot of dresses in various colors. Accordingly, they select the one that is pale blue because it is, at least, blue. The next set of search results contains a lot of blue dresses, including some that are darker blue, so the user selects one of these darker blue images. The next set of images are all dark blue dresses, and the user can keep following this process until they have narrowed in on the precise item they are searching for.
- A combination of features from different images within the search results may also be selected. For example as shown in
FIG. 7 b, the user has selected the color of the first image, all features (color, pattern and type of object) in the third image and the pattern from the fourth image. A new search is run on this combination and the results of the second search are shown on the user interface (S210). A key difference to a standard set of search results is that the results of the second search are shown on the same user interface as the original search results (in this case below). - The method then loops back to step S204 to determine whether or not the correct image is shown. As before, if one of the search results is suitable, the search is terminated. However, if the search results are not what is desired, the user can run another search.
- The user can then select a single feature or a combination of features from one or more images in the second set of results and run a new search. For example, the user can select the pattern from the fifth image and the results of this search are shown in
FIG. 7 c. Again the results for the third search are shown with the results from the first and second searches. In this case, the search has returned a variety of different images all having stripes as the predominant pattern. - Such a presentation of results allows the user to follow an iterative search mechanism. For example, after following a thread towards stripes, perhaps the user realizes that the he is only interested in striped shirts. The user interface of
FIG. 7 c gives quick and easy access to the search results for the previous queries. So the user can point at one of the current cohort of images and say “this color” and can then point back to an earlier query and say “this pattern” or “this style”, creating a new combined query which is effectively illuminating a more focused path through the search space of images. - As another alternative, perhaps the user has followed a search thread towards darker dresses and now realizes that although they are seeing dresses of the right color, the dresses are no longer in the right style. Perhaps they are looking for a ball-gown and the search has produced mainly plain dresses such as cocktail dresses. The user now wants to be able to say something like “I want dresses that are this color but have the same style as the dresses I had in the results list for my first query”. The iterative search system provides this capability. Similarly, the user may go down a wrong path, perhaps making the dresses too dark, and they can then easily backtrack up a level to see the previous set of dresses and follow a new path from one of those.
- This process can be repeated, enabling the user to add many images to their search: “I want something that captures the essence of these 5 images”. And this process can be hidden from the user and made automatic: effectively learning from the user's behavior what are the kinds of images, colors, shapes, styles or objects that they are more likely to be interested in, meaning that when a user initiates a completely new search this additional information can be taken into account to bias the first set of results.
- In
FIGS. 7 a to 7 c only six results are shown at the end of each search because this is the number that can be reasonably shown across a graphical user interface.FIG. 8 a shows an alternative graphical user interface in which more than six results are shown. The user can scroll along the string of search results to access more than the six results which can reasonably be shown on the interface. -
FIG. 8 b shows another graphical user interface in which four search results are presented. Symbols rather than letters are used to depict the features (color, pattern and type) that may be selected. AlthoughFIGS. 7 a to 8 b show linear representations for the search results, a linear display with rows of images is not the only (or perhaps even the preferable) way to display the results. The system is effectively allowing a user to navigate a search space by expanding branches of a very large tree, so it could also be possible to show results in a tree-structure or in a number of other possible layouts (e.g., concentric circles). -
FIGS. 7 a to 8 b also show only a maximum of four sets of search results on a single page of the graphical user interface. However, all of the earlier sets of search results are also retained so that a user may select feature(s) from image(s) in any previous search. It is expected that a vertical scroll bar will also be included to allow a user to access previous search results. However, it will be difficult for a user to navigate all the previous sets of search results if too many results are presented. Accordingly, the user interface may be enhanced by including a side-bar or other drop zone on the screen into which a user can move individual images. These images may form a set of favorites for a user. Any images moved (or simply dragged and dropped) into this area may be stored for ease of including them in subsequent searches. - Some or all of the images in the drop zone may be combined with some or all of the images in other search result sets. This means, for example, that it's possible (and easy) to combine an image from one query with an image from a query that is carried out many queries later. It also could become a mechanism for a user to store all kinds of items that they like, indicating that they like everything about one image (i.e., all features) and the color of one and the pattern of another. The user could then say “carry out a search for an image like this dress, but take into account my entire set of favorites”, which would create a very large query, combining features from lots of images or any other items stored in the drop zone.
-
FIG. 9 shows an alternative system diagram in which the system ofFIG. 5 a has been adapted for the iterative search method ofFIGS. 6 to 8 b. A user inputs a query on theirinput device 50. In the example shown inFIG. 9 , theinput device 50 is a personal computer but it will be appreciated that any suitable computing device (e.g. phone, laptop etc) may be used. The search query may be input into an application running on a web browser on the PC. The input device preferably also has local storage which may store the search results from each iteration of the search. - The query is submitted, via the Internet, to the query engine or
server 52. Theserver 52 comprises a plurality of modules including aweb server 54,image search engine 56, afeature extractor 58 and images ondisk 60. The search query is received at the web server which in turn passes the query to theimage search engine 56. Theimage search engine 56 checks whether the features for the query image are already available. If they are not available, theimage search engine 56 passes the query image to thefeature extractor 58 to extracts feature from the query image as described above. Once the image search engine has the required features, these features are then compared with the features for the images in theimage database 62 to find the most similar images. These images are submitted back, via the web server, to the user's browser as a set of search results. - A key difference in the proposed method is the common display of multiple historic searches. Accordingly, it is necessary to store the set of search results. Information about the query and its results may be stored in the local storage on a user input device. Such storage may be managed by the web browser. For example, on a subsequent query, information from the local storage may be combined with the information from the current query results to generate a new query, which proceeds as above. Alternatively or additionally, a user's query information could be stored by the query server in a
user database 64, so that subsequent queries that the user makes (say, from a different PC or just after the local storage has been cleared) could still take into account previous query results or stored information. - In all the embodiments above, the image is preferably a digital image which may be stored in any convenient file format, such as JPEG, GIF, BMP etc. The image may be a photograph, a graphic, a video image or any combination thereof. Each digital image includes image data for an array of pixels forming the image.
- In
FIGS. 5 a and 9, the server is shown a single computing device with multiple internal components which may be implemented from a single or multiple central processing units, e.g. microprocessors. It will be appreciated that the functionality of the server may be distributed across several computing devices. It will also be appreciated that the individual components may be combined into one or more components providing the combined functionality. Moreover, any of the modules, databases or devices shown inFIGS. 5 a and 9 may be implemented in a general purpose computer modified (e.g. programmed or configured) by software to be a special-purpose computer to perform the functions described herein. - The query engine or server for conducting the search, including servers for indexing, calculating metrics and for crawling, can be implemented using standard hardware. The hardware components of any server typically include: a central processing unit (CPU), an Input/Output (I/O) Controller, a system power and clock source; display driver; RAM; ROM; and a hard disk drive. A network interface provides connection to a computer network such as Ethernet, TCP/IP or other popular protocol network interfaces. The functionality may be embodied in software residing in computer-readable media (such as the hard drive, RAM, or ROM). A typical software hierarchy for the system can include a BIOS (Basic Input Output System) which is a set of low level computer hardware instructions, usually stored in ROM, for communications between an operating system, device driver(s) and hardware. Device drivers are hardware specific code used to communicate between the operating system and hardware peripherals. Applications are software applications written typically in C/C++, Java, assembler or equivalent which implement the desired functionality, running on top of and thus dependent on the operating system for interaction with other software code and hardware. The operating system loads after BIOS initializes, and controls and runs the hardware. Examples of operating systems include Linux™, Solaris™, Unix™, OSX™ Windows XP™ and equivalents.
- The following describe examples for creating the composite image used as the search query:
- 1. A user is a casual shopper wanting to find some jewelry for his wife. He knows the kinds of things she likes, but have no idea what they have in common. He can recognize the right kind of thing, but has no idea how to describe it. Initially, he would select a random set of jewelry and would click on the one that was closest to what he was looking for, and would navigate from there.
2. A user is a shopper with a specific need for a replacement item of jewelry. The shape is like a polo (a circle with a hole in the middle) and the kind of material is quartz, maybe, or some crystalline pink-ish material. The composite image would be formed by selected an image and selecting the polo shape and by selecting an image and selecting the color pink. The user would navigate from there.
3. A user is a designer, looking for a good background image to go on a piece of marketing material. As shown inFIGS. 4 a and 4 b, the user could start by selecting the three main colors in the palette and navigate through the space of images until a suitable one is found. Ideally, the resulting image should fit with the color palette but not be too dominant in the picture.
4. A user is a casual shopper wanting to buy a coffee table for the lounge. The user uploads a photo of the lounge as the image to be searched. The results will return similar lounges, possibly with coffee tables. Once an image with a suitable table is returned, the user can select the table as the input to the search to find a place to buy that (or a similar) table.
5. A user is an art lover wanting to buy a painting that will look good in a room that already has two paintings. Photos of the two paintings are uploaded to form the composite image for the search. The search results will return other paintings with similar properties (color, texture, etc.) to those two.
6. A user is a casual shopper looking for a bed-spread that matches the curtains. A photo of my curtains as the image in step S100, and the user follows the other steps of the method.
7. A user is a casual window shopper who likes to browse the internet looking at things he might buy one day. Occasionally he'll buy something. Starting from a link sent by a friend, he is shown other similar items. Clicking on one of those items provides the image in step S100, and the user follows the other steps of the method.
8. A user is a house-buyer. He uploads a photo of a house he likes that is not for sale as the image in step S100. Features such as style, age, shape can be used to generate the composite image and a filter can be applied to generate results in the right area.
9. A user is a female shopper browsing the internet looking for new clothes. One day, she sees a dress she likes and clicks on the “I like this” button on the browser add-on. This triggers the searching by the system which returns a collection of similar dresses, and other types of clothing that have similar patterns and colors depending on the features and/or weighting applied by the user.
10. A user is a shopper who sees an architectural feature on a building. He uploads a photo of the feature to find an object for inside the home (a sculpture, a light—fitting etc.) that is similar in style.
11. A user is redecorating his house, and looking for a bath shower-tap thing that is similar in shape to an old-fashioned phone handset. The image in step S100 is a picture of a phone which can be combined with the shower category (either by filtering of using an image of a shower).
12. A user is building a web site and looking for an icon that will fit with my existing design. The composite image is built from an icon that has the right shape and another that has the right color palette. The search is thus initiated from these two icons. - No doubt many other effective alternatives will occur to the skilled person. It will be understood that the invention is not limited to the described embodiments and encompasses modifications apparent to those skilled in the art lying within the spirit and scope of the claims appended hereto.
Claims (26)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/804,382 US20140019431A1 (en) | 2012-07-13 | 2013-03-14 | Method and Apparatus for Conducting a Search |
PCT/GB2013/051873 WO2014009751A1 (en) | 2012-07-13 | 2013-07-12 | Method and apparatus for image searching |
Applications Claiming Priority (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
GBGB1212518.3 | 2012-07-13 | ||
GBGB1212518.3A GB201212518D0 (en) | 2012-07-13 | 2012-07-13 | Method and apparatus for image searching |
US201213648105A | 2012-10-09 | 2012-10-09 | |
US13/804,382 US20140019431A1 (en) | 2012-07-13 | 2013-03-14 | Method and Apparatus for Conducting a Search |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US201213648105A Continuation-In-Part | 2012-07-13 | 2012-10-09 |
Publications (1)
Publication Number | Publication Date |
---|---|
US20140019431A1 true US20140019431A1 (en) | 2014-01-16 |
Family
ID=49914883
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/804,382 Abandoned US20140019431A1 (en) | 2012-07-13 | 2013-03-14 | Method and Apparatus for Conducting a Search |
Country Status (2)
Country | Link |
---|---|
US (1) | US20140019431A1 (en) |
WO (1) | WO2014009751A1 (en) |
Cited By (25)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20140075393A1 (en) * | 2012-09-11 | 2014-03-13 | Microsoft Corporation | Gesture-Based Search Queries |
US20150052431A1 (en) * | 2013-02-01 | 2015-02-19 | Junmin Zhu | Techniques for image-based search using touch controls |
US20160188637A1 (en) * | 2014-12-31 | 2016-06-30 | Michael George Lenahan | Image appended search string |
CN105993014A (en) * | 2014-02-28 | 2016-10-05 | 富士胶片株式会社 | Product retrieval device, method, and system |
CN106030580A (en) * | 2014-02-28 | 2016-10-12 | 富士胶片株式会社 | Product search device, product search system, server system, and product search method |
US9489401B1 (en) * | 2015-06-16 | 2016-11-08 | My EyeSpy PTY Ltd. | Methods and systems for object recognition |
EP3113045A4 (en) * | 2014-02-28 | 2017-03-22 | Fujifilm Corporation | Product retrieval device, method, and system |
CN106560810A (en) * | 2015-10-02 | 2017-04-12 | 奥多比公司 | Searching By Using Specific Attributes Found In Images |
JP2017091071A (en) * | 2015-11-06 | 2017-05-25 | 株式会社ピーカチ | Information search server, information search program, and information search method |
US10102277B2 (en) | 2014-05-15 | 2018-10-16 | Sentient Technologies (Barbados) Limited | Bayesian visual interactive search |
US20180300358A1 (en) * | 2015-09-16 | 2018-10-18 | Hangzhou Hikvision Digital Technology Co., Ltd. | Image Retrieval Method and System |
CN109299650A (en) * | 2018-07-27 | 2019-02-01 | 东南大学 | Non-linear online expression pre-detection method and device based on video |
US10367909B2 (en) | 2015-10-14 | 2019-07-30 | Alibaba Group Holding Limited | Method, device, and system for displaying information associated with a web page |
US10503765B2 (en) | 2014-05-15 | 2019-12-10 | Evolv Technology Solutions, Inc. | Visual interactive search |
US10606883B2 (en) | 2014-05-15 | 2020-03-31 | Evolv Technology Solutions, Inc. | Selection of initial document collection for visual interactive search |
US10755144B2 (en) | 2017-09-05 | 2020-08-25 | Cognizant Technology Solutions U.S. Corporation | Automated and unsupervised generation of real-world training data |
US10755142B2 (en) | 2017-09-05 | 2020-08-25 | Cognizant Technology Solutions U.S. Corporation | Automated and unsupervised generation of real-world training data |
US10789525B2 (en) * | 2015-10-02 | 2020-09-29 | Adobe Inc. | Modifying at least one attribute of an image with at least one attribute extracted from another image |
US10909459B2 (en) | 2016-06-09 | 2021-02-02 | Cognizant Technology Solutions U.S. Corporation | Content embedding using deep metric learning algorithms |
US11176189B1 (en) * | 2016-12-29 | 2021-11-16 | Shutterstock, Inc. | Relevance feedback with faceted search interface |
US11222246B2 (en) * | 2018-03-16 | 2022-01-11 | Ebay Inc. | Generating a digital image using a generative adversarial network |
EP3889891A4 (en) * | 2019-10-30 | 2022-09-28 | NTT Advanced Technology Corporation | Image processing device, image processing method, and program |
US11615695B2 (en) | 2018-06-12 | 2023-03-28 | Intergraph Corporation | Coverage agent for computer-aided dispatch systems |
US20230103575A1 (en) * | 2021-10-05 | 2023-04-06 | Microsoft Technology Licensing, Llc | In-context visual search |
WO2023059382A1 (en) * | 2021-10-05 | 2023-04-13 | Microsoft Technology Licensing, Llc. | In-context visual search |
Families Citing this family (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP2021068062A (en) * | 2019-10-18 | 2021-04-30 | 富士ゼロックス株式会社 | Search condition identification system, search system, and program |
Family Cites Families (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6408293B1 (en) * | 1999-06-09 | 2002-06-18 | International Business Machines Corporation | Interactive framework for understanding user's perception of multimedia data |
-
2013
- 2013-03-14 US US13/804,382 patent/US20140019431A1/en not_active Abandoned
- 2013-07-12 WO PCT/GB2013/051873 patent/WO2014009751A1/en active Application Filing
Cited By (39)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20140075393A1 (en) * | 2012-09-11 | 2014-03-13 | Microsoft Corporation | Gesture-Based Search Queries |
US11592980B2 (en) * | 2013-02-01 | 2023-02-28 | Intel Corporation | Techniques for image-based search using touch controls |
US20230152962A1 (en) * | 2013-02-01 | 2023-05-18 | Intel Corporation | Techniques for image-based search using touch controls |
US9916081B2 (en) * | 2013-02-01 | 2018-03-13 | Intel Corporation | Techniques for image-based search using touch controls |
US20150052431A1 (en) * | 2013-02-01 | 2015-02-19 | Junmin Zhu | Techniques for image-based search using touch controls |
CN105993014A (en) * | 2014-02-28 | 2016-10-05 | 富士胶片株式会社 | Product retrieval device, method, and system |
CN106030580A (en) * | 2014-02-28 | 2016-10-12 | 富士胶片株式会社 | Product search device, product search system, server system, and product search method |
EP3113050A4 (en) * | 2014-02-28 | 2017-03-15 | Fujifilm Corporation | Product search device, product search system, server system, and product search method |
EP3113045A4 (en) * | 2014-02-28 | 2017-03-22 | Fujifilm Corporation | Product retrieval device, method, and system |
EP3113048A4 (en) * | 2014-02-28 | 2017-03-08 | Fujifilm Corporation | Product retrieval device, method, and system |
US10216818B2 (en) | 2014-02-28 | 2019-02-26 | Fujifilm Corporation | Product search apparatus, method, and system |
US10229177B2 (en) | 2014-02-28 | 2019-03-12 | Fujifilm Corporation | Product search apparatus, method, and system |
US10102277B2 (en) | 2014-05-15 | 2018-10-16 | Sentient Technologies (Barbados) Limited | Bayesian visual interactive search |
US11216496B2 (en) | 2014-05-15 | 2022-01-04 | Evolv Technology Solutions, Inc. | Visual interactive search |
US10606883B2 (en) | 2014-05-15 | 2020-03-31 | Evolv Technology Solutions, Inc. | Selection of initial document collection for visual interactive search |
US10503765B2 (en) | 2014-05-15 | 2019-12-10 | Evolv Technology Solutions, Inc. | Visual interactive search |
US9881027B2 (en) * | 2014-12-31 | 2018-01-30 | Ebay Inc. | Image appended search string |
US20160188637A1 (en) * | 2014-12-31 | 2016-06-30 | Michael George Lenahan | Image appended search string |
US9489401B1 (en) * | 2015-06-16 | 2016-11-08 | My EyeSpy PTY Ltd. | Methods and systems for object recognition |
US20180300358A1 (en) * | 2015-09-16 | 2018-10-18 | Hangzhou Hikvision Digital Technology Co., Ltd. | Image Retrieval Method and System |
US10789525B2 (en) * | 2015-10-02 | 2020-09-29 | Adobe Inc. | Modifying at least one attribute of an image with at least one attribute extracted from another image |
CN106560810A (en) * | 2015-10-02 | 2017-04-12 | 奥多比公司 | Searching By Using Specific Attributes Found In Images |
US10810252B2 (en) * | 2015-10-02 | 2020-10-20 | Adobe Inc. | Searching using specific attributes found in images |
US10367909B2 (en) | 2015-10-14 | 2019-07-30 | Alibaba Group Holding Limited | Method, device, and system for displaying information associated with a web page |
US11095744B2 (en) | 2015-10-14 | 2021-08-17 | Banma Zhixing Network (Hongkong) Co., Limited | Method, device, and system for displaying information associated with a web page |
JP2017091071A (en) * | 2015-11-06 | 2017-05-25 | 株式会社ピーカチ | Information search server, information search program, and information search method |
US10909459B2 (en) | 2016-06-09 | 2021-02-02 | Cognizant Technology Solutions U.S. Corporation | Content embedding using deep metric learning algorithms |
US11176189B1 (en) * | 2016-12-29 | 2021-11-16 | Shutterstock, Inc. | Relevance feedback with faceted search interface |
US10755142B2 (en) | 2017-09-05 | 2020-08-25 | Cognizant Technology Solutions U.S. Corporation | Automated and unsupervised generation of real-world training data |
US10755144B2 (en) | 2017-09-05 | 2020-08-25 | Cognizant Technology Solutions U.S. Corporation | Automated and unsupervised generation of real-world training data |
US20220092367A1 (en) * | 2018-03-16 | 2022-03-24 | Ebay Inc. | Generating a digital image using a generative adversarial network |
US11222246B2 (en) * | 2018-03-16 | 2022-01-11 | Ebay Inc. | Generating a digital image using a generative adversarial network |
US11869057B2 (en) * | 2018-03-16 | 2024-01-09 | Ebay Inc. | Generating a digital image using a generative adversarial network |
US11615695B2 (en) | 2018-06-12 | 2023-03-28 | Intergraph Corporation | Coverage agent for computer-aided dispatch systems |
US11735028B2 (en) | 2018-06-12 | 2023-08-22 | Intergraph Corporation | Artificial intelligence applications for computer-aided dispatch systems |
CN109299650A (en) * | 2018-07-27 | 2019-02-01 | 东南大学 | Non-linear online expression pre-detection method and device based on video |
EP3889891A4 (en) * | 2019-10-30 | 2022-09-28 | NTT Advanced Technology Corporation | Image processing device, image processing method, and program |
US20230103575A1 (en) * | 2021-10-05 | 2023-04-06 | Microsoft Technology Licensing, Llc | In-context visual search |
WO2023059382A1 (en) * | 2021-10-05 | 2023-04-13 | Microsoft Technology Licensing, Llc. | In-context visual search |
Also Published As
Publication number | Publication date |
---|---|
WO2014009751A1 (en) | 2014-01-16 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20140019431A1 (en) | Method and Apparatus for Conducting a Search | |
US20140019484A1 (en) | Method and Apparatus for Image Searching | |
US11216861B2 (en) | Color based social networking recommendations | |
US10186054B2 (en) | Automatic image-based recommendations using a color palette | |
US10402917B2 (en) | Color-related social networking recommendations using affiliated colors | |
US10242396B2 (en) | Automatic color palette based recommendations for affiliated colors | |
US9542704B2 (en) | Automatic image-based recommendations using a color palette | |
US9679532B2 (en) | Automatic image-based recommendations using a color palette | |
US9652868B2 (en) | Automatic color palette based recommendations | |
US9727983B2 (en) | Automatic color palette based recommendations | |
US9792303B2 (en) | Identifying data from keyword searches of color palettes and keyword trends | |
US10235389B2 (en) | Identifying data from keyword searches of color palettes | |
US9898487B2 (en) | Determining color names from keyword searches of color palettes | |
US9922050B2 (en) | Identifying data from keyword searches of color palettes and color palette trends | |
US20150379006A1 (en) | Automatic image-based recommendations using a color palette | |
US10691744B2 (en) | Determining affiliated colors from keyword searches of color palettes | |
US20150379001A1 (en) | Automatic color validation of image metadata | |
CN106294661B (en) | A kind of extended search method and device | |
US20180276727A1 (en) | System and Method for Automated Retrieval of Apparel Items and the Like | |
US11132734B2 (en) | System and method for social style mapping | |
KR20090028713A (en) | Simulation-assisted search | |
US20120224768A1 (en) | System and method for visual search | |
US11392261B1 (en) | Visualized item based systems |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: DEEPMIND TECHNOLOGIES LIMITED, UNITED KINGDOMFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:SULEYMAN, MUSTAFA;COPPIN, BENJAMIN KENNETH;REEL/FRAME:030003/0176Effective date: 20130313 |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:DEEPMIND TECHNOLOGIES LIMITED;REEL/FRAME:032746/0855Effective date: 20140422 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044144/0001Effective date: 20170929 |
|
AS | Assignment |
Owner name: DEEPMIND TECHNOLOGIES LIMITED, UNITED KINGDOMFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044242/0116Effective date: 20170921 |
|
AS | Assignment |
Owner name: DEEPMIND TECHNOLOGIES LIMITED, UNITED KINGDOMFree format text: CORRECTIVE ASSIGNMENT TO CORRECT THE DECLARATION PREVIOUSLY RECORDED AT REEL: 044144 FRAME: 0001. ASSIGNOR(S) HEREBY CONFIRMS THE DECLARATION;ASSIGNOR:DEEPMIND TECHNOLOGIES LIMITED;REEL/FRAME:058722/0008Effective date: 20220111 |
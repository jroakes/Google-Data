US6668338B1 - Dynamic shortcut to reverse autonomous computer program actions - Google Patents
Dynamic shortcut to reverse autonomous computer program actions Download PDFInfo
- Publication number
- US6668338B1 US6668338B1 US09/692,387 US69238700A US6668338B1 US 6668338 B1 US6668338 B1 US 6668338B1 US 69238700 A US69238700 A US 69238700A US 6668338 B1 US6668338 B1 US 6668338B1
- Authority
- US
- United States
- Prior art keywords
- state change
- reversing
- providing
- further characterized
- user
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/44—Arrangements for executing specific programs
- G06F9/451—Execution arrangements for user interfaces
Definitions
- This invention relates to the field of end-user computing, and more particularly to computing in systems or applications in which certain activities are carried out by the system without any direct instruction to do so by a user.
- Modern end-user application environments frequently incorporate “implicit” program actions that are carried out, not at the direct instigation of a user, but autonomously by the system or application itself.
- a well-known example is the AUTOSAVE function of many editing environments, in which the application periodically saves the work done so far on a disk, so that it is available for retrieval if the system or application fails before the user has had a chance to perform an explicit save of the data.
- a task will take some action, not as the result of a user request, but as a result of a predetermined time-limit being exceeded, or as an implied result of some other, unrelated user action.
- While these autonomous actions are useful in, for example, preserving work that might be lost over a system failure, or saving the user from extra keystrokes, or keeping a screen display free from unnecessary clutter, they may have disadvantages in other respects. In situations in which there is a shortage of disk space, for example, autonomous actions that consume disk space may be undesirable. Also, applications incorporating these autonomous actions, in their attempt to help the user, cannot always accurately predict the user's wishes. When they fail to do so the result may be annoyingly disadvantageous in reducing the ease-of-use characteristics of the system or application. Typically, to reverse the effects of such actions requires several steps to be taken by the user, as, for example, opening separate GUI windows to locate and delete unwanted, autonomously-created files.
- such a switch is typically used to set an action or actions off for an entire session, or as a system-wide option; in such circumstances, the user must remember to set the switch off for each session and reset it when the autonomous actions are again desired.
- the present invention accordingly provides a method for, in an end-user computer environment, reversing an effect of an autonomously-initiated program action, said method comprising the steps of: recognizing that the program action is to be performed; recording data representing a state change caused by the program action; providing a user option to cause the computer system to reverse the state change caused by the program action; responsive to a user selection of the user option, retrieving the data representing a state change; and reversing the state change caused by the program action.
- the step of recording data representing a state change preferably further comprises: recording data representing a before state; and recording data representing an after state.
- the step of recording data representing a state change caused by the program action preferably further comprises: determining that the state change includes a sequenced plurality of actions; and recording a corresponding sequenced plurality of reversing actions.
- the step of reversing the state change caused by the program action preferably further comprises: determining that the state change included a sequenced plurality of actions; and executing a corresponding sequenced plurality of reversing actions.
- the method of the first aspect is preferably further characterized in that said step of reversing comprises re-expanding a collapsed subtree of a tree structure.
- the method of the first aspect is preferably further characterized in that said step of reversing comprises re-unfolding a folded section of data in a folding editor.
- the method of the first aspect is preferably further characterized in that said step of reversing comprises redisplaying a graphics viewport at a previous zoom value.
- the method of the first aspect is preferably further characterized in that said step of reversing comprises deleting autonomously-created data from a store.
- the method of the first aspect is preferably further characterized in that said step of providing a user option comprises providing an active menu element.
- the method of the first aspect is preferably further characterized in that said step of providing a user option comprises providing an active keyboard shortcut.
- the method of the first aspect is preferably further characterized in that said step of providing a user option comprises providing an active voice-response element.
- the method of the first aspect is preferably further characterized in that said step of providing a user option comprises providing an active screen display element.
- the present invention provides apparatus, in an end-user computer environment, for reversing an effect of an autonomously-initiated program action, said apparatus comprising: means for recognizing that the program action is to be performed; means for recording data representing a state change caused by the program action; means for providing a user option to cause the computer system to reverse the state change caused by the program action; means, responsive to a user selection of the user option, retrieving the data representing a state change; and means for reversing the state change caused by the program action.
- the apparatus of the second aspect preferably further comprises features corresponding to those features stated to be preferred in the first aspect.
- FIG. 1 shows a flow diagram of the steps of a method according to a preferred embodiment of the present invention.
- FIGS. 2, 3 and 4 shows screen displays during operation of a method according to a preferred embodiment of the present invention.
- FIG. 5 shows a block diagram of apparatus according to a preferred embodiment of the present invention.
- FIG. 6 shows a flow diagram of the steps of a method according to a further preferred embodiment of the present invention.
- step ( 100 ) the system or application tests whether an autonomous program action is to be performed. If so, at step ( 106 ), the application records data representing the state change associated with the autonomous action. This may take the form of a data record in volatile or non-volatile storage.
- step ( 108 ) the application offers the reversing action to the user by means of a shortcut of some type. Typically, this would be an active keyboard shortcut, an active display element, or the like.
- a test is set at step ( 110 ) to determine subsequent processing. If the user does not select the reversing action, processing continues normally at step ( 112 ). If the user does select the reversing action, the application retrieves the state change data at step ( 114 ) and acts upon it to reverse the action at step ( 116 ). Normal processing continues at step ( 118 ).
- the state change log or log-pair is used as the means of leaving a “footprint” showing a change that can be reversed.
- a command or command script that has the effect of reversing a previous command. If the method of the invention were to be applied to the case of an AUTOSAVE action (useful if the system may be short on disk space, or where there is a security risk to files saved on disk), for example, the system or application might have issued a CREATE FILE command, followed by a series of WRITE FILE RECORD commands.
- a reversing option might thus require a DELETE FILE command to reverse the effect of the AUTOSAVE.
- a reversing option might thus require a DELETE FILE command to reverse the effect of the AUTOSAVE.
- the reversing option could be offered as a button on a desktop screen, a pull-down menu option, a command-line command, a keyboard shortcut key or key combination, a voice command or in any other way that is suitable to the system or application environment.
- FIG. 2 shows a GUI window having two panes ( 201 , 202 ).
- pane ( 201 ) there are files ( 203 , 204 ).
- a file hierarchy is represented by a tree structure comprising nodes which may be expanded to show their subtrees and collapsed again when no longer needed.
- folders PERS ( 206 ) and TEST 1 ( 205 ) have beside them triangular “twisties” ( 207 , 208 ), indicating that they represent the roots of subtrees that are not presently shown on the display.
- the word “twistie” refers to the small symbol shown next to an object name when that object comprises sub-objects.
- the orientation of the twistie indicates whether or not the sub-objects are shown. Clicking on a closed twistie typically opens it up to show the sub-objects, whereas clicking on an open twistie typically closes it, so that the sub-objects are no longer shown.)
- a user now drags file ( 203 ) over to folder TEST 1 ( 205 ) and “hovers” over it with the pointing device.
- the state of the window now changes to that shown in FIG. 3 .
- FIG. 3 shows a window having panes, files and folders corresponding to those shown in FIG. 2, with corresponding numbers. In FIG. 3, however, the subtree beneath folder TEST 1 ( 205 ) has been expanded and shown on the display.
- folder TEST 1 ( 205 ) are shown lower-level folders including folders AHP ( 308 ) and CORBA&C ( 309 ).
- the “twistie” ( 207 ) beside folder TEST 1 now points downward, indicating that the folder beside it has been expanded to show the subtree below.
- FIG. 4 contains elements corresponding to those in FIGS. 2 and 3, and numbered correspondingly.
- folder TEST 1 ( 205 ) has been automatically collapsed as a result of an autonomous decision by the application to do so after the determined time period.
- the state change between FIGS. 3 and 4 can be stored in the form of a representation of the expanded subtree and its corresponding collapsed form as a node of a tree.
- it can be stored as a command or command sequence that would have the effect of permitting the autonomously-collapsed subtree to be re-expanded.
- a shortcut to allow the user to re-expand the subtree can be offered as a single user action, which, if selected, returns the subtree to its expanded form.
- the shortcut can be offered to the user in any of the forms available, whether as a button on the screen, as a keyboard shortcut, a mouse-button shortcut, a voice command, or in any other appropriate way.
- the shortcut is offered as a keyboard shortcut combination of the Control and R keys. This is shown in a pop-up help box ( 409 ) offering the user the option of using the keyboard shortcut (Ctrl+R) to reverse the last autocollapse.
- this option allows a user to return the display to its previous state without having to remember any of the previous steps taken by the user that led to that state.
- a folding editor beginning with some section folded, a user performs a search.
- the folded section is opened in order to show a line that satisfies the search.
- the user continues the search, and the line is no longer selected.
- the section is automatically refolded.
- the editor saves a shortcut to undo the system-initiated refold and offers it to the user.
- a database manager program automatically decides to index a particular field based on a user query pattern. This ease-of-use characteristic may in some cases be undesirable. A user may know that the pattern of queries is likely to change in the future, or there may be inadequate disk space to save automatically-created indexes. The database manager program saves a shortcut to undo the indexing action and offers it to the user.
- FIG. 5 the components necessary to achieve this are shown in FIG. 5, in which is shown apparatus ( 500 ) having a program action recognition component ( 501 ) for recognizing that an autonomous program action is to be performed.
- program action recognition component ( 501 ) for recognizing that an autonomous program action is to be performed.
- state change data recorder ( 502 ) When component ( 501 ) recognizes that such an action is to be performed, it passes control to state change data recorder ( 502 ), which records the state change data in data storage ( 503 ).
- state change data recorder ( 502 ) recognizes that a state change is represented by a sequence of actions
- sequencer ( 508 ) is activated to organize the sequence of data prior to the storage of state change data in data storage ( 503 ) by state change data recorder ( 502 ).
- State change controller ( 505 ) passes control to a shortcut options interface component ( 506 ), which offers the user the option of reversing the autonomous action. If a user chooses the reversing option at user selection interface component ( 507 ), state change controller ( 505 ) passes control to state change data retrieval component ( 504 ), which retrieves state change data from data storage ( 503 ). If state change data retrieval component ( 504 ) recognizes that the state change requires a sequence of actions to be reversed, sequencer ( 508 ) is activated to construct the sequence of actions required to perform the reversing action from the state change data retrieved from data storage ( 503 ). State change controller ( 505 ) then performs the reversing action or actions required to reverse the state change.
- the present invention is preferably embodied as a computer program product for use with a computer system.
- Such an implementation may comprise a series of computer readable instructions either fixed on a tangible medium, such as a computer readable medium, e.g., diskette, CD-ROM, ROM, or hard disk, or transmittable to a computer system, via a modem or other interface device, over either a tangible medium, including but not limited to is optical or analog communications lines, or intangibly using wireless techniques, including but not limited to microwave, infrared or other transmission techniques.
- the series of computer readable instructions embodies all or part of the functionality previously described herein.
- Such computer readable instructions can be written in a number of programming languages for use with many computer architectures or operating systems. Further, such instructions may be stored using any memory technology, present or future, including but not limited to, semiconductor, magnetic, or optical, or transmitted using any communications technology, present or future, including but not limited to optical, infrared, or microwave. It is contemplated that such a computer program product may be distributed as a removable medium with accompanying printed or electronic documentation, e.g., shrink wrapped software, pre-loaded with a computer system, e.g., on a system ROM or fixed disk, or distributed from a server or electronic bulletin board over a network, e.g., the Internet or World Wide Web.
- a removable medium with accompanying printed or electronic documentation, e.g., shrink wrapped software, pre-loaded with a computer system, e.g., on a system ROM or fixed disk, or distributed from a server or electronic bulletin board over a network, e.g., the Internet or World Wide Web.
Abstract
Description
Claims (27)
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
GB0006413 | 2000-03-17 | ||
GBGB0006413.9A GB0006413D0 (en) | 2000-03-17 | 2000-03-17 | A dynamic shortcut to reverse autonomous computer program actions |
Publications (1)
Publication Number | Publication Date |
---|---|
US6668338B1 true US6668338B1 (en) | 2003-12-23 |
Family
ID=9887787
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/692,387 Expired - Lifetime US6668338B1 (en) | 2000-03-17 | 2000-10-19 | Dynamic shortcut to reverse autonomous computer program actions |
Country Status (3)
Country | Link |
---|---|
US (1) | US6668338B1 (en) |
EP (1) | EP1186998A3 (en) |
GB (1) | GB0006413D0 (en) |
Cited By (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050108678A1 (en) * | 2003-11-18 | 2005-05-19 | Margaret Goodwin | Application model that integrates the web experience with the traditional client application experience |
US20050187970A1 (en) * | 2004-02-19 | 2005-08-25 | Microsoft Corporation | Journalling non-navigation activity in a navigation-based application |
US20070055671A1 (en) * | 2005-09-02 | 2007-03-08 | Bangel Matthew J | Method and system for remotely updating a status of a data record |
US20110107197A1 (en) * | 2009-11-04 | 2011-05-05 | International Business Machines Corporation | Rendering sections of content in a document |
US20110261267A1 (en) * | 2010-04-22 | 2011-10-27 | Jaehong Kim | Electronic device and method of controlling the same |
US8122119B1 (en) * | 2001-02-27 | 2012-02-21 | Flowcharge, Inc. | Non-resident metering and billing system for applications and devices |
US20120272192A1 (en) * | 2011-04-19 | 2012-10-25 | Tovi Grossman | Hierarchical display and navigation of document revision histories |
US20130047261A1 (en) * | 2011-08-19 | 2013-02-21 | Graeme John Proudler | Data Access Control |
US20130139113A1 (en) * | 2011-11-30 | 2013-05-30 | Microsoft Corporation | Quick action for performing frequent tasks on a mobile device |
US20140137027A1 (en) * | 2012-11-14 | 2014-05-15 | Canon Kabushiki Kaisha | Information processing apparatus, method for controlling the same, and storage medium therefor |
US8838546B1 (en) * | 2012-08-10 | 2014-09-16 | Google Inc. | Correcting accidental shortcut usage |
US10491695B2 (en) | 2014-08-22 | 2019-11-26 | Oracle International Corporation | Autosave with across user session undo support |
US11194463B2 (en) * | 2017-11-08 | 2021-12-07 | Google Llc | Methods, systems, and media for presenting offset content |
Families Citing this family (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
EP1477894A3 (en) * | 2003-05-16 | 2006-10-25 | Sap Ag | System, method, computer program product and article of manufacture for manipulating a graphical user interface |
Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5355472A (en) * | 1990-04-10 | 1994-10-11 | International Business Machines Corporation | System for substituting tags for non-editable data sets in hypertext documents and updating web files containing links between data sets corresponding to changes made to the tags |
US5437026A (en) * | 1989-06-13 | 1995-07-25 | International Business Machines Corporation | Removing uncommitted changes made to stored data by a database management system |
US5953017A (en) | 1997-07-31 | 1999-09-14 | International Business Machines Corporation | Compressed object display |
US6226694B1 (en) * | 1998-04-29 | 2001-05-01 | Hewlett-Packard Company | Achieving consistency and synchronization among multiple data stores that cooperate within a single system in the absence of transaction monitoring |
US6295610B1 (en) * | 1998-09-17 | 2001-09-25 | Oracle Corporation | Recovering resources in parallel |
US6543006B1 (en) * | 1999-08-31 | 2003-04-01 | Autodesk, Inc. | Method and apparatus for automatic undo support |
Family Cites Families (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
EP0554854A3 (en) * | 1992-02-04 | 1996-02-28 | Digital Equipment Corp | System and method for executing, tracking and recovering long running computations |
US6151643A (en) * | 1996-06-07 | 2000-11-21 | Networks Associates, Inc. | Automatic updating of diverse software products on multiple client computer systems by downloading scanning application to client computer and generating software list on client computer |
US5884265A (en) * | 1997-03-27 | 1999-03-16 | International Business Machines Corporation | Method and system for selective display of voice activated commands dialog box |
-
2000
- 2000-03-17 GB GBGB0006413.9A patent/GB0006413D0/en not_active Ceased
- 2000-10-19 US US09/692,387 patent/US6668338B1/en not_active Expired - Lifetime
-
2001
- 2001-03-05 EP EP01000036A patent/EP1186998A3/en not_active Withdrawn
Patent Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5437026A (en) * | 1989-06-13 | 1995-07-25 | International Business Machines Corporation | Removing uncommitted changes made to stored data by a database management system |
US5355472A (en) * | 1990-04-10 | 1994-10-11 | International Business Machines Corporation | System for substituting tags for non-editable data sets in hypertext documents and updating web files containing links between data sets corresponding to changes made to the tags |
US5953017A (en) | 1997-07-31 | 1999-09-14 | International Business Machines Corporation | Compressed object display |
US6226694B1 (en) * | 1998-04-29 | 2001-05-01 | Hewlett-Packard Company | Achieving consistency and synchronization among multiple data stores that cooperate within a single system in the absence of transaction monitoring |
US6295610B1 (en) * | 1998-09-17 | 2001-09-25 | Oracle Corporation | Recovering resources in parallel |
US6543006B1 (en) * | 1999-08-31 | 2003-04-01 | Autodesk, Inc. | Method and apparatus for automatic undo support |
Cited By (24)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9779430B2 (en) | 2001-02-27 | 2017-10-03 | Flowcharge, Inc. | Non-resident metering and billing system for applications and devices |
US8122119B1 (en) * | 2001-02-27 | 2012-02-21 | Flowcharge, Inc. | Non-resident metering and billing system for applications and devices |
US8930944B2 (en) | 2003-11-18 | 2015-01-06 | Microsoft Corporation | Application model that integrates the web experience with the traditional client application experience |
US20050108678A1 (en) * | 2003-11-18 | 2005-05-19 | Margaret Goodwin | Application model that integrates the web experience with the traditional client application experience |
US20050187970A1 (en) * | 2004-02-19 | 2005-08-25 | Microsoft Corporation | Journalling non-navigation activity in a navigation-based application |
US7246130B2 (en) | 2004-02-19 | 2007-07-17 | Microsoft Corporation | Journalling non-navigation activity in a navigation-based application |
US20070055671A1 (en) * | 2005-09-02 | 2007-03-08 | Bangel Matthew J | Method and system for remotely updating a status of a data record |
US7472126B2 (en) | 2005-09-02 | 2008-12-30 | International Business Machines Corporation | Remotely updating a status of a data record to cancel a workstation deployment |
US20090024638A1 (en) * | 2005-09-02 | 2009-01-22 | Bangel Matthew J | Remotely updating a status of a data record to cancel a workstation deployment |
US7849068B2 (en) | 2005-09-02 | 2010-12-07 | International Business Machines Corporation | Remotely updating a status of a data record to cancel a workstation deployment |
US9229916B2 (en) | 2009-11-04 | 2016-01-05 | International Business Machines Corporation | Rendering sections of content in a document |
US8332754B2 (en) | 2009-11-04 | 2012-12-11 | International Business Machines Corporation | Rendering sections of content in a document |
US20110107197A1 (en) * | 2009-11-04 | 2011-05-05 | International Business Machines Corporation | Rendering sections of content in a document |
US20110261267A1 (en) * | 2010-04-22 | 2011-10-27 | Jaehong Kim | Electronic device and method of controlling the same |
US20120272192A1 (en) * | 2011-04-19 | 2012-10-25 | Tovi Grossman | Hierarchical display and navigation of document revision histories |
US8533595B2 (en) * | 2011-04-19 | 2013-09-10 | Autodesk, Inc | Hierarchical display and navigation of document revision histories |
US20130047261A1 (en) * | 2011-08-19 | 2013-02-21 | Graeme John Proudler | Data Access Control |
US20130139113A1 (en) * | 2011-11-30 | 2013-05-30 | Microsoft Corporation | Quick action for performing frequent tasks on a mobile device |
US8838546B1 (en) * | 2012-08-10 | 2014-09-16 | Google Inc. | Correcting accidental shortcut usage |
US20140137027A1 (en) * | 2012-11-14 | 2014-05-15 | Canon Kabushiki Kaisha | Information processing apparatus, method for controlling the same, and storage medium therefor |
US10127241B2 (en) * | 2012-11-14 | 2018-11-13 | Canon Kabushiki Kaisha | Information processing apparatus, method for controlling the same, and storage medium therefor |
US10491695B2 (en) | 2014-08-22 | 2019-11-26 | Oracle International Corporation | Autosave with across user session undo support |
US11194463B2 (en) * | 2017-11-08 | 2021-12-07 | Google Llc | Methods, systems, and media for presenting offset content |
US11861157B2 (en) | 2017-11-08 | 2024-01-02 | Google Llc | Methods, systems, and media for presenting offset content |
Also Published As
Publication number | Publication date |
---|---|
GB0006413D0 (en) | 2000-05-03 |
EP1186998A3 (en) | 2004-05-12 |
EP1186998A2 (en) | 2002-03-13 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10783318B2 (en) | Facilitating modification of an extracted field | |
US4975690A (en) | Method for concurrent data entry and manipulation in multiple applications | |
US6121968A (en) | Adaptive menus | |
US6636250B1 (en) | Methods and apparatus for presenting information to a user of a computer system | |
US5423034A (en) | Network file management with user determined hierarchical file structures and means for intercepting application program open and save commands for inputting and displaying user inputted descriptions of the location and content of files | |
US6668338B1 (en) | Dynamic shortcut to reverse autonomous computer program actions | |
US5220675A (en) | Method and system for customizing a user interface in an integrated environment | |
JP4347371B2 (en) | Hierarchical file structure component selection system and method | |
KR100368478B1 (en) | Displaying a complex tree structure among multiple windows | |
US7113941B2 (en) | Database access mechanisms for a computer user interface | |
US6658436B2 (en) | Logical view and access to data managed by a modular data and storage management system | |
KR0174577B1 (en) | Multiple display pointers for computer graphical user interfaces | |
US20030227491A1 (en) | Active path menu navigation system | |
US20100257479A1 (en) | Graphical User Interface with Dynamic Toolbar Search Functionality | |
US6091416A (en) | Method, apparatus and computer program product for graphical user interface control and generating a multitool icon | |
US20080222548A1 (en) | In-Context Total Document Views for Manipulating Data | |
US20060117271A1 (en) | Pattern-based keyboard controls | |
US5953720A (en) | Method and apparatus for a unified chooser for heterogeneous entities | |
KR960001973A (en) | Computer interface and user interface method for managing media spanning of database tables on a computer | |
WO2003038584A1 (en) | Object oriented explorer type environment | |
US20010004260A1 (en) | Method, system, and graphic user interface for file system navigation | |
RU2433464C2 (en) | Combined search and launching file execution | |
KR100480549B1 (en) | Method to document relations between objects using a graphical interface tree component | |
KR100321838B1 (en) | System and method for organizing objects managed within a desktop | |
WO2003079236A1 (en) | System and method for linking controlled vocabulary data |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: INTERNATIONAL BUSINESS MACHINES CORPORATION, NEW YFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:TODD, STEPHEN JAMES;WALLIS, GRAHAM DEREK;REEL/FRAME:011283/0890;SIGNING DATES FROM 20000807 TO 20000821 |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
REMI | Maintenance fee reminder mailed | ||
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:INTERNATIONAL BUSINESS MACHINES CORPORATION;REEL/FRAME:026894/0001Effective date: 20110817 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
SULP | Surcharge for late payment |
Year of fee payment: 7 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044127/0735Effective date: 20170929 |
CN114981813A - Privacy protection techniques for content selection and distribution - Google Patents
Privacy protection techniques for content selection and distribution Download PDFInfo
- Publication number
- CN114981813A CN114981813A CN202180008029.2A CN202180008029A CN114981813A CN 114981813 A CN114981813 A CN 114981813A CN 202180008029 A CN202180008029 A CN 202180008029A CN 114981813 A CN114981813 A CN 114981813A
- Authority
- CN
- China
- Prior art keywords
- selection
- value
- privacy
- selection process
- server
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/04—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks
- H04L63/0407—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks wherein the identity of one or more communicating identities is hidden
- H04L63/0421—Anonymous communication, i.e. the party's identifiers are hidden from the other party or parties, e.g. using an anonymizer
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/62—Protecting access to data via a platform, e.g. using keys or access control rules
- G06F21/6218—Protecting access to data via a platform, e.g. using keys or access control rules to a system of files or objects, e.g. local or distributed file system or database
- G06F21/6245—Protecting personal data, e.g. for financial or medical purposes
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/60—Protecting data
- G06F21/62—Protecting access to data via a platform, e.g. using keys or access control rules
- G06F21/6218—Protecting access to data via a platform, e.g. using keys or access control rules to a system of files or objects, e.g. local or distributed file system or database
- G06F21/6245—Protecting personal data, e.g. for financial or medical purposes
- G06F21/6254—Protecting personal data, e.g. for financial or medical purposes by anonymising data, e.g. decorrelating personal data from the owner's identification
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W12/00—Security arrangements; Authentication; Protecting privacy or anonymity
- H04W12/02—Protecting privacy or anonymity, e.g. protecting personally identifiable information [PII]
Abstract
This disclosure describes systems and techniques for improving information integrity and protecting information security in content selection and distribution. In one aspect, a method includes receiving, by a first server of a secure multi-party computing (MPC) system and from an application on a client device, a request for a selection value. In response to receiving the request, the first server performs a privacy preserving selection process and a counterfactual selection process in cooperation with a second server of the secure MPC system. The first server sends a selection result defining a first winning selection value from the privacy protection selection process and a second winning selection value from the counterfactual selection process, and receives a notification from an application on the client device indicating that a digital component corresponding to the winning selection value from the privacy protection selection process is presented at the client device.
Description
Cross Reference to Related Applications
The present application claims priority from israeli application No. 279406, filed 12/13/2020, which is incorporated herein by reference in its entirety.
Technical Field
This specification relates to data security, data integrity and cryptography.
Background
Secure multi-party computing (MPC) is a series of cryptographic protocols that prevent access to data by distributing the computation among multiple parties such that neither party has access to the data of the other. MPC computing systems use secret sharing of data to perform computations.
Disclosure of Invention
In general, one innovative aspect of the subject matter described in this specification can be embodied in a method that includes: receiving, by a first server of a secure multi-party computing (MPC) system and from an application on a client device, a request for a selection value, in response to receiving the request and by the first server of the secure MPC system: performing a privacy-preserving selection process, in cooperation with a second server of the secure MPC system, to select a first winning selection value from a set of selection values by applying each rule of the set of selection rules including a privacy-preserving anonymity enforcement rule; and in cooperation with a second server of the secure MPC system, performing a counterfactual selection process to select a second winning selection value from the set of selection values by applying each rule of the set of selection rules except a privacy preserving anonymity enforcement rule; sending, by a first server of the secure MPC system, a selection result defining a first winning selection value from the privacy preserving selection process and a second winning selection value from the counterfactual selection process; receiving, by a first server of the secure MPC system and from an application on a client device, a notification including data indicating that a digital component corresponding to a winning selection value from the privacy-preserving selection process is presented at the client device; and updating, by the first server of the secure MPC system, a privacy preserving data structure for determining whether the digital component satisfies a privacy preserving anonymity enforcement rule that maintains the first value of the privacy preserving property corresponding to the second winning selection value from the counterfactual selection process.
These and other embodiments may optionally include one or more of the following features. In some embodiments, performing the privacy-preserving selection process and performing the counterfactual selection process are performed in parallel.
In some embodiments, the notification includes a variable indicating whether the first server of the secure MPC system should increment the value of the privacy-preserving data structure.
In some embodiments, the privacy preserving anonymity enforcement rule is a k-anonymity rule.
In some embodiments, transmitting the winning selection value from the privacy preserving selection process comprises: sending, by a first server of the secure MPC system, a first secret share of winning selection values from the privacy protection selection process to the client device; sending, by a second server of the secure MPC system, a second secret share of the winning selection value from the privacy-preserving selection process to the client device; and wherein transmitting the winning selection value from the counterfactual selection process comprises: sending, by a first server of the secure MPC system, a first secret share of winning selection values from the counterfactual selection process to the client device; and sending, by a second server of the secure MPC system, a second secret share of the winning selection value from the counterfactual selection process to the client device.
In some embodiments, the privacy-preserving data structure includes a set of counter variables; wherein each counter variable maps to an aggregated identifier, wherein each aggregated identifier maps to one or more selection values and a particular numerical component, and wherein conducting a privacy-preserving selection process to select a first winning selection value from a set of selection values by applying each rule of the set of selection rules that includes a privacy-preserving anonymity enforcement rule comprises: for each selection value: comparing a counter variable value mapped to the aggregation identifier mapped to the selection value with a threshold value; and discarding the selection value if the counter variable value is less than the threshold value. In some embodiments, updating the privacy-preserving data structure is performed asynchronously and at specified intervals.
Other embodiments of this aspect include corresponding systems, apparatus, and computer programs, configured to perform the actions of the methods, encoded on computer storage devices.
The subject matter described in this specification can be implemented in particular embodiments to realize one or more of the following advantages.
Using a secure MPC process performed by two or more MPC servers operated by different parties to select digital components based on a secret sharing of user information ensures that the MPC server or another party cannot access the user information in plain text (playext) or clear text (cleartext) without unauthorized collusion between the MPC servers. The MPC process is used to implement privacy safeguards such as meeting k-anonymity within the publication of the data, or meeting anonymity to the extent that the information of each user in the publication cannot be distinguished from the information of at least k-1 other users in the publication, or meeting k-anonymity within at least k different applications such as Internet browsers.
The MPC cluster may send a secret share identifying the results of selected digital components that the MPC cluster selected using the secure MPC process. By sending a secret share of the results of only selected digital components, rather than information for all or a large group of digital components, bandwidth, latency, processing power, and battery power consumed in sending and receiving results are similarly reduced. By limiting the number of digital components that provide their information to the client device, the potential leakage of confidential information that submits the selected values of the digital components to the content platform of the MPC cluster is also reduced. The described techniques provide a simplified process for maintaining a high level of privacy. By implementing the segmentation process via MPC techniques, the system provides a high threshold of user privacy without requiring extensive modifications from the demand-side platform.
The proposed structure introduces a counterfactual selection process that ignores the k-anonymity rule to determine a virtual user group (phantom user group) candidate selection criterion. The virtual candidate selection criterion is eligible to win the selection process if the candidate criterion satisfies all rules determining eligibility except the k-anonymity rule. The virtual user group candidate selection criteria are provided for selection in a client side selection process performed by a client side application, in addition to the actual user group candidate selection criteria known to satisfy the k-anonymity rule. After the client-side selection process is completed, the client-side application provides an update notification to the MPC cluster to de-weight (deputyrate) the virtual user group candidate selection criteria in order to help the MPC cluster properly maintain counters that track compliance of k-anonymity rules. Based on the counter value, the MPC cluster updates the selection process eligibility for the cached user group selection criteria. This enables the MPC cluster to track the number of times a digital component corresponding to the virtual user group candidate selection criteria will be displayed at the client device and use that number to determine whether the digital component meets the k-anonymity requirement. Without these techniques, the MPC system may not be able to distribute new digital components because it would be ill-equipped to be provided. The counterfactual selection process enables the MPC cluster to determine whether a digital component will be displayed a sufficient number of times to satisfy k-anonymity if qualified for the privacy protection selection process. Using k-anonymity prevents individual users from being targeted and prevents entities from being able to determine which user groups include the user as a member.
Furthermore, data cached locally at a particular computing system reduces latency for future requests for any cached data. Reducing latency in the presentation of content also reduces the number of errors that occur when a client device waits for such content to arrive. Since content typically needs to be provided and provided to a mobile device connected over a wireless network in hundreds of milliseconds, reducing the delay in selecting and providing content is critical to prevent errors and reducing user frustration. Furthermore, reducing the need to transmit data reduces the amount of bandwidth consumed by transmitting information, reduces latency in transmitting information, and reduces the amount of processing power required to transmit information and associated battery power of a device (e.g., a mobile device) that runs on a battery.
Various features and advantages of the foregoing subject matter are described below with reference to the drawings. Additional features and advantages will be apparent from the subject matter described herein and the claims.
Drawings
FIG. 1 is a block diagram of an environment in which an MPC cluster performs a secure MPC process to select digital components for distribution to client devices.
FIG. 2 is a swim lane diagram of an example process for selecting a digital component for display at or distribution to a client device.
FIG. 3 is a flow diagram illustrating an example process for selecting digital components for distribution to client devices.
FIG. 4 is a block diagram of an example computer system.
Like reference numbers and designations in the various drawings indicate like elements.
Detailed Description
In general, this disclosure describes systems and techniques for improving information integrity and protecting information security in content selection and distribution. The MPC cluster of server computers can perform a secure MPC process to select digital components based on user information, and no MPC server can access the user information in clear text without unauthorized collusion. The user information may be sent to the MPC cluster using a probabilistic data structure to reduce the data size of the information sent over the network and to maintain information security during transmission.
Fig. 1 is a block diagram of an environment 100 in which an MPC cluster performs a secure MPC process to select digital components for distribution to client devices 110. The example environment 100 includes a data communication network 105, such as a Local Area Network (LAN), a Wide Area Network (WAN), the internet, a mobile network, or a combination thereof. The network 105 connects client devices 110, secure MPC cluster 130, publishers 140, websites 142, content platforms, such as Supply Side Platform (SSP)170 and demand side platform DSP (150). Example environment 100 may include many different client devices 110, secure MPC clusters 130, publishers 140, web sites 142, DSPs 150, and SSPs 170.
The client device 110 is an electronic device capable of communicating over the network 105. Example client devices 110 include personal computers, mobile communication devices (e.g., smart phones), and other devices that can send and receive data over the network 105. The client device may also include a digital assistant device that accepts audio input through a microphone and outputs audio output through a speaker. When the digital assistant detects a "hotword" or "hotphrase" that activates the microphone to accept audio input, the digital assistant may be placed in a listening mode (e.g., ready to accept audio input). The digital assistant device may also include a camera and/or a display to capture images and visually present information. The digital assistant may be implemented in different forms of hardware devices, including wearable devices (e.g., watches or glasses), smart phones, speaker devices, tablet devices, or other hardware devices. The client device may also include a digital media device, such as a streaming device that plugs into a television or other display to stream video to a television, game console, or virtual reality system.
Some resources, application pages, or other application content may include digital component slots for presenting digital components with the resources 145 or application pages. As used throughout this disclosure, the phrase "digital component" refers to a discrete unit of digital content or digital information (e.g., a video clip, audio clip, multimedia clip, image, text, or other unit of content). The digital components may be electronically stored in the physical memory device as a single file or collection of files, and the digital components may be in the form of video files, audio files, multimedia files, image files, or text files, and include advertising information such that the advertisement is one type of digital component. For example, the digital component may be content intended to supplement the content of a web page or other resource presented by the application 112. More particularly, the digital components may include digital content related to resource content (e.g., the digital components may be related to the same subject matter as the web page content, or related to a related subject matter). Thus, the provision of digital components can supplement and generally enhance web page or application content.
When application 112 loads a resource (or application content) that includes one or more digital component slots, application 112 may request a digital component for each slot. In some implementations, the digital component slot can include code (e.g., script) that causes the application 112 to request the digital component from a digital component distribution system that selects the digital component and provides the digital component to the application 112 for presentation to a user of the client device 110. As described below, the application 112 may request digital components from the MPC cluster 130 and/or one or more SSPs 170.
Some publishers 140 use the SSP 170 to manage the process of obtaining digital components for digital component slots of their resources and/or applications. The SSP 170 is a hardware and/or software implemented technology platform that will automate the process of digital components for resources and/or applications. Each publisher 140 may have a corresponding SSP 170 or SSPs 170. Some publishers 140 may use the same SSP 170.
The digital component provider 160 can create (or otherwise publish) digital components that are presented in digital component slots of publishers' resources and applications. The digital component provider 160 may use the DSP150 to manage the provision of its digital components for presentation in the digital component slots. DSP150 is a hardware and/or software implemented technology platform that will distribute digital components for automation of processes presented with resources and/or applications. The DSP150 may interact with multiple supply side platforms SSP on behalf of a digital component provider 160 to provide digital components for presentation with multiple different publisher 140 resources and/or applications. In general, DSP150 may receive a request for a digital component (e.g., from an SSP), generate (or select) a selection value for one or more digital components created by one or more digital component providers based on the request, and provide data related to the digital component (e.g., the digital component itself) and a selection parameter to the SPP. The selection value may indicate an amount that the digital component provider 160 is willing to provide for user interaction with or presentation of the digital component. The SSP may then select a digital component for presentation at the client device 110 and provide the client device 110 with data that causes the client device 110 to present the digital component.
In some cases, it may be beneficial for a user to receive digital components related to web pages, application pages, or other electronic resources that the user previously accessed and/or interacted with. To distribute such digital components to users, users may be assigned to groups of users, such as groups of user interests, groups of similar users, or other group classes that relate to similar user data, when the users access a particular resource or perform a particular action at the resource (e.g., interact with a particular item presented on a web page or add an item to a virtual shopping cart). The user group may be generated by the digital component provider 160. That is, each digital component provider 160 may assign a user to its group of users when the user accesses electronic resources of the digital component provider 160. The user group may also be created by the content platform (e.g., by DSP150 and/or SSP 170).
To protect user privacy, group membership of the user may be maintained at the user's client device 110, e.g., by one of the applications 112 or the operating system of the client device 110, rather than by the digital component provider, the content platform, or other party. In a particular example, a trusted program (e.g., a web browser or operating system) can maintain a list of user group identifiers ("user group list") for users using a web browser or other application (e.g., for users logged into the browser, application, or client device 110). The user group list may include a group identifier for each user group that includes the user as a member. The digital component provider 160 that creates the user group may specify the user group identifier for its user group. The user group identifier of the user group may be a description of the group (e.g. a gardening group) or a code representing the group (e.g. a non-descriptive alphanumeric sequence). The user group list of the user may be stored in a secure store at the client device 110 and/or may be encrypted at the time of storage to prevent others from accessing the list.
When the application 112 presents resources or application content related to a web page on the digital component provider 160 or the website 142, the resource may request that the application 112 add one or more user group identifiers to the user group list. In response, the application 112 may add one or more user group identifiers to the user group list and securely store the user group list.
The MPC cluster 130 may use the user group membership of the user to select digital components or other content that may be of interest to the user or that may be beneficial to the user/client device in another way. For example, such digital components or other content may include data that improves the user experience, improves the operation of the client device, or benefits the user or client device in some other way. However, the digital components may be provided and selected using the user group identifiers of the user's user group list in a manner that prevents the computing systems MPC1 and MPC2 of MPC cluster 130 from accessing the user group identifiers of the users in clear text, thereby protecting user privacy when selecting digital components using the user group membership data. Plaintext is text that has not been computationally tagged, specially formatted, or written in code or data, and includes binary files in a form that can be viewed or used without a key or other decryption device or other decryption process.
Computing systems MPC1 and MPC2 may be operated by different entities. In this manner, each entity may not have access to the user's group membership in clear text. For example, one of computing systems MPC1 or MPC2 may be operated by a trusted party other than the user, publisher 140, DSP150, SSP 170, and digital component provider 160. For example, an industry group, government group, or browser developer may maintain and operate one of computing systems MPC1 and MPC 2. Another computing system may be operated by a different one of these groups such that a different recipient operates each computing system MPC1 and MPC 2. Preferably, the different parties operating the different computing systems MPC1 and MPC2 have no incentive to collude to compromise user privacy. In some embodiments, computing systems MPC1 and MPC2 are architecturally separate and monitored so as not to communicate with each other outside of performing the secure MPC process described in this disclosure.
In addition to the description throughout this disclosure, a user may be provided with controls (e.g., user interface elements with which the user may interact) allowing the user to select whether and when the systems, programs, or features described herein may be able to gather user information (e.g., information about the user's social network, social actions or activities, profession, the user's preferences, or the user's current location) and whether to send content or communications from a server to the user. In addition, certain data may be processed in one or more ways to remove personally identifiable information before it is stored or used. For example, the user's identification may be processed so that personally identifiable information for the user cannot be determined, or the user's geographic location may be generalized where location information is obtained (e.g., to a city, zip code, or state level), so that the user's specific location cannot be determined. Thus, the user may control which information about the user is collected, how the information is used, and which information is provided to the user.
FIG. 2 is a swim lane diagram of an example process 200 for selecting a digital component for display at or distribution to a client device. The operations of process 200 may be implemented, for example, by applications 112 on client devices 110, computing systems MPC1 and MPC2 of MPC cluster 130, and DSP 150. The operations of process 200 may also be implemented as instructions stored on one or more computer-readable media, which may be non-transitory, and execution of the instructions by one or more data processing apparatus may cause the one or more data processing apparatus to perform the operations of process 200. Although the process 200 and other processes are described below with respect to the MPC cluster 130 of two computing systems, MPC clusters having more than two computing systems may also be used to perform similar processes. Further, the operations of process 200 may be implemented by SSP 170.
The MPC cluster performs a secure MPC process to select a digital component based on characteristic information in the digital component request, such as user group information. The user group information may be provided using secret sharing, e.g., such that MPC1 gets a secret share of the user group information and MPC2 gets a second share of the user group information. The user group information may identify one or more user groups that include the user of the client device sending the request as a member. The digital component selection may include identifying eligible selection values for the digital components in the two-level lookup tables of the computing systems MPC1 and MPC2 using the first-level lookup key. This may also include, for example, identifying a selection value for a numeric component that is a candidate for selection based on the numeric component having a user group identifier that matches one of the user group identifiers of the user. This may also include selecting a digital component from the candidate digital components based on the selection value of the digital component. All of this may be performed without computing system MPC1 or MPC2 having access to the user group identifiers in clear text form.
Computing systems MPC1 and MPC2 may use secure MPC techniques to identify candidate selection values using secret sharing so that neither computing systems MPC1 nor MPC2 know which digital components are candidates or include groups of users as members. To do so, computing system MPC1 calculates a first share of the candidate parameter for each digital component in the set of digital components. Similarly, computing system MPC2 calculates a second share of the candidate parameter for each digital component in the set of digital components. The candidate parameter may be a boolean value (e.g., zero or one) that indicates whether the selection value of the numeric component linked to the subscriber group identifier is a candidate. That is, the candidate parameter indicates whether the digital component is linked to an allocation criterion indicating that the digital component is eligible for allocation to a user of the user group identified by the user group identifier.
Computing systems MPC1 and MPC2 may use secure MPC techniques to compute a secret share of the results of the selection process by one or more round trips between the computing systems. That is, computing systems MPC1 and MPC2 may determine a secret share of the winning selection value and/or its respective digital components.
Once sharing is complete, MPC1 and MPC2 may each return one of the shares of the selection result to the client device. The client device may then reconstruct the selection result in clear text using the two secret shares. The selection result may include the corresponding digital component or a reference to the corresponding digital component, e.g., a link to download the corresponding digital component.
Flow begins with DSP150 providing a selection of digital components to MPC cluster 130, typically via SSP 170 (stage 1). As described above, the selection value may indicate an amount that the digital component provider 160 is willing to provide for user interaction with or presentation of the digital component. MPC cluster 130 may store the selection values for future digital component requests received from client devices 110. For each digital component, the DSP150 may also upload additional data, e.g., metadata, for the digital component. The additional data of the digital component may include a user group identifier of a user group corresponding to the digital component (e.g., a user group to which the digital component is eligible to be distributed). For example, DSP150 may manage activities of client device 110 in which digital components are distributed to users who are members of a user group.
The data for the digital component may include a context selection signal indicating the context for which the digital component is eligible, e.g., the location of the client device 110, the spoken language selected for the application 112, a Universal Resource Locator (URL) of the resource with which the digital component may be presented. The data of the digital component may also identify the digital component, e.g., using the unique identifier, a domain from which the digital component may be obtained, and/or other suitable data of the digital component.
The MPC cluster 130 caches or otherwise stores selected values of digital components provided to the MPC cluster 130 for future digital component requests. In this example, the context signal and the selection value of the digital component may comprise a context signal included in the digital component request.
In some embodiments, each computing system MPC1 and MPC2 uses a two-level lookup table (LUT) to store selected values of digital components. The first level may be key-encrypted by a user group request key. The user group request key may be a composite message based on a set of context signals, e.g., a set of context signals (e.g., URL, location, language, etc.) requested by the digital component or a set of context signals for which the digital component is eligible for distribution. That is, the first level LUT may be key encrypted based on a set of context signals. The second level LUT may be key-encrypted based on a combination of the subscriber group request key and the subscriber group identifier in the first level LUT. In some embodiments, the second level LUT may be replaced with a simple table without a lookup key. Each row in the second level LUT may be a particular select value for a particular digital component. For example, DSP150 may submit different selection values for the same digital component, where each selection value is for a different set of context signals and/or a different user group identifier. Accordingly, the selection value of the digital component may vary depending on the context.
The DSP150 or digital component provider 160 may optionally associate (e.g., link or map) the digital component to a group of users to which the DSP150 or digital component provider wishes to present the digital component. For example, the DSP150 may wish to provide digital components related to a DIY birdhouse building suite for display at a client device to a user exhibiting interest in DIY, birds, and/or yard decoration. In this example, the DSP150 may provide the MPC cluster 130 with data indicating that the digital components correspond to user group identifiers for user groups including users exhibiting interest in DIY, birds, and/or yard decorations. Further, the same DSP150 or digital component provider 160 may optionally associate (e.g., link or map) the same digital component to other conditions that the DSP150 or digital component provider wishes to render the digital component, such as a particular consumption control (paging) condition.
In some embodiments, the Key for a row in the second level LUT may be a hash or code generated based on a combination of the user group Request Key UG _ Request _ Key and the user group identifier of the digital component of the row. For example, the Key may be a combined hash-based message authentication code (HMAC), which may be denoted as HMACSHA256(UG _ Request _ Key, UG _ id). The user group identifier ug id may be based on a combination of an internal user group identifier of the user group and a domain of the owner of the user group (e.g. a domain of a DSP, SSP or digital component provider owning the user group). For example, the user group identifier ug _ id may be HMAC of the tld +1 of the owner's domain and a digital digest of the owner's internal user group identifier of the user group, or a combination thereof. Tld +1 is the valid top level field (tld) plus one level more than the common suffix. Example eTLD +1 is "example.com", where ". com" is the top level domain. The ug id may be truncated to 16 bytes or other suitable data size.
The values of each row of the second level LUT may be selected values of the digital components and other data of the digital components, such as metadata identifying the digital components or a network location from which the digital components may be downloaded, etc. The value may be a digital component information element, which may be an array of bytes having a selection value and metadata. The second level LUT maps the select values to specific digital components. In some embodiments, the second level LUT also optionally maps a particular subscriber group identifier to a particular set of context signals defined by the first level lookup key. By doing so, the second level LUT indicates the particular context of the digital component slot for which the selected value of the digital component qualifies. This allows the DSP150 or digital component provider 160 to specify different selection values for the same digital component for different contexts defined by the context signal (and optionally, the user's group membership or other conditions for content delivery). When a digital component request is received indicating that the user to whom the digital component is to be presented is a member of a particular user group identified by a particular user group identifier, and the digital component is to be presented in a particular context defined by the context signal of the first level lookup key, any selection value in the second level LUT having a matching user group identifier and a matching first level lookup key is a candidate for selection for distribution in response to the request.
The client device 110 receives the content (stage 2). For example, the client device 110 may receive an electronic resource (e.g., a web page) for presentation by a web browser, or application content for presentation by a native application. The content may include one or more digital component slots that include computer readable code (e.g., scripts) that, when executed, cause the client device 110 to request a digital component for each slot. The client device 110 may render the content on a display of the client device 110.
The client device 110 then sends a request for the digital component to the MPC cluster 130 (stage 4). For example, the client device 110 may send a request for a digital component directly to the MPC cluster 130. In some implementations, client device 110 may send a request for a digital component to SSP 170 (or DSP 150), and SSP 170 (or DSP 150) may forward the request to MPC cluster 130. In some embodiments, the request may not include user group information.
The MPC cluster 130 performs a privacy preserving selection process based on the request to select a winning digital component with a particular selection value (stage 5 a). For example, the selection process may take the form of an auction held to select a numeric component that is eligible and has the highest selection value that meets a threshold (e.g., k-anonymity) specified by the MPC cluster 130 or client device 110. In order for a digital component to be eligible for the selection process, the digital component must meet certain distribution requirements. For example, the digital components must satisfy certain rules specified by one or more digital component providers 160, client devices 110, users of client devices 110, and/or MPC cluster 130 itself. The rules may include restrictions and guidance on how or how frequently the digital components are distributed, among other factors. The rules include frequency control, muting, budget, and consumption control limits. The privacy protection selection process includes an additional rule-a privacy protection rule that enforces anonymity of the data for a particular user. For example, the privacy protection rule is implemented as a k-anonymity rule.
First, computing systems MPC1 and MPC2 determine, from data provided in a digital component request from client device 110, whether a particular cached selection value and its corresponding digital component are eligible as candidates for an executing privacy protection selection process.
Each selection value x is associated with an aggregation identifier (denoted as aggregate _ id) on which the MPC cluster 130 will enforce k-anonymity. For example, the aggregation identifier may be a digital digest of the digital component (e.g., SHA 256). The MPC cluster 130 also implements a function aggregate _ id to extract the aggregation identifier from the selection value x. For example, the MPC cluster 130 may apply an aggregate _ id (x) to determine the value of aggregate _ id that selects the value x.
[satisfy_k_anonymity aggregate_id(x),1 ]＝[counter aggregate_id(x),1 ]>k
Equation (1)
Computing system MPC2 may compute satisfy _ k _ anonymity in secret sharing using the following similar equation x Secret sharing of the value of (a):
[satisfy_k_anonymity aggregate_id(x),2 ]＝[counter aggregate_id(x),2 ]>k
equation (2)
As described in further detail below with respect to phase 10, MPC cluster 130 may be based on a counter variable counter aggregate_id(x) To update the value of satisfy _ k _ opportunity x The value of (c).
The concept of k-anonymity ensures that data of a particular user is indistinguishable from data of a threshold number k of other users. The system may enforce the k-anonymity rules, for example, by ensuring that a particular digital component is distributed to client device 110 in response to a request for one or more digital components, and that the same digital component may have or have been presented to a group of at least k users or by at least k browsers within a particular time period. In some implementations, each of the k browsers to which the digital component may have or was distributed must be directed to a different user.
The system enforces k-anonymity by using privacy preserving data structures. The distribution of particular digital components may be tracked within a privacy preserving data structure, such as a counter of the number of times the digital component has been selected for distribution or display, e.g., to different users or using different browsers. As described in further detail below with respect to stage 8, when a digital component is selected by the privacy preserving selection process and subsequently distributed to the client device, a counter may be incremented for the digital component. The counter tracks, for example, the number of browsers or users that may have seen or seen a particular digital component over a period of time. For example, the counter may count the number of browsers that may have seen or have seen a particular digital component within the last 12 hours. Because the counter tracks this information over a recent period of time, the counter is incremented and decremented as time passes when the data indicates that the digital component has been or may have been rendered. For example, the counter may be automatically decremented as each presentation or potential presentation passes a specified time period. The counter may track, for example, the time period that has elapsed since the presentation or potential presentation was added to the counter sum. In some implementations, the counter can store a timestamp of when each presentation or potential presentation was added to the counter sum. The counter may automatically decrement the number of expired presentations or potential presentations when a specified period of time has elapsed.
Furthermore, users often dislike constantly displaying the same third-party content to them when navigating on multiple different websites, and thus constantly distributing the same third-party content to the same user on multiple different websites results in a waste of computing resources that are used to distribute content that the user does not want to see and may ignore. One way to limit the number of times a particular user contacts the same third-party content is to utilize frequency control techniques that prevent the same user from contacting the same third-party content more than a specified number of times over a period of time.
The system allows further user input to mute the digital components by receiving information from the user, or prevents the digital components from being presented to them for a period of time. For example, a user may select a time to mute a particular digital component that has been presented to them for five days. In some implementations, the time period may be specified by the client device 110, MPC cluster 130, DSP150, digital content provider 160, or SSP 170 based on other factors such as the type of content item and/or the type of feedback provided by the user.
Distribution of content may also be controlled by input from the digital component provider 160 through budget and consumption control techniques. The digital component provider may specify a total threshold for a selected value over a period of time to implement measures to ensure that resources comprising the activity of the digital component are not exhausted early in the activity period. For example, the digital component provider 160 may specify that the selected values of the selected digital components or the sum of the selected values of particular digital components from the digital component provider 160 over the course of a week is limited to a maximum of 8000 units. Once the maximum sum of the selection values is reached, the particular digital component to which the maximum value applies will no longer be eligible for the selection process to be distributed to the client device 110 until the end of the time period (one week).
The digital component provider may also specify the speed or consumption at which a threshold value of the selected digital component or the selected value of a particular digital component from the digital component provider 160 is being reached. For example, the digital component provider 160 may specify that a maximum threshold of 6000 units must be reached with a consumption of less than 250 units per day over the course of a month. Once the daily sum of the selection values is reached, the digital components provided by the digital component provider 160 to which consumption control is applied will no longer be eligible for the selection process to be distributed to the client device 110 until the end of the time period (the current day).
In addition to enforcing digital component eligibility according to content distribution rules, the privacy-preserving selection process preserves the user's privacy and improves the user experience by preserving the k-anonymity of the user (or browser) such that any component selected is provided to at least k other users (or browsers). By ensuring that certain digital components are provided to a threshold number of other users, the system may prevent a form of user targeting known as micro-targeting, which narrowly targets the user to the extent that some users may feel uncomfortable. For example, digital components that are targeted and distributed to only a few users may feel overly personalized, and users may feel isolated or uncomfortable with the particularities of the digital components. The privacy preserving selection process may ensure that the digital component is distributed to a sufficiently broad audience that users are comfortable with the digital component they receive and the size of the target audience for the digital component.
The computing systems of the MPC cluster 130 may use the Boolean variable is _ candidate x To indicate that the selection value is a candidate for the privacy preserving selection process. The variable is _ candidate if and only if x satisfies all distribution rules applied in the privacy preserving selection process x 1. Otherwise, the variable is _ candidate x ＝0。
Next, each computing system of the MPC cluster 130 determines an order of selection values that are eligible as candidates for the privacy-preserving selection process. For example, each computing system MPC1 and MPC2 may determine an order of eligible select values in its second-level LUT. This order may include all eligible select values, including candidate select values, in the second level LUT. In some embodiments, this order may include selection values that are not candidates. The order may be from highest selection value to lowest selection value. In some embodiments, the selection value for the order may be, for example, a value provided to the publisher of the resource after any sharing with the DSP150 and/or SSP 170 with which the selected digital component is to be presented. Because the selection values are in plaintext form, the computing systems MPC1 and MPC2 do not need to perform any round-trip calculations to order the selection values. Instead, each computing system MPC1 and MPC2 may independently order the select values of its second-level LUTs.
The structure of the MPC cluster 130 allows for additional secret sharing, which involves breaking the secret into pieces that add up to the original secret. Once fragmented, each fragment is distributed to different participants, and no single participant has enough information to reconstruct the secret. To reconstruct the secret, all fragments must be pooled together to reveal the original secret. If the selection values are stored as secret shares at each of computing systems MPC1 and MPC2, where each computing system MPC1 and MPC2 has a respective secret share for each selection value, computing systems MPCs 1 and MPC2 may perform secure MPC processes using round-trip computations to order the selection values.
Once the selection values have been sorted, the MPC cluster 130 completes the privacy preserving selection process by selecting the winner. For example, the MPC cluster 130 may compute the variable is _ pp _ winner for each candidate selection value cached by the MPC cluster 130 x To determine a winner.
is_pp_candidate x ＝is_candidate x ×satisfy_k_anonymity x Equation (3)
Variable satisfy _ k _ opportunity x Is a boolean variable that indicates whether the candidate selection value x satisfies k-anonymity. In equation (3), is _ candidate x And satisfy _ k _ opportunity x Must be true or 1 so that is _ pp _ candidate is true.
In this example, equation 3 is written multiplicatively. Conceptually, equation 3 may be performed using a logical AND (AND) operation. In some embodiments, the logical expression may be executed directly without conversion to a multiplication operation.
In one example, MPC1 calculates [ is _ pp _ candidate using the following equation x,1 ]。
[is_pp_candidate x ]＝[is_candidate x,1 ]×[satsify_k_anonymity x,1 ]
Equation (4)
Wherein parameters appearing in brackets, such as [ is _ pp _ candidate x,1 ]Secret sharing of variables within brackets is indicated. For example, [ is _ pp _ candidate x,1 ]A first secret share representing is _ pp _ candidate known only to MPC 1. Secret sharing to compute bracketed parameters may require round-trip Remote Procedure Calls (RPCs) between the computing systems of the MPC cluster 130.
MPC2 uses a similar equation to calculate [ is _ pp _ candidate [ ] x,2 ]。
[is_pp_candidate x ]＝[is_candidate x,2 ]×[satsify_k_anonymity x,2 ]
Equation (5)
The calculations represented by equations (4) and (5) are performed simultaneously as part of the secure 2PC protocol. Furthermore, these calculations are particularly efficient because the x (multiplication) operation requires only one round of communication between the computing systems MPC1 and MPC2, whereas the (equal) operation requires three rounds of communication between the computing systems MPC1 and MPC2, whereas the (greater) operation requires more than three rounds of communication between the computing systems MPC1 and MPC 2. For example, computing systems MPC1 and MPC2 may participate in multiple rounds of computation, e.g., multiple RPCs, as part of a secure MPC process to perform an equality comparison. At the end of the process, computing system MPC1 has one secret share of the result for each selected value, and computing system MPC2 has another secret share of the result for each selected value. The calculations represented by equations (4) and (5) reduce the amount of communication required between the computing systems MPC1 and MPC2 relative to performing operations using comparison operations (such as equal to or greater than operations), thereby reducing the amount of transmission traffic and the total computing resources required to complete the calculations.
Conceptually, the accumulated value of a given selection value for a digital component represents the total number of candidate selection values from the top of the order to the given selection value. For example, the MPC cluster 130 calculates the accumulated value pp _ acc using the following equation x Accumulated value pp _ acc x Representing the total number of qualified candidate selection values that are ranked in front of the selection value x in the privacy preserving selection process.
pp_acc x ＝∑is_pp_candidate b Equation (6)
The variable b represents a candidate selection value b that is ranked ahead of the selection value x based on the selection value. Since is _ pp _ candidate has been previously calculated for each eligibility selection value b b The calculation of equation (6) does not require communication between the computing systems MPC1 and MPC2 but simply requires summing, assuming that a suitable secret sharing algorithm is employed.
Once the selection values have been sorted, the MPC cluster 130 completes the privacy preserving selection process by selecting the winner. The MPC cluster may determine qualified candidates for each cache by using the following equationsSelecting the variable is _ pp _ winner of the value x To calculate the result of the privacy protection selection process.
The variable is _ pp _ winner if and only if x is the winner of the privacy-preserving selection process x 1. Otherwise, the variable is _ pp _ winner x 0. Since pp _ acc x Has been calculated, and is therefore obtained by using the variable pp _ acc in equation (7) x The MPC cluster 130 may use a simple operation to determine whether a particular cached selection value is a winner.
Computing system MPC1 holds [ is _ pp _ winner [ ] x,1 ]. Computing system MPC2 holds [ is _ pp _ winner [ ] x,2 ]。[is_pp_winner x,1 ]And [ is _ pp _ winner x,2 ]Each of which represents a secret sharing of the variable is _ pp _ winnerx.
The MPC cluster 130 performs a counterfactual selection process (stage 5 b). The counterfactual selection process may be performed in parallel with or before the privacy preserving selection process. The MPC cluster 130 may, for example, perform both selection processes in parallel in batch mode without increasing the number of RPCs between the computing systems MPC1 and MPC 2. Result of counter-fact selection procedure is _ winner x The MPC cluster 130 is allowed to update the privacy-preserving data structure to determine whether the selection value x satisfies the k-anonymity rule. However, the final selection process performed by the client device 110 only considers having is _ pp _ winner x The selection value x, which is a value of 1, is the winner of the privacy protection selection process.
The counterfactual selection process may have the same form as the privacy preserving selection process, and in order for the digital component to be suitable for the selection process, the digital component must meet certain distribution requirements. The counterfactual selection process measures what would happen without the application of the k-anonymity rule by applying all distribution rules (except the privacy protection rules) applied by the privacy protection selection process. Because the counterfactual selection process does not apply privacy protection rules, digital components that are otherwise eligible to be selected and provided to the client device, but have not yet been distributed to other client devices at least a threshold number of times, may be selected during the counterfactual selection process. This process is particularly advantageous because it allows the system to track the selection rate, for example, for newly supplied digital components that have not been previously distributed, or have not reached a threshold number of distributions, and thus are not eligible for distribution to users during the privacy preserving selection process. Without a counterfactual selection process, such digital components may never become eligible for selection in the privacy preserving selection process and thus in the final selection process, and may also never be provided to the client device.
The counterfactual selection process allows the system to determine whether a particular digital component will be eligible to be distributed if it has met the anonymity rules. As described above with respect to the privacy-preserving selection process, this potential distribution may be tracked within a privacy-preserving data structure, such as a counter of the number of times the digital component is selected for distribution. As described in further detail below with respect to stage 8, a counter may be incremented for a digital component even when the digital component is not selected and subsequently distributed to a client device by a privacy preserving selection process, but rather is selected by a counterfactual selection process.
The concept of k-anonymity ensures that data of a particular user is indistinguishable from data of a threshold number k of other users. By incrementing the counter for a particular digital component when the digital component would win the final selection process and be distributed to the client device if not for privacy protection rules, the system solves the problem of being unable to distribute digital components when they have no opportunity to be distributed to a threshold number of people and are able to continue to enforce k-anonymity on other digital components.
As described above with respect to the privacy preserving selection process, the MPC cluster 130 performs the same secure MPC process to select a digital component based on the characteristic information in the digital component request.
Conceptually, the accumulated value of a given selection value for a digital component represents the total number of candidate selection values from the top of the order to the given selection value. E.g. computingEach of the systems MPC1 and MPC2 may calculate acc x ，acc x Is the number of eligible selection values that are ranked ahead of the selection value x based on these values in the selection process.
Once the selection values have been sorted, the MPC cluster 130 completes the privacy preserving selection process by selecting the winner. The MPC cluster may determine the variable is _ winner of each cached selection value x To calculate the selection process result.
is_winner x ＝is_candidate x ×(acc x 0 ═ 0) equation (8)
The variable is _ winner if and only if x is the winner of the privacy-preserving selection process x 1. Otherwise, variable is _ winner x ＝0。
In some embodiments, acc x Is an inclusive calculation that includes the selection of the value x, so equation (8) will use acc x ＝＝1。
The computing system MPC1 holds [ is _ winner [ ] x,1 ]. The computing system MPC2 holds [ is _ winner [ ] x,2 ]。[is_winner x,1 ]And [ is _ winner x,2 ]Each of which represents a variable is _ winner x Is shared.
In some embodiments, have is _ pp _ winner x 1 and is _ winner x The numerical components of the selection value of 1 may be the same numerical components. However, have an is _ pp _ winner x The digital components of the selected values 1 and is _ winnerx 1 are usually different digital components.
In response to the digital component request sent from the client device 110 to the MPC cluster 130 at stage 3, the MPC cluster 130 provides the winner or selection results of the privacy protection selection process and the counterfactual selection process to the client device 110. Computing system MPC1 may return the first share of the selection result to client device 110. Similarly, computing system MPC2 may return a second share of the selection result to client device 110.
The selection result of the privacy protection and counterfactual selection process may be in the form of a byte array that includes information about the selected digital component corresponding to the actual or virtual value. To perform computations in secret sharing, computing system MPC1 obtains all cached selection values and multiplies the digital component information element (which may be in plaintext form) of the selection value by a first secret share of the winner parameter, e.g., [ is _ pp _ winner [ ] x,1 ]Or [ is _ winner x,1 ]. Computing system MPC1 may then determine the sum of these products and return the sum to the client device 110 that submitted the digital component request. Computing system MPC2 may perform a similar calculation to determine a second share of results.
For example, the selection result may be a byte array that includes values of the digital components in the second LUT, e.g., selection values of the digital components and metadata of the digital components. To prevent computing systems MPC1 and MPC2 from knowing the selected digital components, computing systems MPC1 and MPC2 may be prevented from sharing the secret of their selection results with each other.
The MPC cluster 130 also provides selection results for zero or one cached selection value for the winner of the counterfactual selection process. If the MPC cluster 130 provides the winner of the counterfactual selection process, the selection value complies with all but the k-anonymity rule. The winner is the selection value x of is _ winnerx ═ 1, and this selection value is not used by the client device 110 in its final selection process. The winner is called a dummy value. Because the client device may never present or allow the user to interact with the digital components mapped to virtual values, the MPC cluster 130 may optionally strip away code (e.g., Javascript) and assets (e.g., HTML, CSS, JPG) embedded in the virtual values necessary to render and enable the user to interact with the virtual values, thereby reducing battery and bandwidth consumption of the mobile device.
In some implementations, each of the actual and virtual values selected for a particular distribution opportunity may indicate a distribution opportunity in response to which the actual and virtual values are selected. For example, an identifier of the distribution opportunity may be included within each of the actual and virtual values, or transmitted to the client device 110 with the actual and virtual values. In some embodiments, an identifier of a distribution opportunity may map to the is _ winner and is _ pp _ winner variables for each selection value. In other embodiments, an identifier of a distribution opportunity may be mapped to each selection value.
The client device 110 may then reconstruct the selection result in clear text using the secret sharing. For example, the application 112 may reconstruct the selection result by determining the sum of the secret shares. If the selection result has a value of zero, the MPC cluster 130 does not identify the digital components of the user group that includes the user as a member.
The client device 110 performs a final selection process (stage 7) that includes the winning selection criteria it receives from the MPC cluster 130.
In some embodiments, client device 110 may request digital components from MPC cluster 130 based on user group membership. The client device 110 may also request digital components from the SSP 170 based on the context signal. These context signals may include the same context information described above, as well as optional additional context signals, such as the number of digital component slots of the resource, the type of digital component slots, the type and/or format of digital components that may be presented with the resource, and so forth. The SSP 170 may select one or more digital components based on the context signal and the selection values of the digital components and provide one or more of the selected digital components (or data identifying the digital components) and the selection values of the digital components to the client device 110. Client device 110 may then select a digital component to be rendered at client device 110 with the content from a set of digital components that includes the actual value received from MPC cluster 130 and the digital component selected by SSP 170. For example, the client device 110 may perform a final selection process using the selection values cached at the client device 110 in addition to the selection values received from the MPC cluster 130. In some embodiments, client device 110 may receive winning selection values from more than one MPC cluster 130, more than one SSP 170, and/or more than one DSP 150.
Although the MPC cluster 130 provides winning selections from both the privacy protection selection process and the counterfactual selection process, the client device 110 only considers the winner of the privacy protection selection process, the selection value x of is _ pp _ winnerx ═ 1, or the actual value. By receiving the actual and virtual values but considering only the actual values, the MPC cluster 130 provides a high level of privacy for the user by enforcing k-anonymity on the digital components selected for distribution, while allowing digital components that have not yet met the requirements for k-anonymity to be tracked and increasing their respective k-anonymity counts so that the digital components have an opportunity to meet the requirements for k-anonymity. In some embodiments, the final selection process may have additional rules. For example, the final selection process may include additional rules regarding the frequency at which a particular numeric component corresponding to the selection value may be displayed.
The application 112 of the client device 110 performs the final selection process according to a method similar to the process described with respect to the privacy protection and counterfactual selection process. For example, the web browser 112 installed on the client device 110 may perform the final selection process by ranking and ranking the candidate selection values. The web browser 112 then selects the first ranked selection value as the winner of the final selection process.
The client device 110 determines the digital component corresponding to the winner of the final selection process and presents the digital component (stage 8). For each selection result, client device 110 receives two secret shares from computing systems MPC1 and MPC2 from which client device 110 may determine the selection result. For example, using an additional secret-sharing library, client device 110 may add together two secret-shares of the selection result to obtain the selection result in plaintext form. This allows the client device 110 to access the selection values of the digital components and metadata of the digital components, e.g., the identification of the digital components, the location from which the client device 110 can download the digital components, etc. If the selection result is not zero, the selection result having a value equal to the digital component information element, the application 112 may parse the digital component information element to obtain a selection value and metadata for the digital component. The application 112 may then present the digital component with the received content at the client device 110. For example, the application 112 may cause the digital components and content to be displayed on a display of the client device 110.
If and only if the actual value (is _ pp _ winnerx ═ 1 selection value x) is the winning candidate selection value for the final selection process performed by the client device 110, the client device 110 provides the update data to the MPC cluster 130 (stage 9). For example, the application 112 on the client device 110 may send a notification containing information about the winning candidate selection value and the k-anonymity eligibility of the actual value (which is the winning candidate selection value) and the virtual value provided with the actual value. The update data is only provided to the MPC cluster 130 when the actual value is the winning candidate selection value of the final selection process, since the digital components mapped to the selection values are only presented at the client device 110 when the selection values are the winning candidate selection values of the final selection process.
The application 112 on the client device 110 sends a notification to the MPC cluster 130 containing information about the winning candidate selection value and the digital component associated with the candidate selection value. The notification indicates that the winning candidate selection value from the final selection process is the actual value provided by the MPC cluster 130 and that the digital component associated with the winning candidate selection value is presented at the client device 110, e.g., rendered at the client device 110.
Because the notification is sent only when the actual value is the winning candidate selection value, the MPC cluster 130 will receive information about the winner of its own privacy protection and counterfactual selection process. The notification may identify, for example, the winning candidate selection value by an identifier such as an aggregate _ id or other information specific to the selection value. The notification may be triggered by various actions associated with the presentation of the digital component linked to the winning candidate selection value, including the rendering of the digital component by the application 112, the insertion of the digital component into content to be presented at the application 112, and other actions.
Notification allows application 112 to provide deduplication functionality by including two Boolean values. The first variable is _ discrete _ phantom _ value is true if and only if the application 112 is triggered to send a notification, which is the first time the application 112 received a dummy value as a dummy value that will not be used in the final selection process during the specified most recent time period. For example, when the application 112 receives a virtual value, if the specified time period of the system is four hours, when this is the first time the application 112 received the virtual value in the past four hours, the is _ distintint _ phantom _ value is true. The variable is _ discrete _ phantom _ value allows the application to ensure that the counter of the number of times the digital component associated with the virtual value is distributed is not incremented in repeated final selection processes in which the same virtual value wins the previous counterfactual selection process when the selection processes are too close in time. When the selection process is too close in time and directed to the same application 112 of the client device 110, the counter of the number of times the digital component associated with the virtual value is distributed is not necessarily incremented, as this may represent a situation where the digital component associated with the virtual value is not distributed due to frequency control rules or other content distribution limitations.
Additionally, because k-anonymity as used herein applies to k different browsers, if the counter backtracks the time period of k-anonymity for 2 days, for example, during this time period, the browser will require the MPC cluster 130 to increment the k-anonymity counter at most once for a particular digital component. Furthermore, since the process is performed using secret sharing, the MPC cluster 130 will not be able to detect whether the virtual value and the actual value are the same for a particular digital component request, and the browser will request the MPC cluster to increment a counter associated with one of the randomly selected virtual value or the actual value.
The second variable is _ discrete _ actual _ value is true if and only if the application 112 is triggered to send a notification, which is the first time the application 112 takes an action related to presenting the digital component associated with the actual value during the specified time period, and the actual value is different from the virtual value. For example, when application 112 renders a digital component for presentation at client device 110, is _ discrete _ actual _ value is true if the specified time period of the system is one day when this is the first time application 112 rendered a digital component for presentation at client device 110 in the past day. The variable is _ discrete _ actual _ value allows the system to determine, for example, whether the winners of the privacy protection selection process and the counterfactual selection process correspond to the same digital component. Each of the computing systems MPC1 and MPC2 of MPC cluster 130 only holds a share of the identifier of each winner, and thus cannot determine whether the winners correspond to the same digital component. However, the client device 110 holds the winner in clear text and may notify the MPC cluster 130 of any duplicates through this variable.
For example, if a particular digital component is selected to be presented to the same application 112 fifty consecutive times, the client device 110 will include information in the notification to the MPC cluster 130 that the k-anonymity counter of the digital component will be incremented only once (because it is displayed to the same browser for a short period of time), but other characteristics (such as budget, consumption control, frequency control, and muting) will be incremented and tracked normally.
The browser provides deduplication functionality to the MPC cluster 130 and its record keeping by providing updates that include a request to update the k-anonymity counter. This notification allows the MPC cluster to maintain the integrity of its records and ensure that certain digital components meet k-anonymity requirements without exaggerating the numbers due to the counting process in which the same digital component is provided to the same browser multiple times in a short amount of time. For example, if the client device 110 requests more than one digital component in the same request, the notification information allows the MPC cluster 130 to attribute only one array component therein for k-anonymity counting purposes because the browsers are for the same user.
In some embodiments, MPC cluster 130 may include additional logic that deduplicates the selection of particular digital components of the same user across different client devices and applications. For example, the system may perform a check of the credentials to determine if the same user is associated with different client devices and applications, and may perform deduplication for different browsers or devices that the same user has entered credentials identifying themselves. For example, if a user logs in to a browser on their smartphone and logs in to a browser on their laptop, the system may use a synchronization mechanism between the browsers to determine that the same user is logged in based on the user's credentials.
Upon receiving the update data, the MPC cluster 130 updates the privacy-preserving data structures maintained within storage media accessible to the MPC cluster 130 (stage 10). The update data may be, for example, an impression notification including values of is _ stop _ phantom _ value and is _ stop _ actual _ value. The MPC cluster 130 may update the value of a counter variable, for example, maintained by the MPC cluster 130 to track k-anonymity. For example, counter variables may be cached by the MPC cluster 130.
When the impression notification received from the browser indicates that is _ stop _ phantom _ value is true, the MPC130 cluster will update the counter of k-anonymity of the virtual value. In this case, based on the impression notification, the MPC cluster 130 may look up a selection value of is _ winnerx of 1 from a local storage or other location of the MPC cluster 130. The impression notification may include an identifier of the distribution opportunity, and the MPC cluster 130 may look up the is _ winnerx as 1 and map to the selection value of the distribution opportunity identifier. Regardless of the format in which the information is encoded and sent to the MPC cluster 130, the MPC cluster 130 may look up the selection values and update the corresponding counter variables. For example, computing system MPC1 holds [ is _ winner [ ] x,1 ]And MPC2 holds [ is _ winner ] x,2 ]. Thus, each computing system may individually update the respective counter variable shared by the selection values. In some embodiments, the MPC cluster 130 will update all counters, i.e., counters, associated with all qualified digital components x ＝counter x + is _ winner _ x. If is _ winner x If 0, the update does not execute. If is _ winner _ x is 1, the update is equivalent to an increment operation. Thus, any individual computing system in the MPC cluster 130 cannot access any user information without collusion with other computing systems in the MPC cluster 130.
In some embodiments, each computing system of MPC cluster 130 has a separate storage device that is not accessible to other computing systems. This separate storage system reduces the likelihood of collusion between the computing systems of the MPC cluster 130 compromising user privacy and maintaining the integrity of the selection and update processes performed within the system.
The MPC cluster 130 maintains a counter list for each possible aggregate _ id on all possible cache keys. If is _ discrete _ actual _ value is TRUE (TRUE), then for anyMPC cluster 130 passes the is _ pp _ winner of any selected value x according to the following equation x Is added to increase the counter variable counter aggregate_id Wherein, the aggregate _ id (x) is an aggregate _ id.
Is _ pp _ winner of sigma any selected value x Wherein the aggregate _ id (x) is an aggregate _ id
Equation (9)
In some embodiments, the computing system MPC1 may perform this incremental process by iterating through all possible selection values according to the following equation.
[counter aggregate_id(x),1 ]＝[counter aggregate_id(x),1 ]+[is_pp_winner x,1 ]
Equation (10)
The computing system MPC2 performs a similar process according to the following equation.
[counter aggregate_id(x),2 ]＝[counter aggregate_id(x),2 ]+[is_pp_wunner x,2 ]
Equation (11)
Similarly, when receiving an impression notification from the browser indicating that is _ distict _ phantom _ value is true, the MPC cluster may update the counter for the anonymity of the virtual value. In this case, based on the impression notification, the MPC cluster 130 may look up a selection value of is _ winnerx of 1 from a local storage or other location of the MPC cluster 130. The impression notification may include an identifier of the distribution opportunity, and the MPC cluster 130 may look up the is _ winnerx as 1 and map to the selection value of the distribution opportunity identifier.
For anyMPC cluster 130 passes the is _ winner of any selected value x according to the following equation x Is added to increase the counter variable counter aggregate_id Wherein, the aggregate _ id (x) is an aggregate _ id.
Is _ pp _ rounder of sigma any selected value x Wherein the aggregate _ id (x) is an aggregate _ id
Equation (12)
In some embodiments, the computing system MPC1 may perform this incremental process by iterating through all possible selection values according to the following equation.
[counter aggregate_id(x),1 ]＝[counter aggregate_id(x),1 ]+[is_pp_winner x,1 ]
Equation (13)
The computing system MPC2 performs a similar process according to the following equation.
[counter aggregate_id(x),2 ]＝[counter aggregate_id(x),2 ]+[is_pp_winner x,2 ]
Equation (14)
In some embodiments, the vector (in the form of a secret share that protects user privacy) is used to increment a counter stored by the MPC cluster 130. For example, a sparse vector, where only the actual and virtual values may have a corresponding vector value of 1 and the other values have a corresponding vector value of 0, may be used to update the counter variable.
In some embodiments, the MPC cluster 130 uses counter variables to track the k-anonymity eligibility of any cached selection values associated with a particular aggregation _ idAnd (4) sex. For example, the MPC cluster 130 could count the number of times any cached selection value associated with a particular aggregation _ id wins the selection process within a given time period and store that value in the counter variable counter for the selection value x aggregate_id(x) And (4) the following steps. MPC computing systems MPC1 and MPC2 may easily and quickly perform such computations. However, because the MPC cluster 130 is counting the number of times the digital component wins (or potentially wins) the selection process, the cluster is unaware of the winning cached selection value or the number of browsers whose associated aggregate _ ids are selected for distribution, represented by x, and thus lacks deduplication in incrementing the counter variable. When tracking the k-anonymity eligibility of the cached selection values based only on the count of selection process winners of the MPC cluster 130 as determined by the MPC cluster 130, a particular digital component associated with a particular aggegrate _ id may receive more counts than actually occur, e.g., all selection process wins may be for the same browser because the digital component is micro-targeting the particular browser. For example, while this approach is easy to implement, if there is a final selection process at the client side at the client device 110 that uses the winner of the selection process of the MPC cluster 130, the winner of the selection process of the MPC cluster 130 may not actually be presented for display at the client device 110.
The MPC cluster 130 may update the k-anonymity eligibility on a continuous and/or asynchronous basis. Since the comparison operation requires multiple round trips between MPC computing systems, the comparison operation is quite costly, and therefore MPC clusters can periodically update the k-anonymity eligibility by updating the counter variable to reduce the required computing resources and the amount of processing time required. This allows the system to save communication costs and transmission costs with minimal impact on content distribution and selection. For example, by updating the counters of k-anonymity eligibility every minute instead of every millisecond or upon receiving every impression notification, the MPC cluster 130 may reduce traffic between the computing systems MPC1 and MPC2 and save on transmission costs.
The counter variable controls the eligibility of the selection within the system, because the k-anonymity eligibility is determined using the counter variable. Thus, if the counter variable is not updated with sufficient frequency, even if the k-threshold has been met, the digital component corresponding to a particular selection value may not be eligible for selection between counter updates, and the system operates with such a volume that has minimal impact on periodic updates.
As described above, an MPC cluster may pass a counter aggregate_id(x) Updating the flag, satisfy _ k _ anonymity, indicating whether the selection value x satisfies k-anonymity, in comparison with a threshold k for k-anonymity x . Update flag satisfy _ k _ anonymity x This step of (2) requires multiple RPCs between MPC1 and MPC2, but since MPC cluster 130 performs update operations asynchronously, it is delay insensitive and remains unaffected by the required processing and communication time.
Fig. 3 is a flow diagram illustrating an example process 300 for selecting digital components for distribution to client devices. The operations of the process 300 may be implemented, for example, by the computing system MPC1 or the computing system MPC2 of the MPC cluster 130. The operations of process 300 may also be implemented as instructions stored on one or more computer-readable media, which may be non-transitory, and execution of the instructions by one or more data processing apparatus may cause the one or more data processing apparatus to perform the operations of process 300. For simplicity, the process 300 is described as being performed by a computing system MPC1 of the MPC cluster 130.
The process 300 begins by receiving a request for a selection value from an application on a client device through a first server of a secure multi-party computing (MPC) system (302). For example, a computing system MPC1 of MPC cluster 130 may receive a request for one or more selected values from a client device 110 for a particular digital component slot. The request may include information indicating the nature of the digital component slot, information of the context of the slot (including the content in which the digital component slot is located), information of content distribution and/or selection rules specified by the client device 110, and user-provided information, among other information. In some embodiments, the selection rules are not encoded in the request, but are instead specified by the content publisher directly to the SSP 170 or by the content creator directly to the DSP 150.
In response to receiving the request, process 300 continues in the following manner: a first server of the secure MPC system cooperates with a second server of the secure MPC system to perform a privacy-preserving selection process to select a first winning selection value from a set of selection values by applying each rule of a set of selection rules that includes a privacy-preserving anonymity enforcement rule (304). For example, the computing system MPC1 of the MPC cluster 130 may cooperate with the MPC2 to perform a privacy preserving selection process as described with respect to fig. 2. The MPC cluster 130 applies all selection rules, including the k-anonymity rule as a privacy preserving anonymity enforcement rule, to all cached selection values that match the UG _ Request _ Key to determine a set of eligible selection values. The MPC cluster 130 then ranks the eligible selection values and selects the winner of the privacy protection selection process.
In some embodiments, performing the privacy preserving selection process comprises: for each selection value, the counter variable value that maps to the aggregation identifier mapped to the selection value is compared to a threshold value, and the selection value is discarded if the counter variable value is less than the threshold value. The selection value is discarded because the selection value is not suitable for the selection process.
In response to receiving the request, process 300 continues in the following manner: a first server of the secure MPC system cooperates with a second server of the secure MPC system to perform a counterfactual selection process to select a second winning selection value from a set of selection values that match UG _ Request _ Key by applying each rule of a set of selection rules except privacy protection anonymity enforcement rules (306). For example, the computing system MPC1 of the MPC cluster 130 may cooperate with the MPC2 to perform a counterfactual selection process as described with respect to fig. 2. The MPC cluster 130 applies all selection rules except the k-anonymity rule to the cached selection values to determine a set of eligible selection values. The MPC cluster 130 then ranks the eligible selection values and selects the winner of the counterfactual selection process.
As described with respect to fig. 2, the privacy preserving selection process and the counterfactual selection process may be performed in parallel by a batch process such that the winner of the process is simultaneously selected and ready for transmission.
The process 300 continues in the following manner: the winning selection value from the privacy preserving selection process and the winning selection value from the counterfactual selection process are sent (308) by the first server of the secure MPC system. For example, the MPCs 1 of the MPC cluster 130 may provide the client device 110 with a secret share of virtual values, or winning selection values from a counterfactual selection process, and a secret share of actual values, or winning selection values from a privacy preserving selection process.
Sending the winning selection values from the privacy preserving selection process and from the counterfactual selection process may include sending a first secret share of the winning selection values to the client device 110 through the MPC1 of the MPC cluster 130 and sending a second secret share of the winning selection values to the client device 110 through the MPC2 of the MPC cluster 130.
The process 300 continues in the following manner: data is received by a first server of the secure MPC system and from an application on a client device indicating that a digital component corresponding to a winning selection value from the privacy protection selection process is presented at the client device (310). For example, the MPC1 of the MPC cluster 130 may receive an update notification from the client device 110 indicating that the digital component for which the actual value is provided is being rendered at the client device 110.
In some embodiments, the notification further includes a variable indicating whether the first server of the secure MPC system should increment the value of the privacy-preserving data structure. For example, the notification may indicate whether, when the notification is sent, it is the client device that first received the winning selection value from the counterfactual selection process as the winning selection value for the counterfactual selection process within a specified time period, and a variable indicating whether, when the notification is sent, it is the client device that first received the winning selection value from the privacy protection selection process as the winning selection value for the privacy protection selection process within the specified time period, and the winning selection value for the privacy protection selection process is different from the winning selection value from the counterfactual selection process.
In some embodiments, the variable indicates whether the MPC cluster 130 should increment a counter to support the k-anonymity rule. For example, application 112 may make a decision based on whether application 112 recently required MPC1 to increment a counter for a particular selection value. For example, if the virtual value and the actual value are the same, application 112 will instruct MPC1 to increment the counter for at most one of the two values. In another example, if the browser had previously required MPC1 to increment a counter for a digital component when the digital component was mapped to a virtual value, application 112 may refrain from instructing MPC1 to increment a counter in the near future (i.e., within a certain period of time to perform k anonymity) when the digital component is an actual value.
In addition, the privacy preserving data structure includes a second value of the privacy preserving characteristic of the digital component corresponding to the winning selection value from the privacy preserving selection process. For example, the MPC cluster 130 may update the counter variable satisfy _ k _ opportunity for each selection value x x . Variable satisfy _ k _ opportunity x Indicating whether the selection value x satisfies the k-anonymity rule. Further, as described above with respect to fig. 2, the notification may include the variable is _ discrete _ phantom _ value, i.e., when the notification is sent, it is the first time the client device 110 receives the virtual value as a virtual value within a specified time period. The notification may also include the variable is _ discrete _ actual _ value.
The process 300 continues in the following manner: a privacy preserving data structure is updated by the secure MPC system for determining whether the digital component satisfies privacy preserving anonymity enforcement rules that maintain values of the privacy preserving property corresponding to winning selection values from the counterfactual selection process (312). For example, the MPC cluster 130 may update the counter variable satisfy _ k _ opportunity for each selection value x x . Variable satisfy _ k _ opportunity x Indicating whether the selection value x satisfies the k-anonymity rule.
Each counter variable, satisfy _ k _ opportunity x Is mapped to an aggregation identifier, such as an aggregate _ id. The aggregate identifier is mapped to a particular numerical component for which one or more selection values are provided as candidate selection values to be used in the selection process, for example. In addition, the secure MPC system may update the privacy-preserving data structures asynchronously and at specified intervals. For example, the MPC cluster 130 may be enabled to be controlled by the variable counter every two minutes aggregate_id(x) The value of the represented counter variable is compared to a threshold k of k-anonymity to update the counter variable to save required transmission and computational resources. In some embodiments, the secure MPC system may update the privacy-preserving data structure synchronously if performance optimization is not required.
FIG. 4 is a block diagram of an example computer system 400 that may be used to perform the operations described above. System 400 includes processor 410, memory 420, storage 430, and input/output device 440. Each of the components 410, 420, 430, and 440 may be interconnected, for example, using a system bus 450. The processor 410 is capable of processing instructions for execution within the system 400. In some implementations, the processor 410 is a single-threaded processor. In another implementation, the processor 410 is a multi-threaded processor. The processor 410 is capable of processing instructions stored in the memory 420 or on the storage device 430.
The storage device 430 is capable of providing mass storage for the system 400. In some implementations, the storage device 430 is a computer-readable medium. In various different embodiments, storage device 430 may include, for example, a hard disk device, an optical disk device, a storage device shared by multiple computing devices over a network (e.g., a cloud storage device), or some other mass storage device.
The input/output device 440 provides input/output operations for the system 400. In some implementations, the input/output devices 440 may include one or more of a network interface device, such as an ethernet card, a serial communication device (e.g., and RS-232 port), and/or a wireless interface device (e.g., and 802.11 card). In another embodiment, the input/output devices may include driver devices configured to receive input data and send output data to external devices 460 (e.g., keyboard, printer, and display devices). However, other implementations may also be used, such as mobile computing devices, mobile communication devices, set-top box television client devices, and so forth.
Although an example processing system has been described in fig. 4, implementations of the subject matter and the functional operations described in this specification can be implemented in other types of digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on a computer storage medium (or multiple media) for execution by, or to control the operation of, data processing apparatus. Alternatively or additionally, the program instructions may be encoded on an artificially generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by the data processing apparatus. The computer storage medium may be or be included in a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Further, although the computer storage medium is not a propagated signal, the computer storage medium can be a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium may also be or be included in one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
The operations described in this specification may be implemented as operations performed by data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
The term "data processing apparatus" encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or multiple programmable processors, computers, systems on a chip, or combinations of the foregoing. An apparatus may comprise special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). The apparatus can include, in addition to hardware, code that creates an execution environment for the computer program, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and execution environment may implement a variety of different computing model infrastructures, such as web services, distributed computing, and grid computing infrastructures.
A computer program (also known as a program, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for performing actions in accordance with the instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such devices. Further, the computer may be embedded in another device, e.g., a mobile telephone, a Personal Digital Assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a Universal Serial Bus (USB) flash drive), to name a few. Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices (e.g., EPROM, EEPROM, and flash memory devices); magnetic disks (e.g., internal hard disks or removable disks); magneto-optical disks; and CD ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other kinds of devices may also be used to provide for interaction with a user; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input. Further, the computer may interact with the user by sending documents to and receiving documents from the device used by the user; for example, by sending a web page to a web browser on the user's client device in response to a request received from the web browser.
Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described is this specification), or any combination of one or more such back end, middleware, or front end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network ("LAN") and a wide area network ("WAN"), an internetwork (e.g., the internet), and a peer-to-peer network (e.g., an ad hoc peer-to-peer network).
The computing system may include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some embodiments, the server sends data (e.g., HTML pages) to the client device (e.g., for the purpose of displaying data to a user interacting with the client device and receiving user input from the user interacting with the client device). Data generated at the client device (e.g., a result of the user interaction) may be received at the server from the client device.
In addition to the above embodiments, the following embodiments are also innovative:
embodiment 1 is a method comprising: receiving, by a first server of a secure multi-party computing (MPC) system and from an application on a client device, a request for a selection value; in response to receiving the request and through a first server of the secure MPC system: performing a privacy-preserving selection process, in cooperation with a second server of the secure MPC system, to select a first winning selection value from a set of selection values by applying each rule of the set of selection rules including a privacy-preserving anonymity enforcement rule; and in cooperation with a second server of the secure MPC system, performing a counterfactual selection process to select a second winning selection value from the set of selection values by applying each rule of the set of selection rules except a privacy preserving anonymity enforcement rule; sending, by a first server of the secure MPC system, a selection result defining a first winning selection value from the privacy preserving selection process and a second winning selection value from the counterfactual selection process; receiving, by a first server of the secure MPC system and from an application on a client device, a notification including data indicating that a digital component corresponding to a winning selection value from the privacy-preserving selection process is presented at the client device; and updating, by the first server of the secure MPC system, a privacy protection data structure for determining whether the digital component satisfies a privacy protection anonymity enforcement rule that maintains a first value of the privacy protection characteristic corresponding to a second winning selection value from the counterfactual selection process.
Embodiment 3 is the method of embodiment 1 or 2, wherein the notification further includes a variable indicating whether the first server of the secure MPC system should increment the value of the privacy protection data structure.
Embodiment 4 is the method of any one of embodiments 1-3, wherein the privacy preserving anonymity enforcement rule is a k-anonymity rule.
Embodiment 5 is the method of any of embodiments 1-4, wherein transmitting the winning selection value from the privacy preserving selection process comprises: sending, by a first server of the secure MPC system, a first secret share of a winning selection value from the privacy-preserving selection process to the client device; sending, by a second server of the secure MPC system, a second secret share of the winning selection value from the privacy-preserving selection process to the client device; and wherein transmitting the winning selection value from the counterfactual selection process comprises: sending, by a first server of the secure MPC system, a first secret share of winning selection values from the counterfactual selection process to the client device; and sending, by a second server of the secure MPC system, a second secret share of winning selection values from the counterfactual selection process to the client device.
Embodiment 6 is the method of any of embodiments 1-5, wherein the privacy-preserving data structure includes a set of counter variables; wherein each counter variable maps to an aggregate identifier, wherein each aggregate identifier maps to one or more selection values and a particular numerical component, and wherein conducting a privacy-preserving selection process to select a first winning selection value from a set of selection values by applying each rule of the set of selection rules that includes a privacy-preserving anonymity enforcement rule comprises: for each selection value: comparing a counter variable value mapped to the aggregation identifier mapped to the selection value with a threshold value; and discarding the selection value if the counter variable value is less than the threshold value.
Embodiment 7 is the method of any of embodiments 1-6, wherein updating the privacy-preserving data structure is performed asynchronously and at specified intervals.
Embodiment 8 is a system, comprising: one or more processors; and one or more memory elements comprising instructions that, when executed, cause the one or more processors to perform the method of any of embodiments 1-7.
Embodiment 9 is a computer storage medium encoded with instructions that, when executed by a distributed computing system, cause the distributed computing system to perform the method of any of embodiments 1-7.
While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any inventions or of what may be claimed, but rather as descriptions of features specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In some cases, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
Thus, particular embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. Moreover, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In some embodiments, multitasking and parallel processing may be advantageous.
Claims (21)
1. A computer-implemented method, comprising:
receiving, by a first server of a secure multi-party computing (MPC) system and from an application on a client device, a request for a selection value;
in response to receiving the request and through the first server of the secure MPC system:
performing a privacy-preserving selection process in cooperation with a second server of the secure MPC system to select a first winning selection value from a set of selection values by applying each rule of a set of selection rules that includes a privacy-preserving anonymity enforcement rule; and
performing a counterfactual selection process to select a second winning selection value from the set of selection values by applying each rule of the set of selection rules other than the privacy preserving anonymity enforcement rule, in cooperation with the second server of the secure MPC system;
sending, by the first server of the secure MPC system, a selection result that defines the first winning selection value from the privacy preserving selection process and the second winning selection value from the counterfactual selection process;
receiving, by the first server of the secure MPC system and from the application on the client device, a notification including data indicating that a digital component corresponding to the winning selection value from the privacy protection selection process is presented at the client device; and
updating, by the first server of the secure MPC system, a privacy protection data structure for determining whether a digital component satisfies the privacy protection anonymity enforcement rule that maintains a first value of a privacy protection characteristic corresponding to the second winning selection value from the counterfactual selection process.
2. The method of claim 1, wherein performing the privacy preserving selection process and performing the counterfactual selection process are performed in parallel.
3. The method of claim 1 or 2, wherein the notification further comprises a variable indicating whether the first server of the secure MPC system should increment the value of the privacy protection data structure.
4. The method of any of claims 1-3, wherein the privacy preserving anonymity enforcement rule is a k-anonymity rule.
5. The method of any of claims 1-4, wherein transmitting the winning selection value from the privacy-preserving selection process comprises:
sending, by the first server of the secure MPC system, a first secret share of the winning selection value from the privacy-preserving selection process to the client device;
sending, by the second server of the secure MPC system, a second secret share of the winning selection value from the privacy preserving selection process to the client device; and is
Wherein sending the winning selection value from the counterfactual selection process comprises:
sending, by the first server of the secure MPC system, a first secret share of the winning selection value from the counterfactual selection process to the client device; and
sending, by the second server of the secure MPC system, a second secret share of the winning selection value from the counterfactual selection process to the client device.
6. The method of any of claims 1-5, wherein the privacy-preserving data structure includes a set of counter variables;
wherein each counter variable maps to an aggregation identifier,
wherein each aggregate identifier maps to one or more selection values and a particular numerical component, and
wherein performing the privacy preserving selection process to select a first winning selection value from a set of selection values by applying each rule of a set of selection rules that includes a privacy preserving anonymity enforcement rule comprises:
for each selection value:
comparing a counter variable value mapped to the aggregation identifier mapped to the selection value to a threshold value; and
discarding the selection value if the counter variable value is less than the threshold value.
7. The method of claim 6, wherein updating the privacy-preserving data structure is performed asynchronously and at specified time intervals.
8. A system, comprising:
one or more processors; and
one or more memory elements comprising instructions that, when executed, cause the one or more processors to perform operations comprising:
receiving, by a first server of a secure multi-party computing (MPC) system and from an application on a client device, a request for a selection value;
in response to receiving the request and through the first server of the secure MPC system:
performing a privacy preserving selection process, in cooperation with a second server of the secure MPC system, to select a first winning selection value from a set of selection values by applying each rule of a set of selection rules including a privacy preserving anonymity enforcement rule; and
performing a counterfactual selection process to select a second winning selection value from the set of selection values by applying each rule of the set of selection rules other than the privacy preserving anonymity enforcement rule, in cooperation with the second server of the secure MPC system;
sending, by the first server of the secure MPC system, a selection result that defines the first winning selection value from the privacy preserving selection process and the second winning selection value from the counterfactual selection process;
receiving, by the first server of the secure MPC system and from the application on the client device, a notification including data indicating that a digital component corresponding to the winning selection value from the privacy protection selection process is presented at the client device; and
updating, by a first server of the secure MPC system, a privacy protection data structure for determining whether a digital component satisfies the privacy protection anonymity enforcement rule that maintains a first value of a privacy protection characteristic corresponding to the second winning selection value from the counterfactual selection process.
9. The system of claim 8, wherein performing the privacy preserving selection process and performing the counterfactual selection process are performed in parallel.
10. The system of claim 8 or 9, wherein the notification further comprises a variable indicating whether the first server of the secure MPC system should increment the value of the privacy protection data structure.
11. The system of any of claims 8-10, wherein the privacy preserving anonymity enforcement rule is a k-anonymity rule.
12. The system of any of claims 8-11, wherein transmitting the winning selection value from the privacy-preserving selection process comprises:
sending, by the first server of the secure MPC system, a first secret share of the winning selection value from the privacy-preserving selection process to the client device;
sending, by the second server of the secure MPC system, a second secret share of the winning selection value from the privacy-preserving selection process to the client device; and is
Wherein sending the winning selection value from the counterfactual selection process comprises:
sending, by the first server of the secure MPC system, a first secret share of the winning selection value from the counterfactual selection process to the client device; and
sending, by the second server of the secure MPC system, a second secret share of the winning selection value from the counterfactual selection process to the client device.
13. The system of any of claims 8-12, wherein the privacy preserving data structure comprises a set of counter variables;
wherein each counter variable maps to an aggregation identifier,
wherein each aggregated identifier maps to one or more selection values and a particular numerical component, an
Wherein performing the privacy preserving selection process to select a first winning selection value from a set of selection values by applying each rule of a set of selection rules including a privacy preserving anonymity enforcing rule comprises:
for each selected value:
comparing a counter variable value mapped to the aggregation identifier mapped to the selection value to a threshold value; and
discarding the selection value if the counter variable value is less than the threshold value.
14. The system of claim 13, wherein updating the privacy-preserving data structure is performed asynchronously and at specified time intervals.
15. A computer storage medium encoded with instructions that, when executed by a distributed computing system, cause the distributed computing system to perform operations comprising:
receiving, by a first server of a secure multi-party computing (MPC) system and from an application on a client device, a request for a selection value;
in response to receiving the request and through the first server of the secure MPC system:
performing a privacy preserving selection process, in cooperation with a second server of the secure MPC system, to select a first winning selection value from a set of selection values by applying each rule of a set of selection rules including a privacy preserving anonymity enforcement rule; and
performing a counterfactual selection process, in cooperation with the second server of the secure MPC system, to select a second winning selection value from the set of selection values by applying each rule of the set of selection rules except the privacy preserving anonymity enforcement rule;
sending, by the first server of the secure MPC system, a selection result that defines the first winning selection value from the privacy preserving selection process and the second winning selection value from the counterfactual selection process;
receiving, by the first server of the secure MPC system and from the application on the client device, a notification including data indicating that a digital component corresponding to the winning selection value from the privacy protection selection process is presented at the client device; and
updating, by the first server of the secure MPC system, a privacy preserving data structure for determining whether a digital component satisfies the privacy preserving anonymity enforcement rule that maintains a first value of a privacy preserving property corresponding to the second winning selection value from the counterfactual selection process.
16. The computer storage medium of claim 15, wherein performing the privacy preserving selection process and performing the counterfactual selection process are performed in parallel.
17. The computer storage medium of claim 15 or 16, wherein the notification further includes a variable indicating whether the first server of the secure MPC system should increment the value of the privacy protection data structure.
18. The computer storage medium of any of claims 15-17, wherein the privacy preserving anonymity enforcement rule is a k-anonymity rule.
19. The computer storage medium of any of claims 15-18, wherein transmitting the winning selection value from the privacy-preserving selection process comprises:
sending, by the first server of the secure MPC system, a first secret share of the winning selection value from the privacy-preserving selection process to the client device;
sending, by the second server of the secure MPC system, a second secret share of the winning selection value from the privacy-preserving selection process to the client device; and is
Wherein sending the winning selection value from the counterfactual selection process comprises:
sending, by the first server of the secure MPC system, a first secret share of the winning selection value from the counterfactual selection process to the client device; and
sending, by the second server of the secure MPC system, a second secret share of the winning selection value from the counterfactual selection process to the client device.
20. The computer storage medium of any of claims 15-19, wherein the privacy-preserving data structure includes a set of counter variables;
wherein each counter variable maps to an aggregation identifier,
wherein each aggregate identifier maps to one or more selection values and a particular numerical component, and
wherein performing the privacy preserving selection process to select a first winning selection value from a set of selection values by applying each rule of a set of selection rules including a privacy preserving anonymity enforcing rule comprises:
for each selected value:
comparing a counter variable value mapped to the aggregation identifier mapped to the selection value to a threshold value; and
discarding the selection value if the counter variable value is less than the threshold value.
21. The computer storage medium of claim 20, wherein updating the privacy-preserving data structure is performed asynchronously and at specified time intervals.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
IL279406 | 2020-12-13 | ||
IL279406A IL279406A (en) | 2020-12-13 | 2020-12-13 | Privacy-preserving techniques for content selection and distribution |
PCT/US2021/062880 WO2022125946A1 (en) | 2020-12-13 | 2021-12-10 | Privacy-preserving techniques for content selection and distribution |
Publications (1)
Publication Number | Publication Date |
---|---|
CN114981813A true CN114981813A (en) | 2022-08-30 |
Family
ID=79282964
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202180008029.2A Pending CN114981813A (en) | 2020-12-13 | 2021-12-10 | Privacy protection techniques for content selection and distribution |
Country Status (7)
Country | Link |
---|---|
US (1) | US20230072957A1 (en) |
EP (2) | EP4066140B1 (en) |
JP (1) | JP7457813B2 (en) |
KR (1) | KR20220103787A (en) |
CN (1) | CN114981813A (en) |
IL (1) | IL279406A (en) |
WO (1) | WO2022125946A1 (en) |
Family Cites Families (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CA2762967A1 (en) | 2009-05-21 | 2010-11-25 | Intertrust Technologies Corporation | Content delivery systems and methods |
US8429685B2 (en) | 2010-07-09 | 2013-04-23 | Intel Corporation | System and method for privacy-preserving advertisement selection |
JP5919825B2 (en) | 2012-01-05 | 2016-05-18 | 富士通株式会社 | Data processing method, distributed processing system, and program |
JP2016510913A (en) | 2013-08-09 | 2016-04-11 | トムソン ライセンシングＴｈｏｍｓｏｎ Ｌｉｃｅｎｓｉｎｇ | Privacy protection recommendation method and system based on matrix factorization and ridge regression |
-
2020
- 2020-12-13 IL IL279406A patent/IL279406A/en unknown
-
2021
- 2021-12-10 WO PCT/US2021/062880 patent/WO2022125946A1/en unknown
- 2021-12-10 JP JP2022540742A patent/JP7457813B2/en active Active
- 2021-12-10 US US17/794,146 patent/US20230072957A1/en active Pending
- 2021-12-10 CN CN202180008029.2A patent/CN114981813A/en active Pending
- 2021-12-10 EP EP21839785.9A patent/EP4066140B1/en active Active
- 2021-12-10 KR KR1020227021324A patent/KR20220103787A/en not_active Application Discontinuation
- 2021-12-10 EP EP22182700.9A patent/EP4086798A1/en active Pending
Also Published As
Publication number | Publication date |
---|---|
IL279406A (en) | 2022-07-01 |
EP4066140A1 (en) | 2022-10-05 |
US20230072957A1 (en) | 2023-03-09 |
EP4066140B1 (en) | 2022-11-23 |
EP4086798A1 (en) | 2022-11-09 |
JP7457813B2 (en) | 2024-03-28 |
WO2022125946A1 (en) | 2022-06-16 |
KR20220103787A (en) | 2022-07-22 |
JP2023514947A (en) | 2023-04-12 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11843672B2 (en) | Privacy preserving centroid models using secure multi-party computation | |
EP4070223B1 (en) | Using secure multi-party computation to improve content selection process integrity | |
JP2023089216A (en) | Secured management of data distribution restriction | |
JP2023549009A (en) | Cryptographically secure control using secure multiparty computation | |
US20220405407A1 (en) | Privacy preserving cross-domain machine learning | |
KR20220126767A (en) | Secure Access to Content Distribution Information Using Secure MPC and Vector Calculations | |
JP7457813B2 (en) | Privacy-preserving techniques for content selection and delivery | |
JP7471450B2 (en) | Improving the performance of secure multiparty computation | |
JP7440667B2 (en) | Flexible content selection process using secure multiparty calculations | |
JP7425222B2 (en) | Privacy Preserving Measurements Using Secure Multiparty Computation | |
JP7383142B2 (en) | Protecting access to information in online interactions | |
US20240163259A1 (en) | Privacy preserving group-based content distribution | |
US20240163341A1 (en) | Privacy preserving centroid models using secure multi-party computation | |
KR20230003536A (en) | Privacy-preserving cross-domain experimental group segmentation and monitoring | |
WO2023234940A1 (en) | Privacy preserving group-based content distribution | |
CN114930334A (en) | Additive and subtractive noise for privacy protection |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
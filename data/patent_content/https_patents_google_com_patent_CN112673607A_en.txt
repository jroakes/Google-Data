CN112673607A - Anonymous device authentication - Google Patents
Anonymous device authentication Download PDFInfo
- Publication number
- CN112673607A CN112673607A CN202080004805.7A CN202080004805A CN112673607A CN 112673607 A CN112673607 A CN 112673607A CN 202080004805 A CN202080004805 A CN 202080004805A CN 112673607 A CN112673607 A CN 112673607A
- Authority
- CN
- China
- Prior art keywords
- electronic device
- authentication
- key
- keys
- charger
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/32—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials
- H04L9/3263—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials involving certificates, e.g. public key certificate [PKC] or attribute certificate [AC]; Public key infrastructure [PKI] arrangements
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W12/00—Security arrangements; Authentication; Protecting privacy or anonymity
- H04W12/06—Authentication
- H04W12/069—Authentication using certificates or pre-shared keys
-
- H—ELECTRICITY
- H02—GENERATION; CONVERSION OR DISTRIBUTION OF ELECTRIC POWER
- H02J—CIRCUIT ARRANGEMENTS OR SYSTEMS FOR SUPPLYING OR DISTRIBUTING ELECTRIC POWER; SYSTEMS FOR STORING ELECTRIC ENERGY
- H02J50/00—Circuit arrangements or systems for wireless supply or distribution of electric power
- H02J50/10—Circuit arrangements or systems for wireless supply or distribution of electric power using inductive coupling
-
- H—ELECTRICITY
- H02—GENERATION; CONVERSION OR DISTRIBUTION OF ELECTRIC POWER
- H02J—CIRCUIT ARRANGEMENTS OR SYSTEMS FOR SUPPLYING OR DISTRIBUTING ELECTRIC POWER; SYSTEMS FOR STORING ELECTRIC ENERGY
- H02J50/00—Circuit arrangements or systems for wireless supply or distribution of electric power
- H02J50/80—Circuit arrangements or systems for wireless supply or distribution of electric power involving the exchange of data, concerning supply or distribution of electric power, between transmitting devices and receiving devices
-
- H—ELECTRICITY
- H02—GENERATION; CONVERSION OR DISTRIBUTION OF ELECTRIC POWER
- H02J—CIRCUIT ARRANGEMENTS OR SYSTEMS FOR SUPPLYING OR DISTRIBUTING ELECTRIC POWER; SYSTEMS FOR STORING ELECTRIC ENERGY
- H02J7/00—Circuit arrangements for charging or depolarising batteries or for supplying loads from batteries
- H02J7/00032—Circuit arrangements for charging or depolarising batteries or for supplying loads from batteries characterised by data exchange
- H02J7/00045—Authentication, i.e. circuits for checking compatibility between one component, e.g. a battery or a battery charger, and another component, e.g. a power source
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/08—Network architectures or network communication protocols for network security for authentication of entities
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/08—Key distribution or management, e.g. generation, sharing or updating, of cryptographic keys or passwords
- H04L9/0891—Revocation or update of secret information, e.g. encryption key update or rekeying
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/30—Public key, i.e. encryption algorithm being computationally infeasible to invert or user's encryption keys not requiring secrecy
- H04L9/3066—Public key, i.e. encryption algorithm being computationally infeasible to invert or user's encryption keys not requiring secrecy involving algebraic varieties, e.g. elliptic or hyper-elliptic curves
- H04L9/3073—Public key, i.e. encryption algorithm being computationally infeasible to invert or user's encryption keys not requiring secrecy involving algebraic varieties, e.g. elliptic or hyper-elliptic curves involving pairings, e.g. identity based encryption [IBE], bilinear mappings or bilinear pairings, e.g. Weil or Tate pairing
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/32—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials
- H04L9/3247—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols including means for verifying the identity or authority of a user of the system or for message authentication, e.g. authorization, entity authentication, data integrity or data verification, non-repudiation, key authentication or verification of credentials involving digital signatures
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W12/00—Security arrangements; Authentication; Protecting privacy or anonymity
- H04W12/04—Key management, e.g. using generic bootstrapping architecture [GBA]
- H04W12/043—Key management, e.g. using generic bootstrapping architecture [GBA] using a trusted network node as an anchor
- H04W12/0431—Key distribution or pre-distribution; Key agreement
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04W—WIRELESS COMMUNICATION NETWORKS
- H04W12/00—Security arrangements; Authentication; Protecting privacy or anonymity
- H04W12/50—Secure pairing of devices
-
- H—ELECTRICITY
- H02—GENERATION; CONVERSION OR DISTRIBUTION OF ELECTRIC POWER
- H02J—CIRCUIT ARRANGEMENTS OR SYSTEMS FOR SUPPLYING OR DISTRIBUTING ELECTRIC POWER; SYSTEMS FOR STORING ELECTRIC ENERGY
- H02J50/00—Circuit arrangements or systems for wireless supply or distribution of electric power
- H02J50/40—Circuit arrangements or systems for wireless supply or distribution of electric power using two or more transmitting or receiving devices
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y04—INFORMATION OR COMMUNICATION TECHNOLOGIES HAVING AN IMPACT ON OTHER TECHNOLOGY AREAS
- Y04S—SYSTEMS INTEGRATING TECHNOLOGIES RELATED TO POWER NETWORK OPERATION, COMMUNICATION OR INFORMATION TECHNOLOGIES FOR IMPROVING THE ELECTRICAL POWER GENERATION, TRANSMISSION, DISTRIBUTION, MANAGEMENT OR USAGE, i.e. SMART GRIDS
- Y04S40/00—Systems for electrical power generation, transmission, distribution or end-user application management characterised by the use of communication or information technologies, or communication or information technology specific aspects supporting them
- Y04S40/20—Information technology specific aspects, e.g. CAD, simulation, modelling, system security
Abstract
Methods, systems, apparatuses, and computer-readable storage devices for anonymous device authentication. One method comprises the following steps: accessing, by an electronic device, data stored by the electronic device that identifies an authentication key accepted by the electronic device as valid; sending, by the electronic device, an authentication request to a second electronic device, the authentication request identifying an authentication key set comprising at least some authentication keys accepted as valid by the electronic device; and receiving, by the electronic device, response data provided by the second electronic device in response to the authentication request. The response data (i) identifies a particular authentication key from the set of authentication keys identified by the authentication request, and (ii) includes a signature generated using the particular authentication key. The method includes authenticating, by the electronic device, the second electronic device by determining that the received signature was generated using the particular authentication key.
Description
Cross Reference to Related Applications
This application claims priority from U.S. application No.62/870,167 filed on 2019, month 07, 03, which is incorporated herein by reference.
Technical Field
This specification relates generally to authentication of electronic devices.
Background
Electronic authentication is a process of verifying a digital certificate of an electronic device.
Disclosure of Invention
When an electronic device is plugged into a charger or placed within range of a wireless charger, it is desirable for the device to authenticate that the charger is authentic or guaranteed before requesting that the charger deliver power. This protects the device from exposure to high currents and voltages delivered by counterfeit chargers. Also, the charger may verify that the device is authentic or guaranteed before providing current to the device. The authentication techniques discussed herein may be used for wired power transfer, wireless power transfer, and for other device interactions that do not involve power transfer.
In some embodiments, the authentication process satisfies several constraints to improve security, privacy, and usability. For example, one constraint is that the authentication process does not rely on a network connection or any device other than the charger and the device to be charged to operate. Another constraint is that the authentication process is substantially anonymous, such that the charger cannot uniquely identify a particular charged device and/or the charged device cannot uniquely identify a particular charger. As another example, it is desirable that the certificate of a compromised device be revocable to prevent devices that have been compromised or whose certificates have been improperly copied from being used. However, revocation of the certificate of the compromised device should result in few, if any, undamaged chargers or devices no longer passing the authentication process. These constraints and the manner in which they are satisfied are discussed in detail below.
In some embodiments, the authentication process between the electronic device and the charger is designed to be performed without an internet connection or any other connection to a network. In other words, the device being charged and the charger may be configured to authenticate each other through direct communication without communicating with any other device (i.e., messages conveyed between the device being charged and the charger are not relayed by any other device). This may be helpful when network connectivity is not available, for example, if a traveler needs to charge a device at an airport in a country where the traveler does not own internet services. The charged device, the charger, or both may have the capability to connect to the internet or another network. In some embodiments, the network connection may be used at the time for updating or configuring, as discussed below. However, no active network connection is required for the authentication process at charging. Also, in many cases, it is not possible for the charger to own internet access, as this would greatly increase the cost of the charger. In many cases, the charger may only communicate with the device to be charged, e.g., through a charging cable or a short-range wireless connection, such as an inductive coupling for wireless charging or bluetooth.
To protect potential inefficient use of certificates, the authentication scheme may allow revocation of certificates. For example, a counterfeiter may disassemble a valid device to extract its certificates, and then use those certificates in the counterfeit device. Thus, the system may have a revocation mechanism for revoking certificates that are compromised in this manner. Revocation of a certificate should result in as few valid devices as possible (e.g., genuine chargers or genuine charged devices) being revoked. In particular, revocation of a single certificate is not expected to de-authenticate all devices of a given model. Thus, even devices of the same model or type should not rely on the same credentials to authenticate. At the same time, the individual device should not rely on a unique certificate in the authentication process, as this would allow the individual device (e.g., charger or charged device) to be uniquely identified and thus would discard anonymity.
This authentication process may be used for any anonymous authentication between devices. The process may be two-way anonymous, where the two devices each consider the other to be valid without providing unique identifying information. In some cases, the process may be one-way anonymous, where only the identity of one device is hidden. Similarly, the authentication may be one-way, where only one device provides its authorization to the other; or bi-directional, where two devices each provide their authorization to each other. While power transfer (referred to herein simply as "charging") is one useful application of anonymous authentication, the techniques discussed herein may be used for any other application in which two devices both want to confirm that the other is a valid device in order to communicate with it, and one or both of the devices want to effect authentication without providing unique identification information.
When anonymous authentication is used for charging, the charger cannot uniquely identify the charged device, and the charged device cannot uniquely identify the charger. Anonymous authentication may be used to maintain user privacy. The threat model may be asymmetric. That is, it is more important for the charged device to protect itself against an illegal charger than the opposite case.
In one general aspect, a method performed by an electronic device includes: accessing, by the electronic device, data stored by the electronic device that identifies an authentication key accepted as valid by the electronic device; sending, by the electronic device, an authentication request to a second electronic device, the authentication request identifying an authentication key set comprising at least some authentication keys accepted as valid by the electronic device; and receiving, by the electronic device, response data provided by the second electronic device in response to the authentication request. The response data (i) identifies a particular authentication key from the set of authentication keys identified by the authentication request, and (ii) includes a signature generated using the particular authentication key. The method includes authenticating, by the electronic device, the second electronic device by determining that the received signature was generated using the particular authentication key.
In another general aspect, a method performed by an electronic device includes: receiving, by the electronic device, an authentication request identifying a set of authentication keys; identifying, by the electronic device, an authentication key stored by the electronic device in a set identified by the authentication request; generating, by the electronic device, a signature using the identified authentication key; and providing, by the electronic device and in response to receiving the authentication request, response data that includes (i) the signature and (ii) an identifier of an authentication key used to generate the signature.
Other embodiments of these and other aspects include corresponding systems, apparatus, and computer programs configured to perform the actions of the methods encoded on computer storage devices. A system of one or more computers or other processing devices may be configured with software, hardware, or a combination thereof installed on the system such that, in operation, the system implements the action. One or more computer programs may be so configured by having instructions which, when executed by data processing apparatus, cause the apparatus to carry out the action.
These and other embodiments may each optionally include one or more of the following features.
In some implementations, the second electronic device is a wireless charger and the electronic device is a device to be charged by the wireless charger.
In some implementations, the method further includes initiating charging of the electronic device by the second electronic device, or increasing power transfer from the second electronic device to the electronic device, in response to authenticating the second electronic device.
In some implementations, sending the authentication request and receiving the response data are performed using a direct communication link between the electronic device and the second electronic device.
In some implementations, the direct communication link between the electronic device and the second electronic device includes an electromagnetic coupling between a power transmitting coil of the second device and a power receiving coil of the electronic device, the electronic device including a battery and circuitry configured to charge the battery based on power received using the power receiving coil.
In some implementations, accessing data stored by the electronic device that identifies an authentication key accepted by the electronic device as valid includes accessing data that identifies a set of key indices corresponding to valid authentication keys. The authentication request specifies the set of key indices; the response data identifying a particular authentication key by a particular key index indicating the particular authentication key; and authenticating the second electronic device includes determining that the received signature was generated using an authentication key corresponding to the particular key index.
In some embodiments, the authentication request includes a random number. The method further includes obtaining, from a data store of the electronic device, a public key or a hash of the public key corresponding to the particular authentication key in response to receiving the response data. Authenticating the second electronic device includes determining, using the public key or hash, that the signature was generated from the random number and a private key corresponding to the public key.
In some embodiments, the method includes storing a public key corresponding to each authentication key in the set of authentication keys prior to sending the authentication request.
In some embodiments, the method includes storing a hash of the public key corresponding to each authentication key in the set of authentication keys prior to sending the authentication request.
In some implementations, the method includes detecting, by the electronic device, the second electronic device. Sending the authentication request is performed in response to detecting the second electronic device.
In some embodiments, the second electronic device stores only a proper subset of the indicated set of authentication keys. For example, it may store less than half of the authentication keys, or even less than 25% or 10% of the indicated set of authentication keys.
In some embodiments, the accessing, sending, receiving, and authenticating are performed anonymously such that neither the electronic device nor the second electronic device provides unique identification information.
In some implementations, the electronic device is a wireless charger and the authentication request is received from a device to be charged that is in proximity to the wireless charger.
In some embodiments, identifying the authentication key comprises: determining that the stored set of authentication keys stored by the electronic device includes a plurality of authentication keys of the set of authentication keys identified by the authentication request; and selecting one of the stored authentication keys determined to be included in the set of authentication keys identified by the authentication request.
In some embodiments, the authentication request indicates a plurality of key indices identifying the set of authentication keys. The identifier in the response data includes a key index from the plurality of key indexes.
In some embodiments, the authentication request includes a random number. Generating the signature using the identified authentication key includes generating the signature using the random number and a private key stored by the electronic device.
In some embodiments, the method includes providing, to the electronic device, a public key corresponding to the private key in the response data.
The details of one or more embodiments of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.
Drawings
Fig. 1 is a diagram illustrating anonymous authentication of a wireless charger and a device to be charged.
Fig. 2A and 3B are block diagrams illustrating an example of a system for configuring a device to perform anonymous authentication.
Fig. 3A and 3B are diagrams illustrating an example of a process of performing anonymous authentication.
Fig. 4 is a block diagram illustrating an example of revoking a key in an anonymous authentication framework.
Fig. 5 is a block diagram illustrating an example of a process of updating authentication information in an anonymous authentication framework.
FIG. 6 is a diagram illustrating an example of various device-to-device interactions that may be authenticated using anonymous authentication.
Like reference numbers and designations in the various drawings indicate like elements.
Detailed Description
Fig. 1 is an illustration of an example environment 100 that includes a device 110 and a charger 120. In this example, the device 110 authenticates the charger before requesting power and initiating charging.
The device 110 stores information relating to the set of approval keys, any one of which the charger 120 can use to prove its authenticity. The device 110 communicates with the charger 120 to begin the process of authenticating the charger 120. For example, the device 110 may indicate a set of keys (typically a plurality of keys) that the device 110 considers valid. The charger 120 cannot determine the identity of the device 110 because the message from the device 110 to the charger 120 does not include any unique identifying information about the device 110. The charger 120 then generates and provides a response to the device 110 using one of the keys from the set of approved keys. Since the responses are generated using one of several valid keys, none of them are unique to a particular charger, and the device 110 cannot determine the identity of the charger 120. The device 110 checks the response from the charger 120 and verifies that it was in fact generated using one of the approval keys, confirming that the charger 120 is authentic. Once device 110 confirms that the authenticity of charger 120 is confirmed, device 110 initiates charging.
In general, device 110 may require authentication before requesting or receiving power at a certain power level or mode of operation. In some implementations, the device 110 may block all power transmission until authentication occurs. In other implementations, the device 110 may allow power transmission in one or more modes, such as a default low power charging mode, prior to authentication, but may require authentication prior to initiating power transmission in one or more other modes, such as a high power charging mode. For some wireless chargers, certain levels of electromagnetic coupling and power transfer occur as part of the communication that sets the parameters of the charging cycle, and thus the device 110 may naturally allow such low or default levels of power transfer to occur before or during the authentication process before initiating charging in a higher power or fast charging mode.
In the example of fig. 1, the charger 120 is a wireless charger configured to wirelessly transfer power to the device 110. Power is transferred through inductive coupling of a power transfer coil in the charger and a power receiving coil in the device 110. Data communication between the device 110 and the charger 120 to effect anonymous authentication may be achieved through electromagnetic coupling of the coils. For example, the charger 120 may modulate the transmission frequency from its transmit coil to provide data to the device 110, and the device 110 may modulate the effective impedance of its receive coil to provide data to the charger 120. In some embodiments, the power transfer and communication may be performed according to the Qi wireless charging standard or other wireless charging standards.
Alternatively or additionally, other types of communication between the device 110 and the charger 120 may be used to perform authentication. For example, the device 110 and the charger 120 may communicate using a short range radio frequency communication link such as bluetooth or Wi-Fi. Typically, communication is over a direct link between the device 110 and the charger 120, without requiring connection of either device to a communication network.
Although the example of fig. 1 and other examples discussed below relate to wireless charging, the same authentication techniques may be used for wired charging. For example, the charger 120 may be a wired charger connected to a charging port on the device 110 via a charging cable. In this case, communication between the charger 120 and the device 110 may be performed through the charging cable.
In the example of fig. 1, the device 110 initiates the authentication process, where the device 110 verifies the authenticity or certificate of the charger 120. However, in some embodiments, the charger 120 may alternatively or additionally initiate a similar authentication process to verify the authenticity of the device 110. For example, the charger 120 may require proof of authenticity of the device to be charged before providing power in some mode of operation or power level, such as a high power or fast charge mode supported only for certain device types. In some implementations, both the device 110 and the charger 120 can initiate the authentication process to verify the authenticity of the opposing device.
Fig. 2A is a block diagram illustrating a system 200 for configuring a device to perform anonymous authentication. For example, fig. 2A shows how a manufacturer may set up different devices with appropriate authentication keys and other data so that they can subsequently perform anonymous authentication. As discussed further below, this setup process to provide the required data to the different devices may alternatively or additionally be performed after manufacture in some embodiments by a software update, firmware update, or other process.
The computer system 205 acts as a central authority that defines the authentication scheme and sets the authentication key to be used. The actions of computer system 205 may be distributed across multiple computers or may involve the coordination of multiple computers. For example, in some embodiments, a group of multiple manufacturers may desire to make different chargers 220a-220n and chargeable devices 210a-210z capable of interoperation, even if they are made by different companies. Computer system 205 may assign keys and other data to different manufacturers and different sets of devices to allow proper authentication.
Typically, the computer system 205 defines a large set of authentication key pairs, e.g., M1000 authentication key pairs. It will be apparent that more or less (e.g., 100, 500, 2000, 5000, etc.) may be used depending on the application. Each authentication key pair includes a private key and a public key. In some embodiments, computer system 205 generates the key pair using an elliptic curve cryptosystem. By way of example, the public and private keys may each be 256 bits, but other lengths (e.g., 128 bits, 512 bits, etc.) may be used. Each public-private key pair is assigned a specific key index value, e.g., 1000 key pairs are assigned index values 0-999, respectively.
Once the set of key pairs has been determined, the computer system 205 selects a different subset of keys to load onto different charger devices 220a-220 n. Each subset typically includes keys from only a small portion of the overall set of authentication key pairs, e.g., only 2%, 3%, 5%, or 10% of the key index. For example, if 1000 key pairs are defined, each charger 220a-220n may receive and store keys for only 32 key indices. Even within the same model of charger, different instances of the charger will receive different subsets of keys.
Many different techniques may be used to select the subset of keys that are loaded to the different chargers 220a-220 n. In some embodiments, a subset of each charger 220a-220n is selected randomly or pseudo-randomly, respectively. In other embodiments, a portion of the subset is randomly or pseudo-randomly selected for each individual charger 220a-220n, but another department of the subset is shared by the charger(s) 220a-220n in the same manufacturing lot. For example, of the 32 keys, 16 keys may be randomly or pseudo-randomly selected for each charger, and the other 16 keys may be shared by all chargers manufactured on the day. In some embodiments, some keys are chosen randomly or pseudo-randomly, while some keys are shared by all chargers of the same model type. This may improve the compatibility of the model with other devices, but at the cost of an increased risk of the subsequent need to revoke these shared keys in the event of a device being compromised. For inexpensive devices or small batches, all chargers 220a-220n in the batch may share the entire key subset, e.g., where the chargers in a first batch all receive a first key subset, and the chargers of the next batch all receive a second key subset, and so on.
Thus, different key subsets of the chargers 220a-220n may overlap and may be randomly or pseudo-randomly selected in whole or in part. In this way, all instances of the charger will have a certain number (typically the same number) of valid authentication keys for a given model of charger. However, each charger instance will only have a small fraction of the total valid authentication key. This helps to maintain security so that if one charger is damaged and the authentication key is taken away, only a small amount of the total number of authentication keys is damaged. Furthermore, the set of authentication keys maintained by the charger instance is not unique and therefore does not uniquely identify the particular charger instance.
To prevent counterfeiting, rather than each charger 220a-220n having a random key subset, the key subsets of some chargers 220a-220n may be selected from only a portion of the overall key set. For example, the factory may choose a group of 100 keys from a complete list of 1000 keys per day. All chargers 220a built on the day can load 32 random keys selected from the group of 100 keys. If a potential attacker obtains several chargers 220a manufactured the same day, which is possible if the attacker purchases a large box or shipment of chargers for the purpose of doing an attack, the potential attacker may only extract the keys in the group of 100 keys. A potential attacker would need to obtain chargers from multiple locations over a longer period of time in order to obtain more keys out of 1000 in total.
In some embodiments, the subset of keys for each charger is sufficiently large and the keys are sufficiently distributed among different chargers so that identifying one or both keys held by a charger does not uniquely identify the charger. For example, if there are 1000 keys and each charger loads 32 keys, with the keys well distributed among different subsets of keys, 150000 devices may be built, 5000 of which have any given key.
In the example of fig. 2A, computer system 205 generates a total of 9 public-private key pairs. Table 230 shows key index value 206, private key 207, and public key 208. Private keys 207 are designated P1 through P9, and the corresponding public keys are designated P1 through P9. The key index value 206 is 1 to 9. Each row represents a different public-private key pair 230. For example, where key index 1 corresponds to private key P1 and public key P1; key index 2 corresponds to private key P2 and public key P2; and so on. Each private key 207 and public key 208 may be identified by its key index 206.
In the example of FIG. 2A, the key data 221a-221n for each charger 220a-220n includes the private key 207 of the three key indexes 206. However, the three key indices are different for different instances of the charger. The chargers 220a-220n may store only the private key of the applicable key index and exclude the public key 208. However, in other embodiments as discussed in fig. 2, the corresponding public key 208 may also be stored. The key data 221a-221n also maps the respective private keys 207 to their corresponding key indices 206, and those relationships are subsequently used in the authentication process.
In some implementations, private key 207 in key data 221a-221n is stored in protected storage of chargers 220a-220n, making it difficult to obtain private key 207 even with a hardware debugger.
In addition to providing the private key subset to configure the chargers 220a-220n, the computing system 205 can provide data to configure the set of devices 210a-210z to authenticate the chargers 220a-220 n. The computing system 205 provides the key data to the devices 210a-210z so that the devices 210a-210z can each verify the authenticity of the chargers 220a-220 n. To maximize compatibility, it is generally desirable that each of the devices 210a-210z have sufficient information to be able to authenticate each of the chargers 220a-220 n. Thus, each of devices 210a-210z may receive and store key data, such as public key 208, for each key index 206. This is illustrated in FIG. 2A, where each set of key data 221a-221z includes each public key 208, e.g., P1-P9, of all key indexes 206, e.g., 1-9. The key data 221a-221z associates the public keys 208 with their corresponding key indices. This is significant for subsequent use in authentication and to allow effective revocation, as these processes typically operate on a specific key index rather than a set of keys as a whole. The devices 210a-210z may store the key data 221a-221z in a protected manner, such as protected or signed, to prevent tampering.
The example of FIG. 2A shows an initial set of keys provided by a manufacturer to chargers 220a-220n and devices 210a-210 z. However, alternatively or additionally, this type of data may be provided after sale of the device and in use by the user. For example, one or more server systems may provide data over the network from time to update the authentication key set and corresponding key data. Similarly, the server system may provide data to enforce revocation of individual keys or groups of keys if those keys are compromised. For example, the devices 210a-210z may be notified that a particular key has been revoked. Other communications may be performed. For example, the devices 210a-210z may periodically download updates that provide key data including a public key and a corresponding key index to enable operation with chargers from one or more manufacturers. Computing system 205 may provide additional keys beyond the original set of keys available at the time of manufacture. For example, if 20% of the keys in the original set of 1000 authentication keys have been compromised, 1000 new authentication keys may be made available, doubling the overall set to 2000 authentication keys.
The example of FIG. 2A shows an arrangement for enabling devices 210a-210z to authenticate chargers 220a-220 n. Additionally or alternatively, a complementary process may be performed to enable the chargers 220a-220n to authenticate the devices 210a-210 z. For example, additional key data may be provided and stored by devices 210a-210z, where the additional key data of devices 210a-210z includes different appropriate subsets of private key 207. Similarly, the chargers 220a-220n may receive and store a public key 208 that can be used to verify the use of a valid private key. In this manner, the chargers 220a-220n and the devices 210a-210z may each authenticate each other. In some embodiments, a different set of authentication public-private key pairs may be used for each type of authentication, e.g., where one set of key pairs is used to authenticate the charger and another set of key pairs is used to authenticate the device to be charged.
Fig. 2B is a block diagram illustrating another system 201 for configuring a device to perform anonymous authentication. FIG. 2B illustrates an alternative way of configuring chargers 220a-220n and 210a-210z to support anonymous authentication, where slightly different sets of key data are provided. Rather than each device 210a-210z storing all of the public key 208, each device 210a-210z receives and stores a hash 209 of the public key 208. The hash is shorter than the corresponding public key 208 and therefore requires less storage on each device 210a-210 z. When the system uses a large number of authenticated public-private key pairs, e.g., hundreds or thousands, space savings can be significant,
In addition, chargers 220a-220n receive and store public keys 208 corresponding to a subset of their respective private keys 207. As a result, whenever a charger 220a-220n uses a private key 207 from its locally stored subset, the charger 220a-220n is also able to provide a corresponding public key 208 to one of the devices 210a-210 z. The devices 210a-210z that receive the public key 208 may use the hash 209 to verify the authenticity of the public key 208 provided by the charger, and then use the verified public key 208 to authenticate the charger. Having each charger 220a-220n store the public key 208 in addition to the private key 207 increases the storage requirements for the chargers 220a-220n, but because the chargers 220a-220n each store only a small subset of the total number of authentication keys, the increase is very small and acceptable to achieve a significantly greater reduction in storage requirements for the devices 210a-210 z.
In this example, computer system 205 computes a hash 209 of each public key 208. The server 205b may compute the hash 209 using a hash function, such as SHA 256. The addition of these hashes 209 is shown in table 235. In the example of fig. 2B, the computer system 205 has 9 public-private key pairs and their corresponding public key hashes 209. To configure the chargers 220a-220n, as discussed with respect to fig. 2A, the computer system 205 selects different subsets of the private key 207 for different chargers 220a-220n, and then provides the private key 207 and the public key 208 for the selected subsets. To configure the devices 210a-210z to authenticate the chargers 220a-220n, the computer system 205 provides each hash 209 for the valid key index 206 for each device 210a-210 z. Loading the hash 215b instead of the public key 220b may reduce the amount of storage required on the device 230 b.
For very large authentication key sets, the storage requirements may still be too high for some types of devices. One way to address this problem is for the devices 210a-210z to store only a subset of the public key hashes 209. For example, only the first half of the list (e.g., hashes of key indices 1-5) may be stored. However, this increases the risk that charger and device authentication may fail due to key data that does not have any key index in common. Another option is to intercept the hash values so that less space is used per hash. For example, only the first 128 bits of each hash 209 may be stored. However, this increases the risk that an attacker may find the hash collision and more easily damage the authentication key.
In a similar manner as discussed with respect to FIG. 2A, the system 201 provides additional data to enable the chargers 220a-220n to authenticate the devices 210a-210 z. For example, each device 210a-210z stores an appropriate subset of private key 207 and public key 208, except as illustrated in FIG. 2B, and chargers 220a-220n each store all public key hashes 209. Note that the number of keys in the list and the number of keys on each device may be different for the charger 120 and the devices 110. Devices 210a-210z will typically have more storage available and may store a larger subset of private key 207 than chargers 220a-220 n.
The techniques discussed with respect to fig. 2A and 2B support revoking keys for devices that have been compromised. If the charger 220a-220n is compromised, all of its keys are removed from the list of valid charger public keys. This would render the damaged device unable to pass authentication and may therefore be unusable in some embodiments. However, all or nearly all of the other chargers 220a-220n will be able to continue normal operation because most, if not all, of the other chargers 220a-220n will not share the same subset of keys as the damaged charger. Thus, even though some of the keys in their respective subsets may become illegitimate, other keys will remain valid and can be used for authentication. In other words, each charger 220a-220N has a different subset of N keys, so revoking all keys from one charger 220a-220N cannot make keys from the second charger 120 that exceed N/M invalid. For sample values where N is 32 and M is 1000, this represents a small impact on the other chargers. An attacker needs to damage a large number of devices before any given charger 120 will not have any valid keys left.
To obtain information about revocation, the devices 210a-210z may periodically download an updated list of which keys are valid or revoked from the secure server when internet access is available.
Fig. 3A is a diagram illustrating an example 300a of a process of performing anonymous authentication. In this example, device 210a authenticates charger 220b while preserving the anonymity of both devices. Fig. 3A uses the data storage scheme discussed with respect to fig. 2A, where charger 220b stores key data 221b that includes only the appropriate subset of the individual private keys 207, and charger 220b does not store the corresponding public key 208.
In step 302, device 210a sends an authentication request 321 to charger 220 b. The authentication request includes a random number 333 and an indication 322 of a key index that device 210a will accept for authentication. The random number 333 may be a randomly or pseudo-randomly generated value. The indication 322 of an acceptable key index may indicate a set of keys for which device 210a stores the corresponding public key and which have not been revoked.
At step 304, after charger 220b receives authentication request 321, charger 220 compares key index 322 indicated by authentication request 321 with the set of key indices for which charger 220b stores private key 207. This results in a set 324 of key indices with corresponding authentication private keys that charger 220b may use to perform authentication. Only one matching key index is required to perform authentication. However, in most cases, there will be multiple key indices for which charger 220b indicated by authentication request 321 stores key 207 and can therefore use.
If there are no overlapping key indices between those indicated by the authentication request 321 and the set of key indices for which the charger 220b stores the private key, the charger 220b will not be able to authenticate. In this case, the charger 220b and/or the device 210a would need to be updated, for example, with new key data appended with a key index, so that both possess the key data of the shared key index, so that the charger 220b and the device 210a can successfully perform authentication.
At step 306, charger 220b selects a key index from the set 324 identified in step 304. Keys 207 corresponding to any key index in the set 324 may be used. However, this selection process may be used to further conceal the identity of the charger 220 b. The charger 220b may select the first matching key index in the set 324, the last matching key index in the set 324, a randomly or pseudo-randomly selected key index in the set, and so on. In some embodiments, the charger 220b changes which key to use from time to time or each charging session. Since different chargers 220a-220n store private keys 207 for different subsets of the key index 206 and chargers 220a-220n may change which private key 207 they are to use with each authentication, the use of a particular authentication key 207 or key index 206 does not signal the identity of a particular charger 220a-220 n.
Using a predetermined function of the selected private key and the random number 333, the charger 220b generates a signature 325 using the selected key. For example, the charger 220b may encrypt the random number 333 using the selected private key, where the encrypted random number serves as the signature 325.
At step 308, charger 220b generates and sends an authentication response 326 to device 210 a. The authentication response 326 includes the signature 325 and an indication 327 of which key index 206 corresponds to the key 207 used to generate the signature 325.
In step 310, in response to receiving authentication response 326, device 210a retrieves public key 208 corresponding to key index 327 indicated by authentication response 326. Although device 210a indicates that any of the individual key indices 206 will be acceptable for authentication, once charger 220b has selected the key index to use, authentication response 326 will be evaluated with a single public key for the particular key index 327 selected by charger 220 b.
At step 312, device 210a uses the public key to verify whether signature 325 was generated using the correct private key corresponding to key index 327 indicated in the authentication response. For example, given a key index of "1," the device retrieves the public key P1 corresponding to the key index. Device 210a then uses this public key P1 to determine whether signature 325 was generated using the correct private key P1 corresponding to the same index "1" and public key P1. For example, device 210a may attempt to decrypt the signature 325 using public key P1 and then compare the decryption result to the random number 333 provided by device 210a in authentication request 321. If the decryption result matches the random number 333, the device 210a determines that the authentication is successful and the charger 220b is authorized. If the decryption result does not match the random number 333, the authentication fails.
At step 314, after successful authentication, the device 210 further communicates with the charger 220b and performs one or more functions that were not allowed prior to successful authentication (e.g., initiating charging, increasing the power level for charging from a default level to a higher level, etc.). In some embodiments, the process is also performed with the roles reversed, e.g., where charger 220b sends an authentication request to device 210a, and charger 220b may require authentication from device 210a before certain actions or charging modes are allowed.
Fig. 3B is a diagram illustrating another example 300B of a process of performing anonymous authentication. The process 300B of fig. 3B is similar to the process 300a of fig. 3A, except that the key data used is different. Fig. 3B uses the data storage scheme discussed with respect to fig. 2B, where charger 220B stores key data 225B including private key 206 and public key 207, and device 210a stores key data 215a including hash 209 of the public key, rather than the public key itself. In this example, device 210a authenticates charger 220b while preserving the anonymity of both devices.
The process 300B in fig. 3B initially follows the same steps as described for fig. 3A, where the device 210a sends an authentication request 321 (step 302), the charger 220B identifies a set 324 of common key indices, and the charger selects a key corresponding to one of the key indices in the set 324 and uses it to generate a signature 325 (306). The process 300b is then slightly different, as discussed below with respect to steps 350 through 358.
At step 350, charger 220b generates and sends authentication response 371 to device 210 a. Authentication response 371 includes signature 325 and an indication 327 of which key index 206 corresponds to private key 207 used to generate signature 325. Further, authentication response 371 includes a public key indicating the key index specified 327. Since device 210a does not store the public key, charger 220b will provide the public key for subsequent use by device 210 a.
In step 352, in response to receiving the authentication response 371, the device 210a retrieves the hash 209 corresponding to the key index indicated by the authentication response 371. Although device 210a indicates that any of the various key indexes 206 will be acceptable for authentication, once charger 220b has selected the key index to use, authentication response 326 will be evaluated based on the hash and the authentication key pair for the particular key index selected by charger 220 b.
In step 354, device 210a verifies the authenticity of the public key received in authentication response 371. For example, device 210a generates a hash of the received public key using a predetermined hash function, and then compares the generated hash to hash 209 retrieved from storage of device 210 a. If the two hashes match, device 210a determines that the received public key is authentic and can be trusted in the authentication process. However, if the hashes do not match, the authentication is deemed unsuccessful.
At step 356, device 210a uses the received public key to verify whether signature 325 was generated using the correct private key corresponding to the key index indicated in authentication response 371. For example, given a key index of "1," device 210a uses the received public key P1 to determine whether signature 325 was generated using the correct private key P1 corresponding to the same index of "1" and public key P1. For example, device 210a may attempt to decrypt the signature 325 using public key P1 and then compare the decryption result to the random number 333 provided by device 210a in authentication request 321. If the decryption result matches the random number 333, the device 210a determines that the authentication is successful and the charger 220b is authorized. If the decryption result does not match the random number 333, the authentication fails.
At step 358, after successful authentication, the device 210a further communicates with the charger 220b and performs one or more functions that were not allowed prior to successful authentication (e.g., initiating charging, increasing the power level for charging from a default level to a higher level, etc.). In some embodiments, the process is also performed with the roles reversed, e.g., where charger 220b sends an authentication request to device 210a, and charger 220b may require authentication from device 210a before certain actions or charging modes are allowed.
Fig. 4 is a block diagram illustrating an example of revoking a key in an anonymous authentication framework. The key data shown corresponds to that of fig. 2A, but the technique may be used in the same manner as for the arrangement of fig. 2B.
In this example, the computer system revokes the keys numbered 6-9. Each of the devices 210a-210z marks those key indices as unavailable. Subsequently, when devices 210a-210z send authentication requests, those requests exclude key indices 6-9 as available key indices. Updating the devices 210a-210z in this manner to no longer accept authentication using the revoked keys removes the harmful risks that result from improper use of the revoked keys. Chargers 220a-220n that may not be connected to the network do not need to be updated and will continue to properly authenticate with any device 210a-210z, as long as there is also at least one valid unrevoked key index shared between the key data 211a-211z of a particular device 210a-210z and the key data 211a-211n of a particular charger 220a-220 n.
Fig. 5 is a block diagram illustrating an example of a process of updating authentication information in an anonymous authentication framework.
In general, the devices 210a-210z may periodically download a list of valid keys for all charger manufacturers from a server 505, such as the computer system 205 or another computer system, 505. If the key list has 1000 key hashes 209 of 32 bytes, the list of 30 manufacturers combined together will still be less than 1MB, which is very small compared to the storage capacity of many devices.
The devices 210a-210z may also know from the server 505 which keys have been revoked. If the device 210a-210z decides that it does not have enough valid private key (in order to prove its authenticity to the charger 220a-220 n) by determining that sufficient criteria are not met, the device 210a-210z may request the server 505 to provide it with an additional key. The devices 210a-210z may authenticate themselves to the server using device-specific credentials. While the server 505 knows at this time which device 210a-210z is requesting a new key, it has difficulty associating the request with the particular key used during authentication for any given charger 220a-220 n.
The server 505 may provide keys from different lists to the devices 210a-210z, and the server 505 is not limited to the original key list. For example, if the original list of 1000 device keys has been 20% compromised, the key list of device 110 may be doubled to 2000 possible keys. However, the chargers 220a-220n will be unaware of the new keys and will not be able to use those keys and key indexes unless they also receive updates.
Several techniques may be used to update the list of keys on the chargers 220a-220 n. In general, it is not possible for the chargers 220a-220n to have Internet access or other network access, but the chargers 220a-220n can take advantage of the network connections of the devices 210a-210z to obtain their updates. This process is illustrated in fig. 5.
While the devices 210a-210z download an updated key list that can be used to authenticate the chargers 220a-220n, the devices 210a-210z can also download a valid key list that the chargers 220a-220n can use to authenticate the devices 210a-210 z. The list will have a version number that increases with each update. The list and version number, and any additional data such as the new server public key, will be signed by the server's private key, and the chargers 220a-220n will be able to verify it using the server's public key that the chargers 220a-220n will also store in advance. For example, the public key of the server may be installed on the chargers 220a-220n when the chargers 220a-220n are manufactured. Where it is desired to rotate the public keys of the servers, the updated key list page may contain the new server public keys.
After the chargers 220a-220n authenticate the devices 210a-210z, the chargers 220a-220n may query the devices 210a-210z for an updated list from the server 505. If the devices 210a-210z do, the charger 120 asks the devices 210a-210z to send the new list. The devices 210a-210z then verify the signature of the new list using the server's public key. If the signature is valid and the new list is more up to date than the charger's stored list, the devices 210a-210z update their stored lists. Note that this does not require the devices 210a-210z to have Internet access when the chargers 220a-220n require an update. It is very likely that the chargers 220a-220n will likely be able to talk with enough devices if there are updated device keys on the server so that the chargers 220a-220n will obtain it relatively quickly.
The system is also capable of updating the charger's private key set. It is somewhat more challenging if the chargers 220a-220n want to update their own private charger key subsets, because each charger 220a-220n should have its own unique subset, and the process of this update should not reveal those keys to the devices 210a-210 z.
As an example of an update process, the charger 220a generates the update request 550 by encrypting the random number and its public device certificate using the server's public key. The charger 220a requests the current device 210a to send a request 550 to the server 505. Since the data is encrypted, the device 210a does not know what is being sent. The device 210a may refuse to send out the data for any of a number of reasons, for example, it does not have internet access at the current time, or it does not want to bear the risk of exposing its location due to a session with the server 505 and being informed of which charger is currently being used. If the device 210 is willing to communicate with the server 505, it will send a request 550.
The server 505 authenticates that the certificate belongs to a valid (e.g., non-corrupt or non-counterfeit) charger 220a-220 n. The server 505 generates an update 560 for the charger 220a by encrypting some of the alternate private keys (possibly with corresponding public keys) using the random number sent by the device and the public key obtained in the charger's certificate. The server 505 provides the update 560 to the device 210 a. The device 210a cannot determine what the update 560 contains due to encryption. The device 210a sends the update 560 to the charger 220 a.
The charger 220a decrypts the data using its private key. If the charger 220a decrypts correctly and the random numbers match, the charger 220a knows that the response is from the server 505. In this case, the charger 220a stores the new private key for authentication by the devices 210a-210z, preferably replacing the key that is no longer valid.
Owners of charging stations may wish to make these updates with their own devices, ensuring that their chargers are updated on a regular basis even if the consumer sets their device to refuse to deliver charger updates.
In some embodiments, data between the charger and the device may be transmitted over an encrypted channel so that no information is revealed to any wireless snooper. The device may establish the channel using any typical method (e.g., Diffie-Hellman key exchange).
FIG. 6 is a diagram illustrating an example of various device-to-device interactions that may be authenticated using anonymous authentication. The authentication techniques discussed herein are not limited to interaction between the charger 120 and the device to be charged 110. The techniques may be used to authenticate any pair of devices that may be connected or otherwise in communication with each other. For example, the authentication technique may be used for any computing device that has communicated with another computing device, a peripheral device, or another hardware resource. As a few examples, the computing device may be a phone, a laptop computer, a desktop computer, a tablet computer, a wearable device, and so forth. The peripheral device may be a printer, a display device, a headset, a docking station, a keyboard, a mouse, and so forth, as a few examples. Other hardware resources include appliances, home automation systems, vehicles such as automobiles, and the like.
As one example, one mobile device may communicate with another mobile device and confirm authenticity or authorization in an anonymous manner. For example, an application running on one phone may want to confirm that it is communicating wirelessly with the same application on a nearby phone, but neither phone nor application provides its exact identity. In this case, the application on the first phone may use anonymous authentication techniques to verify that the application on the second phone is authentic.
Various embodiments have been described. Nevertheless, it will be understood that various modifications may be made without departing from the spirit and scope of the disclosure. For example, various forms of the flows shown above may be used with steps reordered, added, or removed.
The embodiments of the invention and all of the functional operations described in this specification can be implemented in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the invention can be implemented as one or more computer programs, such as one or more modules of computer program instructions encoded on a computer readable medium for execution by, or to control the operation of, data processing apparatus. The computer readable medium can be a machine-readable storage device, a machine-readable storage substrate, a memory device, a composition of matter effecting a machine-readable propagated signal, or a combination of one or more of them. The term "data processing apparatus" encompasses all apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers. The apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them. Propagated signals are artificially generated signals, e.g., machine-generated electrical, optical, or electromagnetic signals, that are generated to encode information for transmission to suitable receiver apparatus.
A computer program (also known as a program, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, or declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment. A computer program does not necessarily correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be implemented by one or more programmable computers executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for executing instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such a device. Further, the computer may be embedded in another device, e.g., a tablet computer, a mobile phone, a Personal Digital Assistant (PDA), a mobile audio or video player, a Global Positioning System (GPS) receiver, to name a few. Computer-readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, such as internal hard disks or portable disks; a magnetic optical disk; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
To provide for interaction with a user, embodiments of the invention can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other types of devices can also be used to provide for interaction with a user; for example, feedback provided to the user can be any form of sensory feedback, such as visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
Embodiments of the invention can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a Local Area Network (LAN) and a Wide Area Network (WAN), such as the internet.
The computing system may include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any invention or of what may be claimed, but rather as descriptions of features that may be specific to particular embodiments of particular inventions. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Furthermore, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In some cases, multitasking and parallel processing may be advantageous. Moreover, the above-described partitioning of various system modules and components should not be understood as requiring such partitioning, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
In each instance where HTML files are mentioned, other file types or formats may be substituted. For example, an HTML file may be replaced by an XML, JSON, plain text, or other type of file. Further, where tables or hash tables are mentioned, other data structures (e.g., spreadsheets, relational databases, or structure files) may be used.
Specific embodiments of the present invention have been described. Other embodiments are within the scope of the following claims. For example, the actions recited in the claims can be performed in a different order and still achieve desirable results.
Claims (20)
1. A method performed by an electronic device, the method comprising:
accessing, by the electronic device, data stored by the electronic device, the data identifying that the electronic device accepts as a valid authentication key;
sending, by the electronic device, an authentication request to a second electronic device, the authentication request identifying a set of authentication keys that includes at least some of the authentication keys accepted as valid by the electronic device;
receiving, by the electronic device, response data provided by the second electronic device in response to the authentication request, wherein the response data (i) identifies a particular authentication key from a set of authentication keys identified by the authentication request, and (ii) includes a signature generated using the particular authentication key; and
authenticating, by the electronic device, the second electronic device by determining that the received signature was generated using the particular authentication key.
2. The method of claim 1, wherein the second electronic device is a wireless charger and the electronic device is a device to be charged by the wireless charger.
3. The method according to any one of claims 1-2, further comprising: in response to authenticating the second electronic device, initiating charging of the electronic device by the second electronic device or increasing power transfer from the second electronic device to the electronic device.
4. The method of any of claims 1-3, wherein sending the authentication request and receiving the response data are performed using a direct communication link between the electronic device and the second electronic device.
5. The method of any of claims 1-4, wherein the direct communication link between the electronic device and the second electronic device comprises an electromagnetic coupling between a power transmitting coil of the second device and a power receiving coil of the electronic device, the electronic device comprising a battery and circuitry configured to charge the battery based on power received using the power receiving coil.
6. The method of any of claims 1-5, wherein accessing data stored by the electronic device that identifies an authentication key accepted by the electronic device as valid comprises: accessing data identifying a set of key indices corresponding to valid authentication keys;
wherein the authentication request specifies the set of key indices;
wherein the response data identifies the particular authentication key by a particular key index indicating the particular authentication key; and is
Wherein authenticating the second electronic device comprises: determining that the received signature was generated using an authentication key corresponding to the particular key index.
7. The method of any of claims 1-6, wherein the authentication request comprises a nonce;
wherein the method further comprises: in response to receiving the response data, retrieving a public key or a hash of the public key corresponding to the particular authentication key from a data store of the electronic device;
wherein authenticating the second electronic device comprises: determining the signature using the public key or the hash is generated from the random number and a private key corresponding to the public key.
8. The method according to any one of claims 1-7, comprising: storing a public key corresponding to each of the set of authentication keys prior to sending the authentication request.
9. The method according to any one of claims 1-8, comprising: storing a hash of a public key corresponding to each of the set of authentication keys prior to sending the authentication request.
10. The method according to any one of claims 1-9, comprising: detecting, by the electronic device, the second electronic device;
wherein sending the authentication request is performed in response to detecting the second electronic device.
11. The method of any of claims 1-10, wherein the second electronic device stores only a proper subset of the indicated set of authentication keys.
12. The method of any of claims 1-11, wherein the accessing, sending, receiving, and authenticating are performed anonymously such that neither the electronic device nor the second electronic device provides unique identification information.
13. A method performed by an electronic device, the method comprising:
receiving, by the electronic device, an authentication request identifying a set of authentication keys;
identifying, by the electronic device, an authentication key stored by the electronic device in the set identified by the authentication request;
generating, by the electronic device, a signature using the identified authentication key; and
providing, by the electronic device in response to receiving the authentication request, response data comprising: (i) the signature, and (ii) an identifier of the authentication key used to generate the signature.
14. The method of claim 13, wherein the electronic device is a wireless charger, and wherein the authentication request is received from a device to be charged in proximity to the wireless charger.
15. The method of any of claims 13-14, wherein identifying the authentication key comprises:
determining that a stored set of authentication keys stored by the electronic device includes a plurality of authentication keys of the set of authentication keys identified by the authentication request; and
selecting one of the stored authentication keys determined to be included in the set of authentication keys identified by the authentication request.
16. The method of any of claims 13-15, wherein the authentication request indicates a plurality of key indices identifying the set of authentication keys; and is
Wherein the identifier in the response data comprises a key index from the plurality of key indexes.
17. The method of any of claims 13-16, wherein the authentication request comprises a nonce;
wherein generating the signature using the identified authentication key comprises: generating the signature using the random number and a private key stored by the electronic device.
18. The method of claim 17, comprising: providing a public key corresponding to the private key in the response data.
19. A device configured to perform the method of any one of claims 1-18.
20. One or more non-transitory computer-readable media storing instructions that, when executed by one or more processors, cause the one or more processors to perform the method of any one of claims 1-18.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201962870167P | 2019-07-03 | 2019-07-03 | |
US62/870,167 | 2019-07-03 | ||
PCT/US2020/040240 WO2021003127A1 (en) | 2019-07-03 | 2020-06-30 | Anonymous device authentication |
Publications (2)
Publication Number | Publication Date |
---|---|
CN112673607A true CN112673607A (en) | 2021-04-16 |
CN112673607B CN112673607B (en) | 2023-04-04 |
Family
ID=71784653
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202080004805.7A Active CN112673607B (en) | 2019-07-03 | 2020-06-30 | Anonymous device authentication |
Country Status (6)
Country | Link |
---|---|
US (1) | US20220116776A1 (en) |
EP (2) | EP3827609B1 (en) |
JP (1) | JP7300529B2 (en) |
KR (1) | KR20220025038A (en) |
CN (1) | CN112673607B (en) |
WO (1) | WO2021003127A1 (en) |
Families Citing this family (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11831793B2 (en) * | 2020-11-30 | 2023-11-28 | Stmicroelectronics S.R.L. | Methods and devices for authentication |
US11784798B2 (en) * | 2021-03-30 | 2023-10-10 | Visa International Service Association | System, method, and computer program product for data security |
WO2023146373A1 (en) * | 2022-01-28 | 2023-08-03 | 엘지전자 주식회사 | Precaching-based authentication method and device in wireless power transmission system |
CN114584322B (en) * | 2022-03-31 | 2023-08-22 | 浙江地芯引力科技有限公司 | Method and device for switching secret key authentication modes of connecting device, connecting device and medium |
US11528144B1 (en) * | 2022-06-09 | 2022-12-13 | Uab 360 It | Optimized access in a service environment |
US20240146120A1 (en) * | 2022-11-01 | 2024-05-02 | Beijing Xiaomi Mobile Software Co., Ltd. | Survey key verification method and device for wireless charging, and storage medium |
Citations (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN102045167A (en) * | 2009-10-20 | 2011-05-04 | 英飞凌科技股份有限公司 | Systems and methods for asymmetric cryptographic accessory authentication |
US20130257364A1 (en) * | 2012-04-03 | 2013-10-03 | Qualcomm Incorporated | System and method for wireless power control communication using bluetooth low energy |
CN103503366A (en) * | 2011-05-06 | 2014-01-08 | 塞尔蒂卡姆公司 | Managing data for authentication devices |
US20140325218A1 (en) * | 2013-04-26 | 2014-10-30 | Toyota Jidosha Kabushiki Kaisha | Wireless Charging System Using Secure Wireless Charging Protocols |
CN106031087A (en) * | 2014-02-21 | 2016-10-12 | 三星电子株式会社 | Method and apparatus for authenticating client credentials |
CN106471514A (en) * | 2014-07-24 | 2017-03-01 | 英特尔公司 | Safe wireless charges |
EP3293706A1 (en) * | 2016-09-09 | 2018-03-14 | Hyundai Motor Company | Smart key searching apparatus and method |
CN108881310A (en) * | 2018-08-15 | 2018-11-23 | 飞天诚信科技股份有限公司 | A kind of Accreditation System and its working method |
Family Cites Families (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JPH1032570A (en) * | 1996-07-15 | 1998-02-03 | N T T Data Tsushin Kk | Electronic signature system |
US6567913B1 (en) | 1998-12-24 | 2003-05-20 | Pitney Bowes Inc. | Selective security level certificate meter |
FR2825209A1 (en) | 2001-05-23 | 2002-11-29 | Thomson Licensing Sa | DEVICES AND METHOD FOR SECURING AND IDENTIFYING MESSAGES |
US7375492B2 (en) * | 2003-12-12 | 2008-05-20 | Microsoft Corporation | Inductively charged battery pack |
JP4653436B2 (en) * | 2004-08-04 | 2011-03-16 | 株式会社リコー | Electronic signature assigning method, electronic signature assigning apparatus, electronic signature assigning program, and recording medium |
JP2006050209A (en) * | 2004-08-04 | 2006-02-16 | Ricoh Co Ltd | Electronic signature providing method, electronic signature providing apparatus, portable information processing device, electronic signature providing system, electronic signature providing program, signature data creating program and recording medium |
US10193700B2 (en) * | 2015-02-27 | 2019-01-29 | Samsung Electronics Co., Ltd. | Trust-zone-based end-to-end security |
WO2017171561A1 (en) * | 2016-04-01 | 2017-10-05 | Powerbyproxi Limited | Method of authentication for a wireless charging system |
JP2019062394A (en) * | 2017-09-26 | 2019-04-18 | キヤノン株式会社 | Information processing apparatus, information processing method, and computer program |
-
2020
- 2020-06-30 EP EP20745370.5A patent/EP3827609B1/en active Active
- 2020-06-30 US US17/268,668 patent/US20220116776A1/en active Pending
- 2020-06-30 KR KR1020227003039A patent/KR20220025038A/en not_active Application Discontinuation
- 2020-06-30 WO PCT/US2020/040240 patent/WO2021003127A1/en unknown
- 2020-06-30 EP EP22152798.9A patent/EP4007331A1/en active Pending
- 2020-06-30 CN CN202080004805.7A patent/CN112673607B/en active Active
- 2020-06-30 JP JP2021578086A patent/JP7300529B2/en active Active
Patent Citations (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN102045167A (en) * | 2009-10-20 | 2011-05-04 | 英飞凌科技股份有限公司 | Systems and methods for asymmetric cryptographic accessory authentication |
CN103503366A (en) * | 2011-05-06 | 2014-01-08 | 塞尔蒂卡姆公司 | Managing data for authentication devices |
US20130257364A1 (en) * | 2012-04-03 | 2013-10-03 | Qualcomm Incorporated | System and method for wireless power control communication using bluetooth low energy |
US20140325218A1 (en) * | 2013-04-26 | 2014-10-30 | Toyota Jidosha Kabushiki Kaisha | Wireless Charging System Using Secure Wireless Charging Protocols |
CN106031087A (en) * | 2014-02-21 | 2016-10-12 | 三星电子株式会社 | Method and apparatus for authenticating client credentials |
CN106471514A (en) * | 2014-07-24 | 2017-03-01 | 英特尔公司 | Safe wireless charges |
EP3293706A1 (en) * | 2016-09-09 | 2018-03-14 | Hyundai Motor Company | Smart key searching apparatus and method |
CN108881310A (en) * | 2018-08-15 | 2018-11-23 | 飞天诚信科技股份有限公司 | A kind of Accreditation System and its working method |
Non-Patent Citations (2)
Title |
---|
XINGWEN ZHAO，JIAPING LIN，AND HUI LI: "Privacy-preserving billing scheme against Free-Riders for wireless charging electric vehicles", 《HINDAWI》 * |
袁晓娇: "基于Android的NFC移动应用平台的设计与实现", 《中国优秀硕士学位论文全文数据库信息科技辑》 * |
Also Published As
Publication number | Publication date |
---|---|
CN112673607B (en) | 2023-04-04 |
EP3827609A1 (en) | 2021-06-02 |
EP3827609B1 (en) | 2022-04-13 |
WO2021003127A1 (en) | 2021-01-07 |
US20220116776A1 (en) | 2022-04-14 |
JP7300529B2 (en) | 2023-06-29 |
KR20220025038A (en) | 2022-03-03 |
JP2022538465A (en) | 2022-09-02 |
EP4007331A1 (en) | 2022-06-01 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN112673607B (en) | Anonymous device authentication | |
CN109479049B (en) | System, apparatus and method for key provisioning delegation | |
CN106471514B (en) | Secure wireless charging | |
US11363010B2 (en) | Method and device for managing digital certificate | |
US8694782B2 (en) | Wireless authentication using beacon messages | |
EP3425842B1 (en) | Communication system and communication method for certificate generation | |
US20090044260A1 (en) | Apparatus and method for securing digital data with a security token | |
CN109474432B (en) | Digital certificate management method and device | |
KR101765917B1 (en) | Method for authenticating personal network entity | |
US9438595B2 (en) | Network resource access control methods and systems using transactional artifacts | |
JP5380583B1 (en) | Device authentication method and system | |
CN109714170B (en) | Data isolation method in alliance chain and corresponding alliance chain system | |
EP3479540A1 (en) | Multi-hop secure content routing based on cryptographic partial blind signatures and embedded terms | |
CN103678993B (en) | A kind of method and apparatus that terminal is controlled | |
JP2020074578A (en) | Method and device to register and authenticate information | |
CN103329589A (en) | System and method for issuing an authentication key for authenticating a user in a cpns environment | |
US20220100493A1 (en) | METHOD FOR UPGRADING IoT TERMINAL DEVICE AND ELECTRONIC DEVICE THEREOF | |
CN111314066A (en) | Block chain-based data transfer method, terminal and computer-readable storage medium | |
CN108352982B (en) | Communication device, communication method, and recording medium | |
JP6939313B2 (en) | Distributed authentication system | |
TWI673621B (en) | Information registration, authentication method and device | |
CN112805960B (en) | Authentication and authorization system, information processing apparatus, device, authentication and authorization method, and program | |
JP2014134878A (en) | Authentication system, authentication device and authentication method | |
TWM595288U (en) | Peer-to-peer authority management system based on manager self-issued tickets |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
GR01 | Patent grant | ||
GR01 | Patent grant |
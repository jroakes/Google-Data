US6904460B1 - Reverse content harvester - Google Patents
Reverse content harvester Download PDFInfo
- Publication number
- US6904460B1 US6904460B1 US09/663,554 US66355400A US6904460B1 US 6904460 B1 US6904460 B1 US 6904460B1 US 66355400 A US66355400 A US 66355400A US 6904460 B1 US6904460 B1 US 6904460B1
- Authority
- US
- United States
- Prior art keywords
- content
- directory
- network
- content directory
- objects
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime, expires
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
- H04L67/1001—Protocols in which an application is distributed across nodes in the network for accessing one among a plurality of replicated servers
- H04L67/1004—Server selection for load balancing
- H04L67/1008—Server selection for load balancing based on parameters of servers, e.g. available memory or workload
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q50/00—Systems or methods specially adapted for specific business sectors, e.g. utilities or tourism
- G06Q50/10—Services
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
- G06F16/9574—Browsing optimisation, e.g. caching or content distillation of access to content, e.g. by caching
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L45/00—Routing or path finding of packets in data switching networks
- H04L45/30—Routing of multiclass traffic
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L47/00—Traffic control in data switching networks
- H04L47/10—Flow control; Congestion control
- H04L47/12—Avoiding congestion; Recovering from congestion
- H04L47/125—Avoiding congestion; Recovering from congestion by balancing the load, e.g. traffic engineering
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L61/00—Network arrangements, protocols or services for addressing or naming
- H04L61/45—Network directories; Name-to-address mapping
- H04L61/4505—Network directories; Name-to-address mapping using standardised directories; using standardised directory access protocols
- H04L61/4511—Network directories; Name-to-address mapping using standardised directories; using standardised directory access protocols using domain name system [DNS]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L65/00—Network arrangements, protocols or services for supporting real-time applications in data packet communication
- H04L65/1066—Session management
- H04L65/1101—Session protocols
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L65/00—Network arrangements, protocols or services for supporting real-time applications in data packet communication
- H04L65/60—Network streaming of media packets
- H04L65/61—Network streaming of media packets for supporting one-way streaming services, e.g. Internet radio
- H04L65/611—Network streaming of media packets for supporting one-way streaming services, e.g. Internet radio for multicast or broadcast
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L65/00—Network arrangements, protocols or services for supporting real-time applications in data packet communication
- H04L65/80—Responding to QoS
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
- H04L67/1001—Protocols in which an application is distributed across nodes in the network for accessing one among a plurality of replicated servers
- H04L67/1004—Server selection for load balancing
- H04L67/101—Server selection for load balancing based on network conditions
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/14—Session management
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/60—Scheduling or organising the servicing of application requests, e.g. requests for application data transmissions using the analysis and optimisation of the required network resources
- H04L67/63—Routing a service request depending on the request content or context
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2216/00—Indexing scheme relating to additional aspects of information retrieval not explicitly covered by G06F16/00 and subgroups
- G06F2216/09—Obsolescence
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L2101/00—Indexing scheme associated with group H04L61/00
- H04L2101/60—Types of network addresses
- H04L2101/604—Address structures or formats
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L2101/00—Indexing scheme associated with group H04L61/00
- H04L2101/60—Types of network addresses
- H04L2101/618—Details of network addresses
- H04L2101/663—Transport layer addresses, e.g. aspects of transmission control protocol [TCP] or user datagram protocol [UDP] ports
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L61/00—Network arrangements, protocols or services for addressing or naming
- H04L61/50—Address allocation
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L61/00—Network arrangements, protocols or services for addressing or naming
- H04L61/50—Address allocation
- H04L61/5076—Update or notification mechanisms, e.g. DynDNS
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/04—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks
- H04L63/0428—Network architectures or network communication protocols for network security for providing a confidential data exchange among entities communicating through data packet networks wherein the data content is protected, e.g. by encrypting or encapsulating the payload
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/08—Network architectures or network communication protocols for network security for authentication of entities
- H04L63/083—Network architectures or network communication protocols for network security for authentication of entities using passwords
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
- H04L67/1001—Protocols in which an application is distributed across nodes in the network for accessing one among a plurality of replicated servers
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
- H04L67/1001—Protocols in which an application is distributed across nodes in the network for accessing one among a plurality of replicated servers
- H04L67/10015—Access to distributed or replicated servers, e.g. using brokers
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L69/00—Network arrangements, protocols or services independent of the application payload and not provided for in the other groups of this subclass
- H04L69/24—Negotiation of communication capabilities
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L69/00—Network arrangements, protocols or services independent of the application payload and not provided for in the other groups of this subclass
- H04L69/30—Definitions, standards or architectural aspects of layered protocol stacks
- H04L69/32—Architecture of open systems interconnection [OSI] 7-layer type protocol stacks, e.g. the interfaces between the data link level and the physical level
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L69/00—Network arrangements, protocols or services independent of the application payload and not provided for in the other groups of this subclass
- H04L69/30—Definitions, standards or architectural aspects of layered protocol stacks
- H04L69/32—Architecture of open systems interconnection [OSI] 7-layer type protocol stacks, e.g. the interfaces between the data link level and the physical level
- H04L69/322—Intralayer communication protocols among peer entities or protocol data unit [PDU] definitions
- H04L69/329—Intralayer communication protocols among peer entities or protocol data unit [PDU] definitions in the application layer [OSI layer 7]
Definitions
- This invention relates in general to electronic directories and, more specifically, to gathering information for a networked directory.
- crawlers associated with them that gather information across the Internet. When a crawler encounters information it is passed back to the electronic directory for cataloging. In this way, the crawlers consume tremendous bandwidth from the Internet that would otherwise be available to others.
- Information cataloged in electronic directories is often stale. Clicking on the links provided by the directory often reveals many links are broken and/or the information in the catalog no longer accurately describes the state of the referenced web site. More quickly than the changes are uncovered by crawling, the contents of the Internet change. For example, a web page that describes a weekly television show may change weekly, but the crawler will only catalog it at a much slower frequency. Broken links and stale information reduce the usefulness of electronic directories on the Internet.
- the invention relates to gathering information for a networked directory.
- a method for gathering information for a directory on a packet switched network is disclosed.
- a directory is determined for a first web site.
- the directory is reported to a second web site a first time.
- the directory is updated with the changes.
- the directory is reported to a second web site a second time.
- FIG. 1 is a block diagram of an embodiment of a content distribution system
- FIG. 2 is a block diagram of an embodiment of an active directory portion of the content distribution system
- FIG. 3A is a block diagram of an embodiment of an origin server portion of the content distribution system
- FIG. 3B is a block diagram of an embodiment of an external origin server portion of the content distribution system
- FIG. 4A is a block diagram of an embodiment of a content exchange portion of the content distribution system
- FIG. 4B is a block diagram of another embodiment of a content exchange portion of the content distribution system.
- FIG. 4C is a block diagram of an embodiment of a content exchange site including multiple content exchange servers
- FIG. 5 is a block diagram of an embodiment of a client computer portion of the content distribution system
- FIG. 6 is a block diagram of an embodiment of a content distribution system
- FIG. 7A is a first portion of a flow diagram of an embodiment of a process for distributing content to a user
- FIG. 7B is a second portion of the flow diagram of FIG. 7A ;
- FIG. 8 is a block diagram of an embodiment of a viewer object proxy
- FIG. 9 is a flow diagram of a viewer object proxy background application
- FIG. 10 is a flow diagram of a viewer object proxy request servicing
- FIG. 11 is a flow diagram of an embodiment of a method for tracking content between an origin server and a content exchange
- FIG. 12 is a flow diagram of an embodiment of a process for communicating information from a content manager to a server manager
- FIG. 13 is an embodiment of a flow diagram of a process for publishing information by a content manager to a server manager
- FIG. 14 is a block diagram of an embodiment of the content exchange which shows multiple providers connected through separate ports;
- FIG. 15 is a block diagram of another embodiment of the content exchange which shows multiple providers connected through separate addresses
- FIG. 16 is a hierarchical representation of an embodiment of grouping of providers and content exchanges.
- FIG. 17 is a hierarchical representation of another embodiment of grouping of providers and content exchanges.
- the present invention the accuracy of electronic directories and gathers the directory information more efficiently.
- Origin servers catalog and report their content objects to a central active directory according to a predetermined schedule or as changes occur.
- the task of gathering and reporting catalog information is offloaded from the central active directory to all the origin servers in the system.
- the content distribution system 100 includes an active directory 104 , one or more origin servers 108 , one or more client computers 112 , one or more content exchanges 116 , one or more external origin servers 118 , the Internet 120 and a crawling directory 124 .
- a particular client computer 112 interacts with the active directory 104 to select a content object for download.
- the object can be played during download if it is streaming media or can be stored for a later time.
- the content object could be any type of information, such as audio, video or data, that is available for download from a network.
- the request for the content object is forwarded to the appropriate origin server 108 along with preference information from the client computer 112 .
- the origin server 108 decides where the object is downloaded from. In order to provide sufficient QOS, any of the content exchanges 116 or even the origin server 108 itself could provide the object.
- the active directory 104 can be the interface to the client computer 112 for selecting a content object.
- Software for both the origin server 108 and optionally for the client computer 112 can be downloaded from the active directory 104 to enable the content distribution system 100 .
- Either a directory interface page or a search interface page may be used to determine the content object desired.
- the interfaces are maintained in an active manner to avoid broken links to content objects on the origin servers 108 .
- the active directory 104 can provide a path back to the proper origin server 108 .
- Other embodiments could have multiple active directories. Users of the system could be divided amongst the several active directories to distribute the loading. Additionally, the other active directories could be used for redundancy such that if one active directory were offline, the others would absorb the loading.
- the origin server 108 provides the source of a content object, directs a user to a preferred source of the content object and provides directory information to the active directory 104 .
- Content objects are introduced to the system 100 by origin servers 108 . Introduction involves selection by an origin server administrator of the content objects to make available to the active directory 104 . The administrator is person or system that manages the origin server 108 . The content objects could include previously stored information or a streaming feed of information. According to a predetermined cycle, the origin server 108 provides a catalog of the selected information that is updated as the content on the origin server 108 changes.
- the origin server 108 determines the preferred source to direct the client computer 112 in order to download the content object.
- the preference list of the client computer 112 , the loading of the content exchanges and the location of copies of the content object are all considerations of the origin server 108 in redirecting the client computer to the preferred source of the information. That source could be the origin server 108 itself or one of the content exchanges 116 .
- the user directs the client computer 112 to find the desired content object and subsequently download that object.
- the client computer 112 determines the content exchanges 116 that can deliver content with the adequate QOS.
- the process of determining a content exchange 116 with adequate QOS involves, for example, receiving test information from the content exchanges that are likely to produce the best results in preparing a preferred list.
- the user can modify the preferred list of content exchanges 116 if a customized approach is desired.
- the origin server 108 is deciding the source of the content object, the preference information is used to provide adequate QOS.
- the external origin servers 118 can be additional sources of content objects available to the client computer 112 .
- external origin servers 118 are coupled to a content exchange 116 .
- the content exchanges 116 are caches for content objects. A number of these content exchanges 116 are distributed to different points of the Internet 120 to cache content objects. Information can be cached based upon a number of considerations, such as the desirability of information to users, as a service to origin servers 108 who want their content readily available to users, or as a service to users who want improved QOS. Grouping of the content exchanges 116 could be in clusters or individually to service the demand of client computers 112 for content objects.
- a request by the content exchange 116 to other content exchanges is made for that content object. If no other content exchanges 116 have the content object, the active directory 104 is queried for the origin server 108 who is the source of the content object and the content object is downloaded from there. While the content exchange 116 is gathering the content object, the client computer 112 is receiving the initial portions that are available. The content object could be stored in pieces on several content exchanges 116 and the requesting content exchange 116 will retrieve those pieces to reassemble the whole content object as needed by the client computer 112 .
- a request by the content exchange 116 to an external origin server 118 can be made retrieve the requested content object.
- a crawling directory 124 is used to supplement the catalog information reported by the origin servers 108 .
- the active directory 104 could display content objects available from the origin servers 108 and other content objects uncovered by the crawling directory 124 .
- crawling directories 124 catalog the content objects and other information they encounter. For example, a keyword search of the catalog can direct the user to a content object not available from any origin server on the system 100 .
- One of the content exchanges 116 could be selected by the active directory 104 to cache the content object as the client computer 112 downloads it.
- only one crawling directory 124 is used in this embodiment, other embodiments could use a number of crawling directories to offer additional search results.
- the Internet 120 is comprised of servers linked together by routers. Data is divided into packets that travel through the Internet 120 by hopping from one router to the next until the destination is reached. Each packet may take a different route through the Internet and arrive at the destination at a different time. Additionally, some packets can be lost during travel through the Internet 120 as the bandwidth of any router saturates. As the number of hops between the source of a content object and the destination increases, so does the likelihood of excessive delay and packet loss.
- the smallest bandwidth between any two routers in the path defines the maximum bandwidth of that path.
- the bandwidth from the Internet 120 to the client computer has the least bandwidth allocation.
- some other hop between routers has the smallest bandwidth. Caching the content object in a content exchange 116 with a minimal amount of hops between the content exchange 116 and the client computer 112 improves the likelihood of adequate QOS.
- Downloading the content object at a desired data-rate that does not exceed the data-rate of the client computer to the Internet 120 is adequate QOS.
- the maximum QOS a user can expect is defined by the speed of their network connection, the processing power of their computer and other factors.
- the minimum QOS is subjectively defined by the user based upon the quality they desire within certain limits. For example, a user with a 400 Kbps network connection and a fast computer may have a choice of a 28 Kbps, 56 Kbps, or 128 Kbps stream for an audio clip from which the user chooses the 128 Kbps stream. So long as the datarate provided by the client computer is in the range of 128-400 Kbps, adequate QOS is possible for that stream.
- FIG. 2 a block diagram of an embodiment of an active directory portion 104 of the content distribution system 100 is shown. Included in the active directory 104 are a dynamic domain name server (DNS) 204 , a server manager 208 , a directory page 212 , a search page 216 , a download page 220 , a subscriber database 224 , a server database 228 , a content exchange database 232 , and a route database 234 .
- DNS dynamic domain name server
- the content distribution system 100 interacts with the active directory 104 to provide directory information to the user and assist in downloading a content object to the user.
- Both the user of the client computer 112 and the administrator of the origin server 108 are subscribers to the content distribution system 100 .
- Software is downloaded from a download page to the user and/or administrator.
- the software for the client computer 112 is optional in some embodiments and improves QOS.
- the software for the origin server 108 allows the active directory 104 to update the content available on the system 100 and to direct the client computer 112 to a preferred source for receiving that content.
- the client computer 112 attaches to the domain of the active directory 104 to find a desired content object.
- the user may use a directory page 212 or search page 216 to the find the content object.
- the search page 216 may be a traditional boolean search engine that accesses a catalog of the content objects provided by all origin servers 108 as well as information gathered from the crawling directory 124 .
- Other embodiments could only display information from the crawling directory 124 after a search of the content from the origin servers 108 is unsuccessful or omit information from the crawling directory 124 altogether.
- the catalog of content objects for all origin servers 108 is maintained in the server database 228 .
- the directory page 212 organizes the possible content objects in a hierarchy of categories that are organized by subject. For example, the first page might show a number of topics of general interest where the user selects sports. In the next page, which is one level down in the hierarchy, a number of sports are displayed where the user selects football. Down another level in the hierarchy, the user may select the San Diego ChargersTM to see another page of related content object links.
- the administrator categorizes the content on the origin server 108 to allow the directory page 212 to present it properly.
- the administrator can choose a category for content objects in an HTML SSI tag associated with that content object.
- This classification is harvested and stored on the active directory to allow presenting content objects in different categories.
- a moderator may describe and arrange content objects in the categories for the directory page 212 . For example, the moderator could mark certain content objects for more prominent display and/or add a review for the content object.
- the server manager 208 maintains information on all client computers 112 , all origin servers 108 , all external origin servers 118 , all content exchanges 116 , and all content objects on origin servers 108 .
- the information related to client computers 112 and origin servers 108 is maintained in the subscriber database 224 .
- the full name, a login name, a password, a unique identifier, token credits available, and other information is maintained in the subscriber database 224 for each user associated with a client computer 112 .
- This database 224 also holds the last time the origin server 108 was verified, an Internet Protocol (IP) address for the origin server 108 , the port the content manager server runs upon, on-/off-line status of the origin server 108 , a banner ad URL, a name for the origin server 108 , a description of the origin server 108 , the credits or tokens needed to use the origin server 108 or other billing model, and the number of connections or viewers allowed at one time.
- IP Internet Protocol
- Information on content objects for all origin servers 108 is maintained in the server database 228 .
- the origin server name, content object file name and path are stored along with category information, a brief description and keywords.
- the server database 228 is queried to provide content selections to the user during navigation of the directory and search pages 212 , 216 .
- the server manager 208 periodically interacts with the origin server 108 to get the most recent changes to the catalog of content objects and to determine if the origin server 108 has gone offline. Whenever an origin server 108 goes offline, the entries in the server database 228 corresponding to that origin server 108 are removed and the status information in the subscriber database 224 is updated.
- the entries in the server database 228 remain even after the origin server 108 goes offline.
- the status is updated to reflect that the content associated with the origin server is unavailable, but the information remains stored in the server database 228 . If the status is updated to online, the information is once again presented to users that are searching for content objects.
- an origin server 108 may indicate to the active directory 104 that it is going offline for a period of time. Presuming the period of time is short, the active directory can keep information in the server database 228 without presenting it to users.
- a list of the content exchanges 116 available to the system 100 is maintained by the server manager 208 in the content exchange database 232 .
- the content exchange database 232 can include a list of IP addresses for all possible content exchanges 116 within the content distribution system 100 .
- the content exchange database 232 can include a number of content exchange fields associated with each content exchange 116 .
- fields associated with each content exchange 116 in the content exchange database 232 can include a content exchange identifier, a content exchange site, a content exchange provider, a content exchange name, a content exchange location, a content exchange status, an icon, or any other desired or needed information.
- the content exchange identifier and content exchange site identify a unique content exchange 116 at a particular content exchange site.
- the content exchange provider is an indicator of the party responsible for the content exchange, such as XYZ company.
- the content name is a domain name and the content exchange location can be geographic coordinates for a content exchange 116 .
- the content exchange database 232 includes a content exchange identifier, a content exchange site, a content exchange IP address, a content exchange provider, a content exchange name, a content exchange location, and an icon for each content exchange 116 in the content exchange database 232 .
- the content exchange database 232 can be regionalized or partitioned by a variety of methods including, but not limited to, improved QOS criteria or subscription services criteria. Additionally, the content exchange database 232 can include a listing of alternative active directories 104 , origin servers 108 , or any other useful or necessary information.
- the content exchanges 116 in the system 100 regularly provide status to the server manager 208 . As content exchanges 116 become available or unavailable, their operational status is reported to the server manager 208 and recorded in the content exchange database 232 .
- the content exchange database 232 can include additional status information including content exchange 116 loading, capacity, utilization, and health.
- the routing database 234 includes a list of external origin servers 118 .
- the routing database 234 includes identification, status and organization information related to the external origin servers 118 .
- Identification information can include an IP address and a domain name for an external origin server 118 .
- Status information can include availability, loading or other status about the external origin server.
- Organization information can include a list of alternative external origin servers 118 .
- the routing database 234 includes an IP address and a domain name for each external origin server 118 .
- identifying an external origin server 118 in the routing database 234 is the mechanism for associating the external origin server 118 with the content distribution system 100 .
- each external origin server 118 in the routing database there are a list of user names that are allowed to use a content exchange 116 to access the information on the external origin server 118 .
- the user name is unique to the user of the client computer 112 .
- a list of external origin servers 118 a client computer can route through a content exchange is provided to the client computer 112 .
- the client computer 112 uses the information from the routing database to redirect user requests for an external origin server 118 to a content exchange 116 .
- bandwidth is offloaded from the external origin server 118 to the content exchange 116 .
- the user may pay the owner of the content exchange and/or the administrator of the origin server for this enhanced service.
- the dynamic DNS 204 provides an origin server name for each IP address for the origin servers 108 .
- the origin server name uniquely identifies the origin server 108 on the Internet 120 . This information is maintained in the subscriber database 224 .
- the content exchange 116 does not know the IP address of the origin server 108 that provided the content object to the content exchange 116 , but knows the origin server name.
- the dynamic DNS 204 is queried to determine the IP address or domain name of the origin server 108 that is the source of the content object. If a domain name is retrieved from the dynamic DNS 204 the IP address corresponding to that domain name is retrieved from a DNS.
- FIG. 3A a block diagram of an embodiment of an origin server portion 108 of the content distribution system 100 is shown.
- the origin server 108 is managed by an administrator and provides one source of content objects to the content distribution system 100 .
- QOS is provided by the origin server 108 directing the client computer to a content exchange 116 that can efficiently deliver the desired content object.
- Included in the origin server 108 are a content source 304 , a content server 308 , a content manager 312 , a local content catalog 316 , a content location database 320 , content exchange information 324 , and a health check 330 .
- Content is provided to the origin server 108 by a content source 304 .
- the content source 304 could be a live web cam, a video or audio feed, a data object, a data stream, a video tape or audio tape, an optical or magnetic disk, or any other content delivery mechanism.
- Content objects are delivered by the content source 304 to the content server 308 for possible distribution to the system 100 .
- Time and date information is maintained in each content exchange 116 for the content objects or portions of content objects maintained therein.
- the time and date information allows distinguishing content objects which may have the same origin sever name, path name and file name.
- Other embodiments could use any unique code such as a checksum, CRC or hash to uniquely identify a content object.
- All content objects of the origin server 308 are stored on the content server 308 .
- the administrator can select a content object or groups of content objects for publishing to the system 100 while leaving other content objects on the content server 308 that are unavailable to the system 100 .
- Some content objects are discreet files, but others are streams of content produced, for example, by live web cams.
- the software that runs the content server 308 may be integrated with the software of the content manager 312 .
- the content manager 312 publishes the desired content objects to the system 100 and directs users to the preferred content exchange 116 for downloading content objects associated with the content manager 312 .
- the content manager 312 selects content objects or groups of content objects by filename, directory or drive volume for publishing to the active directory 104 . Some content objects on the content server 308 may be excluded from publishing such that they are not available to the system 100 .
- the content objects selected for publishing to the system are maintained in a local content catalog 316 .
- Entries in the local content catalog 316 are kept current by the content manager 312 as the objects corresponding to those entries may become unavailable or updated.
- the content object file name and path are stored along with category information, a brief description and keywords.
- the local content catalog 316 is sent by the content manager 312 to the active directory 104 for entry to the server database 228 .
- changes to the local content catalog 316 are sent to the server database 228 to keep the directory information as current as possible. Updates could happen on a regular interval such as every two minutes and/or whenever a change in the local content catalog is made.
- the content manager 312 also knows the location of all portions of content objects associated with that content manager 312 . Upon attaching to the system 100 , the content manager 312 contacts each of the content exchanges 116 for status. The content exchange 116 periodically reports on its content object or content object portions to the associated content managers 312 . Amend with this information, the content manager 312 can direct a client computer 112 to a content exchange 116 that may have some or all of the desired content object available for download.
- Location information for content objects that is reported by all the content exchanges 108 is maintained by the content manager in the content location database 320 .
- the content manager 312 can determine the content exchanges 116 that contain a content object or a portion of a content object.
- the presence of the content object in a particular content exchange 112 can affect the routing determination.
- the content exchange information store 324 holds information on all active content exchanges 116 .
- the content exchange database 232 in the active directory 104 is downloaded into the content exchange information store 324 .
- All the content exchanges 116 listed in the content exchange information store 324 are queried after power-up for status information that is retained as content exchange information 324 .
- the status information includes the number of concurrent links used, total number of concurrent links allowed, bandwidth utilization, and cache churn rate.
- the churn rate of the cache is the amount of time unused data remains in the cache and is indicative of the loading of the cache. For example, data is usually flushed out of the cache quickly for content exchanges 116 that are busy relative to the amount of storage in the cache. However, some embodiments that could have sticky content objects that remains pinned in the content exchange 116 for a period of time regardless of use.
- the content manager 312 intelligently redirects the client computer 112 wanting a content object to the preferred source for that object.
- Preference information provided from the client computer 112 is used to determine the sources of the content object preferred by the client computer 112 . This information is used along with the current locations of the content object and the loading of the possible content exchanges in order to direct the client computer 112 to the preferred content exchange 116 for download of the content object.
- the content manager 312 can regulate access to content objects.
- a login dialog can be presented if the administrator has secured the content object.
- the user may enter a user name and/or password in the login dialog to enable redirection of the client computer 112 to a source for the content object.
- This user name and/or password is in addition to any required for the active directory 104 .
- the user name and/or password or login information is checked against a list of acceptable login information previously stored on the origin server 108 . Access to a whole origin server 108 or a volume, a directory or a content object on the origin server 108 may be regulated in this manner.
- the origin server 108 or active directory 104 allow the origin server 108 or active directory 104 to preload content objects on a content exchange 116 .
- the requests for content objects are monitored to determine desirability. Desirability information, billing information and/or other considerations are used to determine which content objects to preload on a content exchange 116 .
- Either the origin server 108 or active directory 104 can request the content objects from a content exchange 116 to preload them there. Periodically, the content objects could be requested to keep them loaded on the content exchange such that they are not unloaded because of inactivity.
- the health check 330 can be either a hardware or software application which provides operational characteristics of an associated origin server 108 .
- the health check 330 provides a single indication of origin server 108 status.
- the single indication is a normalized value between zero and one indicating a combination of origin server characteristics. For example, it could include a CPU load, a CPU temperature, a number of concurrent connections, and/or a number of requests an origin server is facilitating.
- the health check 330 could monitor characteristics of a content exchange 116 while running on another content exchange 116 or origin server 108 .
- FIG. 3B a block diagram of an embodiment of an external origin server portion 118 of the content distribution system 100 is shown.
- the external origin server 118 differs from the origin server 108 in that the external origin server 118 does not have content manager software installed upon it. Included in the external origin server 118 are a content server 308 and a content source 304 .
- the administration of the external origin server 118 determines one or more client computers 112 authorized for receiving content objects through a content exchange 116 .
- the routing database 234 is updated by the administrator to allow individual client computers 112 to access the content objects through a content exchange 116 .
- a web page on the active directory provides an interface to entering information on client computers 112 into the routing database 234 .
- Other embodiments could automate the interface between the external origin server 118 and the routing database 234 .
- the updates to the routing database 234 are downloaded and stored locally by client computer 112 . Subsequent attempts to access the external origin server 118 are redirected to a content exchange 116 to service that request. Redirection in this way allows an external origin server 118 to redirect client computers 112 to a content exchange 116 without assistance from content manager software.
- An external origin server 118 may have one or more content exchanges 116 assigned to carry content objects for the external origin server 118 .
- the routing database 234 could redirect subscribing client computers to one or more of these content exchanges 116 . If the client computer were allowed to use two or more of these content exchanges 116 , a client-side routing analysis would be performed on the two or more content exchanges to allow ranking of the relative QOS between them.
- the content objects of an external origin server 118 can be preloaded to a content exchange(s) allocated to provide those content objects.
- the active directory 104 can crawl the external origin server 118 to determine the content objects available from that server 118 .
- the available content objects may be added to the crawling directory 124 .
- the active directory 104 requests each content object from the associated content exchange(s) in order to cause loading of each content object on the associated content exchange(s). In this way, content objects are preloaded on the associated content exchanges.
- FIG. 4A a block diagram of an embodiment of a content exchange portion 116 of the content distribution system 100 is shown.
- the content exchange 116 caches content objects requested by client computers 112 under the control of the content manager 312 .
- Included in the content exchange 116 are a tracking system 402 , and a content node 406 .
- the tracking system includes a content tracker 404 , a health check 426 , status information 420 , a local content catalog 416 , and an origin server database 424 while the content node 406 includes a content controller 408 and a content store 412 .
- the health check 426 can be either a hardware or software application which provides operational characteristics of an associated content exchange 116 .
- the health check 426 provides a single indication of content exchange 116 status.
- the single indication may be a normalized value between zero and one indicating a combination of content exchange characteristics including, for example, a CPU load, a CPU temperature, a number of concurrent connections, and a number of requests a content exchange is facilitating.
- the health check 426 could monitor characteristics of a content exchange 116 while running on another content exchange 116 , origin server 108 or location.
- the content store 412 holds the content objects available for download to the client computers 112 from that content exchange 116 .
- the name of the origin server 108 providing the content object along with path information and the filename is stored with the content object in the content store 412 .
- the client computers 112 connect to the content store 412 and download the content object file or data stream.
- old content objects are removed.
- the age of a content object relates to the last time a content object was accessed. Some content objects on the store 412 never age such that they stay in the store 412 for a predetermined time.
- An origin server 108 could arrange for the content exchange 112 to store a content object for a predetermined period of time.
- the content object may not be currently loaded in the content store 412 .
- the content store 412 notifies the content controller 408 of the unfulfilled request for the content object.
- the content controller 408 locates missing content objects or portions thereof in other content exchanges 116 or from the content server 308 that originated the content object.
- the missing content objects are loaded into the content store 412 bye the content controller 408 such that the client computer 112 can download this information.
- the content controller 408 When a content object is missing from content store 412 , the content controller 408 first checks with other content exchanges 116 to determine if the object is available. If no content exchange 116 has the desired content object, the content sever 308 that originated the information is queried for the content object. The content store 412 does not include the IP address for the originating content server 308 so the dynamic DNS 204 is queried for that information. Given the origin server name, the dynamic DNS 204 provides the IP address such that the content controller 408 can request the content object from the proper content server 308 .
- the content tracker 404 reports to the system 100 the current items in the content store 412 and status information for the content exchange 116 .
- the local content catalog 416 records the origin server name, path and filename for each content object or portion of a content object in the content store 412 . As new items are added to and old items are removed from the content store 412 , the local content catalog 416 is updated.
- a content manager 312 connects to the system 100 , a query is made to all content trackers 404 to determine what portions of content objects are stored on the content stores 412 .
- the initial query provides a baseline to which the content tracker 404 updates as changes are made to the content store 412 .
- the changes are sent directly to each of the content managers 312 that has content stored in the content store 412 .
- the dynamic DNS 204 is used during this process to determine the IP address corresponding to the origin server name for each content object.
- the content tracker 404 also provides status information for the content exchange 116 to the content mangers 312 .
- the status information is sent periodically to each of the content managers 312 as a broadcast or multicast, for example, every five minutes and/or when changes occur.
- the status information could include the number of concurrent links to the content exchange currently in use, the total number of concurrent links allowed, the bandwidth utilization, and the cache churn rate.
- the status information is posted to a central location that the content manager 312 can query when determining where to send a client computer 112 for a downloading a content object.
- the content tracker 404 maintains the origin server database 424 to track the origin servers 108 active in the system 100 . After attaching to the system, all origin servers 108 identify themselves to the content trackers 404 . The content trackers 404 record the origin server name and IP address in the origin server database 424 . A query to the dynamic DNS provides the IP address for a given origin server name. If an origin server 108 notifies the content tracker 404 of impending unavailability or if the content tracker 404 cannot contact a particular origin server, the entry for that origin server is removed from the origin server database 424 . Additionally, the content corresponding to that origin server 108 may be purged from the content store 412 and the local content catalog 416 is updated. In some embodiments, the content object and content object portions are not purged, but are simply tagged for deletion as the storage space is needed.
- the content controller 408 can be instructed by the system 100 to acquire and retain predetermined content objects in the content store 412 .
- Content objects that are anticipated to be wanted can be preloaded in preparation for the demand.
- the desirability of a content object can be determined by monitoring click-throughs to those content objects from the search and directory pages 212 , 216 .
- content objects related to a famous person could be loaded onto content stores 412 immediately before a biography program on the famous person is aired on network television.
- users could subscribe to a service that loads content objects to some content exchanges 116 .
- a scheduled network program could be loaded to coincide with a TV broadcast the user could view over the Internet 120 in lieu of the TV broadcast. The content would be available without delay to the subscribed users.
- FIG. 4B a block diagram of another embodiment of a content exchange portion 116 of the content distribution system 100 is shown.
- This embodiment includes multiple content nodes 406 coupled to a single tracking server 402 .
- a content bus 428 allows content nodes 406 to check each others content stores 412 for missing content objects.
- the content bus 428 could also couple to other content notes in other locations.
- the content bus 428 may or may not travel in part over the Internet 120 .
- FIG. 4C a block diagram of an embodiment of a content exchange site 432 including multiple content exchange servers 116 is shown. Even though the content exchange site 432 includes multiple content exchange servers 116 , it appears to the system a single content exchange 116 . The load of the content exchange site 432 is distributed among the content exchange servers 116 .
- a switch 436 such as a layer four switch, distributes the content object requests to the content exchanges 116 and aggregates the spooled responses to the Internet 120 .
- FIG. 5 a block diagram of an embodiment of a client computer portion 112 of the content distribution system 100 is shown.
- the client computer 112 communicates to the Internet 120 in order to deliver content to a user.
- Included in the client computer 112 are a viewer object proxy 504 , a content processing program 508 , preference information 512 , a network interface 516 , and hosted server routing 520 .
- the content processing program 508 is typically software that interprets or processes a content object downloaded from the Internet 120 .
- Examples of content processing programs 508 include web browsers, file transfer protocol (FTP) software, gopher software, news (NNTP), mail programs, streaming media players, non-streaming media players, and other software.
- FTP file transfer protocol
- NTP news
- mail programs streaming media players, non-streaming media players, and other software.
- the Internet communication from content processing program 508 that is normally sent directly to the Internet is redirected to the viewer object proxy 504 .
- the viewer object proxy 504 serves as intermediary between the Internet 120 and the content processing program 508 . After installation of the viewer object proxy 504 , it determines its general location relative to known points on the Internet 120 . Content exchanges 116 that are reasonable candidates for providing sufficient QOS are tested to determine the number of hops necessary and the latencies between each content exchange 116 and the viewer object proxy 504 . A weighting of QOS factors, such as the number of hops and bandwidth achieved, is recorded as preference information 512 and is passed as meta-data to the content manager 312 in an HTTP header.
- meta-data could travel through a dedicated port, an IP address, a URL, a header, or other logical channel.
- the preference information 512 is the result of network analysis performed from the client computer perspective 112 .
- the preference information 512 is communicated to the content object manager 312 which in turn selects an appropriate content exchange 116 for the client computer 112 .
- the preference information 512 is updated using automated tests or is updated manually by the user. Subsequent tests take into account the previous results to efficiently consider preferred content exchanges. For example, the first analysis may check one hundred content exchanges, but a subsequent analysis could eliminate the poor performing content exchanges such that only fifty are analyzed.
- the preference information 512 includes a list of content exchanges 116 and their associated QOS values resulting from client-side network analysis.
- the multiple pathways are separated by port, IP address, server identification (ID), and/or other mechanisms.
- Client-side network analysis could be used to determine a QOS value associated with each pathway to an external origin server 118 or any source of a content object with multiple pathways.
- the origin server name is provided to the viewer object proxy 504 .
- the origin server name is used for the viewer object proxy 504 to query the dynamic DNS 204 for the IP address of the origin server 108 .
- the content processing program 508 is redirected to the content manager 312 for the desired content object.
- the content manager 312 is passed the preference information 512 to allow routing to the appropriate content exchange 116 .
- the preference information 512 includes the preferred ten content exchanges, but could be adjusted by the user.
- the viewer object proxy 504 can be HTTP-specific but protocol independent for routing information. Thus, routing information is transferred according to HTTP, but the actual routing information is protocol independent. However, one skilled in the art would recognize that the viewer object proxy 504 can also be configured to work with other network protocols as needed. For example, the viewer object proxy 504 can also be configured to operate in accordance with FTP, NNTP, RTP, RTSP, SMTP, or SHOUT etc.
- the client computer 112 includes a host server routing 520 database.
- This host server routing 520 can include information related to external origin servers 118 accessible by the client computer 112 .
- host server routing 520 is a portion of the routing database 234 included in the active directory 104 .
- the client computer 112 includes a network interface 516 that connects the viewer object proxy 504 to the Internet 120 .
- network interfaces 516 include analog modems, DSL modems, ISDN, cable modems, satellite modems, cellular modems, etc.
- the client computer is associated with a home user.
- the client computer could server digital movies to a theater or provide content objects to a corporate network user, a hotel patron or apartment complex.
- FIG. 6 a block diagram of an embodiment of a content distribution system 600 is shown. This figure depicts data flow between data blocks without showing transport over the Internet 120 . It is to be understood, however, that the Internet 120 is used in some embodiments. Also, the figure is somewhat simplified in that some blocks from FIGS. 2-5 and the external origin server(s) 118 and crawling directory 124 are not included to simplify the FIG. 6 .
- the network interface 516 is the connection to the Internet 120 for the client computer 112 .
- the client computer 112 connects to the directory and search pages 212 , 216 to allow the user to select content objects for download.
- redirection of the client computer 112 from the active directory 104 to the appropriate origin server 108 uses the dynamic DNS 204 .
- Preference information 512 is passed to the content manager 312 to assist its selection of the source for the content object.
- the content object is downloaded from one of the content exchanges 116 or from the content server 308 .
- the active directory 104 interacts with the other modules in the system 600 .
- the client computer 112 accesses the directory and search pages 212 , 216 to select a content object.
- the content tracker 404 and content manager 312 respectively provide status and catalog information to the server manager 208 .
- Account information is provided to the server manager 208 by the administrator of the origin server 108 and by the user of client computer 112 to maintain the subscriber database 224 . Redirection from the origin server name to the IP address of the origin server 108 is provided to the viewer object proxy 504 , the content tracker 404 and the content controller 408 by the dynamic DNS 204 .
- the origin server 108 communicates with the server manager 208 , the client computer 112 , the content tracker 404 , the content store 412 , and the content controller 408 .
- the local content catalog 316 is provided to the server manager 208 from the content manager 312 in order to maintain the server database 228 with current content information.
- Preference information 512 is provided to the content manager 312 from the client computer 112 to facilitate selection of a source of the content object.
- the content tracker 404 interacts with the content manager 312 to know what content objects are stored on the content exchange 116 . Content objects are read from the content server 308 by either the content store 412 or the client computer 112 .
- the content exchanges 116 interact with the other modules in the system 600 as well. Status information is provided to the active directory 104 and/or the content manager 312 .
- the dynamic DNS is used by both the content controller 408 and the content tracker 404 to find the IP address of an origin server 108 that contains a content object.
- a selected content exchange may contact other content exchanges when an object is needed for the content store 412 . If the other content exchanges do not have the content object, the content controller 408 requests the object from the content server 308 for delivery to the selected content store 412 .
- FIGS. 7A-B a flow diagram of an embodiment of a process for distributing content to a user is shown.
- the user and administrator respectively download and install software for the client computer 112 and origin server 108 .
- the administrator chooses content on the content server for publishing to the system 600 .
- the viewer object proxy 504 automatically interrogates nearby content exchanges 116 for adequate QOS.
- the depicted process begins in step 704 where the user directs a web browsing content processing program 508 to the directory or search page 212 , 216 of the active directory 104 .
- the user queries a search engine on the search page 216 using a boolean query in step 708 to find a content object.
- the search engine would search the server database 228 for hits and may also search a crawling directory 124 in step 712 .
- the user could navigate the directory page 212 to find a desired content object.
- the search or directory page 212 , 216 presents links for each of the content objects that the user might select in step 716 .
- Each link includes the origin server name 108 , port, path and name for the content object. Given the choices available, the user may select one of the links corresponding to the desired content object in step 720 .
- the dynamic DNS 204 is queried by the viewer object proxy 504 to determine the IP address of the origin server name from the link. Once the IP address is known, the content processing program is redirected to the IP address retrieved from the dynamic DNS 204 and the path and filename from the link.
- the preference information 512 is forwarded to the content manager 312 in step 724 .
- the content manager 312 analyzes the content location database 320 , the preference information 512 and the status information to determine the source of the content object to redirect the client computer 112 to in steps 728 and 732 .
- the content server 308 may be chosen if the content manager 312 determines it can provide adequate QOS or superior QOS. In some embodiments, the content server 308 is only considered as a source if there are no content exchanges 116 that can provide adequate QOS. If the content server 308 is chosen, the origin server 108 provides the content object to the client computer 112 in step 740 .
- the content processing program 508 is redirected to the chosen content store 412 and processing continues in step 744 of FIG. 7 B.
- the content processing program 508 requests the content object in the link from the content store 412 in step 744 . If the whole content object is in the content store 412 , the object is downloaded from that content store 412 to the client computer in steps 748 and 752 .
- a whole copy of the content object is assembled in the content store 412 if any portion of the content object is missing.
- the building of the whole content object happens transparently to the user.
- the content controller 408 queries the other content exchanges 116 to determine which have the missing portion of the content object.
- the content object is reassembled in the content store 412 from beginning to end such that the beginning is available as soon as possible for download by the client computer 112 .
- the missing portions are retrieved from each content exchange 116 in step 764 until the whole content object is in the content store 412 . If no other content exchange 116 has the missing portion of the content object, a query is made to the origin server 108 for the missing portion, in step 768 .
- the dynamic DNS 204 is queried to determine the IP address of the origin server name for the content object.
- the content controller 408 is directed to the origin server 108 with the content object in step 772 by the dynamic DNS 204 .
- the missing portion is downloaded from the content server 308 of that origin server 108 in step 776 . Processing loops back to step 748 to retrieve any other missing portions.
- This process of searching for portions continues in an interative manner until all missing portions are copied to the content store 412 .
- this embodiment sequentially retrieves the missing portions, other embodiments could determine the location of the missing portions and retrieve them in parallel, in any order or in the order found.
- the viewer object proxy 504 includes the following functions: a path evaluator 850 , a weighting function 852 , a display function or routine 854 , a look ahead logic function 856 , a standard web access function 858 , a decompression function 860 , a decryption function 862 , an electronic commerce function 866 , a security function 864 , and a main function 868 which interfaces the various other functions in the viewer object proxy 504 . It should be recognized that the preceding list of possible functions included in the viewer object proxy 504 is merely illustrative and that one skilled in the art would recognize other functions relevant to the viewer object proxy 504 .
- a look ahead logic function 856 can be implemented.
- the look ahead logic function 856 anticipates the user's next browse or move and fetches the related browse information for storage on the client computer 112 before an actual request by the user. The pre-fetched information is retained until the information is actually requested by the user. If the look ahead logic function 856 incorrectly anticipates the user's next browse, the pre-fetched data is discarded.
- the look ahead logic function 856 performs a pre-fetch of a commonly accessed page lower in the hierarchy of the directory page 212 (as described with reference to FIG. 2 ). By pre-fetching information, the look ahead logic function 856 is able to reduce access latency.
- the decompression function 860 and the decryption function 862 are provided. These functions 860 , 862 provide capability to decompress and decrypt information received from either an origin server 108 , a content exchange 116 , an external origin server 118 , or any other server on the Internet 120 .
- the viewer object proxy 504 can negotiate the form of compression and encryption that will be used during a content object transfer with a server on the Internet 120 .
- the viewer object proxy 504 tells any contacted server what compression and encryption are supported. This does not require contacted servers to have special software, but QOS can be increased where a contacted server supports the same compression, encryption and security functions supported by the viewer object proxy 504 .
- many communication mechanisms can be used to decompress and decrypt. For example, FTP, NNTP, RTP, RTSP, or SMTP could be used.
- decryption and decompression negotiation is accomplished by way of HTTP. More specifically, the negotiation is achieved via an extended HTTP header.
- the user it is possible for the user to disable either or both the decompression function 860 and the decryption function 862 . If the respective functions 860 , 862 are disabled by the user, the viewer object proxy 504 will not negotiate for use of the disabled function.
- the viewer object proxy 504 includes the security function 864 .
- the security function 864 operates to permit or deny access when appropriate. More specifically, the security function 864 provides control such that content objects will be decrypted only if authority is given by a trusted system. For example, a trusted system may only provide authority to accept and/or decrypt data where a specific dongle type hardware device is attached to the client computer 112 and the attachment condition is reported by the security function 864 via the viewer object proxy 504 .
- the viewer object proxy 504 includes the electronic commerce function 866 .
- the electronic commerce function 866 can be integrated tightly with an electronic commerce engine resident on the Internet 120 .
- users are provided a mechanism for purchasing content objects. For example, token credits stored in the subscriber database 224 could be credited to origin servers 108 to download content objects.
- the viewer object proxy 504 can include the standard web access function 858 which provides access to Internet domains residing outside of the content distribution system 100 .
- the standard web access function 858 determines if the content object was previously saved on the client computer 112 . If the requested content object was previously saved, the saved content object is returned by the standard web access function 858 to satisfy the user request. If the requested content object was not previously saved, the user request is passed on by the standard web access function 858 and the content object is retrieved as if the content processing program 508 had accessed the Internet 120 directly.
- the path evaluator 850 , weighting function 852 and display function or routine 854 are described in relation to a flow diagram of a viewer object proxy background application 900 included as FIG. 9 .
- the background application 900 utilizes various viewer object proxy 504 functions to determine desirable content exchanges 116 capable of providing sufficient QOS to the client computer 112 .
- the desirable content exchanges 116 are stored in memory as preference information 512 and subsequently communicated to the content object manager 312 .
- a setup 982 is performed at startup 980 and the display routine 854 is launched.
- the setup 982 can include requesting and initializing graphics memory in the client computer 112 , initializing a proxy, and launching the display routine 854 . Further, setup 982 may include any processes for initializing a graphics display or a proxy.
- an information request and receive 984 is performed.
- the content exchange database 232 from the active directory 104 is downloaded to the client computer 112 .
- content exchange databases 232 can be regionalized or partitioned by a variety of methods including, but not limited to, improved QOS criteria or subscription services criteria.
- information request and receive 984 results in retrieval of a content exchange database 232 containing only content exchanges 116 geographically proximate to client computer 112 .
- a retrieved content exchange database 232 may include only content exchanges 116 located in North America.
- information request and receive 984 results in retrieval of a content exchange database 232 containing only content exchanges 116 which support a particular subscription service or which are attributed to a particular provider.
- the content exchange database 232 could be limited to content exchanges that are attributed to a particular Internet Service Provider, or that support a particular protocol, or even that provide content objects in a particular language.
- information request and receive 984 results in retrieval of a content exchange database 232 containing all possible content exchanges 116 .
- information request and receive 984 further includes requesting and receiving some portion of the routing database 234 which includes routing information for external origin servers 118 .
- the received portion of routing database 234 is stored to memory in the client computer 112 as hosted server routing 520 .
- information provided through information request and receive 984 can be used to generate a display for the user.
- the location coordinates and icon information provided as part of the content exchange database 232 can be used as part of a graphical presentation provided to the user via the display function or routine 854 .
- the graphical presentation could show the user what is available on the content distribution system 100 or elsewhere on the Internet 120 . Further, the graphical presentation could show various paths from the client computer 112 to multiple content exchanges 116 .
- physical locations of content exchanges 116 and origin servers 108 are superimposed on a world map which is displayed to the user.
- information from the content exchange database 232 can be used to perform a path QOS evaluation 986 . More specifically, QOS for paths between the client computer 112 and each content exchange 116 or node specified in the content exchange database 232 can be determined and stored in memory in the client computer 112 .
- receiving a list of content exchanges 116 through information request and receive 984 is illustrative of a method for determining potential content exchanges 116 .
- the list could be based on knowledge of the viewer object proxy 504 obtained during earlier content object transfers inside or outside of the content distribution system 100 .
- the path QOS evaluation 986 is performed for paths associated with all content exchanges 116 listed in the content exchange database 232 .
- a path associated with the first content exchange 116 listed in the content exchange database 232 is analyzed.
- path QOS evaluation could be performed on any content object source or transfer node and is not necessarily limited to evaluating content exchanges 116 and origin servers 108 .
- a transfer node can be a content exchange 116 or other server capable of storing and transferring content objects. It should be recognized that as it is used, in relation to path QOS evaluation, the term path incorporates routing.
- only a subset of the content exchanges 116 listed in the content exchange database 232 are evaluated. Evaluating only a subset of content exchanges 116 from the content exchange database 232 provides more efficient path QOS evaluation 986 . This increased efficiency can be achieved where it is known that certain content exchanges 116 are unlikely to provide sufficient QOS and are thus not worth evaluating, Thus, for example, where the client computer 112 is in North America and it is perceived that content exchanges outside North America are unlikely to provide sufficient QOS, path QOS evaluation 986 is only performed for content exchanges 116 located in North America.
- a site based path QOS evaluation 986 can be performed where it is perceived that different types of content exchanges 116 are likely to provide similar service. More specifically, one content exchange 116 associated with each content exchange site 432 represented in the content exchange database 232 is evaluated. From this, it can be determined which content exchange sites 432 are likely to provide sufficient QOS. Subsequently, content exchanges 116 associated with the content exchange sites 432 determined likely to provide sufficient QOS are each individually analyzed. In this way, content exchanges 116 associated with content exchange sites 432 unlikely to provide QOS are not evaluated.
- path QOS evaluation 986 only for content exchanges 116 that support particular protocols.
- path QOS evaluation 986 may only be performed for content exchanges 116 at a content exchange site 432 where a particular protocol is supported by at least one content exchange 116 at the site 432 .
- path QOS evaluation 986 is performed only once for a particular content exchange 116 .
- path QOS evaluation 986 is only performed for one IP address, port or name. This eliminates redundant evaluation during path QOS evaluation 986 .
- path QOS evaluation 986 could be performed for multiple IP addresses, ports or names for the same content exchange 116 where it is perceived that a different QOS is possible.
- Selecting which subset of content exchanges 116 in the content exchange database 232 to evaluate can be based on a criteria supplied by the client computer 112 and based on client computer experience, by the active directory 104 , by a content exchange 116 , origin server 108 , and/or a user.
- path QOS evaluation 986 is accomplished using a combination of network analysis methodologies including, but not limited to, traceroute, bandwidth test via file transfer, server health check, server load/resource check, ping, path difference, Border Gate Protocol (BGP) routing information, and port response time.
- network analysis methodologies including, but not limited to, traceroute, bandwidth test via file transfer, server health check, server load/resource check, ping, path difference, Border Gate Protocol (BGP) routing information, and port response time.
- Traceroute includes any analysis which returns a route that packets take between a particular content exchange 116 and the client computer 112 . Typically, traceroute returns the number of hops traversed, the IP addresses of traversed hops, and the time required by a traverse between the client computer 112 and the content exchange 116 .
- Bandwidth test via file transfer includes any analysis where a bulk information transfer is performed between the content exchange 116 and the client computer 112 .
- various indices of performance are derived including, but not limited to, the time required to perform the bulk transfer.
- data transferred between the content exchange 116 and the client computer 112 is highly random. The random nature of the data reduces the impact of any compression occurring between the client computer 112 and the content exchange 116 .
- Ping includes any analysis where information is sent by the client computer 112 to a particular content exchange 116 and the client computer 112 awaits a response from the content exchange 116 .
- ping is performed via UDP or any other lossy protocol (i.e. a protocol which does not guarantee a response). Ping is useful to verify whether the content exchange is operational. Alternatively, the time required to receive the reply can be used as an indication of QOS.
- Server health check and server load/resource check can include any analysis which determines various heuristics related to the health, loading and available resources of a content exchange 116 , origin server 108 , or other transfer node.
- a content exchange 116 is queried to determine various operating characteristics including, but not limited to: an average and peak CPU load, a CPU temperature, a number of pages transferred between the hard drive and RAM to resolve cache misses, a rate at which the content exchange 116 is issuing read and write operations to the hard drive, a number of requests the content exchange 116 is currently servicing, an average number of users accessing the content exchange, a number of concurrent connections, a rate of inputs and outputs to/from the content exchange 116 , an average size of a content object requested from the content exchange 116 , a size of a local memory, including RAM and hard drive memory, associated with the content exchange 116 , an average content object size included in the local memory, a number of content objects included in the local memory, an average time a content object remains in
- the aforementioned heuristics can be determined using the health check 330 , 426 associated with a particular content exchange 116 or origin server 108 .
- health check 330 , 426 are software applications running on a content exchange 116 and origin server 108 respectively.
- the health check 330 , 426 may provide a CPU load, a CPU temperature, a number of concurrent connections, and a number of requests the content exchange 116 or origin server 108 is currently servicing.
- viewer object proxy 504 queries the content object exchange 116 via HTTP to retrieve server health check heuristics.
- server health heuristics including, but not limited to, FTP, NNTP, RTP, RTSP, SHOUT, SMTP, or connecting to the node through a designated port.
- a request for status by the viewer object proxy 504 to the health check 330 , 426 results in a single status indicia being returned.
- the single status indicia is between one and zero with one indicating poor characteristics and zero indicating good characteristics. Good and poor characteristics are determined based on the ability or capability for a content exchange 116 or other transfer node to act as a content object cache.
- an indicia of 0.9 indicates an inability to maintain a content object local to a content exchange 116 for an extended time.
- an indicia of 0.2 indicates an ability to maintain a content object for an extended time.
- the single status indicia includes the following characteristics in combination: an average CPU load, a size of a local memory associated with the content exchange 116 , an average content object size included in the local memory, and an average time a content object stays in the local memory.
- the combination of these individual characteristics serve to rate the ability of the content exchange to act as a content object cache.
- each of the characteristics is first normalized to a percentage of a predetermined use level. The normalizing is performed such that 100% indicates the best possible characteristic value and zero indicates the worst characteristic value.
- the normalized values are multiplied by a predetermined percentage of the overall status indicia and the multiplied values are aggregated to create a single indicia between one and 0. It should be recognized that a number of alternative sets of characteristics can be used to form a single indicia. For example, an embodiment could combine an average CPU load, a CPU temperature, an average number of users connected to the source, and a rate of inputs and outputs to/from a content exchange to form the single indicia.
- the following provides an example of forming the single indicia where: a CPU load of 90% of maximum, an average size of a content object normalized to 20%, a size of a local memory normalized to 30%, included in the local memory, an average content object size included in the local memory normalized to 80%, and an average time a content object stays in the local memory normalized to 50% are found.
- These normalized values can be aggregated such that each of the characteristics plays an equal role in the single indicia.
- each of the normalized values are multiplied by 20% and subsequently aggregated to create the single indicia.
- the single indicia in the example is 54% or 0.54. It should be recognized that the examples and embodiment are merely illustrative and that a number of alternative methods for combining multiple characteristics into a single indicia are possible.
- BGP routing information includes any information returned as a result of a Border Group Protocol analysis. In general, this information is related to path topology and includes, but is not limited to an Autonomous System (AS) Path Attribute, and AS Next Hop.
- AS Autonomous System
- Path difference includes any analysis which determines a bandwidth or latency difference between alternative paths connecting the content exchange 116 and the client computer 112 .
- Port response time includes any analysis which provides an indication of port response.
- the test provides information related to the response time of a content exchange 116 port.
- port time can include any analysis where the time required to transfer a zero length message is determined.
- the result of a zero length transfer is reported as the number of exchange messages per second. The number of exchanges per second can be used to infer content exchange 116 latency.
- any of the aforementioned methodologies may be combined to provide an indicator of QOS or transmission quality for a path connecting a content exchange 116 and the client computer 112 .
- any of the aforementioned methodologies may be combined with other network analysis methodologies to provide QOS evaluation 986 .
- ping, traceroute and health check are used in combination to provide a QOS evaluation.
- all of the aforementioned methodologies are combined to determined QOS.
- each of the methodologies is performed and a QOS factor for each methodology is returned.
- the QOS factors from each of the methodologies are then normalized and aggregated to form a single QOS factor for each analyzed path. Normalizing the QOS factors can be done by equally weighting each of the methodologies.
- each of the returned values is compared to a respective predetermined maximum value such as: (1) thirty hops for traceroute, (2) 500 msec for bandwidth test via file transfer, (3) one for server health check, (4) 100% for server load/resource check, (5) six hops for BGP routing information, and (6) 100 msec for port response time.
- each of the returned values are divided by their respective predetermined maximum.
- port response time yields 0.45 3.78 as an overall QOS factor. This QOS factor is then used to compare between various content exchanges 116 .
- values returned from each of the methodologies are disparately weighted prior to aggregation.
- Weighting factors can be provided by a user to affect the QOS factor returned. Such an embodiment is described using the values from the previous illustration where the normalized values returned from the various methodologies are: (1) 0.33 for traceroute, (2) 0.6 for bandwidth test via file transfer, (3) one for server health check, (4) 0.65 for server load/resource check, (5) 0.75 for BGP routing information, and (6) 0.45 for port response time.
- weighting factors are used: one for traceroute, three for bandwidth via file transfer, one for server health check, four for server load/resource check, one for BGP routing information, and three for port response time are used.
- Each of the normalized values are multiplied by their respective weighting factor to yield: (1) 0.33 for traceroute, (2) 1.8 for bandwidth test via file transfer, (3) one for server health check, (4) 2.6 for server load/resource check, (5) 0.75 for BGP routing information, and (6) 1.35 for port response time.
- the weighted normalized values are aggregated to provide 7.83 as an overall QOS factor. Again, this QOS factor is used to compare between various content exchanges 116 .
- the user can manually select a preset order of content exchanges 116 , or provide only a single acceptable content exchange 116 either of which effectively overrides the automated analysis of path QOS evaluation 986 .
- a user can achieve any desired result by either allowing fully automated generation of QOS factors for content exchanges 116 , by manually weighting the path QOS evaluation 986 to effect QOS factors returned for content exchanges 116 , or by overriding the automatic analysis and providing a list of desired content exchanges 116 .
- a multi-tiered path QOS evaluation 986 can be performed by using a subset of the aforementioned methodologies to perform a coarse QOS analysis followed by a fine QOS analysis on a limited number of content exchanges 116 .
- This multi-tiered analysis increases efficiency of path QOS evaluation 986 by avoiding fine QOS analysis of content exchanges unlikely to provide sufficient QOS.
- both ping and traceroute are applied to perform coarse QOS analysis for all content exchanges 116 included in content exchange database 232 .
- a pre-determined number of content exchanges 116 preferably less than twenty-five, which provide sufficient QOS according to coarse QOS are evaluated using server health check as the fine QOS analysis.
- results of the fine QOS analysis define the content exchanges 116 which provide sufficient QOS. It should be recognized that any combination of methodologies can be applied to perform either fine or coarse QOS analysis. Alternatively, it should be recognized that either fine or coarse QOS analysis can themselves involve multi-tiered analysis.
- the content exchanges 116 associated with the evaluated paths are prioritized 990 .
- Content exchanges 116 are prioritized based upon the QOS factor determined in path QOS evaluation 986 .
- a predetermined number of content exchanges are chosen, ranked and stored as preference information 512 .
- the preference information 512 includes the preferred ten content exchanges 116 .
- the preference information 512 could include content object sources, origin servers 108 , as well as content exchanges 116 .
- Preference information 512 includes a list of content exchanges 116 which provide sufficient QOS as determined by network analysis performed from the client computer's 112 perspective. By analyzing QOS from the client computer's 112 perspective, QOS can be improved.
- preference information 512 is used to form a subset of content exchanges 116 to be analyzed by path QOS evaluation 986 .
- content exchanges 116 may be tested that exist at the same site or are associated with the same provider as content exchanges 116 included in the preference information 512 .
- content exchanges 116 that are most likely to provide sufficient QOS are re-evaluated in subsequent path QOS evaluation 986 .
- content exchanges 116 included in the preference information 512 can be analyzed by path QOS evaluation 986 along with other content exchanges 116 that have been added to the content exchange database 232 since the last creation of the preference information 512 .
- experience of the viewer object proxy 504 can be used to effectuate a more efficient path QOS evaluation 986 .
- the preceding embodiments are merely illustrative and that many algorithms exist for selecting content exchanges 116 to increase efficiency of path QOS evaluation 986 .
- prior operation of path QOS evaluation 986 may have returned sufficiently poor results for a particular content exchange 116 , that it is never again analyzed, but rather presumptively rejected. In some embodiments, this presumptive rejection can be manually overridden by the user.
- Results of path QOS evaluation 986 can be displayed 992 for the user.
- the results are displayed both to entice a user to keep the viewer object proxy 504 application running on the desktop of the client computer 112 and to aid the user in modifying the weighting function 852 to manually control content exchange 116 selection.
- the display function 854 provides, among other things, a regional map illustrating hops between the client computer 112 and a selected content exchange 116 along with statistics describing operating characteristics.
- preference information 512 can be updated either at the users request 994 or based upon a time interval 996 .
- preference information 512 is updated at time interval 996 , which is set at 3600 seconds.
- the viewer object proxy 504 can provide foreground operations including, but not limited to, servicing user requests for content objects from the content distribution system 100 , the external origin servers 118 , and the Internet 120 along with servicing electronic commerce request. More specifically, the viewer object proxy 504 can handle electronic commerce requests are previously described in relation to the electronic commerce function 866 .
- Accessing content objects from the content distribution system 100 , external origin servers 118 and the Internet 120 are described in relation to a flow diagram of an embodiment of a viewer object proxy request servicing 1000 included as FIG. 10 .
- a the user request 1010 for a content object is received by the viewer object proxy 504 .
- the content distribution system 100 is accessed through the content processing program 508 . More specifically, the content processing program 508 , in reaction to a user command, issues a request for a content object.
- the request for a content object is passed to the viewer object proxy 504 as the user request 1010 .
- viewer object proxy 504 determines if the received the user request 1010 can be fulfilled by content distribution system access 1020 . In an embodiment, this determination is done by comparing a source location of the user request 1010 with a known list of source locations associated with the content distribution system 100 . If the source location of the user request 1010 matches a source location associated with the content distribution system 100 , the request can be fulfilled by content distribution system access 1020 . Accordingly, content distribution system service 1030 is performed to fulfill the user request 1010 .
- the viewer object proxy 504 performs content distribution system service 1030 by communicating the preference information 512 to an origin server 108 .
- the origin server 108 selects a content exchange 116 or origin server 108 that can provide sufficient QOS for the user request 1010 .
- the origin server 108 then communicates the address of the selected content exchange 116 or origin server 108 to the viewer object proxy 504 .
- the origin server 108 dynamically writes HTML to provide viewer object proxy 504 with the address of the selected content exchange 116 or origin server 108 .
- the viewer object proxy 504 negotiates compatible compression, encryption and security with the selected content exchange 116 or origin server 108 .
- the viewer object proxy 504 could itself select the content exchange 116 to provide a requested content object by using the preference information 512 .
- the viewer object proxy 504 fulfills the user request 1010 by requesting content objects from the selected content exchange 116 or origin server 108 .
- decompression, decryption and security are provided by the viewer object proxy 504 according to the negotiated format.
- the origin server 108 is able to select a content exchange 116 capable of providing sufficient QOS.
- the viewer object proxy 504 next determines if the user request 1010 can be fulfilled by external origin server access 1040 . In an embodiment, this determination is done by comparing a domain name indicated in the user request 1010 with domain names for external origin servers 118 provided in hosted server routing 520 . If the domain name indicated in the user request 1010 matches a domain name of an external origin server 118 , the user request 1010 can be fulfilled from the matched external origin server 118 by performing external origin server service 1050 . Accordingly, external origin server service 1050 is performed to fulfill the user request 1010 .
- the user request 1010 may include a directory name, a machine name, an IP address, or another identifier which is compared with a corresponding identifier for external origin servers included in hosted server routing 520 .
- the viewer object proxy 504 performs external original server service 1050 by accessing a content exchange 116 known to provide content objects sourced from the matched external origin server 118 .
- the viewer object proxy 504 redirects the user request 1010 from the matched external origin server 118 to the content exchange 116 .
- This redirection is transparent to both the matched external origin server 118 and to the content processing program 508 .
- the viewer object proxy 504 negotiates compatible compression, encryption and security with the selected content exchange 116 .
- the content exchange 116 fulfills the user request 1010 according to the negotiated compression, encryption and security.
- the content exchange 116 requests the desired content object from the matched external origin server 118 .
- the requested content object is provided to the client computer 112 by the content exchange 116 .
- decompression, decryption and security are provided by the viewer object proxy 504 according to the negotiated format.
- a content object provider maintaining an external origin server 118 is not burdened with distributing content objects.
- the viewer object proxy 504 could perform external origin server service 1050 by communicating preference information 512 to an origin server 108 .
- the origin server 108 selects a content exchange 116 or an origin server 108 that can provide sufficient QOS for the user request 1010 .
- the origin server 108 communicates an address to the selected content exchange 116 or origin server 108 to the viewer object proxy 504 .
- the viewer object proxy 504 then fulfills the user request 1010 by requesting content objects from the selected content exchange 116 or origin server 108 .
- the selected content exchange 116 or origin server 108 requests the desired content object from the matched external origin server 118 and subsequently fulfills the user request 1010 by providing the requested content object to the viewer object proxy 504 .
- better QOS is achieved.
- a content object provider maintaining an external origin server 118 is not burdened with distributing content objects.
- the user request 1010 is passed through to the Internet 120 .
- the user request 1010 passed through 1060 to the Internet 120 is handled as described in relation to the standard web access function 858 .
- FIG. 11 an embodiment of a method for tracking content between an origin server 108 and a content exchange 116 is shown. Even though this figure primarily shows interaction between a single origin server and a single content exchange, it is to be understood that each origin server contacts many content exchanges and each content exchange contacts many origin servers. The interaction between all the origin servers 108 and all the content exchanges 116 allows the system 600 to track content object portions.
- step 1104 the content exchange 116 becomes available after beginning operation.
- the content exchange 116 is empty and waits for client computers 112 to request content.
- the content store 412 fills itself with content objects or portions of content objects.
- the origin server 108 of this embodiment begins operation and becomes available.
- the origin server 108 publishes its local content catalog to the active directory 104 and identifies itself to all content trackers 404 in the system 600 .
- a content exchange database 232 of operating content exchanges 116 is available for querying such that the content manager 312 knows the addresses of the content trackers 404 .
- Each content exchange 116 maintains an origin server database 424 of the origin servers 108 that have contacted it. Before an origin server 108 goes offline, the origin server 108 will attempt to contact all content exchanges 116 to notify them 116 of this change in status. Offline origin servers 108 are removed from the origin server database 424 . Whenever an origin server 108 fails to respond to the content exchange 116 sending status, that origin server 108 is presumed offline and is removed from the origin server database 424 .
- the origin servers 108 that have content objects or portions of content objects are notified such that the content exchange information 324 and the content location database 320 in each origin server 108 can remain current. Additionally, the active directory 104 is notified so the content exchange database 232 will accurately reflect the content exchanges 116 available to the system 600 .
- Each content tracker 404 that is contacted in step 1108 responds to the content manager 312 with status information 420 and any content objects associated with that content manager 312 in step 1112 . Since the content manager 312 is just coming online, it is unlikely there are any content objects on the content store 412 that originated from the content server 308 associated with that content manager 312 .
- the status information 420 from each content exchange 116 that responds is stored by the content manager 312 as content exchange information 324 . In various embodiments, the status information 420 may be reported with or without content catalog information 416 .
- the content exchange information 324 is used to determine the loading for the content exchanges under consideration.
- each content tracker 400 updates all active content managers 312 with status information such that the content exchange information 324 is current.
- Alternative embodiment content trackers 404 could provide updated status information 420 when significant changes in status occur rather than periodically.
- the content manager 312 sends a client computer 112 to the content exchange 116 to fulfill a request for a content object.
- the content manager 312 makes a determination that a particular content exchange is the preferred source for that content object. If the whole content object is not present on the preferred content exchange 116 , the content controller 408 retrieves the missing content object portions in step 1120 .
- the client computer 112 begins downloading the content object once the beginning of the content object is available from the content exchange 116 .
- the content tracker 404 reports to all content managers 312 the content objects and/or content object portions that are stored in the content store 412 .
- the local content catalog 416 stores a list of the content object and/or content object portions retained in the content store 412 .
- the content object possibly added in step 1120 is reported back to the origin server 108 that originally provided the content object.
- Each origin server 108 that has information on the content store 412 receives a report from the content tracker 404 .
- step 1128 further information from the local content catalog 416 is sent from the content tracker 404 to the content manager 312 in step 1128 . Expiration of a timer triggers this report in step 1132 , but other embodiments could report this information when changes occur.
- the content manager 312 stores the location information in the content location database 320 . Future queries to the content location database 320 by the content manager allow knowing which content exchanges 116 currently hold any content object the content manager 312 may want to redirect a client computer 112 to.
- the content tracker 404 determines if the content manager 312 is accepting the information. If the content manager accepts the information, processing loops back to step 1116 where another content object is requested.
- the content manager 312 If the content manager 312 is offline, for example, the reported information from the content tracker 404 is not accepted. It may take several unsuccessful attempts at contact before the content tracker 404 concludes the content manager 312 is unavailable.
- the non-responsive content manager 312 is detected in step 1136 . Any content objects associated with the unavailable content manager 312 are determined by a query to the local content catalog 416 . The associated content objects are purged from the content store 412 to preserve room for new content objects, or they are tagged for deletion when storage space is needed. It is noted that the content tracker queries the dynamic DNS 204 during the above process to translate an origin server name to an IP address.
- FIG. 12 a flow diagram of an embodiment of a process for communicating information from a content manager to a server manager is shown.
- the depicted flow diagram shows the interaction between the active directory 104 and a single origin server 108 .
- the active directory 104 interacts with a number of origin servers in a similar manner to develop an electronic directory that catalogs the number of origin servers in a server database 228 .
- the user queries the server database 228 with a search page or directory page paradigm.
- the process begins in step 1204 , where the content manager 312 provides status information to the server manager 208 .
- the status information is received by the server manager 208 and stored in the subscriber database 224 in step 1208 .
- the subscriber database 224 holds information on all origin servers 108 currently active in the system 600 .
- the server manager 208 can regulate how often each origin server 108 reports back with information from the local content catalog 316 .
- the frequency that each origin server reports the local content catalog 316 is controlled by the server manager 208 providing a report-back time interval to the content manager 312 in step 1210 .
- the loading or utilization of the active directory 104 is analyzed to determine the amount of bandwidth that is made available to updating information in the server database 228 . Based upon that loading determination, a report-back time interval is chosen and passed to the content manager 312 . In one embodiment, the report-back time interval is normally set to two minutes, but can increase if the active directory becomes overloaded.
- Each origin server 108 maintains the local content catalog 316 of all content objects selected by the administrator for publishing to the system 600 .
- the first time a content manager 312 contacts the server manager 208 to report the local content catalog 316 all the entries from the catalog 316 is sent. On subsequent contacts only the changes to the local content catalog 316 can be reported to save bandwidth. In alternative embodiments, the whole local content catalog can be reported with each contact.
- the server manager 208 receives the local content catalog 316 or changes to the local content catalog and stores the information in the server database 228 in step 1216 . Even if there are no changes to the local content catalog 316 during the report-back time interval, the origin server 108 contacts the server manager 208 such that it is known that the origin server 108 is still available.
- the server manager 208 detects if any origin server 108 stops contacting it presumably because the origin server 108 is offline or otherwise unavailable. In step 1220 , the server manager 208 sets a timeout value for the origin server 108 .
- the timeout value is set to three times the report-back time interval in this embodiment, but other multiples could be used.
- a counter is set for the timeout value and determines when the counter reaches the timeout value.
- the active directory 104 removes all references to the origin server 108 or tags the references for deletion when space is needed in step 1236 . It is presumed, that an origin server 108 is unavailable if it does not initiate contact before the counter reaches the timeout value.
- the entries corresponding to the local content catalog 316 for that origin server 108 are removed from the server database 228 and the entry for the origin server 108 is removed from the subscriber database 224 . By removing the entries from the databases 224 , 228 , any user interfacing with the directory or search pages 212 , 216 is not presented links to content objects associated with that origin server 108 .
- the entries corresponding to the local content catalog 316 may be tagged for deletion after the counter reaches the timeout value. Content objects tagged for deletion are overwritten when the space is needed for other content objects.
- the active directory 104 knows the origin server 108 is behaving properly. The contact results in resetting of the counter storing the timeout value. Processing loops back to step 1210 where the server database 228 is updated and a new report-back time interval is determined. The process continues in the loop until the origin server 108 fails to report before the counter storing the timeout value expires.
- FIG. 13 an embodiment of a flow diagram of a process for publishing information by a content manager 312 to a server manager 208 is shown.
- An administrator of the origin server downloads software from a download page 220 of the active directory 104 .
- the software is installed on the origin server 108 .
- content objects are available on the content server 308 in static or streaming form.
- the depicted process begins in step 1304 where the origin server begins operation with content objects ready and software installed.
- the administrator performs a manual selection process to select content objects in step 1308 . Only a subset of the content objects on the content server 308 may be made available to the system 600 during this process. The selected content objects are entered into the local content catalog 316 .
- the content manager 312 Upon first contacting the active directory 104 , the content manager 312 passes information about the origin server 108 to the server manager 208 for entry into the subscriber database 224 in steps 1308 and 1312 . If this is the first time the content manager 312 is contacting the active directory 104 , the administrator may provide some of the information that is passed. The information added by the administrator is stored and provided with subsequent contact with the subscriber database 224 .
- step 1316 the content manager 312 contacts the server manager 208 to publish the information in the local content catalog 316 .
- the server manager 208 takes the local content catalog 316 and creates an entry in the server database 228 for each content object in step 1320 .
- the contents of the server database 228 are used when formulating the directory and search pages 212 , 216 presented to the user searching for content.
- the server manager 208 controls the frequency at which all the origin servers 108 report their local content catalogs 316 . If the server manger 208 is getting overloaded, the report-back period given to content managers 312 is increased. The server manager 208 can also request a content manager 312 to report-back when changes to the local content catalog 316 are detected. In this embodiment, the report-back period or interval time is two minutes and is provided to the content manger 312 in step 1324 .
- the content manager 312 Before reporting back to the server manager 208 , the content manager 312 waits for the interval time to expire in step 1328 . Once the timer expires, the content objects on the content server 308 are scanned to determine if there should be changes to the local content catalog 316 . Once changes are made in step 1332 , the processing loops back to step 1316 where the local content catalog 316 is published to the server database 228 once again. The whole local content catalog could be provided in step 1316 for the first contact, but only changes could be provided to update the information in subsequent contacts to reduce the size of the information.
- FIG. 14 a block diagram of an embodiment of the content exchange 116 which shows multiple providers connected through separate ports 1408 is shown.
- Three datapaths 1404 are logically separated by Internet protocol ports 1408 for the content exchange 116 .
- the ports 1408 are used to demultiplex the logical datapaths 1408 even though they may physically share a common conduit. By having multiple ports 1408 , the traffic associated with those ports 1408 can be regulated.
- the content exchange 116 may be used to provide content objects from an external origin server 118 .
- the administrator of the external origin server may wish to divide traffic between three bandwidth providers.
- Port A 1408 -A could be associated with provider A
- port B 1408 -B could be associated with provider B
- port C 1408 -C could be associated with provider C.
- the content exchange can monitor activity on any of those ports and report that information to the providers such that they can bill the external origin server 118 appropriately for carrying that bandwidth.
- the requests from the client computers 112 could be divided among the ports 1408 according to a scheme determined by the external origin server 118 to allocate bandwidth among the providers.
- each client computer 112 cycles through the three ports 1408 according to a weighting function.
- each client computer is assigned a different port 1408 to use.
- a determination of QOS for each port 1408 influences the choice of port 1408 the client computer 112 uses. By using these techniques, the client computers 112 in the system 600 can influence the amount of bandwidth that is purchased from each provider.
- FIG. 15 a block diagram of another embodiment of the content exchange 116 which shows multiple providers connected through separate addresses 1508 is shown.
- three IP addresses 1508 are used to logically separate the three datapaths 1504 from each other.
- the logical datapaths are primarily envisioned to separate bandwidth by provider, the logical datapaths could separate security levels, subsets of content objects, or other things.
- FIG. 16 a hierarchical representation of an embodiment of grouping of providers 1604 and content exchanges 116 is shown.
- providers 1604 there are two bandwidth providers 1604 .
- Each provider 1604 has a site 1608 - 1 , 1608 - 3 exclusive to themselves and a site 1608 - 2 that is shared.
- Sites 1608 are physical locations that house one or more severs 1612 and correspond to a single content exchange 116 that could include multiple servers 1612 .
- Each server 1612 - 3 in a shared site 1608 - 2 has separate IP addresses 1616 - 3 , 1616 - 4 for each provider 1604 sharing that site 1608 - 2 .
- the two IP addresses 1616 - 3 , 1616 - 4 allow logical separation of the traffic to a given shared site 1602 - 2 . Logical separation allows attributing content object requests and the bandwidth to service those requests to individual providers 1604 even though all traffic may share the same physical conduit at times. Some embodiments could keep the traffic associated with each provider physically separate by filtering on the IP address 1616 . In this way the bandwidth may be allocated among providers 1604 .
- ports 1716 are used to differentiate logical datapaths to servers 1612 .
- Port one 1716 - 3 is associated with provider one 1604 - 1 and port two 1716 - 4 is associated with provider two 1604 - 2 on the sites 1608 - 2 that service multiple providers 1604 .
- each provider could have a range of ports associated with them rather than a single universal port on all servers.
- the search page is substantially free of expired and stale links.
- Content object links are updated continuously. Additionally, crawlers are not necessary to gather information on content objects from the origin servers.
- a server could catalog a number of origin servers and report changes back to the active directory.
Abstract
Description
Claims (25)
Priority Applications (9)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/663,554 US6904460B1 (en) | 2000-06-01 | 2000-09-18 | Reverse content harvester |
ARP010102618A AR030227A1 (en) | 2000-06-01 | 2001-05-31 | METHOD FOR GATHERING INFORMATION FOR A DIRECTORY IN A NETWORK SWITCHED BY PACKAGES. |
KR1020027016448A KR20030022810A (en) | 2000-06-01 | 2001-06-01 | Reverse content harvester |
CA2410860A CA2410860C (en) | 2000-06-01 | 2001-06-01 | Reverse content harvester |
AU2001271282A AU2001271282A1 (en) | 2000-06-01 | 2001-06-01 | Reverse content harvester |
JP2001588201A JP2004509485A (en) | 2000-06-01 | 2001-06-01 | Reverse content harvester |
EP01950267A EP1287455A2 (en) | 2000-06-01 | 2001-06-01 | Reverse content harvester |
PCT/US2001/017871 WO2001093536A2 (en) | 2000-06-01 | 2001-06-01 | Reverse content harvester |
CN01813537A CN1444746A (en) | 2000-06-01 | 2001-06-01 | Reverse content harvester |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US20900700P | 2000-06-01 | 2000-06-01 | |
US09/663,554 US6904460B1 (en) | 2000-06-01 | 2000-09-18 | Reverse content harvester |
Publications (1)
Publication Number | Publication Date |
---|---|
US6904460B1 true US6904460B1 (en) | 2005-06-07 |
Family
ID=26903726
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/663,554 Expired - Lifetime US6904460B1 (en) | 2000-06-01 | 2000-09-18 | Reverse content harvester |
Country Status (9)
Country | Link |
---|---|
US (1) | US6904460B1 (en) |
EP (1) | EP1287455A2 (en) |
JP (1) | JP2004509485A (en) |
KR (1) | KR20030022810A (en) |
CN (1) | CN1444746A (en) |
AR (1) | AR030227A1 (en) |
AU (1) | AU2001271282A1 (en) |
CA (1) | CA2410860C (en) |
WO (1) | WO2001093536A2 (en) |
Cited By (37)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020136222A1 (en) * | 2001-03-20 | 2002-09-26 | Kurt W. Robohm | Systems and methods for updating IP communication service attributes using an LDAP |
US20040181297A1 (en) * | 2003-03-12 | 2004-09-16 | Chambers Misty Mccrea | Methods and systems for management and control of an automation control module |
US20040243924A1 (en) * | 2003-03-24 | 2004-12-02 | Takeshi Fujita | Content administration system |
US20050005027A1 (en) * | 2003-04-18 | 2005-01-06 | International Business Machines Corporation | Method and system for obtaining data through an IP transmission network by using an optimized domain name server |
US20090063978A1 (en) * | 2007-09-05 | 2009-03-05 | Sony Corporation | Network status icon in navigable toolbar |
US20090070782A1 (en) * | 2003-05-09 | 2009-03-12 | Vignette Corporation | Method and system for performing bulk operations on transactional items |
US7620699B1 (en) * | 2002-07-26 | 2009-11-17 | Paltalk Holdings, Inc. | Method and system for managing high-bandwidth data sharing |
US20100138553A1 (en) * | 2008-12-01 | 2010-06-03 | Google Inc. | Selecting Format for Content Distribution |
US7818435B1 (en) * | 2000-12-14 | 2010-10-19 | Fusionone, Inc. | Reverse proxy mechanism for retrieving electronic content associated with a local network |
US20110026536A1 (en) * | 2005-11-23 | 2011-02-03 | Comcast Cable Holdings, Llc | Device-to-device communication among customer premise equipment devices |
US7895334B1 (en) | 2000-07-19 | 2011-02-22 | Fusionone, Inc. | Remote access communication architecture apparatus and method |
US7941453B1 (en) * | 2003-05-09 | 2011-05-10 | Vignette Software Llc | Method and system for deployment of content using proxy objects |
US8073954B1 (en) | 2000-07-19 | 2011-12-06 | Synchronoss Technologies, Inc. | Method and apparatus for a secure remote access system |
US8156074B1 (en) | 2000-01-26 | 2012-04-10 | Synchronoss Technologies, Inc. | Data transfer and synchronization system |
US8181111B1 (en) | 2007-12-31 | 2012-05-15 | Synchronoss Technologies, Inc. | System and method for providing social context to digital activity |
US8255006B1 (en) | 2009-11-10 | 2012-08-28 | Fusionone, Inc. | Event dependent notification system and method |
US8442943B2 (en) | 2000-01-26 | 2013-05-14 | Synchronoss Technologies, Inc. | Data transfer and synchronization between mobile systems using change log |
US8601545B2 (en) | 2007-11-01 | 2013-12-03 | Comcast Cable Holdings, Llc | Method and system for directing user between captive and open domains |
US8611873B2 (en) | 2004-05-12 | 2013-12-17 | Synchronoss Technologies, Inc. | Advanced contact identification system |
US8615566B1 (en) | 2001-03-23 | 2013-12-24 | Synchronoss Technologies, Inc. | Apparatus and method for operational support of remote network systems |
US8620286B2 (en) | 2004-02-27 | 2013-12-31 | Synchronoss Technologies, Inc. | Method and system for promoting and transferring licensed content and applications |
US8645471B2 (en) | 2003-07-21 | 2014-02-04 | Synchronoss Technologies, Inc. | Device message management system |
US8943428B2 (en) | 2010-11-01 | 2015-01-27 | Synchronoss Technologies, Inc. | System for and method of field mapping |
US9542076B1 (en) | 2004-05-12 | 2017-01-10 | Synchronoss Technologies, Inc. | System for and method of updating a personal profile |
US9602573B1 (en) | 2007-09-24 | 2017-03-21 | National Science Foundation | Automatic clustering for self-organizing grids |
US10178195B2 (en) * | 2015-12-04 | 2019-01-08 | Cloudflare, Inc. | Origin server protection notification |
US10828092B2 (en) | 2007-05-21 | 2020-11-10 | Atricure, Inc. | Cardiac ablation systems and methods |
US11467883B2 (en) | 2004-03-13 | 2022-10-11 | Iii Holdings 12, Llc | Co-allocating a reservation spanning different compute resources types |
US11496415B2 (en) | 2005-04-07 | 2022-11-08 | Iii Holdings 12, Llc | On-demand access to compute resources |
US11494235B2 (en) | 2004-11-08 | 2022-11-08 | Iii Holdings 12, Llc | System and method of providing system jobs within a compute environment |
US11526304B2 (en) | 2009-10-30 | 2022-12-13 | Iii Holdings 2, Llc | Memcached server functionality in a cluster of data processing nodes |
US11630704B2 (en) | 2004-08-20 | 2023-04-18 | Iii Holdings 12, Llc | System and method for a workload management and scheduling module to manage access to a compute environment according to local and non-local user identity information |
US11652706B2 (en) | 2004-06-18 | 2023-05-16 | Iii Holdings 12, Llc | System and method for providing dynamic provisioning within a compute environment |
US11650857B2 (en) | 2006-03-16 | 2023-05-16 | Iii Holdings 12, Llc | System and method for managing a hybrid computer environment |
US11658916B2 (en) | 2005-03-16 | 2023-05-23 | Iii Holdings 12, Llc | Simple integration of an on-demand compute environment |
US11720290B2 (en) | 2009-10-30 | 2023-08-08 | Iii Holdings 2, Llc | Memcached server functionality in a cluster of data processing nodes |
US11960937B2 (en) | 2004-03-13 | 2024-04-16 | Iii Holdings 12, Llc | System and method for an optimizing reservation in time of compute resources based on prioritization function and reservation policy parameter |
Families Citing this family (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7890571B1 (en) | 2000-09-22 | 2011-02-15 | Xcelera Inc. | Serving dynamic web-pages |
US7546342B2 (en) * | 2004-05-14 | 2009-06-09 | Microsoft Corporation | Distributed hosting of web content using partial replication |
CN108228692A (en) * | 2017-06-30 | 2018-06-29 | 勤智数码科技股份有限公司 | A kind of catalogue dynamic updating method and system |
Citations (48)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
EP0837584A1 (en) | 1996-10-18 | 1998-04-22 | AT&T Corp. | Inter-cache protocol for improved web performance |
WO1998017039A1 (en) | 1996-10-14 | 1998-04-23 | Mirror Image Internet Ab | Internet communication system |
WO1998018076A1 (en) | 1996-10-18 | 1998-04-30 | Intervu, Inc. | System and method for optimized storage and retrieval of data on a distributed computer network |
EP0847020A2 (en) | 1996-12-09 | 1998-06-10 | Sun Microsystems, Inc. | Dynamic cache preloading across loosely-coupled administrative domains |
WO1998026559A1 (en) | 1996-12-09 | 1998-06-18 | Gte Internetworking Incorporated | Distributed computing system and method for distributing user requests to replicated network servers |
WO1998037667A2 (en) | 1997-02-21 | 1998-08-27 | Telefonaktiebolaget Lm Ericsson (Publ) | Data caching on the internet |
EP0877326A2 (en) | 1997-05-05 | 1998-11-11 | AT&T Corp. | Network with shared caching |
WO1998053410A2 (en) | 1997-05-22 | 1998-11-26 | Trustees Of Boston University | A method and system for distributed caching, prefetching and replication |
WO1998058315A1 (en) | 1997-06-18 | 1998-12-23 | Intervu, Inc. | System and method for server-side optimization of data delivery on a distributed computer network |
WO1999003047A1 (en) | 1997-07-11 | 1999-01-21 | Earle Machardy | Content hosting environment system and cache mechanism |
WO1999005584A2 (en) | 1997-07-24 | 1999-02-04 | Mirror Image Internet, Inc. | Internet caching system |
US5870557A (en) | 1996-07-15 | 1999-02-09 | At&T Corp | Method for determining and reporting a level of network activity on a communications network using a routing analyzer and advisor |
US5956716A (en) | 1995-06-07 | 1999-09-21 | Intervu, Inc. | System and method for delivery of video data over a computer network |
US5991306A (en) | 1996-08-26 | 1999-11-23 | Microsoft Corporation | Pull based, intelligent caching system and method for delivering data over a network |
US6003030A (en) | 1995-06-07 | 1999-12-14 | Intervu, Inc. | System and method for optimized storage and retrieval of data on a distributed computer network |
US6021118A (en) * | 1997-02-10 | 2000-02-01 | Lucent Techologies Inc. | Synchronization methods for distributed processing systems having replicated data |
US6029175A (en) | 1995-10-26 | 2000-02-22 | Teknowledge Corporation | Automatic retrieval of changed files by a network software agent |
WO2000013456A2 (en) | 1998-08-31 | 2000-03-09 | Adero, Inc. | Method and apparatus for load management on a computer network |
US6038599A (en) | 1997-04-23 | 2000-03-14 | Mpath Interactive, Inc. | Latency server and matchmaker |
WO2000017765A1 (en) | 1998-09-24 | 2000-03-30 | Mirror Image Internet, Inc. | An internet caching system and a method and an arrangement in such a system |
US6052714A (en) * | 1995-12-14 | 2000-04-18 | Kabushiki Kaisha Toshiba | Information filtering apparatus and method for retrieving a selected article from information sources |
US6052718A (en) | 1997-01-07 | 2000-04-18 | Sightpath, Inc | Replica routing |
US6055570A (en) | 1997-04-03 | 2000-04-25 | Sun Microsystems, Inc. | Subscribed update monitors |
US6061686A (en) * | 1997-06-26 | 2000-05-09 | Digital Equipment Corporation | Updating a copy of a remote document stored in a local computer system |
US6065012A (en) * | 1998-02-27 | 2000-05-16 | Microsoft Corporation | System and method for displaying and manipulating user-relevant data |
US6065017A (en) * | 1997-12-31 | 2000-05-16 | Novell, Inc. | Apparatus and method for identifying and recovering from database errors |
WO2000028424A1 (en) | 1998-11-05 | 2000-05-18 | Bea Systems, Inc. | A duplicated naming service in a distributed processing system |
US6098078A (en) * | 1995-12-29 | 2000-08-01 | Lucent Technologies Inc. | Maintaining consistency of database replicas |
US6101180A (en) | 1996-11-12 | 2000-08-08 | Starguide Digital Networks, Inc. | High bandwidth broadcast system having localized multicast access to broadcast content |
US6108703A (en) | 1998-07-14 | 2000-08-22 | Massachusetts Institute Of Technology | Global hosting system |
WO2000074347A1 (en) | 1999-06-02 | 2000-12-07 | Cacheflow, Inc. | Dynamic cache protocol selection and query resolution for cache server |
WO2000073922A2 (en) | 1999-06-01 | 2000-12-07 | Cacheflow, Inc. | Content delivery system |
WO2000079730A2 (en) | 1999-06-18 | 2000-12-28 | Digital Island, Inc. | On-demand overlay routing for computer-based communication networks |
US6185598B1 (en) | 1998-02-10 | 2001-02-06 | Digital Island, Inc. | Optimized network resource location |
US6202067B1 (en) * | 1998-04-07 | 2001-03-13 | Lucent Technologies, Inc. | Method and apparatus for correct and complete transactions in a fault tolerant distributed database system |
US6209036B1 (en) * | 1997-06-06 | 2001-03-27 | International Business Machines Corporation | Management of and access to information and other material via the world wide web in an LDAP environment |
US6216123B1 (en) * | 1998-06-24 | 2001-04-10 | Novell, Inc. | Method and system for rapid retrieval in a full text indexing system |
US6311216B1 (en) | 1998-05-29 | 2001-10-30 | Microsoft Corporation | Method, computer program product, and system for client-side deterministic routing and URL lookup into a distributed cache of URLS |
US6347313B1 (en) * | 1999-03-01 | 2002-02-12 | Hewlett-Packard Company | Information embedding based on user relevance feedback for object retrieval |
US6473749B1 (en) * | 2000-02-22 | 2002-10-29 | Robert Scott Smith | System and method for managing file content |
US6516337B1 (en) | 1999-10-14 | 2003-02-04 | Arcessa, Inc. | Sending to a central indexing site meta data or signatures from objects on a computer network |
US6539381B1 (en) * | 1999-04-21 | 2003-03-25 | Novell, Inc. | System and method for synchronizing database information |
US6546387B1 (en) * | 1999-11-15 | 2003-04-08 | Transcom Software Inc. | Computer network information management system and method using intelligent software agents |
US6606657B1 (en) | 1999-06-22 | 2003-08-12 | Comverse, Ltd. | System and method for processing and presenting internet usage information |
US6650777B1 (en) * | 1999-07-12 | 2003-11-18 | Novell, Inc. | Searching and filtering content streams using contour transformations |
US6658000B1 (en) * | 2000-06-01 | 2003-12-02 | Aerocast.Com, Inc. | Selective routing |
US6687464B1 (en) * | 1999-12-30 | 2004-02-03 | Nortel Networks Limited | Optimization of a communications system based on identification of an optical medium |
US6694316B1 (en) * | 1999-03-23 | 2004-02-17 | Microstrategy Inc. | System and method for a subject-based channel distribution of automatic, real-time delivery of personalized informational and transactional data |
-
2000
- 2000-09-18 US US09/663,554 patent/US6904460B1/en not_active Expired - Lifetime
-
2001
- 2001-05-31 AR ARP010102618A patent/AR030227A1/en unknown
- 2001-06-01 CA CA2410860A patent/CA2410860C/en not_active Expired - Fee Related
- 2001-06-01 EP EP01950267A patent/EP1287455A2/en not_active Withdrawn
- 2001-06-01 WO PCT/US2001/017871 patent/WO2001093536A2/en not_active Application Discontinuation
- 2001-06-01 KR KR1020027016448A patent/KR20030022810A/en not_active Application Discontinuation
- 2001-06-01 CN CN01813537A patent/CN1444746A/en active Pending
- 2001-06-01 JP JP2001588201A patent/JP2004509485A/en active Pending
- 2001-06-01 AU AU2001271282A patent/AU2001271282A1/en not_active Abandoned
Patent Citations (49)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5956716A (en) | 1995-06-07 | 1999-09-21 | Intervu, Inc. | System and method for delivery of video data over a computer network |
US6003030A (en) | 1995-06-07 | 1999-12-14 | Intervu, Inc. | System and method for optimized storage and retrieval of data on a distributed computer network |
US6029175A (en) | 1995-10-26 | 2000-02-22 | Teknowledge Corporation | Automatic retrieval of changed files by a network software agent |
US6052714A (en) * | 1995-12-14 | 2000-04-18 | Kabushiki Kaisha Toshiba | Information filtering apparatus and method for retrieving a selected article from information sources |
US6098078A (en) * | 1995-12-29 | 2000-08-01 | Lucent Technologies Inc. | Maintaining consistency of database replicas |
US5870557A (en) | 1996-07-15 | 1999-02-09 | At&T Corp | Method for determining and reporting a level of network activity on a communications network using a routing analyzer and advisor |
US5991306A (en) | 1996-08-26 | 1999-11-23 | Microsoft Corporation | Pull based, intelligent caching system and method for delivering data over a network |
WO1998017039A1 (en) | 1996-10-14 | 1998-04-23 | Mirror Image Internet Ab | Internet communication system |
WO1998018076A1 (en) | 1996-10-18 | 1998-04-30 | Intervu, Inc. | System and method for optimized storage and retrieval of data on a distributed computer network |
EP0837584A1 (en) | 1996-10-18 | 1998-04-22 | AT&T Corp. | Inter-cache protocol for improved web performance |
US6101180A (en) | 1996-11-12 | 2000-08-08 | Starguide Digital Networks, Inc. | High bandwidth broadcast system having localized multicast access to broadcast content |
WO1998026559A1 (en) | 1996-12-09 | 1998-06-18 | Gte Internetworking Incorporated | Distributed computing system and method for distributing user requests to replicated network servers |
EP0847020A2 (en) | 1996-12-09 | 1998-06-10 | Sun Microsystems, Inc. | Dynamic cache preloading across loosely-coupled administrative domains |
US6052718A (en) | 1997-01-07 | 2000-04-18 | Sightpath, Inc | Replica routing |
US6021118A (en) * | 1997-02-10 | 2000-02-01 | Lucent Techologies Inc. | Synchronization methods for distributed processing systems having replicated data |
WO1998037667A2 (en) | 1997-02-21 | 1998-08-27 | Telefonaktiebolaget Lm Ericsson (Publ) | Data caching on the internet |
US6055570A (en) | 1997-04-03 | 2000-04-25 | Sun Microsystems, Inc. | Subscribed update monitors |
US6038599A (en) | 1997-04-23 | 2000-03-14 | Mpath Interactive, Inc. | Latency server and matchmaker |
EP0877326A2 (en) | 1997-05-05 | 1998-11-11 | AT&T Corp. | Network with shared caching |
WO1998053410A2 (en) | 1997-05-22 | 1998-11-26 | Trustees Of Boston University | A method and system for distributed caching, prefetching and replication |
US6209036B1 (en) * | 1997-06-06 | 2001-03-27 | International Business Machines Corporation | Management of and access to information and other material via the world wide web in an LDAP environment |
US6112239A (en) | 1997-06-18 | 2000-08-29 | Intervu, Inc | System and method for server-side optimization of data delivery on a distributed computer network |
WO1998058315A1 (en) | 1997-06-18 | 1998-12-23 | Intervu, Inc. | System and method for server-side optimization of data delivery on a distributed computer network |
US6061686A (en) * | 1997-06-26 | 2000-05-09 | Digital Equipment Corporation | Updating a copy of a remote document stored in a local computer system |
WO1999003047A1 (en) | 1997-07-11 | 1999-01-21 | Earle Machardy | Content hosting environment system and cache mechanism |
WO1999005584A2 (en) | 1997-07-24 | 1999-02-04 | Mirror Image Internet, Inc. | Internet caching system |
US6065017A (en) * | 1997-12-31 | 2000-05-16 | Novell, Inc. | Apparatus and method for identifying and recovering from database errors |
US6185598B1 (en) | 1998-02-10 | 2001-02-06 | Digital Island, Inc. | Optimized network resource location |
US6065012A (en) * | 1998-02-27 | 2000-05-16 | Microsoft Corporation | System and method for displaying and manipulating user-relevant data |
US6202067B1 (en) * | 1998-04-07 | 2001-03-13 | Lucent Technologies, Inc. | Method and apparatus for correct and complete transactions in a fault tolerant distributed database system |
US6311216B1 (en) | 1998-05-29 | 2001-10-30 | Microsoft Corporation | Method, computer program product, and system for client-side deterministic routing and URL lookup into a distributed cache of URLS |
US6216123B1 (en) * | 1998-06-24 | 2001-04-10 | Novell, Inc. | Method and system for rapid retrieval in a full text indexing system |
US6108703A (en) | 1998-07-14 | 2000-08-22 | Massachusetts Institute Of Technology | Global hosting system |
WO2000013456A2 (en) | 1998-08-31 | 2000-03-09 | Adero, Inc. | Method and apparatus for load management on a computer network |
WO2000017765A1 (en) | 1998-09-24 | 2000-03-30 | Mirror Image Internet, Inc. | An internet caching system and a method and an arrangement in such a system |
WO2000028424A1 (en) | 1998-11-05 | 2000-05-18 | Bea Systems, Inc. | A duplicated naming service in a distributed processing system |
US6347313B1 (en) * | 1999-03-01 | 2002-02-12 | Hewlett-Packard Company | Information embedding based on user relevance feedback for object retrieval |
US6694316B1 (en) * | 1999-03-23 | 2004-02-17 | Microstrategy Inc. | System and method for a subject-based channel distribution of automatic, real-time delivery of personalized informational and transactional data |
US6539381B1 (en) * | 1999-04-21 | 2003-03-25 | Novell, Inc. | System and method for synchronizing database information |
WO2000073922A2 (en) | 1999-06-01 | 2000-12-07 | Cacheflow, Inc. | Content delivery system |
WO2000074347A1 (en) | 1999-06-02 | 2000-12-07 | Cacheflow, Inc. | Dynamic cache protocol selection and query resolution for cache server |
WO2000079730A2 (en) | 1999-06-18 | 2000-12-28 | Digital Island, Inc. | On-demand overlay routing for computer-based communication networks |
US6606657B1 (en) | 1999-06-22 | 2003-08-12 | Comverse, Ltd. | System and method for processing and presenting internet usage information |
US6650777B1 (en) * | 1999-07-12 | 2003-11-18 | Novell, Inc. | Searching and filtering content streams using contour transformations |
US6516337B1 (en) | 1999-10-14 | 2003-02-04 | Arcessa, Inc. | Sending to a central indexing site meta data or signatures from objects on a computer network |
US6546387B1 (en) * | 1999-11-15 | 2003-04-08 | Transcom Software Inc. | Computer network information management system and method using intelligent software agents |
US6687464B1 (en) * | 1999-12-30 | 2004-02-03 | Nortel Networks Limited | Optimization of a communications system based on identification of an optical medium |
US6473749B1 (en) * | 2000-02-22 | 2002-10-29 | Robert Scott Smith | System and method for managing file content |
US6658000B1 (en) * | 2000-06-01 | 2003-12-02 | Aerocast.Com, Inc. | Selective routing |
Non-Patent Citations (23)
Title |
---|
Allan Leinwand, A Distributed-Star Overnet For Global Business Applications, IEEE Globecom 1998, Sydney, Nov. 8-12, 1998, vol. 2, pp. 1291-1296. |
Clare Bradford et al., A Bandwidth Friendly Search Engine, Proceedings Of The International Conference on Multimedia Computing and Systems, Los Alamitos, CA, Jun. 7, 1999, vol. 2, pp. 720-724. |
Detail-Rich, Multimedia Streaming Solution, Mirror Image Internet, Inc., www.morror-image.com, (2 pages). |
Fan, Li, et al., Summary Cache: A Scalable Wide-Area Web Cache Sharing Protocol, Computer Communications Review, Associsation For Computing Machinery, New York, Oct., 1998, vol. 28, No. 4, pp. 254-265. |
Gadde, Syam et al., A Taste of Crispy Squid, Proceedings of the Workshop on Internet Service Performance, Jun., 1998, pp. 1-8. |
Gadde, Syam et al., Reduce, Reuse, Recycle, an Approach to Building Large Internet Caches, The Sixth Workshop on Hot Topics in Cape Cod, MA, May 5-6, 1997, pp. 93-98. |
Geoff Huston, Internet Performance Survival Guide QoS Strategies for Multiservice Networks, Wiley Computer Publishing, John Wiley & Sons, Inc., New York, NY, (2000) pp. 258-259, 276-277, 449-452. |
Geoff Huston, Telstra, Web Caching, Cisco Systems, Inc., http://www.cisco.com/warp/public/759/ipj 2-3/ipj 2-3 webcaching.html, pp. 1-24. |
Gulwani, Sumit et al. WebCaL-A Domain Specific Language For Web Caching, Online Proceedings Of The 5<SUP>th</SUP>International Web Caching And Content Delivery Workshop, at <http://www.terena.nl/conf/wcw/Proceedings/S2/S2-4.ps>, May, 2002. |
Gwertzman, James et al., An Analysis of Geographical Push-Caching, Harvard University, Vino Research Group, World Wide Web Research at <http://www.eecs.harvard.edu/vino/web/server.cache/icdcs.ps> Mar. 28, 2002. |
How FreeFlow Works (2 pages), Content Delivery (1 page), FreeFlow Benefits (1st page only of 2), Reporting (1 page) and Edge Advantage (1 page), Akamai Technologies, Inc, http://www.akamai.com./html/sv/code_ffhow.html, Sep. 12, 2000. |
Inohara, Shigekazu et al., Self-Organizing Cooperative WWW Caching, Proceedings, 18<SUP>th</SUP>International Conference on Amsterdam, Netherlands, May 26-29, 1998, pp. 74-83. |
John Dilley et al., Improving Proxy Cache Performance: Analysis of Three Replacement Policies, IEEE Internet Computing, (1999 vol. 3, N. 6, pp. 44-50. |
Kanchanasut, Kanchana, The A13 CacheBone Project, Internet Project Workshop, IWS 99 Osaka, Japan, Feb. 18-20, 1999, pp. 203-208. |
Luis Aversa et al., Load Balancing A Cluster Of Web Servers Using Distributed Packet Rewriting, Computer Science Department Technical Report, New York, NY, Jan.6, 1999 pp. 1-13. |
Rousskov, Alex et al., Cache Digests, Computer Networks and ISDN Systems, North Holland Publishing, Amsterdam, NL, Nov. 25, 1998, vol. 30, No. 22-23, pp. 2155-2168. |
Rousskov, Alex et al., Cache Digests, Computer Networks and ISDN Sytstems, North Holland Publishing, Amsterdam, NL, Nov. 25, 1998, vol. 30, No. 22-23, pp. 2155-2168. |
Simon Burns, Speed Demons, Far Eastern Economic Review, Apr. 20, 2000, vol. 163, N. 16, p. 2 only of 21. |
Sun Wu et al., Virtual Proxy Servers For WWW And Intelligent Agents On The Internet, System Sciences, 1997, Proceedings Of The Thirtieth Hwaii International Conference On Wailea, HI, Los Alamitors, CA, Jan. 7, 1997, pp. 200-209. |
Syam Gadde et al., Web Caching and Content Distribution: A view From The Interior, Online Proceedings of the 5<SUP>th</SUP>International Web Caching and Content Delivery Workshop, retrieved from Internet on Apr. 10, 2002, Abstract, Sections 1 and 2. |
Tewari, Renu et al., Beyond Hierarchies: Design Considerations for Distributed Caching On The Internet, UTCS Technical Report, Feb., 1998, pp. 1-22. |
Touch, Joseph D., Defining High-Speed Protocols: Five Challenges And An Example That Survives The Challenges, IEEE Journal On Selected Areas In Communications, IEEE Inc., New York, Jun. 1, 1995, vol. 13, No. 5, pp. 828-835. |
Zhang, Xiaolan et al., HACC: An Architecture For Cluster-Based Web Servers, Proceedings Of The 3<SUP>rd</SUP>Usenix Windows NT Symposium, Seattle, WA, Jul. 12-15, 1999, pp. 155-164. |
Cited By (75)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8621025B2 (en) | 2000-01-25 | 2013-12-31 | Synchronoss Technologis, Inc. | Mobile data transfer and synchronization system |
US8442943B2 (en) | 2000-01-26 | 2013-05-14 | Synchronoss Technologies, Inc. | Data transfer and synchronization between mobile systems using change log |
US8315976B2 (en) | 2000-01-26 | 2012-11-20 | Synchronoss Technologies, Inc. | Data transfer and synchronization system |
US8156074B1 (en) | 2000-01-26 | 2012-04-10 | Synchronoss Technologies, Inc. | Data transfer and synchronization system |
US8073954B1 (en) | 2000-07-19 | 2011-12-06 | Synchronoss Technologies, Inc. | Method and apparatus for a secure remote access system |
US7895334B1 (en) | 2000-07-19 | 2011-02-22 | Fusionone, Inc. | Remote access communication architecture apparatus and method |
US7818435B1 (en) * | 2000-12-14 | 2010-10-19 | Fusionone, Inc. | Reverse proxy mechanism for retrieving electronic content associated with a local network |
US8660017B2 (en) * | 2001-03-20 | 2014-02-25 | Verizon Business Global Llc | Systems and methods for updating IP communication service attributes using an LDAP |
US20020136222A1 (en) * | 2001-03-20 | 2002-09-26 | Kurt W. Robohm | Systems and methods for updating IP communication service attributes using an LDAP |
US8615566B1 (en) | 2001-03-23 | 2013-12-24 | Synchronoss Technologies, Inc. | Apparatus and method for operational support of remote network systems |
US7620699B1 (en) * | 2002-07-26 | 2009-11-17 | Paltalk Holdings, Inc. | Method and system for managing high-bandwidth data sharing |
US20040181297A1 (en) * | 2003-03-12 | 2004-09-16 | Chambers Misty Mccrea | Methods and systems for management and control of an automation control module |
US7433968B2 (en) | 2003-03-12 | 2008-10-07 | Ge Fanuc Automation North America, Inc. | Methods and systems for management and control of an automation control module |
US20080215960A1 (en) * | 2003-03-24 | 2008-09-04 | Visionarts, Inc. | Content Administration System |
US10740425B2 (en) | 2003-03-24 | 2020-08-11 | Sony Corporation | Content administration system |
US20040243924A1 (en) * | 2003-03-24 | 2004-12-02 | Takeshi Fujita | Content administration system |
US7971133B2 (en) * | 2003-03-24 | 2011-06-28 | Sony Corporation | Content administration system |
US7272603B2 (en) * | 2003-03-24 | 2007-09-18 | Visionarts, Inc. | Content administration system |
US20050005027A1 (en) * | 2003-04-18 | 2005-01-06 | International Business Machines Corporation | Method and system for obtaining data through an IP transmission network by using an optimized domain name server |
US20110161986A1 (en) * | 2003-05-09 | 2011-06-30 | Vignette Corporation | System and computer program product for performing bulk operations on transactional items |
US7908608B2 (en) | 2003-05-09 | 2011-03-15 | Vignette Software Llc | Method and system for performing bulk operations on transactional items |
US20110196823A1 (en) * | 2003-05-09 | 2011-08-11 | Vignette Software Llc | Object based content management system and method |
US10146827B2 (en) | 2003-05-09 | 2018-12-04 | Open Text Sa Ulc | Object based content management system and method |
US9305033B2 (en) | 2003-05-09 | 2016-04-05 | Open Text S.A. | Object based content management system and method |
US20090070782A1 (en) * | 2003-05-09 | 2009-03-12 | Vignette Corporation | Method and system for performing bulk operations on transactional items |
US8364719B2 (en) | 2003-05-09 | 2013-01-29 | Open Text S.A. | Object based content management system and method |
US7941453B1 (en) * | 2003-05-09 | 2011-05-10 | Vignette Software Llc | Method and system for deployment of content using proxy objects |
US8136123B2 (en) | 2003-05-09 | 2012-03-13 | Open Text S.A. | System and computer program product for performing bulk operations on transactional items |
US8645471B2 (en) | 2003-07-21 | 2014-02-04 | Synchronoss Technologies, Inc. | Device message management system |
US9723460B1 (en) | 2003-07-21 | 2017-08-01 | Synchronoss Technologies, Inc. | Device message management system |
US9615221B1 (en) | 2003-07-21 | 2017-04-04 | Synchronoss Technologies, Inc. | Device message management system |
US8620286B2 (en) | 2004-02-27 | 2013-12-31 | Synchronoss Technologies, Inc. | Method and system for promoting and transferring licensed content and applications |
US11467883B2 (en) | 2004-03-13 | 2022-10-11 | Iii Holdings 12, Llc | Co-allocating a reservation spanning different compute resources types |
US11960937B2 (en) | 2004-03-13 | 2024-04-16 | Iii Holdings 12, Llc | System and method for an optimizing reservation in time of compute resources based on prioritization function and reservation policy parameter |
US9542076B1 (en) | 2004-05-12 | 2017-01-10 | Synchronoss Technologies, Inc. | System for and method of updating a personal profile |
US8611873B2 (en) | 2004-05-12 | 2013-12-17 | Synchronoss Technologies, Inc. | Advanced contact identification system |
US11652706B2 (en) | 2004-06-18 | 2023-05-16 | Iii Holdings 12, Llc | System and method for providing dynamic provisioning within a compute environment |
US11630704B2 (en) | 2004-08-20 | 2023-04-18 | Iii Holdings 12, Llc | System and method for a workload management and scheduling module to manage access to a compute environment according to local and non-local user identity information |
US11709709B2 (en) | 2004-11-08 | 2023-07-25 | Iii Holdings 12, Llc | System and method of providing system jobs within a compute environment |
US11537435B2 (en) | 2004-11-08 | 2022-12-27 | Iii Holdings 12, Llc | System and method of providing system jobs within a compute environment |
US11656907B2 (en) | 2004-11-08 | 2023-05-23 | Iii Holdings 12, Llc | System and method of providing system jobs within a compute environment |
US11537434B2 (en) | 2004-11-08 | 2022-12-27 | Iii Holdings 12, Llc | System and method of providing system jobs within a compute environment |
US11762694B2 (en) | 2004-11-08 | 2023-09-19 | Iii Holdings 12, Llc | System and method of providing system jobs within a compute environment |
US11494235B2 (en) | 2004-11-08 | 2022-11-08 | Iii Holdings 12, Llc | System and method of providing system jobs within a compute environment |
US11886915B2 (en) | 2004-11-08 | 2024-01-30 | Iii Holdings 12, Llc | System and method of providing system jobs within a compute environment |
US11861404B2 (en) | 2004-11-08 | 2024-01-02 | Iii Holdings 12, Llc | System and method of providing system jobs within a compute environment |
US11658916B2 (en) | 2005-03-16 | 2023-05-23 | Iii Holdings 12, Llc | Simple integration of an on-demand compute environment |
US11496415B2 (en) | 2005-04-07 | 2022-11-08 | Iii Holdings 12, Llc | On-demand access to compute resources |
US11831564B2 (en) | 2005-04-07 | 2023-11-28 | Iii Holdings 12, Llc | On-demand access to compute resources |
US11533274B2 (en) | 2005-04-07 | 2022-12-20 | Iii Holdings 12, Llc | On-demand access to compute resources |
US11522811B2 (en) | 2005-04-07 | 2022-12-06 | Iii Holdings 12, Llc | On-demand access to compute resources |
US11765101B2 (en) | 2005-04-07 | 2023-09-19 | Iii Holdings 12, Llc | On-demand access to compute resources |
US10171293B2 (en) | 2005-11-23 | 2019-01-01 | Comcast Cable Communications, Llc | Initializing, provisioning, and managing devices |
US20110026536A1 (en) * | 2005-11-23 | 2011-02-03 | Comcast Cable Holdings, Llc | Device-to-device communication among customer premise equipment devices |
US11196622B2 (en) | 2005-11-23 | 2021-12-07 | Comcast Cable Communications, Llc | Initializing, provisioning, and managing devices |
US8726306B2 (en) | 2005-11-23 | 2014-05-13 | Comcast Cable Holdings, Llc | Device-specific pre-provisoining access-limiting for a modem and a consumer premise equipment device |
US11650857B2 (en) | 2006-03-16 | 2023-05-16 | Iii Holdings 12, Llc | System and method for managing a hybrid computer environment |
US10828092B2 (en) | 2007-05-21 | 2020-11-10 | Atricure, Inc. | Cardiac ablation systems and methods |
US20090063978A1 (en) * | 2007-09-05 | 2009-03-05 | Sony Corporation | Network status icon in navigable toolbar |
US11522952B2 (en) | 2007-09-24 | 2022-12-06 | The Research Foundation For The State University Of New York | Automatic clustering for self-organizing grids |
US10735505B2 (en) | 2007-09-24 | 2020-08-04 | The Research Foundation For The State University Of New York | Automatic clustering for self-organizing grids |
US9602573B1 (en) | 2007-09-24 | 2017-03-21 | National Science Foundation | Automatic clustering for self-organizing grids |
US9654412B2 (en) | 2007-11-01 | 2017-05-16 | Comcast Cable Communications, Llc | Method and system for directing user between captive and open domains |
US8601545B2 (en) | 2007-11-01 | 2013-12-03 | Comcast Cable Holdings, Llc | Method and system for directing user between captive and open domains |
US11502969B2 (en) | 2007-11-01 | 2022-11-15 | Comcast Cable Communications, Llc | Method and system for directing user between captive and open domains |
US10200299B2 (en) | 2007-11-01 | 2019-02-05 | Comcast Cable Communications, Llc | Method and system for directing user between captive and open domains |
US8181111B1 (en) | 2007-12-31 | 2012-05-15 | Synchronoss Technologies, Inc. | System and method for providing social context to digital activity |
US9100223B2 (en) * | 2008-12-01 | 2015-08-04 | Google Inc. | Selecting format for content distribution |
US20100138553A1 (en) * | 2008-12-01 | 2010-06-03 | Google Inc. | Selecting Format for Content Distribution |
US11526304B2 (en) | 2009-10-30 | 2022-12-13 | Iii Holdings 2, Llc | Memcached server functionality in a cluster of data processing nodes |
US11720290B2 (en) | 2009-10-30 | 2023-08-08 | Iii Holdings 2, Llc | Memcached server functionality in a cluster of data processing nodes |
US8255006B1 (en) | 2009-11-10 | 2012-08-28 | Fusionone, Inc. | Event dependent notification system and method |
US8943428B2 (en) | 2010-11-01 | 2015-01-27 | Synchronoss Technologies, Inc. | System for and method of field mapping |
US10178195B2 (en) * | 2015-12-04 | 2019-01-08 | Cloudflare, Inc. | Origin server protection notification |
US10542107B2 (en) | 2015-12-04 | 2020-01-21 | Cloudflare, Inc. | Origin server protection notification |
Also Published As
Publication number | Publication date |
---|---|
JP2004509485A (en) | 2004-03-25 |
WO2001093536A3 (en) | 2002-07-04 |
CN1444746A (en) | 2003-09-24 |
AR030227A1 (en) | 2003-08-13 |
CA2410860A1 (en) | 2001-12-06 |
AU2001271282A1 (en) | 2001-12-11 |
EP1287455A2 (en) | 2003-03-05 |
KR20030022810A (en) | 2003-03-17 |
CA2410860C (en) | 2010-11-23 |
WO2001093536A2 (en) | 2001-12-06 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US6904460B1 (en) | Reverse content harvester | |
US7747772B2 (en) | Viewer object proxy | |
US6658000B1 (en) | Selective routing | |
US7213062B1 (en) | Self-publishing network directory | |
EP1287453B1 (en) | Content exchange apparatus | |
AU2001266652A1 (en) | A qos based content distribution network | |
AU2001275161A1 (en) | Content tracking | |
CA2413886A1 (en) | Client side holistic health check | |
CA2410804A1 (en) | Active directory for content objects | |
AU2001268137A1 (en) | Content manager | |
AU2001272931A1 (en) | Client side address routing analysis | |
CA2410866C (en) | Client side deterministic routing and transparent redirection |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: AEROCAST.COM, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:RACIBORSKI, NATHAN F.;THOMPSON, MARK R.;REEL/FRAME:011140/0477Effective date: 20000917 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
CC | Certificate of correction | ||
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: AEROCAST, INC., DELAWAREFree format text: CHANGE OF NAME;ASSIGNOR:AEROCAST.COM, INC.;REEL/FRAME:030600/0074Effective date: 20010502 |
|
AS | Assignment |
Owner name: GENERAL INSTRUMENT CORPORATION, PENNSYLVANIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:AEROCAST, INC.;REEL/FRAME:030605/0539Effective date: 20130415 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT HOLDINGS, INC.;REEL/FRAME:030725/0642Effective date: 20130528Owner name: GENERAL INSTRUMENT HOLDINGS, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT CORPORATION;REEL/FRAME:030725/0476Effective date: 20130415 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT HOLDINGS, INC.;REEL/FRAME:030866/0113Effective date: 20130528Owner name: GENERAL INSTRUMENT HOLDINGS, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT CORPORATION;REEL/FRAME:030764/0575Effective date: 20130415 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034472/0001Effective date: 20141028 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
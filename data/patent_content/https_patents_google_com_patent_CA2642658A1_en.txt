CA2642658A1 - User distributed search results - Google Patents
User distributed search results Download PDFInfo
- Publication number
- CA2642658A1 CA2642658A1 CA002642658A CA2642658A CA2642658A1 CA 2642658 A1 CA2642658 A1 CA 2642658A1 CA 002642658 A CA002642658 A CA 002642658A CA 2642658 A CA2642658 A CA 2642658A CA 2642658 A1 CA2642658 A1 CA 2642658A1
- Authority
- CA
- Canada
- Prior art keywords
- search
- user
- message
- search query
- results
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9536—Search customisation based on social or collaborative filtering
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9538—Presentation of query results
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/10—Office automation; Time management
- G06Q10/107—Computer-aided management of electronic mailing [e-mailing]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
- G06Q30/0251—Targeted advertisements
- G06Q30/0267—Wireless devices
Abstract
A universal distributed search system allows users to find and distribute search results to those with whom they communicate. The search results can be easily distributed by the user via a simple interface that allows the search results to be easily added to the user's content. Search queries entered by the user or search results received from search components may be automatically refined by the system. Search queries may also be automatically generated by the system.
Description
USER DISTRIBUTED SEARCH RESULTS
BACKGROUND
A. Field of the Disclosure The present disclosure relates generally to content creation, and more specifically, to the enhancement of user created content with search results.
B. Description of the Related Art In an increasingly networked world, users frequently use online sources to create and exchange information. Email, instant messaging (IM), message boards, websites, and blogs are all existing cornmunication technologies through which users can create and distribute content to other users. Frequently, in creating such content, a user may wish to reference other online information sources. For exaznple, a user authoring an email may use a browser to navigate to a web page that the user would like to reference in the email, copy the link (e.g., the uniform resource locator (URL))1'rom the browser to a "clipboard," and then paste the link from the clipboard into the einail. In this manner, the user can create an email message that contains links that are accessible by an eventual reader of the email.
Search engines are a popular tool through which users enter a search query describing information of interest and receive back documents or links to documents that relate to the search query. Frequently, when "researching" content for an email message, IM message, message board post, website post, or blog post, the user may perform one or more searches using one or more search engines to locate online documents relevant to the content. The user may then copy a link into the document using the above-described method of copying and pasting a link to the document. This process for amiotating user created content can be tedious, difficult to perform for average users, and often results in textual links in the final content that can be difficult to read.
Accordingly, it would be desirable to improve the above-described content creation process.
SUMMARY
One aspect is directed to a content creation system comprising a first interface to facilitate composition of a message by a user; and a second interface to receive a search query, display search results relating to the search query, and receive selections of the search results from the user, the content creation system automatically incorporating, in response to the selections, at least a portion of the selected ones of the search results into the message in the first interface.
Additionally, the first interface and the second in.terface may be simultaneously displayed near one another.
Additionally, content creation system may include an email application, an instant messaging application, a blog post creation application, an application for posting messages to Internet message boards, or a web site creation application.
Additionally, the first interface may be configured to facilitate annotation o#'the selected ones of the search results by the user.
Additionally, the selected search result may include a map.
Additionally, the at least a portion of the selected search results that are automatically incorporated into the message may include an image, an address, a phone number, or a price of a product.
Additionally, the content creation systein may further include logic to automatically generate the search query based on a content of the inessage.
Additionally, the logic to automatically generate the search query may include logic to implement entity recognition techniques on the message.
Additionally, the logic to automatically generate the search query may generate the search query when an entity returned by the logic to implement entity recognition matches predetermined criteria.
Additionally, the logic to implement entity recognition techniques may be trained to recognize products or locations in the message.
Additionally, the logic to inaplement entity recognition techniques may be trained to take into account a type of content creation system that is used by the user.
Additionally, the content creation system may further include logic to automatically modify the search query.
Additionally, the logic to automatically modify the search query may modify the search query based on a type of the content creation system.
Additionally, the logic to automatically modify the search query may modify the search query based on information relating to the user of the content creation system.
Additionally, the logic to automatically modify the search query may modify the search query based on information relating to an intended recipient of the message being created by the user of the content creation system.
Another aspect is directed to a method comprising providing a message interface configured to facilitate composition of a message by a user; receiving a search query; initiating a search based on the search query;
receiving results of the search; displaying the results of the search in an interface associated witli the message interface, the displayed results of the search each including a selection object; receiving selections of the selection objects from the user; and associating the results of the search that correspond to the selected ones of the selection objects with the message in the message interface.
Additionally, the interface associated with the message interface may include a sidebar displayed in the message interface.
Additionally, associating results of the search that correspond to the selected ones of the selection objects with the message may further include autoinatically incorporating at least a portion of the results of the search that correspond to the selected ones of the selection objects into the message.
Additionally, initiating the search may include transmitting the search query to a plurality of search services, the plurality of search services returning one or more search result types.
Additionally, the plurality of search services to which the search query is transmitted may be selectable by the user.
Additionally, receiving the search query may include automatically generating the search query based on the message.
Additionally, automatically generating a search query based on the niessage may include generating the search query using entity recognition techniques based on the message.
Additionally, the entity recognition techniques may be trained to recognize products or locations in the message.
Additionally, automatically generating the search query may include generating the search query in response to a triggering event.
Additionally, the triggering event may include a particular user action or user inactivity for a period of time.
BACKGROUND
A. Field of the Disclosure The present disclosure relates generally to content creation, and more specifically, to the enhancement of user created content with search results.
B. Description of the Related Art In an increasingly networked world, users frequently use online sources to create and exchange information. Email, instant messaging (IM), message boards, websites, and blogs are all existing cornmunication technologies through which users can create and distribute content to other users. Frequently, in creating such content, a user may wish to reference other online information sources. For exaznple, a user authoring an email may use a browser to navigate to a web page that the user would like to reference in the email, copy the link (e.g., the uniform resource locator (URL))1'rom the browser to a "clipboard," and then paste the link from the clipboard into the einail. In this manner, the user can create an email message that contains links that are accessible by an eventual reader of the email.
Search engines are a popular tool through which users enter a search query describing information of interest and receive back documents or links to documents that relate to the search query. Frequently, when "researching" content for an email message, IM message, message board post, website post, or blog post, the user may perform one or more searches using one or more search engines to locate online documents relevant to the content. The user may then copy a link into the document using the above-described method of copying and pasting a link to the document. This process for amiotating user created content can be tedious, difficult to perform for average users, and often results in textual links in the final content that can be difficult to read.
Accordingly, it would be desirable to improve the above-described content creation process.
SUMMARY
One aspect is directed to a content creation system comprising a first interface to facilitate composition of a message by a user; and a second interface to receive a search query, display search results relating to the search query, and receive selections of the search results from the user, the content creation system automatically incorporating, in response to the selections, at least a portion of the selected ones of the search results into the message in the first interface.
Additionally, the first interface and the second in.terface may be simultaneously displayed near one another.
Additionally, content creation system may include an email application, an instant messaging application, a blog post creation application, an application for posting messages to Internet message boards, or a web site creation application.
Additionally, the first interface may be configured to facilitate annotation o#'the selected ones of the search results by the user.
Additionally, the selected search result may include a map.
Additionally, the at least a portion of the selected search results that are automatically incorporated into the message may include an image, an address, a phone number, or a price of a product.
Additionally, the content creation systein may further include logic to automatically generate the search query based on a content of the inessage.
Additionally, the logic to automatically generate the search query may include logic to implement entity recognition techniques on the message.
Additionally, the logic to automatically generate the search query may generate the search query when an entity returned by the logic to implement entity recognition matches predetermined criteria.
Additionally, the logic to implement entity recognition techniques may be trained to recognize products or locations in the message.
Additionally, the logic to inaplement entity recognition techniques may be trained to take into account a type of content creation system that is used by the user.
Additionally, the content creation system may further include logic to automatically modify the search query.
Additionally, the logic to automatically modify the search query may modify the search query based on a type of the content creation system.
Additionally, the logic to automatically modify the search query may modify the search query based on information relating to the user of the content creation system.
Additionally, the logic to automatically modify the search query may modify the search query based on information relating to an intended recipient of the message being created by the user of the content creation system.
Another aspect is directed to a method comprising providing a message interface configured to facilitate composition of a message by a user; receiving a search query; initiating a search based on the search query;
receiving results of the search; displaying the results of the search in an interface associated witli the message interface, the displayed results of the search each including a selection object; receiving selections of the selection objects from the user; and associating the results of the search that correspond to the selected ones of the selection objects with the message in the message interface.
Additionally, the interface associated with the message interface may include a sidebar displayed in the message interface.
Additionally, associating results of the search that correspond to the selected ones of the selection objects with the message may further include autoinatically incorporating at least a portion of the results of the search that correspond to the selected ones of the selection objects into the message.
Additionally, initiating the search may include transmitting the search query to a plurality of search services, the plurality of search services returning one or more search result types.
Additionally, the plurality of search services to which the search query is transmitted may be selectable by the user.
Additionally, receiving the search query may include automatically generating the search query based on the message.
Additionally, automatically generating a search query based on the niessage may include generating the search query using entity recognition techniques based on the message.
Additionally, the entity recognition techniques may be trained to recognize products or locations in the message.
Additionally, automatically generating the search query may include generating the search query in response to a triggering event.
Additionally, the triggering event may include a particular user action or user inactivity for a period of time.
2 Additionally, the method may include automatically modifying the search query.
Additionally, automatically modifying the search query may include modifying the search query based on a type of a content creation system implemented by the message interface.
Additionally, automatically modifying the search query may include modifying the search query based on information relating to the user.
Additionally, automatically modifying the search query may include modifying the aearch query based on information relating to an intended recipient of the message being created by the user.
Yet another aspect is directed to a system comprising a plurality of search services, each of the search services operable to receive a search request, execute a search based on the search request to generate search results, and transmit the search results. The system may also include a programming object operable to receive a search request and a search query used to implement the search request; invoke one or more of the search services to execute the search request; receive the search results transmitted from the plurality of search services; display one or more of the search results to the user; receive a selection of the one or more of the sear.ch results; and incorporate, in response to the received selection, at least a portion of the selected one or more of the search results into a message that is being composed by the user.
Additionally, the programming object may be further operable to automatically modify the received search query based on information relating to the user.
BRIEF DESCRIPTION OF THB DRAWINGS
The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate one or more embodiments of the invention and, together witlz the description, explain the invention. In the drawings, Figs. lA-1 C are diagrams providing a conceptual overview of concepts relating to user distributed search results;
Fig. 2 is a diagram of an exemplary system in which concepts consistent with the principles of the invention may be implemented;
Fig. 3 is an exemplary diagram of a client or server illustrated in Fig. 2;
k'ig. 4 is a flow chart illustrating exemplary operations consistent with user distributed search;
Fig. 5 is a diagram of an exemplary email interface;
Fig. 6 is a diagram illustrating an exeinplary email message that was annotated to include a search result from a local search engine;
Fig. 7 is an exemplary interface illustrating application of user distributed search to a message board environment;
Fig. 8 is an exemplary interface illustrating application of user distributed search to an instant messaging conversation;
Fig. 9 is an exemplary interface illustrating application of user distributed search to a blog authoring tool;
Fig. 10 is a diagram illustrating exemplary components in a user distributed search system;
Fig. 11 is a flow chart illustrating additional exemplary operations consistent with user distributed search;
Fig. 12 is an exemplary interface illustrating application of user distributed search in which search results are automatically obtained;
Fig. 13 is a flow chart illustrating additional exemplary operations consistent with user distributed search;
Additionally, automatically modifying the search query may include modifying the search query based on a type of a content creation system implemented by the message interface.
Additionally, automatically modifying the search query may include modifying the search query based on information relating to the user.
Additionally, automatically modifying the search query may include modifying the aearch query based on information relating to an intended recipient of the message being created by the user.
Yet another aspect is directed to a system comprising a plurality of search services, each of the search services operable to receive a search request, execute a search based on the search request to generate search results, and transmit the search results. The system may also include a programming object operable to receive a search request and a search query used to implement the search request; invoke one or more of the search services to execute the search request; receive the search results transmitted from the plurality of search services; display one or more of the search results to the user; receive a selection of the one or more of the sear.ch results; and incorporate, in response to the received selection, at least a portion of the selected one or more of the search results into a message that is being composed by the user.
Additionally, the programming object may be further operable to automatically modify the received search query based on information relating to the user.
BRIEF DESCRIPTION OF THB DRAWINGS
The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate one or more embodiments of the invention and, together witlz the description, explain the invention. In the drawings, Figs. lA-1 C are diagrams providing a conceptual overview of concepts relating to user distributed search results;
Fig. 2 is a diagram of an exemplary system in which concepts consistent with the principles of the invention may be implemented;
Fig. 3 is an exemplary diagram of a client or server illustrated in Fig. 2;
k'ig. 4 is a flow chart illustrating exemplary operations consistent with user distributed search;
Fig. 5 is a diagram of an exemplary email interface;
Fig. 6 is a diagram illustrating an exeinplary email message that was annotated to include a search result from a local search engine;
Fig. 7 is an exemplary interface illustrating application of user distributed search to a message board environment;
Fig. 8 is an exemplary interface illustrating application of user distributed search to an instant messaging conversation;
Fig. 9 is an exemplary interface illustrating application of user distributed search to a blog authoring tool;
Fig. 10 is a diagram illustrating exemplary components in a user distributed search system;
Fig. 11 is a flow chart illustrating additional exemplary operations consistent with user distributed search;
Fig. 12 is an exemplary interface illustrating application of user distributed search in which search results are automatically obtained;
Fig. 13 is a flow chart illustrating additional exemplary operations consistent with user distributed search;
3 Fig. 14 is an exemplary email interface illustrating refinement of search queries; and Fig. 15 is a flow chart illustrating additional exemplary operations consistent with user distributed search.
DETAILED DESCRIPTION
The following detailed description refers to the accompanying d3rawings. The detailed description does not limit the invention.
OVERVIEW
Implementations consistent with the principles of the invention relate to allowing users to distribute search results (possibly including advertisements) to those with whom they communicate. The scarch results can be easily distributed by the user via a simple interface that allows the search results to be added to the user's content with a single mouse click (or other intuitive gestures or commands). ln, some implementations, the search results may be automatically formatted when being included into the user's content to create a high quality link within the content.
Figs. 1A-1C are diagrams providing a conceptual overview of concepts described herein. In this example, assume that a user ("Arthur") is responding to an email from a friend ("Mark") requesting inforination about a caniera lens. Fig. 1 A is a diagram illustrating aii exemplary email 110 in which Arthur responds with a short text message informing Mark that the lens he was telling Mark about is the "100min F 2.$." Email 110 exemplifies a typical user email responding to a question. Fig. 1B is a diagram illustrating an another exemplary email, labeled as email 120, in which Arthur responds with the same message informing Mark ot'the lens about which he was telling Mark. Additionally, in email 120, Arthur pastes a link 125 into email 120 that references a review of the lens. As can be seem by the text of link 125, link 125 is a textually long link that contains a number of terrns that convey little information and are probably meaningless to Mark. Email 120 exemplifies a another typical user email responding to a question.
Fig. 1C is a diagram illustrating an exemplary email 130 in which Arthur responds to Mark's email using tools described herein. In contrast to emails 110 and 120, email 130 may include, in addition to the same textual response 135 from Arthur to Mark, a number of links and/or content 140 that were inserted by Arthur when creating the email. Links/content 140 may be information that was automatically generated by the email program used by Arthur in response to Arthur entering a search query such as "Canon100mm macro lens." As shown, links/content 140 include two images 141, two links 142 returned from a general web search engine, an advertisement 143 returned from an advertisement search engine, and a link 144 to a local company that was generated in response to a searoh performed by a local search engine. Arthur may have chosen, to use each of links/content 140 by, for example, a single mouse click on a graphical button associated with each of the results of the search query.
As can be appreciated from Figs. lA-1 C, the workflow illustrated by emails 110 and 120 is sub-optimal for both the reader and the email author. In contrast, email 130 (Fig. 1C) would likely be considered a "higher fidelity"
communication than either email 110 or 120. Email 130 includes a nuinber of links to documents that are themselves easily read and that were explicitly selected by the author of the email.
SYSTE-M OVERVIEW
Fig. 2 is a diagram of an exemplary system 200 in which concepts consistent with the principles ol'the invention may be iniplemented. System 200 may include inultiple clients 210 that can connect to servers, such as servers 220-A, 220-B or 230, via a network 240. Network 240 may include a local area networic (LAN), a wide area network (WAN), a telephone network, such as the Public Switched Telephone Network (PSTN), an intranet, the lnternet, or a combination of networks. Two clients 210 and three servers 220-A, 220-B and 230 are illustrated as connected to network 240 for simplicity. In practice, there may be more clients and/or servers. Also, in some
DETAILED DESCRIPTION
The following detailed description refers to the accompanying d3rawings. The detailed description does not limit the invention.
OVERVIEW
Implementations consistent with the principles of the invention relate to allowing users to distribute search results (possibly including advertisements) to those with whom they communicate. The scarch results can be easily distributed by the user via a simple interface that allows the search results to be added to the user's content with a single mouse click (or other intuitive gestures or commands). ln, some implementations, the search results may be automatically formatted when being included into the user's content to create a high quality link within the content.
Figs. 1A-1C are diagrams providing a conceptual overview of concepts described herein. In this example, assume that a user ("Arthur") is responding to an email from a friend ("Mark") requesting inforination about a caniera lens. Fig. 1 A is a diagram illustrating aii exemplary email 110 in which Arthur responds with a short text message informing Mark that the lens he was telling Mark about is the "100min F 2.$." Email 110 exemplifies a typical user email responding to a question. Fig. 1B is a diagram illustrating an another exemplary email, labeled as email 120, in which Arthur responds with the same message informing Mark ot'the lens about which he was telling Mark. Additionally, in email 120, Arthur pastes a link 125 into email 120 that references a review of the lens. As can be seem by the text of link 125, link 125 is a textually long link that contains a number of terrns that convey little information and are probably meaningless to Mark. Email 120 exemplifies a another typical user email responding to a question.
Fig. 1C is a diagram illustrating an exemplary email 130 in which Arthur responds to Mark's email using tools described herein. In contrast to emails 110 and 120, email 130 may include, in addition to the same textual response 135 from Arthur to Mark, a number of links and/or content 140 that were inserted by Arthur when creating the email. Links/content 140 may be information that was automatically generated by the email program used by Arthur in response to Arthur entering a search query such as "Canon100mm macro lens." As shown, links/content 140 include two images 141, two links 142 returned from a general web search engine, an advertisement 143 returned from an advertisement search engine, and a link 144 to a local company that was generated in response to a searoh performed by a local search engine. Arthur may have chosen, to use each of links/content 140 by, for example, a single mouse click on a graphical button associated with each of the results of the search query.
As can be appreciated from Figs. lA-1 C, the workflow illustrated by emails 110 and 120 is sub-optimal for both the reader and the email author. In contrast, email 130 (Fig. 1C) would likely be considered a "higher fidelity"
communication than either email 110 or 120. Email 130 includes a nuinber of links to documents that are themselves easily read and that were explicitly selected by the author of the email.
SYSTE-M OVERVIEW
Fig. 2 is a diagram of an exemplary system 200 in which concepts consistent with the principles ol'the invention may be iniplemented. System 200 may include inultiple clients 210 that can connect to servers, such as servers 220-A, 220-B or 230, via a network 240. Network 240 may include a local area networic (LAN), a wide area network (WAN), a telephone network, such as the Public Switched Telephone Network (PSTN), an intranet, the lnternet, or a combination of networks. Two clients 210 and three servers 220-A, 220-B and 230 are illustrated as connected to network 240 for simplicity. In practice, there may be more clients and/or servers. Also, in some
4 instances, a client may perform one or more functions of a server and a server may perform one or more functions of a client.
A client 2 10 may include a device, such as a personal computer, a lap top computer, a wireless telephone, a personal digital assistant (PDA), or another type of computation or coinrnunication device. Users of clients 210 may access or receive information from servers 220-A, 220-B or 230.
Clients 210 may include software, such as a web browser 215, for interacting with network 240. Browser programs are well known and are widely available in the art. When browsers or browser programs are discussed herein, these terins are intended to refer to any program that allows a user to browse documents (e.g., web documents), regardless of whether the browser program is a stand alone program or an embedded program, such as a browser program included as part of an operating system.
Clients 210 may also include a local content creation component 218. Local content creation component 218 may include one or more software applications designed to assist the user in generating content. For example, in the context of email, local content creation component 218 inay include an email application for composing, sending, and reading email. In the context of instant messaging, local content creation component 218 may include a client IM program for composing, sending, and reading instant messages. In alternate implementations, local content creation component 218 may be embodied as other content creation applications, such as applications designed to assist users in creating blog posts, designing or editing web sites, or posting to message boards.
In some situations, users of clients 210 may create content using networked applications using server 230 in place of or as a supplement to using local content creation components 218.
More particularly, server 230 may include content creation component 235, which may provide content creation services to clients 210. Por example, server 230 may provide email services to clients 210, such as by providing a web interface through which users of clients 210 can compose, send, and read email messages using browsers 215. In the context of instant messaging, content creatioii component 235 may be a server side portion of the IM
application and may interact with a client-side IM application embodied by local content creation component 218. ln alternate implementations, content creation component 235 may be embodied as other network-based content creation applications, such as applications designed to assist users in creating blog posts, designing or editing web sites, or posting to message boards.
In the implementation shown, servers 220-A and 220-B may generally provide network services, such as search services, to clients 210 or to server 230 via network service components 225-A and 225-B. For example, network service component 225-A may include a search engine designed to index documents, such as web pages, connected to network 240. In this implementation, in response to search queries received from clients or other servers in system 200, network service component 225-A may return links to documents determined by network service component 225-A to be relevant to the search query. Network service coinponeflts 225, as well as being general web search engines, may be specialized web search engines, such as, for example, search engines that return general web search results, image search results, video search results, local search results, geographic search results, product search results, listing search results, email search results, blog search results, message group search results, news search results, digitized content search results, local network search results (e.g. desktop search or corporate network search), or advertisements. The operation of search engines are luiown in the art and will not be described further herein. Additionally, in some iinplementations, the search results inay include a history of previous search results viewed by tE1e user. In other words, a user may select to see a history of his/her search results.
In some implementations, one or more of network service components 225 may provide advertisements.
For example, assume that network service component 225-B of server 220-B is an advertisement server. Server
A client 2 10 may include a device, such as a personal computer, a lap top computer, a wireless telephone, a personal digital assistant (PDA), or another type of computation or coinrnunication device. Users of clients 210 may access or receive information from servers 220-A, 220-B or 230.
Clients 210 may include software, such as a web browser 215, for interacting with network 240. Browser programs are well known and are widely available in the art. When browsers or browser programs are discussed herein, these terins are intended to refer to any program that allows a user to browse documents (e.g., web documents), regardless of whether the browser program is a stand alone program or an embedded program, such as a browser program included as part of an operating system.
Clients 210 may also include a local content creation component 218. Local content creation component 218 may include one or more software applications designed to assist the user in generating content. For example, in the context of email, local content creation component 218 inay include an email application for composing, sending, and reading email. In the context of instant messaging, local content creation component 218 may include a client IM program for composing, sending, and reading instant messages. In alternate implementations, local content creation component 218 may be embodied as other content creation applications, such as applications designed to assist users in creating blog posts, designing or editing web sites, or posting to message boards.
In some situations, users of clients 210 may create content using networked applications using server 230 in place of or as a supplement to using local content creation components 218.
More particularly, server 230 may include content creation component 235, which may provide content creation services to clients 210. Por example, server 230 may provide email services to clients 210, such as by providing a web interface through which users of clients 210 can compose, send, and read email messages using browsers 215. In the context of instant messaging, content creatioii component 235 may be a server side portion of the IM
application and may interact with a client-side IM application embodied by local content creation component 218. ln alternate implementations, content creation component 235 may be embodied as other network-based content creation applications, such as applications designed to assist users in creating blog posts, designing or editing web sites, or posting to message boards.
In the implementation shown, servers 220-A and 220-B may generally provide network services, such as search services, to clients 210 or to server 230 via network service components 225-A and 225-B. For example, network service component 225-A may include a search engine designed to index documents, such as web pages, connected to network 240. In this implementation, in response to search queries received from clients or other servers in system 200, network service component 225-A may return links to documents determined by network service component 225-A to be relevant to the search query. Network service coinponeflts 225, as well as being general web search engines, may be specialized web search engines, such as, for example, search engines that return general web search results, image search results, video search results, local search results, geographic search results, product search results, listing search results, email search results, blog search results, message group search results, news search results, digitized content search results, local network search results (e.g. desktop search or corporate network search), or advertisements. The operation of search engines are luiown in the art and will not be described further herein. Additionally, in some iinplementations, the search results inay include a history of previous search results viewed by tE1e user. In other words, a user may select to see a history of his/her search results.
In some implementations, one or more of network service components 225 may provide advertisements.
For example, assume that network service component 225-B of server 220-B is an advertisement server. Server
5 220-B may receive requests from other servers or from clients for advertisements. The advertiseinents returaned by server 220-B to the requesting server or client may be advertisements that are relevant to a search query, document, or other data.
Although illustrated as single devices in Fig. 2, each of servers 220-A, 220-B
and 230 may be implemented as, for example, a single computing device or as multiple distributed computing devices. Also, in some implementations, the functionality of multiple servers, such as servers 220-B and 230, may be combined as a single server or a single group of distributed computing devices.
EXEMPLARY COMPUTING
DEVICE ARCHITECTURE
Fig. 3 is an exemplary diagram of a computing device 300, such as one of clients 210 or servers 220 or 230. Computing device 300 may include a bus 310, a processor 320, a main memory 330, a read only memory (ROM) 340, a storage device 350, an input device 360, an output device 370, and a communication interface 380.
Bus 310 may iaiclude a path that permits communication among the components of computing device 300.
Processor 320 may include any type of processor, microprocessor, or processing logic that interprets and executes instructions. Main memory 330 may include a random access memory (RAIV!) or another type of dynamic storage device that may store information and instructions for execution by processor 320. ROM 340 may include a ROM device or another type of static storage device that may store static information and instructions for use by processor 320. Storage device 350 may include a magnetic and/or optical recording medium and its corresponding drive.
Input device 360 may include a mechanism that permits a user to input information to computing device 300, such as a keyboard, a mouse, a pen, voice recognition and/or biometric mechanisms, etc. Output device 370 may include a conventional mechanism that outputs information to the user, including a display, a printer, a speaker, etc. Communication interface 380 may include any transceiver-like mechanism that enables computing device 300 to communicate with other devices and/or systems. For example, coinmunication interface 380 may include mechanisms for communicating with another device or system via a network, such as network 240.
Network service coinponents 225 and content creation component 235 in servers 220-A, 220-B and 230, respectively, may be implemented in software and stored in a computer-readable medium, such as memory 330. A
computer-readable medium may be defined as one or more physical or logical memory devices and/or carrier waves.
The software instructions defining network service components 225 and content creation component 235 may be read into memory 330 from another computer-readable medium, such as data storage device 350, or from another device via communication interface 380. The software instructions contained in memory 330 cause processor 320 to perform processes that will be described later.
Alternatively, hardwired circuitry may be used in place of or in combination with software instructions to implement processes consistent with the present invention.
Thus, implementations consistent with the principles of the invention are not limited to any specific combination of hardware circuitry and software.
USER DISTRIBUTED SEARCH RESULTS
Consistent with an aspect of the invention, users generating content, such as content created with one or both of content creation coanponent 235 or local content creation component 218, may easily incorporate search results and/or advertisements into their content creation workflow.
Incorporation of search results and/or advertisements in the manner described herein will be referred to as user distributed search (UDS).
Although illustrated as single devices in Fig. 2, each of servers 220-A, 220-B
and 230 may be implemented as, for example, a single computing device or as multiple distributed computing devices. Also, in some implementations, the functionality of multiple servers, such as servers 220-B and 230, may be combined as a single server or a single group of distributed computing devices.
EXEMPLARY COMPUTING
DEVICE ARCHITECTURE
Fig. 3 is an exemplary diagram of a computing device 300, such as one of clients 210 or servers 220 or 230. Computing device 300 may include a bus 310, a processor 320, a main memory 330, a read only memory (ROM) 340, a storage device 350, an input device 360, an output device 370, and a communication interface 380.
Bus 310 may iaiclude a path that permits communication among the components of computing device 300.
Processor 320 may include any type of processor, microprocessor, or processing logic that interprets and executes instructions. Main memory 330 may include a random access memory (RAIV!) or another type of dynamic storage device that may store information and instructions for execution by processor 320. ROM 340 may include a ROM device or another type of static storage device that may store static information and instructions for use by processor 320. Storage device 350 may include a magnetic and/or optical recording medium and its corresponding drive.
Input device 360 may include a mechanism that permits a user to input information to computing device 300, such as a keyboard, a mouse, a pen, voice recognition and/or biometric mechanisms, etc. Output device 370 may include a conventional mechanism that outputs information to the user, including a display, a printer, a speaker, etc. Communication interface 380 may include any transceiver-like mechanism that enables computing device 300 to communicate with other devices and/or systems. For example, coinmunication interface 380 may include mechanisms for communicating with another device or system via a network, such as network 240.
Network service coinponents 225 and content creation component 235 in servers 220-A, 220-B and 230, respectively, may be implemented in software and stored in a computer-readable medium, such as memory 330. A
computer-readable medium may be defined as one or more physical or logical memory devices and/or carrier waves.
The software instructions defining network service components 225 and content creation component 235 may be read into memory 330 from another computer-readable medium, such as data storage device 350, or from another device via communication interface 380. The software instructions contained in memory 330 cause processor 320 to perform processes that will be described later.
Alternatively, hardwired circuitry may be used in place of or in combination with software instructions to implement processes consistent with the present invention.
Thus, implementations consistent with the principles of the invention are not limited to any specific combination of hardware circuitry and software.
USER DISTRIBUTED SEARCH RESULTS
Consistent with an aspect of the invention, users generating content, such as content created with one or both of content creation coanponent 235 or local content creation component 218, may easily incorporate search results and/or advertisements into their content creation workflow.
Incorporation of search results and/or advertisements in the manner described herein will be referred to as user distributed search (UDS).
6 Fig. 4 is a flow chart illustrating exemplary operations consistent with UDS.
A user may begin by opening a content creation application for the type ocontent that the user desires to create (act 401). For the exeznplary operations shown in p'ig. 4, assume that the user is composing an email using a web-based email application. That is, assume content creation coinponent 235 provides web-based email services to the user via a browser 215.
Content creation component 235 may provide a graphical interface that includes a UDS section (act 402).
Fig. 5 is a diagram of an exeinplary email interface 500. Email interface 500 may include fields such as "To:" field 502, "Subject:" field 504, and message field 506 in which the user may compose an email message in a typical manner. Additionally, in this implementation, interface 500 includes a UDS
sidebar 510. In some implementations, UDS sidebar 510 may be presented as a graphical window, toolbar, or other element of interface 500 that the user can selectably display or hide from view. As shown, UDS sidebar 510 includes a search query field 520 and a number o#'search result sections 522-528. In this example, search result sections 522-528 include: image result section 522, local search result section 524, general web search result section 526, and advertisement result section 528. A selectable graphical button, such as arrows 530 may allow the user to hide or view each of search result sections 522-528. As shown, results in local search result section 524 ("local results") are hidden while search result sections 522, 526, and 528 are selected to show search results. In some implementations, the user of the email application may be able to customize which of the search results sections are shown in UDS sidebar 510.
The user may, at some point while composing the email, enter a search query into search query field 520 (act 403). In some implemenÃations, instead of the user manually entering a seaxch, search queries may be automatically generated and/or executed, such as by generating search queries based on content entered by the user, or semi-automatically generated and/or executed, such as by allowing searches to be performed when a user "hovers" over a word or selection with a graphical pointing device (act 403).
In response, content creation component 235 may transmit the search query to each of the appropriate network service components 235. In this example, content creation component 235 may transmit the search query to three network service components 235, respectively implementing an image search engine, a local web search engine, and a general web search engine.
Content creation component 235 may also transmit the search query to aziother network search component 235 that implements an advertisement server. The search results returned from each of these four "search objects" may then be shown to the user (act 404). In some implementations, the user may select one of the search results to view the underlying document in a separate browser window.
As illustrated in the example of Fig. 5, the user entered the search query "Canon Macro Lens" into search query field 520. The returned search results include a number of images 540 related to this search, a number of relevant web sites 542 related to the search, and an advertisement 544 related to the search. Each of the returned search results may include a link or other graphical selection object that allows the user to select the search result for inclusion in to the message being composed. In this implementation, a "save" link 550 is shown below each of the search results.
The user may decide to include one or more of the search results in the email (act 405). The user may do so by simply selecting the appropriate save link 550, which causes content creation component 235 to copy the corresponding search result into the email. In response, content creation component 235 may write the selected results to the email, such as to the message field 506 of the email (act 406).
As shown, in this example, the user has selected two images 560, two general web results 561, an advertisement 562, and a local search result 563, for inclusion in the email being composed. In one implementation, the results may be automatically placed below message field 506 in the email. In other implementations, content creation component 235 may allow the user to control the placement of the results in the email, such as by graphically dragging different results to different
A user may begin by opening a content creation application for the type ocontent that the user desires to create (act 401). For the exeznplary operations shown in p'ig. 4, assume that the user is composing an email using a web-based email application. That is, assume content creation coinponent 235 provides web-based email services to the user via a browser 215.
Content creation component 235 may provide a graphical interface that includes a UDS section (act 402).
Fig. 5 is a diagram of an exeinplary email interface 500. Email interface 500 may include fields such as "To:" field 502, "Subject:" field 504, and message field 506 in which the user may compose an email message in a typical manner. Additionally, in this implementation, interface 500 includes a UDS
sidebar 510. In some implementations, UDS sidebar 510 may be presented as a graphical window, toolbar, or other element of interface 500 that the user can selectably display or hide from view. As shown, UDS sidebar 510 includes a search query field 520 and a number o#'search result sections 522-528. In this example, search result sections 522-528 include: image result section 522, local search result section 524, general web search result section 526, and advertisement result section 528. A selectable graphical button, such as arrows 530 may allow the user to hide or view each of search result sections 522-528. As shown, results in local search result section 524 ("local results") are hidden while search result sections 522, 526, and 528 are selected to show search results. In some implementations, the user of the email application may be able to customize which of the search results sections are shown in UDS sidebar 510.
The user may, at some point while composing the email, enter a search query into search query field 520 (act 403). In some implemenÃations, instead of the user manually entering a seaxch, search queries may be automatically generated and/or executed, such as by generating search queries based on content entered by the user, or semi-automatically generated and/or executed, such as by allowing searches to be performed when a user "hovers" over a word or selection with a graphical pointing device (act 403).
In response, content creation component 235 may transmit the search query to each of the appropriate network service components 235. In this example, content creation component 235 may transmit the search query to three network service components 235, respectively implementing an image search engine, a local web search engine, and a general web search engine.
Content creation component 235 may also transmit the search query to aziother network search component 235 that implements an advertisement server. The search results returned from each of these four "search objects" may then be shown to the user (act 404). In some implementations, the user may select one of the search results to view the underlying document in a separate browser window.
As illustrated in the example of Fig. 5, the user entered the search query "Canon Macro Lens" into search query field 520. The returned search results include a number of images 540 related to this search, a number of relevant web sites 542 related to the search, and an advertisement 544 related to the search. Each of the returned search results may include a link or other graphical selection object that allows the user to select the search result for inclusion in to the message being composed. In this implementation, a "save" link 550 is shown below each of the search results.
The user may decide to include one or more of the search results in the email (act 405). The user may do so by simply selecting the appropriate save link 550, which causes content creation component 235 to copy the corresponding search result into the email. In response, content creation component 235 may write the selected results to the email, such as to the message field 506 of the email (act 406).
As shown, in this example, the user has selected two images 560, two general web results 561, an advertisement 562, and a local search result 563, for inclusion in the email being composed. In one implementation, the results may be automatically placed below message field 506 in the email. In other implementations, content creation component 235 may allow the user to control the placement of the results in the email, such as by graphically dragging different results to different
7 positions in the email. For example, a user may, by dragging a search result over an image or other portion of text, cause the image or other portion of text to become anchor text for the link that refers to the search results. Content creation component 235 may allow the user to implement other editorial controls, such as providing the user with the ability to annotate search results or to add an indication of the search query that was used to generate the search result.
In some implementations, in addition to content creation component 235 writing the selected results to the email, the content creation component may additionally copy the selected results to other locations, such as an operating system's "clipboard." Whether results are also copied to the clipboard may be a user selectable option.
The user may then, if desired, paste the results into other applications.
The user may continue to edit the content, enter or refine search queries, and select results for the content until the user is ready to send or post the content (acts 407 and 408). In the example, of Fig. 5, the user may enter a "send email" command when the user is ready to send the email. The email, when received by the recipient, inay appear as email 130 (Fig. I. C). The recipient of the email may be able to conveniently view the web pages corresponding to the links by selecting the links. The links underlying the image search results, in particular, may take the user to the web page at which the image is hosted.
As can be seen from Fig. 5, the selected results 560-563, in contrast to links that are typically pasted into emails between users, such as link 125 (Fig. IB), are fornnatted in a visually appealing manner and thus provide a higher quality content tlzan typical links that a user would normally paste into content (e.g., such as link 125 of Fig.
1B). More specifically, the links relating to the search results inay, as shown in Figs. IC and 5, include the actual link to the search result, a short snippet of text that may be selected based on terms in the search query, and the dornain corresponding to the returned result. Additionally, the user may select chosen results via a simple process, such as by a single mouse click on a link 550 or by a "drag and drop"
selection operation associated with link 550, thus providing even relatively unsophisticated coinputer users wittl the ability to enhance their content with search results.
Fig. 6 is a diagram.illustrating an exemplary einail message that was annotated using UDS to include a search result to a local search engine. In this example, email message 600 is an email message relating to a book club meeting. The sender of the email message is informing the other members of the book club that the meeting location has changed to a local restaurant ("Cafe Del Sol.") To support this message, the sender has added two search results from a local search engine. The first, result 602, refers to a web page that discusses the restaurant.
The second, result 604, links to a local search engine result web page 610 that includes a map 615 showing the location of the restaurant. As illustrated in this example, a user can quickly add links to valuable information to an email, such as a link to a map of a location referred to in the email. In some implementations, instead of a search result being a link to a map, the search result nzay be a map image that is sent inline with the email message, another type of image, an address, a phone number, or a price of a product that is sent inline with the email message.
ADVERTISEMENTS
In some implementations, content creators that place advertisement links in their content may be given some form of credit if the reader of the advertisement selects the advertisement linlc.. The credit can be monetary or take some other form. Because of the high likelihood that an advertisement incorporated by a content creator into their content is relevant and/or likely to be viewed by the reader, a number of different business models are possible. For example, advertisers may be charged a premium or charged based on a different rate scale for advertisements distributed via UDS.
In some implementations, in addition to content creation component 235 writing the selected results to the email, the content creation component may additionally copy the selected results to other locations, such as an operating system's "clipboard." Whether results are also copied to the clipboard may be a user selectable option.
The user may then, if desired, paste the results into other applications.
The user may continue to edit the content, enter or refine search queries, and select results for the content until the user is ready to send or post the content (acts 407 and 408). In the example, of Fig. 5, the user may enter a "send email" command when the user is ready to send the email. The email, when received by the recipient, inay appear as email 130 (Fig. I. C). The recipient of the email may be able to conveniently view the web pages corresponding to the links by selecting the links. The links underlying the image search results, in particular, may take the user to the web page at which the image is hosted.
As can be seen from Fig. 5, the selected results 560-563, in contrast to links that are typically pasted into emails between users, such as link 125 (Fig. IB), are fornnatted in a visually appealing manner and thus provide a higher quality content tlzan typical links that a user would normally paste into content (e.g., such as link 125 of Fig.
1B). More specifically, the links relating to the search results inay, as shown in Figs. IC and 5, include the actual link to the search result, a short snippet of text that may be selected based on terms in the search query, and the dornain corresponding to the returned result. Additionally, the user may select chosen results via a simple process, such as by a single mouse click on a link 550 or by a "drag and drop"
selection operation associated with link 550, thus providing even relatively unsophisticated coinputer users wittl the ability to enhance their content with search results.
Fig. 6 is a diagram.illustrating an exemplary einail message that was annotated using UDS to include a search result to a local search engine. In this example, email message 600 is an email message relating to a book club meeting. The sender of the email message is informing the other members of the book club that the meeting location has changed to a local restaurant ("Cafe Del Sol.") To support this message, the sender has added two search results from a local search engine. The first, result 602, refers to a web page that discusses the restaurant.
The second, result 604, links to a local search engine result web page 610 that includes a map 615 showing the location of the restaurant. As illustrated in this example, a user can quickly add links to valuable information to an email, such as a link to a map of a location referred to in the email. In some implementations, instead of a search result being a link to a map, the search result nzay be a map image that is sent inline with the email message, another type of image, an address, a phone number, or a price of a product that is sent inline with the email message.
ADVERTISEMENTS
In some implementations, content creators that place advertisement links in their content may be given some form of credit if the reader of the advertisement selects the advertisement linlc.. The credit can be monetary or take some other form. Because of the high likelihood that an advertisement incorporated by a content creator into their content is relevant and/or likely to be viewed by the reader, a number of different business models are possible. For example, advertisers may be charged a premium or charged based on a different rate scale for advertisements distributed via UDS.
8 ADDITIONAL EXEMPLARY IMPLEMENTATIONS
OF UDS
The above descÃiption of UDS was primarily in the context of sending email content. As previously mentioned, UDS can be applied equally well to other forms of content creation.
Figs. 7-9 illustrate other additional applications of UDS.
Fig. 7 is an exemplary interface illustrating application of UDS to a message board environment. A web message board can generally be defined as a facility on the web for holding discussions. Message boards are typically organized into topics in which users post messages relating to the appropriate topic.
In Fig. 7, an exemplary message board interface 700 is presented to a user, such as an interface presented through a browser 215. As shown in interface 700, a first user has posted a message 710 asking for advice relating to a crank for a bicycle. A second user responds with a message 715 . Through UDS, the poster supplements message 715 with a number of search results 720. The search results 720 include images 725 of the cranks under discussion, an advertisement 730 for a bicycle store mentioned in message 715, a link 735 to a web site of the company that produces the cranks, and a link 740 pointing to a local distributor of the cranks. Tllrough UDS, the user responding to message 710 was able to effectively supplement the text of message 715 with links that he specifically selected as being relevant to the topic under discussion.
p'ig. 8 is an exemplary interface illustrating application of UDS to an instant messaging conversation.
Instant messaging can generally be defined as the act of instantly conimunicating-between two or more people over a network such as the Internet.
In Fig. 8, an exemplary instant messaging interface 800 is presented to a user, such as an interface presented by a local content creation component 218 (e.g., an IM client) executing at a client 210. Instant messaging interface 800 includes a message display portion 810 through which transmitted instant messages are displayed, a messaging area 820 in which users may enter messages that they are going to transmit, and UDS
inteÃfacc 830. In this exainple, the two participants in tEie conversation (Mark and Cindy) are discussing possible vineyards to visit. Through UDS, each user has selectively augmented their messages with links relating to the particular vineyard under discussion. In this manner, UDS interface 830 can enhance the quality of the instant messaging conversation by, for example, allowing users to both search from within IM interface 800 and easily share selected linlcs from the search with other users.
Fig. 9 is an exemplary interface illustrating application of UDS to a blog authoring tool. A blog (shortened form of weblog or web log) is a website in which items are posted on a regular basis and generally displayed in reverse chronological order.
In Fig. 9, an exemplary interface 900 of a blog authoring tool presented to a user, such as a web based blog authoring tool implemented by content creation component 235 or a locally executed blog authoring tool implemented by local content creation component 218. Interface 900 may include a blog authoring section 910 in which a blogger may enter and edit blog posts. UDS interface 920 allows the blogger to enter search queries and receive search results in a manner similar to UDS sidebar 510 (Fig. 5). Search results selected by the blogger may be displayed in result section 930 of interface 900. When the blogger is ready to publish the post, "publish post"
button 940 may cause the text entered by the blogger in section 910 and the search results selected by the blogger in result section 930 to both be published as a single blog post to the blogger's blog.
ADDITIONAL DETAILS OF AN EXEMPLARY IMPLEMENTATION
OF THE UDS
OF UDS
The above descÃiption of UDS was primarily in the context of sending email content. As previously mentioned, UDS can be applied equally well to other forms of content creation.
Figs. 7-9 illustrate other additional applications of UDS.
Fig. 7 is an exemplary interface illustrating application of UDS to a message board environment. A web message board can generally be defined as a facility on the web for holding discussions. Message boards are typically organized into topics in which users post messages relating to the appropriate topic.
In Fig. 7, an exemplary message board interface 700 is presented to a user, such as an interface presented through a browser 215. As shown in interface 700, a first user has posted a message 710 asking for advice relating to a crank for a bicycle. A second user responds with a message 715 . Through UDS, the poster supplements message 715 with a number of search results 720. The search results 720 include images 725 of the cranks under discussion, an advertisement 730 for a bicycle store mentioned in message 715, a link 735 to a web site of the company that produces the cranks, and a link 740 pointing to a local distributor of the cranks. Tllrough UDS, the user responding to message 710 was able to effectively supplement the text of message 715 with links that he specifically selected as being relevant to the topic under discussion.
p'ig. 8 is an exemplary interface illustrating application of UDS to an instant messaging conversation.
Instant messaging can generally be defined as the act of instantly conimunicating-between two or more people over a network such as the Internet.
In Fig. 8, an exemplary instant messaging interface 800 is presented to a user, such as an interface presented by a local content creation component 218 (e.g., an IM client) executing at a client 210. Instant messaging interface 800 includes a message display portion 810 through which transmitted instant messages are displayed, a messaging area 820 in which users may enter messages that they are going to transmit, and UDS
inteÃfacc 830. In this exainple, the two participants in tEie conversation (Mark and Cindy) are discussing possible vineyards to visit. Through UDS, each user has selectively augmented their messages with links relating to the particular vineyard under discussion. In this manner, UDS interface 830 can enhance the quality of the instant messaging conversation by, for example, allowing users to both search from within IM interface 800 and easily share selected linlcs from the search with other users.
Fig. 9 is an exemplary interface illustrating application of UDS to a blog authoring tool. A blog (shortened form of weblog or web log) is a website in which items are posted on a regular basis and generally displayed in reverse chronological order.
In Fig. 9, an exemplary interface 900 of a blog authoring tool presented to a user, such as a web based blog authoring tool implemented by content creation component 235 or a locally executed blog authoring tool implemented by local content creation component 218. Interface 900 may include a blog authoring section 910 in which a blogger may enter and edit blog posts. UDS interface 920 allows the blogger to enter search queries and receive search results in a manner similar to UDS sidebar 510 (Fig. 5). Search results selected by the blogger may be displayed in result section 930 of interface 900. When the blogger is ready to publish the post, "publish post"
button 940 may cause the text entered by the blogger in section 910 and the search results selected by the blogger in result section 930 to both be published as a single blog post to the blogger's blog.
ADDITIONAL DETAILS OF AN EXEMPLARY IMPLEMENTATION
OF THE UDS
9 It can be recognized that the UDS described above can be irnplemented usizig a number of different programming and hardware technologies. A high-level description of one exemplary ina.plezn.en.tation will now be given.
Fig. 10 is a diagram illustrating exemplary components in a UDS system. As shown in Fig. 10, a client 210 communicates with UDS engine 1037 at application server 230, which may in turn communicate with search services 1040-A through 1040-N at one or more servers 220. In this implementation, portions of the content application, such as an email application, may be a web-based application that is transmitted to browser 215 on an on-demand basis. At browser 215, the email application may include, for example, a JavaScript object 1016 that interfaces with a user interface portion 1017 to provide the final user interface that is displayed in browser 215 based on, for example, HTMT. (hyper-text markup language) and CSS (cascading style sheets) data supplied from JavaScript application 1016.
User interface portion 1017 and JavaScript object 1016 together act to reduce the start-stop start-stop nature of'traditional browser-based web applications, as JavaScript object 1016 adds a client-side layer that can handle many of the user interactions with user interface portion 1017. Instead of loading a web page at the start of a user session, browser 215 may load JavaScript application 1016 from server 230 (or, alternatively, from a local cache). JavaScript object 1016 may be responsible for both rendering the interface the user sees and comrra.unicating with content creation component of server 230 on the user's behalf.
JavaScript object 1016 may be a dynamically configured object that allows for dynamic selection of which network serviees, such as which search services 1040, to use. JavaScript object 1016 may implement a number of different functions at client 210. For example, JavaScript object 1016 may allow the interface to be positioned where desired in the client display. Additionally, JavaScript object 1016 may implement a search control object that limits search results to a small number of highly relevant results per search. The search control object may atmotate each search result with an element that, when clicked, allows the user to save the search result to the content creation interface.
In some implementations, TavaScript object 1016 may be an object that is designed to be easily integrated into existing web-based JavaScript applications, thus providing a convenient application programniing interface (API) through which programmers can incorporate UDS into their programs.
UDS engine 1037 may provide an interface with JavaScript object 1016. In response to JavaScript object 1016, UDS interface may annotate search requests, perform searches through appropriate search seivices 1040-A
through 1040-N, and serialize results of the searches. Search services 1040-A
through 1040-N may return search results, such as general web-based search results, image results, etc., or return relevant advertisements, in response to requests from UDS engine 1037.
AUTOMATED GENERATION OF SEARCH R1aSUI.,TS
In the UDS described above, search results were primarily described as being obtained based on a search query entered by the user. In alternate implementations, the UDS may automatically generate search queries and perform potential searches using automatically generated search queries.
Referring back to Fig. 4, in act 403, a search query may be entered by a user or automatically generated.
Fig. 11 is a diagram illustrating additional details that may be associated with act 403. In particular, as shown in p'ig. 11, a search query may be generated based on a search query received frona a user (act 1101) or based on the automatic generation of a search query (acts 1102 - 1104).
In act 1101, a search query may be received from a user. As previously mentioned, this act may be based on a user typing a search query into a search query field, such as search query field 520. Alteniatively, in some implementations, instead of the user typing a search query, the user may select search terms in other ways, such as by "hovering" over a word or selection with a graphical pointing device Instead of waiting for a user to provide a search query, the UDS may automatically generate search queries based on, for example, entity recognition techniques performed using the content entered by the user or content otherwise associated with content creation application 218/235 (act 1102).
Entity recognition techniques are generally known in the art, and may include, for example, techniques designed to recognize entities such as products, places, organizations, or any other entities that tend to be subjects of searches. The entity recognition techniques can be based on linguistic grammar models or statistical inodels.
In one possible implernentation, the entity recognition techniques may be particularly adopted to locate terms that correspond to commercial products or terms that define an address, such as a postal address.
If an entity is recognized in act 1102 that is detercnined to be relevant enough for a search to be executed, the entity may be submitted as a search query to the appropriate network service components 225 (acts 1103 and 1104). In some implementations, if multiple entities are received they anay be combined and submitted as a single search query, submitted as multiple separate search queries, or filtered to remove less relevaait entities before combining the remaining entities as a search query. In some implementations, the UDS system may only submit the determined entity to certain ones of the network service components 225 based on the type of entity. For example, an address inay be submitted to a mapping or local search network service component, while a commercial product may be submitted to a shopping network service component and an advertisement network service component. Referring back to Fig. 4, the returned search results may then be shown in the UDS interface and, as previously described, potentially selected by the user and incorporated into the content being created by the user (acts 405-407).
In some implementations, the entity recognition techniques may additionally take into account context relating to the particular content creation component 218/235 or state of the content creation component 218/235 that is being used by the user. For example, entity recognition techniques applied to a message board content creation component may be biased to look for terms in the content that relate to the topic o#'the message board. As another example, entity recognition techniques applied to a blog authoring tool may be biased to look for terms in the content that relate to the general topic of the blog (e.g., if the blog is a computer software blog, the entity recognition techniques may be biased to locate terms relating to computer software).
Acts 1102-1104 may be performed in real-time (or near real-time) as the user is typing or otherwise editing content. In this way, potentially relevaiit search results can be dynamically updated and shown to the user without interrupting the workflow of the user. In other iinplementations, acts 1102-1104 may be performed in response to a trigger event. Possible examples of such triggering events iriclude: a user opening a composition interface, such as when the user selects a "reply" button in an email interface, or the user initiating a spell check operation (or other operation); user inactivity for a set period of time, such as when a period of time elapses in which content creation application 218/235 does not receive input from the user.
Fig. 12 is aii exemplary interface 1200 illustrating application of user distributed search in which search results are automatically obtained. InteÃface 1200 is an email interface that is similar to email interface 500 (Fig. 5).
In particular, interface 1200 may include "To:" field 502, "Subject:" field 504, and message field 506 in which the user may compose an email message in a typical manner. Additionally, interface 1200 may include selected search results 560 through 563, as described previously.
In contrast to the example shown in Fig. 5, however, in whach. UDS sidebar 510 provides user-selectable search results, UDS sidebar 1210 may include multiple sidebars, shown in interface 1200 as an auto-generated results section (sidebar) 1211 and a user-generated results section (sidebar) 1212. User-generated results section 1212 may function similarly to UDS sidebar 510. That is, a user may enter search queries in search box 1220 and view results of the search in one or more search resiults sections 1222 and 1224.
Auto-generated results section 1211 may include search results that are generated automatically by the UDS (acts 1102 - 1104). The results may be generated in-real time or in near real-time by the UDS system as the user creates content (e.g., by typing content). Auto-generated results section 1211 may include a search query section 1240, in which the search query that was autoinatically generated by the UDS (act 1102) is shown, and a search result portion 1245. Search result portion 1245 may include search results for the automatically generated query that is shown in search query section 1240. In this example, search result portion 1245 includes an image result section 1246 and general web search result section 1247. Graphical arrow buttons may allow the user to hide or view each of the search result sections. As shown, results in image result section 1246 ("image results") are hidden while general web search result section 1247 is selected to show search results.
Whether auto-generated search results section 1211 and/or user-generated search results section 1212 is displayed in interface 1200 may be configurable by the user. In the example of interface 1200, search results sections 1211 and 1212 include "close" buttons 1250 and 1251, respectively, which may operate to remove the respective results sections 1211 or 1212 from the UDS interface. With,these buttons, the user may disable auto-generation of search queries.
Search results sections 1211 and 1212, in addition to being closeable by the user, may include an option to allow the search results sections to be detached from interface 1200. In other words, the user may be able to cause search results sections 1211 and 1212 to become a separate window within a graphical interface.
In altemate implementations, instead of presenting an interface to the user that includes multiple sidebars as shown in interface 1200, the UDS may present a single sidebar to the user tlzrough which both manually entered search queries and automatically generated search queries are shown to the user. For example, the UDS system may autoinatically generate search queries and display the results to the user as long as the user does not manually enter a search query. When the user manually enters a search query, the system may refrain from automatically generating further search queries. Also, the user may be able to disable the automated portion of the search generation.
Further, in some alternate implementations, the UDS may automatically generate search queries as described above but may not automatically submit the search queries to network service components 325. Instead, the UDS may, for example, display the search queries in search query section 1240. The user, if interested in the automatically generated search query, may submit it to one or more of the network service components 225.
REFINEMENT OF UDS SEARCI-I RESULTS
With the UDS system described above, search results were presented to the user based on a search query entered by the user or automatically generated based on entity recognition techniques. In alternate implementations, the search results or search queries may be further refined by the LTDS system before being shown to the user.
Referring back to Fig. 4, in act 403, a search query may be entered by a user or automatically generated.
In response, content creation component 235 may transmit the search query to each of the appropriate network service components 235 and the search results returned from each of the network seivice components may then be shown to the user (act 404).
Fig. 13 is a flow chart illustrating additional exemplary operations that may be associated with act 404.
The search query obtained in act 403 may be refined by the UDS system (act 1302). In general, the UDS may refine the search query by modifying the search query with the goal of increasing the relevancy of the search results. Refining a search query does not necessarity imply that the search query is narrowed to return fewer search results; in some situations, a refined search query may return more search results than the original search query. In one implementation, the search query may be refined to include additional information relating to the particular type of content creation application 218/235. For instance, if content creation application 2I8/235 is an application designed to facilitate posts to a message board, content creation application 218/235 inay automatically add terms to the search query that relate to the topic of the message board. When a user is adding a post to the message board "rec.bicycles.tech," for example, the UDS system may modify user entered UDS
search queries (or automatically generated UDS search queries) to include terms relating to the rnessage board, such as by adding the terms "bicycle" or "gear," etc. In some implementations, whether the UDS system adds terms to refine a search query may be based on the specificity of the received search query. For example, if the received search query contains many terms or if it contains terms that are relatively uncomrnon, the UDS may refrain from additionally narrowing the search query, while a search query that is determined by the UDS to be particularly broad may be refined.
In addition to refining searcli queries to iilclude additional inforination relating to the particular type of content creation application 218/235, search queries may be refined based on particular users of the content creation application 218/235 or based on users to whom messages are addressed that are created with content creation application 218/235 (act 1302).
As an example of refining search queries based on the users of the content creation application 218/235 or based on users to whom messages are addressed, consider the exemplary email message illustrated in Fig. 14. In email message 1400, the sender of the email message is informing the recipient of the email of a local restaurant ("Cafe Del Sol") at which they are to meet. To support this message, the sender has added search results 1460 from a local search engine that were selected from local results 1445. In implementations consistent with aspects of the invention, the search results may be based on search queries that were automatically refined to include references to the locations of the sender of the email message or the recipient of the email message. For example, local search result 1461 may link to a local search engine result web page that includes a map showing the location of the restaurant relative to the location of the recipient of the email message. The location of the email recipient may be known from information entered by the recipient when signing up for an email account if the recipient of the email message is using the same enzail platform as the sender. As another example, local search results 1445 may include search results based on multiple local searches, such as a local search refined based on the sender's location and a local search refined based on the recipient's location.
As another example of refining search queries based on the users of content creation application 218/235, the UDS system may generate an explicit or implicit profile of the user and use the profile when refining the search results. The profile may be based on, for example, past searches by the user or explicit profile or preference information entered by the user.
As yet another example of refining search queries, the UDS system may refine search queries by modifying individual terins within the search queries, such as by adding synonyms of terms already in the search query, by stemming terms already in the search query, or by substituting or suggesting spelling corrections to terms in the search query.
The search query refined in, act 1302 may be submitted to the appropriate network service components (act 1303). The search results received back from the network search components may then be presented to the user (acts 1304 and 1305). Certain of these search results, such as search results 1445, for example, may be selected by the user and included in the document, as previously described.
Fig. 15 is a flow chart illustrating additional exemplary operations that may be associated with act 404 consistent with an alternative embodiment. The search query obtained in act 403 may be submitted to the appropriate network service components 225 by content creation component 218/235 (act 1502). The search results may be received by content creation component 218/235 (act 1503). The received search results may be refined by content creatioii cornponent 218/235 by, for example, ranking the search results or filtering the search results (act 1504). This refinement may be performed with the goal of increasing the relevancy of the search results presented to the user. In general, refining search results will refer to modifying or reevaluating the relevance order of the search results. Typically, search results that are higher in the relevance order are the results that are presented to the user first or presented most prominently to the user.
In one implementation, additional inforin.ation relating to the particular type of content creation application 218/235 may be used to refine the search results. For instance, if content creation component 218/235 is an application designed to facilitate posts to a niessage board and the particular message board being posted-to is the message board "rec.bicycles.tech," content creation application 235 may refine the search results by ranking the results to emphasize results that are more relevant to bicycles or removing (filtering) results that are not related to bicycles.
In another possible implementation, the search results may be refined based on infoi-mation relating to the user of content creation application 218/235 or based on information relating to the intended recipients of the content. As an example of this, consider a profile created by or for the user that includes areas of interest of the user. The profile may be used as a basis to re-rank the search results. In other possible implementations, other information, such as, for a message board post, geographic information that is relevant to the message board post, may be used to refine the search results.
The refined search results may then be presented to a user (act 1505).
ADDITIONAL CONCEPTS
The user selection of search results when creating content may provide an indication that the selected search results are relevant to the search query. For example, the search results selected by a user may be used as part of a reputation network. In geiieral, a reputation network in some way quantifies the reputation or score of users as to their expertise in certain categories or topics. In the context of UDS, if a particular user incorporates a large nunlber of search results into content and the search results are frequently selected by readers of the content, this may be an indication that the user is an "expert" in the topic relating to the content, and his reputation score for the topic may be increased. This application may be particularly relevant to content applications such as message boards, where the message boards are typically categorized by topic.
More generally, regarding reputation, the gesture of selecting a result may be feed back into the system to impact, for example, raw result ranking, raw value of an advertisement, raw reputation of a user perforniing a selection, or raw reputation of an application using UDS. These raw reputation results can be used, for example, to modify a docum.ont or advertisement ranking used by the underlying search engines.
Advertisements presented through UDS may, in particular, represent advertisements that have a higher likelihood of click through and may therefore be more valuable to the advertiser. These advertisements may, for example, cost more than or be provided on different terms than other advertisements. In some implementations, the revenue or other benefit derived from advertisements selected by the content creator may be in some way shared with the content creator. In some situations, the fact that an advertisement is selected by an end user may be used in some way to modify a reputation of the content creator that selected the advertisement.
Additionally, in some implementations, content with search results selected by a user may be additionally automatically modified or supplemented, such as by adding additional links to advertisements or products that are determined to be relevant to the selected search results. As an example of this, consider an advertisement for a merchant included in an email message by the author of the email message. It may be desirable to include an additional advertisement from the merchant in the email, stich as an advertisement relating to an offer for free shipping from the merchant. These additional or follow-on advertisements may be displayed within the message itself or as advertisements presented to the user via a different channel. For example, if the recipient of the email message is viewing the email message using a web-based email application, the follow-on advertisement may be displayed outside of the message itself, such as in a portion of the browser that the web-based email application normally uses to present advertisements to its users.
Additionally, in some implementations, tEie UDS search query field, such as search query field 520 (Fig.
5), instead of causing searches to be executed through network service components (e.g., network search engines), may perforni other types of local or network search. For example, the search query may alternatively or additionally be submitted to a local (e.g., a desktop) search service or to a search service integrated in the content creation application. For example, a network email content creation application may include a search service that allows a user to search previously sent or received emails. In this situation, the TJDS search query field may additionally use the search services of the content creation application.
CONCLUSION
The foregoing description of exemplary embodiments of the invention provides illustration and description, but is not intended to be exhaustive or to limit the invention to the precise forn disclosed.
Modifications and variations are possible in light of the above teachings or may be acquired from practice of the invention.
Moreover, while series of acts have been described with regard to Figs. 4, 11, 13, and 15 the order of the acts may be varied in otller implementations consistent with the inventioji.
Moreover, non-dependent acts may be implemented in parallel.
It will also be apparent to one of ordinary skill in the art that aspects of the invention, as described above, may be implemented in many different forms of software, firmware, and hardware in the implementations illustrated in the figures. The actual software code or specialized control hardware used to implement aspects consistent with the principles of the invention is not limiting of the invention. Thus, the operation and behavior of the aspects of the invention were described without reference to the specific software code - it being understood that one of ordinary skill in the art would be able to design software and control hardware to implement the aspects based on the description herein.
Further, certain portions of the invention may be implemented as "logic" or a "component" that performs one or more functions. This logic may include hardware, such as an application specific integrated circuit or a field programmable gate array, software, or a combination of 1lardware and software.
No element, act, or instruction used in the description of the invention should be construed as critical or essential to the invention unless explicitly described as such. Also, as used herein, the article "a" is intended to include one or more items. Where only one item is intended, the term "one" or similar language is used. Further, the phrase "based on" is intended to mean "based, at least in part, on" unless explicitly stated otherwise.
Fig. 10 is a diagram illustrating exemplary components in a UDS system. As shown in Fig. 10, a client 210 communicates with UDS engine 1037 at application server 230, which may in turn communicate with search services 1040-A through 1040-N at one or more servers 220. In this implementation, portions of the content application, such as an email application, may be a web-based application that is transmitted to browser 215 on an on-demand basis. At browser 215, the email application may include, for example, a JavaScript object 1016 that interfaces with a user interface portion 1017 to provide the final user interface that is displayed in browser 215 based on, for example, HTMT. (hyper-text markup language) and CSS (cascading style sheets) data supplied from JavaScript application 1016.
User interface portion 1017 and JavaScript object 1016 together act to reduce the start-stop start-stop nature of'traditional browser-based web applications, as JavaScript object 1016 adds a client-side layer that can handle many of the user interactions with user interface portion 1017. Instead of loading a web page at the start of a user session, browser 215 may load JavaScript application 1016 from server 230 (or, alternatively, from a local cache). JavaScript object 1016 may be responsible for both rendering the interface the user sees and comrra.unicating with content creation component of server 230 on the user's behalf.
JavaScript object 1016 may be a dynamically configured object that allows for dynamic selection of which network serviees, such as which search services 1040, to use. JavaScript object 1016 may implement a number of different functions at client 210. For example, JavaScript object 1016 may allow the interface to be positioned where desired in the client display. Additionally, JavaScript object 1016 may implement a search control object that limits search results to a small number of highly relevant results per search. The search control object may atmotate each search result with an element that, when clicked, allows the user to save the search result to the content creation interface.
In some implementations, TavaScript object 1016 may be an object that is designed to be easily integrated into existing web-based JavaScript applications, thus providing a convenient application programniing interface (API) through which programmers can incorporate UDS into their programs.
UDS engine 1037 may provide an interface with JavaScript object 1016. In response to JavaScript object 1016, UDS interface may annotate search requests, perform searches through appropriate search seivices 1040-A
through 1040-N, and serialize results of the searches. Search services 1040-A
through 1040-N may return search results, such as general web-based search results, image results, etc., or return relevant advertisements, in response to requests from UDS engine 1037.
AUTOMATED GENERATION OF SEARCH R1aSUI.,TS
In the UDS described above, search results were primarily described as being obtained based on a search query entered by the user. In alternate implementations, the UDS may automatically generate search queries and perform potential searches using automatically generated search queries.
Referring back to Fig. 4, in act 403, a search query may be entered by a user or automatically generated.
Fig. 11 is a diagram illustrating additional details that may be associated with act 403. In particular, as shown in p'ig. 11, a search query may be generated based on a search query received frona a user (act 1101) or based on the automatic generation of a search query (acts 1102 - 1104).
In act 1101, a search query may be received from a user. As previously mentioned, this act may be based on a user typing a search query into a search query field, such as search query field 520. Alteniatively, in some implementations, instead of the user typing a search query, the user may select search terms in other ways, such as by "hovering" over a word or selection with a graphical pointing device Instead of waiting for a user to provide a search query, the UDS may automatically generate search queries based on, for example, entity recognition techniques performed using the content entered by the user or content otherwise associated with content creation application 218/235 (act 1102).
Entity recognition techniques are generally known in the art, and may include, for example, techniques designed to recognize entities such as products, places, organizations, or any other entities that tend to be subjects of searches. The entity recognition techniques can be based on linguistic grammar models or statistical inodels.
In one possible implernentation, the entity recognition techniques may be particularly adopted to locate terms that correspond to commercial products or terms that define an address, such as a postal address.
If an entity is recognized in act 1102 that is detercnined to be relevant enough for a search to be executed, the entity may be submitted as a search query to the appropriate network service components 225 (acts 1103 and 1104). In some implementations, if multiple entities are received they anay be combined and submitted as a single search query, submitted as multiple separate search queries, or filtered to remove less relevaait entities before combining the remaining entities as a search query. In some implementations, the UDS system may only submit the determined entity to certain ones of the network service components 225 based on the type of entity. For example, an address inay be submitted to a mapping or local search network service component, while a commercial product may be submitted to a shopping network service component and an advertisement network service component. Referring back to Fig. 4, the returned search results may then be shown in the UDS interface and, as previously described, potentially selected by the user and incorporated into the content being created by the user (acts 405-407).
In some implementations, the entity recognition techniques may additionally take into account context relating to the particular content creation component 218/235 or state of the content creation component 218/235 that is being used by the user. For example, entity recognition techniques applied to a message board content creation component may be biased to look for terms in the content that relate to the topic o#'the message board. As another example, entity recognition techniques applied to a blog authoring tool may be biased to look for terms in the content that relate to the general topic of the blog (e.g., if the blog is a computer software blog, the entity recognition techniques may be biased to locate terms relating to computer software).
Acts 1102-1104 may be performed in real-time (or near real-time) as the user is typing or otherwise editing content. In this way, potentially relevaiit search results can be dynamically updated and shown to the user without interrupting the workflow of the user. In other iinplementations, acts 1102-1104 may be performed in response to a trigger event. Possible examples of such triggering events iriclude: a user opening a composition interface, such as when the user selects a "reply" button in an email interface, or the user initiating a spell check operation (or other operation); user inactivity for a set period of time, such as when a period of time elapses in which content creation application 218/235 does not receive input from the user.
Fig. 12 is aii exemplary interface 1200 illustrating application of user distributed search in which search results are automatically obtained. InteÃface 1200 is an email interface that is similar to email interface 500 (Fig. 5).
In particular, interface 1200 may include "To:" field 502, "Subject:" field 504, and message field 506 in which the user may compose an email message in a typical manner. Additionally, interface 1200 may include selected search results 560 through 563, as described previously.
In contrast to the example shown in Fig. 5, however, in whach. UDS sidebar 510 provides user-selectable search results, UDS sidebar 1210 may include multiple sidebars, shown in interface 1200 as an auto-generated results section (sidebar) 1211 and a user-generated results section (sidebar) 1212. User-generated results section 1212 may function similarly to UDS sidebar 510. That is, a user may enter search queries in search box 1220 and view results of the search in one or more search resiults sections 1222 and 1224.
Auto-generated results section 1211 may include search results that are generated automatically by the UDS (acts 1102 - 1104). The results may be generated in-real time or in near real-time by the UDS system as the user creates content (e.g., by typing content). Auto-generated results section 1211 may include a search query section 1240, in which the search query that was autoinatically generated by the UDS (act 1102) is shown, and a search result portion 1245. Search result portion 1245 may include search results for the automatically generated query that is shown in search query section 1240. In this example, search result portion 1245 includes an image result section 1246 and general web search result section 1247. Graphical arrow buttons may allow the user to hide or view each of the search result sections. As shown, results in image result section 1246 ("image results") are hidden while general web search result section 1247 is selected to show search results.
Whether auto-generated search results section 1211 and/or user-generated search results section 1212 is displayed in interface 1200 may be configurable by the user. In the example of interface 1200, search results sections 1211 and 1212 include "close" buttons 1250 and 1251, respectively, which may operate to remove the respective results sections 1211 or 1212 from the UDS interface. With,these buttons, the user may disable auto-generation of search queries.
Search results sections 1211 and 1212, in addition to being closeable by the user, may include an option to allow the search results sections to be detached from interface 1200. In other words, the user may be able to cause search results sections 1211 and 1212 to become a separate window within a graphical interface.
In altemate implementations, instead of presenting an interface to the user that includes multiple sidebars as shown in interface 1200, the UDS may present a single sidebar to the user tlzrough which both manually entered search queries and automatically generated search queries are shown to the user. For example, the UDS system may autoinatically generate search queries and display the results to the user as long as the user does not manually enter a search query. When the user manually enters a search query, the system may refrain from automatically generating further search queries. Also, the user may be able to disable the automated portion of the search generation.
Further, in some alternate implementations, the UDS may automatically generate search queries as described above but may not automatically submit the search queries to network service components 325. Instead, the UDS may, for example, display the search queries in search query section 1240. The user, if interested in the automatically generated search query, may submit it to one or more of the network service components 225.
REFINEMENT OF UDS SEARCI-I RESULTS
With the UDS system described above, search results were presented to the user based on a search query entered by the user or automatically generated based on entity recognition techniques. In alternate implementations, the search results or search queries may be further refined by the LTDS system before being shown to the user.
Referring back to Fig. 4, in act 403, a search query may be entered by a user or automatically generated.
In response, content creation component 235 may transmit the search query to each of the appropriate network service components 235 and the search results returned from each of the network seivice components may then be shown to the user (act 404).
Fig. 13 is a flow chart illustrating additional exemplary operations that may be associated with act 404.
The search query obtained in act 403 may be refined by the UDS system (act 1302). In general, the UDS may refine the search query by modifying the search query with the goal of increasing the relevancy of the search results. Refining a search query does not necessarity imply that the search query is narrowed to return fewer search results; in some situations, a refined search query may return more search results than the original search query. In one implementation, the search query may be refined to include additional information relating to the particular type of content creation application 218/235. For instance, if content creation application 2I8/235 is an application designed to facilitate posts to a message board, content creation application 218/235 inay automatically add terms to the search query that relate to the topic of the message board. When a user is adding a post to the message board "rec.bicycles.tech," for example, the UDS system may modify user entered UDS
search queries (or automatically generated UDS search queries) to include terms relating to the rnessage board, such as by adding the terms "bicycle" or "gear," etc. In some implementations, whether the UDS system adds terms to refine a search query may be based on the specificity of the received search query. For example, if the received search query contains many terms or if it contains terms that are relatively uncomrnon, the UDS may refrain from additionally narrowing the search query, while a search query that is determined by the UDS to be particularly broad may be refined.
In addition to refining searcli queries to iilclude additional inforination relating to the particular type of content creation application 218/235, search queries may be refined based on particular users of the content creation application 218/235 or based on users to whom messages are addressed that are created with content creation application 218/235 (act 1302).
As an example of refining search queries based on the users of the content creation application 218/235 or based on users to whom messages are addressed, consider the exemplary email message illustrated in Fig. 14. In email message 1400, the sender of the email message is informing the recipient of the email of a local restaurant ("Cafe Del Sol") at which they are to meet. To support this message, the sender has added search results 1460 from a local search engine that were selected from local results 1445. In implementations consistent with aspects of the invention, the search results may be based on search queries that were automatically refined to include references to the locations of the sender of the email message or the recipient of the email message. For example, local search result 1461 may link to a local search engine result web page that includes a map showing the location of the restaurant relative to the location of the recipient of the email message. The location of the email recipient may be known from information entered by the recipient when signing up for an email account if the recipient of the email message is using the same enzail platform as the sender. As another example, local search results 1445 may include search results based on multiple local searches, such as a local search refined based on the sender's location and a local search refined based on the recipient's location.
As another example of refining search queries based on the users of content creation application 218/235, the UDS system may generate an explicit or implicit profile of the user and use the profile when refining the search results. The profile may be based on, for example, past searches by the user or explicit profile or preference information entered by the user.
As yet another example of refining search queries, the UDS system may refine search queries by modifying individual terins within the search queries, such as by adding synonyms of terms already in the search query, by stemming terms already in the search query, or by substituting or suggesting spelling corrections to terms in the search query.
The search query refined in, act 1302 may be submitted to the appropriate network service components (act 1303). The search results received back from the network search components may then be presented to the user (acts 1304 and 1305). Certain of these search results, such as search results 1445, for example, may be selected by the user and included in the document, as previously described.
Fig. 15 is a flow chart illustrating additional exemplary operations that may be associated with act 404 consistent with an alternative embodiment. The search query obtained in act 403 may be submitted to the appropriate network service components 225 by content creation component 218/235 (act 1502). The search results may be received by content creation component 218/235 (act 1503). The received search results may be refined by content creatioii cornponent 218/235 by, for example, ranking the search results or filtering the search results (act 1504). This refinement may be performed with the goal of increasing the relevancy of the search results presented to the user. In general, refining search results will refer to modifying or reevaluating the relevance order of the search results. Typically, search results that are higher in the relevance order are the results that are presented to the user first or presented most prominently to the user.
In one implementation, additional inforin.ation relating to the particular type of content creation application 218/235 may be used to refine the search results. For instance, if content creation component 218/235 is an application designed to facilitate posts to a niessage board and the particular message board being posted-to is the message board "rec.bicycles.tech," content creation application 235 may refine the search results by ranking the results to emphasize results that are more relevant to bicycles or removing (filtering) results that are not related to bicycles.
In another possible implementation, the search results may be refined based on infoi-mation relating to the user of content creation application 218/235 or based on information relating to the intended recipients of the content. As an example of this, consider a profile created by or for the user that includes areas of interest of the user. The profile may be used as a basis to re-rank the search results. In other possible implementations, other information, such as, for a message board post, geographic information that is relevant to the message board post, may be used to refine the search results.
The refined search results may then be presented to a user (act 1505).
ADDITIONAL CONCEPTS
The user selection of search results when creating content may provide an indication that the selected search results are relevant to the search query. For example, the search results selected by a user may be used as part of a reputation network. In geiieral, a reputation network in some way quantifies the reputation or score of users as to their expertise in certain categories or topics. In the context of UDS, if a particular user incorporates a large nunlber of search results into content and the search results are frequently selected by readers of the content, this may be an indication that the user is an "expert" in the topic relating to the content, and his reputation score for the topic may be increased. This application may be particularly relevant to content applications such as message boards, where the message boards are typically categorized by topic.
More generally, regarding reputation, the gesture of selecting a result may be feed back into the system to impact, for example, raw result ranking, raw value of an advertisement, raw reputation of a user perforniing a selection, or raw reputation of an application using UDS. These raw reputation results can be used, for example, to modify a docum.ont or advertisement ranking used by the underlying search engines.
Advertisements presented through UDS may, in particular, represent advertisements that have a higher likelihood of click through and may therefore be more valuable to the advertiser. These advertisements may, for example, cost more than or be provided on different terms than other advertisements. In some implementations, the revenue or other benefit derived from advertisements selected by the content creator may be in some way shared with the content creator. In some situations, the fact that an advertisement is selected by an end user may be used in some way to modify a reputation of the content creator that selected the advertisement.
Additionally, in some implementations, content with search results selected by a user may be additionally automatically modified or supplemented, such as by adding additional links to advertisements or products that are determined to be relevant to the selected search results. As an example of this, consider an advertisement for a merchant included in an email message by the author of the email message. It may be desirable to include an additional advertisement from the merchant in the email, stich as an advertisement relating to an offer for free shipping from the merchant. These additional or follow-on advertisements may be displayed within the message itself or as advertisements presented to the user via a different channel. For example, if the recipient of the email message is viewing the email message using a web-based email application, the follow-on advertisement may be displayed outside of the message itself, such as in a portion of the browser that the web-based email application normally uses to present advertisements to its users.
Additionally, in some implementations, tEie UDS search query field, such as search query field 520 (Fig.
5), instead of causing searches to be executed through network service components (e.g., network search engines), may perforni other types of local or network search. For example, the search query may alternatively or additionally be submitted to a local (e.g., a desktop) search service or to a search service integrated in the content creation application. For example, a network email content creation application may include a search service that allows a user to search previously sent or received emails. In this situation, the TJDS search query field may additionally use the search services of the content creation application.
CONCLUSION
The foregoing description of exemplary embodiments of the invention provides illustration and description, but is not intended to be exhaustive or to limit the invention to the precise forn disclosed.
Modifications and variations are possible in light of the above teachings or may be acquired from practice of the invention.
Moreover, while series of acts have been described with regard to Figs. 4, 11, 13, and 15 the order of the acts may be varied in otller implementations consistent with the inventioji.
Moreover, non-dependent acts may be implemented in parallel.
It will also be apparent to one of ordinary skill in the art that aspects of the invention, as described above, may be implemented in many different forms of software, firmware, and hardware in the implementations illustrated in the figures. The actual software code or specialized control hardware used to implement aspects consistent with the principles of the invention is not limiting of the invention. Thus, the operation and behavior of the aspects of the invention were described without reference to the specific software code - it being understood that one of ordinary skill in the art would be able to design software and control hardware to implement the aspects based on the description herein.
Further, certain portions of the invention may be implemented as "logic" or a "component" that performs one or more functions. This logic may include hardware, such as an application specific integrated circuit or a field programmable gate array, software, or a combination of 1lardware and software.
No element, act, or instruction used in the description of the invention should be construed as critical or essential to the invention unless explicitly described as such. Also, as used herein, the article "a" is intended to include one or more items. Where only one item is intended, the term "one" or similar language is used. Further, the phrase "based on" is intended to mean "based, at least in part, on" unless explicitly stated otherwise.
Claims (31)
1. A content creation system comprising:
a first interface to facilitate composition of a message by a user; and a second interface to receive a search query, display search results relating to the search query, and receive selections of the search results from the user, the content creation system automatically incorporating, in response to the selections, at least a portion of the selected ones of the search results into the message in the first interface.
a first interface to facilitate composition of a message by a user; and a second interface to receive a search query, display search results relating to the search query, and receive selections of the search results from the user, the content creation system automatically incorporating, in response to the selections, at least a portion of the selected ones of the search results into the message in the first interface.
2. The content creation system of claim 1, wherein the first interface and the second interface are simultaneously displayed near one another.
3. The content creation system of claim 1, wherein the content creation system includes an email application, an instant messaging application, a blog post creation application, an application for posting messages to Internet message boards, or a web site creation application.
4. The content creation system of claim 1, wherein the first interface is configured to facilitate annotation of the selected ones of the search results by the user.
5. The content creation system of claim 1, wherein the selected search result includes a map.
6. The content creation system of claim 1, wherein the at least a portion of the selected search results that are automatically incorporated into the message include an image, an address, a phone number, or a price of a product.
7. The content creation system of claim 1, further comprising:
logic to automatically generate the search query based on a content of the message.
logic to automatically generate the search query based on a content of the message.
8. The content creation system of claim 7, wherein the logic to automatically generate the search query includes:
logic to implement entity recognition techniques on the message.
logic to implement entity recognition techniques on the message.
9. The content creation system of claim 8, wherein the logic to automatically generate the search query generates the search query when an entity returned by the logic to implement entity recognition matches predetermined criteria.
10. The content creation system of claim 8, wherein the logic to implement entity recognition techniques is trained to recognize products or locations in the message.
11. The content creation system of claim 8, wherein the logic to implement entity recognition techniques is trained to take into account a type of content creation system that is used by the user.
12. The content creation system of claim 1, further comprising:
logic to automatically modify the search query.
logic to automatically modify the search query.
13. The content creation system of claim 12, wherein the logic to automatically modify the search query modifies the search query based on a type of the content creation system.
14. The content creation system of claim 12, wherein the logic to automatically modify the search query modifies the search query based on information relating to the user of the content creation system.
15. The content creation system of claim 12, wherein the logic to automatically modify the search query modifies the search query based on information relating to an intended recipient of the message being created by the user of the content creation system.
16. A method comprising:
providing a message interface configured to facilitate composition of a message by a user;
receiving a search query;
initiating a search based on the search query;
receiving results of the search;
displaying the results of the search in an interface associated with the message interface, the displayed results of the search each including a selection object;
receiving selections of the selection objects from the user; and associating the results of the search that correspond to the selected ones of the selection objects with the message in the message interface.
providing a message interface configured to facilitate composition of a message by a user;
receiving a search query;
initiating a search based on the search query;
receiving results of the search;
displaying the results of the search in an interface associated with the message interface, the displayed results of the search each including a selection object;
receiving selections of the selection objects from the user; and associating the results of the search that correspond to the selected ones of the selection objects with the message in the message interface.
17. The method of claim 16, wherein the interface associated with the message interface includes a sidebar displayed in the message interface.
18. The method of claim 16, wherein associating results of the search that correspond to the selected ones of the selection objects with the message further includes:
automatically incorporating at least a portion of the results of the search that correspond to the selected ones of the selection objects into the message.
automatically incorporating at least a portion of the results of the search that correspond to the selected ones of the selection objects into the message.
19. The method of claim 16, wherein initiating the search includes transmitting the search query to a plurality of search services, the plurality of search services returning one or more search result types.
20. The method of claim 19, wherein the plurality of search services to which the search query is transmitted are selectable by the user.
21. The method of claim 16, wherein receiving the search query includes:
automatically generating the search query based on the message.
automatically generating the search query based on the message.
22. The method of claim 21, wherein automatically generating a search query based on the message includes:
generating the search query using entity recognition techniques based on the message.
generating the search query using entity recognition techniques based on the message.
23. The method of claim 22, wherein the entity recognition techniques are trained to recognize products or locations in the message.
24. The method of claim 21, wherein automatically generating the search query includes generating the search query in response to a triggering event.
25. The method of claim 24, wherein the triggering event includes a particular user action or user inactivity for a period of time.
26. The method of claim 16, further comprising:
automatically modifying the search query.
automatically modifying the search query.
27. The method of claim 26, wherein automatically modifying the search query includes modifying the search query based on a type of a content creation system implemented by the message interface.
28. The method of claim 26, wherein automatically modifying the search query includes modifying the search query based on information relating to the user.
29. The method of claim 26, wherein automatically modifying the search query includes modifying the search query based on information relating to an intended recipient of the message being created by the user.
30. A system comprising:
a plurality of search services, each of the search services operable to receive a search request, execute a search based on the search request to generate search results, and transmit the search results; and a programming object operable to receive a search request and a search query used to implement the search request;
invoke one or more of the search services to execute the search request;
receive the search results transmitted from the plurality of search services;
display one or more of the search results to the user;
receive a selection of the one or more of the search results; and incorporate, in response to the received selection, at least a portion of the selected one or more of the search results into a message that is being composed by the user.
a plurality of search services, each of the search services operable to receive a search request, execute a search based on the search request to generate search results, and transmit the search results; and a programming object operable to receive a search request and a search query used to implement the search request;
invoke one or more of the search services to execute the search request;
receive the search results transmitted from the plurality of search services;
display one or more of the search results to the user;
receive a selection of the one or more of the search results; and incorporate, in response to the received selection, at least a portion of the selected one or more of the search results into a message that is being composed by the user.
31. The system of claim 30, wherein the programming object is further operable to automatically modify the received search query based on information relating to the user.
Applications Claiming Priority (9)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US77419806P | 2006-02-17 | 2006-02-17 | |
US60/774,198 | 2006-02-17 | ||
US11/366,466 | 2006-03-03 | ||
US11/366,466 US8862572B2 (en) | 2006-02-17 | 2006-03-03 | Sharing user distributed search results |
US11/420,966 US7844603B2 (en) | 2006-02-17 | 2006-05-30 | Sharing user distributed search results |
US11/420,970 US8122019B2 (en) | 2006-02-17 | 2006-05-30 | Sharing user distributed search results |
US11/420,970 | 2006-05-30 | ||
US11/420,966 | 2006-05-30 | ||
PCT/US2007/062352 WO2007098421A2 (en) | 2006-02-17 | 2007-02-16 | User distributed search results |
Publications (2)
Publication Number | Publication Date |
---|---|
CA2642658A1 true CA2642658A1 (en) | 2007-08-30 |
CA2642658C CA2642658C (en) | 2013-11-26 |
Family
ID=46045596
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CA2642658A Active CA2642658C (en) | 2006-02-17 | 2007-02-16 | User distributed search results |
Country Status (4)
Country | Link |
---|---|
EP (1) | EP1999706A4 (en) |
CN (1) | CN101421732B (en) |
CA (1) | CA2642658C (en) |
WO (1) | WO2007098421A2 (en) |
Families Citing this family (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8713584B2 (en) * | 2009-08-13 | 2014-04-29 | Google Inc. | Event-triggered server-side macros |
US20110099464A1 (en) * | 2009-10-28 | 2011-04-28 | Yahoo! Inc. | Mechanism for adding content from a search to a document or message |
US8977639B2 (en) * | 2009-12-02 | 2015-03-10 | Google Inc. | Actionable search results for visual queries |
US9123021B2 (en) * | 2010-12-08 | 2015-09-01 | Microsoft Technology Licensing, Llc | Searching linked content using an external search system |
CN102932388A (en) * | 2011-08-11 | 2013-02-13 | 赵为 | Distributed light blog system |
US9960932B2 (en) | 2011-12-28 | 2018-05-01 | Evernote Corporation | Routing and accessing content provided by an authoring application |
US20140108960A1 (en) * | 2012-10-17 | 2014-04-17 | Microsoft Corporation | Creating Threaded Multimedia Conversations |
CN103078996A (en) * | 2012-12-17 | 2013-05-01 | 腾讯科技（武汉）有限公司 | Method and system for generating desktop shortcut of mobile terminal as well as client side and server |
US9201935B2 (en) * | 2013-10-04 | 2015-12-01 | Google Inc. | Transition from first search results environment to second search results environment |
CN113761426B (en) * | 2021-09-24 | 2024-02-13 | 南方电网数字平台科技(广东)有限公司 | System, method, device, equipment and medium for page service authentication access center |
Family Cites Families (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6418432B1 (en) * | 1996-04-10 | 2002-07-09 | At&T Corporation | System and method for finding information in a distributed information system using query learning and meta search |
US7010533B1 (en) * | 1999-02-15 | 2006-03-07 | Matsushita Electric Industrial Co., Ltd. | E-mail preparation device, terminal device, information forwarding system, and program recording medium |
US6523037B1 (en) * | 2000-09-22 | 2003-02-18 | Ebay Inc, | Method and system for communicating selected search results between first and second entities over a network |
US7225187B2 (en) * | 2003-06-26 | 2007-05-29 | Microsoft Corporation | Systems and methods for performing background queries from content and activity |
US20050027695A1 (en) * | 2003-07-29 | 2005-02-03 | John Peter Thomas | Identifying files suitable for attaching to a text message |
US7433920B2 (en) * | 2003-10-10 | 2008-10-07 | Microsoft Corporation | Contact sidebar tile |
-
2007
- 2007-02-16 EP EP07757151A patent/EP1999706A4/en not_active Withdrawn
- 2007-02-16 CN CN2007800137360A patent/CN101421732B/en active Active
- 2007-02-16 CA CA2642658A patent/CA2642658C/en active Active
- 2007-02-16 WO PCT/US2007/062352 patent/WO2007098421A2/en active Application Filing
Also Published As
Publication number | Publication date |
---|---|
EP1999706A4 (en) | 2012-04-18 |
CN101421732B (en) | 2013-09-04 |
EP1999706A2 (en) | 2008-12-10 |
WO2007098421A2 (en) | 2007-08-30 |
WO2007098421A3 (en) | 2008-05-02 |
CA2642658C (en) | 2013-11-26 |
CN101421732A (en) | 2009-04-29 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7844603B2 (en) | Sharing user distributed search results | |
US9015149B2 (en) | Sharing user distributed search results | |
US8862572B2 (en) | Sharing user distributed search results | |
CA2642658C (en) | User distributed search results | |
US11682051B1 (en) | System and method for targeting information based on message content in a reply | |
US9374396B2 (en) | Recommended content for an endorsement user interface | |
King | Website optimization | |
RU2406129C2 (en) | Association of information with electronic document | |
US7680856B2 (en) | Storing searches in an e-mail folder | |
US10198776B2 (en) | System and method for delivering an open profile personalization system through social media based on profile data structures that contain interest nodes or channels | |
US8135617B1 (en) | Enhanced hyperlink feature for web pages | |
US20160239526A1 (en) | Search Engine | |
US20150256499A1 (en) | Ranking, collection, organization, and management of non-subscription electronic messages | |
US20150033112A1 (en) | System and method for tagging content in a digital media display | |
US20080066080A1 (en) | Remote management of an electronic presence | |
US20070106627A1 (en) | Social discovery systems and methods | |
US20090192900A1 (en) | Facilitating manual user selection of one or more ads for insertion into a document to be made available to another user or users | |
US20130055089A1 (en) | Share Box for Endorsements | |
WO2009124212A1 (en) | Information display system based on user profile data with assisted and explicit profile modification | |
US20070198343A1 (en) | Assessing advertiser charges for manual user insertion of one or more ads into a document to be made available to another user or users, for distribution of such documents and/or for user actions on such distributed ads | |
US20080098026A1 (en) | Contextual syndication platform | |
US20140025496A1 (en) | Social content distribution network | |
Spencer | Google power search | |
US11853374B2 (en) | Directly, automatically embedding a content portion | |
Sabwa et al. | Paid search engine vs organic results: young consumer preferences. |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
EEER | Examination request |
CN117331708A - Authoritative facts service for blockchain smart contracts - Google Patents
Authoritative facts service for blockchain smart contracts Download PDFInfo
- Publication number
- CN117331708A CN117331708A CN202311009767.6A CN202311009767A CN117331708A CN 117331708 A CN117331708 A CN 117331708A CN 202311009767 A CN202311009767 A CN 202311009767A CN 117331708 A CN117331708 A CN 117331708A
- Authority
- CN
- China
- Prior art keywords
- blockchain
- data
- trigger event
- computing system
- query
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 238000000034 method Methods 0.000 claims abstract description 119
- 230000009471 action Effects 0.000 claims abstract description 83
- 238000012545 processing Methods 0.000 claims abstract description 41
- 230000004044 response Effects 0.000 claims description 8
- 238000004519 manufacturing process Methods 0.000 claims description 3
- 238000010801 machine learning Methods 0.000 description 72
- 230000008569 process Effects 0.000 description 51
- 230000015654 memory Effects 0.000 description 31
- 230000006870 function Effects 0.000 description 19
- 238000010586 diagram Methods 0.000 description 18
- 238000012549 training Methods 0.000 description 17
- 238000004891 communication Methods 0.000 description 13
- 238000013528 artificial neural network Methods 0.000 description 12
- 230000033001 locomotion Effects 0.000 description 12
- 238000003860 storage Methods 0.000 description 12
- 230000003993 interaction Effects 0.000 description 8
- 238000013519 translation Methods 0.000 description 8
- 230000014616 translation Effects 0.000 description 8
- 230000000007 visual effect Effects 0.000 description 7
- 230000008901 benefit Effects 0.000 description 6
- 230000011218 segmentation Effects 0.000 description 6
- 239000008186 active pharmaceutical agent Substances 0.000 description 5
- 238000003058 natural language processing Methods 0.000 description 5
- 230000004048 modification Effects 0.000 description 4
- 238000012986 modification Methods 0.000 description 4
- 238000013515 script Methods 0.000 description 4
- 238000012795 verification Methods 0.000 description 4
- 230000008859 change Effects 0.000 description 3
- 230000000306 recurrent effect Effects 0.000 description 3
- 230000000386 athletic effect Effects 0.000 description 2
- 230000003190 augmentative effect Effects 0.000 description 2
- 238000007906 compression Methods 0.000 description 2
- 230000006835 compression Effects 0.000 description 2
- 238000013527 convolutional neural network Methods 0.000 description 2
- 238000013500 data storage Methods 0.000 description 2
- 238000001514 detection method Methods 0.000 description 2
- 230000000694 effects Effects 0.000 description 2
- 238000005516 engineering process Methods 0.000 description 2
- 238000003709 image segmentation Methods 0.000 description 2
- 230000006872 improvement Effects 0.000 description 2
- 230000003287 optical effect Effects 0.000 description 2
- 238000001556 precipitation Methods 0.000 description 2
- 238000009877 rendering Methods 0.000 description 2
- 238000012546 transfer Methods 0.000 description 2
- 238000007792 addition Methods 0.000 description 1
- 238000013475 authorization Methods 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 238000005266 casting Methods 0.000 description 1
- 238000013145 classification model Methods 0.000 description 1
- 238000004590 computer program Methods 0.000 description 1
- 230000009193 crawling Effects 0.000 description 1
- 238000013144 data compression Methods 0.000 description 1
- 230000001419 dependent effect Effects 0.000 description 1
- 230000000977 initiatory effect Effects 0.000 description 1
- 230000007787 long-term memory Effects 0.000 description 1
- 238000013507 mapping Methods 0.000 description 1
- 238000005065 mining Methods 0.000 description 1
- 230000008520 organization Effects 0.000 description 1
- 230000000644 propagated effect Effects 0.000 description 1
- 230000006403 short-term memory Effects 0.000 description 1
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/46—Multiprogramming arrangements
- G06F9/54—Interprogram communication
- G06F9/542—Event management; Broadcasting; Multicasting; Notifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2455—Query execution
- G06F16/24564—Applying rules; Deductive queries
- G06F16/24566—Recursive queries
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N5/00—Computing arrangements using knowledge-based models
- G06N5/02—Knowledge representation; Symbolic representation
- G06N5/022—Knowledge engineering; Knowledge acquisition
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q40/00—Finance; Insurance; Tax strategies; Processing of corporate or income taxes
- G06Q40/04—Trading; Exchange, e.g. stocks, commodities, derivatives or currency exchange
Abstract
The present disclosure provides a computing system and computer-implemented method for trigger event determination, and related non-transitory computer-readable media, which may include processing blockchain data to determine a trigger event. Data associated with the trigger event may be processed to determine a query. Queries may then be used to recursively search the database for data describing the occurrence of the triggering event. A notification may then be provided to instruct the execution of the resulting action.
Description
RELATED APPLICATIONS
This application claims priority and benefit from U.S. provisional patent application No. 63/396,723 filed on day 10 8 of 2022. U.S. provisional patent application No. 63/396,723 is incorporated by reference herein in its entirety.
Technical Field
The present disclosure relates generally to providing authoritative facts services for blockchain smartcontracts. More particularly, the present disclosure relates to obtaining blockchain data, determining a trigger event of a smart contract based on the blockchain data, determining that the trigger event has occurred, and providing instructions to perform a resulting action based on the trigger event determination.
Background
The blockchain may include smart contracts that may depend on the particular event. The operation of these smart contracts may require a reliable and authoritative source of facts. Authoritative sources may be limited and/or may lack confidence. Additionally, the smart contract may be directed to a plurality of different trigger events associated with a plurality of different topics.
Disclosure of Invention
Aspects and advantages of embodiments of the disclosure will be set forth in part in the description which follows, or may be learned from the description, or may be learned by practice of the embodiments.
One example aspect of the present disclosure relates to a computing system for trigger event determination. The system may include one or more processors and one or more non-transitory computer-readable media collectively storing instructions that, when executed by the one or more processors, cause the computing system to perform operations. Operations may include obtaining blockchain data from a blockchain. The blockchain data may describe a smart contract. In some implementations, the smart contract can be associated with a trigger event and a resulting action. Operations may include processing blockchain data to determine a triggering event. The trigger event may be associated with one or more particular knowledge graphs of the plurality of knowledge graphs. The operations may include generating a query based on the trigger event. The query may be associated with one or more specific knowledge graphs. The operations may include determining that a triggering event has occurred based on the query. Operations may include sending a notification to a blockchain computing system. In some implementations, a blockchain computing system may be associated with a blockchain. The notification may describe the trigger event occurrence. The notification may instruct the blockchain computing system to cause the resulting action to occur.
Another example aspect of the present disclosure relates to a computer-implemented method for trigger event determination. The method may include obtaining, by a computing system including one or more processors, blockchain data from a blockchain. The blockchain data may describe a smart contract. In some implementations, the smart contract can be associated with a trigger event and a resulting action. The method may include processing, by a computing system, blockchain data to determine a triggering event. The method may include generating, by the computing system, a query based on the trigger event. The method may include recursively searching, by the computing system, the knowledge database with the query. The method may include determining, by the computing system, that a triggering event has occurred based on the query and the knowledge database. The method may include sending, by the computing system, a notification to the blockchain computing system. In some implementations, a blockchain computing system may be associated with a blockchain. The notification may describe the trigger event occurrence. The notification may instruct the blockchain computing system to cause the resulting action to occur.
Another example aspect of the disclosure relates to one or more non-transitory computer-readable media collectively storing instructions that, when executed by one or more computing devices, cause the one or more computing devices to perform operations. Operations may include obtaining blockchain data from a blockchain. The blockchain data may describe a smart contract. In some implementations, the smart contract can be associated with a trigger event and a resulting action. Operations may include processing blockchain data to determine a triggering event. The trigger event may be associated with one or more entities. The operations may include generating a query based on the trigger event. In some implementations, the query can be associated with one or more entities. The operations may include determining that a triggering event has occurred based on recursively querying a search engine with the query. Operations may include sending a notification to a blockchain computing system. A blockchain computing system may be associated with the blockchain. In some implementations, the notification may describe the trigger event occurrence. The notification may instruct the blockchain computing system to cause the resulting action to occur.
Other aspects of the disclosure relate to various systems, apparatuses, non-transitory computer-readable media, user interfaces, and electronic devices.
These and other features, aspects, and advantages of various embodiments of the present disclosure will become better understood with reference to the following description and appended claims. The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate exemplary embodiments of the disclosure and together with the description, serve to explain the principles of interest.
Drawings
A detailed discussion of embodiments directed to one of ordinary skill in the art is set forth in the specification with reference to the accompanying drawings, in which:
FIG. 1A depicts a block diagram of an example computing system that performs trigger event determination, according to an example embodiment of the present disclosure.
FIG. 1B depicts a block diagram of an example computing device performing trigger event determination, according to an example embodiment of the present disclosure.
Fig. 2 depicts a block diagram of an example trigger event determination system, according to an example embodiment of the present disclosure.
FIG. 3 depicts a block diagram of an example query generation system, according to an example embodiment of the present disclosure.
Fig. 4 depicts a block diagram of an example trigger event determination system, according to an example embodiment of the present disclosure.
Fig. 5 depicts a block diagram of an example smart contract oracle system, according to an example embodiment of the present disclosure.
Fig. 6 depicts a flowchart of an example method for performing trigger event determination, according to an example embodiment of the present disclosure.
Fig. 7 depicts a flowchart of an example method for performing trigger event determination, according to an example embodiment of the present disclosure.
Fig. 8 depicts a flowchart of an example method for performing trigger event determination, according to an example embodiment of the present disclosure.
Fig. 9A depicts a block diagram of an example computing system that performs trigger event determination, according to an example embodiment of the present disclosure.
Fig. 9B depicts a block diagram of an example computing device performing trigger event determination, according to an example embodiment of the present disclosure.
Fig. 9C depicts a block diagram of an example computing system that performs trigger event determination, according to an example embodiment of the present disclosure.
Repeated reference characters in the drawings are intended to represent like features in the various embodiments.
Detailed Description
SUMMARY
In general, the present disclosure relates to systems and methods for intelligent contract trigger event determination. In particular, the systems and methods disclosed herein may utilize query generation and recursive searching to determine that a triggering event has occurred. The systems and methods disclosed herein may utilize a knowledge database, a search engine, and/or multiple knowledge graphs to determine that a triggering event of a smart contract has occurred and/or is occurring. For example, the search system may be used to enable an oracle system for a blockchain smart contract such that the search system may search for information about one or more factors associated with a triggering event of the smart contract. In some implementations, the search system can provide preferences to particular sources (e.g., the search system can weight search results based on the determined trustworthiness of the sources). The system and method may process word definitions, web answers, geographic data, live feeds of movies, and/or live feeds of sporting events to determine that a triggering event has occurred.
For example, the systems and methods may include obtaining blockchain data from a blockchain. The blockchain data may describe a smart contract. The smart contract may be associated with a triggering event and a resulting action. The blockchain data may be processed to determine a triggering event. The trigger event may be associated with one or more particular knowledge graphs of the plurality of knowledge graphs. The systems and methods may include generating a query based on a trigger event. In some implementations, the query can be associated with one or more particular knowledge graphs. The system and method may determine that a triggering event has occurred based on the query. A notification may be sent to the blockchain computing system. A blockchain computing system may be associated with the blockchain. In some implementations, the notification may describe the trigger event occurrence. The notification may instruct the blockchain computing system to cause the resulting action to occur.
The system and method may obtain blockchain data from a blockchain. The blockchain data may describe a smart contract. In some implementations, blockchain data may be obtained via blockchain nodes. The smart contract may be associated with a triggering event and a resulting action. In some implementations, the resulting actions may include providing a payload to a particular user. The payload may include a non-replaceable token (e.g., a non-replaceable token associated with the digital resource) and/or cryptocurrency. The resulting actions may include implementing an application programming interface to perform particular interactions (e.g., update actions, transaction actions, and/or message interactions). The trigger event may include a particular outcome of a sporting event (e.g., a particular team win, a particular athlete count line, a particular game, and/or a particular total number of points). Alternatively and/or additionally, the triggering event may include a particular weather event that occurs (e.g., rain, high temperature, low temperature, storm occurrence, and/or precipitation type). In some implementations, the trigger event may include a particular location-based event that occurs (e.g., a traffic event, a demographic event, a voting result event, a employment event, a legal passing event, and/or a local social event). The triggering event may include meeting a query threshold. For example, the threshold may be a total amount of queries, a total amount of queries over a given period of time, an amount of location-based time, and/or an amount of particular user queries.
The blockchain data may be processed to determine a triggering event. The triggering event may be associated with one or more particular knowledge graphs of the plurality of knowledge graphs (e.g., knowledge graphs associated with one or more entities (e.g., objects, people, events, tasks, situations, and/or concepts)). In some implementations, the one or more particular knowledge maps may include a motion knowledge map associated with a particular motion. A sporting event may be associated with a particular sport. Alternatively and/or additionally, the one or more particular knowledge maps may include a weather knowledge map associated with a particular weather type. The one or more particular knowledge maps may include a location knowledge map associated with a particular location. Determining the trigger event may include identifying a subset of blockchain data associated with the smart contract. A subset of blockchain data associated with the smart contract may be processed to identify trigger event data and resultant action data. The trigger event data may then be processed by one or more machine learning models to determine semantic intent of the trigger event data. The triggering event may be an if term associated with the smart contract. The resulting action may be the then term associated with the smart contract. The structure of the data may be used to determine trigger event data.
A query may be generated based on the trigger event. The query may be associated with one or more specific knowledge graphs. The query may include one or more terms associated with one or more particular knowledge graphs. Additionally and/or alternatively, the query may include one or more terms associated with the semantic intent of the triggering event. The query may include text data, image data, potentially encoded data, audio data, and/or video data. Queries may be generated based on deterministic functions and/or based on heuristics. Alternatively and/or additionally, one or more machine learning models may be utilized to generate the query. The one or more machine learning models may include a natural language processing model (e.g., a large pre-trained language model), a segmentation model, an enhancement model, an image processing model, an audio processing model, a video processing model, and/or a latent encoding processing model. In some implementations, query generation may include determining one or more tags associated with a triggering event and utilizing the one or more tags.
The system and method may determine that a triggering event has occurred based on the query. In some implementations, queries may be recursively provided to a search engine at predetermined intervals. Alternatively and/or additionally, the interval may be machine-learned and/or may fluctuate based on one or more variables. In some implementations, the query can be used to search a database. The database may be determined based on a knowledge graph, may be pre-associated with a triggering event, may be determined based on a determined semantic intent, and/or may be a database of authoritative sources associated with a particular topic.
In some implementations, determining that a trigger event has occurred based on the query may include providing the query to a search engine, obtaining search result data from the search engine, and determining that a trigger event has occurred based on the search result data. The search result data may be processed to determine that the search result data describes a particular result. The particular result may be processed to determine that the particular result is a triggering event. In some implementations, the search result data may be processed to determine a confidence level for a particular result determination. The search result data may describe information obtained from a plurality of sources. The corresponding information for a particular source may be weighted differently based on relevance to the topic, ranking of search results, and/or based on the determined trustworthiness of the source.
Alternatively and/or additionally, determining that a trigger event has occurred based on the query may include determining that a trend topic is associated with the query and determining that the trend topic describes the trigger event occurrence. Trend topics may be associated with disaster topics (e.g., hurricanes or wildfires), media content item topics (e.g., movies, songs, albums, images, and/or GIFs), stock topics, sports team topics, and/or specific entity topics.
A notification may be sent to the blockchain computing system. A notification may be generated based on the determined trigger event. A blockchain computing system may be associated with the blockchain. In some implementations, the notification may describe the trigger event occurrence. The notification may instruct the blockchain computing system to cause the resulting action to occur. In some implementations, the notification can be sent to the blockchain computing system via an application programming interface. The notification may be associated with one or more keys for authenticating the oracle system using the blockchain. The notification may include one or more lines of executable code, a proof of work, a hash function, and/or evidence data.
In some implementations, systems and methods may include encoding data associated with a triggering event occurrence to a blockchain. For example, one or more pointers may be embedded in the blockchain. One or more pointers may direct the user to evidence of the occurrence of the triggering event (e.g., authoritative source of uniform resource locator address).
Queries may be used to recursively search the knowledge database to determine that a triggering event has occurred. The systems and methods may include obtaining blockchain data from a blockchain. The blockchain data may describe a smart contract. The smart contract may be associated with a triggering event and a resulting action. The blockchain data may be processed to determine a triggering event. A query may be generated based on the trigger event. The system and method may include recursively searching the knowledge database with the query. The trigger event may be determined to have occurred based on the query and knowledge database. The system and method may include sending a notification to the blockchain computing system. A blockchain computing system may be associated with the blockchain. The notification may describe the trigger event occurrence. In some implementations, the notification can instruct the blockchain computing system to cause the resulting action to occur.
The system and method may obtain blockchain data from a blockchain. The blockchain data may describe a smart contract. In some implementations, the smart contract can be associated with a trigger event and a resulting action. The smart contract may include causing a resulting action to be performed in response to determining that the triggering event occurred. The smart contract may describe if-then functions. The if clause may be a trigger event and the resulting action may be the clause. The triggering event may include the result of the event. The resulting actions may include the transfer of digital resources and/or cryptocurrency. In some implementations, the resulting actions can include causing the application programming interface to interact with a particular web platform. Alternatively and/or additionally, the resulting actions may include generating additional smart contracts and embedding the smart contracts into the blockchain.
The blockchain data may be processed to determine a triggering event. Determining the triggering event may include determining that the subset of blockchain data includes data associated with the smart contract. The determination may be based on one or more criteria and/or one or more protocols for the smart contract. In some implementations, the determination may be based on a data structure. Additionally and/or alternatively, the blockchain data may be decrypted, processed to generate a concise english translation of the data, and the concise english translation may be processed by a natural language processing model to identify the trigger event.
A query may be generated based on the trigger event. The query may be generated based on identifying one or more keywords in the decrypted trigger event. One or more keywords may then be utilized in the query. In some implementations, one or more tags can be determined based on one or more keywords, and the one or more tags can be utilized to generate a query.
The system and method may recursively search the knowledge database using queries. The recursive search may occur at equal intervals, fluctuating intervals, and/or at a mixed set of intervals, such that equal intervals may be supplemented by additional search instances. The knowledge database may be associated with one or more sources. One or more sources may be subject-specific authoritative sources and may have different levels of authority.
In some implementations, the systems and methods may determine that the trigger event is associated with a particular topic. The knowledge database may include data associated with a particular topic. The knowledge database may be determined based on one or more specific knowledge maps associated with the triggering event.
Additionally and/or alternatively, recursively searching the knowledge database with the query may generate a plurality of search result data sets. Each search result dataset may be associated with a different respective instance of a search. In some implementations, the systems and methods may determine that a triggering event has occurred based on one or more of a plurality of search result data sets.
It may then be determined based on the query and knowledge database that a triggering event has occurred. The determining may include obtaining search result data associated with a recursive search of the knowledge database. The search result data may be processed to determine whether the search result data describes the occurrence of a triggering event.
A notification may be sent to the blockchain computing system. A blockchain computing system may be associated with the blockchain. In some implementations, the notification may describe the trigger event occurrence. The notification may instruct the blockchain computing system to cause the resulting action to occur.
Additionally and/or alternatively, the query may be generated based on an entity associated with the triggering event. For example, the systems and methods may obtain blockchain data from a blockchain. The blockchain data may describe a smart contract. In some implementations, the smart contract can be associated with a trigger event and a resulting action. The systems and methods may process blockchain data to determine trigger events. The trigger event may be associated with one or more entities. A query may be generated based on the trigger event. The query may be associated with one or more entities. The trigger event may be determined to have occurred based on recursively querying the search engine with the query. In some implementations, the systems and methods can send notifications to the blockchain computing system. A blockchain computing system may be associated with the blockchain. In some implementations, the notification may describe the trigger event occurrence. The notification may instruct the blockchain computing system to cause the resulting action to occur.
Blockchain data may be obtained from a blockchain. The blockchain data may describe a smart contract. In some implementations, the smart contract can be associated with a trigger event and a resulting action. The trigger event may include a particular blockchain action. A particular blockchain action may be associated with a particular user and a particular blockchain transaction. In some implementations, the resulting action may include delivering the digital resource to a particular user. The trigger event may include a transaction action associated with a particular non-replaceable token. The resulting actions may include transaction actions associated with different non-replaceable tokens.
The systems and methods may process blockchain data to determine trigger events. The trigger event may be associated with one or more entities. In some embodiments, the one or more entities may include sports teams, performers, politicians, athletes, and/or production companies. One or more entities may be determined by processing blockchain data.
A query may be generated based on the trigger event. The query may be associated with one or more entities. The query may include one or more descriptors associated with one or more entities. The query may include boolean terms and/or one or more words associated with a particular event type.
In some implementations, generating the query can include processing the blockchain data using a machine-learning language model to determine a semantic intent of the trigger event (e.g., the meaning of the trigger event can be associated with the outcome of the sporting event, the type of weather event, and/or the blockchain transaction), and generating the query based on the semantic intent.
The systems and methods may determine that a triggering event has occurred based on recursively querying a search engine with a query. The search engine may be a general purpose search engine, a topic specific search engine, a academic article search engine, an image search engine, and/or an authoritative source search engine (e.g., a search engine that identifies authoritative sources and their corresponding content). The search engine may utilize one or more knowledge graphs.
The system and method may send a notification to the blockchain computing system. A blockchain computing system may be associated with the blockchain. The notification may describe the trigger event occurrence. In some implementations, the notification can instruct the blockchain computing system to cause the resulting action to occur.
The system and method may be used as an oracle of an intelligent contract (e.g., a trigger event may be determined and then the resulting action may be caused to be performed). For example, the triggering event may be a disaster event determined based on geographic data, which may be used to instruct the provision of notifications to a plurality of users. Alternatively and/or additionally, the trigger event may include a sports result associated with the sports play entered by the user, which may be determined by querying a sports database and/or based on a live stream or feed. In some implementations, the triggering event can be associated with a weather event that can be determined based on data obtained from a trusted weather resource to trigger a weather gaming payout. The trigger event may be associated with meeting a query threshold. In some implementations, the trigger event may be associated with a specific topic trend.
In some implementations, the systems and methods disclosed herein may utilize world triggers and/or one or more application programming interfaces associated with one or more world triggers. The system and method may utilize knowledge graph mapping to determine that a triggering event has occurred. The trigger event determination may include examining a plurality of websites via web crawling. The check may be deterministic based on a predetermined interval search for a particular web resource. Alternatively and/or additionally, the checking may be based on one or more machine learning parameters.
The source of the data may be determined based on the reliability of the source based on the high confidence score. In some implementations, the source can be specialized information obtained by a search engine, browser application, virtual assistant application, social media platform, and/or platform-as-a-service.
In some implementations, the systems and methods may include storing advertisement data on a blockchain. The advertisement data may include text data, image data, video data, potentially encoded data, and/or audio data. The advertisement data may include content items for advertising. Additionally and/or alternatively, the advertisement data may include parameters for providing advertisements, data associated with advertisers, and/or metadata for advertisements. The systems and methods may determine that an impression (compression) has occurred and may store data describing the impression to the blockchain. Impressions may be embedded in the blockchain. The impressions may then be utilized to determine whether a triggering event of the smart contract has been satisfied.
The systems and methods of the present disclosure provide a number of technical effects and benefits. As one example, the systems and methods may provide systems and methods for providing authoritative facts services for blockchain smartcontracts. For example, the systems and methods disclosed herein may utilize multiple knowledge graphs and/or search engines to determine that a trigger event has occurred, wherein the intelligent contract instructions perform a resulting action in response to the trigger event occurrence.
Another technical benefit of the systems and methods of the present disclosure is the ability to utilize a machine learning model to generate queries based on trigger events to recursively search data associated with the trigger events. For example, the systems and methods disclosed herein may process blockchain data using a machine learning model to determine semantic intent of a triggering event. Semantic intent may then be utilized to generate queries associated with the triggering event. The query may then be utilized to recursively search for the occurrence of a triggering event.
Another example of technical effects and benefits relates to improvements in computing efficiency and improvements in computing system functionality. For example, the systems and methods disclosed herein may utilize a search system to determine that a trigger event has occurred without having to generate a new database.
Referring now to the drawings, example embodiments of the present disclosure will be discussed in more detail.
Example devices and systems
FIG. 1A depicts a block diagram of an example computing system 100 that performs trigger event determination, according to an example embodiment of the present disclosure. The system 100 includes a user computing system 130, a server computing system 110, a creator computing system 150, and a blockchain computing system 170 communicatively coupled through a network 180.
The user computing system 130 may be any type of computing device, such as, for example, a personal computing device (e.g., a laptop computer or desktop computer), a mobile computing device (e.g., a smart phone or tablet computer), a game console or controller, a wearable computing device, an embedded computing device, or any other type of computing device.
The user computing system 130 includes one or more processors 132 and memory 134. The one or more processors 132 may be any suitable processing device (e.g., processor core, microprocessor, ASIC, FPGA, controller, microcontroller, etc.), and may be a processor or multiple processors operatively connected. Memory 134 may include one or more non-transitory computer-readable storage media, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, and the like, and combinations thereof. Memory 134 may store data 136 and instructions 138 that are executed by processor 132 to cause user computing system 130 to perform operations.
The user computing system 130 may also include one or more user input components that receive user input. For example, the user input component may be a touch-sensitive component (e.g., a touch-sensitive display screen or touchpad) that is sensitive to touch by a user input object (e.g., a finger or stylus). The touch sensitive component may be used to implement a virtual keyboard. Other example user input components include a microphone, a conventional keyboard, or other device through which a user may provide user input.
The server computing system 110 includes one or more processors 112 and memory 114. The one or more processors 112 may be any suitable processing device (e.g., processor core, microprocessor, ASIC, FPGA, controller, microcontroller, etc.), and may be an operatively connected processor or processors. Memory 114 may include one or more non-transitory computer-readable storage media, such as RAM, ROM, EEPROM, EPROM, flash memory devices, disks, and the like, as well as combinations thereof. Memory 114 may store data 118 and instructions 116 that are executed by processor 112 to cause server computing system 110 to perform operations.
In some implementations, the server computing system 110 includes or is otherwise implemented by one or more server computing devices. In instances where the server computing system 110 includes multiple server computing devices, such server computing devices may operate in accordance with a sequential computing architecture, a parallel computing architecture, or some combination thereof.
The blockchain computing system 170 includes one or more processors and memory. The one or more processors may be any suitable processing device (e.g., processor core, microprocessor, ASIC, FPGA, controller, microcontroller, etc.), and may be a processor or multiple processors operatively connected. The memory may include one or more non-transitory computer-readable storage media, such as RAM, ROM, EEPROM, EPROM, flash memory devices, disks, and the like, as well as combinations thereof. The memory may store data and instructions that are executed by the processor to cause the blockchain computing system 170 to perform operations. In some implementations, the blockchain computing system 170 includes or is otherwise implemented by one or more server computing devices.
The network 180 may be any type of communication network, such as a local area network (e.g., an intranet), a wide area network (e.g., the internet), or some combination thereof, and may include any number of wired or wireless links. In general, communications over network 180 may be carried via any type of wired and/or wireless connection using various communication protocols (e.g., TCP/IP, HTTP, SMTP, FTP), coding or formats (e.g., HTML, XML), and/or protection schemes (e.g., VPN, secure HTTP, SSL).
Computing system 100 may include multiple applications (e.g., applications 1 through N). Each application may communicate with a central intelligent layer. Example applications may include text messaging applications, email applications, dictation applications, virtual keyboard applications, browser applications, and the like. In some implementations, each application can communicate with the central intelligence layer (and the models stored therein) using APIs (e.g., public APIs across all applications).
The central intelligence layer may communicate with the central device data layer. The central device data layer may be a centralized repository for data of the computing system 100. In some implementations, the central device data layer may communicate with a plurality of other components of the computing device, such as, for example, one or more sensors, a context manager, a device status component, and/or an add-on component. In some implementations, the central device data layer can communicate with each device component using an API (e.g., a proprietary API).
Additionally and/or alternatively, FIG. 1A depicts an exemplary computing system 100 that may be used to implement authoritative facts services for blockchain smartcontracts in accordance with aspects of the present disclosure. The system 100 has a user-server architecture that includes a server 110 in communication with one or more user computing systems 130 over a network 180. However, the disclosure may be implemented using other suitable architectures, which may include any number of computing systems in communication over the network 180.
The system 100 includes a server 110, such as, for example, a web server. Server 110 may be one or more computing devices implemented as a parallel computing system and/or a distributed computing system. In particular, multiple computing devices may together act as a single server 110. The server 110 may have one or more processors 112 and memory 114. The server 110 may also include a network interface for communicating with one or more remote computing devices (e.g., user devices) 130 over a network 180.
The processor 112 may be any suitable processing device, such as a microprocessor, microcontroller, integrated circuit, or other suitable processing device. Memory 114 may include any suitable computing system or medium including, but not limited to, non-transitory computer readable media, RAM, ROM, hard disk drive, flash memory drive, or other storage device. The memory 114 may store information accessible by the processor(s) 112, including instructions 116 executable by the processor(s) 112. The instructions 116 may be any set of instructions that, when executed by the processor(s) 112, cause the processor(s) 112 to provide the desired functionality.
In particular, the instructions 116 may be executable by the processor 112 to implement trigger event determination. The user profile database 120 may be configured to store a plurality of user profiles associated with a plurality of users utilizing one or more user computing systems 130. In some implementations, the user profile database 120 can be configured to facilitate one or more interactions. Facilitating one or more interactions may involve using blockchain Application Programming Interface (API) 122 to send data to blockchain computing system 170 and to receive data from blockchain computing system 170. For example, the server computing system 110 may utilize the blockchain API 122 to update one or more ledgers (ledgers) 172 of the blockchain computing system 170. One or more ledgers 172 may be associated with one or more tokens 174. The one or more tokens 174 may include one or more non-replaceable tokens that may include scripts associated with digital assets (e.g., image data, video data, text data, potentially encoded data, domain data, audio data, augmented reality asset rendering data, and/or virtual reality asset rendering data). In particular, the script may reference a particular digital asset provided for sale. Digital assets may include image data, text data, video data, potentially encoded data, domain names, virtual properties, augmented reality assets, virtual reality assets (e.g., virtual reality environments and/or virtual reality objects for interaction in an environment), smart contracts, physical object authentication, and the like. In some implementations, one or more ledgers 172 may be associated with cryptocurrency that may be used to conduct transactions in physical markets and/or virtual markets.
It should be understood that the term "element" may refer to computer logic for providing a desired function. Thus, any elements, functions and/or instructions may be implemented in hardware, dedicated circuitry, firmware and/or software which control a general purpose processor. In one embodiment, the elements or functions are program code files stored on a storage device, loaded into memory, and executed by a processor, or may be provided from a computer program product (e.g., computer-executable instructions) stored in a tangible computer-readable storage medium such as RAM, hard disk, or optical or magnetic medium.
The memory 114 may also include data 118 that may be retrieved, manipulated, created, or stored by the processor 112. The data 118 may include search result data, ranking data, image data (e.g., digital maps, satellite images, aerial photographs, street view photographs, synthetic models, drawings, personal images, likes, etc.), video data, audio data, text data (e.g., books, articles, blogs, poetry, etc.), potentially encoded data, blockchain address data, tables, vector data (e.g., vector representations of roads, plots, buildings, etc.), point of interest data (e.g., venues such as islands, cities, restaurants, hospitals, parks, hotels, and schools), or other data or related information. By way of example, data 118 may be used to access information and data associated with particular digital assets, websites, search results, blockchains, and the like.
The data 118 may be stored in one or more databases. One or more databases may be coupled to server 110 via a high bandwidth LAN or WAN, or may also be coupled to server 110 via network 180. One or more databases may be split such that they are located in multiple areas.
Server 110 may exchange data with one or more user computing systems 130 via network 180. Although two user computing systems 130 are shown in FIG. 1A, any number of user computing systems 130 may be connected to server 110 through network 180. The user computing system 130 may be any suitable type of computing device, such as a general purpose computer, a special purpose computer, a navigation device, a laptop computer, a desktop computer, an integrated circuit, a mobile device, a smart phone, a tablet computer, a wearable computing device, a display having one or more processors coupled thereto and/or embedded therein, or other suitable computing device. Further, the user computing system 130 may be a plurality of computing devices that function together to perform operations or computing actions.
Similar to server 110, user computing system 130 may include a processor 132 and a memory 134. Memory 134 may store information accessible by processor 132, including instructions and data that may be executed by the processor. As an example, memory 134 may store data 136 and instructions 138.
The instructions 138 may provide instructions for implementing a browser, non-replaceable token purchase, and/or a number of other functions. In particular, a user of user computing system 130 may exchange data with server 110 by using a browser to access a website accessible at a particular network address. The trigger event determination of the present disclosure may be provided as an element of a user interface of a website and/or application.
The data 136 may include data related to running a dedicated application on the user computing system 130. In particular, dedicated applications may be used to exchange data with server 110 over network 160. The data 136 may include user device readable code for providing and implementing aspects of the present disclosure. Additionally and/or alternatively, the data 136 may include data related to previously entered or received data. For example, the data 136 may include data related to past occurrences of a particular application.
The user computing system 130 may include various user input devices for receiving information from a user, such as a touch screen, a touch pad, data input keys, a speaker, a mouse, a motion sensor, and/or a microphone suitable for voice recognition. Further, the user computing system 130 may have a display for presenting information (such as a user interface), displaying digital assets, displaying popup windows or application elements displayed in a display interface, and/or other forms of information.
The user computing system 130 may also include a user profile 140 that may be used to identify a user of the user computing system 130. The user profile 140 may optionally be used by the user to conduct one or more transactions, which may then be recorded on one or more ledgers 172 of the blockchain computing system 170. The user profile 140 may describe user information, which may include identification numbers and/or payment account information. For example, the user profile 140 may include data associated with an encrypted wallet, which may be linked to a browser application via an application extension and/or embedding.
The user computing system 130 may also include a graphics processing unit. The processor 132 may use the graphics processing unit to determine that a trigger event associated with the blockchain intelligence contract has occurred. In some embodiments, the user computing system 130 performs any and all of the determination and/or generation processes.
The user computing system 130 may include a network interface for communicating with the server 110 over the network 180. The network interface may include any component or configuration suitable for communicating with the server 110 over the network 180, including, for example, one or more ports, transmitters, wireless cards, controllers, physical layer components, or other items for communicating according to any currently known or future developed communication protocol or technology.
The network 180 may be any type of communication network, such as a local area network (e.g., an intranet), a wide area network (e.g., the internet), or some combination thereof. The network 180 may also include a direct connection between the client device 130 and the server 110. In general, communications between server 110 and client device 130 may be carried via a network interface using any type of wired and/or wireless connection, using various communication protocols (e.g., TCP/IP, HTTP), encoding or formatting (e.g., HTML, XML), and/or protection schemes (e.g., VPN, secure HTTP, SSL).
In some implementations, the exemplary computing system 100 can include one or more creator computing systems 150. One or more creator computing systems 150 may be used to generate images, videos, proses, poems, audio, etc., which may then be provided for sale. One or more creator computing systems 150 may include one or more processors 152 that may be used to perform one or more operations to implement the systems and methods disclosed herein. One or more creator computing systems 150 may include one or more memory components 154 that may be used to store data 156 and one or more instructions 158. The data 156 may include data related to one or more applications, one or more media data sets, and the like. The instructions 158 may include one or more operations for implementing the systems and methods disclosed herein.
One or more creator computing systems 150 may store data associated with one or more digital assets 160 and/or one or more creator profiles 162. The one or more digital assets 160 may include text data, image data, video data, audio data, potentially encoded data, domain data, or various other data formats. The one or more creator profiles 162 may include information associated with one or more "creators" of the one or more digital assets 160. The one or more creator profiles 162 may include identification data, transaction data, and/or encrypted wallet data.
Additionally and/or alternatively, the exemplary computing system 100 may include one or more blockchain computing systems 170. The one or more blockchain computing systems 170 may include multiple computing devices for decentralized data storage such that multiple "blocks" may be distributed throughout a network of computing devices to provide a security system for data storage that may include one or more ledgers 172 and one or more tokens 174. In some implementations, each of the one or more tokens 174 may be associated with at least a portion of the one or more ledgers 172.
Blockchains may refer to systems configured to securely record information. Blockchains may include decentralized systems that may make changing information extremely difficult. The blockchain may include digital ledgers of transactions that may be replicated and distributed over a network of computing systems. Each block in the chain may include a plurality of transactions. When a new transaction occurs on the blockchain, a record of the transaction may be added to the ledger for each computing device. Blockchains may be used to track exchanges of currency and/or digital assets by recording transactions on digital ledgers, which may be propagated throughout a decentralized system. The currency exchanged and tracked via the blockchain computing system 170 may be referred to as cryptocurrency.
Token 174 may include one or more non-replaceable tokens. The non-replaceable token may be cast on a blockchain associated with the blockchain computing system 170. The non-replaceable token (NFT) may be an authenticity certificate of the digital asset. NFTs may be non-interchangeable, thus making their value dependent on the price anyone may be willing to pay for an asset. NFTs may build on blockchains so that their scarcity and authenticity can be maintained. A digital asset may be defined as anything that is stored digitally and may be uniquely identifiable that an organization can use to realize value. Examples of digital assets may include tweets, social media comments, documents, audio, images, videos, logos, website domains, slide presentations, spreadsheets, CSS files and formats, executable code, and/or websites.
FIG. 1B depicts a block diagram of an example blockchain 50 that may be utilized by the blockchain computing system 170 of the example computing system 100 of FIG. 1A. The example blockchain 50 may include a plurality of blocks that may be used to store data having one or more encryption characteristics. Blockchain 50 may be stored on a decentralized computing system including a plurality of computing devices. The blockchain 50 may be a public blockchain (e.g., a blockchain that is open without access restrictions such that anyone with internet access may send transactions or verify transactions as part of a decentralized distributed system), a private blockchain (e.g., a blockchain that provides access based on permissions set by a network administrator), or a hybrid blockchain (e.g., a blockchain that has both unrestricted and restricted blocks in combination). The blockchain 50 may include a job certification feature that may include one or more cryptographically formatted certificates. The proof of work may be provided when a request to update blockchain 50 (e.g., a request to update a ledger based on a new transaction) is made. The proof of work may convey that a certain device or group of devices has performed a certain amount of computation and may then be verified by other parties. Once verified, the blockchain 50 may be updated or may remain unchanged in response to a verification failure. The proof of work feature may be utilized to mitigate the computational cost of each device in the system that must perform the same computational functions and checks to determine that the request is valid for updating the blockchain 50.
Each block may include a hash, a previous hash associated with the hash of the previous block, and data. In some implementations, each block may include a random number (nonce). The hash may be a fixed length hash value, which may be a fingerprint of a particular block. The hash value may be generated based on a hash function and may change each time the data for that particular block is changed. The previous hash may include a hash value of a block immediately preceding the particular block. Previous hashes can be used to ensure that the downstream basic true (group true) remains unchanged unless proper verification occurs. The data may include transaction data (e.g., transaction ledgers), time stamps, values associated with cryptocurrency values, non-replaceable tokens (e.g., non-replaceable tokens including scripts referencing digital assets), random number data, and/or general blockchain data. The random number (i.e., a number that is used only once) may be a number that is added to a block in the blockchain that may satisfy the difficulty level limit when the block is re-hashed. The random number may be the number that the blockchain miner is solving for receiving incentives (e.g., cryptocurrency).
Blockchain 50 may include one or more security protocols and/or features. The blockchain 50 may include an encryption system. For example, blockchain 50 may verify that blockchain 50 is valid by ensuring that the stored previous hash stored in the block matches the hash value of the previous block returned from the last block to the first block (e.g., the originating block). In some implementations, blockchain 50 may include a proof of job verification that may rely on verifying a computational proof prior to effecting a change to stored data (e.g., stored ledgers). Based in part on the number of blocks in the blockchain 50, proof of work verification may take seconds, minutes, and/or hours. Additionally and/or alternatively, blockchain 50 may be implemented on a distributed, decentralized computing system. In some implementations, each computing device in the distributed decentralized computing system may store a portion of the blocks (e.g., blocks of the plurality of blocks) or all of the blocks in the blockchain 50. Thus, the system may verify the data by ensuring that the data is consistent across most, if not all, of the distributed systems. Before adding new data, each node of the distributed system may be checked for tampering.
The data may include data associated with a cryptocurrency value (e.g., a ledger associated with a particular cryptocurrency value), data associated with a digital asset (e.g., an irreplaceable token cast on blockchain 50, which may include a script associated with the digital asset), data associated with a smart contract (e.g., a smart contract that includes conditions for automatically initiating actions in response to meeting criteria), and/or timestamp data (e.g., timestamp data for block creation, casting, transactions, etc.).
In particular, fig. 1B depicts a first block 10, a second block 20, a third block 30, a fourth block 40, and an nth block 60. Although five blocks are depicted, any number of blocks may be utilized. The first block 10 may be an origin block (e.g., a first global block in a blockchain). The first block 10 may include a corresponding first hash 12 (e.g., a hash value associated with the first block 10). The first block 10 may include a first previous hash 14 (e.g., if the first block 10 had a block preceding it in the blockchain 50, then the hash of the previous block may be stored on the first block 10). Additionally and/or alternatively, the first block 10 may include data 16 and a random number 18.
The second block 20 may follow the first block 10. The second block 20 may include a corresponding second hash 22 (e.g., a hash value associated with the second block 20). The second block 20 may include a second previous hash 24 (e.g., the second previous hash 24 may be the same as the first hash 12 or reference the first hash 12). Additionally and/or alternatively, the second block 20 may include data 26 and a random number 28.
The third block 30 may follow the second block 20. The third block 30 may include a corresponding third hash 32 (e.g., a hash value associated with the third block 30). The third block 30 may include a third previous hash 34 (e.g., the third previous hash 34 may be the same as the second hash 22 or reference the second hash 22). Additionally and/or alternatively, the third block 30 may include data 36 and a random number 38.
Additionally and/or alternatively, the fourth block 40, the nth block 60, and other potential blocks may include respective hashes, respective previous hashes, and data. The first data 16, the second data 26, the third data 36, and the data of the other blocks may include overlapping data, may be different and/or the same, such that the data is repeated for all blocks. In some implementations, each block may be associated with a different transaction (e.g., a different coin, a different sale, etc.). The first random number 18, the second random number 28, the third random number 38, and random numbers of other blocks may be different and may be solved during mining.
The data in each tile may include ledger data, which may include timestamps, exchanged assets and/or cryptocurrency, participants involved in transactions, and/or various other information.
In some implementations, a plurality of different blockchains may be used with the systems and methods disclosed herein. Different blockchains may include different configurations. The different blockchains may include parallel chains, side chains, shared blocks, different chains, varying permissions, varying purposes, varying numbers of blocks, and/or varying hash functions and/or varying hash value lengths.
In some implementations, the systems and methods can include one or more machine learning model computing systems 900. One or more machine learning models may be used to implement various tasks of token data identification, retrieval, indexing, and deduplication.
Fig. 9A depicts a block diagram of an example computing system 900 that performs trigger event determination, according to an example embodiment of the disclosure. The system 900 includes a user computing device 902, a server computing system 930, and a training computing system 950 communicatively coupled by a network 980.
The user computing device 902 may be any type of computing device, such as, for example, a personal computing device (e.g., a laptop computer or desktop computer), a mobile computing device (e.g., a smart phone or tablet computer), a game console or controller, a wearable computing device, an embedded computing device, or any other type of computing device.
The user computing device 902 includes one or more processors 912 and memory 914. The one or more processors 912 may be any suitable processing device (e.g., processor core, microprocessor, ASIC, FPGA, controller, microcontroller, etc.), and may be a processor or multiple processors operatively connected. The memory 914 may include one or more non-transitory computer-readable storage media, such as RAM, ROM, EEPROM, EPROM, flash memory devices, disks, and the like, as well as combinations thereof. The memory 914 may store data 916 and instructions 918 that are executed by the processor 912 to cause the user computing device 902 to perform operations.
In some implementations, the user computing device 902 may store or include one or more trigger event determination models 920. For example, the trigger event determination model 920 may be or otherwise include various machine learning models, such as a neural network (e.g., deep neural network) or other types of machine learning models, including nonlinear models and/or linear models. The neural network may include a feed forward neural network, a recurrent neural network (e.g., a long and short term memory recurrent neural network), a convolutional neural network, or other form of neural network. An example trigger event determination model 920 is discussed with reference to fig. 2-5.
In some implementations, the one or more trigger event determination models 920 may be received from the server computing system 930 over the network 980, stored in the user computing device memory 914, and then used or otherwise implemented by the one or more processors 912. In some implementations, the user computing device 902 may implement multiple parallel instances of the single trigger event determination model 920 (e.g., to perform parallel trigger event determinations across multiple instances of trigger events of a smart blockchain smart contract).
More specifically, computing system 900 may obtain blockchain data from a blockchain via blockchain nodes. The blockchain data may be accessed based on one or more specific keys (keys) associated with the server computing system 930. The blockchain data may be processed by one or more trigger event determination models 940 to determine semantic intent, determine keywords, determine trigger events, and/or generate queries. Semantic intent, keywords, queries, and/or concise english translations of trigger events may be used to query one or more databases for data associated with the trigger event that occurred.
Additionally or alternatively, one or more trigger event determination models 940 may be included in the server computing system 930 or otherwise stored and implemented by the server computing system 930, the server computing system 930 in communication with the user computing device 902 according to a client-server relationship. For example, the trigger event determination model 940 may be implemented by the server computing system 940 as part of a web service (e.g., authoritative facts service). Accordingly, one or more models 920 may be stored and implemented at the user computing device 902, and/or one or more models 940 may be stored and implemented at the server computing system 930.
The user computing device 902 may also include one or more user input components 922 that receive user input. For example, the user input component 922 may be a touch-sensitive component (e.g., a touch-sensitive display screen or touchpad) that is sensitive to touch by a user input object (e.g., a finger or stylus). The touch sensitive component may be used to implement a virtual keyboard. Other example user input components include a microphone, a conventional keyboard, or other device through which a user may provide user input.
The server computing system 930 includes one or more processors 932 and memory 934. The one or more processors 932 may be any suitable processing device (e.g., processor core, microprocessor, ASIC, FPGA, controller, microcontroller, etc.) and may be an operatively connected processor or processors. Memory 934 may include one or more non-transitory computer-readable storage media, such as RAM, ROM, EEPROM, EPROM, flash memory devices, magnetic disks, and the like, as well as combinations thereof. Memory 934 may store data 936 and instructions 938 that are executed by processor 932 to cause server computing system 930 to perform operations.
In some implementations, the server computing system 930 includes or is otherwise implemented by one or more server computing devices. In instances where the server computing system 930 includes multiple server computing devices, such server computing devices may operate in accordance with a sequential computing architecture, a parallel computing architecture, or some combination thereof.
As described above, the server computing system 930 may store or otherwise include one or more machine-learned trigger event determination models 940. For example, model 140 may be or may otherwise include various machine learning models. Example machine learning models include neural networks or other multi-layer nonlinear models. Example neural networks include feed forward neural networks, deep neural networks, recurrent neural networks, and convolutional neural networks. An example model 940 is discussed with reference to fig. 2-5.
The user computing device 902 and/or the server computing system 930 can train the models 920 and/or 940 via interaction with a training computing system 950 communicatively coupled via a network 980. The training computing system 950 may be separate from the server computing system 930 or may be part of the server computing system 930.
The training computing system 950 includes one or more processors 952 and memory 954. The one or more processors 952 may be any suitable processing device (e.g., a processor core, microprocessor, ASIC, FPGA, controller, microcontroller, etc.), and may be a processor or multiple processors operatively connected. Memory 954 may include one or more non-transitory computer-readable storage media, such as RAM, ROM, EEPROM, EPROM, flash memory devices, disks, and the like, as well as combinations thereof. Memory 954 may store data 956 and instructions 958 that are executed by processor 952 to cause training computing system 950 to perform operations. In some implementations, the training computing system 950 includes or is otherwise implemented by one or more server computing devices.
Training computing system 950 may include a model trainer 960 that uses various training or learning techniques (e.g., back propagation of errors) to train machine learning models 920 and/or 940 stored at user computing device 902 and/or server computing system 930. For example, the loss function may be counter-propagated through the model to update one or more parameters of the model (e.g., a gradient based on the loss function). Various loss functions may be used, such as mean square error, likelihood loss, cross entropy loss, hinge loss, and/or various other loss functions. Gradient descent techniques may be used to iteratively update parameters over multiple training iterations.
In some implementations, performing back-propagation of the error may include performing back-propagation of the truncation over time. Model trainer 960 may perform a variety of generalization techniques (e.g., weight decay, loss, etc.) to improve the generalization ability of the model being trained.
In particular, model trainer 960 may train trigger event determination models 920 and/or 940 based on a set of training data 962. Training data 962 may include, for example, a labeled training data set, basic real training data, blockchain data, semantic intent labels, trigger event labels, examples of smart contract labels, and/or query generation training data sets.
In some implementations, if the user has provided consent, the training examples can be provided by the user computing device 902. Thus, in such embodiments, the model 920 provided to the user computing device 902 may be trained by the training computing system 950 on user-specific data received from the user computing device 902. In some cases, this process may be referred to as a personalized model.
Model trainer 960 includes computer logic for providing the desired functionality. Model trainer 960 may be implemented in hardware, firmware, and/or software that controls a general purpose processor. For example, in some implementations, model trainer 960 includes program files stored on a storage device, loaded into memory, and executed by one or more processors. In other implementations, model trainer 960 includes one or more sets of computer-executable instructions stored in a tangible computer-readable storage medium, such as a RAM hard disk or an optical or magnetic medium.
The network 980 may be any type of communications network, such as a local area network (e.g., an intranet), a wide area network (e.g., the internet), or some combination thereof, and may include any number of wired or wireless links. In general, communications over network 980 may be carried via any type of wired and/or wireless connection using various communication protocols (e.g., TCP/IP, HTTP, SMTP, FTP), coding or formats (e.g., HTML, XML), and/or protection schemes (e.g., VPN, secure HTTP, SSL).
The machine learning model described in this specification may be used in a variety of tasks, applications, and/or use cases.
In some implementations, the input to the machine learning model of the present disclosure can be image data. The machine learning model may process the image data to generate an output. As an example, the machine learning model may process the image data to generate an image recognition output (e.g., recognition of the image data, potential embedding of the image data, encoded representation of the image data, hashing of the image data, etc.). As another example, the machine learning model(s) may process the image data to generate an image segmentation output. As another example, the machine learning model(s) may process image data to generate an image classification output. As another example, the machine learning model(s) may process the image data to generate an image data modification output (e.g., a change in the image data, etc.). As another example, the machine learning model(s) may process the image data to generate an encoded image data output (e.g., an encoded and/or compressed representation of the image data, etc.). As another example, the machine learning model(s) may process the image data to generate an enlarged image data output. As another example, the machine learning model(s) may process the image data to generate a prediction output.
In some implementations, the input to the machine learning model of the present disclosure can be text or natural language data. The machine learning model(s) may process text or natural language data to generate an output. As an example, the machine learning model may process natural language data to generate a linguistic coded output. As another example, the machine learning model(s) may process text or natural language data to generate a potential text-embedded output. As another example, the machine learning model(s) may process text or natural language data to generate a translation output. As another example, the machine learning model(s) may process text or natural language data to generate a classification output. As another example, machine learning model(s) may process text or natural language data to generate text segmentation output. As another example, the machine learning model(s) may process text or natural language data to generate semantic intent output. As another example, the machine learning model(s) may process text or natural language data to generate an upgraded text or natural language output (e.g., text or natural language data of higher quality than the input text or natural language, etc.). As another example, the machine learning model(s) may process text or natural language data to generate a predictive output.
In some implementations, the input to the machine learning model of the present disclosure can be speech data. The machine learning model(s) may process the speech data to generate an output. As an example, the machine learning model may process the speech data to generate a speech recognition output. As another example, the machine learning model(s) may process the speech data to generate a speech translation output. As another example, the machine learning model(s) may process the speech data to generate potentially embedded output. As another example, the machine learning model(s) may process the speech data to generate an encoded speech output (e.g., an encoded and/or compressed representation of the speech data, etc.). As another example, the machine learning model(s) may process the speech data to generate an amplified speech output (e.g., speech data of higher quality than the input speech data, etc.). As another example, the machine learning model(s) may process the speech data to generate a textual representation output (e.g., a textual representation of the input speech data, etc.). As another example, the machine learning model(s) may process the speech data to generate a prediction output.
In some implementations, the input to the machine learning model(s) of the present disclosure can be potentially encoded data (e.g., a potential spatial representation of the input, etc.). The machine learning model(s) may process the potentially encoded data to generate an output. As an example, the machine learning model(s) may process the potentially encoded data to generate an identification output. As another example, the machine learning model(s) may process the potentially encoded data to generate a reconstructed output. As another example, the machine learning model(s) may process the potentially encoded data to generate a search output. As another example, the machine learning model(s) may process the potentially encoded data to generate a reclustering output. As another example, the machine learning model(s) may process the potentially encoded data to generate a prediction output.
In some implementations, the input to the machine learning model(s) of the present disclosure can be statistical data. The machine learning model(s) may process the statistical data to generate an output. As an example, the machine learning model(s) may process the statistical data to generate an identification output. As another example, the machine learning model(s) may process the statistical data to generate a prediction output. As another example, the machine learning model(s) may process the statistical data to generate a classification output. As another example, the machine learning model(s) may process the statistical data to generate a segmentation output. As another example, the machine learning model(s) may process the statistical data to generate a segmentation output. As another example, the machine learning model(s) may process the statistical data to generate a visual output. As another example, the machine learning model(s) may process the statistical data to generate a diagnostic output.
In some cases, the machine learning model(s) may be configured to perform tasks including encoding input data for reliable and/or efficient transmission or storage (and/or corresponding decoding). For example, the task may be an audio compression task. The input may comprise audio data and the output may comprise compressed audio data. In another example, the input includes visual data (e.g., one or more images or videos), the output includes compressed visual data, and the task is a visual data compression task. In another example, the task may include generating an embedding for input data (e.g., input audio or visual data).
In some cases, the input includes visual data and the task is a computer visual task. In some cases, pixel data including one or more images is input, and the task is an image processing task. For example, an image processing task may be an image classification, where the output is a set of scores, each score corresponding to a different object class and representing the likelihood that one or more images depict an object belonging to that object class. The image processing task may be object detection, wherein the image processing output identifies one or more regions in the one or more images, and for each region, identifies a likelihood that the region depicts the object of interest. As another example, the image processing task may be image segmentation, wherein the image processing output defines a respective likelihood of each category in the predetermined set of categories for each pixel in the one or more images. For example, the set of categories may be foreground and background. As another example, the set of classes may be object classes. As another example, the image processing task may be depth estimation, where the image processing output defines a respective depth value for each pixel in one or more images. As another example, the image processing task may be motion estimation, wherein the network input includes a plurality of images, and the image processing output defines, for each pixel of one of the input images, a motion of a scene depicted at a pixel between the images in the network input.
In some cases, the input includes audio data representing a spoken utterance, and the task is a speech recognition task. The output may include a text output mapped to the spoken utterance. In some cases, the task includes encrypting or decrypting the input data. In some cases, tasks include microprocessor performance tasks such as branch prediction or memory address translation.
FIG. 9A illustrates one example computing system that may be used to implement the present disclosure. Other computing systems may also be used. For example, in some implementations, the user computing device 902 may include a model trainer 960 and a training data set 962. In such an implementation, the model 920 may be trained and used locally at the user computing device 902. In some such implementations, the user computing device 902 may implement a model trainer 960 to personalize the model 920 based on user-specific data.
Fig. 9B depicts a block diagram of an example computing device 970, performed according to an example embodiment of the disclosure. The computing device 970 may be a user computing device or a server computing device.
Computing device 970 includes multiple applications (e.g., applications 1 through N). Each application contains its own machine learning library and machine learning model. For example, each application may include a machine learning model. Example applications include text messaging applications, email applications, dictation applications, virtual keyboard applications, browser applications, and the like.
As shown in fig. 9B, each application may communicate with a number of other components of the computing device, such as, for example, one or more sensors, a context manager, a device state component, and/or additional components. In some implementations, each application can communicate with each device component using an API (e.g., public API). In some implementations, the APIs used by each application are specific to that application.
Fig. 9C depicts a block diagram of an example computing device 990, performed in accordance with an example embodiment of the present disclosure. Computing device 990 may be a user computing device or a server computing device.
Computing device 990 includes multiple applications (e.g., applications 1 through N). Each application communicates with a central intelligent layer. Example applications include text messaging applications, email applications, dictation applications, virtual keyboard applications, browser applications, and the like. In some implementations, each application can communicate with the central intelligence layer (and the models stored therein) using APIs (e.g., public APIs across all applications).
The central intelligence layer includes a plurality of machine learning models. For example, as shown in fig. 9C, a respective machine learning model (e.g., model) may be provided for each application and managed by the central intelligence layer. In other implementations, two or more applications may share a single machine learning model. For example, in some embodiments, the central intelligence layer may provide a single model (e.g., a single model) for all applications. In some implementations, the central intelligence layer is included within or otherwise implemented by the operating system of the computing device 990.
The central intelligence layer may communicate with the central device data layer. The central device data layer may be a centralized repository for data of computing devices 990. As shown in fig. 9C, the central device data layer may communicate with a plurality of other components of the computing device, such as, for example, one or more sensors, a context manager, a device status component, and/or an add-on component. In some implementations, the central device data layer can communicate with each device component using an API (e.g., a proprietary API).
Example System arrangement
Fig. 2 depicts a block diagram of an example trigger event determination system 200, according to an example embodiment of the present disclosure. In some implementations, the trigger event determination system 200 is trained to receive a set of blockchain data 202 describing a smart contract and, as a result of receiving the blockchain data 202, determine 210 that a trigger event has occurred, which may then cause the data to be sent to a blockchain computing system to perform a result action 206. Thus, in some implementations, the trigger event determination system 200 may include a determination action block 202, the determination action block 202 being operable to check the status of the trigger event 204 at one or more intervals.
In particular, the blockchain data 202 may be obtained from a blockchain and/or from a repository or blockchain log. The blockchain data may be processed to identify a subset of data describing the smart contract. A trigger event 204 and/or a resulting action 206 may be determined. The identification of the subset of data and/or the determination of the triggering event 204 may be performed by one or more machine learning models.
Trigger event 204 may then be processed to determine and/or generate determination action 208. Determining act 208 may include generating a query based on the trigger event and querying a database based on the query. Alternatively and/or additionally, the determining act 208 may continuously process RSS feeds, video feeds, social media feeds, and/or audio feeds. The determining act 208 may be performed recursively until a triggering event occurs 210. When trigger event determination system 200 determines that trigger event 210 has occurred, data associated with the determination may be sent to a blockchain computing system, which may cause results action 206 to be performed.
Fig. 3 depicts a block diagram of an example query generation system 300, according to an example embodiment of the disclosure. In particular, the query generation system 300 may include obtaining blockchain data 302. The blockchain data 302 may be processed using one or more machine learning models 304 (e.g., natural language processing model, detection model, determination model, classification model, segmentation model, enhancement model, image processing model, latent encoding model, decoder model, encoder model, self-attention model, and/or decryption model) to determine semantic intent 306. Semantic intent 306 may describe a result associated with a triggering event.
Semantic intent 306 may then be processed by generation block 308 to generate query 314. The generation block 308 may generate the query based on heuristics and/or based on one or more learned parameters. A query 314 may be generated based on one or more knowledge maps.
In some implementations, the blockchain data 302 can be processed to determine a topic 310 associated with the trigger event. Alternatively and/or additionally, the blockchain data 302 may be processed to determine one or more entities 312 associated with the triggering event. One or more topics 310 and/or one or more entities 312 may be used to generate and/or enhance a query 314. In some implementations, one or more topics 310 and/or one or more entities 312 may be utilized to determine a particular database in which to search using a query 314.
Fig. 4 depicts a block diagram of an example trigger event determination system 400, according to an example embodiment of the present disclosure. In particular, the trigger event determination system 400 may include obtaining and/or determining a query 402 based on the determined trigger event. Query 402 may then be provided to search engine 404, and search engine 404 may search one or more databases. The one or more databases may include a first database 406, a second database 408, and/or a third database 410. Each database may be associated with one or more respective sources. Different respective resources may have different levels of rights. The first database 406 may be associated with a government entity, the second database 408 may be associated with a private entity, and the third entity 410 may be associated with a general database. Searching one or more databases using search engine 404 may cause one or more search results 412 to be generated. Search results 412 may be processed by a determination block to determine whether a trigger event has occurred. The determination block 414 may include one or more machine-derived models. Determination block 414 may process search results 412 to determine that a particular result has occurred, and determination block 414 may determine whether the particular result is associated with a triggering event. The weighting of one or more search results associated with the first database 406 may be different than one or more search results associated with the second database 408. The confidence level may be output by the determination block 414.
The determination block 414 may generate a notification 416 to send to the blockchain computing system in response to the trigger event occurrence. Alternatively and/or additionally, the determination block 414 may repeat the determination loop in response to the data describing that the triggering event did not occur. The notification may include instructions to perform the resulting action.
Fig. 5 depicts a block diagram of an example smart contract oracle system 500, according to an example embodiment of the present disclosure. In particular, the smart contract oracle system 500 may include obtaining data associated with the smart contract 510. Data associated with the smart contract 510 may be processed to determine trigger events 512 and resulting actions 514 associated with the smart contract 510. One or more knowledge maps 520 may be utilized to determine whether a triggering event has occurred. In some implementations, one or more knowledge maps 520 may be utilized to determine one or more resources associated with the topic of the trigger event 512. For example, trigger event 512 may include a result of a movement of a particular team. The one or more knowledge graphs 520 may include determining and/or identifying a first resource 522, a second resource 524, and/or a knowledge panel 526 associated with the trigger event 512. The first resource 522 may be a motion resource associated with an authorization in a particular motion. The second resource 524 may be a team-specific sports website (e.g., a team-specific blog, an official team website, and/or a local news source of a team). Knowledge panel 526 may be a knowledge panel associated with a particular sport, a particular team, and/or a sport result on a particular date.
The first resource 522, the second resource 524, and/or the knowledge panel 526 may be used to generate search result data 530. The search result data 530 may be processed to generate event determinations 532. The event determination 532 may describe whether a triggering event has occurred. The determination loop may be iteratively repeated.
Example method
Fig. 6 depicts a flowchart of an example method performed in accordance with an example embodiment of the present disclosure. Although fig. 6 depicts steps performed in a particular order for purposes of illustration and discussion, the methods of the present disclosure are not limited to the particular order or arrangement shown. The various steps of method 600 may be omitted, rearranged, combined, and/or adjusted in various ways without departing from the scope of the present disclosure.
At 602, a computing system may obtain blockchain data from a blockchain. The blockchain data may describe a smart contract. In some implementations, blockchain data may be obtained via blockchain nodes. The smart contract may be associated with a triggering event and a resulting action. In some implementations, the resulting action may include providing a payload to a particular user. The payload may include a non-replaceable token (e.g., a non-replaceable token associated with the digital resource) and/or cryptocurrency. The resulting actions may include implementing an application programming interface to perform particular interactions (e.g., update actions, transaction actions, and/or message interactions). The trigger event may include a particular outcome of the athletic event (e.g., a particular team win, a particular athlete count line, a particular game, and/or a particular total number of points). Alternatively and/or additionally, the triggering event may include a particular weather event that occurs (e.g., rain, high temperature, low temperature, storm occurrence, and/or precipitation type). In some implementations, the trigger event may include a particular location-based event that occurs (e.g., a traffic event, a demographic event, a voting result event, a employment event, a legal passing event, and/or a local social event). The triggering event may include meeting a query threshold. For example, the threshold may be a total amount of queries, a total amount of queries over a given period of time, an amount of location-based time, and/or an amount of particular user queries.
At 604, the computing system may process the blockchain data to determine a triggering event. The trigger event may be associated with one or more particular knowledge graphs (e.g., knowledge graphs associated with one or more entities (e.g., objects, people, events, tasks, situations, and/or concepts)) of the plurality of knowledge graphs. In some implementations, the one or more particular knowledge maps may include a motion knowledge map associated with a particular motion. A motion event may be associated with a particular motion. Alternatively and/or additionally, the one or more particular knowledge maps may include a weather knowledge map associated with a particular weather type. The one or more particular knowledge maps may include a location knowledge map associated with a particular location. Determining the trigger event may include identifying a subset of blockchain data associated with the smart contract. A subset of blockchain data associated with the smart contract may be processed to identify trigger event data and resultant action data. The trigger event data may then be processed by one or more machine learning models to determine semantic intent of the trigger event data. The triggering event may be an if term associated with the smart contract. The resulting action may be the then term associated with the smart contract. The structure of the data may be used to determine trigger event data.
At 606, the computing system may generate a query based on the trigger event. The query may be associated with one or more specific knowledge graphs. The query may include one or more terms associated with one or more particular knowledge graphs. Additionally and/or alternatively, the query may include one or more terms associated with the semantic intent of the triggering event. The query may include text data, image data, potentially encoded data, audio data, and/or video data. Queries may be generated based on deterministic functions and/or based on heuristics. Alternatively and/or additionally, one or more machine learning models may be utilized to generate the query. The one or more machine learning models may include a natural language processing model (e.g., a large pre-trained language model), a segmentation model, an enhancement model, an image processing model, an audio processing model, a video processing model, and/or a latent encoding processing model. In some implementations, query generation may include determining one or more tags associated with a triggering event and utilizing the one or more tags.
At 608, the computing system may determine that a triggering event has occurred based on the query. In some implementations, queries may be recursively provided to a search engine at predetermined intervals. Alternatively and/or additionally, the interval may be machine-learned and/or may fluctuate based on one or more variables. In some implementations, the query can be used to search a database. The database may be determined based on a knowledge graph, may be pre-associated with a triggering event, may be determined based on a determined semantic intent, and/or may be a database of authoritative sources associated with a particular topic.
In some implementations, determining that a trigger event has occurred based on the query may include providing the query to a search engine, obtaining search result data from the search engine, and determining that a trigger event has occurred based on the search result data. The search result data may be processed to determine that the search result data describes a particular result. The particular result may be processed to determine that the particular result is a triggering event. In some implementations, the search result data may be processed to determine a confidence level for a particular result determination. The search result data may describe information obtained from a plurality of sources. The corresponding information for a particular source may be weighted differently based on relevance to the topic, ranking of search results, and/or based on the determined trustworthiness of the source.
Alternatively and/or additionally, determining that a trigger event has occurred based on the query may include determining that a trend topic is associated with the query and determining that the trend topic describes the trigger event occurrence. Trend topics may be associated with disaster topics (e.g., hurricanes or wildfires), media content item topics (e.g., movies, songs, albums, images, and/or GIFs), stock topics, sports team topics, and/or specific entity topics.
At 610, the computing system may send a notification to the blockchain computing system. A notification may be generated based on the determined trigger event. A blockchain computing system may be associated with the blockchain. In some implementations, the notification may describe the trigger event occurrence. The notification may instruct the blockchain computing system to cause the resulting action to occur. In some implementations, the notification can be sent to the blockchain computing system via an application programming interface. The notification may be associated with one or more keys for authenticating the oracle system using the blockchain. The notification may include one or more lines of executable code, a proof of work, a hash function, and/or evidence data.
Fig. 7 depicts a flowchart of an example method performed in accordance with an example embodiment of the present disclosure. Although fig. 7 depicts steps performed in a particular order for purposes of illustration and discussion, the methods of the present disclosure are not limited to the particular order or arrangement shown. The various steps of method 700 may be omitted, rearranged, combined, and/or adjusted in various ways without departing from the scope of the present disclosure.
At 702, a computing system may obtain blockchain data from a blockchain. The blockchain data may describe a smart contract. In some implementations, the smart contract can be associated with a trigger event and a resulting action. The smart contract may include causing a resulting action to be performed in response to determining that the triggering event occurred. The smart contract may describe if-then functions. The if clause may be a trigger event and the resulting action may be the clause. The triggering event may include the result of the event. The resulting action may include a transfer of digital resources and/or cryptocurrency. In some implementations, the resulting actions can include causing the application programming interface to interact with a particular web platform. Alternatively and/or additionally, the resulting action may include generating additional smart contracts and embedding the smart contracts into the blockchain.
At 704, the computing system may process the blockchain data to determine a triggering event. Determining the triggering event may include determining that the subset of blockchain data includes data associated with the smart contract. The determination may be based on one or more criteria and/or one or more protocols for the smart contract. In some implementations, the determination may be based on a data structure. Additionally and/or alternatively, the blockchain data may be decrypted, processed to generate a concise english translation of the data, and the concise english translation may be processed by a natural language processing model to identify the trigger event.
At 706, the computing system may generate a query based on the trigger event. The query may be generated based on identifying one or more keywords in the decrypted trigger event. One or more keywords may then be utilized in the query. In some implementations, one or more tags can be determined based on one or more keywords, and the one or more tags can be utilized to generate a query.
At 708, the computing system may recursively search the knowledge database with the query. The recursive search may be performed at equal intervals, fluctuating intervals, and/or at a mixed set of intervals, such that the equal intervals may be supplemented by additional search instances. The knowledge database may be associated with one or more sources. One or more sources may be subject-specific authoritative sources and may have different levels of authority.
In some implementations, the computing system may determine that the trigger event is associated with a particular topic. The knowledge database may include data associated with a particular topic. The knowledge database may be determined based on one or more specific knowledge maps associated with the triggering event.
Additionally and/or alternatively, recursively searching the knowledge database with the query may generate a plurality of search result data sets. Each search result dataset may be associated with a different respective instance of a search. In some implementations, the computing system can determine that the triggering event has occurred based on one or more of the plurality of search result data sets.
At 710, the computing system may determine that a triggering event has occurred based on the query and the knowledge database. The determining may include obtaining search result data associated with a recursive search of the knowledge database. The search result data may be processed to determine whether the search result data describes a trigger event occurrence.
At 712, the computing system may send a notification to the blockchain computing system. A blockchain computing system may be associated with the blockchain. In some implementations, the notification may describe the trigger event occurrence. The notification may instruct the blockchain computing system to cause the resulting action to occur.
Fig. 8 depicts a flowchart of an example method performed in accordance with an example embodiment of the present disclosure. Although fig. 8 depicts steps performed in a particular order for purposes of illustration and discussion, the methods of the present disclosure are not limited to the particular order or arrangement shown. The various steps of method 800 may be omitted, rearranged, combined, and/or adjusted in various ways without departing from the scope of the present disclosure.
At 802, a computing system may obtain blockchain data from a blockchain. The blockchain data may describe a smart contract. In some implementations, the smart contract can be associated with a trigger event and a resulting action. The trigger event may include a particular blockchain action. A particular blockchain action may be associated with a particular user and a particular blockchain transaction. In some implementations, the resulting action may include delivering the digital resource to a particular user. The trigger event may include a transaction action associated with a particular non-replaceable token. The resulting actions may include transaction actions associated with different non-replaceable tokens.
At 804, the computing system may process the blockchain data to determine a triggering event. The trigger event may be associated with one or more entities. In some embodiments, the one or more entities may include sports teams, performers, politicians, athletes, and/or production companies. One or more entities may be determined by processing blockchain data.
At 806, the computing system may generate a query based on the trigger event. The query may be associated with one or more entities. The query may include one or more descriptors associated with one or more entities. The query may include boolean terms and/or one or more words associated with a particular event type.
In some implementations, generating the query can include processing the blockchain data using a machine-learning language model to determine a semantic intent of the trigger event (e.g., the meaning of the trigger event can be associated with the outcome of the athletic event, the type of weather event, and/or the blockchain transaction), and generating the query based on the semantic intent.
At 808, the computing system may determine that the triggering event has occurred based on recursively querying the search engine with the query. The search engine may be a general purpose search engine, a topic specific search engine, a academic article search engine, an image search engine, and/or an authoritative source search engine (e.g., a search engine that identifies authoritative sources and their corresponding content). The search engine may utilize one or more knowledge graphs.
At 810, the computing system can send a notification to the blockchain computing system. A blockchain computing system may be associated with the blockchain. The notification may describe the trigger event occurrence. In some implementations, the notification can instruct the blockchain computing system to cause the resulting action to occur.
Additional disclosure
The technology discussed herein refers to servers, databases, software applications, and other computer-based systems, as well as actions taken, and information sent to and from such systems. The inherent flexibility of computer-based systems allows for a variety of possible configurations, combinations, and divisions of tasks and functions between and among components. For example, the processes discussed herein may be implemented using a single device or component or multiple devices or components working in combination. The database and applications may be implemented on a single system or distributed across multiple systems. The distributed components may operate sequentially or in parallel.
While the present subject matter has been described in detail with respect to various specific example embodiments thereof, each example is provided by way of explanation and not limitation of the present disclosure. Modifications, variations and equivalents to those embodiments will readily occur to those skilled in the art upon attaining an understanding of the foregoing. Accordingly, the subject disclosure does not preclude inclusion of such modifications, variations and/or additions to the present subject matter as would be readily apparent to one of ordinary skill in the art. For example, features illustrated or described as part of one embodiment can be used with another embodiment to yield still a further embodiment. Accordingly, the present disclosure is intended to cover such alternatives, modifications, and equivalents.
Claims (20)
1. A computing system for trigger event determination, the system comprising:
one or more processors; and
one or more non-transitory computer-readable media collectively storing instructions that, when executed by the one or more processors, cause the computing system to perform operations comprising:
obtaining blockchain data from a blockchain, wherein the blockchain data describes a smart contract, wherein the smart contract is associated with a trigger event and a resulting action;
processing the blockchain data to determine the trigger event, wherein the trigger event is associated with one or more particular knowledge graphs of a plurality of knowledge graphs;
generating a query based on the trigger event, wherein the query is associated with one or more specific knowledge graphs;
determining that the trigger event has occurred based on the query; and
sending a notification to a blockchain computing system, wherein the blockchain computing system is associated with the blockchain, wherein the notification describes the trigger event occurrence, and wherein the notification instructs the blockchain computing system to cause the resulting action to occur.
2. The system of claim 1, wherein determining that the trigger event has occurred based on the query comprises:
providing the query to a search engine;
obtaining search result data from the search engine; and
determining that the trigger event has occurred based on the search result data.
3. The system of claim 1, wherein the query is recursively provided to the search engine at predetermined intervals.
4. The system of claim 1, wherein the resulting action comprises providing a payload to a particular user.
5. The system of claim 1, wherein the triggering event comprises a particular outcome of a sporting event, wherein the one or more particular knowledge maps comprise a sporting knowledge map associated with a particular sport, and wherein the sporting event is associated with the particular sport.
6. The system of claim 1, wherein the triggering event comprises a particular weather event occurrence, wherein the one or more particular knowledge maps comprise a weather knowledge map associated with a particular weather type.
7. The system of claim 1, wherein the triggering event comprises a particular location-based event that is occurring, wherein the one or more particular knowledge maps comprise a location knowledge map associated with a particular location.
8. The system of claim 1, wherein the triggering event comprises meeting a query threshold.
9. The system of claim 1, wherein the notification is sent to the blockchain computing system via an application programming interface.
10. The system of claim 1, wherein the blockchain data is obtained via blockchain nodes.
11. The system of claim 1, wherein determining that the trigger event has occurred based on the query comprises:
determining that a trending topic is associated with the query; and
determining that the trending topic describes the triggering event occurrence.
12. A computer-implemented method for trigger event determination, the method comprising:
obtaining, by a computing system comprising one or more processors, blockchain data from a blockchain, wherein the blockchain data describes a smart contract, wherein the smart contract is associated with a triggering event and a resulting action;
processing, by the computing system, the blockchain data to determine the trigger event;
generating, by the computing system, a query based on the trigger event;
recursively searching, by the computing system, a knowledge database using the query;
Determining, by the computing system, that the trigger event has occurred based on the query and the knowledge database; and
sending, by the computing system, a notification to a blockchain computing system, wherein the blockchain computing system is associated with the blockchain, wherein the notification describes the trigger event occurrence, and wherein the notification instructs the blockchain computing system to cause the resulting action to occur.
13. The method of claim 12, wherein the smart contract includes causing the resulting action to be performed in response to determining that the trigger event occurred.
14. The method of claim 12, further comprising:
determining, by the computing system, that the trigger event is associated with a particular topic; and
wherein the knowledge database includes data associated with a particular topic.
15. The method of claim 12, wherein recursively searching the knowledge database with the query by the computing system generates a plurality of search result data sets, wherein each search result data set is associated with a different respective instance of a search; and
wherein the trigger event is determined by the computing system to have occurred based on one or more of the plurality of search result data sets.
16. One or more non-transitory computer-readable media collectively storing instructions that, when executed by one or more computing devices, cause the one or more computing devices to perform operations comprising:
obtaining blockchain data from a blockchain, wherein the blockchain data describes a smart contract, wherein the smart contract is associated with a trigger event and a resulting action;
processing the blockchain data to determine the trigger event, wherein the trigger event is associated with one or more entities;
generating a query based on the trigger event, wherein the query is associated with the one or more entities;
determining that the triggering event has occurred based on recursively querying a search engine with the query; and
sending a notification to a blockchain computing system, wherein the blockchain computing system is associated with the blockchain, wherein the notification describes the trigger event occurrence, and wherein the notification instructs the blockchain computing system to cause the resulting action to occur.
17. The one or more non-transitory computer-readable media of claim 16, wherein the one or more entities comprise at least one of a sports team, a performer, a politician, an athlete, or a production company.
18. The one or more non-transitory computer-readable media of claim 16, wherein generating the query comprises:
processing the blockchain data using a machine-learned language model to determine semantic intent of the trigger event; and
the query is generated based on the semantic intent.
19. The one or more non-transitory computer-readable media of claim 16, wherein the trigger event comprises a particular blockchain action, wherein the particular blockchain action is associated with a particular user and a particular blockchain transaction.
20. The one or more non-transitory computer-readable media of claim 16, wherein the resulting action comprises transmitting a digital resource to a particular user.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US63/396,723 | 2022-08-10 | ||
US18/077,482 | 2022-12-08 | ||
US18/077,482 US20240054141A1 (en) | 2022-08-10 | 2022-12-08 | Authoritative Factual Service for Blockchain Smart Contracts |
Publications (1)
Publication Number | Publication Date |
---|---|
CN117331708A true CN117331708A (en) | 2024-01-02 |
Family
ID=89294000
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202311009767.6A Pending CN117331708A (en) | 2022-08-10 | 2023-08-10 | Authoritative facts service for blockchain smart contracts |
Country Status (1)
Country | Link |
---|---|
CN (1) | CN117331708A (en) |
-
2023
- 2023-08-10 CN CN202311009767.6A patent/CN117331708A/en active Pending
Similar Documents
Publication | Publication Date | Title |
---|---|---|
AU2019265827B2 (en) | Blockchain-based music originality analysis method and apparatus | |
AU2014201827B2 (en) | Scoring concept terms using a deep network | |
CN108604315B (en) | Identifying entities using deep learning models | |
US20200162266A1 (en) | Facilitating analytic services for provenance of digital documents | |
JP2019532445A (en) | Similarity search using ambiguous codes | |
US20150161529A1 (en) | Identifying Related Events for Event Ticket Network Systems | |
US11520899B2 (en) | System and method for machine learning architecture with adversarial attack defense | |
US20220284054A1 (en) | Content Carousel in a Social Media Timeline | |
CN110597963A (en) | Expression question-answer library construction method, expression search method, device and storage medium | |
CN111639291A (en) | Content distribution method, content distribution device, electronic equipment and storage medium | |
US11665121B2 (en) | Determining topic cohesion between posted and linked content | |
US20230237252A1 (en) | Digital posting match recommendation apparatus and methods | |
Mekouar et al. | A survey on blockchain-based Recommender Systems: Integration architecture and taxonomy | |
JP2023517518A (en) | Vector embedding model for relational tables with null or equivalent values | |
Yao et al. | Topic-based rank search with verifiable social data outsourcing | |
US20240054141A1 (en) | Authoritative Factual Service for Blockchain Smart Contracts | |
CN117331708A (en) | Authoritative facts service for blockchain smart contracts | |
CN116756676A (en) | Abstract generation method and related device | |
US20240048397A1 (en) | Identity Management for Web2 and Web3 Environments | |
US20240054190A1 (en) | Digital Rights Management for NFTs Across Search Surfaces | |
US20240048547A1 (en) | User Data and Personalization Models Implemented on a Blockchain | |
US20240056441A1 (en) | Decentralized Identity Management for Web3 | |
CN117040826A (en) | User data and personalization model implemented on blockchain | |
WO2024005823A1 (en) | Generating a comprehensive non-fungible token search index | |
US11461813B1 (en) | Media source validation and embedded identification |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
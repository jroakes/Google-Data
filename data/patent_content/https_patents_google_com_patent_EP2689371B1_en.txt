EP2689371B1 - Fast device classification - Google Patents
Fast device classification Download PDFInfo
- Publication number
- EP2689371B1 EP2689371B1 EP12713007.8A EP12713007A EP2689371B1 EP 2689371 B1 EP2689371 B1 EP 2689371B1 EP 12713007 A EP12713007 A EP 12713007A EP 2689371 B1 EP2689371 B1 EP 2689371B1
- Authority
- EP
- European Patent Office
- Prior art keywords
- classification
- time
- client device
- events
- server
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 239000013598 vector Substances 0.000 claims description 110
- 230000003993 interaction Effects 0.000 claims description 89
- 239000003795 chemical substances by application Substances 0.000 claims description 48
- 238000000034 method Methods 0.000 claims description 46
- 238000004458 analytical method Methods 0.000 claims description 32
- 230000002159 abnormal effect Effects 0.000 claims description 26
- 230000003542 behavioural effect Effects 0.000 claims description 17
- 230000008569 process Effects 0.000 claims description 15
- 238000012545 processing Methods 0.000 claims description 10
- 238000012544 monitoring process Methods 0.000 claims description 5
- 238000005315 distribution function Methods 0.000 claims description 4
- 230000004044 response Effects 0.000 claims description 4
- 238000013500 data storage Methods 0.000 claims 3
- 230000001276 controlling effect Effects 0.000 description 24
- 230000000694 effects Effects 0.000 description 14
- 238000009826 distribution Methods 0.000 description 13
- 230000006399 behavior Effects 0.000 description 10
- 238000011156 evaluation Methods 0.000 description 8
- 238000013459 approach Methods 0.000 description 7
- 238000004891 communication Methods 0.000 description 6
- 235000014510 cooky Nutrition 0.000 description 4
- 230000008859 change Effects 0.000 description 3
- 238000004590 computer program Methods 0.000 description 3
- 230000006870 function Effects 0.000 description 3
- 230000002452 interceptive effect Effects 0.000 description 3
- 244000035744 Hura crepitans Species 0.000 description 2
- 230000001419 dependent effect Effects 0.000 description 2
- 238000003780 insertion Methods 0.000 description 2
- 230000037431 insertion Effects 0.000 description 2
- 238000012986 modification Methods 0.000 description 2
- 230000004048 modification Effects 0.000 description 2
- 230000001105 regulatory effect Effects 0.000 description 2
- 238000004088 simulation Methods 0.000 description 2
- 238000012360 testing method Methods 0.000 description 2
- 238000012546 transfer Methods 0.000 description 2
- 241000700605 Viruses Species 0.000 description 1
- 238000010420 art technique Methods 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 238000004364 calculation method Methods 0.000 description 1
- 230000002860 competitive effect Effects 0.000 description 1
- 230000002596 correlated effect Effects 0.000 description 1
- 230000000875 corresponding effect Effects 0.000 description 1
- 238000003066 decision tree Methods 0.000 description 1
- 238000001514 detection method Methods 0.000 description 1
- 238000010586 diagram Methods 0.000 description 1
- 239000012634 fragment Substances 0.000 description 1
- 230000000977 initiatory effect Effects 0.000 description 1
- 238000007689 inspection Methods 0.000 description 1
- 230000003278 mimic effect Effects 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 230000002085 persistent effect Effects 0.000 description 1
- 238000009877 rendering Methods 0.000 description 1
- 230000001960 triggered effect Effects 0.000 description 1
- 238000012795 verification Methods 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F21/00—Security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F21/50—Monitoring users, programs or devices to maintain the integrity of platforms, e.g. of processors, firmware or operating systems
- G06F21/55—Detecting local intrusion or implementing counter-measures
- G06F21/552—Detecting local intrusion or implementing counter-measures involving long-term monitoring or reporting
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L63/00—Network architectures or network communication protocols for network security
- H04L63/14—Network architectures or network communication protocols for network security for detecting or protecting against malicious traffic
- H04L63/1408—Network architectures or network communication protocols for network security for detecting or protecting against malicious traffic by monitoring network traffic
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2221/00—Indexing scheme relating to security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F2221/21—Indexing scheme relating to G06F21/00 and subgroups addressing additional information or applications relating to security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F2221/2119—Authenticating web pages, e.g. with suspicious links
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2221/00—Indexing scheme relating to security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F2221/21—Indexing scheme relating to G06F21/00 and subgroups addressing additional information or applications relating to security arrangements for protecting computers, components thereof, programs or data against unauthorised activity
- G06F2221/2133—Verifying human interaction, e.g., Captcha
Definitions
- the present invention relates to the classification of client devices accessing content provided by a server.
- the present invention relates to the classification of a client device accessing content stored on the server over a network so as to identify occasions on which the client device is not under the control of a legitimate user.
- One of the great advantages of the internet is its open architecture, which allows connections to be formed between nodes in the network that have no previous relationship.
- a retailer may provide a web site that is accessible to all potential customers globally, without first having to subject the customer to any verification process or establish any physical connection.
- CPM cost per thousand impressions
- RTB Real Time Bidding
- Potential advertisers may be provided with information about the user (User Agent, IP address, cookie ID etc.) together with information about the web page (publisher ID, URL etc.). Based on this information, potential advertisers may decide whether they want to purchase the advertising slot and, if so, how much they are willing to pay. Participants need to reply within some fixed period (for example, 150 milliseconds). Once the period is over, the highest bidder wins the advertising slot and their advertisement will be served with the web page.
- the auction participants may be notified whether they have won via a notification message or simply by the fact that their advertisement is requested.
- the premise of the CPM advertising model, whether sold by RTB or not, is that each web page request is legitimately that of a potential customer of the advertiser.
- the model breaks down if the requests for web pages comprising display advertisements are carried out with any other purpose. Nevertheless, there may be an incentive for the website owner, or indeed the advertiser's competitors, to perform requests for the purpose of causing the advertiser to pay a fee. Requesting an advertiser's advertisements for this purpose is known as "impression fraud".
- bots are malicious agents designed to automatically carry out tasks, such as requesting web pages comprising advertisers' display advertisements, so as to frustrate the intended purpose of the CPM advertising system.
- Bots are also used to carry out a number of other malicious activities. For example, bots can be used to overwhelm web sites which provide information to legitimate users by submitting excessive requests. In other circumstances, bots have been used to inject marketing spam into comment sections of web pages.
- Bots have also been used for content gathering, such as content theft for unauthorised republication or content retrieval for competitive intelligence (for example, retrieving information such as product lists, client lists, pricing details and so on).
- bots are not tied to particular devices, and may therefore operate from a variety of sources.
- a bot may operate on a device owned by the bot owner, it may also operate on machines rented by the bot owner or even on the machines of legitimate users who are unaware of the bot's presence. In this latter example, the bot may spread to legitimate users' devices in the manner of a computer virus.
- This variety of sources for bot activities adds to the difficulty in detecting and isolating them, and can provide direct inconvenience to legitimate users who may find their device operating sub-optimally due to the presence of a bot.
- United States Patent Application US2007/0255821 proposes three techniques for identifying bots, particularly in the context of click fraud.
- one approach is to check at the end of each 24-hours period whether the number of occurrences of a particular logged parameter-for example, the IP reported in an HTTP header-associated with a resource request over the 24-hour period exceeds some threshold.
- a second approach is to pick out at the end of each 24-hour period those resource requests for which no client-side events (e.g. a JavaScript-tracked mouse movement) have been logged.
- a third approach is to check whether particular parameters associated with a resource request - IP, referrer URL and User Agent - may be found in a database of previously detected fraudulent requests (where this database is updated once every 24 hours using the previous two methods).
- US 2007/169194 A1 discloses a security expert system (SES) that automates intrusion detection analysis and threat discovery that can use fuzzy logic and forward-chaining inference engines to approximate human reasoning process.
- SES security expert system
- Embodiments of the SES can analyze incoming security events and generate a threat rating that indicates the likelihood of an event or a series of events being a threat.
- the threat rating is determined based on an attacker rating, a target rating, a valid rating, and, optionally, a negative rating.
- WO 2008/076234 A1 discloses an appliance for analyzing a network interaction.
- the appliance includes an input to monitor network traffic that includes a network interaction without interfering with the network traffic,
- the appliance further includes a processor to analyze network traffic to derive information about the network interaction wherein the information about the network interaction is used to distinguish whether the network interaction is a qualified network interaction with a user.
- a method for classifying a client device requesting content from a server comprising:
- the present invention can assist in minimising the time necessary to carry out a reliable classification based on these events. For example, the present invention can be used to assess, in the fastest time possible to ensure a known degree of confidence, whether the agent controlling the client device is likely to be a bot, or other malicious entity.
- the present invention models the time at which the different events associated with a single resource request would be expected to take place and to be logged and to be recorded in an evidence vector. This approach contrasts with prior art techniques which take no account of the fact that the events associated with a particular resource request may not be recorded at the same time.
- the present invention also takes account of the fact that the order and timing of the associated events being recorded may vary greatly across resource requests. For example, for some particular resource request, we may find that the corresponding web-server log is queued at the web server for over thirty minutes before it is sent to the classification server for insertion into the evidence vector (potentially because the web server is under high load at the time, and so the outgoing log messages are held in a queue). In such a case, if the client-side events, like those relating to mouse movements or key strokes, by-pass the said queue, then these client-side events would be recorded in the associated evidence vector a long time before the server-side event is recorded in the evidence vector. By contrast, for some other resource request, the resource may be requested in a background tab at the client.
- the present invention avoids the danger that client devices are mischaracterised because classification takes place before some of the associated events have been recorded.
- the classification time depends on the evidence vector, and is therefore subject to change when further events occur.
- the classification time may be understood as a time at which, if no further events have occurred by that time, the classification may be determined with a predetermined level of confidence.
- Typical events associated with a content request include, but are not limited to: the web server sending a web-server log; the client requesting a JavaScript resource; the client requesting an XHR/JSONP resource; the client requesting an image pixel; the web server sending a log entry for a CSS request; the client requesting an iframe; the client sending the output of some JavaScript executable where this output is indicative of JavaScript quirks typical of the claimed User Agent; the client sending several behavioural messages relating to mouse movements and keystrokes.
- the predetermined level of confidence may take a range of appropriate values.
- the predetermined level of confidence may be 98% or 99%. In other examples, the predetermined level of confidence may take other values, such as 70%, 90% or 95%.
- the predetermined level of confidence may be user defined, and/or may be calculated in dependence on the identities of one or both of the client device and the server.
- the present invention helps to ensure that classification occurs at the earliest time for which a predetermined level of confidence in the classification can be achieved. However, in some cases, it is preferred to receive a classification as soon as possible, even if the predetermined level of confidence cannot yet be achieved. Accordingly, in some preferred embodiments, the method may comprise determining a provisional classification of the client device in dependence on the evidence vector, wherein the step of determining a provisional classification occurs prior to the classification time.
- the provisional classification may include an indication of the level of confidence with which the classification has been made, to allow subsequent decisions (such as regulating the client device's access) to be taken in dependence on this information.
- the evidence vector further comprises information regarding the order in which the events occurred.
- the order in which certain events take place when a resource is requested may be determined by the quirks of the particular browser, and so this information may be used to classify the client device.
- the evidence vector further comprises information regarding the times at which the events occurred. This may provide further information to allow the determination of even more accurate classification times. Moreover, the classifications themselves may be more accurate because they take into account such information.
- the information regarding the order or timing of events may be derived from the time at which details of the event are received. For example, if a classification server is employed to carry out the method, the order and timing of the events may be taken to be the order and timing at which details of these events are received at the classification server. Alternatively the information regarding the order or timing of events may be derived from the time at which the details of the event are recorded in the appropriate evidence vector. In another arrangement, the information regarding either the order or timing of the events may be derived from another source, such as from a timestamp applied by one or both of the client device and the server. Yet another arrangement may include multiple timestamps per event-for example, a timestamp produced by a client device or web server, a timestamp which marks receipt by a classification server and a timestamp which marks insertion into an evidence vector.
- the step of processing the evidence vector comprises comparing the evidence vector with one or more probability distribution functions representing typical behaviour of client devices under the control of one or more types of agent.
- the evidence vector which includes information relating to the activity of the client device in the particular case, with information relating to the typical behaviour of a client device under the control of a particular agent type
- the present invention can assist in determining the likely agent type which is controlling the client device in this particular case, and thus in determining the correct classification for the client device.
- Agent types in this context may include legitimate users, bots or different types of bots, and malicious human users, for example.
- the probability distribution functions may be generated in a variety of ways. These include, but are not restricted to, learning with decision trees, learning a lookup table from ground truth and empirically testing hand-crafted rules.
- Preferred embodiments of the present invention further comprise the steps of: carrying out ancillary analysis of at least one of the events that has occurred; and storing results of the analysis in the evidence vector.
- the event might be a mouse movement, or other information regarding an input of the client device, and close analysis of this might indicate a distinction between a device under the control of a human user with legitimate intent and a malicious human user (for example, a human impression fraudster).
- This evidence can be incorporated in the evidence vector, allowing the classification time and the classification itself to take it into due account.
- individual analysis of the events may be carried out without adding the results to the evidence vector; in this case, the results of the individual analysis may be applied in some other way (for example, after the classification has been completed, as a form of second-stage classification).
- the classification time is determined repeatedly up until the evidence vector is processed.
- the classification time is determined in dependence on the evidence vector, which in turn stores events that have occurred. Therefore, as further events occur and are stored in the evidence vector, it may be appropriate to update the classification time.
- the classification time may be determined at regular intervals up until the evidence vector is processed, or may be determined each time a change is made to the evidence vector.
- repeated determination of the classification time helps to ensure that it is accurately determined using the latest available information.
- the method further comprises the step of assigning an interaction ID to the web resource request, wherein events associated with this resource request are stored in the evidence vector associated with this interaction ID.
- the interaction ID can be used to keep track of the events that are related to a particular resource request, allowing a system to be developed which simultaneously monitors and classifies the requests from a plurality of client devices from a plurality of web servers.
- the interaction ID assists in maintaining a record of the different events that occur when a particular client device requests a resource from a particular web server, and thereby assists in analysing this request to classify the client device.
- the method further comprises controlling the access of the client to the server in dependence on the classification of the client device.
- the activities of client devices which are classified as being controlled by malicious entities such as bots may be curtailed, while those of clients classified as being controlled by legitimate users may proceed unimpeded.
- the classification may comprise at least one classification label, such as:: human user; automaton; user to be blocked; user to be throttled; user to be sent to the sand box; and user to be monitored.
- the classification may include further details, such as the probability that each label is correct.
- the classification may comprise an array of classification labels, each classification label being associated with an indication of likelihood.
- the indication of likelihood may comprise at least one of: a probability, a probability range, and a probability distribution.
- the present invention may also provide a method for implementing a real time bidding process, comprising the step of choosing a bid price in dependence on a classification for the client device determined in accordance with the first aspect.
- participants in the real time process can take into account the likelihood that an advertisement is being viewed by a genuine user in determining their bid price for an advertisement.
- the classification also may allow advertisers to distinguish between different types of legitimate user to ensure their advertisements are directed more effectively.
- the classification may act as an identifier for the client device itself.
- the classification may be used to identify aspects of the device itself, such as the hardware or software of the device.
- the classification may be sufficient to uniquely identify individual devices, or may more generally be sufficient to identify a class of devices to which the particular client device belongs.
- a method for classifying a client device requesting content from a server comprising:
- the second aspect can assist in minimising the time necessary to carry out a reliable classification based on these events.
- the classification can be used to identify a specific client device, and thus act analogously to a fingerprint so that, for example, the activities of particular client device may be monitored.
- Preferred features of the first aspect may equally be applied to the second aspect.
- an apparatus for classifying a client device requesting content from a server the apparatus being arranged to:
- the invention can be implemented using computer program code.
- a computer program product comprising computer executable instructions for carrying out the method of the first or second aspects.
- the computer program product may be a physical storage medium such as a Read Only Memory (ROM) chip. Alternatively, it may be a disk such as a Digital Versatile Disk (DVD-ROM) or Compact Disk (CD-ROM). It could also be a signal such as an electronic signal over wires, an optical signal or a radio signal such as to a satellite or the like.
- the invention also extends to a processor running the software or code, e.g. a computer configured to carry out the method described above.
- FIG. 1 illustrates a content delivery system 1 that can be used in accordance with a first preferred embodiment of the present invention.
- the content delivery system 1 comprises a plurality of client devices 10, a plurality of web servers 20, a classification server 30, and a network 40.
- the network 40 connects the client devices 10, web servers 20 and the classification server 30 to each other.
- the network 40 is the internet.
- the client devices 10 are not limited by form factor and may have various capabilities. Client devices 10 that may be used in accordance with the present invention include personal computers (PCs), mobile phones, games consoles, tablet devices and internet-enabled televisions. In most examples, the client devices will include a user interface for receiving user inputs. The user interface may take the form of a keyboard, remote control, pointing device, touchscreen or any other interface as appropriate. Furthermore, the client devices 10 typically comprise a display which can be used to display images to the user.
- the client devices 10 are not operated by their legitimate users, but are under the control of a bot or other piece of malware.
- the entity controlling the actions of the client device 10 will be referred to as an agent.
- One of the purposes of the system 1 is to identify the type of agent controlling a given client device 10; for example, to classify whether the agent is a legitimate human user or a bot. This is done on the basis of the client device's 10 behaviour.
- the web servers 20 and the classification server 30 may be conventional computing devices for use as network servers. Alternatively, they may be implemented on other forms of network-enabled device not specifically designed as a server, such as a conventional personal computer. In general, the use of the terms client and server in this description is indicative of the functions performed by elements of the system but is not limiting as to the hardware employed. Moreover, it will be appreciated that web servers 20 are used in the context of the network 40 being the internet, but in other context different types of servers may be employed for this task.
- the network 40 allows communication between the client devices 10 and the web servers 20, and in particular allows content to be downloaded from the web servers 20 to the client devices 10.
- a web page may be hosted by a web server 20 and this may be requested across the network 40 by a client device 10 in a manner consistent with conventional internet usage.
- the web page so downloaded may contain links or other interactive elements causing ongoing communications between the client device 10 and the web server 20.
- the classification server 30 comprises a data store 32 for storing various data relevant to the classification of a client device 10.
- Figures 2A , 2B and 2C illustrate some of the content of the data store 32.
- Figures 2A , 2B and 2C illustrate this content in the form of tables containing the relevant data used by the system 1.
- Figure 2A shows an evidence vector 34.
- the evidence vector 34 are stored the times at which various events associated with an interaction between a client device 10 and a web server 20 occur. These events are stored against an interaction ID which is specific to each individual interaction between a client device 10 and a web server 20.
- the evidence vector 34 can simultaneously and distinctly contain data relating to events that are associated with multiple different interactions between various client devices 10 and web servers 20.
- each column represents a different event, while each row represents a different interaction ID. When events occur for a particular interaction ID, the relevant location in the table is updated to reflect this.
- the classification server 30 is arranged to make a final classification of a particular client device 10 interacting with a web server 20 at a classification time, which may depend on events so far recorded in the evidence vector 34 for that interaction.
- the classification time is stored in an evaluation time vector 36, which is illustrated in Figure 2B .
- the evaluation time vector 36 shows a time to be classified for each pending interaction between a client device 10 and a web server 20. Each of the times to be classified are stored against the interaction ID for the relevant interaction.
- FIG. 2C shows classification vectors 38 that are stored for each completed classification.
- Each classification vector 38 includes the interaction ID to which they relate, the list of events and times at which they occurred that were stored in the evidence vector 34 during the interaction, and the result of the final classification.
- the classification server 30 monitors events that occur while the client devices 10 access the web server 20 to classify the nature of the client devices 10.
- Events that are associated with an interaction may include, but are not limited to, the generation of a web server log, a JavaScript request, an extended Mark-up Language HyperText Transfer Protocol Request (XHR)/JavaScript Object Notation with Padding (JSONP) request, an image request, a Cascading Style Sheet (CSS) request, and behavioural messages relating to mouse movements and keystrokes.
- a record of the events that are associated with the interaction are stored, together with the order and timing in which they occur.
- the classification server can determine, and keep updating, a classification time, that is a time at which a classification can be made with a pre-determined level of confidence. After the classification time the classification server can classify the client device 10. This is done, for example, by determining whether the events that have been recorded for a given interaction ID, and the order in which the events occur, match the typical behaviour of a human or legitimate user or whether the events and the order in which the events occur more closely matches the typical behaviour of a piece of malware or a bot.
- Figure 3 shows an exemplary probability distribution for the timings of certain events when a web page is accessed by a client device 10 under the control of a legitimate user.
- Figure 3 shows the time distribution for an image pixel request 301, a JavaScript request 302, a setup message 303, an error message 304, a webserver log 305, and a first behavioural message 306 such as a keystroke or mouse movement.
- the setup message 303 is a message sent by the web browser operating at the client device 10 immediately after the web page is loaded.
- the setup message may be an XHR/JSONP message containing details about the browser operating on the client device 10.
- the setup message 303 can be generated using a script operating at the client device 10 which is designed for this purpose. For example, JavaScript in the web page may generate the setup message 303 when executed at the client device 10. Moreover, the setup message may provide information regarding the client device 10. For example, it may be appreciated that different browser types may produce different setup messages 303 (in some cases, because different browser types execute JavaScript in different ways). As such, the setup message 303 may be analysed in itself to provide information that can be used in the classification of the client device 10. For example, if the client device 10 has indicated that it is operating the Firefox web browser, but the setup message is inconsistent with the use of this type of web browser, this may suggest that the client device 10 is under the control of a malicious agent, such as a bot.
- a malicious agent such as a bot.
- the first probability peak 307 relates to the likely time of a behavioural message for users who immediately view a requested page
- the second probability peak 308 relates to the time at which a behavioural message might be expected for users who open the web page in a background tab.
- the probability distributions may vary significantly between web pages, and indeed according to the nature and connection of the client device 10 and server 20.
- Figure 3 illustrates some of the factors that may be relevant for a given sequence of events.
- Classifications applied to the client device 10 may take different forms.
- a classification may be a simple indication of the determined type of agent operating the client device 10, or may comprise additional information.
- the classification may provide information regarding the probability that a particular type of agent is controlling the client device.
- the classification may comprise one or more "classification labels", which represent potential types of agent, and additionally, for example, probability information relating to the likelihood that each classification label correctly identifies the agent controlling the client device 10.
- potential classification labels include “Human User”, “Automaton”, “User to be Blocked”, “User to be Throttled”, “User to be Sent to the Sand Box”, “User to be Monitored”, “Impression Fraudster”, “Click Fraudster” and “User to be Excluded from Billing Engine”.
- classification labels need correspond directly to a particular agent type in control of the client device 10, but may instead correspond to varying degrees of confidence as to the type of agent operating the client device 10.
- “User to be Monitored” might indicate that the activities of the client device 10 are suggestive of a bot, but do not indicate a motive for that bot.
- the access of the client device 10 to the web server 20 when this classification is made may be limited, such as to one request every six seconds. The access may be limited to the access that one would expect to be required by a legitimate user.
- “User to be Blocked” may indicate that it is certain that the client device 10 is under the control of a bot.
- the client device 10 may then be blocked from accessing the web server 20 for a period of time, such as 24 hours.
- classification labels such as "User to be Sent to the Send Box” or “User to be Throttled” may indicate the type of content to which the client device 10 is provided access or the rate at which access is provided, again in dependence on the likely type of agent operating the client device 10.
- Another example of controlling the level or type of access available might be "User to be Excluded from Billing Machine”.
- Classification labels such as "Impression Fraudster” or “Click Fraudster” can give an indication not just that the agent controlling the client device 10 is malicious, but also what type of malicious activity is being undertaken.
- the classification may comprise information regarding the probability that these labels are correctly applied. Indeed, further detail can be provided, such as a probability distribution relating to a particular label, or an indication of the range of probabilities that would fall within a predetermined degree of confidence. In this way, information can be provided which allows a user to appreciate the accuracy of the model on which the classification is based, enabling decision making processes to be taken with a full understanding of the significance of the classification.
- the access of the client device 10 to the web server 20 can be controlled in dependence on the classification of the client device. For example, this control may be effected by providing the classification to the web server 20, which then acts to regulate access of the client device 10 to the web server accordingly.
- a message may be provided to the client device 10 explaining that this is so, and the reasons why. The message may include information as to how the client device 10 may demonstrate that it is under the control of a legitimate user, or may even include interactive elements designed to test the nature of the agent controlling the client device 10.
- the classification and/or information regarding previous classifications can be used in a real time bidding process.
- a determination of whether to bid for the opportunity to deliver content to the client device 10 may be made in dependence on one or more classifications.
- Figure 4 illustrates the principle steps associated with a typical interaction of a client device 10 and a web server 20.
- the ski lied person will appreciate that alternative or additional steps may occur in some circumstances, and that the order of the steps illustrated in Figure 4 may vary. For example, these factors may vary according to the nature of the client device 10 or the type of content requested from the web server 20.
- Figure 4 provides only an 15 example of the manner in which communications between the entities involved in the system may be effected.
- the classification server 30 receives communications directed towards It from the client device 10 and the web server 20.
- the classification server 30 may act via a network wiretap or sniffer, intercepting communications between the client device 10 and the web server 20 and extracting the necessary information.
- the client device 10 accesses the internet via an internet browser, as known in the art.
- the internet browser navigates to a web page hosted by the web server 20, causing a HyperText Transfer Protocol (HTTP) request to be sent to that web server 20.
- HTTP HyperText Transfer Protocol
- the web server 20 At step s2, the web server 20 generates an interaction ID.
- the interaction ID is used to identify events relating to a specific interaction.
- the interaction ID is used to store events relating to this interaction between the client device 10 and the web server 20, and to distinguish those events from events which may be received from other interactions between other client devices 10 and web servers 20 (not shown in Figure 4 ).
- the web server 20 reports the HTTP request to the classification server 30 in a request log.
- the web server also provides the interaction ID to the classification server 30 at this stage.
- the request log may include such details as the uniform resource locator (URL) of the requested web page, the internet protocol (IP) address of the client device 10 from which the HTTP request originated, the time at which the HTTP request was received, and other identifying details relating to the HTTP request; these details include but are not limited to fields typically found in a server log or passed as part of an HTTP request header.
- the request log is provided as a single entity, it will be appreciated that a number of request logs may be generated, for example, holding different types of information.
- the classification server On receiving the interaction ID and the request log, the classification server generates a new entry in the evidence vector 34, at step s4. For example, the classification server 30 stores an indication that for the generated interaction ID an HTTP request has occurred and the time at which that request occurred. In particular, the classification server 30 stores an indication of the time of the HTTP request associated with the interaction ID in the evidence vector 34.
- the classification server in addition to generating a new entry on the evidence vector, at step s4 the classification server also determines a Classification Time. For example, having received the request log, the classification server uses probabilistic models to determine a time at which the likelihood of having received other events relevant to classification would exceed a given level of confidence.
- the web server 20 returns the requested web page to the client device 10 in the usual way. Moreover, the web server 20 returns the interaction ID to the client device 10. From this point on, the client device 20 may interact with the web page as usual. However, actions taken by the client device 10 are tagged using the interaction ID to allow these to be recognised and subsequent events to be stored in the evidence vector 34.
- Certain types of interaction between the client device 10 and the web server 20 may be more indicative of a bot controlling the client device 10 than a legitimate user. For example, when a legitimate user controls the client device 10, it is likely that images in the web page will be requested, whereas many types of bots will not request images. Similarly, it may be more likely that legitimate user will request code embedded in the web page, such as JavaScript applications.
- the client device 10 requests a JavaScript application from the web server 20.
- the web server 20 reports this request to the classification server 30, at step s7.
- the classification server 30 then records the request as an event in the evidence vector 34, at step s8. Again, the event is stored in the evidence vector 34 with an indication of the time at which the event occurred. The event is stored against the interaction ID for this particular interaction between the client device 10 and the web server 20.
- the Classification Time is updated by the classification server 30.
- the client device 10 has requested a JavaScript application, and this is returned to the client device 10 from the web server 20 at step s9.
- the client device 10 executes the JavaScript application at step s10.
- various behavioural events may occur as the agent controlling the client device 10 interacts with the application.
- these behavioural events may include mouse movements, keyboard inputs and so on.
- these behavioural events are reported directly from the client device 10 to the classification server 30 through code enacted in the JavaScript application at step s10.
- the classification server 30 On receiving information regarding the behavioural events, at step s12 the classification server 30 stores these in the evidence vector 34, together with the time at which they occurred, against the interaction ID.
- the Classification Time is updated by the classification server 30.
- an ancillary analysis comprises analysing the details of individual events to identify whether they are indicative of a particular type of agent controlling the client device 10. For example, a bot may simulate one of the behavioural events described above, in order to disguise itself as a legitimate user. This may be effective in convincing the classification server that such an event has taken place, but close analysis of the event itself may identify differences between the simulated behavioural event and what one would expect from a legitimate user.
- the ancillary analysis may analyse this to identify whether the particular movement is likely to be that of a legitimate user, or may alternatively be indicative of a bot.
- the output of such ancillary analysis may be Boolean or probabilistic in nature and will be taken into account when processing the evidence vector.
- the results of the ancillary analysis may be stored in the evidence vector 34. However, in other embodiments the results of the ancillary analysis may be stored elsewhere and incorporated into the classification of the client device 10 after the evidence vector 34 is processed.
- the Classification Time is generated or updated (see steps s4, s8 and s12).
- the Classification Time represents the time at which, given the events stored in the evidence vector, a classification can be made with a predetermined level of confidence.
- the Classification Time therefore represents the point at which final classification is to be carried out, in the absence of any further events.
- the classification server 30 classifies the client device 10, at step s13.
- This classification is carried out by processing the events stored in the evidence vector 34, together with the indication of the order in which and time at which these events occurred.
- This information can be compared to the likely behaviour of certain types of client device 10 in order to deduce the most likely nature of the client device 10 and thereby classify it. For example, if the events carried out during the interaction match most closely to the likely behaviour of a bot rather than a legitimate user, the client device 10 will be classified as such.
- the classification is returned to the web server 20.
- the web server 20 can then use the classification to regulate the client device's 10 access to the content on the web server 20.
- the classification server 30 may provide the web server with an indication of the probabilities for various types of agent operating the client device 10. For example, the classification server 30 might indicate that the agent operating the client device 10 is 75% likely to be a legitimate user, but 25% likely to be a bot. That is to say, the classification may comprise classification labels (legitimate user/bot) each associated with a given probability.
- the web server 20 may apply a threshold to these probabilities in order to regulate the client device's 10 access. For example, if information stored on the web server 20 is sensitive, the web server 20 may require 90% certainty that the client device 10 is a legitimate user, while if the information is less sensitive the server 20 may only require 70% certainty that the client device 10 is a legitimate user.
- the step of classification s13 may occur at various points in time.
- a final classification occurs at the classification time stated for a particular interaction ID in the evaluation time vector 36.
- This classification "consumes" data from the evidence vector 34, in that once a final classification has taken place for a given interaction ID, the event data for that ID is moved from the evidence vector 34 to the classification vector 38.
- the classification server 30 also stops observing events occurring during the interaction between the client device 10 and the web server 20 which corresponds with the interaction ID.
- the classification server 30 may also carry out provisional classifications.
- provisional classification When a provisional classification is carried out, the data in the evidence vector is not consumed, and the classification server 30 does not cease monitoring the interaction between the client device 10 and the web server 20.
- a provisional classification may be carried out at any time and any number of times, and may be driven by a requirement for the web server 20 to identify the client device 10 immediately. For example, the client device 10 may request sensitive content from the web server 20. At this point, it is no longer appropriate for the classification server 30 to wait until a predetermined likelihood is reached to classify the client device 10, but instead the classification server should return the most likely result immediately.
- FIG. 5 shows a lookup table in simplified scenario in which only three types of events occur.
- an event having occurred is indicated by a "1”
- an event that has not occurred is indicated by a "0”.
- Event Status For three different event types, there are seven possible combinations, given that at least one event has occurred for the record to be produced in the evidence vector. These seven combinations are represented in the column marked "Event Status" in Figure 5 .
- the event status is represented by a three character binary code representing whether each of the events has taken place.
- the final classification consists solely of a single classification label reflecting the agent operating the client device 10.
- Figure 5 includes a row for each possible combination of events and outcomes.
- the degrees of certainty in Figure 5 are expressed as probabilities between 0 and 1 in accordance with convention, but the skilled person will appreciate that these values can be converted to percentage values by multiplying them by 100.
- the lookup table in Figure 5 can be updated. That is to say, the look-up table can be constantly updated by the activity of the classification server, improving the accuracy of the classification by analysis of events in real interactions. As such, while classification may take place by comparing the events in the evidence vector with one or more probability distributions (as represented by the look-up table), the method can further comprise updating those probability distributions in dependence of the classification.
- Figure 5 does not take account of the order in which events occur, or the times at which they occur.
- the only determining factors are the types of events which have occurred and the time at which the first of the events has occurred. The skilled person would appreciate that these factors may be accounted for in a look up table of this kind. For example, further rows may be introduced for events occurring in different orders, or for events occurring at different times.
- the three events reflected in the look-up table are a server request log, an image request, and a JavaScript request.
- the first event entered into the evidence vector may be the server request log.
- Figure 6A highlights the information that can be used to make a provisional classification at this time, i.e. a probability of 0.59 of an abnormal classification and a probability of 0.41 of a normal classification.
- the event status is now 101 (reflecting that both the server request log and the image request have been received, but that no JavaScript request has been received).
- Provisional classifications can be established at any time, and are not limited to occasions on which further events occur.
- the classification time at which the final classification occurs can depend on the data in the evidence vector 34 since this provides the event status.
- the classification server 30 may calculate the classification time for a particular interaction ID according to the data stored in the evidence vector 34.
- provisional classifications can be achieved at any time, while the final classification can also be established at the classification time.
- Figures 4 and 6A to 6E illustrate the steps that occur in the classification of a particular interaction between a client device 10 and a web server 20.
- the classification server 30 is used to classify a range of interactions between different client devices 10 and web servers 20. That is to say, although the classification of the interaction discussed with reference to Figures 4 and 6A to 6E reaches an end point, the classification server 30 continues to function, analysing other ongoing interactions between client devices 10 and web servers 20.
- each classification represents certainty regarding the nature of the entity controlling the client device 10.
- an abnormal entity e.g. a bot
- a normal entity e.g. a legitimate user
- it is likely that such imitation will develop over time as attempts are made to overcome the security provided by the classification system.
- a classification may comprise classification labels (such as normal or abnormal) associated with probabilities that those labels are correct.
- classification labels such as normal or abnormal
- the first classification may be different, and may, for example, comprise the classification normal having a probability of 80% and the classification abnormal having a probability of 20%.
- the probabilities within the classification act as indicators of likelihood that, given that classification, a certain classification label correctly represents the agent controlling the client device 10.
- an indication may comprise a range of probabilities or a probability distribution.
- statistical modelling of the traffic may give a certain probability distribution for each classification label, and a range may be given for a certain confidence interval and/or the distribution itself may be incorporated into the classification.
- the level of confidence that a certain classification is correct does not necessarily coincide with the probability of a certain classification label being correct.
- a certain classification can be applied with a 95% level of confidence while that classification indicates only an 80% probability that the entity controlling the client device 10 is normal.
- each potential classification may vary dynamically as new information is introduced, such as information regarding traffic levels for each classification or new events or event types being stored in the evidence vector.
- information regarding traffic levels for each classification or new events or event types being stored in the evidence vector.
- there is an ongoing attempt by the authors of malware to overcome the classification system while the classification system itself may be upgraded to counter these new attempts.
- an indicator of likelihood into the classifications, information regarding the reliability of the classifications can be accurately reflected as soon as possible.
- the ongoing operation of the classification server is implemented using a repeating control loop, schematically illustrated in Figure 7 .
- step s71 The first step in the control loop, step s71, is to assess whether any new evidence has been received. New evidence is any indication of the occurrence of an event that has not yet been stored in the evidence vector 34. If no new evidence has been received, the method proceeds to step s74.
- the events to which it relates are stored in the evidence vector at step s72.
- the events are stored against the interaction ID for the interaction to which they relate.
- the interaction ID is generated by the web server 20 on receipt of the resource request by the client device 10 from the web server 20, and is then provided with all event information subsequently sent to the classification server 30.
- Each event stored in the evidence vector 34 is also stored with a time representing the time at which the event occurred.
- step s73 new classification times are calculated and stored in the evaluation time vector 36. This is because when a new event is stored it may alter the time at which the final classification should occur for that interaction. Accordingly, a new classification time is calculated for each interaction for which a new event has been stored since the classification time for that interaction was last calculated. Newly calculated classification times are stored in the evaluation time vector 36 against the interaction ID of the interaction to which they relate.
- step s74 an evaluation is made as to whether the current time ( t ) is greater than or equal to any one of the classification times ( Cl. t ) . If so, the method proceeds to step s76 for the interaction ID(s) associated with the classification time(s) that have been reached. If not, the method proceeds to step s75.
- the classification server 30 identifies whether any requests for a provisional classification have been received. If so, the method proceeds to step s76 for the interaction ID(s) associated with the requests for provisional classification. If not, the method returns to step s71.
- Requests for provisional classification may be received from the web servers 20, for example, and may depend on activities undertaken during the interaction between a client device 10 and the web server 20. For example, the client device 10 may attempt to access sensitive content held on the web server 20, and in response to this the web server 20 may send a request for provisional classification to the classification server 30.
- classification is carried out. This may be either provisional or final classification in accordance with the judgments made at steps s74 and s75. In either case, classification is carried out for each interaction ID in dependence on the information stored in the evidence vector 34 for that ID. As explained above, this information includes both the events that have occurred during an interaction between a client device 10 and the web server 20 and the times at which these events occurred. Accordingly, for a given interaction ID, the evidence vector 34 provides a sequence of events. This sequence of events can be compared with probabilistic models for various types of agent controlling the client device 10, and the client device 10 can be so classified.
- the classification carried out at step s76 is a final classification
- the information relating to the particular interaction ID in the evidence vector 34 and evaluation time vector 36 are consumed, i.e. removed from those vectors.
- the information from the evidence vector 34 is written into the classification vector 38, together with the classification itself. This allows the results of the final classification to be later accessed an analysed if required.
- step s76 After step s76 has occurred, the method returns to step s71 and repeats. This loop continues as long as the classification server 30 is operational. In the case where the classification server 30 is initiated, the step of classification s76 is skipped for a period of time max _ t which represents the maximum time period that is likely to elapse between the first event in a given interaction and the last event, to a predetermined level of confidence, such as 95%. Where possible, this avoids misclassifications being made on the basis of incomplete sets of events that do not include events that occurred before initiation of the classification server 30.
- Figure 7 also shows a step s77 of carrying out ancillary analysis. Although shown as part of the control loop in Figure 7 , this step may be carried out independently. In particular, it is not necessary for the rest of the control loop to await completion of ancillary analysis in order to continue.
- Ancillary analysis s77 may involve analysing particular events in detail. For example, where the event is a mouse movement or other input to the client device 10, the ancillary analysis may examine the content of that event for indications as to the type of agent controlling the client device 10. This is in addition to storing the fact that the event has occurred, and the time at which it occurred, in the evidence vector 34. The ancillary analysis may therefore provide further valuable information for use in classification of the client device 10. Results from any ancillary analysis may be stored in the evidence vector 34 for use during both provisional and final classifications. Alternatively, the results from the ancillary analysis may be stored elsewhere and the step of classification s76 may be divided between processing the evidence vector 34 and subsequently applying the results of the ancillary analysis s77.
- ancillary analysis s77 may be ongoing when the classification time is reached. In preferred embodiments, the final classification is then suspended until the results of the ancillary analysis are available and can be accounted for in the classification.
- the weight given to the ancillary analysis may vary according to the type of event being analysed, and can vary from overriding analysis of event occurrences and times to merely biasing the final classification in a particular direction.
- Figure 7 shows the calculation of classification times, the classification itself and the ancillary analysis as part of a combined control loop, the skilled person will appreciate that the invention could be implemented in other ways as appropriate.
- provisional classification may be controlled by a separate loop to final classification, occurring in response to request for a provisional classification without the need to first go through the steps of checking for additional events, storing them in the evidence vector, and so on. In this manner, the delay in providing provisional classifications can be minimised.
- classification of a client device 10 is carried out using the events collated in the evidence vector 34 for a particular interaction, together with the information stored therein relating to the time at which those events occurred.
- these considerations may have an effect on the round trip time for messages between the client device 10 and the web server 20 the distribution and deviation of evidential events, and the likelihood of evidential events not being received due to unreliable communications channels.
- These additional considerations include: the geographical locations of the client device 10, the web server 20 and the classification server 30; the load on the web server 20 and the classification server 30; the browser used by the client device 10 to access the web server 20; the physical nature of the client device 10 itself; the Internet Service Provider (ISP) used by the client device; and the various participating entities' upload and download speeds.
- ISP Internet Service Provider
- FIG. 8 illustrates the parties involved in a real-time bidding (RTB) environment for serving advertisements within web pages.
- the system illustrated in Figure 8 comprises a client device 10, a web server 20 and a classification server 30 connected to each other via a network 40, typically the internet.
- the web server 20 belongs to the "publisher" of a web page, and will thus be referred to hereinafter as the publisher web server 20.
- the web page stored on the publisher web server 20 includes regions in which advertisements are served. As will be appreciated by the skilled person, these regions may be implemented using iframes, which allow content from alternative sources to be integrated with the web page delivered by the publisher web server 20.
- an ad exchange 50 which manages the process of populating the iframes.
- the system further comprises a bidder 60, which is an entity which may wish to purchase a region of the web page in which to display an advertisement.
- the system comprises an ad server 70, on which the advertisements themselves are hosted.
- Each of the ad exchange 50, bid server 60 and ad server 70 may be implemented using conventional hardware are connected to each other and other entities in the system via the network 40.
- the client device 10 requests a web page from the publisher web server 20.
- the web page is returned to the client device 10 at step s102.
- the web page incorporates a region which is linked to an iframe through which an advertisement is to be delivered.
- the client device 10 submits, at step s103, a request to the ad exchange 50 for the iframe.
- the ad exchange is required to populate the iframe with information regarding the location of the advertisement that is to be delivered through it.
- the ad exchange 50 initiates, at step s104, an auction process.
- the ad exchange 50 transmits details of the auction to the bidder 60 at step s105.
- the auction details may comprise information about the client device and information about the publisher of the web page.
- Information about the client device may comprise details such as the User Agent, IP address, or a cookie ID, while information about the publisher may comprise details such as a publisher ID, content categories or a URL.
- information about the publisher may comprise details such as a publisher ID, content categories or a URL.
- the bidder 60 On receiving the auction details at step s105, the bidder 60 passes these on to the classification server at step s105a. These are stored within the evidence vector as events and the classification time is updated at step s105b.
- the bidder 60 decides whether to bid and the level of any such bid, at step s106.
- the bidder 60 may take into consideration details regarding previous classifications of the client device 10.
- the bidder 60 may also take into account previous classifications of other devices for this ad exchange 50 and/or publisher web server 20, together with other criteria such as spend control limits or Global Frequency Caps (GFC) (i.e. a limit on the number of times a particular client device 10 is to be shown a piece of content such an advertisement).
- GFC Global Frequency Caps
- the client device 10 is identified by information contained in the bid request, such as an IP address, cookie ID, or User Agent. Information regarding this bid is forwarded to the classification server at step s106a, while this is recorded as an event and a new classification time is calculated at step s106b.
- a response is forwarded to the ad exchange 50 comprising the bid amount, at step s107.
- the ad exchange 50 will in most cases receive multiple bids from different bidders.
- the ad exchange 50 may set a time limit, such as 150 milliseconds to receive bids from potential bidders. At the end of this time limit, the ad exchange 50 selects the winning bid, and forwards an iframe to the client device 10 at step s108.
- the iframe is constructed to link to an advertisement belonging to the bidder 60 that offered the winning bid.
- the ad server 50 informs the bidder 60 that its bid has been successful. It will be understood that such a direct notification is not essential, and that the bidder 60 may, for example, infer success according to whether their advertisement is subsequently delivered to the client device 10. On receipt of a notification, information regarding the notification is forwarded to the classification server at step 109a, which is recorded at 109b.
- the client device 10 In rendering the iframe, the client device 10 is instructed to retrieve an advertisement from ad server 70, and therefore forwards a request to the ad server 70 at step s110. Detail of this activity is forward to the classification server 30 at step s110a, and is recorded in the evidence vector while a new classification time is calculated at step s110b.
- the advertisement is returned to the client device 10 from the ad server 70.
- the advertisement will comprise links to various assets (images, videos etc.) to be used within the advertisement. These are requested from the ad server 70 at step s112. Again, detail of this activity is forwarded to the classification server 30 at step s112a, while it is stored in the evidence vector and a new classification time is calculated at step s112b.
- the advertisement assets are returned to the client device 10 at step s113.
- the advertisement can now be viewed by the user of the client device.
- Ongoing interaction between the client device 10 and the web page, including the advertisement is forwarded to the classification server in the usual way at step s114.
- This may include, for example, behavioural data regarding the user's interaction with the web page and setup data regarding the manner in which the client device 10 renders the web page.
- the classification server 30 adds such information to the evidence vector and calculates new classification times as appropriate.
- the classification server 30 classifies the advert at step s115.
- the results of this classification are forwarded to the bidder 60 at step s116.
- the bidder 60 may use this information in choosing bid amounts in future auction processes.
- the bidder 60 may update its bidding rules. These bidding rules may define the weight given to certain classifications when determining a bid or a bid amount.
- the classification is used to provide information regarding the entity controlling the client device 10.
- the classification may also be used to identify the client device 10 itself.
- classification labels may be provided that identify specific client devices 10 or groups of client devices.
- the set of classification labels may be dynamic, with additional labels being added as new devices are identified.
- a previously unseen device when a previously unseen device is first identified, it may be classified using the classification label "unknown device".
- the classification labels, classifications and lookup tables can be updated to incorporate the newly found device, including creating a new classification label for the device.
- the process of device identification using the classifications may be understood as fingerprinting, and may fully or partially identify different users or devices.
- Events that may be monitored and incorporated into the evidence vector for the purpose of such fingerprinting may include:
- events may additionally or alternatively be used to identify the client device.
- Different combinations of events allow "fingerprints" (i.e. classification labels) of various levels of uniqueness to be constructed.
- the more sources of information i.e. events
- a client device may be uniquely or probabilistically identified using only a subset of the events referred to above.
- the fact that only a subset of events is required allows the classification to be made at the earliest possible opportunity.
- the events that are monitored may include events of different types and/or of the same type.
- information sent with multiple correlated TCP requests can be used to measure the skew between the machine clocks of the client device and classification server based on the TCP time stamps.
- events may be processed in discrete sets or batches. This might be, for example, for use in a batch-oriented map-reduce framework or to classify historical data.
- events may first be stored for subsequent processing, they may then by added to evidence vectors as part of a batch operation, ancillary analysis may also proceed as part of a batch operation, classification times for all these evidence vectors could then be computed as a batch operation, and then, for those evidence vectors with suitable classification times, classifications may then finally be produced as part of a final batch operation.
Description
- The present invention relates to the classification of client devices accessing content provided by a server. In particular, but not exclusively, the present invention relates to the classification of a client device accessing content stored on the server over a network so as to identify occasions on which the client device is not under the control of a legitimate user.
- One of the great advantages of the internet is its open architecture, which allows connections to be formed between nodes in the network that have no previous relationship. In this way, for example, a retailer may provide a web site that is accessible to all potential customers globally, without first having to subject the customer to any verification process or establish any physical connection.
- The openness of the internet, however, inevitably provides opportunities for malicious agents to conceal their true nature in order to subvert the legitimate use of web resources. Where this relates to the efforts by unauthorised parties to gain access to sensitive information, it is well known to hide that information behind passwords and other security measures. However, there are circumstances in which providers do not wish to conceal information or functionality from the public in general, but only wish to stop misuse.
- For example, one technique for monetising user traffic on the internet is CPM (cost per thousand impressions) display advertising. In this arrangement, an advertiser's display advertisement is placed in a web page, and each time that page is requested to be viewed by a visitor a fee is paid to the website owner. As such, the more times the web page comprising a display advertisement is requested to be viewed, the greater the fee that is paid to the website owner.
- One way display advertisements are chosen to populate advertising slots in web pages is known as Real Time Bidding (RTB). RTB allows individual advertising slots to be sold to an advertiser via an auction process. For example, when a user attempts to access a web page, potential advertisers may be provided with information about the user (User Agent, IP address, cookie ID etc.) together with information about the web page (publisher ID, URL etc.). Based on this information, potential advertisers may decide whether they want to purchase the advertising slot and, if so, how much they are willing to pay. Participants need to reply within some fixed period (for example, 150 milliseconds). Once the period is over, the highest bidder wins the advertising slot and their advertisement will be served with the web page. Dependent on the implementation, the auction participants may be notified whether they have won via a notification message or simply by the fact that their advertisement is requested.
- The premise of the CPM advertising model, whether sold by RTB or not, is that each web page request is legitimately that of a potential customer of the advertiser. The model breaks down if the requests for web pages comprising display advertisements are carried out with any other purpose. Nevertheless, there may be an incentive for the website owner, or indeed the advertiser's competitors, to perform requests for the purpose of causing the advertiser to pay a fee. Requesting an advertiser's advertisements for this purpose is known as "impression fraud".
- A common manner in which impression fraud is carried out is by the use of automated programs, often called online robots or "bots". These bots are malicious agents designed to automatically carry out tasks, such as requesting web pages comprising advertisers' display advertisements, so as to frustrate the intended purpose of the CPM advertising system.
- Bots are also used to carry out a number of other malicious activities. For example, bots can be used to overwhelm web sites which provide information to legitimate users by submitting excessive requests. In other circumstances, bots have been used to inject marketing spam into comment sections of web pages.
- Bots have also been used for content gathering, such as content theft for unauthorised republication or content retrieval for competitive intelligence (for example, retrieving information such as product lists, client lists, pricing details and so on).
- A notable feature of bots is that they are not tied to particular devices, and may therefore operate from a variety of sources. For example, while a bot may operate on a device owned by the bot owner, it may also operate on machines rented by the bot owner or even on the machines of legitimate users who are unaware of the bot's presence. In this latter example, the bot may spread to legitimate users' devices in the manner of a computer virus. This variety of sources for bot activities adds to the difficulty in detecting and isolating them, and can provide direct inconvenience to legitimate users who may find their device operating sub-optimally due to the presence of a bot.
- In order to counter the problems associated with bots, they must first be identified. There is therefore a need to distinguish between the activities of bots and those of legitimate users in a reliable way.
- United States Patent Application
US2007/0255821 proposes three techniques for identifying bots, particularly in the context of click fraud. According to this document, one approach is to check at the end of each 24-hours period whether the number of occurrences of a particular logged parameter-for example, the IP reported in an HTTP header-associated with a resource request over the 24-hour period exceeds some threshold. A second approach is to pick out at the end of each 24-hour period those resource requests for which no client-side events (e.g. a JavaScript-tracked mouse movement) have been logged. A third approach is to check whether particular parameters associated with a resource request - IP, referrer URL and User Agent - may be found in a database of previously detected fraudulent requests (where this database is updated once every 24 hours using the previous two methods). - Although the techniques described in
US 2007/0255821 and others like it have some efficacy, they are unable to provide accurate classifications of client devices at sufficient speed. For example, the first two approaches described inUS 2007/0255821 only make classifications at the end of each 24 hour period, meaning that up until this point a bot may continue its activities unhindered. On the other hand, if the period described inUS 2007/0255821 were reduced, this would reduce the accuracy of the classification. -
US 2007/169194 A1 discloses a security expert system (SES) that automates intrusion detection analysis and threat discovery that can use fuzzy logic and forward-chaining inference engines to approximate human reasoning process. Embodiments of the SES can analyze incoming security events and generate a threat rating that indicates the likelihood of an event or a series of events being a threat. In one example, the threat rating is determined based on an attacker rating, a target rating, a valid rating, and, optionally, a negative rating. -
WO 2008/076234 A1 discloses an appliance for analyzing a network interaction. The appliance includes an input to monitor network traffic that includes a network interaction without interfering with the network traffic, The appliance further includes a processor to analyze network traffic to derive information about the network interaction wherein the information about the network interaction is used to distinguish whether the network interaction is a qualified network interaction with a user. - The above objects and other related objects are solved by the claimed matter according to the independent claims. Advantageous embodiments are defined in the dependent claims.
- According to a first aspect of the present invention, there is provided a method for classifying a client device requesting content from a server, comprising:
- monitoring a plurality of different events associated with the client device requesting content from the server;
- storing an evidence vector comprising information identifying the events that have occurred;
- determining a classification time in dependence on the evidence vector; and
- processing, when the classification time has been reached, the evidence vector to determine a classification for the client device,
- wherein the classification is indicative of a type of agent controlling the client device and the classification time is a time at which the classification may be determined with a predetermined level of confidence.
- By calculating a classification time at which a predetermined degree of confidence can be established in determining a classification for a client device, based on the events associated with a content request, the present invention can assist in minimising the time necessary to carry out a reliable classification based on these events. For example, the present invention can be used to assess, in the fastest time possible to ensure a known degree of confidence, whether the agent controlling the client device is likely to be a bot, or other malicious entity.
- Rather than simply summing particular event parameters over a fixed period of time, the present invention models the time at which the different events associated with a single resource request would be expected to take place and to be logged and to be recorded in an evidence vector. This approach contrasts with prior art techniques which take no account of the fact that the events associated with a particular resource request may not be recorded at the same time.
- The present invention also takes account of the fact that the order and timing of the associated events being recorded may vary greatly across resource requests. For example, for some particular resource request, we may find that the corresponding web-server log is queued at the web server for over thirty minutes before it is sent to the classification server for insertion into the evidence vector (potentially because the web server is under high load at the time, and so the outgoing log messages are held in a queue). In such a case, if the client-side events, like those relating to mouse movements or key strokes, by-pass the said queue, then these client-side events would be recorded in the associated evidence vector a long time before the server-side event is recorded in the evidence vector. By contrast, for some other resource request, the resource may be requested in a background tab at the client. In such a case, some client-side behaviour (a mouse movement, for example) would not be recorded until the background tab is opened in the foreground. By determining a classification at an appropriate classification time, which captures these types of eventuality, the present invention avoids the danger that client devices are mischaracterised because classification takes place before some of the associated events have been recorded.
- The classification time depends on the evidence vector, and is therefore subject to change when further events occur. Thus, the classification time may be understood as a time at which, if no further events have occurred by that time, the classification may be determined with a predetermined level of confidence.
- Typical events associated with a content request include, but are not limited to: the web server sending a web-server log; the client requesting a JavaScript resource; the client requesting an XHR/JSONP resource; the client requesting an image pixel; the web server sending a log entry for a CSS request; the client requesting an iframe; the client sending the output of some JavaScript executable where this output is indicative of JavaScript quirks typical of the claimed User Agent; the client sending several behavioural messages relating to mouse movements and keystrokes.
- The predetermined level of confidence may take a range of appropriate values. For example, the predetermined level of confidence may be 98% or 99%. In other examples, the predetermined level of confidence may take other values, such as 70%, 90% or 95%. The predetermined level of confidence may be user defined, and/or may be calculated in dependence on the identities of one or both of the client device and the server.
- As described above, the present invention helps to ensure that classification occurs at the earliest time for which a predetermined level of confidence in the classification can be achieved. However, in some cases, it is preferred to receive a classification as soon as possible, even if the predetermined level of confidence cannot yet be achieved. Accordingly, in some preferred embodiments, the method may comprise determining a provisional classification of the client device in dependence on the evidence vector, wherein the step of determining a provisional classification occurs prior to the classification time. The provisional classification may include an indication of the level of confidence with which the classification has been made, to allow subsequent decisions (such as regulating the client device's access) to be taken in dependence on this information.
- In preferred embodiments, the evidence vector further comprises information regarding the order in which the events occurred.
- By using information relating to the order in which different events were stored, a more accurate classification time can be established. The order may also be considered when assessing the nature of the agent controlling the device, potentially leading to further advances in the reliability of the classification. For example, the order in which certain events take place when a resource is requested may be determined by the quirks of the particular browser, and so this information may be used to classify the client device.
- Preferably, the evidence vector further comprises information regarding the times at which the events occurred. This may provide further information to allow the determination of even more accurate classification times. Moreover, the classifications themselves may be more accurate because they take into account such information.
- The information regarding the order or timing of events may be derived from the time at which details of the event are received. For example, if a classification server is employed to carry out the method, the order and timing of the events may be taken to be the order and timing at which details of these events are received at the classification server. Alternatively the information regarding the order or timing of events may be derived from the time at which the details of the event are recorded in the appropriate evidence vector. In another arrangement, the information regarding either the order or timing of the events may be derived from another source, such as from a timestamp applied by one or both of the client device and the server. Yet another arrangement may include multiple timestamps per event-for example, a timestamp produced by a client device or web server, a timestamp which marks receipt by a classification server and a timestamp which marks insertion into an evidence vector.
- In preferred embodiments, the step of processing the evidence vector comprises comparing the evidence vector with one or more probability distribution functions representing typical behaviour of client devices under the control of one or more types of agent. By comparing the evidence vector, which includes information relating to the activity of the client device in the particular case, with information relating to the typical behaviour of a client device under the control of a particular agent type, the present invention can assist in determining the likely agent type which is controlling the client device in this particular case, and thus in determining the correct classification for the client device. Agent types in this context may include legitimate users, bots or different types of bots, and malicious human users, for example. The probability distribution functions may be generated in a variety of ways. These include, but are not restricted to, learning with decision trees, learning a lookup table from ground truth and empirically testing hand-crafted rules.
- Preferred embodiments of the present invention further comprise the steps of: carrying out ancillary analysis of at least one of the events that has occurred; and storing results of the analysis in the evidence vector. In this way, further information relevant to the classification of the client device can be provided in the evidence vector. For example, the event might be a mouse movement, or other information regarding an input of the client device, and close analysis of this might indicate a distinction between a device under the control of a human user with legitimate intent and a malicious human user (for example, a human impression fraudster). This evidence can be incorporated in the evidence vector, allowing the classification time and the classification itself to take it into due account. Alternatively, individual analysis of the events may be carried out without adding the results to the evidence vector; in this case, the results of the individual analysis may be applied in some other way (for example, after the classification has been completed, as a form of second-stage classification).
- Preferably, the classification time is determined repeatedly up until the evidence vector is processed. The classification time is determined in dependence on the evidence vector, which in turn stores events that have occurred. Therefore, as further events occur and are stored in the evidence vector, it may be appropriate to update the classification time. For example, the classification time may be determined at regular intervals up until the evidence vector is processed, or may be determined each time a change is made to the evidence vector. However implemented, repeated determination of the classification time helps to ensure that it is accurately determined using the latest available information.
- Preferably, the method further comprises the step of assigning an interaction ID to the web resource request, wherein events associated with this resource request are stored in the evidence vector associated with this interaction ID. The interaction ID can be used to keep track of the events that are related to a particular resource request, allowing a system to be developed which simultaneously monitors and classifies the requests from a plurality of client devices from a plurality of web servers. The interaction ID assists in maintaining a record of the different events that occur when a particular client device requests a resource from a particular web server, and thereby assists in analysing this request to classify the client device.
- Preferably, the method further comprises controlling the access of the client to the server in dependence on the classification of the client device. For example, the activities of client devices which are classified as being controlled by malicious entities such as bots may be curtailed, while those of clients classified as being controlled by legitimate users may proceed unimpeded.
- The classification may comprise at least one classification label, such as:: human user; automaton; user to be blocked; user to be throttled; user to be sent to the sand box; and user to be monitored. In addition to one or more classification labels, the classification may include further details, such as the probability that each label is correct. For example, the classification may comprise an array of classification labels, each classification label being associated with an indication of likelihood. The indication of likelihood may comprise at least one of: a probability, a probability range, and a probability distribution. By incorporating such information into the classification, detail can be provided regarding the strength of the conclusions that can be drawn based on the classification. Different classifications may indicate to the server that differing levels of access should be afforded to the client device.
- The present invention may also provide a method for implementing a real time bidding process, comprising the step of choosing a bid price in dependence on a classification for the client device determined in accordance with the first aspect. As such, participants in the real time process can take into account the likelihood that an advertisement is being viewed by a genuine user in determining their bid price for an advertisement. The classification also may allow advertisers to distinguish between different types of legitimate user to ensure their advertisements are directed more effectively.
- In some preferred embodiments, as well as being indicative of the type of agent controlling the client device, the classification may act as an identifier for the client device itself. For example, the classification may be used to identify aspects of the device itself, such as the hardware or software of the device. The classification may be sufficient to uniquely identify individual devices, or may more generally be sufficient to identify a class of devices to which the particular client device belongs.
- According to a second aspect of the present invention, there is provided a method for classifying a client device requesting content from a server, comprising:
- monitoring a plurality of different events associated with the client device requesting content from the server;
- storing an evidence vector comprising information identifying the events that have occurred;
- determining a classification time in dependence on the evidence vector; and
- processing, when the classification time has been reached, the evidence vector to determine a classification for the client device,
- wherein the classification is an identifier for the client device and the classification time is a time at which the classification may be determined with a predetermined level of confidence.
- As for the first aspect, by calculating a classification time at which a predetermined degree of confidence can be established in determining a classification for a client device, based on the events associated with a content request, the second aspect can assist in minimising the time necessary to carry out a reliable classification based on these events. The classification can be used to identify a specific client device, and thus act analogously to a fingerprint so that, for example, the activities of particular client device may be monitored. Preferred features of the first aspect may equally be applied to the second aspect.
- According to a third aspect of the present invention, there is provided an apparatus for classifying a client device requesting content from a server, the apparatus being arranged to:
- monitor a plurality of different events associated with the client device requesting content from the server;
- store an evidence vector comprising information identifying the events that have occurred;
- determine a classification time in dependence on the evidence vector; and
- process, when the classification time has been reached, the evidence vector to determine a classification for the client device,
- wherein the classification is indicative of a type of agent controlling the client device and the classification time is a time at which the classification may be determined with a predetermined level of confidence.
- It can also be appreciated that the invention can be implemented using computer program code. Indeed, according to a further aspect of the present invention, there is therefore provided a computer program product comprising computer executable instructions for carrying out the method of the first or second aspects. The computer program product may be a physical storage medium such as a Read Only Memory (ROM) chip. Alternatively, it may be a disk such as a Digital Versatile Disk (DVD-ROM) or Compact Disk (CD-ROM). It could also be a signal such as an electronic signal over wires, an optical signal or a radio signal such as to a satellite or the like. The invention also extends to a processor running the software or code, e.g. a computer configured to carry out the method described above.
- Embodiments of the present invention will now be described, by way of example only, with reference to the accompanying drawings, in which:
-
Figure 1 shows a content delivery system for use in conjunction with a preferred embodiment of the present invention; -
Figure 2A schematically illustrates an evidence vector for recording events during interactions between client devices and web servers; -
Figure 2B schematically illustrates an evaluation time vector for recording the time at which interactions between client devices and web servers can be classified; -
Figure 2C schematically illustrates a classification vector for storing completed client device classifications; -
Figure 3 shows exemplary probabilities distributions for events that may occur in an interaction between a client device and a web server; -
Figure 4 illustrates the operation of the content delivery system during an exemplary interaction between a client device and a web server; -
Figure 5 illustrates a look-up table for use in classifying a client device and determining a classification time; -
Figures 6A to 6E highlight information in the look-up table ofFigure 5 that is used during an exemplary interaction; -
Figure 7 is a flow diagram illustrating a repeating loop operated by a classification server in accordance with the preferred embodiment of the present invention; -
Figure 8 shows a content delivery system for use in conjunction with a preferred embodiment of the present invention in the context of a real time bidding process; and -
Figure 9 illustrates the operation of the content delivery system ofFigure 8 during a real time bidding process. -
Figure 1 illustrates acontent delivery system 1 that can be used in accordance with a first preferred embodiment of the present invention. Thecontent delivery system 1 comprises a plurality ofclient devices 10, a plurality ofweb servers 20, aclassification server 30, and anetwork 40. Thenetwork 40 connects theclient devices 10,web servers 20 and theclassification server 30 to each other. In the preferred embodiment, thenetwork 40 is the internet. - The
client devices 10 are not limited by form factor and may have various capabilities.Client devices 10 that may be used in accordance with the present invention include personal computers (PCs), mobile phones, games consoles, tablet devices and internet-enabled televisions. In most examples, the client devices will include a user interface for receiving user inputs. The user interface may take the form of a keyboard, remote control, pointing device, touchscreen or any other interface as appropriate. Furthermore, theclient devices 10 typically comprise a display which can be used to display images to the user. - As will be explored in greater detail below, in some cases the
client devices 10 are not operated by their legitimate users, but are under the control of a bot or other piece of malware. As such, in the following description, the entity controlling the actions of theclient device 10 will be referred to as an agent. One of the purposes of thesystem 1 is to identify the type of agent controlling a givenclient device 10; for example, to classify whether the agent is a legitimate human user or a bot. This is done on the basis of the client device's 10 behaviour. - The
web servers 20 and theclassification server 30 may be conventional computing devices for use as network servers. Alternatively, they may be implemented on other forms of network-enabled device not specifically designed as a server, such as a conventional personal computer. In general, the use of the terms client and server in this description is indicative of the functions performed by elements of the system but is not limiting as to the hardware employed. Moreover, it will be appreciated thatweb servers 20 are used in the context of thenetwork 40 being the internet, but in other context different types of servers may be employed for this task. - The
network 40 allows communication between theclient devices 10 and theweb servers 20, and in particular allows content to be downloaded from theweb servers 20 to theclient devices 10. For example, a web page may be hosted by aweb server 20 and this may be requested across thenetwork 40 by aclient device 10 in a manner consistent with conventional internet usage. The web page so downloaded may contain links or other interactive elements causing ongoing communications between theclient device 10 and theweb server 20. - The
classification server 30 comprises adata store 32 for storing various data relevant to the classification of aclient device 10.Figures 2A ,2B and2C illustrate some of the content of thedata store 32.Figures 2A ,2B and2C illustrate this content in the form of tables containing the relevant data used by thesystem 1. - In particular,
Figure 2A shows anevidence vector 34. In theevidence vector 34 are stored the times at which various events associated with an interaction between aclient device 10 and aweb server 20 occur. These events are stored against an interaction ID which is specific to each individual interaction between aclient device 10 and aweb server 20. As such, theevidence vector 34 can simultaneously and distinctly contain data relating to events that are associated with multiple different interactions betweenvarious client devices 10 andweb servers 20. In the table format shown inFigure 2A , each column represents a different event, while each row represents a different interaction ID. When events occur for a particular interaction ID, the relevant location in the table is updated to reflect this. - As will be described in greater detail below, the
classification server 30 is arranged to make a final classification of aparticular client device 10 interacting with aweb server 20 at a classification time, which may depend on events so far recorded in theevidence vector 34 for that interaction. The classification time is stored in anevaluation time vector 36, which is illustrated inFigure 2B . Theevaluation time vector 36 shows a time to be classified for each pending interaction between aclient device 10 and aweb server 20. Each of the times to be classified are stored against the interaction ID for the relevant interaction. -
Figure 2C showsclassification vectors 38 that are stored for each completed classification. Eachclassification vector 38 includes the interaction ID to which they relate, the list of events and times at which they occurred that were stored in theevidence vector 34 during the interaction, and the result of the final classification. - The
classification server 30 monitors events that occur while theclient devices 10 access theweb server 20 to classify the nature of theclient devices 10. Events that are associated with an interaction may include, but are not limited to, the generation of a web server log, a JavaScript request, an extended Mark-up Language HyperText Transfer Protocol Request (XHR)/JavaScript Object Notation with Padding (JSONP) request, an image request, a Cascading Style Sheet (CSS) request, and behavioural messages relating to mouse movements and keystrokes. A record of the events that are associated with the interaction are stored, together with the order and timing in which they occur. By comparing this record against probabilistic models of expected inter-event times the classification server can determine, and keep updating, a classification time, that is a time at which a classification can be made with a pre-determined level of confidence. After the classification time the classification server can classify theclient device 10. This is done, for example, by determining whether the events that have been recorded for a given interaction ID, and the order in which the events occur, match the typical behaviour of a human or legitimate user or whether the events and the order in which the events occur more closely matches the typical behaviour of a piece of malware or a bot. -
Figure 3 shows an exemplary probability distribution for the timings of certain events when a web page is accessed by aclient device 10 under the control of a legitimate user. In particular,Figure 3 shows the time distribution for animage pixel request 301, aJavaScript request 302, asetup message 303, anerror message 304, awebserver log 305, and a firstbehavioural message 306 such as a keystroke or mouse movement. In this example, thesetup message 303 is a message sent by the web browser operating at theclient device 10 immediately after the web page is loaded. The setup message may be an XHR/JSONP message containing details about the browser operating on theclient device 10. - The
setup message 303 can be generated using a script operating at theclient device 10 which is designed for this purpose. For example, JavaScript in the web page may generate thesetup message 303 when executed at theclient device 10. Moreover, the setup message may provide information regarding theclient device 10. For example, it may be appreciated that different browser types may produce different setup messages 303 (in some cases, because different browser types execute JavaScript in different ways). As such, thesetup message 303 may be analysed in itself to provide information that can be used in the classification of theclient device 10. For example, if theclient device 10 has indicated that it is operating the Firefox web browser, but the setup message is inconsistent with the use of this type of web browser, this may suggest that theclient device 10 is under the control of a malicious agent, such as a bot. - In the particular example shown in
Figure 3 , there are two probability peaks for the firstbehavioural message 306. Thefirst probability peak 307 relates to the likely time of a behavioural message for users who immediately view a requested page, while thesecond probability peak 308 relates to the time at which a behavioural message might be expected for users who open the web page in a background tab. The skilled person will appreciate that in practice, the probability distributions may vary significantly between web pages, and indeed according to the nature and connection of theclient device 10 andserver 20. - Nevertheless,
Figure 3 illustrates some of the factors that may be relevant for a given sequence of events. - Classifications applied to the
client device 10 may take different forms. For example, a classification may be a simple indication of the determined type of agent operating theclient device 10, or may comprise additional information. For example, the classification may provide information regarding the probability that a particular type of agent is controlling the client device. In this context, the classification may comprise one or more "classification labels", which represent potential types of agent, and additionally, for example, probability information relating to the likelihood that each classification label correctly identifies the agent controlling theclient device 10. - For example, potential classification labels include "Human User", "Automaton", "User to be Blocked", "User to be Throttled", "User to be Sent to the Sand Box", "User to be Monitored", "Impression Fraudster", "Click Fraudster" and "User to be Excluded from Billing Engine". As the skilled person will recognise, not all classification labels need correspond directly to a particular agent type in control of the
client device 10, but may instead correspond to varying degrees of confidence as to the type of agent operating theclient device 10. - For example, "User to be Monitored" might indicate that the activities of the
client device 10 are suggestive of a bot, but do not indicate a motive for that bot. To limit its impact, the access of theclient device 10 to theweb server 20 when this classification is made may be limited, such as to one request every six seconds. The access may be limited to the access that one would expect to be required by a legitimate user. - On the other hand, "User to be Blocked" may indicate that it is certain that the
client device 10 is under the control of a bot. Theclient device 10 may then be blocked from accessing theweb server 20 for a period of time, such as 24 hours. - Similarly, other classification labels such as "User to be Sent to the Send Box" or "User to be Throttled" may indicate the type of content to which the
client device 10 is provided access or the rate at which access is provided, again in dependence on the likely type of agent operating theclient device 10. Another example of controlling the level or type of access available might be "User to be Excluded from Billing Machine". - Classification labels such as "Impression Fraudster" or "Click Fraudster" can give an indication not just that the agent controlling the
client device 10 is malicious, but also what type of malicious activity is being undertaken. - As mentioned above, in addition to the classification labels, the classification may comprise information regarding the probability that these labels are correctly applied. Indeed, further detail can be provided, such as a probability distribution relating to a particular label, or an indication of the range of probabilities that would fall within a predetermined degree of confidence. In this way, information can be provided which allows a user to appreciate the accuracy of the model on which the classification is based, enabling decision making processes to be taken with a full understanding of the significance of the classification.
- Once a
client device 10 has been classified, the access of theclient device 10 to theweb server 20 can be controlled in dependence on the classification of the client device. For example, this control may be effected by providing the classification to theweb server 20, which then acts to regulate access of theclient device 10 to the web server accordingly. In some embodiments, where access to theweb server 20 is regulated, a message may be provided to theclient device 10 explaining that this is so, and the reasons why. The message may include information as to how theclient device 10 may demonstrate that it is under the control of a legitimate user, or may even include interactive elements designed to test the nature of the agent controlling theclient device 10. - In another embodiment, described below with reference to
Figures 8 and9 , the classification and/or information regarding previous classifications can be used in a real time bidding process. In particular, a determination of whether to bid for the opportunity to deliver content to theclient device 10 may be made in dependence on one or more classifications. -
Figure 4 illustrates the principle steps associated with a typical interaction of aclient device 10 and aweb server 20. The ski lied person will appreciate that alternative or additional steps may occur in some circumstances, and that the order of the steps illustrated inFigure 4 may vary. For example, these factors may vary according to the nature of theclient device 10 or the type of content requested from theweb server 20. - Moreover, the skilled person will appreciate that
Figure 4 provides only an 15 example of the manner in which communications between the entities involved in the system may be effected. For example, In the example ofFigure 4 , theclassification server 30 receives communications directed towards It from theclient device 10 and theweb server 20. However, in other embodiments, theclassification server 30 may act via a network wiretap or sniffer, intercepting communications between theclient device 10 and theweb server 20 and extracting the necessary information. - In the example shown in
Figure 4 , theclient device 10 accesses the internet via an internet browser, as known in the art. At step s1, the internet browser navigates to a web page hosted by theweb server 20, causing a HyperText Transfer Protocol (HTTP) request to be sent to thatweb server 20. - At step s2, the
web server 20 generates an interaction ID. As described below, the interaction ID is used to identify events relating to a specific interaction. In particular, the interaction ID is used to store events relating to this interaction between theclient device 10 and theweb server 20, and to distinguish those events from events which may be received from other interactions betweenother client devices 10 and web servers 20 (not shown inFigure 4 ). - At step s3, the
web server 20 reports the HTTP request to theclassification server 30 in a request log. The web server also provides the interaction ID to theclassification server 30 at this stage. The request log may include such details as the uniform resource locator (URL) of the requested web page, the internet protocol (IP) address of theclient device 10 from which the HTTP request originated, the time at which the HTTP request was received, and other identifying details relating to the HTTP request; these details include but are not limited to fields typically found in a server log or passed as part of an HTTP request header. Although in this example, the request log is provided as a single entity, it will be appreciated that a number of request logs may be generated, for example, holding different types of information. - On receiving the interaction ID and the request log, the classification server generates a new entry in the
evidence vector 34, at step s4. For example, theclassification server 30 stores an indication that for the generated interaction ID an HTTP request has occurred and the time at which that request occurred. In particular, theclassification server 30 stores an indication of the time of the HTTP request associated with the interaction ID in theevidence vector 34. - Moreover, in addition to generating a new entry on the evidence vector, at step s4 the classification server also determines a Classification Time. For example, having received the request log, the classification server uses probabilistic models to determine a time at which the likelihood of having received other events relevant to classification would exceed a given level of confidence.
- At step s5, the
web server 20 returns the requested web page to theclient device 10 in the usual way. Moreover, theweb server 20 returns the interaction ID to theclient device 10. From this point on, theclient device 20 may interact with the web page as usual. However, actions taken by theclient device 10 are tagged using the interaction ID to allow these to be recognised and subsequent events to be stored in theevidence vector 34. - Certain types of interaction between the
client device 10 and theweb server 20 may be more indicative of a bot controlling theclient device 10 than a legitimate user. For example, when a legitimate user controls theclient device 10, it is likely that images in the web page will be requested, whereas many types of bots will not request images. Similarly, it may be more likely that legitimate user will request code embedded in the web page, such as JavaScript applications. - In the example shown in
Figure 4 , at step s6 theclient device 10 requests a JavaScript application from theweb server 20. Theweb server 20 reports this request to theclassification server 30, at step s7. Theclassification server 30 then records the request as an event in theevidence vector 34, at step s8. Again, the event is stored in theevidence vector 34 with an indication of the time at which the event occurred. The event is stored against the interaction ID for this particular interaction between theclient device 10 and theweb server 20. - In addition, at step s8, using the
evidence vector 34 with the newly added event, the Classification Time is updated by theclassification server 30. - In this example, the
client device 10 has requested a JavaScript application, and this is returned to theclient device 10 from theweb server 20 at step s9. Theclient device 10 executes the JavaScript application at step s10. - During execution of the JavaScript application, various behavioural events may occur as the agent controlling the
client device 10 interacts with the application. For example, these behavioural events may include mouse movements, keyboard inputs and so on. In the example shown inFigure 4 , these behavioural events are reported directly from theclient device 10 to theclassification server 30 through code enacted in the JavaScript application at step s10. On receiving information regarding the behavioural events, at step s12 theclassification server 30 stores these in theevidence vector 34, together with the time at which they occurred, against the interaction ID. - Moreover, at step s12, using the
evidence vector 34 with the newly added event, the Classification Time is updated by theclassification server 30. - Although not illustrated in
Figure 4 , there may be some ancillary analysis carried out of the events that have occurred during the interaction. Typically, the ancillary analysis will be carried out by theclassification server 30, although it may be carried out by other elements of the system. Ancillary analysis comprises analysing the details of individual events to identify whether they are indicative of a particular type of agent controlling theclient device 10. For example, a bot may simulate one of the behavioural events described above, in order to disguise itself as a legitimate user. This may be effective in convincing the classification server that such an event has taken place, but close analysis of the event itself may identify differences between the simulated behavioural event and what one would expect from a legitimate user. For example, if the behavioural message is a mouse movement, the ancillary analysis may analyse this to identify whether the particular movement is likely to be that of a legitimate user, or may alternatively be indicative of a bot. The output of such ancillary analysis may be Boolean or probabilistic in nature and will be taken into account when processing the evidence vector. - The results of the ancillary analysis may be stored in the
evidence vector 34. However, in other embodiments the results of the ancillary analysis may be stored elsewhere and incorporated into the classification of theclient device 10 after theevidence vector 34 is processed. - As mentioned above, each time events are recorded in the
evidence vector 34, the Classification Time is generated or updated (see steps s4, s8 and s12). The Classification Time represents the time at which, given the events stored in the evidence vector, a classification can be made with a predetermined level of confidence. The Classification Time therefore represents the point at which final classification is to be carried out, in the absence of any further events. - Accordingly, when the Classification Time is reached, the
classification server 30 classifies theclient device 10, at step s13. This classification is carried out by processing the events stored in theevidence vector 34, together with the indication of the order in which and time at which these events occurred. This information can be compared to the likely behaviour of certain types ofclient device 10 in order to deduce the most likely nature of theclient device 10 and thereby classify it. For example, if the events carried out during the interaction match most closely to the likely behaviour of a bot rather than a legitimate user, theclient device 10 will be classified as such. - At step s14, the classification is returned to the
web server 20. Theweb server 20 can then use the classification to regulate the client device's 10 access to the content on theweb server 20. - In some cases, particularly but not exclusively when providing a provisional classification, the
classification server 30 may provide the web server with an indication of the probabilities for various types of agent operating theclient device 10. For example, theclassification server 30 might indicate that the agent operating theclient device 10 is 75% likely to be a legitimate user, but 25% likely to be a bot. That is to say, the classification may comprise classification labels (legitimate user/bot) each associated with a given probability. Theweb server 20 may apply a threshold to these probabilities in order to regulate the client device's 10 access. For example, if information stored on theweb server 20 is sensitive, theweb server 20 may require 90% certainty that theclient device 10 is a legitimate user, while if the information is less sensitive theserver 20 may only require 70% certainty that theclient device 10 is a legitimate user. - The step of classification s13 may occur at various points in time. In preferred embodiments, a distinction is made between a provisional classification and a final classification. A final classification occurs at the classification time stated for a particular interaction ID in the
evaluation time vector 36. This classification "consumes" data from theevidence vector 34, in that once a final classification has taken place for a given interaction ID, the event data for that ID is moved from theevidence vector 34 to theclassification vector 38. At this point, theclassification server 30 also stops observing events occurring during the interaction between theclient device 10 and theweb server 20 which corresponds with the interaction ID. - As mentioned above, the
classification server 30 may also carry out provisional classifications. When a provisional classification is carried out, the data in the evidence vector is not consumed, and theclassification server 30 does not cease monitoring the interaction between theclient device 10 and theweb server 20. A provisional classification may be carried out at any time and any number of times, and may be driven by a requirement for theweb server 20 to identify theclient device 10 immediately. For example, theclient device 10 may request sensitive content from theweb server 20. At this point, it is no longer appropriate for theclassification server 30 to wait until a predetermined likelihood is reached to classify theclient device 10, but instead the classification server should return the most likely result immediately. - The manner in which provisional classifications, final classifications, and the classification time are calculated can be understood with reference to
Figure 5 , which shows a lookup table in simplified scenario in which only three types of events occur. InFigure 5 , an event having occurred is indicated by a "1", while an event that has not occurred is indicated by a "0". For three different event types, there are seven possible combinations, given that at least one event has occurred for the record to be produced in the evidence vector. These seven combinations are represented in the column marked "Event Status" inFigure 5 . The event status is represented by a three character binary code representing whether each of the events has taken place. - In the simplified example of
Figure 5 , the final classification consists solely of a single classification label reflecting the agent operating theclient device 10. In this example, there are two possible classifications, "normal" and "abnormal". - These are indicated in the column marked "Outcomes". Accordingly,
Figure 5 includes a row for each possible combination of events and outcomes. - The remaining columns of
Figure 5 show the level of confidence with which each classification can be given for a given combination of events at a given time since the first event. As such, each column is headed by the time (t=0, t=0.5 etc.) to which it relates. In this example, the times are divided into half second intervals, but the skilled person will appreciate that different time intervals may be used as appropriate. At time t=0, the first event is received, meaning thatonly event combinations Figure 5 are expressed as probabilities between 0 and 1 in accordance with convention, but the skilled person will appreciate that these values can be converted to percentage values by multiplying them by 100. - In normal use, one would expect all three of the event types referred to in
Figure 5 to occur in a given interaction. In this example, therefore, if all three events occur, then the client device is classified as "normal". This can be seen fromFigure 5 , for which the level of confidence associated with a "normal" classification is given as 1 for all possible times when all three events have occurred. Where only some of the events have occurred, the level of confidence for "normal and "abnormal" classifications varies depending on the probability that the ultimate outcome will either be that all three events have occurred (and thus the interaction will be "normal") or at least one event will not occur (and thus the interaction will be "abnormal"). These values can be interpreted from empirical data derived by observing interactions between client devices and web servers, and observing the ultimate outcome when a given collection of events has occurred at a given time. The skilled person will realise there are many ways to generate the probability look-up table. For example the underlying distribution of the arrival of events could be statistically modelled. A modelling approach rather than learning classifications directly from empirical data may be more appropriate when the data available is particularly sparse or the number of components in the evidence vector is particularly large. - In an alternative embodiment, following the classification of a client device, the lookup table in
Figure 5 can be updated. That is to say, the look-up table can be constantly updated by the activity of the classification server, improving the accuracy of the classification by analysis of events in real interactions. As such, while classification may take place by comparing the events in the evidence vector with one or more probability distributions (as represented by the look-up table), the method can further comprise updating those probability distributions in dependence of the classification. - For the sake of clarity,
Figure 5 does not take account of the order in which events occur, or the times at which they occur. The only determining factors are the types of events which have occurred and the time at which the first of the events has occurred. The skilled person would appreciate that these factors may be accounted for in a look up table of this kind. For example, further rows may be introduced for events occurring in different orders, or for events occurring at different times. - The manner in which the lookup table of
Figure 5 can be used to identify the classification times, or carry out provisional or final classifications is illustrated inFigures 6A to 6E . - Consider that the three events reflected in the look-up table are a server request log, an image request, and a JavaScript request. The first event entered into the evidence vector may be the server request log. At this point, the time is t=0 and the event status is 100.
Figure 6A highlights the information that can be used to make a provisional classification at this time, i.e. a probability of 0.59 of an abnormal classification and a probability of 0.41 of a normal classification. -
Figure 6B illustrates how at time t=0 a classification time may be determined in this example. The classification time is the time at which a classification can be determined with a predetermined level of confidence. In this case, the predetermined level of confidence is 98%. Accordingly, to determine the classification time, one proceeds along the rows associated withevent status 100 until a level of confidence of at least 0.98 is reached. As can be seen fromFigure 6B , the classification time for this event status is t=2.5. -
Figure 6C relates to a later time t=1.5 when an image request is received. This is stored in theevidence vector 34 as described above. The event status is now 101 (reflecting that both the server request log and the image request have been received, but that no JavaScript request has been received). Using the look-up table, the provisional classification at time t=1.5 can be established on the basis of the probability of 0.97 that the interaction will ultimately be normal and 0.03 that the interaction will ultimately be abnormal. Moreover, the classification time can be recalculated, this time forevent status 101. As can be seen, it is only at time t=4 that a level of confidence above 0.98 is achieved forevent status 101. Accordingly, the classification time is set to t=4. - Provisional classifications can be established at any time, and are not limited to occasions on which further events occur. Thus,
Figure 6D highlights the values that can be used to carry out an additional provisional classification at time t=2. In this case, the event status remains 101, but using the look-up table one can see that the probabilities that the interaction will ultimately be considered normal and will ultimately be considered abnormal are 0.96 and 0.04 respectively (note, this is a change in these values from time t=1.5 illustrated inFigure 6C ). - In this example, at time t=3 the JavaScript request is received. The relevant values are highlighted in
Figure 6E . The event status is now 111, and the probabilities of normal and abnormal ultimate results are 1 and 0 respectively. Accordingly, recalculation of the classification time will result in a value of t=3, since the level of confidence for a classification of "normal" at this time exceeds 0.98. As such, because the classification time has been reached, a final classification of "normal" can be made. - As can be seen from
Figures 6A to 6E , the classification time at which the final classification occurs can depend on the data in theevidence vector 34 since this provides the event status. In particular, theclassification server 30 may calculate the classification time for a particular interaction ID according to the data stored in theevidence vector 34. Moreover, using the evidence vector and the look-up table, provisional classifications can be achieved at any time, while the final classification can also be established at the classification time. -
Figures 4 and6A to 6E illustrate the steps that occur in the classification of a particular interaction between aclient device 10 and aweb server 20. However, in the preferred embodiment of the present invention, theclassification server 30 is used to classify a range of interactions betweendifferent client devices 10 andweb servers 20. That is to say, although the classification of the interaction discussed with reference toFigures 4 and6A to 6E reaches an end point, theclassification server 30 continues to function, analysing other ongoing interactions betweenclient devices 10 andweb servers 20. - For the sake of clarity of explanation, the embodiment described with reference to
Figures 5 and6A to 6E is based on a scenario in which each classification represents certainty regarding the nature of the entity controlling theclient device 10. However, consider a scenario in which it is found that an abnormal entity (e.g. a bot) is able in some circumstances to effectively mimic the behaviour of a normal entity (e.g a legitimate user) so that it is indistinguishable using the data collected in the evidence vector. In practice, it is likely that such imitation will develop over time as attempts are made to overcome the security provided by the classification system. - For example, consider a scenario in which trends in traffic are monitored, and it is observed that an unusual amount of traffic appears from the evidence vector to be "normal". We may infer that the additional traffic is the result of abnormal entities successfully simulating normal behaviour. While it may not be possible to identify individual instances in which such simulation is occurring, the statistical likelihood that an individual instance results from such simulation can be calculated from the volume of traffic. Therefore, the "normal" classification no longer represents certainty that the entity controlling the device is normal, but instead may represent a calculated probability that that is the case.
- It can be understood that a classification may comprise classification labels (such as normal or abnormal) associated with probabilities that those labels are correct. Thus, in the example of
Figures 5 and6A to 6E , there are two potential classifications: a first classification that comprises the classification label "normal" having a probability of 100% and the classification "abnormal" having a probability of 0%; and a second classification comprising the classification label "normal" having a probability of 0% and the classification label "abnormal" having a probability of 100%. In a circumstance in which it is known that there is a chance that an abnormal entity may successfully simulate a normal entity, the first classification may be different, and may, for example, comprise the classification normal having a probability of 80% and the classification abnormal having a probability of 20%. - The probabilities within the classification act as indicators of likelihood that, given that classification, a certain classification label correctly represents the agent controlling the
client device 10. The skilled person will recognise that alternatively or additionally to the simple probabilities presented above, such an indication may comprise a range of probabilities or a probability distribution. For example, statistical modelling of the traffic may give a certain probability distribution for each classification label, and a range may be given for a certain confidence interval and/or the distribution itself may be incorporated into the classification. - In light of the above, the level of confidence that a certain classification is correct does not necessarily coincide with the probability of a certain classification label being correct. Using the example discussed above, it may be that a certain classification can be applied with a 95% level of confidence while that classification indicates only an 80% probability that the entity controlling the
client device 10 is normal. - The nature of each potential classification may vary dynamically as new information is introduced, such as information regarding traffic levels for each classification or new events or event types being stored in the evidence vector. In practice, there is an ongoing attempt by the authors of malware to overcome the classification system, while the classification system itself may be upgraded to counter these new attempts. By incorporating an indicator of likelihood into the classifications, information regarding the reliability of the classifications can be accurately reflected as soon as possible.
- In the preferred embodiment of the present invention, the ongoing operation of the classification server is implemented using a repeating control loop, schematically illustrated in
Figure 7 . - The first step in the control loop, step s71, is to assess whether any new evidence has been received. New evidence is any indication of the occurrence of an event that has not yet been stored in the
evidence vector 34. If no new evidence has been received, the method proceeds to step s74. - If new evidence has been received, then the events to which it relates are stored in the evidence vector at step s72. The events are stored against the interaction ID for the interaction to which they relate. As mentioned above, the interaction ID is generated by the
web server 20 on receipt of the resource request by theclient device 10 from theweb server 20, and is then provided with all event information subsequently sent to theclassification server 30. Each event stored in theevidence vector 34 is also stored with a time representing the time at which the event occurred. - The method then continues to step s73, where new classification times are calculated and stored in the
evaluation time vector 36. This is because when a new event is stored it may alter the time at which the final classification should occur for that interaction. Accordingly, a new classification time is calculated for each interaction for which a new event has been stored since the classification time for that interaction was last calculated. Newly calculated classification times are stored in theevaluation time vector 36 against the interaction ID of the interaction to which they relate. - At step s74, an evaluation is made as to whether the current time (t) is greater than or equal to any one of the classification times (Cl. t). If so, the method proceeds to step s76 for the interaction ID(s) associated with the classification time(s) that have been reached. If not, the method proceeds to step s75.
- At step s75, the
classification server 30 identifies whether any requests for a provisional classification have been received. If so, the method proceeds to step s76 for the interaction ID(s) associated with the requests for provisional classification. If not, the method returns to step s71. Requests for provisional classification may be received from theweb servers 20, for example, and may depend on activities undertaken during the interaction between aclient device 10 and theweb server 20. For example, theclient device 10 may attempt to access sensitive content held on theweb server 20, and in response to this theweb server 20 may send a request for provisional classification to theclassification server 30. - At step s76, classification is carried out. This may be either provisional or final classification in accordance with the judgments made at steps s74 and s75. In either case, classification is carried out for each interaction ID in dependence on the information stored in the
evidence vector 34 for that ID. As explained above, this information includes both the events that have occurred during an interaction between aclient device 10 and theweb server 20 and the times at which these events occurred. Accordingly, for a given interaction ID, theevidence vector 34 provides a sequence of events. This sequence of events can be compared with probabilistic models for various types of agent controlling theclient device 10, and theclient device 10 can be so classified. - Where the classification carried out at step s76 is a final classification, the information relating to the particular interaction ID in the
evidence vector 34 andevaluation time vector 36 are consumed, i.e. removed from those vectors. - However, the information from the
evidence vector 34 is written into theclassification vector 38, together with the classification itself. This allows the results of the final classification to be later accessed an analysed if required. - After step s76 has occurred, the method returns to step s71 and repeats. This loop continues as long as the
classification server 30 is operational. In the case where theclassification server 30 is initiated, the step of classification s76 is skipped for a period of time max_t which represents the maximum time period that is likely to elapse between the first event in a given interaction and the last event, to a predetermined level of confidence, such as 95%. Where possible, this avoids misclassifications being made on the basis of incomplete sets of events that do not include events that occurred before initiation of theclassification server 30. -
Figure 7 also shows a step s77 of carrying out ancillary analysis. Although shown as part of the control loop inFigure 7 , this step may be carried out independently. In particular, it is not necessary for the rest of the control loop to await completion of ancillary analysis in order to continue. - Ancillary analysis s77 may involve analysing particular events in detail. For example, where the event is a mouse movement or other input to the
client device 10, the ancillary analysis may examine the content of that event for indications as to the type of agent controlling theclient device 10. This is in addition to storing the fact that the event has occurred, and the time at which it occurred, in theevidence vector 34. The ancillary analysis may therefore provide further valuable information for use in classification of theclient device 10. Results from any ancillary analysis may be stored in theevidence vector 34 for use during both provisional and final classifications. Alternatively, the results from the ancillary analysis may be stored elsewhere and the step of classification s76 may be divided between processing theevidence vector 34 and subsequently applying the results of the ancillary analysis s77. - In some examples, ancillary analysis s77 may be ongoing when the classification time is reached. In preferred embodiments, the final classification is then suspended until the results of the ancillary analysis are available and can be accounted for in the classification. The weight given to the ancillary analysis may vary according to the type of event being analysed, and can vary from overriding analysis of event occurrences and times to merely biasing the final classification in a particular direction.
- Although
Figure 7 shows the calculation of classification times, the classification itself and the ancillary analysis as part of a combined control loop, the skilled person will appreciate that the invention could be implemented in other ways as appropriate. In particular, provisional classification may be controlled by a separate loop to final classification, occurring in response to request for a provisional classification without the need to first go through the steps of checking for additional events, storing them in the evidence vector, and so on. In this manner, the delay in providing provisional classifications can be minimised. - As explained above, classification of a
client device 10 is carried out using the events collated in theevidence vector 34 for a particular interaction, together with the information stored therein relating to the time at which those events occurred. However, there may also be additional considerations that could also be taken into account when classifying theclient device 10. For example, these considerations may have an effect on the round trip time for messages between theclient device 10 and theweb server 20 the distribution and deviation of evidential events, and the likelihood of evidential events not being received due to unreliable communications channels. These additional considerations include: the geographical locations of theclient device 10, theweb server 20 and theclassification server 30; the load on theweb server 20 and theclassification server 30; the browser used by theclient device 10 to access theweb server 20; the physical nature of theclient device 10 itself; the Internet Service Provider (ISP) used by the client device; and the various participating entities' upload and download speeds. - An example of the practical use of the classifications provided by the present invention can be understood with reference to
Figure 8 , which illustrates the parties involved in a real-time bidding (RTB) environment for serving advertisements within web pages. As inFigure 1 , the system illustrated inFigure 8 comprises aclient device 10, aweb server 20 and aclassification server 30 connected to each other via anetwork 40, typically the internet. In this case, theweb server 20 belongs to the "publisher" of a web page, and will thus be referred to hereinafter as thepublisher web server 20. - The web page stored on the
publisher web server 20 includes regions in which advertisements are served. As will be appreciated by the skilled person, these regions may be implemented using iframes, which allow content from alternative sources to be integrated with the web page delivered by thepublisher web server 20. In the example ofFigure 8 , there is further provided anad exchange 50 which manages the process of populating the iframes. The system further comprises abidder 60, which is an entity which may wish to purchase a region of the web page in which to display an advertisement. Finally, the system comprises anad server 70, on which the advertisements themselves are hosted. Each of thead exchange 50,bid server 60 andad server 70 may be implemented using conventional hardware are connected to each other and other entities in the system via thenetwork 40. - The operation of the system shown in
Figure 8 is illustrated inFigure 9 . Firstly, at step s101, theclient device 10 requests a web page from thepublisher web server 20. The web page is returned to theclient device 10 at step s102. The web page incorporates a region which is linked to an iframe through which an advertisement is to be delivered. As a result, theclient device 10 submits, at step s103, a request to thead exchange 50 for the iframe. At this point, the ad exchange is required to populate the iframe with information regarding the location of the advertisement that is to be delivered through it. To choose that advertisement, thead exchange 50 initiates, at step s104, an auction process. - The
ad exchange 50 transmits details of the auction to thebidder 60 at step s105. The auction details may comprise information about the client device and information about the publisher of the web page. Information about the client device may comprise details such as the User Agent, IP address, or a cookie ID, while information about the publisher may comprise details such as a publisher ID, content categories or a URL. Although only onebidder 60 is shown inFigure 8 , it will be understood that there are many potential bidders who receive this information, allowing them to choose whether to bid in the auction to deliver their advertisement through the iframe in the web page. - On receiving the auction details at step s105, the
bidder 60 passes these on to the classification server at step s105a. These are stored within the evidence vector as events and the classification time is updated at step s105b. - The
bidder 60 then decides whether to bid and the level of any such bid, at step s106. In order to make this decision, thebidder 60 may take into consideration details regarding previous classifications of theclient device 10. Thebidder 60 may also take into account previous classifications of other devices for thisad exchange 50 and/orpublisher web server 20, together with other criteria such as spend control limits or Global Frequency Caps (GFC) (i.e. a limit on the number of times aparticular client device 10 is to be shown a piece of content such an advertisement). In this example, theclient device 10 is identified by information contained in the bid request, such as an IP address, cookie ID, or User Agent. Information regarding this bid is forwarded to the classification server at step s106a, while this is recorded as an event and a new classification time is calculated at step s106b. - Assuming that the
bidder 60 does wish to bid, a response is forwarded to thead exchange 50 comprising the bid amount, at step s107. Thead exchange 50 will in most cases receive multiple bids from different bidders. Thead exchange 50 may set a time limit, such as 150 milliseconds to receive bids from potential bidders. At the end of this time limit, thead exchange 50 selects the winning bid, and forwards an iframe to theclient device 10 at step s108. The iframe is constructed to link to an advertisement belonging to thebidder 60 that offered the winning bid. - In the case shown in
Figure 9 , it is assumed that thebidder 60 illustrated inFigure 8 has presented the winning bid. At step s109, thead server 50 informs thebidder 60 that its bid has been successful. It will be understood that such a direct notification is not essential, and that thebidder 60 may, for example, infer success according to whether their advertisement is subsequently delivered to theclient device 10. On receipt of a notification, information regarding the notification is forwarded to the classification server atstep 109a, which is recorded at 109b. - In rendering the iframe, the
client device 10 is instructed to retrieve an advertisement fromad server 70, and therefore forwards a request to thead server 70 at step s110. Detail of this activity is forward to theclassification server 30 at step s110a, and is recorded in the evidence vector while a new classification time is calculated at step s110b. - At step s111, the advertisement is returned to the
client device 10 from thead server 70. The advertisement will comprise links to various assets (images, videos etc.) to be used within the advertisement. These are requested from thead server 70 at step s112. Again, detail of this activity is forwarded to theclassification server 30 at step s112a, while it is stored in the evidence vector and a new classification time is calculated at step s112b. - The advertisement assets are returned to the
client device 10 at step s113. The advertisement can now be viewed by the user of the client device. Ongoing interaction between theclient device 10 and the web page, including the advertisement is forwarded to the classification server in the usual way at step s114. This may include, for example, behavioural data regarding the user's interaction with the web page and setup data regarding the manner in which theclient device 10 renders the web page. At step s114b, theclassification server 30 adds such information to the evidence vector and calculates new classification times as appropriate. - When the classification time is reached, the
classification server 30 classifies the advert at step s115. The results of this classification are forwarded to thebidder 60 at step s116. Thebidder 60 may use this information in choosing bid amounts in future auction processes. At step s117, thebidder 60 may update its bidding rules. These bidding rules may define the weight given to certain classifications when determining a bid or a bid amount. - In the above description, the classification is used to provide information regarding the entity controlling the
client device 10. However, alternatively or additionally, the classification may also be used to identify theclient device 10 itself. For example, classification labels may be provided that identifyspecific client devices 10 or groups of client devices. Moreover, the set of classification labels may be dynamic, with additional labels being added as new devices are identified. - In one approach, when a previously unseen device is first identified, it may be classified using the classification label "unknown device". When the classification is complete, the classification labels, classifications and lookup tables can be updated to incorporate the newly found device, including creating a new classification label for the device.
- The process of device identification using the classifications may be understood as fingerprinting, and may fully or partially identify different users or devices. Events that may be monitored and incorporated into the evidence vector for the purpose of such fingerprinting may include:
- Server side message events (i.e. HTTP requests for webpage resources), such as:
- o Information about the IP address captured at the network layer (Open systems Interconnections (OSI) layer);
- o Language, Accept, X-Forwarded-For, User-Agent HTTP headers (at the application layer);
- o Information about the ordering of HTTP headers.
- Secure image pixel message events (i.e. HTTP Secure (HTTPS) requests for image resources), such as:
- o Secure Socket Layer (SSL) security settings;
- o SSL Session ID;
- o An entity tag (such as a previously set persistent token);
- o Information derived from the Transmission Control Protocol (TCP)-level headers, including, for example, initial packet size, initial Time-to-live (TTL), window size, maximum segment size, widow scaling value, "don't fragment" flag, "sackOK flag", "nop" flag, clock skew.
- Client setup message events (i.e. JSONP/XHR requests capturing information about the browser environment), such as:
- o Time zone;
- o User Agent string;
- o User Agent as determined through inspection of the browser environment through JavaScript;
- o Platform;
- o Whether Java is enabled as reported by JavaScript;
- o Browser language;
- o Installed plugins and versions;
- o Installed fonts as reported by the browser;
- o Installed fonts as reported by a browser plugin;
- o Flash Player version;
- o Screen dimensions;
- o Colour depth of display;
- o Unique tokens persisted using:
- ▪ HyperText Markup Language 5 (HTML5) localStorage
- ▪ Browser plugins (for example, Flash Local Shared Objects (also known as "Flash cookies"), Silverlight Isolated Storage, Java applet saving a file).
- Client behavioural message events (i.e. JSON/XHR requests capturing behavioural information), such as:
- o Biometric information, for example timestamped keystroke events and timestamped mouse positions.
- Heartbeat message events (i.e. JSONP/XHR requests sent periodically as a heartbeat indicating the webpage is open), such as:
- o Heartbeat timestamp.
- Unload message events (i.e. XHR requests triggered by the page unload event), such as:
- o Unload timestamp.
- The skilled person will appreciate that other events may additionally or alternatively be used to identify the client device. Different combinations of events allow "fingerprints" (i.e. classification labels) of various levels of uniqueness to be constructed. In general, it will be appreciated that the more sources of information (i.e. events) are recorded the more specific one can be when identifying a client device and moreover that a client device may be uniquely or probabilistically identified using only a subset of the events referred to above. Further, the fact that only a subset of events is required allows the classification to be made at the earliest possible opportunity.
- The events that are monitored may include events of different types and/or of the same type. For example, information sent with multiple correlated TCP requests can be used to measure the skew between the machine clocks of the client device and classification server based on the TCP time stamps.
- The above description relates to an embodiment of the present invention in which events are processed in real time. However, in an alternative embodiment, the events may be processed in discrete sets or batches. This might be, for example, for use in a batch-oriented map-reduce framework or to classify historical data. In such an embodiment events may first be stored for subsequent processing, they may then by added to evidence vectors as part of a batch operation, ancillary analysis may also proceed as part of a batch operation, classification times for all these evidence vectors could then be computed as a batch operation, and then, for those evidence vectors with suitable classification times, classifications may then finally be produced as part of a final batch operation.
- Other variations and modifications will be apparent to the skilled person. Such variations and modifications may involve equivalent and other features which are already known and which may be used instead of, or in addition to, features described herein. Features that are described in the context of separate embodiments may be provided in combination in a single embodiment. Conversely, features which are described in the context of a single embodiment may also be provided separately or in any suitable sub-combination.
- It should be noted that the term "comprising" does not exclude other elements or steps, the term "a" or "an" does not exclude a plurality, a single feature may fulfil the functions of several features recited in the claims and reference signs in the claims shall not be construed as limiting the scope of the claims. It should also be noted that the Figures are not necessarily to scale; emphasis instead generally being placed upon illustrating the principles of the present invention.
Claims (12)
- A computer-implemented method for classifying an agent controlling a client device (10) requesting content from a server (20), comprising:generating a probability look-up table, comprising a plurality of abnormal probability values, each abnormal probability value corresponding to a sequence of events at a corresponding time;monitoring a plurality of different events associated with a request for content made by a client device (10) to a server (20);storing the monitored events in an evidence vector, together with the time the events occurred;processing the evidence vector to derive a sequence of events;identifying an abnormal probability value from the probability look-up table by proceeding along a row associated with the derived sequence of events in the probability look-up table until a lowest time is found for which the abnormal probability value is greater than a predetermined level of confidence;setting a classification time to a time corresponding to the identified abnormal probability value, the classification time representing a time at which a probability that an agent controlling the client device (10) is illegitimate exceeds a predetermined threshold; andclassifying the agent controlling the client device (10) requesting content from the server (20) as illegitimate, when the time period represented by the difference between the classification time and the time of a first event of the request has elapsed.
- The method of claim 1, wherein processing the evidence vector comprises processing the evidence vector using a timing of events in the evidence vector.
- The method of claim 1, further comprising
updating the classification time at regular intervals before the time period represented by the difference between the classification time and the time of the first event of the request has elapsed. - The method of claim 1, further comprising
provisionally classifying an agent controlling the client device (10) requesting content from the server (20) as illegitimate, responsive to determining that the time period represented by the difference between the classification time and the time of the first event of the request has not elapsed. - The method of claim 1, wherein generating a probability look-up table further comprises one or more of:observing interactions between a second client device (10) and a second web server (20);observing an outcome of the interactions; andgenerating a probability value in the look-up table using the outcome and the interactions.
- The method of claim 1, further comprising
updating, responsive to classifying the agent, the probability look-up table by updating the abnormal probability value related to the determined classification time. - The method of claim 1, wherein generating a probability look-up table comprises
generating a probability value in the look-up table by statistically modelling a probability distribution function. - The method of claim 7, wherein generating a probability value comprises generating a probability value in the look-up table by statistically modelling a probability distribution function in response to one of:determining that a number of data points available to generate the probability value is less than a threshold number of data points; anddetermining that a number of components in an evidence vector is greater than a threshold.
- The method of 1, further comprising:carrying out ancillary analysis on a behavioral event associated with at least one of the events that has occurred; andstoring results of the ancillary analysis in the evidence vector.
- The method of claim 1, further comprising controlling the access of the client device (10) to the server (20) responsive to classifying the agent as illegitimate.
- An apparatus for classifying a client device (10) requesting content from a server (20), the apparatus comprising:a classification server computer (30); anda data storage device (32) operably connected to the classification server computer (30), the data storage device (32) storing instructions configured to direct the classification server computer (30) to:generate a probability look-.up table, comprising a plurality of abnormal probability values, each abnormal probability value corresponding to a sequence of events at a corresponding time;monitoring a plurality of different events associated with a request for content made by a client device (10) to a server (20);store the monitored events in an evidence vector, together with the time the events occurred;process the evidence vector to derive a sequence of events;identify an abnormal probability value from the probability look-up table by proceeding along a row associated with the sequence of events in the probability look-up table until a lowest time is found for which the abnormal probability value is greater than a predetermined level of confidence;set a classification time to a time corresponding to the identified abnormal probability value, the classification time representing a time at which a probability that an agent controlling the client device (10) is illegitimate exceeds a predetermined threshold; andclassify an agent controlling the client device (10) requesting content from the server (20) as illegitimate, when the time period represented by the difference between the classification time and the time of the first event of the request has elapsed.
- The apparatus of claim 11, wherein the data storage device (32) stores further instructions to:select a probability function associated with a first event in the evidence vector; anddetermine a classification time using the probability function, the classification time related to an abnormal probability value that is greater than or equal to a predetermined level of confidence.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
EP16001543.4A EP3104294B1 (en) | 2011-03-23 | 2012-03-23 | Fast device classification |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/069,977 US8799456B2 (en) | 2011-03-23 | 2011-03-23 | Fast device classification |
PCT/EP2012/055241 WO2012127042A1 (en) | 2011-03-23 | 2012-03-23 | Fast device classification |
Related Child Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP16001543.4A Division EP3104294B1 (en) | 2011-03-23 | 2012-03-23 | Fast device classification |
EP16001543.4A Division-Into EP3104294B1 (en) | 2011-03-23 | 2012-03-23 | Fast device classification |
Publications (2)
Publication Number | Publication Date |
---|---|
EP2689371A1 EP2689371A1 (en) | 2014-01-29 |
EP2689371B1 true EP2689371B1 (en) | 2016-09-14 |
Family
ID=45937255
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP16001543.4A Active EP3104294B1 (en) | 2011-03-23 | 2012-03-23 | Fast device classification |
EP12713007.8A Active EP2689371B1 (en) | 2011-03-23 | 2012-03-23 | Fast device classification |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP16001543.4A Active EP3104294B1 (en) | 2011-03-23 | 2012-03-23 | Fast device classification |
Country Status (3)
Country | Link |
---|---|
US (1) | US8799456B2 (en) |
EP (2) | EP3104294B1 (en) |
WO (1) | WO2012127042A1 (en) |
Families Citing this family (21)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9258279B1 (en) | 2012-04-27 | 2016-02-09 | Google Inc. | Bookmarking content for users associated with multiple devices |
US9514446B1 (en) | 2012-04-27 | 2016-12-06 | Google Inc. | Remarketing content to a user associated with multiple devices |
US8978158B2 (en) * | 2012-04-27 | 2015-03-10 | Google Inc. | Privacy management across multiple devices |
US9881301B2 (en) | 2012-04-27 | 2018-01-30 | Google Llc | Conversion tracking of a user across multiple devices |
US8966043B2 (en) * | 2012-04-27 | 2015-02-24 | Google Inc. | Frequency capping of content across multiple devices |
US20150156084A1 (en) * | 2012-12-02 | 2015-06-04 | Bot Or Not, Llc | System and method for reporting on automated browser agents |
US20140244209A1 (en) * | 2013-02-22 | 2014-08-28 | InvenSense, Incorporated | Systems and Methods for Activity Recognition Training |
CN104104652B (en) | 2013-04-03 | 2017-08-18 | 阿里巴巴集团控股有限公司 | A kind of man-machine recognition methods, network service cut-in method and corresponding equipment |
US20150101050A1 (en) * | 2013-10-07 | 2015-04-09 | Bank Of America Corporation | Detecting and measuring malware threats |
EP3058545B1 (en) * | 2013-10-18 | 2017-08-09 | White Ops, Inc. | System for detecting classes of automated browser agents |
US9727723B1 (en) * | 2014-06-18 | 2017-08-08 | EMC IP Holding Co. LLC | Recommendation system based approach in reducing false positives in anomaly detection |
US10460098B1 (en) | 2014-08-20 | 2019-10-29 | Google Llc | Linking devices using encrypted account identifiers |
US20170068988A1 (en) * | 2015-09-03 | 2017-03-09 | Sony Mobile Communications Inc. | Device integrity based assessment of indication of user action associated with an advertisement |
CN105354133B (en) * | 2015-09-28 | 2018-07-20 | 网易（杭州）网络有限公司 | A kind of processing method and processing device of games log data |
US9900330B1 (en) * | 2015-11-13 | 2018-02-20 | Veritas Technologies Llc | Systems and methods for identifying potentially risky data users within organizations |
US10652116B2 (en) | 2016-12-06 | 2020-05-12 | Forescout Technologies, Inc. | Device classification |
CA3057726C (en) | 2017-04-25 | 2021-11-02 | Junfeng Zhang | Rat catching box |
US11750528B2 (en) * | 2017-06-05 | 2023-09-05 | Avaya Inc. | Communication session addition via a host in deny new service mode |
US10929081B1 (en) * | 2017-06-06 | 2021-02-23 | United Services Automobile Association (Usaa) | Context management for multiple devices |
CN109598517B (en) * | 2017-09-29 | 2023-09-12 | 阿里巴巴集团控股有限公司 | Commodity clearance processing, object processing and category prediction method and device thereof |
US10700984B2 (en) | 2018-11-19 | 2020-06-30 | Cisco Technology, Inc. | Differentiating devices with similar network footprints using active techniques |
Family Cites Families (16)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20050060295A1 (en) | 2003-09-12 | 2005-03-17 | Sensory Networks, Inc. | Statistical classification of high-speed network data through content inspection |
KR100462828B1 (en) * | 2004-06-22 | 2004-12-30 | 엔에이치엔(주) | A method for determining validity of command and a system thereof |
US7594270B2 (en) * | 2004-12-29 | 2009-09-22 | Alert Logic, Inc. | Threat scoring system and method for intrusion detection security networks |
US8160924B2 (en) * | 2005-10-06 | 2012-04-17 | International Business Machines Corporation | Pay-per-click fraud protection |
US20070255821A1 (en) | 2006-05-01 | 2007-11-01 | Li Ge | Real-time click fraud detecting and blocking system |
US7657626B1 (en) * | 2006-09-19 | 2010-02-02 | Enquisite, Inc. | Click fraud detection |
WO2008076234A1 (en) | 2006-12-15 | 2008-06-26 | Fraudwall Technologies, Inc. | A network interaction monitoring appliance |
US8413247B2 (en) | 2007-03-14 | 2013-04-02 | Microsoft Corporation | Adaptive data collection for root-cause analysis and intrusion detection |
US8135615B2 (en) * | 2007-12-18 | 2012-03-13 | Amdocs Software Systems Limited | Systems and methods for detecting click fraud |
US8244752B2 (en) * | 2008-04-21 | 2012-08-14 | Microsoft Corporation | Classifying search query traffic |
US8639570B2 (en) | 2008-06-02 | 2014-01-28 | Microsoft Corporation | User advertisement click behavior modeling |
EP2164021A1 (en) | 2008-08-25 | 2010-03-17 | SEARCHTEQ GmbH | Method for recognising unwanted access and network server device |
US20100082400A1 (en) | 2008-09-29 | 2010-04-01 | Yahoo! Inc.. | Scoring clicks for click fraud prevention |
ES2496982T3 (en) | 2008-09-30 | 2014-09-22 | Orange | Entity characterization procedure at the beginning of variations in a network traffic |
US20100228852A1 (en) * | 2009-03-06 | 2010-09-09 | Steven Gemelos | Detection of Advertising Arbitrage and Click Fraud |
US20100235915A1 (en) * | 2009-03-12 | 2010-09-16 | Nasir Memon | Using host symptoms, host roles, and/or host reputation for detection of host infection |
-
2011
- 2011-03-23 US US13/069,977 patent/US8799456B2/en active Active
-
2012
- 2012-03-23 WO PCT/EP2012/055241 patent/WO2012127042A1/en active Application Filing
- 2012-03-23 EP EP16001543.4A patent/EP3104294B1/en active Active
- 2012-03-23 EP EP12713007.8A patent/EP2689371B1/en active Active
Non-Patent Citations (1)
Title |
---|
None * |
Also Published As
Publication number | Publication date |
---|---|
EP3104294A1 (en) | 2016-12-14 |
US20120246293A1 (en) | 2012-09-27 |
WO2012127042A1 (en) | 2012-09-27 |
EP3104294B1 (en) | 2020-05-06 |
US8799456B2 (en) | 2014-08-05 |
EP2689371A1 (en) | 2014-01-29 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
EP2689371B1 (en) | Fast device classification | |
US20220086184A1 (en) | Method and system for tracking fraudulent activity | |
US10771497B1 (en) | Using IP address data to detect malicious activities | |
Kharraz et al. | Surveylance: Automatically detecting online survey scams | |
US20190122258A1 (en) | Detection system for identifying abuse and fraud using artificial intelligence across a peer-to-peer distributed content or payment networks | |
US11722520B2 (en) | System and method for detecting phishing events | |
Stone-Gross et al. | Understanding fraudulent activities in online ad exchanges | |
EP2673708B1 (en) | DISTINGUISH VALID USERS FROM BOTS, OCRs AND THIRD PARTY SOLVERS WHEN PRESENTING CAPTCHA | |
US8321934B1 (en) | Anti-phishing early warning system based on end user data submission statistics | |
US20210218761A1 (en) | Method and apparatus for preventing advertisement-related fraud, electronic device, and storage medium | |
Zhu et al. | Fraud prevention in online digital advertising | |
CA2936380A1 (en) | System and method for reporting on automated browser agents | |
US20220067780A1 (en) | Browser Proof Of Work | |
CN113221163B (en) | Model training method and system | |
US20210105302A1 (en) | Systems And Methods For Determining User Intent At A Website And Responding To The User Intent | |
US20240037176A1 (en) | Using embedded elements for online content verification | |
Mouawi et al. | Crowdsourcing for click fraud detection | |
Gabryel et al. | Decision making support system for managing advertisers by ad fraud detection | |
CN110035053A (en) | For detecting user-content provider couple method and system of fraudulent | |
Tang et al. | Towards Trustworthy AI-Empowered Real-Time Bidding for Online Advertisement Auctioning | |
Oppenlaender et al. | Towards a Requester-centered Study on the Use of ‘Bots’ for Completing Tasks | |
Boshmaf | Security analysis of malicious socialbots on the web | |
Iliou | Machine Learning Based Detection and Evasion Techniques for Advanced Web Bots. | |
Zhu et al. | Ad Fraud Detection Tools and Systems | |
CN116502202A (en) | Method and device for judging consistency of user permission model based on NLP technology |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20131004 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
DAX | Request for extension of the european patent (deleted) | ||
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE INC. |
|
17Q | First examination report despatched |
Effective date: 20150914 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R079Ref document number: 602012022806Country of ref document: DEFree format text: PREVIOUS MAIN CLASS: G06F0021000000Ipc: G06F0021550000 |
|
GRAP | Despatch of communication of intention to grant a patent |
Free format text: ORIGINAL CODE: EPIDOSNIGR1 |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: H04L 29/06 20060101ALI20160202BHEPIpc: G06Q 30/02 20120101ALI20160202BHEPIpc: G06F 21/55 20130101AFI20160202BHEP |
|
INTG | Intention to grant announced |
Effective date: 20160216 |
|
GRAS | Grant fee paid |
Free format text: ORIGINAL CODE: EPIDOSNIGR3 |
|
GRAJ | Information related to disapproval of communication of intention to grant by the applicant or resumption of examination proceedings by the epo deleted |
Free format text: ORIGINAL CODE: EPIDOSDIGR1 |
|
GRAL | Information related to payment of fee for publishing/printing deleted |
Free format text: ORIGINAL CODE: EPIDOSDIGR3 |
|
GRAR | Information related to intention to grant a patent recorded |
Free format text: ORIGINAL CODE: EPIDOSNIGR71 |
|
GRAA | (expected) grant |
Free format text: ORIGINAL CODE: 0009210 |
|
INTC | Intention to grant announced (deleted) | ||
INTG | Intention to grant announced |
Effective date: 20160729 |
|
AK | Designated contracting states |
Kind code of ref document: B1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
REG | Reference to a national code |
Ref country code: GBRef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: EP |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: REFRef document number: 829717Country of ref document: ATKind code of ref document: TEffective date: 20161015 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R096Ref document number: 602012022806Country of ref document: DE |
|
REG | Reference to a national code |
Ref country code: NLRef legal event code: FP |
|
REG | Reference to a national code |
Ref country code: LTRef legal event code: MG4D |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160914Ref country code: RSFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160914Ref country code: HRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160914Ref country code: NOFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20161214Ref country code: FIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160914 |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: MK05Ref document number: 829717Country of ref document: ATKind code of ref document: TEffective date: 20160914 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160914Ref country code: GRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20161215Ref country code: LVFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160914 |
|
REG | Reference to a national code |
Ref country code: FRRef legal event code: PLFPYear of fee payment: 6 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: EEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160914Ref country code: ROFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160914 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: PTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20170116Ref country code: ESFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160914Ref country code: ATFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160914Ref country code: CZFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160914Ref country code: ISFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20170114Ref country code: SKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160914Ref country code: BEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160914Ref country code: SMFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160914Ref country code: BGFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20161214Ref country code: PLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160914 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R097Ref document number: 602012022806Country of ref document: DE |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ITFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160914 |
|
PLBE | No opposition filed within time limit |
Free format text: ORIGINAL CODE: 0009261 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: NO OPPOSITION FILED WITHIN TIME LIMIT |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: DKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160914 |
|
26N | No opposition filed |
Effective date: 20170615 |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: PL |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MCFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160914Ref country code: SIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160914 |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: MM4A |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LUFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20170323 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R082Ref document number: 602012022806Country of ref document: DERepresentative=s name: WUESTHOFF & WUESTHOFF, PATENTANWAELTE PARTG MB, DERef country code: DERef legal event code: R081Ref document number: 602012022806Country of ref document: DEOwner name: GOOGLE LLC (N.D.GES.D. STAATES DELAWARE), MOUN, USFree format text: FORMER OWNER: GOOGLE, INC., MOUNTAIN VIEW, CALIF., US |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: IEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20170323Ref country code: LIFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20170331Ref country code: CHFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20170331 |
|
REG | Reference to a national code |
Ref country code: FRRef legal event code: CDOwner name: GOOGLE INC., USEffective date: 20180213Ref country code: FRRef legal event code: CJEffective date: 20180213 |
|
REG | Reference to a national code |
Ref country code: FRRef legal event code: PLFPYear of fee payment: 7 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MTFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20170323 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ALFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160914 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: HUFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMIT; INVALID AB INITIOEffective date: 20120323 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: CYFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20160914 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160914 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: TRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20160914 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: FRPayment date: 20230327Year of fee payment: 12 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230505 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: NLPayment date: 20240326Year of fee payment: 13 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: DEPayment date: 20240327Year of fee payment: 13Ref country code: GBPayment date: 20240327Year of fee payment: 13 |
US9390141B2 - Systems and methods for determining application installation likelihood based on probabilistic combination of subordinate methods - Google Patents
Systems and methods for determining application installation likelihood based on probabilistic combination of subordinate methods Download PDFInfo
- Publication number
- US9390141B2 US9390141B2 US14/040,782 US201314040782A US9390141B2 US 9390141 B2 US9390141 B2 US 9390141B2 US 201314040782 A US201314040782 A US 201314040782A US 9390141 B2 US9390141 B2 US 9390141B2
- Authority
- US
- United States
- Prior art keywords
- applications
- independent
- user
- scored list
- composite
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G06F17/3053—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2457—Query processing with adaptation to user needs
- G06F16/24578—Query processing with adaptation to user needs using ranking
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F8/00—Arrangements for software engineering
- G06F8/60—Software deployment
- G06F8/61—Installation
Definitions
- Cloud computing services provide users with the ability to store, access, edit, and share electronic files using any electronic device capable of connecting to the cloud computing service over a remote network, such as the Internet.
- the files are stored on the cloud computing service rather than the user's electronic devices.
- the cloud computing service provides a user interface, for example through a web browser, for users to access and view the files.
- the files stored on cloud computing services may include word processing documents, spreadsheet files, presentation files, picture files, audio files, video files, and a number of other open or proprietary file formats.
- a cloud computing service may be able to open many of the files that it stores through its user interface.
- cloud computing services may not be configured to open, display, or edit certain types of files, especially for some proprietary or less common file types.
- Cloud computing services may instead offer third-party applications to the user, where the third-party applications may be used to open certain files stored on the cloud computing service, as well as perform other functions.
- Third-party developers work with the cloud computing service to make the applications available to the user. Users may select and install an application to use in conjunction with, or separately from the cloud computing service.
- Cloud computing services may offer a large number of applications to users. Users may be overwhelmed with choices and may not be aware of certain applications that they may find useful. In addition, users may find it difficult to select between several similar applications, and also may not have the time to install many applications and test each one to find applications that they like.
- the systems and methods described herein provide ways to recommend applications offered by a cloud computing service to a user, where the recommendation is based on a composite score generated for each application provided by the cloud computing service.
- the composite score is built from a number of independent scorers which assign a score to each application based on a number of criteria. For example, one scorer may base the score on the application installation behavior of users of the cloud computing service. Another scorer may base the score on the application usage behavior of the users.
- the composite scorer receives input data that each independent scorer uses to calculate its score and passes the input data to each independent scorer. Each independent scorer has a weighting value.
- the composite score for an application is a function of the score for that application from each independent scorer, weighted by the weighting value of that scorer.
- the composite scored list of application is used to recommend applications to the user.
- One aspect described herein discloses a method for providing a scored list of applications for use in recommending applications to a user, which includes receiving at a cloud computing service a request to provide a composite scored list of applications for a user, where the cloud computing service provides a set of available applications to each user of the cloud computing service, and receiving input data for determining the composite scored list of applications.
- the method further includes initializing a plurality of independent scorers, where each independent scorer takes as input a portion of the input data and outputs a scored list of applications for the set of available applications, and normalizing the scored list of applications outputted by each independent scorer.
- the method further includes constructing the composite scored list of applications, where the composite scored list of applications is a function of the normalized scored list of applications outputted by each independent scorer and a weighting value assigned to each independent scorer, and outputting the composite scored list of applications.
- an apparatus for providing recommendations for applications to a user including a server configured to communicate with the plurality of client computers and receive from a first client computer in the plurality of client computers a request to provide a composite scored list of applications for a user, where the server provides a set of available applications to each user of the server.
- the server is further configured to receive input data for determining the composite scored list of applications, and initialize a plurality of independent scorers, where each independent scorer takes as input a portion of the input data and outputs a scored list of applications for the set of available applications.
- the server is further configured to normalize the scored list of applications outputted by each independent scorer, construct the composite scored list of applications, where the composite scored list of applications is a function of the normalized scored list of applications outputted by each independent scorer and a weighting value assigned to each independent scorer, and output the composite scored list of applications.
- Non-transitory computer readable medium storing computer-executable instructions, which, when executed by a processor, cause the processor to carry out a method for providing a scored list of applications for use in recommending applications to a user.
- the non-transitory computer readable medium includes instructions to receive at a cloud computing service a request to provide a composite scored list of applications for a user, where the cloud computing service provides a set of available applications to each user of the cloud computing service, and instructions to receive input data for determining the composite scored list of applications.
- the non-transitory computer readable medium further includes instructions to initialize a plurality of independent scorers, where each independent scorer takes as input a portion of the input data and outputs a scored list of applications for the set of available applications, and instructions to normalize the scored list of applications outputted by each independent scorer.
- the non-transitory computer readable medium further includes instructions to construct the composite scored list of applications, where the composite scored list of applications is a function of the normalized scored list of applications outputted by each independent scorer and a weighting value assigned to each independent scorer, and instructions to output the composite scored list of applications.
- Another aspect described herein discloses a system for providing recommendations for applications to a user, the system including a plurality of client computers and a server.
- the server is configured to communicate with the plurality of client computers and receive from a first client computer in the plurality of client computers a request to provide a composite scored list of applications for a user, where the server provides a set of available applications to each user of the server.
- the server is further configured to receive input data for determining the composite scored list of applications, and initialize a plurality of independent scorers, where each independent scorer takes as input a portion of the input data and outputs a scored list of applications for the set of available applications.
- the server is further configured to normalize the scored list of applications outputted by each independent scorer, construct the composite scored list of applications, where the composite scored list of applications is a function of the normalized scored list of applications outputted by each independent scorer and a weighting value assigned to each independent scorer, and output the composite scored list of applications.
- FIG. 1 shows a number of client computers in communication with a cloud computing service in accordance with an implementation as described herein;
- FIG. 2 shows the components of a cloud computing service in communication with a client computer in accordance with an implementation as described herein;
- FIG. 3 shows an example of a plurality of scored list of applications outputted by independent scorers in accordance with an implementation as described herein;
- FIG. 4 shows an example of a plurality of normalized scored list of applications in accordance with an implementation as described herein;
- FIG. 5 shows an example of a scorer weight table in accordance with an implementation as described herein;
- FIG. 6 shows an example of a composite scored list of applications in accordance with an implementation as described herein;
- FIG. 7 shows a scorer unit for generating a scored list of applications in accordance with an implementation as described herein.
- FIG. 8 shows a method for providing recommendations for applications to a user in accordance with an implementation as described herein.
- a server, service, or system as used in this description may be a single computing device or multiple computing devices working collectively and in which the storage of data and the execution of functions are spread out among the various computing devices.
- aspects of the systems and methods described herein relate to providing a way to recommend applications to a user, where the recommendation is based on a composite score generated for each application provided by the cloud computing service.
- the composite score is built from a number of independent scorers which assign a score to each application based on a number of criteria. For example, one scorer may base the score on the application installation behavior of users of the cloud computing service. Another scorer may base the score on the application usage behavior of the users.
- the composite scorer receives input data that each independent scorer uses to calculate its score and passes the input data to each independent scorer. Each independent scorer has a weighting value.
- the composite score for an application is a function of the score for that application from each independent scorer, weighted by the weighting value of that scorer.
- the composite scored list of application is used to recommend applications to the user.
- FIG. 1 shows a network system 100 that includes cloud computing service 102 and a number of client computers 104 a through 104 d .
- Cloud computing service 102 may include one or more servers that collectively provide cloud computing services for a number of client computers.
- Cloud computing service 102 stores a number of files accessible by client computers 104 a - 104 d , such as files 106 .
- Files 106 may include word processing documents, spreadsheets, presentations, images, audio files, video files, or any other files of various open or proprietary file types. Users may create, edit, copy, share, and delete files stored on cloud computing service 102 .
- Client computers 104 a - 104 d may include desktop computers, laptop computers, tablets, smart phones, mobile electronic devices, or any other device that may connect to cloud computing service 102 to view files 106 .
- System 100 may include many additional client computers not pictured in FIG. 1 .
- the network connection between the client computers 104 a - 104 d and cloud computing service 102 in network system 100 may be facilitated through a local area network, wide area network, Ethernet, fiber optic network, or any other wired or wireless connection.
- System 200 in FIG. 2 includes a cloud computing service 202 in communication with a client computer 216 .
- Cloud computing service 202 includes a central processing unit (CPU) 204 , read-only memory (ROM) 206 , random access memory (RAM) 208 , communications unit 210 , data store 212 , and bus 214 .
- Cloud computing service 202 may have additional components that are not illustrated in FIG. 2 .
- Bus 214 allows the various components of cloud computing service 202 to communicate with each other.
- Communications unit 210 allows cloud computing service 202 to communicate with other devices, such as client computer 216 and other client computers.
- Data store 212 is used to store files accessible by a user on client computer 216 . Users log on to the cloud computing service using a username and password, and cloud computing service 202 provides a user interface for the display of files through the web browsers executing on the client computers. Data store 212 may also store a number of applications that are made available to users for installation.
- Data store 212 may also store metadata regarding files and users, and may store tables, matrices, files and other data structures based on the file and user metadata.
- the data structures may be used by cloud computing service 202 as input data to create scored list of applications for use in making application recommendations to users.
- the data structures may be updated or recalculated on a periodic basis by a data process scheduler executed by CPU 204 .
- File and user metadata may be changed by recent user actions, so data structures based on the metadata are recalculated to account for those recent actions.
- CPU 204 may load some data structures to RAM 208 , e.g. a data cache, while CPU 204 processes requests to provide a scored list of applications.
- the data cache allows CPU 204 to reference recently used data and is periodically refreshed.
- Client computer 216 includes a CPU 224 , ROM 220 , RAM 222 , input/output interface 218 , and bus 226 .
- Client computer 216 may have additional components that are not illustrated in FIG. 2 .
- Bus 226 allows the various components of client computer 216 to communicate with each other.
- Input/output interface 218 allows client computer 216 to communicate with other devices, such as cloud computing service 202 .
- Input/output interface 218 also includes devices for taking in user inputs and displaying outputs to a user, such as a keyboard, mouse, and display screen.
- CPU 224 executes various programs stored in memory on client computer 216 , such as a web browser.
- Web browsers are used, among other things, to display a user interface provided by cloud computing service 202 for viewing and editing files. Web browsers receive web page documents encoded in HTML, CSS, or other web-compatible languages and interpret the language to properly display the web page.
- Data store 212 for storing files, applications, and data structures on cloud computing service 202 , a web browser executing on client computer 216 , and other data structures and software programs in system 200 may be implemented using non-transitory computer-readable media.
- suitable non-transitory computer-readable media include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and read-only, once-writable, or rewriteable optical disks (such as, e.g., CDROM, CDR, CD+R, CDRW, CD+RW, DVDROM, DVDR, DVD+R, DVDRW, and DVD+RW).
- semiconductor memory devices e.g., EPROM, EEPROM, and flash memory devices
- magnetic disks e.g., internal hard disks or removable disks
- a cloud computing service has a large base of users and available applications, and is capable of collecting aggregate data concerning the installation and usage of applications by users. This data are statistically significant and may be harnessed to generate application recommendations for a particular user.
- recommendations may be based on the most frequently downloaded applications by all users, or the most frequently downloaded applications given a set of applications that the user has currently installed.
- recommendations for applications to open a target file may be based on which applications have most frequently been used to open the file type of the target file.
- recommendations may be based on which applications can open files that are of importance to a user.
- users that have similar application usage characteristics to the target user may be identified, and applications that similar users frequently use may be recommended to the target user.
- Recommendations may also be based on a combination of one or more of the above-identified methods as well as other methods for recommending applications.
- a cloud computing service may have multiple independent scorer units, each of which implement one of the recommendation methods described above or other known recommendation methods.
- the independent scorers each output a scored list of applications from the set of available applications provided by the cloud computing service.
- Table 300 in FIG. 3 shows an example of the output of three independent scorers evaluating five applications.
- the score of an application is a measure of the likely relevance of the application to the user. A higher score means that the application should be more strongly recommended to the user according to the scoring methodology used by the independent scorer.
- independent Scorer 1 would recommend App C the most
- independent Scorer 2 would recommend App E the most
- independent Scorer 3 would recommend App E the most.
- Each scorer takes as input various data stored by the cloud computing service in order to generate the score.
- This data may come from file metadata, application metadata, information about users of the cloud computing service, or special data structures derived from the file metadata, application metadata, and user information.
- an application configuration database accessible by the cloud computing service stores the file types that each application provided by the cloud computing service can open. This information may be used by one or more independent scorers to calculate scores.
- the file metadata may contain the file type of the file and how many times each user has used each application to open the file. This information may be used by one or more independent scorers to calculate scores. Specialized data structures may be created from this metadata as well.
- the cloud computing service may use the file metadata to create an application signature for each user which describes the application usage behavior for each user. The application signature may be used by one or more independent scorers to calculate scores.
- the client computing service may rely solely on a particular independent scorer to recommend applications to a user. However, in some cases more accurate recommendations may be made by combining the results of multiple independent scorers in order to make recommendations based on a variety of data.
- a composite scored list of applications may be created from the scored list of applications outputted by each independent scorer. However, as seen from table 300 , the scores from each independent scorer may have different scales. For example, the non-zero scores for Scorer 1 range from 38 to 1,423 while the non-zero scores for Scorer 2 range from 0.1 to 0.4. If a composite score is calculated by simply adding the scores from each scorer, Scorer 1 would have a disproportionally high amount of influence over the composite score because of its higher numerical range.
- a way to mitigate inequitable scoring scales is to normalize the scores for each scored list of applications outputted by the independent scorers. Normalization forces the scores to be on the same scale.
- One way to normalize a scored list of applications is to divide each score by the sum of the scores. The result is normalized scores ranging between 0 and 1, where the sum of the normalized scores is also 1.
- Another way to normalize the scored list is to divide each score by the highest score in the list, which results in scores that range between 0 and 1 but do not sum to 1. Normalization still preserves the relative difference between the scores.
- Table 400 in FIG. 4 shows the normalized version of the scored list of applications found in FIG. 3 . All the scored lists of applications range from 0 to 1. The scores from different independent scorers may now be compared directly to each other.
- a composite score for an application may simply be the sum of the normalized scores of the application from each independent scorer.
- the cloud computing service may want to weight certain independent scorers more strongly than other independent scorers, i.e. have certain independent scorers influence the composite score to a greater degree.
- the cloud computing service may assign a weight to each scorer.
- FIG. 5 shows a scorer weight table 500 that is stored by the cloud computing service. Scorer weight table 500 assigns a weighting value to each scorer.
- the weighting values may be normalized such that the sum of the weighting values adds to 1.
- the weighting values may be subject to a feedback loop from the cloud computing service. Information about which applications a user selects from the applications recommended to the user may be used to adjust or optimize the weighting values. This feedback loop is discussed in more detail further herein.
- FIG. 6 shows a composite scored list of applications 600 derived from the normalized scored list of applications in FIG. 4 and the scorer weighting table in FIG. 5 .
- Composite scored list 600 may be a table with the application IDs of each application provided by the cloud computing service and its corresponding composite score.
- N is the number of independent scorers
- IS n is the normalized score of the application from the n-th independent scorer
- W n is the weighting value assigned to the n-th independent scorer.
- the composite scored list of applications may be used by the cloud computing service to recommend applications to a user.
- the composite scored list of applications may be unsorted or may be sorted based on composite score, application ID, or some other sorting basis.
- the cloud computing service has a composite scorer unit that creates a composite scored list of applications from the output of one or more independent scorers. This composite list may be used by the cloud computing service to recommend one or more applications to a user.
- FIG. 7 shows an example flow chart 700 of a composite scorer unit operated by the cloud computing service. The process flow for the scorer unit illustrated in FIG. 7 may be summarized below:
- the composite scorer unit is part of the cloud computing service and executes the above process flow each time a request is received to score applications.
- the process flow above is an example and additional tasks may be done by the composite scorer unit.
- the composite scorer unit may sort the composite scored list of applications before outputting it.
- the composite scorer unit is initiated when an application scoring request is received, shown at 702 .
- the scoring request may be triggered by a user action on the cloud computing user interface.
- the scoring request may be initiated when a user logs into the cloud computing service or when the user navigates to an application selection or application browsing screen.
- the scoring request may also be initiated when a user selects a target file and seeks an application to open the target file, such as with an “Open With” or “Preview” command.
- the composite scorer unit also receives input data 704 along with application scoring request 702 .
- Each independent scorer may use a portion of input data 704 to generate scores for each application.
- Input data 704 may include file metadata, application metadata from an application configuration database, data about users, and specially created data structures based on the file, application, and user data.
- the composite scorer unit initiates a composite scoring routine, shown at 706 .
- the composite scoring routine initiates one or more independent scorers, shown in FIG. 7 as scorers 708 a through 708 c .
- Composite scoring routine 706 passes portions of input data 704 to each independent scorer as necessary for the independent scorer to calculate its score.
- input data 704 may include the file type of each file accessible to the user.
- Independent scorer 708 a may require the file types of files accessible by the user to generate scores, and the composite scoring routine 706 passes this information to independent scorer 708 a . There may be a number of independent scorers available and composite scoring routine 706 may initiate only a subset of them. The independent scorers that composite scoring routine 706 initiates may be determined from the application scoring request, or may be determined by which data is received in data input 704 , or may be set by default.
- each independent scorer is a scored list of applications, which are passed on combiner module 710 .
- Combiner module 710 combines the individual scored lists into one composite scored list of applications.
- Combiner module 710 normalizes each scored list before combining them, and may also apply weighting values to each list based on scorer weight table 712 .
- the composite scored list of applications is then a table of application IDs and the composite score for each application.
- the scored list of applications is the output of the composite scorer unit, shown at 714 .
- the scored list of applications may be sorted by score, by application ID, or by any other sorting method, or may be unsorted.
- the cloud computing service uses the outputted list to generate application recommendations for the user.
- the composite scorer unit may also have a scorer weight feedback loop 716 .
- Scorer weight feedback loop 716 stores any actions taken by the user given a set of recommended applications provided by the composite scorer unit. For example, a result score may be assigned to a user's choice of recommended applications. If the user selects the top ranked recommended application, the result score may be 1. If the user selects the third ranked recommended application, the result score may be 3.
- the result scores of every user of the cloud computing service over a period of time may be averaged together to form a composite result score. A lower score indicates that users are selecting applications that are highly recommended by the cloud computing service, while a higher score indicates that users are selecting applications that are not highly recommended. Information regarding whether users disregard the application recommendations may also be stored.
- the composite result score calculated by scorer weight feedback loop 716 may be used to change the weighting values of each scorer in scorer weight table 712 .
- the weighting value of each scorer may be perturbed randomly or in a principled search scheme and the composite result score for different weighting combinations are compared. Weighting combinations with lower composite result scores indicate a more effective balance of the influence of each independent scorer on the composite score. This allows the composite scorer unit to optimize the weighting values so that the composite scored list of applications more closely aligns with users' actual preferred applications. Other methods of incorporating feedback loops to the scorer weights may also be used by composite scorer unit 700 .
- Method 800 illustrated in FIG. 8 shows a method for providing a scored list of applications for use in recommending applications to a user, which includes receiving at a cloud computing service a request to provide a composite scored list of applications for a user, where the cloud computing service provides a set of available applications to each user of the cloud computing service, and receiving input data for determining the composite scored list of applications.
- the method further includes initializing a plurality of independent scorers, where each independent scorer takes as input a portion of the input data and outputs a scored list of applications for the set of available applications, and normalizing the scored list of applications outputted by each independent scorer.
- the method further includes constructing the composite scored list of applications, where the composite scored list of applications is a function of the normalized scored list of applications outputted by each independent scorer and a weighting value assigned to each independent scorer, and outputting the composite scored list of applications.
- Method 800 may be performed on one or more servers that provide a cloud computing service, such as cloud computing service 102 in FIG. 1 or cloud computing service 202 in FIG. 2 .
- a composite scorer unit within the cloud computing service such as shown in FIG. 7 , may perform all or a portion of method 800 .
- Method 800 begins when the cloud computing service receives a request to provide a composite scored list of applications to a user, shown at 802 .
- the composite scored list of applications may be used to generate a set of recommended applications to show the user.
- the request may be triggered by certain user actions on the user interface provided by the cloud computing service. For example, the request may be triggered when the user logs into the cloud computing service on the user's client computer, or when the user navigates to an application selection or application browsing page on the user interface.
- the scoring request may also be initiated when a user selects a target file and seeks an application to open the target file, such as with an “Open With” or “Preview” command.
- the cloud computing service also receives input data along with the request to provide a composite scored list of applications, shown at 804 .
- the input data is used to determine the composite scored list of applications.
- the input data may include file metadata for each file stored on the cloud computing service, application metadata for each application in the set of available applications, information about each user of the cloud computing service, and one or more data structures based on data about the files, applications, and users.
- each independent scorer takes as input a portion of the input data.
- one independent scorer may take as input file metadata for each file stored on the cloud computing service while another independent score takes as input information about each user of the cloud computing service and application metadata for each application in the set of available applications.
- Each independent scorer outputs a scored list of applications, where the score is calculated using a variety of mechanisms. For example, one independent scorer outputs a scored list of applications based on application installation characteristics of each user of the cloud computing service. Another independent scorer outputs a scored list of applications based on application usage characteristics of each user of the cloud computing service. Yet another independent scorer outputs a scored list of applications based on the file types of files stored on the cloud computing service and accessible to the user. Yet another independent scorer outputs a scored list of applications based on the importance of files accessible to the user.
- the cloud computing service normalizes each scored list, shown at 808 .
- the scores of each scored list may be normalized to range from 0 to 1 by dividing each score by the sum of the scores in the list, or by dividing each score by the highest score in the list. Normalization of the scores allows the scored list of applications to be combined directly without any one independent scorer having inordinate and unintentional influence over the composite scored list of applications.
- the normalized scored lists of applications are then compiled into a composite scored list of applications, shown at 810 .
- the cloud computing service stores a scorer weight table that associates each independent scorer with a weighting value.
- the weighting value balances the relative influence each independent scorer has over the composite scored list of applications.
- the weighting values may be adjusted using a feedback loop.
- the cloud computing service recommends applications to its users, and the feedback loop is a function of the applications that the users selected from the recommended applications. Each time a user selects an application from a set of recommended applications provided by the cloud computing service, a result score is assigned to the choice. The result scores of many user choices are averaged into a composite result score.
- the cloud computing service may vary the weighting combinations and compare the composite result score of each to determine which weighting combinations are more effective at recommending applications that users actually select.
- the composite scored list of applications may be unsorted or sorted by score, application ID, or some other sorting basis.
- the composite scored list of applications is then outputted, shown at 812 .
- the outputted list is used by the cloud computing service to recommend one or more applications to the user. In this manner, a cloud computing service provides a composite scored list of applications for use in recommending applications to a user.
Abstract
Description
score=(IS 1 *W 1 +IS 2 *W 2 + . . . +IS N *W N)/(W 1 +W 2 + . . . +W N)
where N is the number of independent scorers, ISn is the normalized score of the application from the n-th independent scorer, and Wn is the weighting value assigned to the n-th independent scorer. However, there may be other methods to calculate a composite score from the independent scorers and the weighting values. If every scored list of applications has been normalized and the weighting values have also been normalized, the composite scored list is also normalized so that the sum of all the composite scores is 1. The composite scored list of applications may be used by the cloud computing service to recommend applications to a user. The composite scored list of applications may be unsorted or may be sorted based on composite score, application ID, or some other sorting basis.
-
- 1. Receive request to score applications and a set of input data.
- 2. Initiate one or more independent scorers to calculate a scored list of applications, and send each independent scorer any required data from the set of input data.
- 3. Normalize the outputted scored list of applications from each independent scorer.
- 4. Construct the composite scored list of applications from the normalized scored lists of applications and the scorer weight table.
- 5. Output scored list of applications.
- 6. (Optional) Use a feedback loop to adjust the scorer weight table based on the user choices.
score=(IS 1 *W 1 +IS 2 *W 2 + . . . +IS N *W N)/(W 1 +W 2 + . . . +W N)
where N is the number of independent scorers, ISn is the normalized score of the application from the n-th independent scorer, and Wn is the weighting value assigned to the n-th independent scorer. The composite scored list of applications is then a table of application IDs and the composite score for each application. The scored list of applications is the output of the composite scorer unit, shown at 714. The scored list of applications may be sorted by score, by application ID, or by any other sorting method, or may be unsorted. The cloud computing service uses the outputted list to generate application recommendations for the user.
score=(IS 1 *W 1 +IS 2 *W 2 + . . . +IS N *W N)/(W 1 +W 2 + . . . +W N)
where N is the number of independent scorers, ISn is the normalized score of the application from the n-th independent scorer, and Wn is the weighting value assigned to the n-th independent scorer.
Claims (32)
(IS 1 *W 1 +IS 2 *W 2 + . . . +IS N *W N)/(W 1 +W 2 + . . . +W N)
(IS 1 *W 1 +IS 2 *W 2 + . . . +IS N *W N)/(W 1 +W 2 + . . . +W N)
(IS 1 *W 1 +IS 2 *W 2 + . . . +IS N *W N)/(W 1 +W 2 + . . . +W N)
(IS 1 *W 1 +IS 2 *W 2 + . . . +IS N *W N)/(W 1 +W 2 + . . . +W N)
Priority Applications (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/040,782 US9390141B2 (en) | 2013-09-30 | 2013-09-30 | Systems and methods for determining application installation likelihood based on probabilistic combination of subordinate methods |
PCT/US2014/053012 WO2015047640A1 (en) | 2013-09-30 | 2014-08-27 | System and method for providing recommendations for applications to a user |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/040,782 US9390141B2 (en) | 2013-09-30 | 2013-09-30 | Systems and methods for determining application installation likelihood based on probabilistic combination of subordinate methods |
Publications (2)
Publication Number | Publication Date |
---|---|
US20150095321A1 US20150095321A1 (en) | 2015-04-02 |
US9390141B2 true US9390141B2 (en) | 2016-07-12 |
Family
ID=51541315
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/040,782 Expired - Fee Related US9390141B2 (en) | 2013-09-30 | 2013-09-30 | Systems and methods for determining application installation likelihood based on probabilistic combination of subordinate methods |
Country Status (2)
Country | Link |
---|---|
US (1) | US9390141B2 (en) |
WO (1) | WO2015047640A1 (en) |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9536199B1 (en) * | 2014-06-09 | 2017-01-03 | Google Inc. | Recommendations based on device usage |
Families Citing this family (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10922094B2 (en) * | 2015-06-05 | 2021-02-16 | Apple Inc. | Systems and methods for proactively providing recommendations to a user of a computing device |
WO2017007488A1 (en) * | 2015-07-09 | 2017-01-12 | Hewlett Packard Enterprise Development Lp | Staged application rollout |
US10540158B2 (en) * | 2016-07-18 | 2020-01-21 | Google Llc | Post-install application interaction |
US10824412B2 (en) * | 2018-04-27 | 2020-11-03 | Nutanix, Inc. | Method and apparatus for data driven and cluster specific version/update control |
US10579370B2 (en) * | 2018-08-03 | 2020-03-03 | EMC IP Company LLC | Method to disintegrate a monolith service to microservices |
US11271882B2 (en) * | 2019-12-02 | 2022-03-08 | Sap Se | Message normalization engine for multi-cloud messaging systems |
US20230418624A1 (en) * | 2022-06-24 | 2023-12-28 | Microsoft Technology Licensing, Llc | File opening optimization |
Citations (36)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
KR20030016494A (en) | 2001-08-20 | 2003-03-03 | 이상기 | Goods recommendation system and method using artificial intelligence reasoning engine, a storage medea |
US20060136389A1 (en) | 2004-12-22 | 2006-06-22 | Cover Clay H | System and method for invocation of streaming application |
US20070060099A1 (en) | 2005-09-14 | 2007-03-15 | Jorey Ramer | Managing sponsored content based on usage history |
US20090006398A1 (en) * | 2007-06-29 | 2009-01-01 | Shing Yan Lam | Recommendation system with multiple integrated recommenders |
US20090106314A1 (en) | 2007-10-22 | 2009-04-23 | Samsung Electronics Co., Ltd. | Situation-aware recommendation using correlation |
US20090259998A1 (en) | 2008-04-11 | 2009-10-15 | International Business Machines Corporation | Method, system and computer program for identifying and reusing component aggregates |
US7617519B2 (en) | 2004-03-18 | 2009-11-10 | Microsoft Corporation | System and method for intelligent recommendation with experts for user trust decisions |
US20100042608A1 (en) * | 2008-08-12 | 2010-02-18 | Kane Jr Francis J | System for obtaining recommendations from multiple recommenders |
US20100094878A1 (en) | 2005-09-14 | 2010-04-15 | Adam Soroca | Contextual Targeting of Content Using a Monetization Platform |
US20100250337A1 (en) | 2009-03-31 | 2010-09-30 | Farhang Kassaei | Application recommendation engine |
US20110153853A1 (en) | 2009-12-18 | 2011-06-23 | Microsoft Corporation | Remote application presentation over a public network connection |
US20110307354A1 (en) * | 2010-06-09 | 2011-12-15 | Bilgehan Erman | Method and apparatus for recommending applications to mobile users |
US20120072283A1 (en) * | 2010-09-16 | 2012-03-22 | Mobilmeme, Inc. | Mobile application recommendation system and method |
US20120084292A1 (en) | 2010-09-15 | 2012-04-05 | Jisheng Liang | Recommending mobile device activities |
US20120096435A1 (en) | 2010-10-18 | 2012-04-19 | Microsoft Corporation | Capability-based application recommendation |
US20120179973A1 (en) * | 2010-11-01 | 2012-07-12 | International Business Machines Corporation | Application Recommendation |
US20120215684A1 (en) | 2010-09-28 | 2012-08-23 | Adam Kidron | Usage Payment Collection And Apportionment Platform Apparatuses, Methods And Systems |
US20120303477A1 (en) | 2011-05-27 | 2012-11-29 | Yuval Ben-Itzhak | Systems and Methods for Recommending Software Applications |
US20130086553A1 (en) | 2011-09-29 | 2013-04-04 | Mark Grechanik | Systems and methods for finding project-related information by clustering applications into related concept categories |
US20130103758A1 (en) | 2011-10-19 | 2013-04-25 | c/o Facebook, Inc. | Filtering and ranking recommended users on a social networking system |
WO2013062546A1 (en) | 2011-10-27 | 2013-05-02 | Hewlett-Packard Development Company, L.P. | Application store interface for remote management of client devices |
US20130132896A1 (en) | 2011-11-22 | 2013-05-23 | Samsung Electronics Co., Ltd. | System and method of recommending applications based on context information |
US8452797B1 (en) * | 2011-03-09 | 2013-05-28 | Amazon Technologies, Inc. | Personalized recommendations based on item usage |
US20130138674A1 (en) | 2011-11-30 | 2013-05-30 | Samsung Electronics Co., Ltd. | System and method for recommending application by using keyword |
US8468164B1 (en) | 2011-03-09 | 2013-06-18 | Amazon Technologies, Inc. | Personalized recommendations based on related users |
US20130166357A1 (en) | 2011-12-21 | 2013-06-27 | Holger Eggs | Recommender engine |
US20130173637A1 (en) | 2011-12-29 | 2013-07-04 | Samsung Electronics Co., Ltd. | Method, server, and terminal for recommending an application based on application usage |
US20130185292A1 (en) | 2012-01-04 | 2013-07-18 | Trustgo Mobile, Inc. | Application recommendation system |
US20130185294A1 (en) | 2011-03-03 | 2013-07-18 | Nec Corporation | Recommender system, recommendation method, and program |
US20130198506A1 (en) | 2012-01-26 | 2013-08-01 | International Business Machines Corporation | Intelligent application recommendation feature |
US20130198029A1 (en) | 2012-01-26 | 2013-08-01 | Microsoft Corporation | Application recommendation and substitution |
US20130282750A1 (en) | 2010-03-19 | 2013-10-24 | Samit Paul | Recommending relevant and personalized content accessing keywords for users of a text messaging service based global textsite platform |
US20130311836A1 (en) | 2012-04-05 | 2013-11-21 | Cameron Hurst | System, method, apparatus, and computer program product for providing mobile device support services |
US8612470B1 (en) * | 2012-12-28 | 2013-12-17 | Dropbox, Inc. | Application recommendation using stored files |
WO2014036936A1 (en) | 2012-09-04 | 2014-03-13 | Tencent Technology (Shenzhen) Company Limited | Systems and methods for software upgrade recommendation |
US20140222952A1 (en) | 2013-02-05 | 2014-08-07 | Qualcomm Incorporated | Optimizing recipient application selection in a multiple application environment using equivalence classes for applications |
-
2013
- 2013-09-30 US US14/040,782 patent/US9390141B2/en not_active Expired - Fee Related
-
2014
- 2014-08-27 WO PCT/US2014/053012 patent/WO2015047640A1/en active Application Filing
Patent Citations (36)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
KR20030016494A (en) | 2001-08-20 | 2003-03-03 | 이상기 | Goods recommendation system and method using artificial intelligence reasoning engine, a storage medea |
US7617519B2 (en) | 2004-03-18 | 2009-11-10 | Microsoft Corporation | System and method for intelligent recommendation with experts for user trust decisions |
US20060136389A1 (en) | 2004-12-22 | 2006-06-22 | Cover Clay H | System and method for invocation of streaming application |
US20070060099A1 (en) | 2005-09-14 | 2007-03-15 | Jorey Ramer | Managing sponsored content based on usage history |
US20100094878A1 (en) | 2005-09-14 | 2010-04-15 | Adam Soroca | Contextual Targeting of Content Using a Monetization Platform |
US20090006398A1 (en) * | 2007-06-29 | 2009-01-01 | Shing Yan Lam | Recommendation system with multiple integrated recommenders |
US20090106314A1 (en) | 2007-10-22 | 2009-04-23 | Samsung Electronics Co., Ltd. | Situation-aware recommendation using correlation |
US20090259998A1 (en) | 2008-04-11 | 2009-10-15 | International Business Machines Corporation | Method, system and computer program for identifying and reusing component aggregates |
US20100042608A1 (en) * | 2008-08-12 | 2010-02-18 | Kane Jr Francis J | System for obtaining recommendations from multiple recommenders |
US20100250337A1 (en) | 2009-03-31 | 2010-09-30 | Farhang Kassaei | Application recommendation engine |
US20110153853A1 (en) | 2009-12-18 | 2011-06-23 | Microsoft Corporation | Remote application presentation over a public network connection |
US20130282750A1 (en) | 2010-03-19 | 2013-10-24 | Samit Paul | Recommending relevant and personalized content accessing keywords for users of a text messaging service based global textsite platform |
US20110307354A1 (en) * | 2010-06-09 | 2011-12-15 | Bilgehan Erman | Method and apparatus for recommending applications to mobile users |
US20120084292A1 (en) | 2010-09-15 | 2012-04-05 | Jisheng Liang | Recommending mobile device activities |
US20120072283A1 (en) * | 2010-09-16 | 2012-03-22 | Mobilmeme, Inc. | Mobile application recommendation system and method |
US20120215684A1 (en) | 2010-09-28 | 2012-08-23 | Adam Kidron | Usage Payment Collection And Apportionment Platform Apparatuses, Methods And Systems |
US20120096435A1 (en) | 2010-10-18 | 2012-04-19 | Microsoft Corporation | Capability-based application recommendation |
US20120179973A1 (en) * | 2010-11-01 | 2012-07-12 | International Business Machines Corporation | Application Recommendation |
US20130185294A1 (en) | 2011-03-03 | 2013-07-18 | Nec Corporation | Recommender system, recommendation method, and program |
US8452797B1 (en) * | 2011-03-09 | 2013-05-28 | Amazon Technologies, Inc. | Personalized recommendations based on item usage |
US8468164B1 (en) | 2011-03-09 | 2013-06-18 | Amazon Technologies, Inc. | Personalized recommendations based on related users |
US20120303477A1 (en) | 2011-05-27 | 2012-11-29 | Yuval Ben-Itzhak | Systems and Methods for Recommending Software Applications |
US20130086553A1 (en) | 2011-09-29 | 2013-04-04 | Mark Grechanik | Systems and methods for finding project-related information by clustering applications into related concept categories |
US20130103758A1 (en) | 2011-10-19 | 2013-04-25 | c/o Facebook, Inc. | Filtering and ranking recommended users on a social networking system |
WO2013062546A1 (en) | 2011-10-27 | 2013-05-02 | Hewlett-Packard Development Company, L.P. | Application store interface for remote management of client devices |
US20130132896A1 (en) | 2011-11-22 | 2013-05-23 | Samsung Electronics Co., Ltd. | System and method of recommending applications based on context information |
US20130138674A1 (en) | 2011-11-30 | 2013-05-30 | Samsung Electronics Co., Ltd. | System and method for recommending application by using keyword |
US20130166357A1 (en) | 2011-12-21 | 2013-06-27 | Holger Eggs | Recommender engine |
US20130173637A1 (en) | 2011-12-29 | 2013-07-04 | Samsung Electronics Co., Ltd. | Method, server, and terminal for recommending an application based on application usage |
US20130185292A1 (en) | 2012-01-04 | 2013-07-18 | Trustgo Mobile, Inc. | Application recommendation system |
US20130198506A1 (en) | 2012-01-26 | 2013-08-01 | International Business Machines Corporation | Intelligent application recommendation feature |
US20130198029A1 (en) | 2012-01-26 | 2013-08-01 | Microsoft Corporation | Application recommendation and substitution |
US20130311836A1 (en) | 2012-04-05 | 2013-11-21 | Cameron Hurst | System, method, apparatus, and computer program product for providing mobile device support services |
WO2014036936A1 (en) | 2012-09-04 | 2014-03-13 | Tencent Technology (Shenzhen) Company Limited | Systems and methods for software upgrade recommendation |
US8612470B1 (en) * | 2012-12-28 | 2013-12-17 | Dropbox, Inc. | Application recommendation using stored files |
US20140222952A1 (en) | 2013-02-05 | 2014-08-07 | Qualcomm Incorporated | Optimizing recipient application selection in a multiple application environment using equivalence classes for applications |
Non-Patent Citations (8)
Title |
---|
Han, et al., "Efficient Service Recommendation System for Cloud Computing Marker", ICIS 2009, Nov. 24-26, 2009 pp. 839-845. |
Han, et al., "Efficient Service Recommendation System for Cloud Computing Market", ICIS 2009, Nov. 24-26, pp. 839-845. |
IBM Knowledge Center-Administering the Widget Container http://www-01.ibm.com/support/knowledgecenter/SSYGQH-5.0.0/admin/admin/t-admin-common-widget-cocontain.dita?lang=en, retrieved Sep. 28, 2015, 2 pages. |
IBM Knowledge Center-Managing images and videos for thumbnails and preview: http://www-01.ibm.com/support/knowledgecenter/api/content/nl/en-us/SSYGQH-5.0.0/admin/admin/t-admin-common-widget-container.dita, retrieved Sep. 28, 2015, 1 page. |
International Search Report and Written Opinion for Application No. PCT/US2014/053012, dated Nov. 27, 2014, 10 pages. |
International Search Report and Written Opinion for Application No. PCT/US2014/053565 dated Dec. 2, 2014, 8 pages. |
MIME Types: http://www.sitepoint.com/web-foundations/mime-types-complete-list/, Apr. 15, 2014, 22 pages. |
Su, et al., "A Survey of Collaborative Filtering Techniques," Advances in Artificial Intelligence, vol. 2009 Article ID 42425, Feb. 9, 2009, 19 pages. |
Cited By (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9536199B1 (en) * | 2014-06-09 | 2017-01-03 | Google Inc. | Recommendations based on device usage |
Also Published As
Publication number | Publication date |
---|---|
US20150095321A1 (en) | 2015-04-02 |
WO2015047640A1 (en) | 2015-04-02 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9390141B2 (en) | Systems and methods for determining application installation likelihood based on probabilistic combination of subordinate methods | |
US11756245B2 (en) | Machine learning to generate and evaluate visualizations | |
US8620929B2 (en) | Context based resource relevance | |
US20190228046A1 (en) | Optimizing transmission of digital components | |
US20170124183A1 (en) | Adjusting search results based on user skill and category information | |
US11599548B2 (en) | Utilize high performing trained machine learning models for information retrieval in a web store | |
CN113204621A (en) | Document storage method, document retrieval method, device, equipment and storage medium | |
JP2017146926A (en) | Information processing device, information processing method and information processing program | |
JP2014215685A (en) | Recommendation server and recommendation content determination method | |
US9558233B1 (en) | Determining a quality measure for a resource | |
US11663520B1 (en) | Regularization relaxation scheme | |
US20140067812A1 (en) | Systems and methods for ranking document clusters | |
KR20210019359A (en) | Stock Price Prediction Service Method and System | |
US9177255B1 (en) | Cloud systems and methods for determining the probability that a second application is installed based on installation characteristics | |
US20090240643A1 (en) | System and method for detecting human judgment drift and variation control | |
KR20220124609A (en) | Method and apparatus for providing business management advice information | |
US20130159291A1 (en) | Ranking search results using weighted topologies | |
US9390382B2 (en) | Template regularization for generalization of learning systems | |
JP6173586B2 (en) | Method and apparatus for performing data mining based on user search act | |
CN112395517A (en) | House resource searching and displaying method and device and computer readable storage medium | |
JP5325280B2 (en) | Information processing device | |
EP2793146A1 (en) | Relevance-based cutoff for search results | |
JP2020077203A (en) | Information processor, program, and information processing method | |
CN107924400B (en) | Generating mobile-friendliness scores for resources | |
Król et al. | Performance of map applications on mobile devices: case study |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:PROCOPIO, MICHAEL JEFFREY;REEL/FRAME:031309/0914Effective date: 20130924 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044566/0657Effective date: 20170929 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20200712 |
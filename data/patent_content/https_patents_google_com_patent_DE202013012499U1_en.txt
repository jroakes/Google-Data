DE202013012499U1 - Browser-level background page for providing multiple views - Google Patents
Browser-level background page for providing multiple views Download PDFInfo
- Publication number
- DE202013012499U1 DE202013012499U1 DE202013012499.7U DE202013012499U DE202013012499U1 DE 202013012499 U1 DE202013012499 U1 DE 202013012499U1 DE 202013012499 U DE202013012499 U DE 202013012499U DE 202013012499 U1 DE202013012499 U1 DE 202013012499U1
- Authority
- DE
- Germany
- Prior art keywords
- shadow
- dom
- web page
- browser
- view
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/12—Use of codes for handling textual entities
- G06F40/14—Tree-structured documents
- G06F40/143—Markup, e.g. Standard Generalized Markup Language [SGML] or Document Type Definition [DTD]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F8/00—Arrangements for software engineering
- G06F8/30—Creation or generation of source code
- G06F8/38—Creation or generation of source code for implementing user interfaces
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/44—Arrangements for executing specific programs
- G06F9/451—Execution arrangements for user interfaces
Abstract
System, das Folgendes umfasst: einen Speicher; und einen Prozessor, operativ verbunden mit dem Speicher, und so konfiguriert, dass er Code ausführt, um Folgendes zu erreichen: das Bereitstellen eines HTML-Dokuments einschließlich einer Liste mit Modellen, worin jedes Modell in der Liste ein Tochterobjekt des Textkörpers des HTML-Dokuments ist; das Erstellen eines Shadow DOM-Unterbaums im Textkörper des HTML-Dokuments, worin der Shadow DOM-Unterbaum eine oder mehrere Einfügemarken umfasst; und das Festlegen, welches Modell aus der Liste mit Modellen in einer Ansicht einer Webseite angezeigt wird, mithilfe von Übereinstimmungskriterien einer oder mehrerer Einfügemarken.A system comprising: a memory; and a processor operatively connected to the memory and configured to execute code to: provide an HTML document including a list of models, wherein each model in the list is a child object of the body of the HTML document is; creating a shadow DOM subtree in the body of the HTML document, wherein the shadow DOM subtree comprises one or more insertion marks; and determining which model from the list of models is displayed in a view of a web page by using match criteria of one or more insertion tags.
Description
VERWEISREFERENCE
Unter Schutz gestellt werden und Gegenstand des Gebrauchsmusters sind dabei, entsprechend den Vorschriften des Gebrauchsmustergesetzes, lediglich Vorrichtungen wie in den beigefügten Schutzansprüchen definiert, jedoch keine Verfahren. Soweit nachfolgend in der Beschreibung gegebenenfalls auf Verfahren Bezug genommen wird, dienen diese Bezugnahmen lediglich der beispielhaften Erläuterung der in den beigefügten Schutzansprüchen unter Schutz gestellten Vorrichtung oder Vorrichtungen.Be provided under protection and subject of the utility model are, according to the provisions of the utility model law, only devices as defined in the appended claims, but no method. Wherever in the description, if appropriate, reference is made to methods, these references are merely illustrative of the device or devices set forth in the appended claims.
TECHNISCHES GEBIETTECHNICAL AREA
Diese Beschreibung bezieht sich im Allgemeinen auf ein Model-View-Controller-Framework.This description generally refers to a Model View Controller framework.
HINTERGRUNDBACKGROUND
Im Allgemeinen versuchen Webanwendungen heute, einem MVC-Designmuster (Model-View-Controller) für Benutzeroberflächen zu folgen. Das MVC-Designmuster unterteilt eine Anwendung in drei Verantwortungsbereiche: (a) das Modell (Model): die Domain-Objekte oder Datenstrukturen, die den Status der Anwendung repräsentieren; (b) die Ansicht (View), die den Status beobachtet und Ausgabedaten für die Nutzer generiert; und (c) die Steuerung (Controller), die die Eingabedaten der Nutzer in Vorgänge im Modell übersetzt. Ein Problem, auf das die Webanwendungen häufig stoßen, ist, dass ein DOM-Baum (Document Object Model), der die Webanwendung repräsentiert, einheitlich ist und keine Einkapselungsabstraktionen liefert. Dies führt zum Problemen bei der Aufrechterhaltung der logischen Trennung primitiver Datentypen (wie Model und View).In general, Web applications today are trying to follow a user interface MVC design model. The MVC design pattern divides an application into three areas of responsibility: (a) the model: the domain objects or data structures that represent the status of the application; (b) the view that observes the status and generates output data for the users; and (c) the controller (controller) that translates the input data of the users into operations in the model. One problem that web applications often encounter is that a Document Object Model (DOM) tree that represents the web application is consistent and does not provide encapsulation abstractions. This leads to problems in maintaining the logical separation of primitive data types (such as Model and View).
Ein Workaround für das MVC-Designmuster liefert alternative Betriebsmittel für den Benutzeroberflächenentwickler. Dieser Workaround resultiert jedoch in einer riesigen Menge von benutzeroberflächenspezifischen APIs. Deshalb besteht ein Bedarf an Systemen und Verfahren, um das Defizit der gegenwärtigen Technologie zu bewältigen und andere neue und innovative Eigenschaften zu bieten.An MVC design pattern workaround provides alternative UI developer resources. However, this workaround results in a huge amount of UI-specific APIs. Therefore, there is a need for systems and methods to overcome the deficit of current technology and to provide other new and innovative features.
ZUSAMMENFASSUNGSUMMARY
Nach einem allgemeinen Aspekt kann ein Verfahren zur Implementierung von Webanwendungen das Projizieren eines Webseitenelements einer Webanwendung mithilfe eines Computergerät-Prozessors in die Ansicht der Webseite sein, wobei die Ansicht eine visuelle Ansicht des Webseitenmodells ist, und das Modell Anwendungsdaten und -regeln umfasst. Ein Controller kann Eingaben vermitteln und Eingaben in Befehle für die Ansicht oder das Modell umwandeln. Der Controller kann das eine, in die Ansicht der Webseite projizierte Element und ein anderes Element mithilfe einer Einfügemarke transponieren. Die Einfügemarke ist ein festgelegter Standort in einem Shadow-DOM-Unterbaum, die keinen Einfluss auf den DOM-Baum der Webseite nimmt.In a general aspect, a method of implementing web applications may be to project a web page element of a web application into the view of the web page using a computing device processor, wherein the view is a visual view of the web page model and the model comprises application data and rules. A controller can convey inputs and convert input into commands for the view or model. The controller can transpose one element projected into the view of the web page and another one using an insertion point. The insertion point is a fixed location in a shadow DOM subtree that does not affect the DOM tree of the web page.
Nach einem anderen allgemeinen Aspekt kann ein System einen Speicher und einen damit verknüpften Prozessor umfassen, welcher dazu konfiguriert wurde, Code auszuführen, um ein HTML-Dokument einschließlich einer Liste mit Modellen bereitzustellen, wobei jedes Modell in der Liste ein Tochterobjekt des Textkörpers des HTML-Dokuments ist, ein Shadow DOM-Unterbaum im Textkörper des HTML-Dokuments zu erstellen, wobei der Shadow DOM-Unterbaum eine oder mehrere Einfügemarken beinhaltet. In der Liste der Modelle wird festgelegt, welches Modell in der Ansicht einer Webseite angezeigt wird, und zwar in Übereinstimmung mit den Kriterien einer oder mehrerer Einfügemarken.In another general aspect, a system may include a memory and a processor associated therewith that has been configured to execute code to provide an HTML document including a list of models, each model in the list being a child of the body of the HTML. The document is to create a shadow DOM subtree in the body of the HTML document, where the shadow DOM subtree contains one or more insertion marks. The list of models determines which model displays in the view of a web page, in accordance with the criteria of one or more insertion marks.
Nach einem weiteren allgemeinen Aspekt kann ein nicht-transitorisches, computerlesbares Medium ausführbaren Code enthalten, der bewirkt, dass ein Computergerät mithilfe eines Computergerätprozessors ein Webseitenelement in die Ansicht der Webseite projiziert, und dieses in die Ansicht der Webseite projizierte Element sowie ein anderes Element mithilfe einer Einfügemarke, die für einen bestimmten Standort in einem Shadow DOM-Unterbaum steht, transponiert, ohne die Hintergrundseite auf Browserebene darüber zu benachrichtigen. Die Hintergrundseite auf Browserebene kann eine Skriptdatei sein, die über keine eigene Benutzeroberfläche verfügt und als Container für alle Ansichten einer Webanwendung einschließlich der Ansicht der Webseite agiert. Jedes von der Webanwendung erstellte Fenster kann eine andere Ansicht der Hintergrundseite auf Browserebene darstellen.In another general aspect, a non-transitory computer-readable medium may include executable code that causes a computing device to project a web page element into the view of the web page using a computing device processor, and that element projected into the view of the web page and another element Caret that represents a particular location in a Shadow DOM subtree transposed without notifying the background page at the browser level. The browser-level background page can be a script file that does not have its own user interface and acts as a container for all views of a web application, including the view of the web page. Each window created by the web application can display a different view of the background page at the browser level.
Die Details einer oder mehrerer Implementierungen sind in den nachstehenden zugehörigen Zeichnungen und der Beschreibung dargelegt. Andere Features anhand der Beschreibung und Zeichnungen sowie anhand der Ansprüche ersichtlich werden. The details of one or more implementations are set forth in the accompanying drawings below and the description. Other features will become apparent from the description and drawings, and from the claims.
KURZBESCHREIBUNG DER ZEICHNUNGENBRIEF DESCRIPTION OF THE DRAWINGS
Ähnliche Referenzsymbole in den verschiedenen Zeichnungen verweisen auf ähnliche Elemente.Similar reference symbols in the various drawings refer to similar elements.
AUSFÜHRLICHE BESCHREIBUNGDETAILED DESCRIPTION
Ein Document Object Model (DOM) ist eine plattformübergreifende und sprachenunabhängige Konvention für die Darstellung und Interaktion mit Objekten in HTML-, XHTML- und XML-Dokumenten. Wie hier verwendet, bezieht sich ein „Dokument” auf das zugrunde liegende Dokument für das DOM. Ein „Knoten” bezieht sich auf ein beliebiges DOM-Objekt in einem Baum. Ein DOM-„Baum” bezieht sich auf jeden Baum aus DOM-Objekten. Objekte in einem DOM-Baum können mithilfe von Objektverfahren adressiert und manipuliert werden. Eine „DOM-Struktur” bezieht sich auf einen DOM-Baum oder ein Fragment eines DOM-Baums.A Document Object Model (DOM) is a cross-platform, language-independent convention for representing and interacting with objects in HTML, XHTML, and XML documents. As used herein, a "document" refers to the underlying document for the DOM. A "node" refers to any DOM object in a tree. A DOM "tree" refers to any tree of DOM objects. Objects in a DOM tree can be addressed and manipulated using object methods. A "DOM structure" refers to a DOM tree or a fragment of a DOM tree.
Webanwendungen können einem MVC-Designmuster (Model-View-Controller) für Benutzeroberflächen folgen, das eine Anwendung in drei Verantwortungsbereiche unterteilt: (a) das Modell (Model): die Domain-Objekte oder Datenstrukturen, die den Status der Anwendung repräsentieren; (b) die Ansicht (View), die den Status beobachtet und Ausgabedaten für die Nutzer generiert; und (c) die Steuerung (Controller), die die Eingabedaten der Nutzer in Vorgänge im Modell übersetzt. Ein Problem, auf das die Webanwendungen häufig stoßen, ist, dass ein DOM-Baum (Document Object Model), der die Webanwendung repräsentiert, einheitlich ist und keine Einkapselungsabstraktionen liefert. Dies führt zum Problemen bei der Aufrechterhaltung der logischen Trennung primitiver Datentypen (wie Model und View).Web applications can follow a user interface MVC design view model that divides an application into three areas of responsibility: (a) the model: the domain objects or data structures that represent the status of the application; (b) the view that observes the status and generates output data for the users; and (c) the controller (controller) that translates the input data of the users into operations in the model. One problem that web applications often encounter is that a Document Object Model (DOM) tree that represents the web application is consistent and does not provide encapsulation abstractions. This leads to problems in maintaining the logical separation of primitive data types (such as Model and View).
Mithilfe der Implementierungen eines „Shadow DOM” (wie Einfügemarken und deren übereinstimmende Kriterien, ausführlich beschrieben auf FIG. (
Wenn der Controller (z. B. Webanwendung) diesen Attributwert modifiziert, ändert sich das Übereinstimmungskriterium, was wiederum eine Änderung des Elements, welches anstelle dieses <content>-HTML-Elements dargestellt wird, auslöst. Der Entwickler einer Webanwendung kann DOM-Elemente im Dokument als Ansichten zuweisen und die Übereinstimmungskriterien ändern, damit sie mit beliebigen dieser DOM-Elemente übereinstimmen, welche anstelle des <content>-HTML-Elements erscheinen. Dadurch wird eine klare Trennung zwischen dem Content der Ansicht und der Vorgehensweise bei der Kontrolle seiner Auswahl sichergestellt. Die Model-Bits werden niemals geändert oder vom Controller (oder der Ansicht) informiert, selbst wenn die Ansicht geändert wurde. Auf diese Weise können die Benutzeroberflächen der Webanwendungen und die Benutzeroberflächenkomponenten manipuliert, modifiziert und verbessert werden, ohne dass der Basiscode des Dokumenten-Markups des Webanwendungmodells geändert werden muss. When the controller (eg, web application) modifies this attribute value, the match criterion changes, which in turn triggers a change in the element that is rendered in place of that <content> HTML element. The developer of a web application can assign DOM items in the document as views and change the match criteria to match any of those DOM items that appear in place of the <content> HTML element. This ensures a clear separation between the content of the view and the approach to controlling its selection. The model bits are never changed or informed by the controller (or view), even if the view has been changed. In this way, the user interfaces of the web applications and the user interface components can be manipulated, modified and improved without having to change the base code of the document markup of the web application model.
Entwickler von Webanwendungen müssen oft eine Einkapselung der DOM-Struktur liefern. Obwohl sie Teil des Dokumenten-Baums sind, kann es viele funktionelle Fragmente des DOM (oder der DOM-Unterbäume) sowie Annahmen über diese unabhängig agierenden Fragmente geben. Dieser Einkapselungstyp wird als die „funktionelle Einkapselung” bezeichnet, im Gegensatz zu einer „Vertrauenseinkapselung”, die sich auf die Begrenzung des Informationsflusses basierend auf Vertrauen und Gewährleistung der Sicherheit der Daten und des Status innerhalb einer Anwendung bezieht. Die funktionelle Einkapselung legt Funktionsgrenzen in einem Dokumentenbaum fest. Eine Funktionsgrenze (oder „Grenze”) ist eine Beschreibung funktioneller Bedenken zwischen zwei lose verknüpften Funktionseinheiten.Web application developers often need to encapsulate the DOM structure. Although they are part of the document tree, there may be many functional fragments of the DOM (or DOM subtrees) as well as assumptions about these independently acting fragments. This type of encapsulation is referred to as "functional encapsulation," as opposed to "trust encapsulation," which refers to limiting the flow of information based on trust and ensuring data security and status within an application. The functional encapsulation defines functional limits in a document tree. A function limit (or "limit") is a description of functional concerns between two loosely linked functional units.
Die Benutzeroberfläche einer Webanwendung kann aus mehreren Benutzeroberflächenelementen (oder „Widgets”) 9 bestehen, wobei jede von ihnen einen DOM-Unterbaum repräsentiert. In den Fällen, wo ein Widget mit dem Hosten anderer Widgets beauftragt ist, muss das Widget verstehen, wo sein DOM-Unterbaum endet und der DOM-Unterbaum eines anderen Widgets beginnt.The user interface of a web application may consist of several user interface elements (or "widgets") 9, each of which represents a DOM subtree. In cases where a widget is charged with hosting other widgets, the widget needs to understand where its DOM subtree ends and the DOM subtree of another widget begins.
Dieses Bedürfnis nach Verständnis der Funktionsgrenzen in einem Dokumentenbaum ist noch ausgeprägter, wenn ein Widget von einem externen Akteur, wie der Webanwendung, die diese Widgets konsumiert, verwaltet wird – hinzugefügt, bewegt oder aus der Dokumentenstruktur gelöscht. Wenn ein Widgetnutzer nicht genau versteht, wie die DOM-Struktur eines Widgets gestaltet ist, ist es für ihn nicht möglich, vernünftig mit dem Widget zu arbeiten.This need for understanding functional limits in a document tree is even more pronounced when a widget is managed by an external actor, such as the web application that consumes these widgets - added, moved or deleted from the document structure. If a widget user does not understand exactly how the DOM structure of a widget is designed, it is not possible for him to work properly with the widget.
Wie in der Implementierung auf der
Wenn die Webanwendung in Form von DOM-Unterbäumen gestaltet ist, wie auf
Eine „Shadow DOM”-Struktur ermöglicht es, dass multiple Shadow DOM-Unterbäume
Die Einkapselungsgrenzen zwischen den Shadow DOM-Unterbäume
Ein Webbrowser, der die Webanwendungen, die in den
Bei der Wiedergabe beispielsweise durch einen Tenderer eines Webbrowsers kann der Shadow DOM-Unterbaum
Wie in
Um die Einkapselung mit niedrigen Boundaries aufrechtzuerhalten, beinhaltet die Verteilung der Tochterknoten des Shadow Hosts auf die Einfügemarken im damit zusammenhängenden Shadow DOM-Unterbaum mehrere Eigenschaften. Beispielsweise wird sich die Verteilung nicht auf den Status des Dokumentenbaums oder der Shadow DOM-Unterbäume auswirken. Jede Einfügemarke partizipiert an der Verteilung, indem sie Übereinstimmungskriterien für die Tochterknoten bereitstellt. Die Übereinstimmungskriterien legen fest, ob ein bestimmter Knoten an eine bestimmte Einfügemarke ausgeliefert werden kann. Die Verteilung ist ein Ergebnis der Ausführung eines stabilen Algorithmus. Die Verteilung selbst bewirkt keine Änderung der Variablen, die sich auf die Verteilung auswirken. Die Verteilung tritt immer dann auf, wenn eine Variable, die sich auf sie auswirkt, geändert wird In order to maintain low bounding encapsulation, the distribution of shadow host daughter nodes to the insertion tags in the associated shadow DOM subtree involves several properties. For example, the distribution will not affect the status of the document tree or the shadow DOM subtrees. Each insertion point participates in the distribution by providing match criteria for the child nodes. The match criteria determines whether a given node can be served to a particular insertion point. The distribution is a result of the execution of a stable algorithm. The distribution itself does not change the variables that affect the distribution. The distribution occurs whenever a variable that affects it is changed
Der Verteilungsalgorithmus kann ein Ergebnis erzeugen, das dem Ergebnis bei der Verarbeitung der folgenden Schritte entspricht: Eingabe: BAUM, der ein Shadow DOM-Unterbaum ist; POOL, welcher eine Liste mit DOM-Knoten ist. Ausgabe: Die Knoten im POOL werden auf die Einfügemarken im BAUM verteilt. Wiederholen für jede aktive Einfügemarke im BAUM, in der Baumabfolge:
POINT ist die aktuelle Einfügemarke
Für jeden Knoten im POOL wiederholen:
NODE ist der aktuelle Knoten
Wenn NODE den Übereinstimmungskriterien des POINT entspricht:
NODE nach POINT verteilen
NODE aus dem POOL entfernen
Andernfalls weiter wiederholen
Weiter wiederholenThe distribution algorithm may generate a result that corresponds to the result in the processing of the following steps: input: TREE, which is a shadow DOM subtree; POOL, which is a list of DOM nodes. Output: The nodes in the POOL are distributed to the insertion tags in the TREE. Repeat for each active insertion point in the TREE, in the tree sequence:
POINT is the current insertion point
Repeat for each node in the POOL:
NODE is the current node
If NODE matches the POINT match criteria:
Distribute NODE to POINT
Remove NODE from the POOL
Otherwise, continue to repeat
Continue to repeat
Übereinstimmende EinfügemarkenMatching insertion marks
Die Übereinstimmungskriterien für eine Einfügemarke werden als ein Satz von Selektorfragmenten definiert. Jedes Selektorfragment ist ein Fragment im Selektor (Shadow Host) > (Fragment), wo (Shadow Host) ein Selektor ist, der den Shadow Host identifiziert, und das (Fragment) das Selektorfragment ist.The insertion criteria for an insertion point are defined as a set of selector fragments. Each selector fragment is a fragment in the selector (Shadow Host)> (fragment) where (shadow host) is a selector that identifies the shadow host and that (fragment) is the selector fragment.
Übereinstimmender Host und Tochterobjekte, verteilt auf EinfügemarkenMatching host and child objects, spread across insertion marks
Zwei Arten von Selektoren, deklariert in den Übereinstimmungselementen der Shadow DOM-Unterbäume außerhalb des Baums, in dem sie deklariert sind: (1) A :host-Pseudoklasse, die mit dem Shadow Host eines Shadow DOM-Unterbaums übereinstimmt; und (2) ein Referenzauswahl-Combinator, der mit den Knoten, die aktuell einer Einfügemarke zugeteilt wurden, übereinstimmt. Die :host-Pseudoklasse repräsentiert den Shadow Host eines Shadow DOM-Unterbaums. Wenn der kontextbezogene Referenzelementsatz leer ist oder Elemente außerhalb eines Shadow DOM-Unterbaums enthält, übereinstimmt :host mit keinem Element. Die Referenz-Combinatoren übereinstimmen mit den Tochterobjekten eines Shadow Hosts, verteilt auf die Einfügemarken innerhalb eines Shadow DOM-Unterbaums. Es gelten folgende Bedingungen: Der Combinator-Wert ist „select”; der erste zusammengesetzte Selektor des Combinators übereinstimmt mit einer Einfügemarke und der zweite zusammengesetzte Selektor übereinstimmt mit einem Element, das an diese Einfügemarke verteilt wurde.Two types of selectors declared in the shadow DOM subtree match elements outside of the tree in which they are declared: (1) A: host pseudo class that matches the shadow host of a shadow DOM subtree; and (2) a reference selection combiner that matches the nodes currently assigned to an insertion point. The: host pseudo class represents the shadow host of a shadow DOM subtree. If the contextual reference element set is empty or contains elements outside a shadow DOM subtree, then: host does not match any element. The reference combiners match the daughter objects of a shadow host, distributed among the insertion tags within a shadow DOM subtree. The following conditions apply: The Combinator value is "select"; the first composite selector of the combiner matches an insertion point and the second composite selector matches an element that has been distributed to that insertion point.
Beispielweise wird .some-insertion-point/select/div.special mit allen div-Elementen übereinstimmen, die an eine Einfügemarke mit einem auf some-insertion-point festgesetzten class-Attribut verteilt wurden.For example, .some-insertion-point / select / div.special will match any div elements that have been distributed to an insertion point with a class attribute set to some-insertion-point.
Ein Shadow Host kann mehr als einen Shadow DOM-Unterbaum hosten. In solchen Fällen werden die Unterbäume in der Abfolge gestapelt, in der sie zum Host hinzugefügt wurden, beginnend mit dem zuletzt hinzugefügten Unterbaum. Dieser Unterbäume-Satz wird als Baumstapel bezeichnet. Der in letzter Zeit hinzugefügte Unterbaum wird als der jüngere Baum bezeichnet, und der zuerst hinzugefügte Unterbaum ergo der älteste Baum. Der zuletzt hinzugefügte Unterbaum wird als der jüngste Baum bezeichnet.A shadow host can host more than one shadow DOM subtree. In such cases, the subtrees are stacked in the order in which they were added to the host, starting with the last subtree added. This subtree set is called a tree stack. The recently added sub-tree is called the younger tree, and the sub-tree first added ergo the oldest tree. The last added subtree is called the youngest tree.
Um das Zusammenstellen multipler Shadow Unterbäumen desselben Hosts zu vereinfachen, wird ein spezieller Typ der Einfügemarke definiert. Die Shadow Einfügemarke weist einen Ort im Shadow DOM-Unterbaum zu, und zwar den Ort, an dem der ältere Baum eingefügt wird.To simplify assembling multiple shadow subtrees of the same host, a special type of insertion point is defined. The Shadow insertion point assigns a location in the Shadow DOM subtree, the location where the older tree is inserted.
Vergleichsweise kann ein Shadow DOM-Unterbaum als eine Stelle zwischen einem DOM-Unterbaum in einem Dokument und einem Dokumentfragment gesehen werden. Da er wiedergegeben wird, zielt ein Shadow DOM-Unterbaum darauf ab, die Eigenschaften eines typischen DOM-Unterbaums in einem Dokument beizubehalten. Gleichzeitig handelt es sich hierbei um eine Einkapselungsabstraktion, weshalb es keine Auswirkungen auf den DOM-Unterbaum des Dokuments geben darf. So verhalten sich die HTML-Elemente wie in den Shadow DOM-Unterbäumen festgelegt, mit einigen Ausnahmen.By way of comparison, a shadow DOM subtree may be seen as a location between a DOM subtree in a document and a document fragment. As it is rendered, a Shadow DOM subtree aims to preserve the properties of a typical DOM subtree in a document. At the same time, this is an encapsulation abstraction, which is why there is no May affect the DOM subtree of the document. This is how the HTML elements behave as defined in the Shadow DOM subtrees, with some exceptions.
Beispiel für ein Shadow DOMExample of a shadow DOM
Beispielsweise soll ein Entwickler eine einfache Liste mit Links in ein Nachrichtenwidget, das Links in zwei Kategorien, nämlich „Breaking News” und einfach News organisiert, umwandeln. Das aktuelle Dokumenten-Markup für die Nachrichten kann wie folgt aussehen: For example, a developer should convert a simple list of links into a news widget that organizes links into two categories, namely, "Breaking News" and simply news. The current document markup for the messages may look like this:
Um die Nachrichten zu organisieren, entscheidet sich der Entwickler für ein Shadow DOM. Auf diese Weise kann Bob das Dokument-Markup übersichtlich gestalten, dank der Nutzung von Einfügemarken wird das Sortieren von Nachrichten nach Klassennamen zu einer sehr einfachen Aufgabe.To organize the news, the developer chooses a Shadow DOM. In this way, Bob can make document markup clearer, and thanks to the use of insertion tags, sorting messages by class name becomes a very simple task.
Der Entwickler erstellt eine Simulation des folgenden Shadow DOM-Unterbaums, der von dem folgenden ul-Element gehostet wird: The developer creates a simulation of the following Shadow DOM subtree, which is hosted by the following ul element:
Der Entwickler gestaltet das neue Widget anschließend gemäß den Vorgaben des Designers und fügt diese Simulation dem Shadow DOM-Unterbaum hinzu: The developer then designs the new widget according to the designer's specifications and adds this simulation to the Shadow DOM subtree:
Der Entwickler wandelt die Simulation zum Code um: The developer converts the simulation to the code:
Wie in
Das Computergerät
Der Speicher
Das Speichergerät
Der Hochgeschwindigkeits-Controller
Das Computergerät
Das Computergerät
Der Prozessor
Prozessor
Der Speicher
Der Speicher kann beispielsweise Flash Speicher und/oder NVRAM-Speicher beinhalten, wie nachstehend erörtert. In einer Implementierung, ist ein Computerprogrammprodukt konkret in einem Informationsträger ausgeführt. Das Computerprogrammprodukt enthält Anweisungen, die, wenn sie ausgeführt werden, ein oder mehrere Verfahren ausführen, wie die oben beschriebenen. Der Informationsträger ist ein computer- oder maschinenlesbares Medium, wie der Speicher
Das Gerät
Das Gerät
Das Computergerät
Verschiedene Implementierungen der hier beschriebenen Systeme und Techniken können in digitalen elektronischen Schaltkreisen, integrierten Schaltkreisen, speziell konzipierten ASICs (anwendungsorientierten integrierten Schaltkreisen), Computerhardware, Firmware, Software und/oder Kombinationen davon realisiert werden. Diese verschiedenen Implementierungen können eine Implementierung in einem oder mehreren Computerprogrammen beinhalten, die auf einem programmierbaren System ausführbar und/oder interpretierbar sind, das mindestens einen programmierbaren Prozessor beinhaltet, der ein spezieller Prozessor oder ein Prozessor für allgemeine Zwecke sein kann, und der zum Empfangen von Daten und Anweisungen von und zum Übertragen von Daten und Anweisungen an ein Speichersystem, mindestens eine Eingabevorrichtung und mindestens eine Ausgabevorrichtung gekoppelt ist.Various implementations of the systems and techniques described herein may be implemented in digital electronic circuits, integrated circuits, specially designed ASICs (application-oriented integrated circuits), computer hardware, firmware, software, and / or combinations thereof. These various implementations may include implementation in one or more computer programs executable and / or interpretable on a programmable system including at least one programmable processor, which may be a special purpose processor or processor, and for receiving Data and instructions of and for transmitting data and instructions to a storage system, at least one input device and at least one output device is coupled.
Diese Computerprogramme (auch bekannt als Programme, Software, Softwareanwendungen oder Code) beinhalten Maschinenanweisungen für einen programmierbaren Prozessor und können in einer höheren prozeduralen und/oder objektorientierter Programmiersprache und/oder in Assembler-/Maschinensprache implementiert werden. Wie hier verwendet, bezeichnen die Begriffe „maschinenlesbares Medium”, „computerlesbares Medium” ein beliebiges Computerprogrammprodukt, eine beliebige Vorrichtung und/oder ein beliebiges Gerät (z. B. Magnetplatten, optische Platten, Speicher, programmierbare Logikbausteine (PLDs)), die verwendet werden, um einem programmierbaren Prozessor Maschinenanweisungen und/oder Daten bereitzustellen, einschließlich eines maschinenlesbaren Mediums, das Maschinenanweisungen als ein maschinenlesbares Signal empfängt. Der Begriff „maschinenlesbares Signal” bezeichnet ein beliebiges Signal, das verwendet wird, um einem programmierbaren Prozessor Maschinenanweisungen und/oder Daten bereitzustellen.These computer programs (also known as programs, software, software applications, or code) include machine instructions for a programmable processor and may be implemented in a higher level of procedural and / or object-oriented programming language and / or assembler / machine language. As used herein, the terms "machine-readable medium", "computer-readable medium" refer to any computer program product, device, and / or device (eg, magnetic disks, optical disks, memory, programmable logic devices (PLDs)) that uses to provide machine instructions and / or data to a programmable processor, including a machine-readable medium that receives machine instructions as a machine-readable signal. The term "machine-readable signal" refers to any signal used to provide machine instructions and / or data to a programmable processor.
Zur Interaktion mit einem Benutzer können die hier beschriebenen Systeme und Techniken auf einem Computer mit einem Anzeigegerät (z. B. ein CRT-[Kathodenstrahlröhre] oder ein LCD-[Flüssigkristallanzeige]Monitor) implementiert werden, um Informationen für den Benutzer anzuzeigen, und eine Tastatur und ein Pointergerät (z. B. Maus oder Trackball), mit denen der Benutzer Eingaben in den Computer vornehmen kann. Andere Arten von Geräten können auch verwendet werden, um eine Interaktion mit einem Benutzer bereitzustellen; zum Beispiel kann eine dem Benutzer bereitgestellte Rückmeldung irgendeine Form von Sinnesrückmeldung sein (z. B. visuelle Rückmeldung, auditive Rückmeldung oder Tastrückmeldung); und eine Eingabe vom Benutzer kann in einer beliebigen Form empfangen werden, einschließlich akustischer, Sprach- oder Tasteingaben.For interaction with a user, the systems and techniques described herein may be implemented on a computer with a display device (eg, a CRT [cathode ray tube] or an LCD [liquid crystal display] monitor) to display information to the user, and a user interface Keyboard and a pointer device (eg mouse or trackball) with which the user can make entries in the computer. Other types of devices may also be used to provide interaction with a user; for example, a feedback provided to the user may be some form of sensory feedback (eg, visual feedback, auditory feedback, or tactile feedback); and an input from the user may be received in any form, including acoustic, voice or touch inputs.
Die hierin beschriebenen Systeme und Techniken können in einem Computersystem implementiert werden, das eine Back-End-Komponente beinhaltet (z. B. als Datenserver), oder das eine Middleware-Komponente beinhaltet (z. B. einen Anwendungsserver), oder das eine Front-End-Komponente beinhaltet (z. B. ein Client-Computer mit einer grafischen Benutzeroberfläche oder einem Webbrowser, über welche ein Benutzer mit einer Implementierung der hier beschriebenen Systeme und Techniken interagieren kann) oder Kombination derartiger Back-End-, Middleware- und Front-End-Komponenten. Die Komponenten des Systems können durch eine beliebige Form oder ein beliebiges Medium von digitaler Datenkommunikation (z. B. ein Kommunikationsnetzwerk) miteinander verbunden sein. Beispiele von Kommunikationsnetzwerken beinhalten ein lokales Netzwerk („LAN”), ein Fernnetz („WAN”), und das Internet.The systems and techniques described herein may be implemented in a computer system that includes a back-end component (eg, as a data server), or that includes a middleware component (eg, an application server), or a front-end End component (e.g., a client computer with a graphical user interface or web browser through which a user can interact with an implementation of the systems and techniques described herein) or combination of such back-end, middleware, and front -End components. The components of the system may be interconnected by any form or medium of digital data communication (e.g., a communications network). Examples of communication networks include a local area network ("LAN"), a wide area network ("WAN"), and the Internet.
Das Computersystem kann Clients und Server beinhalten. Ein Client und Server befinden sich im Allgemeinen ortsfern voneinander und interagieren typischerweise über ein Kommunikationsnetz. Die Beziehung zwischen Client und Server entsteht aufgrund von Computerprogrammen, die auf den jeweiligen Computer laufen und die eine Client-Server-Beziehung zueinander haben.The computer system may include clients and servers. A client and server are generally remote from each other and typically interact over a communications network. The relationship between client and server is due to computer programs that run on each computer and that have a client-server relationship.
Einige Implementierungen sind beschrieben worden. Dennoch ist selbstverständlich, dass verschiedene Modifizierungen vorgenommen werden können.Some implementations have been described. Nevertheless, it goes without saying that various modifications can be made.
Außerdem erfordern die in den Figuren dargestellten logischen Abläufe nicht die bestimmte dargestellte Reihenfolge oder sequenzielle Reihenfolge, um wünschenswerte Ergebnisse zu erzielen. Darüber hinaus können andere Schritte vorgesehen oder Schritte aus den beschriebenen Abläufen eliminiert werden und andere Komponenten können zu den beschriebenen Systemen hinzugefügt werden oder von diesen entfernt werden. Dementsprechend liegen andere Implementierungen im Geltungsbereich der folgenden Ansprüche.In addition, the logical flows shown in the figures do not require the particular order or sequential order shown to achieve desirable results. In addition, other steps may be provided or steps may be eliminated from the described procedures, and other components may be added to or removed from the described systems. Accordingly, other implementations are within the scope of the following claims.
Claims (13)
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/570,962 US9342323B2 (en) | 2012-08-09 | 2012-08-09 | Browser-level background page for providing multiple views |
US13/570,962 | 2012-08-09 |
Publications (1)
Publication Number | Publication Date |
---|---|
DE202013012499U1 true DE202013012499U1 (en) | 2017-01-27 |
Family
ID=48790604
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
DE202013012499.7U Expired - Lifetime DE202013012499U1 (en) | 2012-08-09 | 2013-06-25 | Browser-level background page for providing multiple views |
Country Status (5)
Country | Link |
---|---|
US (2) | US9342323B2 (en) |
EP (1) | EP2883136A1 (en) |
CN (1) | CN104685466B (en) |
DE (1) | DE202013012499U1 (en) |
WO (1) | WO2014025467A1 (en) |
Families Citing this family (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9342323B2 (en) | 2012-08-09 | 2016-05-17 | Google Inc. | Browser-level background page for providing multiple views |
US10545749B2 (en) | 2014-08-20 | 2020-01-28 | Samsung Electronics Co., Ltd. | System for cloud computing using web components |
CN104516865B (en) * | 2014-12-29 | 2017-09-19 | 北京大学 | Association desktop based on Web demonstrates the online presentation file edit methods of subdocument |
US10372795B2 (en) * | 2015-03-18 | 2019-08-06 | Microsoft Technology Licensing, Llc | Conditionally controlled styling |
US10824791B2 (en) | 2018-02-26 | 2020-11-03 | Servicenow, Inc. | System for building and modeling web pages |
US10783316B2 (en) | 2018-02-26 | 2020-09-22 | Servicenow, Inc. | Bundled scripts for web content delivery |
US10599752B2 (en) * | 2018-02-26 | 2020-03-24 | Servicenow, Inc. | Web page acquisition and rendering with inter-component data binding |
US11281744B2 (en) * | 2018-09-12 | 2022-03-22 | Citrix Systems, Inc | Systems and methods for improved remote display protocol for HTML applications |
CN109783094A (en) * | 2018-12-15 | 2019-05-21 | 深圳壹账通智能科技有限公司 | Front end page generation method, device, computer equipment and storage medium |
US11068558B2 (en) * | 2018-12-21 | 2021-07-20 | Business Objects Software Ltd | Managing data for rendering visualizations |
KR20210055387A (en) | 2019-11-07 | 2021-05-17 | 삼성전자주식회사 | Context based application providing server and controlling method thereof |
US10922476B1 (en) * | 2019-12-13 | 2021-02-16 | Microsoft Technology Licensing, Llc | Resource-efficient generation of visual layout information associated with network-accessible documents |
US11416381B2 (en) * | 2020-07-17 | 2022-08-16 | Micro Focus Llc | Supporting web components in a web testing environment |
US20230103575A1 (en) * | 2021-10-05 | 2023-04-06 | Microsoft Technology Licensing, Llc | In-context visual search |
US11687613B2 (en) | 2021-11-12 | 2023-06-27 | Siteimprove A/S | Generating lossless static object models of dynamic webpages |
Family Cites Families (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5784619A (en) * | 1995-05-05 | 1998-07-21 | Apple Computer, Inc. | Replaceable and extensible notebook component of a network component |
US20050050449A1 (en) * | 2003-08-29 | 2005-03-03 | Dehamer Brian James | Web presentation architecture that supports page navigation management |
NL1025125C2 (en) * | 2003-11-07 | 2005-05-10 | Backbase B V | Method, design and system for expanding a mark-up language. |
US7404176B2 (en) * | 2004-06-01 | 2008-07-22 | Sap Ag | Creating and using nested context structures |
US7917856B2 (en) * | 2005-10-24 | 2011-03-29 | Sap Ag | Converting between user interface technologies |
US9092239B2 (en) * | 2006-05-02 | 2015-07-28 | Core Wireless Licensing S.A.R.L. | Configuring user interfaces in electronic devices |
CN101490644B (en) * | 2006-08-11 | 2011-03-30 | 松下电器产业株式会社 | Event processor |
US8549469B2 (en) * | 2006-10-22 | 2013-10-01 | Akin B Bolarinwa | System and method for specification and implementation of MVC (model-view-controller) based web applications |
US20080155457A1 (en) * | 2006-12-20 | 2008-06-26 | Sap Ag | Embedding visual content of an embedder in an embedded component |
JP2008171281A (en) | 2007-01-12 | 2008-07-24 | Fujitsu Ltd | Display screen configuration device |
US8752011B2 (en) * | 2007-03-20 | 2014-06-10 | The University Of North Carolina At Chapel Hill | Methods, systems, and computer readable media for automatically generating customizable user interfaces using programming patterns |
CN101587435A (en) * | 2008-05-19 | 2009-11-25 | 北京亿企通信息技术有限公司 | Method for realizing MVC |
US8131668B2 (en) * | 2008-05-28 | 2012-03-06 | Sap Ag | User-experience-centric architecture for data objects and end user applications |
US9703443B2 (en) * | 2008-09-25 | 2017-07-11 | Oracle America, Inc. | Method and system for creating a free-form visual user interface element |
US20100180205A1 (en) * | 2009-01-14 | 2010-07-15 | International Business Machines Corporation | Method and apparatus to provide user interface as a service |
US8539359B2 (en) * | 2009-02-11 | 2013-09-17 | Jeffrey A. Rapaport | Social network driven indexing system for instantly clustering people with concurrent focus on same topic into on-topic chat rooms and/or for generating on-topic search results tailored to user preferences regarding topic |
CN101604240A (en) * | 2009-07-15 | 2009-12-16 | 中山大学 | A kind of design method of purchase-sell-stock management system based on MVC |
US20120066620A1 (en) * | 2009-09-29 | 2012-03-15 | Sap Ag | Framework to Support Application Context and Rule Based UI-Control |
US20130167110A1 (en) * | 2011-12-27 | 2013-06-27 | René Gross | Modeled user interface controllers |
US9342323B2 (en) | 2012-08-09 | 2016-05-17 | Google Inc. | Browser-level background page for providing multiple views |
-
2012
- 2012-08-09 US US13/570,962 patent/US9342323B2/en not_active Expired - Fee Related
-
2013
- 2013-06-25 EP EP13737038.3A patent/EP2883136A1/en not_active Withdrawn
- 2013-06-25 CN CN201380048376.3A patent/CN104685466B/en active Active
- 2013-06-25 WO PCT/US2013/047551 patent/WO2014025467A1/en active Application Filing
- 2013-06-25 DE DE202013012499.7U patent/DE202013012499U1/en not_active Expired - Lifetime
-
2016
- 2016-05-06 US US15/148,551 patent/US10303750B2/en active Active
Also Published As
Publication number | Publication date |
---|---|
EP2883136A1 (en) | 2015-06-17 |
US20140047318A1 (en) | 2014-02-13 |
US20160253296A1 (en) | 2016-09-01 |
WO2014025467A1 (en) | 2014-02-13 |
US10303750B2 (en) | 2019-05-28 |
CN104685466A (en) | 2015-06-03 |
CN104685466B (en) | 2018-01-23 |
US9342323B2 (en) | 2016-05-17 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
DE202013012499U1 (en) | Browser-level background page for providing multiple views | |
DE60131683T2 (en) | METHOD AND SYSTEM FOR MANAGING MULTIPLE NETWORK OPERATING AGENTS | |
DE202011110891U1 (en) | Scroll in extensive hosted dataset | |
DE202011110880U1 (en) | Collaborative cursors in a hosted word processor | |
DE102013207608B4 (en) | Instrument software applications for their configuration | |
US11956327B2 (en) | Application logging framework | |
DE202011110867U1 (en) | Rich-text and browser-based word processor | |
DE202011110894U1 (en) | Server-based data sharing in computer applications | |
US10657313B2 (en) | Method and system for editing virtual documents | |
DE69817158T2 (en) | User interface mechanism for manipulating contexts in computer management applications | |
DE60116343T2 (en) | Web Server | |
DE202011110879U1 (en) | Rich content in a browser-based word processor | |
DE112016001737T5 (en) | Systems and procedures for notifying users of changes to files in cloud-based file storage systems | |
DE202015009254U1 (en) | AUTOMATICALLY GENERATING EXECUTION SEQUENCES FOR WORKFLOWS | |
DE112009000293T5 (en) | Automatic connections between application components | |
DE102013202782A1 (en) | Server-based web page design system that integrates dynamic layout and dynamic content | |
DE202016007901U1 (en) | Data flow - window and trigger function | |
DE112011105933T5 (en) | Methods and apparatus for dynamically customizing a virtual keyboard | |
DE10135445A1 (en) | Graphical refreshable web query creation method involves opening and loading web page into web query dialog box in spread sheet application program and sending selected object in displayed web page as web query in program | |
DE202013012500U1 (en) | Cross-system installation of online applications | |
DE202014010943U1 (en) | Switch to and from native web applications | |
DE202015009266U1 (en) | User interface for a storage system with floating file collection | |
DE202014010906U1 (en) | Device for two-dimensional document navigation | |
DE112008003965T5 (en) | Combining interfaces of shell applications and subapplications | |
JP2004342105A (en) | Portlet style conformity in pervasive agent |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
R207 | Utility model specification | ||
R150 | Utility model maintained after payment of first maintenance fee after three years | ||
R081 | Change of applicant/patentee |
Owner name: GOOGLE LLC (N.D.GES.D. STAATES DELAWARE), MOUN, USFree format text: FORMER OWNER: GOOGLE INC., MOUNTAIN VIEW, CALIF., US |
|
R082 | Change of representative |
Representative=s name: BETTEN & RESCH PATENT- UND RECHTSANWAELTE PART, DE |
|
R079 | Amendment of ipc main class |
Free format text: PREVIOUS MAIN CLASS: G06F0009440000Ipc: G06F0008380000 |
|
R081 | Change of applicant/patentee |
Owner name: GOOGLE LLC (N.D.GES.D. STAATES DELAWARE), MOUN, USFree format text: FORMER OWNER: GOOGLE LLC (N.D.GES.D. STAATES DELAWARE), MOUNTAIN VIEW, CALIF., US |
|
R082 | Change of representative |
Representative=s name: BETTEN & RESCH PATENT- UND RECHTSANWAELTE PART, DE |
|
R151 | Utility model maintained after payment of second maintenance fee after six years | ||
R152 | Utility model maintained after payment of third maintenance fee after eight years | ||
R071 | Expiry of right |
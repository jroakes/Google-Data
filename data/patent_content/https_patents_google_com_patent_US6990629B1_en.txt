US6990629B1 - Publishing system for intranet - Google Patents
Publishing system for intranet Download PDFInfo
- Publication number
- US6990629B1 US6990629B1 US10/030,956 US3095602A US6990629B1 US 6990629 B1 US6990629 B1 US 6990629B1 US 3095602 A US3095602 A US 3095602A US 6990629 B1 US6990629 B1 US 6990629B1
- Authority
- US
- United States
- Prior art keywords
- file
- html
- web page
- files
- xml
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/10—Office automation; Time management
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/10—Text processing
- G06F40/166—Editing, e.g. inserting or deleting
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99941—Database schema or data structure
- Y10S707/99943—Generating database or data structure, e.g. via user interface
Definitions
- the present invention is related to the field of electronic publishing systems.
- the present invention relates to the field of electronic publishing systems operating in an intranet environment.
- Netscape Publisher and Netscape Composer can be used to allow a client to edit HTML pages and then save them back on the server using the URL address of the source page.
- Netscape Publisher and Netscape Composer can be used to allow a client to edit HTML pages and then save them back on the server using the URL address of the source page.
- such systems lack additional features that make a publishing system most effective for the above-described type of application.
- a method of publishing information on a network-based computer system comprises the steps of: displaying a web page on a client computer, the web page including a plurality of sections with each of the sections containing content derived from an HTML file (or other source, e.g. LDAP or XML file) stored on a network server under a file address; editing the content of one of the sections of the web page under direction of a user on the client computer; and transmitting the edited section of the web page to the network server along with the file address corresponding to the HTML file from which said one of the sections derived its content, such that the edited section will be saved on the network server.
- HTML file or other source, e.g. LDAP or XML file
- the method preferably comprises the step of displaying a web page containing the edited section on a second client computer to a second user, and the file address under which the HTML files are preferably stored is a URL address.
- the editing step preferably comprises the steps of: identifying the section of the web page to be edited under direction of the user; retrieving a copy of the HTML file from which the section to be edited derived its content; and altering the content of the HTML file under direction of the user thereby generating an edited HTML file, wherein the edited HTML file is saved using the file address corresponding to the HTML file from which the section to be edited derived its content.
- the displaying step preferably comprises: receiving from a client computer an address for an XML template corresponding to the web page to be displayed; resolving from the XML template address for each of the plurality of HTML files that contain content for the sections of the web page; converting each of the plurality HTML files into an XML file, thereby generating a plurality of XML files; combining the plurality of XML files and generating therefrom an HTML output file representing the web page; and transmitting the HTML output file to a browser a application on the client computer.
- the combining step preferably comprises: placing each of the plurality of XML files in an appropriate location on the XML template thereby generating an XML output file; and applying an XSL transform file to the XML output file to generate the HTML output file.
- the XSL transform file is an XSL style sheet and together with the XML template are used to define the format, look & feel, and structuring of the web page.
- the web page preferably comprises a section containing content derived from an LDAP file.
- the method also preferably includes controlling the access to the network-based computer system using an LDAP directory server to define and limit the rights of authors and readers within the network.
- the content of the sections of the web page includes the following possible data types: text, tables, video, graphics, and sound.
- a method of publishing information on a network-based computer system comprising the steps of: transmitting an HTML output file to a browser on a client computer, the HTML output file defining a web page comprising a plurality of sections each of the sections containing content derived from an HTML source file stored on a network server under a file address; receiving an edited HTML file and an address from the client computer, the address corresponding to one of the HTML source files; and saving the edited HTML file on the file system using said corresponding address.
- the invention is also embodied in a system for publishing information on a network-based computer system
- a web server configured transmit an HTML output file to a browser on a client computer, the HTML output file defining a web page comprising a plurality of sections each of the sections containing content derived from an HTML source file stored on the web server under a file address, the web server also configured to receive an edited HTML file and an address from the client computer, the address corresponding to one of the HTML source files; and to save the edited HTML file on the file system using said corresponding address.
- a system for publishing information on a network-based computer system comprising a client computer configured to display to a user a web page, the web page comprising a plurality of sections each of the sections containing content derived from an HTML file stored on a network server under a file address, to editing the content of one of the sections of the web page under direction of the user on the client computer, and to transmit the edited section of the web page to the network server so as to be saved on the server using the file address corresponding to the HTML file from which said one of the sections derived its content.
- FIG. 1 shows the structure of a project workspace web site, according to a preferred embodiment of the invention
- FIG. 2 shows structure for publishing from different interfaces to the web server, according to a preferred embodiment of the invention
- FIG. 3 shows the structure for interfacing with a central corporate LDAP directory server, according to a preferred embodiment of the invention
- FIG. 4 is a flow chart showing steps involved in providing web page information to a browser, according to a preferred embodiment of the invention.
- FIG. 5 is a flow chart showing steps involved in editing and publishing content on a project workspace, according to a preferred embodiment
- FIG. 6 is a flow chart showing how a portion of a web page is retrieved for editing in step 254 of FIG. 5 , according to a preferred embodiment of the invention
- FIG. 7 is a flow chart showing how a portion of a web page is saved, or published, in step 258 of FIG. 5 , according to a preferred embodiment of the invention.
- FIG. 8 is an example of a web page from the project workspace, according to a preferred embodiment of the invention.
- a project workspace that scientists can use as a ‘working’ tool for project groups to communicate and share information (results, data, email, meeting-notes, reports, findings, conclusions, discussion summaries).
- the focus is on communicating and sharing ‘work-in-progress’ i.e. a live, working tool that helps scientists and other participants to interact.
- the project workspace can also be used for recording and archiving of project information.
- the project workspace is preferably a central store where people can obtain essential information such as: the project summary, the people involved, and report.
- the project workspace is preferably embodied in multiple web pages stored on a web server and viewable using a standard browser.
- FIG. 8 is an example of a web page from the project workspace, according to a preferred embodiment of the invention.
- the example shown in FIG. 8 is a home page for a sample research project.
- the web page 300 is shown displayed on a browser 110 .
- web page 300 comprises a number of separate sections 304 , 306 and 308 (shown with dotted line boxes).
- Each of the sections 306 and 308 contains a header, an edit button, and content.
- section 306 is a section entitled “news”.
- the header 310 identifies the section.
- an edit button 312 is provided that allows certain users to easily edit and then re-publish content. If the user clicks button 312 , the browser will retrieve the content of the section, in this case the text of the news section 306 . The user can then edit the text and then save, or publish, the edited text using a simple facility.
- the project workspace there are two primary types of users for the project workspace.
- scientists who internally within each project, use the project workspace as a working tool, at multiple locations. Managers and correspondents are also included in this category.
- the scientists would ordinarily be the ones entering, updating, organizing and viewing information. Thus the scientists would normally have authority to edit and publish new content on the projects web pages.
- the second category of users for the project workspace is anyone outside the project who wants to access the information, provided they're authorized to do so. This aspect of the project workspace is primarily for publicizing and information dissemination.
- the users outside the project also primarily access the system through a web browser.
- the project workspace supports popular browsers such as Microsoft Internet Explorer and Netscape Navigator.
- Preferred features of the project workspace include: a security system that works on a basis of pre-authorized access; a file system used to hold the Project Workspace data is a UNIX server such as a Solaris Server; security and access control based on Lightweight Directory Access Protocol (“LDAP”).
- LDAP Lightweight Directory Access Protocol
- Netscape Suitespot server is preferably used as the Web Server, and the primary HTML publishing tool is preferably Netscape Web Publisher.
- the project workspace interacts with a number of other systems and products that are already used by the users in the course of their jobs.
- these products include: Microsoft Office 95, MatLab, E-mail, Eudora 4, and Microsoft Outlook 98.
- Examples of the systems include: various back up systems, an LDAP personnel directory, and a company web site.
- Content in many formats can be used in the web pages within the project workspace.
- picture files can be handled: JPEG, GIF, and TIFF.
- Microsoft Office file can be handled: Word, Excel, and PowerPoint.
- HTML files can be used for Web pages, and the project workspace can also preferably use MatLab and Encapsulated PostScript (EPS) files.
- EPS MatLab and Encapsulated PostScript
- a standard left hand menu 304 is includes for following items: home, plan, slides, documents, people, previous news, discussion/email lists, and one or more optional user defined items.
- the project team is given authority to remove any unwanted items from left-hand menu.
- An activities web page has menu items that are added by the project group.
- Archive structure and page layout should be kept simple, in order to make it as easy as possible to enter and maintain information.
- the structure should preferably be as flat as possible and the titles of the standard sections should make sense to majority of users.
- the home page should be designed so as to be appealing to the users. Additionally, templates in HTML are provided for the standard sections.
- the home page 300 contains the following sections: news section 306 , highlights section 308 , a milestone section, and sections for risk analysis, project description, and the project objectives (not shown).
- the Home page should contain information targeted at the general user.
- the links from the Home page should access the sections that the user finds most useful.
- Another feature of the invention is that access to the home page for editing is controlled by the project team's own members.
- a people web page is provided that references information about individuals associated with the project. Typically, this shall include the individual's own professional home page when available, or alternatively, a corporate directory entry.
- a link to the people page is shown in the left-hand menu 304 of home page 300 .
- the people web page also preferably includes a section for team members and correspondents. Where the correspondent is an external company or person the People Section should point to the contact details of the correspondent.
- a news archive web page provides previous monthly reports that are archived for easy reference.
- the documents web page includes written information that is produced by the project.
- the documents and news archive web pages are easily accessible from the home page using the links in menu 304 .
- the discussion/email lists page provides access to an archive of email and/or discussion lists for the project.
- the email archive supports formatted messages (styled text) and MIME attachments.
- the users are able to create and delete email/discussion lists as required.
- the email lists may have a distribution list associated with them or may solely be provided for the purpose of archiving email.
- the users shall be able to define additional web pages as they are needed by the particular project.
- the publications web page preferably includes a facility that automatically generates the current publications from submissions to the corporate or site library. This feature automatically produces the content for a web page that can be included in the project workspace.
- a facility is also preferably provided that submits documents to project workspace via e-mail. For example, attachments to an email can be filed in the correct location of the archive.
- the project workspace web pages are quick and easy to edit and update.
- the user does not need to understand HTML, rather the editing of the Web site pages is preferably done via a WYSIWYG editor, such as Netscape Composer.
- more than one means is provided for publishing to the project workspace.
- the users can use drag and drop, Microsoft office documents, publishing via email can all be used to publish information on the project workspace.
- a forms-interface is provided for entering and editing a limited set items (i.e. the standard items for all projects) on the web site.
- documents are being added to the project workspace the users are prompted for additional meta data. The user does not need to take any further action after publishing to the project workspace for the web site to be updated.
- Desktop platforms support the moving and copying of files via a simple “Drag and Drop” procedure. Users on such desktops are able to use this facility to publish to the project workspace.
- a search facility is provided on the web pages of the project workspace. Users are able to easily search the project workspace for the particular project that they are currently browsing.
- a search engine is provided that indexes all files having textual content, e.g. PDF, text, HTML, MS Microsoft Office.
- an advanced search facility is provided searches against other meta data.
- Usage Indicators are also preferably provided.
- An automatically generated “what's new” function lists what has been added to the archive in a given timeframe.
- Access log analysis tools allow users to report on the usage of the Project Workspace down to the level of individual pages.
- a lab notebook style record keeping facility is provided.
- the project workspace thus advantageously provides an easy way of capturing laboratory notes and data.
- the project workspace also provides a facility for publishing mathematical equations in a convenient and readily used format.
- the project workspace is designed to work well with at least one widely available WYSIWYG HTML editor.
- Examples of popular HTML editors are: Microsoft FrontPage, Netscape Composer, SoftQuad HoTMetaL. As will be discussed below, the currently preferred HTML editor is Netscape Composer.
- the project workspace allows for the easy classification of work-in-progress material, so that such work can be either hidden or annotated appropriately.
- material that is classified as ‘work in progress’ is available only to a group that is defined by the material provider.
- the project workspace is preferably sited on the company's Intranet. This ordinarily provides the bandwidth needed for the facility. If desktops computers are already deployed, as is typically the case, those computers should be used as the platform for the web browsers.
- a feature is provided that makes it possible to view in the form of a list which people have been granted the right to access an individual project's workspace.
- the link to a people page is provided in menu 304 .
- the leader of each project is ordinarily given authority to add and delete users and groups from the project access list.
- Certain areas of the project workspace, and certain projects can be designated “Company Only”, so that access by those outside the company is forbidden.
- a pointer to protected documents can be displayed to non-authorized people doing searches, even though access to the protected document is denied.
- Help pages for each function and standard page in the project workspace are provided. These help pages are designed to be user friendly. Also, a user question and feedback facility is preferably provided within the web.
- XML is the ‘Extensible Mark-up Language’ (extensible because it is not a fixed format like HTML) and is a data format for structured document interchange on the Web. It is designed to enable the use of SGML on the World Wide Web. XML allows the designer to build sites that bring information together from several sources.
- XML has many features that allow tasks involved with the project workspace to be automated.
- One example will be the display of the highlights section 308 . These highlights are used in a few places but different views of them are needed. On the front page 300 , for example, only the last months highlights may need to be displayed. All the monthly highlights for the project can be combined in another page, giving a combined highlights page.
- Each web page has an associated XML template.
- This template defines the content that builds the page.
- This template contains links to the other documents, page titles and other information that is needed to build the page.
- the content in the template is ‘wrapped’ in XML tags and these are then matched with an XSL style sheet.
- the XML files do not contain any HTML, all the HTML is in the XSL template file.
- Extensible Stylesheet Language is a language for expressing stylesheets. It consists of two parts:
- An XSL stylesheet specifies the presentation of a class of XML documents by describing how an instance of the class is transformed into an XML document that uses the formatting vocabulary.
- HTTP is preferred over FTP for use in the project workspace.
- Using the ‘put’ command in the HTTP protocol has a number of advantages over FTP.
- the address' of the file is as shown in the URL, this is not the same as the host machines directory structure which is what needs to be known when using FTP.
- the servlet API is a generic extension mechanism for Web servers in the same way that the CGI interface was intended to be. It only supports Java however, which marks it out in this sense from CGI.
- Servlet technology is preferably used for the project workspace. This includes integration with LDAP for group and mailing list management (using Sun's JNDI), dynamic generation of HTML using XML and XSL, and content management (using the Netscape Web Publisher Java client library). Further detail on designing such servlets is provided below.
- FIG. 1 shows the structure of a project workspace web site, according to a preferred embodiment of the invention.
- the site is constructed using a number of products to deliver specific functionality via selected technologies.
- the project workspace web site has a structure that is constructed out of XML templates using XSL style sheets.
- FIG. 1 shows how the different servers and servlets are configured to build the web pages.
- Web browser 110 is shown displaying a web page to a user.
- Server 128 includes standard web server application software 112 .
- the server software is preferably Netscape Enterprise since the Publisher plug-in and the Composer functionality are readily available.
- server application software could be used if similar functionality is provided.
- Microsoft IIS, or Apache software available from Apache.org could be used for server software 112 .
- Server application software 112 provides access to HTML style sheets in Cascading Style Sheet (CSS) format which can be referenced by browser 110 .
- Web server 128 also includes three servlets for parsing, and converting HTML to XML, and LDAP to XML files.
- HTML to XML servlet 122 provides a means of transforming HTML content files 124 stored on server 128 into a valid XML document conforming to the XHTML specification.
- the servlet takes as input a reference to an HTML document available on the local file system. This document is read and, using a freely available HTML parser, converted into a Document Object Model (“DOM”) representation. This DOM document is then output again as an XML document conforming to the XHTML specification.
- DOM Document Object Model
- LDAP to XML servlet 130 retrieves LDAP content from an external LDAP server 140 , and converts the LDAP content into XML format.
- Servlet 130 provides a query interface to an LDAP directory returning an XML document as the response.
- the servlet takes as input a query in the standard LDAP query format.
- J2EE JNDI API it sends the query to a named LDAP server and retrieves the response.
- the LDAP response is transformed into an XML document which is returned as the response of the servlet.
- Parser servlet 114 retrieves XML templates 120 , fetches XML files from the from servlets 122 and 130 (i.e. the XML content rendered by the servlets 122 and 130 ), places the XML files in appropriate locations in the XML template, and applies XSL transform files 116 to the parsed XML template to generate HTML formatted files.
- Parser servlet 114 provides a web interface to transforming an XML document using an XSL-T processor. Parser servlet 114 takes as input a URL specifying a XML document either via a common file name extension or as part of the URL path or query string, and optionally an XSL-T file name.
- the servlet will look for a reference to a file in the input XML document.
- the input XML document is parsed into a DOM representation and the XSL-T transform is then applied.
- the output of the transform is returned as the response of the servlet.
- FIG. 4 is a flow chart showing steps involved in providing web page information to a browser, according to a preferred embodiment of the invention.
- the structure shown in FIG. 1 is preferably used to provide the functionality shown in FIG. 4 , and thus reference will be made to the structural elements shown in FIG. 1 .
- browser 110 requests a web page using an address for an XML template. This request is normally itself in response to a mouse click by a user for a particular web page of the project workspace.
- the XML address is preferably a URL address to an XML template 120 stored on web server 128 .
- the XML template corresponding to the URL address is transferred to the parser servlet 114 .
- parser servlet 114 resolves the pointers to various URLs that contain content for the requested web page. These URLs are normally addresses to HTML files in the case of most content used in the project workspace. The required content for the web page could also be from other sources, however. For example, LDAP content may be needed for the “people” or “contact” type web pages in the project workspace.
- the parser servlet requests the HTML files from HTML to XML servlet 122 .
- servlet 114 makes the request to LDAP to XML servlet 130 .
- HTML to XML servlet 122 retrieves the HTML file (or files), converts the HTML content into XML format and sends the XML formatted content to parser servlet.
- the LDAP to XML servlet 130 retrieves the LDAP content, converts it to XML format, and sends the XML formatted content to parser servlet 114 .
- parser servlet 114 places the XML file(s) from servlets 122 and 130 in appropriate locations in the XML template, thereby generating an XML file containing the require content.
- parser servlet 114 applies XSL-T transform file (shown in FIG. 1 as XSL-T style sheet 116 ) to the XML file, thereby generating an HTML formatted file.
- step 214 the HTML formatted file generated in step 212 is returned to browser 110 through server application 112 .
- step 216 browser 110 fetches basic formatting information (such as color) from HTML style sheet 118 in CSS format.
- step 218 browser 110 displays the web page as the HTML formatted file in accordance with style sheet 118 .
- the XSL-T transform file defines much of the format, structuring, layout, banners, headings, icons (such as the edit icon, describe below), and look and feel of the web page (other than the colors and fonts, which are normally defined by the HTML style sheet in CSS format).
- Using the XSL-T transform in this way allows for uniformity in these attributes (format, structuring, look and feel, etc) across all the web pages in the project workspace; it also becomes quite easy to make uniform changes to all the web pages.
- a separate XSL-T transform file can be used for each type of web page. However, according to a preferred embodiment, a single XSL-T transform file is used to define all of the web pages in the project workspace.
- FIG. 2 shows structure for publishing from different interfaces to the web server, according to a preferred embodiment of the invention.
- the types of interfaces shown for browser 110 are publishing from within Netscape Composer 152 , bespoke form interface 154 , and Netscape Java Client interface 150 .
- Netscape Composer 152 available from Netscape is the preferred interface method for editing HTML content for sections of web pages in the project workspace.
- the user can use Netscape Composer as part of the browser software on the client's computer to edit content on a web page a then use an “HTTP put” command to store the edited content on the web server.
- Web server 128 shown by the dashed line.
- the web server 128 includes (in addition to what is shown in FIG. 1 ), a publisher plug-in 144 , and file system 142 and a publisher servlet 156 .
- Server application 112 includes a publisher module to save the edited content to the file system 142 .
- a commercially available module is used, such as the Netscape Publisher plug-in 144 .
- Publisher servlet 156 that allows for the improved control over file management access by the users.
- user is able to edit and then publish a single section or portion of a web page.
- This feature allows for much simplified management of the project workspace web pages.
- the layout can be made more user friendly.
- web page 300 is divided into multiple sections 306 , 308 , and 304 . Editing of the web page is much simpler for a single section of the web page, than it would be for editing the entire web page.
- splitting the web page into multiple sections allows for a user friendly presentation, and providing editing capability for each section separately allows for user friendly content maintenance. It has been found that project team members can easily maintain their own project web pages using these editing features.
- the edit and republish task of a section of a web page consists of retrieving a text version of the section, editing the text using a text editor, and then saving or writing the edited text on the web server at the appropriate location.
- These tasks are preferably and simply accomplished using the structure shown in the preferred embodiment of FIGS. 1 and 2 , and in the discussion of the other figures herein, the reference numbers used refer to the appropriate structures shown in FIGS. 1 and 2 .
- the Netcape Java client interface 150 can be used to provide the users with many other features, including file management functionality the content stored on file system 142 . However, it has been found that for file management a forms-based system is preferred due to the increased simplicity and ease of use for the project team members.
- HTML forms interface 154 is used for file management by the users.
- Publisher servlet 156 provides an HTML forms-based interface to the functionality of the Netscape Publisher plug-in 144 .
- Servlet 156 uses the Netscape Publisher client library written in Java to provide access to all the Netscape server publisher plug-in functionality. This includes the ability to list and browse the Web directory hierarchy, upload, move, rename and delete files, turn file locking on and off, enable or disable versioning of a file and view file and folder attributes including version information.
- the servlet provides two interfaces, referred to as simple and complete, where the simple interface provides a subset of the functionality provided by the complete interface.
- FIG. 5 is a flow chart showing steps involved in editing and publishing content on a project workspace, according to a preferred embodiment.
- the user views a web page from the project workspace as in described in connection with FIG. 4 .
- the user identifies one particular section of the web page he wishes to edit. For example, the user may wish to edit and add content to the “News” section 306 of home page 300 of the workspace for a project he is working on.
- the user selects section 306 by clicking a special edit icon 312 shown on header 310 .
- Edit icon 312 is a URL address pointer to the HTML file 124 that contains the content for section 306 .
- FIG. 1 the example shown in FIG.
- the edit icon is in the form of a yellow wooden pencil, signifying to the user to capability to easily erase and add new content.
- browser retrieves the text version of the section to be edited. As will be described in greater detail, the browser does this by issuing a request to the web server.
- the user edits the text version of the section of the web page. The user preferably uses a commercial application for this, preferably Netscape Composer 152 running on browser 110 .
- the new version of the text is saved at an appropriate location on the web server, step 258 .
- FIG. 6 is a flow chart showing how a portion of a web page is retrieved for editing in step 254 of FIG. 5 , according to a preferred embodiment of the invention.
- browser 110 issues a request to web server 128 for part of a web page. The request is done using the URL pointer to the XML template 120 for the web page containing the section to be edited. As mentioned the URL pointer is associated with an edit icon (e.g. icon 312 on FIG. 8 ).
- the server application 112 simply fetches the HTML file 124 directly using the URL pointer. Since the file 124 is already in HTML format, and since the content of only one section is provided, the servlets 114 and 122 are not used. The server then passes the HTML file to browser 110 for viewing and editing.
- FIG. 7 is a flow chart showing how a portion of a web page is saved, or published, in step 258 of FIG. 5 , according to a preferred embodiment of the invention.
- browser 110 sends the edited HTML file to web server 128 using an “HTTP Put” command using the URL address associated with the section of the web page being edited.
- web server 128 then used Netscape Publisher plug-in 144 to save the edited HTML file to file system 142 .
- file is saved to file system 142 preferably via an RCS interface, and uses the URL address identified by browser 110 .
- using the same URL for retrieving the content to be edited and saving the edited content makes the editing and publishing features extremely simple and easy to use.
- FIG. 3 shows the structure for interfacing with a central corporate LDAP directory server, according to a preferred embodiment of the invention.
- User authentication in the project workspace is preferably accomplished via a corporate LDAP directory server 140 .
- Each project has groups of individuals defined in the LDAP directory 140 and ACL (Access Control List) lists on the web server 128 for read and write access.
- ACL Access Control List
- a user's computer 162 accesses the workspace for a project server application 112 authenticates the user against the corresponding list in LDAP directory 114 and then uses the ACL to decide what access rights the user has.
- directory database 160 is accessible via LDAP directory server 140 .
- FIG. 3 also shows another user's computer 168 that can create and edit mail groups via the LDAP directory server 140 .
- Server 164 is which also can access LDAP server 140 could be, for example, another web server for a project workspace for a corporate research facility other than that served by web server 128 .
- Each project has a people web page as part of the project's project workspace.
- the membership listed on this web page is preferably controlled via the LDAP services.
- Each LDAP group preferably has an owner who is designated as the project manager.
- the project manager via an HTML forms interface controls the membership of the groups and thereby controls the access to the particular project's web pages.
- the project teams can manage their own access rights This contributes to the ease of maintenance of the preferred project workspace system.
Abstract
Description
-
- 1. a language for transforming XML documents, and
- 2. an XML vocabulary for specifying formatting semantics.
Claims (25)
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
GBGB9917554.9A GB9917554D0 (en) | 1999-07-27 | 1999-07-27 | Publishing system for intranet |
PCT/GB2000/002844 WO2001008044A2 (en) | 1999-07-27 | 2000-07-27 | Publishing system for intranet |
Publications (1)
Publication Number | Publication Date |
---|---|
US6990629B1 true US6990629B1 (en) | 2006-01-24 |
Family
ID=10857972
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/030,956 Expired - Fee Related US6990629B1 (en) | 1999-07-27 | 2000-07-27 | Publishing system for intranet |
Country Status (4)
Country | Link |
---|---|
US (1) | US6990629B1 (en) |
AU (1) | AU6170900A (en) |
GB (2) | GB9917554D0 (en) |
WO (1) | WO2001008044A2 (en) |
Cited By (43)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020184266A1 (en) * | 2001-05-31 | 2002-12-05 | Blessin Stephen W. | Universal file format for products that allows both parametric and textual searching |
US20050229252A1 (en) * | 2004-04-07 | 2005-10-13 | Rogerson Dale E | In-place content substitution via code-invoking link |
US20050228781A1 (en) * | 2004-04-07 | 2005-10-13 | Sridhar Chandrashekar | Activating content based on state |
US20050229101A1 (en) * | 2003-01-24 | 2005-10-13 | Matveyenko Wade A | Remote web site editing in a web browser without external client software |
US20060095835A1 (en) * | 2004-11-01 | 2006-05-04 | William Kennedy | System and method for the modular generation of markup language |
US20060143562A1 (en) * | 2004-12-29 | 2006-06-29 | Andreas Seurig | Self-describing editors for browser-based WYSIWYG XML/HTML editors |
US20080016501A1 (en) * | 2001-06-28 | 2008-01-17 | Microsoft Corporation | System and Related Methods for Accessing Management Functionality Through a Command Line Utility |
US20080195950A1 (en) * | 2004-11-12 | 2008-08-14 | Justsystems Corporation | Document Processing Device and Document Processing Method |
US20090043798A1 (en) * | 2000-09-08 | 2009-02-12 | Dean Tan | Techniques for automatically developing a web site |
US20090070666A1 (en) * | 2007-09-12 | 2009-03-12 | Vistaprint Technologies Limited | System and Methods for Displaying User Modifiable Server-Rendered Images |
US20090319669A1 (en) * | 2006-08-23 | 2009-12-24 | Cyberstaton, Inc. | Method and device for editing web contents by url conversion |
US20090320119A1 (en) * | 2008-06-20 | 2009-12-24 | Wetpaint.Com, Inc. | Extensible content service for attributing user-generated content to authored content providers |
US20100014512A1 (en) * | 2004-08-04 | 2010-01-21 | Panasonic Corporation | Ip telephone system and calling method |
US20100088270A1 (en) * | 2008-10-03 | 2010-04-08 | Carsten Ziegler | Data versioning concept including time dependency and active and inactive states |
US20100174930A1 (en) * | 2009-01-05 | 2010-07-08 | Samsung Electronics Co., Ltd. | Mobile device having organic light emitting display and related display method for power saving |
US7809858B1 (en) | 2003-10-21 | 2010-10-05 | Adobe Systems Incorporated | Cross-protocol URL mapping |
US7877488B1 (en) | 2003-10-21 | 2011-01-25 | Adobe Systems Incorporated | Automatic set up for editing a web site |
US7904570B1 (en) * | 2004-12-21 | 2011-03-08 | Adobe Systems Incorporated | Configurable file placement |
US7921360B1 (en) | 2003-10-21 | 2011-04-05 | Adobe Systems Incorporated | Content-restricted editing |
US7941748B1 (en) | 2003-10-21 | 2011-05-10 | Adobe Systems Incorporated | Systems and methods for web site editing interfaces |
US20110138293A1 (en) * | 2000-11-29 | 2011-06-09 | Dov Koren | Providing Alerts in an Information-Sharing Computer-Based Service |
US8046708B1 (en) * | 2003-08-07 | 2011-10-25 | The Mathworks, Inc. | Reversed links from graphical diagram representation |
US20120072821A1 (en) * | 2009-04-06 | 2012-03-22 | Anthony Bowling | Document editing method |
US20120331377A1 (en) * | 2009-03-04 | 2012-12-27 | Microsoft Corporation | Content Rendering on a Computer |
US20130117351A1 (en) * | 2011-11-09 | 2013-05-09 | Cellco Partnership D/B/A Verizon Wireless | Efficient transfer of web content to different user platforms |
US20140237087A1 (en) * | 2013-02-19 | 2014-08-21 | Red Hat, Inc. | Service pool for multi-tenant applications |
US8949792B2 (en) | 2009-08-18 | 2015-02-03 | Adobe Systems Incorporated | Methods and systems for data service development |
US9189244B2 (en) * | 2009-08-18 | 2015-11-17 | Adobe Systems Incorporated | Methods and systems for managing data service specifications |
US9385979B1 (en) * | 2012-03-23 | 2016-07-05 | Google Inc. | Customizing posts by activity type and client type |
US20180248864A1 (en) * | 2000-08-31 | 2018-08-30 | Sony Corporation | Method of using server, server reservation control apparatus and program storage medium |
US10326858B2 (en) | 2017-05-23 | 2019-06-18 | Cdk Global, Llc | System and method for dynamically generating personalized websites |
US10332068B2 (en) | 2016-04-21 | 2019-06-25 | Cdk Global, Llc | Systems and methods for stocking an automobile |
US10482475B2 (en) | 2011-02-10 | 2019-11-19 | Adp Dealer Services, Inc. | Systems and methods for providing targeted advertising |
US10853769B2 (en) | 2016-04-21 | 2020-12-01 | Cdk Global Llc | Scheduling an automobile service appointment in a dealer service bay based on diagnostic trouble codes and service bay attributes |
US10867285B2 (en) | 2016-04-21 | 2020-12-15 | Cdk Global, Llc | Automatic automobile repair service scheduling based on diagnostic trouble codes and service center attributes |
US11080734B2 (en) | 2013-03-15 | 2021-08-03 | Cdk Global, Llc | Pricing system for identifying prices for vehicles offered by vehicle dealerships and other entities |
US11080105B1 (en) | 2020-11-18 | 2021-08-03 | Cdk Global, Llc | Systems, methods, and apparatuses for routing API calls |
US11190608B2 (en) | 2018-03-21 | 2021-11-30 | Cdk Global Llc | Systems and methods for an automotive commerce exchange |
US11501351B2 (en) | 2018-03-21 | 2022-11-15 | Cdk Global, Llc | Servers, systems, and methods for single sign-on of an automotive commerce exchange |
US11514021B2 (en) | 2021-01-22 | 2022-11-29 | Cdk Global, Llc | Systems, methods, and apparatuses for scanning a legacy database |
US11562043B1 (en) * | 2021-10-29 | 2023-01-24 | Shopify Inc. | System and method for rendering webpage code to dynamically disable an element of template code |
US11803535B2 (en) | 2021-05-24 | 2023-10-31 | Cdk Global, Llc | Systems, methods, and apparatuses for simultaneously running parallel databases |
US11983145B2 (en) | 2022-08-31 | 2024-05-14 | Cdk Global, Llc | Method and system of modifying information on file |
Families Citing this family (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
GB9917554D0 (en) | 1999-07-27 | 1999-09-29 | Schlumberger Holdings | Publishing system for intranet |
SE522384C2 (en) * | 2001-03-21 | 2004-02-03 | Labino Patent Ab | Programming procedure and mechanism for managing HTML documents |
Citations (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5732219A (en) | 1995-03-17 | 1998-03-24 | Vermeer Technologies, Inc. | Computer system and computer-implemented process for remote editing of computer files |
WO1998018087A1 (en) | 1996-10-18 | 1998-04-30 | British Telecommunications Public Limited Company | Data transmission and editing |
US5778367A (en) | 1995-12-14 | 1998-07-07 | Network Engineering Software, Inc. | Automated on-line information service and directory, particularly for the world wide web |
US5870552A (en) | 1995-03-28 | 1999-02-09 | America Online, Inc. | Method and apparatus for publishing hypermedia documents over wide area networks |
WO2001008044A2 (en) | 1999-07-27 | 2001-02-01 | Schlumberger Holdings Limited | Publishing system for intranet |
US6418446B1 (en) * | 1999-03-01 | 2002-07-09 | International Business Machines Corporation | Method for grouping of dynamic schema data using XML |
US6463440B1 (en) * | 1999-04-08 | 2002-10-08 | International Business Machines Corporation | Retrieval of style sheets from directories based upon partial characteristic matching |
US6507856B1 (en) * | 1999-01-05 | 2003-01-14 | International Business Machines Corporation | Dynamic business process automation system using XML documents |
-
1999
- 1999-07-27 GB GBGB9917554.9A patent/GB9917554D0/en not_active Ceased
-
2000
- 2000-07-27 US US10/030,956 patent/US6990629B1/en not_active Expired - Fee Related
- 2000-07-27 WO PCT/GB2000/002844 patent/WO2001008044A2/en active Application Filing
- 2000-07-27 AU AU61709/00A patent/AU6170900A/en not_active Abandoned
- 2000-07-27 GB GB0129810A patent/GB2366429B/en not_active Expired - Lifetime
Patent Citations (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5732219A (en) | 1995-03-17 | 1998-03-24 | Vermeer Technologies, Inc. | Computer system and computer-implemented process for remote editing of computer files |
US5870552A (en) | 1995-03-28 | 1999-02-09 | America Online, Inc. | Method and apparatus for publishing hypermedia documents over wide area networks |
US5778367A (en) | 1995-12-14 | 1998-07-07 | Network Engineering Software, Inc. | Automated on-line information service and directory, particularly for the world wide web |
WO1998018087A1 (en) | 1996-10-18 | 1998-04-30 | British Telecommunications Public Limited Company | Data transmission and editing |
US6507856B1 (en) * | 1999-01-05 | 2003-01-14 | International Business Machines Corporation | Dynamic business process automation system using XML documents |
US6418446B1 (en) * | 1999-03-01 | 2002-07-09 | International Business Machines Corporation | Method for grouping of dynamic schema data using XML |
US6463440B1 (en) * | 1999-04-08 | 2002-10-08 | International Business Machines Corporation | Retrieval of style sheets from directories based upon partial characteristic matching |
WO2001008044A2 (en) | 1999-07-27 | 2001-02-01 | Schlumberger Holdings Limited | Publishing system for intranet |
Non-Patent Citations (5)
Title |
---|
Dirking, B. "Info Access Announces the Virtual Webmaster(TM)". http://www.infoaccess.com/betamain/HT49903.htm (1999), pp. 1-2. |
Goossens, M. "Clean up your Web Pages with HTML 'tidy'". http://consult.cern.ch/cnls/234/Pr/art<SUB>-</SUB>tidy.html (Feb. 2, 2000), pp. 1-4. |
Johnson, M. "XML for the Absolute Beginner". http://www.javaworld.com/javaworld/jw-04-1999/f<SUB>-</SUB>jw-04-xml-p.html (Apr. 1999), pp. 1-25. |
Karpinski, R. "Standards Help Blur Distinctions in Browsers". http://www.internetwk.com/news1198/news110698-7.htm (Nov. 6, 1998), pp. 1-4. |
Nelson, M. "DataChannel integrates XSA". http://www.infoworld.com/cgi-bin/displayArchive.pl?/98/45/i08-45.66.htm (Nov. 9, 1998, vol. 20, Issue 45), pp. 1. |
Cited By (62)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9047322B2 (en) | 1999-01-29 | 2015-06-02 | Oracle International Corporation | Techniques for automatically discovering a database device on a network |
US20110173156A1 (en) * | 1999-01-29 | 2011-07-14 | Oracle International Corporation | Techniques for automatically discovering a database device on a network |
US20180248864A1 (en) * | 2000-08-31 | 2018-08-30 | Sony Corporation | Method of using server, server reservation control apparatus and program storage medium |
US8321457B2 (en) * | 2000-09-08 | 2012-11-27 | Oracle International Corporation | Techniques for automatically developing a web site |
US20090043798A1 (en) * | 2000-09-08 | 2009-02-12 | Dean Tan | Techniques for automatically developing a web site |
US20110138293A1 (en) * | 2000-11-29 | 2011-06-09 | Dov Koren | Providing Alerts in an Information-Sharing Computer-Based Service |
US7171418B2 (en) * | 2001-05-31 | 2007-01-30 | Caterpillar Inc | Universal file format for products that allows both parametric and textual searching |
US20020184266A1 (en) * | 2001-05-31 | 2002-12-05 | Blessin Stephen W. | Universal file format for products that allows both parametric and textual searching |
US20080016501A1 (en) * | 2001-06-28 | 2008-01-17 | Microsoft Corporation | System and Related Methods for Accessing Management Functionality Through a Command Line Utility |
US7676815B2 (en) * | 2001-06-28 | 2010-03-09 | Microsoft Corporation | System and related methods for accessing management functionality through a command line utility |
US20050229101A1 (en) * | 2003-01-24 | 2005-10-13 | Matveyenko Wade A | Remote web site editing in a web browser without external client software |
US7624342B2 (en) * | 2003-01-24 | 2009-11-24 | The Cobalt Group, Inc. | Remote web site editing in a web browser without external client software |
US8046708B1 (en) * | 2003-08-07 | 2011-10-25 | The Mathworks, Inc. | Reversed links from graphical diagram representation |
US9110570B1 (en) | 2003-08-07 | 2015-08-18 | The Mathworks, Inc. | Reversed links from graphical diagram representation |
US7921360B1 (en) | 2003-10-21 | 2011-04-05 | Adobe Systems Incorporated | Content-restricted editing |
US9953098B2 (en) | 2003-10-21 | 2018-04-24 | Adobe Systems Incorporated | Methods and systems for website editing |
US7809858B1 (en) | 2003-10-21 | 2010-10-05 | Adobe Systems Incorporated | Cross-protocol URL mapping |
US7877488B1 (en) | 2003-10-21 | 2011-01-25 | Adobe Systems Incorporated | Automatic set up for editing a web site |
US7941748B1 (en) | 2003-10-21 | 2011-05-10 | Adobe Systems Incorporated | Systems and methods for web site editing interfaces |
US20050229252A1 (en) * | 2004-04-07 | 2005-10-13 | Rogerson Dale E | In-place content substitution via code-invoking link |
US7822992B2 (en) | 2004-04-07 | 2010-10-26 | Microsoft Corporation | In-place content substitution via code-invoking link |
US7890744B2 (en) * | 2004-04-07 | 2011-02-15 | Microsoft Corporation | Activating content based on state |
US20050228781A1 (en) * | 2004-04-07 | 2005-10-13 | Sridhar Chandrashekar | Activating content based on state |
US7944912B2 (en) * | 2004-08-04 | 2011-05-17 | Panasonic Corporation | IP telephone system and calling method |
US20100014512A1 (en) * | 2004-08-04 | 2010-01-21 | Panasonic Corporation | Ip telephone system and calling method |
US20060095835A1 (en) * | 2004-11-01 | 2006-05-04 | William Kennedy | System and method for the modular generation of markup language |
US7802181B2 (en) * | 2004-11-12 | 2010-09-21 | Justsystems Corporation | Document processing device and document processing method |
US20080195950A1 (en) * | 2004-11-12 | 2008-08-14 | Justsystems Corporation | Document Processing Device and Document Processing Method |
US7904570B1 (en) * | 2004-12-21 | 2011-03-08 | Adobe Systems Incorporated | Configurable file placement |
US20060143562A1 (en) * | 2004-12-29 | 2006-06-29 | Andreas Seurig | Self-describing editors for browser-based WYSIWYG XML/HTML editors |
US20090319669A1 (en) * | 2006-08-23 | 2009-12-24 | Cyberstaton, Inc. | Method and device for editing web contents by url conversion |
US8914461B2 (en) * | 2006-08-23 | 2014-12-16 | Cyberstation, Inc. | Method and device for editing web contents by URL conversion |
US7996756B2 (en) * | 2007-09-12 | 2011-08-09 | Vistaprint Technologies Limited | System and methods for displaying user modifiable server-rendered images |
US20090070666A1 (en) * | 2007-09-12 | 2009-03-12 | Vistaprint Technologies Limited | System and Methods for Displaying User Modifiable Server-Rendered Images |
US8516366B2 (en) * | 2008-06-20 | 2013-08-20 | Wetpaint.Com, Inc. | Extensible content service for attributing user-generated content to authored content providers |
US20090320119A1 (en) * | 2008-06-20 | 2009-12-24 | Wetpaint.Com, Inc. | Extensible content service for attributing user-generated content to authored content providers |
US20100088270A1 (en) * | 2008-10-03 | 2010-04-08 | Carsten Ziegler | Data versioning concept including time dependency and active and inactive states |
US20100174930A1 (en) * | 2009-01-05 | 2010-07-08 | Samsung Electronics Co., Ltd. | Mobile device having organic light emitting display and related display method for power saving |
US20120331377A1 (en) * | 2009-03-04 | 2012-12-27 | Microsoft Corporation | Content Rendering on a Computer |
US9047261B2 (en) * | 2009-04-06 | 2015-06-02 | Anthony Bowling | Document editing method |
US20120072821A1 (en) * | 2009-04-06 | 2012-03-22 | Anthony Bowling | Document editing method |
US9189244B2 (en) * | 2009-08-18 | 2015-11-17 | Adobe Systems Incorporated | Methods and systems for managing data service specifications |
US8949792B2 (en) | 2009-08-18 | 2015-02-03 | Adobe Systems Incorporated | Methods and systems for data service development |
US10482475B2 (en) | 2011-02-10 | 2019-11-19 | Adp Dealer Services, Inc. | Systems and methods for providing targeted advertising |
US20130117351A1 (en) * | 2011-11-09 | 2013-05-09 | Cellco Partnership D/B/A Verizon Wireless | Efficient transfer of web content to different user platforms |
US9208253B2 (en) * | 2011-11-09 | 2015-12-08 | Cellco Partnership | Efficient transfer of web content to different user platforms |
US9385979B1 (en) * | 2012-03-23 | 2016-07-05 | Google Inc. | Customizing posts by activity type and client type |
US9854047B2 (en) * | 2013-02-19 | 2017-12-26 | Red Hat, Inc. | Service pool for multi-tenant applications |
US20140237087A1 (en) * | 2013-02-19 | 2014-08-21 | Red Hat, Inc. | Service pool for multi-tenant applications |
US11080734B2 (en) | 2013-03-15 | 2021-08-03 | Cdk Global, Llc | Pricing system for identifying prices for vehicles offered by vehicle dealerships and other entities |
US10332068B2 (en) | 2016-04-21 | 2019-06-25 | Cdk Global, Llc | Systems and methods for stocking an automobile |
US10853769B2 (en) | 2016-04-21 | 2020-12-01 | Cdk Global Llc | Scheduling an automobile service appointment in a dealer service bay based on diagnostic trouble codes and service bay attributes |
US10867285B2 (en) | 2016-04-21 | 2020-12-15 | Cdk Global, Llc | Automatic automobile repair service scheduling based on diagnostic trouble codes and service center attributes |
US10326858B2 (en) | 2017-05-23 | 2019-06-18 | Cdk Global, Llc | System and method for dynamically generating personalized websites |
US11190608B2 (en) | 2018-03-21 | 2021-11-30 | Cdk Global Llc | Systems and methods for an automotive commerce exchange |
US11501351B2 (en) | 2018-03-21 | 2022-11-15 | Cdk Global, Llc | Servers, systems, and methods for single sign-on of an automotive commerce exchange |
US11616856B2 (en) | 2018-03-21 | 2023-03-28 | Cdk Global, Llc | Systems and methods for an automotive commerce exchange |
US11080105B1 (en) | 2020-11-18 | 2021-08-03 | Cdk Global, Llc | Systems, methods, and apparatuses for routing API calls |
US11514021B2 (en) | 2021-01-22 | 2022-11-29 | Cdk Global, Llc | Systems, methods, and apparatuses for scanning a legacy database |
US11803535B2 (en) | 2021-05-24 | 2023-10-31 | Cdk Global, Llc | Systems, methods, and apparatuses for simultaneously running parallel databases |
US11562043B1 (en) * | 2021-10-29 | 2023-01-24 | Shopify Inc. | System and method for rendering webpage code to dynamically disable an element of template code |
US11983145B2 (en) | 2022-08-31 | 2024-05-14 | Cdk Global, Llc | Method and system of modifying information on file |
Also Published As
Publication number | Publication date |
---|---|
GB2366429B (en) | 2004-04-14 |
WO2001008044A2 (en) | 2001-02-01 |
AU6170900A (en) | 2001-02-13 |
GB9917554D0 (en) | 1999-09-29 |
GB2366429A (en) | 2002-03-06 |
GB0129810D0 (en) | 2002-01-30 |
GB2366429A8 (en) | 2002-07-02 |
WO2001008044A3 (en) | 2002-06-13 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US6990629B1 (en) | Publishing system for intranet | |
US8171387B2 (en) | Method of and system for collaboration web-based publishing | |
JP5710102B2 (en) | Adaptive content platform and application integration with the platform | |
US7246316B2 (en) | Methods and apparatus for automatically generating presentations | |
US7747941B2 (en) | Webpage generation tool and method | |
US7971144B2 (en) | Adaptive content platform and method of using same | |
US6996780B2 (en) | Method and system for creating a place type to be used as a template for other places | |
Roscheisen et al. | Shared Web annotations as a platform for third-party value-added, information providers: architecture, protocols, and usage examples | |
US20040088647A1 (en) | Web-based XML document processing system | |
US8260770B2 (en) | Systems and methods for an extensible business application framework | |
EP1766539B1 (en) | Data compilation apparatus and method | |
US20050262439A1 (en) | Automatic web publishing | |
US8225202B2 (en) | Connected templates in connection with a content management server system or the like | |
JP2006178949A (en) | Management and use of data in computer-generated document | |
CA2356846A1 (en) | Generalized multi-interfaced extensible content management and delivery system, and on-line calendar | |
US20050246387A1 (en) | Method and apparatus for managing and manipulating digital files at the file component level | |
Myers et al. | Electronic laboratory notebooks for collaborative research | |
Kim et al. | XML: how it will be applied to digital library systems | |
Whitehead | Webdav: versatile collaboration multiprotocol | |
Bradley Glisson et al. | Design of a digital dissertation information management system | |
Matoria et al. | NewsNIC: a Web‐based, full‐text news clipping service from the National Informatics Centre Library in India | |
WO2002052454A1 (en) | Electronic authoring and publishing system | |
Dumitriu et al. | Knowledge Management in a Wiki Platform via Microformats. | |
US7424487B2 (en) | Bulletin board system (BBS) implemented on server computer in which BBS items are stored as files in accordance with native file system of server computer | |
Löschner et al. | A Better Practice of Knowledge-based Collaboration with VKC |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: SCHLUMBERGER TECHNOLOGY CORPORATION, CONNECTICUTFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:HEANEY, STEVEN;WILLIAMS, NICOLAS JAMES;BROWN, ERIC;REEL/FRAME:012989/0375;SIGNING DATES FROM 20020122 TO 20020228 |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: INGENIADOR, LLC, PUERTO RICOFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:SCHLUMBERGER TECHNOLOGY CORPORATION;REEL/FRAME:026931/0428Effective date: 20110722 |
|
REMI | Maintenance fee reminder mailed | ||
FPAY | Fee payment |
Year of fee payment: 8 |
|
SULP | Surcharge for late payment |
Year of fee payment: 7 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:INGENIADOR, LLC;REEL/FRAME:036459/0505Effective date: 20150723 |
|
FEPP | Fee payment procedure |
Free format text: PAYER NUMBER DE-ASSIGNED (ORIGINAL EVENT CODE: RMPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYFree format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.) |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.) |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20180124 |
US20140086481A1 - Systems and Methods for Visual Object Matching - Google Patents
Systems and Methods for Visual Object Matching Download PDFInfo
- Publication number
- US20140086481A1 US20140086481A1 US14/045,207 US201314045207A US2014086481A1 US 20140086481 A1 US20140086481 A1 US 20140086481A1 US 201314045207 A US201314045207 A US 201314045207A US 2014086481 A1 US2014086481 A1 US 2014086481A1
- Authority
- US
- United States
- Prior art keywords
- image
- query
- images
- query image
- corpus
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 238000000034 method Methods 0.000 title claims abstract description 95
- 230000000007 visual effect Effects 0.000 title claims abstract description 71
- 238000012549 training Methods 0.000 claims abstract description 209
- 230000004044 response Effects 0.000 claims description 11
- 238000004891 communication Methods 0.000 description 17
- 230000006870 function Effects 0.000 description 14
- 230000008569 process Effects 0.000 description 10
- 238000010586 diagram Methods 0.000 description 8
- 238000004590 computer program Methods 0.000 description 6
- 230000003287 optical effect Effects 0.000 description 5
- 238000005286 illumination Methods 0.000 description 3
- 239000003086 colorant Substances 0.000 description 2
- 238000005516 engineering process Methods 0.000 description 2
- 238000003064 k means clustering Methods 0.000 description 2
- 238000013459 approach Methods 0.000 description 1
- 230000005540 biological transmission Effects 0.000 description 1
- 230000001413 cellular effect Effects 0.000 description 1
- 230000006835 compression Effects 0.000 description 1
- 238000007906 compression Methods 0.000 description 1
- 238000013500 data storage Methods 0.000 description 1
- 239000000835 fiber Substances 0.000 description 1
- 238000001914 filtration Methods 0.000 description 1
- 230000007774 longterm Effects 0.000 description 1
- 238000004519 manufacturing process Methods 0.000 description 1
- 230000002085 persistent effect Effects 0.000 description 1
- 238000012545 processing Methods 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 230000003068 static effect Effects 0.000 description 1
- 230000007723 transport mechanism Effects 0.000 description 1
Images
Classifications
-
- G06K9/66—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/21—Design or setup of recognition systems or techniques; Extraction of features in feature space; Blind source separation
- G06F18/214—Generating training patterns; Bootstrap methods, e.g. bagging or boosting
Definitions
- This disclosure relates to object recognition, and in examples, to training images used by a recognition engine.
- the ability to recognize objects can be used in many applications. While humans may easily identify a given object within an image or video, the same task may be complex for computer vision systems. Numerous approaches and techniques have been developed to attempt to recognize objects using computer vision systems.
- One example includes training a recognition engine, or matcher, using a set of training, or reference, images.
- a matcher may have knowledge of a set of training images used for recognizing objects.
- training corpora may contain images of a set of objects, with one or more images of visual appearances of the object, as well as metadata identifying the objects.
- the matcher may retrieve training images similar to the object and determine a match. Often times corresponding metadata of the matched training images may also be returned, such as a type, name, title, etc., of the recognized object.
- This disclosure may disclose, inter alia, systems and methods for improving visual object recognition by analyzing query images from users.
- a method for expanding a training corpus utilized by a visual object recognition module includes, but is not limited to, receiving a plurality of query images and matching the plurality of query images to a plurality of objects using a visual object recognition module.
- the visual object recognition module may be configured to utilize information from a training corpus to match query images to one or more training images of the plurality of objects, for example.
- the training corpus may include one or more training images associated with the plurality of objects.
- the method further includes associating match scores with matches between the query images and one or more matched training images. Match scores may be provided by the visual object recognition module indicating a level of similarity between the query images and one or more matched training images.
- the method also includes determining matched and unmatched query images based on the match scores associated with the query images.
- Query images with match scores above a score threshold are identified as matched query images and query images with match scores below the score threshold are identified as unmatched query images.
- the training corpus utilized by the visual object recognition module may be expanded to include the matched query images.
- the matched query images may be added as training images associated with the objects to which the matched training images are associated.
- a non-transitory computer-readable medium with instructions stored thereon is provided.
- the instructions may be executable by a computing device.
- the instructions may be executable for receiving a plurality of query images and matching the plurality of query images to a plurality of objects using a visual object recognition module.
- the visual object recognition module may be configured to utilize information from a training corpus to match query images to one or more training images of the plurality of objects, for example.
- the training corpus may include one or more training images associated with the plurality of objects.
- the instructions may be further executable for associating match scores with matches between the query images and one or more matched training images. Match scores may be provided by the visual object recognition module indicating a level of similarity between the query images and one or more matched training images.
- the instructions may also be executable for determining matched and unmatched query images based on the match scores associated with the query images. Query images with match scores above a score threshold are identified as matched query images and query images with match scores below the score threshold are identified as unmatched query images. Based on the determination, the training corpus utilized by the visual object recognition module may be expanded to include the matched query images. According to the instructions, the matched query images may be added as training images associated with the objects to which the matched training images are associated.
- a system in another example, involves a memory and a processor coupled to the memory.
- the system further includes instructions, executable by the processor, stored in the memory.
- the instructions may be executable by the processor for receiving a plurality of query images and matching the plurality of query images to a plurality of objects using a visual object recognition module.
- the visual object recognition module may be configured to utilize information from a training corpus to match query images to one or more training images of the plurality of objects, for example.
- the training corpus may include one or more training images associated with the plurality of objects.
- the instructions may be further executable for associating match scores with matches between the query images and one or more matched training images.
- Match scores may be provided by the visual object recognition module indicating a level of similarity between the query images and one or more matched training images.
- the instructions may also be executable for determining matched and unmatched query images based on the match scores associated with the query images. Query images with match scores above a score threshold are identified as matched query images and query images with match scores below the score threshold are identified as unmatched query images. Based on the determination, the training corpus utilized by the visual object recognition module may be expanded to include the matched query images. According to the instructions, the matched query images may be added as training images associated with the objects to which the matched training images are associated.
- FIG. 1 illustrates an example system
- FIG. 2 is an example block diagram of a method to expand a training corpus to include matched query images, in accordance with at least some embodiments described herein.
- FIG. 3 illustrates an example of expanding a training corpus to include matched query images.
- FIG. 4 is an example block diagram of a method to expand a training corpus to include one or more candidate image corpora, in accordance with at least some embodiments described herein.
- FIG. 5 illustrates an example of expanding a training corpus to include one more candidate image corpora.
- FIG. 6 is an example block diagram of a method to expand a training corpus to include unmatched query images, in accordance with at least some embodiments described herein.
- FIG. 7 illustrates an example of expanding a training corpus to include unmatched query images.
- FIG. 8 is a functional block diagram illustrating an example computing device used in a computing system that is arranged in accordance with at least some embodiments described herein.
- FIG. 9 is a schematic illustrating a conceptual partial view of an example computer program product that includes a computer program for executing a computer process on a computing device, arranged according to at least some embodiments presented herein.
- This disclosure may disclose, inter alia, systems and methods for improving visual object recognition by analyzing query images from users.
- the systems and methods may be directed to expanding a training corpus utilized by the visual object recognition module to improve visual object recognition.
- a plurality of query images provided by users may be analyzed to improve recognition coverage and/or to enrich models of objects described within the training corpus.
- a plurality of query images is received.
- the plurality of query images may be matched to a plurality of objects using a visual object recognition module.
- the visual object recognition module may be configured to utilize information from a training corpus to match query images to one more training images of the plurality of objects, for example.
- match scores associated with matches between the query images and one more matched training images may be provided by the visual object recognition module.
- a determination, based on the match scores, may be used to classify images within the received plurality of query images as matched or unmatched query images.
- matched query images may be added as training images associated with the objects to which the matched training images are associated.
- one or more of the matched query images added to the training corpus may be an image of one of the plurality of objects with a variation in illumination of the object, pose of the object, and/or shape of the object, among other possible variations.
- a method may automatically select useful data based on relevancy to the plurality of query images.
- the candidate image corpora may be added to the training corpus to expand the training corpus.
- previously unknown objects depicted in the plurality of query images may be discovered by clustering unmatched query images.
- the query images of the discovered objects may be annotated and added to the training corpus as training images.
- FIG. 1 illustrates an example system 100 .
- the system 100 may include a processor 102 coupled to a memory 104 . Additionally the system 100 may include a training corpus 106 , a plurality of query images 108 , and a visual object recognition module 110 , all of which may be coupled to the processor 102 and the memory 104 .
- the processor 102 may be any type of processor, such as a microprocessor, digital signal processor (DSP), multicore processor, etc., coupled to the memory 104 .
- the memory 104 may be any type of memory, such as volatile memory like random access memory (RAM), dynamic random access memory (DRAM), static random access memory (SRAM), or non-volatile memory like read-only memory (ROM), flash memory, magnetic or optical disks, or compact-disc read-only memory (CD-ROM), among other devices used to store data or programs on a temporary or permanent basis.
- RAM random access memory
- DRAM dynamic random access memory
- SRAM static random access memory
- ROM read-only memory
- flash memory magnetic or optical disks
- CD-ROM compact-disc read-only memory
- the training corpus 106 may include a set of objects. For each object, there may be one or more training images containing visual appearances of the object, as well as metadata associated with the object (e.g., type, name, etc.).
- information within the training corpus 106 may be processed for use by the visual object recognition module 110 .
- raw image data may be processed for comparing image similarity within a matching routine.
- matching may be performed based on image templates as an alternative to matching raw image data. Matching image templates may be a more effective method than matching raw image data in terms of computing image similarity, for example.
- descriptors for image interest points may be extracted and an image template may be built.
- a descriptor may include information extracted from local pixels around an image interest point.
- An image interest point may be a point in the image that can have a clear definition (e.g., may be mathematically well-founded), can have a well-defined position in image space, can have a local image structure that is rich in terms of local information contents, and is stable under local and global perturbations in the image domain.
- a template may include the extracted information of the image and a set of descriptors of all interest points in the image.
- the plurality of query images 108 may contain images submitted by one or more users. Images of the plurality of query images 108 may be of any size, shape, and/or form. Similarly, the plurality of query images 108 may be two-dimensional (e.g., photographs, figures, pictures) or three-dimensional (e.g., a hologram). The plurality of query images 108 may be captured by optical devices (cameras, mirrors, lenses, etc.) or otherwise input by a system or user (e.g., visual sketch drawn or otherwise rendered on an input surface). In one example, images within the plurality of query images 108 may be frames captured from a moving image.
- the plurality of query images 108 may include images provided in order to perform content-based image retrieval. Content from within the images may be analyzed and training images matching the content of the images may be returned. For example, content of images within the plurality of query images 108 may refer to colors, shapes, textures, or other information derived from an image. In some examples, the plurality of query images 108 may include images submitted by users containing metadata such as keywords, tags, or other descriptions associated with the images.
- the visual object recognition module 110 may include one or more programming instructions, for example, computer executable and/or logic implemented instructions to perform functions or steps. Additionally, the visual object recognition module 108 may be circuitry wired to perform one or more programming instructions.
- the visual object recognition module 110 may have access to and interact with a set of training images of the training corpus 106 . Given a query image of the plurality of query images 108 , the visual object recognition module 110 may retrieve and output training images that are similar to the query image. For example, the visual object recognition module 110 may determine one or more training images having image descriptors or image templates similar to the query image. For example, the number of similar image descriptors between a training image and the query image may be above a threshold. Accordingly, the training image may be determined to be a match to the query image. Other example methods and techniques used for image matching include template matching, normalized cross-correlation, or multi-variate cross-correlation.
- a match score may be provided for each similar training image.
- the match score may be computed based on a combination of one or more of a number of matched descriptors between the query image and a training image, a computed similarity between raw image data of the query image and a training image, or other potential image comparison algorithms or methods.
- the visual object recognition module 110 may output corresponding metadata of the matched training images.
- FIG. 2 is an example block diagram of a method 200 to expand a training corpus to include matched query images, in accordance with at least some embodiments described herein.
- the method 200 shown in FIG. 2 presents an embodiment of a method that may, for example, be used by the system 100 of FIG. 1 .
- Method 200 may include one or more operations, functions, or actions as illustrated by one or more of blocks 201 - 209 . Although the blocks are illustrated in a sequential order, these blocks may also be performed in parallel, and/or in a different order than those described herein. Also, the various blocks may be combined into fewer blocks, divided into additional blocks, and/or removed from the method, based upon the desired implementation of the method.
- each block may represent a module, a segment, or a portion of program code, which includes one or more instructions executable by a processor for implementing specific logical functions or steps in the process.
- the program code may be stored on any type of computer readable medium, for example, such as a storage device including a disk or hard drive.
- the computer readable medium may include non-transitory computer readable medium, for example, such as computer-readable media that stores data for short periods of time like register memory, processor cache and random access memory (RAM).
- the computer readable medium may also include non-transitory media, such as secondary or persistent long term storage, like read only memory (ROM), optical or magnetic disks, compact-disc read only memory (CD-ROM), for example.
- the computer readable media may also be any other volatile or non-volatile storage systems.
- the computer readable medium may be considered a computer readable storage medium, for example, or a tangible storage device.
- each block in FIG. 2 may represent circuitry that is wired to perform the specific logical functions in the process.
- the method 200 includes receiving a plurality of query images.
- Query images may be collected and stored over time by a system which receives query images from users. Alternatively, a group of query images for use by the method 200 may be received simultaneously.
- the plurality of query images may be user submitted images for which information is desired. A user may submit a query image in order to find images matching the query image, or to find information about the query image, for example. Images matching the query image may include metadata associated with and/or describing the matched images that may be output to the user. Additionally, one or more of the plurality of query images may be a query image comprising multiple images.
- Images within the plurality of a query images may be of one or more of any number of image file formats.
- the plurality of query images may include one or more image files composed of either pixel or vector data that are rasterized to pixels when displayed in a vector graphic display.
- Example image file formats include JPEG, JPEG 2000, TIFF, RAW, PNG, GIF, BMP, among other possible image file formats.
- images of the plurality of query images may optionally be compressed using a variety of image compression techniques.
- the method 200 includes decompressing images of the plurality of query images for use in conjunction with the method 200 and/or other systems and methods disclosed.
- the method 200 includes matching the plurality of query images to a plurality of objects using a visual object recognition module.
- the visual object recognition module may retrieve and output one or more training images of a training corpus matching the query image.
- the training corpus may include one or more training images associated with the plurality of objects, for example.
- a query image may be an image of a matched object differing from training images of the object within the training corpus.
- the query image may, for example, be matched to a training image from the plurality of objects of the training corpus with a variation in illumination of the object.
- the query image may have been captured under different lighting settings compared with the illumination of the object within the training images of the object.
- the query image may be an image of a matched object with a variation in pose or shape of the object.
- the visual object recognition module may match a region or multiple regions of a query image to one or more training images. In another example, the visual object recognition module may also output a matched region and/or matched descriptors associated with a matching query image and training image.
- the method 200 includes associating match scores with matches between the query images and one or more training images of the plurality of objects.
- the match score may indicate a level of similarity between a query image and a matching training image, for example.
- Matches may be prioritized or ranked based on the match scores.
- the similarity may be computed based on a number of matched descriptors between a query image and a training image.
- an image distance measure may compare the similarity of two images in various dimensions such as color, texture, shape, and others.
- color histograms of images may be compared, where a color histogram is computed by quantizing the colors within an image and counting the number of pixels of each color.
- an intensity-based method may be used to compare patterns in a query image and a training image using correlation metrics.
- the method 200 includes determining matched and unmatched query images based on the match scores associated with the query images.
- query images with matches and corresponding match scores above a score threshold may be identified as matched query images.
- query images with match scores below the score threshold may be identified as unmatched query images.
- the match score threshold may be determined based on a number of matching image descriptors.
- the match score threshold may be determined based on a combination of values of matching attributes associated with visual attributes or features of the images. For example, query images with a matching training image with attribute values associated with color, texture, and structure each above a threshold requirement, the query images may be determined to be matched query images.
- the matching attributes may be similar to distance measures used to determine similar images.
- query images without any matches to training images may be identified as unmatched query images, while query images with matching training images may be identifies as matched query images.
- query images with a number of related matched training images less than or equal to a threshold may be determined to be unmatched query images, while query images with a number of related matched training images greater than the threshold may be determined to be matched training images.
- the method 200 includes based on the determination, expanding the training corpus utilized by the visual object recognition module to include the matched query images.
- the matched query images may be added as training images associated with the objects to which the matched training images are associated. Including images covering as much possible variation in visual appearance of objects of the training corpus may help improve visual matching accuracy.
- the matched query images may be images captured under similar circumstances to circumstances a user may capture an object. Therefore, according to the method 200 , images of existing objects within the plurality of objects from user query images may be added into the training corpus to improve the models of the objects utilized by the visual recognition module.
- the visual object recognition module may be re-trained using the expanded training corpus.
- Metadata associated with the objects to which the matched training images are associated may be determined.
- the metadata may be associated with the matched query images added to the training corpora based on matches between query images and training images.
- FIG. 3 illustrates an example of expanding a training corpus 300 to include matched query images 302 .
- a visual object recognition module 304 may match user query images from a plurality of query images 306 utilizing the training corpus 300 . For each match 308 , between one or more training images 310 1 , 310 2 , . . . 310 n and a user query image 312 , the user query image 312 (or a matched region of the user query image 312 ) may be added as a new training image, for example, the user query image 312 may be included within the training corpus 300 as a training image of the object which the one or more training images 310 1 , 310 2 , . . . 310 n are associated.
- the visual object recognition module 304 may then make use of the training corpus 300 , expanded to include the additional matched query images 312 as training images.
- FIG. 4 is an example block diagram of a method 400 to expand a training corpus to include one or more candidate image corpora, in accordance with at least some embodiments described herein.
- the method 400 shown in FIG. 4 presents an embodiment of a method that may, for example, be used by the system 100 of FIG. 1 .
- Method 400 may include one or more operations, functions, or actions as illustrated by one or more of blocks 401 - 407 . Although the blocks are illustrated in a sequential order, these blocks may also be performed in parallel, and/or in a different order than those described herein. Also, the various blocks may be combined into fewer blocks, divided into additional blocks, and/or removed from the method, based upon the desired implementation of the method.
- Each block may represent a module, a segment, or a portion of program code, which includes one or more instructions executable by a processor for implementing specific logical functions or steps in the process.
- each block in FIG. 4 may represent circuitry that is wired to perform the specific logical functions in the process.
- the method 400 includes receiving a plurality of candidate image corpora.
- the plurality of candidate image corpora may be or include a large set or pool of image data sources.
- the plurality of candidate image corpora may include one or more un-indexed data sources, for which no information or metadata is associated.
- the plurality of candidate image corpora may include indexed data sources.
- the method 400 includes matching the plurality of candidate image corpora to unmatched query images using a visual object recognition module.
- the visual object recognition module may be configured to utilize information from a training corpus comprising unmatched query images to match images of the plurality of candidate image corpora to one or more of the unmatched query images and to associate match scores with the matches.
- the second visual object recognition module may be the visual object recognition module 110 of FIG. 1 .
- the second visual object recognition module may be a separate visual object recognition module.
- the unmatched query images may be query images which do not match training images of a first training corpus. For example, the unmatched query images may be determined according to the method 200 of FIG. 2 .
- the method 400 includes determining match statistics associated with the plurality of candidate image corpora.
- Statistics for each candidate image corpus of the plurality of candidate image corpora may be determined.
- the match statistics may be associated with a degree of utility in terms of improving coverage of a first training corpus utilized by a first visual object recognition module or matcher.
- the match statistics may include a percentage of images within a corpus matching the unmatched query images.
- the match statistics may include a number of images within a corpus matching the unmatched query images.
- a value of a match statistic may be associated with a usefulness of a candidate image corpus for matching query images if added to the first training corpus.
- matched images within the plurality of candidate image corpora may be determined. Images from the plurality of candidate image corpora with a match score above a threshold may be identified as matched images. Moreover, the match statistics may include a percentage of matched images within the plurality of candidate image corpora.
- the method 400 includes, based on the matches, selecting one or more candidate image corpora to add to the training corpus as training images.
- the one or more candidate image corpora may be selected, for example, if a match statistic is above a certain value.
- a candidate image corpus may be selected if the percentage of matched images within the candidate image corpus is above a percentage threshold.
- a candidate image corpus may be selected if a number of matched images within the candidate image corpus is above a number threshold.
- the selected one or more candidate image corpora may be added to a training corpus as training images.
- the one or more candidate image corpora may be added to the training corpus 106 of FIG. 1 .
- the visual object recognition module 110 of FIG. 1 may be re-trained using the expanded training corpus.
- relevant image corpora of the plurality of candidate image corpora may be added into a training corpus to improve recognition coverage.
- the one or more selected candidate image corpora may be indexed. This may be accomplished by associating metadata with images from the one or more selected candidate image corpora and adding the images, as training images, to the first training corpus.
- the method 400 may include determining samples of images associated with each of the plurality of candidate image corpora.
- the samples of images may be randomly selected as representative samples of each of the plurality of candidate image corpora.
- the samples of images may be matched to the unmatched query images using the second visual object recognition module.
- Match statistics may be determined and associated with each of the samples of images, and one or more candidate image corpora may be selected to be added to the first training corpus as training images based on the match statistics.
- FIG. 5 illustrates an example of expanding a training corpus 500 to include one more candidate image corpora 502 a , 502 b , 502 c .
- a visual object recognition module 504 may match user query images from a plurality of query images 506 to training images of the training corpus 500 . Based on the matching, unmatched query images 508 may be determined.
- a second visual object recognition module 510 may be trained using the unmatched query images 508 as a second training corpus.
- the second visual object recognition module 510 may match the candidate image corpora 502 a , 502 b , 502 c to the unmatched query images 508 .
- Match statistics 512 a , 512 b , 512 c for each of the candidate image corpora 502 a , 502 b , 502 c may be determined based on a percentage (or number) of matched images within a candidate image corpus.
- candidate image corpora 502 a , 502 b , 502 c may be selected based on the match statistics. For example, a match statistic threshold may be 55%. Accordingly, as illustrated in FIG. 5 , candidate image corpora 502 a , 502 c may be selected.
- the candidate image corpora 502 a , 502 c may be added to the training corpus 500 as training images.
- the visual object recognition module 504 may, subsequently, be re-trained using the training corpus 500 .
- FIG. 6 is an example block diagram of a method to expand a training corpus to include unmatched query images, in accordance with at least some embodiments described herein.
- the method 600 shown in FIG. 6 presents an embodiment of a method that may, for example, be used by the system 100 of FIG. 1 .
- Method 600 may include one or more operations, functions, or actions as illustrated by one or more of blocks 601 - 605 . Although the blocks are illustrated in a sequential order, these blocks may also be performed in parallel, and/or in a different order than those described herein. Also, the various blocks may be combined into fewer blocks, divided into additional blocks, and/or removed from the method, based upon the desired implementation of the method.
- Each block may represent a module, a segment, or a portion of program code, which includes one or more instructions executable by a processor for implementing specific logical functions or steps in the process.
- each block in FIG. 6 may represent circuitry that is wired to perform the specific logical functions in the process.
- the method 600 includes clustering unmatched query images into groups of similar query images.
- the unmatched query images may be query images which do not match training images of a training corpus.
- the unmatched query images may be determined according to the method 200 of FIG. 2 .
- the groups of similar query images may depict an object unknown or not included within the training corpus. Therefore, clusters of similar query images may represent new objects to be included within the training corpus in order to improve recognition coverage.
- a group of unmatched query images may be clustered into groups of visually similar images using feature histograms to represent the images.
- Feature histograms may describe, for example, color, texture, coarseness, contrast, and directionality of pixels within an image.
- clustering methods for example, k-means clustering, may be used.
- image templates for the unmatched query images may be determined.
- the image templates may include a set of descriptors of information for image interest points identified within the unmatched query images.
- the image templates may be compared to determine similar images. For example, images with image templates having a matching number of image descriptors above a threshold may be determined to be similar images.
- the unmatched query images may form nodes in a graph.
- the similarity may be represented by an edge (i.e., a line connecting the nodes) between the nodes.
- nodes may be connected when a similarity between two image templates is above a threshold.
- a visual object recognition module e.g., the visual object recognition module of FIG. 1
- Clustering of connected nodes within the graph may be performed.
- similarities may be determined between the unmatched query images.
- Various clustering algorithms and methods including k-means clustering, agglomerative or divisive hierarchical methods, among other algorithms and methods may be used to cluster the similarities between the unmatched query images into groups.
- the clustering may include specifying a number of clusters to produce. However, clustering methods and algorithms operating without a specified number of clusters may be performed.
- the method 600 includes determining that a group of similar query images describes a given object.
- groups of similar query images may be provided to a network or server.
- Information indicating objects which the groups of similar query images described may be received from the network or server.
- metadata associated with the given object may be determined.
- the group of similar query images may be indexed by associating the metadata with the similar query images.
- groups of similar query images may be matched to additional image corpora.
- a group of similar query images may be matched to one or more images of the additional image corpora.
- the one or more images may include associated metadata.
- the most commonly occurring instance of metadata e.g., a name, title, type, etc.
- the groups of similar query images may be provided to users to be annotated with metadata (e.g., the users may determine the type and name of the object).
- the method 600 includes adding the group of similar query images to the training corpus as training images associated with the object.
- Annotated clusters may become training images of an object and be added to the training corpus.
- a visual object recognition module or matcher may be trained on the expanded training corpus, improving recognition coverage. Consequently, the visual object recognition module may be able to match previously unknown objects obtained in the method 600 .
- the method 600 may include filtering the groups of similar query images by removing groups where an amount of similar query images is below a threshold. This may, for example, eliminate noise due to small clusters within the groups of similar query images.
- FIG. 7 illustrates an example of expanding a training corpus 700 to include unmatched query images 702 .
- a visual object recognition module 704 may match user query images from a plurality of query images 706 to training images of the training corpus 700 . Based on the matching, unmatched query images 702 may be determined. Unmatched query images 702 may be clustered into clusters 710 a , 710 b , each of which may include a number of similar query images of an object.
- Clusters 710 a , 710 b may be filtered based on size to eliminate noise.
- Clusters 710 a , 710 b may also be annotated to include metadata associated with the object.
- the clusters 710 a , 710 b may become training images 712 a , 712 b of objects.
- cluster 710 a may represent a first object and training images 712 a may be annotated with metadata of the first object.
- the training images 712 a , 712 b may be added to the training corpus 700 .
- the visual object recognition module may be re-trained using the training corpus 700 , including the additional training images 712 a , 712 b.
- a portion of similar images within a cluster 710 a may be selected as training images 712 a while another portion of images within the cluster 710 a may not be added to the training corpus 700 as training images 712 a .
- a cluster 712 a may not be annotated or added to the training corpus 700 because the cluster 712 a may not include images of one object.
- a cluster 712 a may include images of multiple objects. The cluster 712 a may be split into two separate groups of training images (not shown). Each of the separate groups may be added with metadata describing the multiple objects respectively.
- FIG. 8 is a functional block diagram illustrating an example computing device 800 used in a computing system that is arranged in accordance with at least some embodiments described herein.
- the computing device may be a personal computer, mobile device, cellular phone, touch-sensitive wristwatch, tablet computer, video game system, or global positioning system, and may be implemented to improve visual object recognition as described in FIGS. 1-7 .
- computing device 800 may typically include one or more processors 810 and system memory 820 .
- a memory bus 830 can be used for communicating between the processor 810 and the system memory 820 .
- processor 810 can be of any type including but not limited to a microprocessor ( ⁇ IP), a microcontroller ( ⁇ C), a digital signal processor (DSP), or any combination thereof.
- ⁇ IP microprocessor
- ⁇ C microcontroller
- DSP digital signal processor
- a memory controller 815 can also be used with the processor 810 , or in some implementations, the memory controller 815 can be an internal part of the processor 810 .
- system memory 820 can be of any type including but not limited to volatile memory (such as RAM), non-volatile memory (such as ROM, flash memory, etc.) or any combination thereof.
- System memory 820 may include one or more applications 822 , and program data 824 .
- Application 822 may include an image matching algorithm 823 that is arranged to provide inputs to the electronic circuits, in accordance with the present disclosure.
- Program data 824 may include content information 825 that could be directed to any number of types of data.
- application 822 can be arranged to operate with program data 824 on an operating system.
- Computing device 800 can have additional features or functionality, and additional interfaces to facilitate communications between the basic configuration 802 and any devices and interfaces.
- data storage devices 840 can be provided including removable storage devices 842 , non-removable storage devices 844 , or a combination thereof.
- removable storage and non-removable storage devices include magnetic disk devices such as flexible disk drives and hard-disk drives (HDD), optical disk drives such as compact disk (CD) drives or digital versatile disk (DVD) drives, solid state drives (SSD), and tape drives to name a few.
- Computer storage media can include volatile and nonvolatile, non-transitory, removable and non-removable media implemented in any method or technology for storage of information, such as computer readable instructions, data structures, program modules, or other data.
- System memory 820 and storage devices 840 are examples of computer storage media.
- Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by computing device 800 . Any such computer storage media can be part of device 800 .
- Computing device 800 can also include output interfaces 850 that may include a graphics processing unit 852 , which can be configured to communicate to various external devices such as display devices 860 or speakers via one or more A/V ports or a communication interface 880 .
- the communication interface 870 may include a network controller 872 , which can be arranged to facilitate communications with one or more other computing devices 780 over a network communication via one or more communication ports 874 .
- the communication connection is one example of a communication media. Communication media may be embodied by computer readable instructions, data structures, program modules, or other data in a modulated data signal, such as a carrier wave or other transport mechanism, and includes any information delivery media.
- a modulated data signal can be a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.
- communication media can include wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, radio frequency (RF), infrared (IR) and other wireless media.
- RF radio frequency
- IR infrared
- Computing device 800 can be implemented as a portion of a small-form factor portable (or mobile) electronic device such as a cell phone, a personal data assistant (PDA), a personal media player device, a wireless web-watch device, a personal headset device, an application specific device, or a hybrid device that include any of the above functions.
- a small-form factor portable (or mobile) electronic device such as a cell phone, a personal data assistant (PDA), a personal media player device, a wireless web-watch device, a personal headset device, an application specific device, or a hybrid device that include any of the above functions.
- PDA personal data assistant
- Computing device 800 can also be implemented as a personal computer including both laptop computer and non-laptop computer configurations.
- FIG. 9 is a schematic illustrating a conceptual partial view of an example computer program product 900 that includes a computer program for executing a computer process on a computing device, arranged according to at least some embodiments presented herein.
- the example computer program product 900 is provided using a signal bearing medium 901 .
- the signal bearing medium 901 may include one or more programming instructions 902 that, when executed by one or more processors may provide functionality or portions of the functionality described above with respect to FIGS. 1-8 .
- FIG. 2 , FIG. 4 , and FIG. 6 one or more features of blocks 201 - 209 , blocks 401 - 407 , and blocks 601 - 605 may be undertaken by one or more instructions associated with the signal bearing medium 901 .
- the signal bearing medium 901 may encompass a computer-readable medium 903 , such as, but not limited to, a hard disk drive, a Compact Disc (CD), a Digital Video Disk (DVD), a digital tape, memory, etc.
- the signal bearing medium 901 may encompass a computer recordable medium 904 , such as, but not limited to, memory, read/write (R/W) CDs, R/W DVDs, etc.
- the signal bearing medium 901 may encompass a communications medium 905 , such as, but not limited to, a digital and/or an analog communication medium (e.g., a fiber optic cable, a waveguide, a wired communications link, a wireless communication link, etc.).
- the signal bearing medium 901 may be conveyed by a wireless form of the communications medium 905 (e.g., a wireless communications medium conforming with the IEEE 902.11 standard or other transmission protocol).
- the one or more programming instructions 902 may be, for example, computer executable and/or logic implemented instructions.
- a computing device such as the computing device 800 of FIG. 8 may be configured to provide various operations, functions, or actions in response to the programming instructions 902 conveyed to the computing device 800 by one or more of the computer readable medium 903 , the computer recordable medium 904 , and/or the communications medium 905 .
Abstract
Description
- This application is a continuation of U.S. patent application Ser. No. 13/181,015 filed Jul. 12, 2011, the contents of which are hereby incorporated by reference.
- This disclosure relates to object recognition, and in examples, to training images used by a recognition engine.
- The ability to recognize objects can be used in many applications. While humans may easily identify a given object within an image or video, the same task may be complex for computer vision systems. Numerous approaches and techniques have been developed to attempt to recognize objects using computer vision systems. One example includes training a recognition engine, or matcher, using a set of training, or reference, images.
- A matcher may have knowledge of a set of training images used for recognizing objects. For example, training corpora may contain images of a set of objects, with one or more images of visual appearances of the object, as well as metadata identifying the objects. Given an image of an object to be recognized, the matcher may retrieve training images similar to the object and determine a match. Often times corresponding metadata of the matched training images may also be returned, such as a type, name, title, etc., of the recognized object.
- This disclosure may disclose, inter alia, systems and methods for improving visual object recognition by analyzing query images from users.
- In one example, a method for expanding a training corpus utilized by a visual object recognition module is provided. The method includes, but is not limited to, receiving a plurality of query images and matching the plurality of query images to a plurality of objects using a visual object recognition module. The visual object recognition module may be configured to utilize information from a training corpus to match query images to one or more training images of the plurality of objects, for example. The training corpus may include one or more training images associated with the plurality of objects. The method further includes associating match scores with matches between the query images and one or more matched training images. Match scores may be provided by the visual object recognition module indicating a level of similarity between the query images and one or more matched training images. The method also includes determining matched and unmatched query images based on the match scores associated with the query images. Query images with match scores above a score threshold are identified as matched query images and query images with match scores below the score threshold are identified as unmatched query images. Based on the determination, the training corpus utilized by the visual object recognition module may be expanded to include the matched query images. According to the method, the matched query images may be added as training images associated with the objects to which the matched training images are associated.
- In another example, a non-transitory computer-readable medium with instructions stored thereon is provided. The instructions may be executable by a computing device. The instructions may be executable for receiving a plurality of query images and matching the plurality of query images to a plurality of objects using a visual object recognition module. The visual object recognition module may be configured to utilize information from a training corpus to match query images to one or more training images of the plurality of objects, for example. The training corpus may include one or more training images associated with the plurality of objects. The instructions may be further executable for associating match scores with matches between the query images and one or more matched training images. Match scores may be provided by the visual object recognition module indicating a level of similarity between the query images and one or more matched training images. The instructions may also be executable for determining matched and unmatched query images based on the match scores associated with the query images. Query images with match scores above a score threshold are identified as matched query images and query images with match scores below the score threshold are identified as unmatched query images. Based on the determination, the training corpus utilized by the visual object recognition module may be expanded to include the matched query images. According to the instructions, the matched query images may be added as training images associated with the objects to which the matched training images are associated.
- In another example, a system is provided. The system involves a memory and a processor coupled to the memory. The system further includes instructions, executable by the processor, stored in the memory. The instructions may be executable by the processor for receiving a plurality of query images and matching the plurality of query images to a plurality of objects using a visual object recognition module. The visual object recognition module may be configured to utilize information from a training corpus to match query images to one or more training images of the plurality of objects, for example. The training corpus may include one or more training images associated with the plurality of objects. The instructions may be further executable for associating match scores with matches between the query images and one or more matched training images. Match scores may be provided by the visual object recognition module indicating a level of similarity between the query images and one or more matched training images. The instructions may also be executable for determining matched and unmatched query images based on the match scores associated with the query images. Query images with match scores above a score threshold are identified as matched query images and query images with match scores below the score threshold are identified as unmatched query images. Based on the determination, the training corpus utilized by the visual object recognition module may be expanded to include the matched query images. According to the instructions, the matched query images may be added as training images associated with the objects to which the matched training images are associated.
- The foregoing summary is illustrative only and is not intended to be in any way limiting. In addition to the illustrative aspects, embodiments, and features described above, further aspects, embodiments, and features will become apparent by reference to the figures and the following detailed description.
-
FIG. 1 illustrates an example system. -
FIG. 2 is an example block diagram of a method to expand a training corpus to include matched query images, in accordance with at least some embodiments described herein. -
FIG. 3 illustrates an example of expanding a training corpus to include matched query images. -
FIG. 4 is an example block diagram of a method to expand a training corpus to include one or more candidate image corpora, in accordance with at least some embodiments described herein. -
FIG. 5 illustrates an example of expanding a training corpus to include one more candidate image corpora. -
FIG. 6 is an example block diagram of a method to expand a training corpus to include unmatched query images, in accordance with at least some embodiments described herein. -
FIG. 7 illustrates an example of expanding a training corpus to include unmatched query images. -
FIG. 8 is a functional block diagram illustrating an example computing device used in a computing system that is arranged in accordance with at least some embodiments described herein. -
FIG. 9 is a schematic illustrating a conceptual partial view of an example computer program product that includes a computer program for executing a computer process on a computing device, arranged according to at least some embodiments presented herein. - In the following detailed description, reference is made to the accompanying figures, which form a part hereof. In the figures, similar symbols typically identify similar components, unless context dictates otherwise. The illustrative embodiments described in the detailed description, figures, and claims are not meant to be limiting. Other embodiments may be utilized, and other changes may be made, without departing from the scope of the subject matter presented herein. It will be readily understood that the aspects of the present disclosure, as generally described herein, and illustrated in the figures, can be arranged, substituted, combined, separated, and designed in a wide variety of different configurations, all of which are explicitly contemplated herein.
- This disclosure may disclose, inter alia, systems and methods for improving visual object recognition by analyzing query images from users. The systems and methods may be directed to expanding a training corpus utilized by the visual object recognition module to improve visual object recognition. A plurality of query images provided by users may be analyzed to improve recognition coverage and/or to enrich models of objects described within the training corpus.
- In one example, a plurality of query images is received. The plurality of query images may be matched to a plurality of objects using a visual object recognition module. The visual object recognition module may be configured to utilize information from a training corpus to match query images to one more training images of the plurality of objects, for example. Additionally, match scores associated with matches between the query images and one more matched training images may be provided by the visual object recognition module. A determination, based on the match scores, may be used to classify images within the received plurality of query images as matched or unmatched query images. In some examples, matched query images may be added as training images associated with the objects to which the matched training images are associated.
- In one example, one or more of the matched query images added to the training corpus may be an image of one of the plurality of objects with a variation in illumination of the object, pose of the object, and/or shape of the object, among other possible variations.
- In another example, given a large set of data sources as candidate image corpora, a method may automatically select useful data based on relevancy to the plurality of query images. The candidate image corpora may be added to the training corpus to expand the training corpus.
- In another example, previously unknown objects depicted in the plurality of query images may be discovered by clustering unmatched query images. The query images of the discovered objects may be annotated and added to the training corpus as training images.
- Referring now to the figures,
FIG. 1 illustrates anexample system 100. One or more parts of thesystem 100 may be used to perform methods for improving visual object recognition by analyzing user query images. Thesystem 100 may include aprocessor 102 coupled to amemory 104. Additionally thesystem 100 may include a training corpus 106, a plurality ofquery images 108, and a visual object recognition module 110, all of which may be coupled to theprocessor 102 and thememory 104. - The
processor 102 may be any type of processor, such as a microprocessor, digital signal processor (DSP), multicore processor, etc., coupled to thememory 104. Thememory 104 may be any type of memory, such as volatile memory like random access memory (RAM), dynamic random access memory (DRAM), static random access memory (SRAM), or non-volatile memory like read-only memory (ROM), flash memory, magnetic or optical disks, or compact-disc read-only memory (CD-ROM), among other devices used to store data or programs on a temporary or permanent basis. - In one embodiment, the training corpus 106 may include a set of objects. For each object, there may be one or more training images containing visual appearances of the object, as well as metadata associated with the object (e.g., type, name, etc.).
- In some examples, information within the training corpus 106 may be processed for use by the visual object recognition module 110. For example, raw image data may be processed for comparing image similarity within a matching routine. Alternatively, matching may be performed based on image templates as an alternative to matching raw image data. Matching image templates may be a more effective method than matching raw image data in terms of computing image similarity, for example.
- In one example, for each image, descriptors for image interest points may be extracted and an image template may be built. A descriptor may include information extracted from local pixels around an image interest point. An image interest point may be a point in the image that can have a clear definition (e.g., may be mathematically well-founded), can have a well-defined position in image space, can have a local image structure that is rich in terms of local information contents, and is stable under local and global perturbations in the image domain. In some examples, a template may include the extracted information of the image and a set of descriptors of all interest points in the image.
- The plurality of
query images 108 may contain images submitted by one or more users. Images of the plurality ofquery images 108 may be of any size, shape, and/or form. Similarly, the plurality ofquery images 108 may be two-dimensional (e.g., photographs, figures, pictures) or three-dimensional (e.g., a hologram). The plurality ofquery images 108 may be captured by optical devices (cameras, mirrors, lenses, etc.) or otherwise input by a system or user (e.g., visual sketch drawn or otherwise rendered on an input surface). In one example, images within the plurality ofquery images 108 may be frames captured from a moving image. - In some examples, the plurality of
query images 108 may include images provided in order to perform content-based image retrieval. Content from within the images may be analyzed and training images matching the content of the images may be returned. For example, content of images within the plurality ofquery images 108 may refer to colors, shapes, textures, or other information derived from an image. In some examples, the plurality ofquery images 108 may include images submitted by users containing metadata such as keywords, tags, or other descriptions associated with the images. - The visual object recognition module 110 may include one or more programming instructions, for example, computer executable and/or logic implemented instructions to perform functions or steps. Additionally, the visual
object recognition module 108 may be circuitry wired to perform one or more programming instructions. - In one example, the visual object recognition module 110 may have access to and interact with a set of training images of the training corpus 106. Given a query image of the plurality of
query images 108, the visual object recognition module 110 may retrieve and output training images that are similar to the query image. For example, the visual object recognition module 110 may determine one or more training images having image descriptors or image templates similar to the query image. For example, the number of similar image descriptors between a training image and the query image may be above a threshold. Accordingly, the training image may be determined to be a match to the query image. Other example methods and techniques used for image matching include template matching, normalized cross-correlation, or multi-variate cross-correlation. - Additionally, for each similar training image, a match score may be provided. For example, the match score may be computed based on a combination of one or more of a number of matched descriptors between the query image and a training image, a computed similarity between raw image data of the query image and a training image, or other potential image comparison algorithms or methods. Moreover, the visual object recognition module 110 may output corresponding metadata of the matched training images.
-
FIG. 2 is an example block diagram of amethod 200 to expand a training corpus to include matched query images, in accordance with at least some embodiments described herein. Themethod 200 shown inFIG. 2 presents an embodiment of a method that may, for example, be used by thesystem 100 ofFIG. 1 .Method 200 may include one or more operations, functions, or actions as illustrated by one or more of blocks 201-209. Although the blocks are illustrated in a sequential order, these blocks may also be performed in parallel, and/or in a different order than those described herein. Also, the various blocks may be combined into fewer blocks, divided into additional blocks, and/or removed from the method, based upon the desired implementation of the method. - In addition, for the
method 200 and other processes and methods disclosed herein, the flowchart shows functionality and operation of one possible implementation of present embodiments. In this regard, each block may represent a module, a segment, or a portion of program code, which includes one or more instructions executable by a processor for implementing specific logical functions or steps in the process. The program code may be stored on any type of computer readable medium, for example, such as a storage device including a disk or hard drive. The computer readable medium may include non-transitory computer readable medium, for example, such as computer-readable media that stores data for short periods of time like register memory, processor cache and random access memory (RAM). The computer readable medium may also include non-transitory media, such as secondary or persistent long term storage, like read only memory (ROM), optical or magnetic disks, compact-disc read only memory (CD-ROM), for example. The computer readable media may also be any other volatile or non-volatile storage systems. The computer readable medium may be considered a computer readable storage medium, for example, or a tangible storage device. - In addition, for the
method 200 and other processes and methods disclosed herein, each block inFIG. 2 may represent circuitry that is wired to perform the specific logical functions in the process. - Initially, at
block 201, themethod 200 includes receiving a plurality of query images. Query images may be collected and stored over time by a system which receives query images from users. Alternatively, a group of query images for use by themethod 200 may be received simultaneously. In one example, the plurality of query images may be user submitted images for which information is desired. A user may submit a query image in order to find images matching the query image, or to find information about the query image, for example. Images matching the query image may include metadata associated with and/or describing the matched images that may be output to the user. Additionally, one or more of the plurality of query images may be a query image comprising multiple images. - Images within the plurality of a query images may be of one or more of any number of image file formats. For example, the plurality of query images may include one or more image files composed of either pixel or vector data that are rasterized to pixels when displayed in a vector graphic display. Example image file formats include JPEG, JPEG 2000, TIFF, RAW, PNG, GIF, BMP, among other possible image file formats. Similarly, images of the plurality of query images may optionally be compressed using a variety of image compression techniques. In some examples, the
method 200 includes decompressing images of the plurality of query images for use in conjunction with themethod 200 and/or other systems and methods disclosed. - At
block 203, themethod 200 includes matching the plurality of query images to a plurality of objects using a visual object recognition module. Given a query image, the visual object recognition module may retrieve and output one or more training images of a training corpus matching the query image. The training corpus may include one or more training images associated with the plurality of objects, for example. - In one example, a query image may be an image of a matched object differing from training images of the object within the training corpus. The query image may, for example, be matched to a training image from the plurality of objects of the training corpus with a variation in illumination of the object. The query image may have been captured under different lighting settings compared with the illumination of the object within the training images of the object. Similarly, in another example, the query image may be an image of a matched object with a variation in pose or shape of the object.
- In one example, the visual object recognition module may match a region or multiple regions of a query image to one or more training images. In another example, the visual object recognition module may also output a matched region and/or matched descriptors associated with a matching query image and training image.
- At
block 205, themethod 200 includes associating match scores with matches between the query images and one or more training images of the plurality of objects. The match score may indicate a level of similarity between a query image and a matching training image, for example. Matches may be prioritized or ranked based on the match scores. In one example, the similarity may be computed based on a number of matched descriptors between a query image and a training image. However, other methods of determining similarity are also contemplated. In one example, an image distance measure may compare the similarity of two images in various dimensions such as color, texture, shape, and others. For example, color histograms of images may be compared, where a color histogram is computed by quantizing the colors within an image and counting the number of pixels of each color. In another example, an intensity-based method may be used to compare patterns in a query image and a training image using correlation metrics. - At
block 207, themethod 200 includes determining matched and unmatched query images based on the match scores associated with the query images. In one example, query images with matches and corresponding match scores above a score threshold may be identified as matched query images. Meanwhile, query images with match scores below the score threshold may be identified as unmatched query images. For example, the match score threshold may be determined based on a number of matching image descriptors. Alternatively, the match score threshold may be determined based on a combination of values of matching attributes associated with visual attributes or features of the images. For example, query images with a matching training image with attribute values associated with color, texture, and structure each above a threshold requirement, the query images may be determined to be matched query images. In some examples, the matching attributes may be similar to distance measures used to determine similar images. - In another example, query images without any matches to training images may be identified as unmatched query images, while query images with matching training images may be identifies as matched query images. Alternatively, query images with a number of related matched training images less than or equal to a threshold may be determined to be unmatched query images, while query images with a number of related matched training images greater than the threshold may be determined to be matched training images.
- At
block 209, themethod 200 includes based on the determination, expanding the training corpus utilized by the visual object recognition module to include the matched query images. The matched query images may be added as training images associated with the objects to which the matched training images are associated. Including images covering as much possible variation in visual appearance of objects of the training corpus may help improve visual matching accuracy. For example, the matched query images may be images captured under similar circumstances to circumstances a user may capture an object. Therefore, according to themethod 200, images of existing objects within the plurality of objects from user query images may be added into the training corpus to improve the models of the objects utilized by the visual recognition module. In some examples, the visual object recognition module may be re-trained using the expanded training corpus. - In one example, metadata associated with the objects to which the matched training images are associated may be determined. The metadata may be associated with the matched query images added to the training corpora based on matches between query images and training images.
-
FIG. 3 illustrates an example of expanding atraining corpus 300 to include matchedquery images 302. A visual object recognition module 304 may match user query images from a plurality ofquery images 306 utilizing thetraining corpus 300. For eachmatch 308, between one ormore training images user query image 312, the user query image 312 (or a matched region of the user query image 312) may be added as a new training image, for example, theuser query image 312 may be included within thetraining corpus 300 as a training image of the object which the one ormore training images training corpus 300, expanded to include the additional matchedquery images 312 as training images. -
FIG. 4 is an example block diagram of amethod 400 to expand a training corpus to include one or more candidate image corpora, in accordance with at least some embodiments described herein. Themethod 400 shown inFIG. 4 presents an embodiment of a method that may, for example, be used by thesystem 100 ofFIG. 1 .Method 400 may include one or more operations, functions, or actions as illustrated by one or more of blocks 401-407. Although the blocks are illustrated in a sequential order, these blocks may also be performed in parallel, and/or in a different order than those described herein. Also, the various blocks may be combined into fewer blocks, divided into additional blocks, and/or removed from the method, based upon the desired implementation of the method. Each block may represent a module, a segment, or a portion of program code, which includes one or more instructions executable by a processor for implementing specific logical functions or steps in the process. In addition, each block inFIG. 4 may represent circuitry that is wired to perform the specific logical functions in the process. - Initially, at
block 401, themethod 400 includes receiving a plurality of candidate image corpora. The plurality of candidate image corpora may be or include a large set or pool of image data sources. In some examples, the plurality of candidate image corpora may include one or more un-indexed data sources, for which no information or metadata is associated. However, in some examples, the plurality of candidate image corpora may include indexed data sources. - At
block 403, themethod 400 includes matching the plurality of candidate image corpora to unmatched query images using a visual object recognition module. The visual object recognition module may be configured to utilize information from a training corpus comprising unmatched query images to match images of the plurality of candidate image corpora to one or more of the unmatched query images and to associate match scores with the matches. In one example, the second visual object recognition module may be the visual object recognition module 110 ofFIG. 1 . Alternatively, the second visual object recognition module may be a separate visual object recognition module. The unmatched query images may be query images which do not match training images of a first training corpus. For example, the unmatched query images may be determined according to themethod 200 ofFIG. 2 . - At
block 405, themethod 400 includes determining match statistics associated with the plurality of candidate image corpora. Statistics for each candidate image corpus of the plurality of candidate image corpora may be determined. The match statistics may be associated with a degree of utility in terms of improving coverage of a first training corpus utilized by a first visual object recognition module or matcher. For example, the match statistics may include a percentage of images within a corpus matching the unmatched query images. As another example, the match statistics may include a number of images within a corpus matching the unmatched query images. In some examples, a value of a match statistic may be associated with a usefulness of a candidate image corpus for matching query images if added to the first training corpus. - In one example, matched images within the plurality of candidate image corpora may be determined. Images from the plurality of candidate image corpora with a match score above a threshold may be identified as matched images. Moreover, the match statistics may include a percentage of matched images within the plurality of candidate image corpora.
- At
block 407, themethod 400 includes, based on the matches, selecting one or more candidate image corpora to add to the training corpus as training images. The one or more candidate image corpora may be selected, for example, if a match statistic is above a certain value. A candidate image corpus may be selected if the percentage of matched images within the candidate image corpus is above a percentage threshold. Similarly, a candidate image corpus may be selected if a number of matched images within the candidate image corpus is above a number threshold. - The selected one or more candidate image corpora may be added to a training corpus as training images. For example, the one or more candidate image corpora may be added to the training corpus 106 of
FIG. 1 . Similarly, the visual object recognition module 110 ofFIG. 1 may be re-trained using the expanded training corpus. Thus, relevant image corpora of the plurality of candidate image corpora may be added into a training corpus to improve recognition coverage. - In one example, the one or more selected candidate image corpora may be indexed. This may be accomplished by associating metadata with images from the one or more selected candidate image corpora and adding the images, as training images, to the first training corpus.
- In one example, the
method 400 may include determining samples of images associated with each of the plurality of candidate image corpora. The samples of images may be randomly selected as representative samples of each of the plurality of candidate image corpora. The samples of images may be matched to the unmatched query images using the second visual object recognition module. Match statistics may be determined and associated with each of the samples of images, and one or more candidate image corpora may be selected to be added to the first training corpus as training images based on the match statistics. -
FIG. 5 illustrates an example of expanding atraining corpus 500 to include one more candidate image corpora 502 a, 502 b, 502 c. A visual object recognition module 504 may match user query images from a plurality of query images 506 to training images of thetraining corpus 500. Based on the matching,unmatched query images 508 may be determined. - A second visual object recognition module 510 may be trained using the
unmatched query images 508 as a second training corpus. The second visual object recognition module 510 may match the candidate image corpora 502 a, 502 b, 502 c to theunmatched query images 508.Match statistics 512 a, 512 b, 512 c for each of the candidate image corpora 502 a, 502 b, 502 c may be determined based on a percentage (or number) of matched images within a candidate image corpus. - Additionally, candidate image corpora 502 a, 502 b, 502 c may be selected based on the match statistics. For example, a match statistic threshold may be 55%. Accordingly, as illustrated in
FIG. 5 , candidate image corpora 502 a, 502 c may be selected. - Furthermore, the candidate image corpora 502 a, 502 c may be added to the
training corpus 500 as training images. The visual objet recognition module 504 may, subsequently, be re-trained using thetraining corpus 500. -
FIG. 6 is an example block diagram of a method to expand a training corpus to include unmatched query images, in accordance with at least some embodiments described herein. Themethod 600 shown inFIG. 6 presents an embodiment of a method that may, for example, be used by thesystem 100 ofFIG. 1 .Method 600 may include one or more operations, functions, or actions as illustrated by one or more of blocks 601-605. Although the blocks are illustrated in a sequential order, these blocks may also be performed in parallel, and/or in a different order than those described herein. Also, the various blocks may be combined into fewer blocks, divided into additional blocks, and/or removed from the method, based upon the desired implementation of the method. Each block may represent a module, a segment, or a portion of program code, which includes one or more instructions executable by a processor for implementing specific logical functions or steps in the process. In addition, each block inFIG. 6 may represent circuitry that is wired to perform the specific logical functions in the process. - Initially, at
block 601, themethod 600 includes clustering unmatched query images into groups of similar query images. The unmatched query images may be query images which do not match training images of a training corpus. For example, the unmatched query images may be determined according to themethod 200 ofFIG. 2 . In some examples, the groups of similar query images may depict an object unknown or not included within the training corpus. Therefore, clusters of similar query images may represent new objects to be included within the training corpus in order to improve recognition coverage. - In one example, a group of unmatched query images may be clustered into groups of visually similar images using feature histograms to represent the images. Feature histograms may describe, for example, color, texture, coarseness, contrast, and directionality of pixels within an image. Various well known clustering methods, for example, k-means clustering, may be used.
- In another example, image templates for the unmatched query images may be determined. The image templates may include a set of descriptors of information for image interest points identified within the unmatched query images. The image templates may be compared to determine similar images. For example, images with image templates having a matching number of image descriptors above a threshold may be determined to be similar images.
- In a further example, the unmatched query images may form nodes in a graph. When a similarity is identified between image templates associated with the unmatched query images, the similarity may be represented by an edge (i.e., a line connecting the nodes) between the nodes. In some cases, nodes may be connected when a similarity between two image templates is above a threshold. For example, a visual object recognition module (e.g., the visual object recognition module of
FIG. 1 ) may be used to determine similarities between the unmatched query images. Clustering of connected nodes within the graph may be performed. - Other clustering methods are also contemplated. For example, similarities may be determined between the unmatched query images. Various clustering algorithms and methods including k-means clustering, agglomerative or divisive hierarchical methods, among other algorithms and methods may be used to cluster the similarities between the unmatched query images into groups. Optionally, the clustering may include specifying a number of clusters to produce. However, clustering methods and algorithms operating without a specified number of clusters may be performed.
- At
block 603, themethod 600 includes determining that a group of similar query images describes a given object. For example, groups of similar query images may be provided to a network or server. Information indicating objects which the groups of similar query images described may be received from the network or server. Also, metadata associated with the given object may be determined. The group of similar query images may be indexed by associating the metadata with the similar query images. For example, groups of similar query images may be matched to additional image corpora. A group of similar query images may be matched to one or more images of the additional image corpora. The one or more images may include associated metadata. In one example, the most commonly occurring instance of metadata (e.g., a name, title, type, etc.) (or multiple commonly occurring instances of metadata) within the one or more matched images may be determined and associated with the similar query images of the group. In another example, the groups of similar query images may be provided to users to be annotated with metadata (e.g., the users may determine the type and name of the object). - At
block 605, themethod 600 includes adding the group of similar query images to the training corpus as training images associated with the object. Annotated clusters may become training images of an object and be added to the training corpus. A visual object recognition module or matcher may be trained on the expanded training corpus, improving recognition coverage. Consequently, the visual object recognition module may be able to match previously unknown objects obtained in themethod 600. - In one example, the
method 600 may include filtering the groups of similar query images by removing groups where an amount of similar query images is below a threshold. This may, for example, eliminate noise due to small clusters within the groups of similar query images. -
FIG. 7 illustrates an example of expanding atraining corpus 700 to includeunmatched query images 702. A visual object recognition module 704 may match user query images from a plurality ofquery images 706 to training images of thetraining corpus 700. Based on the matching,unmatched query images 702 may be determined.Unmatched query images 702 may be clustered into clusters 710 a, 710 b, each of which may include a number of similar query images of an object. - Clusters 710 a, 710 b, in some examples, may be filtered based on size to eliminate noise. Clusters 710 a, 710 b may also be annotated to include metadata associated with the object. With the addition of metadata to the clusters 710 a, 710 b, the clusters 710 a, 710 b may become training images 712 a, 712 b of objects. For example, cluster 710 a may represent a first object and training images 712 a may be annotated with metadata of the first object. The training images 712 a, 712 b may be added to the
training corpus 700. Accordingly, the visual object recognition module may be re-trained using thetraining corpus 700, including the additional training images 712 a, 712 b. - In one example, a portion of similar images within a cluster 710 a may be selected as training images 712 a while another portion of images within the cluster 710 a may not be added to the
training corpus 700 as training images 712 a. In another example, a cluster 712 a may not be annotated or added to thetraining corpus 700 because the cluster 712 a may not include images of one object. Alternatively, in another example, a cluster 712 a may include images of multiple objects. The cluster 712 a may be split into two separate groups of training images (not shown). Each of the separate groups may be added with metadata describing the multiple objects respectively. -
FIG. 8 is a functional block diagram illustrating anexample computing device 800 used in a computing system that is arranged in accordance with at least some embodiments described herein. The computing device may be a personal computer, mobile device, cellular phone, touch-sensitive wristwatch, tablet computer, video game system, or global positioning system, and may be implemented to improve visual object recognition as described inFIGS. 1-7 . In a basic configuration 802,computing device 800 may typically include one ormore processors 810 andsystem memory 820. A memory bus 830 can be used for communicating between theprocessor 810 and thesystem memory 820. Depending on the desired configuration,processor 810 can be of any type including but not limited to a microprocessor (μIP), a microcontroller (μC), a digital signal processor (DSP), or any combination thereof. Amemory controller 815 can also be used with theprocessor 810, or in some implementations, thememory controller 815 can be an internal part of theprocessor 810. - Depending on the desired configuration, the
system memory 820 can be of any type including but not limited to volatile memory (such as RAM), non-volatile memory (such as ROM, flash memory, etc.) or any combination thereof.System memory 820 may include one ormore applications 822, andprogram data 824.Application 822 may include an image matching algorithm 823 that is arranged to provide inputs to the electronic circuits, in accordance with the present disclosure.Program data 824 may includecontent information 825 that could be directed to any number of types of data. In some example embodiments,application 822 can be arranged to operate withprogram data 824 on an operating system. -
Computing device 800 can have additional features or functionality, and additional interfaces to facilitate communications between the basic configuration 802 and any devices and interfaces. For example,data storage devices 840 can be provided includingremovable storage devices 842,non-removable storage devices 844, or a combination thereof. Examples of removable storage and non-removable storage devices include magnetic disk devices such as flexible disk drives and hard-disk drives (HDD), optical disk drives such as compact disk (CD) drives or digital versatile disk (DVD) drives, solid state drives (SSD), and tape drives to name a few. Computer storage media can include volatile and nonvolatile, non-transitory, removable and non-removable media implemented in any method or technology for storage of information, such as computer readable instructions, data structures, program modules, or other data. -
System memory 820 andstorage devices 840 are examples of computer storage media. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by computingdevice 800. Any such computer storage media can be part ofdevice 800. -
Computing device 800 can also includeoutput interfaces 850 that may include agraphics processing unit 852, which can be configured to communicate to various external devices such asdisplay devices 860 or speakers via one or more A/V ports or acommunication interface 880. Thecommunication interface 870 may include anetwork controller 872, which can be arranged to facilitate communications with one or more other computing devices 780 over a network communication via one ormore communication ports 874. The communication connection is one example of a communication media. Communication media may be embodied by computer readable instructions, data structures, program modules, or other data in a modulated data signal, such as a carrier wave or other transport mechanism, and includes any information delivery media. A modulated data signal can be a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media can include wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, radio frequency (RF), infrared (IR) and other wireless media. -
Computing device 800 can be implemented as a portion of a small-form factor portable (or mobile) electronic device such as a cell phone, a personal data assistant (PDA), a personal media player device, a wireless web-watch device, a personal headset device, an application specific device, or a hybrid device that include any of the above functions.Computing device 800 can also be implemented as a personal computer including both laptop computer and non-laptop computer configurations. - In some embodiments, the disclosed methods may be implemented as computer program instructions encoded on a non-transitory computer-readable storage media in a machine-readable format, or on other non-transitory media or articles of manufacture.
FIG. 9 is a schematic illustrating a conceptual partial view of an examplecomputer program product 900 that includes a computer program for executing a computer process on a computing device, arranged according to at least some embodiments presented herein. In one embodiment, the examplecomputer program product 900 is provided using a signal bearing medium 901. The signal bearing medium 901 may include one ormore programming instructions 902 that, when executed by one or more processors may provide functionality or portions of the functionality described above with respect toFIGS. 1-8 . Thus, for example, referring to the embodiments shown inFIG. 2 ,FIG. 4 , andFIG. 6 one or more features of blocks 201-209, blocks 401-407, and blocks 601-605 may be undertaken by one or more instructions associated with the signal bearing medium 901. - In some examples, the signal bearing medium 901 may encompass a computer-
readable medium 903, such as, but not limited to, a hard disk drive, a Compact Disc (CD), a Digital Video Disk (DVD), a digital tape, memory, etc. In some implementations, the signal bearing medium 901 may encompass acomputer recordable medium 904, such as, but not limited to, memory, read/write (R/W) CDs, R/W DVDs, etc. In some implementations, the signal bearing medium 901 may encompass acommunications medium 905, such as, but not limited to, a digital and/or an analog communication medium (e.g., a fiber optic cable, a waveguide, a wired communications link, a wireless communication link, etc.). Thus, for example, the signal bearing medium 901 may be conveyed by a wireless form of the communications medium 905 (e.g., a wireless communications medium conforming with the IEEE 902.11 standard or other transmission protocol). - The one or
more programming instructions 902 may be, for example, computer executable and/or logic implemented instructions. In some examples, a computing device such as thecomputing device 800 ofFIG. 8 may be configured to provide various operations, functions, or actions in response to theprogramming instructions 902 conveyed to thecomputing device 800 by one or more of the computerreadable medium 903, thecomputer recordable medium 904, and/or thecommunications medium 905. - It should be understood that arrangements described herein are for purposes of example only. As such, those skilled in the art will appreciate that other arrangements and other elements (e.g. machines, interfaces, functions, orders, and groupings of functions, etc.) can be used instead, and some elements may be omitted altogether according to the desired results. Further, many of the elements that are described are functional entities that may be implemented as discrete or distributed components or in conjunction with other components, in any suitable combination and location.
- While various aspects and embodiments have been disclosed herein, other aspects and embodiments will be apparent to those skilled in the art. The various aspects and embodiments disclosed herein are for purposes of illustration and are not intended to be limiting, with the true scope being indicated by the following claims, along with the full scope of equivalents to which such claims are entitled. It is also to be understood that the terminology used herein is for the purpose of describing particular embodiments only, and is not intended to be limiting.
Claims (22)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/045,207 US9020246B2 (en) | 2011-07-12 | 2013-10-03 | Systems and methods for visual object matching |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/181,015 US8577131B1 (en) | 2011-07-12 | 2011-07-12 | Systems and methods for visual object matching |
US14/045,207 US9020246B2 (en) | 2011-07-12 | 2013-10-03 | Systems and methods for visual object matching |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/181,015 Continuation US8577131B1 (en) | 2011-07-12 | 2011-07-12 | Systems and methods for visual object matching |
Publications (2)
Publication Number | Publication Date |
---|---|
US20140086481A1 true US20140086481A1 (en) | 2014-03-27 |
US9020246B2 US9020246B2 (en) | 2015-04-28 |
Family
ID=49487910
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/181,015 Active 2032-04-02 US8577131B1 (en) | 2011-07-12 | 2011-07-12 | Systems and methods for visual object matching |
US14/045,207 Active US9020246B2 (en) | 2011-07-12 | 2013-10-03 | Systems and methods for visual object matching |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/181,015 Active 2032-04-02 US8577131B1 (en) | 2011-07-12 | 2011-07-12 | Systems and methods for visual object matching |
Country Status (1)
Country | Link |
---|---|
US (2) | US8577131B1 (en) |
Cited By (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
EP2924603A3 (en) * | 2014-03-25 | 2015-11-04 | Fmr Llc | Method and system for user authentication based on biometrics, clothes wearing and surrounding scene |
US20160379283A1 (en) * | 2015-06-29 | 2016-12-29 | International Business Machines Corporation | Analysis of social data to match suppliers to users |
US20200226171A1 (en) * | 2019-01-16 | 2020-07-16 | FinancialForce.com, Inc. | Automatic characterization of media files |
Families Citing this family (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8625887B2 (en) * | 2011-07-13 | 2014-01-07 | Google Inc. | Systems and methods for matching visual object components |
US8737728B2 (en) | 2011-09-30 | 2014-05-27 | Ebay Inc. | Complementary item recommendations using image feature data |
JP5810937B2 (en) * | 2012-01-25 | 2015-11-11 | 富士通株式会社 | Management program and device |
WO2013175608A1 (en) * | 2012-05-24 | 2013-11-28 | 株式会社日立製作所 | Image analysis device, image analysis system, and image analysis method |
KR20140035712A (en) * | 2012-09-14 | 2014-03-24 | 한국전자통신연구원 | Method and apparatus of object recognition |
US9754207B2 (en) | 2014-07-28 | 2017-09-05 | International Business Machines Corporation | Corpus quality analysis |
US9536231B2 (en) * | 2014-10-28 | 2017-01-03 | WWTemplar LLC | Managing building information and resolving building issues |
US10019657B2 (en) * | 2015-05-28 | 2018-07-10 | Adobe Systems Incorporated | Joint depth estimation and semantic segmentation from a single image |
US10346996B2 (en) | 2015-08-21 | 2019-07-09 | Adobe Inc. | Image depth inference from semantic labels |
US10169684B1 (en) | 2015-10-01 | 2019-01-01 | Intellivision Technologies Corp. | Methods and systems for recognizing objects based on one or more stored training images |
JP2018112839A (en) * | 2017-01-10 | 2018-07-19 | 富士通株式会社 | Image processing program, image recognition program, image processing device, image recognition device, image recognition method, and image processing method |
CN106874936B (en) * | 2017-01-17 | 2023-07-11 | 腾讯科技（上海）有限公司 | Image propagation monitoring method and device |
US10679064B2 (en) * | 2017-09-28 | 2020-06-09 | Microsoft Technology Licensing, Llc | Optimized classifier update |
US10880274B2 (en) * | 2017-12-20 | 2020-12-29 | Blackberry Limited | Method of control of online sharing of digital photographs and video |
CN110298372B (en) * | 2018-03-23 | 2023-06-09 | 鼎捷软件股份有限公司 | Method and system for automatically training virtual assistant |
CN111460860A (en) * | 2019-01-21 | 2020-07-28 | 北京嘀嘀无限科技发展有限公司 | Target object identification method and device, electronic equipment and storage medium |
US10553085B1 (en) | 2019-01-25 | 2020-02-04 | Lghorizon, Llc | Home emergency guidance and advisement system |
US11043095B1 (en) | 2020-06-16 | 2021-06-22 | Lghorizon, Llc | Predictive building emergency guidance and advisement system |
US11583770B2 (en) | 2021-03-01 | 2023-02-21 | Lghorizon, Llc | Systems and methods for machine learning-based emergency egress and advisement |
US11626002B2 (en) | 2021-07-15 | 2023-04-11 | Lghorizon, Llc | Building security and emergency detection and advisement system |
Citations (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5579471A (en) * | 1992-11-09 | 1996-11-26 | International Business Machines Corporation | Image query system and method |
US6173275B1 (en) * | 1993-09-20 | 2001-01-09 | Hnc Software, Inc. | Representation and retrieval of images using context vectors derived from image information elements |
US6721733B2 (en) * | 1997-10-27 | 2004-04-13 | Massachusetts Institute Of Technology | Information search and retrieval system |
US6774917B1 (en) * | 1999-03-11 | 2004-08-10 | Fuji Xerox Co., Ltd. | Methods and apparatuses for interactive similarity searching, retrieval, and browsing of video |
US7860347B2 (en) * | 2006-08-23 | 2010-12-28 | Microsoft Corporation | Image-based face search |
US20100332475A1 (en) * | 2009-06-25 | 2010-12-30 | University Of Tennessee Research Foundation | Method and apparatus for predicting object properties and events using similarity-based information retrieval and modeling |
US20120114248A1 (en) * | 2010-11-10 | 2012-05-10 | Microsoft Corporation | Hierarchical Sparse Representation For Image Retrieval |
US20120143856A1 (en) * | 2009-08-18 | 2012-06-07 | Osaka Prefecture University Public Corporation | Method for detecting object |
US20120155778A1 (en) * | 2010-12-16 | 2012-06-21 | Microsoft Corporation | Spatial Image Index and Associated Updating Functionality |
US8510283B2 (en) * | 2006-07-31 | 2013-08-13 | Ricoh Co., Ltd. | Automatic adaption of an image recognition system to image capture devices |
US8520949B1 (en) * | 2008-06-20 | 2013-08-27 | Google Inc. | Self-similar descriptor filtering |
Family Cites Families (13)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP3231810B2 (en) * | 1990-08-28 | 2001-11-26 | アーチ・デベロップメント・コーポレーション | Differential diagnosis support method using neural network |
US5706364A (en) * | 1995-04-28 | 1998-01-06 | Xerox Corporation | Method of producing character templates using unsegmented samples |
US6751354B2 (en) * | 1999-03-11 | 2004-06-15 | Fuji Xerox Co., Ltd | Methods and apparatuses for video segmentation, classification, and retrieval using image class statistical models |
US6628808B1 (en) * | 1999-07-28 | 2003-09-30 | Datacard Corporation | Apparatus and method for verifying a scanned image |
US6424960B1 (en) * | 1999-10-14 | 2002-07-23 | The Salk Institute For Biological Studies | Unsupervised adaptation and classification of multiple classes and sources in blind signal separation |
US7039229B2 (en) * | 2000-08-14 | 2006-05-02 | National Instruments Corporation | Locating regions in a target image using color match, luminance pattern match and hill-climbing techniques |
US7043474B2 (en) * | 2002-04-15 | 2006-05-09 | International Business Machines Corporation | System and method for measuring image similarity based on semantic meaning |
TWI240216B (en) * | 2002-06-27 | 2005-09-21 | Ind Tech Res Inst | Pattern recognition method by reducing classification error |
GB2402535B (en) * | 2003-06-05 | 2006-06-21 | Canon Kk | Image processing |
JP2005352900A (en) * | 2004-06-11 | 2005-12-22 | Canon Inc | Device and method for information processing, and device and method for pattern recognition |
US8073263B2 (en) | 2006-07-31 | 2011-12-06 | Ricoh Co., Ltd. | Multi-classifier selection and monitoring for MMR-based image recognition |
US8098936B2 (en) * | 2007-01-12 | 2012-01-17 | Seiko Epson Corporation | Method and apparatus for detecting objects in an image |
JP2010525431A (en) | 2007-04-19 | 2010-07-22 | ディー−ウェイブ システムズ，インコーポレイテッド | System, method and apparatus for automatic image recognition |
-
2011
- 2011-07-12 US US13/181,015 patent/US8577131B1/en active Active
-
2013
- 2013-10-03 US US14/045,207 patent/US9020246B2/en active Active
Patent Citations (16)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5751286A (en) * | 1992-11-09 | 1998-05-12 | International Business Machines Corporation | Image query system and method |
US5579471A (en) * | 1992-11-09 | 1996-11-26 | International Business Machines Corporation | Image query system and method |
US6173275B1 (en) * | 1993-09-20 | 2001-01-09 | Hnc Software, Inc. | Representation and retrieval of images using context vectors derived from image information elements |
US20110106845A1 (en) * | 1997-10-27 | 2011-05-05 | Massachusetts Institute Of Technology | Information search and retrieval system |
US6721733B2 (en) * | 1997-10-27 | 2004-04-13 | Massachusetts Institute Of Technology | Information search and retrieval system |
US20120002880A1 (en) * | 1997-10-27 | 2012-01-05 | Massachusetts Institute Of Technology | Image comparison using regions |
US20110282900A1 (en) * | 1997-10-27 | 2011-11-17 | Massachusetts Institute Of Technology | Image retrieval |
US6774917B1 (en) * | 1999-03-11 | 2004-08-10 | Fuji Xerox Co., Ltd. | Methods and apparatuses for interactive similarity searching, retrieval, and browsing of video |
US8510283B2 (en) * | 2006-07-31 | 2013-08-13 | Ricoh Co., Ltd. | Automatic adaption of an image recognition system to image capture devices |
US7860347B2 (en) * | 2006-08-23 | 2010-12-28 | Microsoft Corporation | Image-based face search |
US8520949B1 (en) * | 2008-06-20 | 2013-08-27 | Google Inc. | Self-similar descriptor filtering |
US20100332475A1 (en) * | 2009-06-25 | 2010-12-30 | University Of Tennessee Research Foundation | Method and apparatus for predicting object properties and events using similarity-based information retrieval and modeling |
US20120143856A1 (en) * | 2009-08-18 | 2012-06-07 | Osaka Prefecture University Public Corporation | Method for detecting object |
US8533162B2 (en) * | 2009-08-18 | 2013-09-10 | Osaka Prefecture University Public Corporation | Method for detecting object |
US20120114248A1 (en) * | 2010-11-10 | 2012-05-10 | Microsoft Corporation | Hierarchical Sparse Representation For Image Retrieval |
US20120155778A1 (en) * | 2010-12-16 | 2012-06-21 | Microsoft Corporation | Spatial Image Index and Associated Updating Functionality |
Cited By (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
EP2924603A3 (en) * | 2014-03-25 | 2015-11-04 | Fmr Llc | Method and system for user authentication based on biometrics, clothes wearing and surrounding scene |
US20160379283A1 (en) * | 2015-06-29 | 2016-12-29 | International Business Machines Corporation | Analysis of social data to match suppliers to users |
US20200226171A1 (en) * | 2019-01-16 | 2020-07-16 | FinancialForce.com, Inc. | Automatic characterization of media files |
Also Published As
Publication number | Publication date |
---|---|
US9020246B2 (en) | 2015-04-28 |
US8577131B1 (en) | 2013-11-05 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9020246B2 (en) | Systems and methods for visual object matching | |
US9117146B2 (en) | Systems and methods for matching visual object components | |
Zheng et al. | SIFT meets CNN: A decade survey of instance retrieval | |
CN107209860B (en) | Method, system, and computer storage medium for processing weakly supervised images | |
Sivic et al. | Efficient visual search for objects in videos | |
US9280560B1 (en) | Scalable image matching | |
US8150098B2 (en) | Grouping images by location | |
US9442950B2 (en) | Systems and methods for dynamic visual search engine | |
WO2016015621A1 (en) | Human face picture name recognition method and system | |
WO2010116333A1 (en) | System and process for builiding a catalog using visual objects | |
Abdullah et al. | Fixed partitioning and salient points with MPEG-7 cluster correlograms for image categorization | |
US20160307068A1 (en) | Method of clustering digital images, corresponding system, apparatus and computer program product | |
Jan et al. | Region of interest-based image retrieval techniques: a review | |
Tong et al. | A review of indoor-outdoor scene classification | |
Manzanera | Local jet feature space framework for image processing and representation | |
EP2960811A1 (en) | Method and device for analyzing a database comprising a large number of video images | |
Truong et al. | Local descriptors without orientation normalization to enhance landmark regconition | |
Chen et al. | An efficient framework for location-based scene matching in image databases | |
Chu et al. | Travelmedia: An intelligent management system for media captured in travel | |
Wu et al. | A novel image retrieval approach with Bag-of-Word model and Gabor feature | |
JP6283308B2 (en) | Image dictionary construction method, image representation method, apparatus, and program | |
Kundlia | W-Tree Indexing For Fast Visual Word Generation | |
Doukim et al. | State of the art of content-based image classification | |
CN117540047A (en) | Method, system, equipment and storage medium for retrieving video based on picture | |
RO135778A0 (en) | System and method for saving and retrieving certain user-defined regions or reference points in an n-dimensional data set |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:LI, YUAN;ADAM, HARTWIG;SIGNING DATES FROM 20110707 TO 20110708;REEL/FRAME:031426/0888 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: SEAGATE TECHNOLOGY LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:LAMMERS, TODD MICHAEL;MATOUSEK, ROBERT;REEL/FRAME:038485/0986Effective date: 20160408 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044141/0827Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
CN108345937A - Cycle is merged with library - Google Patents
Cycle is merged with library Download PDFInfo
- Publication number
- CN108345937A CN108345937A CN201810015644.6A CN201810015644A CN108345937A CN 108345937 A CN108345937 A CN 108345937A CN 201810015644 A CN201810015644 A CN 201810015644A CN 108345937 A CN108345937 A CN 108345937A
- Authority
- CN
- China
- Prior art keywords
- calculating
- optimised
- fusion operation
- single fusion
- fused
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/06—Physical realisation, i.e. hardware implementation of neural networks, neurons or parts of neurons
- G06N3/063—Physical realisation, i.e. hardware implementation of neural networks, neurons or parts of neurons using electronic means
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F8/00—Arrangements for software engineering
- G06F8/40—Transformation of program code
- G06F8/41—Compilation
- G06F8/44—Encoding
- G06F8/443—Optimisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F8/00—Arrangements for software engineering
- G06F8/40—Transformation of program code
- G06F8/41—Compilation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/901—Indexing; Data structures therefor; Storage structures
- G06F16/9024—Graphs; Linked lists
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F8/00—Arrangements for software engineering
- G06F8/40—Transformation of program code
- G06F8/41—Compilation
- G06F8/43—Checking; Contextual analysis
- G06F8/433—Dependency analysis; Data or control flow analysis
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/08—Learning methods
- G06N3/084—Backpropagation, e.g. using gradient descent
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/10—Interfaces, programming languages or software development kits, e.g. for simulating neural networks
- G06N3/105—Shells for specifying net layout
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F8/00—Arrangements for software engineering
- G06F8/40—Transformation of program code
- G06F8/41—Compilation
- G06F8/44—Encoding
- G06F8/443—Optimisation
- G06F8/4441—Reducing the execution time required by the program code
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N3/00—Computing arrangements based on biological models
- G06N3/02—Neural networks
- G06N3/08—Learning methods
Abstract
This application involves cycles to merge with library.Mthods, systems and devices for generating effective compiled code include the computer program encoded on computer storage media.In an exemplary method, compiling system obtains the calculating figure being not optimised, and the calculating figure being not optimised includes the multiple nodes for indicating operation and the directed edge for indicating data dependency.Use pattern matching come analyze the calculating figure being not optimised with determination can be fused into single fusion operation together can fusion operation.By with indicate the aggregators of single fusion operation replace indicate in the calculating figure that is not optimised can fusion operation node, the calculating figure being not optimised is transformed into the calculating figure of optimization.Compiling system generates valid code by the way that the aggregators for optimizing calculating figure to be converted to the calling of execution fusion operation.
Description
Technical field
This specification is related to building and compiling calculating figure.
Background technology
Calculating figure by arithmetic type, be input into each operation and from its export data and calculate dependence
To define sequence of operations.The calculating figure of compiler translation operation is to generate compiled code.
Invention content
This specification is generally described technology related with drawing system is calculated, in particular to for that will calculate expression
For can be converted into efficient compiled code graphic operation system and method.
It includes node, connector directed edge and parameter directed edge to calculate figure.Each node indicates corresponding operation, each connection
Corresponding first node is connected to corresponding second node by symbol directed edge, which indicates will be by corresponding the
One node indicate operation output be received as input operation, and each parameter directed edge be connected to corresponding node and
The flow table of one or more parameters of neural network is shown as to the input of the operation indicated by corresponding node.
In general, a novel aspects of the theme described in this specification can be embodied by system, which includes one
Or multiple computers and one or more storage device, the one or more storage device storage can operation instruction, this refers to
It enables when being executed by one or more computers, one or more computers is made to execute the operation of implementation example method.Example side
Method includes：The calculating figure being not optimised is obtained, the calculating figure being not optimised includes the multiple nodes and expression data for indicating operation
The directed edge of dependence；Use pattern matching is single to be determined to be fused into together to analyze the calculating figure being not optimised
Fusion operation can fusion operation；By with indicate the single fusion operation aggregators replace in the meter being not optimised
In nomogram indicate described in can fusion operation node, the calculating figure being not optimised is transformed into the calculating figure of optimization；And to
Compiler provides the aggregators of the optimization calculating figure, and the aggregators can be converted to execution by the compiler
The fusion operation is to generate the calling of valid code.
The other embodiment of this aspect includes that corresponding computer system, device and coding are deposited in one or more computers
The computer program in equipment is stored up, the action of execution method is respectively configured as.To one or more system for computer by with
It is set to and executes specific operation or action, refer to that system has had mounted thereto software, firmware, hardware or combination thereof,
System is set to execute operation or action in operation.One or more computer programs are configured as executing specific operation or be moved
It includes so that device is executed the instruction of operation or action when being executed by data processing equipment that work, which refers to one or more programs,.
These and other embodiments can optionally include one or more following characteristics.The valid code can be carried
Computing device is supplied to execute.Execution may include the operation of the calculating figure for the single fusion calling for executing all fusion operations.
Use pattern matches to analyze the calculating figure being not optimised to be determined to be fused into melting for single fusion operation together
Closing operation includes：By the part of the calculating figure being not optimised compared with the operation mode for corresponding respectively to single fusion operation；
Determine a part for the calculating figure being not optimised described in pattern match；And determine the calculating being not optimised described in the calculating figure
The compatible portion of figure can use the single fusion operation corresponding to the match pattern to replace.The single fusion operation can be outer
Portion's code library operation.The single fusion operation can be loop computation.Use pattern matches to analyze the meter being not optimised
Nomogram be determined to be fused into together single fusion operation can fusion operation may include：In the calculating being not optimised
Search needs to calculate to generate the input operation of the input in figure；And it determines and inputs operation energy described in the calculating figure
Enough single fusion operations corresponding with calculating needed for the input is generated is replaced.It is described can fusion operation can be just
Then operation.It is described can fusion operation can be fused into the regular operations of non-regular operations.Use pattern matching is described to analyze
The calculating figure being not optimised be determined to be fused into together single fusion operation can fusion operation may include：Use sequence
Algorithm finds out sequence of operations in calculating figure；And it is determined to that the sequence of operations is fused into single fusion using synthesis
Operation.
The theme described in this specification can be realized in a particular embodiment to realize one or more following advantages.
Example embodiment generates effective compiled code by the way that operation is merged into single fusion operation, and compiler can be by the list
A fusion operation is converted into that such as cycle or library is individually called to call.For the purpose of this specification, effective compiled code is
Refer to than using code that conventional compiler compiles faster and the code of less memory may be used.
The single code generation phase for being invoked at compiling that single fusion operation is converted into is executed fusion operation by compiler
All operations.This conversion allows compiler to generate code more faster than the code generated by conventional compiler, primary to turn
Change an operation.In addition, by using the fusion operation that can use less memory than the operation that do not merge, compiler generates
Than the code of the code more memory efficient generated by conventional compiler.
By fusion operation, example embodiment can also provide the program than conventional compiler smaller size.
In the accompanying drawings and the description below, the details of one or more embodiments of the theme of this specification is illustrated.From froming the perspective of
Bright book, drawings and claims, other features, aspect and the advantage of the theme will become obvious.
Description of the drawings
Fig. 1 shows example compiling system.
Fig. 2 is the flow chart for the instantiation procedure that valid code is generated for the calculating out of calculating figure.
Fig. 3 indicates the figure chain of two regular unany operations.
Fig. 4 indicates the operation for the non-monadic operation that can be merged.
Fig. 5 a illustrate that the subgraph of the calculating figure of transposition and point processing.
Figure 5b shows that the optimization versions of subgraph shown in Fig. 5 a.
Fig. 6 a illustrate that the pattern of inverse filter convolution.
Fig. 6 b illustrate that the pattern of reversed input convolution.
Similar reference number and title indicate similar element in different figures.
Specific implementation mode
This specification is generally described the compiling system for the operation that compiling is shown by calculation chart.Particularly, this specification is retouched
The technology for generating valid code by the way that the calculating being fused together to out of calculating figure will be calculated is stated.
Calculate the calculating of data flow graph representation such as machine learning model, wherein node indicates operation, and directed edge indicates
Data dependency between operation.To node input side indicate to node inlet flow, that is, by node indicate operation it is defeated
Enter independent variable.If all independents variable needed for operation can be used in operation node, which is enabled and can be held
Row.
Output side from node indicates that being indicated by the node for the input of the operation indicated by another node will be used as
Operation output stream.Therefore, the directed edge that the first node in figure is connected to the second node in figure is indicated by first segment
The output that the represented operation of point is generated is used as the input of the operation represented by second node.
In some embodiments, the operation indicated in calculating figure is Linear Algebra Operation, such as matrix multiplication, nerve
Network operations or operation for different types of machine learning model.Neural network is to use one or more layers non-linear unit
To predict to receive the machine learning model of the output inputted.Some neural networks are deep neural networks, in addition to output layer it
Outside, further include one or more hidden layers.The output layer of each hidden layer is used as i.e. another hidden layer of another layer in network, defeated
Go out the input of layer or both.Some layers of network are generated from the input of reception and are exported according to the current value of relevant parameter collection, and net
Other layers of network can not have parameter.
The operation shown by calculation chart can be that neural computing reasoning handles input with needle by neural net layer
Operation needed for neural network output is generated to input.It adds or as an alternative, the operation shown by calculation chart can be by holding
Row neural network training process come adjust neural network parameter value come train neural network, for example for using backpropagation
To determine operation necessary to the trained values of parameter from the initial value of parameter.In some cases, such as in training neural network
Period may include the operation executed by multiple copies of neural network by the operation that calculation chart shows.
For example, from preceding layer receive input neural net layer can using parameter matrix come execute parameter matrix and
Matrix multiplication between input.In some cases, matrix multiplication can be expressed as multiple nodes in calculating figure.For example, square
Battle array multiplication can be divided into multiple multiplication and add operation, and each operation can be indicated by the different nodes in calculating figure.
The operation that each node indicates can generate corresponding output, be flowed on directed edge to subsequent node.By finish node table
After the operation shown generates the result of matrix multiplication, another node is as a result flowed on directed edge.As a result it is equal to execution matrix
The output of the neural net layer of multiplication.
In some other cases, matrix multiplication is represented as a node in figure.The operation that node indicates can incite somebody to action
The weight tensor such as parameter matrix on input the second directed edge of tensor sum on first directed edge is received as inputting.Node can be with
Processing input tensor sum weighted tensor, such as the matrix multiplication of input tensor sum weighted tensor is executed, on third directed edge
Output equivalent is in the output tensor of the output of neural net layer.
Other neural network computings that can be indicated by the node in calculating figure include other mathematical operations, such as subtraction,
Division and gradient calculate；Array operation, such as connection, splicing, fractionation or order；And neural network structure block operation, such as
SoftMax, Sigmoid, rectification linear unit (ReLU) or convolution.
In the example system, one or more of calculating figure set of node can indicate to control data flow by calculating figure
Operation.For example, one or more sets of node can be for example including following conditional statements, recurrence sentence and/or iteration control
Flow sentence：If sentences, while cycles, do-while are recycled, for for cycles each recycled or including these sentences
The nested control stream sentence of combination.
One or more of calculating figure set of node can indicate some operations for the operation that can be converted into high-performance library,
The high-performance library includes the high-performance of for example reversed convolution of linear algebra such as matrix multiplication or neural network computing, possibility
The specific embodiment of machine.In some embodiments, as will be explained herein, for being converted into the operation in high-performance library simultaneously
And the adaptability of the operation in the figure that may be merged may depend on bottom hardware architecture and machine configuration.
In example compiling system, multiple operations are fused into fusion operation by compiling system, which can hold
The code building time of all fusion operations of row is converted into calling.The fusion process generates faster code, and may make
With the less memory of the equipment such as central processing unit (CPU) or graphics processing unit (GPU).
Fig. 1 shows example compiling system 100.Compiling system 100 is in one or more of one or more positions
The example of the system of computer program is embodied as on computer, wherein system described below, component and technology may be implemented.
The calculating figure being not optimised is received as input 102 by compiling system 100.As described above, operation is expressed as by calculating figure
One or more sets of node and the data dependency between operation is expressed as side.
The calculating figure input 102 that 106 use pattern adaptation 104 of the pattern analysis device analysis of compiling system 100 is not optimised,
Such as improve efficiency by matching some pattern in the calculating figure being not optimised.Compiling system will come from pattern matcher 104
Pattern compared with the operation mode in calculating figure.Then, the figure analyzed is supplied to Graphics Fusion by pattern analysis device 106
Generator 108.To each match pattern, Graphics Fusion generator 108 will be from calculating Figure 102 being not optimised corresponding to pattern
Multiple operations merge or be fused into single fusion operation to create the optimization calculating figure with aggregators.Then, figure melts
Symphysis is grown up to be a useful person 108 is supplied to code generator 114 by the optimization calculating figure with aggregators.Code generator 114 will be each
Aggregators are for example recycled as the calling for executing all fusion operations or library is called can be provided to be converted with generating
To multiple equipment (116,118,120,122) for the efficient compiled code of execution.Due to executing fusion fortune in optimizing figure
Calculation is more more efficient than executing the corresponding multiple operations substituted by single fusion operation in being not optimised figure, so being generated by optimization figure
Code cause efficiency to improve.
Executing any equipment such as equipment 116,118,120,122 of operation indicated by effective compiled code may include
For storing instruction with the memory of data such as random access memory (RAM) and for handling the instruction for executing storage
Processor.In general, each equipment is independently of the hardware resource that other equipment executes compiled code.For example, each equipment
There can be the processing unit of oneself.These equipment can be that graphics processing unit (GPU), central processing unit (CPU), scene can
Program gate array (FPGA), application-specific integrated circuit (ASIC) or other operation application specific processors.For example, machine can be with
Trustship one or more equipment, such as multiple CPU, GPU, FPGA, ASIC or the specific processor of operation.
Fig. 2 is the flow chart of the instantiation procedure 200 for generating efficient code by the calculating in calculating figure.For convenience,
Process 200 will be described as by being located at one or more positions, and according to the suitably programmed one or more of this specification
System for computer executes.For example, the example compiling system 100 for the Fig. 1 being suitably programmed can be with implementation procedure 200.
System receives the calculating figure of the directed edge with the node for indicating operation and expression data dependency being not optimised
202。
Then, the matching of system use pattern carrys out analysis meter nomogram can be fused to single fusion operation together with determination
Fusion operation 204.
System by with indicate the node of single fusion operation replace in the calculating figure that is not optimised can fusion operation, will not
The calculating figure of optimization is transformed into calculating Figure 20 6 of optimization.
Then, system executes the calling next life of all fusion operations by being converted to the aggregators of the calculating figure of optimization
At effective compiled code 208.It is then possible to which effective compiled code is supplied to computing device such as graphics processing unit and center
Processing unit is for execution.
Cycle fusion
The member for inputting array by possible successive ignition usually realizes loop computation, to calculate output array.Calculate figure
Loop computation is canonical or the form of non-regular operations.Regular operations such as addition, index or transposition are from output each of array
Each input array of element reads an at most element.Non-regular operations are for example put or convolution needs to read the more of input array
In one element to generate the individual element of output array.
Regular operations can be broken down into two kinds of function：It is applied to a function of input data and is applied
In a function of output index.
For example, regular unany operation can be expressed as：
A[i0,…,in-1]=fop(B[findex(i0,…,in-1)]), wherein { i0,…,in-1) it is multi-dimensional indexing, fopBe by
The data function of operation applied to the data element from input, such as power and findexIt is to reflect the index for exporting array
It is mapped to the index function of the operation of the index of input array.For example, to each iteration of cycle, example compiling system impliedly structure
Make the index function f of operationindexSo which input element determination will read.findexThe dimension of output can with for example broadcast
Input in operation is different.
Regular operations are expressed by using individual index and data function, example compiling system can use these letters
Several combinations carrys out easily fusion operation.
Fig. 3 shows the figure chain of two regular unany operations, B=opg(C) and A=opf(B)305.As indicated, first just
Then monadic operation can be by executing op on input array C 303cgTo generate output array B 303b.Second canonical unitary
Operation can be by executing op on input array B 303bfTo generate output array A 303a.Operation opfWith data function
fopWith index function findex, operation opgWith data function gopWith index function gindex。
Output array A 303a can be represented as the function of C 303c：
A[i0,i1]=fop(gop(C[gindex(findex(i0,i1))]))。
The expression formula merges opfAnd opg.The expression formula is the combination that can be used to merge the sequence of any regular operations.
To fusion operation, each operation should resolve into data function and index function.It is broken down into data function fopWith
Index function findexSome examples of regular operations be：
(1) the unitary exponentiation operator based on element
fop(x)=exp (x)
findex(i0,…,in-1)={ i0,…,in-1}
(2) transposition
fop(x)=x
findex(i0,i1)={ i1,i0}
(3) it is sliced (beginning and end is taken to index)
fop(x)=(x)
findex(i0,…,in-1)={ i0+start0,…,in-1+startn-1}
As an example it is supposed that the code of table 1 is code to be compiled.
C=...
B=op0 (C)
A=op1 (B)
D=op2 (B)
Table 1
Compiling system use pattern matches to analyze the calculating figure for indicating code.In order to merge monadic operation, compiling system
It searches for compiling figure and collects regular operations as much as possible for merging.If selected using for fusion except fusion operation
Operation, then operation will have to be calculated twice --- once in fusion operation, once except fusion operation.
For example, compiling system can find the operation that can be merged using known operation mode or algorithm
Chain.In one example, pattern can be related to the operation provided by programming language or compiler.In another example, Ke Yixiang
Pattern provides high-performance library, wherein pattern is related to the operation that high-performance library includes.In the example of table 1, using canonical unitary
Operation fusion obtains：
A=(op1 ° of op0) (C)
D=(op2 ° of op0) (C)
For non-unitary regular operations, such as A=op (B, C), operation can also be expressed as data function and index function.
For example, A=op (B, C) can be represented as：
A[i0,…,in-1]=fop(B[findex0(i0,…,in-1)],C[findex1(i0,…,in-1)]), wherein findex0With
findex1Can be identical, for example, in the addition by element (element-wise) that index function is unit matrix, Huo Zheke
With difference, for example, as in by the connection of broadcast and binary arithmetic operation.Same composition rule is being suitable for non-unitary just
Advise operation.For example, it may be desirable to compile the code of table 2.
C=opg(D)
A=opf(B,C)
Table 2
If opgWith index and data function gindexAnd gopAnd opfWith findexAnd fop, then fusion operation can
To be represented as：
A[i0,…,in-1]=fop(B[findex0(i0,…,in-1)],gop(D[gindex1(findex1(i0,…,in-1))]))。
Fig. 4 shows the operation of the non-monadic operation of the table that can be merged 3.Non- monadic operation form figure rather than
Chain.
D=OpP(B)
E=OpQ(C)
F=OpR(D,E)
G=OpS(E)
A=OpT(F,G)
Table 3
As described above, in order to find the operation that can be merged, the matching of compiling system use pattern indicates to analyze
The calculating figure of code.In order to merge non-monadic operation, compiling system, which attempts to merge as much as possible, is limited by the defeated of fusion operation
Enter the regular operations of the limitation of quantity.Too many input can increase memory usage amount and hinder performance.
For example, compiling system can search the operation that can be merged using known operation mode or algorithm.
In the example of table 3, generated using the non-monadic operation fusion of canonical：
A[i0,…,in-1]=top(rop(pop(B[b_index]),
qop(C[c_index_0])),
sop(qop(C[c_index_1])))
Wherein：
B_index=pindex(rindex(tindex(i0,…,in-1)))
C_index_0=qindex(rindex(tindex(i0,…,in-1)))
C_index_1=qindex(sindex(tindex(i0,…,in-1)))
In this example, XindexIt is opxIndex function, XopIt is opxData function.Compiling system passes through in traversing graph
All paths from A 410 to input B 401a and C 401b indicate to construct the fusion.Composition index function is traversed up, from
A 410 arrives OpT405e to OpR405c and OpS 405d, then arrive Opp405a and OpQ405b finally arrives input B 401a and C
401b.Traversal composition data function downwards.
Regular operations can also be fused into some non-regular operations to improve code efficiency.For example, it is contemplated that row in table 4
Following realizations of reduction, are non-regular operations：
Table 4
Input matrix is divided into tile by row retrieving algorithm, and each tile is restored by thread.Per thread is by partial reduction
As a result it is added to output vector.The reduction is not regular operations, because each output element is by multiple threads rather than a line
Journey calculates.However, if the operation for generating input element is regular operations, can be fused in row reduction.For example,
The input of reductor operation on 10th row can be the left side lhs [y] [x] and subtraction of the i.e. subtraction of two numbers
Subtraction between right side rhs [y] [x].
Table 5
Table 5 shows the operation for generating input element being fused in row reduction.10th row shows to actually enter element calculating.
It is fused in row reduction by that will calculate, compiling system generates the independent kernel that need not be used for subtraction or preserves subtraction result
The code of exceptional space.
As described above, in order to find the input operation that can be merged, compiling system use pattern matches to analyze
Indicate the calculating figure of code.For example, compiling system can by as regular operations subset by the operation of element be fused into it is non-just
Then operation.The input element at index identical with output element is read by the operation of element.Therefore, fusion is by element
Operation will not change the memory access patterns of non-regular operations.
It merges in library
Some hardware suppliers provide high-performance library and its hardware.These libraries can include the high-performance embodiment party of operation
Formula.However, these libraries are typically envelope source, and/or write with private hardware opinion.Example compiling system supplies these
The library that quotient provides is answered to be used to calculate certain calculating patterns in figure.
Example compiling system indicates that the calculating figure of code can be merged to search for by using pattern match analysis
Calculating figure operation.For example, compiling system can be come by searching for certain patterns of the operation subgraph of library operation known to matching
Improve efficiency.Then, these subgraphs can be replaced in calculating figure with the aggregators of library representation operation.
Fig. 5 a illustrate that the subgraph of the calculating figure of transposition and point processing.The subgraph is by executing to input array 501a's
The transposition operation 505 of point processing and transposition input array B501b exports array C to calculate.Subgraph has form：C=Dot (A,
Transpose (B)), the pattern called as library known to matching.The pattern, which can match, carrys out free external hardware supplier offer
Library library call.
Figure 5b shows that the optimization versions of subgraph shown in Fig. 5 a.It includes input array that compiling system, which can use,
Pattern in subgraph of the pattern 525 that the library of 502a, 502b, transposition operation 515 and point processing are called to match Fig. 5 a.It is compiling
For the pattern 525 that system calls library with after the subgraph match of Fig. 5 a, subgraph can be fused into single fusion library by compiling system
Call operation.Then, compiling system can replace the subgraph in calculating figure with the aggregators 530 for individually merging library calling are indicated
5a.During code building, compiling system, which is converted to aggregators, executes all fusion operations for generating effective compiled code
Library call.
Fig. 6 a illustrate that the pattern of inverse filter convolution.The pattern match is followed by the activation A of transposition operation 610
Convolution algorithm 605 on 601a and gradient G 601b.If it includes the pattern to calculate figure, compiling system can will indicate reversed
The subgraph of filter convolution is fused into single fusion operation, and merges individually melting for inverse filtering convolution algorithm with indicating single
It closes node and replaces the subgraph calculated in figure.
Fig. 6 b illustrate that the pattern of reversed input convolution.It the pattern match gradient G 602a and is produced by reversed operation 630
The convolution algorithm 640 of raw mirror filter F 602b.If it includes the pattern to calculate figure, compiling system can will indicate anti-
It is fused into single fusion operation to the subgraph of input convolution, and is melted with indicating individually to merge reversely the single of input convolution algorithm
It closes node and replaces the subgraph calculated in figure.
Once compiling system replaces the subgraph calculated in figure with aggregators, then compiling system can convert aggregators
To execute the calling of all fusion operations.This process generates code more more effective than the code of once one operation of compiling.
It can be in Fundamental Digital Circuit device either in the computer software or firmware visibly embodied or in computer
Hardware is included in the description the group of the one or more in disclosed structure and its structural equivalents or in them
Implement the embodiment of the theme described in the present specification and feature operation in conjunction.It can be by the theme described in the present specification
Embodiment is embodied as one or more computer program, that is, encodes and be used for by data on tangible non-transitory storage medium
Processing unit executes or one or more computer program instructions module of the operation of control data processing equipment.Computer
Storage medium can be machine readable storage device, machine readable storage substrate, random or serial access memory equipment or
The combination of one or more of the person in them.It as an alternative or in addition to this, can be in the transmitting signal being artificially generated such as machine
Coded program instructions in the electricity of generation, light or electromagnetic signal, the signal are generated for information coding for appropriate
Acceptor device sends so that data processing equipment executes.
Term " data processing equipment " refers to data processing hardware and covers various device, equipment for handling data
And machine, include for example programmable processor, computer, multiple processors or computer.The device can be or into one
Step includes dedicated logic circuit device, for example, FPGA (field programmable gate array) or ASIC (application-specific integrated circuit).The dress
It sets in addition to hardware, also optionally includes the code for creating performing environment for computer program, for example, it is solid to constitute processor
Part, protocol stack, data base management system, the code of operating system or the one or more in them combination code.
Computer program (can also be referred to as or be described as program, software, software application, application, module, software module,
Script either code) it can be write with any type of programming language including compiling or interpretive language or statement or process language
Speech, and computer program can be disposed with any form, including be deployed as stand-alone program or be deployed as being suitable for calculating ring
Module, component, subroutine or other units used in border.Program can still not necessarily correspond to the text in file system
Part.Program can be stored in the file for keeping other programs or data, for example, be stored in marking language document one or
It in a part for the multiple scripts of person, is exclusively used in the single file of the program discussed, or in multiple coordinated files, for example,
In the file for storing one or more module, subprogram or code section.Computer program can be disposed at one
Either in the multiple calculating for being distributed and being interconnected by data communication network positioned at one place or across multiple places on computer
It is executed on machine.
The process and logic flow described in the present specification can be executed by one or more programmable processor, this one
A or multiple programmable calculators execute one or more computer program with by input data carry out operation and
Output is generated to execute function.The process and logic flow can also be executed by dedicated logic circuit such as FPGA or ASIC, or
It can be executed by the combination of dedicated logic circuit and one or more programmed computers.
The computer capacity for being adapted for carrying out computer program is based on general or specialized microprocessor or both, Huo Zheren
What other kinds of central processing unit.In general, central processing unit will from read-only memory or random access memory or
Both persons receive instruction and data.The necessary component of computer be for realizing or the central processing unit and use that execute instruction
In one or more of store instruction and data memory devices.Central processing unit and memory can be by special logic electricity
Road supplements or is incorporated in dedicated logic circuit.In general, computer will also include or be operatively coupled to receive from it data or
One or more mass memory unit for storing data of data is transmitted to it, for example, disk, magneto-optic disk or light
Disk.However, equipment as computer need not have.In addition, computer capacity is embedded in another equipment, merely give a few examples, example
Such as, mobile phone, personal digital assistant (PDA), Mobile audio frequency or video player, game console, global positioning system
(GPS) receiver or portable storage device, for example, universal serial bus (USB) flash drive.
It is suitable for storing computer program instructions and the computer-readable medium of data including the non-volatile of form of ownership
Memory, medium and memory devices include for example semiconductor memory devices, for example, EPROM, EEPROM and flash
Memory devices；Disk, for example, internal hard drive or removable disk；Magneto-optic disk；And CD-ROM and DVD-ROM disks.
In order to provide the interaction with user, the embodiment of the theme described in the present specification can be implemented on computers,
The computer has the display equipment for showing information to user, for example, CRT (cathode-ray tube) or LCD (liquid crystal displays
Device) monitor and user can provide the keyboard and indicating equipment of input, such as mouse or tracking ball to computer.Other
The equipment of type can be provided for providing the interaction with user；For example, the feedback provided a user can be that any type of sense organ is anti-
Feedback, for example, visual feedback, audio feedback or touch feedback；And it includes any of sound, voice or sense of touch that can use
Form receives input from the user.In addition, computer capacity sends document by the equipment used to user and is connect from the equipment
Message in-coming shelves, such as sent by web browser of the request in response to being received from Web browser on the client device of user
Webpage is interacted with user.Meanwhile computer can by personal device such as smart phone sending information message or other
The message of form runs messages application and is interacted with user as return reception response message.
The embodiment of the theme described in the present specification can be implemented in computing systems, which includes for example making
For the aft-end assembly of data server, or including middleware component, such as application server, or including front end assemblies, example
Such as with graphic user interface, Web browser or app client computer, user can by they in the present specification
Embodiment interaction either one or more such rear end, middleware or the front end component of the theme of description it is any
Combination.The component of system can pass through any digital data communications form or medium such as interconnection of telecommunication network.Communication network
Example includes LAN (" LAN ") and wide area network (" WAN "), for example, internet.
Computing system can include client and server.Client and server is generally remote from each other and usually by logical
Communication network interacts.The relationship of client and server by run on corresponding computer and mutually have client-server
The computer program of device relationship and generate.In some embodiments, data such as html page is transmitted to user and set by server
It is standby, such as in order to the user's display data interacted with the equipment as client and receive from it purpose input by user.
At server the data generated at user equipment, such as the result of user's interaction can be received from equipment.
Other than appended claims and the embodiment of above-described embodiment, the embodiment numbered below is also innovation：
Embodiment 1 is a kind of method, including：The calculating figure being not optimised is obtained, the calculating figure being not optimised includes indicating
Multiple nodes of operation and the directed edge for indicating data dependency；Use pattern matching come analyze the calculating figure being not optimised with
What determination can be fused into single fusion operation together can fusion operation；By with the fusion for indicating the single fusion operation
Node replace indicated in the calculating figure being not optimised described in can fusion operation node, the calculating figure that is not optimised is become
Change the calculating figure of optimization into；And the aggregators of the optimization calculating figure are provided to compiler, the compiler can be with
The aggregators are converted to and execute the fusion operation to generate the calling of valid code.
Embodiment 2 is the method for embodiment 1, is further comprised：The valid code is supplied to computing device to execute.
Embodiment 3 is the method described in embodiment 2, wherein execution includes：Execution includes the list for executing all fusion operations
The operation for the calculating figure that a fusion is called.
Embodiment 4 is the method described in any one of embodiment 1 to 3, wherein use pattern matching come analyze it is described not
The calculating figure of optimization with determination can be fused into together single fusion operation can fusion operation include：It is not optimised described
The part of calculating figure is compared with the operation mode for corresponding respectively to single fusion operation；Determine the meter being not optimised described in pattern match
A part for nomogram；And it determines that the compatible portion for the calculating figure being not optimised described in the calculating figure can be used to correspond to and is somebody's turn to do
The single fusion operation of match pattern is replaced.
Embodiment 5 is the method described in any one of embodiment 1 to 4, wherein the single fusion operation is external generation
Code library operation.
Embodiment 6 is the method described in any one of embodiment 1 to 5, wherein the single fusion operation is circulating
It calculates.
Embodiment 7 is the method described in any one of embodiment 1 to 6, wherein use pattern matching come analyze it is described not
The calculating figure of optimization with determination can be fused into together single fusion operation can fusion operation include：It is not optimised described
Search needs to calculate to generate the input operation of the input in calculating figure；And it determines and inputs fortune described in the calculating figure
Calculate can be by replacing corresponding to the single fusion operation for generating the calculating needed for the input.
Embodiment 8 is the method described in any one of embodiment 1 to 7, wherein it is described can fusion operation be canonical fortune
It calculates.
Embodiment 9 is the method described in any one of embodiment 1 to 8, wherein it is described can fusion operation be fused into it is non-
The regular operations of regular operations.
Embodiment 10 is the method described in any one of embodiment 1 to 9, wherein use pattern matching is described to analyze
The calculating figure being not optimised with determination can be fused into together single fusion operation can fusion operation include：It is calculated using sequence
Method finds out sequence of operations in calculating figure；And determination can use synthesis that the sequence of operations is fused into single fusion fortune
It calculates.
Embodiment 11 is one or more storage devices of one or more computers and the operable instruction of storage
System is instructed when being executed by one or more computers, and one or more computers is made to execute any the one of embodiment 1 to 10
A operation.
Embodiment 12 is one or more non-transitory computer-readable storage medias, including the instruction being stored thereon,
Instruction can be executed by processing equipment, and when being executed, and processing equipment is made to execute any one operation of embodiment 1 to 10.
Although this specification includes many specific implementation mode details, should not be construed as limiting any invention
Range or the content that can be claimed range, but be construed to the distinctive feature of the specific implementation mode specifically invented
Description.Certain features in the present specification described in the background of separated embodiment also can be in single embodiment by group
It closes and implements.On the contrary, various features described in the background of single embodiment also can in various embodiments dividually or
It is carried out in any appropriate sub-portfolio.In addition, though action and even can be described feature as in certain combinations above
Originally claimed in this way, but one or more feature from claimed combination can be in some cases from the group
It is deleted in conjunction, and claimed combination can relate to the modification of sub-portfolio or sub-portfolio.
Similarly, it is operated although being described in the accompanying drawings with particular order, this is understood not to require with shown spy
It is fixed that such operation is either sequentially executed with sequence successively or executes all shown operations to realize desired result.Certain
In circumstances, multitask and parallel processing can be advantageous.In addition, the various system modules in examples described above and portion
The separation of part is understood not to require such separation in all embodiments, and should understand that description program assembly and
System generally can together be integrated in single software product or be packaged into multiple software product.
Describe the specific embodiment of theme.Other embodiment is within the scope of the appended claims.For example, in right
Action described in it is required that can be performed by different order and still realize desired result.As an example, in the accompanying drawings
The process of description is not necessarily required shown particular order or successively sequentially to realize desired result.In some cases, more
Business and parallel processing can be advantageous.
Claims (20)
1. a kind of method, including：
The calculating figure being not optimised is obtained, the calculating figure being not optimised includes the multiple nodes and expression data dependence for indicating operation
The directed edge of property；
Use pattern matches to analyze the calculating figure being not optimised to be determined to be fused into single fusion operation together
It can fusion operation；
By with indicate the aggregators of the single fusion operation replace indicate in the calculating figure being not optimised it is described can
The calculating figure being not optimised is transformed into the calculating figure of optimization by the node of fusion operation；And
The aggregators of the calculating figure of the optimization are provided to compiler, the compiler can turn the aggregators
It is changed to and executes the fusion operation to generate the calling of valid code.
2. the method as described in claim 1 further comprises：
The valid code is supplied to computing device to execute.
3. method as claimed in claim 2, wherein the execution includes：
Execute the operation of the calculating figure for the optimization for including the single fusion operation for executing all fusion operations.
4. the method for claim 1, wherein use pattern matches to analyze the calculating figure being not optimised to determine energy
It is enough be fused into together single fusion operation can fusion operation include：
By the part of the calculating figure being not optimised compared with the operation mode for corresponding respectively to single fusion operation；
Determine a part for the calculating figure being not optimised described in a pattern match；And
It determines that the compatible portion for the calculating figure being not optimised described in the calculating figure of the optimization can be used and corresponds to the matching mould
The single fusion operation of formula is replaced.
5. the method for claim 1, wherein the single fusion operation is the operation of external code library.
6. the method for claim 1, wherein the single fusion operation is loop computation.
7. the method for claim 1, wherein use pattern matches to analyze the calculating figure being not optimised to determine energy
It is enough be fused into together single fusion operation can fusion operation include：
Search needs to calculate to generate the input operation of the input in the calculating figure being not optimised；And
Determine the optimization calculate input operation described in figure can with generate the calculating phase needed for the input
Corresponding single fusion operation is replaced.
8. the method for claim 1, wherein it is described can fusion operation be regular operations.
9. the method for claim 1, wherein it is described can fusion operation be to be fused into the regular operations of non-regular operations.
10. according to the method described in claim 1, wherein, use pattern matches to analyze the calculating figure being not optimised with true
Surely can be fused into together single fusion operation can fusion operation include：
Using sort algorithm, sequence of operations is found out in calculating figure；And
It is determined to that the sequence of operations is fused into single fusion operation using synthesis.
11. a kind of system, including：
One or more computers；And
One or more storage devices, one or more of storage device store instructions, described instruction is by one or more
Computer makes one or more of computers implement system operatio when executing, the system operatio includes：
The calculating figure being not optimised is obtained, the calculating figure being not optimised includes the multiple nodes and expression data dependence for indicating operation
The directed edge of property；
Use pattern matches to analyze the calculating figure being not optimised to be determined to be fused into single fusion operation together
It can fusion operation；
By with indicate the aggregators of the single fusion operation replace indicate in the calculating figure being not optimised it is described can
The calculating figure being not optimised is transformed into the calculating figure of optimization by the node of fusion operation；And
The aggregators of the calculating figure of the optimization are provided to compiler, the compiler can turn the aggregators
It is changed to and executes the fusion operation to generate the calling of valid code.
12. system as claimed in claim 11, wherein the system operatio further comprises：
The valid code is supplied to computing device to execute.
13. system as claimed in claim 12, wherein the execution includes：
Execute the operation of the calculating figure for the optimization for including the single fusion operation for executing all fusion operations.
14. system as claimed in claim 11, wherein use pattern matches to analyze the calculating figure being not optimised with determination
Can be fused into together single fusion operation can fusion operation include：
By the part of the calculating figure being not optimised compared with the operation mode for corresponding respectively to single fusion operation；
Determine a part for the calculating figure being not optimised described in a pattern match；And
It determines that the compatible portion for the calculating figure being not optimised described in the calculating figure of the optimization can be used and corresponds to the matching mould
The single fusion operation of formula is replaced.
15. system as claimed in claim 11, wherein the single fusion operation is the operation of external code library.
16. system as claimed in claim 11, wherein the single fusion operation is loop computation.
17. system as claimed in claim 11, wherein use pattern matches to analyze the calculating figure being not optimised with determination
Can be fused into together single fusion operation can fusion operation include：
Search needs to calculate to generate the input operation of the input in the calculating figure being not optimised；And
Determine that input operation described in figure that calculates in the optimization can be with corresponding with calculating needed for the input is generated
Single fusion operation replace.
18. system as claimed in claim 11, wherein it is described can fusion operation be regular operations.
19. system according to claim 11, wherein use pattern matches to analyze the calculating figure being not optimised with true
Surely can be fused into together single fusion operation can fusion operation include：
Using sort algorithm, sequence of operations is found out in calculating figure；And
It is determined to that the sequence of operations is fused into single fusion operation using synthesis.
20. the non-transitory computer-readable storage media of one or more store instructions, described instruction are held by processing equipment
The processing equipment is made to execute system operatio when row, the system operatio includes：
The calculating figure being not optimised is obtained, the calculating figure being not optimised includes the multiple nodes and expression data dependence for indicating operation
The directed edge of property；
Use pattern matches to analyze the calculating figure being not optimised to be determined to be fused into single fusion operation together
It can fusion operation；
By with indicate the aggregators of the single fusion operation replace indicate in the calculating figure being not optimised it is described can
The calculating figure being not optimised is transformed into the calculating figure of optimization by the node of fusion operation；And
The aggregators of the calculating figure of the optimization are provided to compiler, the compiler can turn the aggregators
It is changed to and executes the fusion operation to generate the calling of valid code.
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/400,942 US9798527B1 (en) | 2017-01-06 | 2017-01-06 | Loop and library fusion |
US15/400,942 | 2017-01-06 |
Publications (2)
Publication Number | Publication Date |
---|---|
CN108345937A true CN108345937A (en) | 2018-07-31 |
CN108345937B CN108345937B (en) | 2019-11-12 |
Family
ID=60082642
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201810015644.6A Active CN108345937B (en) | 2017-01-06 | 2018-01-08 | Circulation is merged with library |
Country Status (7)
Country | Link |
---|---|
US (1) | US9798527B1 (en) |
CN (1) | CN108345937B (en) |
DE (1) | DE102018100239A1 (en) |
GB (1) | GB2560410A (en) |
HK (1) | HK1259126A1 (en) |
SG (1) | SG10201800155PA (en) |
WO (1) | WO2018129327A1 (en) |
Cited By (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN109740751A (en) * | 2018-12-24 | 2019-05-10 | 北京中科寒武纪科技有限公司 | The framework fusion method and relevant apparatus of neural network model |
CN110210614A (en) * | 2019-05-31 | 2019-09-06 | 北京中科寒武纪科技有限公司 | Operation method, device and Related product |
CN111459464A (en) * | 2019-01-22 | 2020-07-28 | 阿里巴巴集团控股有限公司 | Node fusion method, code generation method and device |
WO2021000970A1 (en) * | 2019-07-03 | 2021-01-07 | 安徽寒武纪信息科技有限公司 | Deep learning algorithm compiling method, device, and related product. |
WO2021052391A1 (en) * | 2019-09-18 | 2021-03-25 | 华为技术有限公司 | Method for constructing intermediate representation, compiler and server |
CN112947997A (en) * | 2019-12-11 | 2021-06-11 | 阿里巴巴集团控股有限公司 | Data processing method and device, instruction fusion method and code generation method |
CN112947933A (en) * | 2021-02-24 | 2021-06-11 | 上海商汤智能科技有限公司 | Operator execution method and device, computer equipment and storage medium |
CN112965710A (en) * | 2019-12-13 | 2021-06-15 | 阿里巴巴集团控股有限公司 | Processing method, device and system of computation graph |
WO2021114530A1 (en) * | 2019-12-12 | 2021-06-17 | Huawei Technologies Co., Ltd. | Hardware platform specific operator fusion in machine learning |
CN113298263A (en) * | 2020-05-13 | 2021-08-24 | 阿里巴巴集团控股有限公司 | Calculation graph processing method and device, model running method and device, electronic equipment, server and edge terminal |
CN116185426A (en) * | 2023-04-17 | 2023-05-30 | 北京大学 | Compiling optimization method and system based on code fusion and electronic equipment |
CN117492766A (en) * | 2023-12-27 | 2024-02-02 | 深圳市九天睿芯科技有限公司 | Compiling method, compiler, neural network accelerator, chip and electronic equipment |
Families Citing this family (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10152310B2 (en) * | 2015-05-27 | 2018-12-11 | Nvidia Corporation | Fusing a sequence of operations through subdividing |
CN108304177A (en) * | 2017-01-13 | 2018-07-20 | 辉达公司 | Calculate the execution of figure |
CA3058223A1 (en) | 2017-03-29 | 2018-10-04 | Ab Initio Technology Llc | Systems and methods for performing data processing operations using variable level parallelism |
EP3428746B1 (en) * | 2017-07-14 | 2021-06-02 | Siemens Aktiengesellschaft | A method and apparatus for providing an adaptive self-learning control program for deployment on a target field device |
US11188434B2 (en) | 2017-12-08 | 2021-11-30 | Ab Initio Technology Llc | Systems and methods for monitoring execution of structured query language (SQL) queries |
CN108198124B (en) * | 2017-12-27 | 2023-04-25 | 上海联影医疗科技股份有限公司 | Medical image processing method, medical image processing device, computer equipment and storage medium |
US20190370407A1 (en) * | 2018-05-30 | 2019-12-05 | Ab Initio Technology Llc | Systems and methods for dataflow graph optimization |
US20210232969A1 (en) * | 2018-12-24 | 2021-07-29 | Intel Corporation | Methods and apparatus to process a machine learning model in a multi-process web browser environment |
CN111667060B (en) * | 2019-03-08 | 2022-12-09 | 上海寒武纪信息科技有限公司 | Deep learning algorithm compiling method and device and related products |
US11194688B1 (en) * | 2019-05-08 | 2021-12-07 | Amazon Technologies, Inc. | Application architecture optimization and visualization |
WO2021035397A1 (en) * | 2019-08-23 | 2021-03-04 | Alibaba Group Holding Limited | Method and apparatus for data-move task optimizing |
US11410027B2 (en) | 2019-09-16 | 2022-08-09 | SambaNova Systems, Inc. | Performance estimation-based resource allocation for reconfigurable architectures |
US20210081691A1 (en) * | 2019-09-16 | 2021-03-18 | SambaNova Systems, Inc. | Efficient Execution of Operation Unit Graphs on Reconfigurable Architectures Based on User Specification |
US10901715B1 (en) * | 2019-09-26 | 2021-01-26 | Jonathan RAIMAN | Lazy compilation and kernel fusion in dynamic computation graphs |
CN111338635B (en) * | 2020-02-20 | 2023-09-12 | 腾讯科技（深圳）有限公司 | Graph compiling method, device, equipment and storage medium for calculation graph |
EP3933709A1 (en) * | 2020-06-30 | 2022-01-05 | Upstride | Graph processing method and system |
US20220156078A1 (en) * | 2020-11-19 | 2022-05-19 | Arm Limited | Register rename stage fusing of instructions |
DE112022000886T5 (en) | 2021-01-31 | 2023-12-21 | Ab Initio Technology Llc | DATA PROCESSING SYSTEM WITH MANIPULATION OF LOGICAL DATA RECORD GROUPS |
US20230025245A1 (en) * | 2021-07-13 | 2023-01-26 | Nvidia Corporation | Neural network evaluation |
US11922148B2 (en) * | 2021-12-20 | 2024-03-05 | Tactical Computing Laboratories, LLC | Systems and methods for application performance profiling and improvement |
Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN1802632A (en) * | 2003-04-22 | 2006-07-12 | 可递有限公司 | Method and apparatus for performing interpreter optimizations during program code conversion |
US20080091926A1 (en) * | 2006-10-11 | 2008-04-17 | Motohiro Kawahito | Optimization of a target program |
US20080163181A1 (en) * | 2006-12-29 | 2008-07-03 | Xiaofeng Guo | Method and apparatus for merging critical sections |
CN105593815A (en) * | 2013-07-23 | 2016-05-18 | 华为技术有限公司 | Method for constructing graph-based intermediate representation in compiler |
Family Cites Families (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5822593A (en) * | 1996-12-06 | 1998-10-13 | Xerox Corporation | High-level loop fusion |
US6058266A (en) * | 1997-06-24 | 2000-05-02 | International Business Machines Corporation | Method of, system for, and computer program product for performing weighted loop fusion by an optimizing compiler |
US6070011A (en) * | 1997-10-21 | 2000-05-30 | Hewlett-Packard Co. | Compiler for performing a loop fusion, dependent upon loop peeling and/or loop reversal |
US6675376B2 (en) * | 2000-12-29 | 2004-01-06 | Intel Corporation | System and method for fusing instructions |
JP4234976B2 (en) * | 2001-10-31 | 2009-03-04 | 株式会社アプリックス | Intermediate code execution system |
US7533376B2 (en) * | 2004-10-12 | 2009-05-12 | Picsel (Research) Limited | Dynamic linking in constrained environment |
GB2420638A (en) * | 2004-11-24 | 2006-05-31 | Hewlett Packard Development Co | Method of substituting code fragments in Internal Representation |
KR20080096306A (en) * | 2007-04-27 | 2008-10-30 | 재단법인서울대학교산학협력재단 | Compiling method and system for a rule-based optimal placement of scaling shifts |
US8677338B2 (en) * | 2008-06-04 | 2014-03-18 | Intel Corporation | Data dependence testing for loop fusion with code replication, array contraction, and loop interchange |
US8516468B2 (en) * | 2008-06-30 | 2013-08-20 | Intel Corporation | Multiversioning if statement merging and loop fusion |
WO2010033622A2 (en) * | 2008-09-17 | 2010-03-25 | Reservoir Labs, Inc. | Methods and apparatus for joint parallelism and locality optimization in source code compilation |
US9015690B2 (en) * | 2009-08-22 | 2015-04-21 | Advanced Micro Devices, Inc. | Proactive loop fusion of non-adjacent loops with intervening control flow instructions |
US8312053B2 (en) * | 2009-09-11 | 2012-11-13 | Oracle International Corporation | Dynamic atomic arrays |
US9329848B2 (en) * | 2013-03-27 | 2016-05-03 | Intel Corporation | Mechanism for facilitating dynamic and efficient fusion of computing instructions in software programs |
US9690552B2 (en) * | 2014-12-27 | 2017-06-27 | Intel Corporation | Technologies for low-level composable high performance computing libraries |
-
2017
- 2017-01-06 US US15/400,942 patent/US9798527B1/en active Active
-
2018
- 2018-01-05 GB GB1800179.2A patent/GB2560410A/en not_active Withdrawn
- 2018-01-05 SG SG10201800155PA patent/SG10201800155PA/en unknown
- 2018-01-05 WO PCT/US2018/012596 patent/WO2018129327A1/en active Application Filing
- 2018-01-08 CN CN201810015644.6A patent/CN108345937B/en active Active
- 2018-01-08 DE DE102018100239.4A patent/DE102018100239A1/en active Pending
-
2019
- 2019-01-23 HK HK19101206.7A patent/HK1259126A1/en unknown
Patent Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN1802632A (en) * | 2003-04-22 | 2006-07-12 | 可递有限公司 | Method and apparatus for performing interpreter optimizations during program code conversion |
US20080091926A1 (en) * | 2006-10-11 | 2008-04-17 | Motohiro Kawahito | Optimization of a target program |
US20080163181A1 (en) * | 2006-12-29 | 2008-07-03 | Xiaofeng Guo | Method and apparatus for merging critical sections |
CN105593815A (en) * | 2013-07-23 | 2016-05-18 | 华为技术有限公司 | Method for constructing graph-based intermediate representation in compiler |
Non-Patent Citations (1)
Title |
---|
ARVIND K. SUJEETH等: "OptiML:An Implicitly Parallel Domain-Specific Language for Machine Learning", 《PROCEEDINGS OF THE 28TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING》 * |
Cited By (17)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN109740751B (en) * | 2018-12-24 | 2020-04-14 | 中科寒武纪科技股份有限公司 | Architecture fusion method of neural network model and related device |
CN109740751A (en) * | 2018-12-24 | 2019-05-10 | 北京中科寒武纪科技有限公司 | The framework fusion method and relevant apparatus of neural network model |
CN111459464B (en) * | 2019-01-22 | 2023-04-25 | 阿里巴巴集团控股有限公司 | Node fusion method, code generation method and device |
CN111459464A (en) * | 2019-01-22 | 2020-07-28 | 阿里巴巴集团控股有限公司 | Node fusion method, code generation method and device |
CN110210614A (en) * | 2019-05-31 | 2019-09-06 | 北京中科寒武纪科技有限公司 | Operation method, device and Related product |
WO2021000970A1 (en) * | 2019-07-03 | 2021-01-07 | 安徽寒武纪信息科技有限公司 | Deep learning algorithm compiling method, device, and related product. |
WO2021052391A1 (en) * | 2019-09-18 | 2021-03-25 | 华为技术有限公司 | Method for constructing intermediate representation, compiler and server |
US11789709B2 (en) | 2019-09-18 | 2023-10-17 | Huawei Technologies Co., Ltd. | Intermediate representation construction method, compiler, and server |
CN112947997A (en) * | 2019-12-11 | 2021-06-11 | 阿里巴巴集团控股有限公司 | Data processing method and device, instruction fusion method and code generation method |
WO2021114530A1 (en) * | 2019-12-12 | 2021-06-17 | Huawei Technologies Co., Ltd. | Hardware platform specific operator fusion in machine learning |
CN112965710A (en) * | 2019-12-13 | 2021-06-15 | 阿里巴巴集团控股有限公司 | Processing method, device and system of computation graph |
CN113298263A (en) * | 2020-05-13 | 2021-08-24 | 阿里巴巴集团控股有限公司 | Calculation graph processing method and device, model running method and device, electronic equipment, server and edge terminal |
CN113298263B (en) * | 2020-05-13 | 2022-09-13 | 阿里巴巴集团控股有限公司 | Calculation graph processing method and device, model running method and device, equipment, server and terminal |
CN112947933A (en) * | 2021-02-24 | 2021-06-11 | 上海商汤智能科技有限公司 | Operator execution method and device, computer equipment and storage medium |
CN116185426A (en) * | 2023-04-17 | 2023-05-30 | 北京大学 | Compiling optimization method and system based on code fusion and electronic equipment |
CN116185426B (en) * | 2023-04-17 | 2023-09-19 | 北京大学 | Compiling optimization method and system based on code fusion and electronic equipment |
CN117492766A (en) * | 2023-12-27 | 2024-02-02 | 深圳市九天睿芯科技有限公司 | Compiling method, compiler, neural network accelerator, chip and electronic equipment |
Also Published As
Publication number | Publication date |
---|---|
SG10201800155PA (en) | 2018-08-30 |
HK1259126A1 (en) | 2019-11-22 |
GB201800179D0 (en) | 2018-02-21 |
GB2560410A (en) | 2018-09-12 |
US9798527B1 (en) | 2017-10-24 |
DE102018100239A1 (en) | 2018-07-12 |
CN108345937B (en) | 2019-11-12 |
WO2018129327A1 (en) | 2018-07-12 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN108345937B (en) | Circulation is merged with library | |
Rasmussen | NengoDL: Combining deep learning and neuromorphic modelling methods | |
Zaccone et al. | Deep Learning with TensorFlow: Explore neural networks and build intelligent systems with Python | |
KR102302609B1 (en) | Neural Network Architecture Optimization | |
Barbierato et al. | Performance evaluation of NoSQL big-data applications using multi-formalism models | |
Cortez et al. | Modern optimization with R | |
Wagner et al. | Architecture and design of the HeuristicLab optimization environment | |
CN111541570B (en) | Cloud service QoS prediction method based on multi-source feature learning | |
CN110268422A (en) | Optimized using the device layout of intensified learning | |
Fan et al. | Research on Web service selection based on cooperative evolution | |
Fleck et al. | Marrying search-based optimization and model transformation technology | |
US20110246549A1 (en) | Adaptive distribution of the processing of highly interactive applications | |
CN115659281B (en) | Method and device for fusing adaptive acceleration operators | |
CN109313720A (en) | The strength neural network of external memory with sparse access | |
Bisong et al. | Tensorflow 2.0 and keras | |
CN108604311A (en) | Utilize the strength neural network of hierarchical external memory | |
CN108460458A (en) | It is executed in graphics processing unit and calculates figure | |
Fandango | Mastering TensorFlow 1. x: Advanced machine learning and deep learning concepts using TensorFlow 1. x and Keras | |
Corus et al. | On easiest functions for mutation operators in bio-inspired optimisation | |
da Silva et al. | A survey of evolutionary computation for web service composition: A technical perspective | |
Weill et al. | Adanet: A scalable and flexible framework for automatically learning ensembles | |
Gulli et al. | TensorFlow 1. x Deep Learning Cookbook: Over 90 unique recipes to solve artificial-intelligence driven problems with Python | |
Liu et al. | A data-driven approach for constructing multilayer network-based service ecosystem models | |
Wang et al. | Combining quantitative constraints with qualitative preferences for effective non-functional properties-aware service composition | |
Sargent et al. | Quantitative economics |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
GR01 | Patent grant | ||
GR01 | Patent grant | ||
REG | Reference to a national code |
Ref country code: HKRef legal event code: DERef document number: 1259126Country of ref document: HK |
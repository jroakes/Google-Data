DE10062063B4 - A method, system, computer program product and storage device for controlling a queue of requests of different priority - Google Patents
A method, system, computer program product and storage device for controlling a queue of requests of different priority Download PDFInfo
- Publication number
- DE10062063B4 DE10062063B4 DE10062063A DE10062063A DE10062063B4 DE 10062063 B4 DE10062063 B4 DE 10062063B4 DE 10062063 A DE10062063 A DE 10062063A DE 10062063 A DE10062063 A DE 10062063A DE 10062063 B4 DE10062063 B4 DE 10062063B4
- Authority
- DE
- Germany
- Prior art keywords
- entry
- priority
- queue
- requirements
- requests
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/46—Multiprogramming arrangements
- G06F9/48—Program initiating; Program switching, e.g. by interrupt
- G06F9/4806—Task transfer initiation or dispatching
- G06F9/4843—Task transfer initiation or dispatching by program, e.g. task dispatcher, supervisor, operating system
- G06F9/4881—Scheduling strategies for dispatcher, e.g. round robin, multi-level priority queues
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L47/00—Traffic control in data switching networks
- H04L47/10—Flow control; Congestion control
- H04L47/24—Traffic characterised by specific attributes, e.g. priority or QoS
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L9/00—Cryptographic mechanisms or cryptographic arrangements for secret or secure communications; Network security protocols
- H04L9/40—Network security protocols
Abstract
Verfahren
zur Steuerung von Warteschlangen auszuführender Anforderungen, worin
jede Anforderung einer Ebene von einer Vielzahl an Prioritätsebenen
zugeordnet ist, in dem die Schritte enthalten sind:
Erzeugen
einer Warteschlange einschließlich
einer Vielzahl von Einträgen,
worin jeder Eintrag einer Prioritätsebene entspricht und worin
eine Vielzahl von Anforderungen bei einem Eintrag eingereiht werden
kann;
Empfangen einer neuen Anforderung mit einer zugeordneten
Priorität
zur Einreihung in die Warteschlange;
Bestimmen eines Eintrags,
auf den ein Zeiger verweist;
Anpassen der Priorität, die der
neuen Anforderung zugeordnet ist, mittels eines Wertes, wobei die
angepasste Priorität
einem anderen Eintrag als den, auf den der Zeiger verweist, zugeordnet
wird; und
Einreihen der neuen Anforderung bei einem Eintrag,
welcher der angepassten Priorität
zugeordnet ist.A method for controlling queues to be executed, wherein each request is associated with a level of a plurality of priority levels including the steps of:
Generating a queue including a plurality of entries, wherein each entry corresponds to a priority level and wherein a plurality of requests may be queued for an entry;
Receiving a new request with an assigned priority for queuing;
Determining an entry referenced by a pointer;
Adjusting the priority associated with the new request by a value, wherein the adjusted priority is assigned to an entry other than that to which the pointer points; and
Queuing the new request for an entry associated with the adjusted priority.
Description
HINTERGRUND DER ERFINDUNGBACKGROUND OF THE INVENTION
Gebiet der ErfindungField of the invention
Die vorliegende Erfindung bezieht sich auf ein System, ein Verfahren, ein Computerprogramm-Produkt und eine Speichervorrichtung zur Steuerung der Warteschlangen von Anforderungen, die unterschiedliche Prioritätsebenen haben können.The The present invention relates to a system, a method, a computer program product and a memory device for control the queues of requests that have different priority levels can have.
In Servern auf dem bisherigen Stand der Technik empfängt der Server Eingabe/Ausgabe-Anforderungen (E/A-Anforderungen) von mehreren Clients und stellt die Anforderungen in der Reihenfolge des Eingangs zur Ausführung gegenüber dem Speichergerät in eine Warteschlange. In bestimmten Netzwerksystemen auf dem bisherigen Stand der Technik übermittelt der Client dem Server nicht die Priorität der E/A-Anforderung. Statt dessen bestimmt jeder Client intern die Prioritäten der Anforderungen und versendet die Anforderungen höherer Priorität vor seinen Anforderungen niedrigerer Priorität. Clients halten die Versendung der Anforderungen niedriger Priorität zurück, weil die Versendung von Anforderungen niedriger Priorität vor den Anforderungen hoher Priorität dazu führen kann, dass der Server die Anforderungen niedriger Priorität vor den Anforderungen hoher Priorität in die Warteschlange stellt, falls der Server die Priorität nicht kennt. Folglich schiebt der Client das Versenden der Anforderungen niedriger Priorität auf, bis alle Anforderungen hoher Priorität verschickt wurden. Diese Technik, bei der jeder Client individuell die Priorität der E/A-Anforderungen vergibt, ist aus mindestens zwei Gründen problematisch. Erstens kann ein Server fähig sein, E/A-Anforderungen, die unterschiedliche Serverressourcen nutzen, gleichzeitig zu verarbeiten. Somit kann der Server in der Lage sein, eine Anforderung hoher Priorität und eine Anforderung niedriger Priorität, die unterschiedliche Serverressourcen erfordern, gleichzeitig zu verarbeiten, wenn er hingegen nicht gleichzeitig zwei Anforderungen hoher Priorität verarbeiten könnte. Da die Clients die Verarbeitungskapazitäten und die Ressourcenverfügbarkeit des Servers nicht kennen, kann es sein, dass ein Client nur die Anforderungen hoher Priorität übermittelt und die Anforderungen niedriger Priorität zurückhält, wenn der Server die Leistung eigentlich durch die gleichzeitige Verarbeitung beider Anforderungen optimieren könnte. Des Weiteren kann es für den Server effizienter sein, eine Anforderung niedriger Priorität vor einer Anforderung hoher Priorität zu verarbeiten, wenn die Anforderungen hoher und niedriger Priorität in physikalisch angrenzenden Bereichen im Speichermedium gespeichert sind. Eine Verarbeitung der Anforderung niedriger Priorität vor der Anforderung hoher Priorität würde die Notwendigkeit vermeiden, die Speicheradresse der niedrigen Priorität zu suchen und zu ihr zurück zu gehen, wenn sich der Schreib/Lesekopf bereits neben der Position befindet.In Prior art servers receive the Server input / output requests (I / O requests) from multiple Clients and sets the requests in the order of receipt for execution across from the storage device in a queue. In certain network systems on the previous State of the art transmitted the client does not prioritize the server to the I / O request. Instead of of which each client internally determines the priorities of the requests and sends the requirements higher Priority his requirements of lower priority. Clients keep the shipment the low priority requests back because of the dispatch of Low priority requests Prior to the high priority requests can cause the server the requirements of low priority before the requirements higher priority queued if the server is not priority knows. As a result, the client pushes the sending of requests lower priority until all high priority requests have been sent. These Technique in which each client individually prioritizes the I / O requirements forgiveness is problematic for at least two reasons. First can be a server capable be I / O requests that use different server resources to process at the same time. Thus, the server may be able to a high priority request and a low priority request, the different server resources require to process at the same time if he does not simultaneously two high priority requirements could handle. Because the clients have the processing capabilities and resource availability of the server, it may be that a client only the High priority requests submitted and withhold the low priority requests when the server is performing actually by the simultaneous processing of both requirements could optimize. Furthermore, it may be for make the server more efficient, a lower priority request before a request high priority to process if the requirements of high and low priority in physical adjacent areas are stored in the storage medium. A Processing of the low priority request before the request is high priority would the Avoid need to search the low priority memory address and back to her to go when the read / write head is already next to the position located.
Ein weiteres Problem bei der Prioritätenvergabe durch den Client besteht darin, dass es keine Ordnung der Anforderungen nach Priorität zwischen den einzelnen Clients gibt. Wenn beispielsweise Client A E/A-Anforderungen der Prioritäten 1 und 2 und Client B E/A-Anforderungen der Priorität 3 hat, und wenn beide ihre Anforderungen höchster Priorität senden, wird Client A die Anforderungen der Priorität 1 und Client B die Anforderungen der Priorität 3 schicken. Client A wird die Anforderungen der Priorität 2 zurückhalten, bis alle Anforderungen der Priorität 1 verschickt wurden. Wenn Client A die E/A-Anforderungen der Priorität 2 schickt, nachdem Client B die Anforderungen der Priorität 3 gesendet hat, wird der Server die Anforderungen der Priorität 3 zuerst verarbeiten. Diese Situation ist nicht optimal, weil der Server die Anforderungen der Priorität 3 von Client B vor der Verarbeitung der später versendeten Anforderungen der Priorität 2 des Client A fertigstellen wird.One Another problem with prioritization by the client is that there is no order of the requirements by priority between each client. For example, if client A I / O requirements of priorities 1 and 2 and client B has Priority 3 I / O requirements, and when both send their highest priority requests, Client A will be the requirements of Priority 1 and Client B the requirements the priority 3 send. Client A will withhold the Priority 2 requirements, until all requirements of priority 1 have been sent. If Client A sends the priority 2 I / O requests after client B the requirements of priority 3, the server will be the priority 3 requests first to process. This situation is not optimal because of the server the requirements of priority 3 from client B prior to processing the requests later sent the priority 2 of the client A will finish.
Ausgehend von den oben genannten Unzulänglichkeiten, bei welchen den Clients die Möglichkeit eigener Prioritätenvergabe gestattet wird, sind Verfahren auf dem bisherigen Stand der Technik entwickelt worden, die es den Clients ermöglichen, zusammen mit einer E/A-Anforderung Informationen zur Priorität zu übermitteln. Zum Beispiel erlaubt die Standard-Schnittstelle Small Computer System Interface (SCSI) zwei Prioritäten (hoch und niedrig), und das ESCON (Enterprise System Connection) von IBM (International Business Machines) gestattet dem Server, 256 unterschiedliche Prioritätsebenen zu übertragen. Beim SCSI verwaltet der Server eine Warteschlange für E/A-Anforderungen mit Anfang und Ende. Anforderungen hoher Priorität werden am Anfang der Warteschlange und Anforderungen niedriger Priorität am Ende der Warteschlange eingeordnet. Der SCSI-Server entfernt Anforderungen vom Anfang. Ein Problem beim Prioritätensystem auf dem bisherigen Stand der SCSI-Technik besteht darin, dass der SCSI-Server, wenn er einen langen Datenstrom von Anforderungen hoher Priorität empfängt, die Anforderungen niedriger Priorität möglicherweise sehr lange nicht erreicht; lange genug sogar, um das Zeitlimit der Anforderungen niedriger Priorität zu überschreiten, was auch als Blockierung bezeichnet wird. Auf dem bisherigen Stand der Technik des ESCON-Systems verwaltet der ESCON-Server eine separate Warteschlange für jede der 256 Prioritäten und greift auf E/A-Anforderungen aus der Warteschlange höchster Priorität zu, in der E/A-Anforderungen anstehen. Beim ESCON- wie beim SCSI-System kann ein ununterbrochener Strom von E/A-Anforderungen hoher Priorität die Verarbeitung der Anforderungen niedriger Priorität erheblich verzögern.Given the above shortcomings, which allow clients to prioritize themselves, prior art techniques have been developed that allow clients to submit priority information along with an I / O request. For example, the standard Small Computer System Interface (SCSI) interface allows two priorities (high and low), and IBM (International Business Machines) ESCON (Enterprise System Connection) allows the server to transfer 256 different priority levels. For SCSI, the server manages a start / stop queue for I / O requests. High priority requests are placed at the beginning of the queue and low priority requests at the end of the queue. The SCSI server removes requests from the beginning. A problem with the prior art prior art SCSI system is that if the SCSI server receives a long stream of high priority requests, it may not reach the low priority requests for a very long time; long enough even to exceed the time limit of low priority requests, which is also called blocking. In the current state of the ESCON system, the ESCON server manages a separate queue for each of the 256 priorities and accesses I / O requests from the highest priority queue in which I / O requests are pending. For the ESCON and SCSI systems, a continuous stream of high priority I / O requests can significantly reduce the processing of low priority requests hesitate.
Eine Lösung dieses Problems der Blockierung von E/A-Anforderungen niedriger Priorität auf dem bisherigen Stand der Technik besteht in der Verschiebung der E/A-Anforderungen niedriger Priorität in eine Warteschlange höherer Priorität. Beispielsweise kann der Server Anforderungen niedriger Priorität in eine Warteschlange höherer Priorität verschieben, nachdem er eine vorher festgelegte Zahl von Anforderungen hoher Priorität in die Warteschlange gestellt hat. Ein solches Verfahren ist z.B. im U.S. Patent 6,003,101 beschrieben. Dieses Verfahren arbeitet ziemlich effektiv, wenn es nur wenige Prioritätsebenen gibt. Wenn die Anzahl möglicher Prioritäten, die der Server verfolgt, zunimmt, kann jedoch die Verschiebung von Prioritäten von einer Warteschlange zur anderen, d.h. das Hineinstellen und Entfernen der E/A-Anforderungen aus den Warteschlangen, beträchtliche Speicherressourcen verbrauchen, bis hin zu einer wesentlichen Verschlechterung der Speicherleistung. Wenn der Server, zum Beispiel ein E/A-Prozessor, mehrere Prioritätswarteschlangen verwaltet, kann es sein, dass der Server die Anforderung niedriger Priorität jedesmal, wenn sich die Priorität der Anforderungen niedriger Priorität erhöht, verschieben muss. Wenn sich beispielsweise eine Anforderung niedriger Priorität in der Warteschlange der 256sten Priorität befindet, ist es denkbar, dass eine solche Anforderung vor ihrer Verarbeitung 255 Mal verschoben wird. Wenn zahlreiche Anforderungen verschoben werden, können die Speicheroperationen zur Verschiebung der A/E-Anforderungen zwischen den Warteschlangen, d.h. das Hineinstellen und Entfernen aus den Warteschlangen, die Gesamtspeicherleistung erheblich verschlechtern.A solution This problem of blocking low priority I / O requests on the Prior art has been lower in shifting I / O requirements Priority in a queue higher Priority. For example, the server may require lower priority requests Queue higher priority move after it has a predetermined number of requests high priority queued. Such a method is e.g. in U.S. Pat. Patent 6,003,101 described. This procedure works pretty effective when there are only a few priority levels. If the number potential Priorities that however, the server may be tracking, but may be shifting priorities from one queue to another, i. to put in and remove the I / O requests out of the queues, considerable Consuming memory resources, down to a significant deterioration the storage capacity. If the server, for example an I / O processor, manages multiple priority queues, It may be that the server makes the low priority request each time if the priority of the low priority requests needs to be moved. If For example, a low priority request in the Queue of the 256th priority is located, it is conceivable that such a request is moved 255 times before being processed becomes. If many requests are moved, the Memory operations for shifting the A / E requests between the queues, i. the putting in and removing from the Queues that significantly degrade overall memory performance.
Somit gibt es auf dem bisherigen Stand der Technik mit zunehmender Zahl von Prioritätswarteschlangen, die vom Server verwaltet werden, eine zweifache Speicherbelastung.Consequently There are in the prior art with increasing number priority queues, which are managed by the server, a double memory load.
Erstens muss der Server zahlreiche Prioritätswarteschlangen verwalten, und zweitens gibt es eine beträchtliche Zunahme an Einordnungs- und Entfernungsoperationen, die nötig sind, um eine Anforderung niedriger Priorität von Warteschlange zu Warteschlange zu verschieben, während zur Vermeidung einer Blockierung die Priorität nach oben hin angepasst wird.First the server must manage many priority queues and second, there is a considerable one Increase in ordering and removal operations that are needed a low priority request from queue to queue to shift while to avoid blocking, the priority is adjusted upwards.
Folglich besteht in der Technik ein Bedarf an der Bereitstellung eines verbesserten Verfahrens zur Erhöhung der Priorität von E/A-Anforderungen niedriger Priorität, wenn ein Client die Priorität zusammen mit der E/A-Anforderung übermittelt, auf eine Art, die dem Speicher keine wesentlichen Belastungen auferlegt.consequently There is a need in the art for providing an improved Procedure to increase the priority of low priority I / O requests when a client's priority along with transmitted to the I / O request, in a way that does not impose any significant burdens on the store.
ÜBERBLICK ÜBER DIE BEVORZUGTEN AUSFÜHRUNGENOVERVIEW OF THE PREFERRED VERSIONS
Zur Überwindung der Einschränkungen des oben beschriebenen Stands der Technik legen die bevorzugten Ausführungen ein Verfahren, ein System, ein Computerprogramm-Produkt und eine Speichervorrichtung zur Steuerung der Warteschlangen von Anforderungen dar. Jede Anforderung ist einer Ebene aus einer Vielzahl von Prioritätsebenen zugeordnet. Eine Warteschlange wird gebildet, die eine Vielzahl von Einträgen einschließt. Jeder Eintrag entspricht einer Prioritätsebene, und eine Vielzahl von Anforderungen kann bei einem Eintrag eingereiht werden. Wenn eine neue Anforderung, die eine zugeordnete Priorität hat, zum Einreihen in die Warteschlange empfangen wird, wird ein Eintrag bestimmt, auf den ein Zeiger verweist. Die der neuen Anforderung zugeordnete Priorität wird durch einen Wert so angepasst, dass die angepasste Priorität einem Eintrag zugeordnet wird, der nicht dem Eintrag entspricht, auf den der Zeiger verweist. Die neue Anforderung wird bei einem Eintrag eingereiht, welcher der angepassten Priorität zugeordnet ist.To overcome the restrictions of the above-described prior art set the preferred ones versions a method, a system, a computer program product and a Storage device for controlling queues of requests Each request is one level from a plurality of priority levels assigned. A queue is formed, which is a variety of entries includes. Each entry corresponds to a priority level, and a variety of requirements can be queued for an entry. If a new request the one assigned priority has been queued for queuing becomes one Entry destined to a pointer. The new requirement assigned priority is adjusted by a value so that the adjusted priority is one Is assigned to an entry that does not correspond to the entry to which the pointer points. The new request will be at an entry which is assigned to the adjusted priority.
In weiteren Ausführungen wird zur Verarbeitung eingereihter Anforderungen ein Eintrag festgelegt, bei dem Anforderungen eingereiht werden. Der Zeiger wird so modifiziert, dass er auf den festgelegten Eintrag verweist, und die Anforderungen, die an dem vom Zeiger angezeigten Eintrag eingereiht wurden, werden verarbeitet.In further versions an entry is set for processing queued requests, to be included in the requirements. The pointer is modified so that it refers to the specified entry, and the requirements which are queued at the entry indicated by the pointer processed.
In weiteren Ausführungen umfasst die Prioritätsanpassung die Festlegung der Priorität eines vom Zeiger angezeigten Eintrags und das Hinzufügen der festgelegten Priorität zu der Priorität der Anforderung, um die angepasste Priorität zu ermitteln. In Ausführungen, bei denen der letzte Eintrag der Warteschlange auf den ersten Eintrag der Warteschlange verweist, wird bei der Prioritätsanpassung des Weiteren ermittelt, ob die angepasste Priorität größer ist als die Anzahl der Einträge in der Warteschlange. Falls das der Fall ist, wird die angepasste Priorität auf die angepasste Priorität mal Anzahl Einträge in der Warteschlange eingestellt.In further versions includes the priority adjustment the definition of priority an entry displayed by the pointer and adding the specified priority to the priority the request to determine the adjusted priority. In versions, where the last entry of the queue is on the first entry the queue is referenced, it is further determined during the priority adjustment, whether the adjusted priority is larger as the number of entries in the queue. If that is the case, the adjusted priority to the adjusted priority times number of entries set in the queue.
Bevorzugte Ausführungen stellen ein Verfahren zur Warteschlangensteuerung von E/A-Anforderungen bereit, das die Priorität von neuen Anforderungen relativ zu gleichzeitig anstehenden Anforderungen niedrigerer Priorität wirksam verringert. Zur Vermeidung einer Blockierung von Anforderungen niedrigerer Priorität werden bei bevorzugten Ausführungen Prioritäten von neuen Anforderungen mittels mathematischer Operationen und Anpassung von Zeigern verändert, ohne dass Einträge, die bei niedrigerer Priorität eingereiht wurden, zu neuen Warteschlangen verschoben werden müssen. Dies stellt eine Verbesserung gegenüber den bisherigen Techniken dar, welche zur Vermeidung von Blockierungen erfordern, dass anstehende Anforderungen zwischen Warteschlangen verschoben werden, um die Priorität anzupassen. Die Warteschlange von bevorzugten Ausführungen kann zur Vermeidung von Blockierung sogar bei zahlreichen möglichen Prioritäten die Priorität anpassen, ohne die Speicherleistung wesentlich zu belasten und zu verschlechtern.Preferred embodiments provide a method for queuing I / O requests that effectively reduces the priority of new requests relative to concurrent lower priority requests. In order to avoid blocking lower priority requests, in preferred embodiments priorities of new requests are changed by means of mathematical operations and pointer customization without having to move entries ranked lower in priority to new queues. This represents an improvement over the previous tech To prevent deadlocks, pending requests must be moved between queues to adjust the priority. The queue of preferred embodiments may prioritize to avoid blocking even with many possible priorities without significantly burdening and degrading memory performance.
KURZE BESCHREIBUNG DER ZEICHNUNGENSHORT DESCRIPTION THE DRAWINGS
Es wird nun Bezug genommen auf die Zeichnungen, in denen Nummern als Referenz für die entsprechenden Teile stehen:It Reference is now made to the drawings in which numbers as Reference for the corresponding parts are:
DETAILLIERTE BESCHREIBUNG DER BEVORZUGTEN AUSFÜHRUNGENDETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS
In der folgenden Beschreibung wird Bezug genommen auf die begleitenden Zeichnungen, die einen Teil des vorliegenden Dokuments darstellen und die verschiedene Ausführungen der vorliegenden Erfindung veranschaulichen. Es versteht sich, dass andere Ausführungen verwendet werden können und strukturelle Änderungen sowie Änderungen im Betrieb vorgenommen werden können, ohne vom Umfang der vorliegenden Erfindung abzuweichen.In The following description will be referred to the accompanying drawings Drawings that form part of this document and the different versions of the present invention. It is understood that other versions can be used and structural changes as well as changes can be made during operation, without departing from the scope of the present invention.
Der
Server
Alternativ
kann das Speichersystem
Wenn
der Eintrag, auf den der Kopfzeiger
Mit
der Logik der bevorzugten Ausführungen werden
aktuell eingereihte E/A-Anforderungen mit einer niedrigen Priorität nicht
durch einen ununterbrochenen Strom von E/A-Anforderungen höherer Priorität blockiert.
Der Grund dafür
ist der, dass, während Server
Die bevorzugte Logik und Warteschlangendatenstruktur stellt eine Technik zur Erhöhung von Prioritäten bereit, die keine Speicherarbeit zur Verschiebung existierender Einträge zwischen Prioritätswarteschlangen beansprucht. Die einzige Operation, die von der bevorzugten Logik zur Veränderung der Priorität von E/A-Anforderungen ausgeführt wird, ist ein einfacher Algorithmus zur Veränderung der Priorität des neuen Eintrags. Diese Veränderung der Priorität des neuen Eintrags verringert einerseits die Priorität des neuen Eintrags und erhöht andererseits die relative Priorität existierender eingereihter E/A-Anforderungen in einer Weise, welche verhindert, dass ein ununterbrochener Strom von E/A-Anforderungen hoher Priorität die aktuell anstehenden E/A-Anforderungen niedrigerer Priorität blockiert. Folglich bearbeitet die Warteschlangensteuerung der bevorzugten Ausführung Prioritäten, ohne die speicheraufwendigen Arbeitsschritte durchzuführen, welche in bisherigen Techniken zur Verschiebung anstehender Einträge zwischen Warteschlangen verwendet wurden.The preferred logic and queue data structure is a technique to increase of priorities ready, which has no memory work to shift existing Posts between priority queues claimed. The only operation by the preferred logic to change the priority of I / O requests is a simple algorithm for changing the priority of the new one Entry. This change the priority On the other hand, the new entry reduces the priority of the new entry Entry and raised on the other hand, the relative priority of existing queues I / O requests in a way that prevents an uninterrupted Stream of I / O requirements high priority the current I / O requirements lower priority blocked. As a result, queue control handles the preferred one execution Priorities, without performing the memory consuming operations which in previous techniques for shifting pending entries between Queues were used.
Mit den bevorzugten Ausführungen kann das System so konstruiert werden, dass es jede Zahl von Prioritätsebenen unterbringt, ohne die Speicherleistung zu beeinflussen, da die Prioritätsanpassung es nicht erfordert, eingereihte Anforderungen niedrigerer Priorität zwischen verschiedenen Prioritätswarteschlangen zu verschieben. Dies reduziert die mit der Verwaltung zahlreicher Warteschlangen verbundenen Speicherverwaltungsoperationen. Somit gibt es bei der bevorzugten Technik keine Notwendigkeit zur Veränderung von Listen. Statt dessen wird die Prioritätsanpassung im Voraus durchgeführt, unter Verwendung einfacher Anpassungen und Zeiger, in Bezug auf eine einzelne Warteschlange.With the preferred embodiments The system can be constructed to contain any number of priority levels accommodates, without affecting the memory performance, since the priority adjustment it does not require queued lower priority requests between different priority queues to move. This reduces the number of administration Queues associated memory management operations. Consequently There is no need for change in the preferred technique of lists. Instead, the priority adjustment is performed in advance, under Using simple adjustments and pointers, in relation to a single Queue.
Weitere
Ausführungen
verwenden ein Bitmap, um die Effizienz der Schritte
Schlussfolgerungconclusion
Die bevorzugten Ausführungen können als Verfahren, als Apparat oder als Herstellungsartikel implementiert werden, unter Verwendung von Standardprogrammierung und/oder technischen Verfahren zur Herstellung von Software, Firmware, Hardware oder einer beliebigen Kombination dieser Produkte. Der Ausdruck „Herstellungsartikel" (oder alternativ „Computerprogrammprodukt"), wie er im vorliegenden Dokument gebraucht wird, soll ein oder mehrere Computerprogramme und/oder Datendateien, die von einer oder mehreren computerlesbaren Vorrichtungen, Trägern oder Medien, wie z. B. magnetischen Speichermedien, „Floppydisk", CD-ROM, optischen Disks, holographischen Einheiten, flüchtigen oder nicht-flüchtigen elektronischen Speichern etc. zugänglich sind, umfassen. Des Weiteren kann der Herstellungsartikel die Implementierung der bevorzugten Ausführungen in einem Übertragungsmedium, wie beispielsweise Netzübertragungsleitungen, kabellosen Übertragungsmedien, Signalen, die sich durch den Raum verbreiten, Funkwellen, Infrarot-Signalen etc., beinhalten. Selbstverständlich wird der Fachmann viele Modifikationen erkennen, die an dieser Konfiguration gemacht werden können, ohne dass vom Umfang der vorliegenden Erfindung abgewichen wird.The preferred embodiments may be implemented as a method, apparatus, or article of manufacture using standard programming and / or engineering techniques to produce software, firmware, hardware, or any combination of these products. The term "article of manufacture" (or alter natively "computer program product"), as used in this document, is intended to mean one or more computer programs and / or data files provided by one or more computer-readable devices, carriers or media, such as magnetic storage media, "floppy disk", CD-ROM. ROM, optical disks, holographic units, volatile or non-volatile electronic memories, etc., include. Further, the article of manufacture may include implementing the preferred embodiments in a transmission medium such as network transmission lines, wireless transmission media, signals propagating through space, radio waves, infrared signals, etc. Of course, those skilled in the art will recognize many modifications that can be made to this configuration without departing from the scope of the present invention.
Es
wurden bevorzugte Ausführungen
in Bezug auf die vom Server
In
bevorzugten Ausführungen
teilt Server
In
bevorzugten Ausführungen übermitteln die
Clients
Es
wurden bevorzugte Ausführungen
in Bezug auf das Hineinstellen und Entfernen von E/A-Anforderungen
aus einem Speichersystem
Bevorzugte Ausführungen beschrieben einen Algorithmus zur Verringerung der Priorität einer neuen Anforderung um die Priorität eines Eintrags, auf den der Kopfzeiger verweist.preferred versions described an algorithm for reducing the priority of a new one Request for priority an entry pointed to by the head pointer.
In alternativen Ausführungen kann die Priorität der neuen E/A-Anforderung auf alternative Weise erhöht werden, so dass die neue Anforderung bei einem Eintrag platziert wird, der nicht der Eintrag ist, den der Server gerade verarbeitet.In alternative versions can be the priority the new I / O requirement can be increased in an alternative way, so that the new request is placed at an entry that not the entry that the server is currently processing.
In bevorzugten Ausführungen wurde die Warteschange als eine Ringwarteschlange beschrieben, in welcher der letzte Eintrag auf den ersten Eintrag verweist. In alternativen Ausführungen kann die Warteschlange aus verbundenen Listen bestehen, welche nicht ringförmig sind.In preferred embodiments the queue was described as a queuing queue, in which the last entry refers to the first entry. In alternative versions the queue may consist of linked lists which are not annular are.
Zusammenfassend geben die bevorzugten Ausführungen ein Verfahren, ein System, ein Programm und eine Datenstruktur zur Warteschlangensteuerung von Anforderungen bekannt. Jede Anforderung ist einer Ebene aus einer Vielzahl von Prioritätsebenen zugeordnet. Eine Warteschlange einschließlich einer Vielzahl von Einträgen wird generiert. Jeder Eintrag entspricht einer Prioritätsebene, und eine Vielzahl von Anforderungen kann bei einem Eintrag eingereiht werden. Wenn eine neue Anforderung, die eine zugeordnete Priorität hat, zur Einreihung in die Warteschlange empfangen wird, wird ein Eintrag ermittelt, auf den ein Zeiger verweist. Die der neuen Anforderung zugeordnete Priorität wird mittels eines Wertes angepasst, so dass die angepasste Priorität einem anderen Eintrag, als dem vom Zeiger angezeigten, zugeordnet wird.In summary give the preferred versions a method, a system, a program and a data structure for Queue control of requests known. Every requirement is assigned to a level from a plurality of priority levels. A queue including a variety of entries is generated. Each entry corresponds to a priority level, and a variety of requirements can be queued at an entry become. If a new request that has an assigned priority to Enqueue to the queue is an entry determines which pointer points to. The new requirement assigned priority is adjusted by means of a value, so that the adjusted priority one other entry than that indicated by the pointer.
Die vorhergehende Beschreibung der bevorzugten Ausführungen der Erfindung wurde zum Zweck der Veranschaulichung und Beschreibung präsentiert. Es ist nicht beabsichtigt, eine erschöpfende Darstellung zu geben oder die Erfindung auf die genaue dargelegte Form zu begrenzen. Viele Modifikationen und Variationen sind möglich im Licht der obigen Ausführungen. Beabsichtigt ist, dass der Umfang der Erfindung nicht durch die genaue Beschreibung, sondern eher durch die dem vorliegenden Dokument angehängten Ansprüche begrenzt wird. Die obigen Spezifikationen sowie die Beispiele und Informationen liefern eine vollständige Beschreibung der Herstellung und Verwendung der erfindungsgemäßen Konstruktion. Da viele Ausführungen der Erfindung gemacht werden können, ohne vom Geist und Umfang der Erfindung abzuweichen, ist die Erfindung in den Ansprüchen, die dem vorliegenden Dokument angehängt sind, dargelegt. The foregoing description of the preferred embodiments of the invention has been presented for purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above. It is intended that the scope of the invention be limited not by the detailed description but rather by the claims appended hereto. The above specifications as well as the examples and information provide a complete description of the manufacture and use of the inventive construction. Since many embodiments of the invention can be made without departing from the spirit and scope of the invention, the invention is set forth in the claims appended hereto.
Claims (31)
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/478,942 US6745262B1 (en) | 2000-01-06 | 2000-01-06 | Method, system, program, and data structure for queuing requests having different priorities |
US478942 | 2000-01-06 |
Publications (2)
Publication Number | Publication Date |
---|---|
DE10062063A1 DE10062063A1 (en) | 2001-07-19 |
DE10062063B4 true DE10062063B4 (en) | 2006-02-09 |
Family
ID=23902024
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
DE10062063A Expired - Lifetime DE10062063B4 (en) | 2000-01-06 | 2000-12-13 | A method, system, computer program product and storage device for controlling a queue of requests of different priority |
Country Status (3)
Country | Link |
---|---|
US (1) | US6745262B1 (en) |
JP (1) | JP4028686B2 (en) |
DE (1) | DE10062063B4 (en) |
Families Citing this family (25)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7155539B2 (en) * | 2000-04-17 | 2006-12-26 | Circadence Corporation | Conductor gateway buffer prioritization |
US7412492B1 (en) | 2001-09-12 | 2008-08-12 | Vmware, Inc. | Proportional share resource allocation with reduction of unproductive resource consumption |
US7433962B2 (en) * | 2002-02-28 | 2008-10-07 | Real Enterprise Solutions Development B.V. | Multi-user computer system with an access balancing feature |
DE10260296A1 (en) * | 2002-12-20 | 2004-07-08 | Siemens Ag | Control of dynamic address allocation by router for data transmission in packet networks involves placing address request in one of number of queues, selecting queues according to priority criteria |
US7624396B1 (en) * | 2004-02-26 | 2009-11-24 | Sun Microsystems, Inc. | Retrieving events from a queue |
US7380248B1 (en) * | 2004-02-26 | 2008-05-27 | Sun Microsystems, Inc. | Queue alerts |
US7490325B2 (en) * | 2004-03-13 | 2009-02-10 | Cluster Resources, Inc. | System and method for providing intelligent pre-staging of data in a compute environment |
US8271980B2 (en) | 2004-11-08 | 2012-09-18 | Adaptive Computing Enterprises, Inc. | System and method of providing system jobs within a compute environment |
US7356631B2 (en) * | 2005-01-21 | 2008-04-08 | Himax Technologies, Inc. | Apparatus and method for scheduling requests to source device in a memory access system |
US9075657B2 (en) | 2005-04-07 | 2015-07-07 | Adaptive Computing Enterprises, Inc. | On-demand access to compute resources |
US7418531B2 (en) * | 2005-05-04 | 2008-08-26 | Pillar Data Systems, Inc. | Quality of service for data storage volumes |
US20070083482A1 (en) * | 2005-10-08 | 2007-04-12 | Unmesh Rathi | Multiple quality of service file system |
US7657671B2 (en) * | 2005-11-04 | 2010-02-02 | Sun Microsystems, Inc. | Adaptive resilvering I/O scheduling |
JP2007334641A (en) * | 2006-06-15 | 2007-12-27 | Sony Corp | Device, method and program for processing information |
KR100798924B1 (en) * | 2006-09-29 | 2008-01-29 | 한국전자통신연구원 | Resorce allocation method on pca period of mboa mac |
US8156289B2 (en) * | 2008-06-03 | 2012-04-10 | Microsoft Corporation | Hardware support for work queue management |
US8121129B2 (en) * | 2008-12-15 | 2012-02-21 | International Business Machines Corporation | Optimizing throughput of data in a communications network |
US8490107B2 (en) | 2011-08-08 | 2013-07-16 | Arm Limited | Processing resource allocation within an integrated circuit supporting transaction requests of different priority levels |
US9584593B2 (en) * | 2014-06-27 | 2017-02-28 | Amazon Technologies, Inc. | Failure management in a distributed strict queue |
US9591101B2 (en) * | 2014-06-27 | 2017-03-07 | Amazon Technologies, Inc. | Message batching in a distributed strict queue |
US9575820B2 (en) * | 2014-06-27 | 2017-02-21 | Amazon Technologies, Inc. | Client control in a distributed strict queue |
US9577961B2 (en) * | 2014-06-27 | 2017-02-21 | Amazon Technologies, Inc. | Input/output management in a distributed strict queue |
US10025531B2 (en) | 2015-09-10 | 2018-07-17 | HoneycombData Inc. | Reducing read command latency in storage devices |
US11360702B2 (en) * | 2017-12-11 | 2022-06-14 | Hewlett-Packard Development Company, L.P. | Controller event queues |
US10613998B2 (en) * | 2018-07-30 | 2020-04-07 | EMC IP Holding Company LLC | Multi-level time decay storage queue |
Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6003101A (en) * | 1998-07-15 | 1999-12-14 | International Business Machines Corp. | Efficient priority queue |
Family Cites Families (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4926418A (en) | 1989-04-11 | 1990-05-15 | International Business Machines Corporation | Fairness algorithm for full-duplex buffer insertion ring |
US5185861A (en) * | 1991-08-19 | 1993-02-09 | Sequent Computer Systems, Inc. | Cache affinity scheduler |
GB2304210B (en) * | 1995-08-11 | 2000-02-16 | Fujitsu Ltd | Data receiving devices |
US6487212B1 (en) * | 1997-02-14 | 2002-11-26 | Advanced Micro Devices, Inc. | Queuing structure and method for prioritization of frames in a network switch |
US5909594A (en) | 1997-02-24 | 1999-06-01 | Silicon Graphics, Inc. | System for communications where first priority data transfer is not disturbed by second priority data transfer and where allocated bandwidth is removed when process terminates abnormally |
US5924098A (en) * | 1997-06-30 | 1999-07-13 | Sun Microsystems, Inc. | Method and apparatus for managing a linked-list data structure |
US6317872B1 (en) * | 1997-07-11 | 2001-11-13 | Rockwell Collins, Inc. | Real time processor optimized for executing JAVA programs |
US6418517B1 (en) * | 1997-08-29 | 2002-07-09 | International Business Machines Corporation | Optimized function execution for a multiprocessor computer system |
US5960434A (en) * | 1997-09-26 | 1999-09-28 | Silicon Graphics, Inc. | System method and computer program product for dynamically sizing hash tables |
US6446225B1 (en) * | 1998-04-23 | 2002-09-03 | Microsoft Corporation | Server system with scalable session timeout mechanism |
US6477144B1 (en) * | 1998-09-10 | 2002-11-05 | Nortel Networks Limited | Time linked scheduling of cell-based traffic |
-
2000
- 2000-01-06 US US09/478,942 patent/US6745262B1/en not_active Expired - Lifetime
- 2000-12-13 DE DE10062063A patent/DE10062063B4/en not_active Expired - Lifetime
- 2000-12-27 JP JP2000397075A patent/JP4028686B2/en not_active Expired - Fee Related
Patent Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6003101A (en) * | 1998-07-15 | 1999-12-14 | International Business Machines Corp. | Efficient priority queue |
Also Published As
Publication number | Publication date |
---|---|
JP4028686B2 (en) | 2007-12-26 |
US6745262B1 (en) | 2004-06-01 |
DE10062063A1 (en) | 2001-07-19 |
JP2001222501A (en) | 2001-08-17 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
DE10062063B4 (en) | A method, system, computer program product and storage device for controlling a queue of requests of different priority | |
DE112010004931B4 (en) | Multi-phase recovery of file systems with selective data availability as required | |
DE102012216568B4 (en) | Scheduling and managing compute tasks with different execution priority levels | |
DE112011101109B4 (en) | Transfer of Map / Reduce data based on a storage network or storage network file system | |
DE112011104419B4 (en) | Range migration for paired storage | |
DE19983026B4 (en) | Bridge between two busses with a buffer with an adjustable minimum amount of memory space for accepting a write request and method therefor | |
DE60123396T2 (en) | DISTRIBUTION SYSTEM WITH ORDER OF A LIMITED NUMBER OF REQUIREMENTS | |
DE19733151B4 (en) | Apparatus and method for virtual device access in a computer system | |
DE60316141T2 (en) | REAL-TIME STORAGE AREA NETWORK | |
DE112010003794B4 (en) | Data storage using bitmaps | |
DE102013215009A1 (en) | Method and system for optimizing data transmission | |
DE112012004798T5 (en) | Paging speed adjustment based on read and write response time requirements | |
DE102005006176A1 (en) | Transaction processing systems and methods that use non-disk persistent storage | |
DE10212637A1 (en) | Printer priority Bidding Scheme | |
DE202013012465U1 (en) | End-to-end exposure of native data types to third-party applications | |
DE102012223167B4 (en) | Sharing artifacts between collaborative systems | |
DE112012003961T5 (en) | Simultaneous processing of queued messages | |
DE112020004651B4 (en) | MULTI-TENANT ETL RESOURCE SHARING | |
DE112018000900T5 (en) | Processing a command to free up space in a computer system | |
DE60211452T2 (en) | DMA transfer of data and check information to and from a data storage device | |
DE112011106066T5 (en) | System and method for providing differentiated storage service in the database | |
DE112012002796T5 (en) | Transfer deduplicated data organized in virtual media to a target set of physical media | |
DE10234138A1 (en) | Manage storage competition in automated storage systems | |
DE202016107451U1 (en) | Systems for interactively displaying a visible portion of a rendering surface on a user device | |
DE112012005572B4 (en) | Balancing the bandwidth of requestors using a shared storage system |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
OP8 | Request for examination as to paragraph 44 patent law | ||
8364 | No opposition during term of opposition | ||
8320 | Willingness to grant licences declared (paragraph 23) | ||
R085 | Willingness to licence withdrawn | ||
R082 | Change of representative |
Representative=s name: PFENNING MEINIG & PARTNER GBR, DE |
|
R081 | Change of applicant/patentee |
Owner name: GOOGLE INC., MOUNTAIN VIEW, USFree format text: FORMER OWNER: INTERNATIONAL BUSINESS MACHINES CORPORATION, ARMONK, N.Y., USEffective date: 20120717Owner name: GOOGLE INC., USFree format text: FORMER OWNER: INTERNATIONAL BUSINESS MACHINES CORPORATION, ARMONK, USEffective date: 20120717Owner name: GOOGLE LLC (N.D.GES.D. STAATES DELAWARE), MOUN, USFree format text: FORMER OWNER: INTERNATIONAL BUSINESS MACHINES CORPORATION, ARMONK, N.Y., USEffective date: 20120717 |
|
R082 | Change of representative |
Representative=s name: PFENNING MEINIG & PARTNER GBR, DEEffective date: 20120717Representative=s name: BETTEN & RESCH PATENT- UND RECHTSANWAELTE PART, DEEffective date: 20120717 |
|
R082 | Change of representative |
Representative=s name: BETTEN & RESCH PATENT- UND RECHTSANWAELTE PART, DE |
|
R082 | Change of representative |
Representative=s name: BETTEN & RESCH PATENT- UND RECHTSANWAELTE PART, DE |
|
R081 | Change of applicant/patentee |
Owner name: GOOGLE LLC (N.D.GES.D. STAATES DELAWARE), MOUN, USFree format text: FORMER OWNER: GOOGLE INC., MOUNTAIN VIEW, CALIF., US |
|
R082 | Change of representative |
Representative=s name: BETTEN & RESCH PATENT- UND RECHTSANWAELTE PART, DE |
|
R071 | Expiry of right |
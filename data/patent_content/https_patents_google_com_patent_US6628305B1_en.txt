US6628305B1 - Architecture and definition of an extensible, object-oriented graphical user interface framework for managing and administering heterogenous digital library datastores - Google Patents
Architecture and definition of an extensible, object-oriented graphical user interface framework for managing and administering heterogenous digital library datastores Download PDFInfo
- Publication number
- US6628305B1 US6628305B1 US09/290,848 US29084899A US6628305B1 US 6628305 B1 US6628305 B1 US 6628305B1 US 29084899 A US29084899 A US 29084899A US 6628305 B1 US6628305 B1 US 6628305B1
- Authority
- US
- United States
- Prior art keywords
- view
- application
- tree
- container
- datastores
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F9/00—Arrangements for program control, e.g. control units
- G06F9/06—Arrangements for program control, e.g. control units using stored programs, i.e. using an internal store of processing equipment to receive or retain programs
- G06F9/44—Arrangements for executing specific programs
- G06F9/451—Execution arrangements for user interfaces
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99941—Database schema or data structure
- Y10S707/99943—Generating database or data structure, e.g. via user interface
-
- Y—GENERAL TAGGING OF NEW TECHNOLOGICAL DEVELOPMENTS; GENERAL TAGGING OF CROSS-SECTIONAL TECHNOLOGIES SPANNING OVER SEVERAL SECTIONS OF THE IPC; TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10—TECHNICAL SUBJECTS COVERED BY FORMER USPC
- Y10S—TECHNICAL SUBJECTS COVERED BY FORMER USPC CROSS-REFERENCE ART COLLECTIONS [XRACs] AND DIGESTS
- Y10S707/00—Data processing: database and file management or data structures
- Y10S707/99951—File or database maintenance
- Y10S707/99952—Coherency, e.g. same view to multiple users
- Y10S707/99953—Recoverability
Definitions
- the present invention is directed in general to graphical user interfaces, and more particularly to a graphical user interface for managing and administering hetereogenous Digital Library datastores.
- a heterogeneous Digital Library datastore usually provides Library Server functions as well as Object Server functions, wherein these functions execute on one or more network server nodes.
- a Library Server typically supports a high-level content model, handles access control, manages transactions, and performs other functions.
- An Object Server supports a large, scaleable repository of objects which are components of the high-level content model maintained by Library Server.
- a systems administrator may need to manage several heterogeneous Digital Library datastores. This task can be made easier using an Systems Administration program that interfaces to each of the heterogeneous Digital Library datastores. Moreover, this task can be made easier through use of a consistent user interface.
- the present invention discloses a method, apparatus, and article of manufacture for an extensible, object-oriented graphical user interface (GUI) framework that provides a consistent “look and feel” for an application that interfaces to the GUI framework and that manages and administers a plurality of datastores.
- GUI object-oriented graphical user interface
- the GUI framework is extensible by means of a “plug-in” facility through which support for additional datastores can be added, so that a collection of heterogeneous datastores can be managed using one consistent user interface.
- FIG. 1 is a block diagram that illustrates an exemplary hardware and software environment used to implement the preferred embodiment of the invention
- FIG. 2 is a block diagram that describes the components and sub-components of the graphical user interface framework according to the preferred embodiment of the present invention
- FIGS. 3A, 3 B, 3 C, and 3 D further illustrate the operation of the preferred embodiment of the, present invention
- FIG. 4 is a flowchart that illustrates the general logic of a message or event-driven application performing the steps of the preferred embodiment of the present invention
- FIG. 5 is a flowchart showing the steps performed by the application when a datastore is selected from the datastore list according to the preferred embodiment of the present invention
- FIGS. 6A and 6B together are a flowchart showing the steps performed by the application during the display of a common frame user interface for a selected datastore according to the preferred embodiment of the present invention.
- the present invention provides an architecture and definition of an extensible, object-oriented graphical user interface (GUI) framework for managing and administering heterogeneous Digital Library datastores.
- GUI graphical user interface
- This invention provides a consistent “look and feel” for a Systems Administration Program or other application.
- the GUI framework is extensible by means of a “plug-in” facility, through which support for additional types of datastores can be added, so that a collection of heterogeneous datastores can be managed using one consistent interface.
- the GUI framework includes the following components that provide the flexibility of designing new interfaces:
- the GUI framework manages the behavior of all the components to provide a consistent look and feel across the whole design.
- Each tree node or container in the framework is an object that encapsulates its own set of properties and actions, thereby giving the interface its object-oriented behavior.
- API application programming interface
- FIG. 1 is a block diagram that illustrates an exemplary hardware and software environment used to implement the preferred embodiment of the invention.
- the present invention comprises a Digital Library system that is typically implemented using at least one client computer 100 and/or at least one server computer 102 .
- Both the client computers 100 and server computers 102 generally include, inter alia, one or more processors, random access memory (RAM), data storage devices, data communications devices, and other peripherals.
- RAM random access memory
- the present invention is generally implemented using inter-related computer programs executed by both the client computers 102 and server computers 102 .
- These computer programs include at least one Library Server 104 and at least one Object Server 106 (which may or may not be executed by the same server computer 102 ), wherein the Library Server 104 manages a Library Database 108 , the Object Server 106 manages an Object Database 110 , and the combination of server and database is known as a datastore.
- the Library and Object Servers 104 and 106 usually communicate indirectly with an Application 112 via at least one Client API 114 .
- the Application 112 usually communicates with users via a Graphical User Interface (GUI) Framework 116 . More information concerning each of the above-identified components is provided below.
- GUI Graphical User Interface
- All of the computer programs are comprised of instructions which, when read and executed by a computer, cause the computer to perform the steps necessary to implement and/or use the present invention.
- the computer programs are tangibly embodied in and/or are readable from a device, carrier, or media, such as memory, data storage devices, and/or remote devices coupled to the computer via data communications devices.
- the present invention may be implemented as a method, apparatus, or article of manufacture using standard programming and/or engineering techniques to produce software, firmware, hardware, or any combination thereof.
- article of manufacture (or alternatively, “computer program product”) as used herein is intended to encompass computer programs accessible from any computer-readable device, carrier, or media.
- FIG. 1 is not intended to limit the present invention. Further, those skilled in the art will recognize that other alternative hardware and software environments may be used without departing from the scope of the present invention.
- the Library Server 104 maintains the contents of the Library Database 108 and provides data integrity by performing a number of different functions: managing the tuples, tables, and other data structures of the Library Database 108 , maintaining index information; and controlling access to objects stored in the Object Database 110 managed by the Object Server 106 .
- the Library Server 104 is typically built upon relational database management system (RDBMS) technology, such as the DB2TM product offered by IBM Corporation.
- RDBMS relational database management system
- Each Object Server 106 is associated with a Library Server 104 and maintains objects in the Object Database 110 that are referenced by tables maintained in the Library Database 108 by the Library Server 104 . This combination of relational data and object data is generally termed a “Digital Library.”
- the Object Server 106 receives requests from the Application 112 via the Library Server 104 and then communicates the results from those requests to the Application 112 via the Client API 114 .
- the Client API 114 provides the functions necessary for the Application 112 to interact with the Library Server 104 and the Object Server 106 .
- the Application 112 can command the Library Server 104 and Object Server 106 to perform Digital Library functions, including storing relational and object data, indexing relational and object data, processing relational and object data, retrieving relational and object data, deleting relational and object data, etc.
- the Application 112 comprises a System Administration Program that permits configuration of the Digital Library system.
- a System Administration Program may configure both hardware and software resources in the system, control the level of access that end-users have to the system, and provide other administrative functions.
- FIG. 2 is a block diagram that describes the components and sub-components of the GUI Framework 116 according to the preferred embodiment of the present invention.
- the GUI Framework 116 is comprised of a Common Frame User Interface (UI) 200 that provides a consistent look and feel between different Applications 112 that interface to the GUI Framework 116 , as well as different datastores accessed by the Applications 112 .
- UI Common Frame User Interface
- the components and sub-components of the Common Frame User Interface (UI) 200 are implemented as class specifications using, for example, JavaTM Foundation Classes (JFC), and then are instantiated as objects during execution.
- JFC JavaTM Foundation Classes
- the GUI Framework 116 is extensible, because multiple sets of such objects can be instantiated, i.e., for each of the datastores, thereby providing a “plug-in” facility through which support for additional datastores can be added.
- the GUI Framework 116 provides a consistent “look and feel” for each of the multiple datastores, because the same class specifications are used for the different datastores.
- the Common Frame UI 200 is an aggregation of the following sub-components:
- a customizable menu bar (Common Menu Bar UI 202 ).
- a customizable toolbar (Common Toolbar UI 204 ).
- a tree view (Common Tree UI 206 ).
- a container view (Common Container UI 208 ).
- a status bar (Common Status Bar UI 210 ).
- Find facilities (Find Facility 212 ).
- a message box (Common Message Box 214 )
- a logon box (Common Logon Box 216 ).
- Datastore List 218 A list of datastores accessible from the Application 112 (Datastore List 218 ).
- the Common Menu Bar UI 202 provides a mechanism for the Application 112 to modify a default menu bar of the GUI Framework 116 .
- the default menu bar of the GUI Framework 116 provides the following standard menus and menu items:
- a comprehensive set of APIs within the Common Menu Bar UI 202 are available to the Application 112 to add, remove, insert, enable, and/or disable menus or menu items.
- the Common Toolbar UI 204 provides a mechanism for the Application 112 to modify a default toolbar of the GUI Framework 116 .
- the Common Toolbar UI 204 supports any number of buttons which can be used to provide quick access to any frequently used operation the given datastore supports, e.g., adding users or user groups.
- the same object can be used for the action of the menu item providing the same function. For example, if there is a menu item for creating a “new user” and there is a toolbar button that provides quick access to this function, then the same object that is used for the menu item's action can also be used for the “new user” toolbar button.
- the Common Tree UI 206 provides a mechanism for the Application 112 to display a tree view of zero or more datastores, including any resources therein.
- the tree view which is similar to the display of the Microsoft WindowsTM Explorer, offers the following functions:
- the Common Container UI 208 provides a mechanism for the Application 112 to display a container view of a selected tree node from the Common Tree UI 206 .
- the Common Container UI 208 includes the following functions:
- the Common Container UI 208 is displayed side-by-side with the Common Tree UI 206 and responds to operations performed therein, as well as operations performed within the Common Container UI 208 .
- the Common Container UI 208 is refreshed with the contents of the selected tree node, e.g., its children objects.
- the user selects any item in the container view, the item to be selected and its specific menu (if any) to be added to the Common Frame UI 200 .
- the Common Status Bar UI 210 provides a mechanism for the Application 112 to display a status of an operation being performed by the Application 112 , Server 104 or 106 , or other entity. Specifically, the Common Status Bar UI 210 contains a progress bar for the operation.
- the Find Facility 212 provides a mechanism for the Application 112 to search for nodes, containers, etc. Generally, the Find Facility 212 is activated via a text entry field, which allows the user to enter a search word or phrase, and thereafter initiates the search within the node selected from the Common Tree UI 206 upon selection of a “Find” button
- the Common Message Box 214 provides a common message box that can be used by the Application 112 to display errors, information or warnings, with each type of message; having it is own icon.
- the dialog also provides a variety of button options, e.g., OK/Cancel, OK/Cancel/Help, Retry/Cancel, Yes/No, Yes/No/Help.
- the Common Logon Box 216 provides a common logon dialog box for different datastores that can be used by the Application 112 to enter user ids and passwords for the datastores.
- the Datastore List 218 provides a mechanism for the Application 112 to maintain a list of zero or more connected datastores.
- Each datastore is represented by a Common Server 220 .
- Each Common Server 220 has its own menu bar, toolbar, tree, and container view within the Common Frame UI 200 . For example, when the user switches between Common Servers 220 , the Common Frame UI 200 automatically saves the state of the displayed menu bar, toolbar, tree, and container view, as well as user-selected sort order, before displaying the newly selected Common Server 220 .
- Each Common Server 220 is comprised of zero or more Common Objects 222 that represent the various resources within the datastores.
- a Common Object 222 may represent a table, an object, a folder, a catalog, etc.
- the Common Object 222 represents a display entity within both the Common Tree UI 206 and Common Container UI 208 of the Common Frame UI 200 .
- Each Common Object 222 includes at least the following attributes:
- leaf (default value is true, i.e., the default object is a “container”
- the Common Object 222 contains three (3) additional lists of information associated with the “Selected” menu of the Common Frame UI 200 :
- FIGS. 3A, 3 B, 3 C, and 3 D further illustrate the operation of the preferred embodiment of the present invention.
- FIG. 3A illustrates the Common Frame UI 200 , including both a Common Tree UI 206 (the left pane) and Common Container UI 208 (the right pane).
- the Server List 218 is shown as a combo-box above the left pane.
- This window shows multiple datastores available to the Application 112 using the GUI framework 118 , wherein the Library Server 104 datastore known as “LIBSRVRN” s selected from the Server List 218 .
- FIG. 3B is an expanded tree view (Common Tree UI 206 ) in the left pane of the window and a detailer container view (Common Container UI 208 ) in the right pane of the window.
- This window shows the Library Server 104 datastore “LIBSRVRN”.
- FIG. 3C illustrates the Common Frame UI 200 , including both a Common Tree UI 206 (the left pane) and Common Container UI 208 (the right pane), for the “Image Search” datastore selected from the Server List 218 above the left pane, wherein QBIC is an acronym for “Query by Image Content”.
- QBIC is an acronym for “Query by Image Content”. This is a datastore that has very different hierarchical data than the Library Server 104 datastore shown in FIGS. 3A and 3B.
- FIG. 3D illustrates a VisualInfoTM Work Management Builder Application 112 using the GUI Framework 116 .
- FIG. 4 is a flowchart that illustrates the general logic of a message or event-driven Application 112 performing the steps of the preferred embodiment of the present invention.
- operations are performed when transitions are made, based upon the receipt of messages or events, from present or current states to new states.
- the flowchart begins by waiting at block 400 for an event (e.g., a mouse button click, etc.). It should be appreciated that during this time, other tasks, e.g., file, memory, and video tasks, etc., may also be carried out by the computer.
- an event e.g., a mouse button click, etc.
- control passes to block 402 to identify the event. Based upon the event, as well as the current state of the system determined in block 404 , a new state is determined in block 406 .
- the logic transitions to the new state and performs any actions required for the transition.
- the current state is set to the previously determined new state, and control returns to block 400 to wait for more input events.
- FIG. 5 is a flowchart showing the steps performed by the Application 112 when a datastore is selected from the Datastore List 218 according to the preferred embodiment of the present invention.
- Block 500 represents the start of the function, which occurs when the user selects a Common Server 220 from the Server List 218 .
- the selection function may be invoked via keyboard commands, mouse commands, selection of combo-box items, or any number of other ways.
- Block 502 represents the Application 112 saving the current state of the Common Frame UI 200 .
- Block 504 represents the Application 112 initializing the Common Frame UI 200 for the selected Common Server 220 .
- This initialization includes initializing the Common Menu Bar UI 202 , Common Toolbar UI 204 , Common Tree UI 206 , Common Container UI 208 , Common Status Bar UI 210 , etc.
- Block 506 represents the Application 112 displaying the Common Frame UI 200 .
- Block 508 represents the end of the logic.
- FIGS. 6A and 6B together are a flowchart showing the steps performed by the Application 112 during the display of a Common Frame UI 200 for a selected datastore.
- Block 600 represents the start of the function, which occurs when the user selects a component of the Common Frame UI 200 .
- the selection function may be invoked via keyboard commands, mouse commands, selection of combo-box items, or any number of other ways.
- Block 602 is a decision block that represents the Application 112 determining whether the component selected was a component of the Common Menu Bar UI 202 of the Common Frame UI 200 . If so, control transfers to Block 604 to perform the desired menu bar functions; otherwise, control transfers to Block 606 .
- Block 606 is a decision block that represents the Application 112 determining whether the component selected was a component of the Common Toolbar UI 204 of the Common Frame UI 200 . If so, control transfers to Block 608 to perform the desired toolbar functions; otherwise, control transfers to Block 610 .
- Block 610 is a decision block that represents the Application 112 determining whether the component selected was a component of the Common Tree UI 206 of the Common Frame UI 200 . If so, control transfers to Block 612 to perform the desired tree view functions; otherwise, control transfers to Block 614 .
- Block 614 is a decision block that represents the Application 112 determining whether the component selected was a component of the Common Container UI 208 of the Common Frame UI 200 . If so, control transfers to Block 616 to perform the desired container view functions; otherwise, control transfers to Block 618 .
- Block 618 is a decision block that represents the Application 112 determining whether the component selected was a component of the Common Status Bar UI 210 of the Common Frame UI 200 . If so, control transfers to Block 620 to perform the desired status bar functions; otherwise, control transfers to Block 622 .
- Block 622 is a decision block that represents the Application 112 determining whether the component selected was a component of the Find Facility 212 of the Common Frame UI 200 . If so, control transfers to Block 624 to perform the desired find functions; otherwise, control transfers to Block 626 .
- Block 626 is a decision block that represents the Application 112 determining whether the component selected was a component of the Common Message Box 214 of the Common Frame UI 200 . If so, control transfers to Block 628 to perform the desired message box functions; otherwise, control transfers to Block 630 .
- Block 630 is a decision block that represents the Application 112 determining whether the component selected was a component of the Common Logon Box 216 of the Common Frame UI 200 . If so, control transfers to Block 632 to perform the desired logon functions; otherwise, control transfers to Block 634 .
- Block 634 represents the end of the logic.
- any type of computer such as a mainframe, minicomputer, workstation or personal computer, could be used with the present invention.
- the computers may or may not be network-connected, and a client-server arrangement is not a requirement to practice the current invention.
- any software program, application or operating system having a user interface could benefit from the present invention.
- the present invention discloses a method, apparatus, and article of manufacture for an extensible, object-oriented graphical user interface (GUI) framework that provides a consistent “look and feel” for an application that interfaces to the GUI framework and that manages and administers a plurality of datastores.
- GUI graphical user interface
- the GUI framework is extensible by means of a “plug-in” facility through which support for additional datastores can be added, so that a collection of heterogeneous datastores can be managed using one consistent user interface.
Abstract
Description
Claims (45)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/290,848 US6628305B1 (en) | 1998-11-09 | 1999-04-13 | Architecture and definition of an extensible, object-oriented graphical user interface framework for managing and administering heterogenous digital library datastores |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10766798P | 1998-11-09 | 1998-11-09 | |
US09/290,848 US6628305B1 (en) | 1998-11-09 | 1999-04-13 | Architecture and definition of an extensible, object-oriented graphical user interface framework for managing and administering heterogenous digital library datastores |
Publications (1)
Publication Number | Publication Date |
---|---|
US6628305B1 true US6628305B1 (en) | 2003-09-30 |
Family
ID=28456601
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/290,848 Expired - Lifetime US6628305B1 (en) | 1998-11-09 | 1999-04-13 | Architecture and definition of an extensible, object-oriented graphical user interface framework for managing and administering heterogenous digital library datastores |
Country Status (1)
Country | Link |
---|---|
US (1) | US6628305B1 (en) |
Cited By (32)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20010012990A1 (en) * | 2000-01-14 | 2001-08-09 | Yakov Zimmerman | Method for generating a client/server model of a multi-protocol layered transmissions network |
US20020194152A1 (en) * | 2000-07-02 | 2002-12-19 | Treil Nicolas Herve Edouard | Method for processing structured data using an object-oriented computer language |
US20040153772A1 (en) * | 2002-08-22 | 2004-08-05 | Gorshenev Mikhail A. | Compliance testing user interfaces implemented on resource-constrained computing devices |
US20040205711A1 (en) * | 2003-04-10 | 2004-10-14 | Ishimitsu Michael Kazuo | System and method for creation of an object within an object hierarchy structure |
US20050010877A1 (en) * | 2003-07-11 | 2005-01-13 | Arthur Udler | System and method for dynamic generation of a graphical user interface |
US20050010901A1 (en) * | 2003-07-11 | 2005-01-13 | Arthur Udler | System and method for generating a graphical user interface (GUI) element |
US6847959B1 (en) * | 2000-01-05 | 2005-01-25 | Apple Computer, Inc. | Universal interface for retrieval of information in a computer system |
US20050033763A1 (en) * | 2003-07-11 | 2005-02-10 | Shyhshiun Chen | System and method for providing a non-specific graphical user interface framework |
US20050044526A1 (en) * | 2003-07-10 | 2005-02-24 | Darrell Kooy | System and method for generating a web-enabled graphical user interface plug-in |
US20050172261A1 (en) * | 2004-01-30 | 2005-08-04 | Yuknewicz Paul J. | Architecture for creating a user interface using a data schema |
US20050207444A1 (en) * | 2001-01-12 | 2005-09-22 | Eci Telecom Ltd. | Hybrid network element for a multi-protocol layered transmissions network and a graphical representation of the network |
US20050246725A1 (en) * | 2004-05-03 | 2005-11-03 | Microsoft Corporation | Generic user interface command architecture |
US20050262517A1 (en) * | 2004-05-21 | 2005-11-24 | French Jeffrey K | System and method for generating a web control in a Windows development environment |
US20060085754A1 (en) * | 2004-10-19 | 2006-04-20 | International Business Machines Corporation | System, apparatus and method of selecting graphical component types at runtime |
US20060101353A1 (en) * | 2006-01-17 | 2006-05-11 | Microsoft Corporation | Multi-pane navigation model for graphical user interfaces |
US20060107218A1 (en) * | 2006-01-17 | 2006-05-18 | Microsoft Corporation | View-based navigation model for graphical user interfaces |
US20060123393A1 (en) * | 2004-12-02 | 2006-06-08 | Brian Atkins | User interface for network application |
US20060200741A1 (en) * | 1999-11-01 | 2006-09-07 | Demesa Jesse G | Modeling system for retrieving and displaying data from multiple sources |
US20070050412A1 (en) * | 2005-08-26 | 2007-03-01 | United Space Alliance, Llc | Image and Information Management System |
US7240323B1 (en) * | 2001-07-26 | 2007-07-03 | Emc Corporation | Plug and play interface for user actions |
US20080059433A1 (en) * | 2006-08-30 | 2008-03-06 | Econiq Ltd. | System and method for communicating between graphical user interfaces |
US20080163080A1 (en) * | 2006-12-28 | 2008-07-03 | Kooy Darrell J | Multi-platform graphical user interface |
US20090069211A1 (en) * | 2000-06-01 | 2009-03-12 | Ecolab Inc. | Molded detergent composition |
US7596611B1 (en) * | 2002-04-01 | 2009-09-29 | Veritas Operating Corporation | Method and apparatus for maintaining information for use in the configuration of a client |
US20090306843A1 (en) * | 2007-01-12 | 2009-12-10 | Toyota Jidosha Kabushiki Kaisha | Hybrid vehicle and control method thereof |
US20100038159A1 (en) * | 2007-01-09 | 2010-02-18 | Toyota Jidosha Kabushiki Kaisha | Vehicle and control method thereof |
US7917855B1 (en) * | 2002-04-01 | 2011-03-29 | Symantec Operating Corporation | Method and apparatus for configuring a user interface |
US7941761B2 (en) | 2004-05-03 | 2011-05-10 | Microsoft Corporation | Third party service switching through command bar user interface |
US7996861B1 (en) | 1999-06-04 | 2011-08-09 | Opentv, Inc. | Flexible interface for secure input of pin code |
US9736679B2 (en) | 2012-09-20 | 2017-08-15 | Continental Automotive Gmbh | System for controlling a vehicle computer using a mobile telephone |
US20170351646A1 (en) * | 2016-06-06 | 2017-12-07 | Hexagon Technology Center Gmbh | User Interface with Movable Mini-Tabs |
US10235156B2 (en) * | 2016-12-01 | 2019-03-19 | Entit Software Llc | Versioned extension points of graphical user interfaces |
Citations (25)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US429882A (en) * | 1890-06-10 | Hot-air and steam heater | ||
US5367633A (en) | 1992-12-23 | 1994-11-22 | Taligent, Inc. | Objected oriented notification framework system |
US5369766A (en) | 1993-03-25 | 1994-11-29 | Taligent, Inc. | Object-oriented loader system with support for different load formats |
US5388264A (en) | 1993-09-13 | 1995-02-07 | Taligent, Inc. | Object oriented framework system for routing, editing, and synchronizing MIDI multimedia information using graphically represented connection object |
US5446842A (en) | 1993-02-26 | 1995-08-29 | Taligent, Inc. | Object-oriented collaboration system |
US5459865A (en) | 1993-04-05 | 1995-10-17 | Taligent Inc. | Runtime loader |
US5519862A (en) | 1993-02-26 | 1996-05-21 | Taligent, Inc. | Concurrent processing apparatus with incremental command objects |
US5524190A (en) | 1993-06-04 | 1996-06-04 | Taligent, Inc. | Command object logging system for restoring documents |
US5583983A (en) * | 1994-11-17 | 1996-12-10 | Objectware, Inc. | Multi-platform object-oriented software development and deployment system |
US5613099A (en) | 1993-02-17 | 1997-03-18 | International Business Machines Corporation | Persistent object storage system with modifiable group skeletal formats |
US5717877A (en) | 1992-12-23 | 1998-02-10 | Object Licensing Licensing Corporation | Object-oriented data access framework system |
US5745675A (en) | 1996-04-23 | 1998-04-28 | International Business Machines Corporation | Object oriented framework mechanism for performing computer system diagnostics |
US5751941A (en) | 1996-04-04 | 1998-05-12 | Hewlett-Packard Company | Object oriented framework for testing software |
US5768505A (en) | 1995-12-19 | 1998-06-16 | International Business Machines Corporation | Object oriented mail server framework mechanism |
US5778378A (en) | 1996-04-30 | 1998-07-07 | International Business Machines Corporation | Object oriented information retrieval framework mechanism |
US5787425A (en) | 1996-10-01 | 1998-07-28 | International Business Machines Corporation | Object-oriented data mining framework mechanism |
US5893106A (en) * | 1997-07-11 | 1999-04-06 | International Business Machines Corporation | Object oriented server process framework with interdependent-object creation |
US5963208A (en) * | 1995-03-09 | 1999-10-05 | Michael A. Dolan | Integrated network access user interface for navigating with a hierarchical graph |
US6031977A (en) * | 1993-12-17 | 2000-02-29 | Object Technology Licensing Corp. | Object-oriented distributed communications directory service |
US6061515A (en) * | 1994-07-18 | 2000-05-09 | International Business Machines Corporation | System and method for providing a high level language for mapping and accessing objects in data stores |
US6185600B1 (en) * | 1997-12-08 | 2001-02-06 | Hewlett-Packard Company | Universal viewer/browser for network and system events using a universal user interface generator, a generic product specification language, and product specific interfaces |
US6222533B1 (en) * | 1997-08-25 | 2001-04-24 | I2 Technologies, Inc. | System and process having a universal adapter framework and providing a global user interface and global messaging bus |
US6233620B1 (en) * | 1996-07-02 | 2001-05-15 | Sun Microsystems, Inc. | Object-oriented system, method and article of manufacture for a presentation engine in an interprise computing framework system |
US6272521B1 (en) * | 1997-12-08 | 2001-08-07 | Object Technology Licensing Corporation | Apparatus and method for allowing object-oriented programs created with different framework versions to communicate |
US6366916B1 (en) * | 1998-05-22 | 2002-04-02 | International Business Machines Corporation | Configurable and extensible system for deploying asset management functions to client applications |
-
1999
- 1999-04-13 US US09/290,848 patent/US6628305B1/en not_active Expired - Lifetime
Patent Citations (25)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US429882A (en) * | 1890-06-10 | Hot-air and steam heater | ||
US5717877A (en) | 1992-12-23 | 1998-02-10 | Object Licensing Licensing Corporation | Object-oriented data access framework system |
US5367633A (en) | 1992-12-23 | 1994-11-22 | Taligent, Inc. | Objected oriented notification framework system |
US5613099A (en) | 1993-02-17 | 1997-03-18 | International Business Machines Corporation | Persistent object storage system with modifiable group skeletal formats |
US5446842A (en) | 1993-02-26 | 1995-08-29 | Taligent, Inc. | Object-oriented collaboration system |
US5519862A (en) | 1993-02-26 | 1996-05-21 | Taligent, Inc. | Concurrent processing apparatus with incremental command objects |
US5369766A (en) | 1993-03-25 | 1994-11-29 | Taligent, Inc. | Object-oriented loader system with support for different load formats |
US5459865A (en) | 1993-04-05 | 1995-10-17 | Taligent Inc. | Runtime loader |
US5524190A (en) | 1993-06-04 | 1996-06-04 | Taligent, Inc. | Command object logging system for restoring documents |
US5388264A (en) | 1993-09-13 | 1995-02-07 | Taligent, Inc. | Object oriented framework system for routing, editing, and synchronizing MIDI multimedia information using graphically represented connection object |
US6031977A (en) * | 1993-12-17 | 2000-02-29 | Object Technology Licensing Corp. | Object-oriented distributed communications directory service |
US6061515A (en) * | 1994-07-18 | 2000-05-09 | International Business Machines Corporation | System and method for providing a high level language for mapping and accessing objects in data stores |
US5583983A (en) * | 1994-11-17 | 1996-12-10 | Objectware, Inc. | Multi-platform object-oriented software development and deployment system |
US5963208A (en) * | 1995-03-09 | 1999-10-05 | Michael A. Dolan | Integrated network access user interface for navigating with a hierarchical graph |
US5768505A (en) | 1995-12-19 | 1998-06-16 | International Business Machines Corporation | Object oriented mail server framework mechanism |
US5751941A (en) | 1996-04-04 | 1998-05-12 | Hewlett-Packard Company | Object oriented framework for testing software |
US5745675A (en) | 1996-04-23 | 1998-04-28 | International Business Machines Corporation | Object oriented framework mechanism for performing computer system diagnostics |
US5778378A (en) | 1996-04-30 | 1998-07-07 | International Business Machines Corporation | Object oriented information retrieval framework mechanism |
US6233620B1 (en) * | 1996-07-02 | 2001-05-15 | Sun Microsystems, Inc. | Object-oriented system, method and article of manufacture for a presentation engine in an interprise computing framework system |
US5787425A (en) | 1996-10-01 | 1998-07-28 | International Business Machines Corporation | Object-oriented data mining framework mechanism |
US5893106A (en) * | 1997-07-11 | 1999-04-06 | International Business Machines Corporation | Object oriented server process framework with interdependent-object creation |
US6222533B1 (en) * | 1997-08-25 | 2001-04-24 | I2 Technologies, Inc. | System and process having a universal adapter framework and providing a global user interface and global messaging bus |
US6185600B1 (en) * | 1997-12-08 | 2001-02-06 | Hewlett-Packard Company | Universal viewer/browser for network and system events using a universal user interface generator, a generic product specification language, and product specific interfaces |
US6272521B1 (en) * | 1997-12-08 | 2001-08-07 | Object Technology Licensing Corporation | Apparatus and method for allowing object-oriented programs created with different framework versions to communicate |
US6366916B1 (en) * | 1998-05-22 | 2002-04-02 | International Business Machines Corporation | Configurable and extensible system for deploying asset management functions to client applications |
Cited By (50)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8763026B2 (en) | 1999-06-04 | 2014-06-24 | Opentv, Inc. | Flexible interface for secure input of pin code |
US7996861B1 (en) | 1999-06-04 | 2011-08-09 | Opentv, Inc. | Flexible interface for secure input of pin code |
US20060200741A1 (en) * | 1999-11-01 | 2006-09-07 | Demesa Jesse G | Modeling system for retrieving and displaying data from multiple sources |
US6847959B1 (en) * | 2000-01-05 | 2005-01-25 | Apple Computer, Inc. | Universal interface for retrieval of information in a computer system |
US8086604B2 (en) | 2000-01-05 | 2011-12-27 | Apple Inc. | Universal interface for retrieval of information in a computer system |
US20050080783A1 (en) * | 2000-01-05 | 2005-04-14 | Apple Computer, Inc. One Infinite Loop | Universal interface for retrieval of information in a computer system |
US20010012990A1 (en) * | 2000-01-14 | 2001-08-09 | Yakov Zimmerman | Method for generating a client/server model of a multi-protocol layered transmissions network |
US7674763B2 (en) | 2000-06-01 | 2010-03-09 | Ecolab Inc. | Method for manufacturing a molded detergent composition |
US20100144578A1 (en) * | 2000-06-01 | 2010-06-10 | Ecolab Inc. | Method for washing an article using a molded detergent composition |
US20090069211A1 (en) * | 2000-06-01 | 2009-03-12 | Ecolab Inc. | Molded detergent composition |
US20020194152A1 (en) * | 2000-07-02 | 2002-12-19 | Treil Nicolas Herve Edouard | Method for processing structured data using an object-oriented computer language |
US7203689B2 (en) * | 2000-07-03 | 2007-04-10 | Cedara Software Corp. | Method for processing structured data using an object-oriented computer language |
US20050207444A1 (en) * | 2001-01-12 | 2005-09-22 | Eci Telecom Ltd. | Hybrid network element for a multi-protocol layered transmissions network and a graphical representation of the network |
US7240323B1 (en) * | 2001-07-26 | 2007-07-03 | Emc Corporation | Plug and play interface for user actions |
US7917855B1 (en) * | 2002-04-01 | 2011-03-29 | Symantec Operating Corporation | Method and apparatus for configuring a user interface |
US7596611B1 (en) * | 2002-04-01 | 2009-09-29 | Veritas Operating Corporation | Method and apparatus for maintaining information for use in the configuration of a client |
US20040153772A1 (en) * | 2002-08-22 | 2004-08-05 | Gorshenev Mikhail A. | Compliance testing user interfaces implemented on resource-constrained computing devices |
US20040205711A1 (en) * | 2003-04-10 | 2004-10-14 | Ishimitsu Michael Kazuo | System and method for creation of an object within an object hierarchy structure |
US7272818B2 (en) * | 2003-04-10 | 2007-09-18 | Microsoft Corporation | Creation of an object within an object hierarchy structure |
US7765523B2 (en) * | 2003-07-10 | 2010-07-27 | Computer Associates Think, Inc. | System and method for generating a web-enabled graphical user interface plug-in |
US20050044526A1 (en) * | 2003-07-10 | 2005-02-24 | Darrell Kooy | System and method for generating a web-enabled graphical user interface plug-in |
US20050010877A1 (en) * | 2003-07-11 | 2005-01-13 | Arthur Udler | System and method for dynamic generation of a graphical user interface |
US7761842B2 (en) | 2003-07-11 | 2010-07-20 | Computer Associates Think, Inc. | System and method for generating a graphical user interface (GUI) element |
US20050010901A1 (en) * | 2003-07-11 | 2005-01-13 | Arthur Udler | System and method for generating a graphical user interface (GUI) element |
US20050033763A1 (en) * | 2003-07-11 | 2005-02-10 | Shyhshiun Chen | System and method for providing a non-specific graphical user interface framework |
US20050172261A1 (en) * | 2004-01-30 | 2005-08-04 | Yuknewicz Paul J. | Architecture for creating a user interface using a data schema |
US20050246725A1 (en) * | 2004-05-03 | 2005-11-03 | Microsoft Corporation | Generic user interface command architecture |
US8359606B2 (en) | 2004-05-03 | 2013-01-22 | Microsoft Corporation | Generic user interface command architecture |
US7941761B2 (en) | 2004-05-03 | 2011-05-10 | Microsoft Corporation | Third party service switching through command bar user interface |
US7636922B2 (en) | 2004-05-03 | 2009-12-22 | Microsoft Corporation | Generic user interface command architecture |
US20100023954A1 (en) * | 2004-05-03 | 2010-01-28 | Microsoft Corporation | Generic User Interface Command Architecture |
US7849412B2 (en) | 2004-05-21 | 2010-12-07 | Computer Associates Think, Inc. | System and method for generating a web control in a Windows development environment |
US20050262517A1 (en) * | 2004-05-21 | 2005-11-24 | French Jeffrey K | System and method for generating a web control in a Windows development environment |
US20060085754A1 (en) * | 2004-10-19 | 2006-04-20 | International Business Machines Corporation | System, apparatus and method of selecting graphical component types at runtime |
US9471332B2 (en) * | 2004-10-19 | 2016-10-18 | International Business Machines Corporation | Selecting graphical component types at runtime |
US20060123393A1 (en) * | 2004-12-02 | 2006-06-08 | Brian Atkins | User interface for network application |
US7295719B2 (en) * | 2005-08-26 | 2007-11-13 | United Space Alliance, Llc | Image and information management system |
US20070050412A1 (en) * | 2005-08-26 | 2007-03-01 | United Space Alliance, Llc | Image and Information Management System |
US7519238B2 (en) | 2005-08-26 | 2009-04-14 | United Space Alliance, Llc | Image and information management system |
US20080019614A1 (en) * | 2005-08-26 | 2008-01-24 | United Space Alliance, Llc | Image and information management system |
US20060107218A1 (en) * | 2006-01-17 | 2006-05-18 | Microsoft Corporation | View-based navigation model for graphical user interfaces |
US20060101353A1 (en) * | 2006-01-17 | 2006-05-11 | Microsoft Corporation | Multi-pane navigation model for graphical user interfaces |
US20080059433A1 (en) * | 2006-08-30 | 2008-03-06 | Econiq Ltd. | System and method for communicating between graphical user interfaces |
US20080163080A1 (en) * | 2006-12-28 | 2008-07-03 | Kooy Darrell J | Multi-platform graphical user interface |
US8499276B2 (en) | 2006-12-28 | 2013-07-30 | Ca, Inc. | Multi-platform graphical user interface |
US20100038159A1 (en) * | 2007-01-09 | 2010-02-18 | Toyota Jidosha Kabushiki Kaisha | Vehicle and control method thereof |
US20090306843A1 (en) * | 2007-01-12 | 2009-12-10 | Toyota Jidosha Kabushiki Kaisha | Hybrid vehicle and control method thereof |
US9736679B2 (en) | 2012-09-20 | 2017-08-15 | Continental Automotive Gmbh | System for controlling a vehicle computer using a mobile telephone |
US20170351646A1 (en) * | 2016-06-06 | 2017-12-07 | Hexagon Technology Center Gmbh | User Interface with Movable Mini-Tabs |
US10235156B2 (en) * | 2016-12-01 | 2019-03-19 | Entit Software Llc | Versioned extension points of graphical user interfaces |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US6628305B1 (en) | Architecture and definition of an extensible, object-oriented graphical user interface framework for managing and administering heterogenous digital library datastores | |
US6636250B1 (en) | Methods and apparatus for presenting information to a user of a computer system | |
US7546602B2 (en) | Application program interface for network software platform | |
US5237654A (en) | Hierarchical inter-panel process flow control | |
JP3272281B2 (en) | Data item display method and display device, storage medium storing program for controlling display of data item | |
US6965390B2 (en) | Method, system, and program for selecting devices to use to execute selected tasks in a graphical user interface | |
US5220675A (en) | Method and system for customizing a user interface in an integrated environment | |
US6925609B1 (en) | Hybrid task and file oriented user interface | |
US6097391A (en) | Method and apparatus for graphically manipulating objects | |
US6532471B1 (en) | Interface repository browser and editor | |
EP0647909B1 (en) | Information catalog system with object-dependent functionality | |
JP2522898B2 (en) | Dynamic customization method and graphic resource editor | |
US7296229B2 (en) | Method and apparatus for providing a central dictionary and glossary server | |
US6035300A (en) | Method and apparatus for generating a user interface from the entity/attribute/relationship model of a database | |
US6151024A (en) | Data processor controlled display interface with tree hierarchy of elements view expandable into multiple detailed views | |
US20050007383A1 (en) | System and method of visual grouping of elements in a diagram | |
EP0622729A2 (en) | A user interface builder for a user interface server | |
US7703026B2 (en) | Non-pattern based user interface in pattern based environment | |
US8069419B2 (en) | Graphical user interface check-list button control and method | |
JPH1091413A (en) | Device and method for selecting operation in computer system | |
CA2432631A1 (en) | Method for managing tree presentations in graphical user interfaces | |
US20040085367A1 (en) | Association of multiple objects in a table cell with visual components | |
US6115039A (en) | Processes and apparatuses for creating non-native displays on a computer | |
US20030081007A1 (en) | Object oriented explorer type environment | |
US5557731A (en) | Method and system for detecting undefined objects in an application |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: INTERNATIONAL BUSINESS MACHINES CORPORATION, NEW YFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:HONG, CHRISTINE M.;MANCUSO, MICHAEL ERIC;SUGG, MARK JOSEPH;AND OTHERS;REEL/FRAME:009892/0340;SIGNING DATES FROM 19990407 TO 19990409 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
CC | Certificate of correction | ||
CC | Certificate of correction | ||
FPAY | Fee payment |
Year of fee payment: 4 |
|
REMI | Maintenance fee reminder mailed | ||
FPAY | Fee payment |
Year of fee payment: 8 |
|
SULP | Surcharge for late payment |
Year of fee payment: 7 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:INTERNATIONAL BUSINESS MACHINES CORPORATION;REEL/FRAME:026894/0001Effective date: 20110817 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044127/0735Effective date: 20170929 |
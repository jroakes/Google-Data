US7562027B1 - Availability processing in a travel planning system - Google Patents
Availability processing in a travel planning system Download PDFInfo
- Publication number
- US7562027B1 US7562027B1 US09/431,674 US43167499A US7562027B1 US 7562027 B1 US7562027 B1 US 7562027B1 US 43167499 A US43167499 A US 43167499A US 7562027 B1 US7562027 B1 US 7562027B1
- Authority
- US
- United States
- Prior art keywords
- seat
- availability
- availability information
- source
- seat availability
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/02—Reservations, e.g. for tickets, services or events
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0283—Price estimation or determination
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/06—Buying, selling or leasing transactions
- G06Q30/0601—Electronic shopping [e-shopping]
Definitions
- This invention relates to determining seat availability information from within a travel planning system.
- a travel planning system makes use of many classes of information including scheduling, faring, and availability data.
- the scheduling data describes where and when a passenger may travel; the faring data defines how much a given travel itinerary will cost; and the availability data describes the travel provider's willingness to sell the travel for the given cost.
- the availability data is often affected by the travel provider's capacity and their prior sales of similar products at similar prices, and is analogous to a report on remaining inventory.
- Sources of seat availability information include, but are not limited to, direct queries to external databases of seat availability information.
- Each source of availability information typically has associated fixed and marginal costs of obtaining information from that source, including computation, communication, time, and money. Further, each source may return answers with differing freshness, confidence, and validity properties.
- Conventional travel planning systems begin travel planning by choosing a small number of flights, checking availability for the flights by querying the airline's yield management system directly, and then faring the available seats. They have no other source of seat availability information to query, and make no other use of the availability information than to eliminate the unavailable booking classes of the few preselected flights from further consideration.
- a travel planning system includes a scheduling process for determining a set of instances of transportation that satisfy a user query and a faring process that determines fares that are valid for at least some of instances in the set of instances of transportation.
- the planning system also includes an availability process that uses results from a single source of seat availability for a mode of transportation to determine a set of available instances of transportation and determines whether the results from the single source are reliable.
- This invention uses multiple sources of seat availability information. Furthermore, due to the low cost associated with querying some sources of seat availability information, it is practical to make multiple sets of queries to availability sources.
- the invention permits use of inexpensive, but lower-quality data, to guide later queries to more expensive higher-quality data so as to reduce cost without reducing the quality of the final travel planning result. Additionally, instead of just eliminating booking classes on a small set of pre-chosen flights, this also enables the travel planning process to select more or better flights based on a first pass of computation and availability queries to be used in later passes of computation and availability queries.
- the accompanying computation could range from simple counts of available flights or seats to full additional scheduling and faring passes whose parameters are based on provisional speculative answers. This additional computation may be done by a travel planning server or alternately may be transmitted to a smart client to be processed.
- the invention provides automatic techniques to detect the characteristics of the returned availability data so as to correctly interpret them.
- the availability system can include a set of techniques which allow a travel planning system to make cost-effective use of multiple sources of seat availability information to produce high-quality answers in response to travel planning queries such as airline reservations.
- FIG. 1 is a block diagram of a travel planning system.
- FIG. 2 is a block diagram of an travel planning system showing an availability process disposed after a scheduling process.
- FIG. 3 is a flow chart of a process for checking availability using multiple sources of availability information.
- FIG. 3A is a flow chart of a process to select a subset of queries.
- FIG. 4 is a flow chart of a process for checking availability after scheduling and after faring processes.
- FIG. 5 is a flow chart of process for checking availability after scheduling and multiple faring process.
- FIG. 6 is a flow chart of an after faring strategy using calculated expected results for checking availability.
- FIG. 7 is a flow chart of a process for an after partial faring process for checking availability.
- FIG. 8 is a flow chart of a multiple iterative scheduling and faring process for checking availability.
- FIG. 9 is a flow chart of passing to client process for checking availability.
- FIG. 10 is a flow chart of a process for ordering operations for a “Client Queries” strategy.
- the travel planning system 10 can be used with various forms of travel such as airline, bus and railroad and is particularly adapted for air travel. It includes a server computer 12 having a computer memory or storage media 14 storing a server process 15 .
- the server process 15 includes a scheduler process 16 and a faring process 18 .
- the scheduler process 16 is any scheduler process that will produce, from a travel request, sets of flights that can satisfy the request.
- the faring process 18 is any process that determines a set of valid fares.
- the server process 15 can also link a set of valid fares to flights to form a set of pricing solutions. Examples of the scheduler process 16 and the faring process 18 can be found in co-pending U.S.
- the travel planning system also includes a plurality of databases 20 a , 20 b which store industry standard information pertaining to travel, for example, airline, bus, railroad, etc.
- Database 20 a can store flight information from a source such as the Standard Schedule Information Manual
- database 20 b can store the Airline Traffic Publishing Company (ATPCO) database of published airline fares and their associated rules, routings and other provisions.
- the databases 20 a , 20 b are typically stored locally and updated periodically by the remote resources 21 a , 21 b .
- the system 10 can access an availability process 70 described below.
- the system 10 also includes a plurality of clients 30 a - 30 c implemented by terminals or preferably personal computers.
- the clients are coupled to the server 12 , via a network 22 , that is also used to couple the remote resources 21 a - 21 b that supply databases 20 a , 20 b to the server 12 .
- the network 22 can be any local or wide area network or an arrangement such as the Internet.
- Clients 30 a , 30 b are preferably smart clients. That is, using client 30 c as an illustrative example, it may include a client computer system 32 including computer memory or storage medium 34 that stores a client process 36 and a set of pricing solutions.
- the set of pricing solutions 38 in one embodiment is provided from the server process 15 and comprises a set of fares that are valid for a journey and associated information linking the fares to the flight segments of the journey.
- the availability predictor 65 can be part of the client process 36 .
- the set of pricing solutions 38 is obtained from the server 12 in response to a user request sent from the client to the server 12 .
- the server 12 executes the server process 15 using the scheduling process 16 and the faring process 18 as mentioned in the above-identified patent applications to produce the set of pricing solutions for a particular journey. If requested by a client, the server process will deliver the set of pricing solutions to the requesting client. Under control of the client process 36 , the requesting client 30 c can store and/or logically manipulate the set of pricing solutions to extract or display a subset of the set of pricing solutions, as a display representation on the monitor 40 .
- the travel planning system 10 has three main processes scheduling 16 , checking availability 70 , and faring 18 .
- an availability system 70 is disposed after the scheduling process 16 .
- the scheduling process 16 produces a list of candidate legs 71 , and the availability system 70 determines the availability of each.
- the travel planning system 10 using the faring process 18 to match a fare to a given leg, only when the availability information indicates that a seat for the booking class is available. (e.g., if fare QE21NR requires booking class Q, the faring process will only attempt to use fare QE21NR on a leg if the leg has a seat (or as many seats as the customer requires) available in booking class Q).
- a user through a query specifies constraints on the flights to be selected, such as origin and destination airports, travel dates and possibly times, preferred airlines, etc.
- the scheduling process 16 has access to the database 20 a published by the airlines of scheduled flights containing the identifying information about every leg, where a leg is the smallest nondivisible part of a flight (i.e., exactly one takeoff and one landing).
- the set of legs forms a graph with airports as nodes and legs as edges; a graph search algorithm such as shortest-paths is used to find combinations of legs which provide travel from the user-specified origin to the user-specified destination which satisfy the user's other constraints and preferences; each such leg combination is called an itinerary.
- the scheduling process 16 outputs a list of itineraries.
- the availability process 70 takes the list of itineraries (alternately referred to as schedules or legs).
- the availability subsystem has access to a source of availability data, and for each leg passed to it by the scheduler, the subsystem sends the identifying information about the leg (airline, flight number, origin, destination, departure date) to the availability process 70 .
- the availability process 70 returns for each leg a list of booking classes and seat availability counts for each as described above.
- the availability subsystem annotates each leg with its availability information and outputs the set of annotated legs.
- the faring process 18 takes the set of annotated legs, and additionally has access to fares and faring rules published by airlines. The faring process 18 selects and matches fares to the legs following the published rules for doing so. Some rules specify for each fare the permitted booking classes for that fare; that is, a fare can only be matched with a leg if the leg has nonzero seat availability in at least one of the permitted booking classes for the fare. Additional processing is performed in the faring process 18 to output a graph 71 containing legs and fares, with the structure of the graph encoding the relationships between them determined in the faring process.
- the graph 71 is transmitted to a client, which processes the graph 71 and in doing so selects a set of legs which exactly satisfy the user's original constraints on the travel and a set of fares which can be matched with those legs so that every leg has exactly one fare matched with it.
- the client can further optimize a user-specified function over the permissible travel solutions (sets of legs and matching fares), such as finding the cheapest solution or solutions or finding the solutions which minimize the total travel time.
- the client displays these solutions to the user.
- the availability process 70 runs on the server 12 and access an availability system 66 of one or more airlines (generally each airline will have its own availability system) by sending availability queries over the network 22 ( FIG. 1 ).
- the system 10 also includes other availability sources 65 such as an availability predictor based upon a cache or database of stored availability queries 65 a , a predictive model of availability 65 b and/or a simulation of an availability process 65 c or an actual availability process 65 d running as a local process to the server process 12 .
- availability sources 65 such as an availability predictor based upon a cache or database of stored availability queries 65 a , a predictive model of availability 65 b and/or a simulation of an availability process 65 c or an actual availability process 65 d running as a local process to the server process 12 .
- Such systems are described in U.S. patent application entitled “Method and Apparatus for Providing Availability of Airline Seats,” Ser. No. 09/431,366 Filed Nov. 1, 1999 by Carl G. Demarcken
- the different sources 65 , 66 each have different properties, including the cost (in time, computation, communication, or money) of performing a query and the quality (age/freshness, confidence, precision, or validity). Sometimes all costs are negligible, such as when querying a cache; other times the costs are substantial, such as when submitting live queries directly to the airlines (costly in time, communication, and money since the airlines often charge a transaction fee). When a source is expensive, it is desirable to contain these costs.
- a process 70 a for checking availability involves using multiple sources of availability information.
- Process 70 a queries multiple sources sequentially.
- Process 70 a submits 72 all queries to a first source.
- Process 70 a determines 74 if results from the availability source are reliable. If the results are not reliable, the process 70 a selects 76 a subset of the queries to send to a subsequent availability source.
- the process 70 a selects the subset based on the results returned and other factors.
- the process 70 a selects 78 another source and sends 80 the subset of queries to the other source.
- the process 70 a determines that all results or a portion of the results are reliable, it send the results to the travel planning system.
- the process 70 a sends a query to a second source, for instance, when the first source had no information or had a low confidence rating for its information about that query.
- the first sources are lower cost, lower quality sources, while the last sources are more expensive, higher quality sources. Not all queries will be submitted to all sources because of prohibitive cost.
- the process 70 a has availability information for a leg from more than one source, it uses the data gathered from the highest quality source.
- One method for cost containment sets a hard cost limit and submitting queries (while keeping track of the costs) until 82 the cost would exceed the hard limit; other methods are explained below.
- a timeout is set to limit the amount of time used by the availability checking stage, and computation proceeds with only whatever information was received before the timeout expired.
- the process 70 a is a sequential multi-stage query process.
- the process 70 a first uses a cache or other predictive type source 66 to provide an initial set of queries and then performs a live query to airline yield management or availability systems 65 .
- the cache queries are quick and cheap to perform, but can have stale or incorrect data.
- the live queries are expensive. Therefore, only a few can be made per travel planning session. However the live queries are up-to-date and correct.
- the process 76 sorts 76 a the list of legs based on the freshness of the information returned by the cache, most stale first.
- the process 76 queries 76 b the live data source on each of those legs in order (most stale first).
- the system stops the query process before all queries have been made to the live source. Because the list of legs was prioritized to put the lowest quality data first, the process 76 received fresh data about those legs first, and the minimum quality of information the system has about any leg was raised.
- process 70 a could prioritize the legs according to other properties of the data rather than freshness.
- the system can change the sort criteria in prioritizing legs.
- Other criterion for sorting include sorting by the minimum number of seats reported available in any of the leg's booking classes, in increasing order; this puts a leg with only one seat in some booking class ahead of a leg with 9 seats reported available in all booking classes, under the assumption that the booking class with only one seat is more likely to become unavailable in a short time than the booking class with several seats remaining.
- This sort criterion would put the flights with one booking code fully sold out first. This may be desirable, since if the seats sold out they are likely to be desirable seats, and airlines do make more seats available periodically if a booking code sells out. However, if the property that the flights which are sold out appear first in line to be re-queried, the sort order can be changed to be “1234567890” (put 0 last but leave the rest unchanged). The general goal is to prioritize the legs so that the legs whose availability is most likely to have changed get the highest priority and are queried first.
- Even more complicated criteria can use several features such as, freshness, cached availability, time until departure, market, day of week, airline, time since last change, and so forth, in combination to prioritize legs for determining availability.
- cost of submitting queries is low and there is more than one source of availability information, it can be advantageous to submit multiple simultaneous queries to the different sources and combine the results. This reduces the latency involved in submitting multiple queries to multiple sources in turn. In this case the queries sent to one source cannot depend on the answers from another when the sources are queried simultaneously.
- all queries can be sent to all sources, or alternately each query can be sent to some non-empty subset of the available sources, the particular subset for each decided either randomly or heuristically (e.g., send the first half of the queries under some arbitrary ordering to source 1 and the second half to source 2 ).
- the system can either preferentially choose one answer over the other (when the sources are not of equal quality); or it can average the seat availability counts returned for each booking class; or it can compute a weighted average of the seat availability counts where the weights are either specified for each source or are related to the confidence associated with the source's answer; or it can re-query a higher quality source when the lower-quality answers disagree.
- a process 70 b for checking availability after the scheduling and faring processes is shown. Assuming the goal of the travel planning system is to produce the lowest priced solutions, it would be desirable to prioritize the legs according to the best priced solution involving each leg; however, this effectively requires the ultimate answer to be known in advance.
- the process 70 b approximates that answer by determining 90 a set of flights using the scheduler, and checking 92 availability using a low quality, low cost availability source.
- the process 70 b performs 94 the faring process using the lower quality availability results from the first source and noting the lowest priced solution which each leg is involved in. (When the faring system is as described in the U.S. Patent entitled “Travel Planning System,” this lowest price can be read directly from the leg's node in the pricing graph after algorithm has been performed.) This lowest price is then used as the sort criterion to prioritize the legs for a second availability pass 96 and a second faring pass 98 .
- the process 70 b can make queries in the second availability pass which have a high probability of being available; this results in the system finding a greater number of solutions which are known to be correct answers (because they were generated with high-confidence answers). Since one goal of the travel planning system is to generate (correct) solutions with low prices, these two strategies can be mixed, both making “long shot” availability queries which are unlikely to be available but which save a lot of money if they are, and making “conservative” queries which will probably be available but which are more expensive.
- the “long shot” queries are just the least expensive legs when prioritized by least total solution price as above; since they are the cheapest they are often the least likely to be available.
- the system either uses a source which reports a probability that a particular booking class is available or a source which reports a probability distribution over seat availability counts and query the legs under consideration.
- These probabilities directly express the likelihood that a seat will be available in the booking class; if a distribution is received, the probability is 1.0 minus the probability that the availability count is 0 (equals the sum of the probabilities of the other seat availability counts). That is, prioritize according to the probability that the seat is available; the legs with the greatest probability are the legs most likely to be available.
- a predictor of the probabilities can be provided using the techniques described in U.S.
- a mixed strategy of taking some legs according to one method and other legs according to the other is used to gain the advantages of each. For instance, half the legs can be chosen according to one and half according to the other.
- Another technique for mixing them is to quantize the availability probabilities into a fixed number of bins, for instance 10 . Within each bin, the system select some number of legs which are involved in the cheapest solutions (that is, disable all legs with a lesser probability than the cutoff for the bin being processed and enumerates the least expensive solutions using the remaining legs). The system aggregates all legs generated by this process for querying to the higher quality source.
- the system can evaluate and compare different sets of queries to choose the best (minimizing the expected value, which is in this case the expected cost of the travel).
- the system can also perform differential analyses using this technique to isolate the marginal effect of querying any given leg: compute the expected value of a set of availability queries including a leg, and compute the expected value of the same set of availability queries excluding that leg.
- This marginal value allows the travel planning system to assess the benefit gained by an additional query and compare it to the cost of performing the query (for instance, if each availability query to a high-quality source cost one cent), and make a cost-benefit tradeoff.
- direct leg-to-leg comparisons can be made by swapping one leg for another and comparing the expected value before and after the swap.
- the system can progressively tailor a set of queries to be made, albeit at high computational cost to the travel planning system; note though that Monte Carlo integration is easily parallelized to multiple processors.
- a process 70 c for determining availability after scheduling and using multiple faring process is shown.
- extra sets of availability checking and faring may be inserted into the process. This is especially useful when the high quality availability source is extremely expensive to query and it is very important to reduce those query costs.
- This ordering process makes even more careful use of the high-cost resources.
- the order process determines a schedule 100 of possible legs of flights (assume all available) and checks 102 availability using a lower quality availability source.
- the process 70 c then performs a first faring pass 104 . Once that is completed the process 70 c iteratively checks availability 106 guided by faring and prior availability results.
- the process 70 c perform the subsequent availability checks 108 using higher quality availability sources. After the final check it can have a final faring process guided by all of the results 109 .
- an After Faring process 70 d for determining availability is shown.
- the process 70 d for determining availability is slower, than the one in FIG. 5 , but produces better results particularly when cache misses are common and small numbers of availability queries are made.
- the ordering process ordering of operations for an “After Faring” strategy is shown.
- the process determines 100 legs using a scheduler and determines fares 102 using a faring process.
- the process 70 d makes use of the low-quality low-cost source of availability information 103 , assume every seat is available in every booking class. Computation proceeds as if the low-quality speculatively guessed data were high quality, in the sense that the origin of the data does not affect the computational processes.
- This process uses speculative computation 105 to determine results. Instead of spending the cost to acquire and process actual answers, the system speculates 105 as to what the answers might be and expends computation to ascertain what the results would be were the speculation true. Speculative computation has already been seen in the context of Monte-Carlo integration to compute the expected price discussed above.
- a process 70 e for ordering of operations for “After Partial Faring” strategy is shown.
- This process 70 e is particularly useful in the faring process described in the above mentioned application.
- the after partial faring process 70 e determines 110 a schedule and assumes all are available.
- the process 70 e performs 112 a first faring pass using only a fare-component processing.
- the process 70 e checks 114 availability, guided by faring results and performs 116 a second faring pass performing complete faring processing.
- a full faring pass is typically a computationally expensive operation to perform, and consumes nearly all of the computational resources of a travel planning server.
- the results here are not as good as if a full faring pass were made instead of the partial pass because the solution pricing is less correct (PU-level and journey-level considerations are completely ignored).
- PU-level and journey-level considerations are completely ignored.
- the process 70 e recomputes only what is affected by changes (in availability and schedules) since an earlier faring pass. To achieve this, the state of the system before the first faring pass must be saved (availability and schedules), and both the faring results as well as important intermediate data structures involved in the faring computation must be preserved.
- the process 70 e compares the current state of schedules and availability to the stored state, and lists the differences. The process 70 e performs all operations involving the data that differs (using the newer data), and compares the new results for all intermediate data structures to the stored values.
- the process 70 e again performs only all computations dependent on the changed intermediate structures, etc., until the computation is complete. All computation which must be performed when a certain piece of data changes is the set of all operations reachable from that piece of data in a dataflow graph of the faring process.
- This strategy requires more memory to save the initial and intermediate states of the faring process and requires careful internal accounting of the processes involved, but can save a significant amount of computation especially when there are only a small number of changes in the availability and schedule data between the initial and incremental faring passes.
- the multiple iterative process 70 f determines 120 a schedule from the scheduler process 16 , and checks 122 availability from a low-quality low-cost source.
- the process 70 f performs a first faring pass (complete or partial) 124 and optionally can iterative return 126 to the scheduler process and iteratively check availability, guided by faring results and performs a second faring pass.
- the process 70 f can optionally go back to a second availability check & iterate again over another scheduling process.
- the process 70 f would use better sources of availability information based on the results from the prior processes.
- the scheduler can be directed to search for a replacement for that leg (e.g., a leg on the same airline in the same market, possibly but not necessarily around the same time or date) in hopes of being able to reconstruct the inexpensive solution.
- a replacement for that leg e.g., a leg on the same airline in the same market, possibly but not necessarily around the same time or date
- a “Passing to Client” process 70 g is shown.
- the availability data may be passed along to a smart client for processing. The processing may be used to guide the client's computation or operation directly.
- the server 12 performs 130 the full processing of scheduling process 16 and faring process 18 without any availability information.
- the server 12 passes 132 the schedule and fare data to the client as usual, e.g., in a list or a pricing graph. Subsequent to this, the server 12 queries 134 an availability source or sources for availability data, and passes 136 the information retrieved directly to the client in an additional transfer of availability data.
- the client receives 140 the pricing graphs and availability data 142 and uses 144 the availability data to determine pricing solutions or available travel options.
- an process 70 h for client queries is shown.
- the client receives 140 the pricing graphs and availability data 142 .
- the client issues the availability queries rather than the server.
- the client can perform its processing either taking or not taking into account the availability data, an option possibly controlled by the end user.
- the client Without using the availability data, the client generates individual or multiple solutions which may or may not be available. These solutions can be displayed to the user for informational and comparative purposes.
- the choice of flights to submit availability queries for may be guided by the scheduling results only as in FIG. 4 , or they may be guided by the results of both the scheduling and faring stages as in FIGS. 5-8 .
- the client requests availability (not shown)
- the client performs pricing and enumeration computations to use to order or select availability queries to submit.
- some sources of availability data include measures of confidence of the results (e.g., “a seat in Q is available with 80% certainty”). When present this certainty information is also passed along to the client for processing and display. When the user examines a particular flight or seat, the client can optionally display this data for informative purposes. When examining a set of flights or seats (as in a full travel itinerary) the client uses this information to compute the total probability that all seats involved are available: the joint probability is simply the product of the individual probabilities. Further, the client can be programmed to filter out seats and flights or combinations thereof with less than a specified probability of being available.
- the availability data are usually pairs of booking classes and a number of available seats in that booking class, where the number is generally a single digit, ranging from 0 to a some value “N”. That maximum value of N represents both the case when N seats are available and the case when more than N seats are available.
- N typically actual value of N will depend on the airline and the type of airplane, but may also vary with other properties of the flight such as the market, flight number, and cabin (a cabin is a set of booking classes). Because the same N is used for all the booking classes in a single cabin on a flight and because the more expensive booking classes tend to have greater availability, the most expensive booking class in a cabin is a good source of information about the value of N for that cabin. Further, since flights in the distant future generally have greater availability, they are also good sources of information about the value of N. Thus, N can automatically be determined by careful sampling of the appropriate seat availabilities.
- N For a given cabin and a particular set of flight characteristics (such as a given airline and airplane), query the availability of the most expensive booking class in that cabin on a large set of flights matching the given characteristics; select preferentially flights in the distant future, up to the limit of the availability data stored or computed by the airline. The maximum number of seats reported to be available in any of these flights can be used as a good estimate of the value of N.
- These values of N may be computed once and stored in the system for future use, and rechecked or recomputed in the future periodically or as the need arises. Instead of simply taking the maximum, more advanced statistical techniques for automatic clustering of data and detecting and removing outliers can be used to improve the quality of the estimate of N; see for example the textbook “Robust Statistics” by Peter J. Huber, Wiley, 1981.
Abstract
Description
Claims (31)
Priority Applications (5)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/431,674 US7562027B1 (en) | 1999-11-01 | 1999-11-01 | Availability processing in a travel planning system |
PCT/US2000/041653 WO2001033406A2 (en) | 1999-11-01 | 2000-10-27 | Availability processing in a travel planning system |
AU36382/01A AU3638201A (en) | 1999-11-01 | 2000-10-27 | Availability processing in a travel planning system |
EP00991896A EP1364300A2 (en) | 1999-11-01 | 2000-10-27 | Availability processing in a travel planning system |
US12/502,721 US20100153143A1 (en) | 1999-11-01 | 2009-07-14 | Availability processing in a travel planning system |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/431,674 US7562027B1 (en) | 1999-11-01 | 1999-11-01 | Availability processing in a travel planning system |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/502,721 Continuation US20100153143A1 (en) | 1999-11-01 | 2009-07-14 | Availability processing in a travel planning system |
Publications (1)
Publication Number | Publication Date |
---|---|
US7562027B1 true US7562027B1 (en) | 2009-07-14 |
Family
ID=23712952
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/431,674 Expired - Fee Related US7562027B1 (en) | 1999-11-01 | 1999-11-01 | Availability processing in a travel planning system |
US12/502,721 Abandoned US20100153143A1 (en) | 1999-11-01 | 2009-07-14 | Availability processing in a travel planning system |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/502,721 Abandoned US20100153143A1 (en) | 1999-11-01 | 2009-07-14 | Availability processing in a travel planning system |
Country Status (4)
Country | Link |
---|---|
US (2) | US7562027B1 (en) |
EP (1) | EP1364300A2 (en) |
AU (1) | AU3638201A (en) |
WO (1) | WO2001033406A2 (en) |
Cited By (21)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080198761A1 (en) * | 2007-02-15 | 2008-08-21 | Microsoft Corporation | Decentralized network architecture for travel related services |
US20090076862A1 (en) * | 2007-09-17 | 2009-03-19 | Amadeus S.A.S. | Automated split ticketing |
US7937330B2 (en) | 2005-07-22 | 2011-05-03 | Rearden Commerce, Inc. | System and method for optimization of group shipments to reduce shipping costs |
US7966213B2 (en) | 2006-10-16 | 2011-06-21 | Rearden Commerce, Inc. | System and method for automatic review of travel changes and improved suggestions and rules set |
US8126776B2 (en) | 2006-06-30 | 2012-02-28 | Rearden Commerce, Inc. | Method and systems for personal restaurant assistant |
WO2011143212A3 (en) * | 2010-05-11 | 2012-04-26 | Primair, Inc. | Systems, methods, and machine-readable storage media for interfacing with a computer flight system |
US20130275165A1 (en) * | 2011-06-30 | 2013-10-17 | Rakuten, Inc. | Information providing apparatus, information providing method, information providing program, and recording medium |
US8700438B1 (en) * | 2005-04-28 | 2014-04-15 | Southwest Airlines Co. | Constraint-based schedule generation for transportation resources |
US20150154511A1 (en) * | 2013-11-29 | 2015-06-04 | Amadeus S.A.S. | Availability watching |
EP2908255A1 (en) | 2014-02-13 | 2015-08-19 | Amadeus S.A.S. | Increasing search result validity |
WO2015120968A1 (en) * | 2014-02-13 | 2015-08-20 | Amadeus S.A.S. | Increasing search result validity |
US9117223B1 (en) * | 2005-12-28 | 2015-08-25 | Deem, Inc. | Method and system for resource planning for service provider |
US9161994B1 (en) | 2005-03-29 | 2015-10-20 | Deem, Inc. | Cost model analysis and breakdown for cost buildup |
US20150330797A1 (en) * | 2012-05-04 | 2015-11-19 | Airbus India Operations Pvt. Ltd. | System and method for providing gate path information to passengers on board an aircraft upon an aircraft taxi gate selection |
US9226975B1 (en) * | 2004-09-17 | 2016-01-05 | Deem, Inc. | Apparatus and method to provide community pricing |
US20160125069A1 (en) * | 2014-11-03 | 2016-05-05 | Amadeus S.A.S. | Dynamic database object management |
US20160132791A1 (en) * | 2014-11-07 | 2016-05-12 | Graph SQL, Inc. | Methods and systems for distributed graphical flight search |
US20160171008A1 (en) * | 2012-08-14 | 2016-06-16 | Amadeus S.A.S. | Updating cached database query results |
US9582536B2 (en) | 2014-02-19 | 2017-02-28 | Amadeus S.A.S. | Long-term validity of pre-computed request results |
US9984165B2 (en) | 2014-02-13 | 2018-05-29 | Amadeus S.A.S. | Increasing search result validity |
US10552849B2 (en) | 2009-04-30 | 2020-02-04 | Deem, Inc. | System and method for offering, tracking and promoting loyalty rewards |
Families Citing this family (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060149713A1 (en) * | 2005-01-06 | 2006-07-06 | Sabre Inc. | System, method, and computer program product for improving accuracy of cache-based searches |
US7711587B2 (en) * | 2007-01-05 | 2010-05-04 | Ita Software, Inc. | Providing travel information using cached query answers |
US20080167912A1 (en) * | 2007-01-05 | 2008-07-10 | De Marcken Carl | Providing travel information using cached summaries of travel options |
US20080168093A1 (en) * | 2007-01-05 | 2008-07-10 | De Marcken Carl | Providing travel information using a layered cache |
US20080167907A1 (en) * | 2007-01-05 | 2008-07-10 | Carl De Marcken | Cache poller for providing travel planning information |
US20080167906A1 (en) * | 2007-01-05 | 2008-07-10 | De Marcken Carl | Support for flexible travel planning |
US20080167910A1 (en) * | 2007-01-05 | 2008-07-10 | De Marcken Carl | Providing travel information using a notification service |
US20130132128A1 (en) | 2011-11-17 | 2013-05-23 | Us Airways, Inc. | Overbooking, forecasting and optimization methods and systems |
US9183312B2 (en) * | 2012-03-20 | 2015-11-10 | Google Inc. | Image display within web search results |
US20140032379A1 (en) * | 2012-07-27 | 2014-01-30 | Wolfgang Schuetz | On-shelf availability system and method |
US9727940B2 (en) * | 2013-03-08 | 2017-08-08 | American Airlines, Inc. | Demand forecasting systems and methods utilizing unobscuring and unconstraining |
US20140257881A1 (en) * | 2013-03-08 | 2014-09-11 | Us Airways, Inc. | Demand forecasting systems and methods utilizing fare adjustment |
US11321721B2 (en) | 2013-03-08 | 2022-05-03 | American Airlines, Inc. | Demand forecasting systems and methods utilizing prime class remapping |
US20140278615A1 (en) | 2013-03-15 | 2014-09-18 | Us Airways, Inc. | Misconnect management systems and methods |
US9251478B2 (en) * | 2013-07-29 | 2016-02-02 | Amadeus S.A.S. | Processing information queries in a distributed information processing environment |
US10748087B2 (en) | 2014-01-17 | 2020-08-18 | American Airlines, Inc. | Determining even-spaced quantiles for network optimization |
US10755207B1 (en) | 2014-01-17 | 2020-08-25 | American Airlines, Inc. | Demand class remapping for airline seat bookings |
US20220129860A1 (en) * | 2020-10-26 | 2022-04-28 | Genpact Luxembourg S.À R.L | Artificial Intelligence Based Determination Of Damage To Physical Structures Via Video |
Citations (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4862357A (en) * | 1987-01-28 | 1989-08-29 | Systemone Holdings, Inc. | Computer reservation system with means to rank travel itineraries chosen in terms of schedule/fare data |
US5270921A (en) * | 1990-12-19 | 1993-12-14 | Andersen Consulting | Virtual fare methods for a computerized airline seat inventory control system |
JPH07230509A (en) * | 1994-02-21 | 1995-08-29 | Kyushu Nippon Denki Software Kk | Manual closing processing system in highway bus reservation system |
US5570283A (en) | 1994-11-18 | 1996-10-29 | Travelnet, Inc. | Corporate travel controller |
US5652867A (en) | 1994-09-08 | 1997-07-29 | Sabre Decision Technologies, A Division Of The Sabre Group, Inc. | Airline flight reservation system simulator for optimizing revenues |
US5832453A (en) * | 1994-03-22 | 1998-11-03 | Rosenbluth, Inc. | Computer system and method for determining a travel scheme minimizing travel costs for an organization |
US5839114A (en) * | 1996-02-29 | 1998-11-17 | Electronic Data Systems Corporation | Automated system for selecting an initial computer reservation system |
US5897620A (en) * | 1997-07-08 | 1999-04-27 | Priceline.Com Inc. | Method and apparatus for the sale of airline-specified flight tickets |
US5983220A (en) * | 1995-11-15 | 1999-11-09 | Bizrate.Com | Supporting intuitive decision in complex multi-attributive domains using fuzzy, hierarchical expert models |
US5983200A (en) * | 1996-10-09 | 1999-11-09 | Slotznick; Benjamin | Intelligent agent for executing delegated tasks |
US6119094A (en) * | 1996-02-29 | 2000-09-12 | Electronic Data Systems Corporation | Automated system for identifying alternate low-cost travel arrangements |
US6418438B1 (en) * | 1998-12-16 | 2002-07-09 | Microsoft Corporation | Dynamic scalable lock mechanism |
Family Cites Families (64)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US3622995A (en) * | 1969-03-21 | 1971-11-23 | Burroughs Corp | Automatic ticket/credit card check-in system |
US4783752A (en) * | 1986-03-06 | 1988-11-08 | Teknowledge, Inc. | Knowledge based processor for application programs using conventional data processing capabilities |
CA1341310C (en) * | 1988-07-15 | 2001-10-23 | Robert Filepp | Interactive computer network and method of operation |
US5161225A (en) * | 1989-10-23 | 1992-11-03 | International Business Machines Corporation | Persistent stream for processing time consuming and reusable queries in an object oriented database management system |
US5261069A (en) * | 1990-08-13 | 1993-11-09 | Hewlett-Packard Company | Method of maintaining consistency of cached data in a database system |
US5490261A (en) * | 1991-04-03 | 1996-02-06 | International Business Machines Corporation | Interlock for controlling processor ownership of pipelined data for a store in cache |
US5305389A (en) * | 1991-08-30 | 1994-04-19 | Digital Equipment Corporation | Predictive cache system |
US5237499A (en) * | 1991-11-12 | 1993-08-17 | Garback Brent J | Computer travel planning system |
JP3422370B2 (en) * | 1992-12-14 | 2003-06-30 | 株式会社日立製作所 | Disk cache controller |
US5794207A (en) * | 1996-09-04 | 1998-08-11 | Walker Asset Management Limited Partnership | Method and apparatus for a cryptographically assisted commercial network system designed to facilitate buyer-driven conditional purchase offers |
CA2112077C (en) * | 1993-09-15 | 1999-08-24 | Barry Craig Smith | Network architecture for allocating flight inventory segments and resources |
US5809525A (en) * | 1993-09-17 | 1998-09-15 | International Business Machines Corporation | Multi-level computer cache system providing plural cache controllers associated with memory address ranges and having cache directories |
US5948040A (en) * | 1994-06-24 | 1999-09-07 | Delorme Publishing Co. | Travel reservation information and planning system |
US6023679A (en) * | 1994-10-04 | 2000-02-08 | Amadeus Global Travel Distribution Llc | Pre- and post-ticketed travel reservation information management system |
US5832454A (en) * | 1995-10-24 | 1998-11-03 | Docunet, Inc. | Reservation software employing multiple virtual agents |
US5781892A (en) * | 1995-11-13 | 1998-07-14 | Electronic Data Systems Corporation | Method and apparatus for interacting with a computer reservation system |
US6122642A (en) * | 1996-01-18 | 2000-09-19 | Sabre Inc. | System for propagating, retrieving and using transaction processing facility airline computerized reservation system data on a relational database processing platform |
AU7704696A (en) * | 1995-12-01 | 1997-06-27 | British Telecommunications Public Limited Company | Database access |
US5809493A (en) * | 1995-12-14 | 1998-09-15 | Lucent Technologies Inc. | Knowledge processing system employing confidence levels |
US5918209A (en) * | 1996-01-11 | 1999-06-29 | Talus Solutions, Inc. | Method and system for determining marginal values for use in a revenue management system |
US6018715A (en) * | 1996-02-29 | 2000-01-25 | Electronic Data Systems Corporation | Automated travel planning system |
US6839679B1 (en) * | 1996-03-18 | 2005-01-04 | Electronic Data Systems Corporation | Automated travel pricing system |
US5999946A (en) * | 1996-04-10 | 1999-12-07 | Harris Corporation | Databases in telecommunications |
US6134534A (en) * | 1996-09-04 | 2000-10-17 | Priceline.Com Incorporated | Conditional purchase offer management system for cruises |
US5889993A (en) * | 1996-10-15 | 1999-03-30 | The Regents Of The University Of California | Predictive event tracking method |
US6029228A (en) * | 1996-12-31 | 2000-02-22 | Texas Instruments Incorporated | Data prefetching of a load target buffer for post-branch instructions based on past prediction accuracy's of branch predictions |
US5983217A (en) * | 1997-03-21 | 1999-11-09 | At&T Corp | Apparatus and method for querying replicated databases |
US6112185A (en) * | 1997-06-30 | 2000-08-29 | Walker Digital, Llc | Automated service upgrade offer acceptance system |
AU8282898A (en) * | 1997-07-02 | 1999-01-25 | Rosenbluth International, Inc. | Trip planner optimizing travel itinerary selection conforming to an individualized travel policy |
US6085193A (en) * | 1997-09-29 | 2000-07-04 | International Business Machines Corporation | Method and system for dynamically prefetching information via a server hierarchy |
US6128701A (en) * | 1997-10-28 | 2000-10-03 | Cache Flow, Inc. | Adaptive and predictive cache refresh policy |
US6047359A (en) * | 1997-11-04 | 2000-04-04 | The United States Of America As Represented By The Secretary Of The Navy | Predictive read cache memories for reducing primary cache miss latency in embedded microprocessor systems |
US6012052A (en) * | 1998-01-15 | 2000-01-04 | Microsoft Corporation | Methods and apparatus for building resource transition probability models for use in pre-fetching resources, editing resource link topology, building resource link topology templates, and collaborative filtering |
US6098064A (en) * | 1998-05-22 | 2000-08-01 | Xerox Corporation | Prefetching and caching documents according to probability ranked need S list |
US6307572B1 (en) * | 1998-07-02 | 2001-10-23 | Ita Software, Inc. | Graphical user interface for travel planning system |
US6381578B1 (en) * | 1998-07-02 | 2002-04-30 | Ita Software, Inc. | Factored representation of a set of priceable units |
US6377932B1 (en) * | 1998-07-02 | 2002-04-23 | Ita Software, Inc. | Rules validation for travel planning system |
US6609098B1 (en) * | 1998-07-02 | 2003-08-19 | Ita Software, Inc. | Pricing graph representation for sets of pricing solutions for travel planning system |
US6157930A (en) * | 1998-09-24 | 2000-12-05 | Acceleration Software International Corporation | Accelerating access to wide area network information in mode for showing document then verifying validity |
US6360205B1 (en) * | 1998-10-30 | 2002-03-19 | Trip.Com, Inc. | Obtaining and utilizing commercial information |
US6263315B1 (en) * | 1998-11-02 | 2001-07-17 | Pricing Research Corporation | Revenue management system and method |
AU1916500A (en) * | 1998-11-17 | 2000-06-05 | Kara Technology Incorporated | Internet purchase system |
US7328166B1 (en) * | 1999-01-20 | 2008-02-05 | Sabre, Inc. | Global reservations transaction management system and method |
US6418413B2 (en) * | 1999-02-04 | 2002-07-09 | Ita Software, Inc. | Method and apparatus for providing availability of airline seats |
US6658390B1 (en) * | 1999-03-02 | 2003-12-02 | Walker Digital, Llc | System and method for reselling a previously sold product |
US6263323B1 (en) * | 1999-03-19 | 2001-07-17 | Ita Software, Inc. | Technique for producing constructed fares |
US6721714B1 (en) * | 1999-04-16 | 2004-04-13 | R. Michael Baiada | Method and system for tactical airline management |
US6542964B1 (en) * | 1999-06-02 | 2003-04-01 | Blue Coat Systems | Cost-based optimization for content distribution using dynamic protocol selection and query resolution for cache server |
WO2001033472A2 (en) * | 1999-11-01 | 2001-05-10 | Ita Software, Inc. | Method and apparatus for providing availability of airline seats |
US7302399B1 (en) * | 1999-11-10 | 2007-11-27 | Electronic Data Systems Corporation | Method and system for processing travel reservation data |
US6411897B1 (en) * | 2000-07-10 | 2002-06-25 | Iap Intermodal, Llc | Method to schedule a vehicle in real-time to transport freight and passengers |
US7533032B1 (en) * | 2000-08-01 | 2009-05-12 | International Business Machines Corporation | Method and system for prediction of materialization of a group reservation |
US6974079B1 (en) * | 2000-10-27 | 2005-12-13 | Sabre, Inc. | Methods and apparatus for predicting airline seat availability |
US7313590B2 (en) * | 2001-12-12 | 2007-12-25 | Rich Media Club, Llc | Method and system for file server direct connection |
US7676546B2 (en) * | 2003-03-25 | 2010-03-09 | Verisign, Inc. | Control and management of electronic messaging |
US20040249682A1 (en) * | 2003-06-06 | 2004-12-09 | Demarcken Carl G. | Filling a query cache for travel planning |
US20040249683A1 (en) * | 2003-06-06 | 2004-12-09 | Demarcken Carl G. | Query widening for query caches for travel planning systems |
US20050228702A1 (en) * | 2004-03-30 | 2005-10-13 | Travelocity.Com Lp | Devices, systems, and methods for providing remaining seat availability information in a booking class |
US8019735B2 (en) * | 2004-05-21 | 2011-09-13 | Oracle International Corporation | Systems and methods for query caching |
US20060149713A1 (en) * | 2005-01-06 | 2006-07-06 | Sabre Inc. | System, method, and computer program product for improving accuracy of cache-based searches |
US7693750B2 (en) * | 2005-01-20 | 2010-04-06 | Farecast, Inc. | Method and system for aggregating, standardizing and presenting purchase information from shoppers and sellers to facilitate comparison shopping and purchases |
US20060200370A1 (en) * | 2005-03-04 | 2006-09-07 | Sabre, Inc. | Availability-based pricing for multi-channel distribution |
US20060265361A1 (en) * | 2005-05-23 | 2006-11-23 | Chu William W | Intelligent search agent |
US7487103B2 (en) * | 2005-11-29 | 2009-02-03 | Versonix Corporation | System and method for accepting a reservation based on statistical profitability |
-
1999
- 1999-11-01 US US09/431,674 patent/US7562027B1/en not_active Expired - Fee Related
-
2000
- 2000-10-27 AU AU36382/01A patent/AU3638201A/en not_active Abandoned
- 2000-10-27 EP EP00991896A patent/EP1364300A2/en not_active Withdrawn
- 2000-10-27 WO PCT/US2000/041653 patent/WO2001033406A2/en active Application Filing
-
2009
- 2009-07-14 US US12/502,721 patent/US20100153143A1/en not_active Abandoned
Patent Citations (12)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4862357A (en) * | 1987-01-28 | 1989-08-29 | Systemone Holdings, Inc. | Computer reservation system with means to rank travel itineraries chosen in terms of schedule/fare data |
US5270921A (en) * | 1990-12-19 | 1993-12-14 | Andersen Consulting | Virtual fare methods for a computerized airline seat inventory control system |
JPH07230509A (en) * | 1994-02-21 | 1995-08-29 | Kyushu Nippon Denki Software Kk | Manual closing processing system in highway bus reservation system |
US5832453A (en) * | 1994-03-22 | 1998-11-03 | Rosenbluth, Inc. | Computer system and method for determining a travel scheme minimizing travel costs for an organization |
US5652867A (en) | 1994-09-08 | 1997-07-29 | Sabre Decision Technologies, A Division Of The Sabre Group, Inc. | Airline flight reservation system simulator for optimizing revenues |
US5570283A (en) | 1994-11-18 | 1996-10-29 | Travelnet, Inc. | Corporate travel controller |
US5983220A (en) * | 1995-11-15 | 1999-11-09 | Bizrate.Com | Supporting intuitive decision in complex multi-attributive domains using fuzzy, hierarchical expert models |
US5839114A (en) * | 1996-02-29 | 1998-11-17 | Electronic Data Systems Corporation | Automated system for selecting an initial computer reservation system |
US6119094A (en) * | 1996-02-29 | 2000-09-12 | Electronic Data Systems Corporation | Automated system for identifying alternate low-cost travel arrangements |
US5983200A (en) * | 1996-10-09 | 1999-11-09 | Slotznick; Benjamin | Intelligent agent for executing delegated tasks |
US5897620A (en) * | 1997-07-08 | 1999-04-27 | Priceline.Com Inc. | Method and apparatus for the sale of airline-specified flight tickets |
US6418438B1 (en) * | 1998-12-16 | 2002-07-09 | Microsoft Corporation | Dynamic scalable lock mechanism |
Non-Patent Citations (4)
Title |
---|
"Fly with the OAG Electronic Edition", Oct. 1984, Retrieved from Dialog Chronology (File No. 410). * |
"Travel Industry Embraces Internet Travel Network as a Leading Web-Based Solution", Jul. 22, 1996, Business Wire. * |
Baglino, Ken; "Hoteliers Report Advances In Booking Systems," Jun. 21, 1993, Tour & Travel, p. 34. * |
Johnston, Marsha W. "Amadeus Takes on Sabre", Jun. 1993, Software Magazine, vol. 13 issue 9, p. 36. * |
Cited By (27)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9226975B1 (en) * | 2004-09-17 | 2016-01-05 | Deem, Inc. | Apparatus and method to provide community pricing |
US9161994B1 (en) | 2005-03-29 | 2015-10-20 | Deem, Inc. | Cost model analysis and breakdown for cost buildup |
US8700438B1 (en) * | 2005-04-28 | 2014-04-15 | Southwest Airlines Co. | Constraint-based schedule generation for transportation resources |
US7937330B2 (en) | 2005-07-22 | 2011-05-03 | Rearden Commerce, Inc. | System and method for optimization of group shipments to reduce shipping costs |
US10217131B2 (en) | 2005-12-28 | 2019-02-26 | Deem, Inc. | System for resource service provider |
US11443342B2 (en) | 2005-12-28 | 2022-09-13 | Deem, Inc. | System for resource service provider |
US9117223B1 (en) * | 2005-12-28 | 2015-08-25 | Deem, Inc. | Method and system for resource planning for service provider |
US8126776B2 (en) | 2006-06-30 | 2012-02-28 | Rearden Commerce, Inc. | Method and systems for personal restaurant assistant |
US7966213B2 (en) | 2006-10-16 | 2011-06-21 | Rearden Commerce, Inc. | System and method for automatic review of travel changes and improved suggestions and rules set |
US20080198761A1 (en) * | 2007-02-15 | 2008-08-21 | Microsoft Corporation | Decentralized network architecture for travel related services |
US8812333B2 (en) * | 2007-09-17 | 2014-08-19 | Amadeus S.A.S. | Automated split ticketing |
US20090076862A1 (en) * | 2007-09-17 | 2009-03-19 | Amadeus S.A.S. | Automated split ticketing |
US11720908B2 (en) | 2009-04-30 | 2023-08-08 | Deem, Inc. | System and method for offering, tracking and promoting loyalty rewards |
US10552849B2 (en) | 2009-04-30 | 2020-02-04 | Deem, Inc. | System and method for offering, tracking and promoting loyalty rewards |
US8589193B2 (en) | 2010-05-11 | 2013-11-19 | Primair, Inc. | Systems, methods, and machine-readable storage media for interfacing with a computer flight system |
US8452625B2 (en) | 2010-05-11 | 2013-05-28 | Primair, Inc. | Systems, methods, and machine-readable storage media for interfacing with a computer flight system |
WO2011143212A3 (en) * | 2010-05-11 | 2012-04-26 | Primair, Inc. | Systems, methods, and machine-readable storage media for interfacing with a computer flight system |
US20130275165A1 (en) * | 2011-06-30 | 2013-10-17 | Rakuten, Inc. | Information providing apparatus, information providing method, information providing program, and recording medium |
US20150330797A1 (en) * | 2012-05-04 | 2015-11-19 | Airbus India Operations Pvt. Ltd. | System and method for providing gate path information to passengers on board an aircraft upon an aircraft taxi gate selection |
US20160171008A1 (en) * | 2012-08-14 | 2016-06-16 | Amadeus S.A.S. | Updating cached database query results |
US20150154511A1 (en) * | 2013-11-29 | 2015-06-04 | Amadeus S.A.S. | Availability watching |
EP2908255A1 (en) | 2014-02-13 | 2015-08-19 | Amadeus S.A.S. | Increasing search result validity |
US9984165B2 (en) | 2014-02-13 | 2018-05-29 | Amadeus S.A.S. | Increasing search result validity |
WO2015120968A1 (en) * | 2014-02-13 | 2015-08-20 | Amadeus S.A.S. | Increasing search result validity |
US9582536B2 (en) | 2014-02-19 | 2017-02-28 | Amadeus S.A.S. | Long-term validity of pre-computed request results |
US20160125069A1 (en) * | 2014-11-03 | 2016-05-05 | Amadeus S.A.S. | Dynamic database object management |
US20160132791A1 (en) * | 2014-11-07 | 2016-05-12 | Graph SQL, Inc. | Methods and systems for distributed graphical flight search |
Also Published As
Publication number | Publication date |
---|---|
EP1364300A2 (en) | 2003-11-26 |
AU3638201A (en) | 2001-05-14 |
US20100153143A1 (en) | 2010-06-17 |
WO2001033406A9 (en) | 2002-08-08 |
WO2001033406A3 (en) | 2003-09-18 |
WO2001033406A2 (en) | 2001-05-10 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7562027B1 (en) | Availability processing in a travel planning system | |
US6418413B2 (en) | Method and apparatus for providing availability of airline seats | |
US20060149713A1 (en) | System, method, and computer program product for improving accuracy of cache-based searches | |
US20090234682A1 (en) | Method and apparatus for providing availability of airline seats | |
US20040249682A1 (en) | Filling a query cache for travel planning | |
US20040249683A1 (en) | Query widening for query caches for travel planning systems | |
US20030115093A1 (en) | Method and system for origin-destination passenger demand forecast inference | |
US7840587B2 (en) | Query caching for travel planning systems | |
US20040249799A1 (en) | Query caching for travel planning systems | |
CN101027683A (en) | Systems, methods, and computer program products for searching and displaying low cost productavailability information for a given departure-return date combination or range of departure-return data co | |
US20080168093A1 (en) | Providing travel information using a layered cache | |
US20090271226A1 (en) | Cache poller for providing travel planning information | |
US20080167886A1 (en) | Detecting errors in a travel planning system | |
US20080167909A1 (en) | Updating a database of travel information | |
US20080167906A1 (en) | Support for flexible travel planning | |
WO2008086154A2 (en) | Providing travel information using a notification service | |
US20080167908A1 (en) | Notification service for presenting travel information | |
US20080167912A1 (en) | Providing travel information using cached summaries of travel options | |
US20080167910A1 (en) | Providing travel information using a notification service | |
WO2008086153A2 (en) | Providing travel information using cached summaries of travel options |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: ITA SOFTWARE LLC, DELAWAREFree format text: CHANGE OF NAME;ASSIGNOR:ITA SOFTWARE, INC.;REEL/FRAME:026768/0268Effective date: 20110609 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:ITA SOFTWARE LLC;REEL/FRAME:026817/0482Effective date: 20110817 |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0610Effective date: 20170929 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20210714 |
US8635212B1 - Floating ranking of product results - Google Patents
Floating ranking of product results Download PDFInfo
- Publication number
- US8635212B1 US8635212B1 US13/454,818 US201213454818A US8635212B1 US 8635212 B1 US8635212 B1 US 8635212B1 US 201213454818 A US201213454818 A US 201213454818A US 8635212 B1 US8635212 B1 US 8635212B1
- Authority
- US
- United States
- Prior art keywords
- score
- search results
- search
- product
- ranked list
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 238000007667 floating Methods 0.000 title description 141
- 238000000034 method Methods 0.000 claims description 99
- 230000006870 function Effects 0.000 claims description 86
- 230000015654 memory Effects 0.000 claims description 35
- 239000000047 product Substances 0.000 description 436
- 230000008569 process Effects 0.000 description 45
- 238000013507 mapping Methods 0.000 description 30
- 239000012467 final product Substances 0.000 description 22
- 238000004891 communication Methods 0.000 description 16
- 238000010586 diagram Methods 0.000 description 7
- 238000004590 computer program Methods 0.000 description 6
- 238000012545 processing Methods 0.000 description 4
- 230000001413 cellular effect Effects 0.000 description 3
- 238000009826 distribution Methods 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 3
- 230000001419 dependent effect Effects 0.000 description 2
- 238000003780 insertion Methods 0.000 description 2
- 230000037431 insertion Effects 0.000 description 2
- 230000003993 interaction Effects 0.000 description 2
- 239000004973 liquid crystal related substance Substances 0.000 description 2
- 238000013459 approach Methods 0.000 description 1
- 230000006399 behavior Effects 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 238000007373 indentation Methods 0.000 description 1
- 238000012886 linear function Methods 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 230000006855 networking Effects 0.000 description 1
- 230000004044 response Effects 0.000 description 1
- 238000012552 review Methods 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 239000013589 supplement Substances 0.000 description 1
- 230000000007 visual effect Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9538—Presentation of query results
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
Definitions
- a search query may be provided to different searching engines to provide a user with different categories of search results.
- a search query may be provided to different search engines to obtain general results, product results, news results, image results, video results, and/or other categories of results.
- a search query may be provided to a search engine that uses different search indexes to provide different categories of results.
- a method may include obtaining, by one or more computer devices, a ranked list of first search results based on a search query.
- the first search results may be associated with a first search category, and the first search results, in the ranked list of first search results, may be associated first scores.
- the method may further include obtaining, by the one or more computer devices, a ranked list of second search results based on the search query.
- the second search results may be associated with a second, different search category, and a second search result, in the ranked list of second search results, may be associated with a second score.
- the method may also include determining, by the one or more computer devices, a final second score based on the second score and a function that maps scores associated with the second search category to scores associated with the first search category; inserting, by the one or more computer devices and based on the final second score, information relating to the ranked list of second search results at a position within the ranked list of first search results to form a set of search results; and providing, by the one or more computer devices, the set of search results.
- a system may include one or more computer devices to receive a ranked list of first search results based on a search query.
- the first search results may be associated with a first search category, and each first search result, in the ranked list of first search results, may be associated with a first score.
- the one or more computer devices may further receive a ranked list of second search results based on the search query.
- the second search results may be associated with a second, different search category, and a second search result, in the ranked list of second search results, may be associated with a second score.
- the one or more computer devices may also determine a final second score based on the second score and a function that maps scores associated with the second search category to scores associated with the first search category, insert, based on the final second score, information relating to the ranked list of second search results at a position within the ranked list of first search results to form a set of search results, and provide the set of search results.
- a computer-readable medium may store instructions.
- the instructions may include one or more instructions, which, when executed by one or more processors, cause the one or more processors to receive a ranked list of first search results.
- the first search results may be associated with a first search category, and each first search result, in the ranked list of first search results, may be associated with a first score.
- the one or more instructions may further cause the one or more processors to receive a ranked list of second search results.
- the second search results may be associated with a second, different search category, and a second search result, in the ranked list of second search results, may be associated with a second score.
- the one or more instructions may also cause the one or more processors to obtain an adjusted second score based on the second score and clickthrough rate information associated with the second search result, identify a position, within the ranked list of first search results, to insert information relating to the ranked list of second search results based on the adjusted second score and a function that maps scores associated with the second search category to scores associated with the first search category, insert the information relating to the ranked list of second search results at the identified position to create a set of search results, and provide the set of search results.
- FIGS. 1A-1C are diagrams illustrating an overview of an example implementation described herein;
- FIG. 2 is a diagram of an example environment in which systems and/or methods described herein may be implemented
- FIG. 3 shows an example of a generic computer device and a generic mobile computer device
- FIG. 4 is a diagram of example functional components of a search system of FIG. 2 ;
- FIG. 5 is a flowchart of an example process for providing search results.
- FIGS. 6-8 are flowcharts of example processes that may be performed in connection with the process of FIG. 5 .
- the product search results may include, for example, information identifying a group of products, e.g., items and/or services for sale, that is relevant to a search query.
- the general search results may include another category of search results relating to the search query, such as search results obtained by from an image search, a news search, a video search, a book search, a blog search, a local search, a search of a local area network, a search of a wide area network, a search performed on a user device, and/or another category of search.
- a search query which relates to shopping, may be processed by a general search engine to obtain general search results and by a products search engine to obtain, as product search results, information identifying a group of products, e.g., items and/or services for sale, that is relevant to the search query.
- the product search results may be ranked, in connection with the general search results, based on the relative strength of the product search results and the distribution and relative strength of the general search results.
- document is to be broadly interpreted to include any machine-readable and machine-storable work product.
- a document may include, for example, a website, an e-mail, a business listing, a file, a combination of files, one or more files with embedded links to other files, a news group posting, a blog, etc.
- a common document is a web page.
- Documents often include textual information and may include embedded information, such as meta information, images, hyperlinks, etc., and/or embedded instructions, such as Javascript, etc.
- search result is to be broadly interpreted to include a document or a link to a document.
- systems and/or methods, described herein are equally applicable to other categories of searches.
- systems and/or methods, as described herein may combine search results from two or more categories of searches to form a list of search results.
- FIGS. 1A-1C are diagrams illustrating an overview of an example implementation 100 described herein. Assume, for example implementation 100 , that a user is interested in obtaining information about tablet computers. Thus, as shown in FIG. 1A , the user may use a client, depicted as a smartphone, to submit, to a search system, a search query that includes the terms “tablet computers.”
- the search system may include a general search engine and a product search engine.
- the search system may feed the search query to both search engines to obtain search results.
- the general search engine may receive the search query and provide a ranked list of general search results to the floating ranking component.
- the product search engine may receive the search query and provide a ranked list of product search results to the floating ranking component.
- the floating ranking component may consider the quality of the general search results in determining where, in the list of general search results, to place the product search results in a search results document. In some instances, the floating ranking component may, based on indications of the quality of the general search results and indications of the quality of the product search results, insert the product search results before the list of general search results.
- the floating ranking component may, based on indications of the quality of the general search results and indications of the quality of the product search results, determine that the product search results are not to be inserted in the list of general search results. In still other instances, the floating ranking component may, based on indications of the quality of the general search results and indications of the quality of the product search results, insert the product search results after a first general search result, a second general search result, and/or after any other general search result. In any event, the floating ranking component may provide the search results document to the client.
- the search results document may, when rendered for display on the client, include a list of general search results, with the product search results placed after the first general search result.
- the product search results may include a quantity of the highest ranking product search results, e.g., the 3 highest ranking product search results are shown in FIG. 1C for explanatory purposes, along with a link to the ranked list of search results.
- the user may select one of the displayed product search results or select the link to obtain the ranked list of product search results.
- FIG. 2 is a diagram of an example environment 200 in which systems and/or methods described herein may be implemented.
- Environment 200 may include multiple clients 210 connected to multiple servers 220 - 240 via a network 250 .
- Each of clients 210 may include a client device, such as personal computer, a wireless telephone, a personal digital assistant (PDA), a laptop, a tablet computer, or another type of computation or communication device.
- Clients 210 may include user interfaces presented through one or more browsers, e.g., web browsers.
- Servers 220 - 240 may include server devices that gather, process, search, and/or implement functions in a manner described herein. Each server 220 - 240 may be implemented as a single server device or a collection of server devices that may be co-located or remotely located. Additionally, or alternatively, any two or more of servers 220 - 240 may be implemented within a single, common server device or a single, common collection of server devices. While servers 220 - 240 are shown as separate components, it may be possible for one or more of servers 220 - 240 to perform one or more of the functions of another one or more of servers 220 - 240 .
- server 220 may implement a search system 225 that receives search queries from clients 210 , and that provides search results that are responsive to the search queries.
- Server 220 may crawl different categories of documents, e.g., web pages, images, documents relating to products, documents relating to news, etc., index the documents, and store information associated with the documents.
- server 220 may maintain a different index for each of the different categories of documents.
- Servers 230 and 240 may store or maintain documents that may be crawled or analyzed by server 220 .
- Network 250 may include any type of network, such as, for example, a local area network (LAN), a wide area network (WAN), a telephone network, such as the Public Switched Telephone Network (PSTN) or a cellular network, an intranet, the Internet, a combination of networks, etc.
- Clients 210 and servers 220 - 240 may connect to network 250 via wired and/or wireless connections. In other words, any one of clients 210 and servers 220 - 240 may connect to network 250 via a wired connection, a wireless connection, or a combination of a wired connection and a wireless connection.
- environment 200 may include additional devices and/or networks, fewer devices and/or networks, different devices and/or networks, and/or differently arranged devices and/or networks than those depicted in FIG. 2 . Additionally, or alternatively, one or more components of environment 200 may perform one or more tasks described as being performed by one or more other components of environment 200 .
- FIG. 3 is a diagram of an example of a generic computing device 300 and a generic mobile computing device 350 , which may be used with the techniques described here.
- Generic computing device 300 or generic mobile computing device 350 may correspond to, for example, a client 210 and/or a server 220 , 230 , or 240 .
- Computing device 300 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers.
- Mobile computing device 350 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smart phones, tablet computers, and other similar computing devices.
- the components shown in FIG. 3 their connections and relationships, and their functions, are meant to be examples only, and are not meant to limit implementations described herein.
- Computing device 300 may include a processor 302 , a memory 304 , a storage device 306 , a high-speed interface 308 connecting to memory 304 and high-speed expansion ports 310 , and a low-speed interface 312 connecting to a low-speed expansion port 314 and a storage device 306 .
- Each of components 302 , 304 , 306 , 308 , 310 , 312 , and 314 are interconnected using various buses, and may be mounted on a common motherboard or in other manners as appropriate.
- Processor 302 can process instructions for execution within computing device 300 , including instructions stored in memory 304 or on storage device 306 to display graphical information for a graphical user interface (GUI) on an external input/output device, such as display 316 coupled to high-speed interface 308 .
- GUI graphical user interface
- multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory.
- multiple computing devices 300 may be connected, with each device providing portions of the necessary operations, as a server bank, a group of blade servers, or a multi-processor system, etc.
- Memory 304 stores information within computing device 300 .
- memory 304 includes a volatile memory unit or units.
- memory 304 may include a non-volatile memory unit or units.
- Memory 304 may also be another form of computer-readable medium, such as a magnetic or optical disk.
- a computer-readable medium may refer to a non-transitory memory device.
- a memory device may refer to storage space within a single storage device or spread across multiple storage devices.
- Storage device 306 is capable of providing mass storage for computing device 300 .
- storage device 306 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations.
- a computer program product can be tangibly embodied in an information carrier.
- the computer program product may also contain instructions that, when executed, perform one or more methods, such as those described herein.
- the information carrier is a computer or machine-readable medium, such as memory 304 , storage device 306 , or a memory on processor 302 .
- High-speed interface 308 manages bandwidth-intensive operations for computing device 300 , while low-speed interface 312 manages lower bandwidth-intensive operations. Such allocation of functions is provided for explanatory purposes only.
- high-speed interface 308 is coupled to memory 304 , display 316 , e.g., through a graphics processor or accelerator, and to high-speed expansion ports 310 , which may accept various expansion cards.
- low-speed interface 312 may be coupled to storage device 306 and low-speed expansion port 314 .
- Low-speed expansion port 314 which may include various communication ports, e.g., USB, Bluetooth, Ethernet, wireless Ethernet, etc., may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- input/output devices such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- Computing device 300 may be implemented in a number of different forms, as shown in the figure.
- computing device 300 may be implemented as a standard server 320 , or multiple times in a group of such servers.
- Computing device 300 may also be implemented as part of a rack server system 324 .
- computing device 300 may be implemented in a personal computer, such as a laptop computer 322 .
- components from computing device 300 may be combined with other components in a mobile device, such as mobile computing device 350 .
- Each of such devices may contain one or more of computing devices 300 , 350 , and an entire system may be made up of multiple computing devices 300 , 350 communicating with each other.
- Mobile computing device 350 may include a processor 352 , a memory 364 , an input/output device, such as a display 354 , a communication interface 366 , and a transceiver 368 , among other components. Mobile computing device 350 may also be provided with a storage device, such as a micro-drive or other device, to provide additional storage. Each of the components 352 , 364 , 354 , 366 , and 368 are interconnected using various buses, and several of the components may be mounted on a common motherboard or in other manners as appropriate.
- Processor 352 can execute instructions within mobile computing device 350 , including instructions stored in memory 364 .
- Processor 352 may be implemented as a chipset of chips that include separate and multiple analog and digital processors.
- Processor 352 may provide, for example, for coordination of the other components of mobile computing device 350 , such as control of user interfaces, applications run by mobile computing device 350 , and wireless communication by mobile computing device 350 .
- Processor 352 may communicate with a user through control interface 358 and display interface 356 coupled to a display 354 .
- Display 354 may be, for example, a Thin-Film-Transistor Liquid Crystal Display (TFT LCD) or an Organic Light Emitting Diode (OLED) display, or other appropriate display technology.
- Display interface 356 may include appropriate circuitry for driving display 354 to present graphical and other information to a user.
- Control interface 358 may receive commands from a user and convert the commands for submission to processor 352 .
- an external interface 362 may be provided in communication with processor 352 , so as to enable near area communication of mobile computing device 350 with other devices.
- External interface 362 may provide, for example, for wired communication, or for wireless communication, and multiple interfaces may also be used.
- Memory 364 stores information within mobile computing device 350 .
- Memory 364 can be implemented as one or more of a computer-readable medium or media, a volatile memory unit or units, or a non-volatile memory unit or units.
- Expansion memory 374 may also be provided and connected to mobile computing device 350 through expansion interface 372 , which may include, for example, a Single In Line Memory Module (SIMM) card interface.
- SIMM Single In Line Memory Module
- expansion memory 374 may provide extra storage space for device 350 , or may also store applications or other information for mobile computing device 350 .
- expansion memory 374 may include instructions to carry out or supplement the processes described herein, and may include secure information also.
- expansion memory 374 may be provided as a security module for mobile computing device 350 , and may be programmed with instructions that permit secure use of mobile computing device 350 .
- secure applications may be provided via the SIMM cards, along with additional information, such as placing identifying information on the SIMM card in a non-hackable manner.
- Expansion memory 374 may include, for example, flash memory and/or NVRAM memory.
- a computer program product is tangibly embodied in an information carrier.
- the computer program product contains instructions that, when executed, perform one or more methods, such as those described herein.
- the information carrier is a computer- or machine-readable medium, such as memory 364 , expansion memory 374 , or a memory on processor 352 , that may be received, for example, over transceiver 368 or external interface 362 .
- Mobile computing device 350 may communicate wirelessly through communication interface 366 , which may include digital signal processing circuitry where necessary. Communication interface 366 may provide for communications under various modes or protocols, such as GSM voice calls, SMS, EMS, or MMS messaging, CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS, among others. Such communication may occur, for example, through transceiver 368 . In addition, short-range communication may occur, such as using a Bluetooth, WiFi, or other such transceiver. In addition, Global Positioning System (GPS) receiver module 370 may provide additional navigation- and location-related wireless data to mobile computing device 350 , which may be used as appropriate by applications running on mobile computing device 350 .
- GPS Global Positioning System
- Mobile computing device 350 may also communicate audibly using audio codec 360 , which may receive spoken information from a user and convert the received spoken information to digital information. Audio codec 360 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of mobile computing device 350 . Such sound may include sound from voice telephone calls, may include recorded sound—e.g., voice messages, music files, etc.—and may also include sound generated by applications operating on mobile computing device 350 .
- Audio codec 360 may receive spoken information from a user and convert the received spoken information to digital information. Audio codec 360 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of mobile computing device 350 . Such sound may include sound from voice telephone calls, may include recorded sound—e.g., voice messages, music files, etc.—and may also include sound generated by applications operating on mobile computing device 350 .
- Mobile computing device 350 may be implemented in a number of different forms, as shown in FIG. 3 .
- mobile computing device 350 may be implemented as a cellular telephone 380 .
- Mobile computing device 350 may also be implemented as part of a smart phone 382 , personal digital assistant, or other similar mobile device.
- implementations of the systems and techniques described herein can be realized in digital electronic circuitry, integrated circuitry, specially designed application specific integrated circuits (ASICs), computer hardware, firmware, software, and/or combinations thereof.
- ASICs application specific integrated circuits
- These various implementations can include implementations in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- the systems and techniques described herein can be implemented on a computer having a display device, e.g., a cathode ray tube or liquid crystal display, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a cathode ray tube or liquid crystal display
- a keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- the systems and techniques described herein can be implemented in a computing system that includes a back end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front end component, e.g., a client computer having a graphical user interface or a web browser through which a user can interact with the systems and techniques described here, or any combination of such back end, middleware, or front end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a LAN, a WAN, and the Internet.
- FIG. 4 is a diagram of example functional components of search system 225 .
- search system 225 may include a general searching component 410 , a product searching component 420 , and a floating ranking component 430 .
- floating ranking component 430 may be implemented in a location external to search system 225 , e.g., as part of a browser toolbar on client 210 .
- General searching component 410 may receive a search query and identify, as general search results, a group of documents relevant to the search query. For example, general searching component 410 may compare the terms of the search query to terms in an index to obtain a list of potential search results. General searching component 410 may generate scores for the general search results, referred to hereinafter as “general scores.” General searching component 410 may generate a general score, for a general search result, based on one or more factors, such as a measure of relevance of the corresponding document to the search query and/or a measure of quality of the document.
- General searching component 410 may rank the general search results based on the general scores. For example, general searching component 410 may create a list of general search results and sort the general search results, in the list, based on the general scores of the general search results.
- Product searching component 420 may receive a search query and identify, as product search results, a group of products, e.g., items and/or services for sale, relevant to the search query. For example, product searching component 420 may compare the terms of the search query to terms in an index to obtain a list of product search results. Product searching component 420 may generate scores for the product search results, referred to hereinafter as “product scores.” Product searching component 420 may generate a product score, for a product search result, based on one or more factors, such as a measure of relevance of the corresponding product to the search query and/or a measure of quality of the product.
- Product searching component 420 may rank the product search results based on the product scores. For example, product searching component 420 may create a list of product search results and sort the product search results, in the list, based on the product scores of the product search results.
- Floating ranking component 430 may determine the position at which product search results are to be inserted into a ranked list of general search results. For example, floating ranking component 430 may receive the ranked list of general search results, along with the associated general scores, from general searching component 410 . In addition, floating ranking component 430 may receive the ranked list of product search results, along with the associated product scores, from product searching component 420 . Floating ranking component 430 may generate a document that includes some or all of the general search results, of the ranked list of general search results.
- Floating ranking component 430 may, based on the general scores and the product score of at least one of the product search results, identify a position, in the ranked list of general search results, at which some or all of the product search results of the ranked list of product search results are to be inserted, in the generated document. Floating ranking component 430 may identify the position using, for example, one or more mapping functions, which map a product score to a general score.
- search system 225 may include additional functional components, different functional components, and/or fewer functional components than those depicted in FIG. 4 . Additionally, or alternatively, one or more functional components of search system 225 may perform one or more tasks described as being performed by one or more other functional components of search system 225 .
- FIG. 5 is a flowchart of an example process 500 for providing search results.
- process 500 may be performed by server 220 , such as by search system 225 of server 220 .
- process 500 may be performed by one or more other devices instead of, or possibly in conjunction with, server 220 .
- Process 500 may include receiving a search query (block 510 ).
- a user of client 210 , may input a search query into client 210 and cause client 210 to submit the search query to search system 225 .
- Search system 225 may receive the search query from client 210 .
- Process 500 may further include performing a general search based on the search query to obtain a ranked list of general search results (block 520 ).
- search system 225 e.g., general searching component 410
- General searching component 410 may generate general scores for the general search results.
- the general score, for a general search result may reflect a measure of relevance of the corresponding document to the search query.
- the general score may reflect the measure of relevance of the corresponding document to the one or more search terms in the search query.
- the general score may reflect a measure of quality of the corresponding document.
- the search query may be used to identify a relevant document, which is scored based on the document's measure of quality.
- Several techniques exist for measuring the quality of a document such as a technique based on a measure of the quality of the source of the document, a technique based on an age of the document, a technique based on user accesses of the document, and/or other techniques.
- the general score, for a general search result may reflect a combination of a measure of relevance of the corresponding document to a search query and a measure of quality of the corresponding document. In some implementations, the general score, for a general search result, may reflect a weighted combination of a measure of relevance of the corresponding document to a search query and a measure of quality of the corresponding document, where the measure of relevance may be weighted differently from the measure of quality. In some implementations, the general score, for a general search result, may be determined in another manner.
- General searching component 410 may rank the general search results based on the general scores. For example, general searching component 410 may create a list of general search results and sort the general search results, in the list, based on the general scores of the general search results.
- Process 500 may further include performing a product search based on the search query to obtain a ranked list of product search results (block 530 ).
- search system 225 e.g., product searching component 420
- Product searching component 420 may compare the terms of the search query to keywords in an index to obtain a list of product search results.
- Product searching component 420 may generate product scores for the product search results.
- the product score, for a product search result may reflect a measure of relevance of the corresponding product to the search query.
- the product score may reflect the measure of relevance of the corresponding product to the one or more search terms in the search query.
- the product score, for a product search result may reflect a measure of quality of the corresponding product.
- the search query may be used to identify a relevant product, which is scored based on the product's measure of quality.
- Several techniques exist for measuring the quality of a product such as a technique based on a measure of the quality of the source of the product, e.g., the website or company from which the product is sold, a technique based on user selections of a link to the product, a technique based on user reviews of the product, and/or other techniques.
- the product score, for a product search result may reflect a combination of a measure of relevance of the corresponding product to a search query and a measure of quality of the corresponding product.
- the product score, for a product search result may reflect a weighted combination of a measure of relevance of the corresponding product to a search query and a measure of quality of the corresponding product, where the measure of relevance may be weighted differently from the measure of quality.
- the product score, for a product search result may be determined in another manner.
- product searching component 420 may perform a product search each time a search query is received by search system 225 .
- product searching component 420 may perform a product search only when a search query is determined to be related to a search for a product.
- search system 225 may determine that a search query is related to a search for a product based on a number of factors, such as, for example, the quantity of times that the search query has been used to perform a product search, the quantity of times that the search query has been used to perform a general search, a factor indicating how commercial the search query is, link selections or clickthrough information relating to the search query, and/or other factors.
- Process 500 may further include combining the ranked general search results with the ranked product search results to obtain a set of search results for the search query (block 540 ).
- search system 225 e.g., floating ranking component 430
- floating ranking component 430 may determine that the ranked list of product search results are to be placed before the ranked list of general search results, that the ranked list of product search results are not to be placed in the ranked list of general search results, or that the product search results are to be placed after any one of the general search results, in the ranked list of general search results.
- floating ranking component 430 may flexibly insert some, all, or none of the ranked list of product search results in any position in the ranked list of general search results to create the set of search results. Additional details regarding block 540 are provided below with respect to FIGS. 6-8 .
- Process 500 may include providing a document that includes the set of search results (block 550 ).
- search system 225 e.g., floating ranking component 430
- floating ranking component 430 may include a subset of the ranked product search results in the document.
- floating ranking component 430 may include a predetermined quantity of the highest ranking product search results in the document.
- the quantity may be based on the position at which the product search results are inserted. For example, a greater quantity of product search results may be included when the product search results are inserted at a higher ranked position, in the set of search results, than when the product search results are inserted at a lower ranked position.
- the quantity may range from zero to one or more.
- floating ranking component 430 may include, at the position in the document, a link to the ranked list of product search results, in place of one or more product search results or along with one or more product search results.
- floating ranking component 430 may cause the inserted product search results to be formatted differently than the general search results when the document is rendered for display.
- floating ranking component 430 may use line spacing, a font, a font size, indentation, etc. in relation to the product search results that is different from what is used for the general search results.
- floating ranking component 430 may cause one or more images to be displayed, at the position in the document, when the document is rendered for display.
- search system 225 may provide the generated document to client 210 , for display to the user.
- process 500 may include additional blocks, different blocks, fewer blocks, and/or differently arranged blocks than those depicted in FIG. 5 . Additionally, or alternatively, one or more of the blocks of process 500 may be performed in parallel.
- FIGS. 6-8 are flowcharts of example processes that may be performed in connection with block 540 of FIG. 5 .
- the processes of FIGS. 6-8 may be performed by server 220 , such as by search system 225 of server 220 .
- the processes of FIGS. 6-8 may be performed by one or more other devices instead of, or possibly in conjunction with, server 220 .
- process 600 may include adjusting a product score (block 610 ).
- search system 225 e.g., floating ranking component 430
- the product score may be identified as representative for the ranked list of product search results.
- floating ranking component 430 may determine a product score, as representative for the ranked list of product search results, based on product scores for a quantity of product search results, e.g., a predetermined quantity of highest ranking product search results in the ranked list of product search results.
- Floating ranking component 430 may identify a product score, as representative for the ranked list of product search results, in other ways. In any event, floating ranking component 430 may adjust the product score based on one or more factors.
- the factors may include factors relating to the general search results, factors relating to both the general search results and the product search results, or factors relating to the product search results.
- the factors may include information that indicates the presence of certain general search results in the ranked list of general search results. For example, if a particular quantity of general search results, in the ranked list of general search results, is associated with commercial websites, this information may be a strong indication that the product search results will be relevant to the search query. Thus, floating ranking component 430 may use this information to adjust the product score.
- the factors may include information that indicates that one of the top ranking general search results, in the ranked list of general search results, is related to one of the top product search results, in the ranked list of product search results.
- floating ranking component 430 may boost the product score of the product search result and/or use the position of that one general search result to help guide the positioning of the product search result(s).
- the factors may include clickthrough rate information associated with the product search results. For example, if the clickthrough rate information for the product search result indicates that the product search result is selected by users more than a particular quantity of times when the users have submitted the search query, this information may be a strong indication that the product search results will be relevant to the search query.
- the clickthrough rate information may include visibility adjusted clickthrough rate information.
- floating ranking component 430 may use the clickthrough rate information to adjust the product score. An example process for adjusting a product score based on clickthrough rate information is provided below with respect to FIG. 7 . A similar process may be performed for other types of factors.
- FIG. 7 is a flowchart of an example process 700 that may be performed in connection with block 610 of FIG. 6 .
- Process 700 may include determining whether clickthrough rate information is available for the product search result (block 710 ).
- the product search result may, for example, correspond to the highest ranking product search result, in the ranked list of product search results.
- search system 225 e.g., floating ranking component 430 , may use information identifying the product search result to access a data structure that associates product search results with clickthrough rate information.
- the clickthrough rate information may correspond to a clickthrough rate or a clickthrough rate that has been adjusted based on one or more factors, such as, for example, visibility, the number of unique users submitting queries, etc.
- Floating ranking component 430 may obtain the clickthrough rate information, from the data structure, using the identifying information. Floating ranking component 430 may alternatively obtain the clickthrough rate information in other ways.
- process 700 may include setting a clickthrough rate multiplier to 1 (block 720 ). For example, if floating ranking component 430 determines that the data structure does not include clickthrough rate information for the product search result, floating ranking component 430 may set a clickthrough rate multiplier to 1.
- process 700 may include comparing the product score to a first threshold (block 730 ).
- floating ranking component 430 may compare the product score to a first threshold.
- floating ranking component 430 may identify a range of product scores of product search results that were obtained for search queries received during some period of time, e.g., over the past month.
- floating ranking component 430 may analyze the product scores for the period of time and determine the particular product score that corresponds to a percentile.
- the percentile may correspond to a percentage of product scores, in the range of product scores, that are below the particular product score. In one example, the percentile may be 50%.
- floating ranking component 430 may determine the particular product score at which 50% of the product scores were above the particular product score, during the period of time, and at which 50% of the product scores were below the particular product score. Floating ranking component 430 may set the first threshold equal to the particular product score. Another percentile value for the first threshold may alternatively be used. In addition, other manners of determining a value for the first threshold may alternatively be used.
- process 700 may include setting the clickthrough rate multiplier to 1 (block 720 ). For example, if floating ranking component 430 determines that the product score is less than the first threshold, floating ranking component 430 may set the clickthrough rate multiplier to 1.
- process 700 may include comparing the clickthrough rate information to a second threshold (block 740 ).
- floating ranking component 430 may compare, when the product score is greater than or equal to the first threshold, the clickthrough rate information to a second threshold.
- the second threshold may correspond to 10% or another value.
- process 700 may include determining the clickthrough rate multiplier based on a first function (block 750 ). For example, when floating ranking component 430 determines that the clickthrough rate information is less than the second threshold, floating ranking component 430 may set the clickthrough rate multiplier based on a first function. In some implementations, the first function may be based on the clickthrough rate information and a first set of constants.
- Floating ranking component 430 may determine the clickthrough rate multiplier in other ways.
- a candidate function to use in connection with blocks 750 and 760 , may satisfy the following criteria: the function may be continuous and monotonically increasing, the function may cause the clickthrough rate multiplier to be close to zero when the clickthrough rate information is less than approximately 3%, the function may cause the clickthrough rate multiplier to be close to one when the clickthrough rate information is greater than approximately 7% and less than approximately 13%, and the function may cause the clickthrough rate multiplier to increase rapidly above a value of one as the clickthrough rate information increases above approximately 20%. Other percentages may alternatively be used.
- Process 700 may further include determining the clickthrough rate adjusted product score for the product search result based on the product score and the clickthrough rate multiplier (block 770 ).
- floating ranking component 430 may determine the clickthrough rate adjusted product score based on the product score and the clickthrough rate multiplier, as determined in block 720 , block 750 , or block 760 .
- floating ranking component 430 may determine the clickthrough rate adjusted product score in other ways.
- floating ranking component 430 may use additional thresholds and functions in some implementations.
- process 600 may further include computing a final product score based on the adjusted product score (block 620 ).
- search system 225 e.g., floating ranking component 430
- the product search result may, for example, correspond to the highest ranking product search result, in the ranked list of product search results.
- FIG. 8 is a flowchart of an example process 800 that may be performed in connection with block 620 of FIG. 6 .
- Process 800 may include determining whether the product score is above a third threshold (block 810 ).
- search system 225 e.g., floating ranking component 430
- floating ranking component 430 may determine the third threshold in a manner similar to how floating ranking component 430 determined the first threshold.
- floating ranking component 430 may analyze the range of product scores for the period of time and determine the particular product score that corresponds to a percentile. The percentile may correspond to a percentage of product scores, in the range of product scores, that are below the particular product score.
- the percentile may be 20%.
- floating ranking component 430 may determine the particular product score at which 80% of the product scores were above the particular product score, in the range of product scores, and at which 20% of the product scores were below the particular product score.
- Another percentile value for the third threshold may alternatively be used.
- other manners of determining a value for the third threshold may alternatively be used.
- process 800 may include setting the final product score to a value that will prevent the ranked list of product search results from being inserted into the ranked list of general search results (block 820 ). For example, if floating ranking component 430 determines that the product score is less than the third threshold, floating ranking component 430 may set a final product score, for the product search result, to a value that will prevent the ranked list of product search results from being inserted into the ranked list of general search results. In some implementations, floating ranking component 430 may set the final product score to a value that is below a general score associated with a predetermined general search result, in the ranked list of general search results. The predetermined general search result may correspond to a lowest ranking general search result, in the ranked list of general search results, or another general search result in the ranked list of general search results.
- process 800 may include determining whether the product score is greater than or equal to a fourth threshold (block 830 ).
- floating ranking component 430 may compare the product score, for the product search result, to a fourth threshold.
- floating ranking component 430 may determine the fourth threshold in a manner similar to how floating ranking component 430 determined the first and third thresholds.
- floating ranking component 430 may analyze the range of product scores for the period of time and determine the particular product score that corresponds to a percentile. The percentile may correspond to a percentage of product scores, in the range of product scores, that are below the particular product score. In one example, the percentile may be 50%.
- floating ranking component 430 may determine the particular product score at which 50% of the product scores were above the particular product score, in the range of product scores, and at which 50% of the product scores were below the particular product score. Thus, in this example, floating ranking component 430 may set the fourth threshold equal to the first threshold determined above. Another percentile value for the fourth threshold may alternatively be used. In addition, other manners of determining a value for the fourth threshold may alternatively be used.
- process 800 may include determining the final product score using the adjusted product score and a first mapping function (block 840 ). For example, when the product score, of the product search result, is greater than or equal to the fourth threshold, floating ranking component 430 may determine the final product score, for the product search result, using the adjusted product score, e.g., as determined in block 770 above, and a first mapping function.
- floating ranking component 430 may determine the lower product score (pscore1) and the upper product score (pscore2) based on the range of product scores of product search results that were obtained for search queries received during some period of time, e.g., over the past month. For example, in connection with the upper product score, floating ranking component 430 may analyze the product scores for the period of time and determine the particular product score that corresponds to a first percentile. In one example, the first percentile may be 70%, 80%, 90%, or another percentage.
- the upper product score (pscore2) is selected so that 90% of the product scores, in the range of product scores obtained during the period of time, were below the selected product score and 10% of the product scores were above the selected product score.
- floating ranking component 430 may analyze the product scores for the period of time and determine the particular product score that corresponds to a second percentile. In one example, the second percentile may be 50%. Thus, floating ranking component 430 may set the lower product score (pscore1) equal to the first threshold. Another percentile may alternatively be used for determining the lower product score.
- floating ranking component 430 may determine the upper product score and the lower product score based on information from users. For example, floating ranking component 430 may obtain information from users, relating to whether a given search query is related to a product search and/or the quality of the corresponding search results for the given search query. Thus, information may be obtained as to whether a given search query is related to a product search or unrelated to a product search. Additionally, or alternatively, information may be obtained as to whether or not product search results, provided in response to the given search query, are relevant to the given search query. Floating ranking component 430 may also determine the range of product scores of product search results that were obtained for search queries received during some period of time, e.g., over the past month. Floating ranking component 430 may use the range of product scores and the information from users to determine the particular upper and lower percentiles to use for determining the upper product score and the lower product score.
- floating ranking component 430 may determine the upper product score and the lower product score for the first mapping function. For explanatory purposes only, assume that the lower product score value corresponds to 1 and the upper product score value corresponds to 15. Other lower and upper values of product scores and other general search result positions, other than positions 5, 2, and 1, may alternatively be used.
- the first mapping function may linearly map a range of product scores, e.g., from the lower product score value to the upper product score value, to a range of general scores.
- the first mapping function may map the lower product score value to the general score of general search result 5 and map the upper product score value to a weighted average of the general score of general search result 1 and the general score of general search result 2.
- the weights associated with the general score of general search result 1 and the general score of general search result 2 may be selected so that a greater weight is given to the general score of general search result 2 than the weight given to the general score of general search result 1.
- the weight given to the general score of general search result 2 may be four times the weight given to the general score of general search result 1.
- the weighted average may be expressed as: 1 ⁇ 5 *W 1+4 ⁇ 5 *W 2. Other weights may alternatively be used.
- floating ranking component 430 may map product scores in the range of 1 to 15 to general scores in the range of 2 and 100.
- floating ranking component 430 determined, in block 770 above, the value of the adjusted product score as 1, which corresponds to the lower product score value.
- floating ranking component 430 may map the adjusted product score of 1 to a general score of 2.
- floating ranking component 430 may determine the final product score to be 2.
- floating ranking component 430 determined, in block 770 above, the value of the adjusted product score as 15, which corresponds to the upper product score value.
- floating ranking component 430 may map the adjusted product score of 15 to a general score of 100.
- floating ranking component 430 may determine the final product score to be 100.
- floating ranking component 430 determined, in block 770 above, the value of the adjusted product score as 8, which is between the lower product score value and the upper product score value.
- floating ranking component 430 may map the adjusted product score of 8 to a general score of 51.
- floating ranking component 430 may determine the final product score to be 51.
- the adjusted product score may have a value that is below the lower product score value or above the upper product score value.
- floating ranking component 430 may use the first mapping function to also linearly map a product score below the lower product score value or a product score above the upper product score value to a general score. For example, assume that floating ranking component 430 determined, in block 770 above, the value of the adjusted product score as 0.5, which is a value below the lower product score value. In this example, floating ranking component 430 may map the adjusted product score of 0.5 to a general score of ⁇ 1.5. Similarly, assume that floating ranking component 430 determined, in block 770 above, the value of the adjusted product score as 20, which is a value above the upper product score value. In this example, floating ranking component 430 may map the adjusted product score of 20 to a general score of 135.
- process 800 may include determining the final product score using the adjusted product score and a second mapping function. For example, when the product score, of the product search result, is less than the fourth threshold, floating ranking component 430 may determine the final product score, for the product search result, using the adjusted product score, e.g., as determined in block 770 above, and a second mapping function.
- floating ranking component 430 may determine the lower product score (pscore3) and the upper product score (pscore4), for the second mapping function, based on the range of product scores of product search results that were obtained for search queries received during the period of time, e.g., over the past month. For example, in connection with the upper product score (pscore4), floating ranking component 430 may analyze the product scores for the period of time and determine the particular product score that corresponds to a percentile. In one example, the percentile may be 50%. Thus, in this example, floating ranking component 430 may set the upper product score (pscore4) equal to the lower product score (pscore1) described above in connection with the first mapping function.
- floating ranking component 430 may analyze the product scores for the period of time and determine the particular product score that corresponds to a different percentile. In one example, the different percentile may be 20%. Thus, in this example, floating ranking component 430 may set the lower product score (pscore3) equal to the third threshold described above in connection with block 810 .
- the percentiles identified above for determining the lower product score value (pscore3) and the upper product score value (pscore4) have been provided for explanatory purposes only. Other percentiles may alternatively be used.
- floating ranking component 430 may determine the lower product score and the upper product score, for the second mapping function, based on information from users. For example, floating ranking component 430 may, in a manner similar to that described above with respect to the first mapping function, use information from users to determine the particular lower and upper percentiles to use for determining the lower product score and the upper product score for the second mapping function.
- floating ranking component 430 may determine the lower product score and the upper product score for the second mapping function. For explanatory purposes only, assume that the lower product score value corresponds to 0 and the upper product score value corresponds to 1. Other lower and upper values of product scores and other general search result positions, other than positions 10 and 6, may alternatively be used.
- the second mapping function may linearly map a range of product scores, e.g., from the lower product score value to the upper product score value, to a range of general scores.
- the second mapping function may map the lower product score value to the general score of general search result 10 and map the upper product score value to the general score of general search result 6.
- floating ranking component 430 may map product scores in the range of 0 to 1 to general scores in the range of 2 and 8.
- floating ranking component 430 determined, in block 770 above, the value of the adjusted product score as 0, which corresponds to the lower product score value.
- floating ranking component 430 may map the adjusted product score of 0 to a general score of 2.
- floating ranking component 430 may determine the final product score to be 2.
- floating ranking component 430 determined, in block 770 above, the value of the adjusted product score as 1, which corresponds to the upper product score value.
- floating ranking component 430 may map the adjusted product score of 1 to a general score of 8.
- floating ranking component 430 may determine the final product score to be 8.
- floating ranking component 430 determined, in block 770 above, the value of the adjusted product score as 0.5, which is between the lower product score value and the upper product score value.
- floating ranking component 430 may map the adjusted product score of 0.5 to a general score of 5.
- floating ranking component 430 may determine the final product score to be 5.
- the adjusted product score may have a value that is below the lower product score value or above the upper product score value.
- floating ranking component 430 may use the second mapping function to also linearly map a product score below the lower product score value or a product score above the upper product score value to a general score. For example, assume that floating ranking component 430 determined, in block 770 above, the value of the adjusted product score as ⁇ 1, which is a value below the lower product score value. In this example, floating ranking component 430 may map the adjusted product score of ⁇ 1 to a general score of ⁇ 4. Similarly, assume that floating ranking component 430 determined, in block 770 above, the value of the adjusted product score as 2, which is a value above the upper product score value. In this example, floating ranking component 430 may map the adjusted product score of 2 to a general score of 14.
- process 600 may include comparing the final product score to general scores of the general search results in the ranked list of general search results (block 630 ) and inserting the product search results into the ranked list of general search results based on the comparison (block 640 ).
- floating ranking component 430 may compare the final product score for the product search result, as determined in connection with block 820 , block 840 , or block 850 of process 800 , to the general scores of the general search results in the ranked list of general search results.
- Floating ranking component 430 may insert the ranked list of product search results into the ranked list of general search results based on comparing the final product score for the product search result to the general scores of the general search results in the ranked list of general search results. In some implementations, floating ranking component 430 may insert a subset of the ranked list of product search results. For example, floating ranking component 430 may insert no product search results, the top ranking product search result, the top three highest ranking product search results, or some other quantity of the top ranking product search results. Additionally, or alternatively, floating ranking component 430 may insert a link to the ranked list of product search results.
- process 600 , 700 , and/or 800 may include additional blocks, different blocks, fewer blocks, and/or differently arranged blocks than those depicted in FIGS. 6-8 . Additionally, or alternatively, one or more of the blocks of process 600 , 700 , and/or 800 may be performed in parallel.
- Systems and methods, as described herein, may provide a ranked list of search results that include product search results and general search results.
- the product search results may be inserted into a position in the ranked list of search results based on the quality of the product search results and the quality of the general search results.
- floating ranking component 430 may mix the product search results with the general search results in multiple positions.
- floating ranking component 430 may, for example, apply the functions/algorithms/parameters, described above as being applied to the highest ranking product search result, to each individual product search result to identify the position, within the ranked list of general search results, at which to insert the individual product search result.
- floating ranking component 430 may use first functions/algorithms/parameters for one product search result and second functions/algorithms/parameters for a different product search result.
- floating ranking component 430 may use the first functions/algorithms/parameters for a first group of product search results, which includes a predetermined quantity of the highest ranking product search results in the ranked list of product search results, and the second functions/algorithms/parameters for a second group of product search results that includes product search results that are not included in the first group.
- floating ranking component 430 may use different functions/algorithms/parameters for each product search result.
- floating ranking component 430 may identify the correct functions/algorithms/parameters to use based on the rank of the product search results in the ranked list of product search results.
- systems and/or methods, as described herein may make the decision as to which position, in a ranked list of general search results, to insert the product search results based solely on the product score of the highest ranking product search result.
- systems and/or methods, as described herein may compare the product score to a range of possible product scores.
- the placement of the product search results among the general search results may depend solely on the relative value of the product score among all possible product scores, and may be independent of the general scores of the general search results.
- the product search results may be placed in a higher, predetermined position, in the ranked list of general search results, independent of the quality of the general search results. If, on the other hand, the product score is at the low end of the range of possible product scores, then the product search results may be inserted into a lower, predetermined position in the ranked list of general search results or simply discarded.
- systems and/or methods, as described herein may make the decision as to which position, in a ranked list of general search results, to insert the product search results based solely on the general scores of the general search results.
- systems and/or methods, as described herein may insert the product search results into a predetermined position in the ranked list of general search results, based only on the general scores.
- systems and/or methods, as described herein may insert product search results, in a ranked list of general search results, only in fixed positions. For example, if the product score for the highest ranking product search result is above a first threshold, the product search results may be inserted before the general search results in the ranked list of general search results. If the product score is below a second threshold, the product search results may be inserted after all the general search results. If the product score is below the first threshold and above the second threshold, the product search results may be inserted in a fixed position X within the ranked list of general search results, where X may correspond to a position between the first general search result and the last general search result.
- systems and/or methods, as described herein may insert product search results, in a ranked list of general search results, only in semi-fixed positions.
- a product score between values A and B may cause the product search results to be inserted in either position X or position Y, where the choice of position X or position Y depends on the general score of the general search result in position X. For example, if the general score of the general search result in position X is above a threshold, the product search results may be inserted at position Y. If, on the other hand, the general score of the general search result in position X is below the threshold, the product search results may be inserted at position X.
- systems and/or methods, as described herein may use the general search engine to rank the product search results or the product search engine to rank the general search results to create a ranked list of search results.
- the product search results may be provided with the general search results in the ranked list of search results.
- floating ranking component 430 may determine a range of general scores in, possibly, an off-line process. Floating ranking component 430 may use the range of general scores to identify a percentile at which a given general search result lies.
- Floating ranking component 430 may then map this percentile to a product score using, for example, a linear mapping function, defined via [a, b] ⁇ [c, d], where ‘a’ and ‘b’ are percentiles relating to general scores and [c, d] are based on the distribution of product scores of product search results returned at the time that the search query is received.
- a linear mapping function defined via [a, b] ⁇ [c, d]
- ‘a’ and ‘b’ correspond to percentiles of product scores
- ‘c’ and ‘d’ are based on the scores of the general search results returned at the time that the search query is received
- the alternative approach described here makes ‘a’ and ‘b’ depend on percentiles of general scores
- ‘c’ and ‘d’ depend on the product scores of the product search results returned at the time that the search query is received.
- systems and/or methods, described herein may determine where to insert a product search result into a list of general search results based on percentiles.
- a particular general search result has a general score of 100, which puts that general search result in the 80 th percentile among all general scores.
- a particular product search result has a product score of 15, which puts that product search result in the 81 st percentile (among on product scores).
- floating ranking component 430 may insert the product search result just above this general search result, since 81 is just bigger than 80.
- mapping functions, systems and/or methods, as described herein may use other types of mapping functions and/or other parameters in relation to the mapping functions.
- floating ranking component 430 may use a monotonically-increasing mapping function, such as an arctangent-based function, or another type of function instead of a linear function.
- specific general search results positions were provided in the example mapping functions described above, other general search result positions, including weighted combinations of general search result positions, or other distributions of general scores may alternatively be used.
- the term component is intended to be broadly interpreted to refer to hardware or a combination of hardware and software, such as software executed by a processor.
Abstract
Description
CTR_multiplier=A1+B1*atan(C1*(CTR−D1)),
where CTR_multiplier may correspond to the clickthrough rate multiplier, atan may indicate arctangent, CTR may correspond to the clickthrough rate information, and A1, B1, C1, and D1 may correspond to constants. Floating ranking
CTR_multiplier=A2+B2*atan(C2*(CTR−D2)),
where A2, B2, C2, and D2 are constants. Floating ranking
ctr — adj — pscore=pscore*CTR_multiplier,
where ctr_adj_pscore may correspond to the clickthrough rate adjusted product score, and pscore may correspond to the product score. In some implementations, floating ranking
f1:[pscore1,pscore2]==>[W5,Avg(W1,W2)],
where pscore1 may correspond to a lower product score value, pscore2 may correspond to an upper product score value, W5 may correspond to the general score of the general search result in position 5 of the ranked list of general search results, which is referred to hereinafter as “general search result 5,” W1 may correspond to the general score of the general search result in
⅕*W1+⅘*W2.
Other weights may alternatively be used.
Final Product Score=f1(adj — pscore).
By way of example, assume that the first mapping function includes the following values:
f1:[1,15]=→[2,Avg(100,100)].
Thus, floating ranking
f2:[pscore3,pscore4]==>[0.5*W10,W6],
where pscore3 may corresponds to a lower product score value, pscore4 may correspond to an upper product score value, W10 may correspond to the general score of the general search result in position 10 of the ranked list of general search results, which is referred to hereinafter as “general search result 10,” and W6 may correspond to the general score of the general search result in position 6 of the ranked list of general search results, which is referred to hereinafter as “general search result 6.”
Final Product Score=f2(adj— pscore).
By way of example, assume that the second mapping function includes the following values:
f2:[0,1]=→[0.5*4,8].
Thus, floating ranking
Claims (20)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/454,818 US8635212B1 (en) | 2012-04-10 | 2012-04-24 | Floating ranking of product results |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201261622247P | 2012-04-10 | 2012-04-10 | |
US13/454,818 US8635212B1 (en) | 2012-04-10 | 2012-04-24 | Floating ranking of product results |
Publications (1)
Publication Number | Publication Date |
---|---|
US8635212B1 true US8635212B1 (en) | 2014-01-21 |
Family
ID=49919327
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/454,818 Active US8635212B1 (en) | 2012-04-10 | 2012-04-24 | Floating ranking of product results |
Country Status (1)
Country | Link |
---|---|
US (1) | US8635212B1 (en) |
Cited By (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130325844A1 (en) * | 2012-05-29 | 2013-12-05 | Nokia Corporation | Causing display of search results |
US20140280082A1 (en) * | 2013-03-14 | 2014-09-18 | Wal-Mart Stores, Inc. | Attribute-based document searching |
US20150161128A1 (en) * | 2013-03-12 | 2015-06-11 | Google Inc. | Ranking Events |
US20160378761A1 (en) * | 2015-06-29 | 2016-12-29 | Google Inc. | Ranking native applications and native application deep links |
US20170277694A1 (en) * | 2016-03-28 | 2017-09-28 | Amazon Technologies, Inc. | Search navigation element |
US20190236158A1 (en) * | 2018-01-30 | 2019-08-01 | Wal-Mart Stores, Inc. | Databases and file management systems and methods for performing a live update of a graphical user interface to boost one or more items |
US20200250576A1 (en) * | 2019-01-31 | 2020-08-06 | Salesforce.Com, Inc. | Machine learning from data steward feedback for merging records |
CN112989232A (en) * | 2019-12-17 | 2021-06-18 | 北京搜狗科技发展有限公司 | Search result ordering method and device |
US11528335B2 (en) * | 2016-12-14 | 2022-12-13 | Rewardstyle, Inc. | System and method for application traffic control |
Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8086600B2 (en) | 2006-12-07 | 2011-12-27 | Google Inc. | Interleaving search results |
-
2012
- 2012-04-24 US US13/454,818 patent/US8635212B1/en active Active
Patent Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8086600B2 (en) | 2006-12-07 | 2011-12-27 | Google Inc. | Interleaving search results |
Cited By (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130325844A1 (en) * | 2012-05-29 | 2013-12-05 | Nokia Corporation | Causing display of search results |
US9582146B2 (en) * | 2012-05-29 | 2017-02-28 | Nokia Technologies Oy | Causing display of search results |
US20150161128A1 (en) * | 2013-03-12 | 2015-06-11 | Google Inc. | Ranking Events |
US9424360B2 (en) * | 2013-03-12 | 2016-08-23 | Google Inc. | Ranking events |
US9600529B2 (en) * | 2013-03-14 | 2017-03-21 | Wal-Mart Stores, Inc. | Attribute-based document searching |
US20140280082A1 (en) * | 2013-03-14 | 2014-09-18 | Wal-Mart Stores, Inc. | Attribute-based document searching |
US10268732B2 (en) * | 2015-06-29 | 2019-04-23 | Google Llc | Ranking native applications and native application deep links |
US20160378761A1 (en) * | 2015-06-29 | 2016-12-29 | Google Inc. | Ranking native applications and native application deep links |
US20170277694A1 (en) * | 2016-03-28 | 2017-09-28 | Amazon Technologies, Inc. | Search navigation element |
US10437838B2 (en) * | 2016-03-28 | 2019-10-08 | Amazon Technologies, Inc. | Search navigation element |
US11528335B2 (en) * | 2016-12-14 | 2022-12-13 | Rewardstyle, Inc. | System and method for application traffic control |
US11785108B2 (en) | 2016-12-14 | 2023-10-10 | Rewardstyle, Inc. | System and method for application traffic control |
US11979469B2 (en) | 2016-12-14 | 2024-05-07 | Rewardstyle, Inc. | System and method for application traffic control |
US20190236158A1 (en) * | 2018-01-30 | 2019-08-01 | Wal-Mart Stores, Inc. | Databases and file management systems and methods for performing a live update of a graphical user interface to boost one or more items |
US10956428B2 (en) * | 2018-01-30 | 2021-03-23 | Walmart Apollo Llc | Databases and file management systems and methods for performing a live update of a graphical user interface to boost one or more items |
US20200250576A1 (en) * | 2019-01-31 | 2020-08-06 | Salesforce.Com, Inc. | Machine learning from data steward feedback for merging records |
US11755914B2 (en) * | 2019-01-31 | 2023-09-12 | Salesforce, Inc. | Machine learning from data steward feedback for merging records |
CN112989232A (en) * | 2019-12-17 | 2021-06-18 | 北京搜狗科技发展有限公司 | Search result ordering method and device |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8635212B1 (en) | Floating ranking of product results | |
US8498984B1 (en) | Categorization of search results | |
US9195717B2 (en) | Image result provisioning based on document classification | |
US9659067B2 (en) | Providing a search results document that includes a user interface for performing an action in connection with a web page identified in the search results document | |
KR101667344B1 (en) | Method and system for providing search results | |
US8745067B2 (en) | Presenting comments from various sources | |
JP5661200B2 (en) | Providing search information | |
US20120095834A1 (en) | Systems and methods for using a behavior history of a user to augment content of a webpage | |
US10572489B2 (en) | Synthesis of webpage snippets using sub-pages of the webpage | |
US9779139B1 (en) | Context-based filtering of search results | |
CN106462613B (en) | Ranking suggestions based on user attributes | |
US8788477B1 (en) | Identifying addresses and titles of authoritative web pages by analyzing search queries in query logs | |
US20110016108A1 (en) | Search result plusbox including restricted results | |
US9654654B1 (en) | Interface to facilitate browsing of items of visual content | |
JP7119124B2 (en) | Action indicator for search behavior output element | |
US8799257B1 (en) | Searching based on audio and/or visual features of documents | |
US9223897B1 (en) | Adjusting ranking of search results based on utility | |
US20220327130A1 (en) | Triggering local extensions based on inferred intent | |
US9280522B2 (en) | Highlighting of document elements | |
US20170075899A1 (en) | Utilizing keystroke logging to determine items for presentation | |
US10127322B2 (en) | Efficient retrieval of fresh internet content | |
US20190065502A1 (en) | Providing information related to a table of a document in response to a search query | |
US8650196B1 (en) | Clustering documents based on common document selections | |
US11941073B2 (en) | Generating and implementing keyword clusters | |
US20140344259A1 (en) | Answering people-related questions |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:BUNN, PAUL;THAKUR, SHASHIDHAR ANIL;SHUKLA, ASHUTOSH;SIGNING DATES FROM 20120412 TO 20120423;REEL/FRAME:028099/0489 |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0299Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
US6836806B1 - System for network addressing - Google Patents
System for network addressing Download PDFInfo
- Publication number
- US6836806B1 US6836806B1 US09/664,179 US66417900A US6836806B1 US 6836806 B1 US6836806 B1 US 6836806B1 US 66417900 A US66417900 A US 66417900A US 6836806 B1 US6836806 B1 US 6836806B1
- Authority
- US
- United States
- Prior art keywords
- content
- address
- identifier
- requesting device
- server
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime, expires
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L45/00—Routing or path finding of packets in data switching networks
- H04L45/30—Routing of multiclass traffic
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L12/00—Data switching networks
- H04L12/28—Data switching networks characterised by path configuration, e.g. LAN [Local Area Networks] or WAN [Wide Area Networks]
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
- G06F16/9574—Browsing optimisation, e.g. caching or content distillation of access to content, e.g. by caching
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L47/00—Traffic control in data switching networks
- H04L47/10—Flow control; Congestion control
- H04L47/12—Avoiding congestion; Recovering from congestion
- H04L47/125—Avoiding congestion; Recovering from congestion by balancing the load, e.g. traffic engineering
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L61/00—Network arrangements, protocols or services for addressing or naming
- H04L61/30—Managing network names, e.g. use of aliases or nicknames
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L61/00—Network arrangements, protocols or services for addressing or naming
- H04L61/45—Network directories; Name-to-address mapping
- H04L61/4505—Network directories; Name-to-address mapping using standardised directories; using standardised directory access protocols
- H04L61/4511—Network directories; Name-to-address mapping using standardised directories; using standardised directory access protocols using domain name system [DNS]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L61/00—Network arrangements, protocols or services for addressing or naming
- H04L61/45—Network directories; Name-to-address mapping
- H04L61/4552—Lookup mechanisms between a plurality of directories; Synchronisation of directories, e.g. metadirectories
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L61/00—Network arrangements, protocols or services for addressing or naming
- H04L61/50—Address allocation
- H04L61/5069—Address allocation for group communication, multicast communication or broadcast communication
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L65/00—Network arrangements, protocols or services for supporting real-time applications in data packet communication
- H04L65/1066—Session management
- H04L65/1101—Session protocols
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L65/00—Network arrangements, protocols or services for supporting real-time applications in data packet communication
- H04L65/60—Network streaming of media packets
- H04L65/61—Network streaming of media packets for supporting one-way streaming services, e.g. Internet radio
- H04L65/611—Network streaming of media packets for supporting one-way streaming services, e.g. Internet radio for multicast or broadcast
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L65/00—Network arrangements, protocols or services for supporting real-time applications in data packet communication
- H04L65/80—Responding to QoS
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
- H04L67/1001—Protocols in which an application is distributed across nodes in the network for accessing one among a plurality of replicated servers
- H04L67/1004—Server selection for load balancing
- H04L67/1008—Server selection for load balancing based on parameters of servers, e.g. available memory or workload
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
- H04L67/1001—Protocols in which an application is distributed across nodes in the network for accessing one among a plurality of replicated servers
- H04L67/1029—Protocols in which an application is distributed across nodes in the network for accessing one among a plurality of replicated servers using data related to the state of servers by a load balancer
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/14—Session management
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/60—Scheduling or organising the servicing of application requests, e.g. requests for application data transmissions using the analysis and optimisation of the required network resources
- H04L67/63—Routing a service request depending on the request content or context
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F2216/00—Indexing scheme relating to additional aspects of information retrieval not explicitly covered by G06F16/00 and subgroups
- G06F2216/09—Obsolescence
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L2101/00—Indexing scheme associated with group H04L61/00
- H04L2101/30—Types of network names
- H04L2101/33—Types of network names containing protocol addresses or telephone numbers
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L2101/00—Indexing scheme associated with group H04L61/00
- H04L2101/60—Types of network addresses
- H04L2101/604—Address structures or formats
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L2101/00—Indexing scheme associated with group H04L61/00
- H04L2101/60—Types of network addresses
- H04L2101/618—Details of network addresses
- H04L2101/659—Internet protocol version 6 [IPv6] addresses
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L2101/00—Indexing scheme associated with group H04L61/00
- H04L2101/60—Types of network addresses
- H04L2101/618—Details of network addresses
- H04L2101/663—Transport layer addresses, e.g. aspects of transmission control protocol [TCP] or user datagram protocol [UDP] ports
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
- H04L67/1001—Protocols in which an application is distributed across nodes in the network for accessing one among a plurality of replicated servers
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
- H04L67/1001—Protocols in which an application is distributed across nodes in the network for accessing one among a plurality of replicated servers
- H04L67/10015—Access to distributed or replicated servers, e.g. using brokers
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/10—Protocols in which an application is distributed across nodes in the network
- H04L67/1001—Protocols in which an application is distributed across nodes in the network for accessing one among a plurality of replicated servers
- H04L67/1004—Server selection for load balancing
- H04L67/101—Server selection for load balancing based on network conditions
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L69/00—Network arrangements, protocols or services independent of the application payload and not provided for in the other groups of this subclass
- H04L69/24—Negotiation of communication capabilities
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L69/00—Network arrangements, protocols or services independent of the application payload and not provided for in the other groups of this subclass
- H04L69/30—Definitions, standards or architectural aspects of layered protocol stacks
- H04L69/32—Architecture of open systems interconnection [OSI] 7-layer type protocol stacks, e.g. the interfaces between the data link level and the physical level
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L69/00—Network arrangements, protocols or services independent of the application payload and not provided for in the other groups of this subclass
- H04L69/30—Definitions, standards or architectural aspects of layered protocol stacks
- H04L69/32—Architecture of open systems interconnection [OSI] 7-layer type protocol stacks, e.g. the interfaces between the data link level and the physical level
- H04L69/322—Intralayer communication protocols among peer entities or protocol data unit [PDU] definitions
- H04L69/329—Intralayer communication protocols among peer entities or protocol data unit [PDU] definitions in the application layer [OSI layer 7]
Definitions
- This invention relates generally to systems for providing addresses used on the Internet. More specifically, the invention relates to methods for configuring address information so as to provide multiple sources for an object of interest.
- an address indicates a single location for an object.
- the information or content of an object can reside at multiple places, especially on the Internet, where an object, e.g., a movie file, can reside at multiple servers.
- an object e.g., a movie file
- the static format for addressing an object only allows addressing an object at one of those multiple locations, when the object is removed from the addressed location, a user no longer is able to access the object with the given address.
- an address comprising a protocol identifier is utilized along with a port identifier.
- the address and port identifier are coupled to form a single address string.
- a data structure in another embodiment, provides a protocol identifier field, an IP identifier field, a server identifier field, a server port field, and a file designation field.
- a port identifier is provided by a requestor as part of an address, the address is transmitted to an intermediate device, the intermediate device transmits the port identifier to a data provider device, and the data provider device addresses the requestor by utilizing the port identifier.
- FIG. 1 is a block diagram of an embodiment of a content distribution system
- FIG. 2 is a block diagram of an embodiment of an active directory portion of the content distribution system
- FIG. 3A is a block diagram of an embodiment of an origin server portion of the content distribution system
- FIG. 3B is a block diagram of an embodiment of an external origin server portion of the content distribution system
- FIG. 4A is a block diagram of an embodiment of a content exchange portion of the content distribution system
- FIG. 4B is a block diagram of another embodiment of a content exchange portion of the content distribution system.
- FIG. 4C is a block diagram of an embodiment of a content exchange site including multiple content exchange servers
- FIG. 5 is a block diagram of an embodiment of a client computer portion of the content distribution system
- FIG. 6 is a block diagram of an embodiment of a content distribution system
- FIG. 7A is a first portion of a flow diagram of an embodiment of a process for distributing content to a user
- FIG. 7B is a second portion of the flow diagram of FIG. 7A;
- FIG. 8 is a flow chart demonstrating a method for implementing an embodiment of the invention.
- FIG. 9 is a flow chart illustrating a method for implementing another embodiment of the invention.
- FIG. 10 is a flow chart illustrating a method for implementing a format for an embodiment of the invention.
- FIG. 11 is a flow chart illustrating a method for implementing an embodiment of the invention.
- FIGS. 12 a and 12 b are a flow chart illustrating a method for implementing an embodiment of the invention.
- FIG. 13 is a diagram illustrating combining a first address and a second address to form a third address.
- FIG. 14 illustrates a system which utilizes the same data path for requesting data and providing data between a requestor and provider.
- FIG. 15 illustrates an embodiment of the invention that provides port identifiers that permit alternate data paths to be utilized in requesting and sending data.
- FIG. 16 illustrates an embodiment of the invention for providing a data structure comprised of metadata.
- FIG. 17 illustrates an example of the data structure shown in FIG. 16 .
- FIG. 18 illustrates a method for implementing one embodiment of the invention.
- FIGS. 19 a and 19 b illustrate a method for implementing an embodiment of the invention.
- the present invention provides a system for implementing an addressing scheme which provides a dynamic method of addressing an object on a network.
- the method provides for a first address to be combined with metadata about the object so as to form a third address which also is capable of addressing the same object.
- the invention lends itself to implementation in a wide variety of settings. One such setting is in the delivery of video content on the Internet. Thus, to provide a setting for the implementation of the invention, a system will first be described which can utilize the various embodiments of the invention. Then, the addressing system will be explained in greater detail.
- the content distribution system 100 includes an active directory 104 , one or more origin servers 108 , one or more client computers 112 , one or more content exchanges 116 , one or more external origin servers 118 , the Internet 120 and a crawling directory 124 .
- a particular client computer 112 interacts with the active directory 104 to select a content object for download.
- the object can be played during download if it is streaming media or can be stored for a later time.
- the content object could be any type of information, such as audio, video or data, that is available for download from a network.
- the request for the content object is forwarded to the appropriate origin server 108 along with preference information from the client computer 112 .
- the origin server 108 decides where the object is downloaded from. In order to provide sufficient QOS, any of the content exchanges 116 or even the origin server 108 itself could provide the object.
- the active directory 104 can be the interface to the client computer 112 for selecting a content object.
- Software for both the origin server 108 and optionally for the client computer 112 can be downloaded from the active directory 104 to enable the content distribution system 100 .
- Either a directory interface page or a search interface page may be used to determine the content object desired.
- the interfaces are maintained in an active manner to avoid broken links to content objects on the origin servers 108 .
- the active directory 104 can provide a path back to the proper origin server 108 .
- Other embodiments could have multiple active directories. Users of the system could be divided amongst the several active directories to distribute the loading. Additionally, the other active directories could be used for redundancy such that if one active directory were offline, the others would absorb the loading.
- the origin server 108 provides the source of a content object, directs a user to a preferred source of the content object and provides directory information to the active directory 104 .
- Content objects are introduced to the system 100 by origin servers 108 . Introduction involves selection by an origin server administrator of the content objects to make available to the active directory 104 . The administrator is person or system that manages the origin server 108 . The content objects could include previously stored information or a streaming feed of information. According to a predetermined cycle, the origin server 108 provides a catalog of the selected information that is updated as the content on the origin server 108 changes.
- the origin server 108 determines the preferred source to direct the client computer 112 to in order to download the content object.
- the preference list of the client computer 112 , the loading of the content exchanges and the location of copies of the content object are all considerations of the origin server 108 in redirecting the client computer to the preferred source of the information. That source could be the origin server 108 itself or one of the content exchanges 116 .
- the user directs the client computer 112 to find the desired content object and subsequently download that object.
- the client computer 112 determines the content exchanges 116 that can deliver content with the adequate QOS.
- the process of determining a content exchange 116 with adequate QOS involves, for example, receiving test information from the content exchanges that are likely to produce the best results in preparing a preferred list.
- the user can modify the preferred list of content exchanges 116 if a customized approach is desired.
- the origin server 108 is deciding the source of the content object, the preference information is used to provide adequate QOS.
- the external origin servers 118 can be additional sources of content objects available to the client computer 112 .
- external origin servers 118 are coupled to a content exchange 116 .
- the content exchanges 116 are caches for content objects. A number of these content exchanges 116 are distributed to different points of the Internet 120 to cache content objects. Information can be cached based upon a number of considerations, such as the desirability of information to users, as a service to origin servers 108 who want their content readily available to users, or as a service to users who want improved QOS. Grouping of the content exchanges 116 could be in clusters or individually to service the demand of client computers 112 for content objects.
- a request by the content exchange 116 to other content exchanges is made for that content object. If no other content exchanges 116 have the content object, the active directory 104 is queried for the origin server 108 who is the source of the content object and the content object is downloaded from there. While the content exchange 116 is gathering the content object, the client computer 112 is receiving the initial portions that are available. The content object could be stored in pieces on several content exchanges 116 and the requesting content exchange 116 will retrieve those pieces to reassemble the whole content object as needed by the client computer 112 .
- a request by the content exchange 116 to an external origin server 118 can be made retrieve the requested content object.
- a crawling directory 124 is used to supplement the catalog information reported by the origin servers 108 .
- the active directory 104 could display content objects available from the origin servers 108 and other content objects uncovered by the crawling directory 124 .
- crawling directories 124 catalog the content objects and other information they encounter. For example, a keyword search of the catalog can direct the user to a content object not available from any origin server on the system 100 .
- One of the content exchanges 116 could be selected by the active directory 104 to cache the content object as the client computer 112 downloads it.
- only one crawling directory 124 is used in this embodiment, other embodiments could use a number of crawling directories to offer additional search results.
- the Internet 120 is comprised of servers linked together by routers. Data is divided into packets that travel through the Internet 120 by hopping from one router to the next until the destination is reached. Each packet may take a different route through the Internet and arrive at the destination at a different time. Additionally, some packets can be lost during travel through the Internet 120 as the bandwidth of any router saturates. As the number of hops between the source of a content object and the destination increases, so does the likelihood of excessive delay and packet loss.
- the smallest bandwidth between any two routers in the path defines the maximum bandwidth of that path.
- the bandwidth from the Internet 120 to the client computer has the least bandwidth allocation.
- some other hop between routers has the smallest bandwidth. Caching the content object in a content exchange 116 with a minimal amount of hops between the content exchange 116 and the client computer 112 improves the likelihood of adequate QOS.
- Downloading the content object at a desired data-rate that does not exceed the data-rate of the client computer to the Internet 120 is adequate QOS.
- the maximum QOS a user can expect is defined by the speed of their network connection, the processing power of their computer and other factors.
- the minimum QOS is subjectively defined by the user based upon the quality they desire within certain limits. For example, a user with a 400 Kbps network connection and a fast computer may have a choice of a 28 Kbps, 56 Kbps, or 128 Kbps stream for an audio clip from which the user chooses the 128 Kbps stream. So long as the datarate provided by the client computer is in the range of 128-400 Kbps, adequate QOS is possible for that stream.
- FIG. 2 a block diagram of an embodiment of an active directory portion 104 of the content distribution system 100 is shown. Included in the active directory 104 are a dynamic domain name server (DNS) 204 , a server manager 208 , a directory page 212 , a search page 216 , a download page 220 , a subscriber database 224 , a server database 228 , a content exchange database 232 , and a route database 234 .
- DNS dynamic domain name server
- the content distribution system 100 interacts with the active directory 104 to provide directory information to the user and assist in downloading a content object to the user.
- Both the user of the client computer 112 and the administrator of the origin server 108 are subscribers to the content distribution system 100 .
- Software is downloaded from a download page to the user and/or administrator.
- the software for the client computer 112 is optional in some embodiments and improves QOS.
- the software for the origin server 108 allows the active directory 104 to update the content available on the system 100 and to direct the client computer 112 to a preferred source for receiving that content.
- the client computer 112 attaches to the domain of the active directory 104 to find a desired content object.
- the user may use a directory page 212 or search page 216 to find the content object.
- the search page 216 may be a traditional boolean search engine that accesses a catalog of the content objects provided by all origin servers 108 as well as information gathered from the crawling directory 124 .
- Other embodiments could only display information from the crawling directory 124 after a search of the content from the origin servers 108 is unsuccessful or omit information from the crawling directory 124 altogether.
- the catalog of content objects for all origin servers 108 is maintained in the server database 228 .
- the directory page 212 organizes the possible content objects in a hierarchy of categories that are organized by subject. For example, the first page might show a number of topics of general interest where the user selects sports. In the next page, which is one level down in the hierarchy, a number of sports are displayed where the user selects football. Down another level in the hierarchy, the user may select the San Diego ChargersTM to see another page of related content object links.
- the administrator categorizes the content on the origin server 108 to allow the directory page 212 to present it properly.
- the administrator can choose a category for content objects in an HTML SSI tag associated with that content object.
- This classification is harvested and stored on the active directory to allow presenting content objects in different categories.
- a moderator may describe and arrange content objects in the categories for the directory page 212 . For example, the moderator could mark certain content objects for more prominent display and/or add a review for the content object.
- the server manager 208 maintains information on all client computers 112 , all origin servers 108 , all external origin servers 118 , all content exchanges 116 , and all content objects on origin servers 108 .
- the information related to client computers 112 and origin servers 108 is maintained in the subscriber database 224 .
- the full name, a login name, a password, a unique identifier, token credits available, and other information is maintained in the subscriber database 224 for each user associated with a client computer 112 .
- This database 224 also holds the last time the origin server 108 was verified, an Internet Protocol (IP) address for the origin server 108 , the port the content manager server runs upon, on-/offline status of the origin server 108 , a banner ad URL, a name for the origin server 108 , a description of the origin server 108 , the credits or tokens needed to use the origin server 108 or other billing model, and the number of connections or viewers allowed at one time.
- IP Internet Protocol
- Information on content objects for all origin servers 108 is maintained in the server database 228 .
- the origin server name, content object file name and path are stored along with category information, a brief description and keywords.
- the server database 228 is queried to provide content selections to the user during navigation of the directory and search pages 212 , 216 .
- the server manager 208 periodically interacts with the origin server 108 to get the most recent changes to the catalog of content objects and to determine if the origin server 108 has gone offline. Whenever an origin server 108 goes offline, the entries in the server database 228 corresponding to that origin server 108 are removed and the status information in the subscriber database 224 is updated.
- the entries in the server database 228 remain even after the origin server 108 goes offline.
- the status is updated to reflect that the content associated with the origin server is unavailable, but the information remains stored in the server database 228 . If the status is updated to online, the information is once again presented to users that are searching for content objects.
- an origin server 108 may indicate to the active directory 104 that it is going offline for a period of time. Presuming the period of time is short, the active directory can keep information in the server database 228 without presenting it to users.
- a list of the content exchanges 116 available to the system 100 is maintained by the server manager 208 in the content exchange database 232 .
- the content exchange database 232 can include a list of IP addresses for all possible content exchanges 116 within the content distribution system 100 .
- the content exchange database 232 can include a number of content exchange fields associated with each content exchange 116 .
- fields associated with each content exchange 116 in the content exchange database 232 can include a content exchange identifier, a content exchange site, a content exchange provider, a content exchange name, a content exchange location, a content exchange status, an icon, or any other desired or needed information.
- the content exchange identifier and content exchange site identify a unique content exchange 116 at a particular content exchange site.
- the content exchange provider is an indicator of the party responsible for the content exchange, such as XYZ company.
- the content name is a domain name and the content exchange location can be geographic coordinates for a content exchange 116 .
- the content exchange database 232 includes a content exchange identifier, a content exchange site, a content exchange IP address, a content exchange provider, a content exchange name, a content exchange location, and an icon for each content exchange 116 in the content exchange database 232 .
- the content exchange database 232 can be regionalized or partitioned by a variety of methods including, but not limited to, improved QOS criteria or subscription services criteria. Additionally, the content exchange database 232 can include a listing of alternative active directories 104 , origin servers 108 , or any other useful or necessary information.
- the content exchanges 116 in the system 100 regularly provide status to the server manager 208 . As content exchanges 116 become available or unavailable, their operational status is reported to the server manager 208 and recorded in the content exchange database 232 .
- the content exchange database 232 can include additional status information including content exchange 116 loading, capacity, utilization, and health.
- the routing database 234 includes a list of external origin servers 118 .
- the routing database 234 includes identification, status and organization information related to the external origin servers 118 .
- Identification information can include an IP address and a domain name for an external origin server 118 .
- Status information can include availability, loading or other status about the external origin server.
- Organization information can include a list of alternative external origin servers 118 .
- the routing database 234 includes an IP address and a domain name for each external origin server 118 .
- identifying an external origin server 118 in the routing database 234 is the mechanism for associating the external origin server 118 with the content distribution system 100 .
- each external origin server 118 in the routing database there are a list of user names that are allowed to use a content exchange 116 to access the information on the external origin server 118 .
- the user name is unique to the user of the client computer 112 .
- a list of external origin servers 118 a client computer can route through a content exchange is provided to the client computer 112 .
- the client computer 112 uses the information from the routing database to redirect user requests for an external origin server 118 to a content exchange 116 .
- bandwidth is offloaded from the external origin server 118 to the content exchange 116 .
- the user may pay the owner of the content exchange and/or the administrator of the origin server for this enhanced service.
- the dynamic DNS 204 provides an origin server name for each IP address for the origin servers 108 .
- the origin server name uniquely identifies the origin server 108 on the Internet 120 . This information is maintained in the subscriber database 224 .
- the content exchange 116 does not know the 1 P address of the origin server 108 that provided the content object to the content exchange 116 , but knows the origin server name.
- the dynamic DNS 204 is queried to determine the IP address or domain name of the origin server 108 that is the source of the content object. If a domain name is retrieved from the dynamic DNS 204 the IP address corresponding to that domain name is retrieved from a DNS.
- FIG. 3A a block diagram of an embodiment of an origin server portion 108 of the content distribution system 100 is shown.
- the origin server 108 is managed by an administrator and provides one source of content objects to the content distribution system 100 .
- QOS is provided by the origin server 108 directing the client computer to a content exchange 116 that can efficiently deliver the desired content object.
- Included in the origin server 108 are a content source 304 , a content server 308 , a content manager 312 , a local content catalog 316 , a content location database 320 , content exchange information 324 , and a health check 330 .
- Content is provided to the origin server 108 by a content source 304 .
- the content source 304 could be a live web cam, a video or audio feed, a data object, a data stream, a video tape or audio tape, an optical or magnetic disk, or any other content delivery mechanism.
- Content objects are delivered by the content source 304 to the content server 308 for possible distribution to the system 100 .
- Time and date information is maintained in each content exchange 116 for the content objects or portions of content objects maintained therein.
- the time and date information allows distinguishing content objects which may have the same origin sever name, path name and file name.
- Other embodiments could use any unique code such as a checksum, CRC or hash to uniquely identify a content object.
- All content objects of the origin server 308 are stored on the content server 308 .
- the administrator can select a content object or groups of content objects for publishing to the system 100 while leaving other content objects on the content server 308 that are unavailable to the system 100 .
- Some content objects are discreet files, but others are streams of content produced, for example, by live web cams.
- the software that runs the content server 308 may be integrated with the software of the content manager 312 .
- the content manager 312 publishes the desired content objects to the system 100 and directs users to the preferred content exchange 116 for downloading content objects associated with the content manager 312 .
- the content manager 312 selects content objects or groups of content objects by filename, directory or drive volume for publishing to the active directory 104 . Some content objects on the content server 308 may be excluded from publishing such that they are not available to the system 100 .
- the content objects selected for publishing to the system are maintained in a local content catalog 316 .
- Entries in the local content catalog 316 are kept current by the content manager 312 as the objects corresponding to those entries may become unavailable or updated.
- the content object file name and path are stored along with category information, a brief description and keywords.
- the local content catalog 316 is sent by the content manager 312 to the active directory 104 for entry to the server database 228 .
- changes to the local content catalog 316 are sent to the server database 228 to keep the directory information as current as possible. Updates could happen on a regular interval such as every two minutes and/or whenever a change in the local content catalog is made.
- the content manager 312 also knows the location of all portions of content objects associated with that content manager 312 . Upon attaching to the system 100 , the content manager 312 contacts each of the content exchanges 116 for status. The content exchange 116 periodically reports on its content object or content object portions to the associated content managers 312 . Armed with this information, the content manager 312 can direct a client computer 112 to a content exchange 116 that may have some or all of the desired content object available for download.
- Location information for content objects that is reported by all the content exchanges 108 is maintained by the content manager in the content location database 320 .
- the content manager 312 can determine the content exchanges 116 that contain a content object or a portion of a content object.
- the presence of the content object in a particular content exchange 112 can affect the routing determination.
- the content exchange information store 324 holds information on all active content exchanges 116 .
- the content exchange database 232 in the active directory 104 is downloaded into the content exchange information store 324 .
- All the content exchanges 116 listed in the content exchange information store 324 are queried after power-up for status information that is retained as content exchange information 324 .
- the status information includes the number of concurrent links used, total number of concurrent links allowed, bandwidth utilization, and cache chum rate.
- the chum rate of the cache is the amount of time unused data remains in the cache and is indicative of the loading of the cache. For example, data is usually flushed out of the cache quickly for content exchanges 116 that are busy relative to the amount of storage in the cache. However, some embodiments that could have sticky content objects that remains pinned in the content exchange 116 for a period of time regardless of use.
- the content manager 312 intelligently redirects the client computer 112 wanting a content object to the preferred source for that object.
- Preference information provided from the client computer 112 is used to determine the sources of the content object preferred by the client computer 112 . This information is used along with the current locations of the content object and the loading of the possible content exchanges in order to direct the client computer 112 to the preferred content exchange 116 for download of the content object.
- the content manager 312 can regulate access to content objects.
- a login dialog can be presented if the administrator has secured the content object.
- the user may enter a user name and/or password in the login dialog to enable redirection of the client computer 112 to a source for the content object.
- This user name and/or password is in addition to any required for the active directory 104 .
- the user name and/or password or login information is checked against a list of acceptable login information previously stored on the origin server 108 . Access to a whole origin server 108 or a volume, a directory or a content object on the origin server 108 may be regulated in this manner.
- the origin server 108 or active directory 104 allow the origin server 108 or active directory 104 to preload content objects on a content exchange 116 .
- the requests for content objects are monitored to determine desirability. Desirability information, billing information and/or other considerations are used to determine which content objects to preload on a content exchange 116 .
- Either the origin server 108 or active directory 104 can request the content objects from a content exchange 116 to preload them there. Periodically, the content objects could be requested to keep them loaded on the content exchange such that they are not unloaded because of inactivity.
- the health check 330 can be either a hardware or software application which provides operational characteristics of an associated origin server 108 .
- the health check 330 provides a single indication of origin server 108 status.
- the single indication is a normalized value between zero and one indicating a combination of origin server characteristics. For example, it could include a CPU load, a CPU temperature, a number of concurrent connections, and/or a number of requests an origin server is facilitating.
- the health check 330 could monitor characteristics of a content exchange 116 while running on another content exchange 116 or origin server 108 .
- FIG. 3B a block diagram of an embodiment of an external origin server portion 118 of the content distribution system 100 is shown.
- the external origin server 118 differs from the origin server 108 in that the external origin server 118 does not have content manager software installed upon it. Included in the external origin server 118 are a content server 308 and a content source 304 .
- the administrator of the external origin server 118 determines one or more client computers 112 authorized for receiving content objects through a content exchange 116 .
- the routing database 234 is updated by the administrator to allow individual client computers 112 to access the content objects through a content exchange 116 .
- a web page on the active directory provides an interface to entering information on client computers 112 into the routing database 234 .
- Other embodiments could automate the interface between the external origin server 118 and the routing database 234 .
- the updates to the routing database 234 are downloaded and stored locally by client computer 112 . Subsequent attempts to access the external origin server 118 are redirected to a content exchange 116 to service that request. Redirection in this way allows an external origin server 118 to redirect client computers 112 to a content exchange 116 without assistance from content manager software.
- An external origin server 118 may have one or more content exchanges 116 assigned to carry content objects for the external origin server 118 .
- the routing database 234 could redirect subscribing client computers to one or more of these content exchanges 116 . If the client computer were allowed to use two or more of these content exchanges 116 , a client-side routing analysis would be performed on the two or more content exchanges to allow ranking of the relative QOS between them.
- the content objects of an external origin server 118 can be preloaded to a content exchange(s) allocated to provide those content objects.
- the active directory 104 can crawl the external origin server 118 to determine the content objects available from that server 118 .
- the available content objects may be added to the crawling directory 124 .
- the active directory 104 requests each content object from the associated content exchange(s) in order to cause loading of each content object on the associated content exchange(s). In this way, content objects are preloaded on the associated content exchanges.
- FIG. 4A a block diagram of an embodiment of a content exchange portion 116 of the content distribution system 100 is shown.
- the content exchange 116 caches content objects requested by client computers 112 under the control of the content manager 312 .
- Included in the content exchange 116 are a tracking system 402 , and a content node 406 .
- the tracking system includes a content tracker 404 , a health check 428 , status information 420 , a local content catalog 416 , and an origin server database 424 while the content node 406 includes a content controller 408 and a content store 412 .
- the health check 428 can be either a hardware or software application which provides operational characteristics of an associated content exchange 116 .
- the health check 428 provides a single indication of content exchange 116 status.
- the single indication may be a normalized value between zero and one indicating a combination of content exchange characteristics including, for example, a CPU load, a CPU temperature, a number of concurrent connections, and a number of requests a content exchange is facilitating.
- the health check 428 could monitor characteristics of a content exchange 116 while running on another content exchange 116 , origin server 108 or location.
- the content store 412 holds the content objects available for download to the client computers 112 from that content exchange 116 .
- the name of the origin server 108 providing the content object along with path information and the filename is stored with the content object in the content store 412 .
- the client computers 112 connect to the content store 412 and download the content object file or data stream.
- old content objects are removed.
- the age of a content object relates to the last time a content object was accessed. Some content objects on the store 412 never age such that they stay in the store 412 for a predetermined time.
- An origin server 108 could arrange for the content exchange 112 to store a content object for a predetermined period of time.
- the content object may not be currently loaded in the content store 412 .
- the content store 412 notifies the content controller 408 of the unfulfilled request for the content object.
- the content controller 408 locates missing content objects or portions thereof in other content exchanges 116 or from the content server 308 that originated the content object.
- the missing content objects are loaded into the content store 412 by the content controller 408 such that the client computer 112 can download this information.
- the content controller 408 When a content object is missing from content store 412 , the content controller 408 first checks with other content exchanges 116 to determine if the object is available. If no content exchange 116 has the desired content object, the content server 308 that originated the information is queried for the content object. The content store 412 does not include the IP address for the originating content server 308 so the dynamic DNS 204 is queried for that information. Given the origin server name, the dynamic DNS 204 provides the IP address such that the content controller 408 can request the content object from the proper content server 308 .
- the content tracker 404 reports to the system 100 the current items in the content store 412 and status information for the content exchange 116 .
- the local content catalog 416 records the origin server name, path and filename for each content object or portion of a content object in the content store 412 . As new items are added to and old items are removed from the content store 412 , the local content catalog 416 is updated.
- a content manager 312 connects to the system 100 , a query is made to all content trackers 404 to determine what portions of content objects are stored on the content stores 412 .
- the initial query provides a baseline to which the content tracker 404 updates as changes are made to the content store 412 .
- the changes are sent directly to each of the content managers 312 that has content stored in the content store 412 .
- the dynamic DNS 204 is used during this process to determine the IP address corresponding to the origin server name for each content object.
- the content tracker 404 also provides status information for the content exchange 116 to the content mangers 312 .
- the status information is sent periodically to each of the content managers 312 as a broadcast or multicast, for example, every five minutes and/or when changes occur.
- the status information could include the number of concurrent links to the content exchange currently in use, the total number of concurrent links allowed, the bandwidth utilization, and the cache churn rate.
- the status information is posted to a central location that the content manager 312 can query when determining where to send a client computer 112 for a downloading a content object.
- the content tracker 404 maintains the origin server database 424 to track the origin servers 108 active in the system 100 . After attaching to the system, all origin servers 108 identify themselves to the content trackers 404 . The content trackers 404 record the origin server name and IP address in the origin server database 424 . A query to the dynamic DNS provides the IP address for a given origin server name. If an origin server 108 notifies the content tracker 404 of impending unavailability or if the content tracker 404 cannot contact a particular origin server, the entry for that origin server is removed from the origin server database 424 . Additionally, the content corresponding to that origin server 108 may be purged from the content store 412 and the local content catalog 416 is updated. In some embodiments, the content object and content object portions are not purged, but are simply tagged for deletion as the storage space is needed.
- the content controller 408 can be instructed by the system 100 to acquire and retain predetermined content objects in the content store 412 .
- Content objects that are anticipated to be wanted can be preloaded in preparation for the demand.
- the desirability of a content object can be determined by monitoring click-throughs to those content objects from the search and directory pages 212, 216.
- content objects related to a famous person could be loaded onto content stores 412 immediately before a biography program on the famous person is aired on network television.
- users could subscribe to a service that loads content objects to some content exchanges 116 .
- a scheduled network program could be loaded to coincide with a TV broadcast the user could view over the Internet 120 in lieu of the TV broadcast. The content would be available without delay to the subscribed users.
- FIG. 4B a block diagram of another embodiment of a content exchange portion 116 of the content distribution system 100 is shown.
- This embodiment includes multiple content nodes 406 coupled to a single tracking server 402 .
- a content bus 428 allows content nodes 406 to check each others content stores 412 for missing content objects.
- the content bus 428 could also couple to other content notes in other locations.
- the content bus 428 may or may not travel in part over the Internet 120 .
- FIG. 4C a block diagram of an embodiment of a content exchange site 432 including multiple content exchange servers 116 is shown. Even though the content exchange site 432 includes multiple content exchange servers 116 , it appears to the system a single content exchange 116 . The load of the content exchange site 432 is distributed among the content exchange servers 116 .
- a switch 436 such as a layer four switch, distributes the content object requests to the content exchanges 116 and aggregates the spooled responses to the Internet 120 .
- FIG. 5 a block diagram of an embodiment of a client computer portion 112 of the content distribution system 100 is shown.
- the client computer 112 communicates to the Internet 120 in order to deliver content to a user.
- Included in the client computer 112 are a viewer object proxy 504 , a content processing program 508 , preference information 512 , a network interface 516 , and hosted server routing 520 .
- the content processing program 508 is typically software that interprets or processes a content object downloaded from the Internet 120 .
- Examples of content processing programs 508 include web browsers, file transfer protocol (FTP) software, gopher software, news (NNTP), mail programs, streaming media players, non-streaming media players, and other software.
- FTP file transfer protocol
- NTP news
- mail programs streaming media players, non-streaming media players, and other software.
- the Internet communication from content processing program 508 that is normally sent directly to the Internet is redirected to the viewer object proxy 504 .
- the viewer object proxy 504 serves as intermediary between the Internet 120 and the content processing program 508 . After installation of the viewer object proxy 504 , it determines its general location relative to known points on the Internet 120 . Content exchanges 116 that are reasonable candidates for providing sufficient QOS are tested to determine the number of hops necessary and the latencies between each content exchange 116 and the viewer object proxy 504 . A weighting of QOS factors, such as the number of hops and bandwidth achieved, is recorded as preference information 512 and is passed as meta-data to the content manager 312 in an HTTP header.
- meta-data could travel through a dedicated port, an IP address, a URL, a header, or other logical channel.
- the preference information 512 is the result of network analysis performed from the client computer perspective 112 .
- the preference information 512 is communicated to the content object manager 312 which in turn selects an appropriate content exchange 116 for the client computer 112 .
- the preference information 512 is updated using automated tests or is updated manually by the user. Subsequent tests take into account the previous results to efficiently consider preferred content exchanges. For example, the first analysis may check one hundred content exchanges, but a subsequent analysis could eliminate the poor performing content exchanges such that only fifty are analyzed.
- the preference information 512 includes a list of content exchanges 116 and their associated QOS values resulting from client-side network analysis.
- the multiple pathways are separated by port, IP address, server identification (ID), and/or other mechanisms.
- Client-side network analysis could be used to determine a QOS value associated with each pathway to an external origin server 118 or any source of a content object with multiple pathways.
- the origin server name is provided to the viewer object proxy 504 .
- the origin server name is used for the viewer object proxy 504 to query the dynamic DNS 204 for the IP address of the origin server 108 .
- the content processing program 508 is redirected to the content manager 312 for the desired content object.
- the content manager 312 is passed the preference information 512 to allow routing to the appropriate content exchange 116 .
- the preference information 512 includes the preferred ten content exchanges, but could be adjusted by the user.
- the viewer object proxy 504 can be HTTP-specific but protocol independent for routing information. Thus, routing information is transferred according to HTTP, but the actual routing information is protocol independent. However, one skilled in the art would recognize that the viewer object proxy 504 can also be configured to work with other network protocols as needed. For example, the viewer object proxy 504 can also be configured to operate in accordance with FTP, NNTP, RTP, RTSP, SMTP, or SHOUT etc.
- the client computer 112 includes a host server routing 520 database.
- This host server routing 520 can include information related to external origin servers 118 accessible by the client computer 112 .
- host server routing 520 is a portion of the routing database 234 included in the active directory 104 .
- the client computer 112 includes a network interface 516 that connects the viewer object proxy 504 to the Internet 120 .
- network interfaces 516 include analog modems, DSL modems, ISDN, cable modems, satellite modems, cellular modems, etc.
- the client computer is associated with a home user.
- the client computer could serve digital movies to a theater or provide content objects to a corporate network user, a hotel patron or apartment complex.
- FIG. 6 a block diagram of an embodiment of a content distribution system 600 is shown. This figure depicts data flow between data blocks without showing transport over the Internet 120 . It is to be understood, however, that the Internet 120 is used in some embodiments. Also, the figure is somewhat simplified in that some blocks from FIGS. 2-5 and the external origin server(s) 118 and crawling directory 124 are not included to simplify the FIG. 6 .
- the network interface 516 is the connection to the Internet 120 for the client computer 112 .
- the client computer 112 connects to the directory and search pages 212, 216 to allow the user to select content objects for download.
- redirection of the client computer 112 from the active directory 104 to the appropriate origin server 108 uses the dynamic DNS 204 .
- Preference information 512 is passed to the content manager 312 to assist its selection of the source for the content object.
- the content object is downloaded from one of the content exchanges 116 or from the content server 308 .
- the active directory 104 interacts with the other modules in the system 600 .
- the client computer 112 accesses the directory and search pages 212, 216 to select a content object.
- the content tracker 404 and content manager 312 respectively provide status and catalog information to the server manager 208 .
- Account information is provided to the server manager 208 by the administrator of the origin server 108 and by the user of client computer 112 to maintain the subscriber database 224 . Redirection from the origin server name to the IP address of the origin server 108 is provided to the viewer object proxy 504 , the content tracker 404 and the content controller 408 by the dynamic DNS 204 .
- the origin server 108 communicates with the server manager 208 , the client computer 112 , the content tracker 404 , the content store 412 , and the content controller 408 .
- the local content catalog 316 is provided to the server manager 208 from the content manager 312 in order to maintain the server database 228 with current content information.
- Preference information 512 is provided to the content manager 312 from the client computer 112 to facilitate selection of a source of the content object.
- the content tracker 404 interacts with the content manager 312 to know what content objects are stored on the content exchange 116 . Content objects are read from the content server 308 by either the content store 412 or the client computer 112 .
- the content exchanges 116 interact with the other modules in the system 600 as well. Status information is provided to the active directory 104 and/or the content manager 312 .
- the dynamic DNS is used by both the content controller 408 and the content tracker 404 to find the IP address of an origin server 108 that contains a content object.
- a selected content exchange may contact other content exchanges when an object is needed for the content store 412 . If the other content exchanges do not have the content object, the content controller 408 requests the object from the content server 308 for delivery to the selected content store 412 .
- FIGS. 7A-B a flow diagram of an embodiment of a process for distributing content to a user is shown.
- the user and administrator respectively download and install software for the client computer 112 and origin server 108 .
- the administrator chooses content on the content server for publishing to the system 600 .
- the viewer object proxy 504 automatically interrogates nearby content exchanges 116 for adequate QOS.
- the depicted process begins in step 704 where the user directs a web browsing content processing program 508 to the directory or search page 212 , 216 of the active directory 104 .
- the user queries a search engine on the search page 216 using a boolean query in step 708 to find a content object.
- the search engine would search the server database 228 for hits and may also search a crawling directory 124 in step 712 .
- the user could navigate the directory page 212 to find a desired content object.
- the search or directory page 212 , 216 presents links for each of the content objects that the user might select in step 716 .
- Each link includes the origin server name 108 , port, path and name for the content object. Given the choices available, the user may select one of the links corresponding to the desired content object in step 720 .
- the dynamic DNS 204 is queried by the viewer object proxy 504 to determine the IP address of the origin server name from the link. Once the IP address is known, the content processing program is redirected to the IP address retrieved from the dynamic DNS 204 and the path and filename from the link.
- the preference information 512 is forwarded to the content manager 312 in step 724 .
- the content manager 312 analyzes the content location database 320 , the preference information 512 and the status information to determine the source of the content object to redirect the client computer 112 to in steps 728 and 732 .
- the content server 308 may be chosen if the content manger 312 determines it can provide adequate QOS or superior QOS. In some embodiments, the content server 308 is only considered as a source if there are no content exchanges 116 that can provide adequate QOS. If the content server 308 is chosen, the origin server 108 provides the content object to the client computer 112 in step 740 .
- the content processing program 508 is redirected to the chosen content store 412 and processing continues in step 744 of FIG. 7 B.
- the content processing program 508 requests the content object in the link from the content store 412 in step 744 . If the whole content object is in the content store 412 , the object is downloaded from that content store 412 to the client computer in steps 748 and 752 .
- a whole copy of the content object is assembled in the content store 412 if any portion of the content object is missing.
- the building of the whole content object happens transparently to the user.
- the content controller 408 queries the other content exchanges 116 to determine which have the missing portion of the content object.
- the content object is reassembled in the content store 412 from beginning to end such that the beginning is available as soon as possible for download by the client computer 112 .
- the missing portions are retrieved from each content exchange 116 in step 764 until the whole content object is in the content store 412 . If no other content exchange 116 has the missing portion of the content object, a query is made to the origin server 108 for the missing portion, in step 768 .
- the dynamic DNS 204 is queried to determine the IP address of the origin server name for the content object.
- the content controller 408 is directed to the origin server 108 with the content object in step 772 by the dynamic DNS 204 .
- the missing portion is downloaded from the content server 308 of that origin server 108 in step 776 . Processing loops back to step 748 to retrieve any other missing portions.
- This process of searching for portions continues in an interative manner until all missing portions are copied to the content store 412 .
- this embodiment sequentially retrieves the missing portions, other embodiments could determine the location of the missing portions and retrieve them in parallel, in any order or in the order found.
- One embodiment of the present invention provides a multiple address system which one can utilize to provide additional information about an object in conjunction with the address indicating the location of the object.
- One such possibility of the additional information is an alternative location for the object indicated by the original address.
- the coupling of information about the object with an original address provides a descriptive aspect to the addressing of the object.
- a first address is provided for an object 810 .
- metadata describing a characteristic of the object is provided 812.
- Metadata is intended to mean information, other than the first address for the object, that describes a characteristic of the object being addressed with that address. Metadata could thus mean an alternative location or address for the object being addressed with the first address. In addition, such an alternative address could be the original address or origin from where the object originated.
- metadata may also mean information that describes other characteristics about the object being addressed. Furthermore, such metadata is not necessarily intended to be limited to a single characteristic, but rather, could include a plurality of different characteristics.
- at least a portion of the metadata is appended to at least a portion of the original address. In accomplishing this, metadata identifying the object can be utilized 816 . Furthermore, that metadata can indicate the origin of the object 820 , as described earlier.
- FIG. 9 Another embodiment of the invention is shown in FIG. 9 .
- an address is received for an object 904 .
- the address is reconfigured so as to form a new address which is operable to identify the object 908 .
- the metadata about the object is also utilized to form the reconfigured address.
- the metadata can be indicative of the origin of the object.
- the metadata can be indicative of an alternative source of the information content of the object.
- the metadata can contain alternative information regarding the object.
- FIGS. 8 and 9 the formatting of the new address can be accomplished in a variety of ways.
- FIG. 10 illustrates one example of how such a new address could be configured.
- method 1000 illustrates such a format.
- a protocol identifier is provided for use as part of the new address.
- the protocol could take the form of RTSP which stands for Real Time Streaming Transport Protocol, a standard for streaming real time multimedia over IP in packets.
- Alternative protocols would also be readily understood by those of ordinary skill in the art, such as HTTP which stands for Hypertext Transfer Protocol, the transport protocol for transmitting hypertext documents around the Internet. Again, alternative protocols could be implemented, as well, either for those protocols in existence or those that arise in the future.
- a domain name may also be provided as part of the new address 1008 .
- a domain name could be one of those currently used as the generic top level domain names (TLD) currently implemented on the Internet.
- TLD generic top level domain names
- a directory name could be provided for the object as part of the new address 1012 .
- the directory name could be the directory in the server which serves the domain name mentioned above.
- a file name for the object could be provided as part of the new address 1016 .
- the metadata information could be incorporated with the earlier elements of the address into a single address.
- the metadata could be ignored when the address was being implemented as a standard uniform resource locator (URL) address; yet, utilized when the new address was being implemented as a dynamic address.
- URL uniform resource locator
- a method 1100 illustrates yet another embodiment of the invention.
- a first address is provided which is indicative of where an object was once located 1104 .
- the object may still be located at this first address or the object may no longer reside at that address.
- a second address is provided which is indicative of where at least a portion of the duplicate of the object is located 1108 .
- this second address can indicate the origin from where the object originated.
- this second address can indicate an alternative location where the object or a portion of the object information is stored.
- a third address is formed by combining the information from the first address with the information from the second address 1112 .
- the third address is formatted such that it indicates not only the first address where an object was once located but also the second address where at least a portion of a duplicate of the object is located.
- the third address can be utilized to attempt to retrieve the object from the first address.
- the third address can be utilized to attempt to retrieve the object information from the second address. Thus, one might attempt to retrieve the object from the first address and fail given the fact that the object has been removed from that first address.
- a second attempt can be made by utilizing the third address to go to the location indicated by the second address in attempting to locate the object. It might be the case that the object information is distributed at more than one location, in which case, the object or only a portion of the object's information could be recalled from the second address.
- a flowchart demonstrating another embodiment of the invention is illustrated as method 1200 .
- a first address is received which is indicative of a purported location for an object 1204 .
- a second address is received which is indicative of a location for a duplicate of the object from where the object originated.
- the duplicate is capable of being the origin for the object.
- an object is intended to be a unit of information or a set of media data, such as a movie, as would be understood by one of ordinary skill in the art.
- the information from the first address is combined with the information from the second address so as to form a third address 1212 .
- the third address can be formed such that it is operable to identify both the first address and the second address 1216 .
- a portion of the third address can be formatted in uniform resource locator (URL) format 1220 .
- URL uniform resource locator
- a request for the object can be received from a requesting device 1224 , such as a user requesting a movie across the Internet.
- An attempt can be made to access the object at the first address by utilizing the third address 1228 .
- the user can transmit the third address to a server which understands the format of the third address to be one which identifies more than one potential address for the desired object.
- the server makes a first attempt to retrieve the object from the first address embedded within the third address. If this attempt fails, the server can dynamically attempt to access the duplicate of the object at the second address utilizing the second address embedded within the third address 1232 .
- the second address nested within the third address serves as a backup source for the desired object.
- the second address can serve either to provide a portion of the object or a link to an alternative source for the object information.
- this duplicate information of the object at the second address is obtained 1236 . The information can then be returned via the server to the user that requested the object 1240 .
- the duplicate of the object can be conveyed to the original address, i.e., the first address and copied to that location for more efficient transfer in the future 1244 .
- FIG. 13 illustrates an example of combining the first address and a second address to form a dynamic third address.
- a first address is represented as RTSP://server1.aerocast.com/foo.mov. This is standard URL format in a static addressing scheme.
- the second address is similarly shown in such a format as 1308 , RTSP://server2.aerocast.com/foo.mov.
- Each of these first and second addresses is static in that it can only identify to a user a single location for the file “foo.mov.” No alternative location or no metadata describing a characteristic of the foo.mov file is provided in such a format.
- the third address indicates a dynamic format in which both locations are indicated.
- the first and second addresses are combined as the third address as RTSP://server1.server2.aerocast.com/foo.mov.
- server 1 is the first server that can be accessed in the domain aerocast.com in order to attempt to access the file foo.mov.
- server 2 is the first server that can be accessed in the domain aerocast.com in order to attempt to access the file foo.mov.
- an alternative source for the foo.mov file would be at server 2 under the aerocast.com domain.
- an alternative location for the foo.mov file is provided by the metadata “server 2.”
- the system illustrated in FIGS. 1 through 7 a and 7 b is operable to utilize such a multiple address system.
- the block illustrated as dynamic DNS 204 is useful in providing a dynamic function in addressing various media titles desired by other elements of the system.
- the dynamic domain name system (DNS) is operable to take an origin for a movie and combine it with what is to believed to be a current address for a movie and combine those two addresses into a single third address.
- the dynamic DNS can operate as a database which combines both a present location (or what is believed to be a present location) for a file and an original source for that file.
- this multiple address system can be utilized in a standard static addressing system by simply ignoring the field where the second address is embedded.
- this multiple address system can be utilized in a standard static addressing system by simply ignoring the field where the second address is embedded.
- this multiple address system can be utilized in a standard static addressing system by simply ignoring the field where the second address is embedded.
- Ports identify the application program that process a message under a given protocol. For example, when hypertext transfer protocol (HTTP) is used, it is associated with “Port 80.” Thus, by default, when a requesting device transmits an address that begins “http://” the receiving device routes the, address information to its application associated with its Port 80, i.e., the application that processes HTTP. Similarly, when the receiving device responds to the requesting device, it formats its response in accordance with the http protocol. FIG. 14 shows an example of such a system.
- HTTP hypertext transfer protocol
- a requestor 1410 sends an address to an intermediate device 1450 .
- Such an intermediate device such as a caching server or router, then determines that it needs to request the desired information from another device that can provide the necessary data, e.g., provider 1490 .
- the requestor 1410 utilizes HTTP protocol in addressing the intermediate device 1450 while the intermediate device 1450 utilizes RTSP protocol in addressing the provider 1490 .
- the provider 1490 responds in the same protocol in which it was addressed. Thus, for purposes of his example, it responds according to the RTSP protocol.
- the intermediate device recognizes the RTSP header in the address and routes it to its application program designated port 3080 .
- the intermediate device then routes the information to the requestor 1410 under the HTTP protocol, because that was the protocol in which the requester 1410 originally addressed the intermediate device 1450 .
- the provider 1490 would by default format the response in RTSP format.
- the Requestor 1410 is expecting the data to be received on port 80 which is the port associated with the HTTP protocol.
- the requested data would not be able to be communicated correctly to the requesting device when a direct connection is attempted.
- a requester 1510 addresses an intermediate device 1550 .
- the requester utilizes a first protocol (designated “PROTOCOL ID#1” in FIG. 15 .
- the requester includes a port identifier (designated “PORT ID#1”) in the address string in FIG. 15 .
- the requestor could utilize HTTP as the protocol identifier and port 80 as the port identifier.
- the intermediate device then processes the request and transmits an address to the provider device 1590 . In transmitting this address, the intermediate device changes format to a second protocol (designated Protocol ID #2) in the address string in FIG. 15 .
- the intermediate device includes the port identifier #1 as part of the address string.
- the intermediate device 1550 could utilize RTSP as the second protocol and port 80 as the metadata in the address string. Consequently, the provider knows the protocol in which to address its response directly to the requestor 1510 . This is illustrated by the line going from the Provider 1590 to the Requestor 1510 . In this example, such an address would utilize HTTP, because that is the protocol associated with port 80 that was sent to the provider device 1590 . Consequently, FIG. 15 illustrates a system that is capable of transmitting port information as part of an address string. Similarly, it illustrates a way of removing intermediate devices from a return datapath.
- FIG. 16 illustrates one embodiment of the invention that provides a data structure for the metadata addresses.
- an address string 1600 is shown.
- the address string is comprised of a protocol identifier field 1610 , a network device identifier field 1620 , a metadata field 1630 , and a file name field 1640 .
- An example of an address for use in TCP/IP format is shown in FIG. 17 .
- the address shown in FIG. 17 shows an address that utilizes HTTP as the protocol.
- the network device identifier is shown as an internet protocol (IP) address “204.162.80.181”.
- IP internet protocol
- the metadata field in this example is shown as “PCN — 000.80.”
- the “PCN 000” could represent header information and an alternate server identifier.
- the “80” is an example of a port identifier.
- the “FOO.DAT” is an example of a file name that is being requested from IP address “204.162.80.181”.
- FIG. 17 illustrates an address that provides metadata comprised of both a server ID and a port ID.
- an address is provided that comprises a protocol identifier.
- a port identifier is also provided.
- the port identifier and address string are included as part of the same address string.
- FIGS. 19 a and 19 b another embodiment of the invention is illustrated in the flowchart 1900 .
- a server is provided.
- a protocol identifier e.g., HTTP, RTSP, FTP, SMTP, or Telnet
- a protocol identifier is considered to be the part of an address that identifies the protocol in use with an object, such as HTTP, RTSP, NNTP, FTP, SHOUT, RTP, ACTP, and SHTP. While these are examples of some existing protocols, others will likely be developed in the future, as well.
- a Network Device Identifier is also provided as shown in block 1918 to identify a device such as a server that is being addressed.
- a network address identifier is an address that identifies a device in a network that is being addressed.
- Such an address can be in numerical or textual form.
- IP Internet Protocol
- IPv4 IP Version 4
- it could take the form of four numbers separated by periods, e.g., “128.46.73.208”.
- a lookup table such an address can be transformed to a textual version for easier recollection by a person entering the address, e.g., “www.aerocast.com”.
- Such an addressing system is merely a matter of choice. However, for purposes of describing this embodiment of the invention, the IPv4 system will be utilized.
- such a Network Device Identifier could be an Internet Protocol address, such as “204.162.80.181” or an equivalent name in the domain name system of the internet such as “AEROCAST.COM”.
- a server identifier is provided. Such a server identifier can function to identify a server which provides a backup source of data or the identification of the original requesting device.
- a port identifier is provided. As explained above, such a port identifier can identify the port to which data should be sent to a device. Examples of port identifiers are those from the “Well-known” port identifier list, such as “80” for HTTP, “23” for Telnet, “25” for SMTP (email), and “21” for FTP.
- a file identifier is provided in block 1930 .
- the protocol identifier, network device identifier, server identifier, port identifier and file identifier are coupled together. Furthermore, as shown in block 1938 , these fields can be organized as an address so that the port identifier is arranged with other metadata such as the server identifier.
- the address is transmitted from the server to an intermediary device.
- the request is received at the intermediary device in block 1946 .
- the request is sent from the intermediary device to a data content provider. Either of these transmissions could involve multiple links with other intermediary devices.
- the request for data is received at the content provider, at which point the data can be obtained, as shown in block 1958 .
- the port identifier can be used to send data or other message to the port of the server in accordance with the port identifier field.
- embodiments of the invention could be accomplished as computer signals embodied in a carrier wave, as well as electrical signals propagated through a transmission medium.
- the various information discussed above could be formatted in a structure, such as a data structure, and transmitted as an electrical signal through a transmission medium.
Abstract
Description
Claims (17)
Priority Applications (9)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US09/664,179 US6836806B1 (en) | 2000-06-01 | 2000-09-18 | System for network addressing |
ARP010102614A AR028660A1 (en) | 2000-06-01 | 2001-05-31 | METHOD FOR NETWORK ADDRESSING |
JP2001588192A JP2004511116A (en) | 2000-06-01 | 2001-06-01 | System for network addressing |
KR1020027016441A KR20030051429A (en) | 2000-06-01 | 2001-06-01 | System for network addressing |
PCT/US2001/018019 WO2001093527A2 (en) | 2000-06-01 | 2001-06-01 | System for network addressing |
CA2410861A CA2410861C (en) | 2000-06-01 | 2001-06-01 | System for network addressing |
EP01946073A EP1287663A2 (en) | 2000-06-01 | 2001-06-01 | System for network addressing |
AU2001268168A AU2001268168A1 (en) | 2000-06-01 | 2001-06-01 | System for network addressing |
CN01813317A CN1444816A (en) | 2000-06-01 | 2001-06-01 | System for network addressing |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US20900700P | 2000-06-01 | 2000-06-01 | |
US09/664,179 US6836806B1 (en) | 2000-06-01 | 2000-09-18 | System for network addressing |
Publications (1)
Publication Number | Publication Date |
---|---|
US6836806B1 true US6836806B1 (en) | 2004-12-28 |
Family
ID=26903732
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US09/664,179 Expired - Lifetime US6836806B1 (en) | 2000-06-01 | 2000-09-18 | System for network addressing |
Country Status (9)
Country | Link |
---|---|
US (1) | US6836806B1 (en) |
EP (1) | EP1287663A2 (en) |
JP (1) | JP2004511116A (en) |
KR (1) | KR20030051429A (en) |
CN (1) | CN1444816A (en) |
AR (1) | AR028660A1 (en) |
AU (1) | AU2001268168A1 (en) |
CA (1) | CA2410861C (en) |
WO (1) | WO2001093527A2 (en) |
Cited By (51)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020143946A1 (en) * | 2001-03-28 | 2002-10-03 | Daniel Crosson | Software based internet protocol address selection method and system |
US20030115303A1 (en) * | 2001-09-12 | 2003-06-19 | Marian Constantin Viorel | Method and system for automatic address allocation in a network and network protocol therefor |
US20040059735A1 (en) * | 2002-09-10 | 2004-03-25 | Gold Russell Eliot | Systems and methods for enabling failover in a distributed-object computing environment |
US20050281266A1 (en) * | 2004-06-22 | 2005-12-22 | Korea Electronics Technology Institute | Human readable and writable addressing method in a home network protocol |
US20060106939A1 (en) * | 2004-11-02 | 2006-05-18 | Samsung Electronics Co., Ltd. | Method and system for transmitting and receiving data using multicasting |
US20060174037A1 (en) * | 2002-07-29 | 2006-08-03 | Bea Systems, Inc. | Identifying a computer device |
WO2007002196A2 (en) * | 2005-06-21 | 2007-01-04 | Corestreet, Ltd. | Preventing identity theft |
US7340521B1 (en) * | 2002-04-02 | 2008-03-04 | Blue Coat Systems, Inc. | Method for routing a request over a network to a content source that can most advantageous serve the request |
US20080178234A1 (en) * | 2006-12-05 | 2008-07-24 | Crackle, Inc. | Video sharing platform providing for posting content to other websites |
US7509433B1 (en) * | 2008-05-19 | 2009-03-24 | International Business Machines Corporation | Selecting quick-to-download content through an alternative hypertext protocol |
US7584294B2 (en) | 2007-03-12 | 2009-09-01 | Citrix Systems, Inc. | Systems and methods for prefetching objects for caching using QOS |
US7620699B1 (en) * | 2002-07-26 | 2009-11-17 | Paltalk Holdings, Inc. | Method and system for managing high-bandwidth data sharing |
US20090303991A1 (en) * | 2006-03-02 | 2009-12-10 | Nokia Siemens Networks Gmbh & Co. Kg | Method for Generating an Address Field, Method and Device for Transmitting Electronic Message and Data Packet |
US20100099441A1 (en) * | 2008-10-17 | 2010-04-22 | Sanjay Agarwal | Mobile Device Advertising |
US7720936B2 (en) | 2007-03-12 | 2010-05-18 | Citrix Systems, Inc. | Systems and methods of freshening and prefreshening a DNS cache |
US7783757B2 (en) | 2007-03-12 | 2010-08-24 | Citrix Systems, Inc. | Systems and methods of revalidating cached objects in parallel with request for object |
US7809818B2 (en) | 2007-03-12 | 2010-10-05 | Citrix Systems, Inc. | Systems and method of using HTTP head command for prefetching |
US7853703B1 (en) * | 2005-03-24 | 2010-12-14 | Google, Inc. | Methods and apparatuses for identification of device presence |
US20110026536A1 (en) * | 2005-11-23 | 2011-02-03 | Comcast Cable Holdings, Llc | Device-to-device communication among customer premise equipment devices |
US7991827B1 (en) * | 2002-11-13 | 2011-08-02 | Mcafee, Inc. | Network analysis system and method utilizing collected metadata |
US8037126B2 (en) | 2007-03-12 | 2011-10-11 | Citrix Systems, Inc. | Systems and methods of dynamically checking freshness of cached objects based on link status |
US8074028B2 (en) | 2007-03-12 | 2011-12-06 | Citrix Systems, Inc. | Systems and methods of providing a multi-tier cache |
US8103783B2 (en) | 2007-03-12 | 2012-01-24 | Citrix Systems, Inc. | Systems and methods of providing security and reliability to proxy caches |
US8370420B1 (en) * | 2002-07-11 | 2013-02-05 | Citrix Systems, Inc. | Web-integrated display of locally stored content objects |
US8504775B2 (en) | 2007-03-12 | 2013-08-06 | Citrix Systems, Inc | Systems and methods of prefreshening cached objects based on user's current web page |
US8601545B2 (en) | 2007-11-01 | 2013-12-03 | Comcast Cable Holdings, Llc | Method and system for directing user between captive and open domains |
US20130339550A1 (en) * | 2012-06-15 | 2013-12-19 | Citrix Systems, Inc. | Systems and methods for generating ipid across a cluster network |
US20140032526A1 (en) * | 2008-09-18 | 2014-01-30 | Adobe Systems Incorporated | Systems and methods for relinking data items |
US8677091B2 (en) | 2006-12-18 | 2014-03-18 | Commvault Systems, Inc. | Writing data and storage system specific metadata to network attached storage device |
US8701010B2 (en) | 2007-03-12 | 2014-04-15 | Citrix Systems, Inc. | Systems and methods of using the refresh button to determine freshness policy |
US8725737B2 (en) | 2005-11-28 | 2014-05-13 | Commvault Systems, Inc. | Systems and methods for using metadata to enhance data identification operations |
US8892523B2 (en) | 2012-06-08 | 2014-11-18 | Commvault Systems, Inc. | Auto summarization of content |
US8903950B2 (en) | 2000-05-05 | 2014-12-02 | Citrix Systems, Inc. | Personalized content delivery using peer-to-peer precaching |
US8930496B2 (en) * | 2005-12-19 | 2015-01-06 | Commvault Systems, Inc. | Systems and methods of unified reconstruction in storage systems |
US9602573B1 (en) | 2007-09-24 | 2017-03-21 | National Science Foundation | Automatic clustering for self-organizing grids |
US10178195B2 (en) * | 2015-12-04 | 2019-01-08 | Cloudflare, Inc. | Origin server protection notification |
CN109477400A (en) * | 2016-05-24 | 2019-03-15 | 通用电气公司 | Turbogenerator and operating method |
US10540516B2 (en) | 2016-10-13 | 2020-01-21 | Commvault Systems, Inc. | Data protection within an unsecured storage environment |
US10642886B2 (en) | 2018-02-14 | 2020-05-05 | Commvault Systems, Inc. | Targeted search of backup data using facial recognition |
US10828092B2 (en) | 2007-05-21 | 2020-11-10 | Atricure, Inc. | Cardiac ablation systems and methods |
US11442820B2 (en) | 2005-12-19 | 2022-09-13 | Commvault Systems, Inc. | Systems and methods of unified reconstruction in storage systems |
US11467883B2 (en) | 2004-03-13 | 2022-10-11 | Iii Holdings 12, Llc | Co-allocating a reservation spanning different compute resources types |
US11494235B2 (en) | 2004-11-08 | 2022-11-08 | Iii Holdings 12, Llc | System and method of providing system jobs within a compute environment |
US11496415B2 (en) | 2005-04-07 | 2022-11-08 | Iii Holdings 12, Llc | On-demand access to compute resources |
US11526304B2 (en) | 2009-10-30 | 2022-12-13 | Iii Holdings 2, Llc | Memcached server functionality in a cluster of data processing nodes |
US11630704B2 (en) | 2004-08-20 | 2023-04-18 | Iii Holdings 12, Llc | System and method for a workload management and scheduling module to manage access to a compute environment according to local and non-local user identity information |
US11652706B2 (en) | 2004-06-18 | 2023-05-16 | Iii Holdings 12, Llc | System and method for providing dynamic provisioning within a compute environment |
US11650857B2 (en) | 2006-03-16 | 2023-05-16 | Iii Holdings 12, Llc | System and method for managing a hybrid computer environment |
US11658916B2 (en) | 2005-03-16 | 2023-05-23 | Iii Holdings 12, Llc | Simple integration of an on-demand compute environment |
US11720290B2 (en) | 2009-10-30 | 2023-08-08 | Iii Holdings 2, Llc | Memcached server functionality in a cluster of data processing nodes |
US11960937B2 (en) | 2004-03-13 | 2024-04-16 | Iii Holdings 12, Llc | System and method for an optimizing reservation in time of compute resources based on prioritization function and reservation policy parameter |
Families Citing this family (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN100483975C (en) * | 2003-07-08 | 2009-04-29 | 中国科学技术大学 | Quantum network addressing method and quantum network router |
CN101529398B (en) * | 2006-06-14 | 2011-05-11 | 松下电工株式会社 | Network system |
KR100801004B1 (en) * | 2006-08-25 | 2008-02-05 | 삼성전자주식회사 | Apparatus and method for matching the protocol of embedded av contents |
JP5174401B2 (en) * | 2007-08-27 | 2013-04-03 | パナソニック株式会社 | Network system |
US10075521B2 (en) * | 2014-04-07 | 2018-09-11 | Cisco Technology, Inc. | Collection synchronization using equality matched network names |
CN112783837B (en) * | 2021-01-12 | 2024-01-30 | 北京首汽智行科技有限公司 | API document searching method |
Citations (47)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5371852A (en) * | 1992-10-14 | 1994-12-06 | International Business Machines Corporation | Method and apparatus for making a cluster of computers appear as a single host on a network |
US5423002A (en) * | 1992-04-20 | 1995-06-06 | 3Com Corporation | System for extending network resources to remote networks |
WO1996042041A2 (en) | 1995-06-07 | 1996-12-27 | Open Market, Inc. | Internet server access control and monitoring systems |
EP0837584A1 (en) | 1996-10-18 | 1998-04-22 | AT&T Corp. | Inter-cache protocol for improved web performance |
WO1998017039A1 (en) | 1996-10-14 | 1998-04-23 | Mirror Image Internet Ab | Internet communication system |
WO1998018076A1 (en) | 1996-10-18 | 1998-04-30 | Intervu, Inc. | System and method for optimized storage and retrieval of data on a distributed computer network |
US5761436A (en) | 1996-07-01 | 1998-06-02 | Sun Microsystems, Inc. | Method and apparatus for combining truncated hyperlinks to form a hyperlink aggregate |
EP0847020A2 (en) | 1996-12-09 | 1998-06-10 | Sun Microsystems, Inc. | Dynamic cache preloading across loosely-coupled administrative domains |
WO1998026559A1 (en) | 1996-12-09 | 1998-06-18 | Gte Internetworking Incorporated | Distributed computing system and method for distributing user requests to replicated network servers |
US5774660A (en) * | 1996-08-05 | 1998-06-30 | Resonate, Inc. | World-wide-web server with delayed resource-binding for resource-based load balancing on a distributed resource multi-node network |
WO1998037667A2 (en) | 1997-02-21 | 1998-08-27 | Telefonaktiebolaget Lm Ericsson (Publ) | Data caching on the internet |
EP0877326A2 (en) | 1997-05-05 | 1998-11-11 | AT&T Corp. | Network with shared caching |
WO1998053410A2 (en) | 1997-05-22 | 1998-11-26 | Trustees Of Boston University | A method and system for distributed caching, prefetching and replication |
WO1998058315A1 (en) | 1997-06-18 | 1998-12-23 | Intervu, Inc. | System and method for server-side optimization of data delivery on a distributed computer network |
WO1999003047A1 (en) | 1997-07-11 | 1999-01-21 | Earle Machardy | Content hosting environment system and cache mechanism |
WO1999005584A2 (en) | 1997-07-24 | 1999-02-04 | Mirror Image Internet, Inc. | Internet caching system |
US5870557A (en) | 1996-07-15 | 1999-02-09 | At&T Corp | Method for determining and reporting a level of network activity on a communications network using a routing analyzer and advisor |
WO1999030237A1 (en) | 1997-12-05 | 1999-06-17 | Encanto Network, Inc. | Methods for interfacing a computer or network to a wide area network, such as the internet |
WO1999031853A1 (en) | 1997-12-17 | 1999-06-24 | British Telecommunications Public Limited Company | Mobile data routing |
WO1999040514A1 (en) | 1998-02-10 | 1999-08-12 | Digital Island, Inc. | Optimized network resource location |
US5956716A (en) | 1995-06-07 | 1999-09-21 | Intervu, Inc. | System and method for delivery of video data over a computer network |
US5991306A (en) | 1996-08-26 | 1999-11-23 | Microsoft Corporation | Pull based, intelligent caching system and method for delivering data over a network |
US5995099A (en) | 1996-06-10 | 1999-11-30 | Horstmann; Jens U. | Method for creating and maintaining page links |
US6003030A (en) | 1995-06-07 | 1999-12-14 | Intervu, Inc. | System and method for optimized storage and retrieval of data on a distributed computer network |
US6006264A (en) | 1997-08-01 | 1999-12-21 | Arrowpoint Communications, Inc. | Method and system for directing a flow between a client and a server |
US6023698A (en) | 1996-12-05 | 2000-02-08 | International Business Machines Corporation | System and method for transparently registering and updating information over the internet |
US6029200A (en) | 1998-03-09 | 2000-02-22 | Microsoft Corporation | Automatic protocol rollover in streaming multimedia data delivery system |
US6029175A (en) | 1995-10-26 | 2000-02-22 | Teknowledge Corporation | Automatic retrieval of changed files by a network software agent |
WO2000013456A2 (en) | 1998-08-31 | 2000-03-09 | Adero, Inc. | Method and apparatus for load management on a computer network |
US6038599A (en) | 1997-04-23 | 2000-03-14 | Mpath Interactive, Inc. | Latency server and matchmaker |
WO2000017765A1 (en) | 1998-09-24 | 2000-03-30 | Mirror Image Internet, Inc. | An internet caching system and a method and an arrangement in such a system |
US6052718A (en) | 1997-01-07 | 2000-04-18 | Sightpath, Inc | Replica routing |
US6055570A (en) | 1997-04-03 | 2000-04-25 | Sun Microsystems, Inc. | Subscribed update monitors |
WO2000028424A1 (en) | 1998-11-05 | 2000-05-18 | Bea Systems, Inc. | A duplicated naming service in a distributed processing system |
US6097882A (en) * | 1995-06-30 | 2000-08-01 | Digital Equipment Corporation | Method and apparatus of improving network performance and network availability in a client-server network by transparently replicating a network service |
US6101180A (en) | 1996-11-12 | 2000-08-08 | Starguide Digital Networks, Inc. | High bandwidth broadcast system having localized multicast access to broadcast content |
US6108703A (en) | 1998-07-14 | 2000-08-22 | Massachusetts Institute Of Technology | Global hosting system |
WO2000073922A2 (en) | 1999-06-01 | 2000-12-07 | Cacheflow, Inc. | Content delivery system |
WO2000074347A1 (en) | 1999-06-02 | 2000-12-07 | Cacheflow, Inc. | Dynamic cache protocol selection and query resolution for cache server |
WO2000079730A2 (en) | 1999-06-18 | 2000-12-28 | Digital Island, Inc. | On-demand overlay routing for computer-based communication networks |
US6286006B1 (en) | 1999-05-07 | 2001-09-04 | Alta Vista Company | Method and apparatus for finding mirrored hosts by analyzing urls |
US6311216B1 (en) | 1998-05-29 | 2001-10-30 | Microsoft Corporation | Method, computer program product, and system for client-side deterministic routing and URL lookup into a distributed cache of URLS |
US6321242B1 (en) | 1998-02-06 | 2001-11-20 | Sun Microsystems, Inc. | Re-linking technology for a moving web site |
US20010044825A1 (en) | 2000-05-19 | 2001-11-22 | Treetop Ventures Llc | Method allowing persistent links to web-pages |
US6330602B1 (en) * | 1997-04-14 | 2001-12-11 | Nortel Networks Limited | Scaleable web server and method of efficiently managing multiple servers |
US6345303B1 (en) | 1997-03-25 | 2002-02-05 | Intel Corporation | Network proxy capable of dynamically selecting a destination device for servicing a client request |
US6473406B1 (en) * | 1997-07-31 | 2002-10-29 | Cisco Technology, Inc. | Method and apparatus for transparently proxying a connection |
-
2000
- 2000-09-18 US US09/664,179 patent/US6836806B1/en not_active Expired - Lifetime
-
2001
- 2001-05-31 AR ARP010102614A patent/AR028660A1/en unknown
- 2001-06-01 CA CA2410861A patent/CA2410861C/en not_active Expired - Lifetime
- 2001-06-01 EP EP01946073A patent/EP1287663A2/en not_active Withdrawn
- 2001-06-01 CN CN01813317A patent/CN1444816A/en active Pending
- 2001-06-01 WO PCT/US2001/018019 patent/WO2001093527A2/en not_active Application Discontinuation
- 2001-06-01 JP JP2001588192A patent/JP2004511116A/en active Pending
- 2001-06-01 AU AU2001268168A patent/AU2001268168A1/en not_active Abandoned
- 2001-06-01 KR KR1020027016441A patent/KR20030051429A/en not_active Application Discontinuation
Patent Citations (50)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5423002A (en) * | 1992-04-20 | 1995-06-06 | 3Com Corporation | System for extending network resources to remote networks |
US5371852A (en) * | 1992-10-14 | 1994-12-06 | International Business Machines Corporation | Method and apparatus for making a cluster of computers appear as a single host on a network |
WO1996042041A2 (en) | 1995-06-07 | 1996-12-27 | Open Market, Inc. | Internet server access control and monitoring systems |
US6003030A (en) | 1995-06-07 | 1999-12-14 | Intervu, Inc. | System and method for optimized storage and retrieval of data on a distributed computer network |
US5956716A (en) | 1995-06-07 | 1999-09-21 | Intervu, Inc. | System and method for delivery of video data over a computer network |
US6097882A (en) * | 1995-06-30 | 2000-08-01 | Digital Equipment Corporation | Method and apparatus of improving network performance and network availability in a client-server network by transparently replicating a network service |
US6029175A (en) | 1995-10-26 | 2000-02-22 | Teknowledge Corporation | Automatic retrieval of changed files by a network software agent |
US5995099A (en) | 1996-06-10 | 1999-11-30 | Horstmann; Jens U. | Method for creating and maintaining page links |
US5761436A (en) | 1996-07-01 | 1998-06-02 | Sun Microsystems, Inc. | Method and apparatus for combining truncated hyperlinks to form a hyperlink aggregate |
US5870557A (en) | 1996-07-15 | 1999-02-09 | At&T Corp | Method for determining and reporting a level of network activity on a communications network using a routing analyzer and advisor |
US5774660A (en) * | 1996-08-05 | 1998-06-30 | Resonate, Inc. | World-wide-web server with delayed resource-binding for resource-based load balancing on a distributed resource multi-node network |
US5991306A (en) | 1996-08-26 | 1999-11-23 | Microsoft Corporation | Pull based, intelligent caching system and method for delivering data over a network |
WO1998017039A1 (en) | 1996-10-14 | 1998-04-23 | Mirror Image Internet Ab | Internet communication system |
EP0837584A1 (en) | 1996-10-18 | 1998-04-22 | AT&T Corp. | Inter-cache protocol for improved web performance |
WO1998018076A1 (en) | 1996-10-18 | 1998-04-30 | Intervu, Inc. | System and method for optimized storage and retrieval of data on a distributed computer network |
US6101180A (en) | 1996-11-12 | 2000-08-08 | Starguide Digital Networks, Inc. | High bandwidth broadcast system having localized multicast access to broadcast content |
US6023698A (en) | 1996-12-05 | 2000-02-08 | International Business Machines Corporation | System and method for transparently registering and updating information over the internet |
EP0847020A2 (en) | 1996-12-09 | 1998-06-10 | Sun Microsystems, Inc. | Dynamic cache preloading across loosely-coupled administrative domains |
WO1998026559A1 (en) | 1996-12-09 | 1998-06-18 | Gte Internetworking Incorporated | Distributed computing system and method for distributing user requests to replicated network servers |
US6052718A (en) | 1997-01-07 | 2000-04-18 | Sightpath, Inc | Replica routing |
WO1998037667A2 (en) | 1997-02-21 | 1998-08-27 | Telefonaktiebolaget Lm Ericsson (Publ) | Data caching on the internet |
US6345303B1 (en) | 1997-03-25 | 2002-02-05 | Intel Corporation | Network proxy capable of dynamically selecting a destination device for servicing a client request |
US6055570A (en) | 1997-04-03 | 2000-04-25 | Sun Microsystems, Inc. | Subscribed update monitors |
US6330602B1 (en) * | 1997-04-14 | 2001-12-11 | Nortel Networks Limited | Scaleable web server and method of efficiently managing multiple servers |
US6038599A (en) | 1997-04-23 | 2000-03-14 | Mpath Interactive, Inc. | Latency server and matchmaker |
EP0877326A2 (en) | 1997-05-05 | 1998-11-11 | AT&T Corp. | Network with shared caching |
WO1998053410A2 (en) | 1997-05-22 | 1998-11-26 | Trustees Of Boston University | A method and system for distributed caching, prefetching and replication |
WO1998058315A1 (en) | 1997-06-18 | 1998-12-23 | Intervu, Inc. | System and method for server-side optimization of data delivery on a distributed computer network |
US6112239A (en) | 1997-06-18 | 2000-08-29 | Intervu, Inc | System and method for server-side optimization of data delivery on a distributed computer network |
WO1999003047A1 (en) | 1997-07-11 | 1999-01-21 | Earle Machardy | Content hosting environment system and cache mechanism |
WO1999005584A2 (en) | 1997-07-24 | 1999-02-04 | Mirror Image Internet, Inc. | Internet caching system |
US6473406B1 (en) * | 1997-07-31 | 2002-10-29 | Cisco Technology, Inc. | Method and apparatus for transparently proxying a connection |
US6006264A (en) | 1997-08-01 | 1999-12-21 | Arrowpoint Communications, Inc. | Method and system for directing a flow between a client and a server |
WO1999030237A1 (en) | 1997-12-05 | 1999-06-17 | Encanto Network, Inc. | Methods for interfacing a computer or network to a wide area network, such as the internet |
WO1999031853A1 (en) | 1997-12-17 | 1999-06-24 | British Telecommunications Public Limited Company | Mobile data routing |
US6321242B1 (en) | 1998-02-06 | 2001-11-20 | Sun Microsystems, Inc. | Re-linking technology for a moving web site |
US6185598B1 (en) | 1998-02-10 | 2001-02-06 | Digital Island, Inc. | Optimized network resource location |
WO1999040514A1 (en) | 1998-02-10 | 1999-08-12 | Digital Island, Inc. | Optimized network resource location |
US6029200A (en) | 1998-03-09 | 2000-02-22 | Microsoft Corporation | Automatic protocol rollover in streaming multimedia data delivery system |
US6415327B1 (en) | 1998-03-09 | 2002-07-02 | Microsoft Corporation | Automatic protocol rollover in streaming multimedia data delivery systems |
US6311216B1 (en) | 1998-05-29 | 2001-10-30 | Microsoft Corporation | Method, computer program product, and system for client-side deterministic routing and URL lookup into a distributed cache of URLS |
US6108703A (en) | 1998-07-14 | 2000-08-22 | Massachusetts Institute Of Technology | Global hosting system |
WO2000013456A2 (en) | 1998-08-31 | 2000-03-09 | Adero, Inc. | Method and apparatus for load management on a computer network |
WO2000017765A1 (en) | 1998-09-24 | 2000-03-30 | Mirror Image Internet, Inc. | An internet caching system and a method and an arrangement in such a system |
WO2000028424A1 (en) | 1998-11-05 | 2000-05-18 | Bea Systems, Inc. | A duplicated naming service in a distributed processing system |
US6286006B1 (en) | 1999-05-07 | 2001-09-04 | Alta Vista Company | Method and apparatus for finding mirrored hosts by analyzing urls |
WO2000073922A2 (en) | 1999-06-01 | 2000-12-07 | Cacheflow, Inc. | Content delivery system |
WO2000074347A1 (en) | 1999-06-02 | 2000-12-07 | Cacheflow, Inc. | Dynamic cache protocol selection and query resolution for cache server |
WO2000079730A2 (en) | 1999-06-18 | 2000-12-28 | Digital Island, Inc. | On-demand overlay routing for computer-based communication networks |
US20010044825A1 (en) | 2000-05-19 | 2001-11-22 | Treetop Ventures Llc | Method allowing persistent links to web-pages |
Non-Patent Citations (42)
Title |
---|
Allan Leinwand, A Distributed-Star Overnet For Global Business Applications, IEEE Globecom 1998, Sydney, Nov. 8-12, 1998, vol. 2, pp. 1291-1296. |
Antoine Mourad, et al., Scalable Web Server Architectures, Proceedings IEEE International Symposium On Computers and Communications, Jul. 1, 1997, pp. 12-16. |
Chad Yoshikawa et al., Using Smart Clients To Build Scalable Services, Proceedings Of The Usenix 1997 Annual Technical Conference, Proceedings of Usenix 1997 Annual Technical Conference, Anaheim, CA, Jan. 6-10, 1997 pp. 105-117. |
Clare Bradford et al., A Bandwidth Friendly Search Engine, Proceedings Of The International Conference on Multimedia Computing And Systems, Los Alamitos, CA, Jun. 7, 1999, vol. 2, pp. 720-724. |
Daniel M. Dias, William Kish, Rajat Mukherjee, Renu Tweari; A Scalable and Highly Available Web Server, 1063-6390/96 1996 IEEE, Proceedings of Compcon '96. |
Detail-Rich, Multimedia Streaming Solution, Mirror Image Internet, Inc., www.morror-image.com, (2 pages). |
Dykes, Sandra G. et al., Taxonomy and Design Analysis for Distributed Web Caching, Proceedings of the 32<nd >Annuyal Hawaii International Conference on System Sciences, Maui, HI, Jan. 5-8, 1999, pp. 1-10. |
Dykes, Sandra G. et al., Taxonomy and Design Analysis for Distributed Web Caching, Proceedings of the 32nd Annuyal Hawaii International Conference on System Sciences, Maui, HI, Jan. 5-8, 1999, pp. 1-10. |
Fan, Li, et al., Summary Cache: A Scalable Wide-Area Web Cache Sharing Protocol, Computer Communications Review, Association For Computing Machinery, New York, Oct., 1998, vol. 28, No. 4, pp. 254-265. |
Gadde, Syam et al., A Taste of Crispy Squid, Proceedings of the Workshop on Internet Service Performance, Jun. 1998, pp. 1-8. |
Gadde, Syam et al., Reduce, Reuse, Recycle, an Approach to Building Large Internet Caches, The Sixth Workshop on Hot Topics in Cape Cod, MA, May 5-6, 1997, pp. 93-98. |
Geoff Huston, Internet Performance Survival Guide QoS Strategies for Multiservice Networks, Wiley Computer Publishing, John Wiley & Sons, Inc., New York, NY, (2000) pp. 255-259, 276277, 449-452. |
Geoff Huston, Telstra, Web Caching, Cisco Systems, Inc., http://www.cisco.com/warp/public/759/ipj_2-3/ipj_2-3_webcaching.html, pp. 1-24. |
Gulwani, Sumit et al. WebCaL-A Domain Specific Language For Web Caching, Online Proceedings Of The 5<th >International Web Caching And Content Delivery Workshop, at<http://www.terena.nl/conf/wcw/Proceedings/S2/S2-4.ps>, May, 2002. |
Gulwani, Sumit et al. WebCaL—A Domain Specific Language For Web Caching, Online Proceedings Of The 5th International Web Caching And Content Delivery Workshop, at<http://www.terena.nl/conf/wcw/Proceedings/S2/S2-4.ps>, May, 2002. |
Gwertzman, James et al., An Analysis Of Geographical Push-Caching, Harvard University, Vino Research Group, World Wide Web Research at <http://www.eecs.harvard.edu/vino/web/server.cache/icdcs.ps> Mar. 28, 2002. |
How FreeFlow Works (2 pages), Content Delivery (1 page), FreeFlow Benefits (1st page only of 2), Reporting (1 page) and Edge Advantage (1 page), Akamai Technologies, Inc., http://www.akamai.com/htm/sv/code_ffhow.html, Sep. 12, 2000. |
Inohara, Shigekazu et al., Self-Organizing Cooperative WWW Caching, Proceedings. 18<th >International Conference on Amsterdam, Netherlands, May 26-29, 1998, pp. 74-83. |
Inohara, Shigekazu et al., Self-Organizing Cooperative WWW Caching, Proceedings. 18th International Conference on Amsterdam, Netherlands, May 26-29, 1998, pp. 74-83. |
John Dilley et al., Improving Proxy Cache Performance: Analysis of Three Replacement Policies, IEEE Internet Computing, (1999) vol. 3, N. 6, pp. 44-50. |
Kanchanasut, Kanchana, The A13 CacheBone Project, Internet Project Workshop, IWS 99 Osaka, Japan, Feb. 18-20, 1999, pp. 203-208. |
Kangashaju, Jussi et al., Performance Evaluation of Redirection Schemes in Content Distribution Networks, Online Proceedings of the 5<th >International Web Caching and Content Delivery Workshop, May, 2000, pp. 1-12. |
Kangashaju, Jussi et al., Performance Evaluation of Redirection Schemes in Content Distribution Networks, Online Proceedings of the 5th International Web Caching and Content Delivery Workshop, May, 2000, pp. 1-12. |
Kangasharju, Jussi et al., Locating Copies of Ojbects Using the Domain Name System, Proceedings of the 4<th >International Caching Workshop, 1999, pp. 1-12. |
Kangasharju, Jussi et al., Locating Copies of Ojbects Using the Domain Name System, Proceedings of the 4th International Caching Workshop, 1999, pp. 1-12. |
Larry L. Peterson; A Yellow-Pages Service for a Local-Area Network; 1988 Association for Computing Machinery. |
Luis Abersa et al., Load Balancing A Cluster Of Web Servers Using Distributed Packet Rewriting, Computer Science Department Technical Report, New York, NY, Jan. 6, 1999 pp. 1-13. |
Martin F. Arlitt et al., Internet Web Servers: Workload Characterization and Performance Implications, IEEE/ACM Transactions on Networking, IEEE Inc., New York, Oct. 1, 1997, vol. 5, No. 5, pp. 631-644. |
Online Computer Library Center, Inc. "PURL FAQ", publicty posted Dec. 10, 1997. <http://web.archive.org/web/19971210064138/purl.oclc.org/OCLC/PURL/FAQ>, 19 pages. |
Robert L. Carter et al., Dynamic Server Selection Using Bandwidth Probing In Wide-area Networks, Technical Report, Boston University, Mar. 15, 1996, pp. 1-20. |
Rousskov, Alex et al., Cache Digests, Computer Networks and ISDN Systems, North Holland Publishing, Amsterdam, NL, Nov. 25, 1998, vol. 30, No. 22-23, pp. 2155-2168. |
Sandra G. Dykes et al., An Empirical Evaluation Of Client-side Server Selection Algorithms, Proceedings IEEE Infocom 2000. The Conference on Computer Communications, 19<th >Annual Joint Conference Of The IEEE Computer And Communications Societies, Tel Aviv, Israel, Mar. 26, 2000, pp. 1361-1370. |
Sandra G. Dykes et al., An Empirical Evaluation Of Client-side Server Selection Algorithms, Proceedings IEEE Infocom 2000. The Conference on Computer Communications, 19th Annual Joint Conference Of The IEEE Computer And Communications Societies, Tel Aviv, Israel, Mar. 26, 2000, pp. 1361-1370. |
Simon Burns, speed Demons, Far Eastern Economic Review, Apr. 20, 2000, vol. 163, N. 16, p. 2 only of 21. |
Stephane Gruber, Jennifer Rexford, Andea Basso; Design Considerations for an RTSP-Based Prefix-Caching Proxy for Multimedia Streams; AT&T Labs Research Technical Memorandum, Sep. 7, 1999. |
Sun Wu et al., Virtual Proxy Servers For WWW And Intelligent Agents On The Internet, System Sciences, 1997, Proceedings Of The Thirtieth Hwaii International Conference On Wailea, HI, Los Alamitors, CA, Jan. 7, 1997, pp. 200-209. |
Syam Gadde et al., Web Caching and Content Distribution: A view From The Interior, Online Proceedings of the 5<th >International Web Caching and Content Delivery Workshop, retrieved from Internet on Apr. 10, 2002, Abstract, Sections 1 and 2. |
Syam Gadde et al., Web Caching and Content Distribution: A view From The Interior, Online Proceedings of the 5th International Web Caching and Content Delivery Workshop, retrieved from Internet on Apr. 10, 2002, Abstract, Sections 1 and 2. |
Tewari, Renu et al., Beyond Hierarchies: Design Considerations for Distributed Caching On The Internet, UTCS Technical Report, Feb., 1998, pp. 1-22. |
Touch, Joseph D., Defining High-Speed Protocols: Five Challenges And An Example That Survives The Challenges, IEEE Journal On Selected Areas In Communications, IEEE Inc., New York, Jun. 1, 1995, vol. 13, No. 5, pp. 828-835. |
Zhang, Xiaolan et al., HACC: A Architecture For Cluster-Based Web Servers, Proceedings Of The 3<rd >Usenix Windows NT Symposium, Seattle, WA, Jul. 12-15, 1999, pp. 155-164. |
Zhang, Xiaolan et al., HACC: A Architecture For Cluster-Based Web Servers, Proceedings Of The 3rd Usenix Windows NT Symposium, Seattle, WA, Jul. 12-15, 1999, pp. 155-164. |
Cited By (116)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8903950B2 (en) | 2000-05-05 | 2014-12-02 | Citrix Systems, Inc. | Personalized content delivery using peer-to-peer precaching |
US20020143946A1 (en) * | 2001-03-28 | 2002-10-03 | Daniel Crosson | Software based internet protocol address selection method and system |
US20030115303A1 (en) * | 2001-09-12 | 2003-06-19 | Marian Constantin Viorel | Method and system for automatic address allocation in a network and network protocol therefor |
US7000029B2 (en) * | 2001-09-12 | 2006-02-14 | Tropic Networks Inc. | Method and system for automatic address allocation in a network and network protocol therefor |
US8234402B2 (en) | 2002-04-02 | 2012-07-31 | Blue Coat Systems, Inc. | Method and apparatus for request routing |
US20080177897A1 (en) * | 2002-04-02 | 2008-07-24 | Shrikrishna Karandikar | Method and apparatus for request routing |
US7340521B1 (en) * | 2002-04-02 | 2008-03-04 | Blue Coat Systems, Inc. | Method for routing a request over a network to a content source that can most advantageous serve the request |
US8370420B1 (en) * | 2002-07-11 | 2013-02-05 | Citrix Systems, Inc. | Web-integrated display of locally stored content objects |
US7620699B1 (en) * | 2002-07-26 | 2009-11-17 | Paltalk Holdings, Inc. | Method and system for managing high-bandwidth data sharing |
US20060174037A1 (en) * | 2002-07-29 | 2006-08-03 | Bea Systems, Inc. | Identifying a computer device |
US7958226B2 (en) | 2002-07-29 | 2011-06-07 | Oracle International Corporation | Identifying a computer device |
US20060184681A1 (en) * | 2002-07-29 | 2006-08-17 | Bea Systems, Inc. | Identifying a computer device |
US7853983B2 (en) * | 2002-07-29 | 2010-12-14 | Bea Systems, Inc. | Communicating data from a data producer to a data receiver |
US7805606B2 (en) | 2002-07-29 | 2010-09-28 | Bea Systems, Inc. | Computer system for authenticating a computing device |
US7962655B2 (en) * | 2002-07-29 | 2011-06-14 | Oracle International Corporation | Using an identity-based communication layer for computing device communication |
US20080301783A1 (en) * | 2002-07-29 | 2008-12-04 | Abrutyn Scott D | Computer system |
US20080301298A1 (en) * | 2002-07-29 | 2008-12-04 | Linda Bernardi | Identifying a computing device |
US20090007217A1 (en) * | 2002-07-29 | 2009-01-01 | Connecterra, Inc., A Washington Corporation | Computer system for authenticating a computing device |
US20090006840A1 (en) * | 2002-07-29 | 2009-01-01 | Chet Birger | Using an identity-based communication layer for computing device communication |
US20090007234A1 (en) * | 2002-07-29 | 2009-01-01 | Connecterra, Inc. | Computer system for authenticating a computing device |
US20090006850A1 (en) * | 2002-07-29 | 2009-01-01 | Chet Birger | Computer system for authenticating a computing device |
US20040059735A1 (en) * | 2002-09-10 | 2004-03-25 | Gold Russell Eliot | Systems and methods for enabling failover in a distributed-object computing environment |
US7991827B1 (en) * | 2002-11-13 | 2011-08-02 | Mcafee, Inc. | Network analysis system and method utilizing collected metadata |
US8631124B2 (en) | 2002-11-13 | 2014-01-14 | Mcafee, Inc. | Network analysis system and method utilizing collected metadata |
US11960937B2 (en) | 2004-03-13 | 2024-04-16 | Iii Holdings 12, Llc | System and method for an optimizing reservation in time of compute resources based on prioritization function and reservation policy parameter |
US11467883B2 (en) | 2004-03-13 | 2022-10-11 | Iii Holdings 12, Llc | Co-allocating a reservation spanning different compute resources types |
US11652706B2 (en) | 2004-06-18 | 2023-05-16 | Iii Holdings 12, Llc | System and method for providing dynamic provisioning within a compute environment |
US20050281266A1 (en) * | 2004-06-22 | 2005-12-22 | Korea Electronics Technology Institute | Human readable and writable addressing method in a home network protocol |
US11630704B2 (en) | 2004-08-20 | 2023-04-18 | Iii Holdings 12, Llc | System and method for a workload management and scheduling module to manage access to a compute environment according to local and non-local user identity information |
US20060106939A1 (en) * | 2004-11-02 | 2006-05-18 | Samsung Electronics Co., Ltd. | Method and system for transmitting and receiving data using multicasting |
US8554937B2 (en) * | 2004-11-02 | 2013-10-08 | Samsung Electronics Co., Ltd. | Method and system for transmitting and receiving data using multicasting |
US11709709B2 (en) | 2004-11-08 | 2023-07-25 | Iii Holdings 12, Llc | System and method of providing system jobs within a compute environment |
US11656907B2 (en) | 2004-11-08 | 2023-05-23 | Iii Holdings 12, Llc | System and method of providing system jobs within a compute environment |
US11861404B2 (en) | 2004-11-08 | 2024-01-02 | Iii Holdings 12, Llc | System and method of providing system jobs within a compute environment |
US11494235B2 (en) | 2004-11-08 | 2022-11-08 | Iii Holdings 12, Llc | System and method of providing system jobs within a compute environment |
US11886915B2 (en) | 2004-11-08 | 2024-01-30 | Iii Holdings 12, Llc | System and method of providing system jobs within a compute environment |
US11537435B2 (en) | 2004-11-08 | 2022-12-27 | Iii Holdings 12, Llc | System and method of providing system jobs within a compute environment |
US11762694B2 (en) | 2004-11-08 | 2023-09-19 | Iii Holdings 12, Llc | System and method of providing system jobs within a compute environment |
US11537434B2 (en) | 2004-11-08 | 2022-12-27 | Iii Holdings 12, Llc | System and method of providing system jobs within a compute environment |
US11658916B2 (en) | 2005-03-16 | 2023-05-23 | Iii Holdings 12, Llc | Simple integration of an on-demand compute environment |
US7853703B1 (en) * | 2005-03-24 | 2010-12-14 | Google, Inc. | Methods and apparatuses for identification of device presence |
US11765101B2 (en) | 2005-04-07 | 2023-09-19 | Iii Holdings 12, Llc | On-demand access to compute resources |
US11496415B2 (en) | 2005-04-07 | 2022-11-08 | Iii Holdings 12, Llc | On-demand access to compute resources |
US11533274B2 (en) | 2005-04-07 | 2022-12-20 | Iii Holdings 12, Llc | On-demand access to compute resources |
US11831564B2 (en) | 2005-04-07 | 2023-11-28 | Iii Holdings 12, Llc | On-demand access to compute resources |
US11522811B2 (en) | 2005-04-07 | 2022-12-06 | Iii Holdings 12, Llc | On-demand access to compute resources |
US20070011100A1 (en) * | 2005-06-21 | 2007-01-11 | Phil Libin | Preventing identity theft |
WO2007002196A2 (en) * | 2005-06-21 | 2007-01-04 | Corestreet, Ltd. | Preventing identity theft |
WO2007002196A3 (en) * | 2005-06-21 | 2007-11-22 | Corestreet Ltd | Preventing identity theft |
US20110026536A1 (en) * | 2005-11-23 | 2011-02-03 | Comcast Cable Holdings, Llc | Device-to-device communication among customer premise equipment devices |
US10171293B2 (en) | 2005-11-23 | 2019-01-01 | Comcast Cable Communications, Llc | Initializing, provisioning, and managing devices |
US11196622B2 (en) | 2005-11-23 | 2021-12-07 | Comcast Cable Communications, Llc | Initializing, provisioning, and managing devices |
US8726306B2 (en) | 2005-11-23 | 2014-05-13 | Comcast Cable Holdings, Llc | Device-specific pre-provisoining access-limiting for a modem and a consumer premise equipment device |
US9098542B2 (en) | 2005-11-28 | 2015-08-04 | Commvault Systems, Inc. | Systems and methods for using metadata to enhance data identification operations |
US8725737B2 (en) | 2005-11-28 | 2014-05-13 | Commvault Systems, Inc. | Systems and methods for using metadata to enhance data identification operations |
US10198451B2 (en) | 2005-11-28 | 2019-02-05 | Commvault Systems, Inc. | Systems and methods for using metadata to enhance data identification operations |
US11256665B2 (en) | 2005-11-28 | 2022-02-22 | Commvault Systems, Inc. | Systems and methods for using metadata to enhance data identification operations |
US9606994B2 (en) | 2005-11-28 | 2017-03-28 | Commvault Systems, Inc. | Systems and methods for using metadata to enhance data identification operations |
US11442820B2 (en) | 2005-12-19 | 2022-09-13 | Commvault Systems, Inc. | Systems and methods of unified reconstruction in storage systems |
US9996430B2 (en) | 2005-12-19 | 2018-06-12 | Commvault Systems, Inc. | Systems and methods of unified reconstruction in storage systems |
US8930496B2 (en) * | 2005-12-19 | 2015-01-06 | Commvault Systems, Inc. | Systems and methods of unified reconstruction in storage systems |
US9633064B2 (en) | 2005-12-19 | 2017-04-25 | Commvault Systems, Inc. | Systems and methods of unified reconstruction in storage systems |
US20090303991A1 (en) * | 2006-03-02 | 2009-12-10 | Nokia Siemens Networks Gmbh & Co. Kg | Method for Generating an Address Field, Method and Device for Transmitting Electronic Message and Data Packet |
US8532097B2 (en) * | 2006-03-02 | 2013-09-10 | Nokia Siemens Networks Gmbh & Co. Kg | Method for generating an address field, method and device for transmitting electronic message and data packet |
US8953593B2 (en) * | 2006-03-02 | 2015-02-10 | Nokia Solutions And Networks Gmbh & Co. Kg | Method for generating an address field, method and device for transmitting electronic message and data packet |
US20130148664A1 (en) * | 2006-03-02 | 2013-06-13 | Nokia Siemens Networks Gmbh & Co. Kg | Method for generating an address field, method and device for transmitting electronic message and data packet |
US11650857B2 (en) | 2006-03-16 | 2023-05-16 | Iii Holdings 12, Llc | System and method for managing a hybrid computer environment |
US20080178242A1 (en) * | 2006-12-05 | 2008-07-24 | Crackle, Inc. | Video sharing platform providing for downloading of content to portable devices |
US20080178230A1 (en) * | 2006-12-05 | 2008-07-24 | Crackle, Inc. | Video sharing platform providing for public and private sharing and distributed downloads of videos |
US9729829B2 (en) | 2006-12-05 | 2017-08-08 | Crackle, Inc. | Video sharing platform providing for posting content to other websites |
US20080178234A1 (en) * | 2006-12-05 | 2008-07-24 | Crackle, Inc. | Video sharing platform providing for posting content to other websites |
US10091462B2 (en) | 2006-12-05 | 2018-10-02 | Crackle, Inc. | Video sharing platform providing for posting content to other websites |
US10341613B2 (en) | 2006-12-05 | 2019-07-02 | Crackle, Inc. | Video sharing platform providing for posting content to other websites |
US8677091B2 (en) | 2006-12-18 | 2014-03-18 | Commvault Systems, Inc. | Writing data and storage system specific metadata to network attached storage device |
US9124611B2 (en) | 2006-12-18 | 2015-09-01 | Commvault Systems, Inc. | Systems and methods for writing data and storage system specific metadata to network attached storage device |
US7783757B2 (en) | 2007-03-12 | 2010-08-24 | Citrix Systems, Inc. | Systems and methods of revalidating cached objects in parallel with request for object |
US8275829B2 (en) | 2007-03-12 | 2012-09-25 | Citrix Systems, Inc. | Systems and methods of prefetching objects for caching using QoS |
US7584294B2 (en) | 2007-03-12 | 2009-09-01 | Citrix Systems, Inc. | Systems and methods for prefetching objects for caching using QOS |
US7720936B2 (en) | 2007-03-12 | 2010-05-18 | Citrix Systems, Inc. | Systems and methods of freshening and prefreshening a DNS cache |
US7809818B2 (en) | 2007-03-12 | 2010-10-05 | Citrix Systems, Inc. | Systems and method of using HTTP head command for prefetching |
US8037126B2 (en) | 2007-03-12 | 2011-10-11 | Citrix Systems, Inc. | Systems and methods of dynamically checking freshness of cached objects based on link status |
US8074028B2 (en) | 2007-03-12 | 2011-12-06 | Citrix Systems, Inc. | Systems and methods of providing a multi-tier cache |
US8103783B2 (en) | 2007-03-12 | 2012-01-24 | Citrix Systems, Inc. | Systems and methods of providing security and reliability to proxy caches |
US8364785B2 (en) | 2007-03-12 | 2013-01-29 | Citrix Systems, Inc. | Systems and methods for domain name resolution interception caching |
US8504775B2 (en) | 2007-03-12 | 2013-08-06 | Citrix Systems, Inc | Systems and methods of prefreshening cached objects based on user's current web page |
US10911520B2 (en) | 2007-03-12 | 2021-02-02 | Citrix Systems, Inc. | Systems and methods of using the refresh button to determine freshness policy |
US8615583B2 (en) | 2007-03-12 | 2013-12-24 | Citrix Systems, Inc. | Systems and methods of revalidating cached objects in parallel with request for object |
US8701010B2 (en) | 2007-03-12 | 2014-04-15 | Citrix Systems, Inc. | Systems and methods of using the refresh button to determine freshness policy |
US10828092B2 (en) | 2007-05-21 | 2020-11-10 | Atricure, Inc. | Cardiac ablation systems and methods |
US9602573B1 (en) | 2007-09-24 | 2017-03-21 | National Science Foundation | Automatic clustering for self-organizing grids |
US10735505B2 (en) | 2007-09-24 | 2020-08-04 | The Research Foundation For The State University Of New York | Automatic clustering for self-organizing grids |
US11522952B2 (en) | 2007-09-24 | 2022-12-06 | The Research Foundation For The State University Of New York | Automatic clustering for self-organizing grids |
US8601545B2 (en) | 2007-11-01 | 2013-12-03 | Comcast Cable Holdings, Llc | Method and system for directing user between captive and open domains |
US9654412B2 (en) | 2007-11-01 | 2017-05-16 | Comcast Cable Communications, Llc | Method and system for directing user between captive and open domains |
US10200299B2 (en) | 2007-11-01 | 2019-02-05 | Comcast Cable Communications, Llc | Method and system for directing user between captive and open domains |
US11502969B2 (en) | 2007-11-01 | 2022-11-15 | Comcast Cable Communications, Llc | Method and system for directing user between captive and open domains |
US7509433B1 (en) * | 2008-05-19 | 2009-03-24 | International Business Machines Corporation | Selecting quick-to-download content through an alternative hypertext protocol |
US9965479B2 (en) * | 2008-09-18 | 2018-05-08 | Adobe Systems Incorporated | Systems and methods for relinking data items |
US20140032526A1 (en) * | 2008-09-18 | 2014-01-30 | Adobe Systems Incorporated | Systems and methods for relinking data items |
US20100099441A1 (en) * | 2008-10-17 | 2010-04-22 | Sanjay Agarwal | Mobile Device Advertising |
US11720290B2 (en) | 2009-10-30 | 2023-08-08 | Iii Holdings 2, Llc | Memcached server functionality in a cluster of data processing nodes |
US11526304B2 (en) | 2009-10-30 | 2022-12-13 | Iii Holdings 2, Llc | Memcached server functionality in a cluster of data processing nodes |
US11580066B2 (en) | 2012-06-08 | 2023-02-14 | Commvault Systems, Inc. | Auto summarization of content for use in new storage policies |
US11036679B2 (en) | 2012-06-08 | 2021-06-15 | Commvault Systems, Inc. | Auto summarization of content |
US9418149B2 (en) | 2012-06-08 | 2016-08-16 | Commvault Systems, Inc. | Auto summarization of content |
US8892523B2 (en) | 2012-06-08 | 2014-11-18 | Commvault Systems, Inc. | Auto summarization of content |
US10372672B2 (en) | 2012-06-08 | 2019-08-06 | Commvault Systems, Inc. | Auto summarization of content |
US9225806B2 (en) * | 2012-06-15 | 2015-12-29 | Citrix Systems, Inc. | Systems and methods for generating IPID across a cluster network |
US20130339550A1 (en) * | 2012-06-15 | 2013-12-19 | Citrix Systems, Inc. | Systems and methods for generating ipid across a cluster network |
US10542107B2 (en) | 2015-12-04 | 2020-01-21 | Cloudflare, Inc. | Origin server protection notification |
US10178195B2 (en) * | 2015-12-04 | 2019-01-08 | Cloudflare, Inc. | Origin server protection notification |
CN109477400B (en) * | 2016-05-24 | 2021-09-03 | 通用电气公司 | Turbine engine and method of operation |
CN109477400A (en) * | 2016-05-24 | 2019-03-15 | 通用电气公司 | Turbogenerator and operating method |
US10540516B2 (en) | 2016-10-13 | 2020-01-21 | Commvault Systems, Inc. | Data protection within an unsecured storage environment |
US11443061B2 (en) | 2016-10-13 | 2022-09-13 | Commvault Systems, Inc. | Data protection within an unsecured storage environment |
US10642886B2 (en) | 2018-02-14 | 2020-05-05 | Commvault Systems, Inc. | Targeted search of backup data using facial recognition |
Also Published As
Publication number | Publication date |
---|---|
CN1444816A (en) | 2003-09-24 |
WO2001093527A9 (en) | 2002-12-12 |
AU2001268168A1 (en) | 2001-12-11 |
CA2410861C (en) | 2014-02-25 |
JP2004511116A (en) | 2004-04-08 |
KR20030051429A (en) | 2003-06-25 |
CA2410861A1 (en) | 2001-12-06 |
EP1287663A2 (en) | 2003-03-05 |
AR028660A1 (en) | 2003-05-21 |
WO2001093527A3 (en) | 2002-06-13 |
WO2001093527A2 (en) | 2001-12-06 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US6836806B1 (en) | System for network addressing | |
US6879998B1 (en) | Viewer object proxy | |
US6658000B1 (en) | Selective routing | |
CA2410860C (en) | Reverse content harvester | |
CA2413956C (en) | Active directory for content objects | |
US7213062B1 (en) | Self-publishing network directory | |
CA2410850A1 (en) | A qos based content distribution network | |
CA2410959A1 (en) | Content tracking | |
AU2001271283A1 (en) | Client side holistic health check | |
CA2410804A1 (en) | Active directory for content objects | |
CA2410847A1 (en) | Content manager | |
CA2410866C (en) | Client side deterministic routing and transparent redirection |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: AEROCAST.COM, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:RACIBORSKI, NATHAN F.;THOMPSON, MARK R.;REEL/FRAME:011224/0393Effective date: 20000917 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
CC | Certificate of correction | ||
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: AEROCAST, INC., DELAWAREFree format text: CHANGE OF NAME;ASSIGNOR:AEROCAST.COM, INC.;REEL/FRAME:030600/0074Effective date: 20010502 |
|
AS | Assignment |
Owner name: GENERAL INSTRUMENT CORPORATION, PENNSYLVANIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:AEROCAST, INC.;REEL/FRAME:030605/0539Effective date: 20130415 |
|
AS | Assignment |
Owner name: GENERAL INSTRUMENT HOLDINGS, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT CORPORATION;REEL/FRAME:030725/0476Effective date: 20130415Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT HOLDINGS, INC.;REEL/FRAME:030725/0642Effective date: 20130528 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT HOLDINGS, INC.;REEL/FRAME:030866/0113Effective date: 20130528Owner name: GENERAL INSTRUMENT HOLDINGS, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT CORPORATION;REEL/FRAME:030764/0575Effective date: 20130415 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034472/0001Effective date: 20141028 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
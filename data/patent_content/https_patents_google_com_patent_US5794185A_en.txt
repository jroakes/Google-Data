US5794185A - Method and apparatus for speech coding using ensemble statistics - Google Patents
Method and apparatus for speech coding using ensemble statistics Download PDFInfo
- Publication number
- US5794185A US5794185A US08/665,178 US66517896A US5794185A US 5794185 A US5794185 A US 5794185A US 66517896 A US66517896 A US 66517896A US 5794185 A US5794185 A US 5794185A
- Authority
- US
- United States
- Prior art keywords
- ensemble
- excitation waveform
- speech
- resulting
- statistics
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Lifetime
Links
Images
Classifications
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L19/00—Speech or audio signals analysis-synthesis techniques for redundancy reduction, e.g. in vocoders; Coding or decoding of speech or audio signals, using source filter models or psychoacoustic analysis
- G10L19/04—Speech or audio signals analysis-synthesis techniques for redundancy reduction, e.g. in vocoders; Coding or decoding of speech or audio signals, using source filter models or psychoacoustic analysis using predictive techniques
- G10L19/08—Determination or coding of the excitation function; Determination or coding of the long-term prediction parameters
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L19/00—Speech or audio signals analysis-synthesis techniques for redundancy reduction, e.g. in vocoders; Coding or decoding of speech or audio signals, using source filter models or psychoacoustic analysis
- G10L19/04—Speech or audio signals analysis-synthesis techniques for redundancy reduction, e.g. in vocoders; Coding or decoding of speech or audio signals, using source filter models or psychoacoustic analysis using predictive techniques
- G10L19/06—Determination or coding of the spectral characteristics, e.g. of the short-term prediction coefficients
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L25/00—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00
- G10L25/27—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00 characterised by the analysis technique
- G10L25/30—Speech or voice analysis techniques not restricted to a single one of groups G10L15/00 - G10L21/00 characterised by the analysis technique using neural networks
Definitions
- the present invention relates generally to human speech compression, and more specifically to human speech compression using ensemble statistics derived from the speech and excitation waveform.
- Prior-art speech compression techniques use modeling methods that cannot converge to original speech quality regardless of bandwidth or processing effort. Such prior-art methods rely heavily on classification and over-simplified modeling methodologies which neglect the ensemble statistical behavior of the speech waveform, resulting in poor performance and low speech quality.
- Prior-art, class-based interpolative speech coding methods cannot converge to perfect speech due to the simplicity of underlying models. Such simple models are unable to capture the fundamental ensemble statistics of the excitation. These simplistic models are subject to a quality plateau, where perceptual speech quality fails to improve regardless of bandwidth or processing effort.
- FIG. 1 illustrates a voice coding analysis processor apparatus in accordance with a preferred embodiment of the present invention
- FIG. 2 illustrates a voice coding synthesis processor apparatus in accordance with a preferred embodiment of the present invention
- FIG. 3 illustrates a multi-layer perceptron classifier structure in accordance with a preferred embodiment of the present invention
- FIG. 4 illustrates a method for calculating the degree of periodicity in accordance with a preferred embodiment of the present invention
- FIG. 5 illustrates a method for calculating pitch in accordance with a preferred embodiment of the present invention
- FIG. 6 illustrates a method for estimating epoch locations using a three stage analysis in accordance with a preferred embodiment of the present invention
- FIG. 7 illustrates exemplary first stage epoch locations determined from filtered speech in accordance with a preferred embodiment of the present invention
- FIG. 8 illustrates exemplary third stage epoch locations determined from the excitation waveform in accordance with a preferred embodiment of the present invention
- FIG. 9 illustrates a method for computing pitch normalized epoch locations in accordance with a preferred embodiment of the present invention.
- FIG. 10 illustrates a method for computing synchronous scalar statistics in accordance with a preferred embodiment of the present invention
- FIG. 11 illustrates a method for computing ensemble statistics in accordance with a preferred embodiment of the present invention
- FIG. 12 illustrates exemplary ensemble mean waveforms computed from the excitation waveform in accordance with a preferred embodiment of the present invention
- FIG. 13 illustrates exemplary ensemble standard deviation waveforms computed from the excitation waveform in accordance with a preferred embodiment of the present invention
- FIG. 14 illustrates a method for encoding scalar statistics in accordance with a preferred embodiment of the present invention
- FIG. 15 illustrates an exemplary scalar standard deviation vector computed in accordance with a preferred embodiment of the present invention
- FIG. 16 illustrates an exemplary scalar mean vector computed in accordance with a preferred embodiment of the present invention
- FIG. 17 illustrates a method for encoding ensemble statistics in accordance with a preferred embodiment of the present invention
- FIG. 18 illustrates an exemplary ensemble mean which has been cyclically shifted in accordance with a preferred embodiment of the present invention
- FIG. 19 illustrates a method for encoding ensemble statistics
- FIG. 20 illustrates a method for normalizing an excitation waveform in accordance with a preferred embodiment of the present invention
- FIG. 21 illustrates an exemplary normalized excitation waveform derived from scalar statistics and ensemble statistics in accordance with a preferred embodiment of the present invention
- FIG. 22 illustrates an exemplary filtered distribution of a normalized excitation waveform computed in accordance with a preferred embodiment of the present invention
- FIG. 23 illustrates a method for encoding normalized excitation in accordance with a preferred embodiment of the present invention
- FIG. 24 illustrates an exemplary normalized excitation waveform and characterized normalized excitation waveform computed in accordance with a preferred embodiment of the present invention
- FIG. 25 illustrates a method for encoding normalized excitation in accordance with an alternate embodiment of the present invention
- FIG. 26 illustrates an exemplary characterization filtering of the normalized excitation derived in accordance with a preferred embodiment of the present invention
- FIG. 27 illustrates an exemplary normalized excitation characterization using cascaded spectral models derived in accordance with a preferred embodiment of the present invention
- FIG. 28 illustrates a method for encoding ensemble alignment in accordance with a preferred embodiment of the present invention
- FIG. 29 illustrates an exemplary ensemble alignment vector derived in accordance with a preferred embodiment of the present invention.
- FIG. 30 illustrates a method for decoding normalized excitation in accordance with a preferred embodiment of the present invention
- FIG. 31 illustrates an exemplary statistically normalized excitation reconstruction using modulo-F cyclic repetition in accordance with an alternate embodiment of the present invention
- FIG. 32 illustrates an exemplary statistically normalized excitation reconstruction using modulo-F cyclic repetition plus noise in accordance with a preferred embodiment of the present invention
- FIG. 33 illustrates a method for decoding normalized excitation in accordance with an alternate embodiment of the present invention
- FIG. 34 illustrates a method for decoding ensemble statistics in accordance with a preferred embodiment of the present invention
- FIG. 35 illustrates a method for decoding ensemble statistics in accordance with an alternate embodiment of the present invention
- FIG. 36 illustrates a method for decoding scalar statistics in accordance with a preferred embodiment of the present invention
- FIG. 37 illustrates a method for decoding ensemble alignment in accordance with a preferred embodiment of the present invention.
- FIG. 38 illustrates a method for denormalizing an excitation waveform in accordance with a preferred embodiment of the present invention.
- the method and apparatus of the present invention provide class insensitive speech compression methods which model ensemble statistics of a speech waveform.
- the method and apparatus of the present invention also provide robust ensemble statistic parameter extraction techniques and flexible ensemble statistic modeling methods which provide for operation at multiple data rates.
- a preferred embodiment of the present invention achieves transparent speech output given sufficient bandwidth by means of new ensemble statistic modeling methods which completely describe excitation waveform behavior.
- the method and apparatus of the present invention incorporate a complete statistical model comprising scalar and ensemble statistics which together form a complete description of the excitation waveform.
- Each statistical element is encoded separately.
- identity-system capability and low complexity of the present invention make it ideal for use in variable-rate applications. Such applications can be easily derived from a baseline algorithm of a preferred embodiment without changing underlying statistical modeling methods.
- the present invention provides improvement over prior art methods via convergence to an identity system given sufficient bandwidth, significantly reduced reliance on classification, significantly reduced sensitivity to interference, robust parameter extraction techniques, and simple adaptation to multiple data rates.
- FIG. 1 illustrates voice coding analysis processor apparatus 100 in accordance with a preferred embodiment of the present invention.
- Analysis Processor 100 is used to encode speech waveforms which are later decoded by Synthesis Processor 900 which is described in conjunction with FIG. 2.
- Channel 475 can be, for example, a hard-wired connection, a Public Switched Telephone Network (PSTN), a radio frequency (RF) link, an optical or optical fiber link, a satellite system, or any combination thereof.
- PSTN Public Switched Telephone Network
- RF radio frequency
- speech data is sent in one direction only (i.e., from Analysis Processor 100 to Synthesis Processor 900).
- This provides "simplex" (i.e., one-way) communication.
- "duplex" i.e., two-way) communication can be provided.
- another encoding device (not shown) would be co-located with Synthesis Processor 900.
- the other encoding device would encode speech data and send the encoded speech data to another decoding device (not shown) co-located with Analysis Processor 100.
- terminals that include both an encoding device and a decoding device can both send and receive speech data.
- Analysis Processor 100 and Synthesis Processor 900 could be co-located in a single device (e.g., a portable recording device) and, rather than sending encoded speech data across transmission medium 475, the encoded speech could be stored in a memory device (not shown) for later decoding.
- a single device e.g., a portable recording device
- the encoded speech could be stored in a memory device (not shown) for later decoding.
- input speech is first processed by an analog input device (not shown) which converts input speech to an electrical analog signal, which is then converted to a stream of digital samples by A/D Converter Means 10. These samples are operated upon by Pre-processing Means 20, which can perform such steps as high-pass filtering, adaptive filtering, and/or removal of spectral tilt
- Frame-Synchronous Linear Predictive Coding (LPC) Means 25 is performed, wherein a "frame" constitutes a segment of input speech corresponding to a specific time interval.
- Frame Synchronous LPC Means 25 desirably includes LPC analysis and inverse filter operations on the segment of input speech to produce a frame-synchronous excitation waveform corresponding to the segment of speech under analysis.
- this first spectral model can be replaced by a somewhat modified algorithm structure which reduces computational complexity.
- Frame Synchronous LPC Means 25 is followed by Calculate Degree of Periodicity Means 30, which computes a discrete degree of periodicity for the frame of speech under analysis.
- a low-level, multi-layer perceptron (MLP) classifier is used to calculate degree of periodicity and, as will be explained below, to direct codebook selection for the coded parameters.
- the neural network MLP classifier is used to direct the algorithm toward either "more random” or “more periodic” codebooks for those parameters that can benefit from classification. Since the MLP classifier primarily directs codebook selection and does not impact the underlying modeling methods, the speech coding algorithm is relatively insensitive to mis-classification.
- FIG. 3 illustrates multi-layer perceptron (MLP) classifier structure 27
- MLP classifier 27 is a two-layer, ten-perceptron configuration used in a preferred embodiment of the present invention.
- MLP classifier 27 provides excellent class discrimination, is easily modifiable to support alternate feature sets and speech databases, and provides significantly more consistent results over prior-art, threshold-based methods.
- neural weights are derived in an offline backpropagation process.
- MLP classifier 27 desirably uses a four element feature vector, normalized to unit variance and zero mean, and implemented on a two-subframe basis to provide a total of eight input features to the neural network. These features are: (1) peak forward-backward subframe autocorrelation coefficient (over the expected pitch range); (2) subframe four pole LPC gain; (3) subframe low-band to high-band energy ratio (lowpass at 1 kHz/highpass at 3 kHz); and (4) ratio of subframe energy to the maximum of N prior periodic subframe energies, where N is a number on the order of 100 for a subframe size of 15 milliseconds (ms).
- subframe features provide improved discrimination capability at class transition boundaries and further improves performance by providing a simple form of feature context.
- improved discrimination against "near-silence" conditions is obtained by including a very low level, zero-mean gaussian component prior to feature calculation.
- MLP classifier 27 was trained on a large labeled database in excess of 10,000 speech frames in order to ensure good performance over a wide range of input speech data. Testing using a 5000 frame database outside the training set indicates a consistent accuracy rate of approximately 99.8%.
- FIG. 4 illustrates a method for calculating the degree of periodicity in accordance with a preferred embodiment of the present invention.
- the method corresponds to Calculate Degree of Periodicity Means 30 (FIG. 1).
- the method begins with Compute Features step 31, which computes at least one classifier feature (e.g., the four features enumerated above) which convey the degree of periodicity of the input speech.
- Compute Features step 31 is followed by Load Weights step 32, which loads the MLP weights from memory which were calculated in the offline backpropagation process in a preferred embodiment.
- Compute MLP Output step 33 uses the weights and computed features to compute the output of the MLP.
- Compute Degree of Periodicity step 34 scalar quantizes the output of Compute MLP Output step 33 to one of multiple degree-of-periodicity levels. The procedure then ends.
- Calculate Degree-of-Periodicity Means 30 is followed by Calculate Pitch Means 70.
- Excitation-based methods for pitch determination have long proven to be unreliable for certain portions of voiced speech, especially for speech that is readily predicted by an all-pole model.
- a pitch detection technique has been developed which accurately determines pitch directly from the speech waveform, thus eliminating problems associated with prior-art excitation-based pitch detection methods.
- An accurate estimate of pitch is computed directly from subframe autocorrelation (e.g., 15 ms subframe segments) of low-pass filtered speech (e.g., 5 pole low pass Chebyshev, 0.1 dB ripple, 1000 Hz cutoff). Consistent pitch estimates are computed using this technique.
- Half-frame forward and backward subframe correlations are especially useful for onset and offset situations, in that they reduce the random bias introduced by the presence of nonperiodic transition data.
- FIG. 5 illustrates a method for calculating pitch in accordance with a preferred embodiment of the present invention.
- the method corresponds to Calculate Pitch Means 70 (FIG. 1).
- the method begins with Bandpass Filter Speech step 71, wherein the input speech frame is filtered, for example, using a bandpass filter with cutoffs at 100 Hz and 1000 Hz.
- Compute Multiple Subframe Autocorrelations step 72 computes a family of correlation sets using multiple subframe segments (e.g., two or more) of the segment of speech under analysis.
- Select Maximum Correlation Subset step 73 searches each of the subframe correlation sets and selects the subset encompassing the maximum correlation coefficient ⁇ max .
- onset and offset speech correlations maintain a useful harmonic pattern, which is augmented by the subframe analysis.
- an initial pitch estimate is selected in Select Initial Pitch Estimate step 74, within the maximum correlation subset corresponding to the offset lag corresponding to ⁇ max .
- Select Minimum Harmonic step 76 sets the pitch equal to the lag corresponding to the minimum identified harmonic location. Pitch contour smoothing can be implemented later, if necessary, as a companion post process. The procedure then ends.
- Estimate Epoch Locations Means 110 uses the input speech from Pre-processing Means 20, the frame-synchronous excitation from Frame-Synchronous LPC Means 25, and pitch period determined by Calculate Pitch Means 70 to determine excitation epoch locations, wherein an "epoch" refers to a pitch synchronous segment of excitation corresponding to the pitch period.
- a three-stage epoch position detection algorithm is used, whereby low-pass filtered speech, unfiltered speech, and preliminary excitation waveform are searched in a sequential fashion.
- the staged approach determines speech epoch indices directly from the filtered and unfiltered speech waveforms, and refines the estimate by using those indices as a mapping into the excitation waveform, where each index is finalized via a localized search.
- the algorithm first determines a dominant "sense", either positive or negative, and rectifies the waveform to preserve the identified sense.
- FIG. 6 illustrates a method for estimating epoch locations using a three stage analysis in accordance with a preferred embodiment of the present invention.
- the method corresponds to Estimate Epoch Locations Means 110 (FIG. 1).
- the method begins with Lowpass Filter Speech step 111, where a lowpass filter is applied to the input speech frame to produce a filtered speech waveform.
- Lowpass Filter Speech step 111 includes storing the original speech to memory for later reference.
- Determine Waveform Sense step 112 searches the speech waveform, the lowpass filtered speech waveform, and the excitation waveform for the dominant sense of each waveform, wherein sense refers to the primary sign of the waveforms under analysis.
- One embodiment of the method searches for the maximum positive or negative extent for each waveform and assigns the sign of the extent to the sense for each waveform.
- Set Deviation Factors step 115 sets the appropriate pitch search factor for each waveform, where each factor represents the range of pitch period over which waveform peaks are to be determined.
- the pitch search range factor for filtered speech could be set at 0.5
- the search range factor for the speech waveform could be set at 0.3
- the search range factor for the excitation waveform could be set at 0.1.
- the search range of each subsequent stage is narrowed in order to restrict the peak search for that stage.
- Set Deviation Factors step 115 can take into account the degree-of-periodicity when assigning range factors by restricting the search range for aperiodic data.
- Assign Offset step 120 applies a desired offset to each of the excitation epoch peak locations (e.g., 0.5* pitch, although other offsets could also be appropriate). Assigning the offsets to each of the excitation peak locations results in the epoch locations. The procedure then ends.
- a desired offset e.g., 0.5* pitch, although other offsets could also be appropriate. Assigning the offsets to each of the excitation peak locations results in the epoch locations. The procedure then ends.
- FIG. 7 illustrates exemplary first stage epoch locations determined from filtered speech in accordance with a preferred embodiment of the present invention.
- FIG. 8 illustrates exemplary third stage epoch locations determined from the excitation waveform in accordance with a preferred embodiment of the present invention.
- FIGS. 7 and 8 illustrate that the staged method works well to provide an accurate index from the filtered speech waveform into the corresponding excitation portion.
- Estimate Epoch Locations Means 110 produces an estimate of the number of epochs within the segment under analysis.
- Epoch Aligned LPC Means 150 uses the estimated epoch locations to compute second LPC parameters corresponding to a segment of speech aligned with the estimated epoch locations. In this manner, the computed excitation statistics correspond directly with the spectral model for the segment of speech under analysis.
- Epoch Aligned LPC Means 150 sets an analysis window corresponding to the epoch locations for an integer number of epochs, resulting in an epoch-aligned analysis segment, and produces line spectral frequencies corresponding to the segment of speech under analysis, although other representations could also be appropriate (e.g., reflection coefficients).
- Encode Spectrum Means 155 encodes the spectral parameters corresponding to the segment of speech under analysis, producing a code index and quantized spectral parameters.
- Encode Spectrum Means 155 can use vector quantization (VQ) or multi-stage vector quantization (MSVQ) techniques, for example.
- VQ vector quantization
- MSVQ multi-stage vector quantization
- Encode Spectrum Means 155 selects from codebooks corresponding to each of the discrete degrees-of-periodicity produced by Calculate Degree of Periodicity Means 30, although a non-class-based approach could also be appropriate.
- Encode Spectrum Means 155 Following Encode Spectrum Means 155, Compute Closed-Loop Excitation Means 156 applies an inverse filter described by the quantized spectral parameters computed in Encode Spectrum Means 155 to the epoch-aligned analysis segment to compute a second excitation waveform.
- Encode Spectrum Means 155 is not performed between Epoch Aligned LPC Means 150 and Compute Closed Loop Excitation Means 156.
- the LPC analysis and inverse filter are performed on the epoch-aligned segment, resulting in the second excitation waveform and prediction coefficients which are encoded later.
- Encode Ensemble Boundary Means 160 then encodes the epoch-aligned boundary computed by Estimate Epoch Locations Means 110, producing an integer representing the analysis boundary sample index.
- Encode Ensemble Frequency Means 165 then scalar quantizes the number of epochs determined in Estimate Epoch Locations Means 110, and produces a code index corresponding to the quantized number of epochs.
- Compute Pitch Normalized Epoch Boundaries Means 170 uses the quantized ensemble boundary from Encode Ensemble Boundary Means 160, and the quantized number of epochs from Encode Ensemble Frequency Means 165, to estimate pitch normalized epoch locations corresponding to locations computed at Synthesis Processor 900 (FIG. 2), producing a sequence of epoch locations with an effective normalized pitch for each epoch to within one sample of the average pitch.
- FIG. 9 illustrates a method for computing pitch normalized epoch locations in accordance with a preferred embodiment of the present invention.
- the method corresponds to Compute Pitch Normalized Epoch Boundaries Means 170 (FIG. 1).
- the method begins with Load Boundary Index step 171, which loads from memory into a buffer, an end boundary index produced by Encode Ensemble Boundary Means 160.
- the end boundary index corresponds to an ending sample location of the excitation waveform.
- Load Previous Boundary Index step 172 loads from memory into the buffer, a start boundary index corresponding to the previous boundary, and subtracts the frame length to form an index corresponding to the segment staring boundary of excitation to be statistically modeled.
- the start boundary index corresponds to a beginning sample location of the excitation waveform.
- Estimate Pitch P step 173 uses the start boundary index from Load Previous Boundary step 172, the end boundary index from Load Boundary Index step 171, and the number of epochs, ne, from Encode Ensemble Frequency Means 165 (FIG. 1), to estimate the normalized pitch, P, using a relation:
- Set First Location L step 174 sets an index pointer, L, to the first boundary. Increment L by P step 175 increments the index pointer by the pitch estimate, P, producing a subsequent index pointer which defines a pitch normalized epoch location estimate.
- the subsequent index pointer, L is rounded to the nearest integer to reflect a proper sample index in Round L to Nearest Integer step 176. The rounded index pointer is then stored to memory in Store Location L step 177.
- step 178 A determination is made, in step 178, whether all locations have been estimated. When all locations have not been estimated, the procedure branches back to Increment L by P step 175. When all locations have been estimated and stored to memory, the procedure ends.
- Compute Synchronous Scalar Statistics Means 180 computes the scalar statistics for each of the pitch normalized epochs within the analysis segment.
- FIG. 10 illustrates a method for computing synchronous scalar statistics in accordance with a preferred embodiment of the present invention.
- the method corresponds to Compute Synchronous Scalar Statistics Means 180 (FIG. 1).
- the method begins with Select Epoch Boundary step 181 which selects a single epoch boundary corresponding to a single epoch, wherein an epoch boundary is selected from the epoch locations produced by Compute Pitch Normalized Epoch Locations Means 170 (FIG. 1).
- Load Epoch step 182 then loads the segment of excitation corresponding to the epoch boundary into a buffer.
- Compute Scalar Mean step 183 computes a mean of the single epoch.
- Compute Scalar Standard Deviation step 184 computes a standard deviation corresponding to the single epoch.
- the scalar mean and scalar standard deviation, which comprise the scalar statistics for the epoch, are stored to memory in Store Scalar Statistics step 185.
- step 186 A determination is made, in step 186, whether the scalar statistics of all pitch normalized epochs have been computed and stored. When the scalar statistics of all pitch normalized epochs have not been computed and stored to memory, the procedure branches to Select Epoch Boundary step 181, which sets the epoch segment boundary for the next adjacent excitation segment. When the scalar statistics of all pitch normalized epochs have been computed, the procedure ends.
- the scalar standard deviation vector and scalar mean vector can be scaled by further encoded values which represent the average pitch-normalized epoch standard deviation and average pitch-normalized epoch mean computed over the segment of excitation under analysis.
- Compute Synchronous Scalar Statistics Means 180 Following Compute Synchronous Scalar Statistics Means 180, the excitation waveform ensemble statistics are computed in Compute Ensemble Statistics Means 190.
- FIG. 11 illustrates a method for computing ensemble statistics in accordance with a preferred embodiment of the present invention.
- the method begins with Load First Epoch step 191, wherein the first pitch normalized epoch corresponding to a first epoch boundary within the excitation waveform is loaded into a buffer. Upon execution of a loop defined by steps 194 through 199, this first epoch will be considered a previous epoch.
- Energy Normalize step 192 next subtracts the scalar mean from the epoch and divides by the scalar standard deviation, producing an energy normalized epoch segment.
- Optional Expansion step 193 then expands the normalized epoch using linear or non-linear interpolation to an arbitrary length for alignment purposes. Upsampling of segments to an arbitrarily large value in this fashion has proven to be of value in epoch-to-epoch alignment and statistic computation, although downsampling to a smaller length can also be of value. In an alternate embodiment, Optional Expansion step 193 need not be performed.
- Load Next Epoch step 194 repeats the procedure of Load First Epoch step 191 for a subsequent epoch which corresponds to a subsequent epoch boundary within the excitation waveform, placing the subsequent epoch into an adjacent location of the buffer.
- Energy Normalize step 195 then subtracts the epoch scalar mean from the epoch and divides by the epoch scalar standard deviation, producing an energy normalized epoch segment.
- the energy normalized epoch segment is then expanded using interpolation methods in Optional Expansion step 196.
- Optional Expansion step 196 need not be performed.
- Correlate N and N-1 step 197 correlates the subsequent epoch (i.e., epoch N) in the buffer with the previous epoch (i.e., epoch N-1) in the buffer, resulting in an array of correlation coefficients.
- Align Epoch N step 198 then cyclically shifts epoch N by a lag corresponding to the maximum correlation offset in order to ensemble align epoch N with epoch N-1.
- step 199 A determination is then made, in step 199, whether all epochs have been aligned. When all epochs have not been aligned, the procedure branches to Load Next Epoch step 194, and repeats the sequence.
- Compute Ensemble Mean step 200 performs an arithmetic mean operation on the aligned, normalized epochs, producing a vector representing the ensemble mean of the segment of excitation under analysis.
- the ensemble mean vector corresponds to the ensemble statistics of approximately a frame length of excitation.
- Compute Ensemble Standard Deviation step 201 performs an arithmetic standard deviation calculation on the aligned, normalized epochs, producing a second vector representing the ensemble standard deviation of the segment of excitation under analysis.
- the ensemble standard deviation vector corresponds to the ensemble statistics of approximately a frame length of excitation.
- Store Ensemble Mean step 202, and Store Ensemble Standard Deviation step 203 save the statistics to memory prior to encoding. The procedure then ends.
- FIG. 12 illustrates exemplary ensemble mean waveforms computed from the excitation waveform in accordance with a preferred embodiment of the present invention.
- the sequence of ensemble mean vectors was computed for five consecutive frames of excitation.
- FIG. 13 illustrates exemplary ensemble standard deviation waveforms computed from the excitation waveform in accordance with a preferred embodiment of the present invention.
- the sequence of ensemble standard deviation vectors was computed for the corresponding frames. Normalization of the excitation waveform by the ensemble mean of FIG. 12 and the ensemble standard deviation of FIG. 13 provides an excitation sequence which is more readily quantized.
- Compute Ensemble Statistics Means 190 is followed by Encode Scalar Statistics Means 220, which produces a code index for each of the scalar statistics computed in Compute Synchronous Scalar Statistics Means 180 (i.e., scalar mean and scalar standard deviation).
- FIG. 14 illustrates a method for encoding scalar statistics in accordance with a preferred embodiment of the present invention.
- the method corresponds to Encode Scalar Statistics Means 220 (FIG. 1).
- the method begins by determining, in step 221, whether Numepoch>1, where Numepoch corresponds to the number of epochs in the current frame under analysis as calculated in Estimate Epoch Locations Means 110 (FIG. 1).
- Upsample Scalar Statistic Vector step 222 upsamples the scalar statistic vector to a common vector length, where the scalar statistic vector describes the scalar statistics.
- Upsample Scalar Statistic Vector step 222 upsamples the vector, which initially has Numepoch samples, to a common length equal to the maximum number of epochs allowed per frame (e.g., twelve, although other normalizing lengths could also be appropriate).
- Select Codebook Subset step 223 is performed, which uses the degree-of-periodicity computed in Calculate Degree of Periodicity Means 30 (FIG. 1) to select a codebook subset which corresponds to the identified class for the speech segment under analysis.
- the codebook subset can also include a scalar quantizer corresponding to the single scalar statistic value.
- Encode Vector step 224 encodes the scalar statistic vector or scalar value using the codebook subset and quantization methods well known to those of skill in the art, such as VQ, split VQ, MSVQ, wavelet VQ, and wavelet TCQ implementations, producing one or more codebook indices and the quantized, scalar statistic vector.
- step 225 After Encode Vector step 224, a decision is again made, in step 225, whether more than one epoch is represented in the statistic vector, or whether Numepoch>1. When the number of epochs exceeds one, Downsample Quantized Vector step 226 is performed which downsamples the quantized, scalar statistic vector. Downsample Quantized Vector step 226 produces a scalar statistic vector equal to Numepoch samples.
- Store Quantized Vector step 227 stores the quantized scalar statistic vector to memory.
- step 2208 determines whether all statistics have been encoded. When all statistics have not been encoded, the procedure iterates as shown in FIG. 14. Otherwise, the procedure ends.
- FIG. 15 illustrates an exemplary scalar standard deviation vector computed in accordance with a preferred embodiment of the present invention.
- FIG. 16 illustrates an exemplary scalar mean vector computed in accordance with a preferred embodiment of the present invention. When used in conjunction with the ensemble mean and ensemble standard deviation, these two vectors provide a further level of excitation normalization.
- the scalar standard deviation vector and scalar mean vector can be scaled by further encoded values which represent the average epoch standard deviation and average epoch mean computed over the segment of excitation under analysis.
- Encode Scalar Statistics Means 220 is followed by Encode Ensemble Statistics Means 230, which encodes the ensemble standard deviation and ensemble mean, producing one or more code indices and the quantized ensemble statistic vector.
- FIG. 17 illustrates a method for encoding ensemble statistics in accordance with a preferred embodiment of the present invention.
- the method corresponds to a frequency-domain implementation of Encode Ensemble Statistics Means 230 (FIG. 1).
- the method begins with Set Vector Length M step 231, which limits the encoded statistic vector to a maximum of M samples.
- FFT Fast Fourier Transform
- step 234 After Downsample step 233 or when the pitch length does not exceed the characterization vector length, a determination is made, in step 234, whether the statistic being encoded is the ensemble standard deviation. If so, Compute Envelope step 235 estimates an envelope of the ensemble standard deviation, producing a correlated, well-behaved vector for encoding. In an alternate embodiment, when the statistic being encoded is the ensemble standard deviation, a filtered version of the ensemble standard deviation can be computed and used as the vector for encoding.
- Cyclic Transform step 236 is performed which pre-processes the ensemble statistic vector prior to frequency domain transformation in order to minimize frequency domain variance.
- FIG. 18 illustrates an exemplary ensemble mean which has been cyclically shifted in accordance with a preferred embodiment of the present invention.
- the cyclic transform for the ensemble mean vector which cyclically shifted the vector peak to bin zero of the FFT vector, thus placing samples left of the peak at the end of the FFT vector.
- the variance of the cyclically shifted inphase and quadrature is reduced, which improves quantization performance.
- FFT step 237 then performs an M point FFT on the vector produced by Cyclic Transform step 236, resulting in a frequency-domain representation desirably comprising inphase and quadrature frequency domain vectors.
- Cyclic Transform step 236 performs an M point FFT on the vector produced by Cyclic Transform step 236, resulting in a frequency-domain representation desirably comprising inphase and quadrature frequency domain vectors.
- an FFT is used to perform a time-domain to frequency-domain transformation, other algorithms which perform the same function could be used in alternate embodiments. This is true for each FFT steps described herein.
- Select Codebook Subset step 238 uses the degree of periodicity calculated by Calculate Degree of Periodicity Means 30 (FIG. 1) to select a codebook subset corresponding to the identified class.
- the frequency-domain representation is encoded, resulting in codebook indices and a quantized frequency domain representation.
- this entails steps 239 and 240.
- Encode Inphase Vector step 239 quantizes at most M/2+1 samples of the inphase data using appropriate quantization methods such as VQ, split VQ, MSVQ, wavelet VQ, or wavelet TCQ quantizers, producing at least one codebook index and a quantized inphase vector.
- Encode Inphase Vector step 239 can also perform linear or nonlinear downsampling on the inphase vector in order to increase the bandwidth-per-sample.
- Encode Quadrature Vector step 240 then quantizes at most M/2+1 samples of the quadrature data using appropriate quantization methods such as VQ, split VQ, MSVQ, wavelet VQ, or wavelet TCQ quantizers, producing at least one codebook index and a quantized quadrature vector.
- Encode Quadrature Vector step 240 can also perform linear or nonlinear downsampling on the quadrature vector in order to increase the bandwidth-per-sample.
- Compute Conjugate Spectrum step 241 uses the quantized inphase vector and quantized quadrature vector to produce a conjugate FFT spectrum.
- the reconstructed inphase and quadrature vectors are then used in Inverse FFT step 242 to produce a quantized, energy-normalized, cyclically-shifted, time-domain ensemble statistic vector.
- Inverse Cyclic Transform step 243 performs an inverse cyclic shift to return the vector to its original position.
- step 244 A determination is then made, in step 244, whether Pitch>M, or whether the actual ensemble statistic length exceeds the FFT size M. If so, Upsample step 245 is performed which upsamples the ensemble statistic vector to the original vector length, producing a quantized ensemble statistic vector.
- Encode Ensemble Statistics Means 230 encodes inphase and quadrature vectors, alternate embodiments could also be appropriate which use different representations, such as magnitude and phase representations.
- FIG. 19 illustrates a method for encoding ensemble statistics in accordance with an alternate embodiment of the present invention.
- the method corresponds to Encode Ensemble Statistics Means 230 (FIG. 1).
- the alternate embodiment uses a time domain encoding method rather than a frequency-domain encoding method as was described in conjunction with FIG. 18.
- the method begins with Set Vector Length M step 247, which reads from memory a fixed characterization vector length M.
- step 248 A determination is then made, in step 248, whether Pitch>M, or whether the pitch exceeds the characterization vector length M.
- Pitch>M the pitch exceeds the vector length M
- Downsample step 249 is performed, which decimates the ensemble statistic vector using linear or nonlinear methods.
- Upsample step 250 is performed, which interpolates the ensemble statistic vector using linear or nonlinear methods.
- step 251 A determination is then made, in step 251, whether the ensemble statistic vector being encoded is the ensemble standard deviation. If so, Compute Envelope step 252 is performed, which estimates an envelope of the ensemble standard deviation, producing a correlated, well-behaved vector for encoding. In an alternate embodiment, when the statistic being encoded is the ensemble standard deviation, a filtered version of the ensemble standard deviation can be computed and used as the vector for encoding.
- Select Codebook Subset step 253 is performed which uses the degree of periodicity from Calculate Degree of Periodicity Means 30 (FIG. 1) to select a codebook subset corresponding to the identified class.
- Encode Vector step 254 then uses the codebook subset and appropriate quantization methods to encode the length-normalized, time domain ensemble statistic vector. Those methods include VQ, split VQ, MSVQ, wavelet VQ, or wavelet TCQ quantizers.
- the Encode Vector step 254 produces at least one codebook index and a quantized, length-normalized ensemble statistic vector.
- step 255 In order to reconstruct a quantized ensemble statistic vector, a determination is made, in step 255, whether Pitch>M, or whether the pitch exceeds the characterization vector length M.
- step 257 When the pitch is less than the characterization vector length M, Downsample step 257 is performed which produces a quantized ensemble statistic vector of the proper pitch length by decimating the quantized ensemble statistic vector using linear or nonlinear methods.
- step 256 When the pitch exceeds the characterization vector length M, Upsample step 256 is performed, which produces a quantized ensemble statistic vector of the proper pitch length by interpolating the quantized ensemble statistic vector using linear or nonlinear methods.
- step 258 Following reconstruction of a quantized ensemble statistic vector, a determination is made, in step 258, whether all statistics have been encoded. If not, the procedure branches back to Set Vector Length M step 247, and the procedure repeats. If all statistics have been encoded, the procedure ends.
- Encode Ensemble Statistics Means 230 is followed by Normalize Excitation Waveform Means 270.
- a closed-loop approach is incorporated in a preferred embodiment of the present invention, although an open loop process could also be used in an alternate embodiment.
- the excitation waveform is normalized using quantized scalar and ensemble statistics.
- Closed loop quantization requires a staged process, whereby quantized spectrum is used to generate an excitation waveform and subsequent scalar and ensemble statistics. Quantized statistics are subsequently used to develop quantizers for the normalized excitation waveform. Proper quantization of the normalized excitation waveform will recover at least some of the characteristics lost in quantization of the spectrum, scalar statistics, and ensemble statistics.
- FIG. 20 illustrates a method for normalizing an excitation waveform in accordance with a preferred embodiment of the present invention.
- the method corresponds to Normalize Excitation Waveform 270 (FIG. 1).
- the method begins with Load Quantized Scalar Mean step 271, which reads the quantized scalar mean vector generated in Encode Scalar Statistics Means 220 (FIG. 1).
- Load Quantized Scalar Mean step 272 For each epoch in the excitation segment under analysis (which was computed in Compute Closed Loop Excitation Means 156, FIG. 1), Normalize to Synchronous Zero Mean step 272 then normalizes the excitation segment by subtracting the appropriate quantized scalar mean value of the vector, producing a sequence of approximately zero mean contiguous epochs.
- Load Quantized Scalar Standard Deviation step 273 reads the quantized scalar standard deviation vector generated in Encode Scalar Statistics Means 220 (FIG. 1). For each zero mean epoch produced by Normalize to Synchronous Zero Mean step 272, Normalize to Synchronous Unit Variance step 274 normalizes each zero mean epoch by dividing by the appropriate quantized scalar standard deviation value of the vector, producing a sequence of approximately zero mean and approximately unit variance contiguous epochs.
- a first zero mean, unit variance epoch is then loaded into a buffer in Load Epoch step 275.
- Pitch Normalize step 276 then upsamples or downsamples the epoch.
- the effective "local" pitch length i.e., the pitch for the current frame
- Pitch Normalize step 276 can upsample or downsample the segment to a second "global" normalizing length (i.e., a common pitch length for all frames), producing a unit variance, zero mean vector with a normalized length.
- Pitch Normalize step 276 need not be performed.
- Load Quantized Ensemble Mean step 277 and Load Quantized Ensemble Standard Deviation step 278 can also include steps of pitch normalization (i.e., upsampling the quantized ensemble mean and the quantized ensemble standard deviation) corresponding to optional Pitch Normalize step 276.
- Compute Alignment Offset step 279 produces an optimal alignment offset which is used by Align Epoch With Ensemble Mean step 280 to cyclically shift the current epoch in order to maximize ensemble correlation with the ensemble mean, producing a zero-mean, unit- variance, pitch-normalized, shifted epoch (i.e., an aligned epoch).
- Subtract Ensemble Mean step 281 first subtracts the quantized ensemble mean vector from the aligned epoch, producing a zero ensemble mean epoch.
- the epoch normalization is completed by Divide by Ensemble Standard Deviation step 282, which divides the zero ensemble mean epoch by the quantized ensemble standard deviation, producing an ensemble zero mean, ensemble unit variance epoch (i.e., a normalized epoch).
- Store Normalized Epoch step 283 then stores the normalized epoch segment to memory for later encoding.
- Store Alignment Offset step 284 stores the epoch alignment offset computed in Compute Alignment Offset step 279 to memory for later characterization and encoding.
- step 285 A determination is made, in step 285, whether all epochs in the analysis segment have been normalized. If not, the procedure branches to Load Epoch step 275, and the process repeats for consecutive epochs in the analysis segment. When all epochs in the analysis segment have been normalized, the procedure ends
- FIG. 21 illustrates an exemplary normalized excitation waveform derived from scalar statistics and ensemble statistics in accordance with a preferred embodiment of the present invention.
- Ensemble decorrelation has reduced the inherent information content of the normalized excitation waveform, thus simplifying the encoding task.
- FIG. 22 illustrates an exemplary filtered distribution of a normalized excitation waveform computed in accordance with a preferred embodiment of the present invention. The filtered distribution is the corresponding data histogram to the waveform of FIG. 21 and displays gaussian properties.
- Encode Normalize Excitation Means 290 characterizes and encodes the salient features of the normalized excitation waveform for transmission.
- FIG. 23 illustrates a method for encoding normalized excitation in accordance with a preferred embodiment of the present invention.
- the method is a time-domain method corresponds to Encode Normalized Excitation Means 290 (FIG. 1).
- the method begins with Filter Normalized Excitation step 291, which low-pass filters the statistically normalized excitation waveform.
- Low pass filtered (e.g., 0.125 Nyquist) representations of the normalized excitation waveform preserve overall speech quality while introducing little, if any, perceptual distortion.
- FIG. 24 illustrates an exemplary normalized excitation waveform and characterized normalized excitation waveform computed in accordance with a preferred embodiment of the present invention.
- the characterized representation of FIG. 24 preserves speech quality and improves coding efficiency.
- the low perceptual distortion achieved using filtered normalized excitation representations indicates that the normalized vector need not be accurately represented at lower bit rates.
- Downsample Normalized Filtered Excitation step 292 downsamples the normalized, filtered excitation waveform to a common vector length for all normalized excitation vectors, resulting in a characterized excitation waveform vector.
- Select Codebook Subset step 293 uses the degree of periodicity from Calculate Degree of Periodicity Means 30 (FIG. 1) to select a codebook subset corresponding to the identified class.
- Encode Vector step 294 then uses the codebook subset and appropriate quantization methods to encode the characterized, length-normalized, time-domain excitation vector. These methods include VQ, split VQ, MSVQ, wavelet VQ, or wavelet TCQ quantizers.
- the Encode Vector step 294 produces at least one codebook index and a quantized, length-normalized ensemble statistic vector. The procedure then ends.
- FIG. 25 illustrates a method for encoding normalized excitation in accordance with an alternate embodiment of the present invention.
- the alternate embodiment is a frequency-domain method corresponding to Encode Normalized Excitation Means 290 (FIG. 1).
- the method begins with Pitch-Normalize Normalized Excitation step 295.
- the effective "local" pitch length of the normalized excitation epochs i.e., the pitch for the current frame
- is already normalized to within one sample from Estimate Epoch Locations Means 110 (FIG.
- Pitch-Normalize Normalized Excitation step 295 can upsample or downsample each epoch segment of the normalized excitation waveform to a second "global" normalizing length (i.e., a common pitch length for all frames).
- a second "global" normalizing length i.e., a common pitch length for all frames.
- FIG. 26 illustrates an exemplary characterization filtering of the normalized excitation derived in accordance with a preferred embodiment of the present invention.
- the figure illustrates the magnitude spectrum of two normalized representative periodic waveforms with different pitch.
- the normalized excitation waveform spectrum is much less periodic.
- a latent periodic component can often be present since the normalization is performed on a length-normalized epoch synchronous basis.
- the harmonics of the length-normalized waveforms are automatically aligned with each other, thus simplifying quantization of the baseband representation.
- quantization can be performed on harmonic-aligned, fixed-length vectors, (i.e., inphase and quadrature), thus improving quantization performance and subsequent speech quality.
- An effective characterization filter has been experimentally shown to require only four "harmonics" of the normalized excitation waveform, although more or fewer harmonics could also be appropriate.
- characterization filtering of the excitation is performed by Filter Pitch-Normalized, Energy-Normalized Excitation step 296, which, in a preferred embodiment, performs a low-pass filter process as described above, resulting in a filtered excitation waveform.
- a preferred embodiment of the invention performs steps 297 through 300, which use a form of indirect characterization via spectral modeling of the normalized excitation waveform.
- steps 297 through 300 are not performed.
- FIG. 27 illustrates an exemplary normalized excitation characterization using cascaded spectral models derived in accordance with a preferred embodiment of the present invention.
- the figure shows a normalized excitation waveform, a lowpass filtered (LPF) normalized excitation waveform, and cascaded four-pole residuals. Relative to the LPF normalized excitation, a power reduction of 24 dB for the first spectral model, and 45.6 dB for the second spectral model can be observed.
- a bandwidth versus speech quality tradeoff optimizes the bandwidth allocated to the all pole models and the corresponding residuals.
- LPC step 298 performs an LPC analysis on the normalized, characterized, filtered excitation waveform, producing spectral model parameters.
- Encode Spectrum step 299 encodes the spectral parameters using quantization methods such as VQ, split VQ, MS-VQ, wavelet VQ, and wavelet TCQ implementations.
- Encode Spectrum step 299 encodes H line spectral frequencies using an MSVQ, producing at least one code index and quantized spectral model parameters, although other coding methods could also be used.
- the quantized spectral model parameters and characterized, normalized, filtered excitation are used to generate spectral model excitation waveform in Inverse Filter step 300, which inverse filters the filtered excitation waveform using the spectral parameters.
- the filtered excitation (e.g., the spectral model excitation) is transformed to the frequency domain in FFT step 301, which produces a frequency-domain representation.
- the frequency-domain representation comprises an inphase and quadrature waveform.
- Select Codebook Subset step 302 uses the degree-of-periodicity computed in Calculate Degree of Periodicity 30 (FIG. 1) to select a codebook subset which corresponds to the identified class for the speech segment under analysis.
- Encode Inphase step 303 then encodes the inphase component computed in FFT step 301 using the codebook subset and quantization methods such as VQ, split VQ, MSVQ, wavelet VQ, and wavelet TCQ implementations, producing one or more codebook indices.
- Encode Quadrature step 304 then encodes the quadrature component computed in FFT step 301 using the codebook subset and using quantization methods such as VQ, split VQ, MSVQ, and wavelet TCQ implementations, producing one or more code indices. The procedure then ends.
- Encode Normalized Excitation Method 290 encodes inphase and quadrature vectors
- alternate embodiments could also be used which encode different representations of the normalized excitation, such as magnitude and phase representations.
- Encode Normalized Excitation Means 290 is followed by Encode Degree of Periodicity Means 310, which scalar quantizes the degree of periodicity produced by Calculate Degree of Periodicity 30, producing a code index.
- Encode Degree of Periodicity Means 310 is followed by Encode Ensemble Alignment Means 350, which characterizes and encodes the alignment vector computed in Normalize Excitation Waveform Means 270.
- FIG. 28 illustrates a method for encoding ensemble alignment in accordance with a preferred embodiment of the present invention.
- the method corresponds to Encode Ensemble Alignment Means 350 (FIG. 1).
- the method begins by determining, in step 351, whether Numepoch>1, where Numepoch corresponds to the number of epochs in the current frame under analysis as calculated in Estimate Epoch Locations Means 110 (FIG. 1).
- Upsample Ensemble Alignment Vector step 352 is performed, which upsamples the ensemble alignment vector to a common vector length.
- Upsample Ensemble Alignment Vector step 352 upsamples the vector, which initially has Numepoch samples, to a common length equal to the maximum number of epochs allowed per frame (e.g., twelve, although other normalizing lengths could also be appropriate).
- FIG. 29 illustrates an exemplary ensemble alignment vector derived in accordance with a preferred embodiment of the present invention.
- Application of the ensemble alignment vector at the receiver provides a denormalized waveform which more closely matches the original excitation.
- Select Codebook Subset step 353 is performed, which uses the degree-of-periodicity computed in Calculate Degree of Periodicity Means 30 (FIG. 1) to select a codebook subset which corresponds to the identified class for the speech segment under analysis.
- the codebook subset can also include a scalar quantizer corresponding to the single scalar alignment value.
- Encode Vector step 354 then encodes the ensemble alignment vector or scalar alignment value using the codebook subset and quantization methods such as VQ, split VQ, MSVQ, wavelet VQ, and wavelet TCQ implementations, producing one or more codebook indices. The procedure then ends.
- Encode Ensemble Alignment Means 350 is followed by Modulation and Channel Interface Means 390, which creates a modulated bitstream corresponding to the encoded data.
- the modulated data bitstream is transmitted via Modulation and Channel Interface Means 390 to Transmission Medium 475, where the channel can be any communication medium, including fiber, RF, or coaxial cable, although other media are also appropriate.
- the bitstream can be stored in a memory device (not shown) so that the bitstream can be sent at a later time, or can be retrieved and decoded by a synthesis processor co-located with Analysis Processor 100.
- FIG. 2 illustrates voice coding synthesis processor apparatus 900 in accordance with a preferred embodiment of the present invention.
- Synthesis Processor 900 decodes encoded scalar statistics, ensemble statistics, spectral parameters, and a normalized excitation waveform which have been encoded by Analysis Processor 100.
- Synthesis Processor 900 can be remote from or co-located with Analysis Processor 100.
- Synthesis Processor 900 can output the decoded speech to an audio output device, such as a speaker, or can store the decoded speech in a memory device (not shown).
- Synthesis Processor 900 receives a modulated, transmitted bitstream via Transmission Medium 475 and demodulates the bitstream using Channel Interface and Demodulation Means 480, producing code indices corresponding to the code indices generated by Analysis Processor 100.
- Channel Interface and Demodulation Means 480 is followed by Decode Degree of Periodicity Means 485, which decodes the degree of periodicity represented by one or more code indices produced by Channel Interface and Demodulation Means 480, producing a discrete degree of periodicity class.
- Decode Degree of Periodicity Means 485 is followed by Decode Spectrum Means 490, which uses the one or more code indices produced by Channel Interface and Demodulation Means 480 and the companion codebooks to Encode Spectrum Means 155 (FIG. 1) to produce quantized spectral parameters.
- Decode Spectrum Means 490 selects from codebooks corresponding to each of the discrete degrees-of-periodicity produced by Decode Degree of Periodicity Means 485, although a non-class-based approach could also be appropriate in an alternate embodiment.
- Decode Spectrum Means 490 is followed by Decode Ensemble Frequency Means 520, which decodes the number of epochs represented by a code index produced by Channel Interface and Demodulation Means 480, resulting in an integer number of epochs corresponding to the segment of speech to be synthesized.
- Decode Ensemble Frequency Means 520 is followed by Decode Ensemble Boundary Means 540, which decodes the epoch-aligned boundary computed by Estimate Epoch Locations Means 110 (FIG. 1), producing an integer representing the analysis boundary sample index.
- Decode Ensemble Boundary Means 540 is followed by Decode Normalized Excitation Means 550.
- FIG. 30 illustrates a method for decoding normalized excitation in accordance with a preferred embodiment of the present invention.
- the method begins with Select Codebook Subset step 491.
- Select Codebook Subset step 491 selects the normalized excitation codebook subset corresponding to the discrete degree-of-periodicity produced by Decode Degree of Periodicity Means 485 (FIG. 2), although a non-class-based approach could also be appropriate.
- Decode Vector step 492 uses the codebook subsets which are companions to those used by Encode Normalized Excitation Means 290 (FIG. 1) and the appropriate codebook indices from Channel Interface and Demodulation Means 480 (FIG. 2) to produce a characterized, quantized, normalized excitation vector.
- Upsample Vector step 493 then applies linear or nonlinear interpolation methods to the characterized, normalized excitation vector to produce a normalized excitation vector.
- Simulate Highband process 514 which includes steps 494 through 497, is then performed, although an alternate embodiment might not perform Simulate Highband process 514.
- Simulate Highband process 514 simulates highband excitation components which were discarded by Encode Normalized Excitation Means 290 (FIG. 1).
- Simulate Highband process 514 begins with FFT step 494, which performs a Fast Fourier Transform upon the normalized excitation vector, producing a frequency-domain representation.
- the frequency-domain representation comprises inphase and quadrature vectors.
- Modulo-F Cyclic Repetition step 495 then performs a cyclic process upon the frequency-domain representation (e.g., the baseband inphase and quadrature components) to produce an estimate of elided highband components.
- Lowpass characterization filtering of the normalized excitation preserves a relatively high-level speech quality and speaker recognizability. However, characterization filtering discards the normalized excitation high-frequency components, which can contribute to perceived quality.
- post-processing methods can be introduced which enhance speech quality without sacrificing bandwidth.
- perceived quality is improved in the face of normalized excitation characterization filtering by simulating high frequency inphase and quadrature components which were discarded at the transmitter.
- Modulo-F Cyclic Repetition step 495 represents a post-process which ultimately improves synthesized speech quality without the use of additional transmission bandwidth.
- FIG. 31 illustrates an exemplary statistically normalized excitation reconstruction using modulo-F cyclic repetition in accordance with an alternate embodiment of the present invention.
- the method enhances synthesized speech quality in conjunction with Modulo-F Cyclic Repetition step 495 (FIG. 30).
- the frequency-domain representation components e.g., the inphase and quadrature components
- F represents a characterization filter cutoff.
- F represents a characterization filter cutoff
- FIG. 32 illustrates an exemplary statistically normalized excitation reconstruction using modulo-F cyclic repetition plus noise in accordance with a preferred embodiment of the present invention.
- This technique provides the greatest speech quality improvement for aperiodic speech, as determined by the degree-of-periodicity class.
- Noise power can be proportional to the baseband energy, although other noise power levels can also be appropriate.
- the noise power can be proportional to the degree of periodicity class produced by Decode Degree of Periodicity Means 485 (FIG. 2).
- Compute Conjugate Spectrum step 496 uses the inphase vector and quadrature vector to produce the conjugate FFT spectrum.
- Compute Conjugate Spectrum step 496 produces a second frequency-domain representation having the same number of inphase samples and quadrature samples used to transform the normalized excitation component in FFT step 494.
- Inverse FFT step 497 performs an inverse Fast Fourier Transform on the second frequency-domain representation, producing a time domain, normalized excitation vector with simulated highband components. The procedure then ends.
- FIG. 33 illustrates a method for decoding normalized excitation in accordance with an alternate embodiment of the present invention.
- the method corresponds to Decode Normalized Excitation Means 490 (FIG. 2) and is a companion decoding method for Encode Normalized Excitation Means 290 (FIG. 1).
- the method begins with Select Codebook Subset step 498.
- Select Codebook Subset step 498 selects the normalized excitation codebook subsets corresponding to the discrete degree-of-periodicity produced by Decode Degree of Periodicity Means 485 (FIG. 2), although a non-class-based approach could also be appropriate.
- Decode Inphase step 499 uses the codebook subsets which are companion codebooks to those used in Encode Normalized Excitation Means 290 (FIG. 1) and the appropriate codebook indices from Channel Interface and Demodulation Means 480 (FIG. 2) to decode an inphase component of a frequency-domain representation of the normalized excitation waveform, resulting in a characterized, quantized, inphase vector.
- Decode Quadrature step 500 then uses the codebook subsets which are companion codebooks to those used in Encode Normalized Excitation Means 290 (FIG. 1) and the appropriate codebook indices from Channel Interface and Demodulation Means 480 (FIG. 2) to decode a quadrature component of the frequency-domain representation of the normalized excitation waveform, resulting in a characterized, quantized, quadrature vector.
- steps 501 and 502 are then performed, although in an alternate embodiment, these steps are omitted.
- step 501 a determination is made whether a spectral model was used by Encode Normalized Excitation Means 290. When a spectral model was not used, Modulo-F Cyclic Repetition step 502 is performed in the manner described in conjunction with FIG. 30.
- Compute Conjugate Spectrum step 503 uses the inphase vector and quadrature vector to produce a conjugate FFT spectrum.
- Compute Conjugate Spectrum step 503 produces the same number of inphase samples and quadrature samples used to transform the normalized excitation component in Encode Normalized Excitation Means 290 (FIG. 1).
- Inverse FFT step 504 performs an inverse Fast Fourier Transform on the inphase and quadrature components, producing a time domain vector.
- a determination is again made, in step 505, whether a spectral model is employed.
- the output of Inverse FFT step 504 represents the quantized normalized excitation waveform and Denormalize Pitch step 512 is performed in a preferred embodiment.
- Denormalize Pitch step 512 performs an inverse epoch-synchronous process to that described in Encode Normalized Excitation Means 290 (FIG. 1) to produce a time domain, normalized excitation vector with proper local pitch. In an alternate embodiment, Denormalize Pitch step 512 is omitted. The procedure then ends.
- Decode Spectrum step 506 decodes the spectral model parameters derived from the normalized excitation waveform using the codebook subsets which represent companion codebooks to those implemented in Encode Normalized Excitation Means 290 (FIG. 1). The decoded spectral model parameters correspond to the reconstructed spectral model residual. Next, the spectral model parameters and spectral model excitation are used by Prediction Filter step 507 to produce the quantized, normalized excitation waveform.
- Simulate Highband process 513 which includes steps 508 through 511, is then performed, although an alternate embodiment might not perform Simulate Highband process 513.
- Simulate Highband process 513 simulates highband excitation components which were discarded by Encode Normalized Excitation Means 290 (FIG. 1).
- Simulate Highband process 513 begins with FFT step 508, which performs a Fast Fourier Transform upon the normalized excitation vector, producing a frequency-domain representation.
- the frequency-domain representation includes inphase and quadrature vectors.
- Modulo-F Cyclic Repetition step 509 performs in the manner described in conjunction with FIG. 30, resulting in a second frequency-domain representation.
- Compute Conjugate Spectrum step 510 uses the second frequency-domain representation (e.g., the inphase vector and quadrature vectors) to produce the conjugate FFT spectrum.
- Compute Conjugate Spectrum step 510 produces the same number of frequency-domain representation samples used to transform the normalized excitation component in FFT step 508.
- Inverse FFT step 511 performs an inverse Fast Fourier Transform on the second frequency-domain representation (e.g., the inphase and quadrature components), producing a time-domain, normalized excitation vector with simulated highband components.
- Denormalize Pitch step 512 is performed in a preferred embodiment, although in an alternate embodiment, Denormalize Pitch step 512 could be omitted.
- Denormalize Pitch step 512 performs an inverse epoch-synchronous process to that described in conjunction with Encode Normalized Excitation Means 290 (FIG. 1) to produce a time domain, normalized excitation vector with simulated highband components and proper local pitch. The procedure then ends.
- FIG. 34 illustrates a method for decoding ensemble statistics in accordance with a preferred embodiment of the present invention.
- the method corresponds to Decode Ensemble Statistics Means 560 (FIG. 2).
- the method begins with Select Codebook Subset step 561, which selects a codebook subset from the ensemble statistic codebooks corresponding to the discrete degree-of-periodicity produced by Decode Degree of Periodicity Means 485 (FIG. 2), although a non-class-based approach could also be appropriate.
- Select Codebook Subset step 561 is followed by steps 562 and 563 which decode a frequency-domain representation of an encoded ensemble statistic using the codebook subset.
- the frequency-domain representation comprises an inphase vector and a quadrature vector.
- Decode Inphase Vector step 562 which uses the companion codebooks to those used by Encode Ensemble Statistics Means 230 (FIG. 1) and the appropriate codebook indices from Channel Interface and Demodulation Means 480 (FIG. 2) to produce a characterized, quantized, inphase vector.
- Decode Quadrature Vector step 563 uses the companion codebooks to those used by Encode Ensemble Statistics Means 230 (FIG. 1) and the appropriate codebook indices from Channel Interface and Demodulation Means 480 (FIG. 2) to produce a characterized, quantized, quadrature vector.
- Compute Conjugate Spectrum step 564 then uses the frequency-domain representation (e.g., the inphase vector and quadrature vector) to produce the conjugate FFT spectrum.
- Compute Conjugate Spectrum step 564 produces the same number of frequency-domain representation samples used to transform the ensemble statistic component in Encode Ensemble Statistics Means 230 (FIG. 1).
- Inverse FFT step 565 performs an inverse Fast Fourier Transform on the frequency-domain representation (e.g., the inphase and quadrature components), producing a time-domain vector representing the quantized, cyclically-shifted, ensemble statistic.
- Inverse Cyclic Transform step 566 performs an inverse shifting process substantially similar to that described in conjunction with Encode Ensemble Statistics Means 230 (FIG. 1), producing a quantized ensemble statistic vector.
- step 567 A determination is then made, in step 567, whether Pitch>M, or whether the pitch of the ensemble statistic, determined from Decode Ensemble Frequency Means 520 (FIG. 2) and Decode Ensemble Boundary Means 540 (FIG. 2), exceeds the characterization vector length. If the pitch does exceed the characterization vector length, Upsample step 568 upsamples the ensemble statistic by performing a linear or nonlinear interpolation process to generate a quantized ensemble statistic vector of the proper pitch length.
- step 569 a determination is made, in step 569, whether all statistics have been decoded. When all statistics have not been decoded, the procedure branches to repeat the process. Otherwise, the procedure ends.
- FIG. 35 illustrates a method for decoding ensemble statistics in accordance with an alternate embodiment of the present invention.
- the method corresponds to Decode Ensemble Statistics Means 560 (FIG. 2).
- the method begins with Select Codebook Subset step 572 which selects a codebook subset from the ensemble statistic codebooks corresponding to the discrete degree-of-periodicity produced by Decode Degree of Periodicity Means 485 (FIG. 2), although a non-class-based approach could also be appropriate.
- Select Codebook Subset step 572 is followed by Decode Time Domain Vector step 573, which uses the codebook subsets which are companion codebooks to those used in Encode Ensemble Statistics Means 230 (FIG. 1) and the appropriate codebook indices from Channel Interface and Demodulation Means 480 (FIG. 2) to produce a characterized, quantized, time-domain ensemble statistic vector.
- step 574 a determination is made, in step 574, whether Pitch>M, or whether the characterized vector length M is smaller than the current pitch. If so, Upsample step 575 is performed, which upsamples the time-domain ensemble statistic vector. When the characterized vector length M is larger than the current pitch, Downsample step 576 is performed which downsamples the time-domain ensemble statistic vector.
- step 577 A determination is then made, in step 577, whether all ensemble statistics (i.e., ensemble mean and ensemble standard deviation) have been decoded. When all ensemble statistics have not been decoded, the procedure branches to repeat the process for the next statistic. Otherwise, the procedure ends.
- all ensemble statistics i.e., ensemble mean and ensemble standard deviation
- FIG. 36 illustrates a method for decoding scalar statistics in accordance with a preferred embodiment of the present invention.
- the method corresponds to Decode Scalar Statistics Means 590 (FIG. 2).
- the method begins with Select Codebook Subset step 541, which selects a codebook subset from the scalar statistic codebooks corresponding to the discrete degree-of-periodicity produced by Decode Degree of Periodicity Means 485 (FIG. 2), although a non-class-based approach could also be appropriate.
- Select Codebook Subset step 541 is followed by Decode Scalar Statistic Vector step 542, which uses the codebook subset which represents companion codebooks to those used in Encode Scalar Statistics Means 230 (FIG. 1) and the appropriate codebook indices from Channel Interface and Demodulation Means 480 (FIG. 2) to produce a characterized, quantized, time-domain scalar statistic vector.
- Decode Scalar Statistic Vector step 542 uses the codebook subset which represents companion codebooks to those used in Encode Scalar Statistics Means 230 (FIG. 1) and the appropriate codebook indices from Channel Interface and Demodulation Means 480 (FIG. 2) to produce a characterized, quantized, time-domain scalar statistic vector.
- step 543 A determination is then made, in step 543, whether the number of epochs in the encoded, normalized excitation waveform exceeds one, or whether Numepoch>1. If so, Downsample Vector step 544 is performed, which downsamples the time-domain scalar statistic vector using linear or nonlinear decimation to produce a scalar statistic vector of length equal to the number of epochs in the excitation segment being reconstructed.
- step 545 a determination is made, in step 545, whether all encoded scalar statistics have been decoded, (i.e., scalar mean, and scalar standard deviation). If not, the procedure branches to repeat the process for the next statistic. If so, the procedure ends.
- a method corresponding to Decode Scalar Statistics Means 540 can also include steps for decoding an average scalar mean and an average scalar standard deviation computed over the segment of excitation being modeled, and denormalizing the scalar statistic vectors by the average scalar statistic values.
- FIG. 37 illustrates a method for decoding ensemble alignment in accordance with a preferred embodiment of the present invention.
- the method corresponds to Decode Ensemble Alignment Means 600 (FIG. 2).
- the method begins with Select Codebook Subset step 601.
- Select Codebook Subset step 601 selects a codebook subset from the ensemble alignment codebooks corresponding to the discrete degree-of-periodicity produced by Decode Degree of Periodicity Means 485 (FIG. 2), although a non-class-based approach could also be appropriate.
- Decode Ensemble Alignment Vector step 602 uses the codebook subsets which represent companion codebooks to those used by Encode Ensemble Alignment Means 350 (FIG. 1), and the codebook indices produced by Channel Interface and Demodulation Means 480 (FIG. 2) to produce a characterized ensemble alignment vector.
- step 603 A determination is then made, in step 603, whether the number of epochs (i.e., Numepoch) in the encoded, normalized excitation waveform exceeds one, or whether Numepoch>1. If so, Downsample Ensemble Alignment Vector step 604 is performed, which downsamples the characterized ensemble alignment vector by implementing linear or non-linear decimation to produce an ensemble alignment vector of Numepoch samples. The ensemble alignment vector is later used in the denormalization process.
- epochs i.e., Numepoch
- Decode Ensemble Alignment Means 600 is followed by Compute Pitch Normalized Epoch Locations Means 630, which uses the ensemble frequency produced by Decode Ensemble Frequency Means 520 (FIG. 2), and the ensemble boundary produced by Decode Ensemble Boundary Means 540 (FIG. 2) to produce receiver epoch locations identical to those computed at the transmitter.
- Compute Pitch Normalized Epoch Locations Means 630 uses a method substantially similar to that illustrated in FIG. 9 which corresponds to Compute Pitch Normalized Epoch Locations Means 170 (FIG. 1).
- Compute Pitch Normalized Epoch Locations Means 630 is followed by Denormalize Excitation Waveform Means 670.
- FIG. 38 illustrates a method for denormalizing an excitation waveform in accordance with a preferred embodiment of the present invention. The method corresponds to Denormalize Excitation Waveform Means 670 (FIG. 2). The method begins with Select Ensemble Segment step 671. Select Ensemble Segment step 671 uses the normalized excitation from Decode Normalized Excitation Means 550 (FIG. 2) and the epoch locations from Compute Pitch Normalized Epoch Locations Means 630 (FIG. 2) to select a first epoch-synchronous segment boundary of normalized excitation (i.e., an ensemble segment).
- Apply Ensemble Standard Deviation step 672 next multiplies the ensemble segment by the ensemble standard deviation produced by Decode Ensemble Statistics Means 560 (FIG. 2) to produce a second ensemble segment.
- Add Ensemble Mean step 673 adds the ensemble mean produced by Decode Ensemble Statistics Means 560 (FIG. 2) to the second ensemble segment to produce a third ensemble segment.
- Apply Scalar Standard Deviation step 674 then multiplies the third ensemble segment by a single scalar standard deviation produced by Decode Scalar Statistics Means 590 (FIG. 2) corresponding to the epoch being reconstructed, producing a fourth ensemble segment.
- Add Scalar Mean step 675 adds to the fourth ensemble segment a single scalar mean value produced by Decode Scalar Statistics Means 590 (FIG. 2) corresponding to the epoch being reconstructed, producing a denormalized, shifted excitation segment.
- Apply Alignment Offset step 676 shifts the denormalized excitation segment by the signal scalar alignment offset produced by Decode Ensemble Alignment Means 600 (FIG. 2) corresponding to the epoch being reconstructed, producing a denormalized excitation segment.
- an optional weighting function is then applied to the denormalized excitation segment in Apply Weighting step 677 to produce a denormalized, weighted excitation segment.
- Apply Weighting step 677 could be omitted.
- Apply Weighting step 677 can use any appropriate weighting function, such as a hamming window or raised cosine window, in order to minimize excitation segment boundary discontinuities.
- step 678 A determination is then made, in step 678, whether all epoch synchronous segments have been denormalized. When all epoch synchronous segments have not been denormalized, the procedure branches back to Select Ensemble Segment step 671, and the procedure repeats. When all segments have been denormalized, resulting in a decoded excitation waveform, the procedure ends.
- Synthesize Speech Means 710 uses the denormalized excitation estimate to reconstruct high-quality speech.
- Synthesize Speech Means 710 can include direct form or lattice synthesis filters which implement the reconstructed excitation waveform and LPC prediction coefficients or reflection coefficients.
- Post Processing Means 750 consists of signal post processing methods, including adaptive post filtering techniques and spectral tilt re-introduction. Reconstructed, post-processed, digitally-sampled speech from Post Processing Means 750 can then be converted to an analog signal via D/A Converter Means 760 and output to an audio output device (not shown), producing output speech audio. Alternatively, the digital signal or analog signal could be stored to an appropriate storage medium (not shown).
- variable rate embodiments can be developed from a preferred embodiment via a simple change of codebooks. In this fashion, the same algorithm is used across multiple data rates.
- variable-rate implementation of the invention simplifies hardware and software requirements in systems that require multiple data rates, improves performance in environments with widely varying interference conditions, and provides for improved bandwidth utilization in multi-channel applications.
- VQ, split VQ, wavelet VQ, wavelet TCQ, or MSVQ codebooks can be developed with varying bit allocations at each desired level of bandwidth.
- MSVQs can be developed which incorporate multiple stages corresponding to higher levels of bandwidth. In this manner, low-level stages can be omitted at lower bit rates, with a corresponding drop in speech quality. Higher bit rate implementations would use more of the MSVQ stages to achieve higher speech quality. Hence, MSVQ implementations would provide for rapid changes in data rate.
- variable-rate vocoder could achieve near transparent speech quality by full application of codebooks of all modeled parameters.
- codebook allocations can be reduced, or specific non-critical parameters can be discarded to meet system bandwidth requirements. In this manner, the bandwidth formerly allocated to those parameters can be used for other purposes.
- the method and apparatus of the present invention can be used to open multiple channels within a fixed bandwidth by reducing the bandwidth allocated to each channel.
- the multi-rate embodiment would also be useful in high interference environments, whereby more channel bandwidth is allocated toward forward error correction in order to preserve intelligibility.
Abstract
Description
Claims (46)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/665,178 US5794185A (en) | 1996-06-14 | 1996-06-14 | Method and apparatus for speech coding using ensemble statistics |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US08/665,178 US5794185A (en) | 1996-06-14 | 1996-06-14 | Method and apparatus for speech coding using ensemble statistics |
Publications (1)
Publication Number | Publication Date |
---|---|
US5794185A true US5794185A (en) | 1998-08-11 |
Family
ID=24669048
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US08/665,178 Expired - Lifetime US5794185A (en) | 1996-06-14 | 1996-06-14 | Method and apparatus for speech coding using ensemble statistics |
Country Status (1)
Country | Link |
---|---|
US (1) | US5794185A (en) |
Cited By (18)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6012025A (en) * | 1998-01-28 | 2000-01-04 | Nokia Mobile Phones Limited | Audio coding method and apparatus using backward adaptive prediction |
US6014620A (en) * | 1995-06-21 | 2000-01-11 | Telefonaktiebolaget Lm Ericsson | Power spectral density estimation method and apparatus using LPC analysis |
WO2000074039A1 (en) * | 1999-05-26 | 2000-12-07 | Koninklijke Philips Electronics N.V. | Audio signal transmission system |
US20020095394A1 (en) * | 2000-12-13 | 2002-07-18 | Tremiolles Ghislain Imbert De | Method and circuits for encoding an input pattern using a normalizer and a classifier |
US20040002856A1 (en) * | 2002-03-08 | 2004-01-01 | Udaya Bhaskar | Multi-rate frequency domain interpolative speech CODEC system |
US20060095260A1 (en) * | 2004-11-04 | 2006-05-04 | Cho Kwan H | Method and apparatus for vocal-cord signal recognition |
US20070009160A1 (en) * | 2002-12-19 | 2007-01-11 | Lit-Hsin Loo | Apparatus and method for removing non-discriminatory indices of an indexed dataset |
US20090094026A1 (en) * | 2007-10-03 | 2009-04-09 | Binshi Cao | Method of determining an estimated frame energy of a communication |
US20090144062A1 (en) * | 2007-11-29 | 2009-06-04 | Motorola, Inc. | Method and Apparatus to Facilitate Provision and Use of an Energy Value to Determine a Spectral Envelope Shape for Out-of-Signal Bandwidth Content |
US20090198498A1 (en) * | 2008-02-01 | 2009-08-06 | Motorola, Inc. | Method and Apparatus for Estimating High-Band Energy in a Bandwidth Extension System |
US20090216535A1 (en) * | 2008-02-22 | 2009-08-27 | Avraham Entlis | Engine For Speech Recognition |
US20100049342A1 (en) * | 2008-08-21 | 2010-02-25 | Motorola, Inc. | Method and Apparatus to Facilitate Determining Signal Bounding Frequencies |
US20100198587A1 (en) * | 2009-02-04 | 2010-08-05 | Motorola, Inc. | Bandwidth Extension Method and Apparatus for a Modified Discrete Cosine Transform Audio Coder |
US20110112844A1 (en) * | 2008-02-07 | 2011-05-12 | Motorola, Inc. | Method and apparatus for estimating high-band energy in a bandwidth extension system |
US20120265525A1 (en) * | 2010-01-08 | 2012-10-18 | Nippon Telegraph And Telephone Corporation | Encoding method, decoding method, encoder apparatus, decoder apparatus, program and recording medium |
US8712771B2 (en) * | 2009-07-02 | 2014-04-29 | Alon Konchitsky | Automated difference recognition between speaking sounds and music |
US9373341B2 (en) | 2012-03-23 | 2016-06-21 | Dolby Laboratories Licensing Corporation | Method and system for bias corrected speech level determination |
TWI581250B (en) * | 2010-12-03 | 2017-05-01 | 杜比實驗室特許公司 | Adaptive processing with multiple media processing nodes |
Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4850022A (en) * | 1984-03-21 | 1989-07-18 | Nippon Telegraph And Telephone Public Corporation | Speech signal processing system |
US4912764A (en) * | 1985-08-28 | 1990-03-27 | American Telephone And Telegraph Company, At&T Bell Laboratories | Digital speech coder with different excitation types |
US5195168A (en) * | 1991-03-15 | 1993-03-16 | Codex Corporation | Speech coder and method having spectral interpolation and fast codebook search |
US5396576A (en) * | 1991-05-22 | 1995-03-07 | Nippon Telegraph And Telephone Corporation | Speech coding and decoding methods using adaptive and random code books |
US5479559A (en) * | 1993-05-28 | 1995-12-26 | Motorola, Inc. | Excitation synchronous time encoding vocoder and method |
US5579437A (en) * | 1993-05-28 | 1996-11-26 | Motorola, Inc. | Pitch epoch synchronous linear predictive coding vocoder and method |
US5602959A (en) * | 1994-12-05 | 1997-02-11 | Motorola, Inc. | Method and apparatus for characterization and reconstruction of speech excitation waveforms |
-
1996
- 1996-06-14 US US08/665,178 patent/US5794185A/en not_active Expired - Lifetime
Patent Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4850022A (en) * | 1984-03-21 | 1989-07-18 | Nippon Telegraph And Telephone Public Corporation | Speech signal processing system |
US4912764A (en) * | 1985-08-28 | 1990-03-27 | American Telephone And Telegraph Company, At&T Bell Laboratories | Digital speech coder with different excitation types |
US5195168A (en) * | 1991-03-15 | 1993-03-16 | Codex Corporation | Speech coder and method having spectral interpolation and fast codebook search |
US5396576A (en) * | 1991-05-22 | 1995-03-07 | Nippon Telegraph And Telephone Corporation | Speech coding and decoding methods using adaptive and random code books |
US5479559A (en) * | 1993-05-28 | 1995-12-26 | Motorola, Inc. | Excitation synchronous time encoding vocoder and method |
US5579437A (en) * | 1993-05-28 | 1996-11-26 | Motorola, Inc. | Pitch epoch synchronous linear predictive coding vocoder and method |
US5602959A (en) * | 1994-12-05 | 1997-02-11 | Motorola, Inc. | Method and apparatus for characterization and reconstruction of speech excitation waveforms |
Cited By (38)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6014620A (en) * | 1995-06-21 | 2000-01-11 | Telefonaktiebolaget Lm Ericsson | Power spectral density estimation method and apparatus using LPC analysis |
US6012025A (en) * | 1998-01-28 | 2000-01-04 | Nokia Mobile Phones Limited | Audio coding method and apparatus using backward adaptive prediction |
WO2000074039A1 (en) * | 1999-05-26 | 2000-12-07 | Koninklijke Philips Electronics N.V. | Audio signal transmission system |
US7133854B2 (en) * | 2000-12-13 | 2006-11-07 | International Business Machines Corporation | Method and circuits for encoding an input pattern using a normalizer and a classifier |
US20020095394A1 (en) * | 2000-12-13 | 2002-07-18 | Tremiolles Ghislain Imbert De | Method and circuits for encoding an input pattern using a normalizer and a classifier |
US20040002856A1 (en) * | 2002-03-08 | 2004-01-01 | Udaya Bhaskar | Multi-rate frequency domain interpolative speech CODEC system |
US8010296B2 (en) * | 2002-12-19 | 2011-08-30 | Drexel University | Apparatus and method for removing non-discriminatory indices of an indexed dataset |
US20070009160A1 (en) * | 2002-12-19 | 2007-01-11 | Lit-Hsin Loo | Apparatus and method for removing non-discriminatory indices of an indexed dataset |
US20060095260A1 (en) * | 2004-11-04 | 2006-05-04 | Cho Kwan H | Method and apparatus for vocal-cord signal recognition |
US7613611B2 (en) * | 2004-11-04 | 2009-11-03 | Electronics And Telecommunications Research Institute | Method and apparatus for vocal-cord signal recognition |
US20090094026A1 (en) * | 2007-10-03 | 2009-04-09 | Binshi Cao | Method of determining an estimated frame energy of a communication |
US8688441B2 (en) | 2007-11-29 | 2014-04-01 | Motorola Mobility Llc | Method and apparatus to facilitate provision and use of an energy value to determine a spectral envelope shape for out-of-signal bandwidth content |
US20090144062A1 (en) * | 2007-11-29 | 2009-06-04 | Motorola, Inc. | Method and Apparatus to Facilitate Provision and Use of an Energy Value to Determine a Spectral Envelope Shape for Out-of-Signal Bandwidth Content |
US8433582B2 (en) | 2008-02-01 | 2013-04-30 | Motorola Mobility Llc | Method and apparatus for estimating high-band energy in a bandwidth extension system |
US20090198498A1 (en) * | 2008-02-01 | 2009-08-06 | Motorola, Inc. | Method and Apparatus for Estimating High-Band Energy in a Bandwidth Extension System |
US20110112844A1 (en) * | 2008-02-07 | 2011-05-12 | Motorola, Inc. | Method and apparatus for estimating high-band energy in a bandwidth extension system |
US20110112845A1 (en) * | 2008-02-07 | 2011-05-12 | Motorola, Inc. | Method and apparatus for estimating high-band energy in a bandwidth extension system |
US8527283B2 (en) | 2008-02-07 | 2013-09-03 | Motorola Mobility Llc | Method and apparatus for estimating high-band energy in a bandwidth extension system |
US20090216535A1 (en) * | 2008-02-22 | 2009-08-27 | Avraham Entlis | Engine For Speech Recognition |
US20100049342A1 (en) * | 2008-08-21 | 2010-02-25 | Motorola, Inc. | Method and Apparatus to Facilitate Determining Signal Bounding Frequencies |
US8463412B2 (en) | 2008-08-21 | 2013-06-11 | Motorola Mobility Llc | Method and apparatus to facilitate determining signal bounding frequencies |
US20100198587A1 (en) * | 2009-02-04 | 2010-08-05 | Motorola, Inc. | Bandwidth Extension Method and Apparatus for a Modified Discrete Cosine Transform Audio Coder |
US8463599B2 (en) | 2009-02-04 | 2013-06-11 | Motorola Mobility Llc | Bandwidth extension method and apparatus for a modified discrete cosine transform audio coder |
US8712771B2 (en) * | 2009-07-02 | 2014-04-29 | Alon Konchitsky | Automated difference recognition between speaking sounds and music |
US20120265525A1 (en) * | 2010-01-08 | 2012-10-18 | Nippon Telegraph And Telephone Corporation | Encoding method, decoding method, encoder apparatus, decoder apparatus, program and recording medium |
US10049679B2 (en) | 2010-01-08 | 2018-08-14 | Nippon Telegraph And Telephone Corporation | Encoding method, decoding method, encoder apparatus, decoder apparatus, and recording medium for processing pitch periods corresponding to time series signals |
US10056088B2 (en) | 2010-01-08 | 2018-08-21 | Nippon Telegraph And Telephone Corporation | Encoding method, decoding method, encoder apparatus, decoder apparatus, and recording medium for processing pitch periods corresponding to time series signals |
US9812141B2 (en) * | 2010-01-08 | 2017-11-07 | Nippon Telegraph And Telephone Corporation | Encoding method, decoding method, encoder apparatus, decoder apparatus, and recording medium for processing pitch periods corresponding to time series signals |
US10049680B2 (en) | 2010-01-08 | 2018-08-14 | Nippon Telegraph And Telephone Corporation | Encoding method, decoding method, encoder apparatus, decoder apparatus, and recording medium for processing pitch periods corresponding to time series signals |
US9842596B2 (en) | 2010-12-03 | 2017-12-12 | Dolby Laboratories Licensing Corporation | Adaptive processing with multiple media processing nodes |
TWI581250B (en) * | 2010-12-03 | 2017-05-01 | 杜比實驗室特許公司 | Adaptive processing with multiple media processing nodes |
TWI665659B (en) * | 2010-12-03 | 2019-07-11 | 美商杜比實驗室特許公司 | Audio decoding device, audio decoding method, and audio encoding method |
TWI687918B (en) * | 2010-12-03 | 2020-03-11 | 美商杜比實驗室特許公司 | Audio decoding device, audio decoding method, and audio encoding method |
TWI716169B (en) * | 2010-12-03 | 2021-01-11 | 美商杜比實驗室特許公司 | Audio decoding device, audio decoding method, and audio encoding method |
TWI733583B (en) * | 2010-12-03 | 2021-07-11 | 美商杜比實驗室特許公司 | Audio decoding device, audio decoding method, and audio encoding method |
TWI759223B (en) * | 2010-12-03 | 2022-03-21 | 美商杜比實驗室特許公司 | Audio decoding device, audio decoding method, and audio encoding method |
TWI800092B (en) * | 2010-12-03 | 2023-04-21 | 美商杜比實驗室特許公司 | Audio decoding device, audio decoding method, and audio encoding method |
US9373341B2 (en) | 2012-03-23 | 2016-06-21 | Dolby Laboratories Licensing Corporation | Method and system for bias corrected speech level determination |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US5809459A (en) | Method and apparatus for speech excitation waveform coding using multiple error waveforms | |
US5794185A (en) | Method and apparatus for speech coding using ensemble statistics | |
US6377916B1 (en) | Multiband harmonic transform coder | |
US6708145B1 (en) | Enhancing perceptual performance of sbr and related hfr coding methods by adaptive noise-floor addition and noise substitution limiting | |
US6067511A (en) | LPC speech synthesis using harmonic excitation generator with phase modulator for voiced speech | |
RU2707931C1 (en) | Speech decoder, speech coder, speech decoding method, speech encoding method, speech decoding program and speech coding program | |
US6098036A (en) | Speech coding system and method including spectral formant enhancer | |
US6119082A (en) | Speech coding system and method including harmonic generator having an adaptive phase off-setter | |
RU2389085C2 (en) | Method and device for introducing low-frequency emphasis when compressing sound based on acelp/tcx | |
US6078880A (en) | Speech coding system and method including voicing cut off frequency analyzer | |
EP0673014B1 (en) | Acoustic signal transform coding method and decoding method | |
US5067158A (en) | Linear predictive residual representation via non-iterative spectral reconstruction | |
US6081776A (en) | Speech coding system and method including adaptive finite impulse response filter | |
US6138092A (en) | CELP speech synthesizer with epoch-adaptive harmonic generator for pitch harmonics below voicing cutoff frequency | |
US6094629A (en) | Speech coding system and method including spectral quantizer | |
US7805314B2 (en) | Method and apparatus to quantize/dequantize frequency amplitude data and method and apparatus to audio encode/decode using the method and apparatus to quantize/dequantize frequency amplitude data | |
US6456965B1 (en) | Multi-stage pitch and mixed voicing estimation for harmonic speech coders | |
JP3087814B2 (en) | Acoustic signal conversion encoding device and decoding device | |
JP3297749B2 (en) | Encoding method | |
JP2000132194A (en) | Signal encoding device and method therefor, and signal decoding device and method therefor | |
US6535847B1 (en) | Audio signal processing | |
JP3237178B2 (en) | Encoding method and decoding method | |
JP3297751B2 (en) | Data number conversion method, encoding device and decoding device | |
US6098037A (en) | Formant weighted vector quantization of LPC excitation harmonic spectral amplitudes | |
JP3218679B2 (en) | High efficiency coding method |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: MOTOROLA INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:BERGSTROM, CHAD SCOTT;PATTISON, RICHARD JAMES;GIFFORD, CARL STEVEN;REEL/FRAME:008039/0195Effective date: 19960614 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
FPAY | Fee payment |
Year of fee payment: 12 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY, INC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA, INC;REEL/FRAME:025673/0558Effective date: 20100731 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: CHANGE OF NAME;ASSIGNOR:MOTOROLA MOBILITY, INC.;REEL/FRAME:029216/0282Effective date: 20120622 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034475/0001Effective date: 20141028 |
US20050086188A1 - Knowledge web - Google Patents
Knowledge web Download PDFInfo
- Publication number
- US20050086188A1 US20050086188A1 US10/474,155 US47415503A US2005086188A1 US 20050086188 A1 US20050086188 A1 US 20050086188A1 US 47415503 A US47415503 A US 47415503A US 2005086188 A1 US2005086188 A1 US 2005086188A1
- Authority
- US
- United States
- Prior art keywords
- knowledge
- user
- data
- topic
- topics
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
- 238000000034 method Methods 0.000 claims abstract description 75
- 230000008569 process Effects 0.000 claims description 27
- 238000003860 storage Methods 0.000 claims description 21
- 230000007246 mechanism Effects 0.000 claims description 17
- 238000012360 testing method Methods 0.000 claims description 17
- 238000012800 visualization Methods 0.000 claims description 16
- 238000013459 approach Methods 0.000 claims description 10
- 230000008901 benefit Effects 0.000 claims description 10
- 230000008520 organization Effects 0.000 claims description 4
- 238000012795 verification Methods 0.000 claims description 4
- 238000004040 coloring Methods 0.000 claims description 3
- 238000004091 panning Methods 0.000 claims description 3
- 238000004088 simulation Methods 0.000 claims description 3
- 230000009897 systematic effect Effects 0.000 claims description 2
- 238000005562 fading Methods 0.000 claims 2
- 230000001427 coherent effect Effects 0.000 claims 1
- 230000003014 reinforcing effect Effects 0.000 claims 1
- 238000010586 diagram Methods 0.000 description 21
- 230000006870 function Effects 0.000 description 14
- 239000000463 material Substances 0.000 description 13
- 241000282414 Homo sapiens Species 0.000 description 10
- 238000012545 processing Methods 0.000 description 10
- 238000013475 authorization Methods 0.000 description 7
- 230000009471 action Effects 0.000 description 6
- 230000004044 response Effects 0.000 description 6
- 230000000694 effects Effects 0.000 description 5
- 230000005610 quantum mechanics Effects 0.000 description 5
- 238000012552 review Methods 0.000 description 5
- 239000008186 active pharmaceutical agent Substances 0.000 description 4
- 239000012634 fragment Substances 0.000 description 4
- 230000002452 interceptive effect Effects 0.000 description 4
- 239000013598 vector Substances 0.000 description 4
- 238000011161 development Methods 0.000 description 3
- 230000018109 developmental process Effects 0.000 description 3
- 201000010099 disease Diseases 0.000 description 3
- 208000037265 diseases, disorders, signs and symptoms Diseases 0.000 description 3
- 230000003993 interaction Effects 0.000 description 3
- 230000033001 locomotion Effects 0.000 description 3
- 239000003550 marker Substances 0.000 description 3
- 239000000523 sample Substances 0.000 description 3
- 239000011800 void material Substances 0.000 description 3
- 241001236253 Pinus aristata Species 0.000 description 2
- 230000008859 change Effects 0.000 description 2
- 238000004891 communication Methods 0.000 description 2
- 238000001914 filtration Methods 0.000 description 2
- 210000003813 thumb Anatomy 0.000 description 2
- 238000011282 treatment Methods 0.000 description 2
- 241000282412 Homo Species 0.000 description 1
- 230000003466 anti-cipated effect Effects 0.000 description 1
- 230000015572 biosynthetic process Effects 0.000 description 1
- 230000003139 buffering effect Effects 0.000 description 1
- 239000002131 composite material Substances 0.000 description 1
- 230000001955 cumulated effect Effects 0.000 description 1
- 238000013500 data storage Methods 0.000 description 1
- 230000002950 deficient Effects 0.000 description 1
- 238000012217 deletion Methods 0.000 description 1
- 230000037430 deletion Effects 0.000 description 1
- 238000013461 design Methods 0.000 description 1
- 238000002405 diagnostic procedure Methods 0.000 description 1
- 239000003814 drug Substances 0.000 description 1
- 230000002708 enhancing effect Effects 0.000 description 1
- 238000004880 explosion Methods 0.000 description 1
- 239000000284 extract Substances 0.000 description 1
- 239000012530 fluid Substances 0.000 description 1
- 230000006872 improvement Effects 0.000 description 1
- 238000002372 labelling Methods 0.000 description 1
- 210000004072 lung Anatomy 0.000 description 1
- 238000012423 maintenance Methods 0.000 description 1
- 238000007726 management method Methods 0.000 description 1
- 238000004519 manufacturing process Methods 0.000 description 1
- 238000013507 mapping Methods 0.000 description 1
- 239000011159 matrix material Substances 0.000 description 1
- 230000000116 mitigating effect Effects 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 230000002085 persistent effect Effects 0.000 description 1
- 238000002360 preparation method Methods 0.000 description 1
- 238000003908 quality control method Methods 0.000 description 1
- 235000019640 taste Nutrition 0.000 description 1
- 238000012549 training Methods 0.000 description 1
- 230000007704 transition Effects 0.000 description 1
- 230000007306 turnover Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G09—EDUCATION; CRYPTOGRAPHY; DISPLAY; ADVERTISING; SEALS
- G09B—EDUCATIONAL OR DEMONSTRATION APPLIANCES; APPLIANCES FOR TEACHING, OR COMMUNICATING WITH, THE BLIND, DEAF OR MUTE; MODELS; PLANETARIA; GLOBES; MAPS; DIAGRAMS
- G09B5/00—Electrically-operated educational appliances
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N5/00—Computing arrangements using knowledge-based models
- G06N5/02—Knowledge representation; Symbolic representation
- G06N5/022—Knowledge engineering; Knowledge acquisition
-
- G—PHYSICS
- G09—EDUCATION; CRYPTOGRAPHY; DISPLAY; ADVERTISING; SEALS
- G09B—EDUCATIONAL OR DEMONSTRATION APPLIANCES; APPLIANCES FOR TEACHING, OR COMMUNICATING WITH, THE BLIND, DEAF OR MUTE; MODELS; PLANETARIA; GLOBES; MAPS; DIAGRAMS
- G09B19/00—Teaching not covered by other main groups of this subclass
Definitions
- the invention relates to knowledge. More particularly, the invention relates to a system for organizing knowledge in such a way that users can find it, learn from it, and add to it as needed.
- the Web also affords a new form of communication. Those who grew up with hypertext, or have otherwise become accustomed to it, find the linear arrangement of textbooks and articles confining and inconvenient. In this respect, the Web is clearly better than conventional text.
- the Web knows very little about the user (except maybe a credit card number). It has no model of how the user learns, or what he does and does not know—or, for that matter, what it does and does not know.
- the invention addresses the problem of providing a system that has a very large, e.g. multi-petabyte, database of knowledge to a very large number of diverse users, which include both human beings and automated processes. There are many aspects of this problem that are significant challenges. Managing a very large database is one of them. Connecting related data objects is another. Providing a mechanism for creating and retrieving metadata about a data object is a third.
- the World Wide Web for example, is an attempt to provide a very large database to a very large number of users. However, it fails to provide reliability or data security, and provides only a limited amount of metadata, and only in some cases. Large relational database systems tackle the problem of reliability and security very well, but are lacking in the ability to support diverse data and diverse users, as well as in metadata support.
- the ideal system should permit the diverse databases that exist today to continue to function, while supporting the development of new data. It should permit a large, diverse set of users to access this data, and to annotate it and otherwise add to it through various types of metadata. Users should be able to obtain a view of the data that is complete, comprehensive, valid, and enhanced based on the metadata.
- the system should support data integrity, redundancy, availability, scalability, ease of use, personalization, feedback, controlled access, and multiple data formats.
- the system must accommodate diverse data and diverse metadata, in addition to diverse user types.
- the access control system must be sufficiently flexible to give different users access to different portions of the database, with distributed management of the access control. Flexible administration must allow portions of the database to be maintained independently, and must allow for new features to added to the system as it grows.
- the presently preferred embodiment of the invention provides a system to organize knowledge in such a way that users can find it, learn from it, and add to it as needed.
- the exemplary system has four components:
- the invention also preferably comprises a set of application programming interfaces (APIs) that allow these components to work together, so that other people can create their own versions of each of the components.
- APIs application programming interfaces
- the knowledge web a community of people with knowledge to share put knowledge in a knowledge base using the user tools.
- the knowledge may be in the form of documents or other media, or it may be a descriptor of a book or other physical source.
- a central feature of the knowledge web is that each piece of knowledge is associated with various types of meta-knowledge about what the knowledge is for, what form it is in, and so on.
- the knowledge base is a centralized resource with possible private compartments, much like the Internet. Also like the Internet, it is intended to be implemented in a distributed manner.
- the knowledge in the knowledge base can be created specifically for the knowledge base, but it can also consist of information converted from other sources, such as scientific documents, books, journals, Web pages, film, video, audio files, and course notes.
- the initial knowledge within the knowledge base comprises existing curriculum materials, books and journals, and those explanatory pages that are already on the World Wide Web. These existing materials already contain enough examples, problems, illustrations, and even lesson plans to provide utility to an early incarnation of the knowledge web.
- the knowledge base thus represents:
- FIG. 1 comprises a series of block-schematic diagrams in which FIG. 1 a outlines the problem of how to find accurate, relevant, and appropriate information; FIG. 1 b outlines the problem of how to sort and identify useful information; and FIG. 1 c describes the problem of how to identify what information needs to be learned and what is the best presentation format for that information;
- FIG. 2 is block schematic diagram which shows the organization of information in accordance with the invention.
- FIG. 3 is a block schematic diagram which shows a system configuration according to the invention.
- FIG. 4 is a block schematic diagram showing an overall system and system elements according to the invention.
- FIG. 5 is a block schematic diagram showing information flow within a system according to the invention.
- FIG. 6 is a block diagram showing an annotation element according to the invention.
- FIG. 7 is a block schematic diagram showing a presentation element according to the invention.
- FIG. 8 is a block schematic diagram showing a business model for an information market according to the invention.
- FIG. 9 is a block schematic diagram showing a profile element according to the invention.
- FIG. 10 is a block schematic diagram showing multiple search bases in multiple views to reduce the search space according to the invention.
- FIG. 11 is a block schematic diagram showing elements linking authorization, security, and commerce according to the invention.
- FIG. 12 is a block-schematic/flow diagram showing a queued query process according to the invention.
- FIG. 13 is a flow diagram showing a link display in which FIG. 13 a shows a determination of display link and FIG. 13 b shows a determination of search space according to the invention
- FIG. 14 is a flow diagram showing a multi-user, collaborative work flow for answering questions according to the invention.
- FIG. 15 is a schematic representation of a user interface according to the invention.
- FIG. 16 is a schematic representation of a document fragment with comments according to the invention.
- FIG. 17 a is a flow diagram showing the data object registry process according to the invention.
- FIG. 17 b is a bock schematic diagram showing the structure of the hash table entry according to the invention.
- FIG. 18 is a flow diagram showing the implementation of a padding technique according to the invention.
- FIG. 1 While the invention herein is directed to solving various problems with regard to using, managing, and accessing information, three specific problems are identified in FIG. 1 .
- a user 10 needs information to make a decision, for example with regard to a medical condition.
- the user accesses the universe of available information 11 which, in this case, could be the World Wide Web or other sources of information.
- a process 12 is required in this regard that would allow the user to find accurate, relevant, and appropriate information.
- FIG. 1 b the universe of available information 11 exists and a process is required for searching the information to identify patterns of information that are useful, for example a government agency trying to identify a pattern of information that might predict a security threat.
- a user 10 needs to acquire particular pieces of knowledge to fill gaps in the user's personal knowledge.
- a process is required that allows the user to identify what needs to be learned and what information is extraneous and therefore need not be considered.
- the process 14 must also present the information in a format that most closely matches the user's preferred learning style and/or intellectual interests.
- a community of people with knowledge to share put knowledge into a knowledge base using a set of user tools.
- the knowledge may be in the form of documents or other media, or it may be a descriptor of a book or other physical source.
- a central feature of the knowledge web is that each piece of knowledge is associated with various types of meta-knowledge about what the knowledge is for, what form it is in, and so on.
- the knowledge base is a centralized resource with possible private compartments, much like the Internet. Also like the Internet, it is intended to be implemented in a distributed manner.
- the knowledge in the knowledge base may be created specifically for the knowledge base, but it may also consist of information converted from other sources, such as scientific documents, books, journals, Web pages, film, video, audio files, and course notes. As Marshall McLuhan observed, “The content of the new medium is the old medium.”
- the initial knowledge within the knowledge web comprises existing curriculum materials, books and journals, and those explanatory pages that are already on the World Wide Web. These existing materials already contain enough examples, problems, illustrations, and even lesson plans to provide utility to an early incarnation of the knowledge web.
- the knowledge base thus represents:
- the knowledge web allows for learning tailored to an individual learner. This is accomplished through the use of a tutor that customizes a user's learning experience based on a user learning model.
- the tutor handles the key problem of presenting the right information to the user at the right time.
- the knowledge web's tutor does not create or transform the knowledge itself, but merely maps a path from what a user already knows to what he needs to learn.
- the learning model for an individual user combines a user profile, reflecting information on the current knowledge, needs, capabilities, and preferences of the user, with generalized knowledge about how people learn.
- the tutor draws upon the learning model and the meta-knowledge stored in the knowledge base to allow learning in a manner most fit for the user.
- the tutor follows the explicit instructions of a human teacher on how to teach a certain body of knowledge to a certain type of person.
- the tutor may show that a given user has a firm understanding of calculus, a general understanding of Newtonian physics, and is completely mystified by quantum mechanics.
- the model may also include a much more detailed model of certain topics that are of particular importance to the user. For instance, in the case of a medical practitioner, it knows not only the physician's specialty, but it also knows with which recent discoveries, within that specialty, the physician is already familiar.
- the user profile of a user is continually updated, allowing the tutor to become better acquainted with the user over time. It knows what the user already understands and what he is ready to learn. It knows the user's learning style: whether he prefers pictures or stories, examples or abstractions.
- Bell's Inequality If a user wanted to learn about the principle in quantum mechanics called Bell's Inequality, he has several options. The user could read about it in any of several books on quantum mechanics. He could read the original paper describing it, or any of several papers that discuss it. The user could read articles on the Web that discuss Bell's Inequality. Which of these options is right? Are there other options to learning that he is unaware of? Is there a learning path he should take that would prepare him to understand Bell's Inequality? A personal tutor, if the user had one, might be able to help.
- the knowledge web's tutor seeks to emulate this personalized level of presentation.
- the tutor is a knowledge base access tool that takes user preferences into account.
- it takes advantage of the meta-knowledge in the knowledge web and the user learning model to plan what information is presented and how.
- the knowledge web also provides features lacking or deficient in the World Wide Web, such as copyright protection, data security, permanence, and authentication.
- the World Wide Web has demonstrated that many authors are willing to publish information without payment, but it does not give them any convenient option to do otherwise.
- the knowledge web provides various payment mechanisms, including subscription, pay per play, fee for certification, and usage-based royalties, while supporting and encouraging the production of free content.
- the support infrastructure for payments allows different parts of the knowledge web to operate in different ways. For instance, public funding might pay for the creation of curriculum materials for elementary school teachers and students, but specialized technical training could be offered on a fee or subscription basis.
- Another model that is supported is a micropayment system, in which a user pays a fixed subscription fee for access to a wide range of information. Usage statistics would serve as a means to allocate the income among the various authors. This system has the advantage of rewarding authors for usefulness without penalizing users for use.
- the ASCAP music royalty system is an example of how such a system might work.
- the invention provides a system to organize knowledge in such a way that users can find it, learn from it, and add to it as needed.
- the invention also preferably comprises a set of application programming interfaces (APIs) that allow these components to work together, so that other people can create their own versions of each of the components.
- APIs application programming interfaces
- the knowledge base is composed of knowledge and meta-knowledge.
- Each of the principal components of the presently preferred embodiment of the invention makes use of a knowledge representation scheme that organizes the knowledge within the knowledge base into explanations, topics, and paths.
- the explanation is the basic building block of knowledge in the system.
- An explanation is a human-readable piece of content such as text, audio, video, or interactive media. Explanations are organized into topics, and are connected by paths.
- An explanation is a unit of content that helps the user understand one or more topics.
- An explanation may be a piece of text, an illustration, a segment of audio or video, or something more complex, such as an interactive Web page.
- Some explanations explain through instruction, while others give definitions, demonstrations, or examples. Explanations may be labeled with annotations providing meta-knowledge identifying their type, source, relevancy, etc.
- a single explanation may explain several topics, and a single topic may be explained by many explanations. Every explanation has links to the topics that it explains. Explanations also have links to their prerequisites, that is, to the topics that represent the prerequisite knowledge. If a user needs a certain level of knowledge about a particular topic in order to understand an explanation, then the explanation has a link to that topic, indicating the level of knowledge required.
- a topic is a cluster of concepts that a user might want to learn at the same time.
- the topic might be something very specific, e.g. “How to Change a Tire,” or it might be something very broad, e.g. “Chemistry” or “Configuring UNIX Systems.”
- An academic course is likely to cover a topic, but every item in the course outline is also a topic of its own. Topics typically have multiple subtopics included within them. A subtopic may be part of many topics.
- TUK testable unit of knowledge
- the knowledge web uses topics to organize knowledge. For example, a user of the system specifies what he wants to learn in terms of topics. Topics are also used to map an area of knowledge, to show the user a map of the gaps in his knowledge or a map of what is to be learned. The system also keeps track of what the user knows in terms of topics. It may know for example that the user is an expert at “Configuring UNIX Systems” and that the user is only a novice at “Chemistry.” The system has a representation of how important each of the subtopics is to the topic, and which subtopics correspond to which degrees of understanding. It also has a representation of what parts of the topic the user knows.
- a path is a way of describing a sequence of explanations and queries, with possible branch points. Paths are used to encode information about ways to learn a topic. As with an explanation, a path is linked to the topics it explains and topics it depends on as prerequisites. In fact, a path may be thought of as a kind of composite explanation. Some of the explanations in a path may be commentaries that guide a user along the path. For example, there may be a description of the topics to be covered in the path, or reviews of what has been learned. This type of commentary explains the path, not the content, so unlike a normal explanation it is not linked to a topic, but only to the path of the explanation.
- a path can contain branch points that are based on answers to queries. These branches can ask the user for explicit directions, such as “Do you want to see another example?” or alternatively the branch may be a test of the user's understanding.
- a query always includes a set of sample answers. In the simplest case, these answers are presented to the user for a multiple-choice response.
- a query can also be set up so that the user gives a free-form response. In this case, the response is matched against the possible answers using a pattern-matching algorithm.
- a path may also contain additional information about how the sequence is presented.
- the path may constrain the timing of the presentation, or the layout of explanation and test questions on a page. This information is represented by annotations on the links of the path, described later.
- the meta-knowledge within the knowledge base consists of user annotations and document metadata.
- User annotations are associated with explanations, topics, paths, or other annotations and provide further information relevant to the explanation, topic, path, or annotation. Annotations do not modify the annotated content, but merely add to it.
- the author of the annotated content creates some of the annotations; third parties create others.
- the author of an explanation may add an annotation to link a list of frequently asked questions (FAQ's) or may support an associated discussion group.
- the author may also add annotations indicating that this explanation is only available to users with certain permissions.
- Third parties add annotations, whether explicitly or implicitly, through their use of content. For example, usage statistics, a simple example of an annotation, are added automatically as users access content. Annotations are also added to reflect the popularity of content, or its appeal to learners of various types. In addition, certification authorities may add annotations certifying or questioning the correctness or the appropriateness of content.
- Another type of statistical annotation that may be collected is a simple poll indicating whether a user liked the explanation. Feedback statistics may also be recorded for other usage information, such as how frequently specific questions are asked.
- Third parties can also make annotations explicitly. For instance, a user can add an annotation designating a related explanation, or an annotation offering editorial comment.
- topic, path, or annotation may be added automatically at the time of creation, such as those identifying the creation date, authorship, or language. This form of annotation is referred to as document metadata.
- annotation refers generally to the creation of meta-knowledge, encompassing both user annotations and document metadata.
- annotations refers generally to instances of both user annotations and document metadata.
- the tutor makes use of the learning model and the knowledge base to help the user find the topics and explanations that are most helpful. For example, the tutor uses an awareness of the user's age, language preferences, and reading level to filter and sort explanations. It also uses information on which authorities the user trusts, and which authors he likes. This information is also used to filter and sort explanations.
- the tutor also knows about specific topics that the user learned or demonstrated knowledge of in the past. It has information about the user's interests, both in terms of topics and presentation. It knows the user's preferences for words, pictures, audio, video, or interactive programs. It also knows whether the user likes examples, definitions, equations, diagrams or stories. It may even know whether he likes to stay focused or wander, whether he prefers to explore wide or drill deep. All this formation helps the tutor present information in a way that the user can most easily understand it. Preferably, all user specific data is private and inaccessible to others.
- the user may not be looking so much for a specific piece of knowledge, but for a credential or a skill.
- the tutor is also able to help the user find these. For example, there may be a topic corresponding to “Passing the New York State Bar Exam” or “Operating a Caterpillar Model D3 Bulldozer.” These topics not only link to the knowledge the user needs to pass the test, but also to courses that lead to certification. In many cases, learning the factual knowledge is only part of the process.
- the tutor helps the user choose how to learn it. In the simplest cases, this may be a single explanation. In more complex cases, the tutor finds chains of explanations that connect what the user wants to know to what is already known. The tutor takes into account the user's personal tastes, language, sensibilities, and learning style in its choice of content. It also takes into account the statistical experience of others. It knows what explanations have worked in the past, and it also finds and takes advantage of paths and annotations laid down by teachers.
- choosing explanations is an interactive process between the user and the tutor.
- the user can just choose from a list of sorted options.
- the process is more like planning a course of study. For instance, the user may want to plan which material is covered, how long the user is willing to spend, and in what sequence the user wants to learn things. This gives the user an outline of the plan of study.
- the tutor can also test the user's knowledge by asking the user questions. How often it does this depends on the user's personal preferences. Such questions are partly to reinforce what the user has learned and partly to verify that the user has learned it. If the user has not learned a concept, the tutor may suggest other explanations. If the user is following a path created by a teacher, the teacher may have included a question, and suggestions on where to go next that depends on the user's answers. The teacher can use wrong answers to steer the user down a branch of the path that helps the user clear up a particular misunderstanding.
- the tutor acts as a guide, not as a director. Its job is to present the user with the options, and recommend those that come closest to fitting the user's needs. It is also the tutor's job to keep the user informed about where the user is, and where the user might want to go next.
- the knowledge web provides two principal sets of user tools to access and modify the knowledge base—viewing tools and authoring tools.
- the viewing tools provide the user access to and a limited ability to modify the knowledge base, whereas the authoring tools allow for more rapid and more extensive creation and modification of content.
- these tools are implemented as software systems.
- the viewing tools provide the primary interface between the user and the knowledge web.
- the viewing tools can be thought of as an extended Web browser, with support for specialized operations for the knowledge web.
- the presently preferred implementation of the viewing tools is a browser with an added set of extensions.
- the viewing tools supports three basic activities: knowledge base visualization, content display, and annotation.
- the viewing tools provide specialized user interfaces for each of these three activities.
- One goal of this aspect of the invention is to develop a better way for a user to visualize and navigate a connected web of knowledge.
- This aspect of the invention allows the user to navigate through the links, see patterns in the connections, and reorganize the information according to multiple navigational schemes. It allows the user to see detailed local information, and also see how that information fits into a broader global context.
- Visualization of the knowledge base typically begins with the selection of a topic or topics that a user wants to learn about. In the simplest cases, this can be accomplished by the user naming a topic. This may be done by the user entering a word or phrase into a topic-search engine.
- the visualization interface then displays a map of the area of topic space the user selects, showing what the user already knows and what is knowable.
- the space of topics and subtopics is illustrated as a two-dimensional landscape, with borders, landmarks, and links showing relationships between topics.
- a coloring scheme shows the user's prior knowledge and the relative importance of the topic.
- the tutor can play an important role in generating a map that is meaningful to the user. Because the learning model provides the tutor with an understanding of what the user already knows and how he prefers to have information presented, the visualization interface is able to create a map specifically for the user.
- the visualization interface allows the user to display and navigate the topic map.
- the way that the map is drawn and colored in context depends both on what the user is trying to learn and on what others the user trusts have judged to be important.
- the map allows the user to get a feel for the size of each topic, and how long it takes the user to cover. It also shows paths that the user has traveled before and paths that others have traveled before.
- the visualization interface allows the user to move through the topic space by panning, zooming, or leaping from topic to related topic. The user can zoom into the relevant topics, look at their subtopics and mark the things that are of interest, or that are already known.
- the system may also provide a simulation of a three-dimensional navigational space that the user can “fly” though, by moving forward/back, right/left, or up/down, or rotating. It is anticipated that the user will not be permitted to use the rotation function, as it would likely result in disorientation of the user.
- this navigation space there are a number of graphical objects: some are three-dimensional, and some are animated. Some of the objects have sounds associated with them that the user begin to hear as he draws near. Between objects are links, representing the relationships between the concepts they represent. The links are initially nearly transparent, but as the user moves nearer an object, the links associated with it become more visible, then fade as the chain of connections extends away from the object. As the user approaches a link, links of that type become more visible.
- the objects are arranged in space in a systematic way.
- the vertical dimension may represent historical time
- the horizontal dimension may represent a theme.
- the organization scheme is not fixed. When the scheme is changed, the objects reorganize themselves in a new order.
- the user moves through this space to find and examine objects of interest, to visualize their relationships, and to visualize the context into which they fit.
- the space is rich in color, depth, texture, motion, and sound; rich in a way that adds meaning and helps understanding.
- the visualization interface uses the spatial metaphor at all levels of the topic tree. At the higher level the map has been carefully drawn by human mapmakers. Topics such as “Chemistry” and “Physics” maintain a dependable relationship to one another in the landscape. This allows the user to get to know an area of the topic landscape, and learn to navigate through it. At the high level, the topic map changes slowly. At the lower, more detailed levels, the topics such as “Internet addressing schemes” and “Current Events” are more dynamic, and the topic map begins to look more like a web of connections.
- the display interface presents the information, as directed by the tutor.
- the display interface presents explanations to the user as a sequence of presentations, much like a linked sequence of Web pages.
- the display interface supports most of the familiar Web browsing functions, such as forward and back (a.k.a. next and previous) and hypertext links. It also supports the same range of media types as a conventional Web browser, including text, images, audio video, and various forms of interactivity. In fact, the display interface can also function as a Web browser, and it does so when a link takes the user to pages on the World Wide Web.
- the display interface can provide better navigation than a Web browser. For instance, it has a “Where-am-I” button that, preferably in conjunction with the visualization interface, orients the user within the path or the topic space, and a “Return-to-Path” button that can bring a sidetracked user back to the main path.
- the display interface supports still other functions that cannot be supported on an ordinary Web browser because of the limitations of the World Wide Web.
- One of the most important is the “About this” button.
- the “About this” button For any item in the knowledge web, it shows the user who the author is, when it was written, who has certified it for what purposes, how often it has been used, etc. It also shows the annotations, made by the author or third parties, indicating related material, references, associated discussion groups and user feedback. Again this material is sorted and filtered according to the user's personal preferences.
- the display interface can also take advantage of annotation to provide more meaningful interaction with the user. For example there are buttons for the functions “Show me a picture,” “Give me an example,” or “Give me a different explanation.”
- the user can also ask for the definition of a word, in which case the display interface shows the user the definition that makes sense in the context of the particular topic at hand.
- the display interface also supports the ability to ask a question. Questions are matched against the list of frequently asked questions (FAQ's) associated with the explanation, and also against more general FAQ lists associated with the topics.
- the question can also be forwarded to the author of the content or posted on a discussion group.
- the annotation interface allows the user to modify the knowledge base through the addition of annotations.
- the process of viewing content in the display interface causes some annotations, such as user statistics, to be updated automatically.
- a simple poll indicating whether a user liked an explanation may be conducted.
- This polling feedback may be generated by a voting scheme, using a simple pair of “thumbs up/thumbs down” in the annotation interface.
- Voting may be made anonymous by an encryption scheme that hides the identity of the user, while guaranteeing that a user can vote only once.
- Feedback statistics may also be recorded on other usage information, such as how frequently specific questions are asked.
- a link of this type contains descriptive information about how it is related.
- An annotation of this type must have an author who takes responsibility for it. Only the author of an annotation of this type can modify or delete it.
- the viewing tools can be used to add annotations to existing content, most new content is created using the authoring tool.
- the authoring tool can be used to convert an existing document, such as a textbook, article, or Web page, into an explanation for the knowledge web. It can also be used to create an instructional path with branches, quizzes, commentary, etc.
- a knowledge web explanation is distinguished from ordinary Web content by annotation and registration.
- Registration means that the page has been declared to exist as part of the knowledge web. This is accomplished by submitting it to a registration server.
- specific annotations may be required and various options specified.
- the required annotations include the author, creation date, URL identifying where it is stored, a list of the topics the explanation explains, and information specifying language and media type.
- the authoring tool provides a mechanism for helping to find the topics corresponding to an explanation.
- the author specifies a topic to which an explanation applies using the topic chooser.
- the authoring tool then presents the author with a list of specific topics, sorted according to how well they match the explanation. It may also present the author with a menu of subtopics that more exactly match the explanation.
- the author may choose one or more of the subtopics, and even narrow down the range to specific testable units of knowledge that are explained. Once the list becomes manageable the author can check off the appropriate topics.
- the author may also create new topics, as described below.
- annotations may be specified at the time of registration.
- the author may wish to restrict access to the information to users who have been cleared through a specified permissions authority.
- the author may want to support an associated discussion group, or may want to be an informer of questions that are asked by users.
- the author may link search keywords for locating the explanation or identify it as being relevant to certain topics.
- An author may also link an explanation as having content inappropriate to children.
- the authoring tool also provides an easy way for the author to link frequently asked questions and associated answers.
- the authoring tool registers the explanation by transmitting registration information to the registration server, and storing the content and annotations in a suitable location within the knowledge base. At the time of registration, the author may also choose to submit this explanation to various certification authorities for consideration. The authoring tool provides support for such submissions.
- the authoring tool includes an interface for visualizing the knowledge base, preferably similar to that in the viewing tools, with a search engine and topic browser.
- To create a new topic the author specifies its relation to one or more existing topics.
- the author specifies any subtopics within the topic and preferably identifies what knowledge is required for several levels of mastery, such as familiarity, understanding, and expertise.
- a short definition of the topic must also be specified, and optional search terms may also be included. Creation of testable units of knowledge (TUKs) is even simpler because TUKs are topics with no subtopics, and only one level of understanding. A TUK can often be stated in a single sentence.
- Creating a TUK can be as simple as highlighting a single sentence in the explanation, or the clicking of a button.
- the authoring tool tries to parse the sentence and creates a diagnostic test question. This suggested question can be accepted or rejected by the author.
- a topic Once a topic is registered, it is included immediately in the topic database. Later, it may be merged with another topic. At any time, authorized individuals are able to edit the topic tree and collapse several topics into a single topic, or to split existing topics. The same rules apply to TUKs.
- the authoring tool includes a mechanism for mapping an existing outline onto a topic tree. It helps the author find existing topics that correspond to the outline items, and existing TUKs that correspond to the explanation. It also helps the author create any TUKs and topics that do not already exist. Because it is working within the context of a hierarchy, broad topics identified at the top of the hierarchy can help inform the search process for the more specific topics below.
- paths encode information about how to learn that knowledge.
- a teacher for instance, can create a path to guide a student by specifying a sequence of explanations, which may include documents, queries, and commentaries.
- the authoring tool helps the teacher specify each explanation in the path. It also allows branches to be added based on queries. A different branch of the path may be linked to each answer of the query.
- the tool gives the teacher control over how the information is presented on pages.
- the authoring tool automatically produces a flow chart of the path, showing all links and branched and list of TUKs and topics that are explained and a list of prerequisites.
- the authoring tool provides a simple way to create a query, as a branch point in a path.
- the required information for a query is similar to an explanation.
- the same tool is used to create any query, whether it is a test question, or a question to determine the branch of a path.
- the query must have a set of possible answers, one of which is specified as correct.
- the query may be tagged as a multiple-choice question, in which case the answers are presented to the user in randomized order as choices. If the question is not a multiple choice, a pattern matcher is used to pick one or more of the answers to be verified by the user. In this case, matching patterns may be explicitly associated with each of the answers. If such patterns are not specified, the answers themselves are used as patterns.
- the authoring tool can be used to register it.
- the backend system supports access to the structured knowledge within the knowledge base.
- the detailed architecture of the backend system is a central feature of the present invention, and is accordingly described below in greater detail.
- the backend system addresses the problem of how a very large amount of loosely structured data can be stored, organized, and shared among a large and diverse group of users.
- the system is described in detail with respect to the presently preferred embodiment of the invention, which provides a distributed, scalable architecture that implements a database using standard commercially available components.
- the knowledge base is viewed as a database represented as a labeled graph that can be accessed and modified by thousands of users concurrently.
- the knowledge within the knowledge base is viewed as data
- the meta-knowledge within the knowledge base is viewed as metadata.
- Entities of content for example explanations, topics, paths, and links, are viewed as data objects.
- the nodes of the graph represent data objects
- the associated metadata are represented by links connecting those nodes.
- the data is stored on one or more data servers, and information about the data is maintained by one or more data registries.
- the servers and registries are preferably implemented as a distributed application that runs on servers connected by a network.
- the backend system is described in terms of a single data registry and a large number of data servers.
- Each of these servers may actually be implemented as a distributed application that caches information across multiple machines, but this aspect of the implementation is ignored for purposes of this discussion.
- the front ends talk to a metaweb server which has access to the user's security profile, and access to the registry. With this information, the metaweb server obtains the location of the data objects requested by the user, retrieves them from data servers, and assembles them for manipulation by the front end.
- All data and metadata in the system are represented as nodes and links, which may be classified into the following types of data objects.
- the system supports data generally in multiple formats, and in multiple data types. Examples of data types include text, image, sound, video, and structured data. Also, the system supports the storage of data in multiple locations, both online and offline, and provides identification information for the data, including location, data type, and data format, and other attributes as available.
- Concept nodes are internal objects that are used to group or otherwise classify data objects. Examples of concept nodes include nodes representing categories, entities, and classes of data. Concept nodes are treated similarly to data objects in that links may originate or terminate in them. Users are able to search or navigate the database using concept nodes.
- the system supports labeled links of many different types.
- the types of links are centrally managed and limited to a known number of specific types.
- Examples of types of labeled links include links representing membership in categories, links associating data with specific objects, links tagging document metadata, and links representing user annotations. Provision is made for addition of labeled link types based on user needs and system growth.
- Links are directional. Given a data object it is always possible to determine all links that connect from the data object to another data object. Finding all links that connect to the data object may require search. Links may connect from data nodes or concept nodes to data nodes, concept nodes, to numbers or to text strings.
- the relationships between the data objects may be represented by a labeled graph.
- FIG. 2 shows a database represented as a labeled graph, where data objects 24 are connected by labeled links 22 to each other and to concept nodes 20 .
- a concept node for a particular category 21 contains two subcategories 21 a , 21 b that are linked via labeled links “belongs-to” and “related-to” with text 25 and picture 27 .
- An entity 23 comprises another concept that is linked via labeled links “refers-to,” “picture-of,” “associated-with,” and “describes” with Web page 26 , picture 27 , audio clip 28 , and data 29 .
- FIG. 3 shows a sample configuration containing several principal components of the system. These components may be generalized or implemented in various forms and configurations.
- Each object in the system is registered in a registry.
- the registry keeps track of where the data and metadata associated with a data object are stored. Every data object has a unique signature and index, which is used to access the data object within the registry. Using the index, the system locates the data object in the registry and assembles components of the data, metadata, and other information from various data servers across the network.
- FIG. 3 shows a number of front ends, for example in workgroups 31 , 32 , and data servers, 36 a - d , interacting through a network 34 , such as the Internet.
- Human users access the system through a front end application that accesses one of many metaweb servers 33 a , 33 b on the network.
- These metaweb servers then access the registry through local caches, updated from one or more registry servers 38 .
- the information in the registry is then used to identify data servers 36 a - 36 d , which are accessed to obtain the data.
- Metaweb servers provide access to the system through APIs that may be used either by automated processes, or by front-end applications that are in turn used by humans. These servers access the contents of the registry and then obtain data from data servers to fulfill user requests.
- a potentially very large number of data servers store the underlying data and metadata.
- the system supports implementations where this data is multiply redundant on several servers to ensure availability.
- Data servers operate independently and can be administered independently. They provide data access via standard protocols such as HTTPS, NFS, and SQL queries.
- the registry is stored in a number of registry servers, and is also cached by metaweb servers as required. Information about data, its components, associated metadata, and all related links is stored in a registry. As with the data servers, the registry may be distributed across a number of servers, for redundancy and for performance. Multiple registry servers can work together to form a distributed hierarchical cache of the directory, using a scheme similar to the Domain Name Server system of the Internet.
- the registry servers may facilitate the maintenance of various different registries.
- Pen name registry An author must register content under a pen name, and this pen name must itself be registered with the registration server.
- a pen name may be a real name or an alias. Pen names are unique identifiers; the registration server does not register the same pen name to two different people.
- a pen name may be registered anonymously, that is without supplying a real name, in which case it is identified as such.
- a single author may have more than one pen name. Each pen name has an associated password, which is used to verify the identity of the author.
- the content registry keeps a record of all the content on the knowledge web, including explanations, paths, and annotations.
- the registry keeps track of where information is, the author's pen name, and when the information was registered.
- the content registry also keeps track of some specific attributes including the topics linked to explanations, the usage and voting statistics associated with content.
- an author registers content he must affirm that he either owns the content, or has the right to publish it in the knowledge web. If there are access restrictions on content, the registration can specify a permission server that is empowered to negotiate access.
- the content registry not only registers content but it also provides access to the registration information. All content registration information is publicly available.
- the content registry is not responsible for vetting the content that is registered; it only keeps track of its existence.
- Topic registry keeps track of all topics, including TUKs. Unlike the content registry, the topic registry attempts to impose some order on the arrangement of topics, and for this reason it may be desirable to have multiple and competing topic registries.
- the central editorial problem of the topic registry is to keep the topic tree well organized and to keep the number of topics manageable.
- the topic registry registers any topic that meets certain minimal standards, but it may later decide to merge it with a similar topic. After such a merger, all links to either of the component topics are interpreted as linked to the merged topic.
- the system stores data and metadata in one or more storage domains connected to the system. These storage domains are typically disk based files systems representing a specific database.
- the system allows the data and metadata associated with an object to be stored as multiple components in multiple storage domains.
- the system also allows data and metadata components to be stored redundantly, either within a single storage domain, or across multiple storage domains.
- Access permissions are controlled by user and by storage domain. Each user has a set of access privileges associated with each storage domain. The system administrator of the storage controls which users are granted which privileges. Specific privileges may be granted to allow a uses read, add, modify, search, or delete data within that domain. A user may also have a privilege that allows a user to be aware that data exists with a storage domain, without necessarily being able to access that data.
- All user requests are subject to the user having the right authorization for the request. There are two places where this authorization is managed—the user's profile and the data server's rules.
- the user profile is accessed, and security and data access authorization information that is specific to that user is retrieved. Subsequently, when the user makes a data request, the metaweb server uses the authorization information to process it.
- access rules are also defined at the data server to specify the kind of users that have access to read or update the data on that server.
- APIs Applications Program Interfaces
- Automated processes also interact with the system through this set of APIs. The actual preparation of such APIs is considered to be within the skill of those skilled in the art and, accordingly, they are not discussed in detail in this document.
- the objects potentially accessible to users include data nodes, labeled links, and concept nodes. Which objects are actually accessible to a particular user depends upon the user access privileges to the storage domains that hold the data associated with the object.
- the system fetches and assembles all data and metadata components associated with the node that are accessible to the user. This includes all objects linked from that node that are accessible to the user.
- the API allows authorized users to add data objects, concepts nodes and links to the system, specifying the storage locations of the related data and metadata.
- the API allows authorized users to update objects in the system by changing or adding metadata associated with that object.
- the data associated with a data node are not allowed to change. All updates to data create a new data object because the unique index is modified.
- the original data object is flagged as updated, with a link pointing to the new version.
- Updates to certain objects triggers an administrative process to provide for archival and verification services.
- the system provides metadata tags that are placed on objects, specifying those users that are to be notified whenever that object is updated.
- the system provides the notifications to users specified by those tags.
- the API allows authorized users delete objects from the system by labeling them as deleted.
- the system allows the system administrator to establish policies for the actual deletion of objects that are so labeled.
- Authorized users can request notification if a data object they are interested in is changed, deleted, or has metadata added to it. This is done by connecting a user change-notification link from the data object to the concept node representing the user.
- the API allows search engines and automatic indexers to match objects with particular characteristics. These search engines are applications that use the system, but that are not built into the system architecture.
- the system provides a mechanism for notifying the user if the data associated with an accessed data node have changed since the object was created.
- the first mechanism is the data caching mechanism, which can prevent multiple remote accesses to the data.
- the system is capable of keeping a cached copy of all documents examined, so that they do not need to be retrieved a second time for reexamination.
- the second method for hiding patterns of access is indirection through an anonymous relay.
- the system allows multiple access to the same data server to be masked by indirectly accessing the site through anonymous relays. Such techniques as data caching and anonymous relays are well known in the art and are not discussed herein.
- the system allows the system administrator to add new users to the system.
- Users are represented as concept nodes within the system with associated metadata represented as labeled links.
- metadata include information about user access privileges, and information (such as an email address) about how to send notification to that user. Normally this information is stored within a storage domain only accusable to a system administrator.
- Storage Domains The system allows the system administrator to add new storage domains to the system and to specify an administrator for such storage domains.
- the system allows the system administrator to add new data types, link types, and data storage formats to the system.
- the system architecture allows auditing functions to be provided within storage domains.
- the architecture allows, but does not include, auditing functions to monitor a user's or system administrator's patterns of activity within each within storage domain.
- the registry is a distributed, hierarchical directory of information describing nodes and links of the labeled graph.
- the registry maintains information about the location of each data object's representation and the representation of its associated metadata. In other words, the registry makes the connection between the elements of the graph and the bits that represent them.
- the registry keeps track of where the data that represents each object are stored.
- the registry is stored on one or more registry servers and part of it can also be cached by one or more metaweb servers.
- a data object When a data object is registered in the system, its type and content are used to generate a fast, unique hash value, which is used as the aforementioned index into the registry.
- This hash value is used to identify and register the data object into the registry and is used as the index in the registry's hash table.
- the index hash is chosen from a 128-bit address space, and is assumed to be unique for each object. If the same object is encountered twice, then both instances generate the same hash index. Thus, identical objects of identical types are always treated by the system as a single object.
- FIG. 17 a is a block schematic diagram that shows the data object registry process.
- Each registered data object 100 is represented as a hash table 69 entry 101 .
- Hash table entries identify a data object's location, representation, and any associated information annotating the data.
- each hash table entry contains an index hash 68 , an optional cryptographically strong signature for verification and security, a data identifier, and a metadata identifier.
- FIG. 17 b denotes the structure of a hash table entry 101 .
- a hash table entry contains a data identifier 110 describing the data object's type, length, and one or more representations of the object's data 111 , 112 .
- the hash table entry also contains a metadata identifier 113 , which includes an indication of the annotations of the data object.
- the index hash may be computed using a combination of one or more of the following methods.
- Method P is padding algorithm applied to all data to ensure it is of sufficient length.
- Methods H, I, and D may be applied to padded data, such as that generated by Method P, to generate the index hash used to identify a data object.
- Method H is a simple implementation
- Method I is an approach extended to take advantage of vector operations available on microprocessors.
- Method D employs a different approach capitalizing on the ability of a vector processor to perform dot products rapidly.
- Method P Given a piece of data, pad it to a length which is a multiple of B words.
- step P5 the data may be appended from the beginning of the input stream, which requires that the first B-2 bytes of data be stored.
- the data can be appended from the beginning of the last block of data read in.
- FIG. 18 shows a flow chart detailing the preferred implementation of Method P according to the invention.
- a request is received for N words of data ( 1000 ).
- a test is performed to determine if there are N words of data in the buffer ( 1001 ). If there are, the data are returned ( 1002 ). If not, the system fills as much of the buffer as possible with data ( 1003 ). Thereafter, a test is performed to determine if the buffer is full ( 1004 ). If it is, the data are returned ( 1005 ). If not, a test is performed to determine if there are any data in the buffer ( 1006 ). If not, a null value is returned ( 1007 ).
- the byte value representing the number of words needed to fill the buffer is appended ( 1008 ) and a test is performed to determine if the buffer is full ( 1009 ). If the buffer is full, the data are returned ( 1010 ). If not, the data in the buffer are appended up to the first added byte ( 1011 ). Thereafter, a test is performed to determine if the buffer is full ( 1012 ). If the buffer is full, the data are returned ( 1013 ). If the buffer is not full, the process again appends the byte value representing the number of words needed to fill up the buffer and continues ( 1008 ).
- Method H Given a padded data stream as above, produce a 128-bit identity.
- the data are stored in a byte array M [1 . . . m].
- the array H [j] contains 32-bit values H [0 . . . n ⁇ 1 ], where n ⁇ 16 and n has no factors in common with 33.
- the method uses one 64-bit register rA and one 128-bit register rB which contains the final value. Initially rB is set to a non-zero value H 0 .
- H 0 may be, for example, the first 128 binary digits of ⁇ . rB is accessible as four 32-bit registers rB[[0 . . . 3]].
- rA is accessible as two 32-bit registers rA[[0 . . . 1]].
- H1 [initialize] Set i ⁇ - 1,j ⁇ - 0,rB ⁇ -H 0 .
- H2 [collect] Set rA[[0]] ⁇ -M[i...i + 3].
- H3 [multiply] Set rA ⁇ -rA ⁇ H[j]mod 2 64 .
- H4 [middle] Set rA ⁇ -(rA >> 16)&0x00000000FFFFFFFF.
- H5 [multiply in] Set rA ⁇ -(rA ⁇ rB[[3]])mod 2 64 .
- H6 [middle] Set rA ⁇ -(rA >> 16)&0x00000000FFFFFFFF.
- H7 [subtract] Set rB[[2]] ⁇ -(rA ⁇ rB[[2]])mod 2 32 .
- H8 [rotate] Rotate rB left by 33 bits.
- H9 [loop] If i ⁇ m,loop to step H2. Otherwise, finish, rB contains the identity.
- Method I Given a padded data stream, produce a 128-bit identity.
- the data are stored in a byte (8-bit chunks) array M[1 . . . m].
- the array H[j] contains 32-bit values H[0 . . . n-1], where n ⁇ 16 and n has no factors in common with 33.
- the method uses two 128-bit registers rA and rB.
- rB contains the final value. Initially, rB is set to a non-zero value H 0 .
- H 0 may be, for example, the first 128 binary digits of ⁇ . Both registers are accessible as four 32-bit registers rX[[0 . . .
- I6 [middle] SetrA ⁇ -(rA>>16)&0 ⁇ 00000000FFFFFFFF00000000FFFFFFFF.
- I7 [subtract] Set rB[[2]] ⁇ -(rA[[2]] ⁇ rB[[2]])mod 32 and rB[[0]] ⁇ -(rA[[0]] ⁇ rB[[0]])mod 2 32 .
- I8 [rotate] Rotate rB left by 33 bits.
- I9 [loop] If i ⁇ m ,loop to step I2. Otherwise, finish, rB contains the identity.
- Method D takes advantage of vector processor capabilities using long dot products.
- the data are assumed to be padded to a multiple of n (size of H) 32 bit values, as, for example, provided by Method P.
- the algorithms may be adjusted to accommodate a matrix H of different dimension.
- Method D Given a padded data stream, produce a 128-bit identity.
- the data are stored in a byte array M[1 . . . m].
- An array H[j] as above is again used, with the additional restriction that n be even.
- the method uses three 128-bit registers rA, rB, and rC.
- rC contains the final value. All registers are accessible as four 32-bit registers rX[[0 . . . 3]]or as two 4-bit registers rX[0 . . . 1].
- D1 [initialize] Set i ⁇ - 1,j ⁇ - 0, rB ⁇ - 0.
- D2 [collect] Set rA[[0]] ⁇ - M[i... i+3] and rA[[2]] ⁇ - M[i+4... i+7].
- D3 [multiply] Set rA[1] ⁇ - rA[1] ⁇ H[j]mod2 64 and rA[0] ⁇ - rA[0]• H[(j +1)]mod 2 64 .
- Set j ⁇ - (j +2).
- D4 [dot sum] Set rB[0] ⁇ -(rB[0]+rA[0])mod2 64 and rB[1] ⁇ - (rB[1]+ rA[1])mod2 64 .
- D5 [dot loop] Set j ⁇ - j+2. If j ⁇ n ⁇ 1,loop to step D2. Otherwise, set j ⁇ - 0 and continue.
- D6 [dot shift] Set rB ⁇ - rB >> 16, shifting in zeros.
- D7 [add in] Set rC ⁇ - rC + rB D8 [rotate] Rotate rC right 33 bits.
- D9 [loop] If i ⁇ m ,loop to step D2. Otherwise, finish, rC contains the identity.
- Method D The code is written as a 256 bit implementation. However, it may be trivially modified to achieve the 128 bit implementation described in Method D, or implementations based on other word sizes. This implementation uses the PaddedStream class defined in the Method P code above.
- the signature of the data object is computed using the data object type and content.
- the signature is computed using a cryptographically strong technique.
- a data identifier contains a data object's type, length, and representation.
- data objects typically have one representation, but data objects may have multiple alternate representations, for reason of redundancy, efficiency, or administrative convenience. These multiple representations may be stored in different places or even different formats, but they must describe exactly the same object.
- a data object's representation may contain one or more segments. Typically, data objects only have one segment, but it is possible to spread the representation of an object across multiple segments.
- the data identifier contains information denoting how to find a string of bits that represent a part of the data object. For example, a segment may be specified by a path to a file and an offset and length of the string of bits representing the segment within the file. Alternatively, the segment may be specified by a query made to a database.
- the data object is constructed by obtaining the bits associated with each segment, concatenating them together sequentially, and interpreting them as specified by the type. Once all of the bits are collected, they may then be verified by comparing the index hash computed from the concatenated data and the type with the index hash stored in the hash table. In some circumstances, the constructed object may also be verified by checking the cryptographically strong signature of the object, again computed from the data and the type. All segments of the data object of at least one type must be accessible for the object to be accessible.
- a metadata identifier contains one or more components that indicate the type and location of one or more links annotating the data object.
- Each metadata component can specify multiple alternative locations where the metadata can be found.
- Each location has a type specifying the format of the metadata stored in that location. For example, the same metadata may be stored in human readable text format in one location, and in a compiled binary format in another location.
- the metadata for an object are constructed by obtaining the data from one location indicated by each component.
- the metadata are then collected and interpreted based on each location's type. It is not necessary that all components be accessible. Inaccessible components are ignored, so a user only sees the metadata associated with accessible components.
- the metadata identifier may be implemented using a fixed length handle, preferably of 128 to 196 bits, that can be interpreted either as a first-class-object “pointer,” or as a literal. At least one of the bits has to be used to distinguish which type it is. Literals are object that are small enough to store the data in the handle.
- the fixnum is a 64+ bit signed integer.
- the float is an IEEE floating point number.
- Short-string is any string of up to N ASCII characters. Links can then be represented by triples of handles. Typically, the label of a link is a global symbol, but it could also be another object.
- First class objects are the only kind of objects that can have metadata attached to them.
- a first-class object can be a literal, but most literals are not first-class objects.
- a first-class object can also be a link, but most links are not first-class objects.
- first-class objects that is all first-class objects except literals, have a list of references to external places where segments of their data is stored. Most object have just one segment, but when there are more than one, the data is assembled by concatenating these segments together.
- Each segment can have pointer to an alternate component for the same data.
- the different metaweb servers may have the alternatives in a different order for performance reasons.
- All first-class objects have a list of references to external places where components of their metadata are stored.
- the data are assembled by combining the metadata from these components.
- Each component can have pointer to an alternate component for the same metadata. Again, the different metaweb servers may have the alternatives in a different order for performance reasons. Each alternative indicates the format of that alternatives representation of the component.
- a resource location is a URL. It may be a pointer to a file, or a database query. It specifies where and how the data is to be found.
- a user 10 initiates a query using any of several search engines 40 , which drive a query engine 41 .
- the query engine accesses meta-knowledge 42 about the universe of knowledge, which in this case is the World Wide Web 11 .
- the meta-knowledge, or user annotations and document metadata regarding the content in the universe of knowledge are stored in an annotations database 43 which resides on one of the content servers.
- the annotations are themselves content, and may in turn be linked to other content and topics in the search space 45 .
- a user of the knowledge web may have a user profile, created, for example, using a user profile builder dialog 60 that uses various forms 62 to build a user profile 61 .
- the user profile works in connection with the meta-knowledge to filter the knowledge, so that the user gets the information they want when they want it.
- the user profile is also used as a filter/sort mechanism 64 in connection with a result-set processing system 46 that allows the user to add annotations and link topics to the knowledge.
- the result-set processing system 46 also interacts with the user when a user, provides feedback 48 on topics and contextual vocabularies 47 .
- the feedback is applied in connection with the results provided to the user, and it is also used to build up the annotations database.
- the result-set processing system 46 provides features to manage the idea space of the knowledge and related topics 49 .
- there are a series of options provided 55 which may include for example other language versions 56 of the information, e.g. French 57 , and other versions of the information 58 , for example more recent versions 59 , although in some cases, the user may desire to review an earlier version of the information.
- the user also interacts with an annotations tool set 63 which provides a manual annotator 65 that allows annotation by the user or by the proprietor of the information.
- an annotations tool set 63 which provides a manual annotator 65 that allows annotation by the user or by the proprietor of the information.
- the system provides an automatic annotator 66 .
- a piece of content such as the Gettysburg Address 70 , is registered within the knowledge web and also exists in universe of available knowledge, i.e. the World Wide Web 11 .
- the content is extracted from the web by a query 70 (numeric designator 1 ).
- the content is provided to a hash engine 68 (numeric designator 2 ) to create an index hash.
- the hashed version of the content is provided to a registry server 38 , (numeric designator 3 ) and is stored in a registry database 69 , (numeric designator 4 ).
- the registry server operates in conjunction with the annotation server 42 which accesses the annotation database 43 to add any user annotations provided at this time as well as billing activities if applicable.
- the annotation engine 42 operates to provide annotations to the annotation database 43 once the user has been verified. Such verification may be performed by any means, but in the exemplary embodiment of the invention, is provided when the user introduces a personal identification number (PIN) 71 .
- PIN personal identification number
- a security technique 72 is applied that allows the annotator to access the annotation database for reading and or writing as appropriate (numeric designator 1 ).
- the user 10 thereafter accesses the annotations, as in indicated in FIG. 6 (numeric designator 2 ). Thereafter, the user can annotate the annotations, for example to provide feedback 48 in the form of comments, reviews, ratings, and the like, (numeric designator 3 ).
- the query engine 41 accesses both the universe of available information (numeric designator 5 ), and the metaweb server 38 (numeric designator 6 ). This results in the retrieval of knowledge from the universe of knowledge resulting from the user's query. Using the knowledge retrieved, an index hash is created, which is used to access the registry entry for that piece of knowledge in the registry database 69 . Thereafter, user annotations and document metadata relating to the knowledge may be retrieved from the annotations database 43 , (numeric designator 7 ). Finally, a user profile 61 may be applied to process the annotations through the user profile so that the user receives only those annotations of interest (numeric designator 8 ).
- FIG. 7 provides a schematic diagram showing the annotation process and compositing of information for display to a user.
- the universe of available information 11 i.e. the World Wide Web
- the content is retrieved in this example by following a link as is known in the art.
- the content 74 is subjected to a hash procedure 68 as described above.
- the content information is thereafter provided to a frame buffer or compositor 77 .
- Such techniques as frame buffering and compositing are well known in the art and are not discussed herein.
- the annotation engine 42 operates in conjunction with an overlay generator 75 to provide the annotations to the display.
- any other information, such as user interface features 76 are provided to the frame buffer or compositor 77 .
- the result is a displayed image 78 , which includes annotations 82 , user interface features and tools 81 , and the unmodified content from the source 79 .
- the annotation overlay 80 is also provided.
- This aspect of the invention concerns the provision of content, for example copyrighted material, without modifying or in any way altering or copying the material. Rather, the Knowledge Web follows the link to the source information and merely displays the information on the display 78 .
- the annotation overlay 80 superimposes the annotations onto or alongside the unmodified content. In this way, the invention allows the use of content annotations without copying the content to any persistent cache or storage medium. This obviates the likelihood that copyrights are violated.
- FIG. 8 illustrates a compensation scheme by which content 74 accessed from the universe of knowledge 11 , i.e. the World Wide Web, allows content owners 80 to receive compensation 85 which may be maintained in an account 81 or otherwise provided to the content owner.
- a content flow is generated through the knowledge web (numeric designator 1 ).
- This content flow is provided to an accounting system 84 in which the access by users to content through the Knowledge Web is combined with ratings information 83 provided by the users through specialized user annotations, for example the usefulness of the information and/or a number of times the content has been accessed.
- ratings information 83 provided by the users through specialized user annotations, for example the usefulness of the information and/or a number of times the content has been accessed.
- fees paid by users 82 are apportioned to the content owners 80 to produce a compensation flow 85 based on such access and usefulness.
- the users 10 are provided with various access plans 88 , such as a subscription, for example based on a monthly fee; free access; or a value added access, for example where users pay to view annotations that are considered to be useful.
- a user accounting system 87 produces a royalty flow 82 which is then used to determine compensation to content owners 80 .
- the user accounting engine also extracts revenue for the Knowledge Web in the form of profits from the service 86 .
- FIG. 9 illustrates a query session in which a user 10 posits a query through the query engine 41 to the universe of available knowledge 11 , i.e. the World Wide Web.
- This generates various results 91 in the form of content 74 and annotations 43 .
- the content and annotations may be provided in various ways, for example based upon the users reading level, the type of information preferred, e.g. a picture, the topic space (as discussed below).
- the results are produced both from the content source and by applying the user profile 61 to an annotation and filter engine performing matches 64 . In this way, the annotations are matched to the user's reading level, preference types, and topics as mentioned above.
- the user profile is built with various types of information about the user and in this example is generated through the use of a form 62 as discussed above.
- the user profile includes such information as reading level, type or information preferred, user defined spaces, specific information preferred, topic spaces requested, and statements that the user accepts more advanced information in certain topics, for example auto-didacticism.
- the profile may include an advanced information space 90 in which the content in annotations are provided in this particular way.
- the annotations may link the content to a tutorial to explain the content to the user, there may be links to pre-requisites before the content is readily understood, so that the user is properly prepared for reviewing the contents, or there may be links to definitions.
- the annotation may be attached to additional content which provides context for the content being reviewed. This additional information may be generated as part of the query and search posited by the user, and the information may be provided based upon a weighting based upon the user profile and feedback provided by the user, as well as feedback provided by other users.
- the user may operate a “next” button 92 .
- the “next” button is an important learning feature provided by the invention in which a forward indication 93 indicates to the Knowledge Web that the user is finding the information and the current path of the knowledge useful. In this case, the Knowledge Web proceeds along the path it is predicting as being useful to the user.
- a “reverse” button 94 By selecting the “reverse” button, in this example, the user provides feedback that the path is not helpful and the Knowledge Web reformulates the basis for providing information.
- User operation of the forward and reverse buttons is used to build up the profile of the user, and also may be used to build further annotations and feedback based on the usefulness of information.
- FIG. 10 is a schematic representation of various visualization aspects of the knowledge web.
- a display is shown in which a dialog box 200 provides a user 10 with various ways in which a search may be visualized.
- the visualization may occur as a timeline; as a map (for example geographic map with regard to countries, or geological features, or an object map, for example with regard to the human body, where the map might point out the human beings lungs in connection with various human diseases); as a topic map (for example the topic of the law with regard to patents, and in particular clocks, specifically with regard to clocks made by the Long Now Foundation); as a hierarchical display; as a display of personal bookmarks, or as a combination of several or all of these forms of visualization.
- These particular views are provided by means of example and those skilled in the art will appreciate that other visualizations and views may also be provided.
- a display is presented to the user, as shown on FIG. 10 (numeric designator 1 ).
- the user may then select a search space, as shown on FIG. 10 (numeric designator 2 ).
- the search space could be for example based on a time line 201 , for example where the Long Now Foundation's clock is shown to operate along a timeline relative to he number of years between clock chimes.
- the user may also select further views 202 , as shown on FIG. 10 (numeric designator 3 ). For example, the user may choose a map view 203 that shows geographically where the Long Now clock is located.
- This view may be further enhanced by the user's selection of the map to produce an exploded view that shows more precisely or with better resolution the location of the desired item 204 .
- the Knowledge Web presents additional information about this geographical location. For example, the particular part of California where the Long Now Foundation is located is also known for bristle cone pine trees. Thus, when a user selects this particular geographical location, related topics, such as bristle cone pine trees, are offered to the user. Finally, the user may choose to view the search results in another form, such as a hierarchy 205 .
- FIG. 11 shows one security aspect of the invention.
- a query is presented to the universe of knowledge 11 by the query engine 41 , those results are produced 91 as discussed above. This is indicated on FIG. 11 by the numeric designators ( 1 ) and ( 2 ).
- the display indicates, in this example, that the information is classified and requires a certain level of security clearance. In such cases, the user is provided with an opportunity to vet themselves to the system 212 , for example by selecting a “get vetted” button as indicated on FIG.
- a dialog 213 is presented which asks the user such questions as “Why is the information wanted?”, “Who is doing the asking?”, and “Provide proof.”
- the user answers are sent through a checking engine which compares the user information against an access database 215 to determine the users levels of authorization with regard to the information desired.
- the access database may include additional databases which are independently checked, such as a CIA database or an FBI database.
- the check engine then provides a response to the user 218 , approving or denying access. If the request is denied, then the refusal is indicated to the user, either directly on the display 78 or via a return message, such as an email message. If approval is granted, then an authorization mechanism is invoked.
- an email link is provided to the user. When the user opens the email and clicks on the link contained therein, a one-time key 221 is provided that allows the user to have one-time access to the classified information.
- FIG. 12 is a flow diagram showing the operation of the Knowledge Web in connection with the result-set processing system.
- a search is commenced 300
- results 302 are provided through the result-set processing system 304 which provides them to the user.
- One of the functions of the result-set processing system 312 is to allow the user to promote and demote information in terms of urgency and relevancy.
- results 302 including search results, user-created documents, email messages, and other forms of knowledge—being placed in the result-set processing system 304
- the movement of the information is affected by various factors which are discussed below. Such movement is shown in the FIG. 12 by the numeric designator ( 1 ).
- User interaction with the result set moves information through the system.
- the user may take such actions as continuing through reading results, during which the user may mark the results, or rate them, may stop, or may present a new query. These actions are shown on FIG. 12 by the numeric designator ( 2 ).
- the Knowledge Web moves the results through the result-set processing system based upon such weighting as is appropriate in view of the user's actions. This weighting is indicated on FIG. 12 by the numeric designator ( 3 ).
- the user actions in reading the results 306 may result in additional searching 314 which produces yet additional results 316 . User actions may continue to produce additional searching and additional results with effects on the weighting of the information contained in the result set.
- the user profile 61 may be applied to the results and to the weighting, such that the promotion or demotion of information within the result set is a function of user profile, as well as user actions.
- information is either removed from the result set 310 or saved 320 and is ranked in the result set with regard to such features as urgency and relevancy in connection with the user query. This mechanism allows the user to be presented with information that is most relevant to the user's query.
- FIG. 13 illustrates the concept of search space in connection with the knowledge web.
- an entity 350 such as the results of a query return from the search space is investigated.
- the entity may be, for example, a corporation, or a country, or any other entity.
- the user 10 sets various values to be applied in the entity to discover information about the entity from the universe of available information.
- the user might tell the Knowledge Web to follow a certain number of links, or to follow specific links.
- the user may tell the Knowledge Web to follow subsidiaries of the corporation, follow general reporting of the corporation, or follow a particular product made by the corporation, e.g. kryptonite.
- FIG. 13 b shows a two-stage search in which information about the entity from the universe of available information is first applied to an N-dimensional search space. The results derived from the search space 351 are then applied to the user profile 61 to produce the final results provided to the user.
- FIG. 14 illustrates the process of enriching data through the addition of annotations.
- data are located within the universe of available information. Such data 400 for example could be related to oranges.
- a first user U 1 provides annotations 410 with regard to this data, at some latter point a second user U 2 posts a query with regard to the information 412 . Additional annotations are then provided by further users through an ultimate user Un 413 .
- the information now exists as a collection of data about oranges and annotations 410 to that data: the information has been enriched by various annotations provided in response to the query of the user U 2 . At some late point in time user U 2 may revisit the data 414 .
- the interaction of various users with regard to a body of data has created a set of annotations that allows the user U 2 to discover information about the data.
- users may have provided various observations, such as “The orange companies have had good weather and expect a good crop”, or “The orange companies are ordering lots of boxes”.
- the results may help develop insights with regard to the information.
- the query might be “Are the orange companies ordering new equipment?”
- the response might include knowledge about oranges as well as associated meta-knowledge, including the annotation, “The orange companies have ordered more machinery.”
- the user is able to make use of patterns of data and annotations, such as the information that the orange industry is doing very well and would be a good place to make an investment, based on the insight developed from the cumulated knowledge that the weather is good, the orange companies are ordering more boxes, and they are ordering more machinery. This information would not otherwise be available by a simple query with regard to oranges.
- the Knowledge Web allows users to add annotations to information in such a way that patterns and information otherwise not available through a standard search can be developed, thereby resulting in valuable insights.
- FIG. 15 is an illustration of a user interface for the Knowledge Web as shown on a display 78 .
- a search field 500 which allows a user to enter searches and that also indicates the searcher's previous searches.
- related documents 502 which allow a searcher to investigate related areas, and a field with regard to document notes 504 .
- the user is also allowed to choose a search path, to view the document and other map locations, or to view an entire map of the documents 508 and to bookmark the information.
- the user is also provided with an opportunity to rate the information and thereby add his understanding of the value of the information.
- the actual search results are displayed to the user in the main pane 514 of the display.
- FIG. 16 shows a document fragment as presented to the user on a display 78 in context, as well as showing highlighted text from an activated comment.
- the gray text is the part of the document that is not part of the document fragment.
- the document fragment text remains untouched.
- the highlighted text also known as the focus, is associated with the comment mark at the end of the paragraph.
- the user has clicked on the comment marker, and the Knowledge Web client has associated text with it.
- the user clicks on the comment marker the full comment text and any follow-up comments are displayed in the side-bar.
- a further box is displayed when the mouse rolls over the comment marker. This shows the first few lines of the comment, giving the user enough information to decide if the comment is worth looking at in more detail. See for example FIG. 15 , numeric designator 516 .
Abstract
Description
- 1. Technical Field
- The invention relates to knowledge. More particularly, the invention relates to a system for organizing knowledge in such a way that users can find it, learn from it, and add to it as needed.
- 2. Description of the Prior Art
- There is widespread agreement that the amount of knowledge in the world is growing so fast that even experts have trouble keeping up. Today not even the most highly trained professionals—in areas as diverse as science, medicine, law, and engineering—can hope to have more than a general overview of what is known. They spend a large percentage of their time keeping up on the latest information, and often specialize in highly narrow sub-fields because they find it impossible to keep track of broader developments.
- Education traditionally meant the acquisition of the knowledge people needed for their working lives. Today, however, a college education can only provide an overview of knowledge in a specialized area, and a set of skills for learning new things as the need arises. Professionals need new tools that allow them to access new knowledge as they need it.
- The World Wide Web
- In spite of this explosion of knowledge, mechanisms for distributing it have remained pretty much the same for centuries: personal communication, schools, journals, and books. The World Wide Web is the one major new element in the landscape. It has fundamentally changed how knowledge is shared, and has given us a hint of what is possible. Its most important attribute is that it is accessible—it has made it possible for people to not only learn from materials that have now been made available to them, but also to easily contribute to the knowledge of the world in their turn. As a result, the Web's chief feature now is people exuberantly sharing their knowledge.
- The Web also affords a new form of communication. Those who grew up with hypertext, or have otherwise become accustomed to it, find the linear arrangement of textbooks and articles confining and inconvenient. In this respect, the Web is clearly better than conventional text.
- The Web, however, is lacking in many respects.
- It has no mechanism for the vetting of knowledge. There is a lot of information on the Web, but very little guidance as to what is useful or even correct.
- There are no good mechanisms for organizing the knowledge in a manner that helps users find the right information for them at any time. Access to the (often inconsistent or incorrect) knowledge on the Web thus is often through search engines, which are all fundamentally based on key word or vocabulary techniques. The documents found by a search engine are likely to be irrelevant, redundant, and often just plain wrong.
- The Web knows very little about the user (except maybe a credit card number). It has no model of how the user learns, or what he does and does not know—or, for that matter, what it does and does not know.
- A Comparison of Knowledge Sources
- There are several aspects to how learners obtain knowledge—they might look at how authoritative the source is, for example, or how recent the information is, or they might want the ability to ask the author a question or to post a comment. Those with knowledge to share might prefer a simple way to publish that knowledge, or they might seek out a well-known publisher to maintain their authority.
- While books and journals offer the authority that comes with editors and reviewers, as well as the permanence of a durable product, the Web and newsgroups provide immediacy and currency, as well as the ability to publish without the bother of an editorial process. Table “A” is a summary of the affordances of various forms of publishing.
TABLE A Affordances of Various Forms of Publishing News Text The Web Groups Books Journals Peer-to-Peer Yes Yes No Limited publishing Supports Yes Limited No Limited linking Ability to add No Yes No No annotations Vetting and No Limited Yes Yes certification Supports Limited No Yes Yes payment model Supports Limited No Yes No guided learning
Corporate and Government Needs - For institutions, corporations, and governments, failure to keep track of knowledge has consequences that are quite different from those for an individual. Often, institutions make a bad decision due to lack of knowledge on the part of those at the right place and at the right time, even though someone else within the institution may actually hold the relevant knowledge.
- Similarly, within a corporation, the process of filtering and abstracting knowledge as it moves through the hierarchy often leaves the decision-maker (whether the CEO, the design engineer, or the corporate lawyer) in a position of deciding without the benefit of the best information. The institutional problem is made worse by the problem of higher employee turnover in the more fluid job market, so that the traditional depository of knowledge—long-standing employees—is beginning to evaporate, just as the amount of knowledge that needs to be kept track of is exploding.
- The consequences of not having the right knowledge at the right place and time can be very severe: doctors prescribing treatments that are sub-optimal, engineers designing products without the benefit of the latest technical ideas, business executives making incorrect strategic decisions, lawyers making decisions without knowledge of relevant precedents or laws, and scientists working diligently to rediscover things that are already known—all these carry tremendous costs to society.
- The invention addresses the problem of providing a system that has a very large, e.g. multi-petabyte, database of knowledge to a very large number of diverse users, which include both human beings and automated processes. There are many aspects of this problem that are significant challenges. Managing a very large database is one of them. Connecting related data objects is another. Providing a mechanism for creating and retrieving metadata about a data object is a third.
- In the past, various approaches have been used to solve different parts of this problem. The World Wide Web, for example, is an attempt to provide a very large database to a very large number of users. However, it fails to provide reliability or data security, and provides only a limited amount of metadata, and only in some cases. Large relational database systems tackle the problem of reliability and security very well, but are lacking in the ability to support diverse data and diverse users, as well as in metadata support.
- The ideal system should permit the diverse databases that exist today to continue to function, while supporting the development of new data. It should permit a large, diverse set of users to access this data, and to annotate it and otherwise add to it through various types of metadata. Users should be able to obtain a view of the data that is complete, comprehensive, valid, and enhanced based on the metadata.
- The system should support data integrity, redundancy, availability, scalability, ease of use, personalization, feedback, controlled access, and multiple data formats. The system must accommodate diverse data and diverse metadata, in addition to diverse user types. The access control system must be sufficiently flexible to give different users access to different portions of the database, with distributed management of the access control. Flexible administration must allow portions of the database to be maintained independently, and must allow for new features to added to the system as it grows.
- It would be advantageous to provide a system to organize knowledge in such a way that users can find it, learn from it, and add to it as needed.
- The presently preferred embodiment of the invention provides a system to organize knowledge in such a way that users can find it, learn from it, and add to it as needed.
- The exemplary system has four components:
-
- a knowledge base,
- a learning model and an associated tutor,
- a set of user tools, and
- a backend system.
- The invention also preferably comprises a set of application programming interfaces (APIs) that allow these components to work together, so that other people can create their own versions of each of the components.
- In the knowledge web a community of people with knowledge to share put knowledge in a knowledge base using the user tools. The knowledge may be in the form of documents or other media, or it may be a descriptor of a book or other physical source.
- A central feature of the knowledge web is that each piece of knowledge is associated with various types of meta-knowledge about what the knowledge is for, what form it is in, and so on. Conceptually, the knowledge base is a centralized resource with possible private compartments, much like the Internet. Also like the Internet, it is intended to be implemented in a distributed manner.
- The knowledge in the knowledge base can be created specifically for the knowledge base, but it can also consist of information converted from other sources, such as scientific documents, books, journals, Web pages, film, video, audio files, and course notes.
- The initial knowledge within the knowledge base comprises existing curriculum materials, books and journals, and those explanatory pages that are already on the World Wide Web. These existing materials already contain enough examples, problems, illustrations, and even lesson plans to provide utility to an early incarnation of the knowledge web.
- The knowledge base thus represents:
-
- Knowledge (online content or references to online or offline content), and
- Meta-knowledge, created at the time of entry, accumulating over time, and indicating, for example, the usefulness of the knowledge, reflecting user opinions of the knowledge, certifying the veracity of the knowledge, providing commentary on the knowledge, or indicating connections between the knowledge and other units of knowledge.
-
FIG. 1 comprises a series of block-schematic diagrams in whichFIG. 1 a outlines the problem of how to find accurate, relevant, and appropriate information;FIG. 1 b outlines the problem of how to sort and identify useful information; andFIG. 1 c describes the problem of how to identify what information needs to be learned and what is the best presentation format for that information; -
FIG. 2 is block schematic diagram which shows the organization of information in accordance with the invention; -
FIG. 3 is a block schematic diagram which shows a system configuration according to the invention; -
FIG. 4 is a block schematic diagram showing an overall system and system elements according to the invention; -
FIG. 5 is a block schematic diagram showing information flow within a system according to the invention; -
FIG. 6 is a block diagram showing an annotation element according to the invention; -
FIG. 7 is a block schematic diagram showing a presentation element according to the invention; -
FIG. 8 is a block schematic diagram showing a business model for an information market according to the invention; -
FIG. 9 is a block schematic diagram showing a profile element according to the invention; -
FIG. 10 is a block schematic diagram showing multiple search bases in multiple views to reduce the search space according to the invention; -
FIG. 11 is a block schematic diagram showing elements linking authorization, security, and commerce according to the invention; -
FIG. 12 is a block-schematic/flow diagram showing a queued query process according to the invention; -
FIG. 13 is a flow diagram showing a link display in whichFIG. 13 a shows a determination of display link andFIG. 13 b shows a determination of search space according to the invention; -
FIG. 14 is a flow diagram showing a multi-user, collaborative work flow for answering questions according to the invention; -
FIG. 15 is a schematic representation of a user interface according to the invention; -
FIG. 16 is a schematic representation of a document fragment with comments according to the invention; -
FIG. 17 a is a flow diagram showing the data object registry process according to the invention; -
FIG. 17 b is a bock schematic diagram showing the structure of the hash table entry according to the invention; and -
FIG. 18 is a flow diagram showing the implementation of a padding technique according to the invention. - While the invention herein is directed to solving various problems with regard to using, managing, and accessing information, three specific problems are identified in
FIG. 1 . - In
FIG. 1 a, auser 10 needs information to make a decision, for example with regard to a medical condition. The user accesses the universe ofavailable information 11 which, in this case, could be the World Wide Web or other sources of information. A process 12 is required in this regard that would allow the user to find accurate, relevant, and appropriate information. - In
FIG. 1 b, the universe ofavailable information 11 exists and a process is required for searching the information to identify patterns of information that are useful, for example a government agency trying to identify a pattern of information that might predict a security threat. - In
FIG. 1 c, auser 10 needs to acquire particular pieces of knowledge to fill gaps in the user's personal knowledge. When accessing the universe ofavailable information 11, a process is required that allows the user to identify what needs to be learned and what information is extraneous and therefore need not be considered. The process 14 must also present the information in a format that most closely matches the user's preferred learning style and/or intellectual interests. - The Knowledge Web—an Overview
- Several of the key concepts underlying the knowledge web's approach to addressing the identified problems are detailed below.
- A Broad Knowledge Base
- A community of people with knowledge to share put knowledge into a knowledge base using a set of user tools. The knowledge may be in the form of documents or other media, or it may be a descriptor of a book or other physical source.
- A central feature of the knowledge web is that each piece of knowledge is associated with various types of meta-knowledge about what the knowledge is for, what form it is in, and so on. Conceptually, the knowledge base is a centralized resource with possible private compartments, much like the Internet. Also like the Internet, it is intended to be implemented in a distributed manner.
- The knowledge in the knowledge base may be created specifically for the knowledge base, but it may also consist of information converted from other sources, such as scientific documents, books, journals, Web pages, film, video, audio files, and course notes. As Marshall McLuhan observed, “The content of the new medium is the old medium.”
- The initial knowledge within the knowledge web comprises existing curriculum materials, books and journals, and those explanatory pages that are already on the World Wide Web. These existing materials already contain enough examples, problems, illustrations, and even lesson plans to provide utility to an early incarnation of the knowledge web.
- The knowledge base thus represents:
-
- Knowledge (online content or references to online or offline content), and
- Meta-knowledge, created at the time of entry, accumulating over time, and indicating, for example, the usefulness of the knowledge, reflecting user opinions of the knowledge, certifying the veracity of the knowledge, providing commentary on the knowledge, or indicating connections between the knowledge and other units of knowledge.
Collaboration and Community Involvement
- One aspect of the knowledge web is peer-to-peer publishing. The task of recording and sharing the world's knowledge is so monumental that peer-to-peer publishing by a very large number of people is the preferred manner in which to accomplish it. One of the reasons why the Web and Internet news groups have enjoyed such runaway success is that they allow people to communicate with each other directly, without intermediaries. This basic human desire to share knowledge is also what drives the creation of the knowledge web.
- Many people have specialized knowledge about certain topics, and know how to teach them especially well, but there are few easy ways for them to share that information effectively with a large audience, short of teaching a course, writing a textbook, or developing a television special. With the knowledge web's authoring tools, anyone with knowledge to share can publish short pieces, such as a single explanation of a concept—an effort comparable to creating a Web page. These explanations are the basic building blocks of the knowledge web.
- While the knowledge web builds on systems such as the World Wide Web, Internet news groups, libraries, professional societies, books, and refereed journals, it allows an even more generalized form of linking than the World Wide Web. In the knowledge web, the author as well as readers can create annotations. These annotations can then be used for advanced features such as author credits, usage tracking, and commenting, that the Web lacks.
- Users are also able to add annotations to explanations connecting them to other content, suggesting improvements, and rating their accuracy, usefulness, and appropriateness. Such feedback enhances the value of the knowledge web, keeps it current and useful, and eventually makes its way back to the original authors, so that they can use it to improve their explanations.
- This ability of users to comment, filter, and review the content of the knowledge web solves one of the serious problems with peer-to-peer publishing—that of quality control. While publishers of textbooks and journals provide editing and selection services, the information on the World Wide Web is often irrelevant, badly presented, or just plain wrong (and that's not including the pornography and the propaganda). The knowledge web's peer review infrastructure also leads the way for third-party certification of content, further enhancing the knowledge.
- Individualized Learning
- The knowledge web allows for learning tailored to an individual learner. This is accomplished through the use of a tutor that customizes a user's learning experience based on a user learning model. The tutor handles the key problem of presenting the right information to the user at the right time. The knowledge web's tutor does not create or transform the knowledge itself, but merely maps a path from what a user already knows to what he needs to learn.
- The learning model for an individual user combines a user profile, reflecting information on the current knowledge, needs, capabilities, and preferences of the user, with generalized knowledge about how people learn. The tutor draws upon the learning model and the meta-knowledge stored in the knowledge base to allow learning in a manner most fit for the user. In its simplest form, the tutor follows the explicit instructions of a human teacher on how to teach a certain body of knowledge to a certain type of person.
- For example, the tutor may show that a given user has a firm understanding of calculus, a general understanding of Newtonian physics, and is completely mystified by quantum mechanics. The model may also include a much more detailed model of certain topics that are of particular importance to the user. For instance, in the case of a medical practitioner, it knows not only the physician's specialty, but it also knows with which recent discoveries, within that specialty, the physician is already familiar.
- Most significantly, the user profile of a user is continually updated, allowing the tutor to become better acquainted with the user over time. It knows what the user already understands and what he is ready to learn. It knows the user's learning style: whether he prefers pictures or stories, examples or abstractions.
- If a user wanted to learn about the principle in quantum mechanics called Bell's Inequality, he has several options. The user could read about it in any of several books on quantum mechanics. He could read the original paper describing it, or any of several papers that discuss it. The user could read articles on the Web that discuss Bell's Inequality. Which of these options is right? Are there other options to learning that he is unaware of? Is there a learning path he should take that would prepare him to understand Bell's Inequality? A personal tutor, if the user had one, might be able to help.
- For example, there is a short film of Dr. Richard Feynman explaining Bell's inequality. Most people have little interest in quantum mechanics and no interest at all in understanding Bell's inequality, and would not understand or be interested in this film. On the other hand, most quantum physicists already understand Bell's inequality, and would learn little from Feynman's explanation.
- However, if the user is a student who is just learning quantum mechanics, who has just mastered the necessary prerequisites, Feynman's explanation can be exciting, startling, and enlightening. It not only can explain something new but can also help the user make sense of what he has recently learned. The trick is showing the film clip at just the right time to the person who can best appreciate it. A good human tutor who understands the student's background and preferences can do just that.
- The knowledge web's tutor seeks to emulate this personalized level of presentation. In its simplest form, the tutor is a knowledge base access tool that takes user preferences into account. In more complex versions it takes advantage of the meta-knowledge in the knowledge web and the user learning model to plan what information is presented and how.
- The following is a list containing examples of methods that the tutor uses:
-
- The tutor plans its lessons by finding chains of explanations that connect the concepts the user needs to learn to what he already knows.
- The tutor creates a map of what the user needs to learn.
- The tutor chooses the explanatory paths that match the user's favorite style of learning, including enough side paths, interesting examples, multimedia documents, and related curiosities to match his level of interest.
- Whenever possible, the tutor follows the paths laid down by great teachers.
- If an explanation does not work, and consistently raises a particular type of question, then the tutor records this information in the knowledge base, where it can be used in planning the paths of other students.
- Once the user has learned the material, the tutor updates the user profile to reflect the newly acquired knowledge. Because the tutor knows which subjects the user is and has been interested in, it can reinforce the user's learning by finding connections that tie these subjects together.
- The tutor becomes acquainted with the user because it has worked with the user for a long time.
- When an explanation does not work, the tutor tries another approach. The user can probe an area of learning further, request examples, and give the tutor explicit feedback on how it is doing. The tutor then uses all these forms of feedback to adjust the lesson, and in the process it learns more about the user.
- Imagine that the user is a physician who wants to treat a patient who has an unusual disease. A standard medical education probably treats the topic superficially, if at all. The user is thus faced with a few unsatisfactory alternatives. He might consult a specialist, but if he does not know much about the field it is difficult to know what kind of specialist is needed. The user could try reading a specialized textbook, but such a textbook is likely to be out of date, so he also has to find the relevant journals to read about recent developments. If he finds them, they almost certainly are written for specialists and are difficult for the user to read and understand. Given these unsatisfactory choices, the user may go ahead and try to treat the disease without the benefit of the best knowledge.
- With the knowledge web, one can make the transition from a qualified general practitioner lacking specialized knowledge to a more fully informed specialist in several ways. The tutor might provide the best path for the user to gain knowledge about the condition and its treatment. It might put the user in touch with a nearby specialist. It might provide him with a forum to add his knowledge on this extremely rare condition for others to use.
- Other Aspects
- The knowledge web also provides features lacking or deficient in the World Wide Web, such as copyright protection, data security, permanence, and authentication.
- The World Wide Web has demonstrated that many authors are willing to publish information without payment, but it does not give them any convenient option to do otherwise. The knowledge web provides various payment mechanisms, including subscription, pay per play, fee for certification, and usage-based royalties, while supporting and encouraging the production of free content.
- The support infrastructure for payments allows different parts of the knowledge web to operate in different ways. For instance, public funding might pay for the creation of curriculum materials for elementary school teachers and students, but specialized technical training could be offered on a fee or subscription basis.
- Another model that is supported is a micropayment system, in which a user pays a fixed subscription fee for access to a wide range of information. Usage statistics would serve as a means to allocate the income among the various authors. This system has the advantage of rewarding authors for usefulness without penalizing users for use. The ASCAP music royalty system is an example of how such a system might work.
- Conclusion
- With the knowledge web, humanity's accumulated store of information will become more accessible, more manageable, and more useful. Anyone who wants to learn is able to find the best and the most meaningful explanations of what he wants to know. Anyone with something to teach has a way to reach those who want to learn.
- Knowledge Web Structure and Operation
- As described in the preceding overview, the invention provides a system to organize knowledge in such a way that users can find it, learn from it, and add to it as needed.
- The presently preferred embodiment of the invention achieves this goal with a system most simply considered as having four principal components:
-
- a knowledge base,
- a learning model and an associated tutor,
- a set of user tools, and
- a backend system.
- The invention also preferably comprises a set of application programming interfaces (APIs) that allow these components to work together, so that other people can create their own versions of each of the components.
- Knowledge Base
- The knowledge base is composed of knowledge and meta-knowledge.
- Knowledge
- Each of the principal components of the presently preferred embodiment of the invention makes use of a knowledge representation scheme that organizes the knowledge within the knowledge base into explanations, topics, and paths. The explanation is the basic building block of knowledge in the system. An explanation is a human-readable piece of content such as text, audio, video, or interactive media. Explanations are organized into topics, and are connected by paths.
- Explanations
- Most of the information in the knowledge web is in the form of explanations. An explanation is a unit of content that helps the user understand one or more topics. An explanation may be a piece of text, an illustration, a segment of audio or video, or something more complex, such as an interactive Web page. Some explanations explain through instruction, while others give definitions, demonstrations, or examples. Explanations may be labeled with annotations providing meta-knowledge identifying their type, source, relevancy, etc.
- A single explanation may explain several topics, and a single topic may be explained by many explanations. Every explanation has links to the topics that it explains. Explanations also have links to their prerequisites, that is, to the topics that represent the prerequisite knowledge. If a user needs a certain level of knowledge about a particular topic in order to understand an explanation, then the explanation has a link to that topic, indicating the level of knowledge required.
- Topics
- A topic is a cluster of concepts that a user might want to learn at the same time. The topic might be something very specific, e.g. “How to Change a Tire,” or it might be something very broad, e.g. “Chemistry” or “Configuring UNIX Systems.” An academic course is likely to cover a topic, but every item in the course outline is also a topic of its own. Topics typically have multiple subtopics included within them. A subtopic may be part of many topics.
- The smallest type of topic is the testable unit of knowledge or TUK. The TUK is a very simple topic that contains no subtopics. It represents a single idea or a fact. It is so simple that the user either knows it or not. There are no degrees of understanding. A TUK is testable in the sense that it is possible to ask a question that tests whether the user knows it or not.
- The knowledge web uses topics to organize knowledge. For example, a user of the system specifies what he wants to learn in terms of topics. Topics are also used to map an area of knowledge, to show the user a map of the gaps in his knowledge or a map of what is to be learned. The system also keeps track of what the user knows in terms of topics. It may know for example that the user is an expert at “Configuring UNIX Systems” and that the user is only a novice at “Chemistry.” The system has a representation of how important each of the subtopics is to the topic, and which subtopics correspond to which degrees of understanding. It also has a representation of what parts of the topic the user knows.
- Paths
- A path is a way of describing a sequence of explanations and queries, with possible branch points. Paths are used to encode information about ways to learn a topic. As with an explanation, a path is linked to the topics it explains and topics it depends on as prerequisites. In fact, a path may be thought of as a kind of composite explanation. Some of the explanations in a path may be commentaries that guide a user along the path. For example, there may be a description of the topics to be covered in the path, or reviews of what has been learned. This type of commentary explains the path, not the content, so unlike a normal explanation it is not linked to a topic, but only to the path of the explanation.
- A path can contain branch points that are based on answers to queries. These branches can ask the user for explicit directions, such as “Do you want to see another example?” or alternatively the branch may be a test of the user's understanding. A query always includes a set of sample answers. In the simplest case, these answers are presented to the user for a multiple-choice response. A query can also be set up so that the user gives a free-form response. In this case, the response is matched against the possible answers using a pattern-matching algorithm.
- A path may also contain additional information about how the sequence is presented. For example, the path may constrain the timing of the presentation, or the layout of explanation and test questions on a page. This information is represented by annotations on the links of the path, described later.
- Meta-Knowledge
- The meta-knowledge within the knowledge base consists of user annotations and document metadata.
- User Annotations
- User annotations are associated with explanations, topics, paths, or other annotations and provide further information relevant to the explanation, topic, path, or annotation. Annotations do not modify the annotated content, but merely add to it.
- The author of the annotated content creates some of the annotations; third parties create others. For example, the author of an explanation may add an annotation to link a list of frequently asked questions (FAQ's) or may support an associated discussion group. The author may also add annotations indicating that this explanation is only available to users with certain permissions.
- Third parties add annotations, whether explicitly or implicitly, through their use of content. For example, usage statistics, a simple example of an annotation, are added automatically as users access content. Annotations are also added to reflect the popularity of content, or its appeal to learners of various types. In addition, certification authorities may add annotations certifying or questioning the correctness or the appropriateness of content.
- Another type of statistical annotation that may be collected is a simple poll indicating whether a user liked the explanation. Feedback statistics may also be recorded for other usage information, such as how frequently specific questions are asked.
- Third parties can also make annotations explicitly. For instance, a user can add an annotation designating a related explanation, or an annotation offering editorial comment.
- Document Metadata
- Several annotations to an explanation, topic, path, or annotation may be added automatically at the time of creation, such as those identifying the creation date, authorship, or language. This form of annotation is referred to as document metadata.
- As used herein, the act of annotation refers generally to the creation of meta-knowledge, encompassing both user annotations and document metadata. Similarly, annotations refers generally to instances of both user annotations and document metadata.
- Learning Model and Tutor
- The tutor makes use of the learning model and the knowledge base to help the user find the topics and explanations that are most helpful. For example, the tutor uses an awareness of the user's age, language preferences, and reading level to filter and sort explanations. It also uses information on which authorities the user trusts, and which authors he likes. This information is also used to filter and sort explanations.
- The tutor also knows about specific topics that the user learned or demonstrated knowledge of in the past. It has information about the user's interests, both in terms of topics and presentation. It knows the user's preferences for words, pictures, audio, video, or interactive programs. It also knows whether the user likes examples, definitions, equations, diagrams or stories. It may even know whether he likes to stay focused or wander, whether he prefers to explore wide or drill deep. All this formation helps the tutor present information in a way that the user can most easily understand it. Preferably, all user specific data is private and inaccessible to others.
- In some cases the user may not be looking so much for a specific piece of knowledge, but for a credential or a skill. The tutor is also able to help the user find these. For example, there may be a topic corresponding to “Passing the New York State Bar Exam” or “Operating a Caterpillar Model D3 Bulldozer.” These topics not only link to the knowledge the user needs to pass the test, but also to courses that lead to certification. In many cases, learning the factual knowledge is only part of the process.
- Once the user has chosen what to learn, the tutor helps the user choose how to learn it. In the simplest cases, this may be a single explanation. In more complex cases, the tutor finds chains of explanations that connect what the user wants to know to what is already known. The tutor takes into account the user's personal tastes, language, sensibilities, and learning style in its choice of content. It also takes into account the statistical experience of others. It knows what explanations have worked in the past, and it also finds and takes advantage of paths and annotations laid down by teachers.
- As with choosing the topic, choosing explanations is an interactive process between the user and the tutor. In the simplest cases, the user can just choose from a list of sorted options. In more complex cases, the process is more like planning a course of study. For instance, the user may want to plan which material is covered, how long the user is willing to spend, and in what sequence the user wants to learn things. This gives the user an outline of the plan of study.
- The tutor can also test the user's knowledge by asking the user questions. How often it does this depends on the user's personal preferences. Such questions are partly to reinforce what the user has learned and partly to verify that the user has learned it. If the user has not learned a concept, the tutor may suggest other explanations. If the user is following a path created by a teacher, the teacher may have included a question, and suggestions on where to go next that depends on the user's answers. The teacher can use wrong answers to steer the user down a branch of the path that helps the user clear up a particular misunderstanding.
- The tutor acts as a guide, not as a director. Its job is to present the user with the options, and recommend those that come closest to fitting the user's needs. It is also the tutor's job to keep the user informed about where the user is, and where the user might want to go next.
- User Tools
- The knowledge web provides two principal sets of user tools to access and modify the knowledge base—viewing tools and authoring tools. The viewing tools provide the user access to and a limited ability to modify the knowledge base, whereas the authoring tools allow for more rapid and more extensive creation and modification of content.
- Preferably, these tools are implemented as software systems.
- Viewing Tools
- The viewing tools provide the primary interface between the user and the knowledge web. The viewing tools can be thought of as an extended Web browser, with support for specialized operations for the knowledge web. The presently preferred implementation of the viewing tools is a browser with an added set of extensions. The viewing tools supports three basic activities: knowledge base visualization, content display, and annotation. The viewing tools provide specialized user interfaces for each of these three activities.
- Visualization Interface
- One goal of this aspect of the invention is to develop a better way for a user to visualize and navigate a connected web of knowledge. This aspect of the invention allows the user to navigate through the links, see patterns in the connections, and reorganize the information according to multiple navigational schemes. It allows the user to see detailed local information, and also see how that information fits into a broader global context.
- Visualization of the knowledge base typically begins with the selection of a topic or topics that a user wants to learn about. In the simplest cases, this can be accomplished by the user naming a topic. This may be done by the user entering a word or phrase into a topic-search engine.
- The visualization interface then displays a map of the area of topic space the user selects, showing what the user already knows and what is knowable. On the topic map, the space of topics and subtopics is illustrated as a two-dimensional landscape, with borders, landmarks, and links showing relationships between topics. A coloring scheme shows the user's prior knowledge and the relative importance of the topic.
- As described herein, the tutor can play an important role in generating a map that is meaningful to the user. Because the learning model provides the tutor with an understanding of what the user already knows and how he prefers to have information presented, the visualization interface is able to create a map specifically for the user.
- The visualization interface allows the user to display and navigate the topic map. The way that the map is drawn and colored in context depends both on what the user is trying to learn and on what others the user trusts have judged to be important. The map allows the user to get a feel for the size of each topic, and how long it takes the user to cover. It also shows paths that the user has traveled before and paths that others have traveled before. The visualization interface allows the user to move through the topic space by panning, zooming, or leaping from topic to related topic. The user can zoom into the relevant topics, look at their subtopics and mark the things that are of interest, or that are already known.
- The system may also provide a simulation of a three-dimensional navigational space that the user can “fly” though, by moving forward/back, right/left, or up/down, or rotating. It is anticipated that the user will not be permitted to use the rotation function, as it would likely result in disorientation of the user. In this navigation space there are a number of graphical objects: some are three-dimensional, and some are animated. Some of the objects have sounds associated with them that the user begin to hear as he draws near. Between objects are links, representing the relationships between the concepts they represent. The links are initially nearly transparent, but as the user moves nearer an object, the links associated with it become more visible, then fade as the chain of connections extends away from the object. As the user approaches a link, links of that type become more visible.
- The objects are arranged in space in a systematic way. For instance, the vertical dimension may represent historical time, and the horizontal dimension may represent a theme. The organization scheme is not fixed. When the scheme is changed, the objects reorganize themselves in a new order.
- The user moves through this space to find and examine objects of interest, to visualize their relationships, and to visualize the context into which they fit. The space is rich in color, depth, texture, motion, and sound; rich in a way that adds meaning and helps understanding.
- The visualization interface uses the spatial metaphor at all levels of the topic tree. At the higher level the map has been carefully drawn by human mapmakers. Topics such as “Chemistry” and “Physics” maintain a dependable relationship to one another in the landscape. This allows the user to get to know an area of the topic landscape, and learn to navigate through it. At the high level, the topic map changes slowly. At the lower, more detailed levels, the topics such as “Internet addressing schemes” and “Current Events” are more dynamic, and the topic map begins to look more like a web of connections.
- Display Interface
- Once the user has decided what he wants to learn, the display interface presents the information, as directed by the tutor. The display interface presents explanations to the user as a sequence of presentations, much like a linked sequence of Web pages. The display interface supports most of the familiar Web browsing functions, such as forward and back (a.k.a. next and previous) and hypertext links. It also supports the same range of media types as a conventional Web browser, including text, images, audio video, and various forms of interactivity. In fact, the display interface can also function as a Web browser, and it does so when a link takes the user to pages on the World Wide Web.
- Within the knowledge web, the display interface can provide better navigation than a Web browser. For instance, it has a “Where-am-I” button that, preferably in conjunction with the visualization interface, orients the user within the path or the topic space, and a “Return-to-Path” button that can bring a sidetracked user back to the main path.
- The display interface supports still other functions that cannot be supported on an ordinary Web browser because of the limitations of the World Wide Web. One of the most important is the “About this” button. For any item in the knowledge web, it shows the user who the author is, when it was written, who has certified it for what purposes, how often it has been used, etc. It also shows the annotations, made by the author or third parties, indicating related material, references, associated discussion groups and user feedback. Again this material is sorted and filtered according to the user's personal preferences.
- The display interface can also take advantage of annotation to provide more meaningful interaction with the user. For example there are buttons for the functions “Show me a picture,” “Give me an example,” or “Give me a different explanation.” The user can also ask for the definition of a word, in which case the display interface shows the user the definition that makes sense in the context of the particular topic at hand. The display interface also supports the ability to ask a question. Questions are matched against the list of frequently asked questions (FAQ's) associated with the explanation, and also against more general FAQ lists associated with the topics. The question can also be forwarded to the author of the content or posted on a discussion group.
- Annotation Interface
- The annotation interface allows the user to modify the knowledge base through the addition of annotations.
- The process of viewing content in the display interface causes some annotations, such as user statistics, to be updated automatically. Alternatively, a simple poll indicating whether a user liked an explanation may be conducted. This polling feedback may be generated by a voting scheme, using a simple pair of “thumbs up/thumbs down” in the annotation interface. Voting may be made anonymous by an encryption scheme that hides the identity of the user, while guaranteeing that a user can vote only once. Feedback statistics may also be recorded on other usage information, such as how frequently specific questions are asked.
- Users can also make annotations explicitly. For instance, a user can add a link to a related explanation or Web page. A link of this type contains descriptive information about how it is related. An annotation of this type must have an author who takes responsibility for it. Only the author of an annotation of this type can modify or delete it.
- Authoring Tool
- While the viewing tools can be used to add annotations to existing content, most new content is created using the authoring tool. The authoring tool can be used to convert an existing document, such as a textbook, article, or Web page, into an explanation for the knowledge web. It can also be used to create an instructional path with branches, quizzes, commentary, etc.
- Creating an Explanation
- A knowledge web explanation is distinguished from ordinary Web content by annotation and registration. Registration means that the page has been declared to exist as part of the knowledge web. This is accomplished by submitting it to a registration server. Before content can be registered, specific annotations may be required and various options specified. For an explanation, the required annotations include the author, creation date, URL identifying where it is stored, a list of the topics the explanation explains, and information specifying language and media type.
- To aid in the process of registration, the authoring tool provides a mechanism for helping to find the topics corresponding to an explanation. The author specifies a topic to which an explanation applies using the topic chooser. The authoring tool then presents the author with a list of specific topics, sorted according to how well they match the explanation. It may also present the author with a menu of subtopics that more exactly match the explanation. The author may choose one or more of the subtopics, and even narrow down the range to specific testable units of knowledge that are explained. Once the list becomes manageable the author can check off the appropriate topics. The author may also create new topics, as described below.
- There are also a number of annotations that may be specified at the time of registration. For example, the author may wish to restrict access to the information to users who have been cleared through a specified permissions authority. The author may want to support an associated discussion group, or may want to be an informer of questions that are asked by users. The author may link search keywords for locating the explanation or identify it as being relevant to certain topics. An author may also link an explanation as having content inappropriate to children. The authoring tool also provides an easy way for the author to link frequently asked questions and associated answers.
- The authoring tool registers the explanation by transmitting registration information to the registration server, and storing the content and annotations in a suitable location within the knowledge base. At the time of registration, the author may also choose to submit this explanation to various certification authorities for consideration. The authoring tool provides support for such submissions.
- Creating a Topic
- Normally the author of an explanation tries to link explanations to existing topics. For those instances when this is not possible, a new topic may be created. The authoring tool includes an interface for visualizing the knowledge base, preferably similar to that in the viewing tools, with a search engine and topic browser. To create a new topic, the author specifies its relation to one or more existing topics. The author specifies any subtopics within the topic and preferably identifies what knowledge is required for several levels of mastery, such as familiarity, understanding, and expertise. A short definition of the topic must also be specified, and optional search terms may also be included. Creation of testable units of knowledge (TUKs) is even simpler because TUKs are topics with no subtopics, and only one level of understanding. A TUK can often be stated in a single sentence. Creating a TUK can be as simple as highlighting a single sentence in the explanation, or the clicking of a button. When a TUK is created, the authoring tool tries to parse the sentence and creates a diagnostic test question. This suggested question can be accepted or rejected by the author.
- Once a topic is registered, it is included immediately in the topic database. Later, it may be merged with another topic. At any time, authorized individuals are able to edit the topic tree and collapse several topics into a single topic, or to split existing topics. The same rules apply to TUKs.
- When converting an existing document into a series of explanations of the knowledge web, the outline of the document often corresponds closely with the list of topics that are covered. This is particularly true of a textbook or a technical manual. The authoring tool includes a mechanism for mapping an existing outline onto a topic tree. It helps the author find existing topics that correspond to the outline items, and existing TUKs that correspond to the explanation. It also helps the author create any TUKs and topics that do not already exist. Because it is working within the context of a hierarchy, broad topics identified at the top of the hierarchy can help inform the search process for the more specific topics below.
- Creating a Path
- Just as explanations encode knowledge, paths encode information about how to learn that knowledge. A teacher, for instance, can create a path to guide a student by specifying a sequence of explanations, which may include documents, queries, and commentaries. The authoring tool helps the teacher specify each explanation in the path. It also allows branches to be added based on queries. A different branch of the path may be linked to each answer of the query. In addition the tool gives the teacher control over how the information is presented on pages. As an aid to the author, the authoring tool automatically produces a flow chart of the path, showing all links and branched and list of TUKs and topics that are explained and a list of prerequisites.
- The authoring tool provides a simple way to create a query, as a branch point in a path. The required information for a query is similar to an explanation. The same tool is used to create any query, whether it is a test question, or a question to determine the branch of a path. In addition the query must have a set of possible answers, one of which is specified as correct. The query may be tagged as a multiple-choice question, in which case the answers are presented to the user in randomized order as choices. If the question is not a multiple choice, a pattern matcher is used to pick one or more of the answers to be verified by the user. In this case, matching patterns may be explicitly associated with each of the answers. If such patterns are not specified, the answers themselves are used as patterns.
- Once the path has been created, the authoring tool can be used to register it.
- Backend System
- Generally, the backend system supports access to the structured knowledge within the knowledge base. The detailed architecture of the backend system is a central feature of the present invention, and is accordingly described below in greater detail.
- Backend System Architecture
- The backend system addresses the problem of how a very large amount of loosely structured data can be stored, organized, and shared among a large and diverse group of users. To better illustrate the backend system of the present invention, the system is described in detail with respect to the presently preferred embodiment of the invention, which provides a distributed, scalable architecture that implements a database using standard commercially available components.
- In this embodiment of the invention, the knowledge base is viewed as a database represented as a labeled graph that can be accessed and modified by thousands of users concurrently. In this approach, the knowledge within the knowledge base is viewed as data, and the meta-knowledge within the knowledge base is viewed as metadata. Entities of content, for example explanations, topics, paths, and links, are viewed as data objects. In the labeled graph view of the database, the nodes of the graph represent data objects, and the associated metadata are represented by links connecting those nodes. Finally, the various user tools provide a front end to the database.
- The data is stored on one or more data servers, and information about the data is maintained by one or more data registries. The servers and registries are preferably implemented as a distributed application that runs on servers connected by a network. Herein, the backend system is described in terms of a single data registry and a large number of data servers. Each of these servers may actually be implemented as a distributed application that caches information across multiple machines, but this aspect of the implementation is ignored for purposes of this discussion.
- Users may access the database through a network using the front ends. The front ends talk to a metaweb server which has access to the user's security profile, and access to the registry. With this information, the metaweb server obtains the location of the data objects requested by the user, retrieves them from data servers, and assembles them for manipulation by the front end.
- Data Objects
- All data and metadata in the system are represented as nodes and links, which may be classified into the following types of data objects.
- Data Nodes
- The system supports data generally in multiple formats, and in multiple data types. Examples of data types include text, image, sound, video, and structured data. Also, the system supports the storage of data in multiple locations, both online and offline, and provides identification information for the data, including location, data type, and data format, and other attributes as available.
- In the case of online data, support is provided for storing redundant copies of data at multiple online locations. In the case of offline data, robust identifiers such as an ISBN number, a Library of Congress classification, or document citation are provided wherever possible to enable the user to negotiate access to the element in some way.
- Concept Nodes
- Concept nodes are internal objects that are used to group or otherwise classify data objects. Examples of concept nodes include nodes representing categories, entities, and classes of data. Concept nodes are treated similarly to data objects in that links may originate or terminate in them. Users are able to search or navigate the database using concept nodes.
- Labeled Links
- The system supports labeled links of many different types. The types of links are centrally managed and limited to a known number of specific types. Examples of types of labeled links include links representing membership in categories, links associating data with specific objects, links tagging document metadata, and links representing user annotations. Provision is made for addition of labeled link types based on user needs and system growth.
- Links are directional. Given a data object it is always possible to determine all links that connect from the data object to another data object. Finding all links that connect to the data object may require search. Links may connect from data nodes or concept nodes to data nodes, concept nodes, to numbers or to text strings.
- Labeled Graph
- The relationships between the data objects may be represented by a labeled graph.
-
FIG. 2 shows a database represented as a labeled graph, where data objects 24 are connected by labeled links 22 to each other and toconcept nodes 20. For example, a concept node for aparticular category 21, contains twosubcategories text 25 andpicture 27. Anentity 23 comprises another concept that is linked via labeled links “refers-to,” “picture-of,” “associated-with,” and “describes” withWeb page 26,picture 27,audio clip 28, anddata 29. - System Components
-
FIG. 3 shows a sample configuration containing several principal components of the system. These components may be generalized or implemented in various forms and configurations. - Front Ends
- Users access the system through a network via applications, for example on workstations or PCs. These components are external to the system itself, although the system provides APIs that enable software running on these workstations to communicate with the system.
- Registry
- Each object in the system is registered in a registry. The registry keeps track of where the data and metadata associated with a data object are stored. Every data object has a unique signature and index, which is used to access the data object within the registry. Using the index, the system locates the data object in the registry and assembles components of the data, metadata, and other information from various data servers across the network.
- Servers
-
FIG. 3 shows a number of front ends, for example inworkgroups network 34, such as the Internet. Human users access the system through a front end application that accesses one ofmany metaweb servers 33 a, 33 b on the network. These metaweb servers then access the registry through local caches, updated from one ormore registry servers 38. The information in the registry is then used to identify data servers 36 a-36 d, which are accessed to obtain the data. - As shown in the figure, there are several types of servers provided in the backend system.
- Metaweb Servers
- Metaweb servers provide access to the system through APIs that may be used either by automated processes, or by front-end applications that are in turn used by humans. These servers access the contents of the registry and then obtain data from data servers to fulfill user requests.
- Data Servers
- A potentially very large number of data servers store the underlying data and metadata. The system supports implementations where this data is multiply redundant on several servers to ensure availability. Data servers operate independently and can be administered independently. They provide data access via standard protocols such as HTTPS, NFS, and SQL queries.
- Registry Servers
- The registry is stored in a number of registry servers, and is also cached by metaweb servers as required. Information about data, its components, associated metadata, and all related links is stored in a registry. As with the data servers, the registry may be distributed across a number of servers, for redundancy and for performance. Multiple registry servers can work together to form a distributed hierarchical cache of the directory, using a scheme similar to the Domain Name Server system of the Internet.
- The registry servers may facilitate the maintenance of various different registries.
- Pen name registry. An author must register content under a pen name, and this pen name must itself be registered with the registration server. A pen name may be a real name or an alias. Pen names are unique identifiers; the registration server does not register the same pen name to two different people. A pen name may be registered anonymously, that is without supplying a real name, in which case it is identified as such. A single author may have more than one pen name. Each pen name has an associated password, which is used to verify the identity of the author.
- Content registry. The content registry keeps a record of all the content on the knowledge web, including explanations, paths, and annotations. The registry keeps track of where information is, the author's pen name, and when the information was registered. The content registry also keeps track of some specific attributes including the topics linked to explanations, the usage and voting statistics associated with content. When an author registers content, he must affirm that he either owns the content, or has the right to publish it in the knowledge web. If there are access restrictions on content, the registration can specify a permission server that is empowered to negotiate access. The content registry not only registers content but it also provides access to the registration information. All content registration information is publicly available. The content registry is not responsible for vetting the content that is registered; it only keeps track of its existence.
- Topic registry. The topic registry keeps track of all topics, including TUKs. Unlike the content registry, the topic registry attempts to impose some order on the arrangement of topics, and for this reason it may be desirable to have multiple and competing topic registries. The central editorial problem of the topic registry is to keep the topic tree well organized and to keep the number of topics manageable. The topic registry registers any topic that meets certain minimal standards, but it may later decide to merge it with a similar topic. After such a merger, all links to either of the component topics are interpreted as linked to the merged topic.
- Storage Domains
- The system stores data and metadata in one or more storage domains connected to the system. These storage domains are typically disk based files systems representing a specific database. The system allows the data and metadata associated with an object to be stored as multiple components in multiple storage domains.
- The system also allows data and metadata components to be stored redundantly, either within a single storage domain, or across multiple storage domains.
- Access permissions are controlled by user and by storage domain. Each user has a set of access privileges associated with each storage domain. The system administrator of the storage controls which users are granted which privileges. Specific privileges may be granted to allow a uses read, add, modify, search, or delete data within that domain. A user may also have a privilege that allows a user to be aware that data exists with a storage domain, without necessarily being able to access that data.
- Security
- All user requests are subject to the user having the right authorization for the request. There are two places where this authorization is managed—the user's profile and the data server's rules. When the user logs on to the metaweb server, the users profile is accessed, and security and data access authorization information that is specific to that user is retrieved. Subsequently, when the user makes a data request, the metaweb server uses the authorization information to process it. In addition, access rules are also defined at the data server to specify the kind of users that have access to read or update the data on that server.
- Services and Applications Program Interfaces
- Accessing Data
- A user interacts with the system through a user interface application. A set of Applications Program Interfaces (APIs) describes protocols for accessing and modifying the database. Automated processes also interact with the system through this set of APIs. The actual preparation of such APIs is considered to be within the skill of those skilled in the art and, accordingly, they are not discussed in detail in this document.
- The objects potentially accessible to users include data nodes, labeled links, and concept nodes. Which objects are actually accessible to a particular user depends upon the user access privileges to the storage domains that hold the data associated with the object.
- When a user requests a node, the system fetches and assembles all data and metadata components associated with the node that are accessible to the user. This includes all objects linked from that node that are accessible to the user.
- Adding Data Objects
- The API allows authorized users to add data objects, concepts nodes and links to the system, specifying the storage locations of the related data and metadata.
- Updating Objects
- The API allows authorized users to update objects in the system by changing or adding metadata associated with that object. The data associated with a data node are not allowed to change. All updates to data create a new data object because the unique index is modified. The original data object is flagged as updated, with a link pointing to the new version.
- Updates to certain objects triggers an administrative process to provide for archival and verification services.
- The system provides metadata tags that are placed on objects, specifying those users that are to be notified whenever that object is updated. The system provides the notifications to users specified by those tags.
- Deleting Objects
- The API allows authorized users delete objects from the system by labeling them as deleted. The system allows the system administrator to establish policies for the actual deletion of objects that are so labeled.
- Requesting Notification
- Authorized users can request notification if a data object they are interested in is changed, deleted, or has metadata added to it. This is done by connecting a user change-notification link from the data object to the concept node representing the user.
- Searching
- The API allows search engines and automatic indexers to match objects with particular characteristics. These search engines are applications that use the system, but that are not built into the system architecture.
- Authentication
- The system provides a mechanism for notifying the user if the data associated with an accessed data node have changed since the object was created.
- Access Hiding in the Metaweb Server
- When accessing open-source material there is a potential security problem with repeated accesses to open data, in that the pattern of accesses from a single source may itself attract unwanted attention. The system supports two mechanisms for mitigating this problem.
- The first mechanism is the data caching mechanism, which can prevent multiple remote accesses to the data. The system is capable of keeping a cached copy of all documents examined, so that they do not need to be retrieved a second time for reexamination. The second method for hiding patterns of access is indirection through an anonymous relay. The system allows multiple access to the same data server to be masked by indirectly accessing the site through anonymous relays. Such techniques as data caching and anonymous relays are well known in the art and are not discussed herein.
- Administrative Functions
- Users. The system allows the system administrator to add new users to the system. Users are represented as concept nodes within the system with associated metadata represented as labeled links. These metadata include information about user access privileges, and information (such as an email address) about how to send notification to that user. Normally this information is stored within a storage domain only accusable to a system administrator.
- Storage Domains. The system allows the system administrator to add new storage domains to the system and to specify an administrator for such storage domains.
- Data Formats. The system allows the system administrator to add new data types, link types, and data storage formats to the system.
- Auditing Functions. The system architecture allows auditing functions to be provided within storage domains. The architecture allows, but does not include, auditing functions to monitor a user's or system administrator's patterns of activity within each within storage domain.
- The Registry
- Because the registry and the methods used to maintain the registry are a central feature of the invention, they are described in detail with reference to the presently preferred embodiment.
- The registry is a distributed, hierarchical directory of information describing nodes and links of the labeled graph. The registry maintains information about the location of each data object's representation and the representation of its associated metadata. In other words, the registry makes the connection between the elements of the graph and the bits that represent them. The registry keeps track of where the data that represents each object are stored. The registry is stored on one or more registry servers and part of it can also be cached by one or more metaweb servers.
-
- When a data object is registered in the system, its type and content are used to generate a fast, unique hash value, which is used as the aforementioned index into the registry. This hash value is used to identify and register the data object into the registry and is used as the index in the registry's hash table. In the preferred embodiment, the index hash is chosen from a 128-bit address space, and is assumed to be unique for each object. If the same object is encountered twice, then both instances generate the same hash index. Thus, identical objects of identical types are always treated by the system as a single object.
- Data Object Representation
-
FIG. 17 a is a block schematic diagram that shows the data object registry process. Each registereddata object 100 is represented as a hash table 69entry 101. Hash table entries identify a data object's location, representation, and any associated information annotating the data. Specifically, each hash table entry contains anindex hash 68, an optional cryptographically strong signature for verification and security, a data identifier, and a metadata identifier. -
FIG. 17 b denotes the structure of ahash table entry 101. Along with the index hash and signature, a hash table entry contains adata identifier 110 describing the data object's type, length, and one or more representations of the object'sdata metadata identifier 113, which includes an indication of the annotations of the data object. - Index Hash
- The index hash may be computed using a combination of one or more of the following methods.
- Method P is padding algorithm applied to all data to ensure it is of sufficient length.
- Methods H, I, and D may be applied to padded data, such as that generated by Method P, to generate the index hash used to identify a data object. Method H is a simple implementation, and Method I is an approach extended to take advantage of vector operations available on microprocessors. Method D employs a different approach capitalizing on the ability of a vector processor to perform dot products rapidly.
- Method P (Padding data) Given a piece of data, pad it to a length which is a multiple of B words.
- P1 [Initialize] Set I←(length of the data in bytes)
- P2 [I mod B==0?] Set I←I mod B. Finish if I==0. If not, add some data.
- P3 [Append number of remaining bytes] Append a byte containing the value I.
- P4 [I==0?] Decrement I. Finish if we are there.
- P5 [Append the data] Append bytes from the original data one at a time, decrementing I. If I reaches zero, finish. If we run out of bytes, loop to step P3.
- Note that in step P5, the data may be appended from the beginning of the input stream, which requires that the first B-2 bytes of data be stored. Alternatively, the data can be appended from the beginning of the last block of data read in.
- The following code implements the latter method.
class PaddedStream { public: PaddedStream(int pad); ˜PaddedStream( ); void setStream(int fd); int getChar(unsigned char *c); int getInt(unsigned int *i); int getLong(unsigned long *l); int fillBufferFromFile( ); private: int getBuff(unsigned char *b, int n); char *start; int padlen; int fd; int outcount, buffercount; }; PaddedStream::PaddedStream(int pad) { padlen=pad<<2; buffercount=0; outcount=0; start=(char *)calloc(padlen, sizeof(char)); } PaddedStream::˜PaddedStream( ) { free(start); } void PaddedStream::setStream(int infd) { outcount=0; fd=infd; fillBufferFromFile( ); } int PaddedStream::fillBufferFromFile( ) { int i, index; index=buffercount=read(fd,start,padlen); if(buffercount>0) while(index<padlen){ start[index]=(padlen−index) >> 2; index++; i=0; while(i<buffercount) { start[index++]=start[i++]; if(index==padlen) break; } } return buffercount; } int PaddedStream::getBuff(unsigned char *b, int n) { int i; for(i=0;i<n;i++){ if(outcount<padlen) { b[i]=start[outcount++]; } else if(fillBufferFromFile( )) { outcount=0; b[i]=start[outcount++]; } else break; } return i; } int PaddedStream::getChar(unsigned char *c) { return getBuff((unsigned char *)c, sizeof(char)); { int PaddedStream::getInt(unsigned int *i) { return getBuff((unsigned char *)i, sizeof(int)); } int PaddedStream::getLong(unsigned long *l) { return getBuff((unsigned char *)l, sizeof(long)); } -
FIG. 18 shows a flow chart detailing the preferred implementation of Method P according to the invention. In this technique a request is received for N words of data (1000). A test is performed to determine if there are N words of data in the buffer (1001). If there are, the data are returned (1002). If not, the system fills as much of the buffer as possible with data (1003). Thereafter, a test is performed to determine if the buffer is full (1004). If it is, the data are returned (1005). If not, a test is performed to determine if there are any data in the buffer (1006). If not, a null value is returned (1007). If there are data in the buffer, the byte value representing the number of words needed to fill the buffer is appended (1008) and a test is performed to determine if the buffer is full (1009). If the buffer is full, the data are returned (1010). If not, the data in the buffer are appended up to the first added byte (1011). Thereafter, a test is performed to determine if the buffer is full (1012). If the buffer is full, the data are returned (1013). If the buffer is not full, the process again appends the byte value representing the number of words needed to fill up the buffer and continues (1008). - Method H (Generating the identity) Given a padded data stream as above, produce a 128-bit identity. The data are stored in a byte array M [1 . . . m]. The array H [j] contains 32-bit values H [0 . . . n−1], where n≦16 and n has no factors in common with 33. The method uses one 64-bit register rA and one 128-bit register rB which contains the final value. Initially rB is set to a non-zero value H0. H0 may be, for example, the first 128 binary digits of π. rB is accessible as four 32-bit registers rB[[0 . . . 3]]. rA is accessible as two 32-bit registers rA[[0 . . . 1]].
H1 [initialize] Set i<- 1,j<- 0,rB<-H0. H2 [collect] Set rA[[0]]<-M[i...i + 3]. Set rA[[1]]<-0. Set i<- i + 4.H3 [multiply] Set rA<-rA × H[j] mod 264. Set j<-(j +1) mod n.H4 [middle] Set rA<-(rA >> 16)&0x00000000FFFFFFFF. H5 [multiply in] Set rA<-(rA × rB[[3]]) mod 264.H6 [middle] Set rA<-(rA >> 16)&0x00000000FFFFFFFF. H7 [subtract] Set rB[[2]]<-(rA − rB[[2]]) mod 232.H8 [rotate] Rotate rB left by 33 bits. H9 [loop] If i < m,loop to step H2. Otherwise, finish, rB contains the identity. - Method I (Generating the identity, parallel) Given a padded data stream, produce a 128-bit identity. The data are stored in a byte (8-bit chunks) array M[1 . . . m]. The array H[j]contains 32-bit values H[0 . . . n-1], where n≦16 and n has no factors in common with 33. The method uses two 128-bit registers rA and rB. rB contains the final value. Initially, rB is set to a non-zero value H0. H0 may be, for example, the first 128 binary digits of π. Both registers are accessible as four 32-bit registers rX[[0 . . . 3]]or as two 64-bit registers rX[0 . . . 1].
I1 [initialize] Set i <- 1,j <- 0. I2 [collect] Set rA[[0]] <- M[i ... i+3]and rA[[2]] <- M[i+4... i+7]. Set rA[[1]] <- 0 and rA[[3]] <- 0. Set i <- i+ 8.I3 [multiply] Set rA[1] <- rA[1] × H[j] mod 64 andrA[0] <- rA[0]× H[(j+1)mod n] mod 264. Set j <-(j+1)mod n.I4 [middle] Set rA<-(rA 16)&0× 00000000FFFFFFFF00000000FFFFFFFF. I5 [multiply in] Set rA[1]<-(rA[1] × rB[[3]]) mod 264 andrA[0] <- (rA[0] × rB[[1]] mod 264.I6 [middle] SetrA<-(rA>>16)&0× 00000000FFFFFFFF00000000FFFFFFFF. I7 [subtract] Set rB[[2]]<-(rA[[2]] − rB[[2]]) mod 32 andrB[[0]]<-(rA[[0]] − rB[[0]]) mod 232.I8 [rotate] Rotate rB left by 33 bits. I9 [loop] If i < m ,loop to step I2. Otherwise, finish, rB contains the identity. - The values H are selected to have the following properties:
- 1. Maximal average pairwise Hamming distance.
- 2. Equal number of 1 and 0 bits.
- For example, the set
may be used. This set has no pair of bit vectors with more than eight bits in common. Note that any permutation of rows or columns of this set also satisfies the requirements. It is also possible to permute the rows or columns independently of the first and last 16 bits. - Method D takes advantage of vector processor capabilities using long dot products. The data are assumed to be padded to a multiple of n (size of H) 32 bit values, as, for example, provided by Method P. The algorithms may be adjusted to accommodate a matrix H of different dimension.
- Method D (Generating the identity, dot products) Given a padded data stream, produce a 128-bit identity. The data are stored in a byte array M[1 . . . m]. An array H[j] as above is again used, with the additional restriction that n be even. The method uses three 128-bit registers rA, rB, and rC. rC contains the final value. All registers are accessible as four 32-bit registers rX[[0 . . . 3]]or as two 4-bit registers rX[0 . . . 1].
D1 [initialize] Set i <- 1,j <- 0, rB <- 0. D2 [collect] Set rA[[0]] <- M[i... i+3] and rA[[2]] <- M[i+4... i+7]. Set rA[[1]] <- 0 and rA[[3]] <- 0. Set i <- i+ 8.D3 [multiply] Set rA[1] <- rA[1] × H[j]mod264 and rA[0] <- rA[0]• H[(j +1)] mod 264. Set j <- (j +2).D4 [dot sum] Set rB[0] <-(rB[0]+rA[0])mod264 and rB[1]<- (rB[1]+ rA[1])mod264. D5 [dot loop] Set j <- j+ 2. If j < n−1,loop to step D2. Otherwise, set j <- 0and continue. D6 [dot shift] Set rB <- rB >> 16, shifting in zeros. D7 [add in] Set rC <- rC + rB D8 [rotate] Rotate rC right 33 bits. D9 [loop] If i < m ,loop to step D2. Otherwise, finish, rC contains the identity. - The following code may be used to implement Method D. The code is written as a 256 bit implementation. However, it may be trivially modified to achieve the 128 bit implementation described in Method D, or implementations based on other word sizes. This implementation uses the PaddedStream class defined in the Method P code above.
void dotprodident(int instream, int *id) { PaddedStream P(128); unsigned long long accum, outll, outlh, outhl, outhh; unsigned long long ilowlow, ilowhi, ihilow, ihihi; unsigned int a, b, i; P.setStream(instream); accum=0; ilowlow=0; ilowhi=0; ihilow=0; ihihi=0; //assumes that padded length is a multiple of 64 ints while(P.getInt(&a)>0){ P.getInt(&b); //build up the dot product of 16 values mod 2{circumflex over ( )}64 for(i=0;i<14;i+=2){ accum+=(unsigned long long)H[i]*(unsigned long long)a; accum+=(unsigned long long)H[i+1]*(unsigned long long)b; P.getInt(&a); P.getInt(&b); } accum+=(unsigned long long)H[i]*(unsigned long long)a; accum+=(unsigned long long)H[i+1]*(unsigned long long)b; //shift the dot product over and add it to the identity mod 2{circumflex over ( )}128 accum = accum >> 16; ilowlow+=accum; //in assmebly this is just a jump on overflow if(ilowlow< accum){ ilowhi++; if(ilowhi<1){ ihilow++; if(ihilow<1){ ihihi++; } } } //33 bit roll outll=(ilowlow&0×1FFFFFFFFll) << 31; outlh=(ilowhi&0×1FFFFFFFFll) << 31; outhl=(ihilow&0×1FFFFFFFFll) << 31; outhh=(ihihi&0×1FFFFFFFFll) << 31; ilowlow=(ilowlow >> 33) | outlh; ilowhi=(ilowhi >> 33) | outhl; ihilow=(ihilow >> 33) | outhh; ihihi=(ihihi >> 33) | outll; } id[0]=(ihihi&0×FFFFFFFF00000000ll)>>32; id[1]=(ihihi&0×FFFFFFFF); id[2]=(ihilow&0×FFFFFFFF00000000ll)>>32; id[3]=(ihilow&0×FFFFFFFF); id[4]=(ilowhi&0×FFFFFFFF00000000ll)>>32; id[5]=(ilowhi&0×FFFFFFFF); id[6]=(ilowlow&0×FFFFFFFF00000000ll)>>32; id[7]=(ilowlow&0×FFFFFFFF); }
Signature - Like the index hash, the signature of the data object is computed using the data object type and content. However, the signature is computed using a cryptographically strong technique.
- Data Identifier
- A data identifier contains a data object's type, length, and representation. Typically, data objects only have one representation, but data objects may have multiple alternate representations, for reason of redundancy, efficiency, or administrative convenience. These multiple representations may be stored in different places or even different formats, but they must describe exactly the same object.
- A data object's representation may contain one or more segments. Typically, data objects only have one segment, but it is possible to spread the representation of an object across multiple segments. For each segment, the data identifier contains information denoting how to find a string of bits that represent a part of the data object. For example, a segment may be specified by a path to a file and an offset and length of the string of bits representing the segment within the file. Alternatively, the segment may be specified by a query made to a database.
- The data object is constructed by obtaining the bits associated with each segment, concatenating them together sequentially, and interpreting them as specified by the type. Once all of the bits are collected, they may then be verified by comparing the index hash computed from the concatenated data and the type with the index hash stored in the hash table. In some circumstances, the constructed object may also be verified by checking the cryptographically strong signature of the object, again computed from the data and the type. All segments of the data object of at least one type must be accessible for the object to be accessible.
- Metadata Identifier
- A metadata identifier contains one or more components that indicate the type and location of one or more links annotating the data object. Each metadata component can specify multiple alternative locations where the metadata can be found. Each location has a type specifying the format of the metadata stored in that location. For example, the same metadata may be stored in human readable text format in one location, and in a compiled binary format in another location.
- The metadata for an object are constructed by obtaining the data from one location indicated by each component. The metadata are then collected and interpreted based on each location's type. It is not necessary that all components be accessible. Inaccessible components are ignored, so a user only sees the metadata associated with accessible components.
- The metadata identifier may be implemented using a fixed length handle, preferably of 128 to 196 bits, that can be interpreted either as a first-class-object “pointer,” or as a literal. At least one of the bits has to be used to distinguish which type it is. Literals are object that are small enough to store the data in the handle.
- handle=index-hash|literal-representation
- If the handle is an index=hash, it is generated from the hash code of the data/type pair. If the handle is a literal, some of the bits are used to say what type it is.
- literal-representation=literal-type literal-data
- literal=literal-type literal-data
- literal-type=flxnum|float|short-string|global-symbol|time|location|character| . . .
- The fixnum is a 64+ bit signed integer. The float is an IEEE floating point number. Short-string is any string of up to N ASCII characters. Links can then be represented by triples of handles. Typically, the label of a link is a global symbol, but it could also be another object.
- link=from-connection to-connection label-connection
- from-connection=handle
- to-connection=handle
- label-connection=handle
- First class objects are the only kind of objects that can have metadata attached to them. A first-class object can be a literal, but most literals are not first-class objects. A first-class object can also be a link, but most links are not first-class objects.
- object=first-class-object|literal
- first-class-object=small-first-class-object|large-first-class-object
- small-first-class-object=small-literal metadata-locator
- large-first-class-object=handle object-type data-locator signature metadata-locator
- large-object-type=data-type|big-literal-type
- object-type=Link|Binary|Text|JPEG|Postscript|RTF|Wave| . . .
- Large first-class objects, that is all first-class objects except literals, have a list of references to external places where segments of their data is stored. Most object have just one segment, but when there are more than one, the data is assembled by concatenating these segments together.
- data-locator={data-component-locator}
- Each segment can have pointer to an alternate component for the same data. The different metaweb servers may have the alternatives in a different order for performance reasons.
- data-segment-locator=resource-locator [alternate-data-segment-locator]
- alternate-data-segment-locator=data-segment-locator
- All first-class objects have a list of references to external places where components of their metadata are stored. The data are assembled by combining the metadata from these components.
- metadata-locator={metadata-component-locator}
- Each component can have pointer to an alternate component for the same metadata. Again, the different metaweb servers may have the alternatives in a different order for performance reasons. Each alternative indicates the format of that alternatives representation of the component.
- data-component-locator=metadata-data-format resource-locator [alternate-metadata-component-locator]
- alternate-metadata-component-locator=metadata-component-locator
- metadata-data-format=RDF|Complied| . . .
- A resource location is a URL. It may be a pointer to a file, or a database query. It specifies where and how the data is to be found.
- resource-locator=protocol domain specification-string
Descriptive Scenarios - The structure of the system described in the previous sections lends itself to a great variety of system features and functions. An illustration of some of these features and functions is provided in the following scenarios.
- Search/Query
- In
FIG. 4 , auser 10 initiates a query using any ofseveral search engines 40, which drive aquery engine 41. The query engine accesses meta-knowledge 42 about the universe of knowledge, which in this case is theWorld Wide Web 11. The meta-knowledge, or user annotations and document metadata regarding the content in the universe of knowledge, are stored in anannotations database 43 which resides on one of the content servers. The annotations are themselves content, and may in turn be linked to other content and topics in thesearch space 45. - User Profile
- A user of the knowledge web may have a user profile, created, for example, using a user
profile builder dialog 60 that usesvarious forms 62 to build auser profile 61. The user profile works in connection with the meta-knowledge to filter the knowledge, so that the user gets the information they want when they want it. The user profile is also used as a filter/sort mechanism 64 in connection with a result-setprocessing system 46 that allows the user to add annotations and link topics to the knowledge. - Result-Set Processing System
- The result-set
processing system 46 also interacts with the user when a user, providesfeedback 48 on topics andcontextual vocabularies 47. The feedback is applied in connection with the results provided to the user, and it is also used to build up the annotations database. - The result-set
processing system 46 provides features to manage the idea space of the knowledge andrelated topics 49. There is a topic subject 50 based upon classification andkeywords 51. There is also provision for determiningrequisite skills 52 with regard to the information produced by the query on the knowledge web which is supported by examples 53 andalternatives 54. Finally, there are a series of options provided 55, which may include for exampleother language versions 56 of the information, e.g. French 57, and other versions of theinformation 58, for example morerecent versions 59, although in some cases, the user may desire to review an earlier version of the information. - Annotations
- The user also interacts with an annotations tool set 63 which provides a
manual annotator 65 that allows annotation by the user or by the proprietor of the information. As well, the system provides anautomatic annotator 66. - Registration of Content
- In
FIG. 5 a piece of content, such as theGettysburg Address 70, is registered within the knowledge web and also exists in universe of available knowledge, i.e. theWorld Wide Web 11. In this particular scenario, the content is extracted from the web by a query 70 (numeric designator 1). The content is provided to a hash engine 68 (numeric designator 2) to create an index hash. The hashed version of the content is provided to aregistry server 38, (numeric designator 3) and is stored in aregistry database 69, (numeric designator 4). The registry server operates in conjunction with theannotation server 42 which accesses theannotation database 43 to add any user annotations provided at this time as well as billing activities if applicable. - Annotation System and Process
- In
FIG. 6 , the annotation system is shown in greater detail. Theannotation engine 42 operates to provide annotations to theannotation database 43 once the user has been verified. Such verification may be performed by any means, but in the exemplary embodiment of the invention, is provided when the user introduces a personal identification number (PIN) 71. Asecurity technique 72 is applied that allows the annotator to access the annotation database for reading and or writing as appropriate (numeric designator 1). Theuser 10 thereafter accesses the annotations, as in indicated inFIG. 6 (numeric designator 2). Thereafter, the user can annotate the annotations, for example to providefeedback 48 in the form of comments, reviews, ratings, and the like, (numeric designator 3). - Display of Content and Annotations
- When a
user 10 uses thesearch engine 40 to posit a query, for example, “Tell me about the Gettysburg Address,” thequery engine 41 in this example accesses both the universe of available information (numeric designator 5), and the metaweb server 38 (numeric designator 6). This results in the retrieval of knowledge from the universe of knowledge resulting from the user's query. Using the knowledge retrieved, an index hash is created, which is used to access the registry entry for that piece of knowledge in theregistry database 69. Thereafter, user annotations and document metadata relating to the knowledge may be retrieved from theannotations database 43, (numeric designator 7). Finally, auser profile 61 may be applied to process the annotations through the user profile so that the user receives only those annotations of interest (numeric designator 8). -
FIG. 7 provides a schematic diagram showing the annotation process and compositing of information for display to a user. InFIG. 7 , the universe ofavailable information 11, i.e. the World Wide Web, is used to access asource document 70, i.e. the Gettysburg address. The content is retrieved in this example by following a link as is known in the art. Thereafter, thecontent 74 is subjected to ahash procedure 68 as described above. The content information is thereafter provided to a frame buffer orcompositor 77. Such techniques as frame buffering and compositing are well known in the art and are not discussed herein. Additionally, theannotation engine 42 operates in conjunction with anoverlay generator 75 to provide the annotations to the display. Finally, any other information, such as user interface features 76 are provided to the frame buffer orcompositor 77. - The result is a displayed
image 78, which includesannotations 82, user interface features andtools 81, and the unmodified content from thesource 79. Theannotation overlay 80 is also provided. This aspect of the invention concerns the provision of content, for example copyrighted material, without modifying or in any way altering or copying the material. Rather, the Knowledge Web follows the link to the source information and merely displays the information on thedisplay 78. Theannotation overlay 80 superimposes the annotations onto or alongside the unmodified content. In this way, the invention allows the use of content annotations without copying the content to any persistent cache or storage medium. This obviates the likelihood that copyrights are violated. - Payments/Micropayments
-
FIG. 8 illustrates a compensation scheme by whichcontent 74 accessed from the universe ofknowledge 11, i.e. the World Wide Web, allowscontent owners 80 to receivecompensation 85 which may be maintained in anaccount 81 or otherwise provided to the content owner. In this aspect of the invention, a content flow is generated through the knowledge web (numeric designator 1). This content flow is provided to anaccounting system 84 in which the access by users to content through the Knowledge Web is combined withratings information 83 provided by the users through specialized user annotations, for example the usefulness of the information and/or a number of times the content has been accessed. As a result, fees paid byusers 82, as discussed in more detail below, are apportioned to thecontent owners 80 to produce acompensation flow 85 based on such access and usefulness. - The
users 10 are provided with various access plans 88, such as a subscription, for example based on a monthly fee; free access; or a value added access, for example where users pay to view annotations that are considered to be useful. A user accounting system 87 produces aroyalty flow 82 which is then used to determine compensation tocontent owners 80. The user accounting engine also extracts revenue for the Knowledge Web in the form of profits from theservice 86. - Personalized Knowledge Retrieval with User Profiles
-
FIG. 9 illustrates a query session in which auser 10 posits a query through thequery engine 41 to the universe ofavailable knowledge 11, i.e. the World Wide Web. This generatesvarious results 91 in the form ofcontent 74 andannotations 43. The content and annotations may be provided in various ways, for example based upon the users reading level, the type of information preferred, e.g. a picture, the topic space (as discussed below). The results are produced both from the content source and by applying theuser profile 61 to an annotation and filter engine performing matches 64. In this way, the annotations are matched to the user's reading level, preference types, and topics as mentioned above. The user profile is built with various types of information about the user and in this example is generated through the use of aform 62 as discussed above. The user profile includes such information as reading level, type or information preferred, user defined spaces, specific information preferred, topic spaces requested, and statements that the user accepts more advanced information in certain topics, for example auto-didacticism. Further, the profile may include anadvanced information space 90 in which the content in annotations are provided in this particular way. For example, the annotations may link the content to a tutorial to explain the content to the user, there may be links to pre-requisites before the content is readily understood, so that the user is properly prepared for reviewing the contents, or there may be links to definitions. Further, the annotation may be attached to additional content which provides context for the content being reviewed. This additional information may be generated as part of the query and search posited by the user, and the information may be provided based upon a weighting based upon the user profile and feedback provided by the user, as well as feedback provided by other users. - Other User Interface Elements
- As the user peruses the
results 91, the user may operate a “next”button 92. The “next” button is an important learning feature provided by the invention in which aforward indication 93 indicates to the Knowledge Web that the user is finding the information and the current path of the knowledge useful. In this case, the Knowledge Web proceeds along the path it is predicting as being useful to the user. There is also a “reverse”button 94. By selecting the “reverse” button, in this example, the user provides feedback that the path is not helpful and the Knowledge Web reformulates the basis for providing information. User operation of the forward and reverse buttons is used to build up the profile of the user, and also may be used to build further annotations and feedback based on the usefulness of information. - Graphical User Interface—Visualization
-
FIG. 10 is a schematic representation of various visualization aspects of the knowledge web. InFIG. 10 , a display is shown in which adialog box 200 provides auser 10 with various ways in which a search may be visualized. For example, the visualization may occur as a timeline; as a map (for example geographic map with regard to countries, or geological features, or an object map, for example with regard to the human body, where the map might point out the human beings lungs in connection with various human diseases); as a topic map (for example the topic of the law with regard to patents, and in particular clocks, specifically with regard to clocks made by the Long Now Foundation); as a hierarchical display; as a display of personal bookmarks, or as a combination of several or all of these forms of visualization. These particular views are provided by means of example and those skilled in the art will appreciate that other visualizations and views may also be provided. - After the user has selected a view, a display is presented to the user, as shown on
FIG. 10 (numeric designator 1). The user may then select a search space, as shown onFIG. 10 (numeric designator 2). The search space could be for example based on atime line 201, for example where the Long Now Foundation's clock is shown to operate along a timeline relative to he number of years between clock chimes. The user may also selectfurther views 202, as shown onFIG. 10 (numeric designator 3). For example, the user may choose amap view 203 that shows geographically where the Long Now clock is located. This view may be further enhanced by the user's selection of the map to produce an exploded view that shows more precisely or with better resolution the location of the desireditem 204. When the user selects this particular search space, the Knowledge Web presents additional information about this geographical location. For example, the particular part of California where the Long Now Foundation is located is also known for bristle cone pine trees. Thus, when a user selects this particular geographical location, related topics, such as bristle cone pine trees, are offered to the user. Finally, the user may choose to view the search results in another form, such as ahierarchy 205. - Security
-
FIG. 11 shows one security aspect of the invention. When a query is presented to the universe ofknowledge 11 by thequery engine 41, those results are produced 91 as discussed above. This is indicated onFIG. 11 by the numeric designators (1) and (2). There is a space of information that is presented to the user on thedisplay 78. If the user desires to view more, then a “more”feature 210 is selected by the user, as indicated onFIG. 11 by the numeric designator (3). The display then indicates, in this example, that the information is classified and requires a certain level of security clearance. In such cases, the user is provided with an opportunity to vet themselves to thesystem 212, for example by selecting a “get vetted” button as indicated onFIG. 11 by the numeric designator (4). In the presently preferred embodiment of the invention, a dialog 213 is presented which asks the user such questions as “Why is the information wanted?”, “Who is doing the asking?”, and “Provide proof.” The user answers are sent through a checking engine which compares the user information against anaccess database 215 to determine the users levels of authorization with regard to the information desired. The access database may include additional databases which are independently checked, such as a CIA database or an FBI database. The check engine then provides a response to theuser 218, approving or denying access. If the request is denied, then the refusal is indicated to the user, either directly on thedisplay 78 or via a return message, such as an email message. If approval is granted, then an authorization mechanism is invoked. In the presently preferred embodiment of the invention, an email link is provided to the user. When the user opens the email and clicks on the link contained therein, a one-time key 221 is provided that allows the user to have one-time access to the classified information. - User Operations Using the Result Set Processing System
-
FIG. 12 is a flow diagram showing the operation of the Knowledge Web in connection with the result-set processing system. When a search is commenced 300, access is made to the universe ofavailable information 11 andresults 302 are provided through the result-setprocessing system 304 which provides them to the user. One of the functions of the result-setprocessing system 312 is to allow the user to promote and demote information in terms of urgency and relevancy. Thus, whenresults 302—including search results, user-created documents, email messages, and other forms of knowledge—being placed in the result-setprocessing system 304, the movement of the information is affected by various factors which are discussed below. Such movement is shown in theFIG. 12 by the numeric designator (1). - User interaction with the result set moves information through the system. The user may take such actions as continuing through reading results, during which the user may mark the results, or rate them, may stop, or may present a new query. These actions are shown on
FIG. 12 by the numeric designator (2). The Knowledge Web moves the results through the result-set processing system based upon such weighting as is appropriate in view of the user's actions. This weighting is indicated onFIG. 12 by the numeric designator (3). The user actions in reading theresults 306 may result in additional searching 314 which produces yetadditional results 316. User actions may continue to produce additional searching and additional results with effects on the weighting of the information contained in the result set. Additionally, theuser profile 61 may be applied to the results and to the weighting, such that the promotion or demotion of information within the result set is a function of user profile, as well as user actions. As a result of this mechanism, information is either removed from the result set 310 or saved 320 and is ranked in the result set with regard to such features as urgency and relevancy in connection with the user query. This mechanism allows the user to be presented with information that is most relevant to the user's query. - Search Space
-
FIG. 13 illustrates the concept of search space in connection with the knowledge web. InFIG. 13 a, anentity 350 such as the results of a query return from the search space is investigated. The entity may be, for example, a corporation, or a country, or any other entity. Theuser 10 sets various values to be applied in the entity to discover information about the entity from the universe of available information. Thus, the user might tell the Knowledge Web to follow a certain number of links, or to follow specific links. For example, with regard to a corporation, the user may tell the Knowledge Web to follow subsidiaries of the corporation, follow general reporting of the corporation, or follow a particular product made by the corporation, e.g. kryptonite. The user settings are applied to information gathered about the entity from the universe of available information through the annotation andfiltering engine 64 discussed above, and the results are then provided to the user.FIG. 13 b shows a two-stage search in which information about the entity from the universe of available information is first applied to an N-dimensional search space. The results derived from thesearch space 351 are then applied to theuser profile 61 to produce the final results provided to the user. - Data Enrichment
-
FIG. 14 illustrates the process of enriching data through the addition of annotations. In this example, data are located within the universe of available information.Such data 400 for example could be related to oranges. A first user U1 providesannotations 410 with regard to this data, at some latter point a second user U2 posts a query with regard to the information 412. Additional annotations are then provided by further users through anultimate user Un 413. The information now exists as a collection of data about oranges andannotations 410 to that data: the information has been enriched by various annotations provided in response to the query of the user U2. At some late point in time user U2 may revisit the data 414. In this example, the interaction of various users with regard to a body of data has created a set of annotations that allows the user U2 to discover information about the data. In the case of oranges, for example, users may have provided various observations, such as “The orange companies have had good weather and expect a good crop”, or “The orange companies are ordering lots of boxes”. When a user posts a query, the results may help develop insights with regard to the information. For example, the query might be “Are the orange companies ordering new equipment?” In this case, the response might include knowledge about oranges as well as associated meta-knowledge, including the annotation, “The orange companies have ordered more machinery.” The user is able to make use of patterns of data and annotations, such as the information that the orange industry is doing very well and would be a good place to make an investment, based on the insight developed from the cumulated knowledge that the weather is good, the orange companies are ordering more boxes, and they are ordering more machinery. This information would not otherwise be available by a simple query with regard to oranges. However, the Knowledge Web allows users to add annotations to information in such a way that patterns and information otherwise not available through a standard search can be developed, thereby resulting in valuable insights. - Display Elements
-
FIG. 15 is an illustration of a user interface for the Knowledge Web as shown on adisplay 78. In this example, there is asearch field 500 which allows a user to enter searches and that also indicates the searcher's previous searches. There are also fields with regard to related documents 502 which allow a searcher to investigate related areas, and a field with regard to document notes 504. The user is also allowed to choose a search path, to view the document and other map locations, or to view an entire map of thedocuments 508 and to bookmark the information. The user is also provided with an opportunity to rate the information and thereby add his understanding of the value of the information. The actual search results are displayed to the user in themain pane 514 of the display. -
FIG. 16 shows a document fragment as presented to the user on adisplay 78 in context, as well as showing highlighted text from an activated comment. In the display the gray text is the part of the document that is not part of the document fragment. The document fragment text remains untouched. The highlighted text, also known as the focus, is associated with the comment mark at the end of the paragraph. In this case, the user has clicked on the comment marker, and the Knowledge Web client has associated text with it. When the user clicks on the comment marker, the full comment text and any follow-up comments are displayed in the side-bar. A further box is displayed when the mouse rolls over the comment marker. This shows the first few lines of the comment, giving the user enough information to decide if the comment is worth looking at in more detail. See for exampleFIG. 15 ,numeric designator 516. - Although the invention is described herein with reference to the preferred embodiment, one skilled in the art will readily appreciate that other applications may be substituted for those set forth herein without departing from the spirit and scope of the present invention. Accordingly, the invention should only be limited by the Claims included below.
Claims (69)
Priority Applications (5)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/474,155 US7502770B2 (en) | 2001-04-11 | 2002-04-10 | Knowledge web |
US10/737,618 US7765206B2 (en) | 2002-12-13 | 2003-12-15 | Meta-Web |
US12/823,017 US20100262518A1 (en) | 2002-12-13 | 2010-06-24 | Meta-web |
US12/969,567 US20110153599A1 (en) | 2002-12-13 | 2010-12-15 | Meta-Web |
US13/454,043 US20120296886A1 (en) | 2002-12-13 | 2012-04-23 | Meta-Web |
Applications Claiming Priority (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US28315801P | 2001-04-11 | 2001-04-11 | |
US34327301P | 2001-12-21 | 2001-12-21 | |
US10/474,155 US7502770B2 (en) | 2001-04-11 | 2002-04-10 | Knowledge web |
PCT/US2002/011434 WO2002084590A1 (en) | 2001-04-11 | 2002-04-10 | Knowledge web |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
PCT/US2002/011434 A-371-Of-International WO2002084590A1 (en) | 2001-04-11 | 2002-04-10 | Knowledge web |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/737,618 Continuation-In-Part US7765206B2 (en) | 2002-12-13 | 2003-12-15 | Meta-Web |
Publications (2)
Publication Number | Publication Date |
---|---|
US20050086188A1 true US20050086188A1 (en) | 2005-04-21 |
US7502770B2 US7502770B2 (en) | 2009-03-10 |
Family
ID=26961899
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/474,155 Expired - Lifetime US7502770B2 (en) | 2001-04-11 | 2002-04-10 | Knowledge web |
Country Status (2)
Country | Link |
---|---|
US (1) | US7502770B2 (en) |
WO (1) | WO2002084590A1 (en) |
Cited By (127)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20030074188A1 (en) * | 2001-10-12 | 2003-04-17 | Tohgo Murata | Method and apparatus for language instruction |
US20030093394A1 (en) * | 2001-11-14 | 2003-05-15 | Normand Frenette | Knowledge capture and retrieval method |
US20040039583A1 (en) * | 2002-06-18 | 2004-02-26 | Seiichiro Saito | Information space providing system and method |
US20040059705A1 (en) * | 2002-09-25 | 2004-03-25 | Wittke Edward R. | System for timely delivery of personalized aggregations of, including currently-generated, knowledge |
US20040103106A1 (en) * | 2002-09-27 | 2004-05-27 | Matsushita Electric Industrial Co., Ltd. | Data processing apparatus, data processing method, and data processing program |
US20040123242A1 (en) * | 2002-12-11 | 2004-06-24 | Mckibben Michael T. | Context instantiated application protocol |
US20040125137A1 (en) * | 2002-12-26 | 2004-07-01 | Stata Raymond P. | Systems and methods for selecting a date or range of dates |
US20040169678A1 (en) * | 2002-11-27 | 2004-09-02 | Oliver Huw Edward | Obtaining user feedback on displayed items |
US20050273460A1 (en) * | 2004-06-04 | 2005-12-08 | Vitalsource Technologies | System, method and computer program product for providing content based upon a representation of the same |
US20060069701A1 (en) * | 2004-09-29 | 2006-03-30 | O'rourke Charles S Iii | Shareability utility |
US20060099564A1 (en) * | 2004-11-09 | 2006-05-11 | Holger Bohle | Integrated external collaboration tools |
US20060117067A1 (en) * | 2004-11-30 | 2006-06-01 | Oculus Info Inc. | System and method for interactive visual representation of information content and relationships using layout and gestures |
US20060218491A1 (en) * | 2005-03-25 | 2006-09-28 | International Business Machines Corporation | System, method and program product for community review of documents |
US20070118542A1 (en) * | 2005-03-30 | 2007-05-24 | Peter Sweeney | System, Method and Computer Program for Faceted Classification Synthesis |
US20070136221A1 (en) * | 2005-03-30 | 2007-06-14 | Peter Sweeney | System, Method and Computer Program for Facet Analysis |
US20070150466A1 (en) * | 2004-12-29 | 2007-06-28 | Scott Brave | Method and apparatus for suggesting/disambiguation query terms based upon usage patterns observed |
US20070226187A1 (en) * | 2006-03-27 | 2007-09-27 | Microsoft Corporation | Context hierarchies for address searching |
US7308457B1 (en) * | 2004-01-23 | 2007-12-11 | Niku | Method and apparatus for providing customized filters to restrict datasets retrieved from a database |
US20080021925A1 (en) * | 2005-03-30 | 2008-01-24 | Peter Sweeney | Complex-adaptive system for providing a faceted classification |
US20080140666A1 (en) * | 2006-12-08 | 2008-06-12 | D Alton Harrison Patrick James | Method and System for Creating, Rating and Publishing Web-Based Content |
US20080175507A1 (en) * | 2007-01-18 | 2008-07-24 | Andrew Lookingbill | Synthetic image and video generation from ground truth data |
US20080183691A1 (en) * | 2007-01-30 | 2008-07-31 | International Business Machines Corporation | Method for a networked knowledge based document retrieval and ranking utilizing extracted document metadata and content |
US20090016615A1 (en) * | 2007-07-11 | 2009-01-15 | Ricoh Co., Ltd. | Invisible Junction Feature Recognition For Document Security or Annotation |
US20090019402A1 (en) * | 2007-07-11 | 2009-01-15 | Qifa Ke | User interface for three-dimensional navigation |
US20090015676A1 (en) * | 2007-07-11 | 2009-01-15 | Qifa Ke | Recognition and Tracking Using Invisible Junctions |
US20090016564A1 (en) * | 2007-07-11 | 2009-01-15 | Qifa Ke | Information Retrieval Using Invisible Junctions and Geometric Constraints |
US20090028520A1 (en) * | 2007-07-27 | 2009-01-29 | Cisco Technology, Inc. | Digital video recorder collaboration and similar media segment determination |
US20090063431A1 (en) * | 2006-07-31 | 2009-03-05 | Berna Erol | Monitoring and analyzing creation and usage of visual content |
US20090067726A1 (en) * | 2006-07-31 | 2009-03-12 | Berna Erol | Computation of a recognizability score (quality predictor) for image retrieval |
US20090070415A1 (en) * | 2006-07-31 | 2009-03-12 | Hidenobu Kishi | Architecture for mixed media reality retrieval of locations and registration of images |
US20090070302A1 (en) * | 2006-07-31 | 2009-03-12 | Jorge Moraleda | Mixed Media Reality Recognition Using Multiple Specialized Indexes |
US20090080800A1 (en) * | 2006-07-31 | 2009-03-26 | Jorge Moraleda | Multiple Index Mixed Media Reality Recognition Using Unequal Priority Indexes |
US20090100334A1 (en) * | 2006-07-31 | 2009-04-16 | Hull Jonathan J | Capturing Symbolic Information From Documents Upon Printing |
US20090100048A1 (en) * | 2006-07-31 | 2009-04-16 | Hull Jonathan J | Mixed Media Reality Retrieval of Differentially-weighted Links |
US7523090B1 (en) | 2004-01-23 | 2009-04-21 | Niku | Creating data charts using enhanced SQL statements |
US20100057664A1 (en) * | 2008-08-29 | 2010-03-04 | Peter Sweeney | Systems and methods for semantic concept definition and semantic concept relationship synthesis utilizing existing domain definitions |
US20100124738A1 (en) * | 2008-11-19 | 2010-05-20 | Yuan Yuan | User interface for interactive teaching, and method for operating the same |
US20100151431A1 (en) * | 2008-03-27 | 2010-06-17 | Knowledge Athletes, Inc. | Virtual learning |
US20100235307A1 (en) * | 2008-05-01 | 2010-09-16 | Peter Sweeney | Method, system, and computer program for user-driven dynamic generation of semantic networks and media synthesis |
US20100250867A1 (en) * | 2009-03-30 | 2010-09-30 | The Boeing Company | Computer architectures using shared storage |
US20100281254A1 (en) * | 2005-07-27 | 2010-11-04 | Fernando Incertis Carro | Systems and method for secure delivery of files to authorized recipients |
US7844565B2 (en) | 2005-03-30 | 2010-11-30 | Primal Fusion Inc. | System, method and computer program for using a multi-tiered knowledge representation model |
US7853886B2 (en) | 2007-02-27 | 2010-12-14 | Microsoft Corporation | Persistent spatial collaboration |
US20100325557A1 (en) * | 2009-06-17 | 2010-12-23 | Agostino Sibillo | Annotation of aggregated content, systems and methods |
US7860815B1 (en) * | 2006-07-12 | 2010-12-28 | Venkateswara Prasad Tangirala | Computer knowledge representation format, system, methods, and applications |
US20110060644A1 (en) * | 2009-09-08 | 2011-03-10 | Peter Sweeney | Synthesizing messaging using context provided by consumers |
US20110060645A1 (en) * | 2009-09-08 | 2011-03-10 | Peter Sweeney | Synthesizing messaging using context provided by consumers |
US20110060794A1 (en) * | 2009-09-08 | 2011-03-10 | Peter Sweeney | Synthesizing messaging using context provided by consumers |
US20110081892A1 (en) * | 2005-08-23 | 2011-04-07 | Ricoh Co., Ltd. | System and methods for use of voice mail and email in a mixed media environment |
US20110112824A1 (en) * | 2009-11-06 | 2011-05-12 | Craig Peter Sayers | Determining at least one category path for identifying input text |
US7991778B2 (en) | 2005-08-23 | 2011-08-02 | Ricoh Co., Ltd. | Triggering actions with captured input in a mixed media environment |
US20110189645A1 (en) * | 2010-01-29 | 2011-08-04 | Daniel Leininger | System and method of knowledge assessment |
US8005831B2 (en) | 2005-08-23 | 2011-08-23 | Ricoh Co., Ltd. | System and methods for creation and use of a mixed media environment with geographic location information |
US20110208743A1 (en) * | 2005-07-25 | 2011-08-25 | Splunk Inc. | Machine data web |
US20110208711A1 (en) * | 2003-07-02 | 2011-08-25 | Van Vleet Taylor N | Search annotation and personalization services |
US20110225550A1 (en) * | 2010-03-12 | 2011-09-15 | Creedon Michael S | System and method for displaying and navigating library information with a virtual library collections browser |
US20110257961A1 (en) * | 2010-04-14 | 2011-10-20 | Marc Tinkler | System and method for generating questions and multiple choice answers to adaptively aid in word comprehension |
US8073263B2 (en) | 2006-07-31 | 2011-12-06 | Ricoh Co., Ltd. | Multi-classifier selection and monitoring for MMR-based image recognition |
US8086038B2 (en) | 2007-07-11 | 2011-12-27 | Ricoh Co., Ltd. | Invisible junction features for patch recognition |
US8131665B1 (en) | 1994-09-02 | 2012-03-06 | Google Inc. | System and method for improved information retrieval |
US8156116B2 (en) | 2006-07-31 | 2012-04-10 | Ricoh Co., Ltd | Dynamic presentation of targeted information in a mixed media reality recognition system |
US8156427B2 (en) | 2005-08-23 | 2012-04-10 | Ricoh Co. Ltd. | User interface for mixed media reality |
US8156115B1 (en) | 2007-07-11 | 2012-04-10 | Ricoh Co. Ltd. | Document-based networking with mixed media reality |
US8176054B2 (en) | 2007-07-12 | 2012-05-08 | Ricoh Co. Ltd | Retrieving electronic documents by converting them to synthetic text |
US8195659B2 (en) | 2005-08-23 | 2012-06-05 | Ricoh Co. Ltd. | Integration and use of mixed media documents |
US20120233150A1 (en) * | 2011-03-11 | 2012-09-13 | Microsoft Corporation | Aggregating document annotations |
US8332401B2 (en) | 2004-10-01 | 2012-12-11 | Ricoh Co., Ltd | Method and system for position-based image matching in a mixed media environment |
US8335789B2 (en) | 2004-10-01 | 2012-12-18 | Ricoh Co., Ltd. | Method and system for document fingerprint matching in a mixed media environment |
US20130007670A1 (en) * | 2007-09-26 | 2013-01-03 | Aq Media, Inc. | Audio-visual navigation and communication dynamic memory architectures |
US8385660B2 (en) | 2009-06-24 | 2013-02-26 | Ricoh Co., Ltd. | Mixed media reality indexing and retrieval for repeated content |
US8385589B2 (en) | 2008-05-15 | 2013-02-26 | Berna Erol | Web-based content detection in images, extraction and recognition |
US20130054577A1 (en) * | 2011-08-23 | 2013-02-28 | Pierre Schwob | Knowledge matrix utilizing systematic contextual links |
US8510283B2 (en) | 2006-07-31 | 2013-08-13 | Ricoh Co., Ltd. | Automatic adaption of an image recognition system to image capture devices |
US8521737B2 (en) | 2004-10-01 | 2013-08-27 | Ricoh Co., Ltd. | Method and system for multi-tier image matching in a mixed media environment |
US20130275857A1 (en) * | 2006-06-15 | 2013-10-17 | Michael R. Norwood | System and method for facilitating posting of public and private user comments at a web site |
US8600989B2 (en) | 2004-10-01 | 2013-12-03 | Ricoh Co., Ltd. | Method and system for image matching in a mixed media environment |
US8676732B2 (en) | 2008-05-01 | 2014-03-18 | Primal Fusion Inc. | Methods and apparatus for providing information of interest to one or more users |
US20140156279A1 (en) * | 2012-11-30 | 2014-06-05 | Kabushiki Kaisha Toshiba | Content searching apparatus, content search method, and control program product |
US20140164700A1 (en) * | 2012-12-10 | 2014-06-12 | Facebook, Inc. | System and method of detecting cache inconsistencies |
US20140173285A1 (en) * | 2012-12-13 | 2014-06-19 | Xerox Corporation | Method for non-repudiation of ad-hoc workflows |
US8838591B2 (en) | 2005-08-23 | 2014-09-16 | Ricoh Co., Ltd. | Embedding hot spots in electronic documents |
US8849860B2 (en) | 2005-03-30 | 2014-09-30 | Primal Fusion Inc. | Systems and methods for applying statistical inference techniques to knowledge representations |
US8856108B2 (en) | 2006-07-31 | 2014-10-07 | Ricoh Co., Ltd. | Combining results of image retrieval processes |
WO2015006595A1 (en) * | 2013-07-10 | 2015-01-15 | Ifthisthen, Inc. | Systems and methods for knowledge management |
US8949287B2 (en) | 2005-08-23 | 2015-02-03 | Ricoh Co., Ltd. | Embedding hot spots in imaged documents |
US20150099254A1 (en) * | 2012-07-26 | 2015-04-09 | Sony Corporation | Information processing device, information processing method, and system |
US9020966B2 (en) | 2006-07-31 | 2015-04-28 | Ricoh Co., Ltd. | Client device for interacting with a mixed media reality recognition system |
US20150121246A1 (en) * | 2013-10-25 | 2015-04-30 | The Charles Stark Draper Laboratory, Inc. | Systems and methods for detecting user engagement in context using physiological and behavioral measurement |
US9058331B2 (en) | 2011-07-27 | 2015-06-16 | Ricoh Co., Ltd. | Generating a conversation in a social network based on visual search results |
US20150169782A1 (en) * | 2013-12-18 | 2015-06-18 | Dassault Systems Enovia Corp. | Component Obsolescence Registry |
US9063952B2 (en) | 2006-07-31 | 2015-06-23 | Ricoh Co., Ltd. | Mixed media reality recognition with image tracking |
US9063953B2 (en) | 2004-10-01 | 2015-06-23 | Ricoh Co., Ltd. | System and methods for creation and use of a mixed media environment |
US9092516B2 (en) | 2011-06-20 | 2015-07-28 | Primal Fusion Inc. | Identifying information of interest based on user preferences |
US9098462B1 (en) | 2010-09-14 | 2015-08-04 | The Boeing Company | Communications via shared memory |
US9104779B2 (en) | 2005-03-30 | 2015-08-11 | Primal Fusion Inc. | Systems and methods for analyzing and synthesizing complex knowledge representations |
US20150243176A1 (en) * | 2014-02-24 | 2015-08-27 | Mindojo Ltd. | Virtual course boundaries in adaptive e-learning datagraph structures |
US9171202B2 (en) | 2005-08-23 | 2015-10-27 | Ricoh Co., Ltd. | Data organization and access for mixed media document system |
US9177248B2 (en) | 2005-03-30 | 2015-11-03 | Primal Fusion Inc. | Knowledge representation systems and methods incorporating customization |
US9235806B2 (en) | 2010-06-22 | 2016-01-12 | Primal Fusion Inc. | Methods and devices for customizing knowledge representation systems |
US9235566B2 (en) | 2011-03-30 | 2016-01-12 | Thinkmap, Inc. | System and method for enhanced lookup in an online dictionary |
US9262520B2 (en) | 2009-11-10 | 2016-02-16 | Primal Fusion Inc. | System, method and computer program for creating and manipulating data structures using an interactive graphical interface |
US20160117941A1 (en) * | 2013-05-09 | 2016-04-28 | Gail Joyce MITCHELL | System and method for facilitating emergent learning in relation to knowledge content |
US20160148516A1 (en) * | 2014-11-20 | 2016-05-26 | Paul Senn | Sustained Learning Flow Process |
US9361365B2 (en) | 2008-05-01 | 2016-06-07 | Primal Fusion Inc. | Methods and apparatus for searching of content using semantic synthesis |
US9378203B2 (en) | 2008-05-01 | 2016-06-28 | Primal Fusion Inc. | Methods and apparatus for providing information of interest to one or more users |
US9384619B2 (en) | 2006-07-31 | 2016-07-05 | Ricoh Co., Ltd. | Searching media content for objects specified using identifiers |
US9405751B2 (en) | 2005-08-23 | 2016-08-02 | Ricoh Co., Ltd. | Database for mixed media document system |
US9530050B1 (en) | 2007-07-11 | 2016-12-27 | Ricoh Co., Ltd. | Document annotation sharing |
US20170147611A1 (en) * | 2013-08-29 | 2017-05-25 | International Business Machines Corporation | Detection and correction of copy errors in a distributed storage network |
US9703814B1 (en) * | 2013-10-15 | 2017-07-11 | Amazon Technologies, Inc. | Local key-value database synchronization |
US9712576B1 (en) | 2002-06-25 | 2017-07-18 | Susan (Zann) Gill | Crowd-sourced project and transaction management system for human- and device-adaptive requester-provider networks |
US9836765B2 (en) | 2014-05-19 | 2017-12-05 | Kibo Software, Inc. | System and method for context-aware recommendation through user activity change detection |
US20180061257A1 (en) * | 2016-08-31 | 2018-03-01 | James Mintz | User-Navigable tutorial system for presenting information derived from source documents of factual situations |
US9998509B2 (en) | 2011-10-13 | 2018-06-12 | Microsoft Technology Licensing, Llc | Application of comments in multiple application functionality content |
US10002325B2 (en) | 2005-03-30 | 2018-06-19 | Primal Fusion Inc. | Knowledge representation systems and methods incorporating inference rules |
US10114531B2 (en) * | 2011-10-13 | 2018-10-30 | Microsoft Technology Licensing, Llc | Application of multiple content items and functionality to an electronic content item |
US10248669B2 (en) | 2010-06-22 | 2019-04-02 | Primal Fusion Inc. | Methods and devices for customizing knowledge representation systems |
US10778712B2 (en) | 2015-08-01 | 2020-09-15 | Splunk Inc. | Displaying network security events and investigation activities across investigation timelines |
US10848510B2 (en) | 2015-08-01 | 2020-11-24 | Splunk Inc. | Selecting network security event investigation timelines in a workflow environment |
US10854101B1 (en) * | 2016-03-09 | 2020-12-01 | Naveed Iftikhar | Multi-media method for enhanced recall and retention of educational material |
US20200394930A1 (en) * | 2019-06-11 | 2020-12-17 | Arizona Board Of Regents On Behalf Of Arizona State University | Systems, methods, and apparatuses for implementing an individualized educational growth platform with user-aware feeds and user directed progression |
US10965773B2 (en) * | 2015-10-08 | 2021-03-30 | Pearson Education, Inc. | Adaptive system cache |
GB2526996B (en) * | 2013-03-01 | 2021-06-02 | Magnum Software Dev Ltd | Systems and methods for document and material management |
US11036745B2 (en) * | 2006-08-28 | 2021-06-15 | Katherine Lynn France-Prouvoste | Method, system and apparatus for dynamic registry of books and for modeling real-time market demand for books within academic sectors |
US11132111B2 (en) | 2015-08-01 | 2021-09-28 | Splunk Inc. | Assigning workflow network security investigation actions to investigation timelines |
US11294977B2 (en) | 2011-06-20 | 2022-04-05 | Primal Fusion Inc. | Techniques for presenting content to a user based on the user's preferences |
US11397899B2 (en) * | 2019-03-26 | 2022-07-26 | Microsoft Technology Licensing, Llc | Filtering content using generalized linear mixed models |
Families Citing this family (50)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8069175B2 (en) | 2002-04-10 | 2011-11-29 | Google Inc. | Delegating authority to evaluate content |
US11063766B2 (en) * | 2003-06-13 | 2021-07-13 | Ward Participations B.V. | Method and system for performing a transaction and for performing a verification of legitimate access to, or use of digital data |
JP5001846B2 (en) * | 2004-10-13 | 2012-08-15 | ブルームバーグ・ファイナンス・エル・ピー | System and method for managing news headlines |
US20060172267A1 (en) * | 2005-01-31 | 2006-08-03 | Microsoft Corporation | Input device training and automatic assignment |
US7904411B2 (en) * | 2005-02-04 | 2011-03-08 | Accenture Global Services Limited | Knowledge discovery tool relationship generation |
US8660977B2 (en) * | 2005-02-04 | 2014-02-25 | Accenture Global Services Limited | Knowledge discovery tool relationship generation |
US20060179026A1 (en) * | 2005-02-04 | 2006-08-10 | Bechtel Michael E | Knowledge discovery tool extraction and integration |
US20060287901A1 (en) * | 2005-06-15 | 2006-12-21 | Mcgill University | Electronic knowledge resources: users' momentary assessment of the cognitive-behavioral impact of information hits |
EP1764761A1 (en) * | 2005-09-16 | 2007-03-21 | Sap Ag | A system for handling data for describing one or more resources and a method of handling meta data for describing one or more resources |
EP1764760A1 (en) * | 2005-09-16 | 2007-03-21 | Sap Ag | An e-learning system and a method of e-learning |
US8874477B2 (en) | 2005-10-04 | 2014-10-28 | Steven Mark Hoffberg | Multifactorial optimization system and method |
US20080057481A1 (en) * | 2006-03-17 | 2008-03-06 | William Charles Schmitt | Common Format Learning Device |
US20080065649A1 (en) * | 2006-09-08 | 2008-03-13 | Barry Smiler | Method of associating independently-provided content with webpages |
US7765176B2 (en) * | 2006-11-13 | 2010-07-27 | Accenture Global Services Gmbh | Knowledge discovery system with user interactive analysis view for analyzing and generating relationships |
US20090098526A1 (en) * | 2007-10-13 | 2009-04-16 | Ahmad Amiri | Systems & Methods for Improving Academia |
US20090228279A1 (en) * | 2008-03-07 | 2009-09-10 | Tandem Readers, Llc | Recording of an audio performance of media in segments over a communication network |
US20110016427A1 (en) * | 2009-07-17 | 2011-01-20 | Andre Gene Douen | Systems, Methods and Articles For Managing Presentation of Information |
US8863031B2 (en) * | 2009-07-17 | 2014-10-14 | Andre Gene Douen | Systems, methods and articles for managing presentation of information |
US20110225171A1 (en) * | 2010-03-12 | 2011-09-15 | Microsoft Corporation | System and method for publishing synthesized data to facilitate providing information as a service |
US8341099B2 (en) | 2010-03-12 | 2012-12-25 | Microsoft Corporation | Semantics update and adaptive interfaces in connection with information as a service |
WO2012094718A1 (en) * | 2011-01-14 | 2012-07-19 | Andre Douen | Systems, methods and articles for managing presentation of information |
US9075830B2 (en) | 2011-03-24 | 2015-07-07 | Morphism Llc | Propagation through perdurance |
US9952659B2 (en) * | 2011-11-08 | 2018-04-24 | Microsoft Technology Licensing, Llc | Presentation of multiple sources of application guidance information |
US20130273515A1 (en) * | 2012-04-16 | 2013-10-17 | Instructional Technologies, Inc. | System, method and apparatus for generation of lessons |
US9471606B1 (en) | 2012-06-25 | 2016-10-18 | Google Inc. | Obtaining information to provide to users |
US9390174B2 (en) | 2012-08-08 | 2016-07-12 | Google Inc. | Search result ranking and presentation |
US9256682B1 (en) * | 2012-12-05 | 2016-02-09 | Google Inc. | Providing search results based on sorted properties |
US8949228B2 (en) | 2013-01-15 | 2015-02-03 | Google Inc. | Identification of new sources for topics |
US9224103B1 (en) | 2013-03-13 | 2015-12-29 | Google Inc. | Automatic annotation for training and evaluation of semantic analysis engines |
US10713261B2 (en) | 2013-03-13 | 2020-07-14 | Google Llc | Generating insightful connections between graph entities |
US9235626B2 (en) | 2013-03-13 | 2016-01-12 | Google Inc. | Automatic generation of snippets based on context and user interest |
US10810193B1 (en) | 2013-03-13 | 2020-10-20 | Google Llc | Querying a data graph using natural language queries |
US20140272825A1 (en) * | 2013-03-13 | 2014-09-18 | Pamela Chambers | Electronic education system and method |
US10055462B2 (en) | 2013-03-15 | 2018-08-21 | Google Llc | Providing search results using augmented search queries |
US10108700B2 (en) | 2013-03-15 | 2018-10-23 | Google Llc | Question answering to populate knowledge base |
US9164653B2 (en) | 2013-03-15 | 2015-10-20 | Inspace Technologies Limited | Three-dimensional space for navigating objects connected in hierarchy |
US9477759B2 (en) | 2013-03-15 | 2016-10-25 | Google Inc. | Question answering using entity references in unstructured data |
US9235653B2 (en) | 2013-06-26 | 2016-01-12 | Google Inc. | Discovering entity actions for an entity graph |
US9342622B2 (en) | 2013-06-27 | 2016-05-17 | Google Inc. | Two-phase construction of data graphs from disparate inputs |
US9785696B1 (en) | 2013-10-04 | 2017-10-10 | Google Inc. | Automatic discovery of new entities using graph reconciliation |
EP3055786A4 (en) | 2013-10-09 | 2017-05-17 | Google, Inc. | Automatic definition of entity collections |
US9798829B1 (en) | 2013-10-22 | 2017-10-24 | Google Inc. | Data graph interface |
US10002117B1 (en) | 2013-10-24 | 2018-06-19 | Google Llc | Translating annotation tags into suggested markup |
US20150147728A1 (en) * | 2013-10-25 | 2015-05-28 | Kadenze, Inc. | Self Organizing Maps (SOMS) for Organizing, Categorizing, Browsing and/or Grading Large Collections of Assignments for Massive Online Education Systems |
US9552375B2 (en) | 2013-12-20 | 2017-01-24 | Google Inc. | Geocoding of images based on search queries |
US9659056B1 (en) | 2013-12-30 | 2017-05-23 | Google Inc. | Providing an explanation of a missing fact estimate |
MY191940A (en) * | 2014-03-19 | 2022-07-19 | Wafina Sdn Bhd | Organized knowledge and service system (okss) |
CN106897346A (en) | 2016-08-04 | 2017-06-27 | 阿里巴巴集团控股有限公司 | The method and device of data processing |
CN107103802A (en) * | 2017-04-28 | 2017-08-29 | 南京网博计算机软件系统有限公司 | Real-time human eye discrimination system and method based on online education |
US20190189020A1 (en) * | 2017-12-14 | 2019-06-20 | Saranjeet Singh Punia | Arrangements for delivery of a tailored educational experience |
Citations (92)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US2895005A (en) * | 1954-09-30 | 1959-07-14 | Bell Telephone Labor Inc | Two-way television over telephone lines |
US3116365A (en) * | 1961-12-18 | 1963-12-31 | Bell Telephone Labor Inc | Alignment device |
US3992586A (en) * | 1975-11-13 | 1976-11-16 | Jaffe Acoustics, Inc. | Boardroom sound reinforcement system |
US4430473A (en) * | 1981-03-12 | 1984-02-07 | Union Carbide Corporation | Composites made from thermosetting compositions containing hemiformals of phenol |
US4688443A (en) * | 1985-06-07 | 1987-08-25 | Aerospatiale Societe Nationale Industrielle | Control device with two coupled control sticks |
US4881135A (en) * | 1988-09-23 | 1989-11-14 | Heilweil Jordan B | Concealed audio-video apparatus for recording conferences and meetings |
US4992940A (en) * | 1989-03-13 | 1991-02-12 | H-Renee, Incorporated | System and method for automated selection of equipment for purchase through input of user desired specifications |
US4996642A (en) * | 1987-10-01 | 1991-02-26 | Neonics, Inc. | System and method for recommending items |
US5073934A (en) * | 1990-10-24 | 1991-12-17 | International Business Machines Corporation | Method and apparatus for controlling the use of a public key, based on the level of import integrity for the key |
US5117258A (en) * | 1988-12-13 | 1992-05-26 | Kabushiki Kaisha Toshiba | Apparatus with copying fee based on size and number of sheets used |
US5292211A (en) * | 1992-03-27 | 1994-03-08 | Nippon Thompson Co., Ltd. | Drive apparatus and XY drive apparatus on which it is equipped |
US5404305A (en) * | 1993-11-17 | 1995-04-04 | United Technologies Corporation | Control of pilot control station authority for a dual piloted flight control system |
US5404295A (en) * | 1990-08-16 | 1995-04-04 | Katz; Boris | Method and apparatus for utilizing annotations to facilitate computer retrieval of database material |
US5426510A (en) * | 1992-06-05 | 1995-06-20 | Dolman Associates, Inc. | Audio-video system |
US5500671A (en) * | 1994-10-25 | 1996-03-19 | At&T Corp. | Video conference system and method of providing parallax correction and a sense of presence |
US5511122A (en) * | 1994-06-03 | 1996-04-23 | The United States Of America As Represented By The Secretary Of The Navy | Intermediate network authentication |
US5598209A (en) * | 1993-10-20 | 1997-01-28 | Videoconferencing Systems, Inc. | Method for automatically adjusting a video conferencing system camera |
US5597312A (en) * | 1994-05-04 | 1997-01-28 | U S West Technologies, Inc. | Intelligent tutoring method and system |
US5612734A (en) * | 1995-11-13 | 1997-03-18 | Bell Communications Research, Inc. | Eye contact apparatus employing a directionally transmissive layer for video conferencing |
US5678999A (en) * | 1994-08-08 | 1997-10-21 | Cicare; Augusto Ulderico | System for training helicopter pilots |
US5701400A (en) * | 1995-03-08 | 1997-12-23 | Amado; Carlos Armando | Method and apparatus for applying if-then-else rules to data sets in a relational data base and generating from the results of application of said rules a database of diagnostics linked to said data sets to aid executive analysis of financial data |
US5751809A (en) * | 1995-09-29 | 1998-05-12 | Intel Corporation | Apparatus and method for securing captured data transmitted between two sources |
US5751337A (en) * | 1994-09-19 | 1998-05-12 | Telesuite Corporation | Teleconferencing method and system for providing face-to-face, non-animated teleconference environment |
US5867799A (en) * | 1996-04-04 | 1999-02-02 | Lang; Andrew K. | Information system and method for filtering a massive flow of information entities to meet user information classification needs |
US5907619A (en) * | 1996-12-20 | 1999-05-25 | Intel Corporation | Secure compressed imaging |
US5940513A (en) * | 1995-08-25 | 1999-08-17 | Intel Corporation | Parameterized hash functions for access control |
US5956404A (en) * | 1996-09-30 | 1999-09-21 | Schneier; Bruce | Digital signature with auditing bits |
US5960411A (en) * | 1997-09-12 | 1999-09-28 | Amazon.Com, Inc. | Method and system for placing a purchase order via a communications network |
US5963245A (en) * | 1997-09-24 | 1999-10-05 | Mcdonald; Arcaster | Video telephone |
US5995624A (en) * | 1997-03-10 | 1999-11-30 | The Pacid Group | Bilateral authentication and information encryption token system and method |
US6003021A (en) * | 1998-12-22 | 1999-12-14 | Ac Properties B.V. | System, method and article of manufacture for a simulation system for goal based education |
US6009173A (en) * | 1997-01-31 | 1999-12-28 | Motorola, Inc. | Encryption and decryption method and apparatus |
US6070149A (en) * | 1998-07-02 | 2000-05-30 | Activepoint Ltd. | Virtual sales personnel |
US6076163A (en) * | 1997-10-20 | 2000-06-13 | Rsa Security Inc. | Secure user identification based on constrained polynomials |
US6076091A (en) * | 1997-12-09 | 2000-06-13 | International Business Machines Corporation | Method and system for providing a flexible and extensible database interactive on-line electronic catalog |
US6098065A (en) * | 1997-02-13 | 2000-08-01 | Nortel Networks Corporation | Associative search engine |
US6125445A (en) * | 1997-05-13 | 2000-09-26 | France Telecom | Public key identification process using two hash functions |
US6131162A (en) * | 1997-06-05 | 2000-10-10 | Hitachi Ltd. | Digital data authentication method |
US6171109B1 (en) * | 1997-06-18 | 2001-01-09 | Adin Research, Inc. | Method for generating a multi-strata model and an intellectual information processing device |
US6185558B1 (en) * | 1998-03-03 | 2001-02-06 | Amazon.Com, Inc. | Identifying the items most relevant to a current query based on items selected in connection with similar queries |
US6202062B1 (en) * | 1999-02-26 | 2001-03-13 | Ac Properties B.V. | System, method and article of manufacture for creating a filtered information summary based on multiple profiles of each single user |
US6202060B1 (en) * | 1996-10-29 | 2001-03-13 | Bao Q. Tran | Data management system |
US6226742B1 (en) * | 1998-04-20 | 2001-05-01 | Microsoft Corporation | Cryptographic technique that provides fast encryption and decryption and assures integrity of a ciphertext message through use of a message authentication code formed through cipher block chaining of the plaintext message |
US6230269B1 (en) * | 1998-03-04 | 2001-05-08 | Microsoft Corporation | Distributed authentication system and method |
US6283757B1 (en) * | 1998-10-09 | 2001-09-04 | Simulation Entertainment Group, Inc. | Full motion two seat interactive simulator |
US20010034837A1 (en) * | 1997-12-23 | 2001-10-25 | Arcot Systems, Inc. | Method and apparatus for secure distribution of authentication credentials to roaming users |
US6341960B1 (en) * | 1998-06-04 | 2002-01-29 | Universite De Montreal | Method and apparatus for distance learning based on networked cognitive agents |
US20020013780A1 (en) * | 2000-01-14 | 2002-01-31 | Daniel Brown | Information retrieval system |
US20020016840A1 (en) * | 2000-05-12 | 2002-02-07 | Shai Herzog | Applying recursive policy for scoping of administration of policy based networking |
US6347333B2 (en) * | 1999-01-15 | 2002-02-12 | Unext.Com Llc | Online virtual campus |
US20020023093A1 (en) * | 2000-03-15 | 2002-02-21 | Ziff Susan Janette | Content development management system and method |
US20020026583A1 (en) * | 2000-08-25 | 2002-02-28 | Harrison Keith Alexander | Document transmission techniques IV |
US20020049692A1 (en) * | 2000-10-20 | 2002-04-25 | Srinivas Venkatram | Systems and methods for development of an interactive document cluster network for knowledge |
US6401206B1 (en) * | 1997-03-06 | 2002-06-04 | Skylight Software, Inc. | Method and apparatus for binding electronic impressions made by digital identities to documents |
US20020069079A1 (en) * | 2001-07-13 | 2002-06-06 | Vega Lilly Mae | Method and system for facilitating service transactions |
US6405175B1 (en) * | 1999-07-27 | 2002-06-11 | David Way Ng | Shopping scouts web site for rewarding customer referrals on product and price information with rewards scaled by the number of shoppers using the information |
US20020073080A1 (en) * | 2000-01-14 | 2002-06-13 | Lipkin Daniel S. | Method and apparatus for an information server |
US20020072410A1 (en) * | 2000-10-27 | 2002-06-13 | Makoto Tanaka | Information processing system comprising a plurality of operation terminal devices and an information processing device |
US20020091836A1 (en) * | 2000-06-24 | 2002-07-11 | Moetteli John Brent | Browsing method for focusing research |
US6438691B1 (en) * | 1996-04-01 | 2002-08-20 | Hewlett-Packard Company | Transmitting messages over a network |
US20020126120A1 (en) * | 2000-12-22 | 2002-09-12 | Xerox Corporation | Electronic board system |
US6471586B1 (en) * | 1998-11-17 | 2002-10-29 | Namco, Ltd. | Game system and information storage medium |
US20020161603A1 (en) * | 2001-04-16 | 2002-10-31 | Tanagraphics, Inc. | Interactive publishing system providing content management |
US6477520B1 (en) * | 1999-02-22 | 2002-11-05 | Yatra Corporation | Adaptive travel purchasing optimization system |
US6507357B2 (en) * | 2000-11-29 | 2003-01-14 | Applied Minds, Inc. | Method and apparatus for maintaining eye contact in teleconferencing using reflected images |
US6535880B1 (en) * | 2000-05-09 | 2003-03-18 | Cnet Networks, Inc. | Automated on-line commerce method and apparatus utilizing a shopping server verifying product information on product selection |
US20030093790A1 (en) * | 2000-03-28 | 2003-05-15 | Logan James D. | Audio and video program recording, editing and playback systems using metadata |
US20030134675A1 (en) * | 2002-01-16 | 2003-07-17 | Mike Oberberger | Gaming system license management |
US20030152893A1 (en) * | 1999-12-27 | 2003-08-14 | Edgar Allen G. | Portable flight simulator |
US20030188180A1 (en) * | 2002-03-28 | 2003-10-02 | Overney Gregor T. | Secure file verification station for ensuring data integrity |
US20030187841A1 (en) * | 2002-03-28 | 2003-10-02 | International Business Machines Corporation | Method and structure for federated web service discovery search over multiple registries with result aggregation |
US6633981B1 (en) * | 1999-06-18 | 2003-10-14 | Intel Corporation | Electronic system and method for controlling access through user authentication |
US20030195834A1 (en) * | 2002-04-10 | 2003-10-16 | Hillis W. Daniel | Automated online purchasing system |
US6714234B1 (en) * | 2001-04-11 | 2004-03-30 | Applied Minds, Inc. | Maintaining eye-contact in teleconferencing using structured light |
US6732090B2 (en) * | 2001-08-13 | 2004-05-04 | Xerox Corporation | Meta-document management system with user definable personalities |
US20040097852A1 (en) * | 2000-11-30 | 2004-05-20 | Boyd William T. | Audio interactive sexual vibrator |
US6751773B2 (en) * | 2000-04-13 | 2004-06-15 | Matsushita Electric Industrial Co., Ltd. | Coding apparatus capable of high speed operation |
US6789126B1 (en) * | 2000-05-09 | 2004-09-07 | Sun Microsystems, Inc. | Addressing message gates in a distributed computing environment |
US20040205448A1 (en) * | 2001-08-13 | 2004-10-14 | Grefenstette Gregory T. | Meta-document management system with document identifiers |
US6807535B2 (en) * | 2000-03-08 | 2004-10-19 | Lnk Corporation | Intelligent tutoring system |
US6827578B2 (en) * | 2002-02-11 | 2004-12-07 | Sap Aktiengesellschaft | Navigating e-learning course materials |
US6856968B2 (en) * | 2000-12-27 | 2005-02-15 | General Electric Company | Interactive search process for product inquiries |
US20050060283A1 (en) * | 2003-09-17 | 2005-03-17 | Petras Gregory J. | Content management system for creating and maintaining a database of information utilizing user experiences |
US6884074B2 (en) * | 2002-02-11 | 2005-04-26 | Sap Aktiengesellschaft | Dynamic composition of restricted e-learning courses |
US20050107912A1 (en) * | 2002-02-11 | 2005-05-19 | C-M Glow, Llc. | Vending machine advertising apparatus and method |
US20050119053A1 (en) * | 2003-11-28 | 2005-06-02 | Nintendo Co., Ltd. | Game system playable by plurality of players, game apparatus and storage medium storing game program |
US6975833B2 (en) * | 2002-02-07 | 2005-12-13 | Sap Aktiengesellschaft | Structural elements for a collaborative e-learning system |
US6980974B2 (en) * | 2002-06-17 | 2005-12-27 | Nagoya Industrial Science Research Institute | Method for processing expression data of genes |
US6988198B1 (en) * | 1999-11-01 | 2006-01-17 | Entrust Limited | System and method for initializing operation for an information security operation |
US7000118B1 (en) * | 2000-08-08 | 2006-02-14 | Novell, Inc. | Asymmetric system and method for tamper-proof storage of an audit trial for a database |
US7100051B1 (en) * | 1999-04-29 | 2006-08-29 | Nds Limited | Public-key signature methods and systems |
US7263529B2 (en) * | 2003-08-29 | 2007-08-28 | Pitney Bowes Inc. | Method and system for creating and maintaining a database of user profiles and a related value rating database for information sources and for generating a list of information sources having a high estimated value |
Family Cites Families (14)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JPS62293352A (en) | 1986-06-11 | 1987-12-19 | Hitachi Ltd | Processing system for knowledge information |
US4847784A (en) | 1987-07-13 | 1989-07-11 | Teknowledge, Inc. | Knowledge based tutor |
JPH03116237A (en) * | 1989-09-29 | 1991-05-17 | Hitachi Ltd | Knowledge processing method |
US5133045A (en) | 1990-07-13 | 1992-07-21 | Integrated Systems, Inc. | Method for operating a real-time expert system in a graphical programming environment |
JPH04322649A (en) | 1991-04-22 | 1992-11-12 | Seidenkou:Kk | Hospital room monitoring apparatus |
CA2081041C (en) | 1992-01-03 | 1996-08-06 | Robert Louis Beecher | Camera field of view indicator |
JP3302188B2 (en) | 1994-09-13 | 2002-07-15 | 日本電信電話株式会社 | Telexistence-type video phone |
USH1728H (en) | 1994-10-28 | 1998-05-05 | The United States Of America As Represented By The Secretary Of The Navy | Simulator |
US6076070A (en) | 1998-07-23 | 2000-06-13 | Cendant Publishing, Inc. | Apparatus and method for on-line price comparison of competitor's goods and/or services over a computer network |
JP2000092046A (en) | 1998-09-11 | 2000-03-31 | Mitsubishi Electric Corp | Remote authentication system |
AU5777200A (en) | 1999-06-30 | 2001-01-31 | Catalog City, Inc. | Multi-vendor internet commerce system for e-commerce applications and methods therefor |
US6292211B1 (en) | 1999-10-16 | 2001-09-18 | Martin Rangel Pena | Computer-aided telecommunication system and method |
US6311194B1 (en) | 2000-03-15 | 2001-10-30 | Taalee, Inc. | System and method for creating a semantic web and its applications in browsing, searching, profiling, personalization and advertising |
US6959326B1 (en) | 2000-08-24 | 2005-10-25 | International Business Machines Corporation | Method, system, and program for gathering indexable metadata on content at a data repository |
-
2002
- 2002-04-10 WO PCT/US2002/011434 patent/WO2002084590A1/en not_active Application Discontinuation
- 2002-04-10 US US10/474,155 patent/US7502770B2/en not_active Expired - Lifetime
Patent Citations (95)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US2895005A (en) * | 1954-09-30 | 1959-07-14 | Bell Telephone Labor Inc | Two-way television over telephone lines |
US3116365A (en) * | 1961-12-18 | 1963-12-31 | Bell Telephone Labor Inc | Alignment device |
US3992586A (en) * | 1975-11-13 | 1976-11-16 | Jaffe Acoustics, Inc. | Boardroom sound reinforcement system |
US4430473A (en) * | 1981-03-12 | 1984-02-07 | Union Carbide Corporation | Composites made from thermosetting compositions containing hemiformals of phenol |
US4688443A (en) * | 1985-06-07 | 1987-08-25 | Aerospatiale Societe Nationale Industrielle | Control device with two coupled control sticks |
US4996642A (en) * | 1987-10-01 | 1991-02-26 | Neonics, Inc. | System and method for recommending items |
US4881135A (en) * | 1988-09-23 | 1989-11-14 | Heilweil Jordan B | Concealed audio-video apparatus for recording conferences and meetings |
US5117258A (en) * | 1988-12-13 | 1992-05-26 | Kabushiki Kaisha Toshiba | Apparatus with copying fee based on size and number of sheets used |
US4992940A (en) * | 1989-03-13 | 1991-02-12 | H-Renee, Incorporated | System and method for automated selection of equipment for purchase through input of user desired specifications |
US5404295A (en) * | 1990-08-16 | 1995-04-04 | Katz; Boris | Method and apparatus for utilizing annotations to facilitate computer retrieval of database material |
US5073934A (en) * | 1990-10-24 | 1991-12-17 | International Business Machines Corporation | Method and apparatus for controlling the use of a public key, based on the level of import integrity for the key |
US5292211A (en) * | 1992-03-27 | 1994-03-08 | Nippon Thompson Co., Ltd. | Drive apparatus and XY drive apparatus on which it is equipped |
US5426510A (en) * | 1992-06-05 | 1995-06-20 | Dolman Associates, Inc. | Audio-video system |
US5598209A (en) * | 1993-10-20 | 1997-01-28 | Videoconferencing Systems, Inc. | Method for automatically adjusting a video conferencing system camera |
US5404305A (en) * | 1993-11-17 | 1995-04-04 | United Technologies Corporation | Control of pilot control station authority for a dual piloted flight control system |
US5597312A (en) * | 1994-05-04 | 1997-01-28 | U S West Technologies, Inc. | Intelligent tutoring method and system |
US5511122A (en) * | 1994-06-03 | 1996-04-23 | The United States Of America As Represented By The Secretary Of The Navy | Intermediate network authentication |
US5678999A (en) * | 1994-08-08 | 1997-10-21 | Cicare; Augusto Ulderico | System for training helicopter pilots |
US5751337A (en) * | 1994-09-19 | 1998-05-12 | Telesuite Corporation | Teleconferencing method and system for providing face-to-face, non-animated teleconference environment |
US5500671A (en) * | 1994-10-25 | 1996-03-19 | At&T Corp. | Video conference system and method of providing parallax correction and a sense of presence |
US5701400A (en) * | 1995-03-08 | 1997-12-23 | Amado; Carlos Armando | Method and apparatus for applying if-then-else rules to data sets in a relational data base and generating from the results of application of said rules a database of diagnostics linked to said data sets to aid executive analysis of financial data |
US5940513A (en) * | 1995-08-25 | 1999-08-17 | Intel Corporation | Parameterized hash functions for access control |
US5751809A (en) * | 1995-09-29 | 1998-05-12 | Intel Corporation | Apparatus and method for securing captured data transmitted between two sources |
US5612734A (en) * | 1995-11-13 | 1997-03-18 | Bell Communications Research, Inc. | Eye contact apparatus employing a directionally transmissive layer for video conferencing |
US6438691B1 (en) * | 1996-04-01 | 2002-08-20 | Hewlett-Packard Company | Transmitting messages over a network |
US5867799A (en) * | 1996-04-04 | 1999-02-02 | Lang; Andrew K. | Information system and method for filtering a massive flow of information entities to meet user information classification needs |
US5956404A (en) * | 1996-09-30 | 1999-09-21 | Schneier; Bruce | Digital signature with auditing bits |
US6202060B1 (en) * | 1996-10-29 | 2001-03-13 | Bao Q. Tran | Data management system |
US5907619A (en) * | 1996-12-20 | 1999-05-25 | Intel Corporation | Secure compressed imaging |
US6009173A (en) * | 1997-01-31 | 1999-12-28 | Motorola, Inc. | Encryption and decryption method and apparatus |
US6098065A (en) * | 1997-02-13 | 2000-08-01 | Nortel Networks Corporation | Associative search engine |
US6401206B1 (en) * | 1997-03-06 | 2002-06-04 | Skylight Software, Inc. | Method and apparatus for binding electronic impressions made by digital identities to documents |
US5995624A (en) * | 1997-03-10 | 1999-11-30 | The Pacid Group | Bilateral authentication and information encryption token system and method |
US6125445A (en) * | 1997-05-13 | 2000-09-26 | France Telecom | Public key identification process using two hash functions |
US6499105B1 (en) * | 1997-06-05 | 2002-12-24 | Hitachi, Ltd. | Digital data authentication method |
US6131162A (en) * | 1997-06-05 | 2000-10-10 | Hitachi Ltd. | Digital data authentication method |
US20020095579A1 (en) * | 1997-06-05 | 2002-07-18 | Hiroshi Yoshiura | Digital data authentication method |
US6171109B1 (en) * | 1997-06-18 | 2001-01-09 | Adin Research, Inc. | Method for generating a multi-strata model and an intellectual information processing device |
US5960411A (en) * | 1997-09-12 | 1999-09-28 | Amazon.Com, Inc. | Method and system for placing a purchase order via a communications network |
US5963245A (en) * | 1997-09-24 | 1999-10-05 | Mcdonald; Arcaster | Video telephone |
US6076163A (en) * | 1997-10-20 | 2000-06-13 | Rsa Security Inc. | Secure user identification based on constrained polynomials |
US6076091A (en) * | 1997-12-09 | 2000-06-13 | International Business Machines Corporation | Method and system for providing a flexible and extensible database interactive on-line electronic catalog |
US20010034837A1 (en) * | 1997-12-23 | 2001-10-25 | Arcot Systems, Inc. | Method and apparatus for secure distribution of authentication credentials to roaming users |
US6185558B1 (en) * | 1998-03-03 | 2001-02-06 | Amazon.Com, Inc. | Identifying the items most relevant to a current query based on items selected in connection with similar queries |
US6230269B1 (en) * | 1998-03-04 | 2001-05-08 | Microsoft Corporation | Distributed authentication system and method |
US6226742B1 (en) * | 1998-04-20 | 2001-05-01 | Microsoft Corporation | Cryptographic technique that provides fast encryption and decryption and assures integrity of a ciphertext message through use of a message authentication code formed through cipher block chaining of the plaintext message |
US6341960B1 (en) * | 1998-06-04 | 2002-01-29 | Universite De Montreal | Method and apparatus for distance learning based on networked cognitive agents |
US6070149A (en) * | 1998-07-02 | 2000-05-30 | Activepoint Ltd. | Virtual sales personnel |
US6283757B1 (en) * | 1998-10-09 | 2001-09-04 | Simulation Entertainment Group, Inc. | Full motion two seat interactive simulator |
US6471586B1 (en) * | 1998-11-17 | 2002-10-29 | Namco, Ltd. | Game system and information storage medium |
US6003021A (en) * | 1998-12-22 | 1999-12-14 | Ac Properties B.V. | System, method and article of manufacture for a simulation system for goal based education |
US6347333B2 (en) * | 1999-01-15 | 2002-02-12 | Unext.Com Llc | Online virtual campus |
US6477520B1 (en) * | 1999-02-22 | 2002-11-05 | Yatra Corporation | Adaptive travel purchasing optimization system |
US6202062B1 (en) * | 1999-02-26 | 2001-03-13 | Ac Properties B.V. | System, method and article of manufacture for creating a filtered information summary based on multiple profiles of each single user |
US7100051B1 (en) * | 1999-04-29 | 2006-08-29 | Nds Limited | Public-key signature methods and systems |
US6633981B1 (en) * | 1999-06-18 | 2003-10-14 | Intel Corporation | Electronic system and method for controlling access through user authentication |
US6405175B1 (en) * | 1999-07-27 | 2002-06-11 | David Way Ng | Shopping scouts web site for rewarding customer referrals on product and price information with rewards scaled by the number of shoppers using the information |
US6988198B1 (en) * | 1999-11-01 | 2006-01-17 | Entrust Limited | System and method for initializing operation for an information security operation |
US20030152893A1 (en) * | 1999-12-27 | 2003-08-14 | Edgar Allen G. | Portable flight simulator |
US20020073080A1 (en) * | 2000-01-14 | 2002-06-13 | Lipkin Daniel S. | Method and apparatus for an information server |
US20020013780A1 (en) * | 2000-01-14 | 2002-01-31 | Daniel Brown | Information retrieval system |
US6807535B2 (en) * | 2000-03-08 | 2004-10-19 | Lnk Corporation | Intelligent tutoring system |
US20020023093A1 (en) * | 2000-03-15 | 2002-02-21 | Ziff Susan Janette | Content development management system and method |
US20030093790A1 (en) * | 2000-03-28 | 2003-05-15 | Logan James D. | Audio and video program recording, editing and playback systems using metadata |
US6751773B2 (en) * | 2000-04-13 | 2004-06-15 | Matsushita Electric Industrial Co., Ltd. | Coding apparatus capable of high speed operation |
US6789126B1 (en) * | 2000-05-09 | 2004-09-07 | Sun Microsystems, Inc. | Addressing message gates in a distributed computing environment |
US6535880B1 (en) * | 2000-05-09 | 2003-03-18 | Cnet Networks, Inc. | Automated on-line commerce method and apparatus utilizing a shopping server verifying product information on product selection |
US20020016840A1 (en) * | 2000-05-12 | 2002-02-07 | Shai Herzog | Applying recursive policy for scoping of administration of policy based networking |
US20020091836A1 (en) * | 2000-06-24 | 2002-07-11 | Moetteli John Brent | Browsing method for focusing research |
US7000118B1 (en) * | 2000-08-08 | 2006-02-14 | Novell, Inc. | Asymmetric system and method for tamper-proof storage of an audit trial for a database |
US20020026583A1 (en) * | 2000-08-25 | 2002-02-28 | Harrison Keith Alexander | Document transmission techniques IV |
US20020049692A1 (en) * | 2000-10-20 | 2002-04-25 | Srinivas Venkatram | Systems and methods for development of an interactive document cluster network for knowledge |
US20050245316A1 (en) * | 2000-10-27 | 2005-11-03 | Sony Computer Entertainment Inc. | Information processing system comprising a plurality of operation terminal devices and an information processing device |
US20020072410A1 (en) * | 2000-10-27 | 2002-06-13 | Makoto Tanaka | Information processing system comprising a plurality of operation terminal devices and an information processing device |
US6507357B2 (en) * | 2000-11-29 | 2003-01-14 | Applied Minds, Inc. | Method and apparatus for maintaining eye contact in teleconferencing using reflected images |
US20040097852A1 (en) * | 2000-11-30 | 2004-05-20 | Boyd William T. | Audio interactive sexual vibrator |
US20020126120A1 (en) * | 2000-12-22 | 2002-09-12 | Xerox Corporation | Electronic board system |
US6856968B2 (en) * | 2000-12-27 | 2005-02-15 | General Electric Company | Interactive search process for product inquiries |
US6714234B1 (en) * | 2001-04-11 | 2004-03-30 | Applied Minds, Inc. | Maintaining eye-contact in teleconferencing using structured light |
US20020161603A1 (en) * | 2001-04-16 | 2002-10-31 | Tanagraphics, Inc. | Interactive publishing system providing content management |
US20020069079A1 (en) * | 2001-07-13 | 2002-06-06 | Vega Lilly Mae | Method and system for facilitating service transactions |
US6732090B2 (en) * | 2001-08-13 | 2004-05-04 | Xerox Corporation | Meta-document management system with user definable personalities |
US20040205448A1 (en) * | 2001-08-13 | 2004-10-14 | Grefenstette Gregory T. | Meta-document management system with document identifiers |
US20030134675A1 (en) * | 2002-01-16 | 2003-07-17 | Mike Oberberger | Gaming system license management |
US6975833B2 (en) * | 2002-02-07 | 2005-12-13 | Sap Aktiengesellschaft | Structural elements for a collaborative e-learning system |
US20050107912A1 (en) * | 2002-02-11 | 2005-05-19 | C-M Glow, Llc. | Vending machine advertising apparatus and method |
US6884074B2 (en) * | 2002-02-11 | 2005-04-26 | Sap Aktiengesellschaft | Dynamic composition of restricted e-learning courses |
US6827578B2 (en) * | 2002-02-11 | 2004-12-07 | Sap Aktiengesellschaft | Navigating e-learning course materials |
US20030188180A1 (en) * | 2002-03-28 | 2003-10-02 | Overney Gregor T. | Secure file verification station for ensuring data integrity |
US20030187841A1 (en) * | 2002-03-28 | 2003-10-02 | International Business Machines Corporation | Method and structure for federated web service discovery search over multiple registries with result aggregation |
US20030195834A1 (en) * | 2002-04-10 | 2003-10-16 | Hillis W. Daniel | Automated online purchasing system |
US6980974B2 (en) * | 2002-06-17 | 2005-12-27 | Nagoya Industrial Science Research Institute | Method for processing expression data of genes |
US7263529B2 (en) * | 2003-08-29 | 2007-08-28 | Pitney Bowes Inc. | Method and system for creating and maintaining a database of user profiles and a related value rating database for information sources and for generating a list of information sources having a high estimated value |
US20050060283A1 (en) * | 2003-09-17 | 2005-03-17 | Petras Gregory J. | Content management system for creating and maintaining a database of information utilizing user experiences |
US20050119053A1 (en) * | 2003-11-28 | 2005-06-02 | Nintendo Co., Ltd. | Game system playable by plurality of players, game apparatus and storage medium storing game program |
Cited By (234)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8131665B1 (en) | 1994-09-02 | 2012-03-06 | Google Inc. | System and method for improved information retrieval |
US20030074188A1 (en) * | 2001-10-12 | 2003-04-17 | Tohgo Murata | Method and apparatus for language instruction |
US20030093394A1 (en) * | 2001-11-14 | 2003-05-15 | Normand Frenette | Knowledge capture and retrieval method |
US20040039583A1 (en) * | 2002-06-18 | 2004-02-26 | Seiichiro Saito | Information space providing system and method |
US9712576B1 (en) | 2002-06-25 | 2017-07-18 | Susan (Zann) Gill | Crowd-sourced project and transaction management system for human- and device-adaptive requester-provider networks |
US20040059705A1 (en) * | 2002-09-25 | 2004-03-25 | Wittke Edward R. | System for timely delivery of personalized aggregations of, including currently-generated, knowledge |
US7668885B2 (en) * | 2002-09-25 | 2010-02-23 | MindAgent, LLC | System for timely delivery of personalized aggregations of, including currently-generated, knowledge |
US20040103106A1 (en) * | 2002-09-27 | 2004-05-27 | Matsushita Electric Industrial Co., Ltd. | Data processing apparatus, data processing method, and data processing program |
US7149758B2 (en) * | 2002-09-27 | 2006-12-12 | Matsushita Electric Industrial Co., Ltd. | Data processing apparatus, data processing method, and data processing program |
US20040169678A1 (en) * | 2002-11-27 | 2004-09-02 | Oliver Huw Edward | Obtaining user feedback on displayed items |
US8046693B2 (en) * | 2002-11-27 | 2011-10-25 | Hewlett-Packard Development Company, L.P. | Obtaining user feedback on displayed items |
US8195714B2 (en) * | 2002-12-11 | 2012-06-05 | Leaper Technologies, Inc. | Context instantiated application protocol |
US20040123242A1 (en) * | 2002-12-11 | 2004-06-24 | Mckibben Michael T. | Context instantiated application protocol |
US20040125137A1 (en) * | 2002-12-26 | 2004-07-01 | Stata Raymond P. | Systems and methods for selecting a date or range of dates |
US7278111B2 (en) * | 2002-12-26 | 2007-10-02 | Yahoo! Inc. | Systems and methods for selecting a date or range of dates |
US20110208711A1 (en) * | 2003-07-02 | 2011-08-25 | Van Vleet Taylor N | Search annotation and personalization services |
US7523090B1 (en) | 2004-01-23 | 2009-04-21 | Niku | Creating data charts using enhanced SQL statements |
US7308457B1 (en) * | 2004-01-23 | 2007-12-11 | Niku | Method and apparatus for providing customized filters to restrict datasets retrieved from a database |
US20050273460A1 (en) * | 2004-06-04 | 2005-12-08 | Vitalsource Technologies | System, method and computer program product for providing content based upon a representation of the same |
US8160998B2 (en) * | 2004-06-04 | 2012-04-17 | Vitalsource Technologies, Inc. | System, method and computer program product for providing content based upon a representation of the same |
US9946807B2 (en) | 2004-06-04 | 2018-04-17 | Vital Source Technologies, Inc. | System, method and computer program product for providing content based upon a representation of the same |
US8380739B2 (en) * | 2004-09-29 | 2013-02-19 | Charles S. O'Rourke, III | Shareability utility |
US20060069701A1 (en) * | 2004-09-29 | 2006-03-30 | O'rourke Charles S Iii | Shareability utility |
US8335789B2 (en) | 2004-10-01 | 2012-12-18 | Ricoh Co., Ltd. | Method and system for document fingerprint matching in a mixed media environment |
US8332401B2 (en) | 2004-10-01 | 2012-12-11 | Ricoh Co., Ltd | Method and system for position-based image matching in a mixed media environment |
US8521737B2 (en) | 2004-10-01 | 2013-08-27 | Ricoh Co., Ltd. | Method and system for multi-tier image matching in a mixed media environment |
US8600989B2 (en) | 2004-10-01 | 2013-12-03 | Ricoh Co., Ltd. | Method and system for image matching in a mixed media environment |
US9063953B2 (en) | 2004-10-01 | 2015-06-23 | Ricoh Co., Ltd. | System and methods for creation and use of a mixed media environment |
US20060099564A1 (en) * | 2004-11-09 | 2006-05-11 | Holger Bohle | Integrated external collaboration tools |
US8296666B2 (en) * | 2004-11-30 | 2012-10-23 | Oculus Info. Inc. | System and method for interactive visual representation of information content and relationships using layout and gestures |
US20060117067A1 (en) * | 2004-11-30 | 2006-06-01 | Oculus Info Inc. | System and method for interactive visual representation of information content and relationships using layout and gestures |
US20070150466A1 (en) * | 2004-12-29 | 2007-06-28 | Scott Brave | Method and apparatus for suggesting/disambiguation query terms based upon usage patterns observed |
US7702690B2 (en) * | 2004-12-29 | 2010-04-20 | Baynote, Inc. | Method and apparatus for suggesting/disambiguation query terms based upon usage patterns observed |
US20060218491A1 (en) * | 2005-03-25 | 2006-09-28 | International Business Machines Corporation | System, method and program product for community review of documents |
US7606781B2 (en) | 2005-03-30 | 2009-10-20 | Primal Fusion Inc. | System, method and computer program for facet analysis |
US7844565B2 (en) | 2005-03-30 | 2010-11-30 | Primal Fusion Inc. | System, method and computer program for using a multi-tiered knowledge representation model |
US9904729B2 (en) | 2005-03-30 | 2018-02-27 | Primal Fusion Inc. | System, method, and computer program for a consumer defined information architecture |
US10002325B2 (en) | 2005-03-30 | 2018-06-19 | Primal Fusion Inc. | Knowledge representation systems and methods incorporating inference rules |
US20070118542A1 (en) * | 2005-03-30 | 2007-05-24 | Peter Sweeney | System, Method and Computer Program for Faceted Classification Synthesis |
US7596574B2 (en) | 2005-03-30 | 2009-09-29 | Primal Fusion, Inc. | Complex-adaptive system for providing a facted classification |
US20070136221A1 (en) * | 2005-03-30 | 2007-06-14 | Peter Sweeney | System, Method and Computer Program for Facet Analysis |
US20090300326A1 (en) * | 2005-03-30 | 2009-12-03 | Peter Sweeney | System, method and computer program for transforming an existing complex data structure to another complex data structure |
US20100036790A1 (en) * | 2005-03-30 | 2010-02-11 | Primal Fusion, Inc. | System, method and computer program for facet analysis |
US20080021925A1 (en) * | 2005-03-30 | 2008-01-24 | Peter Sweeney | Complex-adaptive system for providing a faceted classification |
US8010570B2 (en) | 2005-03-30 | 2011-08-30 | Primal Fusion Inc. | System, method and computer program for transforming an existing complex data structure to another complex data structure |
US8849860B2 (en) | 2005-03-30 | 2014-09-30 | Primal Fusion Inc. | Systems and methods for applying statistical inference techniques to knowledge representations |
US9104779B2 (en) | 2005-03-30 | 2015-08-11 | Primal Fusion Inc. | Systems and methods for analyzing and synthesizing complex knowledge representations |
US9177248B2 (en) | 2005-03-30 | 2015-11-03 | Primal Fusion Inc. | Knowledge representation systems and methods incorporating customization |
US7860817B2 (en) | 2005-03-30 | 2010-12-28 | Primal Fusion Inc. | System, method and computer program for facet analysis |
US9934465B2 (en) | 2005-03-30 | 2018-04-03 | Primal Fusion Inc. | Systems and methods for analyzing and synthesizing complex knowledge representations |
US7849090B2 (en) | 2005-03-30 | 2010-12-07 | Primal Fusion Inc. | System, method and computer program for faceted classification synthesis |
US9292590B2 (en) | 2005-07-25 | 2016-03-22 | Splunk Inc. | Identifying events derived from machine data based on an extracted portion from a first event |
US11010214B2 (en) | 2005-07-25 | 2021-05-18 | Splunk Inc. | Identifying pattern relationships in machine data |
US10242086B2 (en) | 2005-07-25 | 2019-03-26 | Splunk Inc. | Identifying system performance patterns in machine data |
US10318553B2 (en) | 2005-07-25 | 2019-06-11 | Splunk Inc. | Identification of systems with anomalous behaviour using events derived from machine data produced by those systems |
US9317582B2 (en) | 2005-07-25 | 2016-04-19 | Splunk Inc. | Identifying events derived from machine data that match a particular portion of machine data |
US9298805B2 (en) | 2005-07-25 | 2016-03-29 | Splunk Inc. | Using extractions to search events derived from machine data |
US9361357B2 (en) | 2005-07-25 | 2016-06-07 | Splunk Inc. | Searching of events derived from machine data using field and keyword criteria |
US11663244B2 (en) | 2005-07-25 | 2023-05-30 | Splunk Inc. | Segmenting machine data into events to identify matching events |
US9280594B2 (en) | 2005-07-25 | 2016-03-08 | Splunk Inc. | Uniform storage and search of events derived from machine data from different sources |
US10318555B2 (en) | 2005-07-25 | 2019-06-11 | Splunk Inc. | Identifying relationships between network traffic data and log data |
US9384261B2 (en) | 2005-07-25 | 2016-07-05 | Splunk Inc. | Automatic creation of rules for identifying event boundaries in machine data |
US11599400B2 (en) | 2005-07-25 | 2023-03-07 | Splunk Inc. | Segmenting machine data into events based on source signatures |
US9128916B2 (en) | 2005-07-25 | 2015-09-08 | Splunk Inc. | Machine data web |
US11204817B2 (en) | 2005-07-25 | 2021-12-21 | Splunk Inc. | Deriving signature-based rules for creating events from machine data |
US10339162B2 (en) | 2005-07-25 | 2019-07-02 | Splunk Inc. | Identifying security-related events derived from machine data that match a particular portion of machine data |
US11126477B2 (en) | 2005-07-25 | 2021-09-21 | Splunk Inc. | Identifying matching event data from disparate data sources |
US10324957B2 (en) | 2005-07-25 | 2019-06-18 | Splunk Inc. | Uniform storage and search of security-related events derived from machine data from different sources |
US20110208743A1 (en) * | 2005-07-25 | 2011-08-25 | Splunk Inc. | Machine data web |
US11036566B2 (en) | 2005-07-25 | 2021-06-15 | Splunk Inc. | Analyzing machine data based on relationships between log data and network traffic data |
US8589321B2 (en) * | 2005-07-25 | 2013-11-19 | Splunk Inc. | Machine data web |
US8694450B2 (en) | 2005-07-25 | 2014-04-08 | Splunk Inc. | Machine data web |
US11036567B2 (en) | 2005-07-25 | 2021-06-15 | Splunk Inc. | Determining system behavior using event patterns in machine data |
US11119833B2 (en) | 2005-07-25 | 2021-09-14 | Splunk Inc. | Identifying behavioral patterns of events derived from machine data that reveal historical behavior of an information technology environment |
US9516037B2 (en) * | 2005-07-27 | 2016-12-06 | International Business Machines Corporation | Decoding of encrypted file |
US20100281254A1 (en) * | 2005-07-27 | 2010-11-04 | Fernando Incertis Carro | Systems and method for secure delivery of files to authorized recipients |
US9106616B2 (en) * | 2005-07-27 | 2015-08-11 | International Business Machines Corporation | Systems and method for secure delivery of files to authorized recipients |
US20150304285A1 (en) * | 2005-07-27 | 2015-10-22 | International Business Machines Corporation | Secure delivery of files to authorized recipients |
US9264408B2 (en) * | 2005-07-27 | 2016-02-16 | International Business Machines Corporation | Secure delivery of files to authorized recipients |
US9380035B2 (en) * | 2005-07-27 | 2016-06-28 | International Business Machines Corporation | Decoding of encrypted file |
US20160134597A1 (en) * | 2005-07-27 | 2016-05-12 | International Business Machines Corporation | Decoding of encrypted file |
US9325675B2 (en) | 2005-07-27 | 2016-04-26 | International Business Machines Corporation | Secure delivery of files to authorized recipients |
US9405751B2 (en) | 2005-08-23 | 2016-08-02 | Ricoh Co., Ltd. | Database for mixed media document system |
US7991778B2 (en) | 2005-08-23 | 2011-08-02 | Ricoh Co., Ltd. | Triggering actions with captured input in a mixed media environment |
US8949287B2 (en) | 2005-08-23 | 2015-02-03 | Ricoh Co., Ltd. | Embedding hot spots in imaged documents |
US8195659B2 (en) | 2005-08-23 | 2012-06-05 | Ricoh Co. Ltd. | Integration and use of mixed media documents |
US20110081892A1 (en) * | 2005-08-23 | 2011-04-07 | Ricoh Co., Ltd. | System and methods for use of voice mail and email in a mixed media environment |
US9171202B2 (en) | 2005-08-23 | 2015-10-27 | Ricoh Co., Ltd. | Data organization and access for mixed media document system |
US8005831B2 (en) | 2005-08-23 | 2011-08-23 | Ricoh Co., Ltd. | System and methods for creation and use of a mixed media environment with geographic location information |
US8838591B2 (en) | 2005-08-23 | 2014-09-16 | Ricoh Co., Ltd. | Embedding hot spots in electronic documents |
US8156427B2 (en) | 2005-08-23 | 2012-04-10 | Ricoh Co. Ltd. | User interface for mixed media reality |
US7533112B2 (en) * | 2006-03-27 | 2009-05-12 | Microsoft Corporation | Context hierarchies for address searching |
US20070226187A1 (en) * | 2006-03-27 | 2007-09-27 | Microsoft Corporation | Context hierarchies for address searching |
US20130275857A1 (en) * | 2006-06-15 | 2013-10-17 | Michael R. Norwood | System and method for facilitating posting of public and private user comments at a web site |
US20140298160A1 (en) * | 2006-06-15 | 2014-10-02 | Michael R. Norwood | System and method for facilitating posting of public and private user comments at a web site |
US9170989B2 (en) * | 2006-06-15 | 2015-10-27 | Social Commenting, Llc | System and method for facilitating posting of public and private user comments at a web site |
US7860815B1 (en) * | 2006-07-12 | 2010-12-28 | Venkateswara Prasad Tangirala | Computer knowledge representation format, system, methods, and applications |
US9176984B2 (en) | 2006-07-31 | 2015-11-03 | Ricoh Co., Ltd | Mixed media reality retrieval of differentially-weighted links |
US8856108B2 (en) | 2006-07-31 | 2014-10-07 | Ricoh Co., Ltd. | Combining results of image retrieval processes |
US20090063431A1 (en) * | 2006-07-31 | 2009-03-05 | Berna Erol | Monitoring and analyzing creation and usage of visual content |
US8510283B2 (en) | 2006-07-31 | 2013-08-13 | Ricoh Co., Ltd. | Automatic adaption of an image recognition system to image capture devices |
US20090067726A1 (en) * | 2006-07-31 | 2009-03-12 | Berna Erol | Computation of a recognizability score (quality predictor) for image retrieval |
US9020966B2 (en) | 2006-07-31 | 2015-04-28 | Ricoh Co., Ltd. | Client device for interacting with a mixed media reality recognition system |
US20090100048A1 (en) * | 2006-07-31 | 2009-04-16 | Hull Jonathan J | Mixed Media Reality Retrieval of Differentially-weighted Links |
US8369655B2 (en) | 2006-07-31 | 2013-02-05 | Ricoh Co., Ltd. | Mixed media reality recognition using multiple specialized indexes |
US8073263B2 (en) | 2006-07-31 | 2011-12-06 | Ricoh Co., Ltd. | Multi-classifier selection and monitoring for MMR-based image recognition |
US9063952B2 (en) | 2006-07-31 | 2015-06-23 | Ricoh Co., Ltd. | Mixed media reality recognition with image tracking |
US8676810B2 (en) | 2006-07-31 | 2014-03-18 | Ricoh Co., Ltd. | Multiple index mixed media reality recognition using unequal priority indexes |
US20090100334A1 (en) * | 2006-07-31 | 2009-04-16 | Hull Jonathan J | Capturing Symbolic Information From Documents Upon Printing |
US20090070415A1 (en) * | 2006-07-31 | 2009-03-12 | Hidenobu Kishi | Architecture for mixed media reality retrieval of locations and registration of images |
US8156116B2 (en) | 2006-07-31 | 2012-04-10 | Ricoh Co., Ltd | Dynamic presentation of targeted information in a mixed media reality recognition system |
US20090070302A1 (en) * | 2006-07-31 | 2009-03-12 | Jorge Moraleda | Mixed Media Reality Recognition Using Multiple Specialized Indexes |
US8868555B2 (en) | 2006-07-31 | 2014-10-21 | Ricoh Co., Ltd. | Computation of a recongnizability score (quality predictor) for image retrieval |
US8489987B2 (en) | 2006-07-31 | 2013-07-16 | Ricoh Co., Ltd. | Monitoring and analyzing creation and usage of visual content using image and hotspot interaction |
US20090080800A1 (en) * | 2006-07-31 | 2009-03-26 | Jorge Moraleda | Multiple Index Mixed Media Reality Recognition Using Unequal Priority Indexes |
US8825682B2 (en) * | 2006-07-31 | 2014-09-02 | Ricoh Co., Ltd. | Architecture for mixed media reality retrieval of locations and registration of images |
US8201076B2 (en) | 2006-07-31 | 2012-06-12 | Ricoh Co., Ltd. | Capturing symbolic information from documents upon printing |
US9384619B2 (en) | 2006-07-31 | 2016-07-05 | Ricoh Co., Ltd. | Searching media content for objects specified using identifiers |
US11036745B2 (en) * | 2006-08-28 | 2021-06-15 | Katherine Lynn France-Prouvoste | Method, system and apparatus for dynamic registry of books and for modeling real-time market demand for books within academic sectors |
US20100049766A1 (en) * | 2006-08-31 | 2010-02-25 | Peter Sweeney | System, Method, and Computer Program for a Consumer Defined Information Architecture |
US8510302B2 (en) | 2006-08-31 | 2013-08-13 | Primal Fusion Inc. | System, method, and computer program for a consumer defined information architecture |
WO2008025167A1 (en) * | 2006-08-31 | 2008-03-06 | Peter Sweeney | System, method, and computer program for a consumer defined information architecture |
US20080140666A1 (en) * | 2006-12-08 | 2008-06-12 | D Alton Harrison Patrick James | Method and System for Creating, Rating and Publishing Web-Based Content |
US20080175507A1 (en) * | 2007-01-18 | 2008-07-24 | Andrew Lookingbill | Synthetic image and video generation from ground truth data |
US7970171B2 (en) | 2007-01-18 | 2011-06-28 | Ricoh Co., Ltd. | Synthetic image and video generation from ground truth data |
US20080183691A1 (en) * | 2007-01-30 | 2008-07-31 | International Business Machines Corporation | Method for a networked knowledge based document retrieval and ranking utilizing extracted document metadata and content |
US7853886B2 (en) | 2007-02-27 | 2010-12-14 | Microsoft Corporation | Persistent spatial collaboration |
US8086038B2 (en) | 2007-07-11 | 2011-12-27 | Ricoh Co., Ltd. | Invisible junction features for patch recognition |
US10192279B1 (en) | 2007-07-11 | 2019-01-29 | Ricoh Co., Ltd. | Indexed document modification sharing with mixed media reality |
US9530050B1 (en) | 2007-07-11 | 2016-12-27 | Ricoh Co., Ltd. | Document annotation sharing |
US9373029B2 (en) | 2007-07-11 | 2016-06-21 | Ricoh Co., Ltd. | Invisible junction feature recognition for document security or annotation |
US8989431B1 (en) | 2007-07-11 | 2015-03-24 | Ricoh Co., Ltd. | Ad hoc paper-based networking with mixed media reality |
US20090015676A1 (en) * | 2007-07-11 | 2009-01-15 | Qifa Ke | Recognition and Tracking Using Invisible Junctions |
US8184155B2 (en) | 2007-07-11 | 2012-05-22 | Ricoh Co. Ltd. | Recognition and tracking using invisible junctions |
US8144921B2 (en) | 2007-07-11 | 2012-03-27 | Ricoh Co., Ltd. | Information retrieval using invisible junctions and geometric constraints |
US8156115B1 (en) | 2007-07-11 | 2012-04-10 | Ricoh Co. Ltd. | Document-based networking with mixed media reality |
US20090019402A1 (en) * | 2007-07-11 | 2009-01-15 | Qifa Ke | User interface for three-dimensional navigation |
US20090016615A1 (en) * | 2007-07-11 | 2009-01-15 | Ricoh Co., Ltd. | Invisible Junction Feature Recognition For Document Security or Annotation |
US8276088B2 (en) | 2007-07-11 | 2012-09-25 | Ricoh Co., Ltd. | User interface for three-dimensional navigation |
US20090016564A1 (en) * | 2007-07-11 | 2009-01-15 | Qifa Ke | Information Retrieval Using Invisible Junctions and Geometric Constraints |
US8176054B2 (en) | 2007-07-12 | 2012-05-08 | Ricoh Co. Ltd | Retrieving electronic documents by converting them to synthetic text |
US8526784B2 (en) * | 2007-07-27 | 2013-09-03 | Cisco Technology, Inc. | Digital video recorder collaboration and similar media segment determination |
US20090028520A1 (en) * | 2007-07-27 | 2009-01-29 | Cisco Technology, Inc. | Digital video recorder collaboration and similar media segment determination |
US9405503B2 (en) * | 2007-09-26 | 2016-08-02 | Aq Media, Inc. | Audio-visual navigation and communication dynamic memory architectures |
US20130007670A1 (en) * | 2007-09-26 | 2013-01-03 | Aq Media, Inc. | Audio-visual navigation and communication dynamic memory architectures |
US10146399B2 (en) | 2007-09-26 | 2018-12-04 | Aq Media, Inc. | Audio-visual navigation and communication dynamic memory architectures |
US20100151431A1 (en) * | 2008-03-27 | 2010-06-17 | Knowledge Athletes, Inc. | Virtual learning |
US8676732B2 (en) | 2008-05-01 | 2014-03-18 | Primal Fusion Inc. | Methods and apparatus for providing information of interest to one or more users |
US9361365B2 (en) | 2008-05-01 | 2016-06-07 | Primal Fusion Inc. | Methods and apparatus for searching of content using semantic synthesis |
US9792550B2 (en) | 2008-05-01 | 2017-10-17 | Primal Fusion Inc. | Methods and apparatus for providing information of interest to one or more users |
US8676722B2 (en) | 2008-05-01 | 2014-03-18 | Primal Fusion Inc. | Method, system, and computer program for user-driven dynamic generation of semantic networks and media synthesis |
US20100235307A1 (en) * | 2008-05-01 | 2010-09-16 | Peter Sweeney | Method, system, and computer program for user-driven dynamic generation of semantic networks and media synthesis |
US9378203B2 (en) | 2008-05-01 | 2016-06-28 | Primal Fusion Inc. | Methods and apparatus for providing information of interest to one or more users |
US11182440B2 (en) | 2008-05-01 | 2021-11-23 | Primal Fusion Inc. | Methods and apparatus for searching of content using semantic synthesis |
US11868903B2 (en) | 2008-05-01 | 2024-01-09 | Primal Fusion Inc. | Method, system, and computer program for user-driven dynamic generation of semantic networks and media synthesis |
US8385589B2 (en) | 2008-05-15 | 2013-02-26 | Berna Erol | Web-based content detection in images, extraction and recognition |
US20100057664A1 (en) * | 2008-08-29 | 2010-03-04 | Peter Sweeney | Systems and methods for semantic concept definition and semantic concept relationship synthesis utilizing existing domain definitions |
US8943016B2 (en) | 2008-08-29 | 2015-01-27 | Primal Fusion Inc. | Systems and methods for semantic concept definition and semantic concept relationship synthesis utilizing existing domain definitions |
US8495001B2 (en) | 2008-08-29 | 2013-07-23 | Primal Fusion Inc. | Systems and methods for semantic concept definition and semantic concept relationship synthesis utilizing existing domain definitions |
US10803107B2 (en) | 2008-08-29 | 2020-10-13 | Primal Fusion Inc. | Systems and methods for semantic concept definition and semantic concept relationship synthesis utilizing existing domain definitions |
US9595004B2 (en) | 2008-08-29 | 2017-03-14 | Primal Fusion Inc. | Systems and methods for semantic concept definition and semantic concept relationship synthesis utilizing existing domain definitions |
US20100124738A1 (en) * | 2008-11-19 | 2010-05-20 | Yuan Yuan | User interface for interactive teaching, and method for operating the same |
US20100257374A1 (en) * | 2009-03-30 | 2010-10-07 | The Boeing Company | Computer architectures using shared storage |
US9690839B2 (en) | 2009-03-30 | 2017-06-27 | The Boeing Company | Computer architectures using shared storage |
US20100250867A1 (en) * | 2009-03-30 | 2010-09-30 | The Boeing Company | Computer architectures using shared storage |
US9098562B2 (en) | 2009-03-30 | 2015-08-04 | The Boeing Company | Computer architectures using shared storage |
US8972515B2 (en) * | 2009-03-30 | 2015-03-03 | The Boeing Company | Computer architectures using shared storage |
US20100325557A1 (en) * | 2009-06-17 | 2010-12-23 | Agostino Sibillo | Annotation of aggregated content, systems and methods |
US8385660B2 (en) | 2009-06-24 | 2013-02-26 | Ricoh Co., Ltd. | Mixed media reality indexing and retrieval for repeated content |
US9292855B2 (en) | 2009-09-08 | 2016-03-22 | Primal Fusion Inc. | Synthesizing messaging using context provided by consumers |
US10181137B2 (en) | 2009-09-08 | 2019-01-15 | Primal Fusion Inc. | Synthesizing messaging using context provided by consumers |
US20110060644A1 (en) * | 2009-09-08 | 2011-03-10 | Peter Sweeney | Synthesizing messaging using context provided by consumers |
US20110060645A1 (en) * | 2009-09-08 | 2011-03-10 | Peter Sweeney | Synthesizing messaging using context provided by consumers |
US20110060794A1 (en) * | 2009-09-08 | 2011-03-10 | Peter Sweeney | Synthesizing messaging using context provided by consumers |
US20110112824A1 (en) * | 2009-11-06 | 2011-05-12 | Craig Peter Sayers | Determining at least one category path for identifying input text |
US9262520B2 (en) | 2009-11-10 | 2016-02-16 | Primal Fusion Inc. | System, method and computer program for creating and manipulating data structures using an interactive graphical interface |
US10146843B2 (en) | 2009-11-10 | 2018-12-04 | Primal Fusion Inc. | System, method and computer program for creating and manipulating data structures using an interactive graphical interface |
US20110189645A1 (en) * | 2010-01-29 | 2011-08-04 | Daniel Leininger | System and method of knowledge assessment |
US20110225550A1 (en) * | 2010-03-12 | 2011-09-15 | Creedon Michael S | System and method for displaying and navigating library information with a virtual library collections browser |
US9384678B2 (en) * | 2010-04-14 | 2016-07-05 | Thinkmap, Inc. | System and method for generating questions and multiple choice answers to adaptively aid in word comprehension |
US20110257961A1 (en) * | 2010-04-14 | 2011-10-20 | Marc Tinkler | System and method for generating questions and multiple choice answers to adaptively aid in word comprehension |
US11474979B2 (en) | 2010-06-22 | 2022-10-18 | Primal Fusion Inc. | Methods and devices for customizing knowledge representation systems |
US10474647B2 (en) | 2010-06-22 | 2019-11-12 | Primal Fusion Inc. | Methods and devices for customizing knowledge representation systems |
US9576241B2 (en) | 2010-06-22 | 2017-02-21 | Primal Fusion Inc. | Methods and devices for customizing knowledge representation systems |
US10248669B2 (en) | 2010-06-22 | 2019-04-02 | Primal Fusion Inc. | Methods and devices for customizing knowledge representation systems |
US9235806B2 (en) | 2010-06-22 | 2016-01-12 | Primal Fusion Inc. | Methods and devices for customizing knowledge representation systems |
US9098462B1 (en) | 2010-09-14 | 2015-08-04 | The Boeing Company | Communications via shared memory |
US20120233150A1 (en) * | 2011-03-11 | 2012-09-13 | Microsoft Corporation | Aggregating document annotations |
US9626348B2 (en) * | 2011-03-11 | 2017-04-18 | Microsoft Technology Licensing, Llc | Aggregating document annotations |
US9384265B2 (en) | 2011-03-30 | 2016-07-05 | Thinkmap, Inc. | System and method for enhanced lookup in an online dictionary |
US9235566B2 (en) | 2011-03-30 | 2016-01-12 | Thinkmap, Inc. | System and method for enhanced lookup in an online dictionary |
US11294977B2 (en) | 2011-06-20 | 2022-04-05 | Primal Fusion Inc. | Techniques for presenting content to a user based on the user's preferences |
US9098575B2 (en) | 2011-06-20 | 2015-08-04 | Primal Fusion Inc. | Preference-guided semantic processing |
US9092516B2 (en) | 2011-06-20 | 2015-07-28 | Primal Fusion Inc. | Identifying information of interest based on user preferences |
US10409880B2 (en) | 2011-06-20 | 2019-09-10 | Primal Fusion Inc. | Techniques for presenting content to a user based on the user's preferences |
US9715552B2 (en) | 2011-06-20 | 2017-07-25 | Primal Fusion Inc. | Techniques for presenting content to a user based on the user's preferences |
US9058331B2 (en) | 2011-07-27 | 2015-06-16 | Ricoh Co., Ltd. | Generating a conversation in a social network based on visual search results |
US8700612B2 (en) * | 2011-08-23 | 2014-04-15 | Contextu, Inc. | Knowledge matrix utilizing systematic contextual links |
US20130054577A1 (en) * | 2011-08-23 | 2013-02-28 | Pierre Schwob | Knowledge matrix utilizing systematic contextual links |
US10114531B2 (en) * | 2011-10-13 | 2018-10-30 | Microsoft Technology Licensing, Llc | Application of multiple content items and functionality to an electronic content item |
US9998509B2 (en) | 2011-10-13 | 2018-06-12 | Microsoft Technology Licensing, Llc | Application of comments in multiple application functionality content |
US20150099254A1 (en) * | 2012-07-26 | 2015-04-09 | Sony Corporation | Information processing device, information processing method, and system |
US20140156279A1 (en) * | 2012-11-30 | 2014-06-05 | Kabushiki Kaisha Toshiba | Content searching apparatus, content search method, and control program product |
US20140164700A1 (en) * | 2012-12-10 | 2014-06-12 | Facebook, Inc. | System and method of detecting cache inconsistencies |
US9122717B2 (en) | 2012-12-10 | 2015-09-01 | Facebook, Inc. | System and method of detecting cache inconsistencies |
US8996810B2 (en) * | 2012-12-10 | 2015-03-31 | Facebook, Inc. | System and method of detecting cache inconsistencies |
US9258126B2 (en) * | 2012-12-13 | 2016-02-09 | Xerox Corporation | Method for non-repudiation of ad-hoc workflows |
US20140173285A1 (en) * | 2012-12-13 | 2014-06-19 | Xerox Corporation | Method for non-repudiation of ad-hoc workflows |
GB2526996B (en) * | 2013-03-01 | 2021-06-02 | Magnum Software Dev Ltd | Systems and methods for document and material management |
US20160117941A1 (en) * | 2013-05-09 | 2016-04-28 | Gail Joyce MITCHELL | System and method for facilitating emergent learning in relation to knowledge content |
US20160148097A1 (en) * | 2013-07-10 | 2016-05-26 | Ifthisthen, Inc. | Systems and methods for knowledge management |
WO2015006595A1 (en) * | 2013-07-10 | 2015-01-15 | Ifthisthen, Inc. | Systems and methods for knowledge management |
US20170147611A1 (en) * | 2013-08-29 | 2017-05-25 | International Business Machines Corporation | Detection and correction of copy errors in a distributed storage network |
US10841376B2 (en) * | 2013-08-29 | 2020-11-17 | Pure Storage, Inc. | Detection and correction of copy errors in a distributed storage network |
US10176242B2 (en) | 2013-10-15 | 2019-01-08 | Amazon Technologies, Inc. | Local key-value database synchronization |
US9703814B1 (en) * | 2013-10-15 | 2017-07-11 | Amazon Technologies, Inc. | Local key-value database synchronization |
US10242084B2 (en) | 2013-10-15 | 2019-03-26 | Amazon Technologies, Inc. | Local key-value database synchronization |
US20150121246A1 (en) * | 2013-10-25 | 2015-04-30 | The Charles Stark Draper Laboratory, Inc. | Systems and methods for detecting user engagement in context using physiological and behavioral measurement |
US9703888B2 (en) * | 2013-12-18 | 2017-07-11 | Dassault Systemes Americas Corp. | Component obsolescence registry |
US20150169782A1 (en) * | 2013-12-18 | 2015-06-18 | Dassault Systems Enovia Corp. | Component Obsolescence Registry |
US10373279B2 (en) | 2014-02-24 | 2019-08-06 | Mindojo Ltd. | Dynamic knowledge level adaptation of e-learning datagraph structures |
US20150243176A1 (en) * | 2014-02-24 | 2015-08-27 | Mindojo Ltd. | Virtual course boundaries in adaptive e-learning datagraph structures |
US9836765B2 (en) | 2014-05-19 | 2017-12-05 | Kibo Software, Inc. | System and method for context-aware recommendation through user activity change detection |
US20160148516A1 (en) * | 2014-11-20 | 2016-05-26 | Paul Senn | Sustained Learning Flow Process |
US11132111B2 (en) | 2015-08-01 | 2021-09-28 | Splunk Inc. | Assigning workflow network security investigation actions to investigation timelines |
US11363047B2 (en) | 2015-08-01 | 2022-06-14 | Splunk Inc. | Generating investigation timeline displays including activity events and investigation workflow events |
US10778712B2 (en) | 2015-08-01 | 2020-09-15 | Splunk Inc. | Displaying network security events and investigation activities across investigation timelines |
US10848510B2 (en) | 2015-08-01 | 2020-11-24 | Splunk Inc. | Selecting network security event investigation timelines in a workflow environment |
US11641372B1 (en) | 2015-08-01 | 2023-05-02 | Splunk Inc. | Generating investigation timeline displays including user-selected screenshots |
US10965773B2 (en) * | 2015-10-08 | 2021-03-30 | Pearson Education, Inc. | Adaptive system cache |
US10854101B1 (en) * | 2016-03-09 | 2020-12-01 | Naveed Iftikhar | Multi-media method for enhanced recall and retention of educational material |
US20180061257A1 (en) * | 2016-08-31 | 2018-03-01 | James Mintz | User-Navigable tutorial system for presenting information derived from source documents of factual situations |
US11397899B2 (en) * | 2019-03-26 | 2022-07-26 | Microsoft Technology Licensing, Llc | Filtering content using generalized linear mixed models |
US20200394930A1 (en) * | 2019-06-11 | 2020-12-17 | Arizona Board Of Regents On Behalf Of Arizona State University | Systems, methods, and apparatuses for implementing an individualized educational growth platform with user-aware feeds and user directed progression |
Also Published As
Publication number | Publication date |
---|---|
WO2002084590A1 (en) | 2002-10-24 |
US7502770B2 (en) | 2009-03-10 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7502770B2 (en) | Knowledge web | |
US20030196094A1 (en) | Method and apparatus for authenticating the content of a distributed database | |
US20030195834A1 (en) | Automated online purchasing system | |
Kovacs et al. | Collection development in cyberspace: building an electronic library collection | |
Šimić et al. | Semantic web and intelligent learning management systems | |
Hill | Cognitive strategies and the use of a hypermedia information system: An exploratory study | |
Zainab et al. | Collaboratively building digital libraries: Focus on local historical resources for educational use | |
Marshall et al. | Moving digital libraries into the student learning space: The GetSmart experience | |
Wang et al. | Evaluation of the navigation effectiveness of an organizational taxonomy built on a general classification scheme and domain thesauri | |
Fink | American Art Collaborative (AAC) Linked Open Data (LOD) Initiative, Overview and Recommendations for Good Practices | |
Zhang et al. | A user‐centered functional metadata evaluation of moving image collections | |
Schopfel et al. | Master’s theses and open scholarship: a case study | |
Chang | A study of hypertext document structure and individual differences: Effects on learning performance | |
National Research Council et al. | Issues for science and engineering researchers in the digital age | |
Marty | On‐line exhibit design: The sociotechnological impact of building a museum over the World Wide Web | |
Ringuette et al. | The LIKED resource-a LIbrary KnowledgE and discovery online resource for discovering and implementing knowledge, data, and infrastructure resources | |
Fortier et al. | Wisconsin’s model academic standards for information and technology literacy | |
Roda et al. | Digital image library development in academic environment: designing and testing usability | |
WO2003087987A1 (en) | Automated online purchasing system | |
Shabajee et al. | Adding Value to Large Multimedia Collections through Annotation Technologies and Tools: Serving Communities of Interest. | |
Rumpradit | An evaluation of the effect of user interface elements and user learning styles on user performance, confidence, and satisfaction on the World Wide Web | |
Johnson | Enabling the Reuse of World Wide Web documents in tutorials | |
Abate | The role of the Einstein Library of Nova Southeastern University in meeting the needs of distance education students | |
AU2003237918B2 (en) | Internet-based education support system and method with multi-language capability | |
Fazzino et al. | The information literacy user’s guide: A remixed open, online textbook |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: APPLIED MINDS, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:HILLIS, W. DANIEL;FERREN, BRAN;REEL/FRAME:015131/0603;SIGNING DATES FROM 20030721 TO 20030724 |
|
AS | Assignment |
Owner name: METAWEB TECHNOLOGIES, INC., DELAWAREFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:APPLIED MINDS, INC.;REEL/FRAME:016488/0067Effective date: 20050725 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
CC | Certificate of correction | ||
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: MERGER;ASSIGNOR:METAWEB TECHNOLOGIES, INC.;REEL/FRAME:025364/0717Effective date: 20100716 |
|
FEPP | Fee payment procedure |
Free format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
AS | Assignment |
Owner name: METAWEB TECHNOLOGIES, INC., CALIFORNIAFree format text: CORRECTIVE ASSIGNMENT TO CORRECT THE COVER SHEET FOR THE MERGER DOCUMENT FILED ON 11/15/2010 AND PREVIOUSLY RECORDED ON REEL 025364 FRAME 0717. ASSIGNOR(S) HEREBY CONFIRMS THE RECEIVING PARTY DATA SHOULD BE METAWEB TECHNOLOGIES, INC.;ASSIGNOR:METAWEB TECHNOLOGIES, INC.;REEL/FRAME:025675/0981Effective date: 20100716 |
|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:METAWEB TECHNOLOGIES, INC.;REEL/FRAME:025748/0575Effective date: 20110202 |
|
FEPP | Fee payment procedure |
Free format text: PAT HOLDER NO LONGER CLAIMS SMALL ENTITY STATUS, ENTITY STATUS SET TO UNDISCOUNTED (ORIGINAL EVENT CODE: STOL); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: APPLIED INVENTION, LLC, CALIFORNIAFree format text: NUNC PRO TUNC ASSIGNMENT;ASSIGNOR:APPLIED MINDS, LLC;REEL/FRAME:034750/0495Effective date: 20150109 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0610Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
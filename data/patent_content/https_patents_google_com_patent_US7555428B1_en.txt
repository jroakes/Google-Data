US7555428B1 - System and method for identifying compounds through iterative analysis - Google Patents
System and method for identifying compounds through iterative analysis Download PDFInfo
- Publication number
- US7555428B1 US7555428B1 US10/647,203 US64720303A US7555428B1 US 7555428 B1 US7555428 B1 US 7555428B1 US 64720303 A US64720303 A US 64720303A US 7555428 B1 US7555428 B1 US 7555428B1
- Authority
- US
- United States
- Prior art keywords
- gram
- likelihood
- grams
- tokens
- segments
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/279—Recognition of textual entities
- G06F40/284—Lexical analysis, e.g. tokenisation or collocates
Definitions
- the present invention relates in general to text analysis and, in particular, to a system and method for identifying compounds through iterative analysis.
- Web Worldwide Web
- Usenet provides information via interconnected Web pages that can be navigated through embedded hyperlinks.
- the Usenet provides information in a non-interactive bulletin board format consisting of static news messages posted and retrievable by readers. In short, the Web and Usenet provide desktop access to a virtually unlimited library of information in almost every language worldwide.
- Web and Usenet operate under a client-server model.
- individual clients typically execute Web browsers to retrieve and display Web pages in a graphical user environment.
- Usenet individual clients generally execute news readers to retrieve, post and display news messages, usually in a textual user environment.
- Both Web browsers and news readers interface to centralized content servers, which function as data dissemination, storage and retrieval repositories.
- News messages available via the Usenet are cataloged into specific news groups and finding relevant content involves a straightforward searching of news groups and message lists.
- Web content is not organized in any structured manner and search engines have evolved to enable users to find and retrieve relevant Web content, as well as news messages and other types of content.
- Existing methods used by search engines are based on matching search query terms to terms indexed from Web pages. More advanced methods determine the importance of retrieved Web content using, for example, a hyperlink structure-based analysis, such as described in S. Brin and L. Page, “The Anatomy of a Large-Scale Hypertextual Search Engine,” (1998) and in U.S. Pat. No. 6,285,999, issued Sep. 4, 2001 to Page, the disclosures of which are incorporated by reference.
- a compound sometimes also referred to as a collocation, is defined as any sequence of words that co-occur more often than by mere chance.
- Compounds occur in text and speech as a natural language construct and can include proper nouns, such as “San Francisco,” compound nouns, such as “hot dog,” and other semantic and syntactic language constructs, which result in the co-occurrence of two or more words.
- Compounds occur with regularity in a range of applications, including speech recognition, text classification, and search result scoring.
- Recognizing compounds is difficult, especially when occurring in speech or live text. Moreover, most languages lack regular syntactic or semantic clues to enable easy identification of compounds. In German, for instance, the first letter of each noun is capitalized, which complicates the identification of proper nouns. Similarly, the types of potential compounds can depend on the subject matter. For instance, a scientific paper could include compounds wholly unique from those found in a sports column.
- N-gram-based approaches therefore count the frequencies of individual words or tokens and the frequencies of word sequences of varying lengths. N-gram-based approaches suffer from three principal difficulties.
- n-gram-based approaches are storage inefficient. As the number of words occurring in each n-gram increases, the number of unique n-grams in a corpus approaches the number of words in a corpus. Storing the counts for long sequences of n-grams can require a prohibitively large amount of memory.
- the present invention provides a system and method for discovering and identifying compounds within a text corpus through iterative analysis of measures of association between constituent tokens.
- a text corpus is evaluated into a set of unique n-grams and counts of the frequencies of occurrence of each unique n-gram are tallied. Those n-grams having a specified length are selected and the likelihood of each selected n-gram being a compound, that is, the likelihood of collocation, is determined.
- the likelihood of collocation is evaluated using the likelihood ratio method, although other methodologies and approaches could be used, as would be recognized by one skilled in the art. Those n-grams most likely constituting compounds are added to a token vocabulary, preferably up to an upper limit number of n-grams.
- the token vocabulary is reconstructed to add the new compounds and remove constituent tokens, which occur in the new compounds.
- the specified length is adjusted and evaluation continues using the revised token vocabulary.
- the n-gram “San Francisco has” would receive a relatively low score because a likelihood under the assumption that the n-gram “San Francisco has” is a compound would be only slightly higher than a likelihood under the assumption that “San Francisco” is a compound but the entire n-gram is not a compound.
- An embodiment provides a system and method for finding compounds in a text corpus.
- a vocabulary including tokens extracted from a text corpus is built. Compounds having a plurality of lengths within the text corpus are iteratively identified. Each compound includes a plurality of tokens. A frequency of occurrence for one or more n-grams in the text corpus is evaluated. Each n-gram includes tokens selected from the vocabulary. A likelihood of collocation for one or more of the n-grams having a same length is determined. The n-grams having a highest likelihood are added as compounds to the vocabulary. The vocabulary is rebuilt based on the added compounds.
- a further embodiment provides a system and method for identifying compounds through iterative analysis of measure of association.
- a limit on a number of tokens per compound is specified.
- Compounds within a text corpus are iteratively evaluated.
- a number of occurrences of one or more n-grams within the text corpus is determined.
- Each n-gram includes up to a maximum number of tokens, which are each provided in a vocabulary for the text corpus.
- At least one n-gram including a number of tokens equal to the limit based on the number of occurrences is identified.
- a measure of association between the tokens in the identified n-gram is determined.
- Each identified n-gram with a sufficient measure of association is added to the vocabulary as a compound token.
- the vocabulary is rebuilt based on the added compound tokens and adjusting the limit.
- the limit is adjusted.
- FIG. 1 is a block diagram showing a system for identifying compounds through iterative analysis, in accordance with the present invention.
- FIG. 2 is a functional block diagram showing a compound server, in accordance with the present invention.
- FIG. 3 is a functional block diagram showing the software modules used by the compound engine of FIG. 2 .
- FIG. 4 is a flow diagram showing a method for identifying compounds through iterative analysis, in accordance with the present invention.
- FIG. 5 is a flow diagram showing the routine for preparing a corpus for use in the method of FIG. 4 .
- FIG. 6 is a flow diagram showing the routine for finding compounds for use in the method of FIG. 4 .
- FIG. 7 is a flow diagram showing the routine for counting n-grams for use in the routine of FIG. 6 .
- FIG. 1 is a block diagram showing a system 9 for identifying compounds through iterative analysis, in accordance with the present invention.
- a plurality of individual clients 12 are communicatively interfaced to a server 11 via an internetwork 10 , such as the Internet, or other form of communications network, as would be recognized by one skilled in the art.
- the individual clients 12 are operated by users 19 who transact requests for Web content, news messages, other types of content, and other operations through their respective client 12 .
- each client 12 can be any form of computing platform connectable to a network, such as the internetwork 10 , and capable of interacting with application programs.
- a network such as the internetwork 10
- Exemplary examples of individual clients include, without limitation, personal computers, digital assistances, “smart” cellular telephones and pagers, lightweight clients, workstations, “dumb” terminals interfaced to an application server, and various arrangements and configurations thereof, as would be recognized by one skilled in the art.
- the internetwork 10 includes various topologies, configurations, and arrangements of network interconnectivity components arranged to interoperatively couple with enterprise, wide area and local area networks and include, without limitation, conventionally wired, wireless, satellite, optical, and equivalent network technologies, as would be recognized by one skilled in the art.
- each client 12 executes a Web browser and news reader application 18 (“Browser/Reader”).
- Web content 25 is requested via a Web server 20 executing on the server 11 .
- news messages (“News Msgs”) 26 are posted and retrieved via a news server 21 also executing on the server 11 .
- speech as communicated from a user 19 via a client 12 , can be recognized through a speech recognizer 23 .
- Search results and other types of text can be classified by a text classifier 24 .
- Other types of server functionality can be provided, as would be recognized by one skilled in the art. Note the Web browsing, news reading, speech recognition, and text classification functions could be also be implemented separately as stand alone applications, as are known in the art.
- the server 11 maintains an attached storage device 15 in which the Web content 25 , news messages 26 , and other content 27 are stored.
- the Web content 25 , news messages 26 , and other content 27 could also be maintained remotely on other Web and news servers (not shown) interconnected either directly or indirectly via the internetwork 10 and which are preferably accessible by each client 12 .
- a compound server (not shown) identifies compounds from a training corpus and creates a list of compounds, as further described below with reference to FIG. 2 .
- the compounds list can be used by the search engine 22 , speech recognizer 23 , text classifier 24 , and other components (not shown) on the server 11 , one or more of the clients 12 , or on other functional components, as would be recognized by one skilled in the art.
- a search engine 22 executes on the server 11 for processing queries for Web content 25 , news messages 26 , and other content 27 .
- Each query describes or identifies information, which is potentially retrievable via either the Web server 20 or news server 21 .
- each query provides characteristics, typically expressed as terms, including individual words and compounds.
- a search engine 22 also executing on the server 11 , receives each query, identifies matching Web content 25 , news messages 26 , and other content 27 , and send back results conforming to the query preferences.
- Other styles, forms or definitions of queries, query characteristics, and related metadata are feasible, as would be recognized by one skilled in the art.
- the search engine 22 preferably identifies the Web content 25 , news messages 26 , and other content 27 best matching the search query terms to provide high quality search results, such as described in S. Brin and L. Page, “The Anatomy of a Large-Scale Hypertextual Search Engine” (1998) and in U.S. Pat. No. 6,285,999, issued Sep. 4, 2001 to Page, the disclosures of which are incorporated by reference.
- the search engine 22 operates on information characteristics describing potentially retrievable content.
- server 20 including the Web server 20 , news server 21 , search engine 22 , speech recognizer 23 , and text classifier 24 could be provided by a loosely- or tightly-coupled distributed or parallelized computing configuration, in addition to a uniprocessing environment.
- the individual computer systems include general purpose, programmed digital computing devices consisting of a central processing unit (processors 13 and 16 , respectively), random access memory (memories 14 and 17 , respectively), non-volatile secondary storage 15 and 28 , such as a hard drive or CD ROM drive, network or wireless interfaces, and peripheral devices, including user interfacing means, such as a keyboard and display.
- Program code including software programs, and data is loaded into the RAM for execution and processing by the CPU and results are generated for display, output, transmittal, or storage.
- FIG. 2 is a functional block diagram 30 showing a compound server 31 , in accordance with the present invention.
- the compound server 31 discovers and identifies compounds based on tokens extracted from a text corpus 36 and stores the compounds in a compounds list 37 .
- the compounds server 31 includes a compound engine 34 , which identifies compounds through iterative analysis, as further described below with reference to FIG. 3 .
- the compound server 31 maintains an attached storage device 35 in which the text corpus 36 and compounds list 37 are stored.
- the text corpus 36 consists of documents that include Web content, news messages, and other content, including the Web content 25 , news messages 26 , and other content 27 stored by the server 11 (shown in FIG. 1 ), as well as documents from other sources, as is known in the art.
- the individual computer system including the compound server 31 , include general purpose, programmed digital computing devices consisting of a central processing unit (processor 33 ), random access memory (memory 32 ), non-volatile secondary storage 35 , such as a hard drive or CD ROM drive, network or wireless interfaces, and peripheral devices, including user interfacing means, such as a keyboard and display.
- Program code including software programs, and data is loaded into the RAM for execution and processing by the CPU and results are generated for display, output, transmittal, or storage.
- FIG. 3 is a functional block diagram 50 showing the software modules used by the compound engine 34 of FIG. 2 .
- the compound engine 34 consists of a corpus preparation component 51 , n-gram counter 52 , and compound finder 53 .
- the corpus preparation component 51 and n-gram counter 52 both operate on the text corpus 36 , which consists of a set of documents (“Docs”) 61 that contain raw text provided as Web content, news messages, and other content.
- the corpus preparation component 51 evaluates the text corpus 36 to construct an initial token vocabulary 57 , as further described below with reference to FIG. 5 .
- the corpus preparation component 51 includes a parser 54 that tokenizes each document 61 in the text corpus 36 . Tokenizing removes white space, punctuations, and formatting artifacts to form a clean list of individual words, which each becomes a one-word token.
- the n-gram counter 52 is used by the compound finder 53 to determine the frequencies of occurrences of unique n-grams within the text corpus 36 , as further described below with reference to FIG. 7 .
- the n-gram counter 52 generates a list of the counts of occurrences of each n-gram 58 and a list of unique n-grams 59 .
- the compound finder 53 uses the n-gram counts list 58 to determine, for each n-gram of a desired length, the likelihood that the n-gram is a compound, as further described below with reference to FIG. 6 .
- the compound finder 53 retrieves each unique n-gram from the unique n-gram list 59 .
- a likelihood ratio component 55 determines the likelihood of an n-gram being a compound and stores the computed likelihood ratio in a likelihood ratio list 60 .
- the compound finder 53 identifies those unique n-grams having a highest likelihood of being compounds and generates a compounds list 37 .
- An iterator 56 repetitively executes the operations of the n-gram counter 52 and compound finder 53 to progressively identify compounds of varying lengths in the text corpus 36 .
- FIG. 4 is a flow diagram showing a method 70 for identifying compounds through iterative analysis, in accordance with the present invention.
- the method 70 is described as a sequence of process operations or steps, which can be executed, for instance, by the compound engine 34 of FIG. 2 , or equivalent components.
- the method 70 performs two functions: preparing the text corpus 36 and generating the list of compounds 37 . Accordingly, the text corpus 36 is prepared (block 71 ), as further described below with reference to FIG. 5 . Next, compounds are found (block 72 ), as further described below with reference to FIG. 6 . Routine then terminates.
- FIG. 5 is a flow diagram showing the routine 80 for preparing a corpus for use in the method 70 of FIG. 4 .
- the purpose of this routine is to convert the documents 61 in the text corpus 36 into a raw set of individual words, which are stored as one-word tokens in a token vocabulary 57 (shown in FIG. 3 ).
- the routine begins by assembling the text in the individual documents 61 into the text corpus 36 (block 81 ). If required, the text corpus 36 is parsed into individual tokens (block 82 ) by removing white space, punctuations, and formatting artifacts, such as HTML tags and related extraneous data, as is known in the art. Finally, an initial token vocabulary 57 is constructed from words extracted from the text corpus 36 (block 83 ). The routine then returns.
- FIG. 6 is a flow diagram showing the routine 100 for finding compounds for use in the method 70 of FIG. 4 .
- the purpose of this routine is to discover and identify compounds within the text corpus 36 based on evaluation of measures of association for each potential compound.
- the routine analyzes the text corpus 36 in an iterative manner. During each iteration (blocks 103 - 111 ), a set of n-grams of a specified length having the highest likelihood of co-occurrence, that is, of being compounds, are identified. In subsequent iterations (block 111 ), the length of the compounds is adjusted to identify further compounds.
- measures of association such as likelihood hypotheses, allows spurious substrings and multiple-token compounds to be avoided, as well as to efficiently store only those n-grams with stronger likelihoods of co-occurrence.
- the routine begins by initially identifying an initial length for compounds and, in one embodiment, an upper limit on the number of compounds desired (blocks 101 and 102 , respectively).
- the length of the compounds changes during subsequent iterations (block 111 ).
- the upper limit functions as a quality filter that limits the potential compounds to a fixed number of candidates preferably having the highest likelihood of being compounds.
- the n-grams occurring in the text corpus 36 are identified and counted (block 103 ), as further described below with reference to FIG. 7 .
- the counting of n-grams generates the list of n-gram counts 58 and the list of unique n-grams 59 .
- One or more of the n-grams of the specified length of compounds are selected from the list of unique n-grams 59 (block 104 ). Note that the entire set of n-grams of the specified length need not be selected. For example, n-grams appearing in a list of known compounds, such as city names, could be skipped for efficiency. For each of the one or more selected n-grams (block 105 ) for which a compound determination is desired, the likelihood of the selected n-gram being a compound is determined (block 106 ). Likelihood determination may then continue with each of the remaining selected n-grams (block 107 ).
- the likelihood of a selected n-gram being a compound is determined using a measure of association, known as the likelihood ratio method, as described in T. Dunning, “Accurate Methods for the Statistics of Surprise and Coincidence,” Comp. Ling ., Vol. 19, No. 1, pp. 61-74 (1993), the disclosure of which is incorporated by reference.
- Each selected n-gram is assigned a score equal to the likelihood of the observed text corpus under the assumption that the n-gram is a compound, divided by the likelihood of the observed text corpus under the assumption that the n-gram is not a compound, as expressed as equation (1):
- ⁇ (S) will be the greatest likelihood ratio found by considering all possible ways to split the n-token sequence into two contiguous parts.
- the n-token sequences S are sorted by ⁇ (S) and designated the K n sequences with the lowest ⁇ (S) values as collocations.
- the collocation hypothesis L(H c ) can be computed, as expressed as equation (4):
- n-grams of the specified length are selected (block 108 ) and added as compound tokens to the token vocabulary 57 (block 109 ).
- the token vocabulary 57 is reconstructed (block 110 ) using the newly-added tokens in the token vocabulary 57 .
- constituent tokens, which occur in each newly-added token are removed from the token vocabulary 57 and the newly-added tokens are subsequently treated as one unit in the text corpus 36 . For example, each occurrence of the words “San” and “Francisco” will subsequently be treated as a single compound token “San Francisco.” If further iterations are required (block 111 ), the length of the compounds is adjusted (block 112 ).
- long compounds are identified during the first iteration and progressively shorter compounds are identified in subsequent iterations.
- Each subsequent iteration begins with the identification and recounting of the n-grams occurring in the text corpus 36 (block 103 ). The n-grams must be recounted to account for those compound tokens newly-added and constituent tokens newly-removed from the token vocabulary 57 during the previous iteration.
- the routine Upon completion of the iterations, the routine returns.
- FIG. 7 is a flow diagram showing the routine 120 for counting n-grams for use in the routine 100 of FIG. 6 .
- the purpose of this routine is to generate the list of unique n-grams 59 and list of n-gram counts 58 .
- the maximum n-gram length is identified (block 121 ).
- the maximum n-gram length will equal the current compounds length used in the routine to find compounds 100 .
- the unique n-grams having a number of tokens equal to the maximum n-gram length are selected (block 122 ).
- the number of occurrences of each unique n-gram of that length is counted against the token vocabulary 57 (block 124 ). Counting continues for each subsequent n-gram length (block 125 ), after which the routine returns.
Abstract
Description
where L(Hi) is the likelihood of observing the data Hi under an independence hypothesis and L(Hc) is the likelihood of observing the data Hc under a collocation hypothesis. Assuming a binomial distribution applies, the independence hypothesis can be expressed as equation (2):
P(t 2 |t 1)=P(t 2|
where t1 and t2 are a pair of tokens in the selected n-gram. Similarly, the collocation hypothesis can be expressed as equation (3):
P(t 2 |t 1)>P(t 2|
where t1 and t2 are a pair of tokens in the selected n-gram.
Finally, the score λ is calculated by solving for L(Hi) and L(Hc). Other equations, methods and processes for determining measures of association are visible, as would be recognized by one skilled in the art.
Claims (15)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/647,203 US7555428B1 (en) | 2003-08-21 | 2003-08-21 | System and method for identifying compounds through iterative analysis |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/647,203 US7555428B1 (en) | 2003-08-21 | 2003-08-21 | System and method for identifying compounds through iterative analysis |
Publications (1)
Publication Number | Publication Date |
---|---|
US7555428B1 true US7555428B1 (en) | 2009-06-30 |
Family
ID=40793585
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/647,203 Active 2025-03-17 US7555428B1 (en) | 2003-08-21 | 2003-08-21 | System and method for identifying compounds through iterative analysis |
Country Status (1)
Country | Link |
---|---|
US (1) | US7555428B1 (en) |
Cited By (21)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080162118A1 (en) * | 2006-12-15 | 2008-07-03 | International Business Machines Corporation | Technique for Searching Out New Words That Should Be Registered in Dictionary For Speech Processing |
US20080288243A1 (en) * | 2007-05-16 | 2008-11-20 | Kenichiro Kobayashi | Information Processing Apparatus, Informaton Processing Method, Program, and Recording Medium |
US20090006079A1 (en) * | 2007-06-29 | 2009-01-01 | Microsoft Corporation | Regular expression word verification |
US20100138217A1 (en) * | 2008-11-28 | 2010-06-03 | Institute For Information Industry | Method for constructing chinese dictionary and apparatus and storage media using the same |
US20110202330A1 (en) * | 2010-02-12 | 2011-08-18 | Google Inc. | Compound Splitting |
US20110282651A1 (en) * | 2010-05-11 | 2011-11-17 | Microsoft Corporation | Generating snippets based on content features |
US20120078631A1 (en) * | 2010-09-26 | 2012-03-29 | Alibaba Group Holding Limited | Recognition of target words using designated characteristic values |
US8380502B1 (en) | 2001-02-07 | 2013-02-19 | Google Inc. | Voice interface for a search engine |
US20130339000A1 (en) * | 2012-06-19 | 2013-12-19 | Microsoft Corporation | Identifying collocations in a corpus of text in a distributed computing environment |
US20140025373A1 (en) * | 2012-07-18 | 2014-01-23 | International Business Machines Corporation | Fixing Broken Tagged Words |
US20140074455A1 (en) * | 2012-09-10 | 2014-03-13 | Xerox Corporation | Method and system for motif extraction in electronic documents |
US20150135053A1 (en) * | 2013-11-14 | 2015-05-14 | Elsevier B.V. | Computer-Program Products and Methods for Annotating Ambiguous Terms of Electronic Text Documents |
US9069750B2 (en) | 2006-10-10 | 2015-06-30 | Abbyy Infopoisk Llc | Method and system for semantic searching of natural language texts |
US9075864B2 (en) | 2006-10-10 | 2015-07-07 | Abbyy Infopoisk Llc | Method and system for semantic searching using syntactic and semantic analysis |
US9098489B2 (en) | 2006-10-10 | 2015-08-04 | Abbyy Infopoisk Llc | Method and system for semantic searching |
US9189482B2 (en) | 2012-10-10 | 2015-11-17 | Abbyy Infopoisk Llc | Similar document search |
US9495358B2 (en) | 2006-10-10 | 2016-11-15 | Abbyy Infopoisk Llc | Cross-language text clustering |
US9892111B2 (en) | 2006-10-10 | 2018-02-13 | Abbyy Production Llc | Method and device to estimate similarity between documents having multiple segments |
US10706843B1 (en) * | 2017-03-09 | 2020-07-07 | Amazon Technologies, Inc. | Contact resolution for communications systems |
US10713426B2 (en) | 2013-11-14 | 2020-07-14 | Elsevier B.V. | Systems, computer-program products and methods for annotating multiple controlled vocabulary-defined concepts in single noun phrases |
US11341332B2 (en) * | 2019-04-29 | 2022-05-24 | Bae Systems Information And Electronic Systems Integration Inc. | System for automated generation of Q-Codes |
Citations (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JPH08161340A (en) * | 1994-12-12 | 1996-06-21 | Ricoh Co Ltd | Automatic compound word extraction device |
US5842217A (en) * | 1996-12-30 | 1998-11-24 | Intel Corporation | Method for recognizing compound terms in a document |
US5867812A (en) * | 1992-08-14 | 1999-02-02 | Fujitsu Limited | Registration apparatus for compound-word dictionary |
US6173298B1 (en) * | 1996-09-17 | 2001-01-09 | Asap, Ltd. | Method and apparatus for implementing a dynamic collocation dictionary |
US6285999B1 (en) | 1997-01-10 | 2001-09-04 | The Board Of Trustees Of The Leland Stanford Junior University | Method for node ranking in a linked database |
US6349282B1 (en) * | 1999-04-20 | 2002-02-19 | Larnout & Hauspie Speech Products N.V. | Compound words in speech recognition systems |
US6754617B1 (en) * | 2000-07-06 | 2004-06-22 | Hapax Limited | Method for automatically determining solid compound words |
US20070067157A1 (en) * | 2005-09-22 | 2007-03-22 | International Business Machines Corporation | System and method for automatically extracting interesting phrases in a large dynamic corpus |
-
2003
- 2003-08-21 US US10/647,203 patent/US7555428B1/en active Active
Patent Citations (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5867812A (en) * | 1992-08-14 | 1999-02-02 | Fujitsu Limited | Registration apparatus for compound-word dictionary |
JPH08161340A (en) * | 1994-12-12 | 1996-06-21 | Ricoh Co Ltd | Automatic compound word extraction device |
US6173298B1 (en) * | 1996-09-17 | 2001-01-09 | Asap, Ltd. | Method and apparatus for implementing a dynamic collocation dictionary |
US5842217A (en) * | 1996-12-30 | 1998-11-24 | Intel Corporation | Method for recognizing compound terms in a document |
US6285999B1 (en) | 1997-01-10 | 2001-09-04 | The Board Of Trustees Of The Leland Stanford Junior University | Method for node ranking in a linked database |
US6349282B1 (en) * | 1999-04-20 | 2002-02-19 | Larnout & Hauspie Speech Products N.V. | Compound words in speech recognition systems |
US6754617B1 (en) * | 2000-07-06 | 2004-06-22 | Hapax Limited | Method for automatically determining solid compound words |
US20070067157A1 (en) * | 2005-09-22 | 2007-03-22 | International Business Machines Corporation | System and method for automatically extracting interesting phrases in a large dynamic corpus |
Non-Patent Citations (9)
Title |
---|
C.D. Manning and H. Schutze, "Foundations Of Statistical Natural Languages Processing," Ch. 5, MIT Press (1999). |
Frantzi, K. T. and Ananiadou, S. 1996. Extracting nested collocations. In Proceedings of the 16th Conference on Computational Linguistics-vol. 1 ( Copenhagen, Denmark, Aug. 5-9, 1996). International Conference On Computational Linguistics. Association for Computational Linguistics, Morristown, NJ 41-46. DOI=http://dx.doi.org/10.3115/9926. * |
Gao, J., Goodman, J., Li, M., and Lee, K. 2002. Toward a unified approach to statistical language modeling for chinese. ACM Transactions on Asian Language Information Processing (TALIP) 1, 1 (Mar. 2002), 3-33. DOI=http://doi.acm.org/10.1145/595576.595578. * |
Jurafsky, D., et al. (2000). Backoff. Speech and Language Processing.: An Introduction to Natural Language Processing, Computational Linguistics, and Speech Recognition. Pearson Hall Jerse, pp. 216-217. * |
Seretan V., Neriman, L. and Wehrli, E. 2003. Extraction of Multi-Word Collocations Using Syntactic Bigram Composition. In Proceedings of the International Conference on Recent Advances in NLP (RANLP-2003), Borovets, Bulgaria, pp. 131-138. * |
Smadja, F. 1993. Retrieving collocations from text: Xtract. Comput. Linguist. 19, 1 (Mar. 1993), 143-177. * |
Su. K., Wu, M,. and Chang, J. 1994. A Corpus-based approach to automatic compound extraction. In Proceedings of the 32nd Annual Meeting on Association For Computational Linguistics (Las Cruces, New Mexico, Jun. 27-30, 1994). Annual Meeting of the ACL. Association for Computational Linguistics, Morristown, NJ, 242-247. * |
T. Dunning, "Accurate Methods For The Statistics Of Surprise And Coincidence," Comp. Ling., vol. 19, No. 1, pp. 61-74 (1993). |
Venkataraman, A. 2001. A statistical model for word discovery in transcribed speech. Comput. Linguist. 27, 3 (Sep. 2001), 352-372. * |
Cited By (37)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8768700B1 (en) | 2001-02-07 | 2014-07-01 | Google Inc. | Voice search engine interface for scoring search hypotheses |
US8380502B1 (en) | 2001-02-07 | 2013-02-19 | Google Inc. | Voice interface for a search engine |
US8515752B1 (en) * | 2001-02-07 | 2013-08-20 | Google Inc. | Voice interface for a search engine |
US9075864B2 (en) | 2006-10-10 | 2015-07-07 | Abbyy Infopoisk Llc | Method and system for semantic searching using syntactic and semantic analysis |
US9892111B2 (en) | 2006-10-10 | 2018-02-13 | Abbyy Production Llc | Method and device to estimate similarity between documents having multiple segments |
US9069750B2 (en) | 2006-10-10 | 2015-06-30 | Abbyy Infopoisk Llc | Method and system for semantic searching of natural language texts |
US9098489B2 (en) | 2006-10-10 | 2015-08-04 | Abbyy Infopoisk Llc | Method and system for semantic searching |
US9495358B2 (en) | 2006-10-10 | 2016-11-15 | Abbyy Infopoisk Llc | Cross-language text clustering |
US20080162118A1 (en) * | 2006-12-15 | 2008-07-03 | International Business Machines Corporation | Technique for Searching Out New Words That Should Be Registered in Dictionary For Speech Processing |
US8140332B2 (en) * | 2006-12-15 | 2012-03-20 | International Business Machines Corporation | Technique for searching out new words that should be registered in dictionary for speech processing |
US20080288243A1 (en) * | 2007-05-16 | 2008-11-20 | Kenichiro Kobayashi | Information Processing Apparatus, Informaton Processing Method, Program, and Recording Medium |
US8494839B2 (en) * | 2007-05-16 | 2013-07-23 | Sony Corporation | Apparatus, method, and recording medium for morphological analysis and registering a new compound word |
US9336201B2 (en) | 2007-06-29 | 2016-05-10 | Microsoft Technology Licensing, Llc | Regular expression word verification |
US8630841B2 (en) * | 2007-06-29 | 2014-01-14 | Microsoft Corporation | Regular expression word verification |
US20090006079A1 (en) * | 2007-06-29 | 2009-01-01 | Microsoft Corporation | Regular expression word verification |
US8346541B2 (en) * | 2008-11-28 | 2013-01-01 | Institute For Information Industry | Method for constructing Chinese dictionary and apparatus and storage media using the same |
US20100138217A1 (en) * | 2008-11-28 | 2010-06-03 | Institute For Information Industry | Method for constructing chinese dictionary and apparatus and storage media using the same |
US9075792B2 (en) * | 2010-02-12 | 2015-07-07 | Google Inc. | Compound splitting |
US20110202330A1 (en) * | 2010-02-12 | 2011-08-18 | Google Inc. | Compound Splitting |
US8788260B2 (en) * | 2010-05-11 | 2014-07-22 | Microsoft Corporation | Generating snippets based on content features |
US20110282651A1 (en) * | 2010-05-11 | 2011-11-17 | Microsoft Corporation | Generating snippets based on content features |
US8744839B2 (en) * | 2010-09-26 | 2014-06-03 | Alibaba Group Holding Limited | Recognition of target words using designated characteristic values |
US20120078631A1 (en) * | 2010-09-26 | 2012-03-29 | Alibaba Group Holding Limited | Recognition of target words using designated characteristic values |
US20130339000A1 (en) * | 2012-06-19 | 2013-12-19 | Microsoft Corporation | Identifying collocations in a corpus of text in a distributed computing environment |
US9239827B2 (en) * | 2012-06-19 | 2016-01-19 | Microsoft Technology Licensing, Llc | Identifying collocations in a corpus of text in a distributed computing environment |
US20140025368A1 (en) * | 2012-07-18 | 2014-01-23 | International Business Machines Corporation | Fixing Broken Tagged Words |
US20140025373A1 (en) * | 2012-07-18 | 2014-01-23 | International Business Machines Corporation | Fixing Broken Tagged Words |
US20140074455A1 (en) * | 2012-09-10 | 2014-03-13 | Xerox Corporation | Method and system for motif extraction in electronic documents |
US9483463B2 (en) * | 2012-09-10 | 2016-11-01 | Xerox Corporation | Method and system for motif extraction in electronic documents |
US9189482B2 (en) | 2012-10-10 | 2015-11-17 | Abbyy Infopoisk Llc | Similar document search |
US10713426B2 (en) | 2013-11-14 | 2020-07-14 | Elsevier B.V. | Systems, computer-program products and methods for annotating multiple controlled vocabulary-defined concepts in single noun phrases |
US20160378742A1 (en) * | 2013-11-14 | 2016-12-29 | Elsevier B.V. | Computer-program products and methods for annotating ambiguous terms of electronic text documents |
US9460091B2 (en) * | 2013-11-14 | 2016-10-04 | Elsevier B.V. | Computer-program products and methods for annotating ambiguous terms of electronic text documents |
US10289667B2 (en) * | 2013-11-14 | 2019-05-14 | Elsevier B.V. | Computer-program products and methods for annotating ambiguous terms of electronic text documents |
US20150135053A1 (en) * | 2013-11-14 | 2015-05-14 | Elsevier B.V. | Computer-Program Products and Methods for Annotating Ambiguous Terms of Electronic Text Documents |
US10706843B1 (en) * | 2017-03-09 | 2020-07-07 | Amazon Technologies, Inc. | Contact resolution for communications systems |
US11341332B2 (en) * | 2019-04-29 | 2022-05-24 | Bae Systems Information And Electronic Systems Integration Inc. | System for automated generation of Q-Codes |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7555428B1 (en) | System and method for identifying compounds through iterative analysis | |
CN110502621B (en) | Question answering method, question answering device, computer equipment and storage medium | |
US7386438B1 (en) | Identifying language attributes through probabilistic analysis | |
US9043197B1 (en) | Extracting information from unstructured text using generalized extraction patterns | |
KR101098703B1 (en) | System and method for identifying related queries for languages with multiple writing systems | |
Ceri et al. | Web information retrieval | |
US8005858B1 (en) | Method and apparatus to link to a related document | |
US8266121B2 (en) | Identifying related objects using quantum clustering | |
US8543565B2 (en) | System and method using a discriminative learning approach for question answering | |
US7562082B2 (en) | Method and system for detecting user intentions in retrieval of hint sentences | |
US8849787B2 (en) | Two stage search | |
CN110892399A (en) | System and method for automatically generating subject content abstract | |
US20050080780A1 (en) | System and method for processing a query | |
US7822752B2 (en) | Efficient retrieval algorithm by query term discrimination | |
US9754041B2 (en) | Method of automatically constructing content for web sites | |
JP2005526317A (en) | Method and system for automatically searching a concept hierarchy from a document corpus | |
CN108319583B (en) | Method and system for extracting knowledge from Chinese language material library | |
CN109002432B (en) | Synonym mining method and device, computer readable medium and electronic equipment | |
WO2020056977A1 (en) | Knowledge point pushing method and device, and computer readable storage medium | |
CN112989208B (en) | Information recommendation method and device, electronic equipment and storage medium | |
Jain et al. | Context sensitive text summarization using k means clustering algorithm | |
Roy et al. | Discovering and understanding word level user intent in web search queries | |
CN115794995A (en) | Target answer obtaining method and related device, electronic equipment and storage medium | |
CN106372232B (en) | Information mining method and device based on artificial intelligence | |
Croft et al. | Search engines |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:FRANZ, ALEXANDER;MILCH, BRIAN;REEL/FRAME:015864/0480;SIGNING DATES FROM 20040209 TO 20040213 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
CC | Certificate of correction | ||
CC | Certificate of correction | ||
FEPP | Fee payment procedure |
Free format text: PAYER NUMBER DE-ASSIGNED (ORIGINAL EVENT CODE: RMPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYFree format text: PAYOR NUMBER ASSIGNED (ORIGINAL EVENT CODE: ASPN); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0610Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
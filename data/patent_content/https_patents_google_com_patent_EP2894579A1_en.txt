EP2894579A1 - A system and a method for presenting multiple sets of search results for a single query - Google Patents
A system and a method for presenting multiple sets of search results for a single query Download PDFInfo
- Publication number
- EP2894579A1 EP2894579A1 EP15151760.4A EP15151760A EP2894579A1 EP 2894579 A1 EP2894579 A1 EP 2894579A1 EP 15151760 A EP15151760 A EP 15151760A EP 2894579 A1 EP2894579 A1 EP 2894579A1
- Authority
- EP
- European Patent Office
- Prior art keywords
- search results
- search
- client
- user
- list
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Granted
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9538—Presentation of query results
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2457—Query processing with adaptation to user needs
- G06F16/24578—Query processing with adaptation to user needs using ranking
Definitions
- the abovementioned limitation was resolved by search engines supported by website www.metacrawler.com.
- This search engine collates the data extracted from different search engines before passing the data to the client.
- www.metacrawler.com makes use of a number of search engines to obtain results matching the user's keywords. Each search engine comes up with a set of search results. Usually a number of search results are common to two or more sets of search results.
- the search engine supported within www.metacrawler.com identifies these common search results and passes information regarding the common search results only once. This avoids undue multiplicity in the data sent to the client. Thus, the amount of information passed to the client is reduced.
- sites like www.metacrawler.com detect multiplicity by doing a string match on the URLs of the results. This makes these sites computationally intensive and expensive.
- Yet another object of the disclosed invention is to provide a system and a method that controls different search engines to optimize their bandwidth consumption.
- a computer network in accordance with the disclosed invention comprises a Database, a plurality of Ranking Functions and a Search Modulator at the server side and a Visualization Module and a Graphical User Interface (GUI) at the client side.
- GUI Graphical User Interface
- each Ranking Function 107 performs a search on Database 105.
- Database 105 contains documents (sites, medical documents, scientific reports, etc.), metadata about each of these documents and a unique numerical identifier assigned to each document.
- Ranking Functions 107 based on the rules established by them, searches Database 105. After the search has been completed, each Ranking Function 107 comes up with a set of search results.
- a search result comprises the parent link of the documents that satisfies the rules for search and the identifier corresponding to these documents.
- the search may also contain metadata like abstract or title of the document satisfying the search criteria.
- FIG 4 is illustrates the search results of one such web-based search.
- a set of search results 401 and a set of search results 403 are two such examples of a web based search result generated by ranking functions.
- Visualization Module 111 at client 103 stores multiple sets of search results by storing the position vectors, and the comprehensive list of search results and their identifiers. Visualization Module 111 then reads the boundary set by the user. This boundary as described above is the users' requirement for display of search results. The boundary provided by the user may contain a request for a single set of search results, multiple sets of search results or a combination of two or more sets of search results.
- Visualization Module selects the data lying within the boundary set by the user and sends it to GUI 113 for display.
- GUI 113 displays this selected set of search result to the user.
- the user may redefine the boundary.
- steps 215 and 217 are performed again for the new boundary.
- Visualization Module 111 reads this boundary and identifies search results that lie within the redefined boundary. The search results thus identified are then presented through GUI 113.
- presentation of a search results for a boundary is taken care by Visual Module 111 within Client 103.
- no further communication between Client 103 and Server 101 is required.
- for a query only one exchange of data takes place between Server 101 and Client 103.
- An advantage of the disclosed invention is that only one interaction between the server and a client is required to display all search results for a query.
- An advantage of the disclosed invention is that the amount of information that is communicated between the client and the server is consolidated.
- the comprehensive list that is generated prevents more that one copies of a document to be sent to the client. This reduces the usage of bandwidth.
- Another advantage of the disclosed invention is that all ranking functions may reside on a single server. This reduces the bandwidth that is necessary to send queries and results back and forth between multiple third-party ranking functions.
Abstract
Description
- The present invention relates to retrieval of electronic data in a computer network and, in particular, performing integrated data retrieval searches over a plurality of databases.
- A computer network is a network of information sharing devices which comprises a network of computers connected together in a way that lets them share data and other devices (hard drives, printers, CD-ROMs, etc) among each other. Computer networks are typically classified based on the physical area they span; the area that a computer network spans may be a small office, a complete town, or even the entire world. Based on the area spanned by a computer network, these networks can be classified into a Home Area network (HAN), a Local Area Network (LAN), a Wide Area Network (WAN), a Metropolitan Area Network (MAN), and the Internet. The amount of information shared within a computer network depends upon its span and on the amount of data that needs to be shared between the computers (for solving one or more problems).
- In a computer network, a server has applications and data that are usually shared by multiple computer users. Various information-sharing devices request information from the servers. These are often referred to as "clients". Thus, the server determines and provides the data required by the clients. This data may include a huge number of files, documents, audio files, video files, static image files (and pictures), etc. Hence, the servers usually have a large database of multimedia documents and files, and once a client sends a request, the server (or servers) identifies the documents that are requested by a client and sends the appropriate information. Indeed, the identification of relevant documents may require simple or complex computation to be performed by the server before it sends the relevant information to the client.
- As the sharing of data increases over computer networks, finding the right data (that may reside within any given computer network or outside) becomes an important problem. To solve this problem various kinds of search engines have been introduced. These search engines take keywords from a client and return multiple search results that are relevant to those keywords. These keyword searches are often based on certain rules. These rules define algorithms that govern the search that is performed over different websites and/or web pages (herein after referred to as sites). For example, these algorithms can define a lower limit on the frequency of occurrence of a keyword in the searched site. Thus, sites in which the frequency of occurrence of the keyword is above the lower limit are treated as a set of "search results".
- In addition to the abovementioned example, a complex algorithm has been discussed in
US Patent Number 6,289,342 , titled "Autonomous Citation Indexing And Literature Browsing Using Citation Context". This patent is assigned to NEC Research Institute, Inc. (Princeton, New Jersey) and it relates to context based document search in hyperlinked environments. - Since every search engine is based upon a particular set of rules, it may or may not yield the best results for every search that may be requested by the client. Hence, the client may have to use more than one search engine, and hence may have to go from one searching sites to the next. (For example, if the search engine provided by Google, of Mountain View, California, does not provide the results as desired by the user for a given search, the user may have to use the search engine provided by Altavista, of Palo Alto, California). In fact, most of the time, the client and its human user does not even know whether a given search engine provided good results. Hence, the user may end up performing search on more than one search engines in order to obtain accurate information (and then collating the data and figuring out the "good search results" from "not so good search results").
- Websites like www.webcrawler.com host search engines that provide a user with an option of using multiple search engines simultaneously. These sites take a keyword from the user and perform search using multiple search engines. The search results from these search engines are then gathered and displayed to the user. Since these sites make use of multiple search engines, the results provided to the user are usually more exhaustive. For each search result, the server passes an "Identification tag" called the Uniform Resource Locator (URL) to the client. A URL can be defined as a syntax and semantics of formalized information for location and access of resources on the Internet. If the user clicks on the URL provided by the search engine then the user is connected to that web-site or that web page. Thus, the server transfers URLs corresponding to each search result and these URLs are used by the client to access the corresponding site. The transfer of a number of URLs from multiple search engines makes the data to be transferred to the client large. Transfer of this large amount of data between the server and the client of www.webcrawler.com consumes a lot of bandwidth. This is particularly true when the client is a portable device whose bandwidth is limited.
- The abovementioned limitation was resolved by search engines supported by website www.metacrawler.com. This search engine collates the data extracted from different search engines before passing the data to the client. For example, www.metacrawler.com makes use of a number of search engines to obtain results matching the user's keywords. Each search engine comes up with a set of search results. Usually a number of search results are common to two or more sets of search results. The search engine supported within www.metacrawler.com identifies these common search results and passes information regarding the common search results only once. This avoids undue multiplicity in the data sent to the client. Thus, the amount of information passed to the client is reduced. However, sites like www.metacrawler.com detect multiplicity by doing a string match on the URLs of the results. This makes these sites computationally intensive and expensive.
- Moreover, these sites make use of search engines provided by third parties like Google, AltaVista, etc. These sites have no control over the operation of these search engines. These search engines perform their search independent of each other. These search engines perform a search and send the search results in an unregulated manner. Hence, these sites (that support multiple search engines) often end up overconsuming the bandwidth allocated. This may often lead to delay in the display of information at the user end.
- Along with the aforementioned limitations, sites that host multiple searches display only a limited set of search results. For accessing more information related to that search (or for accessing more information from a given search engine), a new request is sent to the server. Thus, for obtaining results for a query, multiple requests for the same query are sent to the server. Therefore, whenever a user asks for such request the server and the communication link established between the server and the client may be substantially burdened (both in terms of communication bandwidth and in terms of computation).
- As mentioned above sites like www.dogpile.com and www.metacrawler.com passes the URLs of the search results to the client. This consumes a lot of bandwidth. An approach mentioned in United States Patent Number
6,263,330 , Titled "Method And Apparatus For The Management Of Data Files", reduces the abovementioned overload. The approach assigns pointers to the URLs that are retrieved from appropriate medical information servers. The data that is transferred to the client is an index file that stores pointers to the URLs retrieved and a corresponding map. This map links the pointers to their corresponding URLs. Hence, for each search engine the results are displayed using the pointers and the map. However, this approach reduces the data to be transferred in case of usage of multiple search engines. In case of a single search engine, the approach ends up sending more data. However, there is a further scope of reducing the amount of data transferred in case of multiple search engines. - All search engines present in the prior art are limited by one or more of the limitations mentioned above. Hence, there is a need for a system that minimizes the amount of information transferred between the server and the client for providing multiple sets of search results from different search engines. Also, there is a need for a system that reduces the burden of requests on the server, i.e., a system that limits the communication established between a client and the server. Also, a need exists for optimizing the bandwidth used during the search by controlling different search engines that may be used.
- An object of the disclosed invention is to provide a system and a method for managing multiple sets of search results for a user query.
- Another object of the disclosed invention is to provide a system and a method that presents multiple search results for a user query by a single interaction between a server and a client.
- Another object of the disclosed invention is to provide a system and a method that reduces the amount of data that is passed between a server and a client.
- Yet another object of the disclosed invention is to provide a system and a method that controls different search engines to optimize their bandwidth consumption.
- A computer network in accordance with the disclosed invention comprises a Database, a plurality of Ranking Functions and a Search Modulator at the server side and a Visualization Module and a Graphical User Interface (GUI) at the client side.
- The Database stores a number of documents (which may be web pages, medical documents, scientific reports, etc.), metadata about each document (such as title, abstract and URL) and a unique identifier for each document. The unique identifiers are integers used to identify documents in the database. A Ranking Function performs search on the Database to come up with a set of search results for a user query. The search results thus obtained are then ranked in the order of relevance. The step of ranking is performed by the corresponding Ranking Function. Outputs of the Ranking Functions are passed to the Search Modulator. The Search Modulator then consolidates the search results across these multiple sets of search results to generate a comprehensive list of search results and their respective identifiers. The consolidated search results are then passed to the Visualization Module on the client side.
- The Visualization Module stores the consolidated search results. In addition, the Visualization Module selects the search results that lie in the user defined boundary and passes them to the GUI. The GUI then presents these results to the user. The user defines the boundary using the GUI. For the consolidated search results stored at the Visualization Module, the user may define the boundary a number of times. Each time, the Visualization Module identifies the search results corresponding to the boundary and passes them to the GUI for display.
- The preferred embodiments of the invention will hereinafter be described in conjunction with the appended drawings provided to illustrate and not to limit the invention, wherein like designations denote like elements, and in which:
-
FIG. 1 illustrates the elements present at the server end and at the client end in a computer network in accordance with the present invention; -
FIG. 2 is a flowchart that illustrates the steps involved in performing integrated data retrieval searches for a user query in accordance with the present invention; -
FIG. 3 illustrates the information and way this information related to different documents is stored in a Database; -
FIG. 4 illustrates the functioning of a Search Modulator; -
FIG. 5 is a snapshot of a Graphical User Interface that displays search results for a user query and a user defined boundary; and -
FIG. 6 is a snapshot of a Graphical User Interface that displays search results for the user query ofFIG. 5 and a redefined boundary; and -
FIG. 7 is a snapshot of a Graphical User Interface that displays a combination of search results obtained by two Ranking Functions. - The disclosed invention relates to a system and a method that manages a user query by a single interaction between a server and a client. The server performs multiple searches for a user query and generates multiple sets of search results. These multiple sets of search results are consolidated at the server and then passed to the client hosting the query. The client then stores the multiple sets of consolidated search results. The stored consolidated search results are thereafter presented to the user. The presentation of the search results is governed by a boundary defined by the user. This boundary defines the portions of the search results that the user wants to view. For a stored consolidated search result set, the user may define the boundary multiple times. Each time the user defines a boundary, the portion of the search results that lies within the boundary are presented to the user. Thus, for a query, the user may make multiple requests for presentation of search results. Since consolidated search results are stored at the client, these requests are managed at the client end only and no interaction with the server is required.
-
FIG. 1 illustrates the elements present at the server end and the client end in acomputer network 100 in accordance with the present invention.Computer network 100 can be an intranet or the Internet.Computer network 100 comprises aServer 101 and a plurality ofClients 103.Server 101 comprises aDatabase 105, a plurality of Ranking Functions 107 and aSearch Modulator 109.Database 105 stores documents (which may be sites, medical documents, scientific reports etc.), metadata about each document (such as title, abstract and URL) and a unique numerical identifier for each document. The unique numerical identifiers are preferably integers and are used to identify documents in the database. These numerical identifiers are used to identify documents instead of URLs (as used in the prior art). While the identifiers don't need to be integers, they can be doubles, however, integers use less space. - There are two advantages associated with using numerical identifiers (integers). Firstly, a unique numerical ID for a document takes far less space than the actual document itself or the URL of the document. Secondly, comparing two identifiers (integers) is far easier than comparing two documents. So, it can be easily identified that two search results refer to the same document by simply comparing their IDs, rather than their titles or URLs. Each
Ranking Function 107 performs search onDatabase 105 to come up with a set of search results. EachRanking Function 107 then ranks the search results in an order of relevance.Search Modulator 109 consolidates search results across the multiple sets of search results to generate a comprehensive list of search result and their identifiers. This reduces the amount of data to be passed toclient 103. -
Client 103 comprises aVisualization Module 111 and a Graphical User Interface (GUI) 113.Visualization Module 111 stores and sends the multiple sets of search results, corresponding to a user-defined boundary, toGUI 113.GUI 113 presents the search results to the user.GUI 113 presents the search results based on the boundary set by the user. - The steps involved in managing a user query can be explained by means of the flowchart in
FIG. 2 . The method starts atstep 201 with a user entering a query and defining aboundary using GUI 113. The query entered by the user may be a keyword or a combination of keywords.GUI 113 provides a user with an option to set the boundary for the search. This boundary provided by the user defines the portion of search results to be displayed. Thus, by defining a boundary the user has an option to view a single set of search results, multiple sets of search results or a combination of multiple sets of search results. - In
step 203, the keyword(s) is passed to eachRanking Function 107 atServer 101. EachRanking Function 107 then sets a plurality of rules for the search. These rules are guidelines that govern the way a search is conducted inDatabase 105. Each rule has its own guideline that defines the way a search is conducted. For example, a rule might count the number of times a keyword occurs in the searched documents. Another example, a rule might link another keyword to the searched keyword and look for the combination in the searched documents. Several such rules are known in the art. - In
step 205, based on these rules, eachRanking Function 107 performs a search onDatabase 105.Database 105 contains documents (sites, medical documents, scientific reports, etc.), metadata about each of these documents and a unique numerical identifier assigned to each document. Ranking Functions 107, based on the rules established by them, searchesDatabase 105. After the search has been completed, eachRanking Function 107 comes up with a set of search results. A search result comprises the parent link of the documents that satisfies the rules for search and the identifier corresponding to these documents. The search may also contain metadata like abstract or title of the document satisfying the search criteria.FIG 4 is illustrates the search results of one such web-based search. A set ofsearch results 401 and a set ofsearch results 403 are two such examples of a web based search result generated by ranking functions. - After multiple sets of search results are obtained, each Ranking Function ranks the search results present in a set (at step 207). These search results are ranked according to a ranking algorithm. The search results are ranked in the order they satisfy the rules set for the search. So, a document satisfying the guidelines set by a rule to a larger extent will be ranked higher than the documents satisfying the guidelines less. For example, for a rule that relates to frequency of occurrence of a keyword in a document, a document with higher frequency would be ranked higher. At
step 209, position vectors are generated for eachRanking Function 107. These position vectors store identifiers of the search results. These position vectors store the identifiers in the order of their rank. An example of a position vector is shown inFIG. 4 . At this step, the system may optionally generate a ranking list for the documents searched. This list stores quantifiable scores of searched documents with respect to their satisfying the guidelines for search. For example, consider a position vector [3128, 1655, 5, 16] associated with a ranking function. As already discussed, the identifiers are ordered in a position vector according to their rank. Consider a case where the document with identifier 3128 has a score of 0.94, document with identifier 1655 has a score of 0.8 and documents with identifiers 5 and 16 have scores of 0.3 and 0.1 respectively. Thus, the ranking list corresponding to position vector can be represented as [0.94, 0.8, 0.3, 0.1]. - At
step 211,Search Modulator 109 consolidates the search results across multiple sets of search results.Search Modulator 109 creates a comprehensive list of documents searched and their identifiers. At this step, common search results across different sets of search results are identified and a comprehensive list of the search results is generated. This list contains a single entry corresponding to a search result. This prevents multiple copies of a document to be sent to the client. Hence, reducing the amount of data that is sent to the client.Search Modulator 109 then sends the consolidated list toVisualization Module 111. Step 211 as performed bySearch Modulator 109 is further described with the help of an example with reference toFIG. 4 . The example illustrates a consolidated list of thesites 405 being generated bySearch Modulator 109 from the set ofsearch sites 401 and set of searchedsites 403. - At
step 213,Visualization Module 111 atclient 103 stores multiple sets of search results by storing the position vectors, and the comprehensive list of search results and their identifiers.Visualization Module 111 then reads the boundary set by the user. This boundary as described above is the users' requirement for display of search results. The boundary provided by the user may contain a request for a single set of search results, multiple sets of search results or a combination of two or more sets of search results. Atstep 215, Visualization Module then selects the data lying within the boundary set by the user and sends it toGUI 113 for display. Atstep 217,GUI 113 displays this selected set of search result to the user. - In case the user wants to view portions of the search results other than that displayed for a boundary, the user may redefine the boundary. In such a case steps 215 and 217 are performed again for the new boundary.
Visualization Module 111 reads this boundary and identifies search results that lie within the redefined boundary. The search results thus identified are then presented throughGUI 113. Thus, presentation of a search results for a boundary is taken care byVisual Module 111 withinClient 103. Thus, no further communication betweenClient 103 andServer 101 is required. As a result, for a query only one exchange of data takes place betweenServer 101 andClient 103. -
FIG. 3 is an exemplary illustration of the way the data is stored inDatabase 105.Database 105 stores the identifiers linked to a document and the document itself. For instance, site www.aol.com is linked toidentifier 122 and site www.chat.yahoo.com is linked toidentifier 135. In addition tosites Database 105 may be used to store medical documents, legal files or any other data that is to be shared overcomputer network 100.Database 105 may also contain metadata related to a document. This metadata may store additional information like titles, abstract of documents etc. Documents, additional information related to them and their identifiers may be stored in a flat file database, an inverted index, a relational database or any other database known in the art. In addition,Database 105 is periodically updated.Database 105 may be updated using crawlers or updated manually. - Each
Ranking Function 107 present inServer 101 performs a search overDatabase 105. Ranking Functions 107 may use crawlers or human-powered search engines for performing searches. EachRanking Function 107 defines a set of rules based on which search is performed overDatabase 105. EachRanking Function 107 then ranks the search results. The search results are ranked in the order they satisfy the rules set for the search. So, a searched document satisfying the guidelines set by a rule to a larger extent will be ranked higher than the document satisfying the guidelines less. For example, a Ranking Function may rank documents based on the number of times a keyword exists in the document. In another example, a Ranking Function may rank documents based on the prominence of the keyword in the page (e.g., if the keyword occurs in the title, a document is ranked higher than if a keyword occurs only in the main text). EachRanking Function 107 returns an ordered set of search results. These results are encoded as a position vector that stores the identifiers to the search results in the set. Each position vector corresponds to a set of search results generated byRanking Function 107. An example of a position vector for a set of search results is shown inFIG. 4 . The position vector for set ofsearch result 401 is aposition vector 407 and the position vector for set ofsearch result 403 is aposition vector 409. EachRanking Function 107 then sends this set of search results and position vector toSearch Modulator 109. -
Search Modulator 109 consolidates the search results across multiple sets of search results.Search Modulator 109 consolidates the multiple sets of search results to generate a comprehensive list of search results. Each search result that exists in more than one set of search results is consolidated to a single entry in the comprehensive list. The working ofSearch Modulator 109 has been illustrated inFIG. 4 . - Referring to
FIG. 4 , an example of input and corresponding output is shown forSearch Modulator 109. It has been assumed that there are only two sets of search results as input toSearch Modulator 109 for the keyword "messenger". A set ofsearch results 401 contains ranked sites 123- www.aol.com, 135-www.chat.yahoo.com, 149-www.msn.com/download/ and 161-www.indiatimes.com/1.jpg. Another set ofsearch result 403 contains sites 122-www.aol.com/download, 135-www.chat.yahoo.com, 148-www.msn.com/download/messenger and 162-www.indiatimes.com/2.jpg. Along with set ofsearch results 401, acorresponding position vector 407 is input toSearch Modulator 109. Similarly, along with set ofsearch results 403, acorresponding position vector 409 is input toSearch Modulator 109.Search Modulator 109 identifies the sites being listed in more than one set of search results, in this case, www.chat.yahoo.com and www.msn.com/download.Search Modulator 109 finally prepares a comprehensive list of all search results 405. Comprehensive list of allsearch results 405 has a single entry for each search result. Comprehensive list of allsearch results 405 and the position vectors are then passed toVisualization Module 111. Data required to capture the consolidated search results is much less as compared to the amount of data required to capture each set of search results separately. Thus,Server 101 transfers entire search results toClient 103 using lesser information. Therefore, bandwidth consumption is optimized. -
Visualization Module 111 atclient 103 receives and stores the comprehensive list of search results.Visualization Module 111 may be implemented in any client-side programming language, such as JavaScript.Visualization Module 111 identifies the user-defined boundary and presents the desired sets of search results. For example, as presented inFIG. 4 , in the consolidated result, there are two position vectors 411 and 413 corresponding to sets ofsearch results search results 401, thenVisualization Module 111 will only pass position vector 411 with comprehensive list ofsearch results 405 toGUI 113 for presentation. -
GUI 113 displays the search result provided byVisualization Module 111.FIG. 5 is a snapshot ofGUI 113 that illustrates the search results according to a user-defined boundary.GUI 113 also takes input for a user-defined boundary. The input can be taken in two possible ways, as defined inFIG. 5 (andFIG. 6 ) andFIG. 7 .FIG. 5 illustrates the presentation of the search results corresponding to Ranking Function atnumber 1. Here, the user inputs a query 'museum' in afield 501 and defines a boundary by selecting Ranking Function atnumber 1 using aslider 503. The search results for the user query 'museum' corresponding to the Ranking Function atnumber 1 are presented in anarea 505. Similarly,FIG. 6 illustrates the presentation of the search results corresponding to Ranking Function atnumber 10. Here, the user redefines the boundary by selecting Ranking Function atnumber 10 usingslider 503. The search results corresponding to Ranking Function atnumber 10 are presented inarea 505. -
FIG. 7 illustrates a user preference for the display of results of a combination of Ranking Functions. The user defines the boundary for the display of the combination of Ranking Functions by using aslider 701. In case of such a boundary,Visualization Module 111 first normalizes the ranking of search results of different Ranking Functions to bring them to a common ranking platform.Visualization Module 113 may use any normalization tool known in the art to normalize rankings of search results of different ranking functions. As an example, a normalization tool may relate to assigning weights to different ranking functions. These weights are user to normalize the ranking lists across all ranking functions. A ranking list quantifies the ranks of search results for a set of search results. The normalized ranking lists are then used to rank individual search results across all sets of search results. These re-ranked results are then presented to the user requesting results of a combination of Ranking Functions. - An advantage of the disclosed invention is that only one interaction between the server and a client is required to display all search results for a query.
- An advantage of the disclosed invention is that the amount of information that is communicated between the client and the server is consolidated. The comprehensive list that is generated prevents more that one copies of a document to be sent to the client. This reduces the usage of bandwidth.
- Another advantage of the disclosed invention is that all ranking functions may reside on a single server. This reduces the bandwidth that is necessary to send queries and results back and forth between multiple third-party ranking functions.
- Yet another advantage of the disclosed invention is that the use of an identifier (unique numerical ID) with every document makes the invention computationally less complex as compared to the prior art. A unique numerical ID for a document takes far less space than the actual document and than the URL of the document. Also, while consolidating the search results, comparing two numbers is far easier than comparing two documents. The comprehensive list of search results is a map from integers to URLs and/or titles of the documents. From
server 101, the identifiers as well as the URLs (and/or titles) are passed toclient 103. A key concept is that the URLs are only passed over once (in the comprehensive list), even if they occur in multiple sets of search results. - The system, as described in the disclosed method, or any of its components may be embodied in the form of a processing machine. Typical examples of a processing machine include a general-purpose computer, a programmed microprocessor, a micro-controller, a peripheral integrated circuit element, and other devices or arrangements of devices, which are capable of implementing the steps that constitute the disclosed method.
- The processing machine executes a set of instructions that are stored in one or more storage elements, in order to process input data. The storage elements may also hold data or other information as desired. The storage element may be in the form of a database or a physical memory element present in the processing machine.
- The set of instructions may include various instructions that instruct the processing machine to perform specific tasks such as the steps that constitute the disclosed method. The set of instructions may be in the form of a program or software. The software may be in various forms such as system software or application software. Further, the software might be in the form of a collection of separate programs, a program module with a larger program or a portion of a program module. The software might also include modular programming in the form of object-oriented programming. The processing of input data by the processing machine may be in response to user commands, or in response to results of previous processing or in response to a request made by another processing machine.
- A person skilled in the art can appreciate that it is not necessary that the various processing machines and/or storage elements be physically located in the same geographical location. The processing machines and/or storage elements may be located in geographically distinct locations and connected to each other to enable communication. Various communication technologies may be used to enable communication between the processing machines and/or storage elements. Such technologies include connection of the processing machines and/or storage elements, in the form of a network. The network can be an intranet, an extranet, the Internet or any client server models that enable communication. Such communication technologies may use various protocols such as TCP/IP, UDP, ATM or OSI.
- While the preferred embodiments of the invention have been illustrated and described, it will be clear that the invention is not limited to these embodiments only. Numerous modifications, changes, variations, substitutions and equivalents will be apparent to those skilled in the art without departing from the spirit and scope of the invention as described in the claims.
- Although the present invention is defined in the attached claims, it is to be understood that the invention can alternatively also be defined in accordance with the following embodiments:
-
- 1 A method of managing a user query using a single transaction between a server and a client, the method comprising:
- a. obtaining the query and the boundary for a search, the boundary defining the search results that are displayed at a time;
- b. obtaining multiple sets of search results, each search result comprising an identifier, the identifier being a pointer to a document, the document matching the user query;
- c. consolidating the multiple sets of search results at the server by generating a comprehensive list containing a single entry for each search result;
- d. delivering the consolidated multiple sets of the search results to the client;
- e. storing the consolidated multiple sets of the search results at the client; and
- f. handling a request for display of search results, the handling of the request being performed at the client.
- 2. The method as recited in
embodiment 1 wherein obtaining the multiple sets of search results comprises:- a. performing a plurality of searches, each search defining a set of rules for producing a set of search results, a search result being a document that matches the user query;
- b. ranking the documents present in each set of search results; and
- c. ordering the identifiers of a set of a search results in a position vector, the identifiers being ordered according to the ranks assigned to their respective documents.
- 3. The method as recited in
embodiment 2 wherein obtaining the multiple sets of search results further comprises computing a ranking list for each set of search results by assigning a score to each document, the score being a measure of the extent the document satisfies the set of rules defined for the search. - 4. The method as recited in
embodiment 1 wherein handling a request for multiple sets of search results comprises presenting the search results lying within the boundary defined by the user. - 5. The method as recited in
embodiment 1 wherein the identifier comprises a number. - 6. The method as recited in embodiment 5 wherein the number is an integer.
- 7. The method as recited in
embodiment 1 wherein the step of handling a request for multiple sets of search results further comprises:- a. redefining the boundary for the query;
- b. presenting the search results according to the boundary; and performing steps a to b the number of times the user defines the boundary for search results to be displayed.
- 8. A system for managing a user query using a single transaction between a server and a client, the system comprising:
- a. a database for storing data to be used for obtaining search results for the user query, the database being maintained at the server, the database comprising;
- i. a plurality of documents;
- ii. a plurality of identifiers, each identifier being a number pointing towards a document; and
- iii. metadata corresponding to each document, the meta data comprising title, abstract and URL of the document.
- b. a plurality of ranking functions located at the server, each ranking function performing a rule based search for generating a set of search results and generating a position vector for the set of search results, the position vector storing the identifiers in an order of the ranks of the corresponding documents;
- c. a search modulator for consolidating the multiple sets of search results, the search modulator being located at the server;
- d. a visualization module for storing consolidated multiple sets of search results and presenting the search results lying within the boundary defined by the user, the visualization module being located at the client; and
- e. a Graphical User Interface (GUI) for displaying search results to the user, the GUI presenting search results lying within a boundary defined by the user, the GUI being located at the client.
- a. a database for storing data to be used for obtaining search results for the user query, the database being maintained at the server, the database comprising;
- 9. The system as recited in embodiment 8, wherein the GUI comprises:
- a. means for allowing the user to define a boundary for the search results to be presented at a time; and
- b. means for presenting the search results within the boundary defined by the user.
- 10. The system as recited in embodiment 8, wherein the identifier number is an integer.
- 11. A system for managing a user query using a single transaction between a server and a client, the method comprising:
- a. means for obtaining the query and the boundary for a search, the boundary defining the search results that are displayed at a time;
- b. means for obtaining multiple sets of search results, each search result comprising an identifier, the identifier being a pointer to a document, the document matching the user query;
- c. means for consolidating the multiple sets of search results at the server by generating a comprehensive list containing a single entry for each search result;
- d. means for delivering the consolidated multiple sets of the search results to the client;
- e. means for storing the consolidated multiple sets of the search results at the client; and
- f. means for handling a request for display of search results, the handling of the request being performed at the client.
- 12. The system as recited in embodiment 11 wherein the means for obtaining the multiple sets of search results comprises:
- a. means for performing a plurality of searches, each search defining a set of rules for producing a set of search results, a search result being a document that matches the user query;
- b. means for ranking the documents present in each set of search results; and
- c. means for ordering the identifiers of a set of a search results in a position vector, the identifiers being ordered according to the ranks assigned to their respective documents.
- 13. The system as recited in embodiment 12 wherein the means for obtaining the multiple sets of search results further comprises means for computing a ranking list for each set of search results by assigning a score to each document, the score being a measure of the extent the document satisfies the set of rules defined for the search.
- 14. The system as recited in embodiment 11 wherein the means for handling a request for multiple sets of search results comprises means for presenting the search results lying within the boundary defined by the user.
- 15. The system as recited in embodiment 11 wherein the identifier comprises a number.
- 16. The system as recited in embodiment 15 wherein the number is an integer.
- 17. The system as recited in embodiment 11 wherein the means for handling a request for multiple sets of search results further comprises means for:
- a. redefining the boundary for the query;
- b. presenting the search results according to the boundary; and
- A number of implementations have been described. Nevertheless, it will be understood that various modifications may be made without departing from the spirit and scope of the following claims. Accordingly, other implementations are within the scope of the following claims.
Claims (14)
- A method of managing a query using a single interaction between a search engine (101) and a client (103), the method being executed by the client and the method comprising:submitting the query to the search engine;obtaining (205) from the search engine, in response to the query:a list (405) of search results that are included in multiple different sets of search results that have been identified by the search engine as responsive to the query, wherein each search result includes an identifier of a document that is responsive to the query;multiple position vectors (407, 409), each position vector storing the identifiers of the search results in an order of their rank, wherein the rank has been determined by the search engine;storing the list (405) and the multiple position vectors (407, 409);receiving a user-selected boundary, which identifies a particular set of the multiple sets of search results, andin response to the receiving of the user-selected boundary, providing for display one or more search results of the particular set of search results of the list ordered according to the order of the identifiers specified by the position vector that corresponds to the particular set.
- The method according to claim 1, wherein each search result that exists in more than one set of search results is consolidated to a single entry in the list (205).
- The method according to claim 1 or 2, wherein the identifier comprises a number.
- The method according to claim 3 wherein the number is an integer.
- The method according to any one of claims 1 to 4, further comprising:receiving, by the client, a redefined user-selected boundary which identifies one or more different sets of the multiple sets of search results and providing for display (111, 113, 215, 217) one or more search results of the different set of search results of the list ordered according to the order of the identifiers specified by the position vector that corresponds to the one or more different sets.
- The method according to any one of claims 1 to 5, wherein receiving from the search engine a list of search results and multiple position vectors comprises receiving from the search engine, in a single client-search engine interaction, the list of search results and the multiple position vectors.
- The method according to any one of claims 1 to 6, wherein providing one or more search results of the particular set comprises:identifying the position vector corresponding to the particular set;identifying one or more identifiers in the position vector corresponding to the particular set; andidentifying the one or more search results of the particular set corresponding to the one or more identifiers in the position vector corresponding to the particular set.
- A computer-readable medium comprising instructions, which when executed by one or more computers, cause the one or more computers to execute operations according to the method of any one of claims 1 to 7.
- A system for managing a query using a single interaction between a search engine (101) and a client (103), comprising:one or more servers; anda computer-readable medium comprising instructions, which when executed by the one or more servers, cause the one or more servers to execute operations, the operations comprising:submitting the query to the search engine;obtaining (205) from the search engine, in response to the query:a list (405) of search results that are included in multiple different sets of search results that have been identified by the search engine as responsive to the query, wherein each search result includes an identifier of a document that is responsive to the query;multiple position vectors (407, 409), each position vector storing the identifiers of the search results in an order of their rank, wherein the rank has been determined by the search engine;storing the list (405) and the multiple position vectors (407, 409);receiving a user-selected boundary, which identifies a particular set of the multiple sets of search results, andin response to the receiving of the user-selected boundary, providing for display one or more search results of the particular set of search results of the list ordered according to the order of the identifiers specified by the position vector that corresponds to the particular set.
- The system of claim 9, wherein each search result that exists in more than one set of search results is consolidated to a single entry in the list (205).
- The system according to claim 9 or 10, wherein the identifier comprises a number, wherein the number is an integer.
- The system according to any one of claims 9 to 11, the operations further comprising:providing, to the client, a redefined user-selected boundary which identifies one or more different sets of the multiple sets of search results and providing for display (111, 113, 215, 217) one or more search results of the different set of search results of the list ordered according to the order of the identifiers specified by the position vector that corresponds to the one or more different sets.
- The system according to any one of claims 9 to 12, wherein receiving from the search engine a list of search results and multiple position vectors comprises receiving from the search engine, in a single client-search engine interaction, the list of search results and the multiple position vectors.
- The system according to any one of claims 9 to 13, wherein providing one or more search results of the particular set comprises:identifying the position vector corresponding to the particular set;identifying one or more identifiers in the position vector corresponding to the particular set; andidentifying the one or more search results of the particular set corresponding to the one or more identifiers in the position vector corresponding to the particular set.
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/641,489 US8600963B2 (en) | 2003-08-14 | 2003-08-14 | System and method for presenting multiple sets of search results for a single query |
EP04781341.5A EP1654684B1 (en) | 2003-08-14 | 2004-08-13 | A system and a method for presenting multiple sets of search results for a single query |
PCT/US2004/026631 WO2005017784A1 (en) | 2003-08-14 | 2004-08-13 | A system and a method for presenting multiple sets of search results for a single query |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP04781341.5A Division EP1654684B1 (en) | 2003-08-14 | 2004-08-13 | A system and a method for presenting multiple sets of search results for a single query |
Publications (2)
Publication Number | Publication Date |
---|---|
EP2894579A1 true EP2894579A1 (en) | 2015-07-15 |
EP2894579B1 EP2894579B1 (en) | 2020-02-12 |
Family
ID=34136364
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP15151760.4A Active EP2894579B1 (en) | 2003-08-14 | 2004-08-13 | A system and a method for presenting multiple sets of search results for a single query |
EP04781341.5A Active EP1654684B1 (en) | 2003-08-14 | 2004-08-13 | A system and a method for presenting multiple sets of search results for a single query |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP04781341.5A Active EP1654684B1 (en) | 2003-08-14 | 2004-08-13 | A system and a method for presenting multiple sets of search results for a single query |
Country Status (4)
Country | Link |
---|---|
US (2) | US8600963B2 (en) |
EP (2) | EP2894579B1 (en) |
KR (1) | KR101108329B1 (en) |
WO (1) | WO2005017784A1 (en) |
Families Citing this family (43)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8600963B2 (en) | 2003-08-14 | 2013-12-03 | Google Inc. | System and method for presenting multiple sets of search results for a single query |
US7716223B2 (en) * | 2004-03-29 | 2010-05-11 | Google Inc. | Variable personalization of search results in a search engine |
EP1854287B2 (en) | 2005-03-02 | 2021-03-24 | Rovi Guides, Inc. | Playlists and bookmarks in an interactive media guidance application system |
US20070078833A1 (en) * | 2005-10-03 | 2007-04-05 | Powerreviews, Inc. | System for obtaining reviews using selections created by user base |
US7620651B2 (en) * | 2005-11-15 | 2009-11-17 | Powerreviews, Inc. | System for dynamic product summary based on consumer-contributed keywords |
KR100867081B1 (en) * | 2006-09-14 | 2008-11-04 | 엔에이치엔(주) | Method for making document score using book search and system for executing the method |
US7765195B2 (en) * | 2006-11-07 | 2010-07-27 | Microsoft Corporation | Trimmed and merged search result sets in a versioned data environment |
AU2012202471B2 (en) * | 2006-11-10 | 2015-06-04 | Rovi Guides, Inc. | Systems and Methods for Using Playlists |
US20080115173A1 (en) | 2006-11-10 | 2008-05-15 | Guideworks Llc | Systems and methods for using playlists |
US20080154878A1 (en) * | 2006-12-20 | 2008-06-26 | Rose Daniel E | Diversifying a set of items |
US7505973B2 (en) * | 2007-01-16 | 2009-03-17 | Microsoft Corporation | Efficient paging of search query results |
US8015502B2 (en) * | 2007-05-22 | 2011-09-06 | Yahoo! Inc. | Dynamic layout for a search engine results page on implicit user feedback |
US7853603B2 (en) * | 2007-05-23 | 2010-12-14 | Microsoft Corporation | User-defined relevance ranking for search |
US20080299999A1 (en) * | 2007-06-01 | 2008-12-04 | Kendall Gregory Lockhart | System and method for generating multimedia messages in a mobile device |
US20080319975A1 (en) * | 2007-06-22 | 2008-12-25 | Microsoft Corporation | Exploratory Search Technique |
US20090006358A1 (en) * | 2007-06-27 | 2009-01-01 | Microsoft Corporation | Search results |
US20090006324A1 (en) * | 2007-06-27 | 2009-01-01 | Microsoft Corporation | Multiple monitor/multiple party searches |
US8321444B2 (en) * | 2007-06-29 | 2012-11-27 | Microsoft Corporation | Federated search |
US10289749B2 (en) * | 2007-08-29 | 2019-05-14 | Oath Inc. | Degree of separation for media artifact discovery |
US8185521B2 (en) * | 2008-02-29 | 2012-05-22 | Research In Motion Limited | System and method for presentation of local and remote message search results |
EP2096563A1 (en) * | 2008-02-29 | 2009-09-02 | Research In Motion Limited | System and method for presentation of local and remote message search results |
US20090234913A1 (en) * | 2008-03-13 | 2009-09-17 | John Lee | Data structure for initiating multiple web sites |
US20100153371A1 (en) * | 2008-12-16 | 2010-06-17 | Yahoo! Inc. | Method and apparatus for blending search results |
US8498981B2 (en) * | 2009-03-09 | 2013-07-30 | Apple Inc. | Search capability implementation for a device |
CN101930438B (en) | 2009-06-19 | 2016-08-31 | 阿里巴巴集团控股有限公司 | A kind of Search Results generates method and information search system |
US8533202B2 (en) | 2009-07-07 | 2013-09-10 | Yahoo! Inc. | Entropy-based mixing and personalization |
JP5534266B2 (en) * | 2009-07-22 | 2014-06-25 | ファンデーションアイピー，エルエルシー | Method, system and apparatus for sending query results from electronic document collection |
US8392430B2 (en) * | 2009-09-23 | 2013-03-05 | Microsoft Corp. | Concept-structured image search |
US8504567B2 (en) | 2010-08-23 | 2013-08-06 | Yahoo! Inc. | Automatically constructing titles |
US9240020B2 (en) | 2010-08-24 | 2016-01-19 | Yahoo! Inc. | Method of recommending content via social signals |
US20120072425A1 (en) * | 2010-09-17 | 2012-03-22 | Oracle International Corporation | Customer focused keyword search in an enterprise |
JP5876141B2 (en) * | 2011-04-28 | 2016-03-02 | マイクロソフト テクノロジー ライセンシング，エルエルシー | Alternative market search results toggle |
US9053087B2 (en) * | 2011-09-23 | 2015-06-09 | Microsoft Technology Licensing, Llc | Automatic semantic evaluation of speech recognition results |
ES2723794T3 (en) * | 2012-04-26 | 2019-09-02 | Amadeus Sas | Database system using batch-oriented computing |
US20140280293A1 (en) * | 2013-03-12 | 2014-09-18 | Mckesson Financial Holdings | Method and apparatus for retrieving cached database search results |
CN104598439B (en) * | 2013-10-30 | 2021-03-05 | 阿里巴巴集团控股有限公司 | Method and device for correcting title of information object and method for pushing information object |
CN103914553A (en) * | 2014-04-14 | 2014-07-09 | 百度在线网络技术（北京）有限公司 | Search method and search engine |
KR101618965B1 (en) * | 2014-07-15 | 2016-05-09 | 네이버 주식회사 | Method for offering result of search and system for executing the method |
KR101763013B1 (en) * | 2015-01-09 | 2017-07-31 | 김준모 | Search matching system using keyboard control |
US10474997B2 (en) * | 2015-08-28 | 2019-11-12 | Microsoft Technology Licensing, Llc | Generating popularity scores for keywords |
US10445305B2 (en) * | 2015-08-28 | 2019-10-15 | Microsoft Technology Licensing, Llc | Prioritizing keywords |
US10496662B2 (en) * | 2015-08-28 | 2019-12-03 | Microsoft Technology Licensing, Llc | Generating relevance scores for keywords |
CN115344620B (en) * | 2022-10-19 | 2023-01-06 | 成都中科合迅科技有限公司 | Method for realizing data on-demand synchronization after front-end and back-end separation by user-defined data pool |
Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5886698A (en) * | 1997-04-21 | 1999-03-23 | Sony Corporation | Method for filtering search results with a graphical squeegee |
US6012053A (en) * | 1997-06-23 | 2000-01-04 | Lycos, Inc. | Computer system with user-controlled relevance ranking of search results |
US6263330B1 (en) | 1998-02-24 | 2001-07-17 | Luc Bessette | Method and apparatus for the management of data files |
US6279016B1 (en) * | 1997-09-21 | 2001-08-21 | Microsoft Corporation | Standardized filtering control techniques |
US6289342B1 (en) | 1998-01-05 | 2001-09-11 | Nec Research Institute, Inc. | Autonomous citation indexing and literature browsing using citation context |
US20020099685A1 (en) * | 2001-01-25 | 2002-07-25 | Hitachi, Ltd. | Document retrieval system; method of document retrieval; and search server |
Family Cites Families (26)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5511186A (en) * | 1992-11-18 | 1996-04-23 | Mdl Information Systems, Inc. | System and methods for performing multi-source searches over heterogeneous databases |
US5706497A (en) * | 1994-08-15 | 1998-01-06 | Nec Research Institute, Inc. | Document retrieval using fuzzy-logic inference |
US5642502A (en) * | 1994-12-06 | 1997-06-24 | University Of Central Florida | Method and system for searching for relevant documents from a text database collection, using statistical ranking, relevancy feedback and small pieces of text |
US5704060A (en) * | 1995-05-22 | 1997-12-30 | Del Monte; Michael G. | Text storage and retrieval system and method |
US5826261A (en) * | 1996-05-10 | 1998-10-20 | Spencer; Graham | System and method for querying multiple, distributed databases by selective sharing of local relative significance information for terms related to the query |
US5933822A (en) * | 1997-07-22 | 1999-08-03 | Microsoft Corporation | Apparatus and methods for an information retrieval system that employs natural language processing of search results to improve overall precision |
JP4194680B2 (en) * | 1998-01-30 | 2008-12-10 | 康 清木 | Data processing apparatus and method, and storage medium storing the program |
US6523028B1 (en) * | 1998-12-03 | 2003-02-18 | Lockhead Martin Corporation | Method and system for universal querying of distributed databases |
US6189002B1 (en) * | 1998-12-14 | 2001-02-13 | Dolphin Search | Process and system for retrieval of documents using context-relevant semantic profiles |
US6370527B1 (en) * | 1998-12-29 | 2002-04-09 | At&T Corp. | Method and apparatus for searching distributed networks using a plurality of search devices |
US6601061B1 (en) * | 1999-06-18 | 2003-07-29 | Surfwax, Inc. | Scalable information search and retrieval including use of special purpose searching resources |
US6411724B1 (en) * | 1999-07-02 | 2002-06-25 | Koninklijke Philips Electronics N.V. | Using meta-descriptors to represent multimedia information |
US7181438B1 (en) * | 1999-07-21 | 2007-02-20 | Alberti Anemometer, Llc | Database access system |
US6704729B1 (en) * | 2000-05-19 | 2004-03-09 | Microsoft Corporation | Retrieval of relevant information categories |
WO2002013049A1 (en) * | 2000-08-04 | 2002-02-14 | Infoglide Corporation | System and method for comparing heterogeneous data sources |
US7107263B2 (en) * | 2000-12-08 | 2006-09-12 | Netrics.Com, Inc. | Multistage intelligent database search method |
US20020078045A1 (en) * | 2000-12-14 | 2002-06-20 | Rabindranath Dutta | System, method, and program for ranking search results using user category weighting |
US7961201B1 (en) * | 2000-12-21 | 2011-06-14 | Cognex Corporation | Method and apparatus for producing graphical machine vision content for distribution via a network |
US6990477B2 (en) * | 2001-03-28 | 2006-01-24 | International Business Machines Corporation | Method, system, and program for implementing scrollable cursors in a distributed database system |
US7188106B2 (en) * | 2001-05-01 | 2007-03-06 | International Business Machines Corporation | System and method for aggregating ranking results from various sources to improve the results of web searching |
CA2451208A1 (en) * | 2001-06-21 | 2003-01-03 | Paul P. Vagnozzi | Database indexing method and apparatus |
JP4065936B2 (en) * | 2001-10-09 | 2008-03-26 | 独立行政法人情報通信研究機構 | Language analysis processing system using machine learning method and language omission analysis processing system using machine learning method |
JP2003345810A (en) * | 2002-05-28 | 2003-12-05 | Hitachi Ltd | Method and system for document retrieval and document retrieval result display system |
US20040103087A1 (en) * | 2002-11-25 | 2004-05-27 | Rajat Mukherjee | Method and apparatus for combining multiple search workers |
US7483877B2 (en) * | 2003-04-11 | 2009-01-27 | International Business Machines Corporation | Dynamic comparison of search systems in a controlled environment |
US8600963B2 (en) | 2003-08-14 | 2013-12-03 | Google Inc. | System and method for presenting multiple sets of search results for a single query |
-
2003
- 2003-08-14 US US10/641,489 patent/US8600963B2/en active Active
-
2004
- 2004-08-13 EP EP15151760.4A patent/EP2894579B1/en active Active
- 2004-08-13 EP EP04781341.5A patent/EP1654684B1/en active Active
- 2004-08-13 WO PCT/US2004/026631 patent/WO2005017784A1/en active Application Filing
- 2004-08-13 KR KR1020067002986A patent/KR101108329B1/en active IP Right Grant
-
2013
- 2013-11-12 US US14/078,464 patent/US10185770B2/en not_active Expired - Fee Related
Patent Citations (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5886698A (en) * | 1997-04-21 | 1999-03-23 | Sony Corporation | Method for filtering search results with a graphical squeegee |
US6012053A (en) * | 1997-06-23 | 2000-01-04 | Lycos, Inc. | Computer system with user-controlled relevance ranking of search results |
US6279016B1 (en) * | 1997-09-21 | 2001-08-21 | Microsoft Corporation | Standardized filtering control techniques |
US6289342B1 (en) | 1998-01-05 | 2001-09-11 | Nec Research Institute, Inc. | Autonomous citation indexing and literature browsing using citation context |
US6263330B1 (en) | 1998-02-24 | 2001-07-17 | Luc Bessette | Method and apparatus for the management of data files |
US20020099685A1 (en) * | 2001-01-25 | 2002-07-25 | Hitachi, Ltd. | Document retrieval system; method of document retrieval; and search server |
Also Published As
Publication number | Publication date |
---|---|
EP2894579B1 (en) | 2020-02-12 |
KR20060080579A (en) | 2006-07-10 |
EP1654684A1 (en) | 2006-05-10 |
US8600963B2 (en) | 2013-12-03 |
EP1654684B1 (en) | 2015-01-28 |
WO2005017784A1 (en) | 2005-02-24 |
US20140143226A1 (en) | 2014-05-22 |
KR101108329B1 (en) | 2012-01-25 |
US20050038775A1 (en) | 2005-02-17 |
US10185770B2 (en) | 2019-01-22 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10185770B2 (en) | System and method for presenting multiple sets of search results for a single query | |
US7702681B2 (en) | Query-by-image search and retrieval system | |
EP1358584B1 (en) | An adaptive document ranking method based on user behavior | |
US7979427B2 (en) | Method and system for updating a search engine | |
US6493702B1 (en) | System and method for searching and recommending documents in a collection using share bookmarks | |
US8027974B2 (en) | Method and system for URL autocompletion using ranked results | |
US8442978B2 (en) | Trust propagation through both explicit and implicit social networks | |
US6865568B2 (en) | Method, apparatus, and computer-readable medium for searching and navigating a document database | |
US8849818B1 (en) | Searching via user-specified ratings | |
US7958111B2 (en) | Ranking documents | |
US20090119289A1 (en) | Method and System for Autocompletion Using Ranked Results | |
US20080104042A1 (en) | Personalized Search Using Macros | |
US20070250500A1 (en) | Multi-directional and auto-adaptive relevance and search system and methods thereof | |
US20040210560A1 (en) | Method and system for searching a wide area network | |
JP4445849B2 (en) | File search method, file search device, and file search program | |
WO2000008570A1 (en) | Information access | |
US7496600B2 (en) | System and method for accessing web-based search services | |
ANAGNOSTOPOULOS et al. | A man-machine meta-search interface, for handling multiple query submissions in web search services |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20150120 |
|
AC | Divisional application: reference to earlier application |
Ref document number: 1654684Country of ref document: EPKind code of ref document: P |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HU IE IT LI LU MC NL PL PT RO SE SI SK TR |
|
R17P | Request for examination filed (corrected) |
Effective date: 20160108 |
|
RBV | Designated contracting states (corrected) |
Designated state(s): AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HU IE IT LI LU MC NL PL PT RO SE SI SK TR |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: EXAMINATION IS IN PROGRESS |
|
17Q | First examination report despatched |
Effective date: 20180613 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R079Ref document number: 602004054517Country of ref document: DEFree format text: PREVIOUS MAIN CLASS: G06F0017300000Ipc: G06F0016951000 |
|
GRAP | Despatch of communication of intention to grant a patent |
Free format text: ORIGINAL CODE: EPIDOSNIGR1 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: GRANT OF PATENT IS INTENDED |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: G06F 16/951 20190101AFI20191007BHEPIpc: G06F 16/2457 20190101ALI20191007BHEP |
|
INTG | Intention to grant announced |
Effective date: 20191108 |
|
GRAS | Grant fee paid |
Free format text: ORIGINAL CODE: EPIDOSNIGR3 |
|
GRAA | (expected) grant |
Free format text: ORIGINAL CODE: 0009210 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE PATENT HAS BEEN GRANTED |
|
AC | Divisional application: reference to earlier application |
Ref document number: 1654684Country of ref document: EPKind code of ref document: P |
|
AK | Designated contracting states |
Kind code of ref document: B1Designated state(s): AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HU IE IT LI LU MC NL PL PT RO SE SI SK TR |
|
REG | Reference to a national code |
Ref country code: GBRef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: EP |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: REFRef document number: 1233069Country of ref document: ATKind code of ref document: TEffective date: 20200215 |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R096Ref document number: 602004054517Country of ref document: DE |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: PCARFree format text: NEW ADDRESS: WANNERSTRASSE 9/1, 8045 ZUERICH (CH) |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: FIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200212 |
|
REG | Reference to a national code |
Ref country code: NLRef legal event code: MPEffective date: 20200212 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: BGFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200512Ref country code: GRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200513Ref country code: SEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200212 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: NLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200212 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: CZFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200212Ref country code: PTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200705Ref country code: ESFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200212Ref country code: SKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200212Ref country code: ROFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200212Ref country code: EEFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200212Ref country code: DKFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200212 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R097Ref document number: 602004054517Country of ref document: DE |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: MK05Ref document number: 1233069Country of ref document: ATKind code of ref document: TEffective date: 20200212 |
|
PLBE | No opposition filed within time limit |
Free format text: ORIGINAL CODE: 0009261 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: NO OPPOSITION FILED WITHIN TIME LIMIT |
|
26N | No opposition filed |
Effective date: 20201113 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ATFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200212Ref country code: ITFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200212 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: SIFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200212Ref country code: PLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200212 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: MCFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200212 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LUFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20200813 |
|
REG | Reference to a national code |
Ref country code: BERef legal event code: MMEffective date: 20200831 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: IEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20200813Ref country code: BEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20200831 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: CHPayment date: 20210902Year of fee payment: 18Ref country code: FRPayment date: 20210825Year of fee payment: 18 |
|
PGFP | Annual fee paid to national office [announced via postgrant information from national office to epo] |
Ref country code: DEPayment date: 20210827Year of fee payment: 18Ref country code: GBPayment date: 20210827Year of fee payment: 18 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: TRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200212Ref country code: CYFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20200212 |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R119Ref document number: 602004054517Country of ref document: DE |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: PL |
|
GBPC | Gb: european patent ceased through non-payment of renewal fee |
Effective date: 20220813 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LIFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20220831Ref country code: CHFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20220831 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230508 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: FRFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20220831Ref country code: DEFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20230301 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: GBFree format text: LAPSE BECAUSE OF NON-PAYMENT OF DUE FEESEffective date: 20220813 |
US8010985B2 - Method and system for resource management in a video on-demand server - Google Patents
Method and system for resource management in a video on-demand server Download PDFInfo
- Publication number
- US8010985B2 US8010985B2 US11/143,428 US14342805A US8010985B2 US 8010985 B2 US8010985 B2 US 8010985B2 US 14342805 A US14342805 A US 14342805A US 8010985 B2 US8010985 B2 US 8010985B2
- Authority
- US
- United States
- Prior art keywords
- content
- server
- memory
- resident
- segmented
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N7/00—Television systems
- H04N7/16—Analogue secrecy systems; Analogue subscription systems
- H04N7/173—Analogue secrecy systems; Analogue subscription systems with two-way working, e.g. subscriber sending a programme selection signal
- H04N7/17309—Transmission or handling of upstream communications
- H04N7/17336—Handling of requests in head-ends
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/23—Processing of content or additional data; Elementary server operations; Server middleware
- H04N21/231—Content storage operation, e.g. caching movies for short term storage, replicating data over plural servers, prioritizing data for deletion
- H04N21/23106—Content storage operation, e.g. caching movies for short term storage, replicating data over plural servers, prioritizing data for deletion involving caching operations
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/23—Processing of content or additional data; Elementary server operations; Server middleware
- H04N21/232—Content retrieval operation locally within server, e.g. reading video streams from disk arrays
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/23—Processing of content or additional data; Elementary server operations; Server middleware
- H04N21/238—Interfacing the downstream path of the transmission network, e.g. adapting the transmission rate of a video stream to network bandwidth; Processing of multiplex streams
- H04N21/2387—Stream processing in response to a playback request from an end-user, e.g. for trick-play
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/23—Processing of content or additional data; Elementary server operations; Server middleware
- H04N21/24—Monitoring of processes or resources, e.g. monitoring of server load, available bandwidth, upstream requests
- H04N21/2408—Monitoring of the upstream path of the transmission network, e.g. client requests
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/23—Processing of content or additional data; Elementary server operations; Server middleware
- H04N21/241—Operating system [OS] processes, e.g. server setup
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/40—Client devices specifically adapted for the reception of or interaction with content, e.g. set-top-box [STB]; Operations thereof
- H04N21/47—End-user applications
- H04N21/472—End-user interface for requesting content, additional data or services; End-user interface for interacting with content, e.g. for content reservation or setting reminders, for requesting event notification, for manipulating displayed content
- H04N21/47202—End-user interface for requesting content, additional data or services; End-user interface for interacting with content, e.g. for content reservation or setting reminders, for requesting event notification, for manipulating displayed content for requesting content on demand, e.g. video on demand
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/80—Generation or processing of content or additional data by content creator independently of the distribution process; Content per se
- H04N21/85—Assembly of content; Generation of multimedia applications
- H04N21/854—Content authoring
- H04N21/85406—Content authoring involving a specific file format, e.g. MP4 format
Definitions
- the present invention relates to methods and apparatus for managing resources in an on-demand, memory-based server and, in particular, managing resources to control and service a large number of simultaneous streams of audio, video and or other data formats being played out to a network.
- On-demand servers obtain, store and play content such as, for example but not limited to, audio files, encoded television programming, and encoded movies to the customer.
- On-demand servers request content from long term storage devices such as disk arrays, disk storage farms, tape drives or other storage media, whereby content is stored across the this term storage, e.g. stored in pieces, strips or using other schemes across the disk array or RAID system.
- the on-demand server Upon request, the on-demand server loads content from the stored location such as Long Term Storage (LTS) or Near Term Storage (NTS) into a stream buffer or cache, for example, using a first-in-first-out (FIFO) buffer mechanism of the on-demand server that is assigned to the stream.
- the server streams content out of the FIFO buffer to the receiving device.
- On-demand servers have a disadvantage in their reliance on disk access to support the streaming. Such systems and servers do not recognize or otherwise account for concurrent usage of the same streaming content.
- On-demand servers are configured and rated to operate on a one-to-one (1:1) ratio, whereby the rating is based on output streams showing the capacity of receiving and streaming an on-demand request by a customer.
- the design of present on-demand servers also have the disadvantage of increased implementation cost per stream due, in part, to increased hardware elements required, built in redundancies of the implementation, and the inability to detect and support concurrent streaming of content.
- Conventional on-demand servers also have disadvantages relating to limited internal memory that can be used for streaming. This inhibits or prevents the capability to support concurrency. Concurrency is the ability to stream the same copy of content to multiple receiving devices. This is a very common usage scenario for on-demand systems. For example, this occurs when receiving devices request the same pay-per view event either simultaneously or within short time of each other. Numerous concurrent requests can reduce bandwidth and create bottlenecks in conventional on-demand servers. The on-demand server will request data from disk storage multiple times for the same content as to satisfy the receiving devices requests.
- On-demand servers heretofore have sought to solve concurrency problems by creating redundant content stored on near term storage (NTS), in long term disk storage or by using optimization techniques that require manual insertion of a resident flag to mark a limited subset of specific content that should be pulled into memory. While this model is effective, it requires considerable management of the content library and does not provide a dynamic mechanism that changes based on the real time usage model. All of such optimization schemes are not as efficient and cost effective as desired.
- NTS near term storage
- trick play support With the introduction of trick play support, conventional on-demand server resources are strained further by requests for trick playback functions such as fast forward, rewind, fast rewind, pause, stop and record.
- trick playback functions such as fast forward, rewind, fast rewind, pause, stop and record.
- the problems described above are exacerbated because disk-storage-based on-demand servers offering trick play store a separate secondary data file—trick play file—to disk storage and such servers must switch to the secondary file when trick modes requested by the receiving device.
- Storing secondary files has disadvantages in that additional resources of the server, including but not limited to storage and processing resources, are needed to support the storage and retrieval of multiple files for a single piece of content.
- an on-demand server that can dynamically control and optimize memory utilization while minimizing access to disk storage.
- a method and system that removes the resident marking requirement of conventional on-demand systems.
- a method and system that eliminates creating separate files for trick playback of content streamed to a customer.
- a method and system that dynamically uses the current concurrency count of the contents to optimize memory utilization so as to swap content in and out of memory as the concurrency values change.
- the present invention therefore in conjunction with an memory-based on-demand server provides advantages of optimizing the usage of server resources.
- One aspect of the present invention manages resident content and segmented content in the content addressable memory-based of an on-demand server.
- the present invention determines an efficient combination of resident and segmented content based on usage count of the active contents.
- the present invention determines an efficient combination of resident and segmented contents based on available bandwidth information allocated to streaming.
- the invention dynamically manages the trick mode rates of video streams playing segmented content.
- This invention is a method of dynamically managing the memory cache on a DRAM based VOD server.
- the invention uses DRAM memory resources and the current usage state to determine which program contents (MPEG-2, HD or other audiovisual data file standards) can be made resident and which program contents will be paged between DRAM memory and disk storage.
- the method utilizes the adaptive concurrency count of program contents requested for streaming by customers (output streams) to determine memory and bandwidth allocation between resident and paged content.
- the method is adaptive to streaming requests and adjusts which program contents are resident and paged, thereby swapping program content in and out of memory based on changing concurrency values.
- the method further minimizes disk access by placing highly utilized contents into memory first.
- the method also is further advantageous to make it possible to support efficient playback of a larger number of programs than would otherwise be possible on a given hardware configuration at a lower cost per stream. It takes into account bandwidth limitations and settings to prevent trick mode stalls due to unavailable bandwidth.
- FIG. 1 is a schematic diagram illustrating an all memory server on-demand distribution system
- FIG. 2 is a schematic diagram illustrating the resource management system according to an exemplary embodiment of the present invention
- FIG. 3 is a diagram illustrating demand expected according to Zipf's principles
- FIG. 4 is a diagram illustrating resource management in view of memory usage of content and content segments according to an exemplary embodiment of the present invention
- FIG. 5 is a diagram illustrating resource management in view of bandwidth usage of content and bandwidth in credits according to an exemplary embodiment of the present invention.
- FIG. 6 is a state diagram illustrating transition between segmented and resident content usage.
- a volatile memory based on-demand system is shown generally as element 20 .
- Volatile memory advantageously can be random access memory (RAM) readily available in 2 Gigabyte chipsets.
- the memory based on-demand system 20 is configured to distribute content 22 to end users such as, for example, in a network distribution system.
- a head end 24 of the system 20 obtains content from short- or long-term storage in response to requests sent across the network distribution system by the end user.
- the head end 24 is generally configured with storage 26 , such as disk storage from either of the short- or long-term storage that contains the content to be streamed, a volatile, content addressable memory (CAM) based on-demand server 28 such as a B-1 VOD Server or SBB-1 manufactured by Broadbus Technologies, Inc., a wide bus 30 and a switch 32 .
- storage 26 such as disk storage from either of the short- or long-term storage that contains the content to be streamed
- CAM volatile, content addressable memory
- B-1 VOD Server or SBB-1 manufactured by Broadbus Technologies, Inc. such as a B-1 VOD Server or SBB-1 manufactured by Broadbus Technologies, Inc.
- Concurrency is the number of streams requesting a piece of content.
- Resident content means content entirely contained in the memory of the on-demand server 28 .
- Segmented content is a content contained in the memory of the on-demand server 28 , whereby only a window around the current stream location is kept in memory.
- a segment for purposes of this patent application, is an 8 megabyte piece of content 22 .
- Load is meant to indicate making a content 22 resident in the memory of the on-demand server 28 .
- a credit is a portion of near-term-storage (NTS) bandwidth (BW), which in the present application is set to a unit of four (4) megabits-per-second (mbps).
- NTS near-term-storage
- BW bandwidth
- a memory limit is a total amount of memory that can be allocated to streaming.
- a bandwidth limit is a limit of the total bandwidth that can be allocated, whereby setting the bandwidth limit to high may cause trick modes to stall due to unavailable bandwidth BW.
- a paging trick play speed limit means the maximum speed a stream that is playing segmented content 22 is allowed to play out in trick play mode.
- content 22 can generally refer to data, audio, visual or audio-visual works such as, for example, a movie file in an MPEG format that is played out to a customer's TV set. It will be appreciated, that the context and examples chosen by the applicant to illustrate the present invention, namely, pulling and playing a movie file to a customer's TV set were chosen for ease of illustrating the principals of the method for managing the resources of a RAM based on-demand server according to an exemplary embodiment the present invention.
- Content 22 also can be obtained and streamed out to a customer in other applications and formats.
- the content 22 can be another form of data and in another format, specifically, an audio MP3 file.
- data comes in numerous other formats that are streamed to a customer on-demand where it is still advantageous to manage server resources when the server is providing streaming to many, multiple end users to display and seamlessly play the requested content 22 .
- managing information dynamically using a volatile memory based on-demand server across a world-wide network has other applications such as, for example, managing instant messaging, e-mail, streaming video conferencing, audio communications and the like.
- the head end 24 illustrated in FIG. 1 connects to various distribution systems to obtain content 22 either wirelessly 34 or physically on a land line 36 , or both.
- wireless distribution 34 involves connecting the head end 24 to a satellite distribution network 38 .
- distribution by land line 36 connects the head end 24 to a high-speed fiber optical network 40 that can be configured, for example, to have high speed fiber optic lines 42 , connected to hubs 44 , with such hubs 44 connected to nodes 46 , and the nodes connected to individual end-users 48 , e.g. a particular home or residence.
- cable distribution of content 22 to an end user's residence uses coaxial cable 50 via Quaternary/Quadrature Amplitude Modulation (QAM) 52 to a distribution device such a set top box 38 that converts to a NTSC signal 56 input into an appropriate device 58 that can play out the content 22 to, for example, a TV, HDTV, LCD, a media center or other displaying device.
- QAM Quaternary/Quadrature Amplitude Modulation
- the method begins by ordering usage of the memory based on sorting the concurrency for a particular piece of content 22 .
- the stream controller 62 instructs the server 28 and related components to obtain and load the content 22 into memory of the server 28 .
- the stream controller 62 makes a request to the server 28 to go out to disk storage, either long term or near term storage, loading the content 22 and transferred it to the RAM memory of the server 28 .
- the memory of the server 28 is empty for the first on-demand request for a particular piece of content 22 by a customer or other end user, e.g. such as a full length feature movie.
- the content 22 is loaded entirely into memory, or made resident.
- the starting point of the movie is designated zero and given a corresponding starting address in the content addressable memory (CAM) of the server 28 , which is managed separately.
- CAM content addressable memory
- an on-demand system 20 of the present invention includes a resource manager 60 having a Stream Controller 62 to provide content 22 by finding and streaming such content 22 to customer on-demand.
- the Stream Controller 62 is configured to control dynamically streaming functions such as, for example, loading content 22 entirely into memory 64 , loading portions or segments of content 22 into memory 66 , managing near-term-storage (NTS) bandwidth 68 limits, managing playback functions 70 such as trick play modes, and analyzing the speed of trick playout.
- NTS near-term-storage
- playback functions 70 such as trick play modes
- analyzing the speed of trick playout for example, in the on-demand server of the present invention, content 22 demanded by an end user can be either pulled entirely into the memory or pulled into memory in segments from disk storage 26 .
- the Stream Controller 62 operates to receive packages containing assets and MPEG content files sent from a media provider or other asset owner to the cable or satellite network.
- the cable or satellite network uses a catcher to receive the packages and assets, which the catcher forwards to the asset manager application.
- the asset manager application records the association between the assets and their related content files and signals the FTP transfer of the content 22 from the catcher to the on-demand server 28 .
- the Stream Controller 62 maintains the association between the contents 22 and the on-demand server 28 that store them on its NTS 26 .
- the main functionality of the Stream Controller 62 is to:
- the Content 22 is a movie in an MPEG-2 format ordered through the Cable or Satellite set-top-box 54 that is then played to user's TV. It can be appreciated that each movie has a predetermined length and each MPEG-2 file is played out sequentially. In this manner, the length of a particular piece of programming content has a predictable size, time, and or length. Sometimes, the playback of the movie can be adapted to an end user's trick playback options as is discussed herein. Content 22 that is stored in segments around a particular time uses less memory than content 22 stored entirely in memory. The method and system of the present invention utilizes a server 28 configured to determine which content 22 will be resident content 72 and which will be loaded into memory as segments of the content 22 .
- FIG. 3 illustrates a general usage pattern showing a Zipf's curve 72 , in which a decrease in the stream count for each content will follow the ratio of 20%, 10%, 6.6%, 5%, 4% . . . 1/n.
- the total streams using each content is inversely proportional to the rank, that is, proportional to 1, 1 ⁇ 2, 1 ⁇ 3, 1 ⁇ 4, etc.
- the first alteration is to add a constant to the rank, giving 1/(1+constant), 1/(2+constant), 1/(3+constant), 1/(4+constant), etc., whereby the constant is a ranking such as, for example, a Nielsen rating, and the second alteration changes the starting point for the curve, for example, starting at 10% usage for the first content.
- the present invention instead of comparing concurrency data with Zipf's original law, applies additional factors such as, for example, a number is added to the rank and to the power 1 , which are used to adjust the resident content 72 and segment content 74 for an optimal fit to yield optimized stream and bandwidth resources.
- Resident Content 72 when content 22 is stored entirely in the memory of the on-demand server 28 it is termed Resident Content 72 .
- Segment Content 74 when a segment of the content 22 to be streamed is stored in memory in the memory of the on-demand server 28 it is termed Segment Content 74 , for example, if a portion of an MPEG movie file is striped, paged, tiled or otherwise stored in less than Resident Content 72 .
- Segment Content 74 for example, if a portion of an MPEG movie file is striped, paged, tiled or otherwise stored in less than Resident Content 72 .
- line 76 When all contents 22 are entirely resident in a 1:1 ratio, the required memory usage is designated by line 76 . When all contents are paged then the bandwidth requirement is designated by line 77 .
- the method and system described in the present invention optimizes these two usage curves by balancing the memory usage against the bandwidth requirements by making contents with the highest concurrency values resident and thereby reducing the bandwidth requirements for streams on those contents 62 a .
- the contents with lower concurrency are played using segmented content thereby reducing the memory requirements 62 c while using bandwidth to the disk arrays.
- Content 22 with high concurrency values go in memory first; low concurrency content 22 is segmented first.
- the present invention advantageously operates to convert resident content 72 to segmented content 74 until both resident and segmented content 72 and 74 , respectively, occupy the available memory of the on-demand server 28 .
- a single attempt is made to fit the entire content 22 in memory available in the server 28 at the time of the attempt. If memory can accommodate the content 22 , make it resident content 72 . If memory of the server cannot accommodate the content 22 , make it segment content 74 . Finally, a stream playing multiple contents in a play list is made segmented 74 until all of the content 22 files can be made resident 72 .
- the graphical diagram illustrates memory usage relationship between the number of pieces of content 22 tracked by the server in a content index and the memory usage in tiles such as, for example, an 8 megabyte piece of a content 22 .
- the resident content 72 and the segment content 74 are dynamically managed by the Stream Controller 62 to fit within in the available memory 78 .
- resident content 72 having a high concurrency is loaded into memory and there is no segmented content 74 as shown at element 62 a .
- the Stream Controller 62 makes a choice of whether to make content 22 resident content 72 or segment content 74 based on bandwidth, memory limits and concurrency as shown at element 62 b . As more users request additional content 22 , the Stream Controller 62 makes a choice of whether to make content 22 resident content 72 or segment content 74 based on bandwidth, memory limits and concurrency as shown at element 62 c.
- the graphical diagram illustrates bandwidth usage relationship between the available bandwidth credits and the number of pieces of content 22 tracked by the server in the content index.
- the resident content 72 and the segment content 74 are dynamically managed by the Stream Controller 62 to fit within in the available bandwidth. Streams playing resident 62 a content require no bandwidth once the content is loaded into memory while segmented contents required bandwidth proportional to the number of streams playing the content 62 c.
- FIGS. 4 and 6 illustrate the advantages of the present invention over conventional on-demand servers having a one-to-one ratio to page content 77 .
- Conventional on-demand servers only stream directly from disk and, therefore, are limited to small stream counts in a one-to-one ratio 77 .
- Such conventional on-demand servers have disadvantages of physical limits being reached in disk access times, the need for heterogeneous upgradeability of such disks (forklift upgrade) and speed. As a result, such servers are inherently more deterministic in the number of supportable streams and are largely limited by disk access times.
- the present invention advantageously can use a combination of NTS and a large memory cache to increase stream count in a usage model having high concurrency counts.
- the method and system of the present invention operates similar to a pure disk based system and the stream counts are low.
- Stream counts can be very large if all streams are accessing the same content 22 as it is loaded into memory once then no disk accesses are required to support the play out.
- the true usage model is somewhere between the two extremes, where most of the streams are accessing a relatively small number of content 22 files, while a subset are accessing unique content 22 objects which is why factoring in concurrency counts assist to optimize streaming of the content 22 .
- DRAM caches with fast access times support a large number of streams, but are limited by cost to sizes that are not capable of holding all the content 22 files on concurrency in a video on-demand (VOD) or other on-demand deployment library.
- VOD video on-demand
- DRAM is also not persistent between power cycles, so the contents must also be stored on disks.
- Disk based arrays have very large storage capacity but are limited in the number of streams they can support due to slow access times.
- the optimal VOD server combines the best aspects of both technologies to support the largest number of streams possible. The stream count is maximized when content 22 files that are being streamed to a large number of set tops are entirely loaded into memory, while content 22 files with small stream counts only load a portion of the content 22 into memory around the current play out location for each stream.
- the method of the present invention optimizes the memory and NTS bandwidth usage to support the maximum number of streams at all times by pulling highly used content 22 files into the memory cache while leaving the other content 22 files to stream directly from the disks.
- the method begins by ordering usage of the memory based on sorting the concurrency for a particular content 22 relative to the usage of other content 22 files.
- the sorting bases its first allocation of memory on the assumption that all streaming content 22 can be stored in resident memory. If the memory limit is not reached all contents 22 are subsequently pulled into memory. If the limit is exceeded, the method takes repetitive steps to convert the least used contents 72 to segment content 74 until all requested content 22 fits into the available memory.
- the memory required to hold the entire content 22 is freed and only a small window for each stream playing that content 22 allocated in its place.
- the sorting process packs first the content 22 with the highest concurrency values as resident content 72 into memory of the on-demand memory based server 28 .
- the method or process of the present invention makes segments content 74 with the lowest concurrency first, thereby freeing memory and using the minimum NTS bandwidth.
- the resident content 72 and segment content 74 adaptively changes as its concurrency values change relative the requests for other content 22 .
- a stream playing multiple content 22 files in a play list is still played as segmented 74 until all of the content 22 files are made resident content 72 .
- bandwidth is allocated based on the content 22 play rate because standard definition content 22 files require less bandwidth than high definition content files.
- the size of the segment window is also scaled to account for the higher play out rates required for high definition (HD) transmission.
- Both the memory and bandwidth limits are tested whenever a new stream is requested. If the resources are not available the stream cannot be created without affecting current streams and is therefore rejected.
- Each segmented stream requires (bit Rate/4 mbps+1) credits.
- Each segmented stream requires credit*8 tiles.
- the bandwidth (BW) required is: (credit*number of streams) Eq. (2)
- the BW credits required to load a content 22 are consumed until the load is complete.
- conditions for stream creation can be bounded by two elements: (1) Bandwidth—the memory fits, but the bandwidth isn't available to page, and (2) Memory—there is not enough memory available even after all streams are converted to segmented content.
- Bandwidth the memory fits, but the bandwidth isn't available to page
- Memory there is not enough memory available even after all streams are converted to segmented content.
- Each of these conditions can be reported to the Stream Controller 62 to show and report content statistics. For example, certain statistics about the system usage include:
- the method and system of managing resources in the on-demand server 28 is configured to utilized methods (1) that operate on the stream server in communication with the streaming hardware; and (2) that operate on the content manager so as to optimize fitting content into the memory on-demand server 28 .
- the Stream Controller 62 is configured to control the server 28 communications and streaming hardware.
- the above-described resource manager 60 is configured to fitting content into the content addressable memory (CAM) of the on-demand server 28 with streaming out of NTS so as to optimize bandwidth and memory based on concurrency.
- the resource manager 60 is further configured to generate statistics to the Stream Controller 62 to pull content on and off of NTS and into memory.
- the method and system of managing resources in the on-demand server 28 is configured to utilize methods (1) that operate on the stream server in communication with the streaming hardware; and (2) that operate on the content manager so as to optimize fitting content into the memory on-demand server 28 .
- the Stream Controller 62 is configured to control the server 28 communications and streaming hardware.
- the above-described resource manager 60 is configured to fit content into the content memory (CMEM) of the on-demand server 28 with loading out of NTS so as to optimize bandwidth and memory based on concurrency.
- the resource manager 60 is further configured to generate requests to the Stream Controller 62 to pull content on and off of NTS and into memory.
- the method of managing resources in the on-demand server 28 is illustrated so as to optimize the loading of resident and segmented content into the Content memory of the on-demand server 28 .
- each piece of content is ingested into the content memory of the on-demand server 28 along with additional information for trick play.
- the content is immediately available for streaming as well as transfer to NTS.
- the on-demand server is tracking the relative locations in the content that is being accessed by each stream. It manages a segment of the content for each stream that extends forward and backward from the current content location. For example, at time t 1 the first N parts of content relative address 0 to N ⁇ 1 are loaded into CMEM. At time t 2 , the control dumps segments 0 to 2 and adds segments N to N+2 for a segment of 3 to N+2. If the stream were in reverse, part 2 would be reloaded and part N+2 would be dumped.
- the resource manager is tracking each particular stream to determine position and direction so as to understand (1) what part of the content is being accessed, (2) which direction the stream is playing and, therefore, manages the loading and dumping of more parts in a timely manner to enable normal streaming and trick play features.
- the number of parts can expand depending on the size that is needed for streaming, trick play features or for different content sizes such as high definition, where the content file is four times as big as a standard file for the same amount of playtime.
- the interaction between the resource manager and the stream control described above continuously determines what content is resident in content memory and what content needs to be segmented to content memory for streaming.
- the process actions and process states 100 through 166 illustrate the transition of content between the fully resident and segmented operation.
- Non fatal problems can occur between the streaming hardware and streaming process or the hardware may be busy and cannot respond to the software fast enough.
- the system is set up so that the current page of content needed to satisfy a customer request is always available to the stream so as not to generate a blank screen.
- the present invention advantageously utilizes the predictability of the sequential content: segmented content uses less memory than resident content, whereby such that resources can be managed for large numbers of streams.
- the resource manager makes a decision, at any time, whether to convert the content in memory to between paged and resident so as to optimize the bandwidth streaming from the server.
- FIG. 8 which describes the transition, the boxes are the state of the stream and arrows are the actions we take to transfer from state to state, one box to another.
- the resource manager is given a request to start a stream.
- Content memory is allocated to hold the content segment, the segment is loaded from NTS if needed and the stream is started.
- the stream is now running on segmented content in state 106 .
- the stream control will continue to load and release content as the stream progresses through the content with the intent of keeping the size of the content in the segment fixed and centered on the current stream request.
- an instruction is given to delete a stream. causing the (1) transfer of content from NTS to Content memory to be stopped or aborted; (2) deleting of tiles already in Content memory; and (3) freeing the Content memory allocation for use by other streams.
- Stream control may decide that a specific content should be made resident and all streams with their own segments of the content switch over to using the single copy of resident content.
- Content memory is allocated for the entire content and a load request for the entire content is issued.
- the streams are still actively using content segments while the content load continues in state 110 .
- the stream control may decide to switch the content back to using segments.
- action 114 shows the actions that result from this decision with the abort of the content load request. Since this abort may take some time, state 116 is entered while waiting for the abort to finish. In this interval, the stream control may reverse its decision again and restart the transition to resident content.
- Action 120 is then taken to restart the load of the content from what is in thus far and reenter state 110 . If the content load abort started by action 114 completes while in state 116 , action 118 is taken to free the allocation of Content memory for the resident content and delete it. The state of the content is set back to 104 . At state 110 , the loading of content may proceed to completion and trigger action 122 . This action will request each stream to stop using its content segment and switch to using the resident content. While waiting for the switch replies, state 124 is entered. When all streams have switched to the resident content, action 126 is triggered to abort all load requests for the content segments that have been operating up to this time. State 128 is entered while the load aborts are being processed. When the load aborts are all completed, action 130 is triggered to delete the content segments and return the Content memory allocated for those segments. All streams using this content are now accessing the single copy of resident content indicated by state 136 .
- the stream control may switch back to each stream using its own segment of the content.
- action 138 requests the current location of each stream within the content so that the correct segment can be loaded for it.
- State 140 is entered while waiting for the location replies. If the stream control switches back to resident content, action 142 puts the state back to state 136 and the location replies are ignored.
- action 144 will allocate content segments for each stream in Content memory and issue segment loads to NTS. State 146 is entered while the loads complete. If stream control transitions back to resident content at this time, action 164 is triggered to abort the segment loads and state 128 is entered.
- action 166 is triggered to reissue the segment loads and state 146 is entered.
- segment loads complete, the streams are all requested to switch over to using the segments by action 150 and state 152 is entered while waiting for the replies.
- a stream control transition back to resident content would trigger action 160 which would issue another set of switches back to the resident content and set the state to 124 .
- a transition to segmented content would trigger action 162 which would issue stream switch requests to use content segments and set state to 152 .
- action 158 will delete the resident content and free the Content memory allocation for the resident content. All streams will now be using their own content segment in state 106 .
- the method and system of the present invention can dynamically adjusting BW limit based on trick play rates.
- the streaming playback of content stored in the video on-demand server of the present invention supports record and playback features operated by a user or customer also known as trick play modes.
- Trick play includes controlling the playing out a program content such as, for example, pause, play and stopping the playing of the content as well as fast forward (FF) and rewinding (R) the program.
- the fast forward and rewinding of the program can be accomplished in many speeds such as 1 ⁇ , 2 ⁇ , 4 ⁇ and multiples thereof.
- Trick play mode also can take a user to content segmentation such as skipping around, in any direction possible, and in any conceivable combination or playback listing to chapter, volume, section and the like.
- the present invention supports segmented content 74 which can be streamed by the on-demand server 28 by loading into memory from NTS 26 only the portion of segmented content 74 required to stream at the present moment in time.
- Segmented content 74 conserves the on-demand server 28 DRAM resources and allows for providing higher numbers of unique content streams. While segmented content 74 conserves DRAM, segmented content 74 consumes NTS 26 storage bandwidth.
- Trick play features such as fast-forward and rewind may consume NTS 26 storage bandwidth at a greater rate than segmented content streaming at normal play rate. It is a desirable feature of any media serving system 28 to allow multiple fast-forwarding and rewinding rates.
- the method and system of the present invention supports the dynamic modification of current trick play rates to prevent the oversubscription of NTS 26 bandwidth and thus any resulting negative impact on segmented content 74 delivery.
- Dynamic trick play management allows segmented content 74 streams to trick at the highest rate possible based on current NTS 26 bandwidth utilization. As NTS 26 bandwidth utilization increases maximum trick rates are reduced, whereby if trick rates where left unbounded, streams at normal play rate could be starved of media and forced into a pause state.
- the present invention calls for the on demand server 28 to continually monitor NTS 26 bandwidth utilization. If NTS 26 bandwidth utilization rises above a configured value, the on-demand server 28 will automatically reduce the trick rate of streams using segmented content 74 . Streams consuming the largest amount of NTS 26 bandwidth, that is streaming at the highest rates, are forced to reduce their NTS 26 bandwidth utilization first. This is accomplished by dropping the streams trick play rate from a high value to a lower value. This process of reducing the trick rate of stream running at high trick rates continues until NTS 26 bandwidth utilization drops down to an acceptable level. This method of continually reducing the highest trick rate streams allows for the support of the maximum number of streams to simultaneously operate at low trick rate during periods of high NTS 26 utilization. This method also allows for maximum trick rates to be supported during periods of low utilization, that is when NTS 26 bandwidth is not limited.
- the method and system of the present invention manages bandwidth that the on-demand server 28 applies to new streams attempting to enter trick mode. If the on-demand server 28 determines that the requested trick speed will cause NTS bandwidth utilization to rise above the configured maximum value, the requested speed will be dynamically reduced until the limit is not exceeded. If the reduction of trick speed to the lowest supported rate is still not enough to pull back NTS bandwidth utilization to below the configured maximum value, the trick play request will be rejected and the on-demand server 28 will generate the appropriate action or error.
Abstract
Description
-
- Implement the
Content 22 as an object as per ISA standard and insure persistence - Maintain information about all of the
Content 22 files installed on the on-demand server 28 - Provide functionality to remove
Content 22 files. - Create and maintain a unique handle for the content file and forward it to the VOD Server
- Provide the following
Content 22 information to the on-demand server 28 including, but not limited to, bit-rate, path (URL containing IP address, user and password), and unique content ID - Provide persistence for asset and
Content 22 information - Generate an alarm when a
Content 22 ingest failed - Log the
Content 22 ingest events - Notify the on-
demand server 28 aboutContent 22 play out requests.
- Implement the
(content size) minus (−) (credit*8)*(number of streams) Eq. (1)
The bandwidth (BW) required is:
(credit*number of streams) Eq. (2)
The BW credits required to load a
-
- Settings for memory and bandwidth limits
- Memory that would be required to make all active contents resident.
- Stream count of the content with the highest usage.
- Memory usage for both resident and segmented contents.
- Bandwidth used for loading resident contents.
- Bandwidth used for segmented streams.
- Number of resident and segmented contents.
- Number of resident and segmented streams.
Claims (11)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/143,428 US8010985B2 (en) | 2004-06-01 | 2005-06-01 | Method and system for resource management in a video on-demand server |
Applications Claiming Priority (5)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US57609504P | 2004-06-01 | 2004-06-01 | |
US57626904P | 2004-06-01 | 2004-06-01 | |
US57640204P | 2004-06-01 | 2004-06-01 | |
US57633804P | 2004-06-02 | 2004-06-02 | |
US11/143,428 US8010985B2 (en) | 2004-06-01 | 2005-06-01 | Method and system for resource management in a video on-demand server |
Publications (2)
Publication Number | Publication Date |
---|---|
US20050267948A1 US20050267948A1 (en) | 2005-12-01 |
US8010985B2 true US8010985B2 (en) | 2011-08-30 |
Family
ID=35426680
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/143,428 Expired - Fee Related US8010985B2 (en) | 2004-06-01 | 2005-06-01 | Method and system for resource management in a video on-demand server |
Country Status (1)
Country | Link |
---|---|
US (1) | US8010985B2 (en) |
Cited By (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20090199250A1 (en) * | 2007-08-08 | 2009-08-06 | Harmonic Inc. | Methods and System for Data Transfer Over Hybrid Fiber Cable Infrastructure |
US20120296972A1 (en) * | 2011-05-20 | 2012-11-22 | Alejandro Backer | Systems and methods for virtual interactions |
US10972761B2 (en) | 2018-12-26 | 2021-04-06 | Purdue Research Foundation | Minimizing stall duration tail probability in over-the-top streaming systems |
Families Citing this family (56)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040193609A1 (en) * | 2003-03-26 | 2004-09-30 | Sony Corporation | Master content directory service server for providing a consolidated network-wide content directory |
US20050055352A1 (en) * | 2003-09-08 | 2005-03-10 | Sony Corporation | Content directory and synchronization bridge |
US20050055722A1 (en) * | 2003-09-09 | 2005-03-10 | Sony Corporation | Intelligent routing of digital content |
US20050060370A1 (en) * | 2003-09-17 | 2005-03-17 | Sony Corporation | Version based content distribution and synchronization system and method |
US7925790B2 (en) | 2003-09-17 | 2011-04-12 | Sony Corporation | Middleware filter agent between server and PDA |
US7735000B2 (en) | 2003-09-25 | 2010-06-08 | Sony Corporation | Information and content exchange document type definitions to support content distribution |
US20050165941A1 (en) * | 2004-01-22 | 2005-07-28 | Edward Eytchison | Methods and apparatuses for streaming content |
US8689113B2 (en) * | 2004-01-22 | 2014-04-01 | Sony Corporation | Methods and apparatus for presenting content |
US8782654B2 (en) | 2004-03-13 | 2014-07-15 | Adaptive Computing Enterprises, Inc. | Co-allocating a reservation spanning different compute resources types |
US7490325B2 (en) | 2004-03-13 | 2009-02-10 | Cluster Resources, Inc. | System and method for providing intelligent pre-staging of data in a compute environment |
WO2005119490A2 (en) * | 2004-06-01 | 2005-12-15 | Broadbus Technologies, Inc. | Method and system for resource management in a video on-demand server |
US8010985B2 (en) | 2004-06-01 | 2011-08-30 | General Instrument Corporation | Method and system for resource management in a video on-demand server |
US20070266388A1 (en) | 2004-06-18 | 2007-11-15 | Cluster Resources, Inc. | System and method for providing advanced reservations in a compute environment |
US8176490B1 (en) | 2004-08-20 | 2012-05-08 | Adaptive Computing Enterprises, Inc. | System and method of interfacing a workload manager and scheduler with an identity manager |
US8271980B2 (en) | 2004-11-08 | 2012-09-18 | Adaptive Computing Enterprises, Inc. | System and method of providing system jobs within a compute environment |
US7937379B2 (en) | 2005-03-09 | 2011-05-03 | Vudu, Inc. | Fragmentation of a file for instant access |
US8904463B2 (en) | 2005-03-09 | 2014-12-02 | Vudu, Inc. | Live video broadcasting on distributed networks |
US7191215B2 (en) | 2005-03-09 | 2007-03-13 | Marquee, Inc. | Method and system for providing instantaneous media-on-demand services by transmitting contents in pieces from client machines |
US9176955B2 (en) * | 2005-03-09 | 2015-11-03 | Vvond, Inc. | Method and apparatus for sharing media files among network nodes |
US8219635B2 (en) | 2005-03-09 | 2012-07-10 | Vudu, Inc. | Continuous data feeding in a distributed environment |
US20080022343A1 (en) | 2006-07-24 | 2008-01-24 | Vvond, Inc. | Multiple audio streams |
US9075657B2 (en) | 2005-04-07 | 2015-07-07 | Adaptive Computing Enterprises, Inc. | On-demand access to compute resources |
US8863143B2 (en) | 2006-03-16 | 2014-10-14 | Adaptive Computing Enterprises, Inc. | System and method for managing a hybrid compute environment |
US8930536B2 (en) * | 2005-03-16 | 2015-01-06 | Adaptive Computing Enterprises, Inc. | Virtual private cluster |
US9231886B2 (en) | 2005-03-16 | 2016-01-05 | Adaptive Computing Enterprises, Inc. | Simple integration of an on-demand compute environment |
US8099511B1 (en) | 2005-06-11 | 2012-01-17 | Vudu, Inc. | Instantaneous media-on-demand |
US8214869B2 (en) * | 2005-12-29 | 2012-07-03 | Rovi Guides, Inc. | Systems and methods for managing a status change of a multimedia asset in multimedia delivery systems |
US7890985B2 (en) * | 2006-05-22 | 2011-02-15 | Microsoft Corporation | Server-side media stream manipulation for emulation of media playback functions |
US8296812B1 (en) * | 2006-09-01 | 2012-10-23 | Vudu, Inc. | Streaming video using erasure encoding |
US20080207233A1 (en) * | 2007-02-28 | 2008-08-28 | Waytena William L | Method and System For Centralized Storage of Media and for Communication of Such Media Activated By Real-Time Messaging |
US9386056B1 (en) * | 2006-11-14 | 2016-07-05 | Arris Enterprises, Inc. | System, method and computer readable medium for providing media stream fragments |
US8386630B1 (en) * | 2007-09-09 | 2013-02-26 | Arris Solutions, Inc. | Video-aware P2P streaming and download with support for real-time content alteration |
US8041773B2 (en) | 2007-09-24 | 2011-10-18 | The Research Foundation Of State University Of New York | Automatic clustering for self-organizing grids |
US20090157891A1 (en) * | 2007-12-13 | 2009-06-18 | General Instrument Corporation | Method and Apparatus for Inserting Time-Variant Data into a Media Stream |
JP4643687B2 (en) * | 2008-06-11 | 2011-03-02 | 株式会社日立製作所 | Distribution system |
CN102282804B (en) * | 2008-11-24 | 2015-08-12 | 瞻博网络公司 | Adaptive network content distribution system |
US8219711B2 (en) * | 2008-11-24 | 2012-07-10 | Juniper Networks, Inc. | Dynamic variable rate media delivery system |
US8370520B2 (en) * | 2008-11-24 | 2013-02-05 | Juniper Networks, Inc. | Adaptive network content delivery system |
US9864637B2 (en) * | 2009-03-18 | 2018-01-09 | Microsoft Technology Licensing, Llc | Adaptable software resource managers based on intentions |
US9055085B2 (en) | 2009-03-31 | 2015-06-09 | Comcast Cable Communications, Llc | Dynamic generation of media content assets for a content delivery network |
US8510785B2 (en) * | 2009-10-19 | 2013-08-13 | Motorola Mobility Llc | Adaptive media caching for video on demand |
US11720290B2 (en) | 2009-10-30 | 2023-08-08 | Iii Holdings 2, Llc | Memcached server functionality in a cluster of data processing nodes |
US10877695B2 (en) | 2009-10-30 | 2020-12-29 | Iii Holdings 2, Llc | Memcached server functionality in a cluster of data processing nodes |
US8327085B2 (en) | 2010-05-05 | 2012-12-04 | International Business Machines Corporation | Characterizing multiple resource utilization using a relationship model to optimize memory utilization in a virtual machine environment |
US20120054323A1 (en) * | 2010-08-30 | 2012-03-01 | Microsoft Corporation | Regulating media quality using a session bandwidth limit |
US8984144B2 (en) | 2011-03-02 | 2015-03-17 | Comcast Cable Communications, Llc | Delivery of content |
US9641876B2 (en) * | 2011-06-28 | 2017-05-02 | Cox Communications, Inc. | Systems and methods for combining variable bit rate data streams |
EP2783290A4 (en) * | 2011-11-21 | 2016-06-08 | Hewlett Packard Development Co | An amount of memory for execution of an application |
US8407747B1 (en) * | 2012-03-13 | 2013-03-26 | Google Inc. | Adaptive trick play streaming |
US9497489B2 (en) | 2013-03-12 | 2016-11-15 | Google Technology Holdings LLC | System and method for stream fault tolerance through usage based duplication and shadow sessions |
US9813462B2 (en) * | 2014-02-06 | 2017-11-07 | Ittiam Systems Pte. Ltd. | Unified dynamic executable media playlists across connected endpoints |
WO2016021283A1 (en) * | 2014-08-05 | 2016-02-11 | 株式会社村田製作所 | Switching power supply device |
CN104837029B (en) * | 2015-05-08 | 2018-07-03 | 厦门大学 | A kind of storage of resource hard disk of HD video VOD system and access method |
US10558671B2 (en) * | 2018-05-01 | 2020-02-11 | Servicenow, Inc. | Modified representational state transfer (REST) application programming interface (API) including a customized GraphQL framework |
US20210258647A1 (en) * | 2020-02-18 | 2021-08-19 | JBF Interlude 2009 LTD | Dynamic adaptation of interactive video players using behavioral analytics |
US11882337B2 (en) | 2021-05-28 | 2024-01-23 | JBF Interlude 2009 LTD | Automated platform for generating interactive videos |
Citations (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20030005454A1 (en) * | 2001-06-29 | 2003-01-02 | Rodriguez Arturo A. | System and method for archiving multiple downloaded recordable media content |
US6536043B1 (en) * | 1996-02-14 | 2003-03-18 | Roxio, Inc. | Method and systems for scalable representation of multimedia data for progressive asynchronous transmission |
US20030093488A1 (en) * | 2001-11-15 | 2003-05-15 | Hiroshi Yoshida | Data communication apparatus and data communication method |
EP1313285A2 (en) | 2001-11-15 | 2003-05-21 | Mitsubishi Denki Kabushiki Kaisha | Data communication apparatus and data communication method |
US20040003101A1 (en) | 2002-06-26 | 2004-01-01 | Roth David J. | Caching control for streaming media |
US20050267948A1 (en) | 2004-06-01 | 2005-12-01 | Mckinley Brittain | Method and system for resource management in a video on-demand server |
US20050278760A1 (en) | 2004-06-01 | 2005-12-15 | Don Dewar | Method and system for controlling streaming in an on-demand server |
-
2005
- 2005-06-01 US US11/143,428 patent/US8010985B2/en not_active Expired - Fee Related
Patent Citations (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6536043B1 (en) * | 1996-02-14 | 2003-03-18 | Roxio, Inc. | Method and systems for scalable representation of multimedia data for progressive asynchronous transmission |
US20030005454A1 (en) * | 2001-06-29 | 2003-01-02 | Rodriguez Arturo A. | System and method for archiving multiple downloaded recordable media content |
US20030093488A1 (en) * | 2001-11-15 | 2003-05-15 | Hiroshi Yoshida | Data communication apparatus and data communication method |
EP1313285A2 (en) | 2001-11-15 | 2003-05-21 | Mitsubishi Denki Kabushiki Kaisha | Data communication apparatus and data communication method |
US20040003101A1 (en) | 2002-06-26 | 2004-01-01 | Roth David J. | Caching control for streaming media |
US20060053253A1 (en) | 2002-06-26 | 2006-03-09 | Microsoft Corporation | Caching control for streaming media |
US20060064500A1 (en) | 2002-06-26 | 2006-03-23 | Microsoft Corporation | Caching control for streaming media |
US20050267948A1 (en) | 2004-06-01 | 2005-12-01 | Mckinley Brittain | Method and system for resource management in a video on-demand server |
US20050278760A1 (en) | 2004-06-01 | 2005-12-15 | Don Dewar | Method and system for controlling streaming in an on-demand server |
Non-Patent Citations (5)
Title |
---|
Examination Report, European Patent Application No. 05757201.8 (Nov. 22, 2007). |
International Preliminary Report on Patentability, PCT/US2005/019293 (Dec. 4, 2006). |
International Search Report, PCT/US2005/019293 (Aug. 25, 2006). |
Supplementary European Search Report, European Patent Application No. 05757201.8 (Aug. 20, 2007). |
Tavanapong W et al: "Video caching network for on-demand video streaming" Globecom'02. 2002-IEEE Global Telecommunications Conference. Conference Proceedings. Taipei, Taiwan, Nov. 17-21, 2002, IEEE Global Telecommunications Conference, New York, NY : IEEE, US, vol. vol. 1 of 3, Nov. 17, 2002, pp. 1723-1727, XP010636438 ISBN: 0-7803-7632-3. |
Cited By (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20090199250A1 (en) * | 2007-08-08 | 2009-08-06 | Harmonic Inc. | Methods and System for Data Transfer Over Hybrid Fiber Cable Infrastructure |
US20120296972A1 (en) * | 2011-05-20 | 2012-11-22 | Alejandro Backer | Systems and methods for virtual interactions |
US8949333B2 (en) * | 2011-05-20 | 2015-02-03 | Alejandro Backer | Systems and methods for virtual interactions |
US20150106720A1 (en) * | 2011-05-20 | 2015-04-16 | Alejandro Backer | Systems and methods for virtual interactions |
US9838208B2 (en) * | 2011-05-20 | 2017-12-05 | Alejandro Backer | Systems and methods for virtual interactions |
US10644894B2 (en) * | 2011-05-20 | 2020-05-05 | Alejandro Backer | Systems and methods for virtual interactions |
US10972761B2 (en) | 2018-12-26 | 2021-04-06 | Purdue Research Foundation | Minimizing stall duration tail probability in over-the-top streaming systems |
US11356712B2 (en) | 2018-12-26 | 2022-06-07 | At&T Intellectual Property I, L.P. | Minimizing stall duration tail probability in over-the-top streaming systems |
Also Published As
Publication number | Publication date |
---|---|
US20050267948A1 (en) | 2005-12-01 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8010985B2 (en) | Method and system for resource management in a video on-demand server | |
US10405048B2 (en) | Methods and apparatus for supporting VOD requests in a system with hierarchical content stores | |
KR100228937B1 (en) | Video optimized media streamer user interface | |
US9813745B2 (en) | Method and apparatus for hierarchical distribution of video content for an interactive information distribution system | |
KR100207882B1 (en) | Video optimised media streamer | |
US7882260B2 (en) | Method of data management for efficiently storing and retrieving data to respond to user access requests | |
US5815662A (en) | Predictive memory caching for media-on-demand systems | |
US20090100496A1 (en) | Media server system | |
US7188357B1 (en) | Video-on demand video server disk/memory streaming selection methodology | |
US20020073172A1 (en) | Method and apparatus for storing content within a video on demand environment | |
JPH09265429A (en) | Data distribution device, storage device, their controlling method and data transfer system | |
WO2005119490A2 (en) | Method and system for resource management in a video on-demand server | |
WO2000027106A2 (en) | Providing vcr functionality for data-centered video multicast | |
EP1175776B1 (en) | Video on demand system | |
JPH11298858A (en) | Video server system |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: BROADBUS TECHNOLOGIES, INC., MASSACHUSETTSFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:MCKINLEY, BRITTAIN;RUTAN, MARK J;REEL/FRAME:016571/0055Effective date: 20050914 |
|
ZAAA | Notice of allowance and fees due |
Free format text: ORIGINAL CODE: NOA |
|
ZAAB | Notice of allowance mailed |
Free format text: ORIGINAL CODE: MN/=. |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GENERAL INSTRUMENT CORPORATION, PENNSYLVANIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:BROADBUS TECHNOLOGIES, INC.;REEL/FRAME:030605/0886Effective date: 20130415 |
|
AS | Assignment |
Owner name: GENERAL INSTRUMENT HOLDINGS, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT CORPORATION;REEL/FRAME:030725/0476Effective date: 20130415Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT HOLDINGS, INC.;REEL/FRAME:030725/0642Effective date: 20130528 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT HOLDINGS, INC.;REEL/FRAME:030866/0113Effective date: 20130528Owner name: GENERAL INSTRUMENT HOLDINGS, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GENERAL INSTRUMENT CORPORATION;REEL/FRAME:030764/0575Effective date: 20130415 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034371/0612Effective date: 20141028 |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20230830 |
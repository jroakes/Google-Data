EP2929468A1 - Generating and displaying tasks - Google Patents
Generating and displaying tasksInfo
- Publication number
- EP2929468A1 EP2929468A1 EP13815259.0A EP13815259A EP2929468A1 EP 2929468 A1 EP2929468 A1 EP 2929468A1 EP 13815259 A EP13815259 A EP 13815259A EP 2929468 A1 EP2929468 A1 EP 2929468A1
- Authority
- EP
- European Patent Office
- Prior art keywords
- task
- candidate
- similarity
- tasks
- segments
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Ceased
Links
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/35—Clustering; Classification
- G06F16/358—Browsing; Visualisation therefor
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/906—Clustering; Classification
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/951—Indexing; Web crawling techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9538—Presentation of query results
Definitions
- This specification relates to providing information about Internet resources to users.
- Internet search engines aim to identify resources, e.g., web pages, images, text documents, and multimedia content, that are relevant to a user's information needs and to present information about the resources in a manner that is most useful to the user.
- resources e.g., web pages, images, text documents, and multimedia content
- Internet search engines generally return a set of search results, each identifying a respective resource, in response to a user-submitted query.
- one innovative aspect of the subject matter described in this specification can be embodied in methods that include the actions segmenting a plurality of observations associated with a user of a user device into a plurality of tasks previously engaged in by the user; and generating a respective task presentation for each of the plurality of tasks for presentation to the user.
- Users can easily resume tasks that they were previously engaged in. Users can be presented with relevant information about tasks that may be helpful in completing the tasks, e.g., information that has been viewed by other users that have engaged in similar tasks. User observations can be segmented into tasks that the user was engaged in without the user needing to identify the tasks. Users can quickly recall the actions they had taken when they were engaged in the task. Users can share the task with friends to help them accomplish their own task, and can edit or comment on the task for this purpose.
- FIG. 1 shows an example task system.
- FIG. 2 is a flow diagram of an example process for generating task presentations for tasks previously engaged in by a particular user.
- FIG. 3 is a flow diagram of an example process for generating tasks from observations associated with a user.
- FIG. 4 is a flow diagram of an example process for generating a name for a task.
- FIG. 5 is a flow diagram of an example process for generating rules for mapping observations to types.
- FIG. 6 is a flow diagram of an example process for generating recommended content for a particular task.
- FIG. 7 is a flow diagram of another example process for generating recommended content for a particular task.
- FIG. 8A shows an example task presentation displayed on a mobile device.
- FIG. 8B shows an example expanded task presentation displayed on a mobile device.
- FIG. 1 shows an example task system 1 14.
- the task system 1 14 is an example of a system implemented as computer programs on one or more computers in one or more locations, in which the systems, components, and techniques described below can be implemented.
- a user 102 can interact with the task system 1 14 through a user device 104.
- the user device 104 will generally include a memory, e.g., a random access memory (RAM) 106, for storing instructions and data and a processor 108 for executing stored
- RAM random access memory
- the memory can include both read only and writable memory.
- the user device 104 can be a computer coupled to the task system 114 through a data communication network 1 12, e.g., local area network (LAN) or wide area network (WAN), e.g., the Internet, or a combination of networks, any of which may include wireless links.
- a data communication network 1 12 e.g., local area network (LAN) or wide area network (WAN), e.g., the Internet, or a combination of networks, any of which may include wireless links.
- the task system 1 14 provides a user interface to the user device 104 through which the user 102 can interact with the task system 1 14.
- the task system 1 14 can provide a user interface in the form of web pages that are rendered by a web browser running on the user device 104.
- the user interface can be presented as part of a particular application, e.g., a mobile application, that is running on the user device 104.
- the task system 1 14 responds to task requests, i.e., requests to provide information about tasks that a user has previously engaged in on the Internet, by generating task presentations that identify tasks and include information about each of the tasks.
- a task is a collection of user actions that satisfy a common information need, e.g., accomplishing a specific objective, obtaining information about a specific topic, and so on.
- the task system 1 14 includes an observation database 122, a task generation engine 140, and a recommendation generation engine 150.
- the term “database” will be used broadly to refer to any collection of data: the data does not need to be structured in any particular way, or structured at all, and it can be stored on storage devices in one or more locations.
- the observation database 122 can include multiple collections of data, each of which may be organized and accessed differently.
- the term “engine” will be used broadly to refer to a software based system or subsystem that can perform one or more specific functions. Generally, an engine will be implemented as one or more software modules or components, installed on one or more computers in one or more locations. In some cases, one or more computers will be dedicated to a particular engine; in other cases, multiple engines can be installed and running on the same computer or computers.
- the observation database 122 stores observations associated with users.
- An observation is a unit of data that is indicative of an action taken by a user.
- the observations may include direct observations, e.g., search queries that were submitted by a user to an Internet search engine, clicks made by the user on search results provided by the search engine, resources visited by the user, and so on.
- direct observations e.g., search queries that were submitted by a user to an Internet search engine, clicks made by the user on search results provided by the search engine, resources visited by the user, and so on.
- the user action with respect to a search result or a link to a resource is referred to by this specification as a "click" on the search result or the resource
- the action can also be a voice-based selection, or a selection by a user's finger on a presence-sensitive input mechanism, e.g., a touchscreen device, or any other appropriate selection mechanism.
- the observations may also include indirect observations, e.g., structured content from e-mail messages received or sent by the user, calendar entries or alerts identifying appointments, events, meetings, and so on.
- Structured content from e-mail messages received or sent by the user may be, e.g., content that is indicative of a purchase or an order placed by the user, e.g., a receipt, or travel purchased by the user, e.g., a travel itinerary or hotel reservation.
- Observations can be associated with a particular user in the observation database 122 by virtue of being performed or received while the user is signed into a user account. Users may be given an option to have particular observations of their choice removed from the observation database 122 or to prevent any observations being stored in the observation database 122.
- the task system 1 14 receives task requests for a given user on a periodic basis, i.e., at regular intervals.
- the system may determine whether a sufficient number of observations have been associated with the user in the observation database 122 after the previous task request for the given user was received. If a sufficient number of observations have not been associated with the user after the previous task request, the system can respond to the task request by generating task presentations that identify the tasks generated for the user in response to the previous task request.
- the task generation engine 140 When a task request is received by the task system 114, the task generation engine 140 generates tasks that the user has previously engaged in using the observations associated with the user in the observation database 122 and the recommendation engine 150 generates recommended content for each of the tasks.
- the task system 1 14 responds to the task request by generating task presentations for each of the tasks that identify the task and include the recommended content and transmits the task presentations through the network to the user device 104 for presentation to the user 102.
- a task presentation may be presented as part of a web page to be displayed by a web browser running on the user device 104 or in the user interface of a particular application running on the user device 104. Generating tasks from observations associated with a user is described in more detail below with reference to FIGS. 2 and 3.
- Generating recommendations for a task will be described in more detail below with reference to FIGS. 6 and 7.
- Example task presentations are described below with reference to FIGS. 8A and 8B.
- the system may generate the task presentations for each of the tasks and store them, e.g., for presentation to the user 102 at a later time.
- FIG. 2 is a flow diagram of an example process 200 for generating task presentations for tasks previously engaged in by a particular user.
- the process 200 will be described as being performed by a system of one or more computers located in one or more locations.
- a task system e.g., the task system 114 of FIG. 1, appropriately programmed in accordance with this specification, can perform the process 200.
- the system accesses an observation database, e.g., the observation database 122 of FIG. 1, to identify observations associated with the user (step 202).
- an observation database e.g., the observation database 122 of FIG. 1
- the system segments the observations into tasks previously engaged in by the user (step 204). Segmenting observations into tasks is described below with reference to FIG. 3.
- the system generates recommendations for each of the tasks (step 206).
- the recommendations for a given task are generated based on observations associated with other users who have engaged in the same or similar tasks. Example techniques for generating recommendations for a given task are described in more detail below with reference to FIGS. 6 and 7.
- the system generates a task presentation for each of the tasks (step 208).
- the task presentation for a given task will include a name for the task and the recommended content generated for the task.
- Example task presentations are described in more detail below with reference to FIGS. 8 A and 8B.
- the system provides the task presentations for presentation to the user (step 210).
- FIG. 3 is a flow diagram of an example process 300 for segmenting observations into tasks.
- the process 300 will be described as being performed by a system of one or more computers located in one or more locations.
- a task system e.g., the task system 114 of FIG. 1, appropriately programmed in accordance with this specification, can perform the process 300.
- a segment is a set of one or more observations. Initially, i.e., the first time the process 300 is performed in response to a given task request, each observation is assigned to a respective segment, i.e., so that each segment contains one observation.
- the system can determine whether two segments are a candidate pair by considering any of a number of similarity signals that compare various characteristics of the observations included in the two segments. For example, the system can consider a similarity signal that measures whether the observations included in the two segments are sufficiently temporally adjacent. For example, the signal may measure the degree to which the observations in one segment were submitted by or, in the case of some indirect observations, e.g., an e-mail message, were received by the user within a pre-defined time window as an observation in the other segment. As another example, the system can consider a signal that measures whether the two segments include a sufficient amount of the same or equivalent search queries. Two search queries may be considered to be equivalent if, when the two queries are rewritten to include synonyms for query terms, the two queries are the same.
- the system may have access to data that classifies search queries, resources, or both, as belonging to one or more categories, relating to one or more entities, being relevant to one or more entity types, or otherwise semantically classifies the search query or resource.
- the system may consider a signal that measures whether the two segments include a sufficient number of observations that are classified by the data as having the same semantic classification.
- the system annotates each observation in a segment with a type.
- the system can consider a signal that measures the degree to which observations in the segment have been assigned the same type or to semantically similar types. That is, the signal may indicate that a segment that includes a large proportion of observations that are assigned to different types from observations in another segment does not include similar observations to the other segment.
- the system can assign observations in segments to a type by mapping the observations to one of a set of pre-determined types by applying a set of rules.
- Each rule identifies one of the pre-determined types and one or more observations that should be mapped to the type. Generating rules for mapping observations to types is described below with reference to FIG. 5.
- the system may consider a signal that measures whether the search queries in the two segments share a sufficient amount or proportion of unigrams.
- the system may consider a signal that measures the degree to which the same resources that have been classified as being of a particular type, e.g., forum resource, product resource, blog resource, or news resource, are identified by search results for search queries that are included in the two segments.
- a particular type e.g., forum resource, product resource, blog resource, or news resource
- the system determines that each pair of segments for which at least a threshold number of similarity signals, e.g., at least one, two, or five similarity signals, indicate that the observations in the segments are similar is a candidate pair.
- the system may assign a weight to each of the similarity signals and compute a weighted sum of the values of the similarity signals for the two segments. The system can then determine that each pair of segments for which the weighted sum exceeds a threshold value is a candidate pair.
- the system generates a similarity score for each candidate pair of segments using a similarity classifier (step 304). That is, the system provides a set of signal values for each candidate pair as an input to the similarity classifier, which uses a set of weights to combine the signals provided into a similarity score for the candidate pair.
- the weights can be manually specified.
- the similarity classifier may be trained using conventional machine learning techniques to obtain optimal values for the weights.
- the system For each candidate pair, the system provides one or more semantic signals, one or more selection-based signals, one or more word signals, and one or more temporal signals to the similarity classifier.
- the semantic signals are signals that measure the semantic similarity between the observations in each candidate pair.
- the semantic signals may include a signal that measures whether the segments have been assigned to the same or a semantically similar type.
- the system may have access to one or more services that generate query refinements for search queries. In these
- the semantic signals may include a signal that measures whether or not search queries in the two segments have similar query refinements.
- the selection-based signals are signals that measure the degree of similarity between user selections of search results in each of the two segments.
- the click-based signals may include a signal that measures the degree to which the two segments include clicks on search results identifying the same resource or resources in the same site.
- the click-based signals may include a signal that measures the degree to which the two segments include clicks on search results that identify distinct resources or resources in distinct sites that share terms in their title.
- the system can be configured to treat different kinds of disjoint collections of resources as a site.
- the system can treat as a site a collection of resources that are hosted on a particular server.
- resources in a site can be accessed through a network, e.g., the Internet, using an Internet address, e.g., a Uniform Resource Locator (URL), corresponding to a server on which the site is hosted.
- a site can be defined operationally as the resources in a domain, e.g.,
- example.com where the resources in the domain, e.g., "host.example.com/resourcel,” “www.example.com/folder/resource2,” or “example.com/resource3,” are in the site.
- a site can be defined operationally using a subdomain, e.g., "www.example.com,” where the resources in the subdomain, e.g.,
- a site can be defined operationally using a subdirectory, e.g., "example.com/subdirectory,” where the resources in the subdirectory, e.g.,
- the word signals are signals that measure the textual similarity of search queries in the two segments.
- the words signals may include a signal that measures the degree to which the two segments include search queries that share one or more unigrams, higher-level n-grams, or both.
- the word signals may include a signal that measures the degree to which the two segments include search queries that are equivalent.
- the temporal signals are signals that measure the degree to which the observations in the two segments are temporally similar.
- the temporal signals may include a signal that measures the degree to which the two segments contain search queries that are temporally adjacent to each other.
- the temporal signals may include a signal that measures the degree to which the two segments contain search queries or clicks that were submitted by the user during the same visit. Two queries or clicks may be considered to have been submitted during the same visit if they are both included in a sequence of queries and clicks, with the time difference between any two successive events in the sequence not exceeding a threshold value.
- the system merges candidate pairs that are similar (step 306).
- the system can determine that each candidate pair of signals for which the similarity score exceeds a threshold score are to be merged.
- the system may also require that the number of signals that indicate that the candidate pair should be merged exceed the number of signals that indicate that the candidate pair should not be merged by a threshold number.
- the threshold score, the threshold number, or both may increase for each iteration of the merging process. That is, the criteria for determining that a candidate pair of segments be merged may become more stringent for each subsequent iteration of the merging process that the system performs.
- the system annotates each segment with a task type (step 308).
- the system assigns a type to each observation in the segment using the set of rules and aggregates the types assigned to the queries in the segment to generate the task type for the segment.
- the system can, for example, select the type that has been assigned to the largest number of observations in the segment as the task type for the segment.
- each of the types assigned to observations may be associated with a weight that represents a confidence level that the type assigned to the observation is the correct type for the observation. In these cases, the system may sum the weights for each type and select the type that has the highest sum as the task type for the segment.
- the system can verify that the type explains at least a threshold number of the observations in the segment, e.g., a number that is on the order of the square root of the number of observations in the segment.
- the system may consider a type to explain an observation if the type is the same as the type for the observation or if the type is sufficiently semantically similar to the type for the observation.
- the system determines whether termination criteria are satisfied (step 310). For example, the system may determine that the termination criteria are satisfied when, after merging the candidate pairs that are similar, none of the remaining segments are candidates for merging.
- the system repeats step 302. If the termination criteria are satisfied, the system generates task scores for each of the remaining segments (step 312).
- the system can generate the task score for a segment based in part on segment significance, segment coherence, or both. Segment significance measures the size of the segment. That is, segment significance generally measures the number of observations in the segment relative to the total number of observations associated with the user. The system can assign a higher task score to a segment than to an otherwise equivalent segment that has a lower segment significance measure.
- Segment coherence measures how focused the observations in the segment are, i.e., so that segments that have more focused observations are assigned higher segment coherence measures.
- segment coherence can be computed based at least in part on the number of visits in the segments, and the number of observations per visit in the segment.
- the system can assign a higher task score to a segment than to an otherwise equivalent segment that has a lower segment coherence measure.
- the system selects tasks from the remaining segments based on the task scores (step 314). For example, the system can select each segment having a task score above a particular threshold as a task or a pre-determined number of segments having the highest task scores as tasks. Once the tasks have been selected, the system may optionally adjust the order of the selected tasks, e.g., to promote tasks that have higher segment coherence measures or to demote navigational tasks or tasks that were only engaged in during a single visit, i.e., because the user may be more likely to have already satisfied their information need for tasks that are being demoted.
- the system assigns a name to the task.
- the name can be generated using any of a variety of signals.
- the signals can include one or more of search queries in the task, words in queries in the task, titles of resources that have received clicks in the task, names and descriptions of entities referred to in the task, task types of the task and others.
- FIG. 4 is a flow diagram of an example process 400 for generating a name for a task.
- the process 400 will be described as being performed by a system of one or more computers located in one or more locations.
- a task system e.g., the task system 114 of FIG. 1, appropriately programmed in accordance with this specification, can perform the process 400.
- the system generates candidate names for the task from the observations in the task (step 402). That is, the system selects text associated with observations in the task as candidate names in accordance with pre-determined selection criteria.
- the criteria may specify that all or some of the text of each search query in the task or each search query that has been submitted by the user more than a threshold number of times be selected as a candidate name.
- the criteria may specify that every possible subset of w-grams that are included in the query be considered as a candidate name. That is, for the search query "cheap Atlanta hotels,” the system may select "cheap,” “Atlanta,” “hotels,” “cheap Atlanta,” “Atlanta hotels,” and “cheap Atlanta hotels” as candidate names for a task that includes the search query.
- the criteria may specify that some or all of the text of search queries that are related to the search queries in the task be selected as a candidate name.
- Related queries for a given search query may include query refinements for the search query, queries that include synonyms of terms in the search query, or both.
- the criteria may specify that w-grams from titles of resources visited in the task be selected as a candidate name.
- the criteria may specify that each possible subset of w-grams included in the title that includes a recognized reference to an entity or entity type be considered as a candidate name.
- the criteria may specify that category labels, entity names, and entity types associated with search queries or resources in the task be considered as candidate names for the task.
- some of the criteria are specific to the type of the task. For example, for tasks of the type "travel,” one of the criteria may specify that a candidate name for the task be "Travel to [Location],” where the value of the [Location] attribute is generated from entities that are relevant to queries or resources in the task.
- the task names have the form of "[Category Name] / [ Specific Name].” That is, an example task name for a task that includes observations that relate to researching for a future trip to wholesome Aires, Argentina might be "Travel / Travel to wholesome Aires," where "Travel” is the category name for the task and "Travel to wholesome Aires" is the specific name for the task.
- the criteria also specify whether the category name generated by applying the category name is a candidate category name for the task or a candidate specific name for the task. In some cases, candidate names generated using certain criteria may be considered as both a candidate category name and a candidate specific name for the task.
- the system computes a name score for each candidate name (step 404).
- the name score for a candidate name measures how well the candidate name describes the observations in the task.
- the system computes multiple pair-wise similarity scores and aggregates the similarity scores to generate the name score for the candidate name.
- Each pair-wise similarity score measures the similarity between the candidate name and a respective observation in the task.
- the system may compute a respective pair-wise similarity score between the candidate name and each observation in the task.
- the system can compute the respective pair-wise similarity scores by treating the candidate name and the observation as single-observation segments and generating the pair-wise similarity score for the single-observation segments using the similarity score classifier described above with reference to FIG. 3. That is, the system can provide values of one or more semantic signals for the single-observation segments and values of one or more word signals for the single-observation segments to the classifier in order to obtain the pair- wise similarity scores.
- the system can aggregate the pair-wise similarity scores to generate the name score for the candidate.
- the system can aggregate the pair-wise similarity scores in any of a variety of ways. For example, the system can compute an arithmetic mean of the pair- wise scores, a geometric mean of the pair- wise scores, a sum of the pair-wise scores or a product of the pair- wise scores.
- the system can aggregate candidate category names and candidate specific names separately.
- the system selects a name for the task from the candidate names using the task scores (step 406). For example, the system can select the candidate name having the highest task score as the name for the task. In implementations where the task names have the form of "[Category Name] [ / Specific Name]," the system may select the highest-scoring candidate category name and the highest-scoring candidate specific name as the category name and the specific name for the task, respectively.
- the name for a task can be used to identify the task, e.g., in a task presentation that includes information identifying observations in the task and recommended content for the task.
- FIG. 5 is a flow diagram of an example process 500 for generating rules for mapping observations to types.
- the process 500 will be described as being performed by a system of one or more computers located in one or more locations.
- a task system e.g., the task system 1 14 of FIG. 1, appropriately
- the system obtains a set of seed rules for mapping observations to types (step 502).
- Each seed rule identifies a respective one of a predetermined set of types and one or more observations that should be mapped to the type.
- the system applies the seed rules to a set of observations to generate an initial set of observation-type pairs (step 504).
- the system can apply the seed rules to a subset or all of the observations in the observation database 122 of FIG. 1.
- the system selects observations that co-occur with observations in the initial set of observation-type pairs (step 506). For example, the system can determine that one observation co-occurs with another observation when, if both observations are resource visits, both observations occurred after submitting the same search query or an equivalent search query. As another example, the system can determine that one observation co- occurs with another observation when both observations are included in the same task. As another example, the system can determine that one observation co-occurs with another observation when both observations are associated with the same user.
- the system generates one or more candidate rules for each co-occurring observation (step 508). That is, the system generates a candidate rule that maps the co- occurring observation to the same type as the observation in the initial set with which the co-occurring observation co-occurs.
- the system can also generate additional candidate rules that, for observations that are search queries, include one or more of the possible subsets of w-grams in the search query, and, for observations that are resources, include other resources in the same site as the resource, and so on.
- the system selects one or more of the candidate rules as additional rules to generate a new set of rules that includes the seed rule and the additional rules (step 510).
- the system scores each candidate rule and selects each candidate rule having a score above a threshold value as an additional rule.
- the system scores each candidate rule so that candidate rules that map a larger number of observations in the set of co-occurring observations to a type relative to the number of observations mapped by the rule that are in the set of observations but not in the set of co-occurring observations score higher than other candidate rules that map a relatively smaller number of observations number of observations in the set of co- occurring observations to a type relative to the number of observations mapped by the rule that are in the set of observations but not in the set of co-occurring observations.
- the system scores each candidate rule on the candidate rule's precision, recall and lift relative to the other candidate rules.
- the system can repeat steps 504 through 510 multiple times, using the new set of rules from the preceding iteration as the seed rules for the current iteration, in order to determine a final set of rules for mapping observations to types.
- FIG. 6 is a flow diagram of an example process 600 for generating recommended content for a particular task.
- the process 600 will be described as being performed by a system of one or more computers located in one or more locations.
- a task system e.g., the task system 1 14 of FIG. 1, appropriately programmed in accordance with this specification, can perform the process 600.
- the system For each click on a resource in the task, the system identifies resources clicked on by other users that also clicked on the resource (step 602).
- a click on a resource can be, e.g., a click on a search result identifying the resource or a click on another link that links to the resource. That is, the system can identify, for each click on the clicked resource by another user, clicks by the other user that are in the same task as a click on the clicked resource.
- the system computes initial scores for the identified resources (step 604). For example, the system can compute the scores based on the likelihood that each user clicked on the identified resource as part of the same task as a click on the clicked resource,, with resources having a greater likelihood of being clicked on as part of the same task as the clicked resource receiving higher initial scores.
- the system aggregates the initial scores to generate combined scores for the resources clicked on by other users (step 606). That is, for each resource that was assigned more than one initial score, the system aggregates the initial scores for the resource to generate a combined score for the resource, e.g., by computing an average of the initial scores or a sum of the initial scores.
- the system selects recommended resources based on the combined scores (step 608). For example, the system can select each resource having a combined score above a pre-determined threshold or a pre-determined number of highest-scoring resources as recommended resources. In some implementations, the system adjusts the scores based on data available to the system that measures the quality of the resources and to increase the diversity of the recommended resources. In some implementations, the system selects respective pre-determined number of resources of multiple types. For example, the system can select the two highest-scoring news articles and the highest-scoring online encyclopedia pages.
- FIG. 7 is a flow diagram of another example process 700 for generating recommended content for a particular task.
- the process 700 will be described as being performed by a system of one or more computers located in one or more locations.
- a task system e.g., the task system 114 of FIG. 1, appropriately programmed in accordance with this specification, can perform the process 700.
- the system identifies similar tasks to the particular task (step 702).
- the system identifies the similar tasks from among tasks that were engaged in by other users, i.e., that were generated by the system from observations associated with other users.
- the system selects as similar tasks the tasks that, had they been engaged in by the current user, would have been selected as a candidate segment to be merged with the particular task, e.g., as described above with reference to FIG. 3.
- the system can select the similar tasks by considering a different subset of the similarity signals considered by the system when determining whether two segments are a candidate pair for merging.
- the system can select as similar tasks the tasks that, had they been engaged in by the current user, would have been merged with the particular task based on the score assigned by the similarity classifier, e.g., as described above with reference FIG. 3.
- the system can cluster all tasks around one or more different axes, where each axis is a set of one or more features of the particular task, such as a query, a clicked resource, relevant entities, words in queries or titles, and so on. For each of the axes, the system identifies tasks sharing each of the particular set of features as similar tasks.
- the system aggregates the similar tasks into one or more aggregated tasks (step 704).
- the system can merge the similar tasks, e.g., as described above with reference to FIG. 3, resulting in one or more aggregated tasks.
- the system can cluster the similar tasks into smaller sets, e.g., using K-Means or Hierarchical Agglomerated Clustering techniques. The system then constructs one aggregate task for each set of clustered similar tasks.
- the system generates recommendations based on observations in the aggregated tasks (step 708). For example, the system can rank the aggregate tasks according to their similarity with the user task along various dimensions, e.g., queries, clicks, entities words, and so on, and then select the top-ranking aggregate tasks as the most relevant tasks.
- various dimensions e.g., queries, clicks, entities words, and so on
- the system constructs recommendations for the particular task.
- a recommendation can be a resource that was clicked on in an aggregate task, but may also be, e.g., an entity associated with an aggregate task or any other observation in an aggregate task.
- the system selects the recommendations based on how many aggregate tasks recommend it.
- the system can apply a series of transformations to the ranking to improve the order of recommendations.
- the transformations can include one or more of: preventing recommendations from the same aggregate task showing up more than a threshold number of times, not showing recommendations that are the same or very similar to what the user has already seen, i.e., that recommend content that is the same or very similar to content identified by observations in the particular task, giving slightly higher weight to recommendations from smaller sources, removing very similar recommendations to reduce repetition and increase diversity, and so on.
- the system Once the system has selected the recommended resources, e.g., using the process 400 or the process 700, the system generates recommended content that identifies the recommended resources.
- the recommended content may include a link to the recommended resource and one or more of the title of the recommended resource, a summary of the content of the recommended resource, or an image from the
- the recommend content may include a link to submit a search query to obtain more information about the recommendation, or a link to an authoritative resource for the recommendation.
- FIG. 8A shows an example task presentation 800 displayed on a mobile device.
- the task presentation 800 includes recommended content for an "Indian Cuisine / Idli, Dosa" task 804 previously engaged in by a user of the mobile device.
- the user may be able to navigate to other tasks that the user has previously engaged by way of, e.g., a touch input on the mobile device.
- the user may be able to navigate to a "Beaches & Islands" task 802 by swiping down on the touchscreen display of the mobile device.
- the task presentation 800 includes an image 806 that describes the task.
- the image 806 may have been generated from images included in resources clicked on by the user while engaging in the task 804.
- the task presentation 800 includes titles 808, 810, and 812 of recommended resources that are displayed in the form of links to the recommended resources.
- the task presentation 800 also includes an "Explore more" link 814 that allows the user to navigate to an expanded task presentation that provides more information about the task 804 and the recommended resources.
- FIG. 8B shows an example expanded task presentation 850.
- the expanded task presentation 850 can be an expanded version of the task presentation 800 of FIG. 8A, and may have been navigated to by a user by selecting the "Explore more" link 814 of FIG. 8A.
- the expanded task presentation 850 includes additional information about the recommended resources for the "Indian Cuisine / Idli, Dosa" task 804.
- the expanded task presentation includes respective summaries 852, 854, and 856 and respective images 858, 860, and 862 of recommended resources for the task 804.
- the expanded task presentation 850 includes a "history" element 864.
- the user can be presented with information identifying the observations that are in the task. For example, the user may be presented with information about resources that the user has frequently clicked on while engaging in the task or search queries that the user has frequently submitted while engaging in the task.
- Embodiments of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry, in tangibly-embodied computer software or firmware, in computer hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions encoded on a tangible non-transitory program carrier for execution by, or to control the operation of, data processing apparatus.
- the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- the computer storage medium can be a machine-readable storage device, a machine-readable storage substrate, a random or serial access memory device, or a combination of one or more of them.
- data processing apparatus encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers.
- the apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.
- a computer program (which may also be referred to or described as a program, software, a software application, a module, a software module, a script, or code) can be written in any form of programming language, including compiled or interpreted languages, or declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data, e.g., one or more scripts stored in a markup language document, in a single file dedicated to the program in question, or in multiple coordinated files, e.g., files that store one or more modules, sub-programs, or portions of code.
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and
- the processes and logic flows described in this specification can be performed by one or more programmable computers executing one or more computer programs to perform functions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- special purpose logic circuitry e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- Computers suitable for the execution of a computer program include, by way of example, can be based on general or special purpose microprocessors or both, or any other kind of central processing unit.
- a central processing unit will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a central processing unit for performing or executing instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- mass storage devices for storing data
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device, e.g., a universal serial bus (USB) flash drive, to name just a few.
- PDA personal digital assistant
- GPS Global Positioning System
- USB universal serial bus
- Computer-readable media suitable for storing computer program instructions and data include all forms of non- volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks;
- semiconductor memory devices e.g., EPROM, EEPROM, and flash memory devices
- magnetic disks e.g., internal hard disks or removable disks
- magneto-optical disks and CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- a computer can interact with a user by sending documents to and receiving documents from a device that is used by the user; for example, by sending web pages to a
- Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front-end component, e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification, or any combination of one or more such back-end, middleware, or front-end components.
- the components of the system can be
- Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), e.g., the Internet.
- LAN local area network
- WAN wide area network
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
Abstract
Description
Claims
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201261733892P | 2012-12-05 | 2012-12-05 | |
PCT/US2013/073434 WO2014089370A1 (en) | 2012-12-05 | 2013-12-05 | Generating and displaying tasks |
Publications (1)
Publication Number | Publication Date |
---|---|
EP2929468A1 true EP2929468A1 (en) | 2015-10-14 |
Family
ID=49887267
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP13815259.0A Ceased EP2929468A1 (en) | 2012-12-05 | 2013-12-05 | Generating and displaying tasks |
Country Status (3)
Country | Link |
---|---|
US (2) | US20140156623A1 (en) |
EP (1) | EP2929468A1 (en) |
WO (1) | WO2014089370A1 (en) |
Families Citing this family (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP5976033B2 (en) * | 2014-04-24 | 2016-08-23 | 株式会社オプティム | Mobile terminal, access point related content acquisition method, mobile terminal program |
US9253226B2 (en) * | 2014-06-30 | 2016-02-02 | Linkedin Corporation | Guided edit optimization |
KR102491068B1 (en) * | 2017-11-17 | 2023-01-19 | 에스케이하이닉스 주식회사 | Semiconductor device for scheduling tasks for memory device and system includign the same |
CN110413169B (en) * | 2019-07-24 | 2021-11-23 | 北京小米移动软件有限公司 | Information display method, device and medium |
US11630852B1 (en) | 2021-01-08 | 2023-04-18 | Wells Fargo Bank, N.A. | Machine learning-based clustering model to create auditable entities |
US11593740B1 (en) * | 2021-02-25 | 2023-02-28 | Wells Fargo Bank, N.A. | Computing system for automated evaluation of process workflows |
Family Cites Families (20)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6415282B1 (en) * | 1998-04-22 | 2002-07-02 | Nec Usa, Inc. | Method and apparatus for query refinement |
US6505208B1 (en) * | 1999-06-09 | 2003-01-07 | International Business Machines Corporation | Educational monitoring method and system for improving interactive skills based on participants on the network |
US7165069B1 (en) * | 1999-06-28 | 2007-01-16 | Alexa Internet | Analysis of search activities of users to identify related network sites |
US7062488B1 (en) * | 2000-08-30 | 2006-06-13 | Richard Reisman | Task/domain segmentation in applying feedback to command control |
US6865297B2 (en) * | 2003-04-15 | 2005-03-08 | Eastman Kodak Company | Method for automatically classifying images into events in a multimedia authoring application |
US8255413B2 (en) * | 2004-08-19 | 2012-08-28 | Carhamm Ltd., Llc | Method and apparatus for responding to request for information-personalization |
WO2006036781A2 (en) * | 2004-09-22 | 2006-04-06 | Perfect Market Technologies, Inc. | Search engine using user intent |
US7698270B2 (en) * | 2004-12-29 | 2010-04-13 | Baynote, Inc. | Method and apparatus for identifying, extracting, capturing, and leveraging expertise and knowledge |
US20060224583A1 (en) * | 2005-03-31 | 2006-10-05 | Google, Inc. | Systems and methods for analyzing a user's web history |
US7822699B2 (en) * | 2005-11-30 | 2010-10-26 | Microsoft Corporation | Adaptive semantic reasoning engine |
US8108796B2 (en) * | 2006-02-10 | 2012-01-31 | Motorola Mobility, Inc. | Method and system for operating a device |
US8706748B2 (en) * | 2007-12-12 | 2014-04-22 | Decho Corporation | Methods for enhancing digital search query techniques based on task-oriented user activity |
US9495275B2 (en) * | 2008-04-29 | 2016-11-15 | International Business Machines Corporation | System and computer program product for deriving intelligence from activity logs |
US8543592B2 (en) * | 2008-05-30 | 2013-09-24 | Microsoft Corporation | Related URLs for task-oriented query results |
US20100077327A1 (en) * | 2008-09-22 | 2010-03-25 | Microsoft Corporation | Guidance across complex tasks |
US8291319B2 (en) * | 2009-08-28 | 2012-10-16 | International Business Machines Corporation | Intelligent self-enabled solution discovery |
CA2679494C (en) * | 2009-09-17 | 2014-06-10 | Ibm Canada Limited - Ibm Canada Limitee | Consolidating related task data in process management solutions |
US9251157B2 (en) * | 2009-10-12 | 2016-02-02 | Oracle International Corporation | Enterprise node rank engine |
US9135561B2 (en) * | 2011-11-08 | 2015-09-15 | Microsoft Technology Licensing, Llc | Inferring procedural knowledge from data sources |
US9330176B2 (en) * | 2012-11-14 | 2016-05-03 | Sap Se | Task-oriented search engine output |
-
2013
- 2013-12-05 US US14/098,429 patent/US20140156623A1/en not_active Abandoned
- 2013-12-05 WO PCT/US2013/073434 patent/WO2014089370A1/en active Application Filing
- 2013-12-05 US US14/098,466 patent/US20140172853A1/en not_active Abandoned
- 2013-12-05 EP EP13815259.0A patent/EP2929468A1/en not_active Ceased
Non-Patent Citations (2)
Title |
---|
None * |
See also references of WO2014089370A1 * |
Also Published As
Publication number | Publication date |
---|---|
WO2014089370A1 (en) | 2014-06-12 |
US20140172853A1 (en) | 2014-06-19 |
US20140156623A1 (en) | 2014-06-05 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10204138B1 (en) | Navigational resources for queries | |
US10783156B1 (en) | Scoring candidate answer passages | |
JP5572596B2 (en) | Personalize the ordering of place content in search results | |
US10061820B2 (en) | Generating a user-specific ranking model on a user electronic device | |
US9336277B2 (en) | Query suggestions based on search data | |
US8417692B2 (en) | Generalized edit distance for queries | |
US10585927B1 (en) | Determining a set of steps responsive to a how-to query | |
US8332426B2 (en) | Indentifying referring expressions for concepts | |
US20130006914A1 (en) | Exposing search history by category | |
EP3128448A1 (en) | Factorized models | |
US10180964B1 (en) | Candidate answer passages | |
WO2012012396A2 (en) | Predictive query suggestion caching | |
KR20080077382A (en) | Inferring search category synonyms from user logs | |
US20140172853A1 (en) | Generating and displaying tasks | |
US9922344B1 (en) | Serving advertisements based on partial queries | |
US9916384B2 (en) | Related entities | |
CN110990725A (en) | Distance-based search ranking demotion | |
CN109952571B (en) | Context-based image search results | |
US9251202B1 (en) | Corpus specific queries for corpora from search query | |
US20170186035A1 (en) | Method of and server for selection of a targeted message for placement into a search engine result page in response to a user search request | |
US9811592B1 (en) | Query modification based on textual resource context | |
US20100161590A1 (en) | Query processing in a dynamic cache | |
US20170228464A1 (en) | Finding users in a social network based on document content | |
US9390183B1 (en) | Identifying navigational resources for informational queries | |
US11537674B2 (en) | Method of and system for generating search query completion suggestion on search engine |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20150528 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
AX | Request for extension of the european patent |
Extension state: BA ME |
|
DAX | Request for extension of the european patent (deleted) | ||
17Q | First examination report despatched |
Effective date: 20170302 |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: GOOGLE LLC |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R003 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE APPLICATION HAS BEEN REFUSED |
|
18R | Application refused |
Effective date: 20181228 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230519 |
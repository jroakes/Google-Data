CN118056384A - Dynamic participant device management for hosting teleconferences - Google Patents
Dynamic participant device management for hosting teleconferences Download PDFInfo
- Publication number
- CN118056384A CN118056384A CN202380011453.1A CN202380011453A CN118056384A CN 118056384 A CN118056384 A CN 118056384A CN 202380011453 A CN202380011453 A CN 202380011453A CN 118056384 A CN118056384 A CN 118056384A
- Authority
- CN
- China
- Prior art keywords
- interaction
- gap
- participant
- participant device
- server
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 230000003993 interaction Effects 0.000 claims abstract description 193
- 238000000034 method Methods 0.000 claims abstract description 47
- 239000000872 buffer Substances 0.000 claims abstract description 46
- 230000007704 transition Effects 0.000 claims abstract description 21
- 230000002452 interceptive effect Effects 0.000 claims description 42
- 238000004891 communication Methods 0.000 claims description 36
- 230000000694 effects Effects 0.000 claims description 27
- 230000008569 process Effects 0.000 claims description 12
- 230000004044 response Effects 0.000 claims description 4
- 238000000638 solvent extraction Methods 0.000 description 25
- 230000006870 function Effects 0.000 description 11
- 238000012545 processing Methods 0.000 description 7
- 230000008901 benefit Effects 0.000 description 3
- 230000001934 delay Effects 0.000 description 3
- 238000012986 modification Methods 0.000 description 3
- 230000004048 modification Effects 0.000 description 3
- 230000009471 action Effects 0.000 description 2
- 230000008859 change Effects 0.000 description 2
- 238000005516 engineering process Methods 0.000 description 2
- 238000005192 partition Methods 0.000 description 2
- 230000000007 visual effect Effects 0.000 description 2
- 229920001621 AMOLED Polymers 0.000 description 1
- 238000007792 addition Methods 0.000 description 1
- 230000003190 augmentative effect Effects 0.000 description 1
- 238000004422 calculation algorithm Methods 0.000 description 1
- 238000004364 calculation method Methods 0.000 description 1
- 238000006243 chemical reaction Methods 0.000 description 1
- 238000004590 computer program Methods 0.000 description 1
- 238000000354 decomposition reaction Methods 0.000 description 1
- 230000008451 emotion Effects 0.000 description 1
- 238000001914 filtration Methods 0.000 description 1
- 239000011521 glass Substances 0.000 description 1
- 239000012464 large buffer Substances 0.000 description 1
- 230000003287 optical effect Effects 0.000 description 1
- 210000003813 thumb Anatomy 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 238000012800 visualization Methods 0.000 description 1
Abstract
Systems and methods for hosting a conference call are disclosed herein. The method may include: the method includes receiving, by a server, a request from a connected participant device to transition from a non-interaction gap to an interaction gap of a conference call, and moving, by the server, the connected participant device from the non-interaction gap to a buffer gap. The method may further comprise: determining, by the server, a longest inactive one of the one or more participant devices currently occupying the interaction gap; removing, by the server, the longest inactive participant device from the associated interaction gap; and moving, by the server, the connected participant device from the buffer gap to the associated interaction gap.
Description
Priority statement
The present application is based on and claims priority from U.S. application Ser. No. 17/945,523, 9/15 of 2022. The applicant claims the priority and benefit of each such application and all such applications are incorporated herein by reference in their entirety.
Technical Field
The present disclosure relates generally to hosting (host) teleconferences, and more particularly to dynamic management of participant devices in teleconferences, which may also be referred to as audio/visual teleconferences, video calls, video phones, and the like.
Background
Scaling the size of a teleconference (e.g., the number of participants in the teleconference, the communication capabilities of each participant, etc.) may increase the processing and bandwidth requirements of the computing infrastructure supporting the teleconference (e.g., video conference, audio conference, multimedia conference, augmented Reality (AR)/Virtual Reality (VR) conference, etc.). To handle these loads, especially in large calls, some existing solutions may divide the participants into two types of slots: an interaction gap for participants that interact with others in the teleconference (e.g., send and receive communication data, etc.) and a non-interaction gap for non-interacting participants (e.g., that receive only but do not send media communications).
However, the participants assigned to the non-interactive slots are typically limited. For example, participants in the non-interactive gap may have large buffers for media communications, resulting in delays in receiving the media communications. Such delays may mean that certain interactive features, such as providing an image reaction (e.g., raising a thumb or lifting a watch emotion symbol) or answering questions in a poll, may delay arrival, making interaction embarrassing, difficult or infeasible. Furthermore, those participants who receive only media communications typically have no means of conveying the media communications to others in the teleconference.
Disclosure of Invention
Various aspects and advantages of the disclosed embodiments will be set forth in part in the following description, or may be learned from the description, or may be learned through practice of the embodiments.
In one embodiment, a method for hosting a conference call may be provided. The method may include: the method includes receiving, by a server, a request from a connected participant device to transition from a non-interaction gap to an interaction gap of a conference call, and moving, by the server, the connected participant device from the non-interaction gap to a buffer gap. The method may further comprise: determining, by the server, a longest inactive one of the one or more participant devices currently occupying the interaction gap; removing, by the server, the longest inactive participant device from the associated interaction gap; and moving, by the server, the connected participant device from the buffer gap to the associated interaction gap.
In another embodiment, a computing system for hosting a conference call may be provided. The computing system may include a server including one or more processors and memory including instructions that, when executed by the one or more processors, cause the one or more processors to perform a process. The process may include: the method includes receiving, by a server, a request from a connected participant device to transition from a non-interaction gap to an interaction gap of a conference call, and moving, by the server, the connected participant device from the non-interaction gap to a buffer gap. The process may further include: determining, by the server, a longest inactive participant device among the one or more participant devices currently occupying the interaction gap; removing, by the server, the longest inactive participant device from the associated interaction gap; and moving, by the server, the connected participant device from the buffer gap to the associated interaction gap.
In another embodiment, a non-transitory computer readable medium may be provided. The non-transitory computer-readable medium may include instructions that, when executed by a server including one or more processors, cause the one or more processors to perform a process. The process may include: the method includes receiving, by a server, a request from a connected participant device to transition from a non-interaction gap to an interaction gap, and moving, by the server, the connected participant device from the non-interaction gap to a buffer gap. The process may further include: determining, by the server, a longest inactive participant device among the one or more participant devices currently occupying the interaction gap; removing, by the server, the longest inactive participant device from the associated interaction gap; and moving, by the server, the connected participant device from the buffer gap to the associated interaction gap.
Other aspects of the disclosure relate to various systems, apparatuses, non-transitory computer-readable media, participant interfaces, and electronic devices.
These and other features, aspects, and advantages of various embodiments of the present disclosure will become better understood with reference to the following description and appended claims. The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate exemplary embodiments of the disclosure and together with the description, serve to explain the principles of interest.
Drawings
A full and enabling description of the present disclosure is set forth in the specification, which makes reference to the appended figures, in which:
Fig. 1 illustrates a computing system for hosting a teleconference in accordance with some implementations of the present disclosure.
Fig. 2 illustrates an example teleconferencing service in accordance with some implementations of the present disclosure.
Fig. 3 is a flow chart illustrating a method for assigning participant devices to participant devices in a teleconference according to some implementations of the present disclosure.
Fig. 4 is a flow chart illustrating a method for assigning participant devices to participant devices in a teleconference according to further implementations of the present disclosure.
Fig. 5 is a flow chart illustrating a method for transitioning a device from a non-interactive gap to an interactive gap in a teleconference, according to some embodiments of the present disclosure.
Detailed Description
In general, the present disclosure relates to dynamic management of gap allocation for participant devices to increase perceived size of a teleconference session. In particular, the proposed system and method involves dividing and dynamically distributing server capacity among participant devices (e.g., devices used by the participants) during the course of a teleconference by assigning the participants to different gaps based on their activities in the teleconference. The gap is an "opening" or "role" in the conference call session of the participant device, such as an interactive gap (e.g., a device that sends and receives communication data) and a non-interactive gap (e.g., a device that receives only communication data). In general, a teleconference session may have a maximum number of slots for participants (e.g., a maximum number of 20 slots, some of which are interactive slots and others of which are non-interactive slots).
To increase the size of a participant-perceived teleconference session, a computing system (e.g., a server computing system hosting or facilitating the teleconference session, etc.) may dynamically transfer participant devices from a non-interactive gap (e.g., a gap for a participant that is not currently transmitting data and is unable to transmit data in the teleconference) to an interactive gap (e.g., a gap for a participant device that is currently transmitting data or is able to transmit data). For example, a teleconference session may be limited to five participant devices sending and receiving data (e.g., in an interaction gap). However, because the participant devices in the non-interaction gap have lower processing and bandwidth requirements (e.g., do not need to both send and receive media and may have somewhat greater latency than the participant devices in the interaction gap), the computing system may facilitate a teleconference with a large number of total participant devices without requiring each participant device to be in the interaction gap, thereby saving the computing resources required for a teleconference call, particularly a large-scale teleconference call with hundreds or more participants.
When a participant needs to switch to the interactive gap, there may be a slight and temporary change in video playback rate as the participant moves between the non-interactive gap and the interactive gap. This may last less than one second due to the use of low latency streaming techniques and buffer interaction gaps. Conversely, when a participant is removed from the interaction gap, the participant is transitioned to the non-interaction gap. Because the non-interactive gap requires less processing and bandwidth to manage, the participant may not even notice the transition to the non-interactive gap, or may only notice the same second or less change in video playback rate.
By managing the allocation of participant-computing devices to interaction slots and non-interaction slots, less processing and bandwidth resources can be used to host large-scale teleconferences while maintaining call quality and participant interactivity. In this way, the participant devices may be dynamically managed by moving them in and out of certain slots to always provide all participants with what they perceive as a single continuous conference connection and interactive participation feature, so that the participants may switch between the non-interactive slots and the interactive slots without noticing that they are already in the non-interactive slots.
Referring now to the drawings, example embodiments of the present disclosure will be discussed in more detail.
Fig. 1 depicts an example system 300 according to an example embodiment of the disclosure. The system 300 may include a client-server architecture in which a server 302 communicates with one or more computing devices 304 over a network 306. Although one computing device 304 is shown in fig. 1, any number of computing devices may be connected to the server 302 via the network 306.
Computing device 304 may be, for example, a computing device such as a wireless mobile device, a Personal Digital Assistant (PDA), a smart phone, a tablet, a laptop, a desktop computer, a computing-enabled watch, a computing-enabled glasses, a game console, an embedded computing system, or other such device/system, having a processor 350 and memory 352. In short, computing device 304 may be any computer, device, or system that can interact (send and receive data) with server system 302 to implement the present disclosure.
In particular, the computing device 304 may be a participant-computing device 304 (e.g., a participant-computing device utilized by a participant, etc.), and will be referred to as such throughout this disclosure. For example, participant-computing device 304 may be a discrete computing device (e.g., a smart phone, a laptop, a wearable device, etc.) used by a participant (e.g., a user, a virtualized user such as a robot, etc.) to participate in a teleconference. For another example, participant-computing device 304 may be a special-purpose computing device configured to facilitate conference call participation by multiple participants (e.g., a computing device connected to audio and video capture devices within a conference room having multiple participants).
The device 350 participating in the computing processor 304 may be any suitable processing device and may be one processor or more than one processor operatively connected. Memory 352 may include any number of computer readable instructions or other stored data. In particular, the memory 352 may include, store, or provide one or more application modules 354. When implemented by the processor 350, the application module 354 may cause or instruct the processor 350 to perform operations consistent with the present disclosure, such as, for example, running a map application or a browser application to obtain and display personalized maps, respectively. Other modules may include a virtual wallet application module, a web-based email module, a gaming application module, or other suitable application module.
It should be understood that the term "module" refers to computer logic for providing the desired functionality. Thus, modules may be implemented in hardware, firmware, and/or software to control a general purpose processor. In one embodiment, the modules are program code files stored on a storage device, loaded into memory, and executed by a processor, or may be provided from a computer program product, such as computer executable instructions stored in a tangible computer readable storage medium, such as a RAM hard disk or an optical or magnetic medium.
The participant-computing device 304 may include a display 356. Display 356 may be any suitable component for providing visualization of information, including, for example, a touch-sensitive display (e.g., a resistive or capacitive touch screen), a monitor, an LCD screen, an LED screen (e.g., AMOLED), or other display technology.
The participant-computing device 304 may also include a communication module 358. The communication module 358 enables the computing device 304 to participate in a teleconference. For example, the communication module 358 may include or may be communicatively coupled to a microphone, a camera, and other suitable components for enabling participants to provide audio and visual communications from the computing device 304. The communication module 358 may also include one or more software components for allowing the participants of the computing device 304 to participate in a teleconference, such as including instructions for operating a teleconference software application, which may enable the participants of the participant-computing device 304 to interact with other participants in the teleconference, such as providing text chat functionality, screen sharing functionality, hand lifting functionality, polling functionality, decomposition meeting room functionality, and other functionality for teleconferencing.
In particular, for example, the communication module 358 may facilitate participating in a conference call. For example, the communication module 358 may be configured to detect when a participant activates a video capture device. In response, the communication module 358 may be configured to send a request to the server computing system 302, for example, requesting the computing device 304 to move from a non-interaction gap to an interaction gap.
The participant-computing device 304 may also include a network interface 360. Network interface 360 may include any suitable components for interfacing with one or more networks, including, for example, a transmitter, a receiver, a port, a controller, an antenna, or other suitable components.
Server 302 may be implemented using one or more suitable computing devices and may include a processor 310 and a memory 312. For example, server 302 may be one server computing device or may be a network of operably connected server computing devices. Where the server 302 comprises a network of server computing devices, such network of server computing devices may be organized into any suitable computing architecture, including a parallel computing architecture, a sequential computing architecture, or some combination thereof.
The processor 310 may be any suitable processing device and may be one processor or more than one processor operably connected. The memory 312 may store instructions 314, the instructions 314 causing the processor 310 to perform operations to implement the present disclosure, including performing aspects of the method (500) of fig. 3.
Server 302 may include one or more modules for providing desired functionality. For example, the server 302 may include a media communication module 316, a partitioning module 318, and a hosting management module 320.
The server 302 may implement a media communication module 316 to provide teleconferencing functionality for the server 302. For example, the media communication module 316 may provide teleconferencing services (as discussed below in fig. 2) and associated functions for teleconferencing services, such as text chat functions, screen sharing functions, hand lifting functions, polling functions, break up conference room functions, and other functions for teleconferencing.
The server 302 may implement a partitioning module 318 to partition the participants into respective slots of the participants. In some embodiments, when a participant of a teleconference connects to the server 302, the partitioning module 318 may determine which of the interaction gap of the participant (e.g., the participant that will actively communicate in the teleconference via video, audio, interactive features such as polling or chat, etc.) and the non-interaction gap of the participant (e.g., the participant that will not actively communicate in the teleconference but will simply stream and observe the teleconference). The partitioning module 318 may use various characteristics of the joining participants and/or different aspects of the teleconference to determine which gap to place the joining participants in.
For example, when a joining participant's participant device causes at least one or both of the camera and microphone to be active as the participant device joins the teleconference, the partitioning module 318 may determine that the joining participant should be placed in the interaction gap, as the camera and microphone being active may indicate that the joining participant wishes to actively participate in the teleconference rather than merely view. In another example, the partitioning module 318 may allocate any joining participants to the interaction gap until a number of participants in the interaction gap equal to a total number of participant devices (e.g., a maximum size) of the interaction gap is reached.
The number of participant devices of the interaction gap indicates how many participants may actively participate in the teleconference, and each of the number of participant devices may have computing resources allocated to the participant devices for allowing active participation in the teleconference. After the number of participant devices is filled (e.g., up to the maximum number of active participants), the partitioning module 318 may then assign the joining participants to the non-interactive slots.
The partitioning module 318 may also enable participants to switch between non-interaction gaps and interaction gaps, and vice versa. For example, the partitioning module 318 may receive an indication from the device participant that the participant device is turning on a camera or microphone of the participant device or in some other manner indicating that active participation in the teleconference is desired.
In some embodiments, if the gap is still available in the interaction gap, the partitioning module 318 may immediately switch the participant device to the gap in the interaction gap. In other embodiments where the interaction gap is full and there is no available gap, the partitioning module 318 may determine which current participant device in the interaction gap has been inactive the longest (e.g., both current microphone and camera are off, audio data has not been sent via microphone for the longest period of time, video has been muted or turned off for the longest period of time, audio data having energy above some voice indicator threshold has not been sent for the longest period of time, etc.), and may remove the longest inactive participant device from the interaction gap occupied by the longest inactive participant device in the interaction gap. The longest inactive participant device is then moved to a non-interactive gap. The participant devices requesting to join the interaction gap may then be added to the released participant devices in the interaction gap.
In some embodiments, the interaction gap may include both an activity gap and a buffer gap. The participant devices in the active gap may transmit audio and video immediately at any time. On the other hand, the partitioning module 318 uses the buffer gap to temporarily hold participant devices that are transitioning from a non-interaction gap to an activity gap in the interaction gap. For example, the partitioning module 318 may receive an indication that a device participant in a non-interactive gap has turned on a microphone, turned on a camera, or has otherwise requested communication in a teleconference, rather than simply observing permission for the teleconference. The partitioning module 318 may move the requesting participant device to a buffer gap, which is a fast switching action that is too short in delay to be noticed or causes inconvenience to the participant using the participant device.
The partitioning module 318 then determines the longest inactive participant device in the active gap of the interaction gap, as discussed above. The partitioning module 318 moves the longest inactive participant device to a non-interaction gap and then moves the participant device requesting movement to the interaction gap from the buffer gap to the now vacated activity gap.
To properly divide the participants, the algorithm may determine a pivot point "x" of the teleconference with the largest number of interacting participants "N". Instead of treating each participant device as equal, the pivot point x is used to determine when to place the participant device in the inter-activity gap, the inter-buffer gap, or the non-inter-interaction gap. The pivot point x may be a number between 0 and 1, and may be a number closer to 1 than 0 (e.g., 0.8). When a participant joins the call, the pivot point x is multiplied by the number N. When the number of current participants exceeds the result of this calculation, the N available interaction slots may be divided into interaction "activity" slots and interaction "buffer" slots. The partitioning may be asymmetric such that x N slots are "active" slots and (1-x) N slots are "buffer slots".
In some embodiments, if the number of buffer slots is greater than one, the partitioning module 318 may perform multiple transitions of the participant device's activity slots from non-interaction slots to interaction slots in parallel.
In some embodiments, the partitioning module 318 may determine a pivot point for the conference that determines when the partitioning module 318 should begin determining which gap to assign the joining participant. For example, a conference call may handle a total of T participants, where N participants are in the participants' activity gap. Instead of treating all participating points (PARTICIPANT SPOT) as equal, a pivot point x may be determined, where x is a number closer to 1 than 0 (e.g., 0.8).
When the total number of participants is greater than x N, the partitioning module 318 may partition the interaction gap into a plurality of activity gaps a and a plurality of buffer gaps B. The division is asymmetric such that a equals x N and B equals 1- (x N).
When the conference size is below x N, all joining participants may be assigned to an activity gap in the interaction gap. When the conference size is higher than x N, if there is an idle activity gap, participants joining the conference with media activity (e.g., microphone or camera or both on) may be added to the idle activity gap. If there is no free active gap, the joining participant will be added to the non-interactive gap, and in some embodiments one or more media communication methods may be turned off (e.g., automatically muting the microphone or turning off the camera if either is active).
Then, as described above, if the participant wishes to transition between the non-interactive gap and the active gap of the interactive gap, the participant makes a request to the participant device, and the partitioning module 318 may temporarily move the participant device to the buffer gap while releasing the active gap. The buffer gap may have a similar function as the active interaction gap, for example, allowing participants of the participant devices to immediately begin sending media communications to the teleconference.
Furthermore, to achieve a simple transition, both the active gap and the buffer gap are interactive gaps, and instead of actively moving the participant device from the buffer gap to the active gap, the partitioning module 318 may simply re-label the buffer gap as the active gap and re-label the identified active gap of the longest inactive participant device as the buffer gap. In this way, computational resources are saved because the interaction gap is simply re-marked and re-purposed, rather than actually performing some switching between the gap and the active gap.
The choice of x determines how many participants can switch between the non-interaction gap and the interaction gap's activity gap through the buffer gap at the same time. A high value of x provides maximum use of the interaction gap at the cost of risking longer delays for participants in non-interaction gaps that wish to switch to the interaction gap, as releasing the activity gap may take a longer period of time. The low value of x provides a large capacity for the enrollee device to switch at the cost of wasting interaction space that may not be used.
Server 302 may implement a host management module 320 to allow a host of teleconferences to manage teleconferences. For example, the hosting management module 320 may enable a host of a conference to manually transition participants between their interaction gaps and their non-interaction gaps, to create polls, to create temporary rooms for the participants, and to perform other hosting features of the teleconference.
Server 302 may be coupled to or in communication with one or more databases including a database providing user data 322, a geographic information system 324, a database containing comments 326, and external content 328. Although user data 322 and databases 324, 326, and 328 are depicted in fig. 1 as being external to server 302, one or more of such databases may be included in memory 312 of server 302. Further, user data 322, 324, 326, and 328 may each correspond to a network of databases rather than a single data source.
User data 322 may include, but is not limited to: email data including text content, images, calendar information associated with emails, or contact information; social media data including comments, check-ins, likes, invitations, contacts, or subscriptions; calendar application data, including date, time, event, description, or other content; virtual wallet data including purchases, electronic tickets, coupons, or transactions; scheduling data; position data; SMS data; or other suitable data associated with the participant account. In general, according to one aspect of the disclosure, such data may be analyzed to determine that a participant device may request a transition from a non-interactive gap to an interactive gap in a conference call.
Importantly, the example of user data 322 provided above is provided merely for the purpose of illustrating potential data that may be collected in some embodiments to determine which participants of a teleconference (e.g., whether they have permission to join the teleconference and other related data). However, such user data is not collected, used, or analyzed unless the participant has agreed after being notified of what data was collected and how such data was used. Further, in some embodiments, the participant may be provided with a tool to revoke or modify the scope of the license. In addition, certain information or data may be processed in one or more ways before it is stored or used, such that personally identifiable information is removed or stored in an encrypted manner.
The computer-based system 300 may also include external content 328. The external content 328 may be any form of external content including news articles, web pages, video files, audio files, written descriptions, ratings, game content, social media content, photographs, commercial offers, traffic methods, weather conditions, or other suitable external content. The server system 302 and the computing device 304 may access external content 328 over the network 306. The external content 328 may be searched by the server 302 according to known search methods and may be ranked according to relevance, popularity, or other suitable attributes, including location-specific filtering or promotion.
The network 306 may be any type of communication network, such as a local area network (e.g., an intranet), a wide area network (e.g., the internet), or some combination thereof, and may include any number of wired or wireless links. In general, communications between the server 302 and the computing device 304 may be carried via any type of wired and/or wireless connection using various communication protocols (e.g., TCP/IP, HTTP, SMTP, FTP), coding or formats (e.g., HTML, XML), and/or protection schemes (e.g., VPN, secure HTTP, SSL). Preferably, however, the computing device 304 is free to move around the world and communicate with the server 302 in a wireless manner.
Fig. 2 illustrates an example teleconference service 400 in accordance with some implementations of the present disclosure. For example, the teleconference service 400 may be provided by the server 302 of fig. 1 (e.g., using the media communication module 318, the partitioning module 318, the hosting management module 320, etc.). Teleconference service 400 may include an interactive participant gap 410 and a non-interactive gap 420. Interaction gap 410 is a gap in which device participants are allowed to provide media communications (such as video and audio data) to other participants in every other gap of the teleconference during the duration of the teleconference. Interaction gap 410 may include an active interaction gap 430 and a buffer interaction gap 440. The active interaction gap 430 allows the participant devices assigned to these gaps to freely use media communications in the teleconference. Buffer interaction gap 440 is a "transition" gap for temporarily storing participant devices that are moving from non-interaction gap 420 to active interaction gap 430. In some embodiments, the participant devices assigned to the buffer gap 440 may immediately begin performing the functions of the participant devices assigned to the active interaction gap 430.
There is typically a much larger number of non-interaction gaps 420 than interaction gaps 410 because non-interaction gaps 420 require less computing resources than interaction gaps 410. For example, the non-interactive slots 420 do not require computing resources (e.g., power, memory, computing cycles, bandwidth, etc.) to handle receiving media communications from the participant devices assigned to the non-interactive slots 420 because the participants of the participant devices assigned to the non-interactive slots 420 only stream teleconferences and do not actively participate in teleconferences.
Fig. 3 is a flow chart illustrating a method 500 for assigning participant devices to gaps in a teleconference according to some implementations of the present disclosure. In some embodiments, method 500 is performed by a computing system, such as server 302 of fig. 1.
At operation 510, the computing system may receive a connection request from a participant device to join a conference call (e.g., via a wireless network, etc.). For example, the participant of the participant device may provide a selection input that selects a link to join the teleconference from an email, a text message, a calendar item, a website, or any other suitable data structure that may contain a link to the teleconference. The request may be any manner of request sufficient to allow the participant device to connect to the conference call. For example, the request may be a data packet identifying the participant device or aspects of the participant (e.g., IP address, bandwidth capability, processing power, historical participant interactivity, etc.).
At operation 520, in some implementations, the computing system may determine a pivot point for the teleconference. The pivot point may be the point at which the computing system should begin to determine which gap to assign the joining participant device. For example, a teleconference may handle a total of T participant devices, with N participants in the interaction gap. Instead of treating all participant gaps as equal, a pivot point x may be determined, where x is a number closer to 1 than 0 (e.g., 0.8).
At operation 530, the computing system may multiply the pivot point by the number of interaction gaps to receive the result. When the total number of participants is greater than x N, the server may divide the interaction gap into a plurality of activity gaps "a" and a plurality of buffer gaps "B". The partitioning may be asymmetric such that a equals x N and B equals 1- (x N).
At operation 540, the computing system may assign the participant devices to an interaction gap or a non-interaction gap. When the conference size is below x N, all joining participant devices may be assigned to an activity gap in the interaction gap. When the conference size is above x N, if there is an idle activity gap, participant devices with active media capturing devices (e.g., microphone or camera or both on) joining the conference may be added to the idle activity gap. If there is no free activity gap, the joining participant will be added to the non-interactive gap, and in some embodiments, an instruction may be sent to deactivate one or more communication capture devices (e.g., automatically mute the microphone or turn off the camera if either is active).
Then, as described above, if the participant device provides a request to transition between the non-interaction gap and the activity gap of the interaction gap, the computing system may temporarily move the participant device to the buffer gap while releasing the activity gap. The buffer gap may have a similar function as the activity gap, such as allowing participants of the participant devices to immediately begin sending media communications to the conference call.
Furthermore, to achieve a simple transition, both the active gap and the buffer gap are interaction gaps, and instead of actively moving the participant device from the buffer gap to the active gap, the computing system may simply re-label the buffer gap as the active gap and re-label the identified active gap of the longest inactive participant device as the buffer gap. In this way, computational resources are saved because the interaction gap is simply re-marked and re-purposed, rather than actually performing some switching between the buffer gap and the active gap.
Fig. 4 is a flow chart illustrating a method 600 for assigning participant devices to gaps in a teleconference according to a further implementation of the present disclosure. In some embodiments, method 600 may be performed by a computing system, such as server 302 of fig. 1.
At operation 610, the computing system may determine whether the total number of connected devices is less than the number of interaction gaps available for the teleconference. If the total number of connected devices is less than the number of available interaction slots (yes at operation 610), the computing system may assign any joined participants to the interaction slots until the number of participants in the interaction slots is equal to the total number of interaction slots (e.g., the maximum size) (at operation 620). The number of interaction gaps indicates how many participant devices may actively participate in the teleconference, and each of the plurality of participant devices may have computing resources allocated to the participant devices for allowing active participation in the teleconference. In some embodiments, making the determination may include making the determination based on the determined pivot point and the resulting multiplication result.
If the total number of connected devices is greater than the number of interaction gaps (no at operation 610), the computing system may determine whether the microphone or camera of the requesting device is currently on (at operation 630). If the device does not turn on the microphone or camera (no at operation 630), the computing system may assign the device to a non-interactive gap (at operation 640). If the camera or microphone of the device is currently active (yes at operation 630), the computing system may determine whether all interaction gaps are currently full (at operation 650).
If no interaction gap is currently available in the teleconference (yes at operation 650), the computing system may assign the participant device to a buffer gap (at operation 660) and then assign the participant device to an activity gap from the buffer gap, as described below with respect to fig. 5. If one or more interaction gaps are available (NO at operation 650), the participant device may be assigned by the computing system to an open active interaction gap (at operation 670).
Fig. 5 is a flow chart illustrating a method 700 for transitioning a device from a non-interactive gap to an interactive gap in a teleconference, in accordance with some implementations of the present disclosure. In some embodiments, method 700 may be performed by a computing system, such as server 302 of fig. 1.
At operation 710, the computing system may receive a request to transition the participant device from a non-interaction gap to an interaction gap. In some embodiments, the request to transition from the non-interaction gap to the interaction gap may be the participant of the participant device turning on a camera or microphone or both of the participant device. In other embodiments, the participants of the participant device may provide a selection input indicating a request to switch to the interaction gap using, for example, a menu selection or other selection within the participant interface of the teleconferencing software application.
At operation 720, the computing system may move the participant device from the non-interaction gap to the open buffer gap of the interaction gap. In some embodiments, if the participant device is still available in the interaction gap, the computing system may immediately transition the participant device to a gap in the interaction gap.
At operation 730, the computing system may determine the longest inactive device of the participant devices currently using the active interaction gap. In some embodiments, the server may determine which current participant of the device has been inactive for the longest time in the interaction gap (e.g., both current microphone and camera are off, audio data is not sent via microphone for the longest period of time, video has been muted or turned off for the longest period of time, audio data with energy above some voice indicator threshold is not sent for the longest period of time, etc.).
At operation 740, the computing system may remove the longest inactive participant device from the gap that the longest inactive participant device occupies in the active interaction gap. The longest inactive participant device is then moved to a non-interaction gap.
At operation 750, the computing system may move the participant device from the buffer gap to a released activity gap in the interaction gap.
The technology discussed herein refers to servers, databases, software applications, and other computer-based systems, as well as actions taken and information sent to and from such systems. The inherent flexibility of computer-based systems allows for a variety of possible configurations, combinations, and divisions of tasks and functions between and among components. For example, the processes discussed herein may be implemented using a single device or component or multiple devices or components working in combination. The database and applications may be implemented on a single system or distributed across multiple systems. The distributed components may operate sequentially or in parallel.
While the present subject matter has been described in detail with respect to various specific example embodiments thereof, each example is provided by way of explanation and not limitation of the present disclosure. Modifications, variations and equivalents to those embodiments will readily occur to those skilled in the art upon attaining an understanding of the foregoing. Accordingly, the subject disclosure does not preclude inclusion of such modifications, variations and/or additions to the present subject matter as would be readily apparent to one of ordinary skill in the art. For example, features illustrated or described as part of one embodiment can be used with another embodiment to yield still a further embodiment. Accordingly, the present disclosure is intended to cover such alternatives, modifications, and equivalents.
Claims (20)
1. A method for hosting a conference call, the method comprising:
receiving, by the server, a request from a connected participant device to transition from a non-interaction gap to an interaction gap of the teleconference;
moving, by the server, the connected participant device from the non-interactive gap to a buffer gap;
Determining, by the server, a longest inactive participant device among one or more participant devices currently occupying an interaction gap;
removing, by the server, the longest inactive participant device from the associated interaction gap; and
The connected participant devices are moved from the buffer gap to the associated interaction gap by the server.
2. The method of claim 1, the method further comprising:
Receiving, by the server, a connection request from a participant device, the connection request indicating whether at least one of a microphone and a camera of the participant device is currently active; and
Assigning, by the server, a participant device to one of an interaction gap of a plurality of interaction gaps and a non-interaction gap of a plurality of non-interaction gaps based on a number of participant devices currently connected to the conference call and an indication that microphones and cameras of the participant devices are currently active, wherein the participant device enables participants of the participant device to provide media communications to the conference call when the participant device is assigned to the interaction gap.
3. The method of claim 2, wherein a participant device connected to the conference call is assigned to an interaction gap when the number of participant devices is less than a maximum number of interaction gaps.
4. The method of claim 2, further comprising:
Determining, by the server, a pivot point indicating a number of connected devices through which participant devices should be divided into the plurality of interaction gaps and the plurality of non-interaction gaps;
Multiplying, by the server, the pivot point by a number of interaction gaps associated with the conference call to obtain a result; and
In response to receiving, by the server, the connection request from the participant device:
Determining that a number of participant devices currently connected to the conference call is greater than or equal to the result;
Assigning the participant device to the interaction gap when the plurality of interaction gaps includes one or more interaction gaps that are not currently in use; and
The participant device is assigned to the non-interaction gap when the plurality of interaction gaps do not have one or more interaction gaps that are currently unused.
5. The method of claim 1, wherein the request from the connected participant device to transition from the non-interaction gap to the interaction gap comprises: a participant associated with the connected participant device activates at least one of a microphone and a camera of the connected participant device.
6. The method of claim 1, wherein determining the longest inactive participant device comprises: the one of the participant devices that least recently caused the video to be active is determined.
7. The method of claim 1, wherein determining the longest inactive participant device comprises: the one of the participant devices that least recently caused audio activity is determined.
8. The method of claim 1, wherein determining the longest inactive participant device comprises: the one of the participant devices that least recently sent audio having energy above the voice indicator threshold is determined.
9. A computing system for hosting a teleconference, the computing system comprising:
a server comprising one or more processors and memory, the memory comprising instructions that when executed by the one or more processors cause the one or more processors to perform a process comprising:
receiving, by the server, a request from a connected participant device to transition from a non-interaction gap to an interaction gap of the teleconference;
moving, by the server, the connected participant device from the non-interactive gap to a buffer gap;
Determining, by the server, a longest inactive participant device among one or more participant devices currently occupying an interaction gap;
removing, by the server, the longest inactive participant device from the associated interaction gap; and
The connected participant devices are moved from the buffer gap to the associated interaction gap by the server.
10. The computing system of claim 9, the process further comprising:
Receiving, by the server, a connection request from a participant device, the connection request indicating whether at least one of a microphone and a camera of the participant device is currently active; and
Assigning, by the server, a participant device to one of an interaction gap of a plurality of interaction gaps and a non-interaction gap of a plurality of non-interaction gaps based on a number of participant devices currently connected to the conference call and an indication that microphones and cameras of the participant devices are currently active, wherein the participant device enables participants of the participant device to provide media communications to the conference call when the participant device is assigned to the interaction gap.
11. The computing system of claim 10, wherein a participant device connected to the conference call is assigned to an interaction gap when the number of participant devices is less than a maximum number of interaction gaps.
12. The computing system of claim 10, further comprising:
Determining, by the server, a pivot point indicating a number of connected devices through which participant devices should be divided into the plurality of interaction gaps and the plurality of non-interaction gaps;
Multiplying, by the server, the pivot point by a number of interaction gaps associated with the conference call to obtain a result; and
In response to receiving, by the server, the connection request from the participant device:
Determining that a number of participant devices currently connected to the conference call is greater than or equal to the result;
Assigning the participant device to the interaction gap when the plurality of interaction gaps includes one or more interaction gaps that are not currently in use; and
The participant device is assigned to the non-interaction gap when the plurality of interaction gaps do not have one or more interaction gaps that are currently unused.
13. The computing system of claim 9, wherein the request from the connected participant device to transition from the non-interaction gap to the interaction gap comprises: a participant associated with the connected participant device activates at least one of a microphone and a camera of the connected participant device.
14. The computing system of claim 9, wherein determining the longest inactive participant device comprises: the one of the participant devices that least recently caused the video to be active is determined.
15. The computing system of claim 9, wherein determining the longest inactive participant device comprises: the one of the participant devices that least recently caused audio activity is determined.
16. The computing system of claim 9, wherein determining the longest inactive participant device comprises: the one of the participant devices that least recently sent audio having energy above the voice indicator threshold is determined.
17. A non-transitory computer-readable medium comprising instructions that, when executed by a server comprising one or more processors, cause the one or more processors to perform a process for hosting a conference call, the process comprising:
receiving, by a server, a connection request from a participant device, the connection request indicating whether at least one of a microphone and a camera of the participant device is currently active;
assigning, by the server, the participant device to one of an interaction gap of the plurality of interaction gaps and a non-interaction gap of the plurality of non-interaction gaps based on a number of participant devices currently connected to the teleconference and an indication that microphones and cameras of the participant devices are currently active, wherein the participant device, when assigned to the interaction gap, enables participants of the participant device to provide media communications to the teleconference;
Receiving, by the server, a request from a connected participant device to transition from a non-interaction gap to an interaction gap;
moving, by the server, the connected participant device from the non-interactive gap to a buffer gap;
Determining, by the server, a longest inactive participant device among one or more participant devices currently occupying an interaction gap;
removing, by the server, the longest inactive participant device from the associated interaction gap; and
The connected participant devices are moved from the buffer gap to the associated interaction gap by the server.
18. The non-transitory computer-readable medium of claim 17, wherein a participant device connected to the conference call is assigned to an interaction gap when the number of participant devices is less than a maximum number of interaction gaps.
19. The non-transitory computer-readable medium of claim 17, the process further comprising:
Determining, by the server, a pivot point indicating a number of connected devices through which participant devices should be divided into the plurality of interaction gaps and the plurality of non-interaction gaps;
Multiplying, by the server, the pivot point by a number of interaction gaps associated with the conference call to obtain a result; and
In response to receiving, by the server, the connection request from the participant device:
Determining that a number of participant devices currently connected to the conference call is greater than or equal to the result;
Assigning the participant device to the interaction gap when the plurality of interaction gaps includes one or more interaction gaps that are not currently in use; and
The participant device is assigned to the non-interaction gap when the plurality of interaction gaps do not have one or more interaction gaps that are currently unused.
20. The non-transitory computer-readable medium of claim 17, wherein determining the longest inactive participant device comprises at least one of: the one that least recently caused the audio to be active is determined, and the one that least recently caused the video to be active is determined.
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US17/945,523 | 2022-09-15 |
Publications (1)
Publication Number | Publication Date |
---|---|
CN118056384A true CN118056384A (en) | 2024-05-17 |
Family
ID=
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11283749B2 (en) | Method and system for controlling message transmission for a communication group | |
CN107533417B (en) | Presenting messages in a communication session | |
US10356365B2 (en) | Framework to support a hybrid of meshed endpoints with non-meshed endpoints | |
US20200280591A1 (en) | System and Method for Efficient Port and Bandwidth Utilization in Setting up Communication Sessions | |
JP5506922B2 (en) | View contact information during a call | |
CN101682568B (en) | Method and apparatuses for adjusting bandwidth allocation during a collaboration session | |
US20150032809A1 (en) | Conference Session Handoff Between Devices | |
US20180018371A1 (en) | User interface displaying filtered information | |
CN105264473A (en) | Unified communications application functionality in condensed and full views | |
CN109586929B (en) | Conference content transmission method and device, electronic equipment and storage medium | |
CN112600878B (en) | Data transmission method and device | |
WO2015073468A1 (en) | Real life presence and dynamic meeting scheduling | |
JP2021535515A (en) | Event content distribution | |
CN111935442A (en) | Information display method and device and electronic equipment | |
JP2023530151A (en) | COMMUNICATION METHOD, APPARATUS AND ELECTRONIC DEVICE | |
CN105706441A (en) | Self-adaptive sample period for content sharing in communication sessions | |
JP6843920B2 (en) | Multi-way audio-video conferencing with multiple communication channels per device | |
US9088629B2 (en) | Managing an electronic conference session | |
CN118056384A (en) | Dynamic participant device management for hosting teleconferences | |
CN108900794B (en) | Method and apparatus for teleconferencing | |
CN113452948B (en) | Conference terminal control method, device, equipment and storage medium | |
US20240097926A1 (en) | Dynamic Participant Device Management for Hosting a Teleconference | |
WO2023014903A1 (en) | Video conferencing systems featuring multiple spatial interaction modes | |
CN106941485B (en) | Signaling control method and system based on multimedia interaction system | |
CN113037816B (en) | Communication method, storage medium and related equipment |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication |
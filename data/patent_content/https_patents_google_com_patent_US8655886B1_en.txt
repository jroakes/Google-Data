US8655886B1 - Selective indexing of content portions - Google Patents
Selective indexing of content portions Download PDFInfo
- Publication number
- US8655886B1 US8655886B1 US13/072,250 US201113072250A US8655886B1 US 8655886 B1 US8655886 B1 US 8655886B1 US 201113072250 A US201113072250 A US 201113072250A US 8655886 B1 US8655886 B1 US 8655886B1
- Authority
- US
- United States
- Prior art keywords
- portions
- index
- inclusive
- documents
- user
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/10—File systems; File servers
- G06F16/13—File access structures, e.g. distributed indices
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/31—Indexing; Data structures therefor; Storage structures
Definitions
- This description relates to content indexing.
- Information providers seek to provide information consumers with desired information in a manner which is fast, accurate, and efficient, and which makes productive use of available information resources.
- information consumers may include network users who wish to access, e.g., over a computer network, desired information which is stored in computer memory.
- the information provider may be responsible for providing access to the desired information within the computer memory.
- the information provider may provide a search engine to the information consumers, e.g., network users.
- the network users may submit a search request for the desired information, whereupon the information provider may execute the search with respect to the information stored in the computer memory, and may thereafter provide the desired information to the requesting user.
- the user may wish to receive the desired information as quickly as possible.
- the amount of information to be searched within the computer memory may be quite large, while the amount of available computer memory itself is nonetheless finite. For these and other reasons, it may be difficult to locate the information desired by the user within an acceptable timeframe, in a manner which optimizes use of the computer memory (and other computing resources of the information provider).
- the stored information may be indexed.
- indexing may include identifying and/or extracting discrete elements from within the stored information, and then storing each such discrete element along with a reference to the location within the stored information from which the corresponding discrete element was extracted.
- the stored information may include a plurality of text documents, in which case the documents may be indexed by extracting individual words therefrom, and thereafter storing each word together with a reference to the (location within the) document from which the word was obtained.
- the information provider may receive a request for desired information from a network user, where the request may include one or more of the words indexed in the manner just described.
- the information provider may quickly determine a location of one or more documents which contain the indexed word. Then, the information provider may provide one or more of the located documents to the user in response to the user's request.
- an amount of information to be stored may be very large, i.e., may require a large amount of physical computer memory to store all of the information.
- indexing the stored information advantageously provides faster and more accurate searching thereof, the index itself also must be stored, and thereby adds to the requirements for available memory resources.
- a computer system may include instructions stored on a computer-readable medium and executable by at least one processor.
- the computer system may include a request monitor configured to cause the at least one processor to monitor user requests, each user request including at least one keyword.
- the computer system may include a portion evaluator configured to determine inclusive portions of content file portions of indexed content files within an index, and to assign values to the inclusive portions, based on a providing of at least one of the indexed content files to the user in response to the user request.
- the computer system also may include a portion selector configured to select, from the inclusive portions and based on the values, retained portions to be retained within the index, and an index updater configured to update the index to replace the indexed content files with the retained portions.
- a computer program product may be tangibly embodied on a computer-readable medium and may include executable code that, when executed, may be configured to cause a data processing apparatus to determine inclusive portions of content file portions of indexed content files within an index, the inclusive portions associated with at least one keyword of a user request.
- the executable code when executed, may be further configured to cause a data processing apparatus to assign values to the inclusive portions, based on a providing of at least one of the indexed content files to the user in response to the user request.
- the executable code when executed, may be further configured to cause a data processing apparatus to select, from the inclusive portions and based on the values, retained portions to be retained within the index, and to update the index to replace the indexed content files with the retained portions.
- a computer-implemented method may include executing instructions stored on a computer-readable medium.
- the method may include determining, using at least one processor, inclusive portions of content file portions of indexed content files within an index, the inclusive portions associated with at least one keyword of a user request.
- the method may include assigning values to the inclusive portions, based on a providing of at least one of the indexed content files to the user in response to the user request.
- the method may further include selecting, from the inclusive portions and based on the values, retained portions to be retained within the index, and updating the index to replace the indexed content files with the retained portions.
- FIG. 1 is a block diagram of a system for selectively indexing content files.
- FIG. 2 is a flowchart illustrating example operations of the system of FIG. 1 .
- FIG. 3 is a block diagram illustrating selective indexing of a web document.
- FIG. 4 is a flowchart illustrating more detailed examples of operations of the system of FIG. 1 .
- FIG. 5 is a block diagram showing example or representative computing devices and associated elements that may be used to implement the systems and methods of FIGS. 1-4 .
- FIG. 1 is a block diagram of a system 100 for selectively indexing content files.
- an index manager 102 may be configured to perform selective indexing, so as to maximize an efficiency and productivity of the indexing process.
- the index manager 102 may facilitate an efficient and productive operation of a search manager 104 in executing user-specified searches, based on results of the indexing processes of the index manager 102 .
- the index manager 102 may be configured to receive whole, entire content files 106 , and may be configured to thereafter index some or all of the whole content files 106 , as described in detail below, for subsequent use thereof by the search manager 104 .
- the whole content files 106 may represent virtually any type of information which may be stored using a computer memory.
- the content files 106 may include text-based documents of any sort, e.g., articles, papers, publications, webpages, or any other content file which primarily or exclusively includes text, where such text may be organized according to virtually any desired or conventional format.
- the content files 106 may include virtually any media content, including, e.g., images, video files, audio files, or any combinations thereof.
- Other examples of content files 106 would be apparent to one of skill in the art, and therefore are not described here in detail, except as may be necessary or helpful in understanding the operations of the system 100 of FIG. 1 .
- the search manager 104 may receive one or more user requests, conceptually represented in FIG. 1 as a user request 108 .
- the user request 108 may include one or more keywords 110 which are provided by the user, and which are thought by the user to be included in, or associated with, information desired to be received by the user.
- the search manager 104 may include (or be associated with) a search engine.
- the user may enter the user request 108 including the keyword 110 into a webpage or other portal provided by the search manager 104 .
- the user request 108 may be provided over a computer network, and/or may be provided with respect to a local computing device.
- the search manager 104 may utilize indexing operations of the index manager 102 in order to identify one or more particular content files from the content files 106 which are thought to be most desirable to the user. Specifically, as shown in the example of FIG. 1 , the search manager 104 may provide search request results 112 to the user.
- the request results 112 include a snippet 114 and a snippet 116 which include selected portions of the content files of the content files 106 which are extracted or identified by the search manager 104 for provision to the user in response to the user request 108 .
- the snippets 114 , 116 may include, or be associated with, links to the underlying content files from which the snippets 114 , 116 were extracted or identified. Consequently, the user may select a desired snippet (or associated link), and thereby obtain access to a desired content file.
- the index manager 102 may include an index builder 118 which is configured, among other features as described in detail herein, to execute various conventional indexing functionalities.
- the index builder 118 may initially receive the content files 106 , and may analyze the content files 106 to construct an index 120 to be used by the search manager 104 in providing the request results 112 in response to the user request 108 .
- the index builder 118 may receive or otherwise obtain a particular content file of the whole content files 106 , and may analyze the particular content file to identify particular words, images, or other elements thereof which are thought to be potentially useful in constructing the index 120 . That is, the index builder 118 may extract such discrete elements (e.g., words, phrases, or images), based on a goal of indexing the particular content file within the index 120 in a manner which facilitates efficient and productive execution of the search manager 104 in providing the request results 112 .
- discrete elements e.g., words, phrases, or images
- the index builder 118 may index an entirety of each content file of the whole content files 106 . That is, for example, the index builder 118 may extract each word (or each unique word) from a text-based document of the whole content files 106 , and may store each extracted word within the index 120 , in association with an identification of (and/or other information about) the content file from which each extracted word was obtained.
- the index builder 118 may store an entirety of each of the whole content files 106 within, or in association with, the index 120 .
- the index 120 may merely include a reference (e.g., hyperlink) to a storage location of a corresponding content file (e.g., which may be located elsewhere within an associated computer network).
- the index builder 118 may ignore words or other elements which are thought to be of suboptimal use to the search manager 104 in providing the request results 112 .
- the index builder 118 may ignore words such as articles (e.g., a, and, the), or other very common words which are not thought to contribute to accurate production of the request results 112 .
- the index builder 118 may truncate later portions of the whole content files 106 , such as, for example, when a particular one of the whole content files 106 is exceedingly lengthy.
- the search manager 104 may include a request handler 122 which receives the user request 108 .
- the request handler 122 may include, or be associated with, a search engine which is configured to utilize the keyword 110 to access the index 120 and to thereby identify indexed content files of the whole content files 106 which include, or are associated with, the keyword 110 .
- the search manager 104 may include a snippet selector 124 which may be configured to examine content files identified by the request handler 122 as including the keyword 110 , and to thereafter extract corresponding snippets 114 , 116 for inclusion within the request results 112 . Then, a result provider 126 may be configured to provide the request results 112 , including the snippets 114 , 116 . Thereafter, the result provider 126 may ultimately provide, or provide access to, a particular content file which is desired by the user, as expressed by selection by the user of a corresponding snippet, (e.g., the snippet 114 ).
- the search manager 104 receives the user request 108 and provides the request results 112 over the Internet or other network
- the request results 112 may be provided in, or using, appropriate browser software, i.e., the same browser software used to receive the user request 108 .
- the search manager 104 e.g., the result provider 126 , may provide the request results 112 over a plurality of webpages.
- the result provider 126 may provide an initial subset (e.g., 10 or 25) of obtained snippets within the first page of a set of webpages within the web browser, and may provide a second set of snippets within a second page.
- the snippets 114 , 116 included in the various webpages may be arranged in an order which is thought to correspond to a likelihood that a given snippet matches a desired result of the user, i.e., accurately fulfills the user request 108 .
- the index 120 may be stored using one or more computer memories, where such computer memories may be associated with finite or limited computing resources.
- a size of the computer memory may be limited.
- each particular content file may include only some particular portions which actually contribute to inclusion of the associated content file within the request results 112 . Therefore, as described in detail herein, the index manager 102 may be configured to index only those portions which are sufficiently likely to contribute to future user requests. In this way, a lesser amount of information is stored within a computer memory associated with the index 120 , so that a greater number of content files 106 may be indexed in an effective manner, and/or so that, given a certain amount of computing resources, indexed content files may be retrieved by the search manager 104 in a sufficiently timely manner for inclusion within the request results 112 .
- FIG. 1 illustrates a specific content file 128 of the content files 106 . That is, as may be appreciated from the above discussion, the content file 128 may initially represent the entirety of a content file of the content files 106 , which is initially indexed by the index builder 118 for inclusion of the corresponding index results within the index 120 .
- the content file 128 may be considered to include a plurality of portions 130 , 132 . That is, using one or more of the various methods described herein, content of the content file 128 may be separated into discrete or separate subsets, referred to herein as portions. For example, in a situation where the content file 128 includes text, then the portions 130 , 132 may include fractions of the text. Many examples are provided in detail below, or would be apparent, and may include, for example, specific sentences, paragraphs, or other sequential strings of text. In other examples, the portions 130 , 132 may be associated with, or defined by, one or more snippets used by the search manager 104 , as discussed above with respect to snippets 114 , 116 . In examples where the portions 130 , 132 include image, video, and/or audio portions of a multi-media version of the content file 128 , then the portions 130 , 132 may be defined in a manner appropriate to the particular type of content.
- the search manager 104 may receive the user request 108 , including the keyword 110 . Thereafter, as described, the search manager 104 may utilize the keyword 110 in conjunction with the index 120 to provide the request results 112 . Specifically, as shown with respect to the content file 128 , the search manager 104 may identify the keyword 110 within the index 120 , and may thereby identify the content file 128 as including the keyword 110 . Moreover, as shown in FIG. 1 and as just referenced above, the index manager 102 may be configured to recognize that the keyword 110 is included within the portion 130 of the content file 128 . Therefore, for purposes of clarity and convenience, the portion 130 is illustrated in FIG. 1 and referred to hereafter as an inclusive portion, because it includes the keyword 110 .
- the portion 132 did not contribute to identification of the content file 128 as being associated with the user request 108 and included within the request results 112 . In this sense, the portion 132 was therefore needlessly indexed and/or stored, and therefore represents a drain on resources of the system 100 .
- the index manager 102 may be configured to identify the inclusive portion 130 as contributing to inclusion of the content file 128 within the request results 112 , and may therefore retain the inclusive portion 130 as a retained portion 134 within, or associated with, the index 120 . Meanwhile, the index manager 102 may delete or otherwise discard the portion 132 and any associated index information stored within the index 120 . In this way, it is apparent that a lesser amount of information is stored within the index 120 , so that the index 120 may be implemented and used in a more effective and efficient manner.
- the index manager 102 may include a request monitor 136 which may be configured to continuously or periodically monitor some or all requests received by the request handler 122 (e.g., the user request 108 and associated user requests).
- the request monitor 136 may perform initial filtering or other processing of monitored user requests, e.g., in order to identify user requests which are thought to be useful in managing the index 120 in the manner just described.
- the request monitor 136 may further be configured to provide the monitored user request(s) to a portion evaluator 138 .
- the request monitor 136 may continuously provide user requests to the portion evaluator 138 .
- the request monitor 136 may store the user requests temporarily, and thereafter provide some or all of the stored user requests to the portion evaluator 138 in a batch process.
- the portion evaluator 138 may be configured to identify specific portions of each indexed content file within the index 120 . As described herein, the portion evaluator 138 may identify such portions prior to receipt of any user request (e.g., in conjunction with indexing processes of the index builder 118 ), and/or may be configured to identify the portions of the various content files based at least in part on the user request themselves and/or based on the providing corresponding request results 112 (e.g., based on operations of the snippet selector 124 ).
- the portion evaluator 138 may be configured to identify the portions 130 , 132 within the content file 128 .
- the content file 128 only includes the two portions 130 , 132 , it may be appreciated that the portion evaluator 138 may divide the content file 128 into any appropriate or desired number of portions.
- the portions 130 , 132 may not represent sequential or otherwise connected or contiguous elements of contents of the content file 128 .
- the portions 130 , 132 may be defined by similarity of content or other criteria, rather than, or in addition to, whether the content of the portion in question is continuous or contiguous.
- operations of the index manager 102 may proceed in conjunction with, e.g., in parallel with operations of the search manager 104 . That is, as described, the index builder 118 may execute an initial or original indexing of the whole content file 106 within the index 120 , whereupon the search manager 104 may begin to receive user requests 108 and thereafter provide corresponding request results 112 . At the same time, the request monitor 136 may monitor such operations of the search manager 104 , and may provide the results of such monitoring to the portion evaluator 138 .
- the portion evaluator 138 may identify those portions of the content file 128 (or other content file in question) which include or are otherwise associated with the keyword 110 of the particular user request 108 .
- the two portions 130 , 132 are illustrated, and only the inclusive portion 130 includes the single keyword 110 .
- the user request 108 includes a number of keywords.
- the content file 128 includes a relatively large number of portions, anyone of which may include one or more of such a plurality of keywords, or subsets or combinations thereof.
- the portion evaluator 138 may be configured to analyze some or all of the inclusive portions of the content file 128 , and to provide a value to, or otherwise evaluate, each such inclusive portion.
- Various examples are provided in more detail below, but, generally speaking, it may be appreciated that various criteria may be established for evaluating each inclusive portion. For example, a higher value may be assigned to an inclusive portion which includes a large percentage or all of a plurality of keywords of the user request, as compared to an inclusive portion which includes fewer or a single one of the plurality of keywords.
- the portion evaluator 138 may evaluate inclusive portions of the content file 128 using a plurality of user requests. For example, if a plurality of user requests includes the same or overlapping keywords, then the portion evaluator 138 may associate a higher value with inclusive portions of the content file 128 which include such keywords. Additional examples of operations of the portion evaluator 138 in assigning values to inclusive portions of the content file 128 are described in detail below, or would be apparent.
- the portion evaluator 138 may be configured to continuously update current evaluations of the various portions of associated content files, using, in the example of FIG. 1 , a portion value repository 140 . That is, the portion value repository 140 may store a value for, and in associated with, each inclusive portion of each content file which is evaluated by the portion evaluator 138 and designated for storage within the portion value repository 140 .
- the request monitor 136 may detect receipt of the user request 108 .
- the portion evaluator 138 may define the portions 130 , 132 within the content file 128 , as described.
- the portion evaluator 138 in conjunction with the request monitor 136 , may determine that the keyword 110 is included within the inclusive portion 130 , and therefore contributed to inclusion of the content file 128 within the request results 112 .
- the portion evaluator 138 may thus assign a value of “1” to the inclusive portion 130 , while assigning a value of “0” to the portion 132 , where the latter portion, as described, did not contribute to inclusion of the content file 128 within the request results 112 .
- the value of “1” may be stored within the portion value repository 140 in association with the inclusive portion 130 .
- the portion evaluator 138 may increase or increment a value associated with the portion value 130 within the portion value repository 140 .
- the portion 132 may be referenced within the portion value repository 140 , and explicitly identified as having a value of “0”.
- the portion evaluator 138 may not store any value associated with the portion 132 , until if and when one or more keywords are included within the portion 132 , so that the portion 132 is associated with a positive value within the portion value repository 140 .
- portions 130 , 132 of the content file 128 may be associated with corresponding values within the portion value repository 140 .
- a portion selector 142 may designate or otherwise select those inclusive portions referenced with the portion value repository 140 which have a sufficiently high value to merit retention thereof as, e.g., as the retained portion 134 , within the index 120 .
- a plurality of portions 130 , 132 of the content file 128 may be recognized as being inclusive portions with respect to one or more user requests received by the search manager 104 and monitored by the request monitor 136 .
- the portion value repository 140 may include a range or distribution of values associated with corresponding inclusive portions of corresponding content files indexed within the index 120 . Therefore, the portion selector 142 may be configured to select particular inclusive portions, such as those inclusive portions associated with the value above a threshold value, i.e., those inclusive portions having the highest values and therefore being most likely to have contributed to inclusion of corresponding content files within various request results provided by the search manager 104 .
- those inclusive portions selected by the portion selector 142 may be designated as retained portions, e.g., the retained portion 134 , and thereafter such retained portions may replace the previously stored portions of the corresponding content file within the index 120 .
- an index updater 144 may be configured to replace all data related to a storing and/or indexing of the content file 128 with data related to the storing/indexing of only retained portions thereof, e.g., the retained portion 134 .
- the index 120 may initially or originally contain an indexing of all or a substantial portion of the entirety of each content file of the whole content files 106 . Over time, however, the indexing of content files 106 may be restricted to indexing only retained portions of the various content files which are found to be the most useful and/or the most likely in causing the corresponding content file to be included within results provided in response to a user request. In this way, computer memory and other computing resources associated with implementation and use of the index 120 may be utilized in a more efficient and productive manner, and an experience of the user of the system 100 may be enhanced.
- the index manager 102 and the search manager 104 are illustrated as executing on at least one computing device 146 .
- the at least one computing device 146 may include at least one processor 146 A, as well as computer readable storage medium 146 B.
- data and instructions may be stored using the computer readable storage medium 146 B, and may be read and/or executed using the at least one processor 146 A.
- instructions for implementing functionality of the index manager 101 may be stored using the computer readable storage medium 146 B, and executed by the at least one processor 146 A.
- contents of the index 120 and/or the portion value repository 140 may be stored using the computer readable storage medium 146 B, so that contents thereof may be accessed by the at least one processor 146 A in conjunction with executing instructions defining functionality and operation of the index manager 102 and the search manager 104 .
- any two or more of the components of the system 100 may overlap or be combined for execution by a single component.
- any given component of the system 100 may be further separated for distinct execution of the corresponding functionalities.
- any single element of the system 100 may be executed using two or more corresponding elements.
- the index 120 may be executed using two or more computer memories.
- the index 120 may be stored using a first computing device, while the remainder of the index manager 102 may be executed using a second computing device.
- the various computing devices may be remote from one another and connected over a network (e.g., in the example just given, the index 120 may be stored remotely from a remainder of the index manager 102 ).
- the index 120 may represent a relatively fast and expensive memory utilized as the index 120 , and implemented using the techniques described above with respect to the system 100 in order to optimize a use thereof. That is, as described, the index 120 may be optimized by storing only the retained portion 134 and similar retained portions which are the most useful in fulfilling the user request 108 . At the same time, a relatively slower and less expensive computer memory and associated platform may be used to implement a second index (not explicitly illustrated in FIG. 1 ) which may be used to store and/or index an entirety of the whole content files 106 (or at least, to store/index larger and more comprehensive portions of the whole content files 106 then the retained portions 134 as stored in the index 120 ). Many other variations of, additions to, or alternatives to the system 100 of FIG. 1 are described below, or would be apparent.
- FIG. 2 is a flowchart 200 illustrating example operations of the system 100 of FIG. 1 .
- operations 202 - 208 are illustrated as discrete, sequential operations.
- FIG. 2 is merely an example, and that many other implementations of the illustrated operations, and related operations, may be implemented.
- two or more of the operations 202 - 208 may be executed in an overlapping or entirely parallel fashion.
- two or more of the operations 202 - 208 may be executed in a different order than that shown.
- Further operations (not explicitly illustrated in FIG. 2 ) may be added to the operations 202 - 208 , or may replace some or all of one or more of the operations 202 - 208 .
- inclusive portions of content file portions of indexed content files within an index may be determined, the inclusive portions associated with at least one keyword of a user request ( 202 ).
- the request monitor 136 may monitor user request(s) 108 , including one or more keywords 110 , as received by the search manager 104 and processed thereby using the index 120 , in order to provide the request results 112 .
- the portion evaluator 138 may determine that, of the portions 130 , 132 , the portion 130 is inclusive of the keyword 110 , and was therefore instrumental in identifying the content file 128 as being responsive to the user request 108 and/or included in the request results 112 .
- the inclusive portions are generally described as including the relevant keyword(s). However, it may be appreciated that, in additional or alternative embodiments, the inclusive portions may be otherwise associated with the corresponding/relevant keyword(s).
- the index builder 118 of FIG. 1 may be configured to index keywords within the index 120 in association with indexing of corresponding synonyms, related words or phrases having similar meanings or appearing in similar contexts, common/potential misspellings of the keyword, or using any other content which is determined to correspond to a keyword being indexed or other otherwise assist in providing better, more meaningful request results 112 .
- the index builder 118 may index the word “airplane” in conjunction with synonyms such as “jet,” or “plane,” and may similarly perform indexing based on possible misspellings, such as “aerplane.”
- phrases such as “big airplanes” may be indexed in conjunction with corresponding phrases, such as “large airplanes.” Consequently, the above-described components of FIG. 1 , e.g., the portion evaluator 138 and the index updater 144 , may be configured to select and store the retained portion 134 based on the use of such indexing techniques with respect to the keyword 110 .
- the portion evaluator 138 may determine that that the inclusive portion 130 includes a related, indexed keyword 110 ′ (not explicitly illustrated in FIG. 1 ) which may be, e.g., an indexed synonym of the keyword 110 .
- the inclusive portion 130 may be determined and evaluated as such, based on such an association with the keyword 110 (e.g., inclusion of the keyword synonym 110 ′).
- Values may be assigned to the inclusive portions, based on a providing of at least one of the user content files to the user in response to the user request ( 204 ).
- the portion evaluator 138 may assign a value to the inclusive portion 130 , based on the providing of the content file 128 to the user within the request result 112 .
- Various techniques for assigning the value to the inclusive portion 130 are described herein.
- Retained portions to be retained within the index may be selected from the inclusive portions, based on the values ( 206 ). For example, the portion selector 142 may determine that the inclusive portion 130 has a positive, non-zero value, while the portion 132 has a zero value, and may therefore retain the inclusive portion 130 of the retained portion 134 .
- FIG. 1 merely provides a simplified example for the sake of illustration.
- the content file 128 may include a number of inclusive portions and a number of non-inclusive portions. Consequently, the portion selector 142 may be configured to select those inclusive portions of the entirety of inclusive portions having the highest values assigned by the portion evaluator 138 .
- the portion selector 142 may determine a threshold for values of the inclusive portions, and may then access the portion value repository 140 to select all inclusive portions having values higher than the threshold.
- the threshold may be adjusted dynamically in order to further optimize utilization of the index 120 .
- the index may be updated to replace the index content files with the retained portions ( 208 ).
- the index updater 144 may be configured to replace all data related to a storing and/or indexing of the content file 128 with data related to the storing/indexing of only the retained portion 134 .
- the index 120 may be optimized in that the index 120 may thus provide a vast majority or all of the functionalities and advantages of conventional implementations of the index 120 , while requiring substantially fewer computing resources to do so.
- FIG. 3 is a block diagram illustrating a specific execution of the system 100 of FIG. 1 , using the operations of the flowchart 200 of FIG. 2 .
- FIG. 3 illustrates a specific example in which the content files 106 include text-based web documents, which are indexed by the index manager 102 for associated searching thereof by the search manager 104 in response to the user request 108 , to thereby provide the request results 112 .
- FIG. 3 illustrates an example web document 302 , corresponding conceptually to the content file 128 of FIG. 1 .
- the web document 302 includes various sequential pieces of text.
- the portion evaluator 138 may identify portions 304 , 306 , 308 , 310 of the web document 302 .
- the portions 304 - 310 correspond conceptually to the portions 130 , 132 of the content file 128 of FIG. 1 .
- the portions 304 - 310 each correspond generally to a paragraph of text within the web document 302 (i.e., respectively to each of the paragraphs, “Welcome to the Ballad-a-day web site.”, “Todays Ballad: The Tale of the Timid Tiger. By W. “Buck” Rogers”, “Got a great ballad? Submit it here and become famous!”, and “Like what you see? Hit the Tip Jar! Copyright 2009.”).
- the portions 304 - 310 may be defined using various techniques.
- the portions 304 - 310 may correspond generally to any continuous or contiguous section of the text of the web document 302 , and therefore may be defined as including a certain number of words, or as comprising a certain fraction of the overall document 302 .
- the portion evaluator 138 may thus be enabled to define the portions 304 - 310 in conjunction with indexing of the document 302 , e.g., and prior to any search request received by the search manager 104 .
- the portions 304 - 310 may be defined and/or updated over time based at least in part on searches executed by the search manager 104 .
- searches executed by the search manager 104 may include selection of snippets 114 , 116 by the snippet selector 124 . Therefore, operations of the snippet collector 124 may be leveraged to define or modify the portions 304 - 310 of the web document 302 .
- portions of the web document 302 may be defined as including a certain number of words before and after one or more snippets selected by the snippet selector 124 when providing the web document 302 within the request results 112 .
- the portions 304 - 310 are predefined in a static manner by the portion evaluator 138 , in the manner specifically illustrated in the example of FIG. 3 . Subsequently, as described, the search manager 104 may proceed with execution of a number of searches.
- the search manager executes 5 total searches. That is, the request handler 122 may receive 5 user requests 108 , each including one or more keywords 110 . For example, the request handler 122 may receive the first user request 108 A which includes the word “famous.” The result provider 126 may use the index 120 to associate the word “famous” with the web document 302 , and thereby may include the web document 302 within the request results 112 .
- the snippet collector 124 may select some or all of the portion 308 of the snippet 114 to be included within the webpage illustrating the request results 112 , so that the user providing the user request 108 A may thereby select a link within or associated with the snippet 114 to thereby obtain the web document 302 .
- the portion evaluator 138 may recognize, based on information received from the request monitor 136 in monitoring actions of the search manager 104 in executing the just-described search, that the portion 308 includes a keyword which has contributed to provision of the web document 302 within the request results 112 .
- the search manager 104 may receive 4 additional user requests 108 B- 108 E.
- Each such user request may include one or more keywords which are included within the portion 306 . Consequently, as just described with respect to the portion 308 , the portion evaluator 138 may recognize that the portion 306 has contributed to the recall of the web document 302 , and inclusion thereof with the request results 112 , during each of the 4 searches corresponding to user requests 108 B- 108 E.
- the portion evaluator 138 may assign values to the portions 304 - 310 as described above. For example, as shown, the portion evaluator 138 may store such values within the portion value repository 140 in direct relation to corresponding portions 304 - 310 . Specifically, as shown, the portion evaluator 138 may store values 312 , 314 , 316 , and 318 within the portion value repository 140 in direct relationship with corresponding portions 304 , 306 , 308 , and 310 .
- the portion evaluator 138 simply increments any one of the values 312 - 318 associated with a portion 304 - 310 which is determined to be an inclusive portion, i.e., which is determined to include one or more keywords of the corresponding one of the search user requests 108 A- 108 E.
- the value 314 is equivalent to 4, reflecting the 4 times that the portion 306 was an inclusive portion during the 5 searches.
- the value 316 is incremented to a value of 1, based on the single time that the portion 308 was an inclusive portion with respect to the 5 searches.
- the portion selector 142 may thus be configured to select the portions 306 and 308 corresponding to the values 314 , 316 as being inclusive portions having values which are above the threshold (e.g., in the example of FIG. 3 , having a positive or non-zero value). Thereafter, the portions 306 and 308 may be retained as retained portions 320 , corresponding conceptually to the retained portion 134 of FIG. 1 .
- the index updater 144 may update the index 120 to replace storage and indexing data associated with the web document 302 with storage and indexing data related to the retained portion 320 . In this way, as described, the index 120 may be utilized in an efficient and productive manner.
- FIG. 4 is a flowchart 400 illustrating various additional or alternative operations for 402 - 424 of the system 100 of FIG. 1 .
- the content files 106 include documents, such as the document 302 in the example of FIG. 3 .
- documents or other content files should be understood to potentially include text, audio, video, or image data, depending upon particular implementations of the flowchart 400 .
- whole documents may be stored and/or indexed in their entirety ( 402 ).
- the documents may be filtered in order to obtain initially-retained portions ( 404 ).
- the index builder 118 may index all of the various content files 106 .
- the index builder 118 may be configured to recognize that some or all of the entirety of one or more of the documents may be filtered out prior to any storage or indexing thereof. In the example given above, for example, the index builder 118 may simply select an initial or a first portion of some or all of the various documents for inclusion within the indexing 120 .
- the index builder 118 may select a first or initial portion of each document which is defined as including any specific number of words, or may be defined as including a specific fraction of the overall document. In some cases, the index builder 118 may perform such filtering only when a given document is over a certain size limit.
- the index builder 118 may execute additional or alternative filtering operations. For example, the index builder 118 may select and include for indexing a last, final, or concluding portion of a given document. That is, similarly to the above example, the index builder 118 may select such a final or concluding portion of a given document as including a certain number of words, or as comprising a particular fraction of the overall document in question.
- the index builder 118 may perform an initial analysis of a given document to determine words within the document which contain a high ratio of term frequency (TF) to inverse document frequency (IDF).
- term frequency simply refers to a number of times that a given term, (e.g., word or phrase) appears within the document in question, while the inverse document frequency refers to a perceived or actual overall rarity or uniqueness of terms. That is, the inverse document frequency is simply an inverse of a frequency with which a given term appears across a plurality of documents.
- the ratio of the term frequency to the inverse document frequency identifies an extent to which a rare term appears within a document, on the premise that the high frequency of such a rare term may indicate utility of the term in operations of the index manager 102 and/or the search manager 104 .
- the index builder 118 may construct and/or access templates which include or exclude certain identifiable features of the documents in question.
- the documents may include web documents which are known to include certain types of sections or sub-sections.
- video clips or published articles may be known to include comments about a corresponding video clip or a published article.
- a template may be constructed which includes or excludes a comment, depending upon a desire of an operator of the index manager 102 .
- the index builder 118 may apply such templates to documents of the content files 106 , and thereafter index only those portions which are not filtered out by the corresponding template.
- the retained portions subsequent to filtering may be stored and/or indexed ( 406 ), e.g., by the index builder and/or the index updater 144 .
- the portion evaluator 138 may then proceed with identifying portions of the thus-stored and indexed documents within the index 120 ( 408 ).
- one technique for identifying portions of each document includes constructing a histogram in which each portion constitutes a section or “bucket” of the histogram. That is, in the example of FIG.
- the portions 304 - 310 constitute buckets of the histogram in which each bucket is defined by a paragraph of text of the underlying web document 302 , so that values 312 - 318 of the corresponding buckets 304 - 310 may be sequentially incremented in the manner described above.
- any sequentially or otherwise related text may be selected as a unit or bucket of the histogram.
- the histogram may include one bucket per sentence, per paragraph, per defined number of words, or per word. Other criteria may be established. For example, in the example given above in which comments are included in association with an associated video clip or published article, then one bucket of the histogram may be constructed for each comment or set of comments.
- the search manager 104 may proceed with receiving user request 108 and providing corresponding request results 112 ( 410 ).
- identification of portions is illustrated as occurring prior to receipt of user request in corresponding providing of the request results. However, as referenced above, it may occur that the portions are identified subsequent to receipt of one or more of the user requests. In other examples, portions may be identified in conjunction with, or in parallel with, the receipt of the user request 108 and subsequent provision of the request results 112 . In some examples, the portions may be identified or modified based in whole or in part upon the user request 108 and/or the request results 112 . (For example, as referenced above, the portions may be defined or modified based on content of snippets provided in the request results 112 ).
- Inclusive portions of the portion of the various index content files may thus be determined ( 412 ).
- the portion evaluator 138 may identify any of the various portions which include one or more of the keywords 110 of the user request 108 , or which include synonymous words/phrases of the keyword(s) 110 , and/or common misspellings of the keyword(s) 110 .
- Other criteria for defining/differentiating inclusive portions relative to the underlying portions may be established.
- the portion evaluator 138 may be configured to identify inclusive portions as being those portions which include a certain percentage of a total number of keywords within a particular user request.
- Values may be assigned to the inclusive portions ( 414 ).
- the portion evaluator 138 may assign values to each inclusive portion, and may store the thus-assigned values within the portion value repository 140 .
- the value assigned to inclusive portions identified with respect to a particular user request and associated set of keywords may be assigned as a weighted average, so that a total value associated with the user request may be divided by the number of keywords within the user request, so that each inclusive portion associated with the overall user request would have a value which is increased by a fractional contribution of the corresponding inclusive portion to the likelihood that the corresponding index file would be provided as part of the request results 112 .
- a system 100 may proceed with executing various user requests 108 to provide the corresponding request results 112 ( 410 ), so as to continue to thereby identify inclusive portions ( 412 ), and to thereafter assign values thereto ( 414 ).
- an amount of time associated with the determining a sufficient length of operation with respect to operations 410 - 414 may be defined by an operator of the index manager 102 . In general, however, it will be appreciated that criteria for establishing sufficiency of time may be set based upon maximizing an overall productivity and efficiency of the index 120 .
- the operator of the index manager 102 may wish to minimize the amount of time associated with the operations 410 - 414 , so as to thereby make most efficient use of the index 120 , and also to thereby provide the request results 112 to the user within an acceptable timeframe for the user.
- selection of the amount of time associated with the operations 410 - 414 may be a matter of optimization, as would be appreciated by one of skill in the art.
- other criteria for defining a sufficiency of the operations 410 - 414 may be established. For example, sufficiency may be judged based on a number of user requests and/or corresponding request results, irrespective of an amount of time necessary to provide such request results. In other implementations, some combinations of length of time and number of request results may be selected.
- the threshold for values assigned to the inclusive portions may be set ( 418 ).
- the portion selector 142 may set the threshold.
- operation 418 for setting the threshold is illustrated in the example of FIG. 4 as occurring subsequent to operation 416 , it may be appreciated that the threshold may be set, at least initially, at a point much earlier in the overall process 400 . In these and other examples, the threshold may be set at an initial level, and may be modified or updated during execution of the various operations 402 - 416 .
- the portion selector 142 may thereafter compare values assigned to the inclusive portions with the threshold ( 420 ), and may thereafter select retained portions from the inclusive portions ( 422 ), based e.g., on whether or to what extent the values exceed the threshold.
- the index updater 144 may proceed with updating the index 120 to replace the inclusive portions beneath the threshold, as well as the non-inclusive portions, with the retained portions.
- an overall size of the retained portions to be maintained may be determined to be above a threshold associated with the index 120 .
- one goal of operations of the system 100 of FIG. 1 is to minimize an amount of information indexed within the index 120 , while simultaneously optimizing an efficiency of the index 120 and thereby a user experience of the user.
- the portion selector 142 may be configured to dynamically adjust the threshold, e.g., based on results of a previous execution of operations 402 - 422 , and/or based on other metrics associated with operations of the index 120 .
- the threshold may be adjusted ( 418 ), so that a number of retained portions actually used to update the index 120 may be optimized.
- the index 120 is a relatively fast or expensive index, so that the index 120 may benefit from operation of the system 100 as described herein.
- a relatively slower or less expensive index may be included in the system 100 and used to store/index an entirety of the whole content files 106 (e.g., to store/index an entirety of the content file 128 ).
- the relatively slower, less expensive index may perform some of the initial filtering described above, with respect to operation 404 of FIG. 4 .
- the index builder 118 may perform an initial truncation of the whole content file 106 before indexing the content file 128 and other content files contained therein.
- the inclusion of such a relatively slower, less expensive index may provide several advantages. For example, inclusion of such an index may allow an operator of the index manager 102 and the search manager 104 to conduct relatively more full/complete searches of the subject matter indexed therein, where time and resources permit.
- a particular person or event may be very topical at a given point in time, and may be included in a large number of the keywords 110 .
- the inclusive portion 130 may frequently include the keyword 110 or related keywords, and may therefore contribute heavily to inclusion of the content file 128 within the request results 112 .
- the specific person or event may be less topical, while some other person or event becomes more topical and becomes more likely to be included within the user request 108 .
- new keywords included within the user request 108 may be frequently found within the portion 132 of the content file 128 . Therefore, the system 100 may utilize the relatively slower, less expensive index described above to store/index more or all of the whole content files 106 than are stored within the index 120 .
- operations of the system 100 may periodically be repeated or restarted using contents of the relatively slower, less expensive index. In this way, optimized results may be provided to users over time, while still minimizing consumptions of resources associated with the faster, more expensive index.
- FIG. 5 is a block diagram showing example or representative computing devices and associated elements that may be used to implement the systems of FIGS. 1 and 3 .
- FIG. 5 shows an example of a generic computer device 500 and a generic mobile computer device 550 , which may be used with the techniques described here.
- Computing device 500 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers.
- Computing device 550 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smart phones, and other similar computing devices.
- the components shown here, their connections and relationships, and their functions, are meant to be exemplary only, and are not meant to limit implementations of the inventions described and/or claimed in this document.
- Computing device 500 includes a processor 502 , memory 504 , a storage device 506 , a high-speed interface 508 connecting to memory 504 and high-speed expansion ports 510 , and a low speed interface 512 connecting to low speed bus 514 and storage device 506 .
- Each of the components 502 , 504 , 506 , 508 , 510 , and 512 are interconnected using various busses, and may be mounted on a common motherboard or in other manners as appropriate.
- the processor 502 can process instructions for execution within the computing device 500 , including instructions stored in the memory 504 or on the storage device 506 to display graphical information for a GUI on an external input/output device, such as display 516 coupled to high speed interface 508 .
- multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory.
- multiple computing devices 500 may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system).
- the memory 504 stores information within the computing device 500 .
- the memory 504 is a volatile memory unit or units.
- the memory 504 is a non-volatile memory unit or units.
- the memory 504 may also be another form of computer-readable medium, such as a magnetic or optical disk.
- the storage device 506 is capable of providing mass storage for the computing device 500 .
- the storage device 506 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations.
- a computer program product can be tangibly embodied in an information carrier.
- the computer program product may also contain instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 504 , the storage device 506 , or memory on processor 502 .
- the high speed controller 508 manages bandwidth-intensive operations for the computing device 500 , while the low speed controller 512 manages lower bandwidth-intensive operations.
- the high-speed controller 508 is coupled to memory 504 , display 516 (e.g., through a graphics processor or accelerator), and to high-speed expansion ports 510 , which may accept various expansion cards (not shown).
- low-speed controller 512 is coupled to storage device 506 and low-speed expansion port 514 .
- the low-speed expansion port which may include various communication ports (e.g., USB, Bluetooth, Ethernet, wireless Ethernet) may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- input/output devices such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- the computing device 500 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a standard server 520 , or multiple times in a group of such servers. It may also be implemented as part of a rack server system 524 . In addition, it may be implemented in a personal computer such as a laptop computer 522 . Alternatively, components from computing device 500 may be combined with other components in a mobile device (not shown), such as device 550 . Each of such devices may contain one or more of computing device 500 , 550 , and an entire system may be made up of multiple computing devices 500 , 550 communicating with each other.
- Computing device 550 includes a processor 552 , memory 564 , an input/output device such as a display 554 , a communication interface 566 , and a transceiver 568 , among other components.
- the device 550 may also be provided with a storage device, such as a microdrive or other device, to provide additional storage.
- a storage device such as a microdrive or other device, to provide additional storage.
- Each of the components 550 , 552 , 564 , 554 , 566 , and 568 are interconnected using various buses, and several of the components may be mounted on a common motherboard or in other manners as appropriate.
- the processor 552 can execute instructions within the computing device 550 , including instructions stored in the memory 564 .
- the processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors.
- the processor may provide, for example, for coordination of the other components of the device 550 , such as control of user interfaces, applications run by device 550 , and wireless communication by device 550 .
- Processor 552 may communicate with a user through control interface 558 and display interface 556 coupled to a display 554 .
- the display 554 may be, for example, a TFT LCD (Thin-Film-Transistor Liquid Crystal Display) or an OLED (Organic Light Emitting Diode) display, or other appropriate display technology.
- the display interface 556 may comprise appropriate circuitry for driving the display 554 to present graphical and other information to a user.
- the control interface 558 may receive commands from a user and convert them for submission to the processor 552 .
- an external interface 562 may be provide in communication with processor 552 , so as to enable near area communication of device 550 with other devices. External interface 562 may provide, for example, for wired communication in some implementations, or for wireless communication in other implementations, and multiple interfaces may also be used.
- the memory 564 stores information within the computing device 550 .
- the memory 564 can be implemented as one or more of a computer-readable medium or media, a volatile memory unit or units, or a non-volatile memory unit or units.
- Expansion memory 574 may also be provided and connected to device 550 through expansion interface 572 , which may include, for example, a SIMM (Single In Line Memory Module) card interface.
- SIMM Single In Line Memory Module
- expansion memory 574 may provide extra storage space for device 550 , or may also store applications or other information for device 550 .
- expansion memory 574 may include instructions to carry out or supplement the processes described above, and may include secure information also.
- expansion memory 574 may be provide as a security module for device 550 , and may be programmed with instructions that permit secure use of device 550 .
- secure applications may be provided via the SIMM cards, along with additional information, such as placing identifying information on the SIMM card in a non-hackable manner.
- the memory may include, for example, flash memory and/or NVRAM memory, as discussed below.
- a computer program product is tangibly embodied in an information carrier.
- the computer program product contains instructions that, when executed, perform one or more methods, such as those described above.
- the information carrier is a computer- or machine-readable medium, such as the memory 564 , expansion memory 574 , or memory on processor 552 , that may be received, for example, over transceiver 568 or external interface 562 .
- Device 550 may communicate wirelessly through communication interface 566 , which may include digital signal processing circuitry where necessary. Communication interface 566 may provide for communications under various modes or protocols, such as GSM voice calls, SMS, EMS, or MMS messaging, CDMA, TDMA, PDC, WCDMA, CDMA2000, or GPRS, among others. Such communication may occur, for example, through radio-frequency transceiver 568 . In addition, short-range communication may occur, such as using a Bluetooth, WiFi, or other such transceiver (not shown). In addition, GPS (Global Positioning system) receiver module 570 may provide additional navigation- and location-related wireless data to device 550 , which may be used as appropriate by applications running on device 550 .
- GPS Global Positioning system
- Device 550 may also communicate audibly using audio codec 560 , which may receive spoken information from a user and convert it to usable digital information. Audio codec 560 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of device 550 . Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on device 550 .
- Audio codec 560 may receive spoken information from a user and convert it to usable digital information. Audio codec 560 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of device 550 . Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on device 550 .
- the computing device 550 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a cellular telephone 580 . It may also be implemented as part of a smart phone 582 , personal digital assistant, or other similar mobile device.
- various implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and/or combinations thereof.
- ASICs application specific integrated circuits
- These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- the systems and techniques described here can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- a keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user can be received in any form, including acoustic, speech, or tactile input.
- the systems and techniques described here can be implemented in a computing system that includes a back end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here), or any combination of such back end, middleware, or front end components.
- the components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network (“LAN”), a wide area network (“WAN”), and the Internet.
- LAN local area network
- WAN wide area network
- the Internet the global information network
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- the particular naming of the components, capitalization of terms, the attributes, data structures, or any other programming or structural aspect is not mandatory or significant, and the mechanisms that implement the invention or its features may have different names, formats, or protocols.
- the system may be implemented via a combination of hardware and software, as described, or entirely in hardware elements.
- the particular division of functionality between the various system components described herein is merely exemplary, and not mandatory; functions performed by a single system component may instead be performed by multiple components, and functions performed by multiple components may instead performed by a single component.
Abstract
Description
Claims (27)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/072,250 US8655886B1 (en) | 2011-03-25 | 2011-03-25 | Selective indexing of content portions |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/072,250 US8655886B1 (en) | 2011-03-25 | 2011-03-25 | Selective indexing of content portions |
Publications (1)
Publication Number | Publication Date |
---|---|
US8655886B1 true US8655886B1 (en) | 2014-02-18 |
Family
ID=50072263
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/072,250 Expired - Fee Related US8655886B1 (en) | 2011-03-25 | 2011-03-25 | Selective indexing of content portions |
Country Status (1)
Country | Link |
---|---|
US (1) | US8655886B1 (en) |
Cited By (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20140207763A1 (en) * | 2013-01-18 | 2014-07-24 | Microsoft Corporation | Ranking relevant attributes of entity in structured knowledge base |
US9015143B1 (en) * | 2011-08-10 | 2015-04-21 | Google Inc. | Refining search results |
US10430034B2 (en) * | 2015-08-27 | 2019-10-01 | International Business Machines Corporation | Data transfer target applications through content analysis |
US10891340B2 (en) | 2018-11-16 | 2021-01-12 | Yandex Europe Ag | Method of and system for updating search index database |
Citations (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4972349A (en) * | 1986-12-04 | 1990-11-20 | Kleinberger Paul J | Information retrieval system and method |
US20020059258A1 (en) * | 1999-01-21 | 2002-05-16 | James F. Kirkpatrick | Method and apparatus for retrieving and displaying consumer interest data from the internet |
US20020087500A1 (en) * | 1998-08-18 | 2002-07-04 | Brian T. Berkowitz | In-memory database system |
US6735583B1 (en) * | 2000-11-01 | 2004-05-11 | Getty Images, Inc. | Method and system for classifying and locating media content |
US20060206462A1 (en) * | 2005-03-13 | 2006-09-14 | Logic Flows, Llc | Method and system for document manipulation, analysis and tracking |
US7421496B2 (en) * | 1997-06-26 | 2008-09-02 | Ricoh Company, Ltd. | Method and system for diagnosis and control of machines using connectionless modes having delivery monitoring and an alternate communication mode |
US20090271695A1 (en) * | 2008-04-25 | 2009-10-29 | Canon Kabushiki Kaisha | Method of accessing or modifying a part of a binary xml document, associated devices |
US7836037B2 (en) * | 2007-10-04 | 2010-11-16 | Sap Ag | Selection of rows and values from indexes with updates |
US8046832B2 (en) * | 2002-06-26 | 2011-10-25 | Microsoft Corporation | Spam detector with challenges |
US20120117096A1 (en) * | 2010-11-04 | 2012-05-10 | Litera Technology, LLC | Systems and Methods for the Comparison of Annotations Within Files |
-
2011
- 2011-03-25 US US13/072,250 patent/US8655886B1/en not_active Expired - Fee Related
Patent Citations (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4972349A (en) * | 1986-12-04 | 1990-11-20 | Kleinberger Paul J | Information retrieval system and method |
US7421496B2 (en) * | 1997-06-26 | 2008-09-02 | Ricoh Company, Ltd. | Method and system for diagnosis and control of machines using connectionless modes having delivery monitoring and an alternate communication mode |
US20020087500A1 (en) * | 1998-08-18 | 2002-07-04 | Brian T. Berkowitz | In-memory database system |
US20020059258A1 (en) * | 1999-01-21 | 2002-05-16 | James F. Kirkpatrick | Method and apparatus for retrieving and displaying consumer interest data from the internet |
US6735583B1 (en) * | 2000-11-01 | 2004-05-11 | Getty Images, Inc. | Method and system for classifying and locating media content |
US8046832B2 (en) * | 2002-06-26 | 2011-10-25 | Microsoft Corporation | Spam detector with challenges |
US20060206462A1 (en) * | 2005-03-13 | 2006-09-14 | Logic Flows, Llc | Method and system for document manipulation, analysis and tracking |
US7836037B2 (en) * | 2007-10-04 | 2010-11-16 | Sap Ag | Selection of rows and values from indexes with updates |
US20090271695A1 (en) * | 2008-04-25 | 2009-10-29 | Canon Kabushiki Kaisha | Method of accessing or modifying a part of a binary xml document, associated devices |
US20120117096A1 (en) * | 2010-11-04 | 2012-05-10 | Litera Technology, LLC | Systems and Methods for the Comparison of Annotations Within Files |
Cited By (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9015143B1 (en) * | 2011-08-10 | 2015-04-21 | Google Inc. | Refining search results |
US9378288B1 (en) | 2011-08-10 | 2016-06-28 | Google Inc. | Refining search results |
US20140207763A1 (en) * | 2013-01-18 | 2014-07-24 | Microsoft Corporation | Ranking relevant attributes of entity in structured knowledge base |
US9229988B2 (en) * | 2013-01-18 | 2016-01-05 | Microsoft Technology Licensing, Llc | Ranking relevant attributes of entity in structured knowledge base |
US10430034B2 (en) * | 2015-08-27 | 2019-10-01 | International Business Machines Corporation | Data transfer target applications through content analysis |
US10430033B2 (en) * | 2015-08-27 | 2019-10-01 | International Business Machines Corporation | Data transfer target applications through content analysis |
US10891340B2 (en) | 2018-11-16 | 2021-01-12 | Yandex Europe Ag | Method of and system for updating search index database |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10565273B2 (en) | Tenantization of search result ranking | |
CA2865187C (en) | Method and system relating to salient content extraction for electronic content | |
US9070046B2 (en) | Learning-based image webpage index selection | |
US9336301B2 (en) | Merging semantically similar clusters based on cluster labels | |
US10169449B2 (en) | Method, apparatus, and server for acquiring recommended topic | |
CN106844640B (en) | Webpage data analysis processing method | |
US8874558B1 (en) | Promoting fresh content for authoritative channels | |
US8788477B1 (en) | Identifying addresses and titles of authoritative web pages by analyzing search queries in query logs | |
US20140201203A1 (en) | System, method and device for providing an automated electronic researcher | |
US20150074101A1 (en) | Smart search refinement | |
US20120296746A1 (en) | Techniques to automatically search selected content | |
US8655886B1 (en) | Selective indexing of content portions | |
US10546030B2 (en) | Low latency pre-web classification | |
US20140075299A1 (en) | Systems and methods for generating extraction models | |
US20160299972A1 (en) | Providing app store search results | |
US8650196B1 (en) | Clustering documents based on common document selections | |
CN113660541A (en) | News video abstract generation method and device | |
US9886507B2 (en) | Reranking search results using download time tolerance | |
EP3387556B1 (en) | Providing automated hashtag suggestions to categorize communication | |
CN113220710A (en) | Data query method and device, electronic equipment and storage medium | |
CN117171296A (en) | Information acquisition method and device and electronic equipment | |
US10691702B1 (en) | Generating ranked lists of entities | |
US10235432B1 (en) | Document retrieval using multiple sort orders | |
CN111159213A (en) | Data query method, device, system and storage medium | |
US20170270127A1 (en) | Category-based full-text searching |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GROSS, ERIK;REEL/FRAME:026569/0829Effective date: 20110324 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0299Effective date: 20170929 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20220218 |
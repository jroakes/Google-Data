US20130110627A1 - Generating and Presenting Advertisements Based on Context Data for Programmable Search Engines - Google Patents
Generating and Presenting Advertisements Based on Context Data for Programmable Search Engines Download PDFInfo
- Publication number
- US20130110627A1 US20130110627A1 US13/614,452 US201213614452A US2013110627A1 US 20130110627 A1 US20130110627 A1 US 20130110627A1 US 201213614452 A US201213614452 A US 201213614452A US 2013110627 A1 US2013110627 A1 US 2013110627A1
- Authority
- US
- United States
- Prior art keywords
- query
- context
- bid
- search results
- search
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/20—Information retrieval; Database structures therefor; File system structures therefor of structured data, e.g. relational data
- G06F16/24—Querying
- G06F16/245—Query processing
- G06F16/2453—Query optimisation
- G06F16/24534—Query rewriting; Transformation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/957—Browsing optimisation, e.g. caching or content distillation
- G06F16/9574—Browsing optimisation, e.g. caching or content distillation of access to content, e.g. by caching
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
- G06Q30/0251—Targeted advertisements
- G06Q30/0255—Targeted advertisements based on user history
- G06Q30/0256—User search
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
- G06Q30/0273—Determination of fees for advertising
- G06Q30/0275—Auctions
Definitions
- This invention relates in general to search engines, and more particularly, to improving targeting of advertisements using programmable search engine context data.
- search engines in the context of the Internet and World Wide Web, use a wide variety of techniques to improve the quality and usefulness of the search results. These techniques address every possible aspect of search engine design, from the basic indexing algorithms and document representation, through query analysis and modification, to relevance ranking and result presentation, methodologies too numerous to fully catalog here.
- search engine operates essentially as a “black box” that receives a search query, processes the query using a preprogrammed search algorithm and relevance ranking model, and provides the search results. Even where the details of the search algorithm are publicly disclosed, the search engine itself still operates only according to this algorithm and nothing more.
- Another method of inferring intent is the tracking and analysis of prior user queries to build a model of the user's interests.
- some search engines store search queries by individual users, and then attempt to determine the user's interests based on frequency of key words appearing in the search queries, as well as which search results the user accesses.
- queries accurately reflect a user's interests, either short term or long term.
- Another is that it assumes that there is a direct and identifiable relationship between a given information need, say shopping for a digital camera, and the particular query terms used to find information relevant to that need. That assumption however is incorrect, as the same query terms can be used by the same (or different users) having quite different information needs.
- such a technique is limited in its effectiveness because only one type of data (prior searches) is used. Other contextual and situational information is not captured or represented in query history and cannot therefore be used in such a methodology.
- websites that offer highly specialized information about particular topics.
- These websites are typically constructed by individuals, groups, or organizations that have expertise in the particular subject area (e.g., knowledge about digital cameras).
- Such sites referred to herein as vertical content sites, often include specifically created content that provides in-depth information about the topic, as well as organized collections of links to other related sources of information.
- a website devoted to digital cameras typically includes product reviews, guidance on how to purchase a digital camera, as well as links to camera manufacturer's sites, price comparison engines, other sources of expert opinion and the like.
- the domain experts often have considerable knowledge about which other resources available on the Internet are of value and which are not. Using his or her expertise, the content developer can at best structure the site content to address the variety of different information needs of users.
- the present invention improves targeting of advertisements by allowing advertisers to bid on keyword-plus-context combinations.
- advertisers can specify that they are interested in users that correspond to a particular context (for example, users that are identified as being in the market for a product), and thereby avoid mistargeting their ads to users that are not in that context. This provides a more accurate targeting mechanism than simple bidding on keywords.
- a user's query is processed using context information.
- Processing can include any combination of pre-processing operations (conducted prior to query execution) and post-processing operations (conducted on the search results from query execution).
- the pre-processing operations include operations to revise, modify or expand the query, to select one or more document collections on which to conduct the search, to set various search algorithm parameters for evaluating the query, or any other type of operation that can refine, improve, or otherwise enhance the quality of the user's search query.
- the context-processed query is then executed by a search engine to obtain a set of search results.
- the post-processing operations applied to the search results include operations to filter, organize, and annotate the search results as well as provide links to related contexts for other types of information or information needs.
- the context processing operations can be provided by a programmable search engine site, by a vertical content provider site, or by a client device.
- the context processing operations are controlled by context files that include commands, parameters, and instructions.
- the context files may be stored at the programmable search engine site, at various vertical content providers, or at a client device.
- Context files from multiple different sources can be used jointly.
- Context processing can also be limited to either pre-processing, or post-processing.
- the selection of which context files to apply to a given user query or a set of search results can be based on the query, the user, the client device, the vertical content site from which the query was received. The selection may be based as well on one or more subscriptions that a user has to particular vertical content providers, or popularity or reputation of a vertical content provider.
- contexts can also be used for improving placement of ads on web pages other than search result pages.
- web pages that display content-related advertising can benefit from the techniques of the present invention by targeting the ads based on contexts and/or context types associated with the user browsing the page.
- the techniques of the present invention can be applied to any web page that shows content-based advertisements, whether or not the web page is a search results page.
- the invention also has embodiments in computer program products, systems, user interfaces, and computer implemented methods for facilitating the described functions and behaviors.
- FIG. 1 illustrates a page from a host domain having a search field for accessing the programmable search engine.
- FIG. 2 illustrates the results of a search from the host domain.
- FIG. 3 illustrates a further page accessed from the search results page.
- FIG. 4 illustrates a generalized system architecture for a programmable search engine including context-based advertisement selection and display.
- FIG. 5 illustrates a first system architecture for a programmable search engine including context-based advertisement selection and display.
- FIG. 6 illustrates a second system architecture for a programmable search engine including context-based advertisement selection and display.
- FIG. 7 illustrates a third system architecture for a programmable search engine including context-based advertisement selection and display.
- FIG. 8 illustrates a combined system architecture for a programmable search engine.
- FIG. 9 is a block diagram showing an architecture for implementing context-based advertising according to one embodiment.
- FIG. 10 illustrates an example of a set of context files.
- FIG. 11 is a flowchart illustrating a method for selecting advertisements to be placed on a search results page, based on query terms and user context, according to one embodiment.
- FIG. 12 is a flowchart illustrating a method for selecting advertisements to be placed on a web page, based on page content and user context, according to one embodiment.
- FIG. 1 there is shown a page 100 from a host site, digitalslr.org, which is an example of a vertical content site, here the field of digital cameras.
- Content and organization of page 100 reflect the viewpoint and knowledge and of the entity that provides the site content.
- a vertical context site can be on any topic, and offer any type of information, and thus is not limited in that regard.
- vertical content sites include sites on particular technologies or products (e.g., digital cameras or computers), political websites, blogs, community forums, news organizations, personal websites, industry associations, just to a name a few.
- What vertical content sites offer is a particular perspective and understanding of the world, one that may be of interest and value to some users. This perspective and understanding can be expressed, at least in part, by the content provider's organization and selection of content, as well as commentary, analysis or links to other content (e.g., commentary on other sites on the Internet).
- one valuable aspect of vertical content sites is the particular collection of links to other sites that the content developer has judged to be useful in some regard, either for its depth, expertise, viewpoint, or the like. That is, users in general find value in the judgments of vertical content providers as to the usefulness of other sources of information on the Internet.
- Activating the search button 106 causes the web server to transmit the search query to the search engine system using existing web protocols.
- the host site web server transmits a context file to the search engine system.
- the web server can transmit a link to the context file, or simply a context file identifier.
- the context file includes data that the search engine system uses to control the operation of the search engine itself in processing the search query and in presenting the search results, in effect, programming the search engine's operation.
- the context file as will be further detailed below, can be understood as a set of instructions to the search engine system for processing a particular search query.
- the instructions can control, for example, three aspects of the search process: 1) pre-query processing operations; 2) search engine control information; 3) post-query processing operations.
- a context file can optionally include descriptions of (or links to) other context files, which likewise provide further programmatic control of the search engine system.
- An advantage of the present invention is that the context information provides guidance as to how to tailor search results so that the results better suit the user's needs.
- a number of links 204 are provided as navigational aids to further pages that address different possible information needs of the user.
- Each of these links 204 is associated with a related context file, which will provide further instructions to the search engine system to tailor further stages in the search process for a specific information need, and thereby construct the desired pages.
- the first link “If you are trying to decide which camera to buy”, addresses a specific type of user information need: information about how to purchase a camera, comparisons between camera, pricing information, and the like. This need derives from a specific type of user intent, specifically the intent to purchase a camera.
- the second link “Where to buy this camera from . . . ”, addresses a different and more specific information need: the location of vendors for that particular camera.
- the last link “If you already own one . . . ”, addresses another type of information need: information that a current own would want, such as technical support and service information.
- the vertical site provider has previously identified a number of sites as containing product reviews, and has stored this information in a context file.
- the link 206 to “More reviews” automatically instructs the system engine system to use this context file to filter the search results during post-processing to those pages that are from sites characterized as product reviews, and satisfying the reformulated query.
- the page 200 includes various annotations 210 in conjunction with various ones of the search results.
- These annotations 210 provide the user with the viewpoint or opinion of the vertical content provider about the particular search result, as to any aspect of that search result that the provider considers significant, such as what the identified search result is about, how useful it is, or the like.
- FIG. 3 illustrates an example page 300 that is provided to the user as a result of clicking on the first link 204 , “If you are trying to decide which camera to buy.”
- the context file associated with this link 204 is processed, and a second search is performed on the search query.
- This page 300 shows the context name 308 “Choosing a camera”, which again reflects the selected information need of the user.
- the search results 302 in this context are more specifically tailored to assisting the user in evaluating digital cameras and selecting a satisfactory one. Notice, for example, the first search result is to a buying guide for digital cameras, and that there are no search results shows shown here to technical support pages.
- search results 302 are links 304 to further related contexts based on information needs, such as “Reviews, sample photographs”, “Other similar cameras to consider”, and “Relevant product news”. Again, these links have associated context files that will control the search engine system to provide search results that are relevant to the described information needs for these contexts.
- additional links 306 are also to related contexts, and for example to further professional and user reviews of digital cameras, sample photographs, and other information particularly relevant to evaluating a camera for purchase.
- the user can thus continue to access additional related content through the various links 304 , 306 , each time obtaining search results that have been processed according to the context files associated with the selected links.
- the user can essentially search the Internet using the powerful capabilities of a general search engine, while simultaneously obtaining the benefit of the knowledge, expertise, and perspective of the provider of the vertical content site.
- Vertical content site providers benefit from this approach as it allows them to further share their knowledge and perspective with users.
- Vertical content providers are no longer limited to the information that they can either create themselves, provide links to, or comment upon.
- ads 220 are included on results page 300 .
- the selection, sequence, and formatting of the ads 220 is determined according to query, user context, and bid comparison.
- the present invention improves ad targeting and thus provides greater value to advertisers. Users are more likely to respond to ads that match their current context, which often corresponds to a specific user intent or situation.
- the system of the present invention determines ad placement according to advertiser bidding, thus creating a competitive situation where different context! query combinations can have different values according to their desirability and according to the number of advertisers that wish to target particular combinations.
- links to relevant VSEs can be provided on a search results page, thus providing the user with an easy way to access improved search results by simply clicking on a VSE link. Should the user do so, the query is run at the VSE corresponding to the link.
- a recommendation and reputation network is used to select the set of VSEs presented to the user (highly-recommended VSEs are favored over less-recommended ones).
- vertical content providers can define any variety of context files to meet any type of information need that users may have.
- the providers of the general search engine system are no longer burdened with the task of themselves organizing and categorizing content (as is conventionally done in various directories and portals), but instead can rely upon the much deeper and vaster pool of vertical content providers—hundreds of millions or more—as compared with the limited pool of editors that may organize content directories or categorize other websites for a general search engine.
- the present invention thus provides any vertical content site provider with the capability to programmatically control the general search engine system on behalf of a user conducting a search.
- the present invention improves ad targeting and creates a competitive environment where advertisers can bid against one another for favorable placement in certain context/query combinations.
- FIG. 4 there is shown a generic system architecture for a programmable search engine including placement of advertisements according to user contexts, queries, and advertiser bidding.
- a client device 402 there is a client device 402 , a content server 406 , context server 410 , a context processor 408 , and a programmable search engine (PSE) 404 .
- PSE programmable search engine
- advertiser bidding system 423 which allows potential advertisers 424 to bid on context/query combinations. Advertisers can choose an amount that will be paid (either on a page view or click-through), and can specify context(s), query term(s), or both. Parameters, including bid amount and bid characteristics, are stored in bids database 422 .
- the content server 406 transmits the query along with the context ID to the context processor 408 .
- content server 406 can provide the identified context file directly to the context processor.
- the content server 406 may also be responsible for serving content pages to the client device 402 .
- the content server 406 transmits more than one context ID (and/or context file) to the context processor 408 and to ad selector 420 .
- the content server 406 may provide URLs (or other context file identifiers) corresponding to each.
- the context processor 408 uses the received context IDs to obtain the identified context files from the content server 410 .
- the context processor 408 identifies additional context IDs appropriate to the query, for example by providing an identifier of the client device 402 (e.g., IP address, browser type, operating system, device type), the user (e.g., user ID), or host domain from which the search query is received, or the search query itself, to obtain further context files from the context server 410 .
- a context file (or collection of context files) can include, for example, three types of programmatic information that can be used in any combination by the context processor 408 and/or PSE 404 to control the search process. These are: 1) pre-query processing operations; 2) search engine parameter control; and 3) post-query processing operations. This programmatic information will be discussed as part of the operational flow.
- the context files may take various embodiments.
- the context files are individual files stored in a file system.
- the context files are stored in a database system, again as either separate files, or of database entries, tables or other structures.
- a context file in database embodiment may be stored as a collection of context records for an identified source (e.g., a specific vertical content provider), a type (e.g., knowledge base, site/page annotation, etc.), associated commands (e.g., evaluation, restriction, redirection, relation, annotation, etc.), and remaining attributes and conditions. Accordingly, no limitation is imposed on the underlying implementation of the context files by the present invention.
- the context processor 408 processes the context files to perform various pre-processing operations, to programmatically generate a reformulated query. These pre-processing operations may be performed independently or in any combination to obtain a reformulated query. These include the following:
- Query revision the modification, addition, or deletion of or one or more terms of the original query.
- modifications include correcting spelling errors, replacing query terms, adding query terms (as conjuncts, or as disjuncts) or deleting query terms (e.g., stop word removal).
- the added or replaced terms may broaden or narrow the scope of a query.
- the query rewrite rules generally define an output query (or query term) based on matching one or more terms of the original query (e.g., replace “digicam” with “digital camera”). Other rules may be applied automatically as defaults, without being conditioned on the terms of the query.
- the second type of control information processed by the context processor 408 are search engine control data. These include:
- a search engine system will typically have access to multiple different document collections, which can be searched jointly, or individually.
- the provider of the context file may instruct the PSE 404 to use one or more specific document collections for a particular search. For example, a vertical content site for healthcare professional, may receive a search for “migraine”, and instruct the search engine system to search the PubMed database provided by the National Library of Medicine, rather than a more general search of the Internet. This constraint better tailors the results to the medical literature most likely to be relevant, to the information need of a healthcare professional, rather than the typical results to such a query on the Internet.
- the context file can specify which document collections are to be used (e.g., by specification of a database, index, or other context repository).
- the context processor 408 extracts this information from the context file as well, and passes it the selected search engine as a parameter.
- search engine parameters for use during query processing.
- Most search engine algorithms operate under a large number of parameterized controls when generating information retrieval scores, such as threshold values for scoring query term matches, iteration cycles, waiting of links, terms and other query or document attributes.
- these parameters are not accessible to entities outside of the search engine system, but rather are fixed by the search engine provider.
- the search engine system may be configured to receive and use any of these types of parameters, thereby giving further incremental programmatic control of the search engine to the vertical content developments.
- the context processor 408 extracts these parameters from the context file and passes them to the search engine 404 as parameters.
- the PSE 404 processes the reformulated query using the search engine control data (if any) to obtain a set of context-processed search results, and provides these search results to the context processor 408 . If multiple queries are processed, then the PSE 404 can merge the results from these searches.
- the context processor 408 then provides various post-processing operations, which again may be performed independently or conjointly.
- the results of this post-processing made part of the context-processed search results.
- the post-processing operations include:
- the context file may specify one or more filters that the context processor 408 can apply to further limit the documents that are included in the search results. These filters are expressed in terms of rules that match metadata with particular metadata associated each search result.
- the metadata can include both native metadata to the document, such the document type, date, author, site, size, or labeled metadata associated with the document, that is the labeled characteristics provided by the vertical content provider (or others).
- the PSE 404 includes a ranking function that ranks the search results based on the respective information retrieval scores.
- the context file can include ranking parameters, such as weighting factors to increase or decreases the IR scores for particular types of documents, for documents from selected sources.
- the ranking function may also operate on identifiable native or labeled metadata. For example, the rankings can be adjusted based on length of document, publication date, or document format just to name a few. Alternatively, the ranking may be adjusted based on labeled metadata, such ranking by expressed “rank” value, or by as increasing the native ranking of documents labeled as “expert” by a weight factor, or increasing the ranking of documents having some specified quality measure of/110′′.
- the context processor 408 can use these ranking parameters to rank the documents in the search results.
- the context processor may also provide links that can be accessed to invoke additional searches for further refinements of the information needs of the user.
- Each such related context link invokes another cycle of pre-processing and/or post-processing by the context processor 408 and if so instructed, another cycle of query processing by the PSE 404 .
- the context file may also provide specific annotations 210 that can be included with any of the search results.
- the system of the present invention does not change the order in which the initial results are presented, but annotates the results with the labels that apply to them. Clicking on a label issues a new search restricted to the results matching this tag.
- these annotations need not be labels but can be links to relevant pages on other sites.
- the context files can include conditional instructions that define various types of Annotations. These annotations are provided by the annotate command.
- this command has the following syntax:
- the annotation condition operates in a similar manner to a restriction condition.
- the annotation condition is evaluated with respect to the attributes (tags), if any, associated with the search results, as compared to the entries in the site/page annotation file.
- Any attribute (or set of attributes) can be used as annotation conditions, such as the type, source, year, location, or the like, of a document or page.
- the context processor receives the search results from the search engine, and compares each result (be it a site, page, media page, document, etc.) with the entries listed in the site/page annotation file 900 . Results that satisfy the condition are annotated with the annotation action.
- Annotate commands can be used by themselves or in combination with any of the other commands, including Restrictions.
- the query does not originate at the vertical content site, but at a general search engine site.
- the system of the present invention provides a mechanism by which the knowledge provided by the vertical content site is applied even for searches entered at a general site such as google.com.
- the user indicates to the search engine, either while using the VSE or through a sign up process similar to that used to subscribe to RSS feeds, that he or she would like to apply the VSE's contexts which conducting searches of a particular type.
- selection and use of a particular VSE is performed automatically.
- the context processor 408 then provides the context-processed search results to the ad display module 421 .
- the ad selector 420 sends selected ad(s) to ad display module 421 .
- the ad selector 420 sends identifiers (such as URLs) of selected ad(s), and either the ad display module 421 or the client 402 itself, retrieves the ads.
- Ad display module 421 integrates the selected ads with the context-processed search results, and sends the search results page (with ads, or references to ads) to client 402 for display.
- ads include links to advertiser-operated websites, so that a user who is interested in finding out more about an advertised product or service can click on a link to be taken to the advertiser's website.
- the client device 402 may also query the PSE 404 directly, either through its search engine interface 409 , or simply by going to the website of the PSE 404 entering the query directly there. In this scenario, context processing is still handled by the context processor 408 in manner described above.
- the user can access any of the related context links, or perform entirely new queries, again making use of any context files that are selected based on such queries.
- FIG. 5 there is a shown a system architecture in which the context processing operations are provided by the PSE system itself.
- client device 502 as before, including a browser 503 , along with a host vertical content site 504 , and a PSE system 500 .
- Ad selector 420 and ad display module 421 are also shown, and operate in a manner similar to that described above in connection with FIG. 4 .
- the other components of the advertisement selection and bidding system are not shown in FIG. 5 , although one skilled in the art will recognize that components 420 and 421 can operate with these additional components in a manner similar to that discussed above.
- the vertical host vertical content site 504 includes a vertical content server 506 (e.g., a web and/or application server) and vertical content files 505 (e.g., a database or directory of web pages). Also present are vertical context files 507 .
- the vertical content site 504 also includes a search engine interface 509 to the PSE system 500 , such as a search field and search button as illustrated in FIG. 1 .
- the user accesses the vertical content site 504 . From that site, he or she enters a search query to be processed by the PSE system 500 .
- the vertical content server 506 processes the search query to determine a number of context IDs for appropriate context files, and transmits the search query and context IDs to the PSE system 500 .
- the context IDs can be transmitted as parameters in one or more URLs to the PSE system 500 .
- the vertical content server 506 also transmits the search query and context IDs to the ad selector 420 .
- the ad selector 420 selects appropriate ads and provides them to the ad display module 421 .
- the vertical content site 504 also includes a number of conventional components (e.g., firewalls, router, load balancers, etc.) not shown here in order to not obscure the relevant details of the embodiment.
- the context server 530 may also obtain context files from a repository of global context files 542 . These context files can be derived from data mining on the cached context files 540 , provided by the provider of the PSE system 500 , or any combination thereof. Such context data can include any information that is deemed relevant and persistent with respect to the user and/or client 502 .
- the context server 530 then provides the context file to the context processor 520 .
- the context processor 520 performs the appropriate preprocessing operations (if any) as defined in the context file to generate the reformulated query, and establish the search engine control data as set forth above, as part of the context-processed query.
- the search engine 550 receives the context-processed query, including reformulated query and search engine control data, and executes a search on same to provide a set of context-processed search query results. These results are passed back to the context processor 520 , which performs the post-processing operations on the search results as defined in the context file, to further modify the context-processed search results.
- These context-processed results are then transmitted to the ad display module 421 which integrates selected ads received from (or identified by) ad selector 420 .
- Ad display module 421 then provides the finished page, including ads, to the client device 502 .
- This architecture provides various benefits. First, it provides for high-speed access to the context files and eliminates reliance on the availability of the remote vertical content sites to serve their context files on demand.
- analysis of the search engine control yields identification of most frequently used search engines, indices, and parameters for particular queries or types of queries.
- Analysis of the query post-processing operations also identifies the most frequently used annotations, related contexts, ranking and filtering operations.
- the context files includes label metadata used by the vertical content providers to describe the characteristics of any site or page on the Internet.
- these labels are selected from a publicly provided ontology, so that vertical content providers use the same set of labels to characterize the content of the Internet.
- the ontology of labels can describe categories and instances of any type.
- the ontology includes, for example, topics, information types, information sources, user types, and rating scales, just to name a few possible aspects of the ontology.
- a categorization of Internet content can be derived and validated.
- all Internet sites labeled as type “buying guide” and category “digital camera” can be extracted from the cached context files 540 .
- analysis of the context files also allows for integration of advertisement purchases based on contexts. That is, advertisers can bid for placement of their advertisements in specific contexts, rather than by specific query terms. For example, an advertiser may bid for placement of an advertisement for its digital camera when the context file for a query indicates that the user is shopping for a particular camera model, but not when the user is seeking technical support. This allows advertisers to more precisely focus their advertising efforts based on the user's information needs-which have been expressly described by the context files, rather than merely inferred from the query terms.
- the vertical content site 604 also includes various components for context processing, including a vertical context processor 620 and local vertical context files 607 .
- Ad selector 420 and ad display module 421 are also shown, and operate in a manner similar to that described above in connection with FIG. 4 .
- the other components of the advertisement selection and bidding system are not shown in FIG. 6 , although one skilled in the art will recognize that components 420 and 421 can operate with these additional components in a manner similar to that discussed above.
- the vertical content site 604 also includes various components for context processing.
- the vertical content site 604 includes a vertical context processor 620 .
- vertical content server 606 receives a search query from the client device 602 , e.g., via the browser 603 , and processes the search query to determine context IDs for an appropriate context file. This information is now provided to the vertical context processor 620 .
- the context processor 620 passes the context IDs (and optionally the client device ID, user ID, and query) to the context server 630 .
- the context server 630 uses the context IDs to retrieve context files from the vertical context files 607 .
- the vertical content server 606 also transmits the search query and context IDs to the ad selector 420 .
- the ad selector 420 selects appropriate ads and provides them to the ad display module 421 .
- the context server 630 provides the retrieved context file(s) to the context processor 620 .
- the context processor 620 performs the appropriate preprocessing operations as defined in the context file to generate the context-processed search query (including the search engine control data as set forth above).
- the vertical context processor 620 then invokes the search engine 650 to process the context-processed query.
- the search engine 650 receives the reformulated query and search engine control data, and executes the search accordingly, generating the context-processed search results. These results are passed back to the context processor 620 , which performs the post-processing operations on the search results as defined in the context file, to further modify the context-processed search results. These processed results are then transmitted back to the client device 602 .
- the context processor 620 may also provide some or all of the search engine control data to the search engine, depending whether the search engine 650 exposes an application programming interface. In some embodiments, where the search engine 650 is closed, then the context processor 620 simply passes the queries to the search engine 650 and operates on the results. In this embodiment, the context processor 620 itself would use at least some of the search engine control data, for example, selection of which search engine to use. This gives the vertical content site provider control as to which search engines 650 to use with which types of user queries.
- FIG. 7 there is shown an embodiment of a system architecture in which the context processing is provided by the client device site.
- client device 702 including a browser 703 , along with a host vertical content site 704 , and a general search engine system 700 .
- Ad selector 420 and ad display module 421 are also shown, and operate in a manner similar to that described above in connection with FIG. 4 .
- the other components of the advertisement selection and bidding system are not shown in FIG. 7 , although one skilled in the art will recognize that components 420 and 421 can operate with these additional components in a manner similar to that discussed above.
- the vertical host vertical content site 704 includes a vertical content server 706 and vertical content files 705 (e.g., a database or directory of web pages).
- the vertical content site 706 also includes a search engine interface 709 to the search engine system 700 , such as a search field and search button as illustrated in FIG. 1 .
- the user accesses the vertical content site 704 using the browser 703 and from that site can enter a search query to be processed by the search engine system 700 .
- the client device 702 includes the various components for context processing.
- the client device 702 includes a browser 703 , for accessing the vertical content site 704 as well as any other available site on the network.
- the client 702 includes a vertical context processor 720 , which can operate a plug-in to the browser 703 , or Java applet.
- the context processor 720 again processes the search query to determine context IDs for appropriate context files. Since the operation is local to the browser, the context processor 720 can use the context IDs to retrieve context files from the user context files 707 .
- the vertical content server 506 also transmits the search query and context IDs to the ad selector 420 .
- the ad selector 420 selects appropriate ads and provides them to the ad display module 421 .
- the context processor 720 then performs the appropriate preprocessing operations as defined in the context file to generate the context-processed query.
- the vertical context processor 720 then invokes the search engine 750 to process the context processes query.
- the search engine 750 receives the context-processed query, and retrieves search results, forming the context-processed results. These results are passed back to the context processor 720 , which performs the post-processing operations on the search results as defined in the context file, to further modify the context-processed search results.
- These processed results are then transmitted to the ad display module 421 which integrates selected ads received from (or identified by) ad selector 420 .
- Ad display module 421 then provides the finished page, including ads, to the browser 702 .
- Ad display module 421 can be located at content site 704 , or at client 702 , or at some other location.
- An advantage of this architecture is that it allows the user to establish and user their own context files. Just as individual vertical content providers have their individual expertise and viewpoint, so to do individual users.
- a user may define context files to categorize and label particular websites, for example, identifying the site that she considers most authoritative or useful for particular topics.
- the user can also define query pre-processing operations, or more' likely import such operations from others (e.g., experts in various topical domains) who publish context files for this purpose.
- the user can define post-processing operations that allow for customization in the presentation of results, including arrangement of results into clusters or grouping that the user feels most comfortable with.
- a user can define a personal context file in which search results are always clustered into academic (.edu), government (.gov), retail shopping (sites having metadata or text indicative of online purchasing), and Wage files.
- FIGS. 4-7 can all operate concurrently with different types of the individual systems operating together.
- FIG. 8 illustrates this system architecture for mutual and concurrent context processing. All of the system elements communicate via a network 890 , such as the Internet.
- the PSE system 800 includes a complete set of components as described with respect to FIG. 4 .
- the operative features of these components have been previously described and so are not repeated here.
- Client device 802 a simply has a browser 803 by which it accesses various sites on the Internet.
- Client device 802 b includes a browser 803 , as well as user context files 807 , which can be passed to any available context processor 820 for processing in conjunction with a search query provided by the user.
- Client device 802 c includes a browser 803 and user context files 807 , as well as its own context processor 820 . This enables the client 802 c to perform local context processing on the user's search query prior to sending the query to the search engine, and to perform post-processing operations after receiving the search results.
- This client's browser 803 also includes a search engine interface 809 , enabling direct querying of the PSE system 800 .
- Other clients 802 a and 802 b may also include search engine interfaces 809 , for example, in the toolbar of their respective browsers 803 .
- Vertical content site 804 a includes a content server 806 , along with a search engine interface 809 to the PSE system 800 , as previously described.
- the server forwards a user's query (from any type of the client devices 802 ) to the PSE system 800 , providing as well the context ID associated with the user's current context (along with any context related information received from the client device).
- the site does not need to store its own context files, as these can be stored at the PSE system 800 in the cached context file database 840 .
- the PSE system 800 provides all of the context processing operations.
- the site 804 a does not provide any specific context ID information.
- the PSE system 800 can provide its own context identification mechanisms, for example based on the site 804 a , the client 802 , the query terms, or the like.
- the context server 830 retrieves the appropriate global context files 842 , and the context processor 820 uses these files for the context processing operations, including pre-processing of the search query, control of the search engine operation and parameters, and post-query processing.
- the programmable search engine site 800 passes the context-processed search results back to the requesting client, either directly, or within the scope of the vertical content site 804 b , e.g., using framing techniques.
- vertical content site 804 c includes its own content server 806 search engine interface 809 , vertical content files 805 , as well as local vertical context files 807 .
- This site 804 b receives a search query from a client device 802 , and forwards the query along with the context ID for the query context to the PSE system 800 .
- the site's vertical context files 807 are cached in the PSE system's cached context files 840 .
- the PSE system 800 receives the context ID, and uses its context server 830 to retrieve the associated context files for site 804 b from the cached context files 840 .
- the context server 830 may also retrieve any applicable global context file 842 .
- the PSE context processor 830 then processes the retrieved context files, generates the context-processed search query and processes the queries via the search engine 850 .
- the context-processed search results are then further post-processed by the PSE context processor 820 , again in accordance with either the site's context files or the global context files 842 (including where appropriate a combination thereof).
- the last type of vertical content site 802 c includes its own content server 806 search engine interface 809 , vertical content files 805 , local vertical context files 807 , as well as a local, vertical context processor 820 .
- the local context processor 820 receives the user's search query, along with the context ID for the user's context, and using the referenced context files performs the appropriate pre-processing operations on the query prior to transmitting it to the PSE system 800 , along with the search engine control data specified by the context files.
- the PSE system 100 can provide various levels of services to the vertical content site 804 c .
- the programmable search engine system 800 can process the received context-processed queries, and execute these queries accordingly via the search engine 850 , providing the context-processed search results back to the local context processor 820 for further modification.
- the local context processor 820 for the vertical content site 804 c provides further post-processing operations specified by the identified context, and then forwards the final set of context-processed search results to the client device 802 .
- the PSE system 800 can perform some specific context processing operations as instructed by the local context server 820 , whether pre-processing, or post-processing, or control of the search engine operations.
- the local context processor 820 may perform the pre-processing operations to reform the queries, but then use the search engine control data to specify which document collections and search algorithms the search engine 850 should use.
- the PSE system 800 may add its own layer of context processing based on its global context files 842 , including generation of additional reformulated queries, control of the search engine 850 , and post-processing of search results prior to returning them to the vertical content site's local context processor 820 .
- the vertical content site 804 c can forward the context-processed search results to the client device 802 directly, or can invoke another layer of post-processing operations by the local context processor 820 , perhaps to further fine tune the organization, commenting, or navigation features thereof.
- the PSE system 800 can provide context processing directly to user queries input at the PSE site from any of the client devices 802 .
- the user's search query can be received directly at the website of the PSE system 800 (e.g., via search query page), or a search interface in browser toolbar, application, or system extension (e.g., a search interface on the user's desktop). Since the user's query is not coming from a vertical content provider, the PSE system 800 's context processing can use the global context files 842 , including those for annotating search results with links to potentially useful context for the user.
- the degree of context processing for direct queries can be varied to include either pre-processing or post-processing individually, or a combination of both.
- One embodiment of direct query handling provides a context-based post-processing on the search results without context based pre-processing (e.g., query modification).
- the user's search is received and executed without pre-processing based on the context files of a specific vertical content provider (though some internal adjustment of the query and selection of search indices may optionally be employed to provide the most relevant search results).
- the search results are then post-processed with one or more context files to provide the various types of navigational links, related context links, and/or annotations on search results as described and illustrated in FIGS. 2 and 3 .
- the post-processing operations in this scenario can use either global context files 842 , or can be based on the context files of any number or selection of the vertical content providers.
- a user can identify which the vertical content provider whose context files are to be used for context processing. Identification can be done via a subscription model, in which the user subscribes to have such context processing done for her or her queries, for example via a subscription interface (e.g., page) at the website of the vertical content provider, which then forwards an identifier of the user or the user's client device to the PSE 800 .
- a user may subscribe to a particular vertical content provider in order to have that provider's expertise, perspective or viewpoint applied to the user's search queries and results, without the user having to always enter a query from that vertical content provider's site.
- the PSE system 800 includes a user account database 891 , which stores for each user various types of personal preferences for searches, including the subscriptions to particular vertical content providers.
- the PSE 800 also provides a registration interface (allowing the user to register with the PSE system 800 for storing search preferences, subscription information, and other user settings), and a login interface for the user to login and have the user's settings applied to the user's queries.
- Direct queries received from the user and/or the user's client device 802 are identified by the PSE 800 and then the appropriate context files to which the user subscribed are used for context processing.
- subscription-based context processing is provided for direct user queries for both pre-processing and post-processing operations.
- the selection of which vertical content provider's context files are to be used can be based on other factors beyond a user's subscriptions, as some users may not have subscribed to any particular vertical content provider.
- the selection is based on a popularity measure for each vertical content provider whose context files are included in the cached repository.
- the popularity measure can be based on web access statistics, like number of unique visitors to a vertical content provider's site each month (or other time period), number of hits to such site, number of current subscribers to the vertical content provider. These and other statistical measures can be combined into a popularity measure.
- the selection can be based on a reputation measure (or rank), where the reputation of each vertical content provider is judged and rated by users.
- the foregoing provides a general overview of the operations and various system architectures useful with the present invention.
- the present invention can be practiced in a number of different and complementary embodiments.
- the capability of the present invention enable any system entity to provide context files, context processing, or both, results in both tremendous flexibility and power.
- the flexibility allows for rapid, widespread and easy implementation of the present invention.
- Any system entity can provide various levels of operative support, and cooperate with any other system entity, according to the techniques described herein.
- the context files and context processing capability can be readily implemented in any vertical content site and in any client.
- the power of the system derives in part from such widespread distribution and implementation: the more context files and context processing is adopted, the more contextual information can be accumulated and leveraged, for example in the global context files.
- This enables the PSE system to continually refine and adapt its capabilities to the information needs of the wide variety of users.
- the widespread use of context files by vertical content developers continually expands the range of information needs and perspectives that can be satisfied, as well as the depth and quality of that information that is used to satisfy such needs.
- FIG. 10 there is shown an example of a set of context files as might be developed by a vertical content provider for a digital camera related website: This simplified example is used only to illustrate some of the basic aspects of context files, and not as definitive statement of their characteristics.
- Context files 902 are illustrative of contexts defined for various types of users of digital cameras, such as a professional user searching for a digital camera, a consumer searching for a digital camera, and an owner who already has such a camera.
- Each of these types of users has different information needs and typically different approaches to evaluating the information she obtains.
- a professional user is typically most concerned with technical performance issues such as picture quality, durability, and compatibility with an existing set of professional equipment
- a consumer user is typically concerned with ease of use, convenience and price.
- Both of these types of users are seeking information during their purchase process that is quite different from an existing owner.
- An owner is not typically interested in obtaining further opinions or evaluations of a product, but rather information pertaining to its use, technical support, service, or warranty issues.
- Each of these three user type context files 902 contain instructions that enable a context processor to respond to a specific query according to the expected information needs of the user.
- the context file 902 d for the professional user may include query revision rules to modify a received query such as “Nikon camera” to “Nikon DX2”, which is a current model of a professional digital SLR, and one deemed by the content provider to be of most interest to the professional user.
- the context file 902 e for the consumer user may include query revision rules to modify this same query to “Nikon Coolpix 7600”, again a current model of the Nikon cameras, and determined by the content provider to be the best Nikon camera for a typical consumer user.
- the vertical content site would pass the consumer context file 902 e to a context processor along with the user query of “Nikon camera”, and the context processor would use the query modification rules to generate the appropriate revised query for execution.
- Each of the context files 902 can point to any number of other context files 902 in an arbitrary graph manner, as best determined by the content provider.
- the consumer user context file 902 e references two other context files, the “Looking for a Camera” context files 90 Th, and the “Shopping for a Camera” context file 902 i .
- These context files more precisely focus on serving the user's intention, former focusing on the information needs when a user is still looking for a camera and in need of information to evaluate potential products.
- the latter context is appropriate when a particular camera has been selected and the user is now shopping for the camera based on price, availability, and other factors.
- each of these context files 902 references different and more selective contexts.
- the “Looking for a Camera” context file 902 h references a group of context files 902 k pertaining to various types of reviews of digital cameras.
- the “Shopping for a Camera” context file 902 i references context files 902 m , 9021 for comparing prices, and for comparing vendors.
- the context files 902 can also be arranged hierarchically through a series of directories.
- a context file may include query revision rules, and search engine control information that enables the context processor to programmatically tailor the user's query to the information needed, as indicated by the context. For example, once the user enters the “Looking for a Camera” context, that context file 902 h may contain search control data that selects specific websites that contain consumer oriented camera reviews, as deemed appropriate by the vertical content provider. This control data would thus be used by the search engine system to select one or more document collections for targeting the query (or revised queries) thereto.
- the “Shopping for a Camera” context file 902 i would include search control data that selects various price comparison engines to obtain current market prices on a given camera. These examples illustrate how selection of a context can programmatically vary the search query and search control data and parameters in order to better suit the user's information needs.
- each vertical content provider can define very detailed and precisely crafted contexts, each of which can specifically control the operations of the programmable search engine in responding to a search query.
- This context file 900 includes information variously categorizing or describing characteristics of sites or pages on the Internet. In addition to annotating a site or a page, a developer can also annotate all the pages that share a certain URL prefix, whether or not there is an actual page with that prefix.
- Each entry in the site/page annotation file 900 provides an identifier of a site or page, e.g., a URL, along with a number of tags or token identifying attributes, characteristics, weightings, or other qualitative or quantitative values.
- the tags can be explicitly typed (e.g., as ⁇ tag, value> pairs), or implicitly typed based on order and data format.
- a URL can specify a site or page completely, or in part as a URL prefix, for some portion of a web site.
- Such an annotation file can be provided using existing standard formats such as RSS (RDF Site Summary or Really Simple Syndication).
- each entry is a set of ⁇ name, value> pairs, as follows:
- URL provides the network address for where the site or page is located. Note that both specific pages within sites can be identified, as well as home pages for large sites.
- Descriptor a semantic label describing the site or page.
- the content provider is free to use any labels he or she chooses, since the query processing and post-processing operations are written in terms of rules that can operate on these same descriptors.
- the vertical content provider has labeled various sites/pages to their content type (e.g., “Negative review” or “News” or “Photos”), as well as to the type of entity which provides the information (e.g., “Manufacturer”).
- these descriptors are merely illustrative, and the selection of which particular descriptors are used to describe a site will be dependent in at least in part on the particular category or topic for the subject matter of the domain.
- the pre-processing and post-processing operations can use the tags as conditions for evaluation. For example, a post-processing rule in the “Negative Reviews” context file 902 n would select for inclusion in the search results that had a tag “Negative Review/NegativeReview”.
- a common ontology of tags which can be used, either exclusively or in conjunction with a set of private tags defined by vertical content provider.
- the ontology includes a hierarchy of categories of information and content on Internet.
- One useful ontology is provided by the Open Directory Project, found at dmoz.org. All or a portion of such an ontology can be used for the tags.
- the ontology can be public, as in the OPD, or proprietary, or a combination of both.
- Each entry can have a rank (or “score”, “weight”, etc.) a figure of merit as to the importance, quality, accuracy, usefulness, and the like of the particular page or site. This value is provided by the vertical content provider, again based on his or her own judgment and perspective.
- the rank value further allows the context processor to selectively include (or exclude) search results that have certain rank values, or to rank individual search results by this value as well.
- Each entry can have a comment, explanation or description that the vertical content provider can use to further describe the page to the user.
- the comment allows the vertical content provider to further articulate the relationship between the page and the user's information need.
- a given site or page can have multiple entries in the site/page annotation.
- file 900 each with its own descriptors, and other tags.
- the first two entries above are for the same page, but with different descriptors, ranks, comments and so forth.
- more than one entry matches a given URL, depending on the use, either both or the most specific entry is applied.
- the URL, Descriptor, Rank, and Comment fields are illustrative of the types of information that can be included in the site/page annotation file 900 .
- the vertical content provider can define any number of other or additional attributes, and then define complementary pre-processing and post-processing rules that operate on such attributes.
- other attributes that can be included in the site/page annotation file include:
- Content Type a designation of the type of site or page, such as guide, scientific article, government report, white paper, thesis, blog, and so forth.
- Source Type a designation of the source of the document, which maybe the same or different than the Tag. For example: government, commercial, non-profit, educational, personal, and so forth. An “Organization” attribute may serve a similar purpose.
- Location a designation of the country, state, country or other geographic region relevant to the page, using names, standard abbreviations, postal codes, geo-codes, or the like.
- User Type a designation of the intended type of user or audience for the site or page. For example, lay person, expert, homemaker, student, singles, married, elderly, and so forth.
- Any given page or site can have multiple different entries in the site/page annotation file.
- the first two entries in the above list are for the same page, but have different tags, the first being a Negative Review, and the second being a Professional Photographer Review, different ranks, and different comments. This allows the vertical content provider to express the relevance of a give site for a particular context, rather than being limited to a single inclusion.
- a second mechanism for capturing the knowledge and expertise of the vertical content provider is the knowledge base file 904 .
- the knowledge base file 904 is used to describe specific knowledge of concepts, facts, events, persons, and like. This information is encoded in a graph of object classes and instances thereof.
- a simple knowledge base file 904 could be as follows:
- This knowledge base defines the class of “CameraModel”, used to identify individual types of cameras. Each class has a class id, as shown. A class can then be a subclass of another class. Hence, the class “DigitalSLRCamera” is a subclass of the “CameraModel” class.
- Instances of a class can then be defined as well.
- two different instances of the class “DigitalSLRCamera” are defined by giving it a specific id, here “NikonD100” and “CanonDigitalRebel”, and a listing of a variety of properties, such as their name, manufacturer, location of manufacture, model year, and so forth.
- the properties for each class are determined by the provider of the knowledge base file 904 , such as the vertical content provider.
- the programmable search engine may maintain its own global knowledge base file as part of its global context files.
- This global knowledge base can provide an extensive database encapsulating a vast array of knowledge, concepts, facts, and so forth, as extracted from content on the Internet, provided by experts or editors, or any taken from existing databases. Vertical content providers can then make use of this global knowledge base by providing preprocessing and post-processing operations that make use of such knowledge base information, as further described below.
- the context files 902 use a script or markup language to define the various pre-processing, search engine control, and post-processing operations.
- the various elements of the language are as follows:
- the knowledge base file 904 can be used to evaluate whether particular objects have defined properties or attributes.
- the form of the evaluation commands are generally the same.
- the query evaluation commands for evaluating terms using the knowledge base file 904 are as follows:
- the first type of term based evaluation is used to evaluate whether the concept expressed by one or more query terms matches some object in the knowledge base file that has the specified property with the specified property_value.
- the context processor processes this command by traversing the knowledge base file 904 (as a graph, for example) until it finds an object having a property with the matching property value. For example, assume the knowledge base file 904 portion described above, and the query evaluation command:
- the query term “D100” matches the name of a camera instance in the knowledge base file 904 .
- the context processor than checks whether the Manufacturer property of that instance is “Nikon”. Since it is, the query “D100” is said to denote a camera manufactured by Nikon, even if that is not specifically disclosed in the query term itself. Accordingly the query evaluation command is satisfied, and the context processor would then take an appropriate action that was dependent on this evaluation.
- a variety of different commands to the context processor can be made conditional based on the evaluation of the query evaluation command.
- the second type of query evaluation command is query.denot.InstanceOf. This command is evaluated to determine whether a particular query indicates that an instance of a class has been described in the query, rather than property. For example, consider the query evaluation command:
- the query is decomposed into terms “8 mp” and “SLR”, and these are checked against the property values for the objects in the knowledge base file.
- these properties match the properties for the Nikon DIDO camera, satisfying the query evaluation command.
- the context processor would undertake whatever command was conditioned on the evaluation command.
- the last type of query evaluation command ⁇ query>query term ⁇ /query> is the simplest.
- the query evaluation command is satisfied if an input search query term matches the query_term.
- context files may be used with any combination of query evaluation commands as conditional triggers for further context processing. Example of these will be further described below.
- property refers to any available property of the user, such as user name, login, account number, location, IP address, site activity and history (e.g., clicks, focus, page dwell time) and so forth.
- Some of these properties can be locally available from the knowledge base file 904 .
- the property information can be extracted (e.g., queried) from any accessible legacy database (e.g., a customer database, account database, registration database, or other data source), which exports an appropriate programmatic interface.
- legacy database e.g., a customer database, account database, registration database, or other data source
- Other properties, such as site activity are made available from site tracking tools that monitor each user's activity at the vertical content site.
- a class of users (e.g., “Professional”) can be defined in the knowledge base file 904 , and the properties of the current user compared by the context processor against the properties of an identified class for match in values. If a property match is found, the user is deemed a member of the class.
- any search result can be evaluated as well, as to its properties, as defined in either the source/page annotation file 900 (or alternatively, in its metatags).
- the evaluation command would take the form:
- ⁇ result.tag> may be abbreviated to ⁇ tag>.
- a given search result (or set thereof) can be evaluated with respect to its properties, such as content type, date, source, user type, etc. This outcome of the evaluation can be used to control further context processing.
- search results can be evaluated using the second command syntax to determine if they are instances of various classes defined in the knowledge base file 904 .
- query modifier command There are two basic types of query modification rules, those that augment or add terms to a query, and those that replace query terms.
- query modifier command The following is example syntax for the query modifier command:
- the type attribute defines either an augmentation or replacement type query modification.
- the value attribute includes the query term that is to be added to the user's original input search query, or that is to replace the input search query.
- the query attribute is optional. If present, then the context processor scans the search query and replaces the any term matching the query term with the replacement term. This is useful, for example, to correct misspellings, expand abbreviations (or contrawise use abbreviations in place of terms), and other in place adjustments. If the query attribute is missing, then the entry query string is replaced by the replacement term. Of course, the replacement term can include any number of terms.
- Query modification can made conditional on any of the evaluation commands. For example:
- This example would reformulate a query, say the query “Dl00” to include another query “Digital SLR” since the term “Dl00” denotes an instance of a digital SLR camera, according to the knowledge base. file 904 .
- the user's query is “Dl00.”
- the properties of the current user are evaluated. If the user is determined to be “professional”, based on properties available from the browser, site activity history, login and password, etc. For example, if the user access a number of pages in the vertical content site dedicated to professional or expert level information (e.g., detailed technical pages), then the user may be inferred to be a “professional” user, even though no other information is known about the user's identity. In this case, the query is reformulated to include the term “professional reviews” even though the user did not include these terms in the query.
- a context file 902 can reference or include another context file 902 , as described above, to form an arbitrary graph of connections. Several elements are used for referencing context files.
- a context file can include another context file, as follows:
- the include command references another context file 902 as being included in the current context file.
- the context processor will read the included context file and process all of the instructions therein.
- Pathname identifies the location of included context file 902 .
- Included context files 902 can be used for any type of context processing operation.
- a context file can also identify a related context file, as follows:
- the relContext command identifies a related context for the current context file.
- the relContext command can be used in both pre-processing and post-processing operations. Examples of the use of related contexts in postprocessing operations are illustrated in FIG. 10 , and in FIGS. 2 and 3 .
- the context description is anchor text that the user will see in the browser.
- the identified related context file is retrieved and processed.
- the first type of related context command is used to define related contexts for varying types of information needs.
- FIG. 2 illustrates this type of related context via related context links 204 .
- the first link 204 there is associated with a related context file 902 (e.g., context file 902 h ) that includes the following instructions:
- This command is processed by the context processor when the link 204 on the anchor text is selected, and the corresponding context file “cameras/chooseCamera” is retrieved and processed.
- the resulting page is illustrated in FIG. 3 .
- the relContext command may also be used with the various types of evaluation commands, to make the reference to the related context conditional. For example:
- the second type of related context command is used to define related contexts that appear as annotations in conjunction with search results.
- This type of related context is illustrated in FIG. 2 by related context links 206 .
- the related context file 902 h that generated FIG. 2 also includes the following instructions:
- anchor text “More Manufacturer Pages” is then linked to the associated context file 902 , which contains further instructions to searching and displaying pages for digital camera manufacturers.
- pathname indicates the location of another context file to be processed if certain redirection conditions are met.
- the redirection conditions can be based on any available information about the query (e.g., query terms, or information dependent thereon), the user (e.g., IP address, login, site click through history, prior purchases), or other programmatically available information.
- the query evaluation command is positively evaluated, since the query term “D100” matches the name of a camera instance in the knowledge base file 904 , which instance has the Manufacturer property value “Nikon”.
- the context processor thus executes the context redirection command and accesses the context file “Nikon_cameras” for further processing. This capability allows the vertical content provider to his or her own knowledge base to analyze queries and reformulate them on behalf of the user.
- the user evaluation user.InstanceOf can likewise be used to redirect context processing based on the particular user properties For example, consider the redirection command:
- the properties of the user can be ascertained from the knowledge base file 904 , and other information as described (e.g., site history). If the user is determined to be a professional user, then the context processor accesses and processes the NegativeProfessionalReviews context file.
- any number of redirection conditions can be used together in a context redirection command such as:
- the context redirection is particularly powerful when combined with the query modification rules, previously discussed.
- a vertical content provider can define a number of context redirections based on query terms, each of redirects the context processor to an appropriate context file, depending on say, whether the query denotes shopping for a camera versus seeking customer warranty information.
- specific query modification rules would then be processed to reformulate the query as most appropriate given the identified context.
- the context files can be used to control the scope, number, or types of results and entries that are provided to the user.
- the context files can include conditional instructions that define various types of restrictions (e.g., filters). These restrictions are provided by the restriction command.
- This command has the following syntax:
- the restriction condition operates in a similar manner to the redirection condition previously discussed.
- the restriction condition is evaluated with respect to the attributes (tags), if any, associated with the search results, as compared to the entries in the site/page annotation file.
- Any attribute (or set of attributes) can be used as restriction conditions, such as the type, source, year, location, of a document or page, to name but a few.
- the context processor receives the search results (here a set of candidate search results) from the search engine, and compares each candidate result (be it a site, page, media page, document, etc.) with the entries listed in the site/page annotation file 900 . Only those candidate results which are listed in the annotation file 904 and have the specified matching attributes are included in the context-processed search results.
- the restriction count is an optional parameter and indicates how many of the matching results are to be included in the context-processed search results. If left out, then all matching results are included.
- the restriction action is an optional parameter that specifies a further action to take if the restriction condition is met.
- This action includes, for example, annotating the search results with a link to a related context (using the relContext command), such as links 206 illustrated in FIG. 2 .
- the vertical content provider can use the post-processing to provide a selection of a number of different types of search results, as illustrated, for example in FIG. 2 .
- the first restriction command causes the context processor to select the first two search results that have matching entries (Le., matching URLs or portions thereof) in the site/page annotation file 900 and include the descriptor “Review”.
- the context processor also uses the restriction action for the related context, to annotate these two search results with a link to related context file “Reviews”, with the link labeled “More reviews.”
- FIG. 2 shows an example of such annotation link 206 .
- the second restriction causes the context processor to select the first two search results that have matching entries in the site/page annotation file and include the descriptor “Guide.” The context processor would then use the restriction action to annotate these results with a link to the related context file “Guides.”
- a vertical context provider can define a context file that defines various context redirections using the redirection condition based on the global knowledge base files. This enables the vertical content provider to leverage the global knowledge base, but add their own personal perspective and judgment to its underlying facts.
- context files 902 can contain instructions that control the operation of the programmable search engine itself in terms the selection of which particular document collections to be searched, and various algorithmic or parametric settings for the search engine. Selection of a document collection for searching is provided by the following command:
- the corpus command takes as its argument a reference to the name (or URL) or a selected document collection.
- the document collection name is mapped (either locally, or by the programmable search engine) to document collection and corresponding index available to the programmable search engine (e.g. particular index in the content server/index 870 ).
- the corpus command can be made conditional using any of the foregoing described evaluation commands, as well as including any of the restriction, redirection, related context, and so forth.
- Control of search engine parameters is via the SearchControlParams operations.
- most modern search engines use a number of different attributes of a search query and the individual indexed documents (e.g., frequencies of terms in URL, anchor text, body, page rank etc.) to determine which documents best satisfy the query.
- the documents are then ranked accordingly.
- a ranking function is essentially a weighted combination of the various attributes. Normally, the weights of the attributes are fixed, or at least not externally controllable by third parties.
- the SearchControlParam however gives vertical content providers access to these weights.
- the syntax is as follows:
- attribute-name is the name of the particular attribute used by the search engine to calculate a relevance ranking.
- the specific attribute names are disclosed by the programmable search engine provider, since they are internal to that provider's own engine.
- Typical attributes as indicated above including term frequency in URL, term frequency in body, term frequency in anchor text, term frequency in markup, page rank.
- the SearchControlParams operator can work with any exposed attribute or parametric control of a programmable search engine, and thus the foregoing are understood to be merely exemplary.
- the weights used in this operator can be either normalized or non-normalized, and in the latter case, the input weights can be internally normalized by the context processor or by the search engine itself.
- a vertical content provider need not specify weights for all the attributes the search engine uses, but only those of interest to the provider of the context file.
- potential advertisers 424 might bid for placement, with payment expected upon user clickthrough, or user views, or both (for example, the advertiser 424 might be charged a first amount upon display of the ad to the user, and a second amount if the user clicks on the ad). Also, in some cases, advertisers 424 may bid for query terms alone, or contexts alone, or any combination thereof.
- Bids are stored, for example in a database 422 .
- a search query is received 1102 for or from a user.
- one or more context(s) is/are identified 1103 for the user (for purposes of clarity, in the following description it is assumed that only one context is identified).
- the context can be identified 1103 based on the entered query terms, the website at which the user is performing the search, known historical information about the user, information retrieved from cookies, path taken to reach the search site, and the like, or any combination thereof.
- this context is used for improving the search, by pre- and/or post-processing the query and the results.
- the context is also used for selecting ads to be displayed for the user, as follows.
- Ad selector 420 receives context identifiers and query terms from SEI 409 . Ad selector 420 then selects ad(s) 1104 to be displayed, based on any combination of identified context, entered query, and bids 422 from potential advertisers 424 . In one embodiment, any bids 422 that have both a matching context and a matching query term are given most favorable placement, with higher bids given precedence over lower bids. Bid amounts can determine ranking or sequence on the page, and/or font size, color, style, and the like. In another embodiment, bid amounts can determine which ads are displayed and which are not; for example, a limited number N of ad spaces may be available, so that only the ads having the top N bids are shown. In another embodiment, ads associated with matching contexts but no specified keyword, or associated with matching keywords but no specified context, can also be shown but might be given lower precedence than ads associated with matching keywords and contexts.
- Ad selector 420 sends selected ad(s) to ad display module 421 .
- the actual ad content is sent; in another embodiment ad identifiers (such as URLs) are sent.
- Context processor 408 sends context-processed search results (obtained according to techniques described above and in related applications) to ad display module 421 .
- ad display module 421 formats the search results page to include the selected ads.
- ads can be shown on the right-hand side of the screen, and can include links to web pages so that the user can easily access a source of additional information about the advertised service or product.
- the formatted search results page, with ads, is sent to client 402 for display 1106 to the user.
- FIG. 9 there is shown an alternative embodiment where the techniques of the present invention are used for selecting ads to be shown on a web page that is not necessarily a search results page.
- the system of the present invention selects ads based on some set of keywords found within the content of the web page to be displayed, along with known context data about the user.
- FIG. 12 there is shown a flowchart illustrating a method for selecting advertisements to be placed on a web page, based on page content and user context, according to one embodiment.
- the method is described herein with reference to the functional components depicted in FIG. 9 , although one skilled in the art will recognize that the method of the present invention can be implemented using other functional architectures as well.
- bidding system 423 receives 1201 bids from potential advertisers 424 for ad placement.
- bids specify an amount the potential advertiser 424 is willing to pay for an advertisement targeted to a particular combination of page content (represented by keywords) and context(s). For example, a potential advertiser 424 may be willing to pay 1/10 of a cent for placement on a displayed web page where the user is identified as looking to purchase an item, and wherein the content of the web page includes the keyword “camcorder.”
- bidding system 423 is made available to potential advertisers 424 via a web-based interface. Many variations are possible.
- potential advertisers 424 might bid for placement, with payment expected upon user clickthrough, or user views, or both (for example, the advertiser 424 might be charged a first amount upon display of the ad to the user, and a second amount if the user clicks on the ad). Also, in some cases, advertisers 424 may bid for keywords alone, or contexts alone, or any combination thereof.
- Bids are stored, for example in a database 422 .
- a page request is received 1202 , at content server 430 , for or from a user.
- a page request can be an ordinary HTTP GET request, issued by a client browser 402 when a user clicks on a link, selects a web page via a bookmark, or enters a URL.
- context identifier 432 identifies 1203 one or more context(s) for the user (for purposes of clarity, in the following description it is assumed that only one context is identified).
- the context can be identified 1203 based on the content of the requested page, known historical information about the user, information retrieved from cookies, path taken to reach the requested page, and the like, or any combination thereof.
- the context used for selecting ads to be displayed for the user as follows.
- Ad selector 420 receives context identifiers and query terms from context identifier 432 .
- Content server 430 obtains 1204 web page content that was requested by the client 402 .
- Keyword identifier 431 scans the web content for relevant keywords.
- relevant keywords are identified by virtue of their placement, repetition, and the like; keywords may be identified both within the body of the web page and within meta-tags associated with the web content. Keyword identifier 431 sends the relevant keywords to ad selector 420 .
- Ad selector 420 selects ad(s) 1205 to be displayed, based on any combination of identified context (from context identifier 432 ), page content (in the form of keywords identified by keyword identifier 431 ), and bids 422 from potential advertisers 424 .
- any bids 422 that have both a matching context and a matching keyword are given most favorable placement, with higher bids given precedence over lower bids.
- Bid amounts can determine ranking or sequence on the page, and/or font size, color, style, and the like.
- bid amounts can determine which ads are displayed and which are not; for example, a limited number N of ad spaces may be available, so that only the ads having the top N bids are shown.
- ads associated with matching contexts but no specified keyword, or associated with matching keywords but no specified context can also be shown but might be given lower precedence than ads associated with matching keywords and contexts.
- Ad selector 420 sends selected ad(s) to ad display module 421 .
- the actual ad content is sent; in another embodiment ad identifiers (such as URLs) are sent.
- Content server 430 sends the web page to ad display module 421 .
- ad display module 421 formats the web page to include the selected ads.
- ads can be shown on the right-hand side of the screen, and can include links to web pages so that the user can easily access a source of additional information about the advertised service or product.
- the formatted web page, with the original web page content plus selected ads, is sent to client 402 for display 1206 to the user.
- ad selector 420 resolves competing ads based on context and keywords. For example, if one potential advertiser specifies a matching keyword and context, and a second advertiser specifies only a matching keyword, the first advertiser is given more prominent placement (assuming both potential advertisers bid the same amount). If, however, one bid was higher than the other, the higher bid might be given more prominent placement.
- a “Dutch auction” process is performed to resolve competing ads: a limited number of ad positions N are available, and the top N potential advertisers are selected (based on keyword, context, and/or bid amount). In one embodiment, potential advertisers are notified when they have been outbid, so that they have the opportunity to increase their bids and/or revise the parameters of the bid for the next opportunity for placement.
- the above-described invention can also be implemented in connection with other online ad placement techniques as described in related applications that have been incorporated herein by reference.
- One skilled in the art will further recognize that the above description, in which the invention is set forth in terms of ad placement on web pages, is merely an example of one embodiment, and that the present invention can be implemented in other forms and in other media, including for example television, radio, and the like.”
- the present invention is capable of improving ad targeting by taking such context (or user intent) into account when selecting ads.
- a page that displays ads can specify the context a visitor of that page is likely to be in so that the Adsense backend can target ads for that context.
- ads for example, those derived using Adsense technology from Google, Inc., of Mountain View, Calif.
- the present invention can be used in connection with existing technology for selecting and presenting advertisements.
- Certain aspects of the present invention include process steps and instructions described herein in the form of an algorithm. It should be noted that the process steps and instructions of the present invention could be embodied in software, firmware or hardware, and when embodied in software, could be downloaded to reside on and be operated from different platforms used by real time network operating systems.
- the present invention also relates to an apparatus for performing the operations herein.
- This apparatus may be specially constructed for the required purposes, or it may comprise a general-purpose computer selectively activated or reconfigured by a computer program stored on a computer readable medium that can be accessed by the computer.
- a computer program may be stored in a computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, or any type of media suitable for storing electronic instructions, and each coupled to a computer system bus.
Abstract
Context, or user intent, is used for improving targeting of advertisements and for generating competition among advertisers for valuable ad space. Advertisers can bid for placement on search results pages based on combinations of keywords and context categories, or keywords and contexts. Such bids are compared to one another so that appropriate ads can be selected and displayed. By taking context into account, improved ad targeting is accomplished.
Description
- This application is a continuation of U.S. patent application Ser. No. 11/201,754, filed on Aug. 10, 2005, the contents of which are incorporated herein by reference in their entirety.
- This application is also related to the following patent applications, the disclosures of which are incorporated herein by reference:
-
- U.S. patent application Ser. No. 11/202,423, filed Aug. 10, 2005, for “Programmable Search Engine”, now U.S. Pat. No. 7,693,830;
- U.S. patent application Ser. No. 11/202,410, filed Aug. 10, 2005, for “Sharing Context Data Across Programmable Search Engines”;
- U.S. patent application Ser. No. 11/202,383, filed Aug. 10, 2005, for “Aggregating Context Data For Programmable Search Engines”, now U.S. Pat. No. 7,716,199;
- U.S. patent application Ser. No. 11/202,382, filed Aug. 10, 2005, for “Detecting Spam Related and Biased Contexts for Programmable Search Engines”, now U.S. Pat. No. 7,743,045;
- U.S. patent application Ser. No. 10/112,656, filed Mar. 29, 2002, for “Methods And Apparatus For Ordering Advertisements Based On Performance Information”;
- U.S. patent application Ser. No. 10/112,654, filed Mar. 29, 2002, for “Methods And Apparatus For Ordering Advertisements Based On Performance Information And Price Information”;
- U.S. patent application Ser. No. 10/314,427, filed Dec. 6, 2002, for “Methods And Apparatus For Serving Relevant Advertisements”;
- U.S. patent application Ser. No. 10/375,900, filed Feb. 26, 2003, for “Serving Advertisements Based On Content”;
- U.S. patent application Ser. No. 10/649,585, filed Aug. 27, 2003, for “Improving Content-Targeted Advertising Using Collected User Behavior Data”;
- U.S. patent application Ser. No. 10/340,543, filed Jan. 10, 2003, for “Automated Price Maintenance For Use With A System In Which Advertisements Are Rendered With Relative Preferences”;
- U.S. patent application Ser. No. 10/340,542, filed Jan. 10, 2003, for “Automated Price Maintenance For Use With A System In Which Advertisements Are Rendered With Relative Preference Based On Performance Information And Price Information”;
- U.S. patent application Ser. No. 10/721,010, filed Nov. 24, 2003, for “Using Concepts For Ad Targeting”;
- U.S. patent application Ser. No. 10/419,692, filed Apr. 21, 2003, for “Determining Contextual Information For Advertisements And Using Such Determined Contextual Information To Suggest Targeting Criteria And/Or In The Serving Of Advertisements”;
- U.S. patent application Ser. No. 10/814,105, filed Mar. 31, 2004, for “Improving The Performance Of Techniques That Use A Similarity Or Match Between Ad Attributes Representations And An Ad Request Attributes Representation, And/Or That Use Semantic Or Contextual Information”;
- U.S. patent application Ser. No. 10/750,363, filed Dec. 31, 2093, for “Generating User Information For Use In Targeted Advertising”;
- U.S. patent application Ser. No. 10/610,322, filed Jun. 30, 2003, for “Rendering Advertisements With Documents Having One Or More Topics Using User Topic Interest Information”;
- U.S. patent application Ser. No. 10/452,791, filed Jun. 2, 2003, for “Serving Advertisements Using User Request Information And User Information”;
- U.S. patent application Ser. No. 10/850,942, filed May 21, 2004, for “System And Method For Providing Local On-Line Advertisements”;
- U.S. patent application Ser. No. 10/676,369, filed Oct. 1, 2003, for “Determining And/Or Using End User Local Time Information In An Ad System”;
- U.S. patent application Ser. No. 10/654,265, filed Sep. 3, 2003, for “Determining And/Or Using Location Information In An Ad System”;
- U.S. patent application Ser. No. 10/823,508, filed Apr. 12, 2004, for “Determining And/Or Using Location Information In An Ad System”;
- U.S. patent application Ser. No. 10/813,925, filed Mar. 31, 2004, for “Determining Ad Targeting Information And/Or Ad Creative Information Using Past Search Queries”;
- U.S. patent application Ser. No. 10/955,828, filed Sep. 30, 2004, for “Determining Advertisements Using User Behavior Information Such As Past Navigation Information”;
- U.S. patent application Ser. No. 11/026,507, filed Dec. 30, 2004, for “Generating And/Or Serving Local Area Advertisements, Such As Advertisements For Devices With Call Functionality”;
- U.S. patent application Ser. No. 11/096,234, filed Mar. 31, 2005, for “Using Image Information To Find Relevant Ads, To Score Ads, And/Or To Infer Information About Components Of, Or Participants In, An Advertising Environment”; and
- U.S. patent application Ser. No. 11/112,716, filed Apr. 22, 2005, for “Categorizing Objects, Such As Documents And/Or Clusters, With Respect To A Taxonomy And Data Structures Derived From Such Categorization”.
- This invention relates in general to search engines, and more particularly, to improving targeting of advertisements using programmable search engine context data.
- The development of information retrieval systems has predominantly focused on improving the overall quality of the search results presented to the user. The quality of the results has typically been measured in terms of precision, recall, or other quantifiable measures of performance. Information retrieval systems, or “search engines” in the context of the Internet and World Wide Web, use a wide variety of techniques to improve the quality and usefulness of the search results. These techniques address every possible aspect of search engine design, from the basic indexing algorithms and document representation, through query analysis and modification, to relevance ranking and result presentation, methodologies too numerous to fully catalog here.
- Regardless of the particular implementation technique, the fundamental architectural assumption for search engines has been that the search engine's operational model is fixed and non-alterable by entities external to the system itself. That is, the search engine operates essentially as a “black box” that receives a search query, processes the query using a preprogrammed search algorithm and relevance ranking model, and provides the search results. Even where the details of the search algorithm are publicly disclosed, the search engine itself still operates only according to this algorithm and nothing more.
- An inherent problem in the design of search engines is that the relevance of search results to a particular user depends on factors that are highly dependent on the user's intent in conducting the searched (in other words, the reason they are conducting the search) as well as the user's circumstances (in other words, the facts pertaining to the user's information need). Thus, given the same query by two different users, a given set of search results can be relevant to one user and irrelevant to another, entirely because of the different intent and information needs. Most attempts at solving the problem of inferring a user's intent typically depend on relatively weak indicators, such as static user preferences, or predefined methods of query reformulation that are nothing more than educated guesses about what the user is interested in based on the query terms. Approaches such as these cannot fully capture user intent because such intent is itself highly variable and dependent on numerous situational facts that cannot be extrapolated from typical query terms.
- Consider, for example a user query for “Canon Digital Rebel”, which is the name of a currently popular digital camera. From the query alone it is impossible to determine the user's intent, for example, whether the user is interested in purchasing such a camera, or whether the user owns this camera already and needs technical support, or whether the user is interested in comparing the camera with competitive offerings, or whether the user is interested in learning to use this camera. That is, the user's situational facts (e.g., whether or not they own the camera currently, their level of expertise in the subject area), and their information need (e.g., the type, form, level of detail, of the request information) cannot themselves be reliably determined by either analysis of query terms, or resort to previously stored preference data about the user.
- Another method of inferring intent is the tracking and analysis of prior user queries to build a model of the user's interests. Thus, some search engines store search queries by individual users, and then attempt to determine the user's interests based on frequency of key words appearing in the search queries, as well as which search results the user accesses. One problem with this approach is the assumption that queries accurately reflect a user's interests, either short term or long term. Another is that it assumes that there is a direct and identifiable relationship between a given information need, say shopping for a digital camera, and the particular query terms used to find information relevant to that need. That assumption however is incorrect, as the same query terms can be used by the same (or different users) having quite different information needs. Furthermore, such a technique is limited in its effectiveness because only one type of data (prior searches) is used. Other contextual and situational information is not captured or represented in query history and cannot therefore be used in such a methodology.
- Perhaps because in part of the inability of contemporary search engines to consistently find information that satisfies the user's information need, and not merely the user's query terms, users frequently turn to websites that offer highly specialized information about particular topics. These websites are typically constructed by individuals, groups, or organizations that have expertise in the particular subject area (e.g., knowledge about digital cameras). Such sites, referred to herein as vertical content sites, often include specifically created content that provides in-depth information about the topic, as well as organized collections of links to other related sources of information. For example, a website devoted to digital cameras typically includes product reviews, guidance on how to purchase a digital camera, as well as links to camera manufacturer's sites, price comparison engines, other sources of expert opinion and the like. In addition, the domain experts often have considerable knowledge about which other resources available on the Internet are of value and which are not. Using his or her expertise, the content developer can at best structure the site content to address the variety of different information needs of users.
- However, while such vertical content sites provide extensive useful information that the user can access to address a particular current information need, the problem remains that when the user returns to a general search engine to further search for relevant information, none of the expertise provided by the vertical content site is made available to the search engine. Many vertical content sites provide a search field from which the user can access a general search engine. This field is merely used to pass a user's search query back to the general search engine. However, none of the expertise that is expressed in the vertical content site is directly available to the general search engine as part of the user's query in order to provide more meaningful search results. The expert content developer has no formal, programmatic way of passing information to the general search engine that expresses his or her expertise in their particular knowledge site.
- In other words, there are no contemporary search engines that can be programmed by external entities, such as vertical content sites, during the search process itself, in way that can enhance the search process with the expertise of the content developer of the vertical content site.
- Furthermore, operators of search engines often derive much or all of their revenue from sales of advertisements. In order to improve targeting of advertisements, existing search sites often provide advertisements that are related to the content of a search query. For example, a query for “vegetarian dishes” would cause advertisements for vegetarian cookbooks to be displayed alongside the search results. However, such targeting mechanisms fail to take into account the context of the search. For example, if the user is actually looking for restaurants that feature vegetarian dishes, the cookbook advertisements would be of little use. Rather, it would be beneficial to display advertisements whose targeting is based not only on the keywords but also on the context of the search. It would also be beneficial to create competition for advertiser space based on search contexts, so as to increase revenue from advertisers.
- It is known in the art of online advertising to accept bids from advertisers, wherein the bids are associated with keywords, and to select advertisements to be shown on web pages based on the accepted bids. See, for example, U.S. Patent Application Publication No. US2005/0065844A1, Ser. No. 10/671,268, to Raj et al., assigned to Yahoo! Inc., for “System and Method for Managing an Advertising Campaign on a Network,” filed Sep. 24, 2003. However, such systems generally fail to take into account the context (or user intent) associated with a query, or associated with the content shown on a web page.
- The present invention improves targeting of advertisements by allowing advertisers to bid on keyword-plus-context combinations. Thus, advertisers can specify that they are interested in users that correspond to a particular context (for example, users that are identified as being in the market for a product), and thereby avoid mistargeting their ads to users that are not in that context. This provides a more accurate targeting mechanism than simple bidding on keywords.
- A user's query is processed using context information. Processing can include any combination of pre-processing operations (conducted prior to query execution) and post-processing operations (conducted on the search results from query execution). The pre-processing operations include operations to revise, modify or expand the query, to select one or more document collections on which to conduct the search, to set various search algorithm parameters for evaluating the query, or any other type of operation that can refine, improve, or otherwise enhance the quality of the user's search query. The context-processed query is then executed by a search engine to obtain a set of search results. The post-processing operations applied to the search results include operations to filter, organize, and annotate the search results as well as provide links to related contexts for other types of information or information needs. The context processing operations can be provided by a programmable search engine site, by a vertical content provider site, or by a client device. The context processing operations are controlled by context files that include commands, parameters, and instructions. The context files may be stored at the programmable search engine site, at various vertical content providers, or at a client device. Context files from multiple different sources can be used jointly. Context processing can also be limited to either pre-processing, or post-processing. The selection of which context files to apply to a given user query or a set of search results can be based on the query, the user, the client device, the vertical content site from which the query was received. The selection may be based as well on one or more subscriptions that a user has to particular vertical content providers, or popularity or reputation of a vertical content provider.
- According to one aspect of the present invention, a search engine automatically determines how to redirect and/or process a search query in accordance with programmable search techniques, even when the user has not entered the query at a vertical search site. Thus, the invention is able to provide improved search results that make use of context intelligence, even when the query is entered at a general search site.
- Contexts are used for improving targeting of advertisements and for generating competition among advertisers for valuable ad space. Contexts are classified into types. For example, one context type corresponds to purchasing, while another context type corresponds to troubleshooting. Context types can be derived from any of a number of factors including for example: query search terms themselves; particular vertical search site where the query was entered; particular links or buttons clicked on by the user in performing the search and/or browsing the site; history of websites visited; and explicit specification by the user. These context types often yield valuable information as to the user's intent. The present invention uses this information to better target advertisements according to the user's current intent. Advertisers can bid for placement on search results pages based on combinations of keywords and context categories, or keywords and contexts. Such bids are compared to one another so that appropriate ads can be selected and displayed. By taking context into account, improved ad targeting is accomplished.
- According to another aspect of the present invention, contexts can also be used for improving placement of ads on web pages other than search result pages. For example, web pages that display content-related advertising can benefit from the techniques of the present invention by targeting the ads based on contexts and/or context types associated with the user browsing the page. In this manner, the techniques of the present invention can be applied to any web page that shows content-based advertisements, whether or not the web page is a search results page.
- The invention also has embodiments in computer program products, systems, user interfaces, and computer implemented methods for facilitating the described functions and behaviors.
-
FIG. 1 illustrates a page from a host domain having a search field for accessing the programmable search engine. -
FIG. 2 illustrates the results of a search from the host domain. -
FIG. 3 illustrates a further page accessed from the search results page. -
FIG. 4 illustrates a generalized system architecture for a programmable search engine including context-based advertisement selection and display. -
FIG. 5 illustrates a first system architecture for a programmable search engine including context-based advertisement selection and display. -
FIG. 6 illustrates a second system architecture for a programmable search engine including context-based advertisement selection and display. -
FIG. 7 illustrates a third system architecture for a programmable search engine including context-based advertisement selection and display. -
FIG. 8 illustrates a combined system architecture for a programmable search engine. -
FIG. 9 is a block diagram showing an architecture for implementing context-based advertising according to one embodiment. -
FIG. 10 illustrates an example of a set of context files. -
FIG. 11 is a flowchart illustrating a method for selecting advertisements to be placed on a search results page, based on query terms and user context, according to one embodiment. -
FIG. 12 is a flowchart illustrating a method for selecting advertisements to be placed on a web page, based on page content and user context, according to one embodiment. - The Figures depict various embodiments of the present invention for purposes of illustration only. One skilled in the art will readily recognize from the following discussion that alternative embodiments of the illustrated and described structures, methods, and functions may be employed without departing from the principles of the invention.
- Referring now to
FIGS. 1-3 , there is shown an example of the user experience in using a programmable search system in accordance with an embodiment of the present invention. InFIG. 1 there is shown apage 100 from a host site, digitalslr.org, which is an example of a vertical content site, here the field of digital cameras. Content and organization ofpage 100 reflect the viewpoint and knowledge and of the entity that provides the site content. A vertical context site can be on any topic, and offer any type of information, and thus is not limited in that regard. For example, vertical content sites include sites on particular technologies or products (e.g., digital cameras or computers), political websites, blogs, community forums, news organizations, personal websites, industry associations, just to a name a few. What vertical content sites offer is a particular perspective and understanding of the world, one that may be of interest and value to some users. This perspective and understanding can be expressed, at least in part, by the content provider's organization and selection of content, as well as commentary, analysis or links to other content (e.g., commentary on other sites on the Internet). Indeed, one valuable aspect of vertical content sites is the particular collection of links to other sites that the content developer has judged to be useful in some regard, either for its depth, expertise, viewpoint, or the like. That is, users in general find value in the judgments of vertical content providers as to the usefulness of other sources of information on the Internet. - The host site includes a web server for serving pages, like
page 100, to client devices. The pages are stored in some repository, such as a database, collection of file directories, or the like. Thus, for example, thepage 100 includes commentary on the latest camera offerings from various companies, as well as alink 102 to another site with relevant information about digital cameras. Of interest in this example is thesearch field 104, which allows the user to search the Internet using a general search engine system (not shown), such as the Google® search engine provided by Google, Inc. of Mountain View, Calif. (of course in other embodiments, other search engines may be used). The user enters a search query in thesearch field 104. Here, the query is “Nikon dl00”. - Activating the
search button 106 causes the web server to transmit the search query to the search engine system using existing web protocols. In this example embodiment, in addition to the search query, the host site web server transmits a context file to the search engine system. Alternatively, the web server can transmit a link to the context file, or simply a context file identifier. The context file includes data that the search engine system uses to control the operation of the search engine itself in processing the search query and in presenting the search results, in effect, programming the search engine's operation. Thus, the context file, as will be further detailed below, can be understood as a set of instructions to the search engine system for processing a particular search query. The instructions can control, for example, three aspects of the search process: 1) pre-query processing operations; 2) search engine control information; 3) post-query processing operations. In addition, a context file can optionally include descriptions of (or links to) other context files, which likewise provide further programmatic control of the search engine system. - An advantage of the present invention is that the context information provides guidance as to how to tailor search results so that the results better suit the user's needs.
-
FIG. 2 illustrates an example of a search resultspage 200 that is provided to the user's client device following processing of the context file and the search query. Thispage 200 includes a set ofsearch results 202 that satisfy the search query, as well as additional information. First, there is displayed a name of thecurrent context 208 that has been provided to the search engine system. In one embodiment this name is a description that the vertical content site developer has given to express the type of information need or contextual circumstances that pertains to the current search query. Here, for example, thecurrent context 208 is for a “Camera Model”, since the search query matched a specific camera model name as determined by processing of the context file. This context operates as the entry point for a user seeking information about a particular camera model. - Second, a number of
links 204 are provided as navigational aids to further pages that address different possible information needs of the user. Each of theselinks 204 is associated with a related context file, which will provide further instructions to the search engine system to tailor further stages in the search process for a specific information need, and thereby construct the desired pages. For example, the first link, “If you are trying to decide which camera to buy”, addresses a specific type of user information need: information about how to purchase a camera, comparisons between camera, pricing information, and the like. This need derives from a specific type of user intent, specifically the intent to purchase a camera. The second link, “Where to buy this camera from . . . ”, addresses a different and more specific information need: the location of vendors for that particular camera. The last link, “If you already own one . . . ”, addresses another type of information need: information that a current own would want, such as technical support and service information. -
Page 200 also includeslinks 206 to other related contexts as well, such as “More Manufacturer Pages”, “More Guides”, “More Reviews”, and so forth. These links each invoke a particular context in which the vertical content provider has characterized particular sites and pages, and then defined a filter for the search engine to select pages with the matching characteristics when processing the reformulated search query. - For example, the vertical content provider has here previously identified a number of different sites or pages on the Internet as being variously manufacturer sites, product review, buying guides, and so forth (e.g., according to the type of site). The vertical content provider can label (or tag) a site with any number of category labels. The labels can describe any characteristic that the vertical content provider deems of interest, including topical (e.g., cameras, medicine, sports), type (e.g., manufacturer, academic, blog, government), level of discourse (e.g., lay, expert, professional, pre-teen), quality of content (poor, good, excellent), numerical rating, and so forth. The ontology (i.e., set of labels) used by the vertical content provider can be either proprietary (e.g., internally developed) or public, or a combination thereof.
- For example, in this example, the vertical site provider has previously identified a number of sites as containing product reviews, and has stored this information in a context file. The
link 206 to “More reviews” automatically instructs the system engine system to use this context file to filter the search results during post-processing to those pages that are from sites characterized as product reviews, and satisfying the reformulated query. - Fourth, the
page 200 includesvarious annotations 210 in conjunction with various ones of the search results. Theseannotations 210 provide the user with the viewpoint or opinion of the vertical content provider about the particular search result, as to any aspect of that search result that the provider considers significant, such as what the identified search result is about, how useful it is, or the like. - The placement, naming and sequencing of the
various links -
Page 200 also includesadvertisements 220. In one embodiment, theadvertisements 220 are selected and displayed in response to both the entered query and known context data about the user. As will be described in more detail below, advertisers can bid for placement, so that higher bids result in more favorable placement on the search results page. In one embodiment, only one (or a limited number N) of advertisements 220 (ads) for a context-plus-query combination are displayed, so that only the highest N bidders are shown. In another embodiment,advertisements 220 are ranked in order of highest to lowest bidder, so that theadvertisement 220 for the highest bidder appears at the top of the page. In yet another embodiment,advertisements 220 for higher bidders are highlighted, or displayed in a larger font, or otherwise given prominence overother advertisements 220. -
FIG. 3 illustrates anexample page 300 that is provided to the user as a result of clicking on thefirst link 204, “If you are trying to decide which camera to buy.” The context file associated with thislink 204 is processed, and a second search is performed on the search query. Thispage 300 shows thecontext name 308 “Choosing a camera”, which again reflects the selected information need of the user. The search results 302 in this context are more specifically tailored to assisting the user in evaluating digital cameras and selecting a satisfactory one. Notice, for example, the first search result is to a buying guide for digital cameras, and that there are no search results shows shown here to technical support pages. - Above the search results 302 are
links 304 to further related contexts based on information needs, such as “Reviews, sample photographs”, “Other similar cameras to consider”, and “Relevant product news”. Again, these links have associated context files that will control the search engine system to provide search results that are relevant to the described information needs for these contexts. Next to the search results areadditional links 306, which are also to related contexts, and for example to further professional and user reviews of digital cameras, sample photographs, and other information particularly relevant to evaluating a camera for purchase. - The user can thus continue to access additional related content through the
various links - Again,
ads 220 are included onresults page 300. As described above, in one embodiment the selection, sequence, and formatting of theads 220 is determined according to query, user context, and bid comparison. - By presenting ads that are associated with particular keywords and user contexts, the present invention improves ad targeting and thus provides greater value to advertisers. Users are more likely to respond to ads that match their current context, which often corresponds to a specific user intent or situation. In addition, as described herein, the system of the present invention determines ad placement according to advertiser bidding, thus creating a competitive situation where different context! query combinations can have different values according to their desirability and according to the number of advertisers that wish to target particular combinations.
- In one embodiment, the method of the present invention is used for presenting search results generated by vertical search engines (VSEs) even when the user entered the search query at a general search site (such as google.com). Thus, searches entered at general sites can yield results that are informed by vertical content sites. In one embodiment, each VSE is characterized by a set of query terms for which it applies. Based on these query terms and/or other factors surrounding the query and the user, the system of the present invention automatically determines how to redirect and/or process a search query, including enhancing results based on results from VSEs. Thus, the invention is able to provide improved search results that make use of context intelligence, even when the query is entered at a general search site. In this manner, the present invention integrates access to high-quality vertical search engines (and their results) into an interface for a general search engine, so as to improve the search experience even for those users who have not yet used (and may not even be aware of) these vertical search engines.
- For example, links to relevant VSEs can be provided on a search results page, thus providing the user with an easy way to access improved search results by simply clicking on a VSE link. Should the user do so, the query is run at the VSE corresponding to the link. In one embodiment, a recommendation and reputation network is used to select the set of VSEs presented to the user (highly-recommended VSEs are favored over less-recommended ones).
- With the capabilities of the present invention, vertical content providers can define any variety of context files to meet any type of information need that users may have. The providers of the general search engine system are no longer burdened with the task of themselves organizing and categorizing content (as is conventionally done in various directories and portals), but instead can rely upon the much deeper and vaster pool of vertical content providers—hundreds of millions or more—as compared with the limited pool of editors that may organize content directories or categorize other websites for a general search engine. The present invention thus provides any vertical content site provider with the capability to programmatically control the general search engine system on behalf of a user conducting a search.
- In addition, the present invention improves ad targeting and creates a competitive environment where advertisers can bid against one another for favorable placement in certain context/query combinations.
-
FIGS. 4 through 8 illustrate a number of different system architectures in which the present invention can be employed. These architectures generally vary in terms of which entities provide the context files and which entities process the context files to control the search process and search result presentation. In general, the context files can be provided by any system entity (e.g., any of a client device, a host vertical site, or the search engine system), and can likewise by processed by any system entity, or any combination there. - Referring first then to
FIG. 4 , there is shown a generic system architecture for a programmable search engine including placement of advertisements according to user contexts, queries, and advertiser bidding. In this system architecture, there is aclient device 402, acontent server 406,context server 410, acontext processor 408, and a programmable search engine (PSE) 404. Also included is anadvertiser bidding system 423 which allowspotential advertisers 424 to bid on context/query combinations. Advertisers can choose an amount that will be paid (either on a page view or click-through), and can specify context(s), query term(s), or both. Parameters, including bid amount and bid characteristics, are stored inbids database 422. - The
client 402 can be any type of client, including any type of computer (e.g., desktop computer, workstation, notebook, mainframe, terminal, etc.), handheld device (personal digital assistant, cellular phone, etc.), or the like. Theclient device 402 need only have the capability to communicate over a network (e.g. Internet, telephony, LAN, WAN, or combination thereof) with thePSE 404. Typically, aclient device 402 supports a browser application, and the appropriate networking applications and components, all of which are known to those of skill in the art. Theclient device 402 may include as well a search engine interface that allows it to directly query thePSE 404. - The user of the
client 402 constructs and transmits a search query to thePSE 404, via thecontent server 406, which includes a search engine interface (SEI) 409. This can be via a search query field on a host site that includes thecontent server 406, along with an underlying link to initiate processing of the input text and forwarding the results thereof to thePSE 404, as illustrated inFIG. 1 . Thecontent server 406 selects an appropriate context file, as identified by a context ID. The selection of the context file can be based on the query itself, theclient device 402, the user identification, default selection parameters, user site behavior (e.g., page accesses, dwell times, clicks) or other information programmatically available to thecontent server 406. The context ID may be a URL, a unique context name, a numerical ID, or some other form of reference to the context file. - The
content server 406 transmits the query along with the context ID to thecontext processor 408. Alternatively,content server 406 can provide the identified context file directly to the context processor. Depending on the embodiment, thecontent server 406 may also be responsible for serving content pages to theclient device 402. - The
content server 406 also transmits query and context identifier to thead selector 420.Ad selector 420 uses this information to determine one or more ad(s), as well as sequence of the ads, if appropriate, to be placed on the results page. In one embodiment, thead selector 420 selects ad(s) based onbids 422 received frompotential advertisers 424. - In one embodiment, the
content server 406 transmits more than one context ID (and/or context file) to thecontext processor 408 and toad selector 420. Thus, for example, if more than one vertical content site is appropriate for the entered query, thecontent server 406 may provide URLs (or other context file identifiers) corresponding to each. - The
context processor 408 uses the received context IDs to obtain the identified context files from thecontent server 410. In one embodiment, thecontext processor 408 identifies additional context IDs appropriate to the query, for example by providing an identifier of the client device 402 (e.g., IP address, browser type, operating system, device type), the user (e.g., user ID), or host domain from which the search query is received, or the search query itself, to obtain further context files from thecontext server 410. - As discussed above, a context file (or collection of context files) can include, for example, three types of programmatic information that can be used in any combination by the
context processor 408 and/orPSE 404 to control the search process. These are: 1) pre-query processing operations; 2) search engine parameter control; and 3) post-query processing operations. This programmatic information will be discussed as part of the operational flow. - The context files may take various embodiments. In the some embodiments, the context files are individual files stored in a file system. In other embodiments, the context files are stored in a database system, again as either separate files, or of database entries, tables or other structures. For example, a context file in database embodiment may be stored as a collection of context records for an identified source (e.g., a specific vertical content provider), a type (e.g., knowledge base, site/page annotation, etc.), associated commands (e.g., evaluation, restriction, redirection, relation, annotation, etc.), and remaining attributes and conditions. Accordingly, no limitation is imposed on the underlying implementation of the context files by the present invention.
- The
context processor 408 processes the context files to perform various pre-processing operations, to programmatically generate a reformulated query. These pre-processing operations may be performed independently or in any combination to obtain a reformulated query. These include the following: - a) Query revision: the modification, addition, or deletion of or one or more terms of the original query. Such modifications include correcting spelling errors, replacing query terms, adding query terms (as conjuncts, or as disjuncts) or deleting query terms (e.g., stop word removal). The added or replaced terms may broaden or narrow the scope of a query.
- b) Creation of additional queries: For example, given an original search query of “digital SLR”, an additional query may be “digital camera”. In one embodiment, these additional terms are incorporated into the search query as disjunctive phrases. In another embodiment, each of these additional queries is a separate query that potentially has its own filters, ranking, and the like.
- These types of query reformulations are expressed in the context file as a series of query rewrite rules. The query rewrite rules generally define an output query (or query term) based on matching one or more terms of the original query (e.g., replace “digicam” with “digital camera”). Other rules may be applied automatically as defaults, without being conditioned on the terms of the query.
- The second type of control information processed by the
context processor 408 are search engine control data. These include: - a) selection of one or more search engines for processing the reformulated search query. The
PSE 404 may include any number of different search engines, each of which is optimized for certain types of searches. For example, different search engines are typically used for text searches, image searches, and audio searches. A search engine typically will generate an information retrieval score for various documents in terms of their relevance to the search query. A context file can specify which search engine or engines is/are to be used (e.g., by identification of particular URLs for the search engines). A single search can integrate results from different engines. Thecontext processor 408 extracts the identified search engine(s), and constructs the appropriate query string using the reformulated query. - b) selection of one or more search document collections on which to search. A search engine system will typically have access to multiple different document collections, which can be searched jointly, or individually. The provider of the context file may instruct the
PSE 404 to use one or more specific document collections for a particular search. For example, a vertical content site for healthcare professional, may receive a search for “migraine”, and instruct the search engine system to search the PubMed database provided by the National Library of Medicine, rather than a more general search of the Internet. This constraint better tailors the results to the medical literature most likely to be relevant, to the information need of a healthcare professional, rather than the typical results to such a query on the Internet. The context file can specify which document collections are to be used (e.g., by specification of a database, index, or other context repository). Thecontext processor 408 extracts this information from the context file as well, and passes it the selected search engine as a parameter. - c) specification of search engine parameters for use during query processing. Most search engine algorithms operate under a large number of parameterized controls when generating information retrieval scores, such as threshold values for scoring query term matches, iteration cycles, waiting of links, terms and other query or document attributes. Normally, these parameters are not accessible to entities outside of the search engine system, but rather are fixed by the search engine provider. However, in some embodiments of the present invention, the search engine system may be configured to receive and use any of these types of parameters, thereby giving further incremental programmatic control of the search engine to the vertical content developments. Again, the
context processor 408 extracts these parameters from the context file and passes them to thesearch engine 404 as parameters. - The context-processed query, which includes the reformulated query and the search engine control data (if any) that are specified in the context file, is thus provided to the
PSE 404. If multiple queries are constructed during pre-processing, the context processor sends each of the multiple queries and their associated search engine control data (which may be individually varied) for each additional query. - The
PSE 404 processes the reformulated query using the search engine control data (if any) to obtain a set of context-processed search results, and provides these search results to thecontext processor 408. If multiple queries are processed, then thePSE 404 can merge the results from these searches. - The
context processor 408 then provides various post-processing operations, which again may be performed independently or conjointly. The results of this post-processing made part of the context-processed search results. The post-processing operations include: - a) filtering the context-processed search results using filters specified in the identified context. The context file may specify one or more filters that the
context processor 408 can apply to further limit the documents that are included in the search results. These filters are expressed in terms of rules that match metadata with particular metadata associated each search result. The metadata can include both native metadata to the document, such the document type, date, author, site, size, or labeled metadata associated with the document, that is the labeled characteristics provided by the vertical content provider (or others). - For example, the filters may be defined to exclude documents of certain types (e.g., image files), from particular sites or Internet domains (e.g., documents from the .biz or .gov domain), or of a certain vintage (e.g., documents published before Mar. 3, 2005). Referring back then to the example of
FIG. 3 , thelink 306 for “More Professional reviews” would invoke a filters defined to select only documents labeled as “professional”, “product reviews”. Again, these labels can be provided by the vertical content provider from which the original query was sourced, or from some other source. These options will be more fully discussed below. - b) ranking of the context-processed search results using ranking parameters specified in the context file. The
PSE 404 includes a ranking function that ranks the search results based on the respective information retrieval scores. The context file can include ranking parameters, such as weighting factors to increase or decreases the IR scores for particular types of documents, for documents from selected sources. The ranking function may also operate on identifiable native or labeled metadata. For example, the rankings can be adjusted based on length of document, publication date, or document format just to name a few. Alternatively, the ranking may be adjusted based on labeled metadata, such ranking by expressed “rank” value, or by as increasing the native ranking of documents labeled as “expert” by a weight factor, or increasing the ranking of documents having some specified quality measure of/110″. Thecontext processor 408 can use these ranking parameters to rank the documents in the search results. - c) clustering of the search results using clustering parameters. The
context processor 408 may also cluster (group) the search results according to parameters provided in the context file. The parameters can specific clustering based on native or labeled metadata. Thus, all documents labeled as “professional reviews” can be clustered together; or all documents where are image files can be clustered, or documents from a given domain (e.g., all documents from xxxx.com). - d) providing navigational links in the context-processed search results to additional contexts. As illustrated in
FIGS. 2 and 3 , the context processor may also provide links that can be accessed to invoke additional searches for further refinements of the information needs of the user. Each such related context link invokes another cycle of pre-processing and/or post-processing by thecontext processor 408 and if so instructed, another cycle of query processing by thePSE 404. - e) annotating the context-processed search results using annotations specified in the identified context. As illustrated in
FIGS. 2 and 3 , the context file may also providespecific annotations 210 that can be included with any of the search results. - In one embodiment, the system of the present invention does not change the order in which the initial results are presented, but annotates the results with the labels that apply to them. Clicking on a label issues a new search restricted to the results matching this tag. In yet another embodiment, these annotations need not be labels but can be links to relevant pages on other sites.
- Thus, the context files can include conditional instructions that define various types of Annotations. These annotations are provided by the annotate command. In one embodiment, this command has the following syntax:
-
<Annotate count=“n”> annotation condition* annotation action* </Annotation> - The annotation condition operates in a similar manner to a restriction condition. Here, the annotation condition is evaluated with respect to the attributes (tags), if any, associated with the search results, as compared to the entries in the site/page annotation file. Any attribute (or set of attributes) can be used as annotation conditions, such as the type, source, year, location, or the like, of a document or page. The context processor receives the search results from the search engine, and compares each result (be it a site, page, media page, document, etc.) with the entries listed in the site/
page annotation file 900. Results that satisfy the condition are annotated with the annotation action. Annotate commands can be used by themselves or in combination with any of the other commands, including Restrictions. - In yet another embodiment, the query does not originate at the vertical content site, but at a general search engine site. The system of the present invention provides a mechanism by which the knowledge provided by the vertical content site is applied even for searches entered at a general site such as google.com. In one embodiment, the user indicates to the search engine, either while using the VSE or through a sign up process similar to that used to subscribe to RSS feeds, that he or she would like to apply the VSE's contexts which conducting searches of a particular type. In another embodiment, selection and use of a particular VSE is performed automatically.
- The
context processor 408 then provides the context-processed search results to thead display module 421. Thead selector 420 sends selected ad(s) toad display module 421. In another embodiment, thead selector 420 sends identifiers (such as URLs) of selected ad(s), and either thead display module 421 or theclient 402 itself, retrieves the ads.Ad display module 421 integrates the selected ads with the context-processed search results, and sends the search results page (with ads, or references to ads) toclient 402 for display. In one embodiment, ads include links to advertiser-operated websites, so that a user who is interested in finding out more about an advertised product or service can click on a link to be taken to the advertiser's website. - The
client device 402 may also query thePSE 404 directly, either through itssearch engine interface 409, or simply by going to the website of thePSE 404 entering the query directly there. In this scenario, context processing is still handled by thecontext processor 408 in manner described above. - As noted, the user can access any of the related context links, or perform entirely new queries, again making use of any context files that are selected based on such queries.
- Referring now to
FIG. 5 , there is a shown a system architecture in which the context processing operations are provided by the PSE system itself. Again, there is aclient device 502 as before, including abrowser 503, along with a hostvertical content site 504, and aPSE system 500.Ad selector 420 andad display module 421 are also shown, and operate in a manner similar to that described above in connection withFIG. 4 . However, for purposes of clarity, the other components of the advertisement selection and bidding system are not shown inFIG. 5 , although one skilled in the art will recognize thatcomponents - The vertical host
vertical content site 504 includes a vertical content server 506 (e.g., a web and/or application server) and vertical content files 505 (e.g., a database or directory of web pages). Also present are vertical context files 507. Thevertical content site 504 also includes asearch engine interface 509 to thePSE system 500, such as a search field and search button as illustrated inFIG. 1 . The user accesses thevertical content site 504. From that site, he or she enters a search query to be processed by thePSE system 500. Thevertical content server 506 processes the search query to determine a number of context IDs for appropriate context files, and transmits the search query and context IDs to thePSE system 500. For example, the context IDs can be transmitted as parameters in one or more URLs to thePSE system 500. Thevertical content server 506 also transmits the search query and context IDs to thead selector 420. Thead selector 420 selects appropriate ads and provides them to thead display module 421. Thevertical content site 504 also includes a number of conventional components (e.g., firewalls, router, load balancers, etc.) not shown here in order to not obscure the relevant details of the embodiment. - The
PSE system 500 includes a number of components. Afront end server 510 provides the basic interface for receiving search queries. Thefront end server 510 extracts the context IDs and query, and passes them to acontext processor 520. The front end server 552 may also provide an identifier of the client device or the user to thecontext processor 520. Thecontext processor 520 provides the context IDs and query, to thecontext server 530. Thecontext server 530 uses the context IDs to retrieve context files from a repository of cached context files 540. The context files are received from anyvertical content site 504, via aregistration interface 560. This allows any provider of avertical content site 504 to define the context files that are to be used for handling queries from their site and upload such context files for storage by thePSE system 500. Alternatively, the context files are extracted from thevertical content sites 504 by a contextfile web crawler 580. The registration and crawling methods may be used together. One implementation would be for thevertical content site 504 to first register its context files 507, which includes putting the site address on a crawl list. Subsequently, thecrawler 580 crawls thesite 504 to obtain any updates to the context files 507. Caching of the context files ensures very high speed processing of the context files at query time, sincecontext processor 520 does not need to retrieve the context files from the remotelyvertical content site 504, and thereby does not incur network latency (or problems with the vertical content site being unavailable). - The
context server 530 may also obtain context files from a repository of global context files 542. These context files can be derived from data mining on the cached context files 540, provided by the provider of thePSE system 500, or any combination thereof. Such context data can include any information that is deemed relevant and persistent with respect to the user and/orclient 502. - The
context server 530 then provides the context file to thecontext processor 520. Thecontext processor 520 performs the appropriate preprocessing operations (if any) as defined in the context file to generate the reformulated query, and establish the search engine control data as set forth above, as part of the context-processed query. Thesearch engine 550 receives the context-processed query, including reformulated query and search engine control data, and executes a search on same to provide a set of context-processed search query results. These results are passed back to thecontext processor 520, which performs the post-processing operations on the search results as defined in the context file, to further modify the context-processed search results. These context-processed results are then transmitted to thead display module 421 which integrates selected ads received from (or identified by)ad selector 420.Ad display module 421 then provides the finished page, including ads, to theclient device 502. - This architecture provides various benefits. First, it provides for high-speed access to the context files and eliminates reliance on the availability of the remote vertical content sites to serve their context files on demand.
- Second, collection of the context files allows for various systemic benefits to be achieved from analysis of the context files.
- Specifically, the following types of information may be determined from the collected context files. The rules used to define the query preprocessing operations can be accumulated and used to identify the most frequently used rules for various query terms. To a large extent this type of information is more reliable, having been essentiality voted on by a large population of interested providers, as opposed to rules designed by a very small team of editors.
- Similarly, analysis of the search engine control yields identification of most frequently used search engines, indices, and parameters for particular queries or types of queries. Analysis of the query post-processing operations also identifies the most frequently used annotations, related contexts, ranking and filtering operations.
- As mentioned above the context files includes label metadata used by the vertical content providers to describe the characteristics of any site or page on the Internet. In one embodiment, these labels are selected from a publicly provided ontology, so that vertical content providers use the same set of labels to characterize the content of the Internet. The ontology of labels can describe categories and instances of any type. The ontology includes, for example, topics, information types, information sources, user types, and rating scales, just to name a few possible aspects of the ontology. Accordingly, from the cached context files 540 a categorization of Internet content can be derived and validated. By way of simple example, all Internet sites labeled as type “buying guide” and category “digital camera” can be extracted from the cached context files 540. A directory of these digital camera buying guides can then be constructed, for example by selecting those sites having that have a minimum number of appearances in the context files. This approach again leverages the collective judgment of the vertical content providers—that is, the wisdom of crowds—as to the nature, type, and quality of content on the Internet.
- From the foregoing, the
PSE system 504 can extract and establish a collection of globally optimized context files, where the query pre-processing rules, search engine control data, and query post-processing rules are derived from statistically analysis of cached context files for the frequency, distribution, variability and other measures of the usage of context information. - One scenario for this architecture is to support direct search queries with post-query context processing. In this embodiment, a user query is received directly from the
client device 502, without first being passed through a verticalcontent provider site 504. The user's search query can be received directly at the website of the PSE system 500 (e.g., via search query page), or a search interface in browser toolbar, application, or system extension (e.g., a search interface on the user's desktop). In any event, the user's search query is handled without context based pre-processing (that is, query modification based on a vertical content provider's context files), though internal adjustment of the search query may be performed as part of native search operations. The search results are then post-processed with one or more context files, to provide the various types of navigational links, related context links, and/or annotations on search results as described and illustrated inFIGS. 2 and 3 . - Another beneficial aspect of this architecture is that analysis of the context files also allows for integration of advertisement purchases based on contexts. That is, advertisers can bid for placement of their advertisements in specific contexts, rather than by specific query terms. For example, an advertiser may bid for placement of an advertisement for its digital camera when the context file for a query indicates that the user is shopping for a particular camera model, but not when the user is seeking technical support. This allows advertisers to more precisely focus their advertising efforts based on the user's information needs-which have been expressly described by the context files, rather than merely inferred from the query terms.
- Referring now to
FIG. 6 , there is shown an embodiment of a system architecture in which the context processing is provided by the vertical content site itself. In this embodiment again there is aclient device 602 including abrowser 603, along with a hostvertical content site 604, and a generalsearch engine system 600. Thevertical content site 604 includes avertical content server 606 and vertical content files 605 (e.g., a database or directory of web pages). Thevertical content site 606 also includes asearch engine interface 609 to thesearch engine system 600, such as a search field and search button as illustrated inFIG. 1 . The user accesses thevertical content site 604 and from that site can enter a search query to be processed by thesearch engine system 600. - In this embodiment, the
vertical content site 604 also includes various components for context processing, including avertical context processor 620 and local vertical context files 607.Ad selector 420 andad display module 421 are also shown, and operate in a manner similar to that described above in connection withFIG. 4 . However, for purposes of clarity, the other components of the advertisement selection and bidding system are not shown inFIG. 6 , although one skilled in the art will recognize thatcomponents - In this embodiment, the
vertical content site 604 also includes various components for context processing. First, thevertical content site 604 includes avertical context processor 620. As before,vertical content server 606 receives a search query from theclient device 602, e.g., via thebrowser 603, and processes the search query to determine context IDs for an appropriate context file. This information is now provided to thevertical context processor 620. Thecontext processor 620 passes the context IDs (and optionally the client device ID, user ID, and query) to thecontext server 630. Thecontext server 630 uses the context IDs to retrieve context files from the vertical context files 607. Thevertical content server 606 also transmits the search query and context IDs to thead selector 420. Thead selector 420 selects appropriate ads and provides them to thead display module 421. - The
context server 630 provides the retrieved context file(s) to thecontext processor 620. Thecontext processor 620 performs the appropriate preprocessing operations as defined in the context file to generate the context-processed search query (including the search engine control data as set forth above). Thevertical context processor 620 then invokes thesearch engine 650 to process the context-processed query. - The
search engine 650 receives the reformulated query and search engine control data, and executes the search accordingly, generating the context-processed search results. These results are passed back to thecontext processor 620, which performs the post-processing operations on the search results as defined in the context file, to further modify the context-processed search results. These processed results are then transmitted back to theclient device 602. - The
context processor 620 may also provide some or all of the search engine control data to the search engine, depending whether thesearch engine 650 exposes an application programming interface. In some embodiments, where thesearch engine 650 is closed, then thecontext processor 620 simply passes the queries to thesearch engine 650 and operates on the results. In this embodiment, thecontext processor 620 itself would use at least some of the search engine control data, for example, selection of which search engine to use. This gives the vertical content site provider control as to whichsearch engines 650 to use with which types of user queries. - Referring now to
FIG. 7 , there is shown an embodiment of a system architecture in which the context processing is provided by the client device site. In this embodiment again there is aclient device 702 including abrowser 703, along with a hostvertical content site 704, and a generalsearch engine system 700.Ad selector 420 andad display module 421 are also shown, and operate in a manner similar to that described above in connection withFIG. 4 . However, for purposes of clarity, the other components of the advertisement selection and bidding system are not shown inFIG. 7 , although one skilled in the art will recognize thatcomponents - As before, the vertical host
vertical content site 704 includes avertical content server 706 and vertical content files 705 (e.g., a database or directory of web pages). Thevertical content site 706 also includes asearch engine interface 709 to thesearch engine system 700, such as a search field and search button as illustrated inFIG. 1 . The user accesses thevertical content site 704 using thebrowser 703 and from that site can enter a search query to be processed by thesearch engine system 700. - In this embodiment, the
client device 702 includes the various components for context processing. First, theclient device 702 includes abrowser 703, for accessing thevertical content site 704 as well as any other available site on the network. Theclient 702 includes avertical context processor 720, which can operate a plug-in to thebrowser 703, or Java applet. Once the user makes the query via thevertical content server 706, that query is also provided to thevertical context processor 720. Thecontext processor 720 again processes the search query to determine context IDs for appropriate context files. Since the operation is local to the browser, thecontext processor 720 can use the context IDs to retrieve context files from the user context files 707. Thevertical content server 506 also transmits the search query and context IDs to thead selector 420. Thead selector 420 selects appropriate ads and provides them to thead display module 421. - The
context processor 720 then performs the appropriate preprocessing operations as defined in the context file to generate the context-processed query. Thevertical context processor 720 then invokes thesearch engine 750 to process the context processes query. Thesearch engine 750 receives the context-processed query, and retrieves search results, forming the context-processed results. These results are passed back to thecontext processor 720, which performs the post-processing operations on the search results as defined in the context file, to further modify the context-processed search results. These processed results are then transmitted to thead display module 421 which integrates selected ads received from (or identified by)ad selector 420.Ad display module 421 then provides the finished page, including ads, to thebrowser 702.Ad display module 421 can be located atcontent site 704, or atclient 702, or at some other location. - An advantage of this architecture is that it allows the user to establish and user their own context files. Just as individual vertical content providers have their individual expertise and viewpoint, so to do individual users. Thus, a user may define context files to categorize and label particular websites, for example, identifying the site that she considers most authoritative or useful for particular topics. The user can also define query pre-processing operations, or more' likely import such operations from others (e.g., experts in various topical domains) who publish context files for this purpose. Similarly, the user can define post-processing operations that allow for customization in the presentation of results, including arrangement of results into clusters or grouping that the user feels most comfortable with. For example, a user can define a personal context file in which search results are always clustered into academic (.edu), government (.gov), retail shopping (sites having metadata or text indicative of online purchasing), and Wage files.
- The architectures illustrated in
FIGS. 4-7 can all operate concurrently with different types of the individual systems operating together.FIG. 8 illustrates this system architecture for mutual and concurrent context processing. All of the system elements communicate via anetwork 890, such as the Internet. - First, the
PSE system 800 includes a complete set of components as described with respect toFIG. 4 . The operative features of these components have been previously described and so are not repeated here. - Next, three types of client devices 802 are in operation.
Client device 802 a simply has abrowser 803 by which it accesses various sites on the Internet.Client device 802 b includes abrowser 803, as well as user context files 807, which can be passed to anyavailable context processor 820 for processing in conjunction with a search query provided by the user. -
Client device 802 c includes abrowser 803 and user context files 807, as well as itsown context processor 820. This enables theclient 802 c to perform local context processing on the user's search query prior to sending the query to the search engine, and to perform post-processing operations after receiving the search results. This client'sbrowser 803 also includes asearch engine interface 809, enabling direct querying of thePSE system 800.Other clients respective browsers 803. - The three types of different vertical content sites 804 are also shown.
Vertical content site 804 a includes acontent server 806, along with asearch engine interface 809 to thePSE system 800, as previously described. The server forwards a user's query (from any type of the client devices 802) to thePSE system 800, providing as well the context ID associated with the user's current context (along with any context related information received from the client device). The site does not need to store its own context files, as these can be stored at thePSE system 800 in the cachedcontext file database 840. - For this type of
vertical content site 804 a, thePSE system 800 provides all of the context processing operations. Here, thesite 804 a does not provide any specific context ID information. As a result, thePSE system 800 can provide its own context identification mechanisms, for example based on thesite 804 a, the client 802, the query terms, or the like. Using the context information, thecontext server 830 retrieves the appropriate global context files 842, and thecontext processor 820 uses these files for the context processing operations, including pre-processing of the search query, control of the search engine operation and parameters, and post-query processing. The programmablesearch engine site 800 passes the context-processed search results back to the requesting client, either directly, or within the scope of thevertical content site 804 b, e.g., using framing techniques. - As with
vertical content site 804 a,vertical content site 804 c includes itsown content server 806search engine interface 809, vertical content files 805, as well as local vertical context files 807. Thissite 804 b receives a search query from a client device 802, and forwards the query along with the context ID for the query context to thePSE system 800. The site's vertical context files 807 are cached in the PSE system's cached context files 840. ThePSE system 800 receives the context ID, and uses itscontext server 830 to retrieve the associated context files forsite 804 b from the cached context files 840. Thecontext server 830 may also retrieve any applicableglobal context file 842. ThePSE context processor 830 then processes the retrieved context files, generates the context-processed search query and processes the queries via thesearch engine 850. The context-processed search results are then further post-processed by thePSE context processor 820, again in accordance with either the site's context files or the global context files 842 (including where appropriate a combination thereof). - The last type of
vertical content site 802 c includes itsown content server 806search engine interface 809, vertical content files 805, local vertical context files 807, as well as a local,vertical context processor 820. Thelocal context processor 820 receives the user's search query, along with the context ID for the user's context, and using the referenced context files performs the appropriate pre-processing operations on the query prior to transmitting it to thePSE system 800, along with the search engine control data specified by the context files. - Here, the
PSE system 100 can provide various levels of services to thevertical content site 804 c. Minimally, the programmablesearch engine system 800 can process the received context-processed queries, and execute these queries accordingly via thesearch engine 850, providing the context-processed search results back to thelocal context processor 820 for further modification. Thelocal context processor 820 for thevertical content site 804 c provides further post-processing operations specified by the identified context, and then forwards the final set of context-processed search results to the client device 802. - Alternatively, the
PSE system 800 can perform some specific context processing operations as instructed by thelocal context server 820, whether pre-processing, or post-processing, or control of the search engine operations. For example, thelocal context processor 820 may perform the pre-processing operations to reform the queries, but then use the search engine control data to specify which document collections and search algorithms thesearch engine 850 should use. - In addition, the
PSE system 800 may add its own layer of context processing based on its global context files 842, including generation of additional reformulated queries, control of thesearch engine 850, and post-processing of search results prior to returning them to the vertical content site'slocal context processor 820. Thevertical content site 804 c can forward the context-processed search results to the client device 802 directly, or can invoke another layer of post-processing operations by thelocal context processor 820, perhaps to further fine tune the organization, commenting, or navigation features thereof. - The
PSE system 800 can provide context processing directly to user queries input at the PSE site from any of the client devices 802. The user's search query can be received directly at the website of the PSE system 800 (e.g., via search query page), or a search interface in browser toolbar, application, or system extension (e.g., a search interface on the user's desktop). Since the user's query is not coming from a vertical content provider, thePSE system 800's context processing can use the global context files 842, including those for annotating search results with links to potentially useful context for the user. - The degree of context processing for direct queries can be varied to include either pre-processing or post-processing individually, or a combination of both. One embodiment of direct query handling provides a context-based post-processing on the search results without context based pre-processing (e.g., query modification). Here, the user's search is received and executed without pre-processing based on the context files of a specific vertical content provider (though some internal adjustment of the query and selection of search indices may optionally be employed to provide the most relevant search results). As described with respect to
FIG. 5 , the search results are then post-processed with one or more context files to provide the various types of navigational links, related context links, and/or annotations on search results as described and illustrated inFIGS. 2 and 3 . - The post-processing operations in this scenario can use either global context files 842, or can be based on the context files of any number or selection of the vertical content providers. In one embodiment, a user can identify which the vertical content provider whose context files are to be used for context processing. Identification can be done via a subscription model, in which the user subscribes to have such context processing done for her or her queries, for example via a subscription interface (e.g., page) at the website of the vertical content provider, which then forwards an identifier of the user or the user's client device to the
PSE 800. A user may subscribe to a particular vertical content provider in order to have that provider's expertise, perspective or viewpoint applied to the user's search queries and results, without the user having to always enter a query from that vertical content provider's site. - For this embodiment, the
PSE system 800 includes auser account database 891, which stores for each user various types of personal preferences for searches, including the subscriptions to particular vertical content providers. ThePSE 800 also provides a registration interface (allowing the user to register with thePSE system 800 for storing search preferences, subscription information, and other user settings), and a login interface for the user to login and have the user's settings applied to the user's queries. Direct queries received from the user and/or the user's client device 802 are identified by thePSE 800 and then the appropriate context files to which the user subscribed are used for context processing. In another embodiment, subscription-based context processing is provided for direct user queries for both pre-processing and post-processing operations. - The selection of which vertical content provider's context files are to be used (whether for pre-processing, post-processing or both) can be based on other factors beyond a user's subscriptions, as some users may not have subscribed to any particular vertical content provider. In one embodiment, the selection is based on a popularity measure for each vertical content provider whose context files are included in the cached repository. The popularity measure can be based on web access statistics, like number of unique visitors to a vertical content provider's site each month (or other time period), number of hits to such site, number of current subscribers to the vertical content provider. These and other statistical measures can be combined into a popularity measure. Alternatively, or additionally, the selection can be based on a reputation measure (or rank), where the reputation of each vertical content provider is judged and rated by users.
- In summary, the foregoing provides a general overview of the operations and various system architectures useful with the present invention. As can be seen, the present invention can be practiced in a number of different and complementary embodiments. The capability of the present invention enable any system entity to provide context files, context processing, or both, results in both tremendous flexibility and power. The flexibility allows for rapid, widespread and easy implementation of the present invention. Any system entity can provide various levels of operative support, and cooperate with any other system entity, according to the techniques described herein.
- The context files and context processing capability can be readily implemented in any vertical content site and in any client. The power of the system derives in part from such widespread distribution and implementation: the more context files and context processing is adopted, the more contextual information can be accumulated and leveraged, for example in the global context files. This enables the PSE system to continually refine and adapt its capabilities to the information needs of the wide variety of users. Further, the widespread use of context files by vertical content developers continually expands the range of information needs and perspectives that can be satisfied, as well as the depth and quality of that information that is used to satisfy such needs.
- Referring now to
FIG. 10 , there is shown an example of a set of context files as might be developed by a vertical content provider for a digital camera related website: This simplified example is used only to illustrate some of the basic aspects of context files, and not as definitive statement of their characteristics. - In this example, the vertical content provider has provided a variety of context files that suit different types of information needs, and different types of available resources. Context files 902 are illustrative of contexts defined for various types of users of digital cameras, such as a professional user searching for a digital camera, a consumer searching for a digital camera, and an owner who already has such a camera. Each of these types of users has different information needs and typically different approaches to evaluating the information she obtains. For example, a professional user is typically most concerned with technical performance issues such as picture quality, durability, and compatibility with an existing set of professional equipment, whereas a consumer user is typically concerned with ease of use, convenience and price. Both of these types of users are seeking information during their purchase process that is quite different from an existing owner. An owner is not typically interested in obtaining further opinions or evaluations of a product, but rather information pertaining to its use, technical support, service, or warranty issues.
- Each of these three user type context files 902 contain instructions that enable a context processor to respond to a specific query according to the expected information needs of the user. Thus, the context file 902 d for the professional user may include query revision rules to modify a received query such as “Nikon camera” to “Nikon DX2”, which is a current model of a professional digital SLR, and one deemed by the content provider to be of most interest to the professional user. By contrast, the context file 902 e for the consumer user may include query revision rules to modify this same query to “Nikon Coolpix 7600”, again a current model of the Nikon cameras, and determined by the content provider to be the best Nikon camera for a typical consumer user. Continuing this example then, the vertical content site would pass the consumer context file 902 e to a context processor along with the user query of “Nikon camera”, and the context processor would use the query modification rules to generate the appropriate revised query for execution.
- The arrangement and interrelationship of the context files is highly flexible and is decided by the particular vertical content provider. Each of the context files 902 can point to any number of other context files 902 in an arbitrary graph manner, as best determined by the content provider. For example, the consumer user context file 902 e references two other context files, the “Looking for a Camera” context files 90Th, and the “Shopping for a Camera” context file 902 i. These context files more precisely focus on serving the user's intention, former focusing on the information needs when a user is still looking for a camera and in need of information to evaluate potential products. The latter context is appropriate when a particular camera has been selected and the user is now shopping for the camera based on price, availability, and other factors. Again, each of these context files 902 references different and more selective contexts. Thus, the “Looking for a Camera” context file 902 h references a group of context files 902 k pertaining to various types of reviews of digital cameras. The “Shopping for a Camera” context file 902 i references context files 902 m, 9021 for comparing prices, and for comparing vendors. The context files 902 can also be arranged hierarchically through a series of directories.
- As previously discussed, a context file may include query revision rules, and search engine control information that enables the context processor to programmatically tailor the user's query to the information needed, as indicated by the context. For example, once the user enters the “Looking for a Camera” context, that context file 902 h may contain search control data that selects specific websites that contain consumer oriented camera reviews, as deemed appropriate by the vertical content provider. This control data would thus be used by the search engine system to select one or more document collections for targeting the query (or revised queries) thereto.
- Similarly, the “Shopping for a Camera” context file 902 i would include search control data that selects various price comparison engines to obtain current market prices on a given camera. These examples illustrate how selection of a context can programmatically vary the search query and search control data and parameters in order to better suit the user's information needs.
- It is important to further point out here that the specific editorial decisions reflected in each context file 902—how to revise a query based on whether the user is a professional or a consumer, or which sites to search depending on whether the context is shopping or looking—are made by each vertical content provider individually. This gives each vertical content provider—such as those with expertise in a particular field, such as digital cameras—the ability to define the contexts as they see fit, thereby using their own judgment, expertise, knowledge, and opinions to make the various determinations. Each vertical content provider can define very detailed and precisely crafted contexts, each of which can specifically control the operations of the programmable search engine in responding to a search query. Users ultimately benefit from this individuated capability because the vertical content providers to create a dynamic information “market”: a market not merely for content itself, but for perspective, experience, and knowledge. That is, vertical content providers now offer users the ability to “search the world” through their own point of view, as suggested in
FIG. 1 by the text “Search the web with digitalslr.org.” - One mechanism for encapsulating the expertise and judgment of each vertical content provider is, at least in part, the site/
page annotation file 900. This context file 900 includes information variously categorizing or describing characteristics of sites or pages on the Internet. In addition to annotating a site or a page, a developer can also annotate all the pages that share a certain URL prefix, whether or not there is an actual page with that prefix. Each entry in the site/page annotation file 900 provides an identifier of a site or page, e.g., a URL, along with a number of tags or token identifying attributes, characteristics, weightings, or other qualitative or quantitative values. The tags can be explicitly typed (e.g., as <tag, value> pairs), or implicitly typed based on order and data format. A URL can specify a site or page completely, or in part as a URL prefix, for some portion of a web site. Such an annotation file can be provided using existing standard formats such as RSS (RDF Site Summary or Really Simple Syndication). - The following are some examples of the contents of a site/page annotation file. These examples might be provided, for example, via an RSS feed or by some other mechanism.
-
- url, http://www.dealtime.com/xPR-Nikon_D100-RD-81887137412, descriptor, Review/NegativeReview, rank, 6, comment, Professional Photographer lists various shortcoming and compatibility problems
- url, http://www.dealtime.com/xPR-Nikon_D100-RD-81887137412, descriptor, Review/ProfessionalPhotographerReview, rank, 0, comment, Professional Photographer is less thrilled than many others about the D100
- url, http://www.dpreview.com/reviews/read_opinion_text .asp?prodkey=nikon_d100&opinion=15851, descriptor, Action, rank, 0, comment, Short review on using the D100 for sports photography
- url, http://nikonimaging.com/global/news/, descriptor, News, rank, 3, comment, Nikon's web site. Lots of info, but hard to navigate
- url, http://www.kenrockwell.com/tech/2dig.htm, descriptor, Guide, rank, 0, comment, Explains Digital SLRs vs Point and Shoots
- url, http://www.luminouslandscape.com/tutorials/nikon-sn.shtml, descriptor, Review/ProfessionalPhotographerReview, rank, 8, comment, Extremely detailed, very technical, comparative review
- url, http://www.photographyreview.com/, descriptor, Review, rank, 6, comment, Good all around site for photography buffs
- url, gallery.photographyreview.com/showphoto, descriptor, Photos, rank, 8, comment, Good showcase of great photography with a wide range of cameras
- url, http://www.olympusamerica.com/, descriptor, Manufacturer, rank, 10, comment, Olympus's web site. Well organized and informative
- In this embodiment of a site/
page annotation file 900, each entry is a set of <name, value> pairs, as follows: - URL: provides the network address for where the site or page is located. Note that both specific pages within sites can be identified, as well as home pages for large sites.
- Descriptor: a semantic label describing the site or page. The content provider is free to use any labels he or she chooses, since the query processing and post-processing operations are written in terms of rules that can operate on these same descriptors. In the above example, the vertical content provider has labeled various sites/pages to their content type (e.g., “Negative review” or “News” or “Photos”), as well as to the type of entity which provides the information (e.g., “Manufacturer”). Again, these descriptors are merely illustrative, and the selection of which particular descriptors are used to describe a site will be dependent in at least in part on the particular category or topic for the subject matter of the domain.
- Referring back then first entry here is for a specifically identified page on a remote site (dealtime.com) that contains a “negative review” of the Nikon D100 camera.
- The pre-processing and post-processing operations can use the tags as conditions for evaluation. For example, a post-processing rule in the “Negative Reviews” context file 902 n would select for inclusion in the search results that had a tag “Negative Review/NegativeReview”. The various tags shown above-Manufacturer, Guide, Photos, etc.—are merely illustrative of the scope and variety that can be used. The ability to tag any site or page with a semantic label allows for very powerful pre-processing and post-processing operations by the context processor.
- In one embodiment, there is provided a common ontology of tags which can be used, either exclusively or in conjunction with a set of private tags defined by vertical content provider. The ontology includes a hierarchy of categories of information and content on Internet. One useful ontology is provided by the Open Directory Project, found at dmoz.org. All or a portion of such an ontology can be used for the tags. The ontology can be public, as in the OPD, or proprietary, or a combination of both.
- Rank: Each entry can have a rank (or “score”, “weight”, etc.) a figure of merit as to the importance, quality, accuracy, usefulness, and the like of the particular page or site. This value is provided by the vertical content provider, again based on his or her own judgment and perspective. The rank value further allows the context processor to selectively include (or exclude) search results that have certain rank values, or to rank individual search results by this value as well.
- Comment: Each entry can have a comment, explanation or description that the vertical content provider can use to further describe the page to the user. The comment allows the vertical content provider to further articulate the relationship between the page and the user's information need.
- A given site or page can have multiple entries in the site/page annotation. file 900, each with its own descriptors, and other tags. For example, the first two entries above are for the same page, but with different descriptors, ranks, comments and so forth. When more than one entry matches a given URL, depending on the use, either both or the most specific entry is applied.
- The URL, Descriptor, Rank, and Comment fields are illustrative of the types of information that can be included in the site/
page annotation file 900. The vertical content provider can define any number of other or additional attributes, and then define complementary pre-processing and post-processing rules that operate on such attributes. For example, other attributes that can be included in the site/page annotation file include: - Content Type: a designation of the type of site or page, such as guide, scientific article, government report, white paper, thesis, blog, and so forth.
- Source Type: a designation of the source of the document, which maybe the same or different than the Tag. For example: government, commercial, non-profit, educational, personal, and so forth. An “Organization” attribute may serve a similar purpose.
- Location: a designation of the country, state, country or other geographic region relevant to the page, using names, standard abbreviations, postal codes, geo-codes, or the like.
- User Type: a designation of the intended type of user or audience for the site or page. For example, lay person, expert, homemaker, student, singles, married, elderly, and so forth.
- The foregoing descriptors are themselves instances or specializations of a generic attribute type “tag”. Accordingly, vertical content providers can choose to simply use the “tag” designation in association with a property value (e.g., tag, “Manufacturer”), or may use some specialization of tag, such as those listed above, or a combination of both approaches. This feature further enhances the flexibility and the extensibility of the present invention.
- Any given page or site can have multiple different entries in the site/page annotation file. For example, the first two entries in the above list are for the same page, but have different tags, the first being a Negative Review, and the second being a Professional Photographer Review, different ranks, and different comments. This allows the vertical content provider to express the relevance of a give site for a particular context, rather than being limited to a single inclusion.
- A second mechanism for capturing the knowledge and expertise of the vertical content provider is the
knowledge base file 904. Theknowledge base file 904 is used to describe specific knowledge of concepts, facts, events, persons, and like. This information is encoded in a graph of object classes and instances thereof. A simpleknowledge base file 904 could be as follows: -
<KB> <Class id=“CameraModel”/> <Class id=“DigitalSLRCamera”> <subClassOf ref=“CameraModel”/> </Class> <DigitalSLRCamera id=“NikonDl00”> <manufacturedin ref =“Japan”/> <name>D100</name> <name>Nikon D100</name> <manufacturer>Nikon</manufacturer> <brand>Nikon</brand> <format>SLR</format> <madein>Japan</madein> <modelyear>2003</modelyear> <megaPixels>6mp</megaPixels> </DigitalSLRCamera> <DigitalSLRCamera id=“CanonDigitalRebel”> <manufacturedin ref=“Japan”/> <name>EOS300D</name> <name>Digital Rebel</name> <manufacturer>Canon</manufacturer> <brand>Canon</brand> <format>SLR</format> <madein>Japan</madein> <modelyear>2003</modelyear> <megaPixels>6.5mp</megaPixels> </DigitalSLRCamera> </KB> - This knowledge base defines the class of “CameraModel”, used to identify individual types of cameras. Each class has a class id, as shown. A class can then be a subclass of another class. Hence, the class “DigitalSLRCamera” is a subclass of the “CameraModel” class.
- Instances of a class can then be defined as well. Here, two different instances of the class “DigitalSLRCamera” are defined by giving it a specific id, here “NikonD100” and “CanonDigitalRebel”, and a listing of a variety of properties, such as their name, manufacturer, location of manufacture, model year, and so forth. The properties for each class are determined by the provider of the
knowledge base file 904, such as the vertical content provider. - The programmable search engine may maintain its own global knowledge base file as part of its global context files. This global knowledge base can provide an extensive database encapsulating a vast array of knowledge, concepts, facts, and so forth, as extracted from content on the Internet, provided by experts or editors, or any taken from existing databases. Vertical content providers can then make use of this global knowledge base by providing preprocessing and post-processing operations that make use of such knowledge base information, as further described below.
- The context files 902 use a script or markup language to define the various pre-processing, search engine control, and post-processing operations. The various elements of the language are as follows:
- The
knowledge base file 904 can be used to evaluate whether particular objects have defined properties or attributes. In general, there are three basic types of objects that can be evaluated related to the knowledge base: queries, users, and search results. The form of the evaluation commands are generally the same. - The query evaluation commands for evaluating terms using the
knowledge base file 904 are as follows: -
<query.denot.property>property_value</query.denot.property> <query.denot.Instanceof>class_id</query.denot.InstanceOf> <query>query_term</query> - The first type of term based evaluation is used to evaluate whether the concept expressed by one or more query terms matches some object in the knowledge base file that has the specified property with the specified property_value. The context processor processes this command by traversing the knowledge base file 904 (as a graph, for example) until it finds an object having a property with the matching property value. For example, assume the
knowledge base file 904 portion described above, and the query evaluation command: - <query.denot.Manufacturer>Nikon</query.denot.Manufacturer>
- and the input search query “D100”.
- Here, the query term “D100” matches the name of a camera instance in the
knowledge base file 904. The context processor than checks whether the Manufacturer property of that instance is “Nikon”. Since it is, the query “D100” is said to denote a camera manufactured by Nikon, even if that is not specifically disclosed in the query term itself. Accordingly the query evaluation command is satisfied, and the context processor would then take an appropriate action that was dependent on this evaluation. As will be further illustrated below, a variety of different commands to the context processor can be made conditional based on the evaluation of the query evaluation command. - The second type of query evaluation command is query.denot.InstanceOf. This command is evaluated to determine whether a particular query indicates that an instance of a class has been described in the query, rather than property. For example, consider the query evaluation command:
- <query.denot.InstanceOf>DigitalSLRCamera</query.denot>
- where the user query is “8 mp SLR”.
- Here, the query is decomposed into terms “8 mp” and “SLR”, and these are checked against the property values for the objects in the knowledge base file. In this example, these properties match the properties for the Nikon DIDO camera, satisfying the query evaluation command. Again, the context processor would undertake whatever command was conditioned on the evaluation command.
- The last type of query evaluation command <query>query term</query> is the simplest. The query evaluation command is satisfied if an input search query term matches the query_term.
- As noted above, the context files may be used with any combination of query evaluation commands as conditional triggers for further context processing. Example of these will be further described below.
- As with the evaluation of queries, so too can users and search results be evaluated for their properties, with respect to defined any defined class in the knowledge base file. Thus, the attributes of user can be evaluated with the following command
- <user.property>property_value</user.property>
- where property refers to any available property of the user, such as user name, login, account number, location, IP address, site activity and history (e.g., clicks, focus, page dwell time) and so forth. Some of these properties can be locally available from the
knowledge base file 904. Alternatively, the property information can be extracted (e.g., queried) from any accessible legacy database (e.g., a customer database, account database, registration database, or other data source), which exports an appropriate programmatic interface. Other properties, such as site activity, are made available from site tracking tools that monitor each user's activity at the vertical content site. - Users can also be evaluated for membership in classes, using the following:
- <user.InstanceOf>class_id</user.InstanceOf>
- Here, a class of users (e.g., “Professional”) can be defined in the
knowledge base file 904, and the properties of the current user compared by the context processor against the properties of an identified class for match in values. If a property match is found, the user is deemed a member of the class. - Similarly, any search result can be evaluated as well, as to its properties, as defined in either the source/page annotation file 900 (or alternatively, in its metatags). Here, the evaluation command would take the form:
-
<result.tag>tag_value</result.tag> <result.tag.InstanceOf>class_id</result.tag.InstanceOf> - As a default <result.tag> may be abbreviated to <tag>.
- In the first command, a given search result (or set thereof) can be evaluated with respect to its properties, such as content type, date, source, user type, etc. This outcome of the evaluation can be used to control further context processing. Similarly, search results can be evaluated using the second command syntax to determine if they are instances of various classes defined in the
knowledge base file 904. - These following context processing operations can be executed unconditionally, or conditionally based on any of the foregoing types of evaluation operations (e.g., evaluations of query terms, users, or search results).
- There are two basic types of query modification rules, those that augment or add terms to a query, and those that replace query terms. The following is example syntax for the query modifier command:
-
<QueryModifier type=“augment” value=“query term”/> <QueryModifier type=“replace” query=“query term” value=“replacement term”/> - The type attribute defines either an augmentation or replacement type query modification. The value attribute includes the query term that is to be added to the user's original input search query, or that is to replace the input search query. The query attribute is optional. If present, then the context processor scans the search query and replaces the any term matching the query term with the replacement term. This is useful, for example, to correct misspellings, expand abbreviations (or contrawise use abbreviations in place of terms), and other in place adjustments. If the query attribute is missing, then the entry query string is replaced by the replacement term. Of course, the replacement term can include any number of terms.
- Query modification can made conditional on any of the evaluation commands. For example:
-
<QueryModifier type=“augment” value=“Digital SLR”> <query.denot.lnstanceof>DigitalSLRCamera</query.denot> </QueryModifer> - This example would reformulate a query, say the query “Dl00” to include another query “Digital SLR” since the term “Dl00” denotes an instance of a digital SLR camera, according to the knowledge base. file 904.
- As another example:
-
<QueryModifier type=“augment” value=“Professional reviews”> <user.property>professional</user.property> </QueryModifer> - In this example, assume again the user's query is “Dl00.” Here, the properties of the current user are evaluated. If the user is determined to be “professional”, based on properties available from the browser, site activity history, login and password, etc. For example, if the user access a number of pages in the vertical content site dedicated to professional or expert level information (e.g., detailed technical pages), then the user may be inferred to be a “professional” user, even though no other information is known about the user's identity. In this case, the query is reformulated to include the term “professional reviews” even though the user did not include these terms in the query.
- These are but a few examples of a how a vertical content provider can extend and improve the user's queries based on his own expertise and the flexible context processing operations.
- A context file 902 can reference or include another context file 902, as described above, to form an arbitrary graph of connections. Several elements are used for referencing context files.
- A context file can include another context file, as follows:
- <include scr=“path name”>
- The include command references another context file 902 as being included in the current context file. The context processor will read the included context file and process all of the instructions therein. Pathname identifies the location of included context file 902. Included context files 902 can be used for any type of context processing operation.
- A context file can also identify a related context file, as follows:
-
<relContext href=“path name”> <anchorText>context description<anchorText> </relContext> - and
-
<relContext href=“path name”>context description</ relContext> - The relContext command identifies a related context for the current context file. The relContext command can be used in both pre-processing and post-processing operations. Examples of the use of related contexts in postprocessing operations are illustrated in
FIG. 10 , and inFIGS. 2 and 3 . The context description is anchor text that the user will see in the browser. When selected, the identified related context file is retrieved and processed. The first type of related context command is used to define related contexts for varying types of information needs.FIG. 2 illustrates this type of related context via related context links 204. Thefirst link 204 there is associated with a related context file 902 (e.g., context file 902 h) that includes the following instructions: -
<relContext href=“ /chooseCamera”> <anchorText>If you are trying to decide which camera to buy ... </anchorText> </relContext> - This command is processed by the context processor when the
link 204 on the anchor text is selected, and the corresponding context file “cameras/chooseCamera” is retrieved and processed. The resulting page is illustrated inFIG. 3 . - The relContext command may also be used with the various types of evaluation commands, to make the reference to the related context conditional. For example:
-
<relContext href=“ /chooseCamera”> <query.denot.instanceOf>DigitalSLRCamera</query.denot. instanceOf> <anchorText>If you are trying to decide which camera to buy ... </anchorText> </relContext> - Here, the related context DigitalSLRCamera is accessed here only if the query.denote command evaluates true, that is where the query terms denote an instance of a model of digital camera listed in the
knowledge base file 904. Similar conditional evaluations can be based on the properties of the user or the properties of the search results. - The second type of related context command is used to define related contexts that appear as annotations in conjunction with search results. This type of related context is illustrated in
FIG. 2 by related context links 206. For example, therelated context file 902 h that generatedFIG. 2 also includes the following instructions: -
<relContext href=“cameras/Manufacturer”>More Manufacturer Pages</relContext> - Here, the anchor text “More Manufacturer Pages” is then linked to the associated context file 902, which contains further instructions to searching and displaying pages for digital camera manufacturers.
- The relContext command takes as an href any valid URL, and thus, can also reference any available Internet site. For example, the relContext command can directly link to an online encyclopedia or dictionary to provide an annotation for a search result that would provide a detailed explanation of the result.
- In pre-processing operations, a second type of cross reference to related context is used, context redirection. The command format for the context redirection command is as follows:
-
<contextRedirect href=“pathname”>redirection condition*</contextRedirect> - Again, pathname indicates the location of another context file to be processed if certain redirection conditions are met. The redirection conditions (one or more as indicated by “*”) can be based on any available information about the query (e.g., query terms, or information dependent thereon), the user (e.g., IP address, login, site click through history, prior purchases), or other programmatically available information.
- In one embodiment the redirection conditions can be based on the any evaluation commands previously discussed:
-
<query.denot.property>property_value</query.denot.property> <query.denot.lnstanceof>class_id</query.denot.lnstanceOf> <query>query_term</query> <user.property>property_value</user.property> <user.InstanceOf>class_id</user.instanceOf> <result.tag>tag_value</result.tag> <result.tag.InstanceOf>class_id</result.tag.InstanceOf> - For example, assume the
knowledge base file 904 portion described above. Further, assume the redirection command: -
<contextRedirect href=“Nikon cameras”> <query.denot.Manufacturer>Nikon</query.denot.Manufact urer> </contextRedirect> - and the input search query “D100”.
- As above, the query evaluation command is positively evaluated, since the query term “D100” matches the name of a camera instance in the
knowledge base file 904, which instance has the Manufacturer property value “Nikon”. The context processor thus executes the context redirection command and accesses the context file “Nikon_cameras” for further processing. This capability allows the vertical content provider to his or her own knowledge base to analyze queries and reformulate them on behalf of the user. - The user evaluation user.InstanceOf can likewise be used to redirect context processing based on the particular user properties For example, consider the redirection command:
-
<contextRedirect href=“NegativeProfessionalReviews”> <user.InstanceOf>Professional_User</user.InstanceOf> </contextRedirect> - Here, the properties of the user can be ascertained from the
knowledge base file 904, and other information as described (e.g., site history). If the user is determined to be a professional user, then the context processor accesses and processes the NegativeProfessionalReviews context file. - As mentioned, any number of redirection conditions (e.g. evaluations) can be used together in a context redirection command such as:
-
<contextRedirect href=“Recommended SLR cameras”> <query.denot.megapixels matchType=“greaterThanOrEqualTo”>6mp</query.denot.megapixel s> <query.denot.megapixels matchType=“lessThanOrEqualTo”>8mp</query.denot.megapixels> <query.denot.modelyear>2005</query.denot.modelyear> </contextRedirect>
which would effect the context redirection only when all of the redirection conditions are satisfied, e.g., for a query containing the terms which denote digital SLR cameras with between 6 mp and 8 mp, for the 2005 model year. - The context redirection is particularly powerful when combined with the query modification rules, previously discussed. A vertical content provider can define a number of context redirections based on query terms, each of redirects the context processor to an appropriate context file, depending on say, whether the query denotes shopping for a camera versus seeking customer warranty information. In the respective target context files, specific query modification rules would then be processed to reformulate the query as most appropriate given the identified context.
- In post-processing operations, the context files can be used to control the scope, number, or types of results and entries that are provided to the user. To this end, the context files can include conditional instructions that define various types of restrictions (e.g., filters). These restrictions are provided by the restriction command. This command has the following syntax:
-
<Restriction count=“n”> restriction condition* restriction action* </Restriction> - The restriction condition operates in a similar manner to the redirection condition previously discussed. Here, the restriction condition is evaluated with respect to the attributes (tags), if any, associated with the search results, as compared to the entries in the site/page annotation file. Any attribute (or set of attributes) can be used as restriction conditions, such as the type, source, year, location, of a document or page, to name but a few. The context processor receives the search results (here a set of candidate search results) from the search engine, and compares each candidate result (be it a site, page, media page, document, etc.) with the entries listed in the site/
page annotation file 900. Only those candidate results which are listed in theannotation file 904 and have the specified matching attributes are included in the context-processed search results. The restriction count is an optional parameter and indicates how many of the matching results are to be included in the context-processed search results. If left out, then all matching results are included. - The restriction action is an optional parameter that specifies a further action to take if the restriction condition is met. This action includes, for example, annotating the search results with a link to a related context (using the relContext command), such as
links 206 illustrated inFIG. 2 . - Consider the following example:
-
<Restriction count=“2”> <descriptor>Reviewc/descriptor> <rank>5+</rank> <relContext href=“Reviews”>More Review</relContext> </Restriction> <Restriction count=“2”> <descriptor>Guide</descriptor> <rank>5+</rank> <relContext href=“Guides”>More Guides</relContext> </Restriction> - Assume that the search query was a general query on “digital cameras”, and that the search results returned 1,000,000 pages covering everything from manufacturers and retailers of digital cameras, to online user forums and services for printing photographs. Since the user's search was quite general, the vertical content provider can use the post-processing to provide a selection of a number of different types of search results, as illustrated, for example in
FIG. 2 . In processing the above code example then, the first restriction command causes the context processor to select the first two search results that have matching entries (Le., matching URLs or portions thereof) in the site/page annotation file 900 and include the descriptor “Review”. The context processor also uses the restriction action for the related context, to annotate these two search results with a link to related context file “Reviews”, with the link labeled “More reviews.”FIG. 2 shows an example ofsuch annotation link 206. - The second restriction causes the context processor to select the first two search results that have matching entries in the site/page annotation file and include the descriptor “Guide.” The context processor would then use the restriction action to annotate these results with a link to the related context file “Guides.”
- As mentioned previously, the context processing operations can undertaken by multiple different entities in the system, including at the client device, the vertical content site, and the programmable search engine, each using their own locally available context files. Thus, all of the above describe features can be effectively integrated within and between different system entities. For example, a vertical context provider can define a context file that defines various context redirections using the redirection condition based on the global knowledge base files. This enables the vertical content provider to leverage the global knowledge base, but add their own personal perspective and judgment to its underlying facts.
- Finally, context files 902 can contain instructions that control the operation of the programmable search engine itself in terms the selection of which particular document collections to be searched, and various algorithmic or parametric settings for the search engine. Selection of a document collection for searching is provided by the following command:
-
<Corpus ref=“document_collection”> //other context operations// </Corpus> - The corpus command takes as its argument a reference to the name (or URL) or a selected document collection. The document collection name is mapped (either locally, or by the programmable search engine) to document collection and corresponding index available to the programmable search engine (e.g. particular index in the content server/index 870).
- The corpus command can be made conditional using any of the foregoing described evaluation commands, as well as including any of the restriction, redirection, related context, and so forth.
- For example, a particular document collection may be selected where the query is determined using the evaluation commands to include certain keywords or instances of objects in the knowledge base. Thus, a query that is evaluated to include a query term denoting a scientific term, like “Heloderma suspectum”, or a medical term, would then cause a selection of an appropriate scientific literature database.
- Control of search engine parameters is via the SearchControlParams operations. In general, most modern search engines use a number of different attributes of a search query and the individual indexed documents (e.g., frequencies of terms in URL, anchor text, body, page rank etc.) to determine which documents best satisfy the query. The documents are then ranked accordingly. A ranking function is essentially a weighted combination of the various attributes. Normally, the weights of the attributes are fixed, or at least not externally controllable by third parties. The SearchControlParam however gives vertical content providers access to these weights. The syntax is as follows:
-
<SearchControlParams> <attribute-name>weight</attribute-name> <attribute-name>weight</attribute-name> ... </SearchControlParams> - Here, attribute-name is the name of the particular attribute used by the search engine to calculate a relevance ranking. The specific attribute names are disclosed by the programmable search engine provider, since they are internal to that provider's own engine. Typical attributes, as indicated above including term frequency in URL, term frequency in body, term frequency in anchor text, term frequency in markup, page rank. The SearchControlParams operator can work with any exposed attribute or parametric control of a programmable search engine, and thus the foregoing are understood to be merely exemplary. The weights used in this operator can be either normalized or non-normalized, and in the latter case, the input weights can be internally normalized by the context processor or by the search engine itself. A vertical content provider need not specify weights for all the attributes the search engine uses, but only those of interest to the provider of the context file.
- Referring now to
FIG. 11 , there is shown a flowchart depicting method for selecting advertisements to be placed on a search results page, based on query terms and user context, according to one embodiment. For illustrative purposes, the method shown inFIG. 11 is described herein with reference to the functional components depicted inFIG. 4 , although one skilled in the art will recognize that the method of the present invention can be implemented using other functional architectures as well. -
Bidding system 423 receives 1101 bids frompotential advertisers 424 for ad placement. In one embodiment, bids specify an amount thepotential advertiser 424 is willing to pay for an advertisement targeted to a particular combination of query term(s) and context(s). For example, apotential advertiser 424 may be willing to pay 1/10 of a cent for placement on a query results page where the user is identified as looking to purchase an item, and wherein the query term includes “camcorder.” In one embodiment,bidding system 423 is made available topotential advertisers 424 via a web-based interface. A set of standard contexts can be defined and presented (such as buying, troubleshooting, researching, and the like); in addition, custom contexts can also be specified by thepotential advertiser 424. Many variations are possible. For example,potential advertisers 424 might bid for placement, with payment expected upon user clickthrough, or user views, or both (for example, theadvertiser 424 might be charged a first amount upon display of the ad to the user, and a second amount if the user clicks on the ad). Also, in some cases,advertisers 424 may bid for query terms alone, or contexts alone, or any combination thereof. - Bids are stored, for example in a
database 422. Subsequently, a search query is received 1102 for or from a user. Using the techniques described above, one or more context(s) is/are identified 1103 for the user (for purposes of clarity, in the following description it is assumed that only one context is identified). As described above, the context can be identified 1103 based on the entered query terms, the website at which the user is performing the search, known historical information about the user, information retrieved from cookies, path taken to reach the search site, and the like, or any combination thereof. As described above and in related applications, this context is used for improving the search, by pre- and/or post-processing the query and the results. According to one embodiment of the present invention, the context is also used for selecting ads to be displayed for the user, as follows. -
Ad selector 420 receives context identifiers and query terms fromSEI 409.Ad selector 420 then selects ad(s) 1104 to be displayed, based on any combination of identified context, entered query, and bids 422 frompotential advertisers 424. In one embodiment, anybids 422 that have both a matching context and a matching query term are given most favorable placement, with higher bids given precedence over lower bids. Bid amounts can determine ranking or sequence on the page, and/or font size, color, style, and the like. In another embodiment, bid amounts can determine which ads are displayed and which are not; for example, a limited number N of ad spaces may be available, so that only the ads having the top N bids are shown. In another embodiment, ads associated with matching contexts but no specified keyword, or associated with matching keywords but no specified context, can also be shown but might be given lower precedence than ads associated with matching keywords and contexts. -
Ad selector 420 sends selected ad(s) toad display module 421. In one embodiment the actual ad content is sent; in another embodiment ad identifiers (such as URLs) are sent.Context processor 408 sends context-processed search results (obtained according to techniques described above and in related applications) toad display module 421. Oncead selector 420 has selected ad(s) 1104 to be displayed, and once search results have been received 1105,ad display module 421 formats the search results page to include the selected ads. This involves generating HTML to indicate ad placement and display characteristics; for example, ads can be shown on the right-hand side of the screen, and can include links to web pages so that the user can easily access a source of additional information about the advertised service or product. The formatted search results page, with ads, is sent toclient 402 fordisplay 1106 to the user. - Referring now to
FIG. 9 , there is shown an alternative embodiment where the techniques of the present invention are used for selecting ads to be shown on a web page that is not necessarily a search results page. Here, the system of the present invention selects ads based on some set of keywords found within the content of the web page to be displayed, along with known context data about the user. Referring also toFIG. 12 , there is shown a flowchart illustrating a method for selecting advertisements to be placed on a web page, based on page content and user context, according to one embodiment. For illustrative purposes, the method is described herein with reference to the functional components depicted inFIG. 9 , although one skilled in the art will recognize that the method of the present invention can be implemented using other functional architectures as well. - As described above,
bidding system 423 receives 1201 bids frompotential advertisers 424 for ad placement. In one embodiment, bids specify an amount thepotential advertiser 424 is willing to pay for an advertisement targeted to a particular combination of page content (represented by keywords) and context(s). For example, apotential advertiser 424 may be willing to pay 1/10 of a cent for placement on a displayed web page where the user is identified as looking to purchase an item, and wherein the content of the web page includes the keyword “camcorder.” In one embodiment,bidding system 423 is made available topotential advertisers 424 via a web-based interface. Many variations are possible. For example,potential advertisers 424 might bid for placement, with payment expected upon user clickthrough, or user views, or both (for example, theadvertiser 424 might be charged a first amount upon display of the ad to the user, and a second amount if the user clicks on the ad). Also, in some cases,advertisers 424 may bid for keywords alone, or contexts alone, or any combination thereof. - Bids are stored, for example in a
database 422. Subsequently, a page request is received 1202, atcontent server 430, for or from a user. In one embodiment, such a page request can be an ordinary HTTP GET request, issued by aclient browser 402 when a user clicks on a link, selects a web page via a bookmark, or enters a URL. Using the techniques described above,context identifier 432 identifies 1203 one or more context(s) for the user (for purposes of clarity, in the following description it is assumed that only one context is identified). The context can be identified 1203 based on the content of the requested page, known historical information about the user, information retrieved from cookies, path taken to reach the requested page, and the like, or any combination thereof. According to one embodiment of the present invention, the context used for selecting ads to be displayed for the user, as follows. -
Ad selector 420 receives context identifiers and query terms fromcontext identifier 432.Content server 430 obtains 1204 web page content that was requested by theclient 402.Keyword identifier 431 scans the web content for relevant keywords. In one embodiment, relevant keywords are identified by virtue of their placement, repetition, and the like; keywords may be identified both within the body of the web page and within meta-tags associated with the web content.Keyword identifier 431 sends the relevant keywords toad selector 420. -
Ad selector 420 then selects ad(s) 1205 to be displayed, based on any combination of identified context (from context identifier 432), page content (in the form of keywords identified by keyword identifier 431), and bids 422 frompotential advertisers 424. In one embodiment, anybids 422 that have both a matching context and a matching keyword are given most favorable placement, with higher bids given precedence over lower bids. Bid amounts can determine ranking or sequence on the page, and/or font size, color, style, and the like. In another embodiment, bid amounts can determine which ads are displayed and which are not; for example, a limited number N of ad spaces may be available, so that only the ads having the top N bids are shown. In another embodiment, ads associated with matching contexts but no specified keyword, or associated with matching keywords but no specified context, can also be shown but might be given lower precedence than ads associated with matching keywords and contexts. -
Ad selector 420 sends selected ad(s) toad display module 421. In one embodiment the actual ad content is sent; in another embodiment ad identifiers (such as URLs) are sent.Content server 430 sends the web page toad display module 421. Oncead selector 420 has selected ad(s) 1205 to be displayed, and oncead display module 421 has received the web page fromcontent server 430,ad display module 421 formats the web page to include the selected ads. This involves generating HTML to indicate ad placement and display characteristics; for example, ads can be shown on the right-hand side of the screen, and can include links to web pages so that the user can easily access a source of additional information about the advertised service or product. The formatted web page, with the original web page content plus selected ads, is sent toclient 402 fordisplay 1206 to the user. - In one embodiment,
ad selector 420 resolves competing ads based on context and keywords. For example, if one potential advertiser specifies a matching keyword and context, and a second advertiser specifies only a matching keyword, the first advertiser is given more prominent placement (assuming both potential advertisers bid the same amount). If, however, one bid was higher than the other, the higher bid might be given more prominent placement. In one embodiment, a “Dutch auction” process is performed to resolve competing ads: a limited number of ad positions N are available, and the top N potential advertisers are selected (based on keyword, context, and/or bid amount). In one embodiment, potential advertisers are notified when they have been outbid, so that they have the opportunity to increase their bids and/or revise the parameters of the bid for the next opportunity for placement. - One skilled in the art will recognize that the above-described invention can also be implemented in connection with other online ad placement techniques as described in related applications that have been incorporated herein by reference. One skilled in the art will further recognize that the above description, in which the invention is set forth in terms of ad placement on web pages, is merely an example of one embodiment, and that the present invention can be implemented in other forms and in other media, including for example television, radio, and the like.” In any situation where a user's/viewer's/listener's context can be determined, the present invention is capable of improving ad targeting by taking such context (or user intent) into account when selecting ads.
- In addition, a page that displays ads (for example, those derived using Adsense technology from Google, Inc., of Mountain View, Calif.) can specify the context a visitor of that page is likely to be in so that the Adsense backend can target ads for that context. Thus, the present invention can be used in connection with existing technology for selecting and presenting advertisements.
- The present invention has been described in particular detail with respect to one possible embodiment. Those of skill in the art will appreciate that the invention may be practiced in other embodiments. First, the particular naming of the components, capitalization of terms, the attributes, data structures, or any other programming or structural aspect is not mandatory or significant, and the mechanisms that implement the invention or its features may have different names, formats, or protocols. Further, the system may be implemented via a combination of hardware and software, as described, or entirely in hardware elements. Also, the particular division of functionality between the various system components described herein is merely exemplary, and not mandatory; functions performed by a single system component may instead be performed by multiple components, and functions performed by multiple components may instead be performed by a single component.
- Some portions of above description present the features of the present invention in terms of algorithms and symbolic representations of operations on information. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. These operations, while described functionally or logically, are understood to be implemented by computer programs. Furthermore, it has also proven convenient at times, to refer to these arrangements of operations as modules or by functional names, without loss of generality.
- Unless specifically stated otherwise as apparent from the above discussion, it is appreciated that throughout the description, discussions utilizing terms such as “calculating” or “determining” or “identifying” or the like, refer to the action and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system memories or registers or other such information storage, transmission or display devices.
- Certain aspects of the present invention have been described using commands, mnemonics, tokens, formats, syntax, and other programming conventions. The particular selections of the names, formats, syntax, and like are merely illustrative, and not limiting. Those of skill in the art can readily construct alternative names, formats, syntax rules, and so forth for defining context files and programming the operations a programmable search engine via context processing.
- Certain aspects of the present invention include process steps and instructions described herein in the form of an algorithm. It should be noted that the process steps and instructions of the present invention could be embodied in software, firmware or hardware, and when embodied in software, could be downloaded to reside on and be operated from different platforms used by real time network operating systems.
- The present invention also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes, or it may comprise a general-purpose computer selectively activated or reconfigured by a computer program stored on a computer readable medium that can be accessed by the computer. Such a computer program may be stored in a computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, or any type of media suitable for storing electronic instructions, and each coupled to a computer system bus.
- The algorithms and operations presented herein are not inherently related to any particular computer or other apparatus. Various general-purpose systems may also be used with programs in accordance with the teachings herein, or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will be apparent to those of skill in the art, along with equivalent variations. In addition, the present invention is not described with reference to any particular programming language. It is appreciated that a variety of programming languages may be used to implement the teachings of the present invention as described herein, and any references to specific languages are provided for disclosure of enablement and best mode of the present invention.
- Finally, it should be noted that the language used in the specification has been principally selected for readability and instructional purposes, and may not have been selected to delineate or circumscribe the inventive subject matter. Accordingly, the disclosure of the present invention is intended to be illustrative, but not limiting, of the scope of the invention, which is set forth in the following claims.
Claims (25)
1. (canceled)
2. A method comprising:
receiving, at a search engine system, a query submitted by a user through a user interface provided by a third-party content provider;
identifying a query context associated with the third-party content provider;
accessing query processing instructions associated with the query context, the query processing instructions comprising instructions to the search engine system for processing queries;
generating search results for the query using the query processing instructions associated with the query context;
determining that the query context matches a bid context specified by a bid for placement of an advertisement, and that the query includes a query term specified by the bid;
in response to determining that the query context matches the bid context specified by the bid, and that the query includes a query term specified by the bid, selecting the advertisement associated with the bid for presentation with the search results; and
providing, in a response to the query, a search results page that includes the selected advertisement and one or more of the search results.
3. The method of claim 2 , wherein generating the search results using the query processing instructions associated with the query context comprises:
revising the query using the query processing instructions to generate a context-processed query; and
generating search results responsive to the context-processed query.
4. The method of claim 2 , wherein generating the search results using the query processing instructions associated with the query context comprises:
selecting one or more document collections to search based on the query processing instructions; and
generating the search results based on the selected one or more document collections.
5. The method of claim 2 , further comprising ranking the search results based in part on one or more ranking parameters specified by the query processing instructions;
wherein providing the search results page comprises providing the ranked search results.
6. The method of claim 5 , wherein ranking the search results based in part on one or more ranking parameters specified by the query processing instructions comprises ranking the search results based in part on one or more weights for adjusting scores associated with the search results, the one or more weights being specified by the query processing instructions.
7. The method of claim 2 , further comprising accessing bid data indicating multiple bids for placement of advertisements, each of the multiple bids specifying a bid amount, a query term, and a bid amount that that an advertiser is willing to pay for placement of an advertisement when the specified query term occurs in the specified bid context;
wherein determining that the query context matches the bid context specified by the bid, and that the query submitted by the user includes a query term specified by the bid, selecting the advertisement associated with the bid comprises determining, based on the bid data, that for a particular bid of the multiple bids, the specified bid context matches the query context indicated by the context identifier and the query submitted by the user includes the specified query term.
8. The method of claim 2 , wherein selecting the advertisement associated with the bid comprises selecting a first advertisement;
further comprising:
selecting a second advertisement;
ranking the first advertisement and second advertisement based on the query context and the query;
wherein providing the search results page comprises providing a search results page that presents the first advertisement and the second advertisement according to the ranking.
9. The method of claim 2 , wherein identifying the query context associated with the third-party content provider comprises receiving a context identifier associated with the third-party content provider.
10. A system comprising:
one or more computers and one or more storage devices storing instructions that are operable, when executed by the one or more computers, to cause the one or more computers to perform operations comprising:
receiving, at a search engine system, a query submitted by a user through a user interface provided by a third-party content provider;
identifying a query context associated with the third-party content provider;
accessing query processing instructions associated with the query context, the query processing instructions comprising instructions to the search engine system for processing queries;
generating search results for the query using the query processing instructions associated with the query context;
determining that the query context matches a bid context specified by a bid for placement of an advertisement, and that the query includes a query term specified by the bid;
in response to determining that the query context matches the bid context specified by the bid, and that the query includes a query term specified by the bid, selecting the advertisement associated with the bid for presentation with the search results; and
providing, in a response to the query, a search results page that includes the selected advertisement and one or more of the search results.
11. The system of claim 10 , wherein generating the search results using the query processing instructions associated with the query context comprises:
revising the query using the query processing instructions to generate a context-processed query; and
generating search results responsive to the context-processed query.
12. The system of claim 10 , wherein generating the search results using the query processing instructions associated with the query context comprises:
selecting one or more document collections to search based on the query processing instructions; and
generating the search results based on the selected one or more document collections.
13. The system of claim 10 , wherein the operations further comprise ranking the search results based in part on one or more ranking parameters specified by the query processing instructions;
wherein providing the search results page comprises providing the ranked search results.
14. The system of claim 13 , wherein ranking the search results based in part on one or more ranking parameters specified by the query processing instructions comprises ranking the search results based in part on one or more weights for adjusting scores associated with the search results, the one or more weights being specified by the query processing instructions.
15. The system of claim 10 , wherein the operations further comprise accessing bid data indicating multiple bids for placement of advertisements, each of the multiple bids specifying a bid amount, a query term, and a bid amount that that an advertiser is willing to pay for placement of an advertisement when the specified query term occurs in the specified bid context;
wherein determining that the query context matches the bid context specified by the bid, and that the query submitted by the user includes a query term specified by the bid, selecting the advertisement associated with the bid comprises determining, based on the bid data, that for a particular bid of the multiple bids, the specified bid context matches the query context indicated by the context identifier and the query submitted by the user includes the specified query term.
16. The system of claim 10 , wherein selecting the advertisement associated with the bid comprises selecting a first advertisement;
further comprising:
selecting a second advertisement;
ranking the first advertisement and second advertisement based on the query context and the query;
wherein providing the search results page comprises providing a search results page that presents the first advertisement and the second advertisement according to the ranking.
17. The system of claim 10 , wherein identifying the query context associated with the third-party content provider comprises receiving a context identifier associated with the third-party content provider.
18. A computer storage medium storing a computer program, the program comprising instructions that when executed by one or more computers cause the one or more computers to perform operations comprising:
receiving, at a search engine system, a query submitted by a user through a user interface provided by a third-party content provider;
identifying a query context associated with the third-party content provider;
accessing query processing instructions associated with the query context, the query processing instructions comprising instructions to the search engine system for processing queries;
generating search results for the query using the query processing instructions associated with the query context;
determining that the query context matches a bid context specified by a bid for placement of an advertisement, and that the query includes a query term specified by the bid;
in response to determining that the query context matches the bid context specified by the bid, and that the query includes a query term specified by the bid, selecting the advertisement associated with the bid for presentation with the search results; and
providing, in a response to the query, a search results page that includes the selected advertisement and one or more of the search results.
19. The computer storage medium of claim 18 , wherein generating the search results using the query processing instructions associated with the query context comprises:
revising the query using the query processing instructions to generate a context-processed query; and
generating search results responsive to the context-processed query.
20. The computer storage medium of claim 18 , wherein generating the search results using the query processing instructions associated with the query context comprises:
selecting one or more document collections to search based on the query processing instructions; and
generating the search results based on the selected one or more document collections.
21. The computer storage medium of claim 18 , wherein the operations further comprise ranking the search results based in part on one or more ranking parameters specified by the query processing instructions;
wherein providing the search results page comprises providing the ranked search results.
22. The computer storage medium of claim 21 , wherein ranking the search results based in part on one or more ranking parameters specified by the query processing instructions comprises ranking the search results based in part on one or more weights for adjusting scores associated with the search results, the one or more weights being specified by the query processing instructions.
23. The computer storage medium of claim 18 , wherein the operations further comprise accessing bid data indicating multiple bids for placement of advertisements, each of the multiple bids specifying a bid amount, a query term, and a bid amount that that an advertiser is willing to pay for placement of an advertisement when the specified query term occurs in the specified bid context;
wherein determining that the query context matches the bid context specified by the bid, and that the query submitted by the user includes a query term specified by the bid, selecting the advertisement associated with the bid comprises determining, based on the bid data, that for a particular bid of the multiple bids, the specified bid context matches the query context indicated by the context identifier and the query submitted by the user includes the specified query term.
24. The computer storage medium of claim 18 , wherein selecting the advertisement associated with the bid comprises selecting a first advertisement;
further comprising:
selecting a second advertisement;
ranking the first advertisement and second advertisement based on the query context and the query;
wherein providing the search results page comprises providing a search results page that presents the first advertisement and the second advertisement according to the ranking.
25. The computer storage medium of claim 18 , wherein identifying the query context associated with the third-party content provider comprises receiving a context identifier associated with the third-party content provider.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/614,452 US20130110627A1 (en) | 2005-08-10 | 2012-09-13 | Generating and Presenting Advertisements Based on Context Data for Programmable Search Engines |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/201,754 US20070038614A1 (en) | 2005-08-10 | 2005-08-10 | Generating and presenting advertisements based on context data for programmable search engines |
US13/614,452 US20130110627A1 (en) | 2005-08-10 | 2012-09-13 | Generating and Presenting Advertisements Based on Context Data for Programmable Search Engines |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/201,754 Continuation US20070038614A1 (en) | 2002-03-29 | 2005-08-10 | Generating and presenting advertisements based on context data for programmable search engines |
Publications (1)
Publication Number | Publication Date |
---|---|
US20130110627A1 true US20130110627A1 (en) | 2013-05-02 |
Family
ID=37743756
Family Applications (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/201,754 Abandoned US20070038614A1 (en) | 2002-03-29 | 2005-08-10 | Generating and presenting advertisements based on context data for programmable search engines |
US13/614,452 Abandoned US20130110627A1 (en) | 2005-08-10 | 2012-09-13 | Generating and Presenting Advertisements Based on Context Data for Programmable Search Engines |
US15/186,908 Abandoned US20160299983A1 (en) | 2002-03-29 | 2016-06-20 | Programmable search engines |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/201,754 Abandoned US20070038614A1 (en) | 2002-03-29 | 2005-08-10 | Generating and presenting advertisements based on context data for programmable search engines |
Family Applications After (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/186,908 Abandoned US20160299983A1 (en) | 2002-03-29 | 2016-06-20 | Programmable search engines |
Country Status (4)
Country | Link |
---|---|
US (3) | US20070038614A1 (en) |
EP (1) | EP1938217A4 (en) |
CA (1) | CA2618567C (en) |
WO (1) | WO2007021720A2 (en) |
Cited By (16)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20110072033A1 (en) * | 2009-09-21 | 2011-03-24 | Microsoft Corporation | Suggesting related search queries during web browsing |
US20110313843A1 (en) * | 2010-06-17 | 2011-12-22 | Microsoft Corporation | Search advertisement targeting |
US20120239488A1 (en) * | 2011-03-17 | 2012-09-20 | DataPop, Inc. | Taxonomy based targeted search advertising |
US20130132364A1 (en) * | 2011-11-21 | 2013-05-23 | Microsoft Corporation | Context dependent keyword suggestion for advertising |
US8756210B1 (en) | 2005-08-10 | 2014-06-17 | Google Inc. | Aggregating context data for programmable search engines |
US20140279137A1 (en) * | 2013-03-15 | 2014-09-18 | Ebay Inc. | Methods, systems, and apparatus for dynamic bid resolution |
US9031937B2 (en) | 2005-08-10 | 2015-05-12 | Google Inc. | Programmable search engine |
US9501499B2 (en) | 2013-10-21 | 2016-11-22 | Google Inc. | Methods and systems for creating image-based content based on text-based content |
US9521189B2 (en) | 2013-08-21 | 2016-12-13 | Google Inc. | Providing contextual data for selected link units |
CN106651329A (en) * | 2016-10-01 | 2017-05-10 | 深圳市分享投融网络有限公司 | Method and device for mining individual paid knowledge based on mobile Internet for sharing |
US9972030B2 (en) | 2013-03-11 | 2018-05-15 | Criteo S.A. | Systems and methods for the semantic modeling of advertising creatives in targeted search advertising campaigns |
US10192238B2 (en) * | 2012-12-21 | 2019-01-29 | Walmart Apollo, Llc | Real-time bidding and advertising content generation |
US10832306B2 (en) * | 2016-09-15 | 2020-11-10 | International Business Machines Corporation | User actions in a physical space directing presentation of customized virtual environment |
US11144950B2 (en) | 2016-01-12 | 2021-10-12 | Tencent Technology (Shenzhen) Company Limited | Information delivery method and apparatus, server, and storage medium |
WO2022049522A1 (en) | 2020-09-02 | 2022-03-10 | Dexameron Limited (Dexameron Ltd) | System and method for matching and collecting user data and/or user device data |
US11487757B2 (en) * | 2014-10-14 | 2022-11-01 | Google Llc | Assistive browsing using context |
Families Citing this family (155)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7716207B2 (en) * | 2002-02-26 | 2010-05-11 | Odom Paul S | Search engine methods and systems for displaying relevant topics |
US7743045B2 (en) * | 2005-08-10 | 2010-06-22 | Google Inc. | Detecting spam related and biased contexts for programmable search engines |
JP2006260522A (en) * | 2005-02-21 | 2006-09-28 | Ricoh Co Ltd | Information processing device, information management device, information management system, information processing method, information management method, information processing program, information management program, and recording medium |
US9110985B2 (en) * | 2005-05-10 | 2015-08-18 | Neetseer, Inc. | Generating a conceptual association graph from large-scale loosely-grouped content |
US7747619B2 (en) * | 2005-11-30 | 2010-06-29 | Anchorfree, Inc. | Computerized system and method for advanced advertising |
US7647305B2 (en) * | 2005-11-30 | 2010-01-12 | Anchorfree, Inc. | Method and apparatus for implementing search engine with cost per action revenue model |
AU2006294868B2 (en) * | 2005-09-26 | 2011-03-03 | Coupons, Inc. | System and method for augmenting content in electronic documents with links to contextually relevant information |
US10621988B2 (en) | 2005-10-26 | 2020-04-14 | Cortica Ltd | System and method for speech to text translation using cores of a natural liquid architecture system |
US10614626B2 (en) | 2005-10-26 | 2020-04-07 | Cortica Ltd. | System and method for providing augmented reality challenges |
US9384196B2 (en) | 2005-10-26 | 2016-07-05 | Cortica, Ltd. | Signature generation for multimedia deep-content-classification by a large-scale matching system and method thereof |
US8312031B2 (en) | 2005-10-26 | 2012-11-13 | Cortica Ltd. | System and method for generation of complex signatures for multimedia data content |
US8818916B2 (en) | 2005-10-26 | 2014-08-26 | Cortica, Ltd. | System and method for linking multimedia data elements to web pages |
US10193990B2 (en) | 2005-10-26 | 2019-01-29 | Cortica Ltd. | System and method for creating user profiles based on multimedia content |
US20160321253A1 (en) | 2005-10-26 | 2016-11-03 | Cortica, Ltd. | System and method for providing recommendations based on user profiles |
US11361014B2 (en) | 2005-10-26 | 2022-06-14 | Cortica Ltd. | System and method for completing a user profile |
US9953032B2 (en) | 2005-10-26 | 2018-04-24 | Cortica, Ltd. | System and method for characterization of multimedia content signals using cores of a natural liquid architecture system |
US9767143B2 (en) | 2005-10-26 | 2017-09-19 | Cortica, Ltd. | System and method for caching of concept structures |
US10372746B2 (en) | 2005-10-26 | 2019-08-06 | Cortica, Ltd. | System and method for searching applications using multimedia content elements |
US10776585B2 (en) | 2005-10-26 | 2020-09-15 | Cortica, Ltd. | System and method for recognizing characters in multimedia content |
US11032017B2 (en) | 2005-10-26 | 2021-06-08 | Cortica, Ltd. | System and method for identifying the context of multimedia content elements |
US10387914B2 (en) | 2005-10-26 | 2019-08-20 | Cortica, Ltd. | Method for identification of multimedia content elements and adding advertising content respective thereof |
US10191976B2 (en) | 2005-10-26 | 2019-01-29 | Cortica, Ltd. | System and method of detecting common patterns within unstructured data elements retrieved from big data sources |
US10848590B2 (en) | 2005-10-26 | 2020-11-24 | Cortica Ltd | System and method for determining a contextual insight and providing recommendations based thereon |
US11003706B2 (en) | 2005-10-26 | 2021-05-11 | Cortica Ltd | System and methods for determining access permissions on personalized clusters of multimedia content elements |
US11386139B2 (en) | 2005-10-26 | 2022-07-12 | Cortica Ltd. | System and method for generating analytics for entities depicted in multimedia content |
US11620327B2 (en) | 2005-10-26 | 2023-04-04 | Cortica Ltd | System and method for determining a contextual insight and generating an interface with recommendations based thereon |
US10607355B2 (en) | 2005-10-26 | 2020-03-31 | Cortica, Ltd. | Method and system for determining the dimensions of an object shown in a multimedia content item |
US10380164B2 (en) | 2005-10-26 | 2019-08-13 | Cortica, Ltd. | System and method for using on-image gestures and multimedia content elements as search queries |
US9218606B2 (en) | 2005-10-26 | 2015-12-22 | Cortica, Ltd. | System and method for brand monitoring and trend analysis based on deep-content-classification |
US11604847B2 (en) | 2005-10-26 | 2023-03-14 | Cortica Ltd. | System and method for overlaying content on a multimedia content element based on user interest |
US11403336B2 (en) | 2005-10-26 | 2022-08-02 | Cortica Ltd. | System and method for removing contextually identical multimedia content elements |
US10585934B2 (en) | 2005-10-26 | 2020-03-10 | Cortica Ltd. | Method and system for populating a concept database with respect to user identifiers |
US10380267B2 (en) | 2005-10-26 | 2019-08-13 | Cortica, Ltd. | System and method for tagging multimedia content elements |
US9646005B2 (en) | 2005-10-26 | 2017-05-09 | Cortica, Ltd. | System and method for creating a database of multimedia content elements assigned to users |
US10742340B2 (en) | 2005-10-26 | 2020-08-11 | Cortica Ltd. | System and method for identifying the context of multimedia content elements displayed in a web-page and providing contextual filters respective thereto |
US10691642B2 (en) | 2005-10-26 | 2020-06-23 | Cortica Ltd | System and method for enriching a concept database with homogenous concepts |
US11019161B2 (en) | 2005-10-26 | 2021-05-25 | Cortica, Ltd. | System and method for profiling users interest based on multimedia content analysis |
US9372940B2 (en) | 2005-10-26 | 2016-06-21 | Cortica, Ltd. | Apparatus and method for determining user attention using a deep-content-classification (DCC) system |
US11216498B2 (en) | 2005-10-26 | 2022-01-04 | Cortica, Ltd. | System and method for generating signatures to three-dimensional multimedia data elements |
US8326775B2 (en) | 2005-10-26 | 2012-12-04 | Cortica Ltd. | Signature generation for multimedia deep-content-classification by a large-scale matching system and method thereof |
US10180942B2 (en) | 2005-10-26 | 2019-01-15 | Cortica Ltd. | System and method for generation of concept structures based on sub-concepts |
US10535192B2 (en) | 2005-10-26 | 2020-01-14 | Cortica Ltd. | System and method for generating a customized augmented reality environment to a user |
US10360253B2 (en) | 2005-10-26 | 2019-07-23 | Cortica, Ltd. | Systems and methods for generation of searchable structures respective of multimedia data content |
US10949773B2 (en) | 2005-10-26 | 2021-03-16 | Cortica, Ltd. | System and methods thereof for recommending tags for multimedia content elements based on context |
US9477658B2 (en) | 2005-10-26 | 2016-10-25 | Cortica, Ltd. | Systems and method for speech to speech translation using cores of a natural liquid architecture system |
US10635640B2 (en) | 2005-10-26 | 2020-04-28 | Cortica, Ltd. | System and method for enriching a concept database |
US10380623B2 (en) * | 2005-10-26 | 2019-08-13 | Cortica, Ltd. | System and method for generating an advertisement effectiveness performance score |
US20090030801A1 (en) * | 2005-11-07 | 2009-01-29 | Anthony Meggs | Permissive search intent registry |
US7822699B2 (en) * | 2005-11-30 | 2010-10-26 | Microsoft Corporation | Adaptive semantic reasoning engine |
US9165039B2 (en) * | 2005-11-29 | 2015-10-20 | Kang Jo Mgmt, Limited Liability Company | Methods and systems for providing personalized contextual search results |
US20070130134A1 (en) * | 2005-12-05 | 2007-06-07 | Microsoft Corporation | Natural-language enabling arbitrary web forms |
US7933914B2 (en) * | 2005-12-05 | 2011-04-26 | Microsoft Corporation | Automatic task creation and execution using browser helper objects |
US7831585B2 (en) * | 2005-12-05 | 2010-11-09 | Microsoft Corporation | Employment of task framework for advertising |
US8032424B1 (en) * | 2005-12-27 | 2011-10-04 | United Services Automobile Association | Method, system, and storage medium for viewing commodity information |
US8825657B2 (en) | 2006-01-19 | 2014-09-02 | Netseer, Inc. | Systems and methods for creating, navigating, and searching informational web neighborhoods |
US7584179B2 (en) * | 2006-01-27 | 2009-09-01 | William Derek Finley | Method of document searching |
US8352183B2 (en) * | 2006-02-04 | 2013-01-08 | Microsoft Corporation | Maps for social networking and geo blogs |
KR100688245B1 (en) * | 2006-02-22 | 2007-03-02 | 엔에이치엔(주) | Method and system for generating list using dynamic adjustment of advertising-domain |
US7996783B2 (en) * | 2006-03-02 | 2011-08-09 | Microsoft Corporation | Widget searching utilizing task framework |
US8832097B2 (en) * | 2006-03-06 | 2014-09-09 | Yahoo! Inc. | Vertical search expansion, disambiguation, and optimization of search queries |
US7805441B2 (en) * | 2006-03-06 | 2010-09-28 | Yahoo! Inc. | Vertical search expansion, disambiguation, and optimization of search queries |
KR100792698B1 (en) * | 2006-03-14 | 2008-01-08 | 엔에이치엔(주) | Method and system for matching advertisement using seed |
US7634471B2 (en) * | 2006-03-30 | 2009-12-15 | Microsoft Corporation | Adaptive grouping in a file network |
US7624130B2 (en) * | 2006-03-30 | 2009-11-24 | Microsoft Corporation | System and method for exploring a semantic file network |
US7548909B2 (en) * | 2006-06-13 | 2009-06-16 | Microsoft Corporation | Search engine dash-board |
US20080016061A1 (en) * | 2006-07-14 | 2008-01-17 | Bea Systems, Inc. | Using a Core Data Structure to Calculate Document Ranks |
US20080016053A1 (en) * | 2006-07-14 | 2008-01-17 | Bea Systems, Inc. | Administration Console to Select Rank Factors |
US20080016071A1 (en) * | 2006-07-14 | 2008-01-17 | Bea Systems, Inc. | Using Connections Between Users, Tags and Documents to Rank Documents in an Enterprise Search System |
US20080016072A1 (en) * | 2006-07-14 | 2008-01-17 | Bea Systems, Inc. | Enterprise-Based Tag System |
US20080016052A1 (en) * | 2006-07-14 | 2008-01-17 | Bea Systems, Inc. | Using Connections Between Users and Documents to Rank Documents in an Enterprise Search System |
US7873641B2 (en) * | 2006-07-14 | 2011-01-18 | Bea Systems, Inc. | Using tags in an enterprise search system |
US9268873B2 (en) * | 2006-08-04 | 2016-02-23 | Yahoo! Inc. | Landing page identification, tagging and host matching for a mobile application |
WO2008021906A2 (en) * | 2006-08-08 | 2008-02-21 | Google Inc. | Interest targeting |
US8312036B2 (en) * | 2006-09-29 | 2012-11-13 | Apple Inc. | Recommended systems |
US7979462B2 (en) * | 2006-09-29 | 2011-07-12 | Apple Inc. | Head-to-head comparisons |
US20080104042A1 (en) * | 2006-10-25 | 2008-05-01 | Microsoft Corporation | Personalized Search Using Macros |
US10733326B2 (en) | 2006-10-26 | 2020-08-04 | Cortica Ltd. | System and method for identification of inappropriate multimedia content |
US9817902B2 (en) * | 2006-10-27 | 2017-11-14 | Netseer Acquisition, Inc. | Methods and apparatus for matching relevant content to user intention |
US20080114607A1 (en) * | 2006-11-09 | 2008-05-15 | Sihem Amer-Yahia | System for generating advertisements based on search intent |
US20080114672A1 (en) * | 2006-11-09 | 2008-05-15 | Sihem Amer Yahia | Method and system for bidding on advertisements |
US20080147608A1 (en) * | 2006-12-14 | 2008-06-19 | Yahoo! Inc. | Video search and indexing systems and methods |
US20080147710A1 (en) * | 2006-12-19 | 2008-06-19 | Microsoft Corporation | Generating web pages utilizing user-defined search parameters |
US7756867B2 (en) * | 2007-02-16 | 2010-07-13 | Yahoo! Inc. | Ranking documents |
US7930286B2 (en) * | 2007-02-16 | 2011-04-19 | Yahoo! Inc. | Federated searches implemented across multiple search engines |
US20080228903A1 (en) * | 2007-03-16 | 2008-09-18 | Yahoo! Inc. | System and method of serving advertisements for web applications |
US9396261B2 (en) | 2007-04-25 | 2016-07-19 | Yahoo! Inc. | System for serving data that matches content related to a search results page |
US20080294619A1 (en) * | 2007-05-23 | 2008-11-27 | Hamilton Ii Rick Allen | System and method for automatic generation of search suggestions based on recent operator behavior |
US20090055267A1 (en) * | 2007-08-23 | 2009-02-26 | Robert Roker | Internet advertising brokerage apparatus, systems, and methods |
US9058608B2 (en) * | 2007-09-12 | 2015-06-16 | Google Inc. | Placement attribute targeting |
WO2009039519A1 (en) * | 2007-09-21 | 2009-03-26 | Louis Dorman | Internet background advertising service |
US9224149B2 (en) * | 2007-10-15 | 2015-12-29 | Google Inc. | External referencing by portable program modules |
EP2223271A4 (en) * | 2007-12-17 | 2012-08-15 | Google Inc | Online advertisement exposure tracking system |
US9117219B2 (en) * | 2007-12-31 | 2015-08-25 | Peer 39 Inc. | Method and a system for selecting advertising spots |
US7801876B1 (en) | 2008-01-11 | 2010-09-21 | Google Inc. | Systems and methods for customizing behavior of multiple search engines |
US8543924B2 (en) * | 2008-03-06 | 2013-09-24 | Microsoft Corporation | Contextual-display advertisement |
US20090241071A1 (en) * | 2008-03-24 | 2009-09-24 | Lisa Anne Seacat | Served ads as previews and summaries |
US10387892B2 (en) | 2008-05-06 | 2019-08-20 | Netseer, Inc. | Discovering relevant concept and context for content node |
US8024313B2 (en) * | 2008-05-09 | 2011-09-20 | Protecode Incorporated | System and method for enhanced direction of automated content identification in a distributed environment |
US20090300009A1 (en) * | 2008-05-30 | 2009-12-03 | Netseer, Inc. | Behavioral Targeting For Tracking, Aggregating, And Predicting Online Behavior |
US20090313550A1 (en) * | 2008-06-17 | 2009-12-17 | Microsoft Corporation | Theme Based Content Interaction |
US20100011020A1 (en) * | 2008-07-11 | 2010-01-14 | Motorola, Inc. | Recommender system |
US20100125523A1 (en) | 2008-11-18 | 2010-05-20 | Peer 39 Inc. | Method and a system for certifying a document for advertisement appropriateness |
US8352321B2 (en) * | 2008-12-12 | 2013-01-08 | Microsoft Corporation | In-text embedded advertising |
US8639688B2 (en) * | 2009-11-12 | 2014-01-28 | Palo Alto Research Center Incorporated | Method and apparatus for performing context-based entity association |
US20110218862A1 (en) * | 2009-11-13 | 2011-09-08 | Dreamwell, Ltd. | Manufacturer-linked landing page for online advertising |
US20110238491A1 (en) * | 2010-03-26 | 2011-09-29 | Microsoft Corporation | Suggesting keyword expansions for advertisement selection |
WO2012021820A2 (en) * | 2010-08-13 | 2012-02-16 | Ii James Duncan Mcrae | System and method for utilizing media content to initiate conversations between businesses and consumers |
US9098569B1 (en) * | 2010-12-10 | 2015-08-04 | Amazon Technologies, Inc. | Generating suggested search queries |
US20120150657A1 (en) * | 2010-12-14 | 2012-06-14 | Microsoft Corporation | Enabling Advertisers to Bid on Abstract Objects |
US8370319B1 (en) | 2011-03-08 | 2013-02-05 | A9.Com, Inc. | Determining search query specificity |
US20130007041A1 (en) * | 2011-06-29 | 2013-01-03 | The C-Factor Incorporated | Method and apparatus for determining targeted content to deliver in a collaborative social mobile platform |
US20130013650A1 (en) * | 2011-07-08 | 2013-01-10 | Annie Shum | Visual and context-oriented curation platform |
EP2573726A1 (en) * | 2011-09-21 | 2013-03-27 | Koninklijke KPN N.V. | Method and system for providing a cross-context optimal experience |
US10387503B2 (en) * | 2011-12-15 | 2019-08-20 | Excalibur Ip, Llc | Systems and methods involving features of search and/or search integration |
DE102012201451A1 (en) * | 2012-02-01 | 2013-08-01 | Siemens Aktiengesellschaft | Method for identifying measuring signals and devices for insertion into a specific project planning document for a control system of a technical system, process control system and computer program product to be configured |
US10311085B2 (en) | 2012-08-31 | 2019-06-04 | Netseer, Inc. | Concept-level user intent profile extraction and applications |
US8930301B2 (en) * | 2013-05-31 | 2015-01-06 | Linkedin Corporation | Systems and methods for content response prediction |
US20150199431A1 (en) * | 2014-01-16 | 2015-07-16 | CrowdCare Corporation | System and Method of Search for Improving Relevance Based on Device Parameters |
CN103942279B (en) * | 2014-04-01 | 2018-07-10 | 百度(中国)有限公司 | Search result shows method and apparatus |
JP5686934B1 (en) * | 2014-06-23 | 2015-03-18 | 楽天株式会社 | Information processing apparatus, information processing method, program, and storage medium |
RU2015111360A (en) | 2015-03-30 | 2016-10-20 | Общество С Ограниченной Ответственностью "Яндекс" | Method (options) and system (options) for processing a search query |
US11803918B2 (en) | 2015-07-07 | 2023-10-31 | Oracle International Corporation | System and method for identifying experts on arbitrary topics in an enterprise social network |
US10536449B2 (en) * | 2015-09-15 | 2020-01-14 | Mimecast Services Ltd. | User login credential warning system |
US11595417B2 (en) | 2015-09-15 | 2023-02-28 | Mimecast Services Ltd. | Systems and methods for mediating access to resources |
US10248967B2 (en) * | 2015-09-25 | 2019-04-02 | Microsoft Technology Licensing, Llc | Compressing an original query while preserving its intent |
US11195043B2 (en) | 2015-12-15 | 2021-12-07 | Cortica, Ltd. | System and method for determining common patterns in multimedia content elements based on key points |
US11037015B2 (en) | 2015-12-15 | 2021-06-15 | Cortica Ltd. | Identification of key points in multimedia data elements |
US11276393B2 (en) | 2017-05-09 | 2022-03-15 | Microsoft Technology Licensing, Llc | Chat bot registration with search results integration |
WO2019008581A1 (en) | 2017-07-05 | 2019-01-10 | Cortica Ltd. | Driving policies determination |
US11899707B2 (en) | 2017-07-09 | 2024-02-13 | Cortica Ltd. | Driving policies determination |
RU2666336C1 (en) | 2017-08-01 | 2018-09-06 | Общество С Ограниченной Ответственностью "Яндекс" | Method and system for recommendation of media-objects |
US10482504B2 (en) * | 2017-08-24 | 2019-11-19 | William McMichael | Systems and methods for analyzing input data and presenting information |
US10846544B2 (en) | 2018-07-16 | 2020-11-24 | Cartica Ai Ltd. | Transportation prediction system and method |
US11181911B2 (en) | 2018-10-18 | 2021-11-23 | Cartica Ai Ltd | Control transfer of a vehicle |
US20200133308A1 (en) | 2018-10-18 | 2020-04-30 | Cartica Ai Ltd | Vehicle to vehicle (v2v) communication less truck platooning |
US10839694B2 (en) | 2018-10-18 | 2020-11-17 | Cartica Ai Ltd | Blind spot alert |
US11126870B2 (en) | 2018-10-18 | 2021-09-21 | Cartica Ai Ltd. | Method and system for obstacle detection |
US10748038B1 (en) | 2019-03-31 | 2020-08-18 | Cortica Ltd. | Efficient calculation of a robust signature of a media unit |
US11270132B2 (en) | 2018-10-26 | 2022-03-08 | Cartica Ai Ltd | Vehicle to vehicle communication and signatures |
US10789535B2 (en) | 2018-11-26 | 2020-09-29 | Cartica Ai Ltd | Detection of road elements |
US11643005B2 (en) | 2019-02-27 | 2023-05-09 | Autobrains Technologies Ltd | Adjusting adjustable headlights of a vehicle |
US11285963B2 (en) | 2019-03-10 | 2022-03-29 | Cartica Ai Ltd. | Driver-based prediction of dangerous events |
US11694088B2 (en) | 2019-03-13 | 2023-07-04 | Cortica Ltd. | Method for object detection using knowledge distillation |
US11132548B2 (en) | 2019-03-20 | 2021-09-28 | Cortica Ltd. | Determining object information that does not explicitly appear in a media unit signature |
US11222069B2 (en) | 2019-03-31 | 2022-01-11 | Cortica Ltd. | Low-power calculation of a signature of a media unit |
US10776669B1 (en) | 2019-03-31 | 2020-09-15 | Cortica Ltd. | Signature generation and object detection that refer to rare scenes |
US10796444B1 (en) | 2019-03-31 | 2020-10-06 | Cortica Ltd | Configuring spanning elements of a signature generator |
US10789527B1 (en) | 2019-03-31 | 2020-09-29 | Cortica Ltd. | Method for object detection using shallow neural networks |
US10748022B1 (en) | 2019-12-12 | 2020-08-18 | Cartica Ai Ltd | Crowd separation |
US11593662B2 (en) | 2019-12-12 | 2023-02-28 | Autobrains Technologies Ltd | Unsupervised cluster generation |
US11455655B2 (en) | 2019-12-20 | 2022-09-27 | Walmart Apollo, Llc | Methods and apparatus for electronically providing item recommendations for advertisement |
US11341528B2 (en) | 2019-12-30 | 2022-05-24 | Walmart Apollo, Llc | Methods and apparatus for electronically determining item advertisement recommendations |
US11590988B2 (en) | 2020-03-19 | 2023-02-28 | Autobrains Technologies Ltd | Predictive turning assistant |
US11827215B2 (en) | 2020-03-31 | 2023-11-28 | AutoBrains Technologies Ltd. | Method for training a driving related object detector |
US11756424B2 (en) | 2020-07-24 | 2023-09-12 | AutoBrains Technologies Ltd. | Parking assist |
Citations (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6266649B1 (en) * | 1998-09-18 | 2001-07-24 | Amazon.Com, Inc. | Collaborative recommendations using item-to-item similarity mappings |
US20020087525A1 (en) * | 2000-04-02 | 2002-07-04 | Abbott Kenneth H. | Soliciting information based on a computer user's context |
US20050021387A1 (en) * | 1999-11-15 | 2005-01-27 | Gottfurcht Elliot A. | Method to generate advertising revenue based on time and location |
US20050240580A1 (en) * | 2003-09-30 | 2005-10-27 | Zamir Oren E | Personalization of placed content ordering in search results |
US20060064411A1 (en) * | 2004-09-22 | 2006-03-23 | William Gross | Search engine using user intent |
US20060095336A1 (en) * | 2004-10-29 | 2006-05-04 | Microsoft Corporation | Systems and methods for determining bid value for content items to be placed on a rendered page |
US20060167857A1 (en) * | 2004-07-29 | 2006-07-27 | Yahoo! Inc. | Systems and methods for contextual transaction proposals |
US20060242017A1 (en) * | 2005-03-09 | 2006-10-26 | Medio Systems, Inc. | Method and system of bidding for advertisement placement on computing devices |
US20060242007A1 (en) * | 2005-04-20 | 2006-10-26 | Leong Kian F | Systems and methods for advertising payments |
Family Cites Families (105)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JPS6140672A (en) * | 1984-07-31 | 1986-02-26 | Hitachi Ltd | Processing system for dissolution of many parts of speech |
US5317507A (en) * | 1990-11-07 | 1994-05-31 | Gallant Stephen I | Method for document retrieval and for word sense disambiguation using neural networks |
US5887133A (en) * | 1997-01-15 | 1999-03-23 | Health Hero Network | System and method for modifying documents sent over a communications network |
US5331556A (en) * | 1993-06-28 | 1994-07-19 | General Electric Company | Method for natural language data processing using morphological and part-of-speech information |
US5659766A (en) * | 1994-09-16 | 1997-08-19 | Xerox Corporation | Method and apparatus for inferring the topical content of a document based upon its lexical content without supervision |
US5724521A (en) * | 1994-11-03 | 1998-03-03 | Intel Corporation | Method and apparatus for providing electronic advertisements to end users in a consumer best-fit pricing manner |
US5752238A (en) * | 1994-11-03 | 1998-05-12 | Intel Corporation | Consumer-driven electronic information pricing mechanism |
US5758257A (en) * | 1994-11-29 | 1998-05-26 | Herz; Frederick | System and method for scheduling broadcast of and access to video programs and other data using customer profiles |
US5794210A (en) * | 1995-12-11 | 1998-08-11 | Cybergold, Inc. | Attention brokerage |
US5809242A (en) * | 1996-04-19 | 1998-09-15 | Juno Online Services, L.P. | Electronic mail system for displaying advertisement at local computer received from remote system while the local computer is off-line the remote system |
US5878429A (en) * | 1996-07-18 | 1999-03-02 | Ipivot, Inc. | System and method of governing delivery of files from object databases |
US5933811A (en) * | 1996-08-20 | 1999-08-03 | Paul D. Angles | System and method for delivering customized advertisements within interactive communication systems |
US5948061A (en) * | 1996-10-29 | 1999-09-07 | Double Click, Inc. | Method of delivery, targeting, and measuring advertising over networks |
US6243375B1 (en) * | 1996-11-08 | 2001-06-05 | Gregory J. Speicher | Internet-audiotext electronic communications system with multimedia based matching |
US6285999B1 (en) * | 1997-01-10 | 2001-09-04 | The Board Of Trustees Of The Leland Stanford Junior University | Method for node ranking in a linked database |
US6285987B1 (en) * | 1997-01-22 | 2001-09-04 | Engage, Inc. | Internet advertising system |
US6366956B1 (en) * | 1997-01-29 | 2002-04-02 | Microsoft Corporation | Relevance access of Internet information services |
US6892354B1 (en) * | 1997-04-16 | 2005-05-10 | Sony Corporation | Method of advertising on line during a communication link idle time |
US6772200B1 (en) * | 1997-05-15 | 2004-08-03 | Intel Corporation | System for providing non-intrusive dynamic content to a client device |
US6253189B1 (en) * | 1997-09-15 | 2001-06-26 | At&T Corp. | System and method for completing advertising time slot transactions |
US20010014868A1 (en) * | 1997-12-05 | 2001-08-16 | Frederick Herz | System for the automatic determination of customized prices and promotions |
US6421675B1 (en) * | 1998-03-16 | 2002-07-16 | S. L. I. Systems, Inc. | Search engine |
US6195698B1 (en) * | 1998-04-13 | 2001-02-27 | Compaq Computer Corporation | Method for selectively restricting access to computer systems |
US6279036B1 (en) * | 1998-05-15 | 2001-08-21 | International Business Machines Corporation | Method and apparatus for detecting actual viewing or electronic advertisements |
US6216112B1 (en) * | 1998-05-27 | 2001-04-10 | William H. Fuller | Method for software distribution and compensation with replenishable advertisements |
US6182050B1 (en) * | 1998-05-28 | 2001-01-30 | Acceleration Software International Corporation | Advertisements distributed on-line using target criteria screening with method for maintaining end user privacy |
US6006225A (en) * | 1998-06-15 | 1999-12-21 | Amazon.Com | Refining search queries by the suggestion of correlated terms from prior searches |
US6356898B2 (en) * | 1998-08-31 | 2002-03-12 | International Business Machines Corporation | Method and system for summarizing topics of documents browsed by a user |
US6343274B1 (en) * | 1998-09-11 | 2002-01-29 | Hewlett-Packard | Apparatus and method for merchant-to-consumer advertisement communication system |
US6338066B1 (en) * | 1998-09-25 | 2002-01-08 | International Business Machines Corporation | Surfaid predictor: web-based system for predicting surfer behavior |
US6772139B1 (en) * | 1998-10-05 | 2004-08-03 | Smith, Iii Julius O. | Method and apparatus for facilitating use of hypertext links on the world wide web |
US6760916B2 (en) * | 2000-01-14 | 2004-07-06 | Parkervision, Inc. | Method, system and computer program product for producing and distributing enhanced media downstreams |
EP1159684A1 (en) * | 1998-12-18 | 2001-12-05 | Flycast Communications Corp. | Optimized internet advertising using history to select sites |
US6751606B1 (en) * | 1998-12-23 | 2004-06-15 | Microsoft Corporation | System for enhancing a query interface |
US6199067B1 (en) * | 1999-01-20 | 2001-03-06 | Mightiest Logicon Unisearch, Inc. | System and method for generating personalized user profiles and for utilizing the generated user profiles to perform adaptive internet searches |
US6292796B1 (en) * | 1999-02-23 | 2001-09-18 | Clinical Focus, Inc. | Method and apparatus for improving access to literature |
US6366298B1 (en) * | 1999-06-03 | 2002-04-02 | Netzero, Inc. | Monitoring of individual internet usage |
US6907566B1 (en) * | 1999-04-02 | 2005-06-14 | Overture Services, Inc. | Method and system for optimum placement of advertisements on a webpage |
US6584492B1 (en) * | 2000-01-20 | 2003-06-24 | Americom Usa | Internet banner advertising process and apparatus having scalability |
US6493702B1 (en) * | 1999-05-05 | 2002-12-10 | Xerox Corporation | System and method for searching and recommending documents in a collection using share bookmarks |
US6721713B1 (en) * | 1999-05-27 | 2004-04-13 | Andersen Consulting Llp | Business alliance identification in a web architecture framework |
US6519571B1 (en) * | 1999-05-27 | 2003-02-11 | Accenture Llp | Dynamic customer profile management |
US6269361B1 (en) * | 1999-05-28 | 2001-07-31 | Goto.Com | System and method for influencing a position on a search result list generated by a computer network search engine |
US6449657B2 (en) * | 1999-08-06 | 2002-09-10 | Namezero.Com, Inc. | Internet hosting system |
US6360221B1 (en) * | 1999-09-21 | 2002-03-19 | Neostar, Inc. | Method and apparatus for the production, delivery, and receipt of enhanced e-mail |
US6772150B1 (en) * | 1999-12-10 | 2004-08-03 | Amazon.Com, Inc. | Search query refinement using related search phrases |
US6526403B1 (en) * | 1999-12-17 | 2003-02-25 | International Business Machines Corporation | Method, computer program product, and system for rewriting database queries in a heterogenous environment |
US6401075B1 (en) * | 2000-02-14 | 2002-06-04 | Global Network, Inc. | Methods of placing, purchasing and monitoring internet advertising |
US20020073079A1 (en) * | 2000-04-04 | 2002-06-13 | Merijn Terheggen | Method and apparatus for searching a database and providing relevance feedback |
US6704729B1 (en) * | 2000-05-19 | 2004-03-09 | Microsoft Corporation | Retrieval of relevant information categories |
US7013323B1 (en) * | 2000-05-23 | 2006-03-14 | Cyveillance, Inc. | System and method for developing and interpreting e-commerce metrics by utilizing a list of rules wherein each rule contain at least one of entity-specific criteria |
US6795707B2 (en) * | 2000-05-23 | 2004-09-21 | Jeffrey W. Martin | Methods and systems for correlating telecommunication antenna infrastructure placement information to provide telecommunication quality of service information |
US20020165773A1 (en) * | 2000-05-31 | 2002-11-07 | Takeshi Natsuno | Method and system for distributing advertisements over network |
US20020103834A1 (en) * | 2000-06-27 | 2002-08-01 | Thompson James C. | Method and apparatus for analyzing documents in electronic form |
US20040073485A1 (en) * | 2000-07-25 | 2004-04-15 | Informlink, Inc. | Method for an on-line promotion server |
US6681223B1 (en) * | 2000-07-27 | 2004-01-20 | International Business Machines Corporation | System and method of performing profile matching with a structured document |
AU2001288754A1 (en) * | 2000-09-06 | 2002-03-22 | Cachestream Corporation | Multiple advertising |
US6892181B1 (en) * | 2000-09-08 | 2005-05-10 | International Business Machines Corporation | System and method for improving the effectiveness of web advertising |
GB0026353D0 (en) * | 2000-10-27 | 2000-12-13 | Canon Kk | Apparatus and a method for facilitating searching |
US20020112035A1 (en) * | 2000-10-30 | 2002-08-15 | Carey Brian M. | System and method for performing content experience management |
US7945476B2 (en) * | 2000-10-31 | 2011-05-17 | Context Web, Inc. | Internet contextual advertisement delivery system |
US20020078045A1 (en) * | 2000-12-14 | 2002-06-20 | Rabindranath Dutta | System, method, and program for ranking search results using user category weighting |
JP2002222302A (en) * | 2000-12-15 | 2002-08-09 | Buzzhits Inc | System and method for corresponding to reaction of consumer with respect to demand stimulus on demand |
US20020111848A1 (en) * | 2001-02-12 | 2002-08-15 | White Craig R. | Aggregation of services on network portals |
US20030101182A1 (en) * | 2001-07-18 | 2003-05-29 | Omri Govrin | Method and system for smart search engine and other applications |
US20030040959A1 (en) * | 2001-08-10 | 2003-02-27 | Fei Calvin H. | Method and apparatus for conducting transactions on an automated teller machine |
US20050022114A1 (en) * | 2001-08-13 | 2005-01-27 | Xerox Corporation | Meta-document management system with personality identifiers |
US7778872B2 (en) * | 2001-09-06 | 2010-08-17 | Google, Inc. | Methods and apparatus for ordering advertisements based on performance information and price information |
US7743045B2 (en) * | 2005-08-10 | 2010-06-22 | Google Inc. | Detecting spam related and biased contexts for programmable search engines |
US20060069616A1 (en) * | 2004-09-30 | 2006-03-30 | David Bau | Determining advertisements using user behavior information such as past navigation information |
US7680796B2 (en) * | 2003-09-03 | 2010-03-16 | Google, Inc. | Determining and/or using location information in an ad system |
US7693830B2 (en) * | 2005-08-10 | 2010-04-06 | Google Inc. | Programmable search engine |
US20050114198A1 (en) * | 2003-11-24 | 2005-05-26 | Ross Koningstein | Using concepts for ad targeting |
US20070038603A1 (en) * | 2005-08-10 | 2007-02-15 | Guha Ramanathan V | Sharing context data across programmable search engines |
US20060149624A1 (en) * | 2004-12-30 | 2006-07-06 | Shumeet Baluja | Generating and/or serving local area advertisements, such as advertisements for devices with call functionality |
US7136875B2 (en) * | 2002-09-24 | 2006-11-14 | Google, Inc. | Serving advertisements based on content |
US7346606B2 (en) * | 2003-06-30 | 2008-03-18 | Google, Inc. | Rendering advertisements with documents having one or more topics using user topic interest |
US7716199B2 (en) * | 2005-08-10 | 2010-05-11 | Google Inc. | Aggregating context data for programmable search engines |
US9235849B2 (en) * | 2003-12-31 | 2016-01-12 | Google Inc. | Generating user information for use in targeted advertising |
US20050021397A1 (en) * | 2003-07-22 | 2005-01-27 | Cui Yingwei Claire | Content-targeted advertising using collected user behavior data |
US8560493B2 (en) * | 2003-10-01 | 2013-10-15 | Google Inc. | Determining and/or using end user local time information in an ad system |
US7716161B2 (en) * | 2002-09-24 | 2010-05-11 | Google, Inc, | Methods and apparatus for serving relevant advertisements |
US20040044571A1 (en) * | 2002-08-27 | 2004-03-04 | Bronnimann Eric Robert | Method and system for providing advertising listing variance in distribution feeds over the internet to maximize revenue to the advertising distributor |
US20040059712A1 (en) * | 2002-09-24 | 2004-03-25 | Dean Jeffrey A. | Serving advertisements using information associated with e-mail |
US20080170260A1 (en) * | 2003-03-19 | 2008-07-17 | Michael Haller | Output transform brokerage service |
US6947930B2 (en) * | 2003-03-21 | 2005-09-20 | Overture Services, Inc. | Systems and methods for interactive search query refinement |
JP2007528520A (en) * | 2003-05-31 | 2007-10-11 | エヌエイチエヌ コーポレーション | Method and system for managing websites registered with search engines |
US7509344B1 (en) * | 2003-08-18 | 2009-03-24 | Google Inc. | Method for detecting link spam in hyperlinked databases |
US20050065844A1 (en) * | 2003-09-24 | 2005-03-24 | Yahoo! Inc. | System and method for managing an advertising campaign on a network |
US7346839B2 (en) * | 2003-09-30 | 2008-03-18 | Google Inc. | Information retrieval based on historical data |
US7346615B2 (en) * | 2003-10-09 | 2008-03-18 | Google, Inc. | Using match confidence to adjust a performance threshold |
US20050131935A1 (en) * | 2003-11-18 | 2005-06-16 | O'leary Paul J. | Sector content mining system using a modular knowledge base |
US20050160107A1 (en) * | 2003-12-29 | 2005-07-21 | Ping Liang | Advanced search, file system, and intelligent assistant agent |
US20050160083A1 (en) * | 2004-01-16 | 2005-07-21 | Yahoo! Inc. | User-specific vertical search |
US7349901B2 (en) * | 2004-05-21 | 2008-03-25 | Microsoft Corporation | Search engine spam detection using external data |
US7562069B1 (en) * | 2004-07-01 | 2009-07-14 | Aol Llc | Query disambiguation |
US7958115B2 (en) * | 2004-07-29 | 2011-06-07 | Yahoo! Inc. | Search systems and methods using in-line contextual queries |
WO2006011819A1 (en) * | 2004-07-30 | 2006-02-02 | Eurekster, Inc. | Adaptive search engine |
US20060080321A1 (en) * | 2004-09-22 | 2006-04-13 | Whenu.Com, Inc. | System and method for processing requests for contextual information |
US7543232B2 (en) * | 2004-10-19 | 2009-06-02 | International Business Machines Corporation | Intelligent web based help system |
US7533092B2 (en) * | 2004-10-28 | 2009-05-12 | Yahoo! Inc. | Link-based spam detection |
US20060122957A1 (en) * | 2004-12-03 | 2006-06-08 | Johnny Chen | Method and system to detect e-mail spam using concept categorization of linked content |
US7962510B2 (en) * | 2005-02-11 | 2011-06-14 | Microsoft Corporation | Using content analysis to detect spam web pages |
US20060271281A1 (en) * | 2005-05-20 | 2006-11-30 | Myron Ahn | Geographic information knowledge systems |
US20080005064A1 (en) * | 2005-06-28 | 2008-01-03 | Yahoo! Inc. | Apparatus and method for content annotation and conditional annotation retrieval in a search context |
-
2005
- 2005-08-10 US US11/201,754 patent/US20070038614A1/en not_active Abandoned
-
2006
- 2006-08-08 CA CA2618567A patent/CA2618567C/en active Active
- 2006-08-08 WO PCT/US2006/030991 patent/WO2007021720A2/en active Application Filing
- 2006-08-08 EP EP06801017A patent/EP1938217A4/en not_active Ceased
-
2012
- 2012-09-13 US US13/614,452 patent/US20130110627A1/en not_active Abandoned
-
2016
- 2016-06-20 US US15/186,908 patent/US20160299983A1/en not_active Abandoned
Patent Citations (9)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6266649B1 (en) * | 1998-09-18 | 2001-07-24 | Amazon.Com, Inc. | Collaborative recommendations using item-to-item similarity mappings |
US20050021387A1 (en) * | 1999-11-15 | 2005-01-27 | Gottfurcht Elliot A. | Method to generate advertising revenue based on time and location |
US20020087525A1 (en) * | 2000-04-02 | 2002-07-04 | Abbott Kenneth H. | Soliciting information based on a computer user's context |
US20050240580A1 (en) * | 2003-09-30 | 2005-10-27 | Zamir Oren E | Personalization of placed content ordering in search results |
US20060167857A1 (en) * | 2004-07-29 | 2006-07-27 | Yahoo! Inc. | Systems and methods for contextual transaction proposals |
US20060064411A1 (en) * | 2004-09-22 | 2006-03-23 | William Gross | Search engine using user intent |
US20060095336A1 (en) * | 2004-10-29 | 2006-05-04 | Microsoft Corporation | Systems and methods for determining bid value for content items to be placed on a rendered page |
US20060242017A1 (en) * | 2005-03-09 | 2006-10-26 | Medio Systems, Inc. | Method and system of bidding for advertisement placement on computing devices |
US20060242007A1 (en) * | 2005-04-20 | 2006-10-26 | Leong Kian F | Systems and methods for advertising payments |
Cited By (23)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9031937B2 (en) | 2005-08-10 | 2015-05-12 | Google Inc. | Programmable search engine |
US8756210B1 (en) | 2005-08-10 | 2014-06-17 | Google Inc. | Aggregating context data for programmable search engines |
US9015148B2 (en) * | 2009-09-21 | 2015-04-21 | Microsoft Corporation | Suggesting related search queries during web browsing |
US20110072033A1 (en) * | 2009-09-21 | 2011-03-24 | Microsoft Corporation | Suggesting related search queries during web browsing |
US20110313843A1 (en) * | 2010-06-17 | 2011-12-22 | Microsoft Corporation | Search advertisement targeting |
US20120239488A1 (en) * | 2011-03-17 | 2012-09-20 | DataPop, Inc. | Taxonomy based targeted search advertising |
US8694362B2 (en) * | 2011-03-17 | 2014-04-08 | DataPop, Inc. | Taxonomy based targeted search advertising |
US8738426B2 (en) * | 2011-03-17 | 2014-05-27 | DataPop, Inc. | Taxonomy based targeted search advertising |
US20140229281A1 (en) * | 2011-03-17 | 2014-08-14 | DataPop, Inc. | Taxonomy based targeted search advertising |
US8700599B2 (en) * | 2011-11-21 | 2014-04-15 | Microsoft Corporation | Context dependent keyword suggestion for advertising |
US20130132364A1 (en) * | 2011-11-21 | 2013-05-23 | Microsoft Corporation | Context dependent keyword suggestion for advertising |
US10192238B2 (en) * | 2012-12-21 | 2019-01-29 | Walmart Apollo, Llc | Real-time bidding and advertising content generation |
US9972030B2 (en) | 2013-03-11 | 2018-05-15 | Criteo S.A. | Systems and methods for the semantic modeling of advertising creatives in targeted search advertising campaigns |
US20140279137A1 (en) * | 2013-03-15 | 2014-09-18 | Ebay Inc. | Methods, systems, and apparatus for dynamic bid resolution |
US9521189B2 (en) | 2013-08-21 | 2016-12-13 | Google Inc. | Providing contextual data for selected link units |
US9501499B2 (en) | 2013-10-21 | 2016-11-22 | Google Inc. | Methods and systems for creating image-based content based on text-based content |
US11487757B2 (en) * | 2014-10-14 | 2022-11-01 | Google Llc | Assistive browsing using context |
US11144950B2 (en) | 2016-01-12 | 2021-10-12 | Tencent Technology (Shenzhen) Company Limited | Information delivery method and apparatus, server, and storage medium |
US10832306B2 (en) * | 2016-09-15 | 2020-11-10 | International Business Machines Corporation | User actions in a physical space directing presentation of customized virtual environment |
CN106651329A (en) * | 2016-10-01 | 2017-05-10 | 深圳市分享投融网络有限公司 | Method and device for mining individual paid knowledge based on mobile Internet for sharing |
WO2022049522A1 (en) | 2020-09-02 | 2022-03-10 | Dexameron Limited (Dexameron Ltd) | System and method for matching and collecting user data and/or user device data |
US11570139B2 (en) | 2020-09-02 | 2023-01-31 | Dexameron Limited (Dexameron Ltd) | System and method for matching and collecting user data and/or user device data |
US11909714B2 (en) | 2020-09-02 | 2024-02-20 | Dexameron Limited (Dexameron Ltd) | System for matching and collecting user data and/or user device data |
Also Published As
Publication number | Publication date |
---|---|
US20160299983A1 (en) | 2016-10-13 |
EP1938217A2 (en) | 2008-07-02 |
WO2007021720A3 (en) | 2009-06-11 |
US20070038614A1 (en) | 2007-02-15 |
CA2618567C (en) | 2013-03-12 |
WO2007021720A2 (en) | 2007-02-22 |
CA2618567A1 (en) | 2007-02-22 |
EP1938217A4 (en) | 2011-06-22 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20160299983A1 (en) | Programmable search engines | |
US9031937B2 (en) | Programmable search engine | |
US8051063B2 (en) | Aggregating context data for programmable search engines | |
US7743045B2 (en) | Detecting spam related and biased contexts for programmable search engines | |
US20070038603A1 (en) | Sharing context data across programmable search engines | |
US8768772B2 (en) | System and method for selecting advertising in a social bookmarking system | |
US8370362B2 (en) | Database access system | |
US8271878B2 (en) | Behavior-based selection of items to present on affiliate sites | |
US8768954B2 (en) | Relevancy-based domain classification | |
CA2530400C (en) | Serving advertisements using a search of advertiser web information | |
US20160314208A1 (en) | Enhancing search result pages using structural information about the structure of content from content providers | |
US20090172021A1 (en) | Recommendations based on actions performed on multiple remote servers | |
US20090171968A1 (en) | Widget-assisted content personalization based on user behaviors tracked across multiple web sites | |
US20090171754A1 (en) | Widget-assisted detection and exposure of cross-site behavioral associations | |
US20080005103A1 (en) | Intellectual property search, marketing and licensing connection system and method | |
US20090171755A1 (en) | Behavior-based generation of site-to-site referrals | |
KR100485322B1 (en) | Method for generating a search result list on a web search engine | |
JP2011508925A (en) | Detect and publish behavior-related widget support | |
KR101007434B1 (en) | Method for generating a search result list on a web search engine |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GUHA, RAMANATHAN V.;REEL/FRAME:029062/0074Effective date: 20051018 |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
US9794540B2 - Hardware-based convolutional color correction in digital images - Google Patents
Hardware-based convolutional color correction in digital images Download PDFInfo
- Publication number
- US9794540B2 US9794540B2 US15/583,620 US201715583620A US9794540B2 US 9794540 B2 US9794540 B2 US 9794540B2 US 201715583620 A US201715583620 A US 201715583620A US 9794540 B2 US9794540 B2 US 9794540B2
- Authority
- US
- United States
- Prior art keywords
- image
- input image
- processing engine
- reduced
- dimensional
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 238000012937 correction Methods 0.000 title claims description 14
- 239000003086 colorant Substances 0.000 claims abstract description 19
- 238000012545 processing Methods 0.000 claims description 74
- 230000006870 function Effects 0.000 claims description 33
- 238000000034 method Methods 0.000 claims description 33
- 238000005286 illumination Methods 0.000 claims description 23
- 238000012549 training Methods 0.000 claims description 23
- 230000003190 augmentative effect Effects 0.000 claims description 15
- 230000008569 process Effects 0.000 claims description 9
- 235000019557 luminance Nutrition 0.000 claims description 6
- 230000004044 response Effects 0.000 claims description 6
- 238000009826 distribution Methods 0.000 claims description 4
- 230000009467 reduction Effects 0.000 claims description 3
- 230000001953 sensory effect Effects 0.000 claims description 2
- 230000026676 system process Effects 0.000 claims 1
- 238000004891 communication Methods 0.000 description 17
- 238000010801 machine learning Methods 0.000 description 13
- 238000003860 storage Methods 0.000 description 13
- 238000001914 filtration Methods 0.000 description 11
- 238000013500 data storage Methods 0.000 description 10
- 238000010586 diagram Methods 0.000 description 7
- 238000012800 visualization Methods 0.000 description 7
- 230000001815 facial effect Effects 0.000 description 6
- 238000013507 mapping Methods 0.000 description 6
- 230000001960 triggered effect Effects 0.000 description 6
- 230000005540 biological transmission Effects 0.000 description 5
- 239000011159 matrix material Substances 0.000 description 4
- 238000005070 sampling Methods 0.000 description 4
- 238000009416 shuttering Methods 0.000 description 4
- 238000013519 translation Methods 0.000 description 4
- 230000008859 change Effects 0.000 description 3
- 238000013527 convolutional neural network Methods 0.000 description 3
- 238000001514 detection method Methods 0.000 description 3
- 238000009472 formulation Methods 0.000 description 3
- 239000000203 mixture Substances 0.000 description 3
- 230000007935 neutral effect Effects 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 3
- 238000004458 analytical method Methods 0.000 description 2
- 238000013459 approach Methods 0.000 description 2
- 230000003247 decreasing effect Effects 0.000 description 2
- 238000005516 engineering process Methods 0.000 description 2
- 238000007667 floating Methods 0.000 description 2
- 230000006872 improvement Effects 0.000 description 2
- 238000007477 logistic regression Methods 0.000 description 2
- 230000007774 longterm Effects 0.000 description 2
- 230000007246 mechanism Effects 0.000 description 2
- 238000012986 modification Methods 0.000 description 2
- 230000004048 modification Effects 0.000 description 2
- 238000005457 optimization Methods 0.000 description 2
- 238000003825 pressing Methods 0.000 description 2
- 239000013598 vector Substances 0.000 description 2
- 241000282412 Homo Species 0.000 description 1
- 230000009471 action Effects 0.000 description 1
- 230000003213 activating effect Effects 0.000 description 1
- 239000000654 additive Substances 0.000 description 1
- 230000000996 additive effect Effects 0.000 description 1
- 238000010420 art technique Methods 0.000 description 1
- 238000003705 background correction Methods 0.000 description 1
- 230000009286 beneficial effect Effects 0.000 description 1
- 230000008901 benefit Effects 0.000 description 1
- 210000004556 brain Anatomy 0.000 description 1
- 230000001413 cellular effect Effects 0.000 description 1
- 230000000295 complement effect Effects 0.000 description 1
- 230000001419 dependent effect Effects 0.000 description 1
- 238000003384 imaging method Methods 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 238000004519 manufacturing process Methods 0.000 description 1
- 230000000877 morphologic effect Effects 0.000 description 1
- 230000006855 networking Effects 0.000 description 1
- 238000010606 normalization Methods 0.000 description 1
- 230000001151 other effect Effects 0.000 description 1
- 230000002085 persistent effect Effects 0.000 description 1
- 238000011084 recovery Methods 0.000 description 1
- 230000002441 reversible effect Effects 0.000 description 1
- 229920006395 saturated elastomer Polymers 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000003595 spectral effect Effects 0.000 description 1
- 238000001228 spectrum Methods 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 230000009466 transformation Effects 0.000 description 1
Images
Classifications
-
- G06T5/90—
-
- H04N9/735—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T5/00—Image enhancement or restoration
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T5/00—Image enhancement or restoration
- G06T5/20—Image enhancement or restoration by the use of local operators
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T5/00—Image enhancement or restoration
- G06T5/40—Image enhancement or restoration by the use of histogram techniques
-
- G06T5/60—
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N1/00—Scanning, transmission or reproduction of documents or the like, e.g. facsimile transmission; Details thereof
- H04N1/46—Colour picture communication systems
- H04N1/56—Processing of colour picture signals
- H04N1/60—Colour correction or control
- H04N1/6027—Correction or control of colour gradation or colour contrast
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N1/00—Scanning, transmission or reproduction of documents or the like, e.g. facsimile transmission; Details thereof
- H04N1/46—Colour picture communication systems
- H04N1/56—Processing of colour picture signals
- H04N1/60—Colour correction or control
- H04N1/6083—Colour correction or control controlled by factors external to the apparatus
- H04N1/6086—Colour correction or control controlled by factors external to the apparatus by scene illuminant, i.e. conditions at the time of picture capture, e.g. flash, optical filter used, evening, cloud, daylight, artificial lighting, white point measurement, colour temperature
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N23/00—Cameras or camera modules comprising electronic image sensors; Control thereof
- H04N23/80—Camera processing pipelines; Components thereof
- H04N23/84—Camera processing pipelines; Components thereof for processing colour signals
- H04N23/88—Camera processing pipelines; Components thereof for processing colour signals for colour balance, e.g. white-balance circuits or colour temperature control
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N9/00—Details of colour television systems
- H04N9/64—Circuits for processing colour signals
- H04N9/646—Circuits for processing colour signals for image enhancement, e.g. vertical detail restoration, cross-colour elimination, contour correction, chrominance trapping filters
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2207/00—Indexing scheme for image analysis or image enhancement
- G06T2207/10—Image acquisition modality
- G06T2207/10024—Color image
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2207/00—Indexing scheme for image analysis or image enhancement
- G06T2207/20—Special algorithmic details
- G06T2207/20016—Hierarchical, coarse-to-fine, multiscale or multiresolution image processing; Pyramid transform
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2207/00—Indexing scheme for image analysis or image enhancement
- G06T2207/20—Special algorithmic details
- G06T2207/20072—Graph-based image processing
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2207/00—Indexing scheme for image analysis or image enhancement
- G06T2207/20—Special algorithmic details
- G06T2207/20081—Training; Learning
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06T—IMAGE DATA PROCESSING OR GENERATION, IN GENERAL
- G06T2207/00—Indexing scheme for image analysis or image enhancement
- G06T2207/20—Special algorithmic details
- G06T2207/20084—Artificial neural networks [ANN]
Definitions
- Digital imaging may refer to capturing and representing the color and brightness characteristics of scenes in digital images (e.g., photographs or motion video).
- digital images e.g., photographs or motion video
- the true colors of objects therein may be offset by the color of any lighting in the scene.
- the digital image may be further processed and/or enhanced to create a new digital image with colors that are closer to the true colors.
- the color of a pixel in a natural image can be represented as a product of two quantities, reflectance (e.g., the colors of the surfaces in the scene) and illumination (the color of the light striking the surfaces in the scene).
- reflectance e.g., the colors of the surfaces in the scene
- illumination the color of the light striking the surfaces in the scene.
- the embodiments herein disclose a color constancy technique based on an observation relating the scaling of the color channels of an image to the translation of a histogram of the log-chromaticity of that image. This observation allows the color constancy problem to be framed as a discriminative machine learning problem, using tools based on convolutional neural networks and structured prediction. By discriminatively training a color constancy technique in this way, the embodiments herein are able to reduce error rates on standard benchmarks by as much as 40%.
- a first example embodiment may involve a obtaining an input image.
- the input image may have a white point represented by chrominance values that define white color in the input image.
- the first example embodiment may also involve, based on colors of the input image, generating a two-dimensional chrominance histogram of the input image.
- the first example embodiment may further involve convolving the two-dimensional chrominance histogram with a filter to create a two-dimensional heat map. Entries in the two-dimensional heat map may represent respective estimates of how close respective tints corresponding to the respective entries are to the white point of the input image.
- the first example embodiment may additionally involve selecting an entry in the two-dimensional heat map that represents a particular value that is within a threshold of a maximum value in the heat map, and based on the selected entry, tinting the input image to form an output image.
- an article of manufacture may include a non-transitory computer-readable medium, having stored thereon program instructions that, upon execution by a computing device, cause the computing device to perform operations in accordance with the first example embodiment.
- a computing device may include at least one processor, as well as data storage and program instructions.
- the program instructions may be stored in the data storage, and upon execution by the at least one processor may cause the computing device to perform operations in accordance with the first example embodiment.
- a system may include various means for carrying out each of the operations of the first example embodiment.
- FIG. 1 depicts front, right side, and rear views of a digital camera device, according to example embodiments.
- FIG. 2 depicts a block diagram of a computing device with image capture capability, according to example embodiments.
- FIG. 3 depicts three tints of an image and associated chrominance histograms for each, according to example embodiments.
- FIG. 4 depicts visualizations of a cost function, used during training, as a function of proposed illumination color, according to example embodiments.
- FIG. 5 depicts a visualization of pyramid filtering, according to example embodiments.
- FIG. 6 depicts visualizations of the information captured by four channels associated with enhanced images, according to example embodiments.
- FIG. 7 is a flow chart, according to example embodiments.
- FIG. 8 is a hardware block diagram, according to example embodiments.
- Example methods, devices, and systems are described herein. It should be understood that the words “example” and “exemplary” are used herein to mean “serving as an example, instance, or illustration.” Any embodiment or feature described herein as being an “example” or “exemplary” is not necessarily to be construed as preferred or advantageous over other embodiments or features. Other embodiments can be utilized, and other changes can be made, without departing from the scope of the subject matter presented herein.
- image capture devices such as cameras
- they may be employed as standalone hardware devices or integrated into various other types of devices.
- wireless computing devices e.g., mobile phones
- tablet computers e.g., laptop computers
- video game interfaces e.g., home automation devices
- automobiles and other types of vehicles e.g., automobiles and other types of vehicles.
- the physical components of a camera may include one or more apertures through which light enters, one or more recording surfaces for capturing the images represented by the light, and lenses positioned in front of each aperture to focus at least part of the image on the recording surface(s).
- the apertures may be fixed size or adjustable.
- the recording surface may be photographic film.
- the recording surface may include an electronic image sensor (e.g., a charge coupled device (CCD) or a complementary metal-oxide-semiconductor (CMOS) sensor) to transfer and/or store captured images in a data storage unit (e.g., memory).
- CMOS complementary metal-oxide-semiconductor
- One or more shutters may be coupled to or nearby the lenses or the recording surfaces. Each shutter may either be in a closed position, in which it blocks light from reaching the recording surface, or an open position, in which light is allowed to reach to recording surface.
- the position of each shutter may be controlled by a shutter button. For instance, a shutter may be in the closed position by default. When the shutter button is triggered (e.g., pressed), the shutter may change from the closed position to the open position for a period of time, known as the shutter cycle. During the shutter cycle, an image may be captured on the recording surface. At the end of the shutter cycle, the shutter may change back to the closed position.
- the shuttering process may be electronic.
- the sensor may be reset to remove any residual signal in its photodiodes. While the electronic shutter remains open, the photodiodes may accumulate charge. When or after the shutter closes, these charges may be transferred to longer-term data storage. Combinations of mechanical and electronic shuttering may also be possible.
- a shutter may be activated and/or controlled by something other than a shutter button.
- the shutter may be activated by a softkey, a timer, or some other trigger.
- image capture may refer to any mechanical and/or electronic shuttering process that results in one or more images being recorded, regardless of how the shuttering process is triggered or controlled.
- the exposure of a captured image may be determined by a combination of the size of the aperture, the brightness of the light entering the aperture, and the length of the shutter cycle (also referred to as the shutter length or the exposure length). Additionally, a digital and/or analog gain may be applied to the image, thereby influencing the exposure.
- the term “total exposure length” or “total exposure time” may refer to the shutter length multiplied by the gain for a particular aperture size.
- total exposure time or “TET,” should be interpreted as possibly being a shutter length, an exposure time, or any other metric that controls the amount of signal response that results from light reaching the recording surface.
- a still camera may capture one or more images each time image capture is triggered.
- a video camera may continuously capture images at a particular rate (e.g., 24 images—or frames—per second) as long as image capture remains triggered (e.g., while the shutter button is held down).
- Some digital still cameras may open the shutter when the camera device or application is activated, and the shutter may remain in this position until the camera device or application is deactivated. While the shutter is open, the camera device or application may capture and display a representation of a scene on a viewfinder. When image capture is triggered, one or more distinct digital images of the current scene may be captured.
- Cameras even analog cameras—may include software to control one or more camera functions and/or settings, such as aperture size, TET, gain, and so on. Additionally, some cameras may include software that digitally processes images during or after these images are captured. While the description above refers to cameras in general, it may be particularly relevant to digital cameras.
- FIG. 1 illustrates the form factor of a digital camera device 100 .
- Digital camera device 100 may be, for example, a mobile phone, a tablet computer, or a wearable computing device. However, other embodiments are possible.
- Digital camera device 100 may include various elements, such as a body 102 , a front-facing camera 104 , a multi-element display 106 , a shutter button 108 , and other buttons 110 .
- Digital camera device 100 could further include a rear-facing camera 112 .
- Front-facing camera 104 may be positioned on a side of body 102 typically facing a user while in operation, or on the same side as multi-element display 106 .
- Rear-facing camera 112 may be positioned on a side of body 102 opposite front-facing camera 104 . Referring to the cameras as front and rear facing is arbitrary, and digital camera device 100 may include multiple cameras positioned on various sides of body 102 .
- Multi-element display 106 could represent a cathode ray tube (CRT) display, a light emitting diode (LED) display, a liquid crystal (LCD) display, a plasma display, or any other type of display known in the art.
- multi-element display 106 may display a digital representation of the current image being captured by front-facing camera 104 and/or rear-facing camera 112 , or an image that could be captured or was recently captured by either or both of these cameras.
- multi-element display 106 may serve as a viewfinder for either camera.
- Multi-element display 106 may also support touchscreen and/or presence-sensitive functions that may be able to adjust the settings and/or configuration of any aspect of digital camera device 100 .
- Front-facing camera 104 may include an image sensor and associated optical elements such as lenses. Front-facing camera 104 may offer zoom capabilities or could have a fixed focal length. In other embodiments, interchangeable lenses could be used with front-facing camera 104 . Front-facing camera 104 may have a variable mechanical aperture and a mechanical and/or electronic shutter. Front-facing camera 104 also could be configured to capture still images, video images, or both. Further, front-facing camera 104 could represent a monoscopic, stereoscopic, or multiscopic camera. Rear-facing camera 112 may be similarly or differently arranged. Additionally, front-facing camera 104 , rear-facing camera 112 , or both, may be an array of one or more cameras.
- Either or both of front facing camera 104 and rear-facing camera 112 may include or be associated with an illumination component that provides a light field to illuminate a target object.
- an illumination component could provide flash or constant illumination of the target object.
- An illumination component could also be configured to provide a light field that includes one or more of structured light, polarized light, and light with specific spectral content. Other types of light fields known and used to recover three-dimensional (3D) models from an object are possible within the context of the embodiments herein.
- Either or both of front facing camera 104 and rear-facing camera 112 may include or be associated with an ambient light sensor that may continuously or from time to time determine the ambient brightness of a scene that the camera can capture.
- the ambient light sensor can be used to adjust the display brightness of a screen associated with the camera (e.g., a viewfinder). When the determined ambient brightness is high, the brightness level of the screen may be increased to make the screen easier to view. When the determined ambient brightness is low, the brightness level of the screen may be decreased, also to make the screen easier to view as well as to potentially save power. Additionally, the ambient light sensor's input may be used to determine a TET of an associated camera, or to help in this determination.
- Digital camera device 100 could be configured to use multi-element display 106 and either front-facing camera 104 or rear-facing camera 112 to capture images of a target object.
- the captured images could be a plurality of still images or a video stream.
- the image capture could be triggered by activating shutter button 108 , pressing a softkey on multi-element display 106 , or by some other mechanism.
- the images could be captured automatically at a specific time interval, for example, upon pressing shutter button 108 , upon appropriate lighting conditions of the target object, upon moving digital camera device 100 a predetermined distance, or according to a predetermined capture schedule.
- FIG. 2 is a simplified block diagram showing some of the components of an example computing device 200 that may include camera components 224 .
- computing device 200 may be a cellular mobile telephone (e.g., a smartphone), a still camera, a video camera, a fax machine, a computer (such as a desktop, notebook, tablet, or handheld computer), a personal digital assistant (PDA), a home automation component, a digital video recorder (DVR), a digital television, a remote control, a wearable computing device, or some other type of device equipped with at least some image capture and/or image processing capabilities.
- PDA personal digital assistant
- DVR digital video recorder
- computing device 200 may represent a physical camera device such as a digital camera, a particular physical hardware platform on which a camera application operates in software, or other combinations of hardware and software that are configured to carry out camera functions.
- computing device 200 may include a communication interface 202 , a user interface 204 , a processor 206 , data storage 208 , and camera components 224 , all of which may be communicatively linked together by a system bus, network, or other connection mechanism 210 .
- Communication interface 202 may allow computing device 200 to communicate, using analog or digital modulation, with other devices, access networks, and/or transport networks.
- communication interface 202 may facilitate circuit-switched and/or packet-switched communication, such as plain old telephone service (POTS) communication and/or Internet protocol (IP) or other packetized communication.
- POTS plain old telephone service
- IP Internet protocol
- communication interface 202 may include a chipset and antenna arranged for wireless communication with a radio access network or an access point.
- communication interface 202 may take the form of or include a wireline interface, such as an Ethernet, Universal Serial Bus (USB), or High-Definition Multimedia Interface (HDMI) port.
- USB Universal Serial Bus
- HDMI High-Definition Multimedia Interface
- Communication interface 202 may also take the form of or include a wireless interface, such as a Wifi, BLUETOOTH®, global positioning system (GPS), or wide-area wireless interface (e.g., WiMAX or 3GPP Long-Term Evolution (LTE)).
- a wireless interface such as a Wifi, BLUETOOTH®, global positioning system (GPS), or wide-area wireless interface (e.g., WiMAX or 3GPP Long-Term Evolution (LTE)).
- GPS global positioning system
- LTE 3GPP Long-Term Evolution
- communication interface 202 may comprise multiple physical communication interfaces (e.g., a Wifi interface, a BLUETOOTH® interface, and a wide-area wireless interface).
- User interface 204 may function to allow computing device 200 to interact with a human or non-human user, such as to receive input from a user and to provide output to the user.
- user interface 204 may include input components such as a keypad, keyboard, touch-sensitive or presence-sensitive panel, computer mouse, trackball, joystick, microphone, and so on.
- User interface 204 may also include one or more output components such as a display screen which, for example, may be combined with a presence-sensitive panel. The display screen may be based on CRT, LCD, and/or LED technologies, or other technologies now known or later developed.
- User interface 204 may also be configured to generate audible output(s), via a speaker, speaker jack, audio output port, audio output device, earphones, and/or other similar devices.
- user interface 204 may include a display that serves as a viewfinder for still camera and/or video camera functions supported by computing device 200 . Additionally, user interface 204 may include one or more buttons, switches, knobs, and/or dials that facilitate the configuration and focusing of a camera function and the capturing of images (e.g., capturing a picture). It may be possible that some or all of these buttons, switches, knobs, and/or dials are implemented by way of a presence-sensitive panel.
- Processor 206 may comprise one or more general purpose processors—e.g., microprocessors—and/or one or more special purpose processors—e.g., digital signal processors (DSPs), graphics processing units (GPUs), floating point units (FPUs), network processors, or application-specific integrated circuits (ASICs).
- DSPs digital signal processors
- GPUs graphics processing units
- FPUs floating point units
- ASICs application-specific integrated circuits
- special purpose processors may be capable of image processing, image alignment, and merging images, among other possibilities.
- Data storage 208 may include one or more volatile and/or non-volatile storage components, such as magnetic, optical, flash, or organic storage, and may be integrated in whole or in part with processor 206 .
- Data storage 208 may include removable and/or non-removable components.
- Processor 206 may be capable of executing program instructions 218 (e.g., compiled or non-compiled program logic and/or machine code) stored in data storage 208 to carry out the various functions described herein. Therefore, data storage 208 may include a non-transitory computer-readable medium, having stored thereon program instructions that, upon execution by computing device 200 , cause computing device 200 to carry out any of the methods, processes, or operations disclosed in this specification and/or the accompanying drawings. The execution of program instructions 218 by processor 206 may result in processor 206 using data 212 .
- program instructions 218 e.g., compiled or non-compiled program logic and/or machine code
- program instructions 218 may include an operating system 222 (e.g., an operating system kernel, device driver(s), and/or other modules) and one or more application programs 220 (e.g., camera functions, address book, email, web browsing, social networking, and/or gaming applications) installed on computing device 200 .
- data 212 may include operating system data 216 and application data 214 .
- Operating system data 216 may be accessible primarily to operating system 222
- application data 214 may be accessible primarily to one or more of application programs 220 .
- Application data 214 may be arranged in a file system that is visible to or hidden from a user of computing device 200 .
- Application programs 220 may communicate with operating system 222 through one or more application programming interfaces (APIs). These APIs may facilitate, for instance, application programs 220 reading and/or writing application data 214 , transmitting or receiving information via communication interface 202 , receiving and/or displaying information on user interface 204 , and so on.
- APIs application programming interfaces
- application programs 220 may be referred to as “apps” for short. Additionally, application programs 220 may be downloadable to computing device 200 through one or more online application stores or application markets. However, application programs can also be installed on computing device 200 in other ways, such as via a web browser or through a physical interface (e.g., a USB port) on computing device 200 .
- Camera components 224 may include, but are not limited to, an aperture, shutter, recording surface (e.g., photographic film and/or an image sensor), lens, and/or shutter button. Camera components 224 may be controlled at least in part by software executed by processor 206 .
- This section describes, in a general sense, ways in which color may be represented on a computer screen or in an image file. This information may be useful in the context of the image processing techniques described in the following sections.
- Captured images can be digitally represented using a number of color models.
- the red-green-blue (RGB) color model may be used for display of images on electronic output devices, such as computer screens.
- RGB is an additive color model in which red, green, and blue light are added together in various ways to produce a spectrum of colors. For instance, cyan may be formed by combining green and blue, yellow may be formed by combining red and green, magenta may be formed by combining red and blue, and white may be formed by combining red, green, and blue.
- a particular pixel of an RGB image may be expressed as a three-plane tuple (R,G,B), each plane of which can vary from 0 to a pre-defined maximum value (e.g., 255). If all of the planes are 0, the result may be black. If all of the planes are at the maximum value, the result may be the brightest representable white. (The color planes described herein may also be referred to as color channels.)
- YCbCr Another color model is YCbCr.
- this color model may be used as an alternative representation of an image.
- the Y plane may represent the brightness of a pixel
- the Cb and Cr planes may represent the blue-yellow chrominance and red-green chrominance, respectively.
- the blue-yellow chrominance may be represented by the blue pixel value in an RGB image divided by the green pixel value in the RGB image
- the red-green chrominance may be represented by the red pixel value in the RGB image divided by the green pixel value in the RGB image.
- the YCbCr color model has a well-defined relationship with the RGB color model and can be converted to and from this RGB with relative ease.
- White-balancing is an adjustment that a digital camera device, or associated software, can make to a captured image in an attempt to ensure that the white color in the image properly reflects the actual white colors in the real-world scene from which the image was captured. To understand white-balance, it is helpful to first understand the concept of the concept of color temperature.
- Color temperature measures the quality of a light based on the ratio of the amount of blue light to the amount of red light in an image or scene. Color temperature is expressed in units of Kelvin (K) degrees. An image or scene with higher color temperature (i.e., a larger Kelvin value) has more blue than an image or scene with lower color temperature (i.e., smaller Kelvin value). Thus, a “cooler” light has a higher color temperature, while a warmer light has a lower color temperature.
- the human eyes and brain can adjust to different color temperatures. For instance, humans see a white object as white regardless of whether it is viewed under strong sunlight or in a room illuminated with incandescent lights.
- Digital camera devices usually have built-in sensors to measure the color temperature of a scene, and may use an algorithm to process captured images of the scene so that the final result is close to how a human would perceive the scene. This adjustment to make the white colors in the image resemble the white colors in the scene is referred to as white-balancing.
- Current white-balance algorithms may not be accurate enough so that the white point of every image resembles that of the scene it represents. (The white point of an image represents the chrominance values that define “white” in the image.)
- the embodiments herein provide high-quality white-balance techniques that can operate with a wide range of image sensor hardware. These techniques operate in real-time, or near-real-time, in software. This may obviate the need for hardware-specific white-balance algorithms to be provided with various image sensors.
- the embodiments herein consider the appearance of the “output” white-balanced image, and are not dependent on the appearance of the “input” image (here, the “input” image is an image captured by an image sensor prior to application of a white-balance algorithm).
- the white-balance algorithm herein may produce the same white-balanced output image (assuming both images have similar radiometric properties—that the black level has been corrected, that the images are linear, etc.).
- the white-balance algorithm herein is trained (e.g., by way of one or more machine learning techniques) on images captured by one manufacturer's hardware, it should still work well on images captured by another manufacturer's hardware.
- the white-balance algorithm herein not only produces high quality results, but it currently outperforms the state-of-the-art in the academic literature by a 20%-40% reduction in error.
- the current state-of-the-art techniques are not designed to generalize across different image sensors.
- the white-balance algorithm herein is designed to be idempotent, meaning that if it is applied once to an image, it white-balances the image, and if it is applied again to the white-balanced image, it makes no further appreciable changes to the image. This property also means that the algorithm will not fail if the tint of the input image is altered by some other white-balance algorithm in the photographic pipeline.
- N indicates the number of pixels in I whose chrominance is near (u, v), where histogram counts are weighted by the luminance of respective pixels therein. This weighting reflects confidences in the respective chrominance values.
- N ( u,v ) ⁇ i I y (i) [
- E is the bin-width of the histogram.
- ⁇ 0.025 and 256-bin histograms may be used; however, other values of E and other numbers of histogram bins may be used instead.
- the histogram N After constructing the histogram N, it may be normalized to have a constant mass. Further, the square root of the count in each bin may be taken, which may improve the effectiveness of the histogram's features. Nonetheless, any ad-hoc normalization is possible as long as the same transformation is applied to the entire histogram.
- FIG. 3 contains three tinted versions of the same image in the top row, and each image's corresponding chrominance histogram in the bottom row.
- FIG. 3 depicts these images in black and white using different levels of brightness to present different tints.
- the image in the left column is tinted greenish yellow
- the image in the middle column is white-balanced
- the image in the right column is tinted reddish yellow.
- each chrominance histogram represents changing the blue-yellow tint of the associated image from a dominant blue to a dominant yellow. Likewise, moving from the top end to the bottom end of the y-axis of each chrominance histogram represents changing the red-green tint of the associated image from a dominant red to a dominant green. Overall, each chrominance histogram represents the relative number of pixels with a chrominance falling in each position on this x-y plot.
- the cluster of points in the left-column chrominance histogram indicates a green and yellow tint
- the cluster of points in the middle-column chrominance histogram indicates a neutral (white-balanced) tint
- the cluster of points in the right-column chrominance histogram indicates a red and yellow tint.
- each cluster of points represents the white point of the associated image, and the origin of the chrominance histogram is what looks white to a human. By centering the cluster of points around the origin of the chrominance histogram, a neutral tint may be achieved.
- the chrominance histogram of each image is a translated version of the other chrominance histograms (ignoring the sampling introduced by the histogram operation), and the shape of the histogram does not change.
- tinting an image affects the image's chrominance histogram only by a translation in histogram-space. This is a consequence of u and v being defined as they are herein—scaling an RGB channel is equivalent to shifting a log-chrominance channel. Luminance has no impact on this translation.
- a white-balancing algorithm may operate by considering some or all possible tints of an image, scoring each tinted image, and then providing the highest-scoring tint (or rather, its inverse) as the estimated illumination of the input image. For instance, it would be desirable for the tint associated with the middle column chrominance histogram to have the highest score so that the white-balance algorithm tints the input image to be neutral.
- this scoring may seem like an expensive proposition, as it requires a brute-force search over all possible tints, where some scoring function is applied at each tint.
- the scoring function is a linear combination of histogram bins
- this brute-force search is actually just the convolution of N with some filter F, and there are many ways that convolution operations can be made efficient.
- This procedure involves learning some filter F from training data such that this convolution produces accurate output.
- a model similar to multinomial logistic regression or structured prediction may be applied to a convolutional framework.
- this can be expressed as an optimization problem:
- Equation (21) F is the filter of which weights are learned, ⁇ N (i) ⁇ and ⁇ L (i) ⁇ are training-set chrominance histograms and ground truth illuminations respectively, and (N (i) *F)(u, v) is the convolution of N (i) and F indexed at location (u, v).
- P(u, v) is a softmax probability for each bin (u, v) in the histogram, as a function of N (i) *F.
- P(u, v) represents a normalized exponential function of a convolution of each training histogram with the filter.
- the filter weights are regularized by minimizing the sum of squares of the elements of F, moderated by some hyper-parameter ⁇ .
- minimizing loss results in an F such that N (i) *F is larger at (L u (i) , L v (i) ) than it is elsewhere, where C(u, v, u*, v*) defines the loss incurred at mis-estimated illuminants as follows:
- C measures the angle between the illuminations defined by (u, v) and (U*,v*), the loss measure by which color-constancy algorithms can be evaluated.
- Visualizations of C can be seen in FIG. 4 .
- FIG. 4 depicts visualizations of C(u, v, u*, v*) as a function of the proposed illumination color (u, v), with each plot showing a difference choice of the ground-truth illumination color (u*, v*) (circled). Because error is measured in terms of the angle between RGB illumination vectors, the shape of this error function can look different depending on the ground-truth illumination.
- Equation (21) can be solved to convergence with Broyden-Fletcher-Goldfarb-Shanno (BFGS) techniques, such as limited-memory BFGS (L-BFGS).
- BFGS Broyden-Fletcher-Goldfarb-Shanno
- L-BFGS limited-memory BFGS
- F may be initialized to all zeros (which works despite the non-convexity of the loss function).
- This problem resembles logistic regression but where every (u, v) has variable loss defined by C associated with it, measuring the cost of each possible (u, v) chrominance with respect to some ground-truth chrominance (u*, v*).
- the variable cost makes the model resemble a structured prediction-like process.
- the learned F reflects the distribution of colors in white-balanced scenes, and F is independent of the tints of the training images as a result of the aforementioned shift-invariance of the chrominance histograms, combined with F being evaluated as a convolution.
- F may be used to find the most likely illumination according to the model, but the model does not actually consider the likelihood of that illumination. This is similar to learning a generative model of the distribution of natural colors, with an exception being that the model of natural colors used herein is learned by discriminative training.
- a discriminative model generally models the dependence of an unobserved variable on an observed variable.
- a generative model is a full probabilistic model of all variables.
- a generative model can be used, for example, to generate values of any variable in the model, whereas a discriminative model allows sampling of the unobserved variables conditional on the observed variables.
- the model herein uses the power of discriminative training while still only learning a model of natural images, rather than learning a model that is specialized to a specific camera or image sensor.
- Filters that perform well in the embodiments described above tend to have a log-polar or “retinotopic” structure, in which the filter contains a large amount of high-frequency variation near the center of the filter, and contains low-frequency variation far from the center. Intuitively, this makes sense—when localizing the illumination color of an image, the model should pay close attention to chrominance variation near the white point, while only broadly considering chrominance variation far from the white point.
- Pyramid filtering works by constructing a Gaussian pyramid of the input signal (e.g., a 3-level, 5-level, or 7-level from N(u, v) using bi-linear downsampling), then filtering each scale with a small filter (e.g., a 3 ⁇ 3, 5 ⁇ 5, or 7 ⁇ 7 filter), and then collapsing the filtered pyramid down into an image (e.g., using bilinear upsampling).
- This process produces identical or near-identical output (ignoring the necessary approximations incurred by downsampling and upsampling) as convolving N(u, v) with a retinotopic-like filter, but is more efficient.
- this filter has few free parameters, so optimization and regularization are easy, and it can describe fine detail in the center while being smooth and coarse in shape far from the center.
- Regularization may occur by minimizing the squared 2-norm of the filter coefficients at each scale, all modulated by a single hyper-parameter ⁇ , as in Equation (20).
- a visualization of pyramid filtering can be seen in FIG. 5 .
- the top row of FIG. 5 depicts convolving a histogram with a filter that has strong detail in the center and coarse detail elsewhere.
- the bottom row depicts evaluating that same filter more efficiently by instead constructing a pyramid from the histogram, filtering each scale of the pyramid with a small filter, and then collapsing the filtered histogram. By using the latter approach, filtering speed is decreased.
- Pyramid filtering can be thought of computing computer vision features like shape context or geometric blur density at every position in the image, and then classifying each feature with a linear classifier.
- the pyramid approximation herein assumes that the sampling pattern of the feature be rectangular instead of polar, that the scales of the feature be discretized to powers of 2, and that the sampling patterns of the feature at each scale overlap.
- This technique of also applying a filter to each scale of a pyramid to approximate an image-space function also resembles convolution pyramids.
- the previously described algorithm can estimate the illumination L from an image I by filtering a histogram N constructed from the chrominance values of the pixels in I. Effectively, this model is a sophisticated kind of “gray world” algorithm, in that it tries to normalize the color of each pixel, but ignores spatial information. However, to obtain better performance, the color constancy algorithm may use additional sources of information, such as the color of edges or spatial neighborhoods.
- a set of histograms ⁇ N j ⁇ from a set of “augmented” images ⁇ I j ′ ⁇ may be filtered.
- the filtered responses may be summed before computing softmax probabilities.
- augmented images ⁇ I j ′ ⁇ by simply applying common image processing operations to I, such as applying a filter bank, median filters, morphological operations, etc.
- the image from which chrominance histograms are constructed should map color-scaling to the channels of the input image to shifts in chrominance histogram space. This means that the augmented images should preserve this property, and map a per-channel scaling to the same shift in histogram space.
- mapping should preserve scalar multiplication—a scaled-then-filtered version of a channel in the input image I should be equal to a filtered-then-scaled version of that channel. Additionally, the output of the mapping should be non-negative as the logarithm of these values may be taken.
- blur(•,w) is a boxfilter of width w.
- box filtering of an image applies a linear filter to an input image such that each pixel in the filtered image has a value equal to the average value of its neighboring pixels in the input image. For instance, a 3 ⁇ 3 box filter can be applied to each pixel of the input image to blur, sharpen, detect edges, and perform other effects to the input image.
- the function ⁇ (•,filt) convolves each channel of the image with some filter filt and then clamps the filtered value to be at least 0.
- the function g(•) computes a local norm of pixel values in I such that g(•,1,w) is a blur.
- the function ⁇ (•, ⁇ ,w) is a “max” filter, and ⁇ (•, ⁇ ,w) is a “min” filter.
- the function h(•) computes a normalized moment of pixel values, where g(•,2,w) computes the local standard deviation of pixel values—a kind of non-oriented edge/texture detector.
- I 1 ′ I ( 31 )
- I 2 ′ max ⁇ ( 0 , I ⁇ [ 0 - 1 0 - 1 5 - 1 0 - 1 0 ] )
- I 3 ′ blur ⁇ ( I 4 , 11 ) 1 / 4
- I 4 ′ blur ⁇ ( I 2 , 3 ) - blur ⁇ ( I , 3 ) 2 ( 34 )
- FIG. 6 depicts visualizations of the information captured by each of these channels.
- these four pyramid filters are learned, one for each channel.
- the individual filter responses are summed before computing softmax probabilities. Therefore, though the algorithm disclosed herein can use the pixel values of just input image I as its input, performance can be improved by using the set of “augmented” images as input.
- the extended model uses four augmented images which capture local edge and neighborhood statistics, in addition to the input image.
- FIG. 7 is a flow chart illustrating an example embodiment.
- the embodiment illustrated by FIG. 7 may be carried out by a computing device, such as digital camera device 100 .
- the embodiment can be carried out by other types of devices or device subsystems.
- the embodiment may be combined with any aspect or feature disclosed in this specification or the accompanying drawings.
- Block 700 of FIG. 7 may involve obtaining an input image.
- the input image may have a white point represented by chrominance values that define white color in the input image.
- Obtaining the input image may involve a computing device capturing the input image.
- Block 702 may involve, possibly based on colors of the input image, generating a two-dimensional chrominance histogram of the input image.
- generating the two-dimensional chrominance histogram may involve using a logarithm of a ratio of pixel values for each dimension of the histogram, normalizing the two-dimensional chrominance histogram to have a constant mass, and taking the square root of each bin of the two-dimensional chrominance histogram.
- Block 704 may involve convolving the two-dimensional chrominance histogram with a filter to create a two-dimensional heat map. Entries in the two-dimensional heat map may represent respective estimates of how close respective tints corresponding to the respective entries are to the white point of the input image.
- Block 706 may involve selecting an entry in the two-dimensional heat map that represents a particular value that is within a threshold of a maximum value in the heat map.
- the threshold may be within a certain percentage of the maximum value (e.g., 5%, 10%, 20%, etc.), or may be within a fixed offset of the maximum value.
- the particular value may be the maximum value or a value that is close to the maximum value.
- Block 708 may involve, possibly based on the selected entry, tinting the input image to form an output image.
- This tinting may involve applying the filter to the image, wherein the filter is parameterized by the selected entry.
- the output image may be more white-balanced than the input image.
- bin (u, v) in the two-dimensional chrominance histogram represents a number of pixels in the input image with chrominance values within a chrominance threshold of (u, v).
- u may represent a logarithm of a first quotient
- v may represent a logarithm of a second quotient.
- the first quotient may be of red pixel value in the input image divided by green pixel value in the input image.
- the second quotient may be of blue pixel value in the input image divided by green pixel value in the input image.
- the bins of the two-dimensional chrominance histogram may be weighted by luminances of the pixels therein.
- the filter may be trained based on a set of training chrominance histograms of respective training images, each associated with respective known illuminations of the respective training images.
- the filter may be trained using a normalized exponential function of a convolution of each training histogram with the filter.
- the filter may represent a distribution of colors in white-balanced scenes, and may be independent of tints of the training images.
- a plurality of augmented two-dimensional chrominance histograms may be generated from augmented versions of the input image.
- Each of the augmented versions of the input image may preserve scalar multiplication properties when filtered.
- Convolving the two-dimensional chrominance histogram with the filter may involve summing filtered responses of the plurality of augmented two-dimensional chrominance histograms before applying the normalized exponential function.
- color constancy may be based on a relation of the scaling of the color channels of an image to a translation of a histogram of the log-chromaticity of that image. In this way, color constancy can be addressed as a discriminative machine learning problem.
- Color constancy is just one possible application of machine learning to image processing. Others include facial detection, facial recognition, object recognition, image alignment, image merging, and so on. Each machine learning technique may involve iterative processing to converge on a result, and may also involve accessing data in a database of past results.
- digital camera device 100 is a mobile device, such as a smartphone
- this device may be constrained in terms of its processing capabilities and power usage, at least when compared to desktop or server computing devices.
- users of digital camera device 100 may expect image processing to take place in real-time. Consequently, it can be beneficial to implement certain aspects of an image processing pipeline in hardware. Doing so offloads processor-intensive aspects of image processing to dedicated hardware that is customized to operate at a high speeds while using a limited amount of power.
- the embodiments below can operate at an image capture rate of 30-60 frames per second while using less than 3 watts.
- FIG. 8 is an example hardware block diagram depicting hardware components configured to carry out variations of the procedures described herein.
- the embodiment of FIG. 8 may be combined with any aspect or feature disclosed in this specification or the accompanying drawings. Further, the arrangement illustrated in FIG. 8 can be modified or changed, and different hardware components may be used, without departing from the embodiments described herein.
- the embodiments of FIG. 8 may be referred to as a “system-on-a-chip,” or may be considered to be part of a “system-on-a-chip.”
- Image processing hardware components 800 are coupled to image capture components 802 and display/storage components 808 .
- Image capture components 802 may include any of camera components 224 , such as an aperture, shutter, recording surface, and/or lens.
- Display/storage components 808 may include a display screen of user interface 204 , upon which processed images can be displayed, and/or memory components, such as data storage 208 , in which processed images can be stored.
- Information generally flows from image capture components 802 , through image processing hardware components 800 , to display/storage components 808 , as denoted by the arrows in FIG. 8 .
- Image processing hardware components 800 include main image processing engine 804 , and image co-processing engine 806 .
- Main image processing engine 804 may include the core image processing pipeline, including raw correction module 810 , color processing and enhancement module 812 , as well as high-dynamic range (HDR) functionality.
- the HDR functionality may be split so that HDR is mainly executed in the main image processing engine 804 , while the image co-processing engine 806 may generate coefficients (or tables) used in HDR and provide these to the color processing and enhancement module 812 .
- main image processing engine 804 may be implemented on a GPU-based architecture.
- main image processing engine 804 may use graphics-based components for highly-parallel floating point vector operations on images.
- Image co-processing engine 806 may be an ASIC customized for linear, integer operations. These operations may facilitate one or more machine learning techniques, such as convolutional neural networks and structured prediction.
- Image co-processing engine 806 may include machine learning applications module 814 , as well as white-balance module 816 . While machine learning applications module 814 and white-balance module 816 are depicted separately in FIG. 8 , this is merely to illustrate where the white-balance features described herein may take place in image processing hardware components 800 . In some embodiments, white-balance module 816 may be combined into machine learning applications module 814 , for example.
- Main image processing engine 804 and image co-processing engine 806 may operate in parallel to one another.
- this increases the overall image processing speed of image processing hardware components 800 by parallelizing tasks that would otherwise be performed serially.
- the firmware that performs the operations of main image processing engine 804 and/or image co-processing engine 806 may be dynamically updated (e.g., as part of a standalone or general software update for digital camera device 100 ), which facilitates deploying ongoing improvements to the image processing techniques therein.
- image capture components 802 may capture one or more images. Once the capture of such an image is completed, the image may be passed to raw correction module 810 .
- the image may be one of a stream of captured images which may be processed by image processing hardware components 800 in a parallel fashion. For instance, main image processing engine 804 and image co-processing engine 806 may perform operations at the same time on two different representations of a particular input image. Also, different modules within main image processing engine 804 may operate on different input images at the same time.
- Raw correction module 810 may perform black level subtraction (e.g., to produce photometrically linear intensity estimates), lens shading correction (e.g., compensating for captured images that exhibit varying brightness across the lens's field of view), other forms of noise reduction, and so on. Thus, raw correction module 810 may produce a raw-corrected version of the input image. Raw correction module 810 may also produce a thumbnail version of the captured image (e.g., a 150 ⁇ 150 or 300 ⁇ 300 pixel version produced using downsampling). Raw correction module 810 may provide, to machine learning applications module 814 , one or more thumbnails of the raw-corrected image, as well as sensory data related to the image (e.g., gyroscope and accelerometer data stored as metadata in the image).
- black level subtraction e.g., to produce photometrically linear intensity estimates
- lens shading correction e.g., compensating for captured images that exhibit varying brightness across the lens's field of view
- other forms of noise reduction e.g., a
- Raw correction module 810 may also provide, to color processing and enhancement module 812 , a Bayer-filtered representation of the raw-corrected image (i.e., Bayer pixels).
- the Bayer-filtered representation may be an RGB representation with twice as much green content as that of red or blue.
- the Bayer-filtered representation is just one example of several possible representations.
- machine learning applications module 814 may perform one or more of scene analysis, facial detection, facial recognition, and so on. Machine learning applications module 814 may also provide this information to white-balance module 816 . Alternatively, machine learning applications module 814 may carry out the operations of white-balance module 816 .
- White-balance module 816 may perform the color correction operations described herein. As an example, these operations may include generating a two-dimensional chrominance histogram of an input image (e.g., one of the thumbnail images), convolving the two-dimensional chrominance histogram with a filter to create a two-dimensional heat map, selecting an entry in the two-dimensional heat map that represents a particular value that is within a threshold of a maximum value in the heat map, and determining a tint for the input image. Performing these operations may involve use of a convolutional neural network, as well as linear and integer processing, all of which may be provided by image co-processing engine 806 .
- white-balance module 816 may provide output coefficients to color processing and enhancement module 812 .
- These coefficients may include tinting parameters as well as the results of other operations of image co-processing engine 806 , such as scene analysis, facial detection, facial recognition, HDR, etc.
- the coefficients may serve as configuration parameters for color processing and enhancement module 812 .
- they may include RGB gains that can be used to produce a color correction matrix that modifies the color of the images slightly to map from image sensor RGB onto the human perceptual color space. Any predicted white-balance gain can determine color temperature and guide the selection of the color correction matrix, as well as the setting of tone curve, saturation, and so on.
- the combination of coefficients may improve the look of a certain scene, for example, bringing out the warm color from a sunset, or making skin tone look natural under various lighting conditions.
- Color processing and enhancement module 812 may receive the Bayer-filtered representation and the coefficients, and perform additional operations. These operations may include de-mosaicking (e.g., reconstructing a full color image from the Bayer-filtered representation), color balancing (adjusting the relative intensity of colors), tone mapping (mapping HDR pixel values to pixel values of a narrower range), adjusting image contrast, and so on. After applying one or more of these techniques, color processing and enhancement module 812 may provide a processed version of the input image to display/storage components 808 for either display on a screen of digital camera device 100 or storage in a memory of digital camera device 100 .
- de-mosaicking e.g., reconstructing a full color image from the Bayer-filtered representation
- color balancing adjusting the relative intensity of colors
- tone mapping mipping HDR pixel values to pixel values of a narrower range
- image contrast adjusting image contrast
- each step, block, and/or communication can represent a processing of information and/or a transmission of information in accordance with example embodiments.
- Alternative embodiments are included within the scope of these example embodiments.
- functions described as steps, blocks, transmissions, communications, requests, responses, and/or messages can be executed out of order from that shown or discussed, including substantially concurrent or in reverse order, depending on the functionality involved.
- more or fewer blocks and/or functions can be used with any of the ladder diagrams, scenarios, and flow charts discussed herein, and these ladder diagrams, scenarios, and flow charts can be combined with one another, in part or in whole.
- a step or block that represents a processing of information can correspond to circuitry that can be configured to perform the specific logical functions of a herein-described method or technique.
- a step or block that represents a processing of information can correspond to a module, a segment, or a portion of program code (including related data).
- the program code can include one or more instructions executable by a processor for implementing specific logical functions or actions in the method or technique.
- the program code and/or related data can be stored on any type of computer readable medium such as a storage device including a disk, hard drive, or other storage medium.
- the computer readable medium can also include non-transitory computer readable media such as computer-readable media that store data for short periods of time like register memory, processor cache, and random access memory (RAM).
- the computer readable media can also include non-transitory computer readable media that store program code and/or data for longer periods of time.
- the computer readable media may include secondary or persistent long term storage, like read only memory (ROM), optical or magnetic disks, compact-disc read only memory (CD-ROM), for example.
- the computer readable media can also be any other volatile or non-volatile storage systems.
- a computer readable medium can be considered a computer readable storage medium, for example, or a tangible storage device.
- a step or block that represents one or more information transmissions can correspond to information transmissions between software and/or hardware modules in the same physical device.
- other information transmissions can be between software modules and/or hardware modules in different physical devices.
- any enumeration of elements, blocks, or steps in this specification or the claims is for purposes of clarity. Thus, such enumeration should not be interpreted to require or imply that these elements, blocks, or steps adhere to a particular arrangement or are carried out in a particular order.
Abstract
Description
I r =W r L r (1)
I g =W g L g (2)
I b =W b L b (3)
I u=log(I g /I r) (4)
I v=log(I g /I b) (5)
W u=log(W g /W r) (6)
W v=log(W g /W b) (7)
I y=min(I r ,I g ,I b) (8)
W y=min(W r ,W g ,W b) (9)
L u=log(L g /L r) (10)
L v=log(L g /L b) (11)
W u =I u −L u (12)
W v =I v −L v (3)
N(u,v)=Σi I y (i) [|I u (i) −u|≦ε/2)
Where the square brackets represent an indicator function, and E is the bin-width of the histogram. (In practice, ε=0.025 and 256-bin histograms may be used; however, other values of E and other numbers of histogram bins may be used instead.)
({circumflex over (L)} u ,{circumflex over (L)} v)=argmaxu,v(N*F) (19)
Where * is the convolution operator.
And:
l=[exp(−u),1,exp(−v)]T (23)
l*=[exp(−u*),1,exp(−v*)]T (24)
ƒ(I,filt)=max(0,I*filt) (25)
g(I,p,w)=blur(I ρ ,w)1/ρ (26)
h(I,p,w)=(blur(I ρ ,w)−blur(I ρ ,w)ρ)1/ρ (27)
Where blur(•,w) is a boxfilter of width w. In general, box filtering of an image applies a linear filter to an input image such that each pixel in the filtered image has a value equal to the average value of its neighboring pixels in the input image. For instance, a 3×3 box filter can be applied to each pixel of the input image to blur, sharpen, detect edges, and perform other effects to the input image.
ƒ(αI,filt)=αƒ(I,filt) (28)
g(αI,p,w)=αg(I,p,w) (29)
h(αI,p,w)=αh(I,p,w) (30)
Claims (20)
Priority Applications (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/583,620 US9794540B2 (en) | 2015-04-17 | 2017-05-01 | Hardware-based convolutional color correction in digital images |
US15/703,571 US10091479B2 (en) | 2015-04-17 | 2017-09-13 | Hardware-based convolutional color correction in digital images |
US16/110,912 US10237527B2 (en) | 2015-04-17 | 2018-08-23 | Convolutional color correction in digital images |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/689,246 US9336582B1 (en) | 2015-04-17 | 2015-04-17 | Convolutional color correction |
US15/096,770 US9672604B2 (en) | 2015-04-17 | 2016-04-12 | Convolutional color correction |
US15/583,620 US9794540B2 (en) | 2015-04-17 | 2017-05-01 | Hardware-based convolutional color correction in digital images |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/096,770 Continuation-In-Part US9672604B2 (en) | 2015-04-17 | 2016-04-12 | Convolutional color correction |
Related Child Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/703,571 Continuation US10091479B2 (en) | 2015-04-17 | 2017-09-13 | Hardware-based convolutional color correction in digital images |
Publications (2)
Publication Number | Publication Date |
---|---|
US20170237961A1 US20170237961A1 (en) | 2017-08-17 |
US9794540B2 true US9794540B2 (en) | 2017-10-17 |
Family
ID=59562349
Family Applications (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/583,620 Active US9794540B2 (en) | 2015-04-17 | 2017-05-01 | Hardware-based convolutional color correction in digital images |
US15/703,571 Active US10091479B2 (en) | 2015-04-17 | 2017-09-13 | Hardware-based convolutional color correction in digital images |
US16/110,912 Active US10237527B2 (en) | 2015-04-17 | 2018-08-23 | Convolutional color correction in digital images |
Family Applications After (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US15/703,571 Active US10091479B2 (en) | 2015-04-17 | 2017-09-13 | Hardware-based convolutional color correction in digital images |
US16/110,912 Active US10237527B2 (en) | 2015-04-17 | 2018-08-23 | Convolutional color correction in digital images |
Country Status (1)
Country | Link |
---|---|
US (3) | US9794540B2 (en) |
Cited By (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20180007337A1 (en) * | 2015-04-17 | 2018-01-04 | Google Inc. | Hardware-Based Convolutional Color Correction in Digital Images |
US10305604B1 (en) * | 2017-12-28 | 2019-05-28 | Facebook, Inc. | Coherent aperture combining using machine learning |
US10979640B2 (en) * | 2017-06-13 | 2021-04-13 | Adobe Inc. | Estimating HDR lighting conditions from a single LDR digital image |
US11403783B2 (en) * | 2019-11-14 | 2022-08-02 | Alibaba Group Holding Limited | Techniques to dynamically gate encoded image components for artificial intelligence tasks |
US20220295030A1 (en) * | 2019-11-13 | 2022-09-15 | Huawei Technologies Co., Ltd. | Automatic white balance correction for digital images using multi-hypothesis classification |
US11537379B2 (en) | 2019-11-07 | 2022-12-27 | Samsung Electronics Co., Ltd. | Context based application providing server and control method thereof |
Families Citing this family (23)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10558848B2 (en) * | 2017-10-05 | 2020-02-11 | Duelight Llc | System, method, and computer program for capturing an image with correct skin tone exposure |
CN110246110B (en) * | 2018-03-01 | 2023-08-18 | 腾讯科技（深圳）有限公司 | Image evaluation method, device and storage medium |
EP3776474A1 (en) | 2018-04-09 | 2021-02-17 | Dolby Laboratories Licensing Corporation | Hdr image representations using neural network mappings |
CN108960081B (en) * | 2018-06-15 | 2021-07-30 | 熵基科技股份有限公司 | Palm image recognition method and device and computer readable storage medium |
CN109064434B (en) * | 2018-06-28 | 2021-01-08 | 广州视源电子科技股份有限公司 | Image enhancement method and device, storage medium and computer equipment |
US10803565B2 (en) * | 2018-07-10 | 2020-10-13 | Intel Corporation | Low-light imaging using trained convolutional neural networks |
CN108965846A (en) * | 2018-09-07 | 2018-12-07 | 晶晨半导体(上海)股份有限公司 | Adjust method, system and the display of white balance |
US10791310B2 (en) * | 2018-10-02 | 2020-09-29 | Intel Corporation | Method and system of deep learning-based automatic white balancing |
US10931853B2 (en) | 2018-10-18 | 2021-02-23 | Sony Corporation | Enhanced color reproduction for upscaling |
CN109859110B (en) * | 2018-11-19 | 2023-01-06 | 华南理工大学 | Hyperspectral image panchromatic sharpening method based on spectrum dimension control convolutional neural network |
TWI693592B (en) * | 2019-01-28 | 2020-05-11 | 緯創資通股份有限公司 | Display device and display method thereof |
CN109951615B (en) * | 2019-04-11 | 2020-10-13 | 北京大生在线科技有限公司 | Video color correction method and system |
US11044450B2 (en) * | 2019-06-07 | 2021-06-22 | Adobe Inc. | Image white balancing |
CN112204957A (en) * | 2019-09-20 | 2021-01-08 | 深圳市大疆创新科技有限公司 | White balance processing method and device, movable platform and camera |
KR102094780B1 (en) * | 2019-11-22 | 2020-03-30 | 주식회사 핏펫 | A method and system for measuring biochemical information using color space conversion |
US11687778B2 (en) | 2020-01-06 | 2023-06-27 | The Research Foundation For The State University Of New York | Fakecatcher: detection of synthetic portrait videos using biological signals |
CN111340734B (en) * | 2020-03-02 | 2022-03-29 | 浙江大学 | Image purple boundary correction method using convolutional neural network model |
CN112532960B (en) * | 2020-12-18 | 2022-10-25 | Oppo（重庆）智能科技有限公司 | White balance synchronization method and device, electronic equipment and storage medium |
US11606544B2 (en) * | 2021-06-08 | 2023-03-14 | Black Sesame Technologies Inc. | Neural network based auto-white-balancing |
CN113344011B (en) * | 2021-06-25 | 2023-08-08 | 北京印刷学院 | Color constancy method based on cascade fusion feature confidence weighting |
CN113643202A (en) * | 2021-07-29 | 2021-11-12 | 西安理工大学 | Low-light-level image enhancement method based on noise attention map guidance |
CN114693567B (en) * | 2022-05-30 | 2022-09-20 | 深圳思谋信息科技有限公司 | Image color adjusting method and device, computer equipment and storage medium |
CN117346657B (en) * | 2023-10-07 | 2024-03-19 | 上海勃傲自动化系统有限公司 | Event triggering method and system based on 5G camera |
Citations (16)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5495428A (en) * | 1993-08-31 | 1996-02-27 | Eastman Kodak Company | Method for determining color of an illuminant in an image based on histogram data |
US5729691A (en) * | 1995-09-29 | 1998-03-17 | Intel Corporation | Two-stage transform for video signals |
US6043909A (en) * | 1996-02-26 | 2000-03-28 | Imagicolor Corporation | System for distributing and controlling color reproduction at multiple sites |
US6075905A (en) | 1996-07-17 | 2000-06-13 | Sarnoff Corporation | Method and apparatus for mosaic image construction |
US6411953B1 (en) | 1999-01-25 | 2002-06-25 | Lucent Technologies Inc. | Retrieval and matching of color patterns based on a predetermined vocabulary and grammar |
US20030194125A1 (en) | 2002-04-10 | 2003-10-16 | Hubel Paul M. | White point estimation using color by convolution |
US7113649B2 (en) | 2002-06-24 | 2006-09-26 | Eastman Kodak Company | Enhancing the tonal characteristics of digital images |
US20100321539A1 (en) | 2009-06-22 | 2010-12-23 | Canon Kabushiki Kaisha | Image processing apparatus and image processing method |
US20110081081A1 (en) * | 2009-10-05 | 2011-04-07 | Smith Gregory C | Method for recognizing objects in images |
US8149459B2 (en) | 2009-02-24 | 2012-04-03 | Xerox Corporation | Mapping an out-of-gamut color to a surface of a color gamut |
US8155454B2 (en) | 2006-07-20 | 2012-04-10 | Qualcomm Incorporated | Method and apparatus for encoder assisted post-processing |
US8179402B2 (en) | 2007-10-31 | 2012-05-15 | Canon Kabushiki Kaisha | Generating colorimetric profiles from spectral data and user input |
US8253752B2 (en) | 2006-07-20 | 2012-08-28 | Qualcomm Incorporated | Method and apparatus for encoder assisted pre-processing |
US20130093917A1 (en) * | 2011-10-12 | 2013-04-18 | Apple Inc. | Alleviating Dominant Color Failure in Automatic White Balance Using Histogram Trimming |
US8988536B2 (en) | 2010-12-23 | 2015-03-24 | Samsung Electronics Co., Ltd. | Image processing circuit, method of operation thereof, and digital camera including same |
US9336582B1 (en) * | 2015-04-17 | 2016-05-10 | Google Inc. | Convolutional color correction |
Family Cites Families (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
JP3738939B2 (en) * | 1998-03-05 | 2006-01-25 | Ｋｄｄｉ株式会社 | Moving image cut point detection device |
US7558320B2 (en) * | 2003-06-13 | 2009-07-07 | Microsoft Corporation | Quality control in frame interpolation with motion analysis |
KR100841429B1 (en) | 2006-11-30 | 2008-06-25 | 삼성전기주식회사 | Apparatus to automatically controlling white balance and method thereof |
US8780225B2 (en) | 2011-10-12 | 2014-07-15 | Apple Inc. | Use of noise-optimized selection criteria to calculate scene white points |
US9794540B2 (en) * | 2015-04-17 | 2017-10-17 | Google Inc. | Hardware-based convolutional color correction in digital images |
-
2017
- 2017-05-01 US US15/583,620 patent/US9794540B2/en active Active
- 2017-09-13 US US15/703,571 patent/US10091479B2/en active Active
-
2018
- 2018-08-23 US US16/110,912 patent/US10237527B2/en active Active
Patent Citations (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5495428A (en) * | 1993-08-31 | 1996-02-27 | Eastman Kodak Company | Method for determining color of an illuminant in an image based on histogram data |
US5729691A (en) * | 1995-09-29 | 1998-03-17 | Intel Corporation | Two-stage transform for video signals |
US6043909A (en) * | 1996-02-26 | 2000-03-28 | Imagicolor Corporation | System for distributing and controlling color reproduction at multiple sites |
US6075905A (en) | 1996-07-17 | 2000-06-13 | Sarnoff Corporation | Method and apparatus for mosaic image construction |
US6411953B1 (en) | 1999-01-25 | 2002-06-25 | Lucent Technologies Inc. | Retrieval and matching of color patterns based on a predetermined vocabulary and grammar |
US20030194125A1 (en) | 2002-04-10 | 2003-10-16 | Hubel Paul M. | White point estimation using color by convolution |
US7200264B2 (en) | 2002-04-10 | 2007-04-03 | Hewlett-Packard Development Company, L.P. | White point estimation using color by convolution |
US7113649B2 (en) | 2002-06-24 | 2006-09-26 | Eastman Kodak Company | Enhancing the tonal characteristics of digital images |
US8155454B2 (en) | 2006-07-20 | 2012-04-10 | Qualcomm Incorporated | Method and apparatus for encoder assisted post-processing |
US8253752B2 (en) | 2006-07-20 | 2012-08-28 | Qualcomm Incorporated | Method and apparatus for encoder assisted pre-processing |
US8179402B2 (en) | 2007-10-31 | 2012-05-15 | Canon Kabushiki Kaisha | Generating colorimetric profiles from spectral data and user input |
US8149459B2 (en) | 2009-02-24 | 2012-04-03 | Xerox Corporation | Mapping an out-of-gamut color to a surface of a color gamut |
US20100321539A1 (en) | 2009-06-22 | 2010-12-23 | Canon Kabushiki Kaisha | Image processing apparatus and image processing method |
US20110081081A1 (en) * | 2009-10-05 | 2011-04-07 | Smith Gregory C | Method for recognizing objects in images |
US8988536B2 (en) | 2010-12-23 | 2015-03-24 | Samsung Electronics Co., Ltd. | Image processing circuit, method of operation thereof, and digital camera including same |
US20130093917A1 (en) * | 2011-10-12 | 2013-04-18 | Apple Inc. | Alleviating Dominant Color Failure in Automatic White Balance Using Histogram Trimming |
US9007484B2 (en) | 2011-10-12 | 2015-04-14 | Apple Inc. | Alleviating dominant color failure in automatic white balance using histogram trimming |
US9336582B1 (en) * | 2015-04-17 | 2016-05-10 | Google Inc. | Convolutional color correction |
US9672604B2 (en) * | 2015-04-17 | 2017-06-06 | Google Inc. | Convolutional color correction |
Non-Patent Citations (47)
Title |
---|
Adams et al., "Fast High-Dimensional Filtering Using the Permutohedral Lattice," Eurographics, 2010, pp. 753-762, vol. 29, No. 2. |
Alahi, Alexandre et al., "Freak: Fast Retina Keypoint," IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2012, pp. 510-517. |
Barnard, Kobus et al., "A Comparison of Computational Color Constancy Algorithms-Part II: Experiments With Image Data," IEEE Transactions on Image Processing, 2002, pp. 985-996, vol. 11, No. 9. |
Barnard, Kobus et al., "A Comparison of Computational Color Constancy Algorithms—Part II: Experiments With Image Data," IEEE Transactions on Image Processing, 2002, pp. 985-996, vol. 11, No. 9. |
Barnard, Kobus, "Improvements to Gamut Mapping Colour Constancy Algorithms," in Computer Vision-ECCV 2000, pp. 390-403, Springer Berlin Heidelberg. |
Barnard, Kobus, "Improvements to Gamut Mapping Colour Constancy Algorithms," in Computer Vision—ECCV 2000, pp. 390-403, Springer Berlin Heidelberg. |
Barron et al., "Fast Bilateral-Space Stereo for Synthetic Defocus," CVPR, 2015, 9 pages. |
Barron, Jonathan T. et al., "Volumetric Semantic Segmentation using Pyramid Context Features," IEEE International Conference on Computer Vision (ICCV), 2013, pp. 3448-3455. |
Barron, Jonathan T., "Convolutional Color Constancy," 2015 IEEE International Conference on Computer Vision, 2015, pp. 379-387. |
Barrow H. G. et al. "Recovering Intrinsic Scene Characteristics From Images," Computer Vision Systems, 1978, pp. 3-26, A. Hanson & E. Riseman (eds.), New York: Academic Press. |
Belongie, Serge et al., "Shape Context: A new descriptor for shape matching and object recognition," in NIPS, 2000, 7 pages, vol. 2. |
Berens et al., "Log-opponent chromatically coding of colour space," IEEE, 2000, pp. 206-211. |
Berg, Alexander C. et al., "Geometric Blur for Template Matching," Proceedings of the 2001 IEEE Computer Society Conference on Computer Vision and Pattern Recognition, (CVPR 2001), IEEE, 2001, 8 pages, vol. 1. |
Berwick et al., "A Chromaticity Space for Specularity, Illumination Color- and Illumination Pose-Invariant 3-D Object Recognition," Sixth International Conference on Computer Vision, 1998, pp. 165-170. |
Bianco et al., "Computational Color Constancy," 3rd European Workshop on Visual Information Processing, IEEE, 2011, pp. 1-7. |
Bianco, Simone et al., "Color Constancy Using Faces," IEEE Conference on Computer Vision and Pattern Recognition (CVPR), IEEE, 2012, pp. 65-72. |
Brainard, David H. et al., "Analysis of the retinex theory of color vision," J. Opt. Soc. Am. A, Oct. 1986, pp. 1651-1661, vol. 3, No. 10. |
Buchsbaum, G., "A spatial processor model for object colour perception," Journal of the Franklin Institute, 1980, pp. 1-26, vol. 310, No. 1. |
Chakrabarti, Ayan, et al., "Color constancy with spatia-spectral statistics," IEEE Transactions on Pattern Analysis and Machine Intelligence, 2012, pp. 1509-1519, vol. 34, No. 8. |
Chen, S. et al., "Real-time edge-aware image processing with the bilateral grid," ACM SIGGRAPH, 2007, pp. 1-9. |
Cheng, Dongliang et al., "Illuminant Estimation for Color Constancy: Why spatial-domain methods work and the role of the color distribution," JOSA A, 2014, pp. 1049-1058, vol. 31, No. 5. |
Esme, Biglin, "Kalman Filter for Dummies," Bilgin's Blog, Mar. 2009, 5 pages, http://bilgin.esme.org/BitsBytes/KalmanFilterforDummies.aspx. |
Ex Parte Quayle Action mailed on Dec. 30, 2015, issued in connection with U.S. Appl. No. 14/720,747, filed May 23, 2015, 6 pages. |
Farbman, Zeev et al., "Convolution Pyramids," ACM Trans. Graph., 2011, pp. 1-9, vol. 30, No. 6. |
Farnebäck, Gunnar, "Polynomial Expansion for Orientation and Motion Estimation," Linköping Studies in Science and Technology, Dissertations, Nov. 2002, pp. 1-182, http:://lmi.bwh.harvard.edu/papers/pdfs/gunnar/farneback02.pdf. |
Finlayson et al., "Color constancy at a pixel," Journal of the Optical Society of America, 2001, pp. 253-264, vol. 18, No. 2. |
Finlayson et al., "Shades of Gray and Colour Constancy," IS&T/SID Twelfth Color Imaging Conference, 2004, pp. 37-41. |
Finlayson, Graham D., "Corrected-Moment Illuminant Estimation," IEEE International Conference on Computer Vision (ICCV), IEEE, 2013, pp. 1904-1911. |
Gastal et al., Domain transform for edge-aware image and video processing. SIGGRAPH, 2011, 11 pages. |
Gaussian, "The Exponential Family of Distributions," last accessed May 26, 2015, 13 pages, http://ww.cs.columbia.edu/˜jebara/4771/tutorials/lecture12.pdf. |
Gehler, Peter V., et al., "Bayesian Color Constancy Revisited," IEEE Conference on Computer Vision and Pattern Recognition, CVPR 2008, IEEE, 2008, pp. 1-8. |
Gijsenij, Arjan et al., "Color Constancy Using Natural Image Statistics and Scene Semantics," IEEE Transactions on Pattern Analysis and Machine Intelligence, 2011, pp. 687-698, vol. 33, No. 4. |
Gijsenij, Arjan et al., "Computational Color Constancy: Survey and Experiments," IEEE Transactions on Image Processing, 2010, pp. 2475-2489, vol. 20, No. 9. |
Gilchrist, Alan, Seeing Black and White, Oxford University Press, 2006, all pages. |
International Searching Authority, International Search Report and Written Opinion dated Jul. 28, 2016, issued in connection with International Patent Application No. PCT/US2016/027031, filed on Apr. 12, 2016, 13 pages. |
Joze, Hamid Reza Vaezi et al., "The Role of Bright Pixels in Illumination Estimation." In Color and Imaging Conference, Society for Imaging Science and Technology, 2012, pp. 41-46, vol. 2012, No. 1. |
Kalman filter, Wikipedia, http://en.wikipedia.org/wiki/Kalman-filter#Information-filter, last accessed May 26, 2015, 26 pages. |
Kalman filter, Wikipedia, http://en.wikipedia.org/wiki/Kalman—filter#Information—filter, last accessed May 26, 2015, 26 pages. |
Lewis, J.P., "Fast Normalized Cross-Correlation," Expanded Version of paper from Vision Interface, 1995, 7 pages. |
Notice of Allowance mailed on Feb. 24, 2016, issued in connection with U.S. Appl. No. 14/720,747, filed May 23, 2015, 7 pages. |
Notice of Allowance mailed on Feb. 8, 2016, issued in connection with U.S. Appl. No. 14/689,246, filed Apr. 17, 2015, 10 pages. |
Rowse, Darren, "Introduction to White Balance," Digital Photography School, 2014, 5 pages. |
Shi, Lilong et al., "Shi's Re-processed Version of the Gehler Color Constancy Dataset of 568 Images," Simon Fraser University (2010), http://www.cs.sfu.ca/˜colour/data, 3 pages. |
Taskar, Ben et al., "Learning Structured Prediction Models: A Large Margin Approach," In Proceedings of the 22nd International Conference on Machine Learning, ACM, 2005, 235 pages. |
Tomasi et al., "Bilateral filtering for gray and color images," Proceedings of the 1998 IEEE International conference on Computer Vision (ICCV) Bombay, India, 1998, 8 pages. |
Van De Weijer, Joost et al., "Edge-Based Color Constancy," IEEE Transactions on Image Processing, 2007, pp. 2207-2214, vol. 16, No. 9. |
Welch et al., "An Introduction to the Kalman Filter, Course 8," SIGGRAPH, 2001, pp. 1-81. |
Cited By (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20180007337A1 (en) * | 2015-04-17 | 2018-01-04 | Google Inc. | Hardware-Based Convolutional Color Correction in Digital Images |
US10091479B2 (en) * | 2015-04-17 | 2018-10-02 | Google Llc | Hardware-based convolutional color correction in digital images |
US20180367774A1 (en) * | 2015-04-17 | 2018-12-20 | Google Llc | Convolutional Color Correction in Digital Images |
US10237527B2 (en) * | 2015-04-17 | 2019-03-19 | Google Llc | Convolutional color correction in digital images |
US10979640B2 (en) * | 2017-06-13 | 2021-04-13 | Adobe Inc. | Estimating HDR lighting conditions from a single LDR digital image |
US10305604B1 (en) * | 2017-12-28 | 2019-05-28 | Facebook, Inc. | Coherent aperture combining using machine learning |
US10917179B2 (en) * | 2017-12-28 | 2021-02-09 | Facebook, Inc. | Coherent aperture combining using machine learning |
US11537379B2 (en) | 2019-11-07 | 2022-12-27 | Samsung Electronics Co., Ltd. | Context based application providing server and control method thereof |
US20220295030A1 (en) * | 2019-11-13 | 2022-09-15 | Huawei Technologies Co., Ltd. | Automatic white balance correction for digital images using multi-hypothesis classification |
US11949996B2 (en) * | 2019-11-13 | 2024-04-02 | Huawei Technologies Co., Ltd. | Automatic white balance correction for digital images using multi-hypothesis classification |
US11403783B2 (en) * | 2019-11-14 | 2022-08-02 | Alibaba Group Holding Limited | Techniques to dynamically gate encoded image components for artificial intelligence tasks |
Also Published As
Publication number | Publication date |
---|---|
US10091479B2 (en) | 2018-10-02 |
US10237527B2 (en) | 2019-03-19 |
US20180007337A1 (en) | 2018-01-04 |
US20180367774A1 (en) | 2018-12-20 |
US20170237961A1 (en) | 2017-08-17 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US10237527B2 (en) | Convolutional color correction in digital images | |
US9672604B2 (en) | Convolutional color correction | |
US10949958B2 (en) | Fast fourier color constancy | |
US9749551B2 (en) | Noise models for image processing | |
Delbracio et al. | Mobile computational photography: A tour | |
JP6395810B2 (en) | Reference image selection for motion ghost filtering | |
US8866928B2 (en) | Determining exposure times using split paxels | |
US9117134B1 (en) | Image merging with blending | |
US9131201B1 (en) | Color correcting virtual long exposures with true long exposures | |
US20140347521A1 (en) | Simulating High Dynamic Range Imaging with Virtual Long-Exposure Images | |
Singh et al. | Weighted least squares based detail enhanced exposure fusion | |
Tan et al. | Green channel guiding denoising on bayer image | |
Singh et al. | Detail Enhanced Multi-Exposer Image Fusion Based on Edge Perserving Filters | |
Zini et al. | Shallow Camera Pipeline for Night Photography Enhancement | |
Szeliski et al. | Computational photography | |
Shaojie | Computational low-light flash photography |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:BARRON, JONATHAN T.;TSAI, YUN-TA;REEL/FRAME:042211/0266Effective date: 20170501 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044129/0001Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
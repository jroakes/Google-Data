US20200258508A1 - Interfacing between digital assistant applications and navigation applications - Google Patents
Interfacing between digital assistant applications and navigation applications Download PDFInfo
- Publication number
- US20200258508A1 US20200258508A1 US16/865,096 US202016865096A US2020258508A1 US 20200258508 A1 US20200258508 A1 US 20200258508A1 US 202016865096 A US202016865096 A US 202016865096A US 2020258508 A1 US2020258508 A1 US 2020258508A1
- Authority
- US
- United States
- Prior art keywords
- client device
- navigation application
- processing system
- data processing
- point locations
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
Images
Classifications
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/22—Procedures used during a speech recognition process, e.g. man-machine dialogue
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/26—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00 specially adapted for navigation in a road network
- G01C21/34—Route searching; Route guidance
- G01C21/3453—Special cost functions, i.e. other than distance or default speed limit of road segments
- G01C21/3476—Special cost functions, i.e. other than distance or default speed limit of road segments using point of interest [POI] information, e.g. a route passing visible POIs
-
- G—PHYSICS
- G01—MEASURING; TESTING
- G01C—MEASURING DISTANCES, LEVELS OR BEARINGS; SURVEYING; NAVIGATION; GYROSCOPIC INSTRUMENTS; PHOTOGRAMMETRY OR VIDEOGRAMMETRY
- G01C21/00—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00
- G01C21/26—Navigation; Navigational instruments not provided for in groups G01C1/00 - G01C19/00 specially adapted for navigation in a road network
- G01C21/34—Route searching; Route guidance
- G01C21/36—Input/output arrangements for on-board computers
- G01C21/3605—Destination input or retrieval
- G01C21/3608—Destination input or retrieval using speech input, e.g. using speech recognition
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/08—Speech classification or search
- G10L15/18—Speech classification or search using natural language modelling
- G10L15/1815—Semantic context, e.g. disambiguation of the recognition hypotheses based on word meaning
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/08—Speech classification or search
- G10L15/18—Speech classification or search using natural language modelling
- G10L15/1822—Parsing for meaning understanding
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/22—Procedures used during a speech recognition process, e.g. man-machine dialogue
- G10L2015/223—Execution procedure of a spoken command
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/22—Procedures used during a speech recognition process, e.g. man-machine dialogue
- G10L2015/226—Procedures used during a speech recognition process, e.g. man-machine dialogue using non-speech characteristics
-
- G—PHYSICS
- G10—MUSICAL INSTRUMENTS; ACOUSTICS
- G10L—SPEECH ANALYSIS OR SYNTHESIS; SPEECH RECOGNITION; SPEECH OR VOICE PROCESSING; SPEECH OR AUDIO CODING OR DECODING
- G10L15/00—Speech recognition
- G10L15/22—Procedures used during a speech recognition process, e.g. man-machine dialogue
- G10L2015/226—Procedures used during a speech recognition process, e.g. man-machine dialogue using non-speech characteristics
- G10L2015/228—Procedures used during a speech recognition process, e.g. man-machine dialogue using non-speech characteristics of application context
Definitions
- Digital assistant applications can operate in a networked computer environment in which processing associated with functionality provided at a client device is performed at a server connected to the client device by way of a network.
- the server can be provided with data associated with a request at the client device by way of the network.
- Excessive network transmissions, packet-based or otherwise, of network traffic data between computing devices can prevent a computing device from properly processing the network traffic data, completing an operation related to the network traffic data, or responding timely to the network traffic data.
- the excessive network transmissions of network traffic data can also complicate data routing or degrade the quality of the response when the responding computing device is at or above its processing capacity, which may result in inefficient bandwidth utilization, consumption of computing resources, and depletion of battery life.
- a portion of the excessive network transmissions can include transmissions for requests that are not valid requests. Additional challenges exist in the provision of a speech-based interface with applications that typically operate as a graphical user interface, particularly in such a networked environment in which it is desirable to minimize excessive network transmissions.
- a system to interface among multiple applications in a networked computer environment can include a data processing system having one or more processors.
- a navigation interface component executed on the data processing system can access a navigation application executing on a first client device to retrieve a plurality of point locations within a reference frame corresponding to a geographic region displayed in a viewport of the navigation application. Each point location of the plurality of locations can have an identifier.
- a natural language processor component executed on the data processing system can receive an input audio signal detected by a sensor of at least one of the first client and a second client device. The natural language processor component can parse the input audio signal to identify a request and a referential word.
- the natural language processor component can identify, responsive to the identification of the request, a point location from the plurality of point locations within the reference frame based on the referential word parsed from the input audio signal and the identifier for the point location.
- An action handler component executed on the data processing system can generate an action data structure including the point location identified responsive to the detection of the input audio signal.
- the action handler component can transmit the action data structure to the first client device to cause the navigation application to initiate a navigation guidance process using the point location.
- a method of interfacing among multiple applications in a networked computer environment can include accessing a navigation application executing on a first client device to retrieve a plurality of point locations within a reference frame corresponding to a geographic region displayed in a viewport of the navigation application. Each point location of the plurality of locations can have an identifier.
- the method can include receiving an input audio signal detected by a sensor of at least one of the first client and a second client device.
- the method can include parsing the input audio signal to identify a request and a referential word.
- the method can include identifying, responsive to identifying the request, a point location from the plurality of point locations within the reference frame based on the referential word parsed from the input audio signal and the identifier for the point location.
- the method can include generating an action data structure including the point location identified responsive to the detection of the input audio signal.
- the method can include transmitting the action data structure to the first client device to cause the navigation application to initiate a navigation guidance process using the point location.
- the navigation interface component may access the navigation application to determine a first portion of the reference frame corresponding to the geographic region displayed concurrently to the receipt of the input audio signal and to determine a second portion of the reference frame corresponding to the geographic region previously displayed in the viewport based on a velocity of the first client device acquired from an inertial motion unit.
- the natural language processor component may identify the point location from the plurality of point locations within the reference frame based on a travel direction of at least one of the first client and the second client device determined using data from an inertial motion unit.
- the navigation interface component may access the navigation application to retrieve the plurality of point locations within the reference frame having a first portion corresponding to the geographic region and to a second geographic region within a defined proximity about a destination location of a path routing operation of the navigation guidance process; and the natural language processor component to: determine that the referential word is related to the second portion corresponding to the second geographic region and not to the first portion corresponding to the geographic region; and identify the point location from the plurality of point locations within the portion based on the determination that the referential word is related to the second portion.
- the navigation interface component may access the navigation application to retrieve a first location identifier of the first client device within the reference frame corresponding to the geographic region and a plurality of second location identifiers corresponding to the plurality of point locations within the reference frame; and the natural language processor component may identify the point location from the plurality of point locations based on the first location identifier of the first client device and the plurality of second location identifiers corresponding to the plurality of point locations.
- the navigation interface component may access the navigation application to retrieve a plurality of search terms received within a defined time window prior to the receipt of the input audio signal; and the natural language processor component may: determine, for each point location of the plurality of point locations and each search term of the plurality of search terms, a semantic distance between the identifier of the point location and the search term using a semantic knowledge graph; and select, for the identification of the point location, a subset of point locations from the plurality of point locations based on the plurality of semantic distances between the plurality of identifiers and the plurality of search terms.
- the natural language processor component may: parse the input audio signal to identify an auxiliary word different from the referential word; determine a subset area of the viewport of the navigation application based on the auxiliary word; and select, for the identification of the point location, a subset of point locations from the plurality of point locations corresponding to the subset area of the viewport determined based on the auxiliary word.
- the natural language processor component may: receive a second input audio signal detected by the sensor of at least one of the first client and the second client device; determine that a time elapsed between the receipt of the second input audio signal and the receipt of the input audio signal is less than a defined threshold; parse, responsive to the determination that the elapsed time is less than the defined threshold, the second input audio signal to identify a second referential word; select, for the identification of the point location, a subset of point locations from the plurality of point locations based on the second referential word.
- the natural language processor component may: determine, for each point location of the plurality of point location, an indexical measure between the referential word and the identifier for the point location, the indexical measure indicating a likelihood that the referential word denotes the identifier for the point location; and identify the point location from the plurality of point locations within the reference frame based on the plurality of indexical measures for the corresponding plurality of point locations.
- the natural language processor component may: determine, for each point location of the plurality of point locations, a semantic distance between the referential word and the identifier of the point location using a semantic knowledge graph; and identify the point location from the plurality of point locations within the reference frame based on the plurality of semantic distances for the corresponding plurality of point locations.
- the natural language processor component may determine a request type corresponding to a location finder operation of a plurality of operations to be performed by the navigation application based on the request; and the action handler component to generate the action data structure including the request type and to transmit the action data structure to the first client device to cause the navigation application to initiate the location finder operation of the navigational guidance process corresponding to the request type to present the point location in the geographic region displayed in the viewport.
- the natural language processor component may determine a request type corresponding to a path routing operation of a plurality of operations to be performed by the navigation application based on the request; and the action handler component to generate the action data structure including the request type and to transmit the action data structure to the first client device to cause the navigation application to initiate the path routing operation of the navigational guidance process corresponding to the request type to identify a travel path to the point location as a destination location.
- the action handler component may receive a response from the first client device executing the navigation application for at least one of a textual output or an output audio signal.
- FIG. 1 illustrates a block diagram of an example system to interface among multiple applications in a networked computer environment, in accordance with an example of the present disclosure.
- FIG. 2 illustrates a sequence diagram of an example data flow to interface among multiple applications in a networked computer environment in the system illustrated in FIG. 1 , in accordance with an example of the present disclosure.
- FIG. 3 illustrates a client computing device with request and response messages in relation to a navigational application, in accordance with an example of the present disclosure.
- FIG. 4 illustrates a flow diagram of a method to generate voice-activated threads in a networked computer environment, in accordance with an example of the present disclosure.
- FIG. 5 illustrates a flow diagram of a method to interface among multiple applications in a networked computer environment using the example system illustrated in FIG. 1 , in accordance with an example of the present disclosure.
- FIG. 6 is a block diagram of an example computer system.
- a digital assistant application can interface with agents via exchanging application data and invoking functions in accordance with an application programming interface (API).
- API application programming interface
- the digital assistant application can parse the input audio signal to identify words from the input audio signal.
- the digital assistant application can determine that the words refer to a function of a particular agent.
- the digital assistant application can invoke functions of the agent referred to in the input audio signal.
- the capabilities of the digital assistant application can be augmented.
- One such agent can be a navigation application (sometimes referred to as a Global Positioning System (GPS) navigator).
- the navigation application can display a top-down view of a map of a geographic region via a viewport.
- the map can define elevation contours, water depth, regions, artificial features, and transportation networks (e.g., roads, pedestrian walkways, bike paths, and railways).
- the map can also include a multitude of point locations linked together via paths representing the transportation network. Each point location can refer to a point of interest on the vector map, such as a restaurant, a gas station, a landmark, a mountain, or a lake, among others.
- Each point location can be labeled with geographic coordinates and an identifier.
- the identifier can be a name or a descriptor of the point of interest. For example, a point location corresponding to a restaurant may have “ABC Pizzeria” as the name and “restaurant” and “pizza” as descriptors.
- the portion of the map visible through the viewport of the navigation application can be modified.
- the navigation application can identify to a portion of the map that is visible through the viewport as the reference frame for the end-user.
- the navigation application can also perform various navigation guidance functions with respect to the map displayed through the viewport.
- the navigation guidance functions of the navigation application can include a location finder operation and a path finding operation.
- the location operation can be invoked to a find a particular point of interest on the map.
- the navigation application can receive a search term for points of interest on the map.
- the navigation application can identify all the point locations with identifiers matching the search term that are visible through the viewport of the navigation application.
- the path finding operation can be invoked to determine a route from a current location to the point of interest of the map.
- the navigation application can identify a current location and the point location corresponding to the requested point of interest.
- the point location may have been identified using the search term matching the identifier for the point location visible through the viewport.
- the navigation application can apply a path finding algorithm to determine the route between the current location and the point location via the paths connecting the two as defined within the reference frame.
- the difficulty with interfacing the digital assistant application with the navigation application may be that the digital assistant application relies on audio input and output signals whereas the navigation application may rely on visual presentation and input received by way of touch interaction with the visual presentation (e.g., via touch screen, keyboard, or mouse).
- the navigation application can have access to a current location or a current focus of the client device about which a reference frame for the client device can be recognized.
- the digital assistant application may lack any factoring of the current location, the current focus, or the reference frame within the map accessible through the navigation application.
- the digital assistant application may not have access to the point locations and paths defined in the map that is visible through the viewport.
- the digital assistant application may be unable to determine which point location on the map a request identified from the input audio signal is referring to. Moreover, even if the request identified from parsing the input audio signal is converted to a textual input for the navigation application, the navigation application may be unable to distinguish which point location the textual input is referencing.
- the navigation application may lack natural language processing capabilities, thereby further exacerbating the inability to distinguish when the textual input is of natural language containing indexical or deictic words.
- the digital assistant application can access the navigation application in response to a request in the input audio signal that references one of the functions of the navigation application.
- the digital assistant application can also determine which function the request in the input audio signal is referencing. For example, upon identifying the words “Take me there” from parsing the input audio signal, the digital assistant application can determine that the words “Take me” refer to the path finding operation of the navigation application. In another example, when the words “Show me gas stations” are parsed from the input audio signal, the digital assistant application can determine that the words “Show me” refer to the location finder operation of the digital assistant application.
- the digital assistant application can retrieve a set of point locations corresponding to the portion of the map visible through the viewport of the navigation application.
- the digital assistant application can also obtain the identifiers for each point location and a previous set of search terms used as inputs for the navigation application.
- the digital assistant application can also identify previously received requests referencing the functions of the navigation application. For example, the input audio signals with the phrase “Tell me about the ABC Tower” and with the phrase “Show me patisseries” may have been received in succession.
- the digital assistant application can use the phrase “Tell me about the ABC Tower” in processing the phrase “Show me patisseries” in establishing a region of interest to obtaining the identifiers.
- the digital assistant application can use natural language processing techniques to determine a referential word from the set of words parsed from the input audio signal.
- the referential word can correspond to one of the points of interest on the map visible through the viewport of the navigation application. For example, for the phrase “take me there” parsed from an input audio signal, the referential word may be “there.” For the phrase “let's go to the pizzeria,” the referential word may be “pizzeria.”
- the digital assistant application can identify which point location the referential word is referring to. The digital assistant application can compare the referential word with the identifier for each point location.
- the digital assistant application can determine a semantic distance between the referential word and the identifier for each location using a semantic knowledge graph.
- the digital assistant application can also determine an indexical measure between the referential word and a previous word, such as the previously received requests or the search terms. Based on the comparisons, the digital assistant application can identify which point location the referential word of the input audio signal is referring to. Using the request and the identified point location, the digital assistant application can generate an action data structure to provide to the navigation application to carry out the indicated operation using the identified point location.
- Resource intensive processing based upon natural language processing and interpretation can therefore be performed for a client device at a remote server in which information associated with a graphical user interface of the client device is taken into account.
- Subject matter described herein may therefore provide an interface between a graphical user interface of a client device and a speech-based system.
- the interface allows a user to interact with the graphical user interface using speech, and additionally allows data associated with the graphical user interface to be provided to a remote server efficiently.
- the speech-based system is thereby able to provide an improved guided interaction with a user of the client device.
- the system 100 can include at least one data processing system 102 , one or more client devices 104 , and one or more navigator services 106 .
- the one or more client devices 104 can be communicatively coupled to the one or more navigator services 106 , and vice-versa.
- the at least one data processing system 102 , one or more client devices 104 , and one or more navigator services 106 can be communicatively coupled to one another via the network 156 .
- the data processing system 102 can include an instance of the digital assistant application 108 .
- the digital assistant application 108 can include a natural language processor (NLP) component 114 to parse audio-based inputs.
- the digital assistant application 108 can include a navigation interface component 116 to interface with a navigation application 110 .
- the digital assistant application 108 can include a geolocation sensing component 118 to obtain position measurements.
- the digital assistant application 108 can include an audio signal generator component 122 to generate audio-based signals.
- the digital assistant application 108 can include a direct action handler component 120 .
- the digital assistant application 108 can include a response selector component 124 to select responses to audio-based input signals.
- the NLP component 114 , the audio signal generator component 122 , the data repository 126 , the direct action handler component 120 , and the response selector component 124 separate from the digital assistant application 108 .
- the data processing system 102 can include a data repository 126 .
- the data repository 126 can store regular expressions 128 , parameters 130 , policies 132 , response data 134 , and templates 136 .
- the data processing system 102 can also include an instance of at least one navigation application 110 to perform navigation guidance processes, among others.
- the navigation guidance processes can include a location finding operation and a path routing operation, among others.
- the navigation application 110 can include a digital assistant interface component 138 to interface with the digital assistant application 108 .
- the navigation application 110 can include a location finder component 140 to perform the location finding operation to search for a location in a geographic region using search terms.
- the navigation application 110 can include a path router component 142 to perform the path routing operation to determine a path from one location to another location in the geographic region.
- the functionalities of the location finder component 140 and the path router component 142 will be explicated herein below.
- the navigation application 110 can also include the instance of the geolocation sensing component 118 to obtain position measurements.
- the navigation application 110 can include or otherwise access at least one data repository 144 .
- the navigation application 110 can be a separate application from the digital assistant application 108 .
- the data processing system 102 can include an
- the data repository 144 can store and maintain a vector-based map 146 accessible to one or more instances of the navigation application 110 .
- the data repository 144 may be separate from the navigation application 110 , and can be maintained on the data processing system 102 or the navigator services 106 .
- At least a portion of the vector-based map 146 can be maintained on the client device 104 running the navigation application 110 .
- the navigation application 110 can render and display a portion of the vector-based map 146 through a viewport of the navigation application 110 .
- the viewport can correspond to an area of a display of the client device 104 running the navigation application 110 through which the portion of the vector-based map 146 is visible.
- the vector-based map 146 can be larger in size than the viewport of the navigation application 110 or the display of client device 104 , a portion corresponding to the viewport of the navigation application 110 can be displayed. The portions currently or previously displayed through the viewport of the navigation application 110 can be stored on the client device 104 running the navigation application 110 .
- the vector-based map 146 can represent a geographic map (e.g., of the Earth) using a data structure (e.g., linked list, tree, array, matrix, and heap).
- the vector-based map 146 can include elevation contours, water depth, regions (e.g., of countries, provinces, counties, prefectures, cities, towns, and villages), natural features (e.g., lakes, mountains, and rivers), artificial features (e.g., buildings, parking lots, and parks), and/or transportation networks (e.g., roads, pedestrian walkways, bike paths, and railways), or a combination of these features.
- the vector-based map 146 can define the elevation contours, water depth, regions, artificial features, and transportation networks.
- the vector-based map 146 can include a set of point locations and a set of paths.
- the vector-based map 146 can define a geographic coordinate (e.g., longitude and latitude) for each point location.
- Each point location can correspond to one of the artificial features and natural features.
- Each point location can be associated with a geographic coordinate and can have one or more identifiers.
- the identifier of the point location can include a name and a category type for the point location. For example, for a point location corresponding to a hotel, the name may be “XYZ Inn” and the category type may be “hotel.”
- the point locations can be linked to one another via paths.
- Each path can correspond to a transportation network, such as a road, a pedestrian walkway, bike path, and railways, among others.
- Each path can define a geographic distance (e.g., measured in kilometers or miles) among the point locations.
- the vector-based map 146 can be encoded in accordance with a geographic information encoding format (e.g., GIS).
- GIS geographic information encoding format
- the functionalities of the data processing system 102 can be included or otherwise be accessible from the one or more client devices 104 .
- the functionalities of the data processing system 102 may correspond to the functionalities or interface with the digital assistant application 108 executing on the client devices 104 .
- the client devices 104 can each include and execute a separate instance of the one or more components of the digital assistant application 108 .
- the client devices 104 can otherwise have access to the functionalities of the components of the digital assistant application 108 on a remote data processing system 102 via the network 156 .
- the client device 104 can include the functionalities of the NLP component 114 and access the remainder of the components of the digital assistant application 108 via the network 156 to the data processing system 102 .
- the client devices 104 can each include and execute a separate instance of the one or more components of the navigation application 110 .
- the client devices 104 can otherwise have access to the functionalities of the components of the navigation application 110 on a remote data processing system 102 via the network 156 .
- the client device 104 can include the functionalities of the location finder component 140 and the path router component 142 and can access the vector-based map 146 via the network 156 .
- the client devices 104 can each include at least one logic device such as a computing device having a processor to communicate with each other with the data processing system 102 via the network 156 .
- the client devices 104 can include an instance of any of the components described in relation to the data processing system 102 .
- the client devices 104 can include an instance of the digital assistant application 108 .
- the client devices 104 can include a desktop computer, laptop, tablet computer, personal digital assistant, smartphone, mobile device, portable computer, thin client computer, virtual server, speaker-based digital assistant, or other computing device.
- the components of the system 100 can communicate over a network 156 .
- the network 156 can include, for example, a point-to-point network, a broadcast network, a wide area network, a local area network, a telecommunications network, a data communication network, a computer network, an ATM (Asynchronous Transfer Mode) network, a SONET (Synchronous Optical Network) network, a SDH (Synchronous Digital Hierarchy) network, an NFC (Near-Field Communication) network, a local area network (LAN), a wireless network or a wireline network, and combinations thereof.
- the network 156 can include a wireless link, such as an infrared channel or satellite band.
- the topology of the network 156 may include a bus, star, or ring network topology.
- the network 156 can include mobile telephone networks using any protocol or protocols used to communicate among mobile devices, including advanced mobile phone protocol (AMPS), time division multiple access (TDMA), code-division multiple access (CDMA), global system for mobile communication (GSM), general packet radio services (GPRS), or universal mobile telecommunications system (UMTS).
- AMPS advanced mobile phone protocol
- TDMA time division multiple access
- CDMA code-division multiple access
- GSM global system for mobile communication
- GPRS general packet radio services
- UMTS universal mobile telecommunications system
- Different types of data may be transmitted via different protocols, or the same types of data may be transmitted via different protocols.
- the client device 104 can include, execute, interface, or otherwise communicate with one or more of at least one instance of the digital assistant application 108 , at least one instance of the navigation application 110 , at least one speaker 148 , at least one sensor 154 , at least one transducer 150 , and at least one peripheral device 152 .
- the sensor 154 can include, for example, a camera, an ambient light sensor, proximity sensor, temperature sensor, an inertial motion unit, accelerometer, gyroscope, motion detector, GPS sensor, location sensor, microphone, video, image detection, or touch sensor.
- the transducer 150 can include or be part of a speaker or a microphone.
- the client device 104 can include an audio driver. The audio driver can provide a software interface to the hardware transducer 150 .
- the audio driver can execute the audio file or other instructions provided by the data processing system 102 to control the transducer 150 to generate a corresponding acoustic wave or sound wave.
- the peripheral device 152 can include user input/output devices, such as a keyboard, a display, and a headphone, among others.
- the display can include one or more hardware or software components configured to provide a visual indication or optical output, such as a light emitting diode, organic light emitting diode, liquid crystal display, laser, or display.
- the instance of the digital assistant application 108 on the client device 104 can include or be executed by one or more processors, logic array, or memory.
- the instance of the digital assistant application 108 on the client device 104 can detect a keyword and perform an action based on the keyword.
- the digital assistant application 108 on the client device 104 can be an instance of the digital assistant application 108 executed at the data processing system 102 or can perform any of the functions of the digital assistant application 108 .
- the instance of the digital assistant application 108 on the client device 104 can filter out one or more terms or modify the terms prior to transmitting the terms as data to the data processing system 102 (e.g., the instance of the digital assistant application 108 on the data processing system 102 ) for further processing.
- the instance of the digital assistant application 108 on the client device 104 can convert the analog audio signals detected by the transducer 150 into a digital audio signal and transmit one or more data packets carrying the digital audio signal to the data processing system 102 via the network 156 .
- the instance of the digital assistant application 108 on the client device 104 can transmit data packets carrying some or the entire input audio signal responsive to detecting an instruction to perform such transmission.
- the instruction can include, for example, a trigger keyword or other keyword or approval to transmit data packets comprising the input audio signal to the data processing system 102 .
- the instance of the digital assistant application 108 on the client device 104 can perform pre-filtering or pre-processing on the input audio signal to remove certain frequencies of audio.
- the pre-filtering can include filters such as a low-pass filter, high-pass filter, or a bandpass filter.
- the filters can be applied in the frequency domain.
- the filters can be applied using digital signal processing techniques.
- the filter can be configured to keep frequencies that correspond to a human voice or human speech, while eliminating frequencies that fall outside the typical frequencies of human speech.
- a bandpass filter can be configured to remove frequencies below a first threshold (e.g., 70 Hz, 75 Hz, 80 Hz, 85 Hz, 90 Hz, 95 Hz, 100 Hz, or 105 Hz) and above a second threshold (e.g., 200 Hz, 205 Hz, 210 Hz, 225 Hz, 235 Hz, 245 Hz, or 255 Hz).
- Applying a bandpass filter can reduce computing resource utilization in downstream processing.
- the instance of the digital assistant application 108 on the client device 104 can apply the bandpass filter prior to transmitting the input audio signal to the data processing system 102 , thereby reducing network bandwidth utilization.
- the instance of the digital assistant application 108 on the client device 104 can apply additional pre-processing or pre-filtering techniques such as noise reduction techniques to reduce ambient noise levels that can interfere with the natural language processor.
- Noise reduction techniques can improve accuracy and speed of the natural language processor, thereby improving the performance of the data processing system 102 and manage rendering of a graphical user interface provided via the display.
- the client device 104 can be associated with an end user that enters voice queries as audio input into the client device 104 (via the sensor 154 or transducer 150 ) and receives audio (or other) output from the data processing system 102 or navigator services 106 to present, display, or render to the end user of the client device 104 .
- the digital component can include a computer-generated voice that can be provided from the data processing system 102 or the navigator service 106 to the client device 104 .
- the client device 104 can render the computer-generated voice to the end user via the transducer 150 (e.g., a speaker).
- the computer-generated voice can include recordings from a real person or computer-generated language.
- the client device 104 can provide visual output via a display device communicatively coupled to the client device 104 .
- the end user that enters the voice queries to the client device 104 can be associated with multiple client devices 104 .
- the end user can be associated with a first client device 104 that can be a speaker-based digital assistant device, a second client device 104 that can be a mobile device (e.g., a smartphone), and a third client device 104 that can be a desktop computer.
- the data processing system 102 can associate each of the client devices 104 through a common login (e.g., account identifier and authentication credentials), location, network, or other linking data.
- the end user may log into each of the client devices 104 with the same account user name and password.
- the client device 104 can include or execute an instance of the navigation application 110 .
- the client device 104 can include or execute an instance of the navigation application 110 .
- the navigation application 110 can include one or more components with similar functionalities as the digital assistant application 108 . Instances of the navigation application 110 can be executed on the data processing system 102 and the navigator service 106 .
- the digital assistant application 108 can interface with the navigation application 110 , and vice-versa to carry out predefined functions.
- the navigation application 110 can access resources on the navigator service 106 in carrying out the function indicated in the input audio signal.
- the client device 104 can receive an input audio signal detected by a sensor 154 (e.g., microphone) of the client device 104 .
- a sensor 154 e.g., microphone
- the digital assistant application 108 can determine which navigation application 110 to interface with in processing the input audio signal.
- the input audio signal can include, for example, a query, question, command, instructions, or other statement in a natural language.
- the voice query can include a command to find a location in a geographic region.
- the digital assistant application 108 can determine that the voice query includes a command referencing at least one functionality of the navigation application 110 .
- the digital assistant application 108 can interface with the navigation application 110 to retrieve data to complete the task indicated in the voice query.
- the input audio signal can include one or more predefined keywords referencing a functionality of the navigation application 110 (e.g., “take,” “find,” and “route”).
- the input audio signal can include “Take me to high school XYZ.”
- the digital assistant application 108 can determine that the voice query is referencing the navigation application 110 as opposed to another agent or the functionality of the digital assistant application 108 itself.
- the digital assistant application 108 can determine that the voice query is referencing the functionality of the navigation application 110 , and can perform processing using the voice query to generate a command to the navigation application 110 .
- the navigation application 110 can display or present portions of the vector-based map 146 based on the command generated using the voice query.
- the functionalities of the navigation application 110 with respect to the navigator service 106 and the digital assistant application 108 will be detailed herein below.
- the digital assistant application 108 executing on a first client device 104 without the navigation application 110 can access the navigation application 110 running on a second client device 104 .
- the digital assistant application 108 executing on the first client device 104 can identify that the first client device 104 lacks the navigation application 110 .
- the digital assistant application 108 can identify one or more client devices 104 (e.g., a second client device 104 running on the navigation application 110 associated with the first client device 104 associated through the common login (e.g., account identifier and authentication credentials), location, network, or other linking data.
- the digital assistant application 108 executing on the first client device 104 can access the navigation application 110 running on the second client device 104 to further process the voice query.
- the data processing system 102 and the navigator service 106 each can include at least one server having at least one processor.
- the data processing system 102 and the navigator service 106 each can include a plurality of servers located in at least one data center or server farm.
- the data processing system 102 can determine from an audio input signal a request and a trigger keyword associated with the request. Based on the request and trigger keyword, the data processing system 102 can determine whether to forward the audio input signal to the navigator service 106 or to process the audio input signal internally. Responsive to the determination that the audio input signal is to be processed internally, the data processing system 102 can generate or select response data.
- the response data can be audio-based or text-based.
- the response data can include one or more audio files that, when rendered, provide an audio output or acoustic wave.
- the data within the response data can also be referred to as content items.
- the response data can include other content (e.g., text, video, or image content) in addition to audio content.
- the data processing system 102 can send the audio input signal to the navigator service 106 .
- the navigator service 106 can parse the audio input signal to identify a command to execute.
- the navigator service 106 can carry out the command and return a result of the command to the data processing system 102 or the client device 104 .
- the data processing system 102 and the navigator service 106 each can include multiple, logically grouped servers and facilitate distributed computing techniques.
- the logical group of servers may be referred to as a data center, server farm, or a machine farm.
- the servers can be geographically dispersed.
- a data center or machine farm may be administered as a single entity, or the machine farm can include a plurality of machine farms.
- the servers within each machine farm can be heterogeneous—one or more of the servers or machines can operate according to one or more type of operating system platform.
- the data processing system 102 and the navigator service 106 each can include servers in a data center that are stored in one or more high-density rack systems, along with associated storage systems, located for example in an enterprise data center.
- the data processing system 102 or the navigator service 106 with consolidated servers can improve system manageability, data security, the physical security of the system, and system performance by locating servers and high-performance storage systems on localized high-performance networks.
- Centralization of all or some of the data processing system 102 or navigator service 106 components, including servers and storage systems, and coupling them with advanced system management tools allows more efficient use of server resources, which saves power and processing requirements and reduces bandwidth usage.
- Each of the components of the data processing system 102 can include at least one processing unit, server, virtual server, circuit, engine, agent, appliance, or other logic device such as programmable logic arrays configured to communicate with the data repositories 126 and 144 and with other computing devices.
- the navigator service 106 can also include at least one processing unit, server, virtual server, circuit, engine, agent, appliance, or other logic device such as programmable logic arrays configured to communicate with a data repository and with other computing devices.
- the data processing system 102 can include the data repository 126 .
- the data repository 126 can include one or more local or distributed databases and can include a database management system.
- the data repository 126 can include computer data storage or memory and can store one or more regular expressions 128 , one or more parameters 130 , one or more policies 132 , response data 134 , and templates 136 , among other data.
- the parameters 130 , policies 132 , and templates 136 can include information such as rules about a voice-based session between the client devices 104 and the data processing system 102 .
- the regular expressions 128 can include rules about when the voice-based session between the client devices 104 and the data processing system 102 is to include the navigation application 110 and the navigator service 106 .
- the regular expressions 128 , parameters 130 , policies 132 , and templates 136 can also include information for another digital assistant application 108 received via the interface 112 from another source (e.g., the data processing system 102 and the client devices 104 ).
- the response data 134 can include content items for audio output or associated metadata, as well as input audio messages that can be part of one or more communication sessions with the client devices 104 .
- the data processing system 102 can include at least one computation resource or server.
- the data processing system 102 can include, interface, or otherwise communicate with at least one interface 112 .
- the data processing system 102 can include, interface, or otherwise communicate with at least one instance of the digital assistant application 108 on the data processing system 102 .
- the instance of the digital assistant application 108 on the data processing system 102 can include, interface, or otherwise communicate with at least one NLP component 114 , at least one audio signal generator component 122 , and at least one direct action handler component 120 .
- the data processing system 102 can include, interface, or otherwise communicate with at least one response selector component 124 .
- the data processing system 102 can include, interface, or otherwise communicate with at least one data repository 126 .
- the at least one data repository 126 can include or store, in one or more data structures or databases, regular expressions 128 , parameters 130 , policies 132 , response data 134 , and templates 136 .
- the data repository 126 can include one or more local or distributed databases, and can include a database management.
- the components of the data processing system 102 can each include at least one processing unit or other logic device such as a programmable logic array engine or module configured to communicate with the database repository 128 or 148 .
- the components of the data processing system 102 can be separate components, a single component, or part of multiple data processing systems 102 .
- the system 100 and its components, such as a data processing system 102 can include hardware elements, such as one or more processors, logic devices, or circuits.
- the data processing system 102 can include an interface 112 .
- the interface 112 can be configured, constructed, or operational to receive and transmit information using, for example, data packets.
- the interface 112 can receive and transmit information using one or more protocols, such as a network protocol.
- the interface 112 can include a hardware interface, software interface, wired interface, or wireless interface.
- the interface 112 can be a data interface or a network interface that enables the components of the system 100 to communicate with one another.
- the interface 112 of the data processing system 102 can provide or transmit one or more data packets that include the action data structure, audio signals, or other data via the network 156 to the client devices 104 or the navigator service 106 .
- the data processing system 102 can provide the output signal from the data repository 126 or from the audio signal generator component 122 to the client devices 104 .
- the data processing system 102 can also instruct, via data packet transmissions, the client devices 104 to perform the functions indicated in the action data structure.
- the output signal can be obtained, generated, transformed to, or transmitted as one or more data packets (or other communications protocol) from the data processing system 102 (or other computing device) to the client devices 104 .
- the interface 112 can facilitate translating or formatting data from one format to another format.
- the interface 112 can include an application programming interface (“API”) that includes definitions for communicating between various components, such as software components.
- API application programming interface
- the data processing system 102 can include an application, script, or program installed at the client device 104 , such as the instance of the digital assistant application 108 on the client device 104 to communicate input audio signals to the interface 112 of the data processing system 102 and to drive components of the client computing device to render output audio signals or visual output.
- the data processing system 102 can receive data packets, a digital file, or other signals that include or identify an input audio signal (or input audio signals).
- the client device 104 can detect the audio signal via the transducer 150 and convert the analog audio signal to a digital file via an analog-to-digital converter.
- the audio driver can include an analog-to-digital converter component.
- the pre-processor component can convert the audio signals to a digital file that can be transmitted via data packets over network 156 .
- the instance of the digital assistant application 108 of the data processing system 102 can execute or run an NLP component 114 to receive or obtain the data packets including the input audio signal detected by the sensor 154 of the client device 104 .
- the data packets can provide a digital file.
- the NLP component 114 can receive or obtain the digital file or data packets comprising the audio signal and parse the audio signal.
- the NLP component 114 can provide for interactions between a human and a computer.
- the NLP component 114 can be configured with techniques for understanding natural language and enabling the data processing system 102 to derive meaning from human or natural language input.
- the NLP component 114 can include or be configured with techniques based on machine learning, such as statistical machine learning.
- the NLP component 114 can utilize decision trees, statistical models, or probabilistic models to parse the input audio signal.
- the NLP component 114 can perform, for example, functions such as named entity recognition (e.g., given a stream of text, determine which items in the text map to names, such as people or places, and what the type of each such name is, such as person, location (e.g., “home”), or organization), natural language generation (e.g., convert information from computer databases or semantic intents into understandable human language), natural language understanding (e.g., convert text into more formal representations such as first-order logic structures that a computer module can manipulate), machine translation (e.g., automatically translate text from one human language to another), morphological segmentation (e.g., separating words into individual morphemes and identify the class of the morphemes, which can be challenging based on the complexity of the morphology or structure of the words of the language being considered), question answering (e.g., determining an answer to a human-language question, which
- the NLP component 114 can convert the input audio signal into recognized text by comparing the input signal against a stored, representative set of audio waveforms (e.g., in the data repository 126 ) and choosing the closest matches.
- the set of audio waveforms can be stored in data repository 126 or other database accessible to the data processing system 102 .
- the representative waveforms are generated across a large set of users, and then may be augmented with speech samples from the user.
- the NLP component 114 matches the text to words that are associated, for example via training across users or through manual specification, with actions that the data processing system 102 can serve.
- the NLP component 114 can convert image or video input to text or digital files.
- the NLP component 114 can process, analyze, or interpret image or video input to perform actions, generate requests, or select or identify data structures.
- the data processing system 102 can receive image or video input signals, in addition to, or instead of, input audio signals.
- the data processing system 102 can process the image or video input signals using, for example, image interpretation techniques, computer vision, a machine learning engine, or other techniques to recognize or interpret the image or video to convert the image or video to a digital file.
- image interpretation techniques, computer vision techniques, or machine learning techniques can be collectively referred to as imaging techniques.
- the data processing system 102 e.g., the NLP component 114
- the NLP component 114 can obtain the input audio signal. From the input audio signal, the NLP component 114 can identify at least one request, at least one trigger keyword corresponding to the request, and one or more keywords.
- the request can indicate intent, digital components, or subject matter of the input audio signal.
- the trigger keyword can indicate a type of action likely to be taken. For example, the NLP component 114 can parse the input audio signal to identify at least one request to find a contact in an end user's contact list.
- the trigger keyword can include at least one word, phrase, root or partial word, or derivative indicating an action to be taken.
- the trigger keyword “search” or “find” from the input audio signal can indicate a request to perform a query search.
- the input audio signal does not directly express an intent for the query search, however the trigger keyword indicates that query search is an ancillary action to at least one other action that is indicated by the request.
- the NLP component 114 can parse the input audio signal to identify, determine, retrieve, or otherwise obtain the request and the trigger keyword. For instance, the NLP component 114 can apply a semantic processing technique to the input audio signal to identify the trigger keyword or the request. The NLP component 114 can apply the semantic processing technique to the input audio signal to identify a trigger phrase that includes one or more trigger keywords, such as a first trigger keyword and a second trigger keyword. For example, the input audio signal can include the sentence “Look up Alex's phone number.” The NLP component 114 can determine that the input audio signal includes trigger keywords “Look up.” The NLP component 114 can determine that the request is for looking through the end user's contact list.
- the NLP component 114 can determine whether one or more keywords identified from the input audio signal references one or more functions of the navigation application 110 .
- the one or more keywords identified from the input audio signal can include an identifier for the navigation application 110 (e.g., “GPS Navigator A”).
- the identifier for the navigation application 110 can indicate which application the end user would like to carry out the request.
- the text converted from the input audio signal can include “Get me directions home using GPS Navigator A.”
- the keywords “GPS Navigator A” can be identifier for the navigation application 110 to carry out the request indicated in the audio input signal.
- the NLP component 114 can determine that the input audio signal includes the identifier for the navigation application 110 .
- the NLP component 114 can determine that the input audio signal references the navigation application 110 . Furthermore, the digital assistant application 108 can interface with the navigation application 110 as detailed herein below. Conversely, the NLP component 114 can determine that the input audio signal does not include the identifier for the navigation application 110 . Based on determining that the input audio signal does not include the identifier, the NLP component 114 can determine that the input audio signal does not reference the navigation application 110 . In addition, the digital assistant application 108 can process the request indicated in the input audio signal.
- the NLP component 114 can determine whether one or more keywords identified from the input audio signal references at least one function of the navigation application 110 using the regular expressions 128 for the navigation application 110 .
- the regular expression 128 can define a pattern to match to determine whether the keywords identified from the input audio signal references the at least one function of the navigation application 110 .
- the regular expression 128 can also specify which keywords to use to carry out the command indicated in the input audio signal.
- the regular expression 128 may be of the form ⁇ [request], [referential keywords], [auxiliary keywords] ⁇ .
- the regular expression 128 can specify that the one or more keywords include a request for the navigation application 110 and one or more referential words used as parameters to carry out the request.
- the regular expression 128 can specify a sequence for the request and the referential keywords in the one or more keywords identified from the input audio signal.
- the regular expression 128 can include a first set of predefined keywords for the request corresponding to a function of the navigation application 110 .
- the first set of predefined keywords can include a function identifier (e.g., “take”, “go”, “show”, “directions” and “find”). Each function identifier in the first set of predefined keywords can be associated with one of the functions of the navigation application 110 .
- the regular expression 128 can include a second set of predefined keywords for the one or more referential words to use as parameters for the navigation application 110 carry out the request corresponding to the function.
- the second set of predefined keywords can include deictic words (e.g., “here,” “there,” “over there,” and “across”).
- the second set of predefined keywords can also include keywords associated with points of interest (e.g., “restaurant,” “hotel,” “café,” “gas station,” “park,” and “airport”).
- the regular expression 128 can specify that keywords identified in the input audio signal but not match the first set of predefined keywords or the second set of keywords are to be identified as auxiliary keywords.
- the regular expression 128 can include a third set of predefined keywords for the one or more auxiliary keywords.
- the third set of predefined keywords can include keywords associated with a display of the client device 104 or the viewport of the navigation application 110 (e.g., “left corner,” “right corner,” “above,” and “middle”). Each keyword of the third set can correspond to a subset area of the display of the client device 104 .
- the regular expression 128 can specify a sequence for the request and the referential keywords in the one or more keywords identified from the input audio signal.
- the regular expression 128 can specify that responsive to determining that the input audio signal includes one or more keywords matching one of the first predefined set, at least one of the remaining keywords are to be used as the one or more parameters to carry out the request.
- the NLP component 114 can compare the one or more keywords against the regular expression 128 .
- the NLP component 114 can also compare one or more permutations of keywords (e.g., n-grams) identified from the input audio signal against the regular expression 128 .
- the NLP component 114 can compare the one or more keywords against the first set of predefined keywords specified by the regular expression 128 .
- the NLP component 114 can determine that there is no match between all the keywords with all of the first set of predefined keywords.
- the NLP component 114 can determine that the input audio signal does not reference any function of the navigation application 110 .
- the NLP component 114 can determine that the input audio signal instead references one of the functions of the digital assistant application 108 .
- the digital assistant application 108 can perform further processing with the keywords to carry out the request.
- the NLP component 114 can determine that the input audio signal references at least one function of the navigation application 110 .
- the NLP component 114 can identify the function identifier from the first set of predefined keywords matching the at least one keyword corresponding to the request.
- the NLP component 114 can determine a request type corresponding to one of the functions of the navigation guidance process of the navigation application 110 .
- the navigation guidance processes of the navigation application 110 can include a location finding operation and a path routing operation.
- the request type can include the location finding operation and the path routing operation.
- the function identifier can be associated with one of the request types. Based on the association of the function identifier, the NLP component 114 can determine the request type indicated by the request parsed from the input audio signal.
- the NLP component 114 can also identify one or more referential keywords and auxiliary keywords from the keywords of the input audio signal to use as the one or more parameters to carry out the request.
- the NLP component 114 can compare the one or more remaining keywords with the second set of predefined keywords.
- the NLP component 114 can determine a match between at least one keyword with at least one of the second set of predefined keywords.
- the NLP component 114 can identify the at least one keyword as at least one of the referential keywords to use to carry out the request.
- the NLP component 114 can also perform semantic analysis to identify one or more keywords to use as the referential keywords and auxiliary keywords for the navigation application 110 to carry out the request.
- the semantic analysis can include deixis and anaphora analysis to identify the referential keywords.
- the NLP component 114 can identify one or more remaining keywords identified from the input audio signal besides the request and the referential keywords as auxiliary keywords.
- the NLP component 114 can compare the one or more remaining keywords with the third set of predefined keywords.
- the NLP component 114 can determine a match between at least one keyword with at least one of the third set of predefined keywords.
- the NLP component 114 can identify the at least one keyword as at least one of the auxiliary keywords. Based on the identification of the request and the referential keywords from the input audio signal, the NLP component 114 can determine that the input audio signal references the function of the navigation application 110 .
- the NLP component 114 can determine that the input audio signal references the functionalities of the navigation application 110 based on the inclusion both “take me” and “store ABC.” In this example, using the regular expression 128 and semantic analysis techniques, the NLP component 114 can determine “take me” as the request, “store ABC” as a referential keyword to carry out the request, and “shown in corner of screen” as auxiliary keywords.
- the data processing system 102 can execute or run an instance of the navigation interface component 116 .
- the navigation interface component 116 can access the navigation application 110 executing on the client device 104 or the navigator service 106 .
- the navigation interface component 116 can access the navigation application 110 in accordance with an application programming interface (API) that includes definitions for communicating between the digital assistant application 108 and the navigation application 110 .
- API application programming interface
- the navigation interface component 116 can invoke a function call defined by the API to access the navigation application 110 .
- the navigation interface component 116 can identify the navigation application 110 associated with the digital assistant application 108 through the common login (e.g., account identifier and authentication credentials), location, network, or other linking data.
- the end user may have used the same account and login details for the digital assistant application 108 and the navigation application 110 .
- the navigation interface component 116 can retrieve data from the navigation application 110 .
- the data can be related or correspond to contents of the portion of the vector-based map 146 visible through the viewport of the navigation application 110 .
- the navigation interface component 116 can also determine whether the data was previously received from the navigation application 110 .
- the digital assistant application 108 may already have accessed the navigation application 110 in response to the previously received input audio signals.
- the previously received data can be maintained on the client device 104 (e.g., on the memory).
- the navigation interface component 116 can identify the previously received data and a receipt time of the previously received data.
- the navigation interface component 116 can also identify the current time corresponding to the time of receipt of the current input audio signal.
- the navigation interface component 116 can compare a time elapsed between the receipt time and the current time to a defined threshold time. Responsive to determining that the elapsed time is greater than the defined threshold time, the navigation interface component 116 can proceed to access the navigation application 110 . Otherwise, responsive to determining that the elapsed time is less than the defined threshold time, the navigation interface component 116 can retrieve and use the previously received data from the navigation application 110 .
- the navigation interface component 116 can determine whether the client device 104 that received the input audio signal referencing the at least one function of the navigation application 110 is running or has an instance of the navigation application 110 .
- the navigation application 110 accessed by the navigation interface component 116 can be running or present on a client device 104 different from the client device 104 that received the input audio signal. Responsive to determining that the client device 104 is running or has the navigation application 110 , the navigation interface component 116 can access the navigation application 110 on the same client device 104 . On the other hand, responsive to determining that the client device 104 is not running or lacks the navigation application 110 , the navigation interface component 116 can identify another client device 104 running the navigation application 110 .
- the navigation interface component 116 can identify another client device 104 associated with the client device 104 that received the input audio signal through the common login (e.g., account identifier and authentication credentials), location, network, or other linking data.
- the navigation interface component 116 can determine that the other client device 104 is running or has an instance of the navigation application 110 .
- the navigation interface component 116 can access the navigation application 110 running or present on the other client device 104 associated with the client device 104 that received the input audio signal.
- the navigation interface component 116 can send or transmit an access request to the navigation application 110 running on the client device 104 or the navigator service 106 .
- the access request can include the linking data for the digital assistant application 108 and the navigation application 110 .
- the data processing system 102 or the navigator service 106 can execute or run an instance of the digital assistant interface component 138 of the navigation application 110 .
- the digital assistant interface component 138 can identify the navigation interface component 116 accessing the navigation application 110 .
- the digital assistant interface component 138 can identify a set of point locations within the reference frame corresponding to the portion of the vector-based map 146 displayed in the viewport of the navigation application 110 .
- each point location can correspond to one of the artificial features and natural features, can be associated with a geographic coordinate, and can have at least one identifier.
- the digital assistant interface component 138 can identify the portion of the vector-based map 146 visible or displayed in the viewport of the navigation application 110 .
- the portion of the vector-based map 146 may be smaller than an entirety of the vector-based map 146 , and can correspond to a geographic region displayed in the viewport of the navigation application 110 .
- the digital assistant interface component 138 can identify dimensions and coordinates of the portion of the vector-based map 146 visible through the viewport of the navigation application 110 .
- the coordinates can define the portion of the vector-based map 146 visible through the viewport of the navigation application 110 , such as top-left coordinates and bottom-right coordinates.
- the coordinates can correspond to the geographic coordinates on a geographic map.
- the portion of the vector-based map 146 can correspond to the reference frame for the instance of the navigation application 110 running on the client device 104 .
- the digital assistant interface component 138 can set or identify the portion of vector-based map 146 visible through the viewport as the reference frame for the navigation application 110 running on the client device 104 .
- the reference frame can correspond to dimensions, coordinates, and other measures of the vector-based map 146 displayed in the viewport of the navigation application 110 , and can be particular to the end user of the client device 104 .
- the digital assistant interface component 138 can identify dimensions and coordinates defining the portion of the reference frame.
- the coordinates can correspond to the coordinates on the reference frame such as top-left coordinates and bottom-right coordinates.
- the digital assistant interface component 138 can compare the geographic coordinates of each point location with the dimensions and coordinates identified for the portion of the vector-based map 146 displayed in the viewport. Based on the comparison, the digital assistant interface component 138 can select or identify the set of point locations within the reference frame corresponding to the portion of the vector-based map 146 visible through the viewport. The digital assistant interface component 138 can provide the set of point locations to the navigation interface component 116 of the digital assistant application 108 .
- the digital assistant interface component 138 can provide display information regarding the viewport of the navigation application 110 to the navigation interface component 116 of the digital assistant application 108 .
- the digital assistant interface component 138 can provide the dimensions and coordinates of the portion of the vector-based map 146 visible through the view port to the navigation interface component 116 of the digital assistant application 108 .
- the digital assistant interface component 138 can identify the dimensions of the viewport of the navigation application 110 itself.
- the dimensions of the viewport can be defined using a number of pixels in width versus height.
- the digital assistant interface component 138 can provide the dimensions of the viewport of the navigation application 110 to the navigation interface component 116 of the digital assistant application 108 .
- the digital assistant interface component 138 can identify a current location of the client device 104 within the portion of the vector-based map 146 visible through the viewport of the navigation application 110 .
- the digital assistant interface component 138 can access a geographic positioning system (GPS) interface.
- GPS geographic positioning system
- the GPS interface can in turn communicate with a GPS satellite to identify or receive current geographic coordinates of the client device 104 running the navigation application 110 .
- the GPS interface can convert the geographic coordinates of the client device 104 received from the GPS satellite to a location identifier on the vector-based map 146 .
- the location identifier can be an index assigned to the geographic coordinate of the physical world to the vector-based map 146 .
- the conversion of the geographic coordinates to the location identifiers can be in accordance to set mapping or function.
- the digital assistant interface component 138 can provide the location identifier of the client device 104 to the navigation interface component 116 of the digital assistant application 108 .
- the digital assistant interface component 138 can also provide the location identifier for each identified point location to the navigation interface component 116 .
- the digital assistant interface component 138 can also identify another set of point locations outside the portion of the vector-based map 146 visible or displayed in the viewport of the navigation application 110 .
- the navigation application 110 can be performing the path routing operation of the navigation guidance process to determine a path from a start location to a destination location on the vector-based map 146 , when the input audio signal is received.
- the destination location and the designated location can correspond to a location on the vector-based map 146 outside the portion of the vector-based map 146 outside the viewport of the navigation application 110 .
- the digital assistant interface component 138 can identify the destination location from the path routing operation.
- the digital assistant interface component 138 can determine a portion of the vector-based map 146 within a defined proximity (e.g., 1 km to 5 km) about the destination location.
- the portion of the vector-based map 146 within the defined proximity can be defined using dimensions and coordinates to include the destination location.
- the portion of the vector-based map 146 within the defined proximity can have a size equal to the portion of the vector-based map 146 currently displayed in the viewport of the navigation application 110 .
- the digital assistant interface component 138 can set or identify the portion of the vector-based map 146 within the defined proximity about the destination location as the part of the reference frame.
- the digital assistant interface component 138 can identify dimensions and coordinates defining the portion of the reference frame.
- the coordinates can correspond to the coordinates on the reference frame such as the top-left and bottom-right coordinates on the vector-based map 146 .
- the digital assistant interface component 138 can compare the geographic coordinates of each point location with the dimensions and coordinates identified for the portion of the vector-based map 146 . Based on the comparison, the digital assistant interface component 138 can select or identify the set of point locations within the reference frame corresponding to the portion of the vector-based map 146 within the defined proximity about the destination location.
- the digital assistant interface component 138 can provide the set of point locations to the navigation interface component 116 of the digital assistant application 108 .
- the digital assistant interface component 138 can label the point locations as corresponding to portions of the vector-based map 146 visible through the viewport or not visible through the viewport of the navigation application 110 .
- the digital assistant interface component 138 can identify a set of search terms received by the navigation application 110 .
- the search terms can include one or more keywords previously received by the navigation application 110 in performing the navigation guidance process, such as the functionalities performed by the location finder component 140 or the path router component 142 .
- the end user of the navigation application 110 may have previously typed “stationery stores” to look for stationary stores in the vicinity.
- the navigation 110 may have previously received the query “Tower ABC” converted from an input audio signal by the NLP component 114 to find the named tower.
- Previously received search terms can be stored and maintained on the navigation application 110 .
- Each search term can also be associated or indexed by a receipt timestamp indicating when the search term was received by the navigation application 110 .
- the digital assistant interface component 138 can select or identify the set of search terms previously received by the navigation application 110 within a defined time window prior to the receipt of the input audio signal by the digital assistant application 108 .
- the defined time window can range from 15 minutes to 2 hours.
- the digital assistant interface component 138 can identify a time of receipt of the input audio signal or a time of the navigation interface component 116 accessing the navigation application 110 .
- the digital assistant interface component 138 can compare the receipt timestamps of the search terms with the time of receipt of the input audio signal or access and the defined time window.
- the digital assistant interface component 138 can identify or select the set of search terms with receipt timestamps within the defined time window of the time of receipt of the input audio signal or access.
- the data processing system 102 can execute or run an instance of the geolocation sensing component 118 of the digital assistant application 108 or the navigation application 110 .
- the navigator service 106 can execute or run an instance of the geolocation sensing component 118 of the navigation application 110 .
- the geolocation sensing component 118 can retrieve data acquired from at least one sensor 154 of the client device 104 running the digital assistant application 108 .
- the sensors 154 accessed by the geolocation sensing component 118 can include the inertial motion unit, the accelerometer, the gyroscope, the motion detector, the GPS sensor, and the location sensor, among others.
- the geolocation sensing component 118 can determine or identify a direction of travel, a position, and a speed, among other measures of the client device 104 running the digital assistant application 108 .
- the geolocation sensing component 118 can further determine a change in the direction of travel, the position, and the speed, among measures of the client device 104 running the digital assistant application 108 using multiple measurements. The change can be relative to one or more previous measurements sampled at a defined interval.
- the geolocation sensing component 118 can determine or identify a direction of travel, a position, and a speed, among other measures of the client device 104 running the navigation application 110 .
- the geolocation sensing component 118 can further determine a change in the direction of travel, the position, and the speed, among measures of the client device 104 running the navigation application 110 using multiple measurements. The change can be relative to one or more previous measurements sampled at a defined interval.
- the digital assistant interface component 138 can identify another set of point locations of the portion of the vector-based map 146 previously displayed in the viewport of the navigation application 110 .
- the digital assistant interface component 138 can identify a previously displayed portion of the vector-based map 146 based on the one or more measurements direction of travel, the speed, and the position from the geolocation sensing component 118 .
- the digital assistant interface component 138 can also identify the currently displayed portion of the vector-based map 146 . Using the change in the direction of travel, the position, and the speed and the currently displayed portion of the vector-based map 146 , the digital assistant interface component 138 can determine the previously displayed portion of the vector-based map 146 .
- the change in the direction of travel, the position, and the speed can be relative to a time at a defined length (e.g., 15 seconds to 3 minutes) prior to the present.
- a defined length e.g. 15 seconds to 3 minutes
- the digital assistant interface component 138 can shift to another portion of the vector-based map 146 based on the change from previously measured position. Once shifted, the digital assistant interface component 138 can identify the previously displayed portion of the vector-based map 146 .
- the digital assistant interface component 138 can set or identify the previously displayed portion of the vector-based map 146 as part of the reference frame as the currently displayed portion of the vector-based map 146 . Once set, one portion of the reference frame can correspond to the currently displayed portion of the vector-based map 146 and another portion of the reference frame can correspond to the previously displayed portion of the vector-based map 146 .
- the digital assistant interface component 138 can identify dimensions and coordinates of the previously displayed portion of the vector-based map 146 . The coordinates can correspond to the coordinates on the reference frame such as the top-left and bottom-right coordinates on the vector-based map 146 .
- the digital assistant interface component 138 can compare the geographic coordinates of each point location with the dimensions and coordinates identified for the previously displayed portion of the vector-based map 146 . Based on the comparison, the digital assistant interface component 138 can select or identify the set of point locations within the reference frame corresponding to the previously displayed portion of the vector-based map 146 . The digital assistant interface component 138 can provide the set of point locations to the navigation interface component 116 of the digital assistant application 108 .
- the digital assistant interface component 138 can identify a to-be displayed portion of the vector-based map 146 based on the one or more measurements direction of travel, the speed, and the position from the geolocation sensing component 118 .
- the digital assistant interface component 138 can also identify the currently displayed portion of the vector-based map 146 .
- the digital assistant interface component 138 can determine the to-be displayed portion of the vector-based map 146 .
- the change in the direction of travel, the position, and the speed can be relative to a time at a defined length (e.g., 15 seconds to 3 minutes) prior to the present.
- the digital assistant interface component 138 can determine a predicted direction of travel, position, and speed. From the currently displayed portion of the vector-based map 146 , the digital assistant interface component 138 can shift to another portion of the vector-based map 146 based on the predicted direction of travel, position, and speed. Once shifted, the digital assistant interface component 138 can identify the to-be displayed portion of the vector-based map 146 .
- the digital assistant interface component 138 can set or identify the to-be displayed portion of the vector-based map 146 as part of the reference frame as the currently displayed portion of the vector-based map 146 . Once set, one portion of the reference frame can correspond to the currently displayed portion of the vector-based map 146 and another portion of the reference frame can correspond to the to-be displayed portion of the vector-based map 146 .
- the digital assistant interface component 138 can identify dimensions and coordinates of the to-be displayed portion of the vector-based map 146 . The coordinates can correspond to the coordinates on the reference frame such as the top-left and bottom-right coordinates on the vector-based map 146 .
- the digital assistant interface component 138 can compare the geographic coordinates of each point location with the dimensions and coordinates identified for the to-be displayed portion of the vector-based map 146 . Based on the comparison, the digital assistant interface component 138 can select or identify the set of point locations within the reference frame corresponding to the to-be displayed portion of the vector-based map 146 . The digital assistant interface component 138 can provide the set of point locations to the navigation interface component 116 of the digital assistant application 108 .
- the NLP component 114 can disambiguate or identify one or more point location from the set of point locations within the reference frame based on the one or more referential keywords and the identifiers for the set of point locations.
- the NLP component 114 can determine a correlation between the one or more keywords and the identifiers for the set of point locations to identify the point locations using a semantic knowledge graph (sometimes referred to as a semantic graph or semantic network).
- the semantic knowledge graph can include a set of nodes connected to one another via vertices. Each node can correspond to a keyword or phrase. Each vertex can specify a semantic distance between two nodes.
- the semantic distance can represent or correspond to a semantic similarity or relatedness measure between the words or phrases of the nodes.
- the NLP component 114 can calculate or determine a semantic distance between the corresponding identifier for the point location and the one or more referential keywords using the semantic knowledge graph.
- the identifier can include a name or a category type.
- the NLP component 114 can identify the node corresponding to the referential keyword and the node corresponding to the identifier for the point location. The NLP component 114 can then determine the semantic distance between the two nodes.
- the NLP component 114 can identify the one or more point locations based on the semantic distances between the referential words and the identifiers of the set of point locations.
- the NLP component 114 can identify the point location with the lowest semantic distance with the one or more referential keywords. To identify multiple point locations, the NLP component 114 can identify the one or more point locations with the lowest n semantic distances from the referential keywords.
- the NLP component 114 can also determine whether the referential keywords refer to any of the point locations within the reference frame.
- the NLP component 114 can compare the semantic distance between each referential keyword and the identifier for each point location to a threshold distance.
- the threshold distance can indicate the maximum semantic distance at which the NLP component 114 can determine that referential keyword refers to the identifier in the semantic knowledge graph.
- the NLP component 114 can determine at least one semantic distance between one of the referential keywords and one of the identifiers is less than or equal to the threshold distance. Responsive to the determination that at least one semantic distance is less than or equal to the threshold distance, the NLP component 114 can determine at least one referential keyword refers to one of the point locations within the reference frame.
- the NLP component 114 can determine that all the semantic distances are greater than the threshold distance. Responsive to the determination that all the semantic distances are greater than the threshold distance, the NLP component 114 can determine that the referential keywords do not refer to any point locations within the reference frame.
- the NLP component 114 can also identify the one or more point locations using semantic analysis techniques, such as word-sense disambiguation, discourse referent analysis, and deictic analysis, among others.
- the NLP component 114 can determine whether to use the semantic analysis techniques based on the semantic distances determined using the semantic knowledge graph.
- the NLP component 114 can compare the semantic distances between the referential keywords and the identifiers of the point location to a threshold distance.
- the NLP component 114 can determine that a set percentage of the semantic distances (e.g., above 90%) are greater than the threshold.
- the relatively high semantic distances may indicate that semantic knowledge graph may be ineffective at disambiguating among the identifiers for the point locations.
- the NLP component 114 can use the semantic analysis techniques to identify the one or more point locations. For each point location of the set the NLP component 114 can apply the semantic analysis technique to calculate or determine an indexical measure between the corresponding identifier for the point location and the referential keywords.
- the indexical measure can indicate a likelihood that the referential keyword parsed from the input audio signal references or denotes the identifier for the point location. Having determined the indexical measures, the NLP component 114 can identify the point location with the greatest indexical measure with the one or more referential keywords. To identify multiple point locations, the NLP component 114 can identify the one or more point locations with the greatest n indexical measures in relation to the referential keywords.
- the NLP component 114 can also determine whether the referential keywords refer to any of the point locations within the reference frame.
- the NLP component 114 can compare the indexical measures between each referential keyword and the identifier for each point location to a threshold measure.
- the threshold measure can indicate the maximum indexical measure at which the NLP component 114 can determine that referential keyword refers to the identifier.
- the NLP component 114 can determine at least one indexical measure between one of the referential keywords and one of the identifiers is less than or equal to the threshold measure. Responsive to the determination that at least one indexical measure is less than or equal to the threshold measure, the NLP component 114 can determine at least one referential keyword refers to one of the point locations within the reference frame.
- the NLP component 114 can determine that all the indexical measures are greater than the threshold measure. Responsive to the determination that all the indexical measures are greater than the threshold measure, the NLP component 114 can determine that the referential keywords do not refer to any point locations within the reference frame.
- the NLP component 114 can use the set of search terms previously received by the navigation application 110 to identify the one or more point locations from the set of point locations. For each point location of the set, the NLP component 114 can calculate or determine a semantic distance between the corresponding identifier for the point location and the one or more search terms. In the semantic knowledge graph, the NLP component 114 can identify the node corresponding to the search term and the node corresponding to the identifier for the point location. The NLP component 114 can then determine the semantic distance between the two nodes. The NLP component 114 can select a subset of point locations based on the semantic distances between the search terms and the identifiers of the set of point locations.
- the NLP component 114 can select the subset of point locations with the lowest n semantic distances from the referential keywords. From the subset of point locations, the NLP component 114 can identify the one or more point locations using the functionalities detailed herein above.
- the NLP component 114 can identify the one or more point locations from the set. As discussed above, the geolocation sensing component 118 can determine or identify a direction of travel, a position, and a speed, among other measures of the client device 104 running the digital assistant application 108 or the navigation application 110 . The NLP component 114 can identify or select a subset of point locations from the set based on the measurements from the geolocation sensing component 118 . The NLP component 114 can identify the geographic coordinates of each point location retrieved from the navigation application 110 . The NLP component 114 can compare the geographic coordinates of the set of point locations with the position of the client device 104 .
- the NLP component 114 can identify the subset of location points with geographic coordinates within a defined proximity (e.g., within 1 to 3 km) of the position of the client device 104 . From the subset, the NLP component 114 can use the direction of travel to select a smaller subset of point locations. The NLP component 114 can select or identify the smaller subset of point locations with geographic coordinates along the direction of travel and exclude the point locations opposite of the direction of travel. For example, the NLP component 114 can select the point locations north within 2 km of the client device 104 , when the client device 104 is measured travelling northward. From the smaller subset of point locations, the NLP component 114 can identify the one or more point locations using the functionalities detailed herein above.
- the NLP component 114 can use the location identifier of the client device 104 and the location identifiers of the point locations to identify the one or more point locations from the set.
- the NLP component 114 can compare the location identifier for the client device 104 to the location identifiers of the point locations in the set. For each point location, the NLP component 114 can determine whether the location identifier of the point location is within a defined proximity (e.g., less than 1 km to 3 km) of the location identifier for the client device 104 .
- the NLP component 114 can select the subset of point locations with location identifiers within the defined proximity of the location identifier of the client device 104 . From the subset of point locations, the NLP component 114 can identify the one or more point locations using the functionalities detailed herein above.
- the NLP component 114 can search for other keywords related to the referential keywords identified in the input audio signal.
- the NLP component 114 can automatically generate the expanded entity based on content or preferences the data processing system 102 received from the client device 104 .
- the NLP component 114 can generate the expanded entity based on content or preferences the data processing system 102 requests from the client device 104 in a subsequent audio-based input request.
- the NLP component 114 can search for additional keywords related to the referential keywords to identify the one or more point locations.
- the input audio signal can include “Ok, let's go home,” and the NLP component 114 may have identified “home” as a referential keyword.
- the end user of the client device 104 may have previously provided the data processing system 102 running the digital assistant application 108 with the end user's home address.
- the NLP component 114 can retrieve the location identifier for the end user's home address, and compare with the location identifiers of the point locations retrieved from the navigation application 110 . By comparing the location identifiers, the NLP component 114 can identify the point location corresponding to the referential keyword of “home.”
- the NLP component 114 can identify the one or more point locations from the set based on further analysis of the referential keywords.
- the NLP component 114 can determine or identify which portion of the vector-based map 146 the referential keyword is referencing.
- the navigation interface component 116 can access the navigation application 110 to retrieve the point locations of a portion of the vector-based map 146 visible through the viewport.
- the navigation interface component 116 can access the navigation application 110 to access another portion of the vector-based map 145 about the proximity outside the viewport about the destination location.
- the point locations can be labeled as visible within the viewport or outside the viewport.
- the NLP component 114 can perform semantic analysis techniques to determine whether the referential keyword is a proximal word or a distal word.
- the proximal word can denote a point location nearby, and can correlate to one of the point locations in the portion of the vector-based map 146 visible through the viewport of the navigation application 110 .
- the distal word can denote a point location afar, and can correlate to one of the point locations in the portion of the vector-based map 146 outside the viewport of the navigation application 110 .
- the NLP component 114 can compare the one or more referential keywords to a set of predefined proximal words (e.g., “here,” “nearby,” and “close by”) and to a set of predefined distal words (e.g., “by the destination,” “over there,” “along,”).
- the NLP component 114 can determine that the referential word is a proximal word. In response to the determination, the NLP component 114 can select or identify a subset of point locations corresponding to the point locations on the portion of the vector-based map 146 visible through the viewport. The NLP component 114 can determine that the referential word is a distal word. In response to the determination, the NLP component 114 can select or identify a subset of point locations corresponding to the point locations on the portion of the vector-based map 146 outside the viewport. From the subset of point locations, the NLP component 114 can identify the one or more point locations using the functionalities detailed herein above.
- the NLP component 114 can identify the one or more point locations from the set of point locations within the reference frame using the one or more auxiliary keywords parsed from the input audio signal.
- the auxiliary keywords may be the keywords parsed from the input audio signal besides the request and the one or more referential keywords, and can correspond to keywords referencing the display of the client device 104 .
- the NLP component 114 can identify a subset area of the viewport of the navigation application 110 or the display of the client device 104 running the navigation application 110 for the auxiliary keyword.
- each keyword in the third set of predefined keywords used to identify the auxiliary keyword can correspond or be associated with the subset area of the viewport of the navigation application 110 .
- the auxiliary keyword “top-left corner” can correspond to a top left quadrant of the viewport of the navigation application 110 .
- the subset area of the viewport of the navigation application 110 can be defined using pixel coordinates (e.g., length by width).
- the NLP component 114 can identify or determine a subset area of the portion of the vector-based map 146 visible through the viewport corresponding to the subset area associated with the auxiliary keywords.
- the NLP component 114 can convert the pixel coordinate defined for the subset area of the viewport associated with the auxiliary keywords to the dimensions and coordinates for the portion of the vector-based map 146 visible through the viewport.
- the NLP component 114 can select or identify a subset of point locations.
- the NLP component 114 can compare the geographic coordinates of each point location with the dimensions and coordinates. Based on the comparison, the NLP component 114 can select or identify the point locations inside the subset area of the portion of the vector-based map 146 . From the subset of point locations, the NLP component 114 can identify the one or more point locations using the functionalities detailed herein above.
- the NLP component 114 can use previously received input audio signals in identifying the one or more point locations from the set.
- the NLP component 114 can store and maintain input audio signals determined to reference at least one function of the navigation application 110 .
- the NLP component 114 can also store and maintain the one or more keywords parsed from the previously received input audio signals determined to reference at least one function of the navigation application 110 .
- the NLP component 114 can identify a time elapsed since receipt of each stored input audio signal. For each input audio signal, the NLP component 114 can determine whether the elapsed time is greater than or equal to a defined threshold time (e.g., 15 seconds to 60 minutes).
- the NLP component 114 can identify a set of previously received input audio signals with elapsed time less than the defined threshold time. For each in the set, the NLP component 114 can parse the input audio signal to identify the one or more referential keywords using functionalities described herein above.
- the NLP component 114 can select or identify a subset of point locations from the set of point locations.
- the NLP component 114 can determine a match between the referential keywords from the previous input audio signal and the referential keywords from the current input audio signal. Based on the match, the NLP component 114 can adjust (e.g., by decreasing) the semantic distance between the referential keyword corresponding to the match and the identifier of the point location.
- both the previous and the current input audio signal can include the referential word “restaurant.” Having determined the match, the NLP component 114 can decrease the semantic distance between the referential word “restaurant” and the identifier, thereby increasing the likelihood that the point locations corresponding to restaurants is selected.
- the NLP component 114 can also use the semantic analysis techniques to calculate or determine an indexical measure between the referential words of the current input audio signal with the referential words of the previously received input audio signals.
- the semantic analysis techniques can include word-sense disambiguation, discourse referent analysis, and deictic analysis, among others.
- the NLP component 114 can calculate or determine the indexical measure.
- the indexical measure can indicate a likelihood that the referential keyword parsed from the input audio signal references or denotes the identifier for the point location. Having determined the indexical measures, the NLP component 114 can identify the referential word from the previously received input audio signal with the greatest indexical measure with the one or more referential keywords.
- the NLP component 114 can identify the one or more referential words from the previously received input audio signal with the greatest n indexical measures in relation to the referential keywords of the current input audio signal. With the identification, the NLP component 114 can use the one or more referential keywords from the previously received input audio signals to select the subset of point locations.
- the NLP component 114 can calculate or determine a semantic distance between the corresponding identifier for the point location and the one or more referential keywords from the previously received input audio signal.
- the NLP component 114 can identify the node corresponding to the referential keywords and the node corresponding to the identifier for the point location.
- the NLP component 114 can then determine the semantic distance between the two nodes.
- the NLP component 114 can select a subset of point locations based on the semantic distances between the referential keywords and the identifiers of the set of point locations. From the set of point locations retrieved from the navigation application 110 , the NLP component 114 can select the subset of point locations with the lowest n semantic distances from the referential keywords. From the subset of point locations, the NLP component 114 can identify the one or more point locations using the functionalities detailed herein above.
- the data processing system 102 can execute or run an instance of the direct action handler component 120 .
- the direct action handler component 120 can execute scripts or programs based on input received from the NLP component 114 .
- the navigator service 106 can provide the scripts or programs.
- the navigator service 106 can make the scripts or programs available to the data processing system 102 through the API.
- the direct action handler component 120 can determine parameters or responses to input fields and can package the data into an action data structure.
- the action data structure can be provided to the data processing system 102 through the API.
- the direct action handler component 120 can transmit the action data structure to the navigation application 110 for fulfillment or the data processing system 102 can fulfill the instructions of the action data structure.
- the direct action handler component 120 can generate or select data structure for the actions of a thread or conversations based on the request and the referential keywords parsed from the input audio signal.
- the NLP component 114 can determine that the input audio signal references the navigation application 110 and which function of the navigation application 110 .
- the action data structure can include information for the navigation application 110 to complete the request.
- the information can include the request type corresponding to one of the functions of the navigation application 110 indicated in the input audio signal.
- the information can include one or more parameters to carry out the function of the navigation application 110 corresponding to the function type.
- the one or more parameters can include the one or more point locations identified using the referential keywords and auxiliary keywords parsed from the input audio signal.
- the one or more parameters can include the identifiers for the one or more identified point locations.
- the one or more parameters can include linking data for the digital assistant application 108 or the navigation application 110 running on the client device 104 , such as an account identifier and authentication credentials.
- the direct action handler component 120 can also invoke or call the navigation application 110 using the request.
- the direct action handler component 120 can package the request into an action data structure for transmission as another request (also sometimes referred to as a message) to the navigator service 106 .
- the direct action handler component 120 can retrieve at least one template 136 from the data repository 126 to determine which fields to include into the action data structure for the navigation application 110 .
- the direct action handler component 120 can retrieve the template 136 to obtain information for the fields of the data structure.
- the direct action handler component 120 can populate the fields from the template 136 to generate the action data structure.
- the template 136 can be set or configured for the navigation application 110 or the navigation service 106 for creation of the action data structure.
- the template 136 for the navigation application 110 can be of the following form: [account identifier], [authentication credentials], [request type], [parameters]I.
- the direct action handler component 120 can identify and insert the account identifier, the authentication credentials, the request type (or function identifier), and the one or more parameters, among other information.
- the direct action handler component 120 can set the one or more parameters to include the identifiers of the point locations, coordinates of the client device 104 , and location identifiers of the point locations, among other data.
- the identifiers included in the parameters may include the identifiers for the point locations identified using the referential keyword.
- the one or more parameters can also include an indicator that at least one referential keyword references one of the point locations within the reference frame.
- the direct action handler component 120 can set the one or more parameters to include the coordinates of the client device 104 and the referential keywords, among others.
- the one or more parameters can also include an indicator that the referential keywords do not reference any of the point locations within the reference frame.
- the direct action handler component 120 can expand the entities to convert the entities into a format that the navigator service 106 for a given field of the action data structures for the navigator service 106 .
- the entities can include information that may be ambiguous or unclear to the navigator service 106 . For example, when the navigator service 106 requested a street address, the end user may provide an entity that is the proper name of a location or business.
- the NLP component 114 can automatically generate the expanded entity based on content or preferences the data processing system 102 received from the client device 104 .
- the NLP component 114 can generate the expanded entity based on content or preferences the data processing system 102 requests from the client device 104 in a subsequent audio-based input request.
- the data processing system 102 can receive an input audio signal that includes “Ok, let's go home.”
- the NLP component 114 may have determined which identifier of the point locations retrieved from the navigation application 110 corresponds to the referential keyword. For example, the NLP component 114 can identify “home” as a location entity as one of the one or more parameters for the function; however, the location field in the action data structure can require a street address, city, state, and zip code. In this example, the “home” location entity is not in the format requested by the navigator service 106 .
- the NLP component 114 can expand “home” into the format requested by field of the service provider device's action data structure (e.g., ⁇ street address:“123 Main St.”, city:“Anytown”, state:“CA” ⁇ ).
- the data processing system 102 can generate and transmit an audio-based input request that requests the end user indicate a specific address rather than “home.” Expanding the entity prior to transmitting the entity to the navigator service 106 can reduce the number of required network transmission because the navigator service 106 may not send another request clarifying or additional information after receiving the unexpanded entity.
- the direct action handler component 120 can send, transmit, or provide the action data structure to the navigation application 110 .
- the client device 104 running the digital assistant application 108 can lack the navigation application 110 , and in response the navigation interface component 116 can access another associated client device 104 to access the navigation application 110 .
- the direct action handler component 120 can provide the action data structure to the navigation application 110 .
- the direct action handler component 120 can provide the action data structure to another client device 104 identified as running or having the navigation application 110 .
- the digital assistant interface component 138 can receive the action data structure generated by the direct action handler component 120 .
- the digital assistant interface component 138 can parse the action data structure in accordance to the template 136 .
- the digital assistant interface component 138 can also maintain a copy of the template 136 (e.g., on a database accessible by the navigator service 106 ).
- the digital assistant interface component 138 can identify the account identifier, the authentication credentials, the request type, and the one or more parameters from the data action structure.
- the digital assistant interface component 138 can authenticate the account identifier by comparing a local copy of authentication credentials to the copy of the authentication credentials from the action data structure.
- the digital assistant interface component 138 can retrieve the local copy of the authentication credentials from the navigator service 106 or the navigation application 110 running on the client device 104 using the account identifier. Responsive to determining a match between the authentication credentials to successfully authenticate the account identifier, the digital assistant interface component 138 can initiate the navigation guidance process using the request type and the one or more parameters.
- the navigation guidance process can include the location finding operation and the path routing operation.
- the digital assistant interface component 138 can identify the request type as corresponding to the location finding operation. Responsive to the identification, the digital assistant interface component 138 can invoke the location finder component 140 to initiate the location finding operation. Under the location finding location, the action data structure can include one or more point locations.
- the digital assistant interface component 138 can identify the request type as corresponding to the path routing operation. Under the path routing operation, the action data structure can include a single point location. Responsive to the identification, the digital assistant interface component 138 can invoke the path router component 142 to initiate the path routing operation.
- the data processing system 102 or the navigator service 106 can execute or run an instance of the location finder component 140 of the navigation application 110 . Responsive to the invocation, the location finder component 140 can present the one or more point locations on the portion of the vector-based map 146 visible through the viewport of the navigation application 110 . The location finder component 140 can parse the action data structure to identify the indicator. Using the indicator, the location finder component 140 can determine the referential keywords of the input audio signal at the digital assistant application 108 references at least one point location. Responsive to the determination, the location finder component 140 can identify the one or more point locations from the action data structure. For each point location, the location finder component 140 can identify a location identifier corresponding to the point location on the vector-based map 146 .
- the location finder component 140 can determine the referential keywords of the input audio signal at the digital assistant application 108 references at least one point location based on the indicator of the action data structure. In response to the determination, the location finder component 140 can access the vector-based map 146 outside the reference frame. Having accessed the vector-based map 146 , the location finder component 140 can search for identifiers of the one or more point locations outside the reference frame. The location finder component 140 can then identify identifiers of the one or more point locations outside the reference frame in the vector-based map 146 matching the referential keywords of the action data structure. For example, the referential keywords “Tower ABC” included in the received action data structure may refer to any of the point locations within the reference frame.
- the location finder component 140 can search for point locations matching the identifier the “Tower ABC” in the vector-based map 146 outside the initial reference frame.
- the location finder component 140 can identify multiple point locations with identifiers matching the referential keywords.
- the location finder component 140 can identify the point location nearest to the client device 104 .
- the location finder component 140 can identify the geographic coordinates for the identified point location.
- the location finder component 140 can modify the reference frame to include the point location with the identifier matching the referential keywords.
- the location finder component 140 can identify the dimensions and coordinates of the initial reference frame in corresponding to the visible portion of the vector-based map 146 .
- the location finder component 140 can move the coordinates of the reference frame to include the coordinates of the point location with the identifier matching the referential keywords.
- the coordinates of the point location may be, for example, at the center of the new reference frame.
- the location finder component 140 can also maintain the dimensions of the reference frame. With the reference frame moved, the navigation application 110 can display a different portion of the vector-based map 146 through the viewport.
- the portion may correspond to the reference frame moved to include the point location with the identifier matching the referential keywords.
- the digital assistant application 108 and the navigation application 110 can be used to present point locations and perform other functions inside and outside the portion of the vector-based map 146 displayed through the viewport.
- the first voice query parsed by the NLP component 114 may be “Show me Tower ABC.”
- the NLP component 114 may have determined that the first voice query does not refer to any point location currently visible in the vector-based map 146 displayed through the viewport of the navigation application 110 .
- the location finder component 140 can find the point location with the identifier corresponding to “Tower ABC.” Subsequently, the second voice query parsed by the NLP component 114 may be “Show me patisseries.” The NLP component 114 can determine that some of the point locations now visible on the portion of the vector-based map 146 visible through the viewport are referenced by the referential keyword “patisseries.” The location finder component 140 can then highlight the corresponding point location in the portion of the vector-based map 146 .
- the location finder component 140 can present the point locations corresponding to the location identifiers on the portion of the vector-based map 146 visible through the viewport of the navigation application 110 .
- the location finder component 140 can insert a point or circle or highlight a graphical representation corresponding to the point location on the vector-based map 146 .
- the location finder component 140 can also display the identifiers for the point locations in text.
- the location finder component 140 Upon displaying the point locations on the portion of the vector-based map 146 through the viewport, the location finder component 140 can generate a response to provide as text for display or for an output audio signal.
- the response can include the request type corresponding to the location finding operation.
- the response can include the identifiers for the point locations displayed within the portion of the vector-based map 146 visible through the viewport of the navigation application 110 .
- the response can also include a number of the displayed point locations.
- the response can also include at least one response phrase with one or more words for display or for an output audio signal.
- the response phrase can be defined using a template.
- the template for the response phrase may be of the form: “[number of point locations] [identifier] found in the area.”
- the location finder component 140 can identify the request type, the identifiers for the displayed point locations, the number of displayed point locations, and the at least one response phrase.
- the digital assistant interface component 138 can send, transmit, or provide the response to the digital assistant application 108 .
- the data processing system 102 or the navigator service 106 can execute or run an instance of the path router component 142 of the navigation application 110 . Responsive to the invocation, the path router component 142 can generate, determine, or identify a travel path to the point location identified in the action data structure.
- the path router component 142 can identify the current geographic coordinates of the client device 104 running the navigation application 110 using the geolocation sensing component 118 .
- the path router component 142 can convert the geographic coordinates of the client device 104 to a location identifier on the vector-based map 146 .
- the path router component 142 can set the location identifier for the client device 104 as a start location.
- the path router component 142 can identify the location identifier corresponding to the point location of the action data structure.
- the path router component 142 can set the location identifier of the point location as a destination location.
- the path router component 142 can apply pathfinding algorithms (e.g., Djikstra's algorithm, A* algorithm, and Kruskal's algorithm) to determine the travel path between the start location and the destination location on paths of the vector-based map 146 .
- pathfinding algorithms e.g., Djikstra's algorithm, A* algorithm, and Kruskal's algorithm
- the vector-based map 146 can include paths corresponding to the transportation networks.
- the path router component 142 can also present or display at least a part of the travel path on the portion of the vector-based map 146 visible through the viewport of the navigation application 110 .
- the path router component 142 can generate a response to provide as text for display or for an output audio signal.
- the response can include the request type corresponding to the path routing operation.
- the response can include the identifier for the point location corresponding to the destination location on the vector-based map 146 .
- the response can also include an estimated travel time to the destination location.
- the response can also include at least one response phrase with one or more words for display or for an output audio signal.
- the response phrase can be defined using a template.
- the template for the response phrase may be of the form: “Route found to [destination location].
- the location finder component 140 can identify the request type, the identifier for the point location, the estimated travel time, and the at least one response phrase. Once the response is generated, the digital assistant interface component 138 can send, transmit, or provide the response to the digital assistant application 108 .
- the audio signal generator component 122 can parse the response to identify the response phrase for textual output or for an output audio signal.
- the audio signal generator component 122 can generate an output audio file based on the one or more words of response phrase in the response from the navigator service 106 .
- the audio signal generator component 122 can play (e.g., via the speaker 148 of the client device 104 ) the output audio file of the one or more words of the response phrase.
- the digital assistant application 108 can also display the one or more words of the response phrase in text.
- the response selector component 124 can select or identify responses phrases using the policies 132 or the response data 134 maintained on the data repository 126 .
- the policies 132 can be particular to a request type (e.g., the location finding operation or the path routing operation), and can specify the response data 134 for the request type.
- the response selector component 124 can search the policies 132 for generating the output using the request type of the response from the navigation application 110 . Once the policy 132 is identified, the response selector component 124 can match the contents of the response from the navigation application 110 with the response data 134 . Responsive to identifying the policy 132 for the location finding operation, the response selector component 124 can match the identifiers for the displayed point locations and the number of displayed point locations into the response data 13 4 for the policy 132 . Responsive to identifying the policy 132 for the path routing operation, the response selector component 124 can match the identifier for the point location and the estimated travel time into the response data 134 for the policy 132 .
- FIG. 2 depicted is a sequence diagram of an example data flow 200 to determine operational statuses of navigation applications 110 interfacing with the digital assistant application 108 in the system illustrated in FIG. 1 .
- the data flow 200 can be implemented or performed by the system 100 described above in conjunction with FIG. 1 or system 600 detailed below in conjunction with FIG. 6 .
- a local instance of the digital assistant application 108 running on the client device 104 can detect an input audio signal via the sensor 158 and perform initial processing on the input audio signal to generate a request 205 .
- the request 205 can include the input audio signal itself or one or more words identified in the input audio signal using machine learning techniques.
- the client device 104 can transmit the request 205 to the data processing system 102 .
- a remote instance of the digital assistant application 108 running on the data processing system 102 can perform additional processing on the request 205 .
- the NLP component 114 running on the data processing system 102 can parse the request 205 to determine that the request 205 is referencing a function to be performed by the navigation application 110 .
- the NLP component 114 can also identify the request corresponding to the function and referential keywords from the input audio signal using semantic analysis techniques.
- the navigation interface component 116 can send an access request 210 to the navigator service 106 (or another client device 104 ) running the navigation application 110 .
- the digital assistant interface component 138 running on the navigator service 106 can identify information visible through the viewport of the navigation application 110 .
- the information can include point locations and identifiers for the point locations of the geographic region represented by the vector-based map 146 visible through the viewport of the navigation application 110 .
- the digital assistant interface component 138 can set the information visible through the viewport of the navigation application 110 as reference frame data 215 .
- the digital assistant interface component 138 can in turn provide the reference frame data 215 to the data processing system 102 .
- the NLP component 114 can use semantic analysis techniques to determine which point location the referential keyword of the input audio signal is denoting. For example, the NLP component 114 can compare the referential keywords with the identifiers of the point locations. With the identification of the point location, the direct action handler component 120 executing on the data processing system 102 can generate a direct action data structure 220 .
- the direct action data structure 220 can include the request type corresponding to the function to be performed by the navigation application 110 (e.g., location finding or path routing).
- the direct action data structure 220 can also include the point location identified using the referential keyword.
- the direct action handler component 120 can transmit the direct action data structure 220 to the navigator service 106 (or the client device 104 ) executing the navigation application 110 .
- the navigation application 110 can perform the navigation guidance process.
- the digital assistant interface component 138 can parse the direct action data structure 220 to identify the request type. Using the request type, the digital assistant interface component 138 can invoke one of the location finder component 140 and the path router component 142 running on the navigator service 106 . When the request type is identified as corresponding to the location finding function, the location finder component 140 can present the point locations (e.g., via highlighting) on the geographic region displayed through the viewport of the navigation application 110 .
- the path router component 142 can determine the travel path between a starting location (e.g., the client device 104 ) to a destination location corresponding to the point location of the direct action data structure 220 .
- the path router component 142 can present a part of the travel path on the geographic region displayed on the viewport of the navigation application 110 .
- the location finder component 140 and the path router component 142 can each generate a response 225 to transmit back to the digital assistant application 108 executing on the data processing system 102 .
- the response 225 can include a response phrase as well as other parameters.
- the audio signal generator component 122 can generate another response 230 to provide to the client device 104 .
- the digital assistant application 108 running on the client device 104 can display the response 230 as text on display or as an audio file outputted through the speaker 148 .
- FIG. 3 depicted is the client device 104 running the digital assistant application 108 on the left and running the navigation application 110 on the right under configuration 300 .
- the client devices 104 executing the digital assistant application 108 and the navigation application 110 can be the same or different.
- the digital assistant application 108 running on the client device 104 on the left can detect an input audio signal via the sensor 158 .
- the digital assistant application 108 can apply natural language processing techniques to identify one or more words in the detected input audio signal.
- the digital assistant application 108 can display the output as a text content item 305 including the words “Show me coffee stores nearby” identified from the input audio signal.
- the digital assistant application 108 can determine that the input audio signal is referencing a location finding operation of the navigation application 110 .
- the digital assistant application 108 can identify the words “Show me” as the request and “coffee stores nearby” as the referential keywords.
- the digital assistant application 108 can access the navigation application 110 .
- the navigation application 110 running on the client device 104 on the right can display a portion of the vector-based map 146 through a viewport 310 of the navigation application 110 .
- the viewport 310 of the navigation application 110 can correspond to a size of the display of the client device 104 .
- the vector-based map 146 can include a set of point locations 320 corresponding to building and a set of paths among the point locations 320 representing the transportation networks, such as the roads and railroads as illustrated.
- Each point location 320 can have an identifier such as name or a category type of the building, such as “café,” “gas station,” “hotel,” and “office.”
- the navigation application 110 can identify the point locations 320 appearing in the viewport 310 , such as the point locations 320 with the identifiers “Café B,” “Café C,” and “Office.”
- the navigation application 110 can exclude point locations outside the viewport 310 , such as the point locations 320 with the identifiers “Café A” and “Café D.”
- the navigation application 110 can display current location 315 of the client device 104 on the vector-based map 146 using a mark (e.g., a four-point star).
- the navigation application 110 can provide the point locations with the identifiers to the digital assistant application 108 .
- the digital assistant application 108 can perform semantic analysis techniques to identify which point locations the referential keywords are referring to.
- the digital assistant application 108 may have identified “coffee stores nearby” as the referential keywords.
- the digital assistant application 108 can determine that the referential keywords of “coffee stores nearby” are denote the point locations 320 with the identifiers “Café B” and “Café C.” The digital assistant application 108 can determine that the referential keywords do not denote the point location 320 with the identifier “Office.” With the identification of the point locations 320 having the identifiers “Café B” and “Café C,” the digital assistant application 108 can generate the direct action data structure to provide to the navigation application 110 .
- the direct action data structure can have the identified point locations 320 and the request type corresponding to the location finding operation of the navigation application 110 .
- the navigation application 110 can parse the direct action data structure to identify that the function to be performed is the location finding operation.
- the navigation application 110 can also parse the direct action data structure to identify the point locations 320 with the identifiers “Café B” and “Café C.” Based on these identifications, the navigation application 110 can highlight the buildings representing the point locations 320 with the identifiers “Café B” and “Café C.”
- the navigation application 110 can generate and send a response back to the digital assistant application 108 .
- the response can include a response phrase, “Two coffee stores found.”
- the digital assistant application 108 can in turn display a text content item 325 on the screen of the client device 104 .
- the digital assistant application 108 can detect another input audio signal via the sensor 158 .
- the digital assistant application 108 can apply natural language processing techniques to identify one or more words in the detected input audio signal.
- the digital assistant application 108 can display the output as a text content item 330 including the words “Take me to that one on the left” identified from the input audio signal.
- the digital assistant application 108 can determine that the input audio signal is referencing a path routing operation of the navigation application 110 .
- the digital assistant application 108 can identify the words “Take me” as the request, “that one” as the referential keyword, and “on the left” as the auxiliary keywords.
- the digital assistant application 108 can identify that the referential keyword together with the auxiliary keywords denote the point location 320 with the identifier “Café C” that appears on the left of the viewport 310 . Based on the identification of the point location 320 with the identifier “Café C,” the generate the direct action data structure to provide to the navigation application 110 .
- the direct action data structure can have the identified point location 320 and the request type corresponding to the path routing operation of the navigation application 110 .
- the navigation application 110 can parse the direct action data structure to identify that the function to be performed is the path routing operation.
- the navigation application 110 can also parse the direct action data structure to identify the point location 320 with the identifier “Café C,” and can set the point location 320 as a destination location.
- the navigation application 110 can also identify a current location of the client device 104 as a starting location. Based on these identifications, the navigation application 110 can determine a travel path 335 through the vector-based map 146 using pathfinding algorithms. Based on the travel path 335 , the navigation application 110 can determine an estimate time of arrival.
- the navigation application 110 can render and display the travel path 335 on the vector-based map 146 .
- the navigation application 110 can generate and send a response back to the digital assistant application 108 .
- the response can include a response phrase, “Round found. ETA 15 minutes.”
- the digital assistant application 108 can in turn display a text content item 340 on the screen of the client device 104 .
- FIG. 4 illustrates a block diagram of an example method 400 to generate voice-activated threads in a networked computer environment.
- the method 400 can be implemented or executed by the system 100 described above in conjunction with FIGS. 1-3 or system 600 detailed below in conjunction with FIG. 6 .
- the method can include receiving an input audio signal ( 405 ).
- the method 400 can include parsing the input audio signal ( 410 ).
- the method 400 can include selecting an action data structure ( 415 ).
- the method 400 can include expanding a response entity ( 420 ).
- the method can include populating the action data structure ( 425 ).
- the method 400 can include transmitting the digital component ( 430 ).
- the method 400 can include receiving an input signal ( 405 ).
- the method can include receiving, by an NLP component executed by a data processing system, the input signal.
- the input signal can be an input audio signal that is detected by a sensor at a first client device and transmitted to the data processing system.
- the sensor can be a microphone of the first client device.
- a digital assistant component executed at least partially by a data processing system that includes one or more processors and memory can receive the input audio signal.
- the input audio signal can include a conversation facilitated by a digital assistant.
- the conversation can include one or more inputs and outputs.
- the conversation can be audio based, text based, or a combination of audio and text.
- the input audio signal can include text input, or other types of input that can provide conversational information.
- the data processing system can receive the audio input for a session corresponding to the conversation.
- the method 400 can include parsing the input signal ( 410 ).
- the NLP component of the data processing system can parse the input signal to identify a request.
- the NLP component can identify at least one entity in the input signal.
- the request can be an intent or request that can be fulfilled by one or more service provider devices.
- the request can be a part of a conversational phrase. For example, the request can be “Ok, order a car to take me home.”
- the entities identified by the NLP component can be phrases or terms in the request that map to input fields or types the service provider device requests when fulfilling a request.
- the service provider device providing the car service may request a current location input field and a destination input field.
- the NLP component can map the term “home” to the destination input field.
- the method 400 can include selecting an action data structure ( 415 ).
- the data processing system can select the action data structure based on the request parsed from the input signal.
- the data processing system can select the action data structure based on the service provider device that can fulfill the request.
- the action data structure can be a data structure or object that is created by the service provider device.
- the service provider device can provide the action data structure to the data processing system.
- the action data structure can indicate fields, data, or information that the service provider device uses to fulfill requests.
- the service provider device can flag one or more of the fields to request that the data processing system expand the entity returned for that field. When a field is flagged for expansion, the data processing system can design and generate conversation-based data exchanges with the client device 104 to retrieve information or data for the flagged field rather than the service provider device 160 designing the conversation-based data exchange.
- the method 400 can include expanding the response entity ( 420 ).
- the data processing system can determine the entity mapped to the input field needs to be expanded if the entity is not in a format specified by the service provider device.
- the NLP component can determine “home” is the entity mapped to a destination.
- the direct action handler component can determine to update the action data structure to include the entity “home” in a destination field.
- the direct action handler component can determine the format of the response entity does not match the format of the destination field.
- the destination field can have the format of an object that requests a street address, city, state, and zip code.
- the data processing system can expand the entity to a street address, city, state, and zip code format. For example, the data processing system can look up the address the end user provided the data processing system as the end user's “home” address.
- the data processing system can expand the entity based on an expansion policy.
- the expansion policy can indicate whether the data processing system has permission to expand the term or can indicate what end user or client computing device provided data can be included in an expanded entity.
- the data processing system can expand the entity based on a request from a service provider device.
- the data processing system can generate a first action data structure with the unexpanded entity.
- the data processing system can transmit the first action data structure to the service provider device for processing to fulfill the request.
- the service provider device can return the action data structure (or a portion thereof) to the data processing system if the service provider device cannot process or understand the data in on or more of the action data structure's fields.
- the service provider device can attempt to process the “home” entity in the destination field and then request the data processing system expand the “home” entity after the service provider device determines that it cannot process or understand the entity.
- the method 400 can include populating the action data structure ( 425 ).
- the direct action handler component can populate the action data structure with the expanded entity.
- the direct action handler component can populate the action data structure with the entity.
- the action data structure can be an object into which the entity or expanded entity is stored. Populating the action data structure can also be referred to update the action data structure.
- the method 400 can include transmitting the action data structure ( 430 ).
- the data processing system can transmit the populated action data structure to the service provider device.
- the service provider device Upon receipt of the action data structure, the service provider device can fulfill the request or request additional information from the data processing system or client computing device.
- the method 500 can be implemented or executed by the system 100 described above in conjunction with FIGS. 1-3 or system 600 detailed below in conjunction with FIG. 6 .
- the method 500 can include retrieving point location visible through a viewport ( 505 ).
- the method 500 can include identifying a point location with identifier corresponding to a referential word ( 510 ).
- the method 500 can include generating an action data structure with the identifier ( 515 ).
- the method 500 can include initiating a navigation guidance process ( 520 ).
- the method 500 can include retrieving point location visible through a viewport ( 505 ).
- the data processing system e.g., the data processing system 102 ) executing a digital assistant application can identify a request and a referential word parsed from an input audio signal using natural language processing techniques.
- the data processing system can determine that the request is referring to a function of a navigation application running on a client device.
- the function can include a location finding function and a path routing function.
- the data processing system can access the navigation application to retrieve point locations on a geographic region displayed through a viewport of the navigation application. Each point location can correspond to a feature on the geographic region, and can have an identifier.
- the method 500 can include identifying a point location with identifier corresponding to a referential word ( 510 ). With the retrieval of the point locations displayed through the viewport of the navigation application, the data processing system can identify which point location the referential word of the input audio signal is referring to. The data processing system can use semantic analysis techniques to identify which identifier corresponding to the point location the referential word is denoting. The semantic analysis techniques can include using a semantic knowledge graph, performing deixis analysis, and generating n-grams, among others.
- the method 500 can include generating an action data structure with the identifier ( 515 ).
- the data processing system can use the identified request and the point location to generate the action data structure in accordance to a template.
- the request can correspond to one of the functions of the navigation application.
- the point location can include the one corresponding to the referential word parsed from the input audio signal.
- the action data structure can also include an account identifier and an authentication credential, among others.
- the method 500 can include initiating a navigation guidance process ( 520 ).
- the data processing system can send the action data structure to the navigation application to initiate the navigation guidance process.
- the navigation guidance process can include the location finding operation and the path routing operation.
- the location finding operation can include presenting or displaying a graphical representation of the point locations corresponding to identifiers in the action data structure.
- the path routing operation can include determining and presenting a travel route between a current location and a destination location corresponding to the point location corresponding to the identifier in the action data structure.
- FIG. 6 is a block diagram of an example computer system 600 .
- the computer system or computing device 600 can include or be used to implement the system 100 or its components such as the data processing system 102 .
- the computing system 600 includes a bus 605 or other communication component for communicating information and a processor 610 or processing circuit coupled to the bus 605 for processing information.
- the computing system 600 can also include one or more processors 610 or processing circuits coupled to the bus for processing information.
- the computing system 600 also includes main memory 615 , such as a random access memory (RAM) or other dynamic storage device, coupled to the bus 605 for storing information and instructions to be executed by the processor 610 .
- the main memory 615 can be or include the data repository 126 or 148 .
- the main memory 615 can also be used for storing position information, temporary variables, or other intermediate information during execution of instructions by the processor 610 .
- the computing system 600 may further include a read-only memory (ROM) 620 or other static storage device coupled to the bus 605 for storing static information and instructions for the processor 610 .
- ROM read-only memory
- a storage device 625 such as a solid state device, magnetic disk or optical disk, can be coupled to the bus 605 to persistently store information and instructions.
- the storage device 625 can include or be part of the data repositories 126 or 144 .
- the computing system 600 may be coupled via the bus 605 to a display 635 , such as a liquid crystal display or active matrix display, for displaying information to a user.
- a display 635 such as a liquid crystal display or active matrix display, for displaying information to a user.
- An input device 630 such as a keyboard including alphanumeric and other keys, may be coupled to the bus 605 for communicating information and command selections to the processor 610 .
- the input device 630 can include a touch screen display 635 .
- the input device 630 can also include a cursor control, such as a mouse, a trackball, or cursor direction keys, for communicating direction information and command selections to the processor 610 and for controlling cursor movement on the display 635 .
- the display 635 can be part of the data processing system 102 , the client devices 104 , or other components of FIG. 1 , for example.
- the processes, systems and methods described herein can be implemented by the computing system 600 in response to the processor 610 executing an arrangement of instructions contained in main memory 615 . Such instructions can be read into main memory 615 from another computer-readable medium, such as the storage device 625 . Execution of the arrangement of instructions contained in main memory 615 causes the computing system 600 to perform the illustrative processes described herein. One or more processors in a multi-processing arrangement may also be employed to execute the instructions contained in main memory 615 . Hard-wired circuitry can be used in place of or in combination with software instructions together with the systems and methods described herein. Systems and methods described herein are not limited to any specific combination of hardware circuitry and software.
- the users may be provided with an opportunity to control whether programs or features that may collect personal information (e.g., information about a user's social network, social actions, or activities; a user's preferences; or a user's location), or to control whether or how to receive content from a content server or other data processing system that may be more relevant to the user.
- personal information e.g., information about a user's social network, social actions, or activities; a user's preferences; or a user's location
- certain data may be anonymized in one or more ways before it is stored or used, so that personally identifiable information is removed when generating parameters.
- a user's identity may be anonymized so that no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, postal code, or state level), so that a particular location of a user cannot be determined.
- location information such as to a city, postal code, or state level
- the user may have control over how information is collected about him or her and used by the content server.
- the subject matter and the operations described in this specification can be implemented in digital electronic circuitry or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- the subject matter described in this specification can be implemented as one or more computer programs, e.g., one or more circuits of computer program instructions, encoded on one or more computer storage media for execution by, or to control the operation of, data processing apparatuses.
- the program instructions can be encoded on an artificially generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- a computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial-access memory array or device, or a combination of one or more of them. While a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium can also be, or be included in, one or more separate components or media (e.g., multiple CDs, disks, or other storage devices).
- the operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
- data processing system encompass various apparatuses, devices, and machines for processing data, including, by way of example, a programmable processor, a computer, a system on a chip, or multiple ones, or combinations of the foregoing.
- the apparatus can include special-purpose logic circuitry, e.g., an FPGA (field-programmable gate array) or an ASIC (application-specific integrated circuit).
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them.
- the apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- the components of system 100 can include or share one or more data processing apparatuses, systems, computing devices, or processors.
- a computer program (also known as a program, software, software application, app, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
- a computer program can correspond to a file in a file system.
- a computer program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs (e.g., components of the data processing system 102 ) to perform actions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatuses can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field-programmable gate array) or an ASIC (application-specific integrated circuit).
- Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto optical disks; and CD-ROM and DVD-ROM disks.
- semiconductor memory devices e.g., EPROM, EEPROM, and flash memory devices
- magnetic disks e.g., internal hard disks or removable disks
- magneto optical disks e.g., CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- the subject matter described herein can be implemented in a computing system that includes a back end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front end component, e.g., a client computer having a graphical user interface or a web browser through which a user can interact with an implementation of the subject matter described in this specification, or a combination of one or more such back end, middleware, or front end components.
- the components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network.
- Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- LAN local area network
- WAN wide area network
- inter-network e.g., the Internet
- peer-to-peer networks e.g., ad hoc peer-to-peer networks.
- the computing system such as system 100 or system 500 can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network (e.g., the network 156 ).
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- a server transmits data (e.g., data packets representing a content item) to a client device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device).
- Data generated at the client device e.g., a result of the user interaction
- can be received from the client device at the server e.g., received by the data processing system 102 from the client devices 104 or the navigator service 106 ).
- the NLP component 114 and the direct action handler component 122 can be a single component, app, or program, or a logic device having one or more processing circuits, or part of one or more servers of the data processing system 102 .
- references to implementations, elements, or acts of the systems and methods herein referred to in the singular may also embrace implementations including a plurality of these elements, and any references in plural to any implementation, element, or act herein may also embrace implementations including only a single element.
- References in the singular or plural form are not intended to limit the presently disclosed systems or methods, their components, acts, or elements to single or plural configurations.
- References to any act or element being based on any information, act, or element may include implementations where the act or element is based at least in part on any information, act, or element.
- any implementation disclosed herein may be combined with any other implementation or embodiment, and references to “an implementation,” “some implementations,” “one implementation,” or the like are not necessarily mutually exclusive and are intended to indicate that a particular feature, structure, or characteristic described in connection with the implementation may be included in at least one implementation or embodiment. Such terms as used herein are not necessarily all referring to the same implementation. Any implementation may be combined with any other implementation, inclusively or exclusively, in any manner consistent with the aspects and implementations disclosed herein.
- references to “or” may be construed as inclusive so that any terms described using “or” may indicate any of a single, more than one, and all of the described terms.
- a reference to “at least one of ‘A’ and 13 ′” can include only ‘A’, only ‘B’, as well as both ‘A’ and ‘B’.
- Such references used in conjunction with “comprising” or other open terminology can include additional items.
Abstract
The present disclosure is generally related to systems and methods of interfacing among multiple applications in a networked computer environment. A data processing system can access a navigation application to retrieve point locations within a reference frame corresponding to a geographic region displayed in a viewport of the navigation application. Each point location can have an identifier. The data processing system can parse an input audio signal to identify a request and a referential word. The data processing system can identify a point location within the reference frame based on the referential word parsed from the input audio signal and the identifier for the point location. The data processing system can generate an action data structure including the point location identified. The data processing system can transmit the action data structure to the navigation application to initiate a navigation guidance process using the point location.
Description
- This application claims the benefit of priority under 35 U.S.C. § 120 as a continuation application of U.S. patent application Ser. No. 16/076,193, titled “INTERFACING BETWEEN DIGITAL ASSISTANT APPLICATIONS AND NAVIGATION APPLICATIONS,” filed Aug. 7, 2018, which claims benefit of priority under 35 U.S.C. § 371 as a national stage application of International Application No. PCT/US18/44756, titled “INTERFACING BETWEEN DIGITAL ASSISTANT APPLICATIONS AND NAVIGATION APPLICATIONS,” filed Aug. 1, 2018, which claims the benefit of priority to U.S. Patent Provisional Application No. 62/690,049, titled “INTERFACING BETWEEN DIGITAL ASSISTANT APPLICATIONS AND NAVIGATION APPLICATIONS,” filed Jun. 26, 2018, each of which is incorporated herein by reference in its entirety.
- Digital assistant applications can operate in a networked computer environment in which processing associated with functionality provided at a client device is performed at a server connected to the client device by way of a network. The server can be provided with data associated with a request at the client device by way of the network. Excessive network transmissions, packet-based or otherwise, of network traffic data between computing devices can prevent a computing device from properly processing the network traffic data, completing an operation related to the network traffic data, or responding timely to the network traffic data. The excessive network transmissions of network traffic data can also complicate data routing or degrade the quality of the response when the responding computing device is at or above its processing capacity, which may result in inefficient bandwidth utilization, consumption of computing resources, and depletion of battery life. A portion of the excessive network transmissions can include transmissions for requests that are not valid requests. Additional challenges exist in the provision of a speech-based interface with applications that typically operate as a graphical user interface, particularly in such a networked environment in which it is desirable to minimize excessive network transmissions.
- According to an aspect of the disclosure, a system to interface among multiple applications in a networked computer environment can include a data processing system having one or more processors. A navigation interface component executed on the data processing system can access a navigation application executing on a first client device to retrieve a plurality of point locations within a reference frame corresponding to a geographic region displayed in a viewport of the navigation application. Each point location of the plurality of locations can have an identifier. A natural language processor component executed on the data processing system can receive an input audio signal detected by a sensor of at least one of the first client and a second client device. The natural language processor component can parse the input audio signal to identify a request and a referential word. The natural language processor component can identify, responsive to the identification of the request, a point location from the plurality of point locations within the reference frame based on the referential word parsed from the input audio signal and the identifier for the point location. An action handler component executed on the data processing system can generate an action data structure including the point location identified responsive to the detection of the input audio signal. The action handler component can transmit the action data structure to the first client device to cause the navigation application to initiate a navigation guidance process using the point location.
- According to an aspect of the disclosure, a method of interfacing among multiple applications in a networked computer environment can include accessing a navigation application executing on a first client device to retrieve a plurality of point locations within a reference frame corresponding to a geographic region displayed in a viewport of the navigation application. Each point location of the plurality of locations can have an identifier. The method can include receiving an input audio signal detected by a sensor of at least one of the first client and a second client device. The method can include parsing the input audio signal to identify a request and a referential word. The method can include identifying, responsive to identifying the request, a point location from the plurality of point locations within the reference frame based on the referential word parsed from the input audio signal and the identifier for the point location. The method can include generating an action data structure including the point location identified responsive to the detection of the input audio signal. The method can include transmitting the action data structure to the first client device to cause the navigation application to initiate a navigation guidance process using the point location.
- Each aspect may include one or more of the following features. The navigation interface component may access the navigation application to determine a first portion of the reference frame corresponding to the geographic region displayed concurrently to the receipt of the input audio signal and to determine a second portion of the reference frame corresponding to the geographic region previously displayed in the viewport based on a velocity of the first client device acquired from an inertial motion unit. The natural language processor component may identify the point location from the plurality of point locations within the reference frame based on a travel direction of at least one of the first client and the second client device determined using data from an inertial motion unit. The navigation interface component may access the navigation application to retrieve the plurality of point locations within the reference frame having a first portion corresponding to the geographic region and to a second geographic region within a defined proximity about a destination location of a path routing operation of the navigation guidance process; and the natural language processor component to: determine that the referential word is related to the second portion corresponding to the second geographic region and not to the first portion corresponding to the geographic region; and identify the point location from the plurality of point locations within the portion based on the determination that the referential word is related to the second portion. The navigation interface component may access the navigation application to retrieve a first location identifier of the first client device within the reference frame corresponding to the geographic region and a plurality of second location identifiers corresponding to the plurality of point locations within the reference frame; and the natural language processor component may identify the point location from the plurality of point locations based on the first location identifier of the first client device and the plurality of second location identifiers corresponding to the plurality of point locations. The navigation interface component may access the navigation application to retrieve a plurality of search terms received within a defined time window prior to the receipt of the input audio signal; and the natural language processor component may: determine, for each point location of the plurality of point locations and each search term of the plurality of search terms, a semantic distance between the identifier of the point location and the search term using a semantic knowledge graph; and select, for the identification of the point location, a subset of point locations from the plurality of point locations based on the plurality of semantic distances between the plurality of identifiers and the plurality of search terms. The natural language processor component may: parse the input audio signal to identify an auxiliary word different from the referential word; determine a subset area of the viewport of the navigation application based on the auxiliary word; and select, for the identification of the point location, a subset of point locations from the plurality of point locations corresponding to the subset area of the viewport determined based on the auxiliary word. The natural language processor component may: receive a second input audio signal detected by the sensor of at least one of the first client and the second client device; determine that a time elapsed between the receipt of the second input audio signal and the receipt of the input audio signal is less than a defined threshold; parse, responsive to the determination that the elapsed time is less than the defined threshold, the second input audio signal to identify a second referential word; select, for the identification of the point location, a subset of point locations from the plurality of point locations based on the second referential word. The natural language processor component may: determine, for each point location of the plurality of point location, an indexical measure between the referential word and the identifier for the point location, the indexical measure indicating a likelihood that the referential word denotes the identifier for the point location; and identify the point location from the plurality of point locations within the reference frame based on the plurality of indexical measures for the corresponding plurality of point locations. The natural language processor component may: determine, for each point location of the plurality of point locations, a semantic distance between the referential word and the identifier of the point location using a semantic knowledge graph; and identify the point location from the plurality of point locations within the reference frame based on the plurality of semantic distances for the corresponding plurality of point locations. The natural language processor component may determine a request type corresponding to a location finder operation of a plurality of operations to be performed by the navigation application based on the request; and the action handler component to generate the action data structure including the request type and to transmit the action data structure to the first client device to cause the navigation application to initiate the location finder operation of the navigational guidance process corresponding to the request type to present the point location in the geographic region displayed in the viewport. The natural language processor component may determine a request type corresponding to a path routing operation of a plurality of operations to be performed by the navigation application based on the request; and the action handler component to generate the action data structure including the request type and to transmit the action data structure to the first client device to cause the navigation application to initiate the path routing operation of the navigational guidance process corresponding to the request type to identify a travel path to the point location as a destination location. The action handler component may receive a response from the first client device executing the navigation application for at least one of a textual output or an output audio signal.
- These and other aspects and implementations are discussed in detail below. The foregoing information and the following detailed description include illustrative examples of various aspects and implementations and provide an overview or framework for understanding the nature and character of the claimed aspects and implementations. The drawings provide illustration and a further understanding of the various aspects and implementations, and are incorporated in and constitute a part of this specification.
- The accompanying drawings are not intended to be drawn to scale. Like reference numbers and designations in the various drawings indicate like elements. For purposes of clarity, not every component may be labeled in every drawing. In the drawings:
-
FIG. 1 illustrates a block diagram of an example system to interface among multiple applications in a networked computer environment, in accordance with an example of the present disclosure. -
FIG. 2 illustrates a sequence diagram of an example data flow to interface among multiple applications in a networked computer environment in the system illustrated inFIG. 1 , in accordance with an example of the present disclosure. -
FIG. 3 illustrates a client computing device with request and response messages in relation to a navigational application, in accordance with an example of the present disclosure. -
FIG. 4 illustrates a flow diagram of a method to generate voice-activated threads in a networked computer environment, in accordance with an example of the present disclosure. -
FIG. 5 illustrates a flow diagram of a method to interface among multiple applications in a networked computer environment using the example system illustrated inFIG. 1 , in accordance with an example of the present disclosure. -
FIG. 6 is a block diagram of an example computer system. - Following below are more detailed descriptions of various concepts related to and implementations of, methods, apparatuses, and systems to interface among multiple applications in a networked computer environment. The various concepts introduced above and discussed in greater detail below may be implemented in any of numerous ways.
- A digital assistant application can interface with agents via exchanging application data and invoking functions in accordance with an application programming interface (API). Upon receipt of an input audio signal, the digital assistant application can parse the input audio signal to identify words from the input audio signal. The digital assistant application can determine that the words refer to a function of a particular agent. In response to this determination, the digital assistant application can invoke functions of the agent referred to in the input audio signal. Using the functions, the capabilities of the digital assistant application can be augmented.
- One such agent can be a navigation application (sometimes referred to as a Global Positioning System (GPS) navigator). The navigation application can display a top-down view of a map of a geographic region via a viewport. The map can define elevation contours, water depth, regions, artificial features, and transportation networks (e.g., roads, pedestrian walkways, bike paths, and railways). The map can also include a multitude of point locations linked together via paths representing the transportation network. Each point location can refer to a point of interest on the vector map, such as a restaurant, a gas station, a landmark, a mountain, or a lake, among others. Each point location can be labeled with geographic coordinates and an identifier. The identifier can be a name or a descriptor of the point of interest. For example, a point location corresponding to a restaurant may have “ABC Pizzeria” as the name and “restaurant” and “pizza” as descriptors. Using zoom and viewing angle, the portion of the map visible through the viewport of the navigation application can be modified. In displaying the map, the navigation application can identify to a portion of the map that is visible through the viewport as the reference frame for the end-user.
- The navigation application can also perform various navigation guidance functions with respect to the map displayed through the viewport. The navigation guidance functions of the navigation application can include a location finder operation and a path finding operation. The location operation can be invoked to a find a particular point of interest on the map. Under the location finder operation, the navigation application can receive a search term for points of interest on the map. Upon receipt, the navigation application can identify all the point locations with identifiers matching the search term that are visible through the viewport of the navigation application. The path finding operation can be invoked to determine a route from a current location to the point of interest of the map. In the path finding operation, the navigation application can identify a current location and the point location corresponding to the requested point of interest. The point location may have been identified using the search term matching the identifier for the point location visible through the viewport. The navigation application can apply a path finding algorithm to determine the route between the current location and the point location via the paths connecting the two as defined within the reference frame.
- The difficulty with interfacing the digital assistant application with the navigation application may be that the digital assistant application relies on audio input and output signals whereas the navigation application may rely on visual presentation and input received by way of touch interaction with the visual presentation (e.g., via touch screen, keyboard, or mouse). In addition, the navigation application can have access to a current location or a current focus of the client device about which a reference frame for the client device can be recognized. In contrast, the digital assistant application may lack any factoring of the current location, the current focus, or the reference frame within the map accessible through the navigation application. Furthermore, the digital assistant application may not have access to the point locations and paths defined in the map that is visible through the viewport. Without access to data visible through the viewport of the navigation application or any consideration of the reference frame, the digital assistant application may be unable to determine which point location on the map a request identified from the input audio signal is referring to. Moreover, even if the request identified from parsing the input audio signal is converted to a textual input for the navigation application, the navigation application may be unable to distinguish which point location the textual input is referencing. The navigation application may lack natural language processing capabilities, thereby further exacerbating the inability to distinguish when the textual input is of natural language containing indexical or deictic words.
- To address the technical challenges arising from interfacing, the digital assistant application can access the navigation application in response to a request in the input audio signal that references one of the functions of the navigation application. The digital assistant application can also determine which function the request in the input audio signal is referencing. For example, upon identifying the words “Take me there” from parsing the input audio signal, the digital assistant application can determine that the words “Take me” refer to the path finding operation of the navigation application. In another example, when the words “Show me gas stations” are parsed from the input audio signal, the digital assistant application can determine that the words “Show me” refer to the location finder operation of the digital assistant application. In accessing the navigation application, the digital assistant application can retrieve a set of point locations corresponding to the portion of the map visible through the viewport of the navigation application. The digital assistant application can also obtain the identifiers for each point location and a previous set of search terms used as inputs for the navigation application. The digital assistant application can also identify previously received requests referencing the functions of the navigation application. For example, the input audio signals with the phrase “Tell me about the ABC Tower” and with the phrase “Show me patisseries” may have been received in succession. The digital assistant application can use the phrase “Tell me about the ABC Tower” in processing the phrase “Show me patisseries” in establishing a region of interest to obtaining the identifiers.
- The digital assistant application can use natural language processing techniques to determine a referential word from the set of words parsed from the input audio signal. The referential word can correspond to one of the points of interest on the map visible through the viewport of the navigation application. For example, for the phrase “take me there” parsed from an input audio signal, the referential word may be “there.” For the phrase “let's go to the pizzeria,” the referential word may be “pizzeria.” Using the identifiers for the point locations visible through the viewport of the navigation application, the digital assistant application can identify which point location the referential word is referring to. The digital assistant application can compare the referential word with the identifier for each point location. In comparing, the digital assistant application can determine a semantic distance between the referential word and the identifier for each location using a semantic knowledge graph. The digital assistant application can also determine an indexical measure between the referential word and a previous word, such as the previously received requests or the search terms. Based on the comparisons, the digital assistant application can identify which point location the referential word of the input audio signal is referring to. Using the request and the identified point location, the digital assistant application can generate an action data structure to provide to the navigation application to carry out the indicated operation using the identified point location.
- Resource intensive processing based upon natural language processing and interpretation can therefore be performed for a client device at a remote server in which information associated with a graphical user interface of the client device is taken into account. Subject matter described herein may therefore provide an interface between a graphical user interface of a client device and a speech-based system. The interface allows a user to interact with the graphical user interface using speech, and additionally allows data associated with the graphical user interface to be provided to a remote server efficiently. The speech-based system is thereby able to provide an improved guided interaction with a user of the client device.
- Referring to
FIG. 1 , depicted is anexample system 100 to interface among multiple applications in a networked computer environment. Thesystem 100 can include at least onedata processing system 102, one ormore client devices 104, and one ormore navigator services 106. The one ormore client devices 104 can be communicatively coupled to the one ormore navigator services 106, and vice-versa. The at least onedata processing system 102, one ormore client devices 104, and one ormore navigator services 106 can be communicatively coupled to one another via thenetwork 156. - The
data processing system 102 can include an instance of thedigital assistant application 108. Thedigital assistant application 108 can include a natural language processor (NLP)component 114 to parse audio-based inputs. Thedigital assistant application 108 can include anavigation interface component 116 to interface with anavigation application 110. Thedigital assistant application 108 can include ageolocation sensing component 118 to obtain position measurements. Thedigital assistant application 108 can include an audiosignal generator component 122 to generate audio-based signals. Thedigital assistant application 108 can include a directaction handler component 120. Thedigital assistant application 108 can include aresponse selector component 124 to select responses to audio-based input signals. TheNLP component 114, the audiosignal generator component 122, thedata repository 126, the directaction handler component 120, and theresponse selector component 124 separate from thedigital assistant application 108. Thedata processing system 102 can include adata repository 126. Thedata repository 126 can storeregular expressions 128,parameters 130,policies 132,response data 134, andtemplates 136. - The
data processing system 102 can also include an instance of at least onenavigation application 110 to perform navigation guidance processes, among others. The navigation guidance processes can include a location finding operation and a path routing operation, among others. Thenavigation application 110 can include a digitalassistant interface component 138 to interface with thedigital assistant application 108. Thenavigation application 110 can include alocation finder component 140 to perform the location finding operation to search for a location in a geographic region using search terms. Thenavigation application 110 can include apath router component 142 to perform the path routing operation to determine a path from one location to another location in the geographic region. The functionalities of thelocation finder component 140 and thepath router component 142 will be explicated herein below. Thenavigation application 110 can also include the instance of thegeolocation sensing component 118 to obtain position measurements. Thenavigation application 110 can include or otherwise access at least onedata repository 144. Thenavigation application 110 can be a separate application from thedigital assistant application 108. Thedata processing system 102 can include an instance of one ormore navigation applications 110. - The
data repository 144 can store and maintain a vector-basedmap 146 accessible to one or more instances of thenavigation application 110. Thedata repository 144 may be separate from thenavigation application 110, and can be maintained on thedata processing system 102 or the navigator services 106. At least a portion of the vector-basedmap 146 can be maintained on theclient device 104 running thenavigation application 110. Thenavigation application 110 can render and display a portion of the vector-basedmap 146 through a viewport of thenavigation application 110. The viewport can correspond to an area of a display of theclient device 104 running thenavigation application 110 through which the portion of the vector-basedmap 146 is visible. As the vector-basedmap 146 can be larger in size than the viewport of thenavigation application 110 or the display ofclient device 104, a portion corresponding to the viewport of thenavigation application 110 can be displayed. The portions currently or previously displayed through the viewport of thenavigation application 110 can be stored on theclient device 104 running thenavigation application 110. The vector-basedmap 146 can represent a geographic map (e.g., of the Earth) using a data structure (e.g., linked list, tree, array, matrix, and heap). The vector-basedmap 146 can include elevation contours, water depth, regions (e.g., of countries, provinces, counties, prefectures, cities, towns, and villages), natural features (e.g., lakes, mountains, and rivers), artificial features (e.g., buildings, parking lots, and parks), and/or transportation networks (e.g., roads, pedestrian walkways, bike paths, and railways), or a combination of these features. The vector-basedmap 146 can define the elevation contours, water depth, regions, artificial features, and transportation networks. The vector-basedmap 146 can include a set of point locations and a set of paths. The vector-basedmap 146 can define a geographic coordinate (e.g., longitude and latitude) for each point location. Each point location can correspond to one of the artificial features and natural features. Each point location can be associated with a geographic coordinate and can have one or more identifiers. The identifier of the point location can include a name and a category type for the point location. For example, for a point location corresponding to a hotel, the name may be “XYZ Inn” and the category type may be “hotel.” The point locations can be linked to one another via paths. Each path can correspond to a transportation network, such as a road, a pedestrian walkway, bike path, and railways, among others. Each path can define a geographic distance (e.g., measured in kilometers or miles) among the point locations. The vector-basedmap 146 can be encoded in accordance with a geographic information encoding format (e.g., GIS). - The functionalities of the
data processing system 102, such as thedigital assistant application 108 and thenavigation application 110, can be included or otherwise be accessible from the one ormore client devices 104. The functionalities of thedata processing system 102 may correspond to the functionalities or interface with thedigital assistant application 108 executing on theclient devices 104. Theclient devices 104 can each include and execute a separate instance of the one or more components of thedigital assistant application 108. Theclient devices 104 can otherwise have access to the functionalities of the components of thedigital assistant application 108 on a remotedata processing system 102 via thenetwork 156. For example, theclient device 104 can include the functionalities of theNLP component 114 and access the remainder of the components of thedigital assistant application 108 via thenetwork 156 to thedata processing system 102. Theclient devices 104 can each include and execute a separate instance of the one or more components of thenavigation application 110. Theclient devices 104 can otherwise have access to the functionalities of the components of thenavigation application 110 on a remotedata processing system 102 via thenetwork 156. For example, theclient device 104 can include the functionalities of thelocation finder component 140 and thepath router component 142 and can access the vector-basedmap 146 via thenetwork 156. - The
client devices 104 can each include at least one logic device such as a computing device having a processor to communicate with each other with thedata processing system 102 via thenetwork 156. Theclient devices 104 can include an instance of any of the components described in relation to thedata processing system 102. Theclient devices 104 can include an instance of thedigital assistant application 108. Theclient devices 104 can include a desktop computer, laptop, tablet computer, personal digital assistant, smartphone, mobile device, portable computer, thin client computer, virtual server, speaker-based digital assistant, or other computing device. - The components of the
system 100 can communicate over anetwork 156. Thenetwork 156 can include, for example, a point-to-point network, a broadcast network, a wide area network, a local area network, a telecommunications network, a data communication network, a computer network, an ATM (Asynchronous Transfer Mode) network, a SONET (Synchronous Optical Network) network, a SDH (Synchronous Digital Hierarchy) network, an NFC (Near-Field Communication) network, a local area network (LAN), a wireless network or a wireline network, and combinations thereof. Thenetwork 156 can include a wireless link, such as an infrared channel or satellite band. The topology of thenetwork 156 may include a bus, star, or ring network topology. Thenetwork 156 can include mobile telephone networks using any protocol or protocols used to communicate among mobile devices, including advanced mobile phone protocol (AMPS), time division multiple access (TDMA), code-division multiple access (CDMA), global system for mobile communication (GSM), general packet radio services (GPRS), or universal mobile telecommunications system (UMTS). Different types of data may be transmitted via different protocols, or the same types of data may be transmitted via different protocols. - The
client device 104 can include, execute, interface, or otherwise communicate with one or more of at least one instance of thedigital assistant application 108, at least one instance of thenavigation application 110, at least onespeaker 148, at least onesensor 154, at least onetransducer 150, and at least oneperipheral device 152. Thesensor 154 can include, for example, a camera, an ambient light sensor, proximity sensor, temperature sensor, an inertial motion unit, accelerometer, gyroscope, motion detector, GPS sensor, location sensor, microphone, video, image detection, or touch sensor. Thetransducer 150 can include or be part of a speaker or a microphone. Theclient device 104 can include an audio driver. The audio driver can provide a software interface to thehardware transducer 150. The audio driver can execute the audio file or other instructions provided by thedata processing system 102 to control thetransducer 150 to generate a corresponding acoustic wave or sound wave. Theperipheral device 152 can include user input/output devices, such as a keyboard, a display, and a headphone, among others. The display can include one or more hardware or software components configured to provide a visual indication or optical output, such as a light emitting diode, organic light emitting diode, liquid crystal display, laser, or display. - The instance of the
digital assistant application 108 on theclient device 104 can include or be executed by one or more processors, logic array, or memory. The instance of thedigital assistant application 108 on theclient device 104 can detect a keyword and perform an action based on the keyword. Thedigital assistant application 108 on theclient device 104 can be an instance of thedigital assistant application 108 executed at thedata processing system 102 or can perform any of the functions of thedigital assistant application 108. The instance of thedigital assistant application 108 on theclient device 104 can filter out one or more terms or modify the terms prior to transmitting the terms as data to the data processing system 102 (e.g., the instance of thedigital assistant application 108 on the data processing system 102) for further processing. The instance of thedigital assistant application 108 on theclient device 104 can convert the analog audio signals detected by thetransducer 150 into a digital audio signal and transmit one or more data packets carrying the digital audio signal to thedata processing system 102 via thenetwork 156. The instance of thedigital assistant application 108 on theclient device 104 can transmit data packets carrying some or the entire input audio signal responsive to detecting an instruction to perform such transmission. The instruction can include, for example, a trigger keyword or other keyword or approval to transmit data packets comprising the input audio signal to thedata processing system 102. - The instance of the
digital assistant application 108 on theclient device 104 can perform pre-filtering or pre-processing on the input audio signal to remove certain frequencies of audio. The pre-filtering can include filters such as a low-pass filter, high-pass filter, or a bandpass filter. The filters can be applied in the frequency domain. The filters can be applied using digital signal processing techniques. The filter can be configured to keep frequencies that correspond to a human voice or human speech, while eliminating frequencies that fall outside the typical frequencies of human speech. For example, a bandpass filter can be configured to remove frequencies below a first threshold (e.g., 70 Hz, 75 Hz, 80 Hz, 85 Hz, 90 Hz, 95 Hz, 100 Hz, or 105 Hz) and above a second threshold (e.g., 200 Hz, 205 Hz, 210 Hz, 225 Hz, 235 Hz, 245 Hz, or 255 Hz). Applying a bandpass filter can reduce computing resource utilization in downstream processing. The instance of thedigital assistant application 108 on theclient device 104 can apply the bandpass filter prior to transmitting the input audio signal to thedata processing system 102, thereby reducing network bandwidth utilization. However, based on the computing resources available to theclient device 104 and the available network bandwidth, it may be more efficient to provide the input audio signal to thedata processing system 102 to allow thedata processing system 102 to perform the filtering. - The instance of the
digital assistant application 108 on theclient device 104 can apply additional pre-processing or pre-filtering techniques such as noise reduction techniques to reduce ambient noise levels that can interfere with the natural language processor. Noise reduction techniques can improve accuracy and speed of the natural language processor, thereby improving the performance of thedata processing system 102 and manage rendering of a graphical user interface provided via the display. - The
client device 104 can be associated with an end user that enters voice queries as audio input into the client device 104 (via thesensor 154 or transducer 150) and receives audio (or other) output from thedata processing system 102 ornavigator services 106 to present, display, or render to the end user of theclient device 104. The digital component can include a computer-generated voice that can be provided from thedata processing system 102 or thenavigator service 106 to theclient device 104. Theclient device 104 can render the computer-generated voice to the end user via the transducer 150 (e.g., a speaker). The computer-generated voice can include recordings from a real person or computer-generated language. Theclient device 104 can provide visual output via a display device communicatively coupled to theclient device 104. - The end user that enters the voice queries to the
client device 104 can be associated withmultiple client devices 104. For example, the end user can be associated with afirst client device 104 that can be a speaker-based digital assistant device, asecond client device 104 that can be a mobile device (e.g., a smartphone), and athird client device 104 that can be a desktop computer. Thedata processing system 102 can associate each of theclient devices 104 through a common login (e.g., account identifier and authentication credentials), location, network, or other linking data. For example, the end user may log into each of theclient devices 104 with the same account user name and password. - The
client device 104 can include or execute an instance of thenavigation application 110. Theclient device 104 can include or execute an instance of thenavigation application 110. Thenavigation application 110 can include one or more components with similar functionalities as thedigital assistant application 108. Instances of thenavigation application 110 can be executed on thedata processing system 102 and thenavigator service 106. Thedigital assistant application 108 can interface with thenavigation application 110, and vice-versa to carry out predefined functions. Thenavigation application 110 can access resources on thenavigator service 106 in carrying out the function indicated in the input audio signal. Theclient device 104 can receive an input audio signal detected by a sensor 154 (e.g., microphone) of theclient device 104. Based on parsing the input audio signal, thedigital assistant application 108 can determine whichnavigation application 110 to interface with in processing the input audio signal. The input audio signal can include, for example, a query, question, command, instructions, or other statement in a natural language. For example, the voice query can include a command to find a location in a geographic region. Thedigital assistant application 108 can determine that the voice query includes a command referencing at least one functionality of thenavigation application 110. In response to the determination, thedigital assistant application 108 can interface with thenavigation application 110 to retrieve data to complete the task indicated in the voice query. The input audio signal can include one or more predefined keywords referencing a functionality of the navigation application 110 (e.g., “take,” “find,” and “route”). For example, the input audio signal can include “Take me to high school XYZ.” From this query, thedigital assistant application 108 can determine that the voice query is referencing thenavigation application 110 as opposed to another agent or the functionality of thedigital assistant application 108 itself. Thedigital assistant application 108 can determine that the voice query is referencing the functionality of thenavigation application 110, and can perform processing using the voice query to generate a command to thenavigation application 110. Upon receipt, thenavigation application 110 can display or present portions of the vector-basedmap 146 based on the command generated using the voice query. The functionalities of thenavigation application 110 with respect to thenavigator service 106 and thedigital assistant application 108 will be detailed herein below. - The
digital assistant application 108 executing on afirst client device 104 without thenavigation application 110 can access thenavigation application 110 running on asecond client device 104. In response to determining that the voice query references at least one functionality of thenavigation application 110, thedigital assistant application 108 executing on thefirst client device 104 can identify that thefirst client device 104 lacks thenavigation application 110. Thedigital assistant application 108 can identify one or more client devices 104 (e.g., asecond client device 104 running on thenavigation application 110 associated with thefirst client device 104 associated through the common login (e.g., account identifier and authentication credentials), location, network, or other linking data. Thedigital assistant application 108 executing on thefirst client device 104 can access thenavigation application 110 running on thesecond client device 104 to further process the voice query. - The
data processing system 102 and thenavigator service 106 each can include at least one server having at least one processor. For example, thedata processing system 102 and thenavigator service 106 each can include a plurality of servers located in at least one data center or server farm. Thedata processing system 102 can determine from an audio input signal a request and a trigger keyword associated with the request. Based on the request and trigger keyword, thedata processing system 102 can determine whether to forward the audio input signal to thenavigator service 106 or to process the audio input signal internally. Responsive to the determination that the audio input signal is to be processed internally, thedata processing system 102 can generate or select response data. The response data can be audio-based or text-based. For example, the response data can include one or more audio files that, when rendered, provide an audio output or acoustic wave. The data within the response data can also be referred to as content items. The response data can include other content (e.g., text, video, or image content) in addition to audio content. Responsive to the determination that the audio input signal is to be forwarded, thedata processing system 102 can send the audio input signal to thenavigator service 106. Thenavigator service 106 can parse the audio input signal to identify a command to execute. Thenavigator service 106 can carry out the command and return a result of the command to thedata processing system 102 or theclient device 104. - The
data processing system 102 and thenavigator service 106 each can include multiple, logically grouped servers and facilitate distributed computing techniques. The logical group of servers may be referred to as a data center, server farm, or a machine farm. The servers can be geographically dispersed. A data center or machine farm may be administered as a single entity, or the machine farm can include a plurality of machine farms. The servers within each machine farm can be heterogeneous—one or more of the servers or machines can operate according to one or more type of operating system platform. Thedata processing system 102 and thenavigator service 106 each can include servers in a data center that are stored in one or more high-density rack systems, along with associated storage systems, located for example in an enterprise data center. In this way, thedata processing system 102 or thenavigator service 106 with consolidated servers can improve system manageability, data security, the physical security of the system, and system performance by locating servers and high-performance storage systems on localized high-performance networks. Centralization of all or some of thedata processing system 102 ornavigator service 106 components, including servers and storage systems, and coupling them with advanced system management tools allows more efficient use of server resources, which saves power and processing requirements and reduces bandwidth usage. Each of the components of thedata processing system 102 can include at least one processing unit, server, virtual server, circuit, engine, agent, appliance, or other logic device such as programmable logic arrays configured to communicate with thedata repositories navigator service 106 can also include at least one processing unit, server, virtual server, circuit, engine, agent, appliance, or other logic device such as programmable logic arrays configured to communicate with a data repository and with other computing devices. - The
data processing system 102 can include thedata repository 126. Thedata repository 126 can include one or more local or distributed databases and can include a database management system. Thedata repository 126 can include computer data storage or memory and can store one or moreregular expressions 128, one ormore parameters 130, one ormore policies 132,response data 134, andtemplates 136, among other data. Theparameters 130,policies 132, andtemplates 136 can include information such as rules about a voice-based session between theclient devices 104 and thedata processing system 102. Theregular expressions 128 can include rules about when the voice-based session between theclient devices 104 and thedata processing system 102 is to include thenavigation application 110 and thenavigator service 106. Theregular expressions 128,parameters 130,policies 132, andtemplates 136 can also include information for another digitalassistant application 108 received via theinterface 112 from another source (e.g., thedata processing system 102 and the client devices 104). Theresponse data 134 can include content items for audio output or associated metadata, as well as input audio messages that can be part of one or more communication sessions with theclient devices 104. - The
data processing system 102 can include at least one computation resource or server. Thedata processing system 102 can include, interface, or otherwise communicate with at least oneinterface 112. Thedata processing system 102 can include, interface, or otherwise communicate with at least one instance of thedigital assistant application 108 on thedata processing system 102. The instance of thedigital assistant application 108 on thedata processing system 102 can include, interface, or otherwise communicate with at least oneNLP component 114, at least one audiosignal generator component 122, and at least one directaction handler component 120. Thedata processing system 102 can include, interface, or otherwise communicate with at least oneresponse selector component 124. Thedata processing system 102 can include, interface, or otherwise communicate with at least onedata repository 126. The at least onedata repository 126 can include or store, in one or more data structures or databases,regular expressions 128,parameters 130,policies 132,response data 134, andtemplates 136. Thedata repository 126 can include one or more local or distributed databases, and can include a database management. - The components of the
data processing system 102 can each include at least one processing unit or other logic device such as a programmable logic array engine or module configured to communicate with thedatabase repository data processing system 102 can be separate components, a single component, or part of multipledata processing systems 102. Thesystem 100 and its components, such as adata processing system 102, can include hardware elements, such as one or more processors, logic devices, or circuits. - The
data processing system 102 can include aninterface 112. Theinterface 112 can be configured, constructed, or operational to receive and transmit information using, for example, data packets. Theinterface 112 can receive and transmit information using one or more protocols, such as a network protocol. Theinterface 112 can include a hardware interface, software interface, wired interface, or wireless interface. Theinterface 112 can be a data interface or a network interface that enables the components of thesystem 100 to communicate with one another. Theinterface 112 of thedata processing system 102 can provide or transmit one or more data packets that include the action data structure, audio signals, or other data via thenetwork 156 to theclient devices 104 or thenavigator service 106. For example, thedata processing system 102 can provide the output signal from thedata repository 126 or from the audiosignal generator component 122 to theclient devices 104. Thedata processing system 102 can also instruct, via data packet transmissions, theclient devices 104 to perform the functions indicated in the action data structure. The output signal can be obtained, generated, transformed to, or transmitted as one or more data packets (or other communications protocol) from the data processing system 102 (or other computing device) to theclient devices 104. Theinterface 112 can facilitate translating or formatting data from one format to another format. For example, theinterface 112 can include an application programming interface (“API”) that includes definitions for communicating between various components, such as software components. - The
data processing system 102 can include an application, script, or program installed at theclient device 104, such as the instance of thedigital assistant application 108 on theclient device 104 to communicate input audio signals to theinterface 112 of thedata processing system 102 and to drive components of the client computing device to render output audio signals or visual output. Thedata processing system 102 can receive data packets, a digital file, or other signals that include or identify an input audio signal (or input audio signals). Theclient device 104 can detect the audio signal via thetransducer 150 and convert the analog audio signal to a digital file via an analog-to-digital converter. For example, the audio driver can include an analog-to-digital converter component. The pre-processor component can convert the audio signals to a digital file that can be transmitted via data packets overnetwork 156. - The instance of the
digital assistant application 108 of thedata processing system 102 can execute or run anNLP component 114 to receive or obtain the data packets including the input audio signal detected by thesensor 154 of theclient device 104. The data packets can provide a digital file. TheNLP component 114 can receive or obtain the digital file or data packets comprising the audio signal and parse the audio signal. For example, theNLP component 114 can provide for interactions between a human and a computer. TheNLP component 114 can be configured with techniques for understanding natural language and enabling thedata processing system 102 to derive meaning from human or natural language input. TheNLP component 114 can include or be configured with techniques based on machine learning, such as statistical machine learning. TheNLP component 114 can utilize decision trees, statistical models, or probabilistic models to parse the input audio signal. TheNLP component 114 can perform, for example, functions such as named entity recognition (e.g., given a stream of text, determine which items in the text map to names, such as people or places, and what the type of each such name is, such as person, location (e.g., “home”), or organization), natural language generation (e.g., convert information from computer databases or semantic intents into understandable human language), natural language understanding (e.g., convert text into more formal representations such as first-order logic structures that a computer module can manipulate), machine translation (e.g., automatically translate text from one human language to another), morphological segmentation (e.g., separating words into individual morphemes and identify the class of the morphemes, which can be challenging based on the complexity of the morphology or structure of the words of the language being considered), question answering (e.g., determining an answer to a human-language question, which can be specific or open-ended), or semantic processing (e.g., processing that can occur after identifying a word and encoding its meaning in order to relate the identified word to other words with similar meanings). - The
NLP component 114 can convert the input audio signal into recognized text by comparing the input signal against a stored, representative set of audio waveforms (e.g., in the data repository 126) and choosing the closest matches. The set of audio waveforms can be stored indata repository 126 or other database accessible to thedata processing system 102. The representative waveforms are generated across a large set of users, and then may be augmented with speech samples from the user. After the audio signal is converted into recognized text, theNLP component 114 matches the text to words that are associated, for example via training across users or through manual specification, with actions that thedata processing system 102 can serve. TheNLP component 114 can convert image or video input to text or digital files. TheNLP component 114 can process, analyze, or interpret image or video input to perform actions, generate requests, or select or identify data structures. - The
data processing system 102 can receive image or video input signals, in addition to, or instead of, input audio signals. Thedata processing system 102 can process the image or video input signals using, for example, image interpretation techniques, computer vision, a machine learning engine, or other techniques to recognize or interpret the image or video to convert the image or video to a digital file. The one or more image interpretation techniques, computer vision techniques, or machine learning techniques can be collectively referred to as imaging techniques. The data processing system 102 (e.g., the NLP component 114) can be configured with the imaging techniques, in addition to, or instead of, audio processing techniques. - The
NLP component 114 can obtain the input audio signal. From the input audio signal, theNLP component 114 can identify at least one request, at least one trigger keyword corresponding to the request, and one or more keywords. The request can indicate intent, digital components, or subject matter of the input audio signal. The trigger keyword can indicate a type of action likely to be taken. For example, theNLP component 114 can parse the input audio signal to identify at least one request to find a contact in an end user's contact list. The trigger keyword can include at least one word, phrase, root or partial word, or derivative indicating an action to be taken. For example, the trigger keyword “search” or “find” from the input audio signal can indicate a request to perform a query search. In this example, the input audio signal (or the identified request) does not directly express an intent for the query search, however the trigger keyword indicates that query search is an ancillary action to at least one other action that is indicated by the request. - The
NLP component 114 can parse the input audio signal to identify, determine, retrieve, or otherwise obtain the request and the trigger keyword. For instance, theNLP component 114 can apply a semantic processing technique to the input audio signal to identify the trigger keyword or the request. TheNLP component 114 can apply the semantic processing technique to the input audio signal to identify a trigger phrase that includes one or more trigger keywords, such as a first trigger keyword and a second trigger keyword. For example, the input audio signal can include the sentence “Look up Alex's phone number.” TheNLP component 114 can determine that the input audio signal includes trigger keywords “Look up.” TheNLP component 114 can determine that the request is for looking through the end user's contact list. - The
NLP component 114 can determine whether one or more keywords identified from the input audio signal references one or more functions of thenavigation application 110. The one or more keywords identified from the input audio signal can include an identifier for the navigation application 110 (e.g., “GPS Navigator A”). The identifier for thenavigation application 110 can indicate which application the end user would like to carry out the request. For example, the text converted from the input audio signal can include “Get me directions home using GPS Navigator A.” In this input audio signal, the keywords “GPS Navigator A” can be identifier for thenavigation application 110 to carry out the request indicated in the audio input signal. TheNLP component 114 can determine that the input audio signal includes the identifier for thenavigation application 110. Based on determining that the input audio signal including the identifier, theNLP component 114 can determine that the input audio signal references thenavigation application 110. Furthermore, thedigital assistant application 108 can interface with thenavigation application 110 as detailed herein below. Conversely, theNLP component 114 can determine that the input audio signal does not include the identifier for thenavigation application 110. Based on determining that the input audio signal does not include the identifier, theNLP component 114 can determine that the input audio signal does not reference thenavigation application 110. In addition, thedigital assistant application 108 can process the request indicated in the input audio signal. - The
NLP component 114 can determine whether one or more keywords identified from the input audio signal references at least one function of thenavigation application 110 using theregular expressions 128 for thenavigation application 110. Theregular expression 128 can define a pattern to match to determine whether the keywords identified from the input audio signal references the at least one function of thenavigation application 110. Theregular expression 128 can also specify which keywords to use to carry out the command indicated in the input audio signal. For example, theregular expression 128 may be of the form {[request], [referential keywords], [auxiliary keywords]}. For the keywords of the input audio signal to be determined to reference the functions of thenavigation application 110, theregular expression 128 can specify that the one or more keywords include a request for thenavigation application 110 and one or more referential words used as parameters to carry out the request. Theregular expression 128 can specify a sequence for the request and the referential keywords in the one or more keywords identified from the input audio signal. - The
regular expression 128 can include a first set of predefined keywords for the request corresponding to a function of thenavigation application 110. The first set of predefined keywords can include a function identifier (e.g., “take”, “go”, “show”, “directions” and “find”). Each function identifier in the first set of predefined keywords can be associated with one of the functions of thenavigation application 110. Theregular expression 128 can include a second set of predefined keywords for the one or more referential words to use as parameters for thenavigation application 110 carry out the request corresponding to the function. The second set of predefined keywords can include deictic words (e.g., “here,” “there,” “over there,” and “across”). The second set of predefined keywords can also include keywords associated with points of interest (e.g., “restaurant,” “hotel,” “café,” “gas station,” “park,” and “airport”). Theregular expression 128 can specify that keywords identified in the input audio signal but not match the first set of predefined keywords or the second set of keywords are to be identified as auxiliary keywords. Theregular expression 128 can include a third set of predefined keywords for the one or more auxiliary keywords. The third set of predefined keywords can include keywords associated with a display of theclient device 104 or the viewport of the navigation application 110 (e.g., “left corner,” “right corner,” “above,” and “middle”). Each keyword of the third set can correspond to a subset area of the display of theclient device 104. Theregular expression 128 can specify a sequence for the request and the referential keywords in the one or more keywords identified from the input audio signal. Theregular expression 128 can specify that responsive to determining that the input audio signal includes one or more keywords matching one of the first predefined set, at least one of the remaining keywords are to be used as the one or more parameters to carry out the request. - In determining whether the one or more keywords reference at least one function of the
navigation application 110, theNLP component 114 can compare the one or more keywords against theregular expression 128. TheNLP component 114 can also compare one or more permutations of keywords (e.g., n-grams) identified from the input audio signal against theregular expression 128. TheNLP component 114 can compare the one or more keywords against the first set of predefined keywords specified by theregular expression 128. TheNLP component 114 can determine that there is no match between all the keywords with all of the first set of predefined keywords. Responsive to determining no match between all the keywords of the input audio signal and any of the first set, theNLP component 114 can determine that the input audio signal does not reference any function of thenavigation application 110. TheNLP component 114 can determine that the input audio signal instead references one of the functions of thedigital assistant application 108. Thedigital assistant application 108 can perform further processing with the keywords to carry out the request. - On the other hand, in response to the determination of the match, the
NLP component 114 can determine that the input audio signal references at least one function of thenavigation application 110. TheNLP component 114 can identify the function identifier from the first set of predefined keywords matching the at least one keyword corresponding to the request. TheNLP component 114 can determine a request type corresponding to one of the functions of the navigation guidance process of thenavigation application 110. The navigation guidance processes of thenavigation application 110 can include a location finding operation and a path routing operation. The request type can include the location finding operation and the path routing operation. The function identifier can be associated with one of the request types. Based on the association of the function identifier, theNLP component 114 can determine the request type indicated by the request parsed from the input audio signal. - The
NLP component 114 can also identify one or more referential keywords and auxiliary keywords from the keywords of the input audio signal to use as the one or more parameters to carry out the request. TheNLP component 114 can compare the one or more remaining keywords with the second set of predefined keywords. TheNLP component 114 can determine a match between at least one keyword with at least one of the second set of predefined keywords. In response to the determination of the match, theNLP component 114 can identify the at least one keyword as at least one of the referential keywords to use to carry out the request. TheNLP component 114 can also perform semantic analysis to identify one or more keywords to use as the referential keywords and auxiliary keywords for thenavigation application 110 to carry out the request. The semantic analysis can include deixis and anaphora analysis to identify the referential keywords. TheNLP component 114 can identify one or more remaining keywords identified from the input audio signal besides the request and the referential keywords as auxiliary keywords. TheNLP component 114 can compare the one or more remaining keywords with the third set of predefined keywords. TheNLP component 114 can determine a match between at least one keyword with at least one of the third set of predefined keywords. In response to the determination of the match, theNLP component 114 can identify the at least one keyword as at least one of the auxiliary keywords. Based on the identification of the request and the referential keywords from the input audio signal, theNLP component 114 can determine that the input audio signal references the function of thenavigation application 110. For example, for the input audio signal “Take me to store ABC shown in the corner”, theNLP component 114 can determine that the input audio signal references the functionalities of thenavigation application 110 based on the inclusion both “take me” and “store ABC.” In this example, using theregular expression 128 and semantic analysis techniques, theNLP component 114 can determine “take me” as the request, “store ABC” as a referential keyword to carry out the request, and “shown in corner of screen” as auxiliary keywords. - The
data processing system 102 can execute or run an instance of thenavigation interface component 116. In response to determining that the input audio signal references at least one function of thenavigation application 110, thenavigation interface component 116 can access thenavigation application 110 executing on theclient device 104 or thenavigator service 106. Thenavigation interface component 116 can access thenavigation application 110 in accordance with an application programming interface (API) that includes definitions for communicating between thedigital assistant application 108 and thenavigation application 110. Thenavigation interface component 116 can invoke a function call defined by the API to access thenavigation application 110. Thenavigation interface component 116 can identify thenavigation application 110 associated with thedigital assistant application 108 through the common login (e.g., account identifier and authentication credentials), location, network, or other linking data. For example, the end user may have used the same account and login details for thedigital assistant application 108 and thenavigation application 110. By accessing, thenavigation interface component 116 can retrieve data from thenavigation application 110. The data can be related or correspond to contents of the portion of the vector-basedmap 146 visible through the viewport of thenavigation application 110. - Prior to accessing, the
navigation interface component 116 can also determine whether the data was previously received from thenavigation application 110. Thedigital assistant application 108 may already have accessed thenavigation application 110 in response to the previously received input audio signals. The previously received data can be maintained on the client device 104 (e.g., on the memory). Thenavigation interface component 116 can identify the previously received data and a receipt time of the previously received data. Thenavigation interface component 116 can also identify the current time corresponding to the time of receipt of the current input audio signal. Thenavigation interface component 116 can compare a time elapsed between the receipt time and the current time to a defined threshold time. Responsive to determining that the elapsed time is greater than the defined threshold time, thenavigation interface component 116 can proceed to access thenavigation application 110. Otherwise, responsive to determining that the elapsed time is less than the defined threshold time, thenavigation interface component 116 can retrieve and use the previously received data from thenavigation application 110. - In accessing the
navigation application 110, thenavigation interface component 116 can determine whether theclient device 104 that received the input audio signal referencing the at least one function of thenavigation application 110 is running or has an instance of thenavigation application 110. Thenavigation application 110 accessed by thenavigation interface component 116 can be running or present on aclient device 104 different from theclient device 104 that received the input audio signal. Responsive to determining that theclient device 104 is running or has thenavigation application 110, thenavigation interface component 116 can access thenavigation application 110 on thesame client device 104. On the other hand, responsive to determining that theclient device 104 is not running or lacks thenavigation application 110, thenavigation interface component 116 can identify anotherclient device 104 running thenavigation application 110. Thenavigation interface component 116 can identify anotherclient device 104 associated with theclient device 104 that received the input audio signal through the common login (e.g., account identifier and authentication credentials), location, network, or other linking data. Thenavigation interface component 116 can determine that theother client device 104 is running or has an instance of thenavigation application 110. Thenavigation interface component 116 can access thenavigation application 110 running or present on theother client device 104 associated with theclient device 104 that received the input audio signal. Thenavigation interface component 116 can send or transmit an access request to thenavigation application 110 running on theclient device 104 or thenavigator service 106. The access request can include the linking data for thedigital assistant application 108 and thenavigation application 110. - The
data processing system 102 or thenavigator service 106 can execute or run an instance of the digitalassistant interface component 138 of thenavigation application 110. The digitalassistant interface component 138 can identify thenavigation interface component 116 accessing thenavigation application 110. In response to the identification of the access, the digitalassistant interface component 138 can identify a set of point locations within the reference frame corresponding to the portion of the vector-basedmap 146 displayed in the viewport of thenavigation application 110. As discussed above, each point location can correspond to one of the artificial features and natural features, can be associated with a geographic coordinate, and can have at least one identifier. To identify the set of point locations, the digitalassistant interface component 138 can identify the portion of the vector-basedmap 146 visible or displayed in the viewport of thenavigation application 110. The portion of the vector-basedmap 146 may be smaller than an entirety of the vector-basedmap 146, and can correspond to a geographic region displayed in the viewport of thenavigation application 110. The digitalassistant interface component 138 can identify dimensions and coordinates of the portion of the vector-basedmap 146 visible through the viewport of thenavigation application 110. The coordinates can define the portion of the vector-basedmap 146 visible through the viewport of thenavigation application 110, such as top-left coordinates and bottom-right coordinates. The coordinates can correspond to the geographic coordinates on a geographic map. The portion of the vector-basedmap 146 can correspond to the reference frame for the instance of thenavigation application 110 running on theclient device 104. - The digital
assistant interface component 138 can set or identify the portion of vector-basedmap 146 visible through the viewport as the reference frame for thenavigation application 110 running on theclient device 104. The reference frame can correspond to dimensions, coordinates, and other measures of the vector-basedmap 146 displayed in the viewport of thenavigation application 110, and can be particular to the end user of theclient device 104. Using the dimension and coordinates of the portion of the vector-basedmap 146 visible through the viewport, the digitalassistant interface component 138 can identify dimensions and coordinates defining the portion of the reference frame. The coordinates can correspond to the coordinates on the reference frame such as top-left coordinates and bottom-right coordinates. The digitalassistant interface component 138 can compare the geographic coordinates of each point location with the dimensions and coordinates identified for the portion of the vector-basedmap 146 displayed in the viewport. Based on the comparison, the digitalassistant interface component 138 can select or identify the set of point locations within the reference frame corresponding to the portion of the vector-basedmap 146 visible through the viewport. The digitalassistant interface component 138 can provide the set of point locations to thenavigation interface component 116 of thedigital assistant application 108. - The digital
assistant interface component 138 can provide display information regarding the viewport of thenavigation application 110 to thenavigation interface component 116 of thedigital assistant application 108. The digitalassistant interface component 138 can provide the dimensions and coordinates of the portion of the vector-basedmap 146 visible through the view port to thenavigation interface component 116 of thedigital assistant application 108. The digitalassistant interface component 138 can identify the dimensions of the viewport of thenavigation application 110 itself. The dimensions of the viewport can be defined using a number of pixels in width versus height. The digitalassistant interface component 138 can provide the dimensions of the viewport of thenavigation application 110 to thenavigation interface component 116 of thedigital assistant application 108. - In conjunction with identifying the set of point locations, the digital
assistant interface component 138 can identify a current location of theclient device 104 within the portion of the vector-basedmap 146 visible through the viewport of thenavigation application 110. The digitalassistant interface component 138 can access a geographic positioning system (GPS) interface. The GPS interface can in turn communicate with a GPS satellite to identify or receive current geographic coordinates of theclient device 104 running thenavigation application 110. The GPS interface can convert the geographic coordinates of theclient device 104 received from the GPS satellite to a location identifier on the vector-basedmap 146. The location identifier can be an index assigned to the geographic coordinate of the physical world to the vector-basedmap 146. The conversion of the geographic coordinates to the location identifiers can be in accordance to set mapping or function. Once converted, the digitalassistant interface component 138 can provide the location identifier of theclient device 104 to thenavigation interface component 116 of thedigital assistant application 108. The digitalassistant interface component 138 can also provide the location identifier for each identified point location to thenavigation interface component 116. - The digital
assistant interface component 138 can also identify another set of point locations outside the portion of the vector-basedmap 146 visible or displayed in the viewport of thenavigation application 110. Thenavigation application 110 can be performing the path routing operation of the navigation guidance process to determine a path from a start location to a destination location on the vector-basedmap 146, when the input audio signal is received. The destination location and the designated location can correspond to a location on the vector-basedmap 146 outside the portion of the vector-basedmap 146 outside the viewport of thenavigation application 110. The digitalassistant interface component 138 can identify the destination location from the path routing operation. The digitalassistant interface component 138 can determine a portion of the vector-basedmap 146 within a defined proximity (e.g., 1 km to 5 km) about the destination location. The portion of the vector-basedmap 146 within the defined proximity can be defined using dimensions and coordinates to include the destination location. The portion of the vector-basedmap 146 within the defined proximity can have a size equal to the portion of the vector-basedmap 146 currently displayed in the viewport of thenavigation application 110. The digitalassistant interface component 138 can set or identify the portion of the vector-basedmap 146 within the defined proximity about the destination location as the part of the reference frame. - Using the dimension and coordinates of the portion of the vector-based
map 146 within the defined proximity about the destination location, the digitalassistant interface component 138 can identify dimensions and coordinates defining the portion of the reference frame. The coordinates can correspond to the coordinates on the reference frame such as the top-left and bottom-right coordinates on the vector-basedmap 146. The digitalassistant interface component 138 can compare the geographic coordinates of each point location with the dimensions and coordinates identified for the portion of the vector-basedmap 146. Based on the comparison, the digitalassistant interface component 138 can select or identify the set of point locations within the reference frame corresponding to the portion of the vector-basedmap 146 within the defined proximity about the destination location. The digitalassistant interface component 138 can provide the set of point locations to thenavigation interface component 116 of thedigital assistant application 108. In providing the set of point locations, the digitalassistant interface component 138 can label the point locations as corresponding to portions of the vector-basedmap 146 visible through the viewport or not visible through the viewport of thenavigation application 110. - In response to identification of the
navigation interface component 116 accessing thenavigation application 110, the digitalassistant interface component 138 can identify a set of search terms received by thenavigation application 110. The search terms can include one or more keywords previously received by thenavigation application 110 in performing the navigation guidance process, such as the functionalities performed by thelocation finder component 140 or thepath router component 142. For example, the end user of thenavigation application 110 may have previously typed “stationery stores” to look for stationary stores in the vicinity. In another example, thenavigation 110 may have previously received the query “Tower ABC” converted from an input audio signal by theNLP component 114 to find the named tower. Previously received search terms can be stored and maintained on thenavigation application 110. Each search term can also be associated or indexed by a receipt timestamp indicating when the search term was received by thenavigation application 110. The digitalassistant interface component 138 can select or identify the set of search terms previously received by thenavigation application 110 within a defined time window prior to the receipt of the input audio signal by thedigital assistant application 108. The defined time window can range from 15 minutes to 2 hours. The digitalassistant interface component 138 can identify a time of receipt of the input audio signal or a time of thenavigation interface component 116 accessing thenavigation application 110. The digitalassistant interface component 138 can compare the receipt timestamps of the search terms with the time of receipt of the input audio signal or access and the defined time window. The digitalassistant interface component 138 can identify or select the set of search terms with receipt timestamps within the defined time window of the time of receipt of the input audio signal or access. - The
data processing system 102 can execute or run an instance of thegeolocation sensing component 118 of thedigital assistant application 108 or thenavigation application 110. Thenavigator service 106 can execute or run an instance of thegeolocation sensing component 118 of thenavigation application 110. In response to determining that the input audio signal references at least one function of thenavigation application 110, thegeolocation sensing component 118 can retrieve data acquired from at least onesensor 154 of theclient device 104 running thedigital assistant application 108. Thesensors 154 accessed by thegeolocation sensing component 118 can include the inertial motion unit, the accelerometer, the gyroscope, the motion detector, the GPS sensor, and the location sensor, among others. Using the retrieved data, thegeolocation sensing component 118 can determine or identify a direction of travel, a position, and a speed, among other measures of theclient device 104 running thedigital assistant application 108. Thegeolocation sensing component 118 can further determine a change in the direction of travel, the position, and the speed, among measures of theclient device 104 running thedigital assistant application 108 using multiple measurements. The change can be relative to one or more previous measurements sampled at a defined interval. Thegeolocation sensing component 118 can determine or identify a direction of travel, a position, and a speed, among other measures of theclient device 104 running thenavigation application 110. Thegeolocation sensing component 118 can further determine a change in the direction of travel, the position, and the speed, among measures of theclient device 104 running thenavigation application 110 using multiple measurements. The change can be relative to one or more previous measurements sampled at a defined interval. - Using the measurements identified by the
geolocation sensing component 118, the digitalassistant interface component 138 can identify another set of point locations of the portion of the vector-basedmap 146 previously displayed in the viewport of thenavigation application 110. The digitalassistant interface component 138 can identify a previously displayed portion of the vector-basedmap 146 based on the one or more measurements direction of travel, the speed, and the position from thegeolocation sensing component 118. The digitalassistant interface component 138 can also identify the currently displayed portion of the vector-basedmap 146. Using the change in the direction of travel, the position, and the speed and the currently displayed portion of the vector-basedmap 146, the digitalassistant interface component 138 can determine the previously displayed portion of the vector-basedmap 146. The change in the direction of travel, the position, and the speed can be relative to a time at a defined length (e.g., 15 seconds to 3 minutes) prior to the present. From the currently displayed portion of the vector-basedmap 146, the digitalassistant interface component 138 can shift to another portion of the vector-basedmap 146 based on the change from previously measured position. Once shifted, the digitalassistant interface component 138 can identify the previously displayed portion of the vector-basedmap 146. - The digital
assistant interface component 138 can set or identify the previously displayed portion of the vector-basedmap 146 as part of the reference frame as the currently displayed portion of the vector-basedmap 146. Once set, one portion of the reference frame can correspond to the currently displayed portion of the vector-basedmap 146 and another portion of the reference frame can correspond to the previously displayed portion of the vector-basedmap 146. The digitalassistant interface component 138 can identify dimensions and coordinates of the previously displayed portion of the vector-basedmap 146. The coordinates can correspond to the coordinates on the reference frame such as the top-left and bottom-right coordinates on the vector-basedmap 146. The digitalassistant interface component 138 can compare the geographic coordinates of each point location with the dimensions and coordinates identified for the previously displayed portion of the vector-basedmap 146. Based on the comparison, the digitalassistant interface component 138 can select or identify the set of point locations within the reference frame corresponding to the previously displayed portion of the vector-basedmap 146. The digitalassistant interface component 138 can provide the set of point locations to thenavigation interface component 116 of thedigital assistant application 108. - In addition, the digital
assistant interface component 138 can identify a to-be displayed portion of the vector-basedmap 146 based on the one or more measurements direction of travel, the speed, and the position from thegeolocation sensing component 118. The digitalassistant interface component 138 can also identify the currently displayed portion of the vector-basedmap 146. Using the change in the direction of travel, the position, and the speed and the currently displayed portion of the vector-basedmap 146, the digitalassistant interface component 138 can determine the to-be displayed portion of the vector-basedmap 146. The change in the direction of travel, the position, and the speed can be relative to a time at a defined length (e.g., 15 seconds to 3 minutes) prior to the present. Using the change in the direction of travel, the position, and the speed, the digitalassistant interface component 138 can determine a predicted direction of travel, position, and speed. From the currently displayed portion of the vector-basedmap 146, the digitalassistant interface component 138 can shift to another portion of the vector-basedmap 146 based on the predicted direction of travel, position, and speed. Once shifted, the digitalassistant interface component 138 can identify the to-be displayed portion of the vector-basedmap 146. - The digital
assistant interface component 138 can set or identify the to-be displayed portion of the vector-basedmap 146 as part of the reference frame as the currently displayed portion of the vector-basedmap 146. Once set, one portion of the reference frame can correspond to the currently displayed portion of the vector-basedmap 146 and another portion of the reference frame can correspond to the to-be displayed portion of the vector-basedmap 146. The digitalassistant interface component 138 can identify dimensions and coordinates of the to-be displayed portion of the vector-basedmap 146. The coordinates can correspond to the coordinates on the reference frame such as the top-left and bottom-right coordinates on the vector-basedmap 146. The digitalassistant interface component 138 can compare the geographic coordinates of each point location with the dimensions and coordinates identified for the to-be displayed portion of the vector-basedmap 146. Based on the comparison, the digitalassistant interface component 138 can select or identify the set of point locations within the reference frame corresponding to the to-be displayed portion of the vector-basedmap 146. The digitalassistant interface component 138 can provide the set of point locations to thenavigation interface component 116 of thedigital assistant application 108. - With the retrieval of the data from the
navigation application 110, theNLP component 114 can disambiguate or identify one or more point location from the set of point locations within the reference frame based on the one or more referential keywords and the identifiers for the set of point locations. TheNLP component 114 can determine a correlation between the one or more keywords and the identifiers for the set of point locations to identify the point locations using a semantic knowledge graph (sometimes referred to as a semantic graph or semantic network). The semantic knowledge graph can include a set of nodes connected to one another via vertices. Each node can correspond to a keyword or phrase. Each vertex can specify a semantic distance between two nodes. The semantic distance can represent or correspond to a semantic similarity or relatedness measure between the words or phrases of the nodes. For each point location of the set, theNLP component 114 can calculate or determine a semantic distance between the corresponding identifier for the point location and the one or more referential keywords using the semantic knowledge graph. As previously discussed, the identifier can include a name or a category type. In the semantic knowledge graph, theNLP component 114 can identify the node corresponding to the referential keyword and the node corresponding to the identifier for the point location. TheNLP component 114 can then determine the semantic distance between the two nodes. TheNLP component 114 can identify the one or more point locations based on the semantic distances between the referential words and the identifiers of the set of point locations. Having determined the semantic distances using the semantic knowledge graph, theNLP component 114 can identify the point location with the lowest semantic distance with the one or more referential keywords. To identify multiple point locations, theNLP component 114 can identify the one or more point locations with the lowest n semantic distances from the referential keywords. - Using the semantic knowledge graph, the
NLP component 114 can also determine whether the referential keywords refer to any of the point locations within the reference frame. TheNLP component 114 can compare the semantic distance between each referential keyword and the identifier for each point location to a threshold distance. The threshold distance can indicate the maximum semantic distance at which theNLP component 114 can determine that referential keyword refers to the identifier in the semantic knowledge graph. TheNLP component 114 can determine at least one semantic distance between one of the referential keywords and one of the identifiers is less than or equal to the threshold distance. Responsive to the determination that at least one semantic distance is less than or equal to the threshold distance, theNLP component 114 can determine at least one referential keyword refers to one of the point locations within the reference frame. Conversely, theNLP component 114 can determine that all the semantic distances are greater than the threshold distance. Responsive to the determination that all the semantic distances are greater than the threshold distance, theNLP component 114 can determine that the referential keywords do not refer to any point locations within the reference frame. - The
NLP component 114 can also identify the one or more point locations using semantic analysis techniques, such as word-sense disambiguation, discourse referent analysis, and deictic analysis, among others. TheNLP component 114 can determine whether to use the semantic analysis techniques based on the semantic distances determined using the semantic knowledge graph. TheNLP component 114 can compare the semantic distances between the referential keywords and the identifiers of the point location to a threshold distance. TheNLP component 114 can determine that a set percentage of the semantic distances (e.g., above 90%) are greater than the threshold. The relatively high semantic distances may indicate that semantic knowledge graph may be ineffective at disambiguating among the identifiers for the point locations. In response to the determination, theNLP component 114 can use the semantic analysis techniques to identify the one or more point locations. For each point location of the set theNLP component 114 can apply the semantic analysis technique to calculate or determine an indexical measure between the corresponding identifier for the point location and the referential keywords. The indexical measure can indicate a likelihood that the referential keyword parsed from the input audio signal references or denotes the identifier for the point location. Having determined the indexical measures, theNLP component 114 can identify the point location with the greatest indexical measure with the one or more referential keywords. To identify multiple point locations, theNLP component 114 can identify the one or more point locations with the greatest n indexical measures in relation to the referential keywords. - Using the indexical analysis techniques, the
NLP component 114 can also determine whether the referential keywords refer to any of the point locations within the reference frame. TheNLP component 114 can compare the indexical measures between each referential keyword and the identifier for each point location to a threshold measure. The threshold measure can indicate the maximum indexical measure at which theNLP component 114 can determine that referential keyword refers to the identifier. TheNLP component 114 can determine at least one indexical measure between one of the referential keywords and one of the identifiers is less than or equal to the threshold measure. Responsive to the determination that at least one indexical measure is less than or equal to the threshold measure, theNLP component 114 can determine at least one referential keyword refers to one of the point locations within the reference frame. Conversely, theNLP component 114 can determine that all the indexical measures are greater than the threshold measure. Responsive to the determination that all the indexical measures are greater than the threshold measure, theNLP component 114 can determine that the referential keywords do not refer to any point locations within the reference frame. - The
NLP component 114 can use the set of search terms previously received by thenavigation application 110 to identify the one or more point locations from the set of point locations. For each point location of the set, theNLP component 114 can calculate or determine a semantic distance between the corresponding identifier for the point location and the one or more search terms. In the semantic knowledge graph, theNLP component 114 can identify the node corresponding to the search term and the node corresponding to the identifier for the point location. TheNLP component 114 can then determine the semantic distance between the two nodes. TheNLP component 114 can select a subset of point locations based on the semantic distances between the search terms and the identifiers of the set of point locations. From the set of point locations retrieved from thenavigation application 110, theNLP component 114 can select the subset of point locations with the lowest n semantic distances from the referential keywords. From the subset of point locations, theNLP component 114 can identify the one or more point locations using the functionalities detailed herein above. - Using the measurements from the
geolocation sensing component 118, theNLP component 114 can identify the one or more point locations from the set. As discussed above, thegeolocation sensing component 118 can determine or identify a direction of travel, a position, and a speed, among other measures of theclient device 104 running thedigital assistant application 108 or thenavigation application 110. TheNLP component 114 can identify or select a subset of point locations from the set based on the measurements from thegeolocation sensing component 118. TheNLP component 114 can identify the geographic coordinates of each point location retrieved from thenavigation application 110. TheNLP component 114 can compare the geographic coordinates of the set of point locations with the position of theclient device 104. TheNLP component 114 can identify the subset of location points with geographic coordinates within a defined proximity (e.g., within 1 to 3 km) of the position of theclient device 104. From the subset, theNLP component 114 can use the direction of travel to select a smaller subset of point locations. TheNLP component 114 can select or identify the smaller subset of point locations with geographic coordinates along the direction of travel and exclude the point locations opposite of the direction of travel. For example, theNLP component 114 can select the point locations north within 2 km of theclient device 104, when theclient device 104 is measured travelling northward. From the smaller subset of point locations, theNLP component 114 can identify the one or more point locations using the functionalities detailed herein above. - The
NLP component 114 can use the location identifier of theclient device 104 and the location identifiers of the point locations to identify the one or more point locations from the set. TheNLP component 114 can compare the location identifier for theclient device 104 to the location identifiers of the point locations in the set. For each point location, theNLP component 114 can determine whether the location identifier of the point location is within a defined proximity (e.g., less than 1 km to 3 km) of the location identifier for theclient device 104. TheNLP component 114 can select the subset of point locations with location identifiers within the defined proximity of the location identifier of theclient device 104. From the subset of point locations, theNLP component 114 can identify the one or more point locations using the functionalities detailed herein above. - In identifying the one or more point locations, the
NLP component 114 can search for other keywords related to the referential keywords identified in the input audio signal. TheNLP component 114 can automatically generate the expanded entity based on content or preferences thedata processing system 102 received from theclient device 104. TheNLP component 114 can generate the expanded entity based on content or preferences thedata processing system 102 requests from theclient device 104 in a subsequent audio-based input request. Based on the content or preferences received by thedata processing system 102, theNLP component 114 can search for additional keywords related to the referential keywords to identify the one or more point locations. For example, the input audio signal can include “Ok, let's go home,” and theNLP component 114 may have identified “home” as a referential keyword. The end user of theclient device 104 may have previously provided thedata processing system 102 running thedigital assistant application 108 with the end user's home address. In this example, theNLP component 114 can retrieve the location identifier for the end user's home address, and compare with the location identifiers of the point locations retrieved from thenavigation application 110. By comparing the location identifiers, theNLP component 114 can identify the point location corresponding to the referential keyword of “home.” - The
NLP component 114 can identify the one or more point locations from the set based on further analysis of the referential keywords. TheNLP component 114 can determine or identify which portion of the vector-basedmap 146 the referential keyword is referencing. As discussed above, thenavigation interface component 116 can access thenavigation application 110 to retrieve the point locations of a portion of the vector-basedmap 146 visible through the viewport. Thenavigation interface component 116 can access thenavigation application 110 to access another portion of the vector-based map 145 about the proximity outside the viewport about the destination location. The point locations can be labeled as visible within the viewport or outside the viewport. TheNLP component 114 can perform semantic analysis techniques to determine whether the referential keyword is a proximal word or a distal word. The proximal word can denote a point location nearby, and can correlate to one of the point locations in the portion of the vector-basedmap 146 visible through the viewport of thenavigation application 110. The distal word can denote a point location afar, and can correlate to one of the point locations in the portion of the vector-basedmap 146 outside the viewport of thenavigation application 110. TheNLP component 114 can compare the one or more referential keywords to a set of predefined proximal words (e.g., “here,” “nearby,” and “close by”) and to a set of predefined distal words (e.g., “by the destination,” “over there,” “along,”). TheNLP component 114 can determine that the referential word is a proximal word. In response to the determination, theNLP component 114 can select or identify a subset of point locations corresponding to the point locations on the portion of the vector-basedmap 146 visible through the viewport. TheNLP component 114 can determine that the referential word is a distal word. In response to the determination, theNLP component 114 can select or identify a subset of point locations corresponding to the point locations on the portion of the vector-basedmap 146 outside the viewport. From the subset of point locations, theNLP component 114 can identify the one or more point locations using the functionalities detailed herein above. - The
NLP component 114 can identify the one or more point locations from the set of point locations within the reference frame using the one or more auxiliary keywords parsed from the input audio signal. As discussed above, the auxiliary keywords may be the keywords parsed from the input audio signal besides the request and the one or more referential keywords, and can correspond to keywords referencing the display of theclient device 104. In identify the keyword parsed from the input audio signal as an auxiliary keyword, theNLP component 114 can identify a subset area of the viewport of thenavigation application 110 or the display of theclient device 104 running thenavigation application 110 for the auxiliary keyword. As described previously, each keyword in the third set of predefined keywords used to identify the auxiliary keyword can correspond or be associated with the subset area of the viewport of thenavigation application 110. For example, the auxiliary keyword “top-left corner” can correspond to a top left quadrant of the viewport of thenavigation application 110. The subset area of the viewport of thenavigation application 110 can be defined using pixel coordinates (e.g., length by width). TheNLP component 114 can identify or determine a subset area of the portion of the vector-basedmap 146 visible through the viewport corresponding to the subset area associated with the auxiliary keywords. TheNLP component 114 can convert the pixel coordinate defined for the subset area of the viewport associated with the auxiliary keywords to the dimensions and coordinates for the portion of the vector-basedmap 146 visible through the viewport. - Using the dimensions and the coordinates for the subset area of the portion of the vector-based
map 146 corresponding to the subset area of the viewport associated with the auxiliary keywords, theNLP component 114 can select or identify a subset of point locations. TheNLP component 114 can compare the geographic coordinates of each point location with the dimensions and coordinates. Based on the comparison, theNLP component 114 can select or identify the point locations inside the subset area of the portion of the vector-basedmap 146. From the subset of point locations, theNLP component 114 can identify the one or more point locations using the functionalities detailed herein above. - The
NLP component 114 can use previously received input audio signals in identifying the one or more point locations from the set. TheNLP component 114 can store and maintain input audio signals determined to reference at least one function of thenavigation application 110. TheNLP component 114 can also store and maintain the one or more keywords parsed from the previously received input audio signals determined to reference at least one function of thenavigation application 110. TheNLP component 114 can identify a time elapsed since receipt of each stored input audio signal. For each input audio signal, theNLP component 114 can determine whether the elapsed time is greater than or equal to a defined threshold time (e.g., 15 seconds to 60 minutes). TheNLP component 114 can identify a set of previously received input audio signals with elapsed time less than the defined threshold time. For each in the set, theNLP component 114 can parse the input audio signal to identify the one or more referential keywords using functionalities described herein above. - Using the referential keywords from the previous input audio signal, the
NLP component 114 can select or identify a subset of point locations from the set of point locations. TheNLP component 114 can determine a match between the referential keywords from the previous input audio signal and the referential keywords from the current input audio signal. Based on the match, theNLP component 114 can adjust (e.g., by decreasing) the semantic distance between the referential keyword corresponding to the match and the identifier of the point location. For example, both the previous and the current input audio signal can include the referential word “restaurant.” Having determined the match, theNLP component 114 can decrease the semantic distance between the referential word “restaurant” and the identifier, thereby increasing the likelihood that the point locations corresponding to restaurants is selected. - The
NLP component 114 can also use the semantic analysis techniques to calculate or determine an indexical measure between the referential words of the current input audio signal with the referential words of the previously received input audio signals. The semantic analysis techniques can include word-sense disambiguation, discourse referent analysis, and deictic analysis, among others. For each of the referent words of the previously received input audio signals, theNLP component 114 can calculate or determine the indexical measure. As discussed previously, the indexical measure can indicate a likelihood that the referential keyword parsed from the input audio signal references or denotes the identifier for the point location. Having determined the indexical measures, theNLP component 114 can identify the referential word from the previously received input audio signal with the greatest indexical measure with the one or more referential keywords. To identify multiple point locations, theNLP component 114 can identify the one or more referential words from the previously received input audio signal with the greatest n indexical measures in relation to the referential keywords of the current input audio signal. With the identification, theNLP component 114 can use the one or more referential keywords from the previously received input audio signals to select the subset of point locations. - For each point location of the set, the
NLP component 114 can calculate or determine a semantic distance between the corresponding identifier for the point location and the one or more referential keywords from the previously received input audio signal. In the semantic knowledge graph, theNLP component 114 can identify the node corresponding to the referential keywords and the node corresponding to the identifier for the point location. TheNLP component 114 can then determine the semantic distance between the two nodes. TheNLP component 114 can select a subset of point locations based on the semantic distances between the referential keywords and the identifiers of the set of point locations. From the set of point locations retrieved from thenavigation application 110, theNLP component 114 can select the subset of point locations with the lowest n semantic distances from the referential keywords. From the subset of point locations, theNLP component 114 can identify the one or more point locations using the functionalities detailed herein above. - The
data processing system 102 can execute or run an instance of the directaction handler component 120. The directaction handler component 120 can execute scripts or programs based on input received from theNLP component 114. Thenavigator service 106 can provide the scripts or programs. Thenavigator service 106 can make the scripts or programs available to thedata processing system 102 through the API. The directaction handler component 120 can determine parameters or responses to input fields and can package the data into an action data structure. The action data structure can be provided to thedata processing system 102 through the API. The directaction handler component 120 can transmit the action data structure to thenavigation application 110 for fulfillment or thedata processing system 102 can fulfill the instructions of the action data structure. - The direct
action handler component 120 can generate or select data structure for the actions of a thread or conversations based on the request and the referential keywords parsed from the input audio signal. As described above theNLP component 114 can determine that the input audio signal references thenavigation application 110 and which function of thenavigation application 110. The action data structure can include information for thenavigation application 110 to complete the request. The information can include the request type corresponding to one of the functions of thenavigation application 110 indicated in the input audio signal. The information can include one or more parameters to carry out the function of thenavigation application 110 corresponding to the function type. The one or more parameters can include the one or more point locations identified using the referential keywords and auxiliary keywords parsed from the input audio signal. The one or more parameters can include the identifiers for the one or more identified point locations. The one or more parameters can include linking data for thedigital assistant application 108 or thenavigation application 110 running on theclient device 104, such as an account identifier and authentication credentials. The directaction handler component 120 can also invoke or call thenavigation application 110 using the request. The directaction handler component 120 can package the request into an action data structure for transmission as another request (also sometimes referred to as a message) to thenavigator service 106. - The direct
action handler component 120 can retrieve at least onetemplate 136 from thedata repository 126 to determine which fields to include into the action data structure for thenavigation application 110. The directaction handler component 120 can retrieve thetemplate 136 to obtain information for the fields of the data structure. Using the request type and the one or more parameters, the directaction handler component 120 can populate the fields from thetemplate 136 to generate the action data structure. Thetemplate 136 can be set or configured for thenavigation application 110 or thenavigation service 106 for creation of the action data structure. For example, thetemplate 136 for thenavigation application 110 can be of the following form: [account identifier], [authentication credentials], [request type], [parameters]I. In populating thetemplate 136 for thenavigation application 110, the directaction handler component 120 can identify and insert the account identifier, the authentication credentials, the request type (or function identifier), and the one or more parameters, among other information. - Responsive to determining that at least one referential keyword references one of the point locations within the reference frame, the direct
action handler component 120 can set the one or more parameters to include the identifiers of the point locations, coordinates of theclient device 104, and location identifiers of the point locations, among other data. The identifiers included in the parameters may include the identifiers for the point locations identified using the referential keyword. The one or more parameters can also include an indicator that at least one referential keyword references one of the point locations within the reference frame. Responsive to determining that the referential keywords do not reference any of the point locations within the reference frame, the directaction handler component 120 can set the one or more parameters to include the coordinates of theclient device 104 and the referential keywords, among others. The one or more parameters can also include an indicator that the referential keywords do not reference any of the point locations within the reference frame. - The direct
action handler component 120 can expand the entities to convert the entities into a format that thenavigator service 106 for a given field of the action data structures for thenavigator service 106. The entities can include information that may be ambiguous or unclear to thenavigator service 106. For example, when thenavigator service 106 requested a street address, the end user may provide an entity that is the proper name of a location or business. TheNLP component 114 can automatically generate the expanded entity based on content or preferences thedata processing system 102 received from theclient device 104. TheNLP component 114 can generate the expanded entity based on content or preferences thedata processing system 102 requests from theclient device 104 in a subsequent audio-based input request. For example, thedata processing system 102 can receive an input audio signal that includes “Ok, let's go home.” TheNLP component 114 may have determined which identifier of the point locations retrieved from thenavigation application 110 corresponds to the referential keyword. For example, theNLP component 114 can identify “home” as a location entity as one of the one or more parameters for the function; however, the location field in the action data structure can require a street address, city, state, and zip code. In this example, the “home” location entity is not in the format requested by thenavigator service 106. When the end user of theclient device 104 previously provided thedata processing system 102 or thenavigator service 106 with the end user's home address, theNLP component 114 can expand “home” into the format requested by field of the service provider device's action data structure (e.g., {street address:“123 Main St.”, city:“Anytown”, state:“CA”}). If the end user did not previously provide thedata processing system 102 with the end user's home address, thedata processing system 102 can generate and transmit an audio-based input request that requests the end user indicate a specific address rather than “home.” Expanding the entity prior to transmitting the entity to thenavigator service 106 can reduce the number of required network transmission because thenavigator service 106 may not send another request clarifying or additional information after receiving the unexpanded entity. - Upon generation of the action data structure, the direct
action handler component 120 can send, transmit, or provide the action data structure to thenavigation application 110. As previously described, theclient device 104 running thedigital assistant application 108 can lack thenavigation application 110, and in response thenavigation interface component 116 can access another associatedclient device 104 to access thenavigation application 110. Responsive to determining that theclient device 104 that received the input audio signal is running or has thenavigation application 110, the directaction handler component 120 can provide the action data structure to thenavigation application 110. Conversely, responsive to determining that theclient device 104 that received the input audio signal is not running or lacks thenavigation application 110, the directaction handler component 120 can provide the action data structure to anotherclient device 104 identified as running or having thenavigation application 110. - The digital
assistant interface component 138 can receive the action data structure generated by the directaction handler component 120. The digitalassistant interface component 138 can parse the action data structure in accordance to thetemplate 136. The digitalassistant interface component 138 can also maintain a copy of the template 136 (e.g., on a database accessible by the navigator service 106). By applying thetemplate 136, the digitalassistant interface component 138 can identify the account identifier, the authentication credentials, the request type, and the one or more parameters from the data action structure. The digitalassistant interface component 138 can authenticate the account identifier by comparing a local copy of authentication credentials to the copy of the authentication credentials from the action data structure. The digitalassistant interface component 138 can retrieve the local copy of the authentication credentials from thenavigator service 106 or thenavigation application 110 running on theclient device 104 using the account identifier. Responsive to determining a match between the authentication credentials to successfully authenticate the account identifier, the digitalassistant interface component 138 can initiate the navigation guidance process using the request type and the one or more parameters. The navigation guidance process can include the location finding operation and the path routing operation. The digitalassistant interface component 138 can identify the request type as corresponding to the location finding operation. Responsive to the identification, the digitalassistant interface component 138 can invoke thelocation finder component 140 to initiate the location finding operation. Under the location finding location, the action data structure can include one or more point locations. The digitalassistant interface component 138 can identify the request type as corresponding to the path routing operation. Under the path routing operation, the action data structure can include a single point location. Responsive to the identification, the digitalassistant interface component 138 can invoke thepath router component 142 to initiate the path routing operation. - The
data processing system 102 or thenavigator service 106 can execute or run an instance of thelocation finder component 140 of thenavigation application 110. Responsive to the invocation, thelocation finder component 140 can present the one or more point locations on the portion of the vector-basedmap 146 visible through the viewport of thenavigation application 110. Thelocation finder component 140 can parse the action data structure to identify the indicator. Using the indicator, thelocation finder component 140 can determine the referential keywords of the input audio signal at thedigital assistant application 108 references at least one point location. Responsive to the determination, thelocation finder component 140 can identify the one or more point locations from the action data structure. For each point location, thelocation finder component 140 can identify a location identifier corresponding to the point location on the vector-basedmap 146. - Conversely, the
location finder component 140 can determine the referential keywords of the input audio signal at thedigital assistant application 108 references at least one point location based on the indicator of the action data structure. In response to the determination, thelocation finder component 140 can access the vector-basedmap 146 outside the reference frame. Having accessed the vector-basedmap 146, thelocation finder component 140 can search for identifiers of the one or more point locations outside the reference frame. Thelocation finder component 140 can then identify identifiers of the one or more point locations outside the reference frame in the vector-basedmap 146 matching the referential keywords of the action data structure. For example, the referential keywords “Tower ABC” included in the received action data structure may refer to any of the point locations within the reference frame. In this example, thelocation finder component 140 can search for point locations matching the identifier the “Tower ABC” in the vector-basedmap 146 outside the initial reference frame. Thelocation finder component 140 can identify multiple point locations with identifiers matching the referential keywords. Using the location identifier of theclient device 104 from the action data structure, thelocation finder component 140 can identify the point location nearest to theclient device 104. With the identification of each point location, thelocation finder component 140 can identify the geographic coordinates for the identified point location. - Responsive to identifying point locations outside the initial reference frame, the
location finder component 140 can modify the reference frame to include the point location with the identifier matching the referential keywords. Thelocation finder component 140 can identify the dimensions and coordinates of the initial reference frame in corresponding to the visible portion of the vector-basedmap 146. Thelocation finder component 140 can move the coordinates of the reference frame to include the coordinates of the point location with the identifier matching the referential keywords. The coordinates of the point location may be, for example, at the center of the new reference frame. Thelocation finder component 140 can also maintain the dimensions of the reference frame. With the reference frame moved, thenavigation application 110 can display a different portion of the vector-basedmap 146 through the viewport. The portion may correspond to the reference frame moved to include the point location with the identifier matching the referential keywords. In this manner, thedigital assistant application 108 and thenavigation application 110 can be used to present point locations and perform other functions inside and outside the portion of the vector-basedmap 146 displayed through the viewport. For example, the first voice query parsed by theNLP component 114 may be “Show me Tower ABC.” TheNLP component 114 may have determined that the first voice query does not refer to any point location currently visible in the vector-basedmap 146 displayed through the viewport of thenavigation application 110. With the referential keywords “Tower ABC,” thelocation finder component 140 can find the point location with the identifier corresponding to “Tower ABC.” Subsequently, the second voice query parsed by theNLP component 114 may be “Show me patisseries.” TheNLP component 114 can determine that some of the point locations now visible on the portion of the vector-basedmap 146 visible through the viewport are referenced by the referential keyword “patisseries.” Thelocation finder component 140 can then highlight the corresponding point location in the portion of the vector-basedmap 146. - The
location finder component 140 can present the point locations corresponding to the location identifiers on the portion of the vector-basedmap 146 visible through the viewport of thenavigation application 110. For example, thelocation finder component 140 can insert a point or circle or highlight a graphical representation corresponding to the point location on the vector-basedmap 146. Thelocation finder component 140 can also display the identifiers for the point locations in text. Upon displaying the point locations on the portion of the vector-basedmap 146 through the viewport, thelocation finder component 140 can generate a response to provide as text for display or for an output audio signal. The response can include the request type corresponding to the location finding operation. The response can include the identifiers for the point locations displayed within the portion of the vector-basedmap 146 visible through the viewport of thenavigation application 110. The response can also include a number of the displayed point locations. The response can also include at least one response phrase with one or more words for display or for an output audio signal. The response phrase can be defined using a template. For example, the template for the response phrase may be of the form: “[number of point locations] [identifier] found in the area.” In generating the response, thelocation finder component 140 can identify the request type, the identifiers for the displayed point locations, the number of displayed point locations, and the at least one response phrase. Once the response is generated, the digitalassistant interface component 138 can send, transmit, or provide the response to thedigital assistant application 108. - The
data processing system 102 or thenavigator service 106 can execute or run an instance of thepath router component 142 of thenavigation application 110. Responsive to the invocation, thepath router component 142 can generate, determine, or identify a travel path to the point location identified in the action data structure. Thepath router component 142 can identify the current geographic coordinates of theclient device 104 running thenavigation application 110 using thegeolocation sensing component 118. Thepath router component 142 can convert the geographic coordinates of theclient device 104 to a location identifier on the vector-basedmap 146. Thepath router component 142 can set the location identifier for theclient device 104 as a start location. Thepath router component 142 can identify the location identifier corresponding to the point location of the action data structure. Thepath router component 142 can set the location identifier of the point location as a destination location. Thepath router component 142 can apply pathfinding algorithms (e.g., Djikstra's algorithm, A* algorithm, and Kruskal's algorithm) to determine the travel path between the start location and the destination location on paths of the vector-basedmap 146. As described above, the vector-basedmap 146 can include paths corresponding to the transportation networks. Thepath router component 142 can also present or display at least a part of the travel path on the portion of the vector-basedmap 146 visible through the viewport of thenavigation application 110. - In response to determining the travel path, the
path router component 142 can generate a response to provide as text for display or for an output audio signal. The response can include the request type corresponding to the path routing operation. The response can include the identifier for the point location corresponding to the destination location on the vector-basedmap 146. The response can also include an estimated travel time to the destination location. The response can also include at least one response phrase with one or more words for display or for an output audio signal. The response phrase can be defined using a template. For example, the template for the response phrase may be of the form: “Route found to [destination location]. Estimated time of arrival [estimated travel time].” In generating the response, thelocation finder component 140 can identify the request type, the identifier for the point location, the estimated travel time, and the at least one response phrase. Once the response is generated, the digitalassistant interface component 138 can send, transmit, or provide the response to thedigital assistant application 108. - Responsive to receipt of the response from the
navigation application 110, the audiosignal generator component 122 can parse the response to identify the response phrase for textual output or for an output audio signal. The audiosignal generator component 122 can generate an output audio file based on the one or more words of response phrase in the response from thenavigator service 106. The audiosignal generator component 122 can play (e.g., via thespeaker 148 of the client device 104) the output audio file of the one or more words of the response phrase. Thedigital assistant application 108 can also display the one or more words of the response phrase in text. In generating the textual output or the output audio file, theresponse selector component 124 can select or identify responses phrases using thepolicies 132 or theresponse data 134 maintained on thedata repository 126. Thepolicies 132 can be particular to a request type (e.g., the location finding operation or the path routing operation), and can specify theresponse data 134 for the request type. Theresponse selector component 124 can search thepolicies 132 for generating the output using the request type of the response from thenavigation application 110. Once thepolicy 132 is identified, theresponse selector component 124 can match the contents of the response from thenavigation application 110 with theresponse data 134. Responsive to identifying thepolicy 132 for the location finding operation, theresponse selector component 124 can match the identifiers for the displayed point locations and the number of displayed point locations into the response data 13 4 for thepolicy 132. Responsive to identifying thepolicy 132 for the path routing operation, theresponse selector component 124 can match the identifier for the point location and the estimated travel time into theresponse data 134 for thepolicy 132. - Referring now to
FIG. 2 , depicted is a sequence diagram of anexample data flow 200 to determine operational statuses ofnavigation applications 110 interfacing with thedigital assistant application 108 in the system illustrated inFIG. 1 . The data flow 200 can be implemented or performed by thesystem 100 described above in conjunction withFIG. 1 orsystem 600 detailed below in conjunction withFIG. 6 . - A local instance of the
digital assistant application 108 running on theclient device 104 can detect an input audio signal via the sensor 158 and perform initial processing on the input audio signal to generate arequest 205. Therequest 205 can include the input audio signal itself or one or more words identified in the input audio signal using machine learning techniques. Theclient device 104 can transmit therequest 205 to thedata processing system 102. A remote instance of thedigital assistant application 108 running on thedata processing system 102 can perform additional processing on therequest 205. TheNLP component 114 running on thedata processing system 102 can parse therequest 205 to determine that therequest 205 is referencing a function to be performed by thenavigation application 110. TheNLP component 114 can also identify the request corresponding to the function and referential keywords from the input audio signal using semantic analysis techniques. In response to the determination, thenavigation interface component 116 can send anaccess request 210 to the navigator service 106 (or another client device 104) running thenavigation application 110. - Upon receipt of the
access request 210, the digitalassistant interface component 138 running on thenavigator service 106 can identify information visible through the viewport of thenavigation application 110. The information can include point locations and identifiers for the point locations of the geographic region represented by the vector-basedmap 146 visible through the viewport of thenavigation application 110. The digitalassistant interface component 138 can set the information visible through the viewport of thenavigation application 110 asreference frame data 215. The digitalassistant interface component 138 can in turn provide thereference frame data 215 to thedata processing system 102. - Using the
reference frame data 215, theNLP component 114 can use semantic analysis techniques to determine which point location the referential keyword of the input audio signal is denoting. For example, theNLP component 114 can compare the referential keywords with the identifiers of the point locations. With the identification of the point location, the directaction handler component 120 executing on thedata processing system 102 can generate a directaction data structure 220. The directaction data structure 220 can include the request type corresponding to the function to be performed by the navigation application 110 (e.g., location finding or path routing). The directaction data structure 220 can also include the point location identified using the referential keyword. The directaction handler component 120 can transmit the directaction data structure 220 to the navigator service 106 (or the client device 104) executing thenavigation application 110. - In accordance to the direct
action data structure 220, thenavigation application 110 can perform the navigation guidance process. The digitalassistant interface component 138 can parse the directaction data structure 220 to identify the request type. Using the request type, the digitalassistant interface component 138 can invoke one of thelocation finder component 140 and thepath router component 142 running on thenavigator service 106. When the request type is identified as corresponding to the location finding function, thelocation finder component 140 can present the point locations (e.g., via highlighting) on the geographic region displayed through the viewport of thenavigation application 110. When the request type is identified as corresponding to the path routing function, thepath router component 142 can determine the travel path between a starting location (e.g., the client device 104) to a destination location corresponding to the point location of the directaction data structure 220. Thepath router component 142 can present a part of the travel path on the geographic region displayed on the viewport of thenavigation application 110. Thelocation finder component 140 and thepath router component 142 can each generate aresponse 225 to transmit back to thedigital assistant application 108 executing on thedata processing system 102. Theresponse 225 can include a response phrase as well as other parameters. Using theresponse 225, the audiosignal generator component 122 can generate anotherresponse 230 to provide to theclient device 104. Once received, thedigital assistant application 108 running on theclient device 104 can display theresponse 230 as text on display or as an audio file outputted through thespeaker 148. - Referring now to
FIG. 3 , depicted is theclient device 104 running thedigital assistant application 108 on the left and running thenavigation application 110 on the right underconfiguration 300. Theclient devices 104 executing thedigital assistant application 108 and thenavigation application 110 can be the same or different. - The
digital assistant application 108 running on theclient device 104 on the left can detect an input audio signal via the sensor 158. Thedigital assistant application 108 can apply natural language processing techniques to identify one or more words in the detected input audio signal. Thedigital assistant application 108 can display the output as atext content item 305 including the words “Show me coffee stores nearby” identified from the input audio signal. Thedigital assistant application 108 can determine that the input audio signal is referencing a location finding operation of thenavigation application 110. Thedigital assistant application 108 can identify the words “Show me” as the request and “coffee stores nearby” as the referential keywords. In response to determining that the input audio signal is referencing the location finding operation, thedigital assistant application 108 can access thenavigation application 110. - The
navigation application 110 running on theclient device 104 on the right can display a portion of the vector-basedmap 146 through aviewport 310 of thenavigation application 110. Theviewport 310 of thenavigation application 110 can correspond to a size of the display of theclient device 104. The vector-basedmap 146 can include a set ofpoint locations 320 corresponding to building and a set of paths among thepoint locations 320 representing the transportation networks, such as the roads and railroads as illustrated. Eachpoint location 320 can have an identifier such as name or a category type of the building, such as “café,” “gas station,” “hotel,” and “office.” Thenavigation application 110 can identify thepoint locations 320 appearing in theviewport 310, such as thepoint locations 320 with the identifiers “Café B,” “Café C,” and “Office.” Thenavigation application 110 can exclude point locations outside theviewport 310, such as thepoint locations 320 with the identifiers “Café A” and “Café D.” Thenavigation application 110 can displaycurrent location 315 of theclient device 104 on the vector-basedmap 146 using a mark (e.g., a four-point star). Thenavigation application 110 can provide the point locations with the identifiers to thedigital assistant application 108. - With the retrieval of the point locations from the
navigation application 110, thedigital assistant application 108 can perform semantic analysis techniques to identify which point locations the referential keywords are referring to. In the shown example, thedigital assistant application 108 may have identified “coffee stores nearby” as the referential keywords. Using the semantic analysis techniques, thedigital assistant application 108 can determine that the referential keywords of “coffee stores nearby” are denote thepoint locations 320 with the identifiers “Café B” and “Café C.” Thedigital assistant application 108 can determine that the referential keywords do not denote thepoint location 320 with the identifier “Office.” With the identification of thepoint locations 320 having the identifiers “Café B” and “Café C,” thedigital assistant application 108 can generate the direct action data structure to provide to thenavigation application 110. The direct action data structure can have the identifiedpoint locations 320 and the request type corresponding to the location finding operation of thenavigation application 110. Upon receipt, thenavigation application 110 can parse the direct action data structure to identify that the function to be performed is the location finding operation. Thenavigation application 110 can also parse the direct action data structure to identify thepoint locations 320 with the identifiers “Café B” and “Café C.” Based on these identifications, thenavigation application 110 can highlight the buildings representing thepoint locations 320 with the identifiers “Café B” and “Café C.” In addition, thenavigation application 110 can generate and send a response back to thedigital assistant application 108. The response can include a response phrase, “Two coffee stores found.” Thedigital assistant application 108 can in turn display atext content item 325 on the screen of theclient device 104. - Subsequently, the
digital assistant application 108 can detect another input audio signal via the sensor 158. Thedigital assistant application 108 can apply natural language processing techniques to identify one or more words in the detected input audio signal. Thedigital assistant application 108 can display the output as atext content item 330 including the words “Take me to that one on the left” identified from the input audio signal. Thedigital assistant application 108 can determine that the input audio signal is referencing a path routing operation of thenavigation application 110. Using natural language processing techniques, thedigital assistant application 108 can identify the words “Take me” as the request, “that one” as the referential keyword, and “on the left” as the auxiliary keywords. With the point locations previously retrieved from thenavigation application 110, thedigital assistant application 108 can identify that the referential keyword together with the auxiliary keywords denote thepoint location 320 with the identifier “Café C” that appears on the left of theviewport 310. Based on the identification of thepoint location 320 with the identifier “Café C,” the generate the direct action data structure to provide to thenavigation application 110. The direct action data structure can have the identifiedpoint location 320 and the request type corresponding to the path routing operation of thenavigation application 110. Upon receipt, thenavigation application 110 can parse the direct action data structure to identify that the function to be performed is the path routing operation. Thenavigation application 110 can also parse the direct action data structure to identify thepoint location 320 with the identifier “Café C,” and can set thepoint location 320 as a destination location. Thenavigation application 110 can also identify a current location of theclient device 104 as a starting location. Based on these identifications, thenavigation application 110 can determine atravel path 335 through the vector-basedmap 146 using pathfinding algorithms. Based on thetravel path 335, thenavigation application 110 can determine an estimate time of arrival. Thenavigation application 110 can render and display thetravel path 335 on the vector-basedmap 146. In addition, thenavigation application 110 can generate and send a response back to thedigital assistant application 108. The response can include a response phrase, “Round found.ETA 15 minutes.” Thedigital assistant application 108 can in turn display atext content item 340 on the screen of theclient device 104. -
FIG. 4 illustrates a block diagram of anexample method 400 to generate voice-activated threads in a networked computer environment. Themethod 400 can be implemented or executed by thesystem 100 described above in conjunction withFIGS. 1-3 orsystem 600 detailed below in conjunction withFIG. 6 . The method can include receiving an input audio signal (405). Themethod 400 can include parsing the input audio signal (410). Themethod 400 can include selecting an action data structure (415). Themethod 400 can include expanding a response entity (420). The method can include populating the action data structure (425). Themethod 400 can include transmitting the digital component (430). - The
method 400 can include receiving an input signal (405). The method can include receiving, by an NLP component executed by a data processing system, the input signal. The input signal can be an input audio signal that is detected by a sensor at a first client device and transmitted to the data processing system. The sensor can be a microphone of the first client device. For example, a digital assistant component executed at least partially by a data processing system that includes one or more processors and memory can receive the input audio signal. The input audio signal can include a conversation facilitated by a digital assistant. The conversation can include one or more inputs and outputs. The conversation can be audio based, text based, or a combination of audio and text. The input audio signal can include text input, or other types of input that can provide conversational information. The data processing system can receive the audio input for a session corresponding to the conversation. - The
method 400 can include parsing the input signal (410). The NLP component of the data processing system can parse the input signal to identify a request. The NLP component can identify at least one entity in the input signal. The request can be an intent or request that can be fulfilled by one or more service provider devices. The request can be a part of a conversational phrase. For example, the request can be “Ok, order a car to take me home.” The entities identified by the NLP component can be phrases or terms in the request that map to input fields or types the service provider device requests when fulfilling a request. For example, the service provider device providing the car service may request a current location input field and a destination input field. Continuing the above example, the NLP component can map the term “home” to the destination input field. - The
method 400 can include selecting an action data structure (415). The data processing system can select the action data structure based on the request parsed from the input signal. The data processing system can select the action data structure based on the service provider device that can fulfill the request. The action data structure can be a data structure or object that is created by the service provider device. The service provider device can provide the action data structure to the data processing system. The action data structure can indicate fields, data, or information that the service provider device uses to fulfill requests. The service provider device can flag one or more of the fields to request that the data processing system expand the entity returned for that field. When a field is flagged for expansion, the data processing system can design and generate conversation-based data exchanges with theclient device 104 to retrieve information or data for the flagged field rather than the service provider device 160 designing the conversation-based data exchange. - The
method 400 can include expanding the response entity (420). The data processing system can determine the entity mapped to the input field needs to be expanded if the entity is not in a format specified by the service provider device. Continuing the above example, the NLP component can determine “home” is the entity mapped to a destination. The direct action handler component can determine to update the action data structure to include the entity “home” in a destination field. The direct action handler component can determine the format of the response entity does not match the format of the destination field. For example, the destination field can have the format of an object that requests a street address, city, state, and zip code. Detecting a mismatch between the format of the response entity and the format of the field, the data processing system can expand the entity to a street address, city, state, and zip code format. For example, the data processing system can look up the address the end user provided the data processing system as the end user's “home” address. The data processing system can expand the entity based on an expansion policy. The expansion policy can indicate whether the data processing system has permission to expand the term or can indicate what end user or client computing device provided data can be included in an expanded entity. - The data processing system can expand the entity based on a request from a service provider device. For example, the data processing system can generate a first action data structure with the unexpanded entity. The data processing system can transmit the first action data structure to the service provider device for processing to fulfill the request. The service provider device can return the action data structure (or a portion thereof) to the data processing system if the service provider device cannot process or understand the data in on or more of the action data structure's fields. For example, the service provider device can attempt to process the “home” entity in the destination field and then request the data processing system expand the “home” entity after the service provider device determines that it cannot process or understand the entity.
- The
method 400 can include populating the action data structure (425). The direct action handler component can populate the action data structure with the expanded entity. The direct action handler component can populate the action data structure with the entity. For example, the action data structure can be an object into which the entity or expanded entity is stored. Populating the action data structure can also be referred to update the action data structure. - The
method 400 can include transmitting the action data structure (430). The data processing system can transmit the populated action data structure to the service provider device. Upon receipt of the action data structure, the service provider device can fulfill the request or request additional information from the data processing system or client computing device. - Referring now to
FIG. 5 , depicted is anexample method 500 to interface among multiple applications in a networked computer environment. Themethod 500 can be implemented or executed by thesystem 100 described above in conjunction withFIGS. 1-3 orsystem 600 detailed below in conjunction withFIG. 6 . In brief overview, themethod 500 can include retrieving point location visible through a viewport (505). Themethod 500 can include identifying a point location with identifier corresponding to a referential word (510). Themethod 500 can include generating an action data structure with the identifier (515). Themethod 500 can include initiating a navigation guidance process (520). - The
method 500 can include retrieving point location visible through a viewport (505). The data processing system (e.g., the data processing system 102) executing a digital assistant application can identify a request and a referential word parsed from an input audio signal using natural language processing techniques. The data processing system can determine that the request is referring to a function of a navigation application running on a client device. The function can include a location finding function and a path routing function. In response to determining that the request is referring to a function of the navigation application, the data processing system can access the navigation application to retrieve point locations on a geographic region displayed through a viewport of the navigation application. Each point location can correspond to a feature on the geographic region, and can have an identifier. - The
method 500 can include identifying a point location with identifier corresponding to a referential word (510). With the retrieval of the point locations displayed through the viewport of the navigation application, the data processing system can identify which point location the referential word of the input audio signal is referring to. The data processing system can use semantic analysis techniques to identify which identifier corresponding to the point location the referential word is denoting. The semantic analysis techniques can include using a semantic knowledge graph, performing deixis analysis, and generating n-grams, among others. - The
method 500 can include generating an action data structure with the identifier (515). The data processing system can use the identified request and the point location to generate the action data structure in accordance to a template. The request can correspond to one of the functions of the navigation application. The point location can include the one corresponding to the referential word parsed from the input audio signal. The action data structure can also include an account identifier and an authentication credential, among others. - The
method 500 can include initiating a navigation guidance process (520). The data processing system can send the action data structure to the navigation application to initiate the navigation guidance process. The navigation guidance process can include the location finding operation and the path routing operation. The location finding operation can include presenting or displaying a graphical representation of the point locations corresponding to identifiers in the action data structure. The path routing operation can include determining and presenting a travel route between a current location and a destination location corresponding to the point location corresponding to the identifier in the action data structure. -
FIG. 6 is a block diagram of anexample computer system 600. The computer system orcomputing device 600 can include or be used to implement thesystem 100 or its components such as thedata processing system 102. Thecomputing system 600 includes a bus 605 or other communication component for communicating information and aprocessor 610 or processing circuit coupled to the bus 605 for processing information. Thecomputing system 600 can also include one ormore processors 610 or processing circuits coupled to the bus for processing information. Thecomputing system 600 also includesmain memory 615, such as a random access memory (RAM) or other dynamic storage device, coupled to the bus 605 for storing information and instructions to be executed by theprocessor 610. Themain memory 615 can be or include thedata repository main memory 615 can also be used for storing position information, temporary variables, or other intermediate information during execution of instructions by theprocessor 610. Thecomputing system 600 may further include a read-only memory (ROM) 620 or other static storage device coupled to the bus 605 for storing static information and instructions for theprocessor 610. Astorage device 625, such as a solid state device, magnetic disk or optical disk, can be coupled to the bus 605 to persistently store information and instructions. Thestorage device 625 can include or be part of thedata repositories - The
computing system 600 may be coupled via the bus 605 to adisplay 635, such as a liquid crystal display or active matrix display, for displaying information to a user. Aninput device 630, such as a keyboard including alphanumeric and other keys, may be coupled to the bus 605 for communicating information and command selections to theprocessor 610. Theinput device 630 can include atouch screen display 635. Theinput device 630 can also include a cursor control, such as a mouse, a trackball, or cursor direction keys, for communicating direction information and command selections to theprocessor 610 and for controlling cursor movement on thedisplay 635. Thedisplay 635 can be part of thedata processing system 102, theclient devices 104, or other components ofFIG. 1 , for example. - The processes, systems and methods described herein can be implemented by the
computing system 600 in response to theprocessor 610 executing an arrangement of instructions contained inmain memory 615. Such instructions can be read intomain memory 615 from another computer-readable medium, such as thestorage device 625. Execution of the arrangement of instructions contained inmain memory 615 causes thecomputing system 600 to perform the illustrative processes described herein. One or more processors in a multi-processing arrangement may also be employed to execute the instructions contained inmain memory 615. Hard-wired circuitry can be used in place of or in combination with software instructions together with the systems and methods described herein. Systems and methods described herein are not limited to any specific combination of hardware circuitry and software. - Although an example computing system has been described in
FIG. 6 , the subject matter including the operations described in this specification can be implemented in other types of digital electronic circuitry or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. - For situations in which the systems discussed herein collect personal information about users, or may make use of personal information, the users may be provided with an opportunity to control whether programs or features that may collect personal information (e.g., information about a user's social network, social actions, or activities; a user's preferences; or a user's location), or to control whether or how to receive content from a content server or other data processing system that may be more relevant to the user. In addition, certain data may be anonymized in one or more ways before it is stored or used, so that personally identifiable information is removed when generating parameters. For example, a user's identity may be anonymized so that no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, postal code, or state level), so that a particular location of a user cannot be determined. Thus, the user may have control over how information is collected about him or her and used by the content server.
- The subject matter and the operations described in this specification can be implemented in digital electronic circuitry or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. The subject matter described in this specification can be implemented as one or more computer programs, e.g., one or more circuits of computer program instructions, encoded on one or more computer storage media for execution by, or to control the operation of, data processing apparatuses. Alternatively or in addition, the program instructions can be encoded on an artificially generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus. A computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial-access memory array or device, or a combination of one or more of them. While a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium can also be, or be included in, one or more separate components or media (e.g., multiple CDs, disks, or other storage devices). The operations described in this specification can be implemented as operations performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
- The terms “data processing system,” “computing device,” “component,” or “data processing apparatus” encompass various apparatuses, devices, and machines for processing data, including, by way of example, a programmable processor, a computer, a system on a chip, or multiple ones, or combinations of the foregoing. The apparatus can include special-purpose logic circuitry, e.g., an FPGA (field-programmable gate array) or an ASIC (application-specific integrated circuit). The apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures. The components of
system 100 can include or share one or more data processing apparatuses, systems, computing devices, or processors. - A computer program (also known as a program, software, software application, app, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program can correspond to a file in a file system. A computer program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs (e.g., components of the data processing system 102) to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatuses can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field-programmable gate array) or an ASIC (application-specific integrated circuit). Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- The subject matter described herein can be implemented in a computing system that includes a back end component, e.g., as a data server, or that includes a middleware component, e.g., an application server, or that includes a front end component, e.g., a client computer having a graphical user interface or a web browser through which a user can interact with an implementation of the subject matter described in this specification, or a combination of one or more such back end, middleware, or front end components. The components of the system can be interconnected by any form or medium of digital data communication, e.g., a communication network. Examples of communication networks include a local area network (“LAN”) and a wide area network (“WAN”), an inter-network (e.g., the Internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
- The computing system such as
system 100 orsystem 500 can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network (e.g., the network 156). The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some implementations, a server transmits data (e.g., data packets representing a content item) to a client device (e.g., for purposes of displaying data to and receiving user input from a user interacting with the client device). Data generated at the client device (e.g., a result of the user interaction) can be received from the client device at the server (e.g., received by thedata processing system 102 from theclient devices 104 or the navigator service 106). - While operations are depicted in the drawings in a particular order, such operations are not required to be performed in the particular order shown or in sequential order, and all illustrated operations are not required to be performed. Actions described herein can be performed in a different order.
- The separation of various system components does not require separation in all implementations, and the described program components can be included in a single hardware or software product. For example, the
NLP component 114 and the directaction handler component 122 can be a single component, app, or program, or a logic device having one or more processing circuits, or part of one or more servers of thedata processing system 102. - Having now described some illustrative implementations, it is apparent that the foregoing is illustrative and not limiting, having been presented by way of example. In particular, although many of the examples presented herein involve specific combinations of method acts or system elements, those acts and those elements may be combined in other ways to accomplish the same objectives. Acts, elements, and features discussed in connection with one implementation are not intended to be excluded from a similar role in other implementations.
- The phraseology and terminology used herein is for the purpose of description and should not be regarded as limiting. The use of “including,” “comprising,” “having,” “containing,” “involving,” “characterized by,” “characterized in that,” and variations thereof herein, is meant to encompass the items listed thereafter, equivalents thereof, and additional items, as well as alternate implementations consisting of the items listed thereafter exclusively. In one implementation, the systems and methods described herein consist of one, each combination of more than one, or all of the described elements, acts, or components.
- Any references to implementations, elements, or acts of the systems and methods herein referred to in the singular may also embrace implementations including a plurality of these elements, and any references in plural to any implementation, element, or act herein may also embrace implementations including only a single element. References in the singular or plural form are not intended to limit the presently disclosed systems or methods, their components, acts, or elements to single or plural configurations. References to any act or element being based on any information, act, or element may include implementations where the act or element is based at least in part on any information, act, or element.
- Any implementation disclosed herein may be combined with any other implementation or embodiment, and references to “an implementation,” “some implementations,” “one implementation,” or the like are not necessarily mutually exclusive and are intended to indicate that a particular feature, structure, or characteristic described in connection with the implementation may be included in at least one implementation or embodiment. Such terms as used herein are not necessarily all referring to the same implementation. Any implementation may be combined with any other implementation, inclusively or exclusively, in any manner consistent with the aspects and implementations disclosed herein.
- References to “or” may be construed as inclusive so that any terms described using “or” may indicate any of a single, more than one, and all of the described terms. A reference to “at least one of ‘A’ and 13′” can include only ‘A’, only ‘B’, as well as both ‘A’ and ‘B’. Such references used in conjunction with “comprising” or other open terminology can include additional items.
- Where technical features in the drawings, detailed description, or any claim are followed by reference signs, the reference signs have been included to increase the intelligibility of the drawings, detailed description, and claims. Accordingly, neither the reference signs nor their absence have any limiting effect on the scope of any claim elements.
- The systems and methods described herein may be embodied in other specific forms without departing from the characteristics thereof. The foregoing implementations are illustrative rather than limiting of the described systems and methods. Scope of the systems and methods described herein is thus indicated by the appended claims, rather than the foregoing description, and changes that come within the meaning and range of equivalency of the claims are embraced therein.
Claims (21)
1.-20. (canceled)
21. A system to interface among multiple applications in a networked computer environment, comprising:
a navigation interface component executed on a data processing system having one or more processors to identify a plurality of point locations within a reference frame corresponding to a geographic region visible in a viewport of a navigation application executing on a first client device, each of the plurality of point locations having an identifier;
a natural language processor component executed on the data processing system to:
receive an input audio signal detected by a sensor of at least one of the first client device or a second client device;
parse the input audio signal to identify a request and a referential word; and
identify, responsive to the identification of the request, a subset of point locations from the plurality of point locations within the reference frame based on the referential word parsed from the input audio signal and the identifier for each point location of the subset; and
a direct action handler component executed on the data processing system to:
generate an action data structure using the subset of point locations identified responsive to the detection of the input audio signal; and
provide, to at least one of the first client device or the second client device, the action data structure to present information corresponding to at least one of the subset of point locations.
22. The system of claim 21 , comprising the direct action handler component to provide the action data structure to a digital assistant application executing at least one of the first client device or the second client device, receipt of the action data structure to cause the digital assistant application to present a digital component including the information to indicate the subset of point locations identified from the plurality of point locations.
23. The system of claim 21 , comprising the direct action handler component to:
provide the action data structure to the navigation application executing on the first client device, receipt of the action data structure to cause the navigation application to use the action data structure to generate a response including the information; and
provide, to a digital assistant application executing on at least one of the first client device or the second client device, the response generated by the navigation application to present a digital component including the information.
24. The system of claim 21 , comprising the navigation interface component to identify the first client device as having the navigation application and identify the second client device as lacking the navigation application; and
the direct action handler component to:
provide, responsive to the identification of the first client device as having the navigation application, the action data structure to the first client device, receipt of the action data structure to cause the navigation application to use the action data structure to initiate a navigation guidance process; and
provide, responsive to the identification of the second client device as lacking the navigation application, a second action data structure to present a digital component including the information.
25. The system of claim 21 , comprising the direct action handler component to provide the action data structure to the navigation application executing on the first client device, receipt of the action data structure to cause the navigation application to initiate a navigation guidance process using the subset of point locations and to present the information based on the navigation guidance process.
26. The system of claim 21 , comprising the natural language processor component to:
parse the input audio signal to identify an auxiliary word different from the referential word;
determine a subset area of the viewport of the navigation application based on the auxiliary word; and
select the subset of point locations from the plurality of point locations corresponding to the subset area of the viewport.
27. The system of claim 21 , comprising the natural language processor component to:
receive, subsequent to the receipt of the input audio signal, a second input audio signal detected by the sensor of at least one of the first client device or the second client device;
parse the second input audio signal to identify a second referential word; and
select the subset of point locations from the plurality of point locations based on the second referential word.
28. The system of claim 21 , comprising:
the navigation interface component to:
determine a first portion of the reference frame corresponding to the geographic region displayed concurrently to the receipt of the input audio signal; and
determine a second portion of the reference frame corresponding to the geographic region previously displayed in the viewport based on a measurement of the first client device acquired from an inertial motion unit; and
the natural language processor component to identify the subset of point locations from the plurality of point locations within the reference frame based on the measurement.
29. The system of claim 21 , comprising:
the navigation interface component to identify a plurality of search terms received by the navigation application within a time window prior to the receipt of the input audio signal; and
the natural language processor component to:
determine, for each point location of the plurality of point locations and each search term of the plurality of search terms, a semantic distance between the identifier of the point location and the search term using a semantic knowledge graph; and
select the subset of point locations from the plurality of point locations based on a plurality of semantic distances.
30. The system of claim 21 , comprising the
the natural language processor component to determine a request type corresponding to an operation of a plurality of operations to be performed by the navigation application based on the request; and
the direct action handler component to generate the action data structure including the request type and to transmit the action data structure to the first client device to cause the navigation application to initiate the operation of a navigation guidance process corresponding to the request type to present the information.
31. A method of interfacing among multiple applications in a networked computer environment, comprising:
identifying, by a data processing system, a plurality of point locations within a reference frame corresponding to a geographic region visible in a viewport of a navigation application executing on a first client device, each of the plurality of point locations having an identifier;
receiving, by the data processing system, an input audio signal detected by a sensor of at least one of the first client device or a second client device;
parsing, by the data processing system, the input audio signal to identify a request and a referential word;
identifying, by the data processing system, responsive to identifying the request, a subset of point locations from the plurality of point locations within the reference frame based on the referential word parsed from the input audio signal and the identifier for each point location of the subset;
generating, by the data processing system, an action data structure using the subset of point locations identified responsive to detecting of the input audio signal; and
providing, by the data processing system, to at least one of the first client device or the second client device, the action data structure to present information corresponding to at least one of the subset of point locations.
32. The method of claim 31 , comprising providing, by the data processing system, the action data structure to a digital assistant application executing at least one of the first client device or the second client device, receipt of the action data structure to cause the digital assistant application to present a digital component including the information to indicate the subset of point locations identified from the plurality of point locations.
33. The method of claim 31 , comprising
providing, by the data processing system, the action data structure to the navigation application executing on the first client device, receipt of the action data structure to cause the navigation application to use the action data structure to generate a response including the information; and
providing, by the data processing system, to a digital assistant application executing on at least one of the first client device or the second client device, the response generated by the navigation application to present a digital component including the information.
34. The method of claim 31 , comprising
identifying, by the data processing system, the first client device as having the navigation application and identify the second client device as lacking the navigation application;
providing, by the data processing system, responsive to identifying the first client device as having the navigation application, the action data structure to the first client device, receipt of the action data structure to cause the navigation application to use the action data structure to initiate a navigation guidance process; and
providing, by the data processing system, responsive identifying the second client device as lacking the navigation application, a second action data structure to present a digital component including the information.
35. The method of claim 31 , comprising providing, by the data processing system, the action data structure to the navigation application executing on the first client device, receipt of the action data structure to cause the navigation application to initiate a navigation guidance process using the subset of point locations and to present the information based on the navigation guidance process.
36. The method of claim 31 , comprising:
parsing, by the data processing system, the input audio signal to identify an auxiliary word different from the referential word;
determining, by the data processing system, a subset area of the viewport of the navigation application based on the auxiliary word; and
selecting, by the data processing system, the subset of point locations from the plurality of point locations corresponding to the subset area of the viewport.
37. The method of claim 31 , comprising:
receiving, by the data processing system, subsequent to receipt of the input audio signal, a second input audio signal detected by the sensor of at least one of the first client device or the second client device;
parsing, by the data processing system, the second input audio signal to identify a second referential word; and
selecting, by the data processing system, the subset of point locations from the plurality of point locations based on the second referential word.
38. The method of claim 31 , comprising:
determining, by the data processing system, a first portion of the reference frame corresponding to the geographic region displayed concurrently to the receipt of the input audio signal;
determining, by the data processing system, a second portion of the reference frame corresponding to the geographic region previously displayed in the viewport based on a measurement of the first client device acquired from an inertial motion unit; and
identifying, by the data processing system, the subset of point locations from the plurality of point locations within the reference frame based on the measurement.
39. The method of claim 31 , comprising:
identifying, by the data processing system, a plurality of search terms received by the navigation application within a time window prior to the receipt of the input audio signal;
determining, by the data processing system, for each point location of the plurality of point locations and each search term of the plurality of search terms, a semantic distance between the identifier of the point location and the search term using a semantic knowledge graph; and
selecting, by the data processing system, the subset of point locations from the plurality of point locations based on a plurality of semantic distances.
40. The method of claim 31 , comprising:
determining, by the data processing system, a request type corresponding to an operation of a plurality of operations to be performed by the navigation application based on the request; and
generating, by the data processing system, the action data structure including the request type and to transmit the action data structure to the first client device to cause the navigation application to initiate the operation of a navigation guidance process corresponding to the request type to present the information.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US16/865,096 US20200258508A1 (en) | 2018-06-26 | 2020-05-01 | Interfacing between digital assistant applications and navigation applications |
Applications Claiming Priority (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201862690049P | 2018-06-26 | 2018-06-26 | |
PCT/US2018/044756 WO2020005304A1 (en) | 2018-06-26 | 2018-08-01 | Interfacing between digital assistant applications and navigation applications |
US16/076,193 US20210199458A1 (en) | 2018-06-26 | 2018-08-01 | Interfacing between digital assistant applications and navigation applications |
US16/865,096 US20200258508A1 (en) | 2018-06-26 | 2020-05-01 | Interfacing between digital assistant applications and navigation applications |
Related Parent Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
PCT/US2018/044756 Continuation WO2020005304A1 (en) | 2018-06-26 | 2018-08-01 | Interfacing between digital assistant applications and navigation applications |
US16/076,193 Continuation US20210199458A1 (en) | 2018-06-26 | 2018-08-01 | Interfacing between digital assistant applications and navigation applications |
Publications (1)
Publication Number | Publication Date |
---|---|
US20200258508A1 true US20200258508A1 (en) | 2020-08-13 |
Family
ID=71946624
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US16/865,096 Abandoned US20200258508A1 (en) | 2018-06-26 | 2020-05-01 | Interfacing between digital assistant applications and navigation applications |
Country Status (1)
Country | Link |
---|---|
US (1) | US20200258508A1 (en) |
Cited By (34)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11240366B2 (en) * | 2020-02-03 | 2022-02-01 | Microsoft Technology Licensing, Llc | Digital assistant for emergency calling |
US20220059085A1 (en) * | 2020-08-18 | 2022-02-24 | Bank Of America Corporation | Multi-pipeline language processing platform |
US11321116B2 (en) | 2012-05-15 | 2022-05-03 | Apple Inc. | Systems and methods for integrating third party services with a digital assistant |
US20220180056A1 (en) * | 2020-12-09 | 2022-06-09 | Here Global B.V. | Method and apparatus for translation of a natural language query to a service execution language |
US11360577B2 (en) | 2018-06-01 | 2022-06-14 | Apple Inc. | Attention aware virtual assistant dismissal |
US11423908B2 (en) * | 2019-05-06 | 2022-08-23 | Apple Inc. | Interpreting spoken requests |
US11467802B2 (en) | 2017-05-11 | 2022-10-11 | Apple Inc. | Maintaining privacy of personal information |
US11487364B2 (en) | 2018-05-07 | 2022-11-01 | Apple Inc. | Raise to speak |
US11538469B2 (en) | 2017-05-12 | 2022-12-27 | Apple Inc. | Low-latency intelligent automated assistant |
US11550542B2 (en) | 2015-09-08 | 2023-01-10 | Apple Inc. | Zero latency digital assistant |
US11557310B2 (en) | 2013-02-07 | 2023-01-17 | Apple Inc. | Voice trigger for a digital assistant |
US11580990B2 (en) | 2017-05-12 | 2023-02-14 | Apple Inc. | User-specific acoustic models |
US11657820B2 (en) | 2016-06-10 | 2023-05-23 | Apple Inc. | Intelligent digital assistant in a multi-tasking environment |
US11671920B2 (en) | 2007-04-03 | 2023-06-06 | Apple Inc. | Method and system for operating a multifunction portable electronic device using voice-activation |
US11675491B2 (en) | 2019-05-06 | 2023-06-13 | Apple Inc. | User configurable task triggers |
US11696060B2 (en) | 2020-07-21 | 2023-07-04 | Apple Inc. | User identification using headphones |
US11699448B2 (en) | 2014-05-30 | 2023-07-11 | Apple Inc. | Intelligent assistant for home automation |
US11705130B2 (en) | 2019-05-06 | 2023-07-18 | Apple Inc. | Spoken notifications |
US11749275B2 (en) | 2016-06-11 | 2023-09-05 | Apple Inc. | Application integration with a digital assistant |
US11765209B2 (en) | 2020-05-11 | 2023-09-19 | Apple Inc. | Digital assistant hardware abstraction |
US11783815B2 (en) | 2019-03-18 | 2023-10-10 | Apple Inc. | Multimodality in digital assistant systems |
US20230326368A1 (en) * | 2022-04-07 | 2023-10-12 | Microsoft Technology Licensing, Llc | Location adjustment with non-visual location feedback |
US11790914B2 (en) | 2019-06-01 | 2023-10-17 | Apple Inc. | Methods and user interfaces for voice-based control of electronic devices |
US11809886B2 (en) | 2015-11-06 | 2023-11-07 | Apple Inc. | Intelligent automated assistant in a messaging environment |
US11810562B2 (en) | 2014-05-30 | 2023-11-07 | Apple Inc. | Reducing the need for manual start/end-pointing and trigger phrases |
US11838734B2 (en) | 2020-07-20 | 2023-12-05 | Apple Inc. | Multi-device audio adjustment coordination |
US11838579B2 (en) | 2014-06-30 | 2023-12-05 | Apple Inc. | Intelligent automated assistant for TV user interactions |
US11842734B2 (en) | 2015-03-08 | 2023-12-12 | Apple Inc. | Virtual assistant activation |
US11888791B2 (en) | 2019-05-21 | 2024-01-30 | Apple Inc. | Providing message response suggestions |
US11893992B2 (en) | 2018-09-28 | 2024-02-06 | Apple Inc. | Multi-modal inputs for voice commands |
US11900923B2 (en) | 2018-05-07 | 2024-02-13 | Apple Inc. | Intelligent automated assistant for delivering content from user experiences |
US11900936B2 (en) | 2008-10-02 | 2024-02-13 | Apple Inc. | Electronic devices with voice command and contextual data processing capabilities |
US11914848B2 (en) | 2020-05-11 | 2024-02-27 | Apple Inc. | Providing relevant data items based on context |
US11947873B2 (en) | 2015-06-29 | 2024-04-02 | Apple Inc. | Virtual assistant for media playback |
-
2020
- 2020-05-01 US US16/865,096 patent/US20200258508A1/en not_active Abandoned
Cited By (44)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11671920B2 (en) | 2007-04-03 | 2023-06-06 | Apple Inc. | Method and system for operating a multifunction portable electronic device using voice-activation |
US11979836B2 (en) | 2007-04-03 | 2024-05-07 | Apple Inc. | Method and system for operating a multi-function portable electronic device using voice-activation |
US11900936B2 (en) | 2008-10-02 | 2024-02-13 | Apple Inc. | Electronic devices with voice command and contextual data processing capabilities |
US11321116B2 (en) | 2012-05-15 | 2022-05-03 | Apple Inc. | Systems and methods for integrating third party services with a digital assistant |
US11862186B2 (en) | 2013-02-07 | 2024-01-02 | Apple Inc. | Voice trigger for a digital assistant |
US11557310B2 (en) | 2013-02-07 | 2023-01-17 | Apple Inc. | Voice trigger for a digital assistant |
US11699448B2 (en) | 2014-05-30 | 2023-07-11 | Apple Inc. | Intelligent assistant for home automation |
US11810562B2 (en) | 2014-05-30 | 2023-11-07 | Apple Inc. | Reducing the need for manual start/end-pointing and trigger phrases |
US11838579B2 (en) | 2014-06-30 | 2023-12-05 | Apple Inc. | Intelligent automated assistant for TV user interactions |
US11842734B2 (en) | 2015-03-08 | 2023-12-12 | Apple Inc. | Virtual assistant activation |
US11947873B2 (en) | 2015-06-29 | 2024-04-02 | Apple Inc. | Virtual assistant for media playback |
US11954405B2 (en) | 2015-09-08 | 2024-04-09 | Apple Inc. | Zero latency digital assistant |
US11550542B2 (en) | 2015-09-08 | 2023-01-10 | Apple Inc. | Zero latency digital assistant |
US11809886B2 (en) | 2015-11-06 | 2023-11-07 | Apple Inc. | Intelligent automated assistant in a messaging environment |
US11657820B2 (en) | 2016-06-10 | 2023-05-23 | Apple Inc. | Intelligent digital assistant in a multi-tasking environment |
US11749275B2 (en) | 2016-06-11 | 2023-09-05 | Apple Inc. | Application integration with a digital assistant |
US11467802B2 (en) | 2017-05-11 | 2022-10-11 | Apple Inc. | Maintaining privacy of personal information |
US11862151B2 (en) | 2017-05-12 | 2024-01-02 | Apple Inc. | Low-latency intelligent automated assistant |
US11837237B2 (en) | 2017-05-12 | 2023-12-05 | Apple Inc. | User-specific acoustic models |
US11538469B2 (en) | 2017-05-12 | 2022-12-27 | Apple Inc. | Low-latency intelligent automated assistant |
US11580990B2 (en) | 2017-05-12 | 2023-02-14 | Apple Inc. | User-specific acoustic models |
US11900923B2 (en) | 2018-05-07 | 2024-02-13 | Apple Inc. | Intelligent automated assistant for delivering content from user experiences |
US11907436B2 (en) | 2018-05-07 | 2024-02-20 | Apple Inc. | Raise to speak |
US11487364B2 (en) | 2018-05-07 | 2022-11-01 | Apple Inc. | Raise to speak |
US11360577B2 (en) | 2018-06-01 | 2022-06-14 | Apple Inc. | Attention aware virtual assistant dismissal |
US11630525B2 (en) | 2018-06-01 | 2023-04-18 | Apple Inc. | Attention aware virtual assistant dismissal |
US11893992B2 (en) | 2018-09-28 | 2024-02-06 | Apple Inc. | Multi-modal inputs for voice commands |
US11783815B2 (en) | 2019-03-18 | 2023-10-10 | Apple Inc. | Multimodality in digital assistant systems |
US11423908B2 (en) * | 2019-05-06 | 2022-08-23 | Apple Inc. | Interpreting spoken requests |
US11675491B2 (en) | 2019-05-06 | 2023-06-13 | Apple Inc. | User configurable task triggers |
US11705130B2 (en) | 2019-05-06 | 2023-07-18 | Apple Inc. | Spoken notifications |
US11888791B2 (en) | 2019-05-21 | 2024-01-30 | Apple Inc. | Providing message response suggestions |
US11790914B2 (en) | 2019-06-01 | 2023-10-17 | Apple Inc. | Methods and user interfaces for voice-based control of electronic devices |
US11240366B2 (en) * | 2020-02-03 | 2022-02-01 | Microsoft Technology Licensing, Llc | Digital assistant for emergency calling |
US11924254B2 (en) | 2020-05-11 | 2024-03-05 | Apple Inc. | Digital assistant hardware abstraction |
US11765209B2 (en) | 2020-05-11 | 2023-09-19 | Apple Inc. | Digital assistant hardware abstraction |
US11914848B2 (en) | 2020-05-11 | 2024-02-27 | Apple Inc. | Providing relevant data items based on context |
US11838734B2 (en) | 2020-07-20 | 2023-12-05 | Apple Inc. | Multi-device audio adjustment coordination |
US11750962B2 (en) | 2020-07-21 | 2023-09-05 | Apple Inc. | User identification using headphones |
US11696060B2 (en) | 2020-07-21 | 2023-07-04 | Apple Inc. | User identification using headphones |
US11551674B2 (en) * | 2020-08-18 | 2023-01-10 | Bank Of America Corporation | Multi-pipeline language processing platform |
US20220059085A1 (en) * | 2020-08-18 | 2022-02-24 | Bank Of America Corporation | Multi-pipeline language processing platform |
US20220180056A1 (en) * | 2020-12-09 | 2022-06-09 | Here Global B.V. | Method and apparatus for translation of a natural language query to a service execution language |
US20230326368A1 (en) * | 2022-04-07 | 2023-10-12 | Microsoft Technology Licensing, Llc | Location adjustment with non-visual location feedback |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US20200258508A1 (en) | Interfacing between digital assistant applications and navigation applications | |
EP3607274B1 (en) | Interfacing between digital assistant applications and navigation applications | |
US10380160B2 (en) | Dynamic language model | |
US11908459B2 (en) | Detection of potential exfiltration of audio data from digital assistant applications | |
JP2021501926A (en) | Graphical user interface rendering management with voice-driven computing infrastructure | |
US20240087560A1 (en) | Adaptive interface in a voice-activated network | |
US11514907B2 (en) | Activation of remote devices in a networked system | |
Hu et al. | DLRGeoTweet: A comprehensive social media geocoding corpus featuring fine-grained places |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STPP | Information on status: patent application and granting procedure in general |
Free format text: APPLICATION DISPATCHED FROM PREEXAM, NOT YET DOCKETED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: DOCKETED NEW CASE - READY FOR EXAMINATION |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: NON FINAL ACTION MAILED |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: RESPONSE TO NON-FINAL OFFICE ACTION ENTERED AND FORWARDED TO EXAMINER |
|
STPP | Information on status: patent application and granting procedure in general |
Free format text: FINAL REJECTION MAILED |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
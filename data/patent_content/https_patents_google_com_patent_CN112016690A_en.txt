CN112016690A - Constructing and programming quantum hardware for quantum annealing processes - Google Patents
Constructing and programming quantum hardware for quantum annealing processes Download PDFInfo
- Publication number
- CN112016690A CN112016690A CN202010705398.4A CN202010705398A CN112016690A CN 112016690 A CN112016690 A CN 112016690A CN 202010705398 A CN202010705398 A CN 202010705398A CN 112016690 A CN112016690 A CN 112016690A
- Authority
- CN
- China
- Prior art keywords
- superconducting
- control
- logical
- unit
- coupling
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N10/00—Quantum computing, i.e. information processing based on quantum-mechanical phenomena
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N10/00—Quantum computing, i.e. information processing based on quantum-mechanical phenomena
- G06N10/60—Quantum algorithms, e.g. based on quantum optimisation, quantum Fourier or Hadamard transforms
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F15/00—Digital computers in general; Data processing equipment in general
- G06F15/76—Architectures of general purpose stored program computers
- G06F15/82—Architectures of general purpose stored program computers data or demand driven
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F17/00—Digital computing or data processing equipment or methods, specially adapted for specific functions
- G06F17/10—Complex mathematical operations
- G06F17/11—Complex mathematical operations for solving equations, e.g. nonlinear equations, general mathematical optimization problems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N10/00—Quantum computing, i.e. information processing based on quantum-mechanical phenomena
- G06N10/20—Models of quantum computing, e.g. quantum circuits or universal quantum computers
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N7/00—Computing arrangements based on specific mathematical models
- G06N7/01—Probabilistic graphical models, e.g. probabilistic networks
-
- H—ELECTRICITY
- H10—SEMICONDUCTOR DEVICES; ELECTRIC SOLID-STATE DEVICES NOT OTHERWISE PROVIDED FOR
- H10N—ELECTRIC SOLID-STATE DEVICES NOT OTHERWISE PROVIDED FOR
- H10N60/00—Superconducting devices
- H10N60/10—Junction-based devices
- H10N60/12—Josephson-effect devices
-
- H—ELECTRICITY
- H10—SEMICONDUCTOR DEVICES; ELECTRIC SOLID-STATE DEVICES NOT OTHERWISE PROVIDED FOR
- H10N—ELECTRIC SOLID-STATE DEVICES NOT OTHERWISE PROVIDED FOR
- H10N60/00—Superconducting devices
- H10N60/10—Junction-based devices
- H10N60/128—Junction-based devices having three or more electrodes, e.g. transistor-like structures
-
- H—ELECTRICITY
- H10—SEMICONDUCTOR DEVICES; ELECTRIC SOLID-STATE DEVICES NOT OTHERWISE PROVIDED FOR
- H10N—ELECTRIC SOLID-STATE DEVICES NOT OTHERWISE PROVIDED FOR
- H10N60/00—Superconducting devices
- H10N60/80—Constructional details
- H10N60/805—Constructional details for Josephson-effect devices
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N10/00—Quantum computing, i.e. information processing based on quantum-mechanical phenomena
- G06N10/40—Physical realisations or architectures of quantum processors or components for manipulating qubits, e.g. qubit coupling or qubit control
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06N—COMPUTING ARRANGEMENTS BASED ON SPECIFIC COMPUTATIONAL MODELS
- G06N20/00—Machine learning
Abstract
The invention relates to constructing and programming quantum hardware for quantum annealing processes. Methods, systems, and apparatus, including computer programs encoded on computer storage media, for constructing and programming quantum hardware for quantum annealing processes.
Description
Description of the cases
The application belongs to divisional application of Chinese invention patent application No.201480074978.0 with application date of 2014, 12 and 31.
Cross Reference to Related Applications
Priority of U.S. patent application serial No. 61/985,348 filed 4/28/2014 and U.S. patent application serial No. 61/924,207 filed 1/6/2014, to which this application claims priority based on 35USC § 119(e), the entire contents of which are incorporated herein by reference.
Background
This specification relates to the construction and programming of quantum hardware for quantum annealing processes.
Disclosure of Invention
Artificial intelligence tasks can be translated into machine learning optimization problems. To perform artificial intelligence tasks, quantum hardware, such as quantum processors, are constructed and programmed to encode a solution to a corresponding machine optimization problem as a spectrum of multi-volume quantum hamiltonian quantities characterizing the quantum hardware. For example, the solution is encoded in the ground state of the Hamiltonian. The quantum hardware performs adiabatic quantum computations starting from a known ground state of known initial hamiltonian. Over time, as the known initial hamiltonian evolves into a hamiltonian that is used to solve the problem, the known ground state evolves and remains at the instantaneous ground state of the evolving hamiltonian. Obtaining an energy spectrum of a ground state of the Hamiltonian at the end of the evolution without diagonalizing the Hamiltonian.
Quantum adiabatic calculations sometimes become non-adiabatic due to excitation caused by thermal fluctuations, for example. Instead of remaining in the transient ground state, the evolving quantum state, which initially starts at the ground state of the initial hamiltonian, can reach the excited state of the evolving hamiltonian. The quantum hardware is constructed and programmed to suppress such excitation from the transient ground state to a higher energy state during an early stage of the computation. In addition, the quantum hardware is also constructed and programmed to facilitate relaxation from a higher energy state to a lower energy state or ground state at a later stage of the computation. Robustness in finding the ground state of the hamiltonian for solving the problem is improved.
The details of one or more embodiments of the subject matter of this specification are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the present subject matter will become apparent from the description, the drawings, and the claims.
Drawings
Fig. 1 is a schematic perspective view of an interacting qubit in a quantum processor.
Fig. 2 is a schematic diagram showing the structure and interaction of two qubits in a quantum processor.
Fig. 3 is a schematic diagram illustrating the effect of a quantum conditioner on a quantum annealing process.
FIG. 4 is a schematic diagram illustrating the interplay of an initial Hamiltonian amount, a problem Hamiltonian amount, and a Hamiltonian amount of a quantum conditioner selected for the problem Hamiltonian amount during a quantum annealing process.
FIG. 5 is a flow chart of an example process for determining a profile of a quantum conditioner.
FIG. 6 is a flow diagram of an example process for performing artificial intelligence tasks.
Detailed Description
SUMMARY
Solutions to difficult combinatorial problems, such as NP challenges and machine learning problems, can be encoded in the ground state of multi-body quantum hamiltonian systems, which are also known as quantum annealers or "QAs". QA of the system can sometimes be obtained by adiabatic quantum computation, where QA is initialized to the ground state of an initial hamiltonian H, which is known and easily prepared. Over time, QA is directed adiabatically to the problem Hamiltonian H that encodes the problemp. Theoretically, QA can be kept at H during adiabatic quantum computationiEvolves to HpHamiltonian H oftotalIn the instantaneous ground state of (2), wherein HtotalCan be expressed as:
Htotal＝(1-s)Hi+sHp，
where s is a time-dependent control parameter:
s＝t/tT，
and tTThe total time calculated for the adiabatic quanta. If the evolution of the system is slow enough relative to the intrinsic energy range of the system, QA will deterministically arrive at the problem Hamiltonian HpThe ground state of (2).
In fact, quantum computation may not be completely adiabatic and QA may reach H during the computation processtotalCan lead to inaccurate results at the end of quantum computation. For example, in many hardware combinatorial optimization problems, such as decision-making problems, when the problem Hamiltonian demonstrates phase transitions at its computational complexity, H is relative to the intrinsic energy range of the systemtotalCan be small, e.g., in the order of an exponential. In this context, QA may undergo quantum phase transition and be able to reach a large number of excited states, for example, of exponential order. In addition, QA may also be derived from H due to other factors such as quantum fluctuations caused by environmental interactions with the system and systematic defect errors including control errors and manufacturing errorstotalIs deviated from the ground state. In this specification, pushing QA from HiTo the ground state ofpIs referred to as QA scheduling (schedule) or quantum annealing process.
Quantum hardware, such as quantum processors, of the present specification includes quantum chips, except for HiAnd HpIn addition, the quantum chip defines a quantum regulator ("QG") such that the evolving hamiltonian H is evolvingtotalIs changed into Htot：
Htot＝I(t)Hi+G(t)HG+P(t)Hp+HAG-B，
Wherein I (t) and P (t) respectively represent initial Hamiltonian HiAnd problem Hamilton quantity HpTime dependence of (d); g (t) represents Hamiltonian H related to QGGTime dependence of (d); and HAG-BIs the interaction of the combined QA-QG system with its surroundings, commonly referred to as a bath (bath). In general, it can be assumed that HAG-BNon-zero but constant and well characterized. In some embodiments:
Htot＝(1-t)Hi+t(1-t)HG+tHp+HAG-B
in general, QG can be considered a non-information bearing degree of freedom that can be designed to manipulate the dissipative dynamics of the information bearing degree of freedom. At HtotalIn the example of (a), the information bearing degree of freedom is QA. In particular, QG can be defined as an auxiliary subsystem with an independent tensor product structure. QG can be represented by HGTo characterize, HGBoth the interaction between the characterizing information-bearing degrees of freedom and the QG and the free hamiltonian of the QG. The QG can interact in a non-perturbing manner consistent with QA. This interaction can also demonstrate a strong non-markov (non-Markovian) effect.
The quantum hardware is constructed and programmed to allow the QG to guide the quantum evolution of disordered quantum annealing hardware at limited temperatures in a robust manner and improve the adiabatic quantum computation process. For example, QG can facilitate phase shifting QA vectors while allowing QG to be shifted from H by effectively making it difficult for QA to reach an excited statetotalDecoupled from the excited state. After the quantum phase transition, QA enters another phase where it is likely to be frozen in the excited state due to quantum localization. The QG can adjust the energy level of QA to be coordinated with the vibrational energy of the environment to facilitate relaxation of QA to a lower energy state or ground state. Such adjustments can increase ground state fidelity, i.e., the fidelity with which QA is in the ground state at the end of the computation, and allow QA to avoid prematurely freezing at a sub-optimal solution due to quantum localization.
In general, QA undergoes four phases during the quantum annealing process of the present specification, including initiation, excitation, relaxation, and freezing, which will be explained in detail below. QG is able to create the mean phonon energy and H of the bathtotThe mismatch between the average energy level intervals of (a) to assist QA under the first two phases to suppress QA excitation. In the third and fourth stages, QG can enhance thermal fluctuations by creating an overlap between the spectral densities of the system and the bath. Enhanced thermal fluctuations can allow QA to have secondary HtotTo a lower energy state or ground state. In particular, QA due to Quantum localizationCan be frozen in the non-ground state. QG can allow QA to thaw from a non-ground state.
QG can be used to achieve generic adiabatic quantum computation when quantum interactions are limited due to natural or design constraints of the quantum hardware. For example, a quantum chip can have design constraints such that the hamiltonian representing the interaction of qubits on the quantum chip becomes a k-local random hamiltonian. In some embodiments, the quantum hardware can be constructed and programmed to manipulate environmental interactions and disordered structural and kinetic effects, even without any control over the degrees of freedom of the environment.
Generally, QG is problem dependent. The quantum hardware of the present description can be programmed to provide different QGs for different problem hamiltonian quantities. In some embodiments, quantum control strategies developed based on mean field and microscopic methods can be used to address a given HpThe QG is determined. Additionally or alternatively, the quantum control strategy can also implement stochastic matrix theory and machine learning techniques to determine QG. The combined QA and QG can be adjusted and trained to generate a signal for HpSuch as a poisson distribution, a lewy distribution, or a boltzmann distribution.
Example Quantum hardware
As shown in fig. 1, in a quantum processor, a programmable quantum chip 100 includes 4 by 4 unit cells 102 of eight qubits 104 connected by a programmable inductive coupler as shown by the lines connecting the different qubits. Each line may represent one or more couplers between a pair of qubits. The chip 100 can also include a greater number of unit cells 102, such as 8 by 8 or more.
Within each unit cell 102, such as within a qubit number q encircled in dashed lines and including a qubit number1To q8One or more of the eight qubits 104, e.g., labeled q1、q2、q5、q6Are logical qubits for use in calculations performed by the quantum processor. Other qubits 104-e.g., labeled q3、q4、q7、q8The other four qubits of (a) are control qubits to be programmed to perform the functions of the QG of the present description. The control qubit does not participate in the computation that the logical qubit is configured to perform. In some embodiments, in each unit cell 102, half of the qubits are used as control qubits and the other half of the qubits are used as logic qubits. The size of the chip 100 implementing the QG may be scalable by increasing the number of unit cells.
In some embodiments, the logic qubit and the control qubit have the same construction. In other embodiments, the control qubit has a simpler or less elaborate construction than the logic qubit. Fig. 2 shows an example pair of coupled qubits 200, 202 in the same unit cell of a chip. For example, qubits 200, 202 can be associated with qubits q, for example1、q5Corresponds to two logical qubits, e.g. q3、q7Corresponds to two control qubits, or is for example a qubit q1And a logical qubit such as q7The control qubits of (a) correspond. In this example, each qubit is a superconducting qubit and includes two Josephson (Josephson) boxes 204a, 204b or 208a, 208b connected in parallel. Each josephson cell can include a josephson junction 206 connected in parallel with a capacitor 207. Qubits 200, 202 are subjected to e along a plane perpendicular to the paper showing the figure3External magnetic field B applied in the direction of signinductive coupler bank 210 is connected between the qubits 200, 202 such that the qubit is along edge e3-e3The directions are coupled.
In some embodiments, two josephson boxes connected in parallel are used to construct both the logic qubit and the control qubit. However, logical qubits can be constructed with higher precision than control qubits. Thus, a control qubit constructed with less precision can perform the functions of the QG at reduced cost. In other embodiments, though used asTwo josephson boxes connected in parallel as shown in fig. 2 construct a logic qubit, but structures other than josephson boxes, such as quantum resonators, can be used to construct a control qubit. In the chip 100 of fig. 1, the control qubits in each unit cell interact with each other and with the logic qubits. These interactions act as QGs to assist QA characterized by logical qubits to reach H at the end of the quantum annealing processpThe ground state of (2).
As an example, the Hamiltonian of QA can be written as:
wherein σi xAnd σi zAre Pauli (Pauli) operators and each represents the spin of the ith qubit in the x-direction or z-direction, respectively. h isiAnd JijAre parameters that can be programmed for different problems that are addressed by adjusting the coupling provided by the inductive coupler bank 210. h isiAnd JijHas a real value. N is the total number of logical qubits used in the computation. Parameter JijIs constrained by the hardware connectivity, i.e., by the connectivity of the qubits shown in fig. 1. For unconnected qubits, corresponding JijIs 0. Again, i (t) and p (t) represent the time dependencies of the initial and problem hamiltonian quantities, respectively. In a simplified example, I (t) equals (1-s), and P (t) equals s, where s equals t/tT。
The additional M control qubits introduce an additional quantum control mechanism into chip 100, where M can be the same as or different from N. The control mechanism defines HSGOr HtotalThe QA interacting auxiliary subsystems of (a). The auxiliary subsystem includes a tensor product structure and is capable of Hamiltonian H by interacting with QG-QASGThe intrinsic hamiltonian of the interchanged QG. The auxiliary subsystem can be controlled by a global time-varying control knob g (t) and possibly by a set of macroscopically programmable environmental control parameters. At one endIn some embodiments, the control button is s (1-s), where s is t/tT(ii) a And the programmable environmental control parameter is the temperature T.
Thus, the Hamiltonian H for the combined QA-QG system in chip 100totComprises the following steps:
Htot＝I(t)Hi+G(t)HG+P(t)Hp
where I (t), G (t), and P (t) describe the general temporal dependence of the global control parameters. In the Hami metric, the initial Hamiltonian is:
problem Hamilton quantity HpComprises the following steps:
and QG Hamilton amount HGComprises the following steps:
HG＝HGF+HGA
wherein HGFIs the free Hamiltonian of QG, and HGAIs the Hamiltonian of the interaction of QG with QA. Note that NGAnd NAThe total number of QG qubits and QA qubits, respectively. As one example, the total hamiltonian can have the following explicit global time dependencies:
Htot＝(1-t/tT)Hi-t/tT(1-t/tT)HG+(t/tT)Hp
programming quantum hardware
Hamiltonian H for a given problem and its corresponding problempIn other words, QG is determined to improve the ground state fidelity of QA without the need for HpAnd (4) diagonalizing. Various implementations of QG can be repeated to improve knowledge about the results of the calculations.
In some embodiments, QG is determined such that the sum of H and thetotalQG Hamiltonian H before the characterized system undergoes a quantum phase changeQGThe excitation of QA is suppressed. In particular, the QG is not resonant with the average phonon energy of the bath, which creates a mismatch between the average phonon energy and the average energy level separation of the combined QA and QG, or reduces the H of the undesired excitationstot. QG Hamiltonian H after quantum phase transition of the systemQGEnhancement from HtotRelaxation of any excited states of QA to the ground state. In particular, HtotIs resonant with the average phonon energy. QG enhances thermal fluctuations by creating overlap between the spectral density of the system and its bath. The thermal fluctuation can promote QA to reach H at a high relaxation ratetotAnd prevents QA from being frozen prematurely in the excited state due to quantum localization.
An example of a desired QG function is shown in fig. 3. HtotalEnergy level E of0、E1、E2、…、Ei(not shown) is plotted as a function of time t. At t ═ 0, HtotalIs Hi(ii) a And at t ═ tTA is prepared fromtotalIs Hp. From t to 0 to tTQA experiences substantially: from t-0 to t-t1From t to t1To t ═ t2From t to t2To t ═ t3And from t to t3To t ═ tTThe frozen phase of (1). Time t2Can be reacted with HtotalThe time when the quantum phase change occurs in the characterized system corresponds. During the excitation phase, QG increases the energy separation Δ between adjacent energy levels, as indicated by arrows 300, 302iSuch as delta1＝E2-E1And Δ0＝E1-E0So thatThe increased energy separation is much larger than the average phonon energy. During the relaxation phase, QG is separated from energy by Δ as indicated by arrows 304, 306, 308, 3100、Δ1… are adjusted to be comparable to the average phonon energy to facilitate relaxation of QA from the excited state to a lower energy or ground state.
Three Hamiltonian quantities H over time in different phases of a quantum annealing process are schematically shown in FIG. 4i、HpAnd HQGThe mutual influence of (c). The control parameters i (t), p (t), and g (t) control the shape of the corresponding plot of hamiltonian quantities. In this example, i (t) and p (t) are linear and parabolic.
Further, QG can be selected to allow HtotStably evolve on QA schedule and reach to have HpThe maximum overlap of the ground states. Ideally, at time tTThe ground state fidelity of QA is 1. However, fidelity of one is difficult to achieve within a limited period of time. Except at time 0 and time tT，HtotQA of in a combined Hp、HiAnd HQGIn a mixed state of (a). The evolution of QA can be expressed as:
whereintime 0,
wherein f isG(k) Is a probability mass function, k is 0,1, and corresponds to a quantum state hierarchy, and is ΣkfG(k) 1. If the ground state fidelity is 1, then fG(0) 1, and fG(k ≠ 0) ═ 0. As described above, such a one fidelity is difficult to achieve. Alternatively, the desired QG can be selected to provide an exponential distribution function:
wherein λGDefine and apply to with HpDistribution of the QG families used together. The probability mass function can be any probability distribution function. Examples include a poisson distribution function, a lewy distribution function, and a boltzmann distribution function.
To determine the QG having the desired function for the problem, including those described above with reference to fig. 3 and 4, one or more techniques can be used, including, for example, open quantum system models, random matrix theory, quantum Monte larlo (Monte Carlo), and machine learning. Fig. 5 shows an example process 500 for determining QG, which can be performed by a classical processor, such as a classical computer, or a quantum processor, or a combination thereof.
In process 500, regarding HtotalIs typically unknown (502). Therefore, finding a globally optimal QG is at least as difficult as solving the problem hamiltonian itself. However, the application of QG in this context is highly robust to changes in its microscopic degrees of freedom. In some embodiments, the method is to introduce a mean field description of the QG, such as a stochastic matrix theory model that relies on a few effective control parameters. The macroscopic degrees of freedom of the QG can then be pre-trained and trained using a mix of unsupervised and supervised classical machine learning algorithms. For generating for learning stepsWith sufficient training data, the most advanced classical (metaheuristic) solvers, which may include classical solvers such as path integral monte carlo, diffusion monte carlo, spin vector monte carlo, Markov (Markov) chain monte carlo, simulated annealing, tabu search, large-scale neighborhood search, and cluster update, may be used to sample energy feature function attributes of the problem hamiltonian quantities. Training data can also be generated by previous generations of quantum processors, including quantum annealers and gate-model quantum computers, if available. The time to set for the phase change to occur can be selected to be about t ═ tT2, and can be further refined during the learning procedure to enhance the fidelity of the spectral properties of QA using boltzmann distributions of problem hamiltonian quantities that have been sampled by the selected classical solver.
For a given problem hamiltonian in the training data, some useful information about the energy spectrum of the total hamiltonian can be estimated, including: approximate energy level EiInterval of energy levels ΔiDistribution of energy level intervals, and average energy level interval
whereini(t) is HtotalAnd N is the total number of eigenstates.
Also in process 500, the measured quantity H can be calculated or experimentally measuredtotalThe average phonon energy of the bath in which the characterized system is located (504). Approximately, the average phonon energy can take kT, where k is the Boltzmann constant and T is the temperature. The average phonon energy can also be calculated in a more accurate manner. For example, an open quantum system model of the dynamics, such as the lindlab format, can be selected for the calculation. The selection being madeCan be based on calibration data of a quantum processor or quantum tomography. Under the open quantum system model, the temperature at any given temperature T is determined by HtotalThe average phonon energy of the bath in which the characterized system is located can be defined as:
wherein J (ω) can be: omhic spectral Density, i.e.
A probability mass function of the ground state fidelity of QA is selected (506). Based on the obtained information, the training data, the calculated average phonon energies, and the selected probability mass function, then the process 500 determines (508) HpThe QG distribution of (1). For example, the QG distribution can be represented by an exponential family such as Gaussian unitary ensemble (Gaussian unitary ensemble) of a random matrix selected using a random matrix theory model. Determining average energy level spacing
wherein
the selection allows HtotalSimilar to thermal fluctuations. QA can relax to a lower energy state or ground state at a higher rate. The selected family of exponents can be parameterized with respect to controllable parameters of the quantum hardware, such as coupling between qubits.
In some embodiments, a deep neural network is used to represent the QG-QA system or by HtotThe system characterized, and the stochastic gradient descent is used to train the QG distribution. As an example, for a given H of interesttotalThe training is done by selecting a statistically significant number of random matrices, e.g., 1000, from a parameterized index family that is capable of generating path integral monte-rallo outputs on average. In some embodiments, the training may be from energy level intervals based on the desired average combination discussed above
FIG. 6 illustrates an example process 600 in which a control system programs QA hardware, such as a quantum processor, for the QA hardware to perform artificial intelligence tasks. The control system includes one or more classical computers, i.e., non-quantum computers, and also includes quantum computers. The task is translated into a machine learning optimization problem, which is represented in machine-readable form.
The control system receives (602) a machine-readable machine learning optimization problem. The control system encodes (606) the optimization problem as a designed HtotalThe energy spectrum of (1). The encoding is based on the structure of the QA hardware, such as the coupling between qubits. HtotalAn example of (d) is the Yixin (Ising) Hamiltonian HSGAnd the encoding determines the parameter HiAnd JijThe value of (c). Such as HiAnd JijIs provided to the QA hardware, which receives (620) the information as initialization parameters for the hardware. To stabilize QA during the quantum annealing process to be performed by the QA hardware, the control system further configures (608) the QG, for example, by selecting one from the QG profiles determined using the processor 500 of fig. 5. The QG is composed ofi G、Jij G、Jij GAIs sent to the QA hardware to program the QA hardware.
The QA hardware receives (620) an initialization parameter, such as hiAnd JijAnd also receives (622) control parameters for the QG, such as hi G、Jij G、Jij GAAnd programmed and initialized by the control system according to the received initialization parameters and the proposed settings for the QG parameters. QA hardware implements (624) quantum annealing scheduling to obtain a quantum annealing result from HtotEigenstates of the combined QA-QG system characterized. The solution of the machine learning optimization problem is encoded in these eigenstates. After a predetermined amount of time, the QA schedule ends and the QA hardware provides (626) an output represented by the eigenstates and their corresponding energy spectra. The output can be read by the control system or by another classical or quantum computer. The predetermined amount of time can be approximately
As noted above, in the output provided by QA hardware, the ground state fidelity of QA is typically less than 1. When the fidelity is less than 1, the single output provided by the QA hardware may not accurately encode the solution to the problem. In some embodiments, the QA hardware performs the QA schedule multiple times to provide multiple outputs using the same QG or different QGs provided by the control system having, for example, h, the same QG or different QGs selected from the same QG profile determined for the problemi G、Jij G、Jij GADifferent sets of control parameters. The plurality of outputs can be statistically analyzed and the problem can be solved or the artificial intelligence task can be performed based on the statistical result.
Specifically, in process 600, after the control system receives and stores (610) the output provided by the QA hardware, the control system determines (612) whether the QA hardware has completed a predetermined number of iterations of the QA schedule. If not, the control system returns to step 608 by configuring another QG, which can be the same as the previously used QG or can be a different QG selected from the previously determined QG distribution. The QA hardware receives (622) another set of control parameters for the QG and is reprogrammed by the control system based on the previously determined initialization parameters and the set of control parameters encoding the problem. The QA schedule is again implemented (624) and another output is provided (626). If the QA hardware has completed a predetermined number of iterations of the QA schedule, the control system or another data processing system statistically processes (614) all of the outputs to provide a solution to the problem. The predetermined number of iterations can be 100 iterations or more, or 1000 iterations or more. In some embodiments, the number of iterations can be selected in conjunction with the length of the QA schedule, such that the process 600 can be performed with high efficiency and provide a solution to the problem with high accuracy. For example, when the length of each QA schedule is relatively short, e.g., greater than
The electronic embodiments described in this specification, i.e., the non-quantum embodiments, the subject matter, and the digital functional operations, including the structures disclosed in this specification and their structural equivalents, can be implemented as follows: digital electronic circuitry, tangibly embodied computer software or firmware, computer hardware, or a combination of one or more of them. Embodiments of the digital subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on a tangible, non-transitory storage medium for execution by, or to control the operation of, a digital processing apparatus. The computer storage medium can be a machine-readable storage device, a machine-readable storage substrate, a random or serial access memory device, or a combination of one or more of them. Alternatively or in addition, the program instructions can be encoded on an artificially generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
The term "data processing apparatus" refers to digital data processing hardware and encompasses all types of apparatus, devices, and machines for processing data, including by way of example a programmable digital processor, a digital computer, or multiple digital processors or computers. The apparatus can also be or further comprise special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). The apparatus can optionally include, in addition to hardware, code that creates an execution environment for the computer program, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.
A computer program can also be called or described as a program, software, a software application, a module, a software module, a script, or code and can be written in any form of programming language, including compiled or interpreted languages, or declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a digital computing environment. The computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a data communication network.
The processes and logic flows described in this specification can be performed by one or more programmable digital computers operating one or more quantum processors as appropriate, executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA or an ASIC. For a system of one or more digital computers, "configured to" perform a particular operation or action means: the system has installed thereon software, firmware, hardware, or a combination thereof that operates to cause the system to perform operations or actions. For one or more computer programs, configured to perform a particular operation or action means: the one or more programs include instructions that, when executed by the digital data processing apparatus, cause the apparatus to perform the operations or acts.
Digital computers suitable for executing computer programs can be based on general purpose microprocessors or special purpose microprocessors or both, or any other kind of central processing unit. Typically, the central processing unit will receive instructions and data from a read-only memory or a random access memory or both. The basic elements of the computer are: a central processing unit for implementing or executing instructions, and one or more memory devices for storing instructions and data. The central processing unit and the memory can be supplemented by, or incorporated in, special purpose logic circuitry. Generally, a digital computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such a device.
Computer readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media, and memory devices, including by way of example: semiconductor memory devices such as EPROM, EEPROM, and flash memory devices; magnetic disks, such as internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
The control of the various systems, or portions thereof, described in this specification can be implemented in a computer program product including instructions stored on one or more non-transitory machine-readable storage media and executable on one or more digital processing devices. The systems described in this specification, or portions thereof, can each be implemented as an apparatus, method, or electronic system that may include one or more digital processing devices and memory storing executable instructions to perform the operations described in this specification.
While this specification contains many specific implementation details, these should not be construed as limitations on the scope of what may be claimed, but rather as descriptions of features specific to particular embodiments. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Furthermore, although features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In some cases, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.
Specific embodiments of the present subject matter have been described. Other embodiments are within the scope of the following claims. For example, the actions recited in the claims can be performed in a different order and still achieve desirable results. As one example, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In some cases, multitasking and parallel processing may be advantageous.
Claims (33)
1. An apparatus, comprising:
a first pair of logical superconducting elements for computation;
a first pair of control superconducting elements for aiding in the computation;
a first coupler between the first logical superconducting unit and the second logical superconducting unit;
a second coupler between the first control superconducting unit and the second control superconducting unit;
a third coupler between the first logical superconducting unit and the second control superconducting unit; and
a fourth coupler between the second logical superconducting unit and the first control superconducting unit.
2. The apparatus of claim 1, wherein each logical superconducting element is configured with a capability to span the Pally operator σsj iWherein i ═ x, y, or z.
3. The apparatus of claim 1, wherein each control superconducting unit is configured with a structure capable of spanning the Paglie operator σck iWherein i ═ x, y, or z.
4. The apparatus of claim 1, wherein the first coupler has a magnetic field of σ -degree when the magnetic field is applied in the z-directions1 zσs2 zFirst coupling of representations to convert a quantum operator σ of the first logical superconducting units1 zQuantum operator sigma with the second logical superconducting elements2 zAnd (4) coupling.
5. The apparatus of claim 1, wherein the second coupler has a magnetic field of σ -degree when the magnetic field is applied in the z-directionc1 zσc2 zSecond coupling of representations to control the quantum operator σ of the first superconducting elementc1 zQuantum operator sigma with said second control superconducting elementc2 zAnd (4) coupling.
6. The apparatus of claim 1, wherein the third coupler is configured to couple the magnetic field by σ when the magnetic field is applied in the z-directions1 xσc2 zThird coupling of representations to convert the quantum operator σ of the first superconducting units1 zQuantum operator sigma with the second superconducting elementc2 zAnd (4) coupling.
7. The apparatus of claim 1, wherein the fourth coupler is configured to couple the magnetic field by σ when the magnetic field is applied in a z-directions2 xσc1 zFourth coupling of representations to the quantum operator σ of the first superconducting elements2 zQuantum operator sigma with the second superconducting elementc1 zAnd (4) coupling.
8. The apparatus of claim 1, wherein the first and second logical superconducting units and the first and second control superconducting units comprise superconducting qubits having binary quantum states.
9. The apparatus of claim 8, wherein each superconducting qubit is constructed using josephson junctions and capacitors connected in parallel.
10. The apparatus of claim 9, wherein the logical superconducting unit is constructed to have the same precision as the control superconducting unit.
11. The apparatus of claim 9, wherein the control superconducting unit is constructed to have a lower precision than the logical superconducting unit.
12. The apparatus of claim 8, wherein the superconducting qubits of logical superconducting units are constructed with josephson junctions and capacitors connected in parallel, and wherein the superconducting qubits of control superconducting units are constructed with multijunction josephson boxes, inductors, and capacitors connected in parallel and/or series to construct a desired N-level controllable control system.
13. The apparatus of claim 1, wherein the first coupler, the second coupler, and the third coupler comprise inductive couplers.
14. The apparatus of claim 1, comprising a plurality of pairs of logical superconducting units and a plurality of pairs of controlling superconducting units, each pair of logical superconducting units comprising the first logical superconducting unit and the second logical superconducting unit coupled by the first coupler, and different pairs of logical superconducting units coupled by additional couplers, each pair of controlling superconducting units comprising the first controlling superconducting unit and the second controlling superconducting unit coupled by the second coupler, and different pairs of controlling superconducting units coupled by additional couplers, and each pair of logical superconducting units coupled with all pairs of controlling superconducting units by a coupler comprising the third coupler.
15. The apparatus of claim 14, wherein the superconducting element and the coupler are configured such that a quantum hamiltonian characterizing the superconducting element and the coupler is:
wherein i represents the i-th pair of superconducting elements, hiAnd JijHas real values associated with the strength of coupling between the first superconducting element and the second superconducting element, I (t), G (t), and P (t) being time-dependent control parameters.
16. A method, comprising:
configuring a first pair of logical superconducting elements for computation such that each logical superconducting element has a length that can span the Pally operator σsj iWherein i ═ x, y, or z;
a first pair of controlled superconductors configured to facilitate computation without being an arithmetic unitElements such that each control superconducting element has a cross-over Pally operator sigmack iWherein i ═ x, y, or z;
coupling the first logical superconducting element and the second logical superconducting element by applying a magnetic field in a z-direction;
coupling the first control superconducting element and the second control superconducting element by applying a magnetic field in the z-direction;
coupling the first logical superconducting unit and the second control superconducting unit by applying a magnetic field in a z-direction; and
coupling the second logical superconducting unit with the first control superconducting unit by applying a magnetic field in a z-direction.
17. The method of claim 16, wherein:
when a magnetic field is applied to the first logical superconducting unit and the second logical superconducting unit, the magnetic field is controlled to be defined by sigmas1 zσs2 zFirst coupling of representations to convert a quantum operator σ of the first logical superconducting units1 zQuantum operator sigma with the second logical superconducting elements2 zCoupling;
when a magnetic field is applied to the first control superconducting unit and the second control superconducting unit, the magnetic field is controlled to be controlled by sigmac1 zσc2 zSecond coupling of representations to control the quantum operator σ of the first superconducting elementc1 zQuantum operator sigma with said second control superconducting elementc2 zCoupling;
when a magnetic field is applied to the first logic superconducting unit and the second control superconducting unit, the magnetic field is controlled to be controlled by sigmas1 xσc2 zThird coupling of representations to convert the quantum operator σ of the first logical superconducting units1 zQuantum operator sigma with said second control superconducting elementc2 zCoupling; and
when a magnetic field is applied to the second logic superconducting unit and the first control superconducting unitσs2 xσc1 zFourth coupling of representations to control the quantum operator σ of the first superconducting elements2 zQuantum operator sigma with the second logical superconducting elementc1 zAnd (4) coupling.
18. The method of claim 16, wherein the logical superconducting unit and the control superconducting unit comprise superconducting qubits having binary quantum states.
19. The method of claim 16, wherein the logical superconducting element has the same precision as the control superconducting element.
20. The method of claim 16, wherein the controlling superconducting element has a lower precision than the logical superconducting element.
21. The method of claim 16, wherein the superconducting element and the coupling are configured such that a quantum hamiltonian characterizing the superconducting element and the coupling is:
wherein i represents the i-th pair of superconducting elements, hiAnd JijHas real values associated with the strength of coupling between the first superconducting element and the second superconducting element, I (t), G (t), and P (t) being time-dependent control parameters.
22. A method, comprising:
configuring a first logical superconducting element and a second logical superconducting element forming a first pair of logical superconducting elements for computation such that each logical superconducting element has a length that can span the Pauli operator σsj iWherein i ═ x, y, or z;
the arrangement forms a first counter control for assisting the calculation without being an arithmetic unitA first control superconducting unit and a second control superconducting unit for forming the superconducting units, such that each control superconducting unit has a control unit capable of crossing the Pally operator σck iWherein i ═ x, y, or z;
coupling the first logical superconducting unit and the second control superconducting unit by applying a magnetic field in a z-direction; and
coupling the second logical superconducting unit and the first control superconducting unit by applying a magnetic field in a z-direction.
23. The method of claim 22, wherein:
when a magnetic field is applied to the first logic superconducting unit and the second control superconducting unit, the magnetic field is controlled to be controlled by sigmas1 xσc2 zFirst coupling of representations to convert a quantum operator σ of the first logical superconducting units1 zQuantum operator sigma with said second control superconducting elementc2 zCoupling; and
when a magnetic field is applied to the second logic superconducting unit and the first control superconducting unit, the magnetic field is controlled to be controlled by sigmas2 xσc1 zSecond coupling of representations to control the quantum operator σ of the first superconducting elements2 zQuantum operator sigma with the second logical superconducting elementc1 zAnd (4) coupling.
24. The method of claim 22, wherein the first and second logical superconducting units and the first and second control superconducting units comprise superconducting qubits having binary quantum states.
25. The method of claim 22, wherein the logical superconducting element has the same precision as the control superconducting element.
26. The method of claim 22, wherein the controlling superconducting element has a lower precision than the logical superconducting element.
27. The method of claim 22, wherein the superconducting element and the coupling are configured such that a quantum hamiltonian characterizing the superconducting element and the coupling is:
wherein i represents the i-th pair of superconducting elements, hiAnd JijHas real values associated with the strength of coupling between the first superconducting element and the second superconducting element, i (t), g (t) and p (t) being time-dependent control parameters.
28. An apparatus, comprising:
forming a first logical superconducting element and a second logical superconducting element of a first pair of logical superconducting elements for computation such that each logical superconducting element has a length that can span the Pally operator σsj iWherein i ═ x, y, or z;
forming a first control superconducting element and a second control superconducting element for a first pair of control superconducting elements that do not need to assist in computation as arithmetic elements, such that each control superconducting element has a length that can span the Pauli operator σck iWherein i ═ x, y, or z;
a first coupler between the first logical superconducting unit and the second control superconducting unit, wherein the first coupler couples the first logical superconducting unit and the second control superconducting unit when a magnetic field is applied in a z-direction; and
a second coupler between the second logical superconducting unit and the first control superconducting unit, wherein the second coupler couples the second logical superconducting unit and the first control superconducting unit when a magnetic field is applied in the z-direction.
29. The apparatus of claim 28, wherein:
the first coupler has a first coupler with a second coupler with a third couplers1 xσc2 zFirst coupling of representations to convert a quantum operator σ of the first logical superconducting units1 zQuantum operator sigma with said second control superconducting elementc2 zCoupling; and
the second coupler has a second coupler with a second outputs2 xσc1 zSecond coupling of representations to control the quantum operator σ of the first superconducting elements2 zQuantum operator sigma with the second logical superconducting elementc1 zAnd (4) coupling.
30. The device of claim 28, wherein the first and second logical superconducting units and the first and second control superconducting units comprise superconducting qubits having binary quantum states.
31. The apparatus of claim 28, wherein the logical superconducting element has the same precision as the control superconducting element.
32. The apparatus of claim 28, wherein the logical superconducting element has a lower precision than the control superconducting element.
33. The apparatus of claim 28, wherein the superconducting element and the coupler are configured such that a quantum hamiltonian characterizing the superconducting element and the coupler is:
wherein i represents the i-th pair of superconducting elements, hiAnd JijHas real values associated with the strength of coupling between the first superconducting element and the second superconducting element, I (t), G (t), and P (t) being time-dependent control parameters.
Applications Claiming Priority (5)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201461924207P | 2014-01-06 | 2014-01-06 | |
US61/924,207 | 2014-01-06 | ||
US201461985348P | 2014-04-28 | 2014-04-28 | |
US61/985,348 | 2014-04-28 | ||
CN201480074978.0A CN106031041B (en) | 2014-01-06 | 2014-12-31 | Constructing and programming quantum hardware for quantum annealing processes |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201480074978.0A Division CN106031041B (en) | 2014-01-06 | 2014-12-31 | Constructing and programming quantum hardware for quantum annealing processes |
Publications (1)
Publication Number | Publication Date |
---|---|
CN112016690A true CN112016690A (en) | 2020-12-01 |
Family
ID=53494011
Family Applications (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202010705398.4A Pending CN112016690A (en) | 2014-01-06 | 2014-12-31 | Constructing and programming quantum hardware for quantum annealing processes |
CN201480074978.0A Active CN106031041B (en) | 2014-01-06 | 2014-12-31 | Constructing and programming quantum hardware for quantum annealing processes |
CN201480074980.8A Active CN105960650B (en) | 2014-01-06 | 2014-12-31 | The quantum hardware of building and programming for the Quantum annealing process of robust |
Family Applications After (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201480074978.0A Active CN106031041B (en) | 2014-01-06 | 2014-12-31 | Constructing and programming quantum hardware for quantum annealing processes |
CN201480074980.8A Active CN105960650B (en) | 2014-01-06 | 2014-12-31 | The quantum hardware of building and programming for the Quantum annealing process of robust |
Country Status (8)
Country | Link |
---|---|
US (13) | US9934468B2 (en) |
EP (4) | EP3092607B1 (en) |
JP (5) | JP6576949B2 (en) |
CN (3) | CN112016690A (en) |
AU (9) | AU2014373698B2 (en) |
CA (6) | CA3189038A1 (en) |
SG (5) | SG11201605503VA (en) |
WO (2) | WO2015103375A1 (en) |
Families Citing this family (74)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7533068B2 (en) | 2004-12-23 | 2009-05-12 | D-Wave Systems, Inc. | Analog processor comprising quantum devices |
WO2008122127A1 (en) | 2007-04-05 | 2008-10-16 | D-Wave Systems Inc. | Systems, methods and apparatus for anti-symmetric qubit-coupling |
US10037493B2 (en) | 2013-10-22 | 2018-07-31 | D-Wave Systems Inc. | Universal adiabatic quantum computing with superconducting qubits |
EP3092607B1 (en) | 2014-01-06 | 2022-03-30 | Google LLC | Constructing and programming quantum hardware for robust quantum annealing processes |
US10002107B2 (en) | 2014-03-12 | 2018-06-19 | D-Wave Systems Inc. | Systems and methods for removing unwanted interactions in quantum devices |
US11797641B2 (en) | 2015-02-03 | 2023-10-24 | 1Qb Information Technologies Inc. | Method and system for solving the lagrangian dual of a constrained binary quadratic programming problem using a quantum annealer |
CA2881033C (en) | 2015-02-03 | 2016-03-15 | 1Qb Information Technologies Inc. | Method and system for solving lagrangian dual of a constrained binary quadratic programming problem |
SG10201907850YA (en) | 2015-02-27 | 2019-10-30 | Univ Yale | Techniques for universal quantum control of quantum coherent states and related systems and methods |
EP3325404A4 (en) * | 2015-07-24 | 2019-03-27 | Yale University | Techniques of oscillator state manipulation for quantum information processing and related systems and methods |
US10467545B2 (en) * | 2015-08-13 | 2019-11-05 | D-Wave Systems Inc. | Systems and methods for creating and using higher degree interactions between quantum devices |
WO2017087627A1 (en) | 2015-11-17 | 2017-05-26 | Massachusetts Institute Of Technology | Multiloop interferometers for quantum information processing |
WO2017087630A1 (en) | 2015-11-17 | 2017-05-26 | Massachusetts Institute Of Technology | Paramagnetic tree coupling of spin qubits |
US10187065B2 (en) | 2015-11-17 | 2019-01-22 | Massachusetts Institute Of Technology | Four spin couplers for quantum information processing |
US10360088B2 (en) * | 2015-11-20 | 2019-07-23 | Quantum Benchmark, Inc. | Randomized compiling for quantum computation |
CN115204400A (en) | 2015-12-30 | 2022-10-18 | 谷歌有限责任公司 | Method and apparatus for performing thermal annealing using quantum wiggling |
EP3398121A1 (en) * | 2015-12-30 | 2018-11-07 | Google LLC | Quantum statistic machine |
CA3017275C (en) * | 2016-03-11 | 2023-05-23 | 1Qb Information Technologies Inc. | Methods and systems for quantum computing |
JP6915110B2 (en) * | 2016-05-17 | 2021-08-04 | グーグル エルエルシーＧｏｏｇｌｅ ＬＬＣ | Fidelity estimation for quantum computing systems |
EP3443507B1 (en) | 2016-05-17 | 2024-03-20 | Google LLC | Fidelity estimation for quantum computing systems |
US10044638B2 (en) | 2016-05-26 | 2018-08-07 | 1Qb Information Technologies Inc. | Methods and systems for quantum computing |
US9870273B2 (en) | 2016-06-13 | 2018-01-16 | 1Qb Information Technologies Inc. | Methods and systems for quantum ready and quantum enabled computations |
CN109716360B (en) * | 2016-06-08 | 2023-08-15 | D-波系统公司 | System and method for quantum computing |
WO2018037388A1 (en) * | 2016-08-26 | 2018-03-01 | 1Qb Information Technologies Inc. | Method and system for performing real-time analytics on a plurality of data streams |
JP2018067200A (en) * | 2016-10-20 | 2018-04-26 | 国立大学法人京都大学 | Simulation device, computer program, and simulation method |
US11157828B2 (en) * | 2016-12-08 | 2021-10-26 | Microsoft Technology Licensing, Llc | Tomography and generative data modeling via quantum boltzmann training |
US11263547B2 (en) | 2017-01-30 | 2022-03-01 | D-Wave Systems Inc. | Quantum annealing debugging systems and methods |
US10255557B2 (en) | 2017-02-15 | 2019-04-09 | Northrop Grumman Systems Corporation | XX Coupler for flux qubits |
US10332024B2 (en) | 2017-02-22 | 2019-06-25 | Rigetti & Co, Inc. | Modeling superconducting quantum circuit systems |
EP3593298A4 (en) | 2017-03-10 | 2021-01-20 | Rigetti & Co., Inc. | Performing a calibration process in a quantum computing system |
US10074792B1 (en) | 2017-03-10 | 2018-09-11 | Northrop Grumman Systems Corporation | ZZZ coupler for superconducting qubits |
WO2018212789A1 (en) * | 2017-05-15 | 2018-11-22 | Google Llc | Operator averaging within quantum computing systems |
US10977570B2 (en) * | 2017-06-19 | 2021-04-13 | Rigetti & Co, Inc. | Distributed quantum computing system |
US11651263B2 (en) | 2017-06-26 | 2023-05-16 | Google Llc | Nonlinear calibration of a quantum computing apparatus |
US11875222B1 (en) * | 2017-09-18 | 2024-01-16 | Rigetti & Co, Llc | Maintaining calibration in a quantum computing system |
US11494655B2 (en) * | 2017-12-08 | 2022-11-08 | International Business Machines Corporation | Random matrix hardware for machine learning |
CN111788588A (en) | 2017-12-20 | 2020-10-16 | D-波系统公司 | System and method for coupling qubits in a quantum processor |
US11809961B2 (en) | 2017-12-29 | 2023-11-07 | Google Llc | Inhomogeneous quantum annealing schedules |
CN111542935B (en) | 2018-01-05 | 2024-01-26 | 耶鲁大学 | Robust quantum logic gate |
US11108380B2 (en) | 2018-01-11 | 2021-08-31 | Northrop Grumman Systems Corporation | Capacitively-driven tunable coupling |
CN111989686B (en) * | 2018-01-22 | 2023-12-29 | D-波系统公司 | System and method for improving performance of analog processor |
US10749096B2 (en) | 2018-02-01 | 2020-08-18 | Northrop Grumman Systems Corporation | Controlling a state of a qubit assembly via tunable coupling |
US11010145B1 (en) | 2018-02-21 | 2021-05-18 | Rigetti & Co, Inc. | Retargetable compilation for quantum computing systems |
US10838792B1 (en) | 2018-03-07 | 2020-11-17 | Quantum Benchmark, Inc. | Systems and methods for reconstructing noise from pauli fidelities |
US11334693B1 (en) | 2018-03-07 | 2022-05-17 | Keysight Technologies Canada Inc. | Systems and methods for optimizing quantum computers |
US11620561B2 (en) | 2018-05-30 | 2023-04-04 | Mark A. Novotny | Method and system for a quantum oracle to obtain the number of quantum ground states |
US10540603B2 (en) | 2018-06-19 | 2020-01-21 | Northrop Grumman Systems Corporation | Reconfigurable quantum routing |
US10852366B2 (en) | 2018-06-26 | 2020-12-01 | Northrop Grumman Systems Corporation | Magnetic flux source system |
US11568293B2 (en) | 2018-07-18 | 2023-01-31 | Accenture Global Solutions Limited | Quantum formulation independent solver |
US11507872B2 (en) | 2018-08-17 | 2022-11-22 | Zapata Computing, Inc. | Hybrid quantum-classical computer system and method for performing function inversion |
EP3841533A1 (en) * | 2018-08-21 | 2021-06-30 | President and Fellows of Harvard College | Quantum circuit embedding by simulated annealing |
US10510943B1 (en) | 2018-08-28 | 2019-12-17 | International Business Machines Corporation | Structure for an antenna chip for qubit annealing |
US10475983B1 (en) | 2018-08-28 | 2019-11-12 | International Business Machines Corporation | Antenna-based qubit annealing method |
US11050009B2 (en) | 2018-08-28 | 2021-06-29 | International Business Machines Corporation | Methods for annealing qubits with an antenna chip |
WO2020047444A1 (en) * | 2018-08-31 | 2020-03-05 | President And Fellows Of Harvard College | Quantum computing for combinatorial optimization problems using programmable atom arrays |
JP6856592B2 (en) * | 2018-09-12 | 2021-04-07 | 株式会社東芝 | Electronic circuits and arithmetic units |
WO2020090559A1 (en) | 2018-11-04 | 2020-05-07 | 株式会社ＱｕｎａＳｙｓ | Method for determining hamiltonian excitation state and program therefor |
US10886049B2 (en) | 2018-11-30 | 2021-01-05 | Northrop Grumman Systems Corporation | Coiled coupled-line hybrid coupler |
US11650751B2 (en) | 2018-12-18 | 2023-05-16 | Hewlett Packard Enterprise Development Lp | Adiabatic annealing scheme and system for edge computing |
US11900264B2 (en) | 2019-02-08 | 2024-02-13 | D-Wave Systems Inc. | Systems and methods for hybrid quantum-classical computing |
US11488049B2 (en) | 2019-04-09 | 2022-11-01 | Zapata Computing, Inc. | Hybrid quantum-classical computer system and method for optimization |
CN110120799A (en) * | 2019-04-17 | 2019-08-13 | 上海大学 | A kind of insulation shortcut method of high-fidelity population inversion in two-level energy system |
US11537928B2 (en) | 2019-05-03 | 2022-12-27 | Zapata Computing, Inc. | Quantum-classical system and method for matrix computations |
CN110045613B (en) * | 2019-05-13 | 2020-09-22 | 北京邮电大学 | Mixed integer optimal control numerical solution method based on quantum annealing |
WO2020255076A1 (en) | 2019-06-19 | 2020-12-24 | 1Qb Information Technologies Inc. | Method and system for mapping a dataset from a hilbert space of a given dimension to a hilbert space of a different dimension |
JP7171520B2 (en) | 2019-07-09 | 2022-11-15 | 株式会社日立製作所 | machine learning system |
US11537381B2 (en) | 2019-07-15 | 2022-12-27 | International Business Machines Corporation | Quantum software developer kit and framework |
CN112651508B (en) * | 2020-01-10 | 2022-04-15 | 腾讯科技（深圳）有限公司 | Prediction method, device, equipment and storage medium of adiabatic evolution path |
WO2021144922A1 (en) * | 2020-01-16 | 2021-07-22 | 国立研究開発法人産業技術総合研究所 | Quantum computing element |
JP2022167926A (en) * | 2020-02-13 | 2022-11-04 | グーグル エルエルシー | Fidelity Estimation for Quantum Computing Systems |
WO2022204266A1 (en) | 2021-03-23 | 2022-09-29 | Zapata Computing, Inc. | Classically-boosted quantum optimization |
IL308322A (en) * | 2021-05-07 | 2024-01-01 | Kbr Wyle Services Llc | System and method using multilayer optical lattice qubit arrays for quantum computing |
CN114326494A (en) * | 2021-12-21 | 2022-04-12 | 华东计算技术研究所（中国电子科技集团公司第三十二研究所） | Quantum measurement and control system and method of superconducting quantum computer |
TWI824578B (en) * | 2022-01-24 | 2023-12-01 | 旺宏電子股份有限公司 | Semiconductor circuit and operating method for the same |
US20230298101A1 (en) * | 2022-03-02 | 2023-09-21 | Jpmorgan Chase Bank, N.A. | Systems and methods for quantum computing-assisted portfolio selection |
Family Cites Families (28)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6979836B2 (en) * | 2001-08-29 | 2005-12-27 | D-Wave Systems, Inc. | Superconducting low inductance qubit |
US7307275B2 (en) | 2002-04-04 | 2007-12-11 | D-Wave Systems Inc. | Encoding and error suppression for superconducting quantum computers |
US6900454B2 (en) * | 2002-04-20 | 2005-05-31 | D-Wave Systems, Inc. | Resonant controlled qubit system |
AU2002950888A0 (en) * | 2002-08-20 | 2002-09-12 | Unisearch Limited | Quantum device |
US20050250651A1 (en) | 2004-03-29 | 2005-11-10 | Amin Mohammad H S | Adiabatic quantum computation with superconducting qubits |
US7639035B2 (en) * | 2005-04-26 | 2009-12-29 | D-Wave Systems, Inc. | Qubit state copying |
WO2010148120A2 (en) | 2009-06-17 | 2010-12-23 | D-Wave Systems Inc. | Systems and methods for solving computational problems |
AU2007209712A1 (en) * | 2006-01-27 | 2007-08-02 | D-Wave Systems, Inc. | Methods of adiabatic quantum computation |
WO2008006217A1 (en) * | 2006-07-14 | 2008-01-17 | D-Wave Systems Inc. | Systems, methods, and apparatus for quasi-adiabatic quantum computation |
CA2669816C (en) | 2006-12-05 | 2017-03-07 | D-Wave Systems, Inc. | Systems, methods and apparatus for local programming of quantum processor elements |
US7895142B2 (en) * | 2007-09-27 | 2011-02-22 | Siemens Aktiengesellschaft | Method and apparatus for quantum adiabatic pattern recognition |
WO2009075861A2 (en) | 2007-12-11 | 2009-06-18 | Utc Power Corporation | Tailoring liquid water permeability of diffusion layers in fuel cell stacks |
EP2263166B1 (en) * | 2008-03-24 | 2020-02-19 | D-Wave Systems Inc. | Systems, devices, and methods for analog processing |
WO2009143166A2 (en) | 2008-05-20 | 2009-11-26 | D-Wave Systems Inc. | Systems, methods, and apparatus for calibrating, controlling, and operating a quantum processor |
US8229863B2 (en) * | 2008-05-28 | 2012-07-24 | D-Wave Systems Inc. | Method and apparatus for evolving a quantum system using a mixed initial hamiltonian comprising both diagonal and off-diagonal terms |
US7969178B2 (en) | 2008-05-29 | 2011-06-28 | Northrop Grumman Systems Corporation | Method and apparatus for controlling qubits with single flux quantum logic |
WO2009152180A2 (en) * | 2008-06-10 | 2009-12-17 | D-Wave Systems Inc. | Parameter learning system for solvers |
US20100258746A1 (en) | 2009-04-08 | 2010-10-14 | Yun-Chung Na | Massive parallel generation of nonclassical photons via polaritonic superfluid to mott- insulator quantum phase transition |
WO2010151581A2 (en) * | 2009-06-26 | 2010-12-29 | D-Wave Systems Inc. | Systems and methods for quantum computation using real physical hardware |
WO2012082938A2 (en) | 2010-12-14 | 2012-06-21 | President And Fellows Of Harvard College | Scalable room temperature quantum information processor |
JP5669069B2 (en) * | 2011-08-24 | 2015-02-12 | 日本電信電話株式会社 | Quantum state generation method, quantum state generation apparatus, and program |
US9501747B2 (en) * | 2012-12-18 | 2016-11-22 | D-Wave Systems Inc. | Systems and methods that formulate embeddings of problems for solving by a quantum processor |
EP3092607B1 (en) | 2014-01-06 | 2022-03-30 | Google LLC | Constructing and programming quantum hardware for robust quantum annealing processes |
CA2937324C (en) * | 2014-01-21 | 2022-09-27 | Google Inc. | Quantum hardware characterized by programmable bose-hubbard hamiltonians |
US10002107B2 (en) * | 2014-03-12 | 2018-06-19 | D-Wave Systems Inc. | Systems and methods for removing unwanted interactions in quantum devices |
GB2524039A (en) * | 2014-03-12 | 2015-09-16 | Nokia Technologies Oy | Method and apparatus for adiabatic quantum annealing |
US10250271B2 (en) * | 2015-10-07 | 2019-04-02 | Kabushiki Kaisha Toshiba | Quantum computation apparatus and quantum computation method |
CA2968830C (en) * | 2017-05-29 | 2024-04-02 | Socpra Sciences Et Genie S.E.C. | Quantum processor, and method of quantum processing |
-
2014
- 2014-12-31 EP EP14876158.8A patent/EP3092607B1/en active Active
- 2014-12-31 CA CA3189038A patent/CA3189038A1/en active Pending
- 2014-12-31 US US15/109,600 patent/US9934468B2/en active Active
- 2014-12-31 CN CN202010705398.4A patent/CN112016690A/en active Pending
- 2014-12-31 EP EP22179379.7A patent/EP4099233A1/en active Pending
- 2014-12-31 JP JP2016562459A patent/JP6576949B2/en active Active
- 2014-12-31 EP EP14876050.7A patent/EP3092716B1/en active Active
- 2014-12-31 SG SG11201605503VA patent/SG11201605503VA/en unknown
- 2014-12-31 CN CN201480074978.0A patent/CN106031041B/en active Active
- 2014-12-31 CN CN201480074980.8A patent/CN105960650B/en active Active
- 2014-12-31 CA CA3189028A patent/CA3189028A1/en active Pending
- 2014-12-31 SG SG11201605499SA patent/SG11201605499SA/en unknown
- 2014-12-31 AU AU2014373698A patent/AU2014373698B2/en active Active
- 2014-12-31 US US15/109,614 patent/US10346760B2/en active Active
- 2014-12-31 CA CA3158864A patent/CA3158864A1/en active Pending
- 2014-12-31 EP EP22162517.1A patent/EP4033416A1/en active Pending
- 2014-12-31 WO PCT/US2014/072962 patent/WO2015103375A1/en active Application Filing
- 2014-12-31 JP JP2016562458A patent/JP6574199B2/en active Active
- 2014-12-31 AU AU2014373701A patent/AU2014373701C1/en active Active
- 2014-12-31 SG SG10201706473SA patent/SG10201706473SA/en unknown
- 2014-12-31 CA CA2936112A patent/CA2936112C/en active Active
- 2014-12-31 SG SG10201706475TA patent/SG10201706475TA/en unknown
- 2014-12-31 SG SG10202006553XA patent/SG10202006553XA/en unknown
- 2014-12-31 WO PCT/US2014/072959 patent/WO2015103372A1/en active Application Filing
- 2014-12-31 CA CA3158858A patent/CA3158858A1/en active Pending
- 2014-12-31 CA CA2936114A patent/CA2936114C/en active Active
-
2018
- 2018-03-07 US US15/914,689 patent/US10510015B2/en active Active
-
2019
- 2019-03-04 AU AU2019201469A patent/AU2019201469B2/en active Active
- 2019-06-24 US US16/450,461 patent/US10614372B2/en active Active
- 2019-06-26 US US16/453,477 patent/US10713584B2/en active Active
- 2019-08-20 JP JP2019150457A patent/JP7004691B2/en active Active
- 2019-11-13 US US16/683,149 patent/US10755194B2/en active Active
- 2019-12-16 AU AU2019283774A patent/AU2019283774B2/en active Active
-
2020
- 2020-04-06 US US16/841,251 patent/US10915832B2/en active Active
- 2020-04-20 US US16/853,463 patent/US10789541B2/en active Active
- 2020-08-19 US US16/997,673 patent/US10922619B2/en active Active
- 2020-12-02 AU AU2020281055A patent/AU2020281055B2/en active Active
- 2020-12-08 US US17/115,493 patent/US11288588B2/en active Active
-
2021
- 2021-01-14 US US17/149,407 patent/US20210224680A1/en active Pending
- 2021-09-01 AU AU2021225194A patent/AU2021225194B2/en active Active
- 2021-12-28 JP JP2021214391A patent/JP7263502B2/en active Active
-
2022
- 2022-01-14 AU AU2022200224A patent/AU2022200224B2/en active Active
- 2022-03-28 US US17/706,158 patent/US11809963B2/en active Active
-
2023
- 2023-03-02 AU AU2023201299A patent/AU2023201299B2/en active Active
- 2023-04-11 JP JP2023064372A patent/JP2023098988A/en active Pending
- 2023-07-27 AU AU2023208179A patent/AU2023208179A1/en active Pending
- 2023-10-10 US US18/484,233 patent/US20240037431A1/en active Pending
Also Published As
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN106031041B (en) | Constructing and programming quantum hardware for quantum annealing processes |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
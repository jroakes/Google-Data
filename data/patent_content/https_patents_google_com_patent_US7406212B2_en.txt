US7406212B2 - Method and system for parallel processing of Hough transform computations - Google Patents
Method and system for parallel processing of Hough transform computations Download PDFInfo
- Publication number
- US7406212B2 US7406212B2 US11/143,169 US14316905A US7406212B2 US 7406212 B2 US7406212 B2 US 7406212B2 US 14316905 A US14316905 A US 14316905A US 7406212 B2 US7406212 B2 US 7406212B2
- Authority
- US
- United States
- Prior art keywords
- transform
- hough transform
- space
- sub
- array
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V10/00—Arrangements for image or video recognition or understanding
- G06V10/40—Extraction of image or video features
- G06V10/48—Extraction of image or video features by mapping characteristic values of the pattern into a parameter space, e.g. Hough transformation
Definitions
- This invention relates generally to the field of array processing. More particularly, this invention relates to a system and method for parallel computation of a Hough transform.
- a common problem in image processing is to find primitives such as straight lines, circles, ellipses, and other higher order polynomials or any curve in frames of image data.
- One approach is to use a Hough transform.
- the Hough transform maps a point in the image array to a curve or surface in the transform domain that indicates the parameters of all primitives passing through the point. If the primitive is a straight line, the Hough transform of the entire input image is mathematically equivalent to a 2-dimensional discrete Radon transform or a Slant Stack transform.
- 2-dimensional discrete Radon transform or a Slant Stack transform it is usual to calculate the transform value at each point in the transform domain from a set of points in the image array.
- Hough method for curve detection is its ability to overlook noisy points in the input data. Extremely noisy points will not change the accumulator values at parameter points of interest. Another advantage is that Hough method can be used to detect multiple curves of similar forms by searching for local maxima in the parameter space.
- the Hough transform requires mapping a point in the image array to a curve or a surface in the transform array.
- the first approach is to use a large number of accumulators, one for each element in the transform array. This approach results in complex hardware, such as computer graphics cards.
- the second approach is to use a single accumulator and to store the transform array in a memory. This approach is slow because of the requirement to perform multiple read and write operations for each image pixel to move partial sums between the memory and the accumulator.
- Parallel processing hardware has been proposed for computing a Hough transform.
- an image comprising an array of pixel values is partitioned into multiple sub images.
- the transform of each sub image is computed by a separate processing engine, thereby allowing parallel computation.
- An example of this approach is described in U.S. Pat. No. 5,809,322 issued on Sep. 15, 1988, and titled “Apparatus and method for signal processing”, by Akerib; Avidan (Associate Computing Limited). It describes an application where the image data is partitioned among processors for image analysis routines including Hough transform.
- a disadvantage of this approach is that in some applications, only pixels corresponding to foreground elements in an image need to be processed.
- the number of computations varies linearly with the number of foreground pixels in the input data (the image).
- the workload may not be uniformly distributed among the processors. For example, some sub-images may have no foreground elements while other sub-images may contain only foreground pixels. This results in poor processor utilization.
- the partial sums of the Hough transform are stored in memory. Since more than one processor may be updating the same physical memory then a shared memory mechanism (such as semaphores) must be used or a separate memory must be used for each processor. The former approach introduces more computational overhead, while the latter approach is more expensive and is not practical for high dimensional Hough transform spaces. Thus, partitioning the image into sub-images is only practical for low-resolution images or for detecting curves with a low number of parameters (such as straight lines).
- FIG. 1 is a flow chart of a method for computing a Hough transform.
- FIG. 2 is a flow chart of a further method for computing a Hough transform.
- FIG. 3 is a flow chart of a method for computing a Hough transform consistent with certain embodiments of the present invention.
- FIG. 4 is a flow chart of a further method for computing a Hough transform consistent with certain embodiments of the present invention.
- FIG. 6 is a diagram of a further parallel processing system consistent with certain embodiments of the invention.
- FIG. 7 is a plot of an exemplary curve in an image space.
- FIG. 8 is a plot of a corresponding curve in a Hough transform sub-space.
- FIG. 9 is a Hough transform model for optical eye tracking.
- FIG. 10 is a flow chart of a method of eye tracking system consistent with certain embodiments of the invention.
- the present invention relates to a method and processing architecture for parallel computation of a Hough transform of an array of input data.
- the transform space of the Hough transform is dynamically or statically partitioned into a plurality of sub-spaces. Each sub-space of the transform is stored at its constituent sub-space memory addresses.
- Data values from the array of input data values are passed to a plurality of processors, each processor associated dynamically or statically with a sub-space of memory addresses.
- Each processor acting in parallel with the other processors, updates elements of the Hough transform stored at the associated sub-space memory addresses dependent upon the input data value.
- each processor accesses a separate memory location, so there is no need for a memory sharing mechanism or memory duplication, since each pixel is available to each processor and the processors are updating non-overlapping memory spaces concurrently. Further, the processing is evenly distributed amongst the processors even if only a portion of an image (such as a foreground object) is transformed.
- the invention has applications in image feature recognition for use in smart image sensors, video analysis devices (such as eye tracking systems), disability interface units, robot vision units, and various clinical equipments, for example.
- video analysis devices such as eye tracking systems
- disability interface units such as eye tracking systems
- robot vision units such as robot vision units
- various clinical equipments for example.
- the parameter space is quantized to discrete values of the parameter vector to form a Hough parameter space P.
- the coordinates of x in the image space that satisfy equation (1) are denoted as x n (p k ).
- the value of the corresponding point in the parameter space is defined as
- A(x) is the gray level value of the pixel at position x
- N is the total number of pixels in the input image data.
- A(x) is set to the value 1 for foreground pixels and 0 for background pixels.
- FIG. 1 is a flow chart of a method for computing a Hough transform.
- the computation begins at start block 102 .
- a memory location is used for each point in the Hough transform space.
- the value A(x n ) of a pixel at position x n in the image space is retrieved.
- FIG. 2 is a flow chart of a further method for computing a Hough transform.
- the method is similar to that described with reference to FIG. 1 , except that at block 106 the image is partitioned into a number of sub-images. For simplicity in the flow chart, the method is illustrated for only two sub-images, but a higher number of sub-images may be used.
- a pixel is retrieved from the first sub-image and processed (by a first processor) at blocks 110 and 112 .
- a pixel is retrieved from the second sub-image and processed (by a second processor) at blocks 110 ′ and 112 ′.
- the memory initialized at block 104 is shared between the first and second processors. This requires that a mechanism for memory sharing be used.
- FIG. 3 is a flow chart of a method for computing a Hough transform consistent with certain embodiments of the present invention.
- the computation begins at start block 302 .
- the partitioning of the Hough transform space is determined.
- the quantization of the parameters and the ranges of the parameters are determined.
- the value A(x n ) of a pixel at position x n in the image space is retrieved.
- the transform space is partitioned into M sub-spaces P m , such that
- Each sub-space contains a subset of the parameters p of the complete Hough transform.
- the sub-space partition may be determined in advance and be static, or the sub-space partition may be determined dynamically.
- the memory associated with each processor may be allocated dynamically from a single physical memory.
- the subspaces are allocated so as to provide a specified for each point in the Hough transform space.
- the first and second processors are updating different memory location, so there is no need for a memory sharing mechanism.
- FIG. 4 is a flow chart of a further method for computing a Hough transform consistent with certain embodiments of the present invention.
- the method of FIG. 4 is similar to that of FIG. 3 , except that the Hough space is partitioned statically at block 402 . That is, each processor is allocated a sub-space of the Hough space before processing of an image is begun. Since the sub-space partitioning is static, the memory allocation may also be static so that each processor is associated with a separate sub-space memory partition (or even a separate memory).
- the sub-space memories are initialized to zero.
- FIG. 5 is a diagram of a parallel processor consistent with certain embodiments of the invention.
- the parallel processor 500 comprises an optional pre-processor 504 .
- the pre-processing may be used, for example, to select areas of the image, such as foreground elements, to be processed, or to detect edges in the image.
- the array of data values (pixel values) of the pre-processed (or original) image is stored an image memory 504 .
- a memory interface 506 couples the image memory 504 to a plurality of processors, 508 , 508 ′, 508 ′′, etc.
- the memory interface 506 is configured to retrieve a sequence of pixel values from the image memory 504 and distribute the pixels values to the processors. Each pixel value is sent to every processor.
- Each processor can be used to compute transform values in a sub-space of the complete Hough transform space.
- Processors 508 , 508 ′ and 508 ′′ are coupled to a transform space memory 510 that is used to store transform values for the sub-spaces of the Hough transform space.
- each processor addresses a non-overlapping address space in the memory 510 .
- each pixel value in turn is retrieved from the image memory 504 and passed via memory interface 506 to the processors 508 , 508 ′, 508 ′′ etc., and each processor updates Hough transform values in its associated memory locations in transform space memory 510 .
- the complete Hough transform may be accessed through a second memory interface 512 by an optional post processor 514 .
- the post processor 514 may be used to search the Hough transform space to identify features of the image. For example, the transform space may be searched to find the largest value in the Hough transform array elements and its location. The results of the search, and/or the Hough transform itself may be provided at output 516 .
- FIG. 6 is a diagram of a further parallel processor consistent with certain embodiments of the invention.
- the parallel processor in FIG. 6 is similar to that in FIG. 5 , except Referring to FIG. 6 , that each of the processors 508 , 508 ′, 508 ′′ is coupled to its own sub-space memory, 510 , 510 ′ or 510 ′′.
- These memories may be partitions of the same physical memory or may be separate memories.
- points 704 , 706 , 708 and 710 contribute to circles 804 , 806 , 808 and 810 , respectively, in the transform space as illustrated in FIG. 8 .
- the three-dimensional Hough transform space can be partitioned such that transform vectors having the same value of the radius r lie in the same sub-space.
- the figure shows examples of curves 802 , 804 , 806 , 808 and 810 , to which the points 702 , 704 , 706 , 708 and 710 in the image space ( FIG. 7 ) contribute, respectively.
- Other circles in the image space with radius r 1 pass through the point (x 1 ,y 1 ). These circles have different values of ⁇ and ⁇ , but are also affected by the point (x 1 ,y 1 ) in the image space.
- Circles in the images space with a radius different than r 1 also pass through the point (x 1 ,y 1 ). These circles contribute to values of ⁇ and ⁇ in different transform sub-spaces (in this example partitioning).
- the Hough transform space may be partitioned in any fashion. However, in most situations it will be advantageous to partition the transform space such that processing is evenly distributed among the available processors. For example, when the Hough transform primitive is a circle, a single image point contributes to transform points on the surface of a cone in the 3-dimensional Hough transform space. While this Hough space is logically a 3-dimensional space, it will be physically stored in a 1-dimensional memory by mapping the parameter indices in a predefined order as usually done with high dimensional data structures. If two processors were available, the cone could be partitioned dynamically by a plane passing through the axis of the cone. One processor could compute the contributions to one half of the cone, while the other processor could compute the contributions to the other half. In general, when M processors are available, the cone could be partitioned dynamically by predefined planes emanating from the axis of the cone.
- static partitioning can also be useful in situations where each processor has its separate memory unit.
- the Hough transform primitive is a circle
- a single image point contributes to transform points on the surface of a cone in the 3-dimensional Hough transform space.
- the cone could be partitioned statically by a plane across the radius axis of the cone.
- One processor could compute the contributions to one part of the cone (from r min to r cut ), while the other processor could compute the contributions to the other part (from r cut +1 to r max ), where r cut is chosen (offline) such that the surfaces of the cone parts are approximately equal.
- r min and r max defines the range of interest for the radius parameter values.
- M processors when M processors are available, the Hough space could be partitioned statically by (M ⁇ 1) planes across the radius axis of the cone.
- optical eye tracking An exemplary application of parallel Hough transform calculation is optical eye tracking.
- a human eye is modeled as a full or part circle representing the iris edges inside an ellipse representing the eyelid edges.
- the eye model 900 includes an ellipse 902 centered at (x e ,y e ) and a circle 904 centered at (x c ,y c ).
- the Hough method is used in this optical eye tracking system to estimate the circle parameters (x c ,y c , r), and the ellipse parameters (x e ,y e , a, b) for each captured video frame in real time.
- FIG. 10 is a flow chart 1000 showing operation of an eye tracking system consistent with certain embodiments of the invention.
- the flow chart depicts the processing of a single video frame of an array of input image pixels (x 1 ,x 2 , . . . ,x n ) to generate a number of facial action units (a 1 ,a 2 , . . . ,a c ).
- the frame is normalized at block 1004 . Normalization is used because variations in size, light, color, orientation angles, and different styles challenge the robustness of computer vision algorithms. The purpose of the normalization operation is to remove the variations among images rather than to enhance an image.
- a captured image may need to be downscaled because of the use of a fixed feature template size, or for speedup considerations.
- Light and color normalization can be performed using histogram-mapping operators (histogram equalization, normalization, or any other manipulation).
- Pose normalization can be used to adjust the subject orientation angle.
- the captured frame is scaled down to a fixed size color image, and then histogram equalization is performed on the resized image.
- Orientation normalization may be used to ensure that the ellipses are in a horizontal direction.
- the image is preprocessed at block 1006 .
- the preprocessing improves the normalized image and prepares it for subsequent image understanding operations.
- the preprocessing may include conversion of an input image into a binary image (i.e. an image having two gray levels).
- Linear and/or nonlinear image filtering may be applied to reduce noise effects and normalization artifacts. Smoothing may be applied to refine the image component boundaries inside each captured frame. For example, a median-filter (using a 3 ⁇ 3 square kernel (window) for example) may be applied to the normalized color image.
- the image is segmented at block 1008 .
- the segmentation process is used to identify potential eye regions of interest for curve fitting. Segmentation is the process of breaking an image into its constituent components. For example, mathematical morphology techniques may be used for generating segmentation hypothesis to be verified at later processing stages. Also, clustering techniques can be used to provide capabilities for detecting natural grouping of objects. Still further, relaxation techniques may be used to allow for compatibility considerations among neighboring objects to iteratively refine confidence measures. The detected components may be labeled for subsequent processing.
- low level features of the segmented image are detected using templates of their image regions, contours, or both.
- edge detection is performed to emphasize feature boundaries/contours. Since applying a threshold operator on an edge image may result in thick contours, a thinning process can be used to produce 1-pixel thick contours. Usually the detected contours are discontinued, but can be linked if desired.
- the edges of the filtered image are detected using a Sobel gradient magnitude operator. After comparing the gradient feature image to a threshold, the three bands (Red, Green, Blue) are combined into a one-band binary feature image by applying a pixel-wise “AND” operator. A thinning process is then applied to the binary feature image to produce a 1-pixel thick feature image.
- Image analysis and classification are performed at block 1012 .
- Search techniques are used to find optimal or sub-optimal estimations to detect one or more high level features of interest.
- a high level feature is usually a particular object, such as an eye, a person or a vehicle license plate. This is in contrast to a low level feature, such as an edge or a corner, which may be a feature common to multiple objects.
- Image understanding techniques are used to compute parameters required for constructing facial action unit representation.
- the eye tracking system searches for the best circle and ellipse inside the binary feature image to estimate the position of an iris and eyelid.
- the search is performed using the Hough transform method for detecting circles and ellipses described above, using a single Hough transform of ellipse primitives.
- Post-Processing is performed at block 1014 .
- Post-processing is used for checking consistency of spatial relationships between features within the same frame, and for checks among subsequent frames and for construction of the action units (a 1 ,a 2 , . . . , a c ).
- a set of heuristic rules are applied to watch for improbable situations.
- the number of edge points used for fitting the curve of interest is check to determine if it is greater than a fixed value. This process may also be used for detecting blinks.
- the estimated circle and ellipse parameters provide the information required to compute the action units of eye motion.
- the animation parameters can be expressed according to MPEG-4 standard as Facial Animation Parameters (FAPS), or other conventional Facial Action Codes (FACS), for example.
- FAPS Facial Animation Parameters
- FACS Facial Action Codes
- the action units (a 1 ,a 2 , . . . ,a c ) and other results are output.
- the process terminates at block 1018 .
- An image processing algorithm generally transforms an input image array to an output transform array (an output memory space).
- the present invention provides a general technique that dynamically, or statically, partitions the output array (the output memory space) into a number of subspaces and assigns a parallel processing element to each subspace. This approach avoids memory conflicts and provides an even distribution of available computation and memory resources.
Abstract
Description
s(x,p)=0, (1)
where p is a parameter vector and x is a position vector in the input image. This can be viewed as an equation defining points x in the image space for fixed parameter vector p, or as defining points in a parameter space for fixed values of the position vector x (i.e. for a particular pixel location).
where A(x) is the gray level value of the pixel at position x, and N is the total number of pixels in the input image data. Usually A(x) is set to the
H 0(p k)=0
H n(p k)=H n-1(p k)+A(x n(p k)), n=1:N. (3)
H n(p k(x n))=H n−1(p k(x n))+A(x n). (4)
is the union of the M sub-spaces. Each sub-space contains a subset of the parameters p of the complete Hough transform. The sub-space partition may be determined in advance and be static, or the sub-space partition may be determined dynamically. When the sub-space partition is determined dynamically, the memory associated with each processor may be allocated dynamically from a single physical memory. In one embodiment, the subspaces are allocated so as to provide a specified for each point in the Hough transform space. At
H n(p k 1(x n))=H n-1(p k 1(x n))+A(x n). (5)
H n(p k 2(x n))=H n-1(p k 2(x n))+A(x n). (6)
s(x,p)=(x−α)2+(y−β)2 −r 2=0, (7)
where x=(x,y) is a position in the image space and p=(α, β, r) is a point in the three dimensional Hough transform space. A
(x 1−α)2+(y 1−β)2 −r 1 2=0, (8)
(x−x e)2 /a 2+(y−y e)2 /b 2=1, (9)
which has four parameters, (xe, ye, a, b), and results in a four-dimensional transform space.
(x−x e)2 /a 2+(y−y e)2 /b 2=1, (10)
(x−x c)2 /r 2+(y−y c)2 /r 2=1. (11)
Claims (26)
Priority Applications (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/143,169 US7406212B2 (en) | 2005-06-02 | 2005-06-02 | Method and system for parallel processing of Hough transform computations |
JP2008514644A JP4727723B6 (en) | 2005-06-02 | 2006-04-26 | Method and system for parallel processing of Hough transform computations |
PCT/US2006/015749 WO2006132720A2 (en) | 2005-06-02 | 2006-04-26 | Method and system for parallel processing of hough transform computations |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US11/143,169 US7406212B2 (en) | 2005-06-02 | 2005-06-02 | Method and system for parallel processing of Hough transform computations |
Publications (2)
Publication Number | Publication Date |
---|---|
US20060274973A1 US20060274973A1 (en) | 2006-12-07 |
US7406212B2 true US7406212B2 (en) | 2008-07-29 |
Family
ID=37494143
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US11/143,169 Expired - Fee Related US7406212B2 (en) | 2005-06-02 | 2005-06-02 | Method and system for parallel processing of Hough transform computations |
Country Status (2)
Country | Link |
---|---|
US (1) | US7406212B2 (en) |
WO (1) | WO2006132720A2 (en) |
Cited By (16)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080027954A1 (en) * | 2006-07-31 | 2008-01-31 | City University Of Hong Kong | Representation and extraction of biclusters from data arrays |
US20100246890A1 (en) * | 2009-03-26 | 2010-09-30 | Microsoft Corporation | Detection of objects in images |
US20120008874A1 (en) * | 2009-04-07 | 2012-01-12 | Murata Machinery, Ltd. | Image processing apparatus, image processing method, image processing program, and storage medium |
US20120036301A1 (en) * | 2010-08-03 | 2012-02-09 | Caspole Eric R | Processor support for filling memory regions |
US8811743B2 (en) | 2010-06-09 | 2014-08-19 | Microsoft Corporation | Resource-aware computer vision |
US8856541B1 (en) * | 2013-01-10 | 2014-10-07 | Google Inc. | Liveness detection |
TWI480809B (en) * | 2009-08-31 | 2015-04-11 | Alibaba Group Holding Ltd | Image feature extraction method and device |
US20150154463A1 (en) * | 2013-12-04 | 2015-06-04 | Irida Labs S.A. | System and a method for the detection of multiple number-plates of moving cars in a series of 2-d images |
US9053389B2 (en) | 2012-12-03 | 2015-06-09 | Analog Devices, Inc. | Hough transform for circles |
WO2015195300A1 (en) | 2014-06-20 | 2015-12-23 | Qualcomm Incorporated | Obtaining structural information from images |
US9265458B2 (en) | 2012-12-04 | 2016-02-23 | Sync-Think, Inc. | Application of smooth pursuit cognitive testing paradigms to clinical drug development |
US20160155012A1 (en) * | 2013-07-24 | 2016-06-02 | Nec Corporation | Image Recognition Apparatus and Storage Medium |
US9380976B2 (en) | 2013-03-11 | 2016-07-05 | Sync-Think, Inc. | Optical neuroinformatics |
US9721179B2 (en) * | 2011-08-30 | 2017-08-01 | Megachips Corporation | Line segment and arc detection apparatus |
US10395378B2 (en) * | 2016-07-15 | 2019-08-27 | Samsung Electronics Co., Ltd. | Detecting periodic patterns and aperture problems for motion estimation |
US11767752B2 (en) | 2020-10-02 | 2023-09-26 | Saudi Arabian Oil Company | Methodology for automated verification and qualification of sidewall core recovery depth using borehole image logs |
Families Citing this family (15)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
FR2925187B1 (en) * | 2007-12-14 | 2011-04-08 | Commissariat Energie Atomique | SYSTEM COMPRISING A PLURALITY OF TREATMENT UNITS FOR EXECUTING PARALLEL STAINS BY MIXING THE CONTROL TYPE EXECUTION MODE AND THE DATA FLOW TYPE EXECUTION MODE |
US8150207B2 (en) * | 2007-12-31 | 2012-04-03 | Intel Corporation | Accelerating the hough transform |
US8744190B2 (en) | 2009-01-05 | 2014-06-03 | Freescale Semiconductor, Inc. | System and method for efficient image feature extraction |
EP2246806B1 (en) * | 2009-04-29 | 2014-04-02 | Autoliv Development AB | Vision method and system for automatically detecting objects in front of a motor vehicle |
TWI409718B (en) * | 2009-12-04 | 2013-09-21 | Huper Lab Co Ltd | Method of locating license plate of moving vehicle |
TWI431559B (en) * | 2010-10-29 | 2014-03-21 | Univ Nat Chiao Tung | A vehicle registration-plate detecting method and system thereof |
TW201237804A (en) * | 2011-03-02 | 2012-09-16 | Hon Hai Prec Ind Co Ltd | System and method for adjusting photo brightness |
EP3103059A1 (en) | 2014-02-04 | 2016-12-14 | Fraunhofer-Gesellschaft zur Förderung der angewandten Forschung e.V. | 3-d image analyzer for determining viewing direction |
US10017114B2 (en) | 2014-02-19 | 2018-07-10 | Magna Electronics Inc. | Vehicle vision system with display |
US20150296135A1 (en) * | 2014-04-10 | 2015-10-15 | Magna Electronics Inc. | Vehicle vision system with driver monitoring |
CN105223559B (en) * | 2015-10-13 | 2018-02-27 | 长安大学 | A kind of long-range radar track initiation method that can switch parallel |
US10324297B2 (en) | 2015-11-30 | 2019-06-18 | Magna Electronics Inc. | Heads up display system for vehicle |
US10401621B2 (en) | 2016-04-19 | 2019-09-03 | Magna Electronics Inc. | Display unit for vehicle head-up display system |
US11445915B2 (en) * | 2016-12-01 | 2022-09-20 | The Board Of Trustees Of The University Of Illinois | Compact briefcase OCT system for point-of-care imaging |
CN112991517B (en) * | 2021-03-08 | 2022-04-29 | 武汉大学 | Three-dimensional reconstruction method for texture image coding and decoding automatic matching |
Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4618989A (en) * | 1983-01-21 | 1986-10-21 | Michio Kawata, Director-General of Agency of Industrial Science and Technology | Method and system for detecting elliptical objects |
US5220621A (en) * | 1990-08-01 | 1993-06-15 | International Business Machines Corporation | Character recognition system using the generalized hough transformation and method |
US5832138A (en) * | 1994-03-07 | 1998-11-03 | Nippon Telegraph And Telephone Corporation | Image processing method and apparatus for extracting lines from an image by using the Hough transform |
US20020126901A1 (en) * | 2001-01-31 | 2002-09-12 | Gretag Imaging Trading Ag | Automatic image pattern detection |
-
2005
- 2005-06-02 US US11/143,169 patent/US7406212B2/en not_active Expired - Fee Related
-
2006
- 2006-04-26 WO PCT/US2006/015749 patent/WO2006132720A2/en active Application Filing
Patent Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4618989A (en) * | 1983-01-21 | 1986-10-21 | Michio Kawata, Director-General of Agency of Industrial Science and Technology | Method and system for detecting elliptical objects |
US5220621A (en) * | 1990-08-01 | 1993-06-15 | International Business Machines Corporation | Character recognition system using the generalized hough transformation and method |
US5832138A (en) * | 1994-03-07 | 1998-11-03 | Nippon Telegraph And Telephone Corporation | Image processing method and apparatus for extracting lines from an image by using the Hough transform |
US20020126901A1 (en) * | 2001-01-31 | 2002-09-12 | Gretag Imaging Trading Ag | Automatic image pattern detection |
Non-Patent Citations (4)
Title |
---|
Clarke, A.; Steineke, C.; Emanuel, H.; "High Image Rate Eye Movement Measurement: A Novel Approach Using CMOS Sensors and Dedicated FPGA Devices" Freie Univensitat Berlin Published in 2000. |
Deng, D.; ElGindy H.; "High-Speed Parameterisable Hough Transform Using Reconfigurable Hardware" School of Computer Science and Engineering, University of New South Wales, Kensington NSW 2002 Australian Computer Society. |
Mahmoud, M.; Nakanishi, M.; Ogura, T.; "Hough Transform Implementation on a Reconfigurable Highly Parallel Architecture" IEEE 1997. |
Majumdar, A. "Design of an ASIC Straight Line Detection in an Image" Indian Institue of Technology, Kharagpur India; Lucent Technologies, Bangalore, India, Published in 2000. |
Cited By (22)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20080027954A1 (en) * | 2006-07-31 | 2008-01-31 | City University Of Hong Kong | Representation and extraction of biclusters from data arrays |
US7849088B2 (en) * | 2006-07-31 | 2010-12-07 | City University Of Hong Kong | Representation and extraction of biclusters from data arrays |
US20100246890A1 (en) * | 2009-03-26 | 2010-09-30 | Microsoft Corporation | Detection of objects in images |
US20120008874A1 (en) * | 2009-04-07 | 2012-01-12 | Murata Machinery, Ltd. | Image processing apparatus, image processing method, image processing program, and storage medium |
US8682080B2 (en) * | 2009-04-07 | 2014-03-25 | Murata Machinery, Ltd. | Image processing apparatus, image processing method, image processing program, and storage medium |
TWI480809B (en) * | 2009-08-31 | 2015-04-11 | Alibaba Group Holding Ltd | Image feature extraction method and device |
US8811743B2 (en) | 2010-06-09 | 2014-08-19 | Microsoft Corporation | Resource-aware computer vision |
US20120036301A1 (en) * | 2010-08-03 | 2012-02-09 | Caspole Eric R | Processor support for filling memory regions |
US9721179B2 (en) * | 2011-08-30 | 2017-08-01 | Megachips Corporation | Line segment and arc detection apparatus |
US9053389B2 (en) | 2012-12-03 | 2015-06-09 | Analog Devices, Inc. | Hough transform for circles |
US9265458B2 (en) | 2012-12-04 | 2016-02-23 | Sync-Think, Inc. | Application of smooth pursuit cognitive testing paradigms to clinical drug development |
US8856541B1 (en) * | 2013-01-10 | 2014-10-07 | Google Inc. | Liveness detection |
US9380976B2 (en) | 2013-03-11 | 2016-07-05 | Sync-Think, Inc. | Optical neuroinformatics |
US20160155012A1 (en) * | 2013-07-24 | 2016-06-02 | Nec Corporation | Image Recognition Apparatus and Storage Medium |
US9646221B2 (en) * | 2013-07-24 | 2017-05-09 | Nec Corporation | Image recognition apparatus and storage medium |
US20150154463A1 (en) * | 2013-12-04 | 2015-06-04 | Irida Labs S.A. | System and a method for the detection of multiple number-plates of moving cars in a series of 2-d images |
US9547800B2 (en) * | 2013-12-04 | 2017-01-17 | Irida Labs S.A. | System and a method for the detection of multiple number-plates of moving cars in a series of 2-D images |
WO2015195300A1 (en) | 2014-06-20 | 2015-12-23 | Qualcomm Incorporated | Obtaining structural information from images |
WO2015195301A1 (en) | 2014-06-20 | 2015-12-23 | Qualcomm Incorporated | Obtaining structural information from images |
US10147017B2 (en) | 2014-06-20 | 2018-12-04 | Qualcomm Incorporated | Systems and methods for obtaining structural information from a digital image |
US10395378B2 (en) * | 2016-07-15 | 2019-08-27 | Samsung Electronics Co., Ltd. | Detecting periodic patterns and aperture problems for motion estimation |
US11767752B2 (en) | 2020-10-02 | 2023-09-26 | Saudi Arabian Oil Company | Methodology for automated verification and qualification of sidewall core recovery depth using borehole image logs |
Also Published As
Publication number | Publication date |
---|---|
US20060274973A1 (en) | 2006-12-07 |
JP2008546088A (en) | 2008-12-18 |
JP4727723B2 (en) | 2011-07-20 |
WO2006132720A2 (en) | 2006-12-14 |
WO2006132720A3 (en) | 2008-01-10 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US7406212B2 (en) | Method and system for parallel processing of Hough transform computations | |
US20210374464A1 (en) | Systems and methods for providing an image classifier | |
Malik et al. | Contour and texture analysis for image segmentation | |
Dollár et al. | Fast feature pyramids for object detection | |
Kumar et al. | Live detection of face using machine learning with multi-feature method | |
Hong et al. | An improved real time eye state identification system in driver drowsiness detection | |
Chetverikov et al. | Dynamic texture as foreground and background | |
Zhang et al. | Fast moving pedestrian detection based on motion segmentation and new motion features | |
Liu et al. | An efficient HOG–ALBP feature for pedestrian detection | |
Cai et al. | Vehicle detection based on visual saliency and deep sparse convolution hierarchical model | |
Dhar et al. | Interval type-2 fuzzy set and human vision based multi-scale geometric analysis for text-graphics segmentation | |
Dawwd | GLCM based parallel texture segmentation using a multicore processor | |
Dadgostar et al. | Gesture-based human–machine interfaces: a novel approach for robust hand and face tracking | |
Shaw et al. | A survey of digital image segmentation algorithms | |
Tank et al. | A fast moving object detection technique in video surveillance system | |
King | A survey of methods for face detection | |
JP4727723B6 (en) | Method and system for parallel processing of Hough transform computations | |
Bahri et al. | Fast moving human detection using fourier and hog descriptors based CUDA | |
Zhang et al. | Texture analysis | |
Tang | Chinese license plate recognition | |
Cuzzocrea et al. | Advanced pattern recognition from complex environments: a classification-based approach | |
CN115984583B (en) | Data processing method, apparatus, computer device, storage medium, and program product | |
Hamedani et al. | Multi scale CRF based RGB-D image segmentation using inter frames potentials | |
Abdallah | Investigation of new techniques for face detection | |
CN115984304A (en) | Instance partitioning method and device and storage medium |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: MOTOROLA, INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:MOHAMED, MAGDI A.;NASIR, IRFAN;REEL/FRAME:016650/0700Effective date: 20050602 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY, INC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA, INC;REEL/FRAME:025673/0558Effective date: 20100731 |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: CHANGE OF NAME;ASSIGNOR:MOTOROLA MOBILITY, INC.;REEL/FRAME:029216/0282Effective date: 20120622 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034419/0001Effective date: 20141028 |
|
FPAY | Fee payment |
Year of fee payment: 8 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20200729 |
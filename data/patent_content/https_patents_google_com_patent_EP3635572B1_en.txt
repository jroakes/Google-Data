EP3635572B1 - Subquery generation from a query - Google Patents
Subquery generation from a query Download PDFInfo
- Publication number
- EP3635572B1 EP3635572B1 EP18793723.0A EP18793723A EP3635572B1 EP 3635572 B1 EP3635572 B1 EP 3635572B1 EP 18793723 A EP18793723 A EP 18793723A EP 3635572 B1 EP3635572 B1 EP 3635572B1
- Authority
- EP
- European Patent Office
- Prior art keywords
- subquery
- subqueries
- query
- user
- response
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
- 230000004044 response Effects 0.000 claims description 73
- 238000000034 method Methods 0.000 claims description 42
- 230000009471 action Effects 0.000 claims description 35
- 238000004891 communication Methods 0.000 claims description 21
- 238000012545 processing Methods 0.000 claims description 11
- 230000001419 dependent effect Effects 0.000 claims description 2
- 230000015654 memory Effects 0.000 description 36
- 230000008569 process Effects 0.000 description 15
- 230000000052 comparative effect Effects 0.000 description 10
- 238000004590 computer program Methods 0.000 description 7
- 238000010586 diagram Methods 0.000 description 7
- 230000003993 interaction Effects 0.000 description 7
- 230000005540 biological transmission Effects 0.000 description 6
- 150000001875 compounds Chemical class 0.000 description 6
- 230000001413 cellular effect Effects 0.000 description 3
- 230000006870 function Effects 0.000 description 3
- 230000003287 optical effect Effects 0.000 description 3
- 238000006467 substitution reaction Methods 0.000 description 3
- 235000021152 breakfast Nutrition 0.000 description 2
- 239000004973 liquid crystal related substance Substances 0.000 description 2
- 238000012986 modification Methods 0.000 description 2
- 230000004048 modification Effects 0.000 description 2
- 230000000007 visual effect Effects 0.000 description 2
- 230000006978 adaptation Effects 0.000 description 1
- 238000013459 approach Methods 0.000 description 1
- 238000012937 correction Methods 0.000 description 1
- 230000000694 effects Effects 0.000 description 1
- 238000005516 engineering process Methods 0.000 description 1
- 238000010295 mobile communication Methods 0.000 description 1
- 230000006855 networking Effects 0.000 description 1
- 230000000644 propagated effect Effects 0.000 description 1
- 238000013515 script Methods 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 238000004088 simulation Methods 0.000 description 1
- 239000007787 solid Substances 0.000 description 1
- 239000013589 supplement Substances 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/332—Query formulation
- G06F16/3325—Reformulation based on results of preceding query
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/332—Query formulation
- G06F16/3329—Natural language query formulation or dialogue systems
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/3331—Query processing
- G06F16/3332—Query translation
- G06F16/3338—Query expansion
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/3331—Query processing
- G06F16/334—Query execution
- G06F16/3344—Query execution using natural language analysis
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/3331—Query processing
- G06F16/3349—Reuse of stored results of previous queries
Definitions
- This specification relates to handling queries from users.
- Computing systems may handle various queries from users.
- a query may be in the form of a sequence of words that make up a search query and a computing system may, in response to receiving the search query, provide search results responsive to the search query.
- a search query may be "Isaac Asimov books.”
- Other queries may be commands for a computing system to execute.
- a query may be a voice command of "Turn off lights in the living room” and the computing system may, in response to receiving an utterance of "Turn off lights the living room,” turn off the lights in a living room and provide an acknowledgement of "Lights have been turned off in the living room.”
- Still other queries may be questions for a computing system to provide an answer.
- a query may be a question of "What temperature is it outside” and the computing system may, in response, provide an answer of "The current outdoor temperature in Mountain View, CA is 70°F.”
- Abdalghani Abujabal et al (“Automated Template Generation for Question Answering over Knowledge Graphs", International World Wide Web Conferences Steering Committee (IW3C2), 2017, pages 1191 -1200, DOI: 10.1145/3038912.3052583 ) discusses a system that automatically learns utterance-query templates from user questions paired with their answers. The system is able to harness language compositionally for answering complex questions without having any templates for the entire question.
- US 2012/078888 discusses a method for generating answers to questions.
- the method comprises receiving an input query, decomposing the input query into a plurality of different subqueries and conducting a search in one or more data sources to identify at least one candidate answer to each of the subqueries.
- a ranking function is applied to each of the candidate answers to determine a ranking for each of these candidate answers, and for each of the subqueries, one of the candidate answers to the subquery is selected based on this ranking.
- Maciej Zembrzuski et al (“Automatic Speech Recognition Adaptation to the loT Domain Dialogue System", International Conference On Simulation, Modeling, And Programming For Autonomous Robots, 2017, Springer International Publishing, pages 215-226, DOI: 10.1007/978-3-319-60438-1_22 ) discusses error correction of the domain-specific output from the cloud Automatic Speech Recognition (ASR) system for Internet of Things (IoT) data collected in the process of applying voice control over home appliances.
- ASR Automatic Speech Recognition
- IoT Internet of Things
- US 2010/332235 discusses an intelligent home automation system located in a home which answers questions of a user speaking 'natural language'.
- the system is connected to, and may carry out the user's commands to control, any circuit, object, or system in the home.
- the system may interrupt a conversation to implement specific commands and resume the conversation after implementation.
- implementations include corresponding computer systems, apparatus, and computer programs recorded on one or more computer storage devices, each configured to perform the actions of the methods.
- a system of one or more computers can be configured to perform particular operations or actions by virtue of having software, firmware, hardware, or a combination of them installed on the system that in operation causes or cause the system to perform the actions.
- One or more computer programs can be configured to perform particular operations or actions by virtue of including instructions that, when executed by data processing apparatus, cause the apparatus to perform the actions.
- Allowing a system to generate multiple subqueries from a single query from a user may reduce the amount of time spend by the user to interact with the system and the number of interactions with the system needed.
- the system may enable a user provide a single compound query that includes a first query and a second query instead of needing a user to provide the first query to the system and then wait for the system to provide a response to the first query before the user provides the second query to the system. Allowing the use of a single compound query instead of multiple separate queries may also reduce the number of transmissions needed between a device and server. For example, instead of a device needing to send two respective transmissions to a server for two queries the device may instead send a single transmission with the compound query.
- Allowing a system to generate multiple subqueries from a single query from a user may reduce the amount of time spend by the user to interact with the system and the number of interactions with the system needed.
- the system may enable a user provide a single compound query that includes a first query and a second query instead of needing a user to provide the first query to the system and then wait for the system to provide a response to the first query before the user provides the second query to the system. Allowing the use of a single compound query instead of multiple separate queries may also reduce the number of transmissions needed between a device and server. For example, instead of a device needing to send two respective transmissions to a server for two queries the device may instead send a single transmission with the compound query.
- a user may desire that a system execute multiple queries. For example, a user may first say “OK Computer, turn on the lights,” wait for a speech-enabled device to respond with “lights turned on,” and then say “OK Computer, turn on some music.”
- this process may be time consuming and require multiple interactions by the user as the user may need to wait for the first query to execute before providing the second query. While identifying sub-queries within a sentence may be relatively straightforward for a human listener, identifying correct sub-queries in a sentence is not straightforward for speech-enabled devices.
- a system may generate multiple subqueries from a single query received from a user and then execute each of the subqueries without further interaction from the user.
- a query is not limited to a request for information such as a search operation and may not be a request at all.
- a query may be an instruction, a command, a declarative, etc. and may seek assistance, an action or inaction, a changing of settings, media content, etc.
- a sub query refers to a query that is generated from a portion of another query.
- a system receives an utterance of "turn on the lights and some music” and generates a first subquery of "turn on the lights” and a second subquery of "turn on some music.”
- the system In generating the multiple subqueries, the system generates various different sets of subqueries that include combinations of terms from the query received from the user. For example, the system may generate sets of two subqueries where each set corresponds to the query being split on a different "space" character in the query. In another example, the system may generate sets of two subqueries where each set corresponds to the query being split on different "and" that appear in a query. In yet another example, the system may generate a set of two subqueries based on determining that a query is listing multiple items and, in response, generate a sub query for each of the items.
- the system determines whether each of the sets include subqueries that result in the execution of valid operations.
- the system determines that the set of subqueries of "turn on the lights” and “turn on some music” includes subqueries that that result in voice action operations of "turn on lights” and “turn on music” to be executed. And since these are valid voice action operations, the system may determine the subqueries are objectively higher quality subqueries than subqueries that do not result in valid operations.
- the system then executes each of the subqueries.
- the system In response to determining that the set of subqueries of "turn on the lights” and “turn on some music” result in voice actions of "turn on lights” and “turn on music” to be executed, the system then executes the voice actions of "turn on lights” and "turn on music.” Whether an operation is valid may be determined with reference to a user's particular context, such as the devices that are available to the user. For example, while the subquery "turn on the lights” may be valid for a user that has lights that may be turned on by the system, the subquery may be invalid for a user that does not have any lights that may be turned on by the system.
- FIG. 1 illustrates a diagram of an example system 100 that generates subqueries from a query.
- the system 100 includes a subquery set generator 110, a subquery set scorer 120, a subquery set selector 130, and a subquery set responder 140.
- the subquery set generator 110 receives a query and generates one or more sets of subqueries from the query.
- the subquery set generator 110 may receive the query "What time is it in Turks and Caicos and what time is it now” and generate a first set of two subqueries of "What time is it in Turks” and "Caicos and what time is it now” and a second set of two subqueries of "What time is it in Turks and Caicos” and "what time is it now.”
- the query may be a query that was typed by a user or a query that is transcribed by an automated speech recognizer from an audio recording of an utterance.
- the subquery set generator 110 generates sets of subqueries by identifying positions of particular characters in the query and generating a first query from a first portion of the query before the position of the one or more particular characters in the query and generating a second query from a second portion of the query after the position of the one or more particular characters in the query.
- the subquery set generator 110 may identify that the particular characters of "and” occur in two different positions in the query "What time is it in Turks and Caicos and what time is it now” and, in response, generate a first set of subqueries where the query is split at the first position into “What time is it in Turks” and “Caicos and what time is it now” and a second set of subqueries where the query is split at the second position into "What time is it in Turks and Caicos” and “what time is it now.”
- the subquery set generator 110 may identify where all space characters occur in a query and generate different sets of subqueries where the query is split based on respective positions of spaces.
- the subquery set generator 110 may split the query "What time is it in Turks and Caicos and what time is it now” which has thirteen spaces into thirteen different sets of two subqueries where a first set includes the subqueries "What” and "time is it in Turks and Caicos and what time is it now," a second set includes the subqueries "What time” and “is it in Turks and Caicos and what time is it now,” etc.
- the subquery set generator 110 may additionally or alternatively use other approaches to generate sets of subqueries as described further in FIG. 2 .
- the subquery set scorer 120 obtains sets of subqueries and determines quality scores for each of the sets of subqueries. For example, the subquery set scorer 120 may obtain a first set of subqueries of "What time is it in Turks" and “Caicos and what time is it now” and determine a quality score of 30%. In another example, the subquery set scorer 120 may obtain a second set of subqueries of "What time is it in Turks and Caicos" and “what time is it now” and determine a quality score of 95%.
- a quality score for a set of subqueries may reflect a likelihood that a user will be satisfied by respective operations being executed using each of the two subqueries. For example, a quality score of 30% may reflect a 30% likelihood that a user will be satisfied by, or a 30% likelihood that the user will ultimately select, both a first operation being executed using the subquery "What time is it in Turks" as input and a second operation being executed using the subquery "Caicos and what time is it now” as input.
- a quality score of 95% may reflect a 95% likelihood that a user will be satisfied by, or a 95% likelihood that the user will ultimately select, both a first operation being executed using the subquery "What time is it in Turks and Caicos" as input and a second operation being executed using the subquery "What time is it now” as input.
- the quality score may be represented other than by a percentage.
- a quality score may be presented by a score between zero and ten with ten being the highest, a score between zero and ten with ten being the lowest, a grade between "A" and "F,” or some other representation.
- the quality score may reflect a statistical compliance with similar query patterns selected by other users or in other search sessions, suggesting a reduced likelihood of re-searching with a modified query, reducing the bandwidth usage for such re-searching, reducing the memory and processor demands and display real estate required for providing search results for multiple different subqueries in one search session, and other system-specific improvements.
- the subquery set scorer 120 may determine a quality score for a set of subqueries based at least on a frequency that a subquery in the set appears in a log of prior queries from multiple users.
- the subquery set scorer 120 may determine quality scores that reflect a greater likelihood for sets with subqueries that appear more frequently in a log of prior queries. For example, the subquery set scorer 120 may determine that a query "What time is it in Turks" appears semi-frequently in a log of prior queries but a query "Caicos and what time is it now" occurs very infrequently in a log of prior queries and, in response, determines a quality score of 30% for the set.
- the subquery set scorer 120 may determine that a query "What time is it in Turks and Caicos" appears frequently in a log of prior queries and a query "what time is it now” occurs very frequently in a log of prior queries and, in response, determines a quality score of 90% for the set.
- the log of prior queries from multiple users may be a log of queries previously received from all users of the system 100.
- the subquery set scorer 120 may determine a quality score for a set of subqueries based at least on a number of search results that are responsive to a subquery of the set.
- the subquery set scorer 120 may determine quality scores that reflect a greater likelihood for sets with subqueries that have a greater number of search results responsive to the subqueries. For example, the subquery set scorer 120 may determine that the subquery "what are some nearby bed" has few responsive search results and the subquery "breakfasts and what are some nearby attractions" also has few responsive search results and, in response, determine a score of 35% for the set including those two subqueries.
- the subquery set scorer 120 may determine that the subquery "what are some nearby bed and breakfasts" has many responsive search results and the subquery "what are some nearby attractions” also has many responsive search results and, in response, determine a score of 90% for the set including those two subqueries.
- the subquery set scorer 120 determines a quality score for a set of subqueries based at least on whether a subquery of the set corresponds to a voice action operation.
- a voice action operation may be an operation that may be executed in response to an utterance.
- the subquery set scorer 120 may determine quality scores that reflect a greater likelihood for sets with subqueries that correspond to voice actions. For example, the subquery set scorer 120 may determine that the subquery "turn on the lights" and the subquery "turn on some music" both correspond to known voice actions and, in response, determine a score of 100% for the set including the two subqueries.
- the subquery set scorer 120 may determine that the subquery "turn on the lights and turn” and the subquery "on some music" do not correspond to known voice actions and, in response, determine a score of 0% for the set including the two subqueries.
- the subquery set scorer 120 may determine a quality score for a set of subqueries based at least on whether a subquery of the set corresponds to a question with a known answer.
- a question with a known answer may be a question to which the system 100 is able to provide an answer that answers the question.
- a question with a known answer may be "When did the United States adopt the Declaration of Independence" and the known answer may be "July 4, 1776.”
- a question with a known answer may be "What day is Thanksgiving Day this year” and the known answer may be November 23, 2017.
- the system 100 may store pairs of questions and known answers so that for any question the system 100 can determine whether there is a known answer based on determining whether the question is stored in a pair with a known answer.
- the subquery set scorer 120 may determine a quality score for a set of subqueries based one or more of a number of terms in a subquery that are not in the query or a number of terms that are not in any subquery in the set but are in the query. For example, subquery set scorer 120 may determine a quality score that reflects a greater likelihood that a user will be satisfied by respective operations being executed using each of the two subqueries for sets with subqueries that include fewer words that do not appear in the query.
- the subquery set scorer 120 may determine a quality score that reflects a greater likelihood that a user will be satisfied by respective operations being executed using each of the two subqueries for sets with subqueries that include more of the words that do appear in the query.
- the subquery set scorer 120 may determine a quality score for a set of subqueries based at least on whether the subqueries match a phrase in a phrase model such as a phrase model associated with a search engine. For example, the subquery set scorer 120 may determine a quality score for a set of subqueries that is greater than a quality score for a second set of subqueries based on determining that the subqueries of the set of subqueries each include a phrase in a phrase model and only one of the subqueries of the second set of subqueries includes a phrase in the phrase model.
- the subquery set scorer 120 may determine a quality score for a set of subqueries based at least on whether the terms in the subqueries appear in search results that are responsive to searches run using the subqueries. For example, the subquery set scorer 120 may determine a quality score for a set of subqueries that is greater than a quality score for a second set of subqueries based on determining that all the terms of the subqueries of the set of subqueries appears at least once in the search results responsive to the subqueries and determining that all the terms of the subqueries of the second set of subqueries do not appear at least once in the search results responsive to the subqueries.
- the subquery set scorer 120 may determine the importance of each word in a query or subquery and weight the addition or absence of the word in determining a quality score. For example, the subquery set scorer 120 may determine entities are important so determine that the omission of any term for an entity from the query in the subqueries greatly lowers a quality score and the omission of any term for any non-entity from the query in the subqueries slightly lowers a quality score.
- the subquery set selector 130 obtains the sets of subqueries and selects one of the sets of subqueries based at least on the quality scores of the sets. For example, the subquery set selector 130 may obtain a first set of subqueries of "What time is it in Turks" and “Caicos and what time is it now” with a quality score of 30% and a second set of subqueries of "What time is it in Turks and Caicos” and "What time is it now” with a quality score of 95% and select the second set of subqueries based at least on that the quality score for the second set of subqueries is 95%, which is greater than the quality score of 30% for the first set.
- the subquery set selector 130 may select the set of subqueries, with the quality score that reflects that greatest likelihood that a user will be satisfied by respective operations being executed using each of the two subqueries, from among the multiple sets of subqueries. For example, the subquery set selector may determine that a quality score of 95% of a second set of subqueries reflects a greater likelihood that a user will be satisfied by respective operations being executed using each of the two subqueries than a quality score of 30% of a first set of subqueries and, in response, select the second set of subqueries.
- the subquery set selector 130 selects the set of subqueries based at least on determining that the quality score for the set of subqueries satisfies a quality threshold. For example, the subquery set selector 130 may select the set of subqueries with a quality score of 90% in response to determining that the quality score of 90% is greater than a quality threshold of 70%, 80%, 85%, etc., or some other quality threshold.
- a quality threshold may be a predetermined threshold that reflects that a user is likely to be satisfied by respective operations being executed using each of the two subqueries.
- the subquery set selector 130 may determine not to select any set of subqueries and may select the original query.
- the subquery set responder 140 obtains the set of queries that is selected and provides responses to the subqueries. For example, the subquery set responder 140 may obtain the selected set of subqueries of "What time is it in Turks and Caicos” and “what time is it now” and provide responses of "It's 4:34 PM in Turks and Caicos” and "It's 1:34 PM in Mountain View, California.”
- the subquery set responder 140 provides responses to the subqueries by providing the subqueries as inputs into respective operations and providing output of the respective operations as the responses to the subqueries. For example, the subquery set responder 140 may provide the subquery "What time is it in Turks and Caicos" to an operation that provides answers which provides a response of "it's 4:34 in Turks and Caicos.” The subquery set responder 140 provides the subquery "Turn on the lights” to a voice action operation which provides a response of "Lights have been turned on” and turns on lights. In some implementations, the subquery set responder 140 may provide the responses in one or more of an audio or visual form. For example, the subquery set responder 140 may provide the responses as text to be displayed or provide the responses as synthesized speech to be audibly output.
- the subquery set responder 140 may provide the subqueries sequentially as some subqueries may be dependent on other subqueries. For example, the subquery set responder 140 may first provide the subquery "Did Real Madrid win their last match" to an operation that provides answers and then provide the subquery "who do they play next” to the operation that provides answers. In the example, the operation may determine that "who" refers to "Real Madrid" in the prior query.
- the subquery set responder 140 may provide the responses to the subqueries individually. For example, the subquery set responder 140 may provide a first response "It's 4:34 in Turks and Caicos" and then provide the second response "It's 1:34 PM in Mountain View, California” after the user provides the query "What time is it in Turks and Caicos and what time is it now.” The responses may be provided as separate messages that are simultaneously displayed, in separate audio messages that are output one after another, or in some other manner. In some implementations, the subquery set responder 140 may also indicate how the query was parsed into subqueries.
- the subquery set responder 140 may output audio of "For the query, what time is it in Turks and Caicos, it's 4:34 in Turks and Caicos" and "For the query, what time is it now, it's 1:34 PM in Mountain View, California.”
- the subquery set responder 140 may cause to be displayed the text of "For the query, what time is it in Turks and Caicos, it's 4:34 in Turks and Caicos. For the query, what time is it now, it's 1:34 PM in Mountain View, California.”
- the subquery set selector 130 may obtain a quality score for the original query and determine whether to select the original query or the subquery set selector 130 based at least on the quality scores.
- an original query may be "What time is it in Turks and Caicos" and a quality score for the original query may be 97% and a quality score for a set of subqueries including "What time is it in Turks" and "Caicos" may be 35%.
- the subquery set selector 130 may determine to select the original query over the set of subqueries as the quality score for the original query reflects a greater likelihood that a user will be satisfied by an operation executed using the original query than operations executed using the subqueries.
- the subquery set generator 110, the subquery set scorer 120, the subquery set selector 130, and the subquery set responder 140 may be implemented on one or more computing systems.
- the subquery set generator 110 may receive a query from a device used by a user, e.g., a mobile computing device, a speech-enabled device, a laptop, a desktop computer, and the subquery set responder 140 may provide the responses to the device used by the user.
- the subquery set generator 110, the subquery set scorer 120, the subquery set selector 130, and the subquery set responder 140 may be implemented on a server that is in communication with a mobile computing device of a user over a network.
- the system 100 may generate sets of subqueries that include more than two subqueries. For example, the system 100 may take a query that has four "and” and generate four different sets of subqueries that each include three subqueries based on separating the query on all but one of the "and” in the query, the all but one "and” being a different "and” in the query for each set.
- the system 100 may generate subqueries from a query that compares multiple items. For example, the system 100 may obtain a query of "Who is older, Barack Obama or Michelle Obama,” generate a set of subqueries of "Barack Obama age” and “Michelle Obama age,” and then provide respective responses of fifty six and fifty three for the subqueries.
- the subquery set generator 110 may generate subqueries from a query that compares items based on determining that a query includes a comparative term and references to two or more items. For example, the subquery set generator 110 may determine that a query includes the comparative term "older” and also includes the terms "Barack Obama” and "Michelle Obama.”
- the subquery set generator 110 may map the comparative to an attribute. For example, the subquery set generator 110 may map the comparative term "older” to an attribute of "age.” In another example, the subquery set generator 110 may map the comparative term "taller" to an attribute of "height.” The subquery set generator 110 may then generate subqueries that each include the attribute and a corresponding item in the query, and provide the set of subqueries to the subquery set scorer 120 and the subquery set selector 130 for the system 100 to determine whether to provide respective responses to the subqueries or a response to the original query, as discussed above.
- the subquery set selector 130 may select to provide respective responses to the subqueries of "Barack Obama age” and “Michelle Obama age” instead of a single response to the query "Who is older, Barack Obama or Michelle Obama.”
- the subquery set selector 120 may select to provide responsive responses to the subqueries of "Burj Khalifa height” and "Empire State Building height” instead of a single response to the query "Which building is taller, Burj Khalifa or Empire State Building.”
- the subquery set generator 110 may map the comparative term to a base form term. For example, the subquery set generator 110 may map a comparative term "older” to a base form term of "old” or map a comparative term of "taller” to a base form term of "tall.” The subquery set generator 110 may then generate subqueries that each include the base form term and a corresponding item in the query, and provide the set of subqueries to the subquery set scorer 120 and the subquery set selector 130 for the system to determine whether to provide respective responses to the subqueries or a response to the original query, as discussed above.
- the subquery set selector 130 may select to provide respective responses to the subqueries of "How old is Barack Obama” and “How old is Michelle Obama” instead of a single response to the query, "Who is older, Barack Obama or Michelle Obama.”
- the subquery set selector 120 may select to provide responsive responses to the subqueries of "How tall is Burj Khalifa” and "How tall is Empire State Building” instead of a single response to the query "Which building is taller, Burj Khalifa or Empire State Building.”
- FIG. 2 is a block diagram of an example subquery set generator 202.
- the example subquery set generator 202 may be the subquery set generator 101 shown in FIG. 1 .
- the subquery set generator 202 includes an n-gram replacer 210, a list identifier 220, and a query expander 230.
- the n-gram replacer 210 of the subquery set generator 202 may receive a query and determine whether to replace any n-grams in the query with other n-grams. For example, the n-gram replacer 210 may obtain the query "What is the weather in Swiss ski resorts” and replace the n-gram "Swiss ski resorts” with the n-gram "Zermatt, St. Moritz, Davos, and Engelberg.” An n-gram may be a sequence of one or more words.
- the n-gram replacer 210 may determine whether to replace a n-gram in the query based on determining whether the n-gram is a query that is frequently used or has a known answer. For example, the n-gram replacer 210 may determine that the n-gram "Swiss ski resorts" is frequently searched for and a result of "Zermatt, St. Moritz, Davos, and Engelberg” is given in response to those searches and, in response, replace the n-gram "Swiss ski resorts" with "Zermatt, St. Moritz, Davos, and Engelberg” to obtain the query "What is the weather in Zermatt, St. Moritz, Davos, and Engelberg.”
- the list identifier 220 may identify lists in a query. For example, the list identifier 220 may obtain the query "What is the weather in Zermatt, St. Moritz, Davos, and Engelberg," identify that "Zermatt, St. Moritz, Davos, and Engelberg” is a list of items and, in response, output "What is the weather in [BEGIN LIST] Zermatt, St. Moritz, Davos, and Engelberg [END LIST]" that indicates where a list begins and where the list ends in the query.
- the list identifier 220 may identify a list by determining the presence of "and” and commas preceding an "and.” For example, the list identifier 220 may determine that "Zermatt, St. Moritz, Davos, and Engelberg” includes an "and” that is preceded by three commas so is a list with four items. In another example, the list identifier 220 may determine that "Barack and Michelle Obama” includes “and” so is a list with two items.
- the list identifier 220 may identify a list by determining the presence of multiple entities that are related to one another are also proximate to one another in the query. For example, the list identifier 220 may determine that "Zermatt,” “St. Moritz,” “Davos,” and “Engelberg” are all Swiss ski resorts and that the terms appear next to one another in "Zermatt, St. Moritz, Davos, and Engelberg” so that is a list with four items.
- the query expander 230 may obtain a query with an identified list and expand the query into a set of subqueries with a respective subquery for each item in the list. For example, the query expander 230 may obtain "What is the weather in [BEGIN LIST] Zermatt, St. Moritz, Davos, and Engelberg [END LIST]” and expand that into a set of subqueries including "What is the weather in Zermatt,” "What is the weather in St. Moritz,” “What is the weather in Davos,” “What is the weather in Engelberg.”
- the query expander 230 may expand the query into the set of subqueries by taking a portion of a query that occurs before the list and then prepending that to each of the items in the list. For example, the query expander 230 may take "What is the weather in” and then prepend that to each of "Zermatt,” “St. Moritz,” “Davos,” and “Engelberg” to generate the respective subqueries of the set.
- FIG. 3 is a flow diagram of a process 300 for generating subqueries from a query.
- Process 300 can be implemented using system 100 described above.
- the process 300 may be performed by the subquery set generator 110, the subquery set scorer 120, the subquery set selector 130, and the subquery set responder 140.
- the process 300 includes obtaining a query (310).
- the subquery set generator 110 obtains the query "Turn on the lights and turn on some music.”
- the process 300 includes generating a set of subqueries from the query (320).
- the subquery set generator 110 obtains the query "Turn on the lights and turn on some music” and generates a set of subqueries "turn on the lights” and “turn on some music.”
- the process 300 includes determining a quality score for the set of two subqueries (330).
- the subquery set scorer 120 may generate a quality score of 98% for the set of subqueries including "turn on the lights” and "turn on some music.”
- the process 300 includes determining whether the quality score for the set of two subqueries satisfies a quality threshold (340). For example, the subquery set selector 130 may determine that the quality score of 98% for the set of subqueries including "turn on the lights" and "turn on some music" satisfies a quality threshold of 80%. In another example, the subquery set selector 130 may determine that a quality score of 40% for a set of subqueries does not satisfy a quality threshold of 70%.
- the process 300 includes providing a first response to the first subquery and a second response to the second subquery (350).
- the subquery set responder 140 provides the first subquery to a voice action operation and receives a first response of "lights turned on,” provides a second subquery to a voice action operation and receives a second response of "music turned on,” and provides the first response of "lights turned on” and the second response of "music turned on” for output to a user.
- the process 300 provides the first response and the second response in response to determining that the quality score for the set of two subqueries satisfies a quality threshold. For example, if the quality score for a set of subqueries does not satisfy a quality threshold, then the subquery set responder 140 may not provide responses for the subqueries and may instead provide a response to the original query.
- FIG. 4 shows an example of a computing device 400 and a mobile computing device 450 that can be used to implement the techniques described here.
- the computing device 400 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers.
- the mobile computing device 450 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smart-phones, and other similar computing devices.
- the components shown here, their connections and relationships, and their functions, are meant to be examples only, and are not meant to be limiting.
- the computing device 400 includes a processor 402, a memory 404, a storage device 406, a high-speed interface 408 connecting to the memory 404 and multiple high-speed expansion ports 410, and a low-speed interface 412 connecting to a low-speed expansion port 414 and the storage device 406.
- Each of the processor 402, the memory 404, the storage device 406, the high-speed interface 408, the high-speed expansion ports 410, and the low-speed interface 412 are interconnected using various busses, and may be mounted on a common motherboard or in other manners as appropriate.
- the processor 402 can process instructions for execution within the computing device 400, including instructions stored in the memory 404 or on the storage device 406 to display graphical information for a graphical user interface (GUI) on an external input/output device, such as a display 416 coupled to the high-speed interface 408.
- GUI graphical user interface
- multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory.
- multiple computing devices may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system).
- the memory 404 stores information within the computing device 400.
- the memory 404 is a volatile memory unit or units.
- the memory 404 is a non-volatile memory unit or units.
- the memory 404 may also be another form of computer-readable medium, such as a magnetic or optical disk.
- the storage device 406 is capable of providing mass storage for the computing device 400.
- the storage device 406 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations.
- Instructions can be stored in an information carrier.
- the instructions when executed by one or more processing devices (for example, processor 402), perform one or more methods, such as those described above.
- the instructions can also be stored by one or more storage devices such as computer- or machine-readable mediums (for example, the memory 404, the storage device 406, or memory on the processor 402).
- the high-speed interface 408 manages bandwidth-intensive operations for the computing device 400, while the low-speed interface 412 manages lower bandwidth-intensive operations. Such allocation of functions is an example only.
- the high-speed interface 408 is coupled to the memory 404, the display 416 (e.g., through a graphics processor or accelerator), and to the high-speed expansion ports 410, which may accept various expansion cards (not shown).
- the low-speed interface 412 is coupled to the storage device 406 and the low-speed expansion port 414.
- the low-speed expansion port 414 which may include various communication ports (e.g., USB, Bluetooth, Ethernet, wireless Ethernet) may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- input/output devices such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter.
- the computing device 400 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a standard server 420, or multiple times in a group of such servers. In addition, it may be implemented in a personal computer such as a laptop computer 422. It may also be implemented as part of a rack server system 424. Alternatively, components from the computing device 400 may be combined with other components in a mobile device (not shown), such as a mobile computing device 450. Each of such devices may contain one or more of the computing device 400 and the mobile computing device 450, and an entire system may be made up of multiple computing devices communicating with each other.
- the mobile computing device 450 includes a processor 452, a memory 464, an input/output device such as a display 454, a communication interface 466, and a transceiver 468, among other components.
- the mobile computing device 450 may also be provided with a storage device, such as a micro-drive or other device, to provide additional storage.
- a storage device such as a micro-drive or other device, to provide additional storage.
- Each of the processor 452, the memory 464, the display 454, the communication interface 466, and the transceiver 468, are interconnected using various buses, and several of the components may be mounted on a common motherboard or in other manners as appropriate.
- the processor 452 can execute instructions within the mobile computing device 450, including instructions stored in the memory 464.
- the processor 452 may be implemented as a chipset of chips that include separate and multiple analog and digital processors.
- the processor 452 may provide, for example, for coordination of the other components of the mobile computing device 450, such as control of user interfaces, applications run by the mobile computing device 450, and wireless communication by the mobile computing device 450.
- the processor 452 may communicate with a user through a control interface 458 and a display interface 456 coupled to the display 454.
- the display 454 may be, for example, a TFT (Thin-Film-Transistor Liquid Crystal Display) display or an OLED (Organic Light Emitting Diode) display, or other appropriate display technology.
- the display interface 456 may comprise appropriate circuitry for driving the display 454 to present graphical and other information to a user.
- the control interface 458 may receive commands from a user and convert them for submission to the processor 452.
- an external interface 462 may provide communication with the processor 452, so as to enable near area communication of the mobile computing device 450 with other devices.
- the external interface 462 may provide, for example, for wired communication in some implementations, or for wireless communication in other implementations, and multiple interfaces may also be used.
- the memory 464 stores information within the mobile computing device 450.
- the memory 464 can be implemented as one or more of a computer-readable medium or media, a volatile memory unit or units, or a non-volatile memory unit or units.
- An expansion memory 474 may also be provided and connected to the mobile computing device 450 through an expansion interface 472, which may include, for example, a SIMM (Single In Line Memory Module) card interface.
- SIMM Single In Line Memory Module
- the expansion memory 474 may provide extra storage space for the mobile computing device 450, or may also store applications or other information for the mobile computing device 450.
- the expansion memory 474 may include instructions to carry out or supplement the processes described above, and may include secure information also.
- the expansion memory 474 may be provided as a security module for the mobile computing device 450, and may be programmed with instructions that permit secure use of the mobile computing device 450.
- secure applications may be provided via the SIMM cards, along with additional information, such as placing identifying information on the SIMM card in a non-hackable manner.
- the memory may include, for example, flash memory and/or NVRAM memory (non-volatile random access memory), as discussed below.
- instructions are stored in an information carrier that the instructions, when executed by one or more processing devices (for example, processor 452), perform one or more methods, such as those described above.
- the instructions can also be stored by one or more storage devices, such as one or more computer- or machine-readable mediums (for example, the memory 464, the expansion memory 474, or memory on the processor 452).
- the instructions can be received in a propagated signal, for example, over the transceiver 468 or the external interface 462.
- the mobile computing device 450 may communicate wirelessly through the communication interface 466, which may include digital signal processing circuitry where necessary.
- the communication interface 466 may provide for communications under various modes or protocols, such as GSM voice calls (Global System for Mobile communications), SMS (Short Message Service), EMS (Enhanced Messaging Service), or MMS messaging (Multimedia Messaging Service), CDMA (code division multiple access), TDMA (time division multiple access), PDC (Personal Digital Cellular), WCDMA (Wideband Code Division Multiple Access), CDMA2000, or GPRS (General Packet Radio Service), among others.
- GSM voice calls Global System for Mobile communications
- SMS Short Message Service
- EMS Enhanced Messaging Service
- MMS messaging Multimedia Messaging Service
- CDMA code division multiple access
- TDMA time division multiple access
- PDC Personal Digital Cellular
- WCDMA Wideband Code Division Multiple Access
- CDMA2000 Code Division Multiple Access
- GPRS General Packet Radio Service
- a GPS (Global Positioning System) receiver module 470 may provide additional navigation- and location-related wireless data to the mobile computing device 450, which may be used as appropriate by applications running on the mobile computing device 450.
- the mobile computing device 450 may also communicate audibly using an audio codec 460, which may receive spoken information from a user and convert it to usable digital information.
- the audio codec 460 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of the mobile computing device 450.
- Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on the mobile computing device 450.
- the mobile computing device 450 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as a cellular telephone 480. It may also be implemented as part of a smart-phone 482, personal digital assistant, or other similar mobile device.
- implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs, computer hardware, firmware, software, and/or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- These computer programs also known as programs, software, software applications or code, include machine instructions for a programmable processor, and can be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly/machine language.
- a program can be stored in a portion of a file that holds other programs or data, e.g., one or more scripts stored in a markup language document, in a single file dedicated to the program in question, or in multiple coordinated files, e.g., files that store one or more modules, sub-programs, or portions of code.
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- machine-readable medium refers to any computer program product, apparatus and/or device, e.g., magnetic discs, optical disks, memory, Programmable Logic devices (PLDs) used to provide machine instructions and/or data to a programmable processor, including a machine-readable medium that receives machine instructions as a machine-readable signal.
- machine-readable signal refers to any signal used to provide machine instructions and/or data to a programmable processor.
- the systems and techniques described here can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- a keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- the systems and techniques described here can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component such as an application server, or that includes a front-end component such as a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here, or any combination of such back-end, middleware, or front-end components.
- the components of the system can be interconnected by any form or medium of digital data communication such as, a communication network. Examples of communication networks include a local area network ("LAN”), a wide area network (“WAN”), and the Internet.
- LAN local area network
- WAN wide area network
- the Internet the global information network
- the computing system can include clients and servers.
- a client and server are generally remote from each other and typically interact through a communication network.
- the relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- a user may be provided with controls allowing the user to make an election as to both if and when systems, programs or features described herein may enable collection of user information (e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current location), and if the user is sent content or communications from a server.
- user information e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current location
- certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information is removed.
- a user's identity may be treated so that no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined.
- location information such as to a city, ZIP code, or state level
- the user may have control over what information is collected about the user, how that information is used, and what information is provided to the user.
Description
- This specification relates to handling queries from users.
- Computing systems may handle various queries from users. For example, a query may be in the form of a sequence of words that make up a search query and a computing system may, in response to receiving the search query, provide search results responsive to the search query. For example, a search query may be "Isaac Asimov books." Other queries may be commands for a computing system to execute.
- For example, a query may be a voice command of "Turn off lights in the living room" and the computing system may, in response to receiving an utterance of "Turn off lights the living room," turn off the lights in a living room and provide an acknowledgement of "Lights have been turned off in the living room." Still other queries may be questions for a computing system to provide an answer. For example, a query may be a question of "What temperature is it outside" and the computing system may, in response, provide an answer of "The current outdoor temperature in Mountain View, CA is 70°F."
- Abdalghani Abujabal et al ("Automated Template Generation for Question Answering over Knowledge Graphs", International World Wide Web Conferences Steering Committee (IW3C2), 2017, pages 1191 -1200, DOI: 10.1145/3038912.3052583) discusses a system that automatically learns utterance-query templates from user questions paired with their answers. The system is able to harness language compositionally for answering complex questions without having any templates for the entire question.
-
US 2012/078888 (A1 ) discusses a method for generating answers to questions. The method comprises receiving an input query, decomposing the input query into a plurality of different subqueries and conducting a search in one or more data sources to identify at least one candidate answer to each of the subqueries. A ranking function is applied to each of the candidate answers to determine a ranking for each of these candidate answers, and for each of the subqueries, one of the candidate answers to the subquery is selected based on this ranking. - Rosie Jones et al ("Generating query substitutions", Proceedings Of The 15th International Conference On World Wide Web, 2006, pages 387-396, DOI: 10.1145/1135777.1135835) discusses query substitution, that is, generating a new query to replace a user's original search query. The technique uses modifications based on typical substitutions web searches make to their queries. In this way the new query is strongly related to the original query, containing terms closely related to all of the original terms.
- Maciej Zembrzuski et al ("Automatic Speech Recognition Adaptation to the loT Domain Dialogue System", International Conference On Simulation, Modeling, And Programming For Autonomous Robots, 2017, Springer International Publishing, pages 215-226, DOI: 10.1007/978-3-319-60438-1_22) discusses error correction of the domain-specific output from the cloud Automatic Speech Recognition (ASR) system for Internet of Things (IoT) data collected in the process of applying voice control over home appliances.
-
US 2010/332235 (A1 ) discusses an intelligent home automation system located in a home which answers questions of a user speaking 'natural language'. The system is connected to, and may carry out the user's commands to control, any circuit, object, or system in the home. The system may interrupt a conversation to implement specific commands and resume the conversation after implementation. - In general, one innovative aspect of the subject matter described in this specification is embodied in a method in accordance with appended independent claim 1.
- Other implementations include corresponding computer systems, apparatus, and computer programs recorded on one or more computer storage devices, each configured to perform the actions of the methods. A system of one or more computers can be configured to perform particular operations or actions by virtue of having software, firmware, hardware, or a combination of them installed on the system that in operation causes or cause the system to perform the actions. One or more computer programs can be configured to perform particular operations or actions by virtue of including instructions that, when executed by data processing apparatus, cause the apparatus to perform the actions.
- Particular embodiments of the subject matter described in this specification can be implemented so as to realize one or more of the following advantages. Allowing a system to generate multiple subqueries from a single query from a user may reduce the amount of time spend by the user to interact with the system and the number of interactions with the system needed. For example, the system may enable a user provide a single compound query that includes a first query and a second query instead of needing a user to provide the first query to the system and then wait for the system to provide a response to the first query before the user provides the second query to the system. Allowing the use of a single compound query instead of multiple separate queries may also reduce the number of transmissions needed between a device and server. For example, instead of a device needing to send two respective transmissions to a server for two queries the device may instead send a single transmission with the compound query.
- Particular embodiments of the subject matter described in this specification can be implemented so as to realize one or more of the following advantages. Allowing a system to generate multiple subqueries from a single query from a user may reduce the amount of time spend by the user to interact with the system and the number of interactions with the system needed. For example, the system may enable a user provide a single compound query that includes a first query and a second query instead of needing a user to provide the first query to the system and then wait for the system to provide a response to the first query before the user provides the second query to the system. Allowing the use of a single compound query instead of multiple separate queries may also reduce the number of transmissions needed between a device and server. For example, instead of a device needing to send two respective transmissions to a server for two queries the device may instead send a single transmission with the compound query.
- The details of one or more implementations of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features, aspects, and advantages of the subject matter will become apparent from the description, the drawings, and the claims.
-
-
FIG. 1 illustrates a block diagram of an example system that generates subqueries from a query. -
FIG. 2 is a block diagram of an example subquery set generator. -
FIG. 3 is a flow diagram of an example process for generating subqueries from a query. -
FIG. 4 is a block diagram of a computing system that can be used in connection with computer-implemented methods described in this specification. - Like reference numbers and designations in the various drawings indicate like elements.
- A user may desire that a system execute multiple queries. For example, a user may first say "OK Computer, turn on the lights," wait for a speech-enabled device to respond with "lights turned on," and then say "OK Computer, turn on some music." However, this process may be time consuming and require multiple interactions by the user as the user may need to wait for the first query to execute before providing the second query. While identifying sub-queries within a sentence may be relatively straightforward for a human listener, identifying correct sub-queries in a sentence is not straightforward for speech-enabled devices.
- Described below are system and method for generating subqueries from a query. Instead of executing only a single query per interaction with a user, a system may generate multiple subqueries from a single query received from a user and then execute each of the subqueries without further interaction from the user. A query, as appears in this description, is not limited to a request for information such as a search operation and may not be a request at all. For example, in addition to a request for information, a query may be an instruction, a command, a declarative, etc. and may seek assistance, an action or inaction, a changing of settings, media content, etc.
- A sub query refers to a query that is generated from a portion of another query. A system receives an utterance of "turn on the lights and some music" and generates a first subquery of "turn on the lights" and a second subquery of "turn on some music."
- In generating the multiple subqueries, the system generates various different sets of subqueries that include combinations of terms from the query received from the user. For example, the system may generate sets of two subqueries where each set corresponds to the query being split on a different "space" character in the query. In another example, the system may generate sets of two subqueries where each set corresponds to the query being split on different "and" that appear in a query. In yet another example, the system may generate a set of two subqueries based on determining that a query is listing multiple items and, in response, generate a sub query for each of the items.
- The system determines whether each of the sets include subqueries that result in the execution of valid operations. The system determines that the set of subqueries of "turn on the lights" and "turn on some music" includes subqueries that that result in voice action operations of "turn on lights" and "turn on music" to be executed. And since these are valid voice action operations, the system may determine the subqueries are objectively higher quality subqueries than subqueries that do not result in valid operations. In response to determining that a set of subqueries result in the execution of valid operations, the system then executes each of the subqueries. In response to determining that the set of subqueries of "turn on the lights" and "turn on some music" result in voice actions of "turn on lights" and "turn on music" to be executed, the system then executes the voice actions of "turn on lights" and "turn on music." Whether an operation is valid may be determined with reference to a user's particular context, such as the devices that are available to the user. For example, while the subquery "turn on the lights" may be valid for a user that has lights that may be turned on by the system, the subquery may be invalid for a user that does not have any lights that may be turned on by the system.
- These features and additional features are described in more detail below.
-
FIG. 1 illustrates a diagram of anexample system 100 that generates subqueries from a query. Thesystem 100 includes asubquery set generator 110, asubquery set scorer 120, asubquery set selector 130, and asubquery set responder 140. - The subquery set
generator 110 receives a query and generates one or more sets of subqueries from the query. For example, thesubquery set generator 110 may receive the query "What time is it in Turks and Caicos and what time is it now" and generate a first set of two subqueries of "What time is it in Turks" and "Caicos and what time is it now" and a second set of two subqueries of "What time is it in Turks and Caicos" and "what time is it now." The query may be a query that was typed by a user or a query that is transcribed by an automated speech recognizer from an audio recording of an utterance. - The subquery set
generator 110 generates sets of subqueries by identifying positions of particular characters in the query and generating a first query from a first portion of the query before the position of the one or more particular characters in the query and generating a second query from a second portion of the query after the position of the one or more particular characters in the query. For example, thesubquery set generator 110 may identify that the particular characters of "and" occur in two different positions in the query "What time is it in Turks and Caicos and what time is it now" and, in response, generate a first set of subqueries where the query is split at the first position into "What time is it in Turks" and "Caicos and what time is it now" and a second set of subqueries where the query is split at the second position into "What time is it in Turks and Caicos" and "what time is it now." - In another example, the
subquery set generator 110 may identify where all space characters occur in a query and generate different sets of subqueries where the query is split based on respective positions of spaces. In the example, thesubquery set generator 110 may split the query "What time is it in Turks and Caicos and what time is it now" which has thirteen spaces into thirteen different sets of two subqueries where a first set includes the subqueries "What" and "time is it in Turks and Caicos and what time is it now," a second set includes the subqueries "What time" and "is it in Turks and Caicos and what time is it now," etc. - The subquery set
generator 110 may additionally or alternatively use other approaches to generate sets of subqueries as described further inFIG. 2 . - The subquery set
scorer 120 obtains sets of subqueries and determines quality scores for each of the sets of subqueries. For example, thesubquery set scorer 120 may obtain a first set of subqueries of "What time is it in Turks" and "Caicos and what time is it now" and determine a quality score of 30%. In another example, thesubquery set scorer 120 may obtain a second set of subqueries of "What time is it in Turks and Caicos" and "what time is it now" and determine a quality score of 95%. - A quality score for a set of subqueries may reflect a likelihood that a user will be satisfied by respective operations being executed using each of the two subqueries. For example, a quality score of 30% may reflect a 30% likelihood that a user will be satisfied by, or a 30% likelihood that the user will ultimately select, both a first operation being executed using the subquery "What time is it in Turks" as input and a second operation being executed using the subquery "Caicos and what time is it now" as input. In another example, a quality score of 95% may reflect a 95% likelihood that a user will be satisfied by, or a 95% likelihood that the user will ultimately select, both a first operation being executed using the subquery "What time is it in Turks and Caicos" as input and a second operation being executed using the subquery "What time is it now" as input. The quality score may be represented other than by a percentage. For example, a quality score may be presented by a score between zero and ten with ten being the highest, a score between zero and ten with ten being the lowest, a grade between "A" and "F," or some other representation.
- The quality score may reflect a statistical compliance with similar query patterns selected by other users or in other search sessions, suggesting a reduced likelihood of re-searching with a modified query, reducing the bandwidth usage for such re-searching, reducing the memory and processor demands and display real estate required for providing search results for multiple different subqueries in one search session, and other system-specific improvements.
- The subquery set
scorer 120 may determine a quality score for a set of subqueries based at least on a frequency that a subquery in the set appears in a log of prior queries from multiple users. The subquery setscorer 120 may determine quality scores that reflect a greater likelihood for sets with subqueries that appear more frequently in a log of prior queries. For example, thesubquery set scorer 120 may determine that a query "What time is it in Turks" appears semi-frequently in a log of prior queries but a query "Caicos and what time is it now" occurs very infrequently in a log of prior queries and, in response, determines a quality score of 30% for the set. In another example, thesubquery set scorer 120 may determine that a query "What time is it in Turks and Caicos" appears frequently in a log of prior queries and a query "what time is it now" occurs very frequently in a log of prior queries and, in response, determines a quality score of 90% for the set. The log of prior queries from multiple users may be a log of queries previously received from all users of thesystem 100. - Additionally or alternatively, the
subquery set scorer 120 may determine a quality score for a set of subqueries based at least on a number of search results that are responsive to a subquery of the set. The subquery setscorer 120 may determine quality scores that reflect a greater likelihood for sets with subqueries that have a greater number of search results responsive to the subqueries. For example, thesubquery set scorer 120 may determine that the subquery "what are some nearby bed" has few responsive search results and the subquery "breakfasts and what are some nearby attractions" also has few responsive search results and, in response, determine a score of 35% for the set including those two subqueries. In another example, thesubquery set scorer 120 may determine that the subquery "what are some nearby bed and breakfasts" has many responsive search results and the subquery "what are some nearby attractions" also has many responsive search results and, in response, determine a score of 90% for the set including those two subqueries. - The subquery set
scorer 120 determines a quality score for a set of subqueries based at least on whether a subquery of the set corresponds to a voice action operation. A voice action operation may be an operation that may be executed in response to an utterance. The subquery setscorer 120 may determine quality scores that reflect a greater likelihood for sets with subqueries that correspond to voice actions. For example, thesubquery set scorer 120 may determine that the subquery "turn on the lights" and the subquery "turn on some music" both correspond to known voice actions and, in response, determine a score of 100% for the set including the two subqueries. In another example, thesubquery set scorer 120 may determine that the subquery "turn on the lights and turn" and the subquery "on some music" do not correspond to known voice actions and, in response, determine a score of 0% for the set including the two subqueries. - Additionally or alternatively, the
subquery set scorer 120 may determine a quality score for a set of subqueries based at least on whether a subquery of the set corresponds to a question with a known answer. A question with a known answer may be a question to which thesystem 100 is able to provide an answer that answers the question. For example, a question with a known answer may be "When did the United States adopt the Declaration of Independence" and the known answer may be "July 4, 1776." In another example, a question with a known answer may be "What day is Thanksgiving Day this year" and the known answer may be November 23, 2017. Thesystem 100 may store pairs of questions and known answers so that for any question thesystem 100 can determine whether there is a known answer based on determining whether the question is stored in a pair with a known answer. - Additionally or alternatively, the
subquery set scorer 120 may determine a quality score for a set of subqueries based one or more of a number of terms in a subquery that are not in the query or a number of terms that are not in any subquery in the set but are in the query. For example, subquery setscorer 120 may determine a quality score that reflects a greater likelihood that a user will be satisfied by respective operations being executed using each of the two subqueries for sets with subqueries that include fewer words that do not appear in the query. In another example, thesubquery set scorer 120 may determine a quality score that reflects a greater likelihood that a user will be satisfied by respective operations being executed using each of the two subqueries for sets with subqueries that include more of the words that do appear in the query. - Additionally or alternatively, the
subquery set scorer 120 may determine a quality score for a set of subqueries based at least on whether the subqueries match a phrase in a phrase model such as a phrase model associated with a search engine. For example, thesubquery set scorer 120 may determine a quality score for a set of subqueries that is greater than a quality score for a second set of subqueries based on determining that the subqueries of the set of subqueries each include a phrase in a phrase model and only one of the subqueries of the second set of subqueries includes a phrase in the phrase model. Additionally or alternatively, thesubquery set scorer 120 may determine a quality score for a set of subqueries based at least on whether the terms in the subqueries appear in search results that are responsive to searches run using the subqueries. For example, thesubquery set scorer 120 may determine a quality score for a set of subqueries that is greater than a quality score for a second set of subqueries based on determining that all the terms of the subqueries of the set of subqueries appears at least once in the search results responsive to the subqueries and determining that all the terms of the subqueries of the second set of subqueries do not appear at least once in the search results responsive to the subqueries. - In some implementations, the
subquery set scorer 120 may determine the importance of each word in a query or subquery and weight the addition or absence of the word in determining a quality score. For example, thesubquery set scorer 120 may determine entities are important so determine that the omission of any term for an entity from the query in the subqueries greatly lowers a quality score and the omission of any term for any non-entity from the query in the subqueries slightly lowers a quality score. - The subquery set
selector 130 obtains the sets of subqueries and selects one of the sets of subqueries based at least on the quality scores of the sets. For example, the subquery setselector 130 may obtain a first set of subqueries of "What time is it in Turks" and "Caicos and what time is it now" with a quality score of 30% and a second set of subqueries of "What time is it in Turks and Caicos" and "What time is it now" with a quality score of 95% and select the second set of subqueries based at least on that the quality score for the second set of subqueries is 95%, which is greater than the quality score of 30% for the first set. - The subquery set
selector 130 may select the set of subqueries, with the quality score that reflects that greatest likelihood that a user will be satisfied by respective operations being executed using each of the two subqueries, from among the multiple sets of subqueries. For example, the subquery set selector may determine that a quality score of 95% of a second set of subqueries reflects a greater likelihood that a user will be satisfied by respective operations being executed using each of the two subqueries than a quality score of 30% of a first set of subqueries and, in response, select the second set of subqueries. - The subquery set
selector 130 selects the set of subqueries based at least on determining that the quality score for the set of subqueries satisfies a quality threshold. For example, the subquery setselector 130 may select the set of subqueries with a quality score of 90% in response to determining that the quality score of 90% is greater than a quality threshold of 70%, 80%, 85%, etc., or some other quality threshold. A quality threshold may be a predetermined threshold that reflects that a user is likely to be satisfied by respective operations being executed using each of the two subqueries. In implementations, if the subquery setselector 130 determines that no set of subqueries has a quality score that satisfies the quality threshold, then the subquery setselector 130 may determine not to select any set of subqueries and may select the original query. - The subquery set
responder 140 obtains the set of queries that is selected and provides responses to the subqueries. For example, the subquery setresponder 140 may obtain the selected set of subqueries of "What time is it in Turks and Caicos" and "what time is it now" and provide responses of "It's 4:34 PM in Turks and Caicos" and "It's 1:34 PM in Mountain View, California." - The subquery set
responder 140 provides responses to the subqueries by providing the subqueries as inputs into respective operations and providing output of the respective operations as the responses to the subqueries. For example, the subquery setresponder 140 may provide the subquery "What time is it in Turks and Caicos" to an operation that provides answers which provides a response of "it's 4:34 in Turks and Caicos." The subquery setresponder 140 provides the subquery "Turn on the lights" to a voice action operation which provides a response of "Lights have been turned on" and turns on lights. In some implementations, the subquery setresponder 140 may provide the responses in one or more of an audio or visual form. For example, the subquery setresponder 140 may provide the responses as text to be displayed or provide the responses as synthesized speech to be audibly output. - The subquery set
responder 140 may provide the subqueries sequentially as some subqueries may be dependent on other subqueries. For example, the subquery setresponder 140 may first provide the subquery "Did Real Madrid win their last match" to an operation that provides answers and then provide the subquery "who do they play next" to the operation that provides answers. In the example, the operation may determine that "who" refers to "Real Madrid" in the prior query. - In some implementations, the subquery set
responder 140 may provide the responses to the subqueries individually. For example, the subquery setresponder 140 may provide a first response "It's 4:34 in Turks and Caicos" and then provide the second response "It's 1:34 PM in Mountain View, California" after the user provides the query "What time is it in Turks and Caicos and what time is it now." The responses may be provided as separate messages that are simultaneously displayed, in separate audio messages that are output one after another, or in some other manner. In some implementations, the subquery setresponder 140 may also indicate how the query was parsed into subqueries. For example, the subquery setresponder 140 may output audio of "For the query, what time is it in Turks and Caicos, it's 4:34 in Turks and Caicos" and "For the query, what time is it now, it's 1:34 PM in Mountain View, California." In another example, the subquery setresponder 140 may cause to be displayed the text of "For the query, what time is it in Turks and Caicos, it's 4:34 in Turks and Caicos. For the query, what time is it now, it's 1:34 PM in Mountain View, California." - In some implementations, the subquery set
selector 130 may obtain a quality score for the original query and determine whether to select the original query or the subquery setselector 130 based at least on the quality scores. For example, an original query may be "What time is it in Turks and Caicos" and a quality score for the original query may be 97% and a quality score for a set of subqueries including "What time is it in Turks" and "Caicos" may be 35%. In the example, the subquery setselector 130 may determine to select the original query over the set of subqueries as the quality score for the original query reflects a greater likelihood that a user will be satisfied by an operation executed using the original query than operations executed using the subqueries. - The subquery set
generator 110, thesubquery set scorer 120, the subquery setselector 130, and the subquery setresponder 140 may be implemented on one or more computing systems. The subquery setgenerator 110 may receive a query from a device used by a user, e.g., a mobile computing device, a speech-enabled device, a laptop, a desktop computer, and the subquery setresponder 140 may provide the responses to the device used by the user. For example, thesubquery set generator 110, thesubquery set scorer 120, the subquery setselector 130, and the subquery setresponder 140 may be implemented on a server that is in communication with a mobile computing device of a user over a network. - In some implementations, the
system 100 may generate sets of subqueries that include more than two subqueries. For example, thesystem 100 may take a query that has four "and" and generate four different sets of subqueries that each include three subqueries based on separating the query on all but one of the "and" in the query, the all but one "and" being a different "and" in the query for each set. - Additionally or alternatively, the
system 100 may generate subqueries from a query that compares multiple items. For example, thesystem 100 may obtain a query of "Who is older, Barack Obama or Michelle Obama," generate a set of subqueries of "Barack Obama age" and "Michelle Obama age," and then provide respective responses of fifty six and fifty three for the subqueries. The subquery setgenerator 110 may generate subqueries from a query that compares items based on determining that a query includes a comparative term and references to two or more items. For example, thesubquery set generator 110 may determine that a query includes the comparative term "older" and also includes the terms "Barack Obama" and "Michelle Obama." - In response to determining that a query includes a comparative term and references to two or more items, the
subquery set generator 110 may map the comparative to an attribute. For example, thesubquery set generator 110 may map the comparative term "older" to an attribute of "age." In another example, thesubquery set generator 110 may map the comparative term "taller" to an attribute of "height." The subquery setgenerator 110 may then generate subqueries that each include the attribute and a corresponding item in the query, and provide the set of subqueries to thesubquery set scorer 120 and the subquery setselector 130 for thesystem 100 to determine whether to provide respective responses to the subqueries or a response to the original query, as discussed above. For example, the subquery setselector 130 may select to provide respective responses to the subqueries of "Barack Obama age" and "Michelle Obama age" instead of a single response to the query "Who is older, Barack Obama or Michelle Obama." In another example, the subquery setselector 120 may select to provide responsive responses to the subqueries of "Burj Khalifa height" and "Empire State Building height" instead of a single response to the query "Which building is taller, Burj Khalifa or Empire State Building." - Additionally or alternatively, in response to determining that a query includes a comparative term and references to two or more items, the
subquery set generator 110 may map the comparative term to a base form term. For example, thesubquery set generator 110 may map a comparative term "older" to a base form term of "old" or map a comparative term of "taller" to a base form term of "tall." The subquery setgenerator 110 may then generate subqueries that each include the base form term and a corresponding item in the query, and provide the set of subqueries to thesubquery set scorer 120 and the subquery setselector 130 for the system to determine whether to provide respective responses to the subqueries or a response to the original query, as discussed above. For example, the subquery setselector 130 may select to provide respective responses to the subqueries of "How old is Barack Obama" and "How old is Michelle Obama" instead of a single response to the query, "Who is older, Barack Obama or Michelle Obama." In another example, the subquery setselector 120 may select to provide responsive responses to the subqueries of "How tall is Burj Khalifa" and "How tall is Empire State Building" instead of a single response to the query "Which building is taller, Burj Khalifa or Empire State Building." -
FIG. 2 is a block diagram of an examplesubquery set generator 202. The examplesubquery set generator 202 may be the subquery set generator 101 shown inFIG. 1 . The subquery setgenerator 202 includes an n-gram replacer 210, alist identifier 220, and aquery expander 230. - The n-
gram replacer 210 of thesubquery set generator 202 may receive a query and determine whether to replace any n-grams in the query with other n-grams. For example, the n-gram replacer 210 may obtain the query "What is the weather in Swiss ski resorts" and replace the n-gram "Swiss ski resorts" with the n-gram "Zermatt, St. Moritz, Davos, and Engelberg." An n-gram may be a sequence of one or more words. - The n-
gram replacer 210 may determine whether to replace a n-gram in the query based on determining whether the n-gram is a query that is frequently used or has a known answer. For example, the n-gram replacer 210 may determine that the n-gram "Swiss ski resorts" is frequently searched for and a result of "Zermatt, St. Moritz, Davos, and Engelberg" is given in response to those searches and, in response, replace the n-gram "Swiss ski resorts" with "Zermatt, St. Moritz, Davos, and Engelberg" to obtain the query "What is the weather in Zermatt, St. Moritz, Davos, and Engelberg." - The
list identifier 220 may identify lists in a query. For example, thelist identifier 220 may obtain the query "What is the weather in Zermatt, St. Moritz, Davos, and Engelberg," identify that "Zermatt, St. Moritz, Davos, and Engelberg" is a list of items and, in response, output "What is the weather in [BEGIN LIST] Zermatt, St. Moritz, Davos, and Engelberg [END LIST]" that indicates where a list begins and where the list ends in the query. - The
list identifier 220 may identify a list by determining the presence of "and" and commas preceding an "and." For example, thelist identifier 220 may determine that "Zermatt, St. Moritz, Davos, and Engelberg" includes an "and" that is preceded by three commas so is a list with four items. In another example, thelist identifier 220 may determine that "Barack and Michelle Obama" includes "and" so is a list with two items. - Additionally or alternatively, the
list identifier 220 may identify a list by determining the presence of multiple entities that are related to one another are also proximate to one another in the query. For example, thelist identifier 220 may determine that "Zermatt," "St. Moritz," "Davos," and "Engelberg" are all Swiss ski resorts and that the terms appear next to one another in "Zermatt, St. Moritz, Davos, and Engelberg" so that is a list with four items. - The
query expander 230 may obtain a query with an identified list and expand the query into a set of subqueries with a respective subquery for each item in the list. For example, thequery expander 230 may obtain "What is the weather in [BEGIN LIST] Zermatt, St. Moritz, Davos, and Engelberg [END LIST]" and expand that into a set of subqueries including "What is the weather in Zermatt," "What is the weather in St. Moritz," "What is the weather in Davos," "What is the weather in Engelberg." - The
query expander 230 may expand the query into the set of subqueries by taking a portion of a query that occurs before the list and then prepending that to each of the items in the list. For example, thequery expander 230 may take "What is the weather in" and then prepend that to each of "Zermatt," "St. Moritz," "Davos," and "Engelberg" to generate the respective subqueries of the set. -
FIG. 3 is a flow diagram of aprocess 300 for generating subqueries from a query.Process 300 can be implemented usingsystem 100 described above. For example, theprocess 300 may be performed by thesubquery set generator 110, thesubquery set scorer 120, the subquery setselector 130, and the subquery setresponder 140. - The
process 300 includes obtaining a query (310). The subquery setgenerator 110 obtains the query "Turn on the lights and turn on some music." - The
process 300 includes generating a set of subqueries from the query (320). The subquery setgenerator 110 obtains the query "Turn on the lights and turn on some music" and generates a set of subqueries "turn on the lights" and "turn on some music." - The
process 300 includes determining a quality score for the set of two subqueries (330). For example, thesubquery set scorer 120 may generate a quality score of 98% for the set of subqueries including "turn on the lights" and "turn on some music." - The
process 300 includes determining whether the quality score for the set of two subqueries satisfies a quality threshold (340). For example, the subquery setselector 130 may determine that the quality score of 98% for the set of subqueries including "turn on the lights" and "turn on some music" satisfies a quality threshold of 80%. In another example, the subquery setselector 130 may determine that a quality score of 40% for a set of subqueries does not satisfy a quality threshold of 70%. - The
process 300 includes providing a first response to the first subquery and a second response to the second subquery (350). For example, the subquery setresponder 140 provides the first subquery to a voice action operation and receives a first response of "lights turned on," provides a second subquery to a voice action operation and receives a second response of "music turned on," and provides the first response of "lights turned on" and the second response of "music turned on" for output to a user. Theprocess 300 provides the first response and the second response in response to determining that the quality score for the set of two subqueries satisfies a quality threshold. For example, if the quality score for a set of subqueries does not satisfy a quality threshold, then the subquery setresponder 140 may not provide responses for the subqueries and may instead provide a response to the original query. -
FIG. 4 shows an example of acomputing device 400 and amobile computing device 450 that can be used to implement the techniques described here. Thecomputing device 400 is intended to represent various forms of digital computers, such as laptops, desktops, workstations, personal digital assistants, servers, blade servers, mainframes, and other appropriate computers. Themobile computing device 450 is intended to represent various forms of mobile devices, such as personal digital assistants, cellular telephones, smart-phones, and other similar computing devices. The components shown here, their connections and relationships, and their functions, are meant to be examples only, and are not meant to be limiting. - The
computing device 400 includes aprocessor 402, amemory 404, astorage device 406, a high-speed interface 408 connecting to thememory 404 and multiple high-speed expansion ports 410, and a low-speed interface 412 connecting to a low-speed expansion port 414 and thestorage device 406. Each of theprocessor 402, thememory 404, thestorage device 406, the high-speed interface 408, the high-speed expansion ports 410, and the low-speed interface 412, are interconnected using various busses, and may be mounted on a common motherboard or in other manners as appropriate. Theprocessor 402 can process instructions for execution within thecomputing device 400, including instructions stored in thememory 404 or on thestorage device 406 to display graphical information for a graphical user interface (GUI) on an external input/output device, such as adisplay 416 coupled to the high-speed interface 408. In other implementations, multiple processors and/or multiple buses may be used, as appropriate, along with multiple memories and types of memory. Also, multiple computing devices may be connected, with each device providing portions of the necessary operations (e.g., as a server bank, a group of blade servers, or a multi-processor system). - The
memory 404 stores information within thecomputing device 400. In some implementations, thememory 404 is a volatile memory unit or units. In some implementations, thememory 404 is a non-volatile memory unit or units. Thememory 404 may also be another form of computer-readable medium, such as a magnetic or optical disk. - The
storage device 406 is capable of providing mass storage for thecomputing device 400. In some implementations, thestorage device 406 may be or contain a computer-readable medium, such as a floppy disk device, a hard disk device, an optical disk device, or a tape device, a flash memory or other similar solid state memory device, or an array of devices, including devices in a storage area network or other configurations. Instructions can be stored in an information carrier. The instructions, when executed by one or more processing devices (for example, processor 402), perform one or more methods, such as those described above. The instructions can also be stored by one or more storage devices such as computer- or machine-readable mediums (for example, thememory 404, thestorage device 406, or memory on the processor 402). - The high-
speed interface 408 manages bandwidth-intensive operations for thecomputing device 400, while the low-speed interface 412 manages lower bandwidth-intensive operations. Such allocation of functions is an example only. In some implementations, the high-speed interface 408 is coupled to thememory 404, the display 416 (e.g., through a graphics processor or accelerator), and to the high-speed expansion ports 410, which may accept various expansion cards (not shown). In the implementation, the low-speed interface 412 is coupled to thestorage device 406 and the low-speed expansion port 414. The low-speed expansion port 414, which may include various communication ports (e.g., USB, Bluetooth, Ethernet, wireless Ethernet) may be coupled to one or more input/output devices, such as a keyboard, a pointing device, a scanner, or a networking device such as a switch or router, e.g., through a network adapter. - The
computing device 400 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as astandard server 420, or multiple times in a group of such servers. In addition, it may be implemented in a personal computer such as alaptop computer 422. It may also be implemented as part of a rack server system 424. Alternatively, components from thecomputing device 400 may be combined with other components in a mobile device (not shown), such as amobile computing device 450. Each of such devices may contain one or more of thecomputing device 400 and themobile computing device 450, and an entire system may be made up of multiple computing devices communicating with each other. - The
mobile computing device 450 includes aprocessor 452, amemory 464, an input/output device such as adisplay 454, acommunication interface 466, and atransceiver 468, among other components. Themobile computing device 450 may also be provided with a storage device, such as a micro-drive or other device, to provide additional storage. Each of theprocessor 452, thememory 464, thedisplay 454, thecommunication interface 466, and thetransceiver 468, are interconnected using various buses, and several of the components may be mounted on a common motherboard or in other manners as appropriate. - The
processor 452 can execute instructions within themobile computing device 450, including instructions stored in thememory 464. Theprocessor 452 may be implemented as a chipset of chips that include separate and multiple analog and digital processors. Theprocessor 452 may provide, for example, for coordination of the other components of themobile computing device 450, such as control of user interfaces, applications run by themobile computing device 450, and wireless communication by themobile computing device 450. - The
processor 452 may communicate with a user through acontrol interface 458 and adisplay interface 456 coupled to thedisplay 454. Thedisplay 454 may be, for example, a TFT (Thin-Film-Transistor Liquid Crystal Display) display or an OLED (Organic Light Emitting Diode) display, or other appropriate display technology. Thedisplay interface 456 may comprise appropriate circuitry for driving thedisplay 454 to present graphical and other information to a user. Thecontrol interface 458 may receive commands from a user and convert them for submission to theprocessor 452. In addition, anexternal interface 462 may provide communication with theprocessor 452, so as to enable near area communication of themobile computing device 450 with other devices. Theexternal interface 462 may provide, for example, for wired communication in some implementations, or for wireless communication in other implementations, and multiple interfaces may also be used. - The
memory 464 stores information within themobile computing device 450. Thememory 464 can be implemented as one or more of a computer-readable medium or media, a volatile memory unit or units, or a non-volatile memory unit or units. Anexpansion memory 474 may also be provided and connected to themobile computing device 450 through anexpansion interface 472, which may include, for example, a SIMM (Single In Line Memory Module) card interface. Theexpansion memory 474 may provide extra storage space for themobile computing device 450, or may also store applications or other information for themobile computing device 450. Specifically, theexpansion memory 474 may include instructions to carry out or supplement the processes described above, and may include secure information also. Thus, for example, theexpansion memory 474 may be provided as a security module for themobile computing device 450, and may be programmed with instructions that permit secure use of themobile computing device 450. In addition, secure applications may be provided via the SIMM cards, along with additional information, such as placing identifying information on the SIMM card in a non-hackable manner. - The memory may include, for example, flash memory and/or NVRAM memory (non-volatile random access memory), as discussed below. In some implementations, instructions are stored in an information carrier that the instructions, when executed by one or more processing devices (for example, processor 452), perform one or more methods, such as those described above. The instructions can also be stored by one or more storage devices, such as one or more computer- or machine-readable mediums (for example, the
memory 464, theexpansion memory 474, or memory on the processor 452). In some implementations, the instructions can be received in a propagated signal, for example, over thetransceiver 468 or theexternal interface 462. - The
mobile computing device 450 may communicate wirelessly through thecommunication interface 466, which may include digital signal processing circuitry where necessary. Thecommunication interface 466 may provide for communications under various modes or protocols, such as GSM voice calls (Global System for Mobile communications), SMS (Short Message Service), EMS (Enhanced Messaging Service), or MMS messaging (Multimedia Messaging Service), CDMA (code division multiple access), TDMA (time division multiple access), PDC (Personal Digital Cellular), WCDMA (Wideband Code Division Multiple Access), CDMA2000, or GPRS (General Packet Radio Service), among others. Such communication may occur, for example, through thetransceiver 468 using a radio-frequency. In addition, short-range communication may occur, such as using a Bluetooth, WiFi, or other such transceiver (not shown). In addition, a GPS (Global Positioning System)receiver module 470 may provide additional navigation- and location-related wireless data to themobile computing device 450, which may be used as appropriate by applications running on themobile computing device 450. - The
mobile computing device 450 may also communicate audibly using anaudio codec 460, which may receive spoken information from a user and convert it to usable digital information. Theaudio codec 460 may likewise generate audible sound for a user, such as through a speaker, e.g., in a handset of themobile computing device 450. Such sound may include sound from voice telephone calls, may include recorded sound (e.g., voice messages, music files, etc.) and may also include sound generated by applications operating on themobile computing device 450. - The
mobile computing device 450 may be implemented in a number of different forms, as shown in the figure. For example, it may be implemented as acellular telephone 480. It may also be implemented as part of a smart-phone 482, personal digital assistant, or other similar mobile device. - Various implementations of the systems and techniques described here can be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs, computer hardware, firmware, software, and/or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.
- These computer programs, also known as programs, software, software applications or code, include machine instructions for a programmable processor, and can be implemented in a high-level procedural and/or object-oriented programming language, and/or in assembly/machine language. A program can be stored in a portion of a file that holds other programs or data, e.g., one or more scripts stored in a markup language document, in a single file dedicated to the program in question, or in multiple coordinated files, e.g., files that store one or more modules, sub-programs, or portions of code. A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- As used herein, the terms "machine-readable medium" "computer-readable medium" refers to any computer program product, apparatus and/or device, e.g., magnetic discs, optical disks, memory, Programmable Logic devices (PLDs) used to provide machine instructions and/or data to a programmable processor, including a machine-readable medium that receives machine instructions as a machine-readable signal. The term "machine-readable signal" refers to any signal used to provide machine instructions and/or data to a programmable processor.
- To provide for interaction with a user, the systems and techniques described here can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- The systems and techniques described here can be implemented in a computing system that includes a back-end component, e.g., as a data server, or that includes a middleware component such as an application server, or that includes a front-end component such as a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here, or any combination of such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication such as, a communication network. Examples of communication networks include a local area network ("LAN"), a wide area network ("WAN"), and the Internet.
- The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other.
- Further to the descriptions above, a user may be provided with controls allowing the user to make an election as to both if and when systems, programs or features described herein may enable collection of user information (e.g., information about a user's social network, social actions or activities, profession, a user's preferences, or a user's current location), and if the user is sent content or communications from a server. In addition, certain data may be treated in one or more ways before it is stored or used, so that personally identifiable information is removed.
- For example, in some embodiments, a user's identity may be treated so that no personally identifiable information can be determined for the user, or a user's geographic location may be generalized where location information is obtained (such as to a city, ZIP code, or state level), so that a particular location of a user cannot be determined. Thus, the user may have control over what information is collected about the user, how that information is used, and what information is provided to the user.
- A number of embodiments have been described. Nevertheless, it will be understood that various modifications may be made without departing from the scope of the invention. For example, various forms of the flows shown above may be used, with steps re-ordered, added, or removed. Also, although several applications of the systems and methods have been described, it should be recognized that numerous other applications are contemplated. Accordingly, other embodiments are within the scope of the following claims.
- Particular embodiments of the subject matter have been described. Other embodiments are within the scope of the following claims. For example, the actions recited in the claims can be performed in a different order and still achieve desirable results. As one example, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results. In some cases, multitasking and parallel processing may be advantageous.
Claims (12)
- A computer-implemented method, the method comprising:obtaining (310) a query;identifying positions of one or more particular characters in the query;generating (320) different sets of two subqueries from the query, where each set corresponds to the query being split on a different position of the one or more particular characters in the query and includes a first subquery and a second subquery,the first subquery generated from a first portion of the query before the position of the one or more particular characters and the second subquery generated from a second portion of the query after the position of the one or more particular characters;for each set of two subqueries:determining, based on one or more devices available to the user, whether the first subquery corresponds to a valid voice action operation and whether the second subquery corresponds to a valid voice action operation, wherein a valid voice action operation is an operation that may be validly executed by the computing system in response to an utterance to control the one or more devices available to the user to turn on lights or to turn on music; anddetermining (330) a quality score for the set of two subqueries based at least on a determination that the first subquery corresponds to a valid voice action operation and a determination that the second subquery corresponds to a valid voice action operation; anddetermining (340) whether the quality score for the set of two subqueries satisfies a quality threshold;in response to determining that the quality score for a set of the sets of two subqueries satisfies the quality threshold, selecting the set; andproviding (350) a first response to the first subquery of the selected set that is responsive to a first voice action operation that receives the first subquery as input, and providing a second response to the second subquery of the selected set that is responsive to a second voice action operation that receives the second subquery as input, wherein the first voice action operation and the second voice action operation, when executed by the computing system, control the one or more devices available to the user to turn on lights and to turn on music, respectively.
- The method of claim 1, wherein determining a quality score for the set of two subqueries comprises:determining a frequency that the first subquery appears in a log of prior queries from multiple users; anddetermining the quality score for the set of two subqueries based at least on the frequency that the first subquery appears in the log of prior queries from multiple users.
- The method of claim 1, wherein determining whether the quality score for the set of two subqueries satisfies a quality threshold comprises:
determining whether the quality score for the set of two subqueries satisfies a predetermined threshold that reflects that a user is likely to be satisfied by respective operations being executed using each of the two subqueries. - The method of claim 1, wherein the one or more particular characters comprise a space.
- The method of claim 1, wherein the one or more particular characters comprise the word "and."
- The method of claim 1, wherein providing a first response to the first subquery that is responsive to the first voice action operation that receives the first subquery as input and providing a second response to the second subquery that is responsive to the second voice action operation that receives the second subquery as input comprises:providing the first subquery as input for execution of the first voice action operation;obtaining the first response from the execution of the first voice action operation in response to the first subquery;providing the second subquery as input for execution of the second voice action operation;obtaining the second response from the execution of the second voice action operation in response to the second subquery; andproviding the first response and the second response for output to a user.
- The method of claim 1, wherein an output of the second operation is dependent on providing the first subquery as input to the first operation.
- The method of claim 1, wherein generating a set of the sets of two subqueries from the query comprises generating a set of three subqueries.
- The method of any preceding claim, wherein the one or more devices available to a user comprise one or more lights.
- A system comprising:a data processing apparatus interacting with one or more devices available to a user; anda non-transitory computer readable storage medium in data communication with the data processing apparatus and storing instructions executable by the data processing apparatus and upon such execution cause the data processing apparatus to perform operations comprising the method of any preceding claim.
- The system of claim 10, further comprising the one or more devices available to a user.
- A non-transitory computer readable storage medium storing instructions executable by a data processing apparatus interacting with one or more devices available to a user and upon such execution cause the data processing apparatus to perform operations comprising the method of any of claims 1 to 9.
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201762564800P | 2017-09-28 | 2017-09-28 | |
PCT/US2018/053454 WO2019067922A1 (en) | 2017-09-28 | 2018-09-28 | Subquery generation from a query |
Publications (2)
Publication Number | Publication Date |
---|---|
EP3635572A1 EP3635572A1 (en) | 2020-04-15 |
EP3635572B1 true EP3635572B1 (en) | 2023-11-01 |
Family
ID=64024069
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP18793723.0A Active EP3635572B1 (en) | 2017-09-28 | 2018-09-28 | Subquery generation from a query |
Country Status (4)
Country | Link |
---|---|
US (3) | US10885077B2 (en) |
EP (1) | EP3635572B1 (en) |
CN (1) | CN110869923A (en) |
WO (1) | WO2019067922A1 (en) |
Families Citing this family (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN113874596A (en) | 2019-04-01 | 2021-12-31 | 斯伦贝谢技术有限公司 | Instrumented cutter |
Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130158979A1 (en) * | 2011-12-14 | 2013-06-20 | Purediscovery Corporation | System and Method for Identifying Phrases in Text |
Family Cites Families (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6189013B1 (en) * | 1996-12-12 | 2001-02-13 | Incyte Genomics, Inc. | Project-based full length biomolecular sequence database |
US8527278B2 (en) | 2009-06-29 | 2013-09-03 | Abraham Ben David | Intelligent home automation |
US8682667B2 (en) * | 2010-02-25 | 2014-03-25 | Apple Inc. | User profiling for selecting user specific voice input processing information |
US8521526B1 (en) * | 2010-07-28 | 2013-08-27 | Google Inc. | Disambiguation of a spoken query term |
CN103229162B (en) * | 2010-09-28 | 2016-08-10 | 国际商业机器公司 | Candidate answers logic synthesis is used to provide problem answers |
EP2938022A4 (en) * | 2012-12-18 | 2016-08-24 | Samsung Electronics Co Ltd | Method and device for controlling home device remotely in home network system |
US9721020B2 (en) * | 2013-07-31 | 2017-08-01 | International Business Machines Corporation | Search query obfuscation via broadened subqueries and recombining |
US9966065B2 (en) | 2014-05-30 | 2018-05-08 | Apple Inc. | Multi-command single utterance input method |
US10936632B2 (en) * | 2014-09-11 | 2021-03-02 | Ebay Inc. | Enhanced search query suggestions |
US20170139991A1 (en) * | 2015-11-16 | 2017-05-18 | Linkedin Corporation | Dynamic query plan based on skew |
KR102371752B1 (en) * | 2017-08-31 | 2022-03-07 | 삼성전자주식회사 | Home appliance and controlling method thereof |
-
2018
- 2018-09-19 US US16/135,205 patent/US10885077B2/en active Active
- 2018-09-28 CN CN201880046311.8A patent/CN110869923A/en active Pending
- 2018-09-28 WO PCT/US2018/053454 patent/WO2019067922A1/en unknown
- 2018-09-28 EP EP18793723.0A patent/EP3635572B1/en active Active
-
2020
- 2020-12-09 US US17/116,296 patent/US20210089564A1/en active Granted
-
2023
- 2023-04-28 US US18/141,172 patent/US20230259537A1/en active Pending
Patent Citations (1)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130158979A1 (en) * | 2011-12-14 | 2013-06-20 | Purediscovery Corporation | System and Method for Identifying Phrases in Text |
Also Published As
Publication number | Publication date |
---|---|
US20210089564A1 (en) | 2021-03-25 |
EP3635572A1 (en) | 2020-04-15 |
US10885077B2 (en) | 2021-01-05 |
WO2019067922A1 (en) | 2019-04-04 |
US20230259537A1 (en) | 2023-08-17 |
US20190095523A1 (en) | 2019-03-28 |
CN110869923A (en) | 2020-03-06 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN108446290B (en) | Streaming real-time conversation management | |
US10909969B2 (en) | Generation of language understanding systems and methods | |
CN107430859B (en) | Mapping input to form fields | |
JP6535349B2 (en) | Contextual Interpretation in Natural Language Processing Using Previous Dialogue Acts | |
CN107112013B (en) | Platform for creating customizable dialog system engines | |
JP2021182168A (en) | Voice recognition system | |
US10672391B2 (en) | Improving automatic speech recognition of multilingual named entities | |
CN105229728B (en) | More identifier speech recognitions | |
US11682383B2 (en) | Language model biasing system | |
US10698654B2 (en) | Ranking and boosting relevant distributable digital assistant operations | |
CN110164435A (en) | Audio recognition method, device, equipment and computer readable storage medium | |
CN105354199B (en) | A kind of recognition methods of entity meaning and system based on scene information | |
US20160301771A1 (en) | Matching problem descriptions with support topic identifiers | |
EP3627498B1 (en) | Method and system, for generating speech recognition training data | |
US20230259537A1 (en) | Subquery generation from a query | |
US8798996B2 (en) | Splitting term lists recognized from speech | |
WO2022035887A1 (en) | System and method for generating responses for conversational agents | |
CN112270925B (en) | Platform for creating customizable dialog system engines |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: UNKNOWN |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE INTERNATIONAL PUBLICATION HAS BEEN MADE |
|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: REQUEST FOR EXAMINATION WAS MADE |
|
17P | Request for examination filed |
Effective date: 20200109 |
|
AK | Designated contracting states |
Kind code of ref document: A1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
AX | Request for extension of the european patent |
Extension state: BA ME |
|
DAV | Request for validation of the european patent (deleted) | ||
DAX | Request for extension of the european patent (deleted) | ||
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: EXAMINATION IS IN PROGRESS |
|
17Q | First examination report despatched |
Effective date: 20210305 |
|
REG | Reference to a national code |
Ref document number: 602018060464Country of ref document: DERef country code: DERef legal event code: R079Free format text: PREVIOUS MAIN CLASS: G06F0016000000Ipc: G06F0016332000 |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: G06F 16/33 20190101ALI20230329BHEPIpc: G06F 16/332 20190101AFI20230329BHEP |
|
GRAP | Despatch of communication of intention to grant a patent |
Free format text: ORIGINAL CODE: EPIDOSNIGR1 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: GRANT OF PATENT IS INTENDED |
|
INTG | Intention to grant announced |
Effective date: 20230517 |
|
GRAS | Grant fee paid |
Free format text: ORIGINAL CODE: EPIDOSNIGR3 |
|
GRAA | (expected) grant |
Free format text: ORIGINAL CODE: 0009210 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE PATENT HAS BEEN GRANTED |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230914 |
|
AK | Designated contracting states |
Kind code of ref document: B1Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
REG | Reference to a national code |
Ref country code: GBRef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: CHRef legal event code: EP |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R096Ref document number: 602018060464Country of ref document: DE |
|
REG | Reference to a national code |
Ref country code: IERef legal event code: FG4D |
|
REG | Reference to a national code |
Ref country code: LTRef legal event code: MG9D |
|
REG | Reference to a national code |
Ref country code: NLRef legal event code: MPEffective date: 20231101 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: GRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20240202 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ISFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20240301 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: LTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20231101 |
|
REG | Reference to a national code |
Ref country code: ATRef legal event code: MK05Ref document number: 1628017Country of ref document: ATKind code of ref document: TEffective date: 20231101 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: NLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20231101 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ATFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20231101 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: ESFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20231101 |
|
PG25 | Lapsed in a contracting state [announced via postgrant information from national office to epo] |
Ref country code: NLFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20231101Ref country code: LTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20231101Ref country code: ISFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20240301Ref country code: GRFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20240202Ref country code: ESFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20231101Ref country code: BGFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20240201Ref country code: ATFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20231101Ref country code: PTFree format text: LAPSE BECAUSE OF FAILURE TO SUBMIT A TRANSLATION OF THE DESCRIPTION OR TO PAY THE FEE WITHIN THE PRESCRIBED TIME-LIMITEffective date: 20240301 |
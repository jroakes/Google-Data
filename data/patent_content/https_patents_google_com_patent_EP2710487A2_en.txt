EP2710487A2 - Generating application recommendations based on user installed applications - Google Patents
Generating application recommendations based on user installed applicationsInfo
- Publication number
- EP2710487A2 EP2710487A2 EP20120722249 EP12722249A EP2710487A2 EP 2710487 A2 EP2710487 A2 EP 2710487A2 EP 20120722249 EP20120722249 EP 20120722249 EP 12722249 A EP12722249 A EP 12722249A EP 2710487 A2 EP2710487 A2 EP 2710487A2
- Authority
- EP
- European Patent Office
- Prior art keywords
- application
- user
- applications
- score
- determining
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Ceased
Links
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/06—Buying, selling or leasing transactions
- G06Q30/0601—Electronic shopping [e-shopping]
- G06Q30/0631—Item recommendations
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F8/00—Arrangements for software engineering
- G06F8/60—Software deployment
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q30/00—Commerce
- G06Q30/02—Marketing; Price estimation or determination; Fundraising
- G06Q30/0241—Advertisements
- G06Q30/0251—Targeted advertisements
- G06Q30/0255—Targeted advertisements based on user history
Definitions
- the present disclosure relates to suggesting one or more applications based on a selected application within an application marketplace.
- Mobile computing devices may run a variety of software applications that extend existing device capabilities and that add new capabilities. Many types of applications are generally available, such as applications for information retrieval, communications and entertainment. Applications may be created by mobile device manufacturers and/or third parties (e.g., application developers), and may be pre-installed by the manufacturer, or may be downloaded and installed by device users.
- third parties e.g., application developers
- Users may discover new applications through an interface associated with an on-line application marketplace by browsing a catalog of available applications. Additionally, information about new applications is generally available through advertising, industry reviews, "top 10" and “best” lists, and through word-of-mouth referrals.
- users may obtain, install, and use full versions of the applications, or user may access demonstration versions of the application that allow the user to try the application out with or without purchasing. Over time, users may keep applications, upgrade applications (e.g., from a demonstration version to a full version), and may delete applications that are no longer wanted.
- determining the overall score includes:
- determining the overall score further includes: determining a group of users that installed both the first application and the second application, for each user in the group of users, calculating a peruser score to provide a plurality of per-user scores, and calculating the total user score as a sum of the plurality of per-user scores; each per-user score is determined based on first timestamps associated with the first application and second
- calculating a per-user score to provide a plurality of per-user scores includes: determining, for a particular user, that an installation period of the second application is less than a threshold installation period, and setting the per-user score for the particular user to zero in response to determining that the installation period of the second application is less than the threshold installation period; calculating a per-user score to provide a plurality of peruser scores includes: determining, for a particular user, that the second application was installed within a threshold period after installation of the first application, and in response to determining that the second application was installed within the threshold period after installation of the first application, calculating the per-user score for the particular user based on respective install timestamps of the first and second applications; the per-user score for the particular user is calculated further based on an uninstall timestamp of the first application; calculating a per-user score to provide a plurality of per-user scores further includes: determining that the second application was installed before the first application was uninstalled,
- the actions further include: determining a second overall score corresponding to the first application and a third application, the second overall score indicating a degree of overlap in installation periods of the first application and the third application on a plurality of computing devices, and determining that the second overall score is less than a threshold score, wherein the third application is absent from the index as an application of interest in view of the first application in response to determining that the second overall score is less than the threshold score; the actions further include: receiving a search query, generating search results based on the search query, the search results corresponding to the plurality of applications, and transmitting the search results for display to
- FIG. 1 depicts an example system that can execute implementations of the present disclosure.
- FIG. 2 depicts an example mobile device for displaying applications identified as being related to a selected application.
- FIG. 3 depicts an application installation timeline and table summary for a particular user.
- FIG. 4 is a block diagram of a system that includes example components for identifying applications for suggestion.
- FIG. 5 is a flowchart of an example process that can be executed in accordance with implementations of the present disclosure.
- FIG. 6 is a flowchart illustrating an example process for displaying applications as suggested applications.
- This specification describes systems and methods for identifying one or more applications as suggested applications in view of a selected application within an application marketplace.
- users of computing devices e.g., mobile computing devices
- the users may often find it cumbersome to search through the application marketplace to discover other applications that can be relevant to a selected application.
- a user can search for applications that are available through the application marketplace by entering search terms into a query field provided in a user interface of the application marketplace.
- a resultant query can be transmitted to the application marketplace, which searches available applications to identify one or more applications that correspond to the query.
- the application marketplace can return a list of the one or more applications to the computing device.
- the user can select an application from the list displayed on the computing device.
- detailed information regarding the selected application can be presented to the user via the computing device.
- a list of one or more suggested applications can also be displayed to the user in response to the user selection.
- a suggested application can include an application that is deemed to be relevant to the selected application, such as an application that is considered to be an accessory to the selected application.
- the selected application can include a touchscreen keyboard application that can be downloaded to and executed on the user's computing device to provide an after-market keyboard (e.g., a specialized keyboard, a stylized keyboard).
- an example suggested application can include a so-called "skins" application that can be downloaded to and executed on the user's computing device to customize the appearance of the touchscreen keyboard (e.g., stylize the keyboard to include various colors, designs, motifs, etc.).
- Another example suggested application can include an emoticon application that can be downloaded to and executed on the user's computing device to customize the functionality of the touchscreen keyboard by adding keys corresponding to one or more emoticons.
- Emoticons can include graphics that can be used to provide a visual expression.
- Information relating to the search queries, the selection of the applications for display of detailed information, application installations, application content, application ratings and the like can be stored in a database.
- the information can account for the search queries, requests for detailed information and application installations of multiple users across multiple devices.
- installation and application information can be processed to identify one or more applications as suggested applications for a particular application. Suggested applications can be displayed in the application marketplace as being suggested in view of a selected application.
- FIG. 1 is a diagram of an example system 100 that can execute
- the system 100 includes computing devices 102A-102F that can each communicate with a server system 104 over a network 106.
- Each of the computing devices 102A-102F includes an associated user 108A-108F, respectively.
- the network 106 can include a large computer network, such as a local area network (LAN), a wide area network (WAN), the Internet, a cellular network, or a combination thereof connecting any number of mobile computing devices, fixed computing devices and server systems.
- the server system 104 includes one or more computing devices 1 10 and one or more machine- readable repositories, or databases 1 12.
- the computing devices 102A-102D are illustrated as mobile computing devices
- the computing device 102E is illustrated as a desktop-type computing device
- the computing device 102F is illustrated as a laptop-type computing device.
- the computing devices 102A-102F can each include any type of computing device such as a desktop computer, a laptop computer, a handheld computer, a personal digital assistant (PDA), a cellular telephone, a tablet, a network appliance, a camera, a smart phone, an enhanced general packet radio service (EGPRS) mobile phone, a media player, a navigation device, an email device, a game console, or a combination of any two or more of these data processing devices or other data processing devices.
- PDA personal digital assistant
- ESG enhanced general packet radio service
- the computing devices 102A-102F enable the respective users 108A- 108F to interact with an application marketplace.
- An example application
- the application marketplace includes Google Play (formerly known as the Android Market) provided by Google Inc.
- the application marketplace can include a website that is hosted on one or more servers (e.g., the server system 104) and that is accessed using a computing device (e.g., computing devices 102A-102F).
- the application marketplace can be provided as an application that is executed on a computing device (e.g., computing devices 102A-102F), and that retrieves application information from one or more servers (e.g., the server system 104).
- the application marketplace can advertise applications that are available for download to and installation on one or more of the computing devices 102A- 102F.
- the user 108A of the computing device 102A can interact with the application marketplace to view and/or find applications of interest.
- the user 102A can input a search query to the application marketplace.
- the search query can be processed (e.g., by one or more server systems hosting, or otherwise providing data to the application marketplace) to identify one or more applications corresponding to the search query.
- Information corresponding to the one or more applications can be transmitted to the computing device 102A for display to the user 108A.
- the application marketplace can display categories of applications (e.g., most recent applications, most downloaded applications, top free applications, top paid applications, featured applications, entertainment, productivity, business, education and the like).
- categories of applications e.g., most recent applications, most downloaded applications, top free applications, top paid applications, featured applications, entertainment, productivity, business, education and the like.
- information corresponding to one or more applications within the particular category can be transmitted to the computing device 102A for display to the user 108A.
- the user 108A can select a particular application from the one or more displayed applications to view further detail about the application and/or to download and install the application to the computing device 102A. For example, in response to user input, further detail regarding a selected application can be displayed. Examples of further detail can include a description of the application, user ratings of the application, user reviews, application screenshots, as well as other applications that are suggested in view of the selected application. As discussed in further detail herein, implementations of the present disclosure are directed to determining applications to suggest in view of a selected application.
- FIG. 2 depicts an example mobile device 200 for displaying suggested applications in view of a selected application.
- the mobile device 200 can correspond to the computing devices 102A-102D of FIG. 1 .
- the mobile device 200 includes a display 202, a trackball 204 and navigations buttons 206a-206d.
- the display 202 can display a graphical user interface (GUI) 208.
- GUI graphical user interface
- the GUI 208 provides an interface for a user (e.g., the users 108A-108D) to interact with an operating system and
- An example operating system includes the Android Operating System provided by Google Inc.
- the user can interact with the GUI 208 to navigate a listing of the applications stored in memory of and executable on the mobile device 200, select an application for execution by a processor of the mobile device 200, provide input to the applications during execution of the application, and the like.
- the user of the mobile device 200 navigates the GUI 208 via the display 202, the trackball 204 and navigations buttons 206a-206d, and/or other input means (e.g., acoustic and/or tactile).
- the display 202 is a touchscreen display.
- the trackball 204 controls a cursor that can be part of the GU I 208 for selecting items displayed on the GUI 208.
- the navigations buttons 206a-206d have various implementations dependent upon the specific operating system stored on the mobile device 200.
- the navigation button 206a provides a "previous" function that returns the current state of the GUI 208 to a previous state of the GUI 208; the navigation button 206b provides a menu function; the navigation button 206c provides a home function that brings the GUI 208 to a "home screen;" and the navigation button 206d provides a searching function.
- the mobile device 200 stores an application marketplace application.
- the application marketplace application can be provided as a client-side application that enables communication with an application marketplace that is provided as a back- end application (e.g., executed on one or more server systems).
- the application marketplace application provides a listing of applications to the user that are available for download to and installation on the mobile device 200.
- the user selects the application marketplace application by navigating the GUI 208.
- the user can select the application marketplace application (e.g. launch the application marketplace application for execution) by any means provided by the operating system stored on the mobile device 200.
- the application marketplace application can display a query field in the GUI 208. The user can enter search terms into the query field to generate a query.
- the search terms can be related to a specific application the user wishes to obtain more information about, including possible installation of the application on the mobile device 200.
- the search terms relate to a specific application, such as search terms "Google Earth” relating to the Google Earth application.
- search terms can be related to a category of applications that the user is interested in, such as the search terms including "Shopping” in which multiple applications can relate to the search terms.
- the multiple applications can include, among others, "Google Shopper" and
- the application marketplace application After the user enters the search terms into the query field, the application marketplace application returns an updated interface to the GUI 208.
- the GUI 208 can include a listing of applications as search results that are identified as corresponding to the search terms. The user can select an application from the search results.
- the application marketplace application provides an updated interface to the GUI 208 relating to the selected application 209.
- the GUI 208 can include an application interface 210 including information specific to the selected application 209.
- a listing of applications can be displayed by the GUI 208 in response to other user input and/or a default listing of applications can be presented.
- a welcome screen can be displayed, which includes a default listing of applications.
- the default listing of applications can include, for example, the top-most searched applications, or the top-most installed applications.
- listings of applications can be displayed based on category. For example, the user can select a particular category (e.g., news, books, entertainment), and a listing of applications corresponding to the selected category can be displayed.
- An application can be selected from any listing of applications, or otherwise, however presented on the GUI 208.
- the application interface 210 includes an application heading portion 212, a tabbed portion 214 and a content portion 216.
- the heading portion 212 includes summary information specific to the selected application 209.
- the application- specific information can include, for example, an application name 218, an application developer 220, an application icon 222, an install status 224 and a rating 226.
- the install status 224 includes information relating to whether the selected application 209 is currently installed on the mobile device 200. In some
- the rating 226 is a rating provided by the user of the mobile device 200 when the selected application 209 is currently installed or was previously installed on the mobile device 200. In some implementations, the rating 226 is a rating average provided by multiple users across multiple devices.
- the tabbed portion 214 includes, for example, an about tab 228, a comments tab 230 and a suggested applications tab 232.
- a tab of the tabbed portion 214 is selected by the user of the mobile device 200, contents related to the selected tab are displayed in the content portion 216.
- the about tab 228 displays content in the content portion 216 relating to a description about the selected application 209.
- the description is provided by a developer of the selected application 209.
- the comments tab 230 displays content in the content portion 216 relating to comments provided by other users who have previous experience with the selected application 209 on a respective mobile device.
- the comments can include text, audio, video and the like. Further, the comments can include a rating of the selected application 209.
- the suggested applications tab 232 displays content in the content portion 216 related to a listing 234 of suggested applications in view of the selected application 209. Specifically, the suggested application tab 232 displays the listing 234 of suggested applications that have been identified as applications that should be displayed as suggestions for download and installation in view of the selected application 209, as detailed further below.
- the listing 234 can be provided as a scrollable list. The user of the mobile device 200 can scroll the listing 234 vertically such that the listing reveals additional suggested applications while hiding a portion of the currently displayed suggested applications.
- the listing 234 of suggested applications can include application-specific information for each suggested application such as an application name, an application developer, an application icon, a pricing and a rating.
- the application marketplace application after the user installs the selected application 209 on the mobile device 200, the application marketplace application returns an updated interface to the GUI 208 including the listing 234 of suggest applications (e.g., on a "thank you for downloading" user interface).
- an installation log can provide application installation data on a per user basis.
- the installation data can include timestamps corresponding to when each application was installed by a user and, if uninstalled by the user, when each application was uninstalled by the user.
- the installation data can be processed to generate an index of suggested
- the installation data can be anonymized so that no personally identifiable information can be determined for any user from the installation data.
- a score can be defined between two applications (e.g., AppA and AppB) that is indicative of a degree to which AppB is an install candidate in view of AppA.
- the higher the score the more often that the historical installation periods of AppA and AppB overlap and the longer AppB was installed based on the installation data.
- accidental and noise data are not taken into account in determining the score.
- the overall score is an aggregate score across all users (or a subset of all users) that have installed AppA and/or AppB. Examples of how the score is determined are discussed in detail herein.
- the score can be normalized based on the respective popularities of AppA and AppB. Examples of normalization are discussed in detail herein and can take the probability that the "trigger" application (e.g., AppA) is not installed while the recommendation candidate (e.g., AppB) is installed into account. The more likely that this happens, the less likely AppB is a candidate to AppA. In general, the more AppA is implied by AppB, the more likely AppB can be deemed to be an accessory to AppA.
- the "trigger" application e.g., AppA
- the recommendation candidate e.g., AppB
- FIG. 3 depicts an application installation timeline 300 and a table 302 for a particular, anonymous user 306 (Userl ).
- the installation timeline 300 provides a historical summary of when the user 306 installed and uninstalled a series of applications 308 (AppA, AppB, AppC, AppD, AppE).
- the table 302 summarizes the installation histories for each of the applications 308 in tabular form.
- a timeline 310 is provided.
- Each timeline 310 includes an install timestamp 312 and an uninstall timestamp 314.
- the user 306 installed AppA on a computing device at timestamp Ti and uninstalled AppA from the computing device at timestamp T 8 .
- one or more applications may be installed on the computing device, but may have not yet been uninstalled from the computing device. Consequently, a true uninstall timestamp would not be available.
- an artificial uninstall timestamp 314' can be provided.
- the artificial uninstall timestamp 314' can be set at a current timestamp TV
- the current timestamp T can correspond to a time when the installation data is retrieved or otherwise accessed for processing from the installation log.
- the user 306 installed AppE on the computing device at timestamp T 3 can correspond to a time when the installation data is retrieved or otherwise accessed for processing from the installation log.
- the user 306 installed AppE on the computing device at timestamp T 3 can correspond to a time when the installation data is retrieved or otherwise accessed for processing from the installation log.
- the application installation data is processed on a per user basis to recognize patterns between installations and uninstallations of applications.
- the installation timestamps and uninstallation timestamps are processed for pattern recognition between applications.
- Example patterns can include short installs, overlap in installs, closeness in install timestamps and/or closeness in uninstall timestamps.
- the installation overlap, as well as the closeness in time between the installs and the uninstalls of AppA and AppB can provide an indication of a per-user relationship between AppA and AppB (e.g., for the user 306). Compounding these patterns across a large number of users, as discussed in further detail below, can provide an indication of a universal relationship between AppA and AppB. As another example, the length of time between the installation and uninstallation of AppC on the computing device of the user 306 can indicate the lack of a relationship between AppA, for example, and AppC for at least the user 306. Compounding these patterns across a large number of users, as discussed in further detail below, can provide a stronger indication of a lack of a relationship between AppA and AppC.
- applications having too short of an installation history are removed from consideration.
- multiple versions of the same application can be installed to the computing device.
- a first version of an application can be installed on the computing device and can subsequently be updated by installation of a second version of the application.
- the existence of multiple versions can be recognized and the respective installation histories can be merged.
- the installation history of AppA can reveal that a first version of AppA was installed at the timestamp ⁇ and that a second version of AppA was installed at a later timestamp.
- the installation history of AppA can further reveal that the second version of AppA was uninstalled at timestamp T 8 .
- the installation data for the first and second versions can be merged, such that AppA includes the install timestamp Ti and the uninstall timestamp Ts.
- the above-described patterns are embodied in the form of a score that indicates a strength of a relationship between applications.
- a score is generated on a per-user basis and indicates the strength of a relationship between a subject application (AppX) and a target application (AppY).
- the scores across all users are totaled and normalized to provide an overall score per application pair. If the overall score is above a threshold overall score, the target application (AppY) can be identified as a suggested application for the subject application (AppX). For example, if the subject application (AppX) is selected by a user in an application marketplace, the target application (AppY) can be displayed as a suggested application.
- AppA is provided as the subject application (AppX) and AppB is provided as the target application (AppY).
- AppY is provided as the target application
- a corresponding overall score is calculated to determine whether AppB should be suggested if a user were to select AppA in an application marketplace.
- a score (SUJ.X . Y! where j is a user identifier) is determined based on timestamps.
- the timestamps can include an install timestamp and an uninstall timestamp for the subject application (AppX), ⁇ and ⁇ , respectively, and an install timestamp and an uninstall timestamp for the target application (AppY), T Y
- AppA being the subject application, includes an install timestamp ⁇ ⁇ ⁇ ( ⁇ in FIG. 3) and an uninstall timestamp T A u (Ts in FIG. 3)
- AppB being the target application, includes an install timestamp TBI (T 2 in FIG.
- a score for the user 306 (SUI ,A_B) can be determined. It can be determined whether the time that AppB was installed on the computing device of the user 306 is less than a threshold time (t T HR)- For example, if the difference (t
- NST is greater than or equal to t T HR
- SUI ,A_B is determined based on T A i, T A u, T B i and T B u-
- T B i is less than a first factor that is determined based on T A i
- SUI , A _B can be calculated using a pre-defined relationship.
- the factor can be calculated based on T A
- the weighting factor can be provided as a constant.
- the pre-defined relationship can be provided as:
- SUI ,A_B ⁇ * MAX(1 .0, (k 2 - (ABS(T B i - T A ,)) / (T AU - T A ,))) which is a score indicating a strength of an asymmetric relationship between AppA and AppB based on the installation data of the particular user (i.e., Userl ).
- the score can be modified based on a comparison of install timestamps and uninstall timestamps. For example, if T B i is earlier than T AU , and if T B i is later than T A i, the score SUI , A _B can be incremented by a constant.
- T B i is not less than the first factor, and if a difference between install timestamps (e.g., ABS(T B i - T A
- a total score (S T OTAL,X_Y) f° r AppX and AppY can be calculated based on the following relationship:
- a total score (STOTAL,A_B) for AppA and AppB can be calculated based on the following relationship:
- STOTAL,A_B SU1 ,A_B + ... + Suj,A_B which is a score indicating a strength of an asymmetric relationship between AppA and AppB based on the installation data of all users that have installed AppA and AppB at some point.
- a normalization process can be performed to normalize S T OTAL,X_Y to provide an overall score (osx_ Y ).
- the normalization process can determine osx_ Y based on S T OTAL,X_Y an d one or more normalized scores.
- An example normalized score (1 - ⁇ _ ⁇ ) (e.g., dependence score) can be estimated based on the following example relationship:
- psy can be determined based on the number of times the target application (AppY) has been installed on user computing devices. Continuing with the non-limiting example above, 1 -N IA_B for the subject application (AppA) and the target application (AppY) can be determined as:
- Another example probability can include the probability ( ⁇ ⁇ ) that the subject application (AppX) is installed given that the target application (AppY) is also installed, and can be determined based on the following example relationship:
- PA B can be determined as:
- PA_B STOTAL,A_B/(PSB + ⁇ 3)
- osx_ Y can be determined based on the following example relationship:
- OSA B can be determined as:
- OSX Y can be determined based on the following example relationship:
- OSX Y k 4 * (1 -N
- the overall score (OSX Y) can be compared to a threshold overall (OSTHR) to determine whether the target application (AppY) should be suggested when the subject application (AppX) is selected. If osx_ Y is greater than or equal to OSTHR, the relationship between AppX and AppY is strong enough to suggest AppY when AppX is selected. Consequently, AppY is added to an initial index of suggested applications as a suggested application in view of AppX. If osx_ Y is less than OSTHR, the relationship between AppX and AppY is not strong enough to suggest AppY when AppX is selected. Consequently, AppY is not added to the initial index of suggested applications as a suggested application in view of AppX.
- OSTHR threshold overall
- OSA_B is greater than or equal to OS T HR, the relationship between AppA and AppB is strong enough to suggest AppB when AppA is selected by a user in an application marketplace.
- AppB is added to the initial index of suggested applications as a suggested application in view of AppA.
- This process is completed for various other application pairs, in which AppA is the subject application.
- the following overall scores can be determined: os A B , OS A _C, OSA D and os A E -
- Each of os A B , OS A _C, OS a d and os A E can be compared to OS T HR to determine whether to include AppB, AppC, AppD and/or AppE in the initial index of suggested applications as a suggested application in view of AppA.
- An example resultant index of suggested applications can be provided as:
- the suggested applications that are actually displayed to a user in an application marketplace can be based on the initial index of suggested applications.
- the example initial index of suggested applications as a non-limiting example, if the user selects AppA in the application marketplace, information corresponding to applications AppB, AppD and AppE may be displayed as suggested applications.
- the suggested applications can be displayed in ranked order based on the respective overall scores. For example, for the application pairs (AppA, AppB), (AppA, AppD), (AppA, AppE), the overall scores can be provided as os A B , os A D and os A E , respectively.
- the suggested application with the highest overall score is displayed highest in the ranked order and the suggested application with the lowest overall score is displayed lowest in the ranked order.
- the number of suggested applications that are to be displayed can be limited based on the respective overall scores. For example, the top (e.g., 3, 5, 10) suggested applications based on overall score are displayed.
- the initial index of suggested applications can be processed using application metadata to generate a final index of suggested applications.
- the application metadata can include filter metadata that can be used to filter (e.g., remove) applications from the initial index of suggested applications, as described in detail below.
- the filter metadata of an application can be compared to the filter metadata of each corresponding suggested application. If the filter metadata of the applications corresponds, the suggested application remains in the list of related applications the final index of related applications. If the filter metadata of the applications does not correspond, the related application is removed from the list of suggested applications. Further, in some implementations, if the filter metadata is not above a threshold, described in detail below, the suggested application is removed from the list of suggested applications.
- Filter metadata can include, for example, category metadata, content metadata, title metadata, description metadata, install metadata, rating metadata, locale metadata and developer score metadata.
- category metadata of an application and each application in a corresponding list of suggested applications can be compared. If it is determined that the applications correspond to the same category (e.g., games, entertainment, educational), a suggested application remains in the list of suggested applications. If, however, it is determined that the applications do not correspond to the same category, the suggested application is removed from the list of suggested applications in the final index of suggested applications.
- the content metadata can indicate particular content of an application.
- the application content can include adult content, for example.
- the content metadata of an application and each application in a corresponding list of suggested applications can be compared. If it is determined that the applications correspond to the same content (e.g., adult), a suggested content (e.g., adult).
- the suggested application remains in the list of suggested applications. If, however, it is determined that the applications do not correspond to the same content, the suggested application is removed from the corresponding list of suggested applications.
- the content metadata of an application can indicate that the application includes adult content
- the content metadata of a suggested application in the corresponding list of suggested applications can indicate that the suggested application does not include adult content.
- an application marketplace can exclude applications including pornographic content, applications including content that may be deemed to be racy (e.g., applications including content related to lingerie, and/or content related to erotic novels) can still be available from the application marketplace.
- a comparison of the content metadata of the applications reveals that the content of the applications is different (i.e., the application includes adult content and the suggested application does not include adult content). Consequently, the application and the suggested application are no longer deemed to be applications that are relevant to one another and the index is adjusted accordingly.
- the title metadata of applications can be processed.
- the title metadata includes the title of the application that can be displayed to the user, for example, as application name 218 of FIG. 2.
- the applications are not maintained as applications that are relevant to one another.
- a title similarity score can be generated based on the text of each of the titles.
- the title similarity score can be generated based on keywords that are common to each of the titles.
- the title similarity score can be compared to a threshold title similarity score. If the title similarity score is less than the threshold title similarity score, the applications are not maintained as applications that are relevant to one another.
- the description metadata of applications can be processed.
- the description metadata includes information relating to a description of the application that can be displayed to the user.
- the description metadata can be provided by the developer of the application. In some implementations, if it is determined that at least one of the applications includes an empty description (e.g., the description is blank), the applications are not maintained as related applications.
- the install metadata of applications can be processed. In some embodiments,
- the install metadata includes the total number of installations of the application across multiple computing devices (e.g., computing devices 102). If it is determined that the number of installs of at least one of the applications in the corresponding list of suggested applications is below a minimum number of installs, the application is removed from the list of suggested applications.
- the install metadata includes an install ratio of the application. The install ratio is the number of uninstalls of the application per the number of installs of the application (e.g., after install of the application, the user uninstalls the
- the rating metadata of applications can be processed. In some implementations, if it is determined that the install ratio of at least one of the applications in the corresponding list of suggested applications is below a minimum install ratio, the application is removed from the list of suggested applications.
- the rating metadata includes a number of ratings of the application.
- the number of ratings is the total number of individual ratings associated with the application provided by users (e.g. the users 108) of the application.
- the rating metadata includes the average rating of the application. The average rating of the application can be across any subset (or all) of users of the application.
- the locale metadata of applications can be compared.
- the locale metadata indicates data relating to geographic regions where the application is supported.
- the locale can indicate a country where the application is supported, for example, China or the United States.
- the locale can indicate languages into which the application has been translated. For example, a given application can be provided in English and German.
- the applications can be maintained as applications that are relevant to one another.
- the applications include a language overlap (e.g., both applications are provided in English) and/or a country overlap (e.g., both applications are available in the United States), the applications are deemed to correspond to the same locale and are maintained as applications that are relevant to one another. If, however, it is determined that the applications do not correspond to the same locale, the applications are not maintained as
- the developer score metadata of applications can be compared.
- the developer score can relate to a rating associated with the developer of the application.
- the developer rating can be based on historical ratings of applications provided by the developer or an average rating of applications provided by the developer. In some implementations, if it is determined that the developer score of at least one of the applications is below a minimum score, the applications are no longer maintained as applications that are relevant to one another.
- application metadata can be processed to generate a final index of suggested applications.
- applications AppB, AppD and AppE are initially identified as suggested applications in view of AppA.
- the application metadata of AppA can be compared to corresponding application metadata of AppB, AppD and AppE, as discussed above. If the application metadata does not sufficiently correspond, one or more of AppB, AppD and AppE may be removed from the final index of related applications.
- the application metadata of AppA and AppD can be compared and it can be determined that AppA and AppD include different content, AppA and AppD belong to different categories, AppA and AppD correspond to different locals, the average rating of AppD is below a threshold average rating, and/or the number of ratings of AppD is below a threshold number of ratings. Consequently, AppD is removed and is not present in the final index of suggested applications.
- An example final index of suggested applications can be provided as:
- AppD and AppQ have been removed as suggested applications for AppA and AppL, respectively, based on the metadata processing.
- FIG. 4 is a block diagram of a system 400 that includes example components for identifying suggested applications and generating an index of suggested applications.
- the system 400 includes an install log database 402, an initial suggested applications engine 404, an application database 406, a metadata engine 408, a final suggested applications engine 410, and a related applications database 412.
- the components can be realized as one or more of computer- readable memory and a computer executable program that can be executed using one or more processors.
- the install log database 402 provides the information to the initial suggested applications engine 404.
- the initial suggested application engine 404 processes the information from the install log database 402 to generate an initial index of suggested applications 414.
- the initial index of suggested applications includes, for each subject application, a list of target applications that are deemed to be sufficiently relevant to the subject application to be suggested.
- the initial suggested applications engine 404 processes the data provided in the install log to generate per user scores, cumulative scores and overall scores for various application pairs, as discussed in detail above.
- the initial suggested applications engine 404 generates the initial index of suggested applications 414 based on the overall scores.
- the application database 406 stores information corresponding to the applications available for download to and installation on computing devices (e.g., the mobile device 200 of FIG. 2).
- the application database 406 provides information relating to the applications to the metadata engine 408.
- the metadata engine 408 processes this information to provide relevant metadata corresponding to each application.
- the metadata can include, for example, application name, developer name, rating, the price, category, whether an application is of a particular content (e.g., racy, religious), and the like.
- the metadata engine 408 provides the metadata of the applications to the final suggested applications engine 410.
- the final suggested applications engine 410 receives the metadata from the metadata engine 408 and the initial index of suggested applications from the initial suggested applications engine 404.
- the final suggested applications engine 410 processes the initial index of suggested applications 414 based on the metadata to generate a final index of suggested applications 416, as discussed above.
- the final suggested applications engine 410 provides the final index of suggested applications 416 to the suggested applications database 412.
- the suggested applications database 412 stores the final index of suggested applications 416.
- the suggested applications database 412 makes the final index of suggested
- FIG. 5 is a flowchart of an example process 500 that can be executed in accordance with implementations of the present disclosure.
- the example process 500 can be executed using one or more computing devices.
- one or more server systems e.g., the server system 104 of FIG. 1
- the one or more computing devices can include and/or execute one or more components including the components of FIG. 4.
- Installation data is received (502).
- installation data can be requested and provided to one or more computing devices executing the initial suggested applications engine 404 of FIG. 4.
- a counter j is set equal to 1 (504).
- Installation data is processed on a per user basis, as discussed above. For example, User j applications that were installed for too short of a time period are removed from consideration (506). As another example, User j applications are merged based on application versions (508).
- the per-user score, SUJ,X_Y > is calculated for each application pair for the applications installed by Userj (510). It is determined whether j is equal to j TOTAL (512). If j is not equal to JTOTAL, scores have not yet been calculated for all users, the counter j is incremented by one (514) and the process 500 loops back.
- j is equal to JTOTAL, scores have been calculated for all users, and STOTAL,X_Y is calculated for each application pair across all users (516).
- the overall score, OSX Y is calculated based on S T OTAL,X_Y f° r eacn application pair (518).
- An initial index of suggested applications is generated based on OSX Y for each application pair (520).
- Application metadata is processed and a final index of suggested applications is generated based on the initial index of related applications (522).
- the final index of suggested applications is stored in computer-readable memory (524).
- FIG. 6 is a flowchart illustrating an example process for displaying applications as suggested applications.
- the example process 600 can be executed using one or more computing devices.
- one or more server systems e.g., the server system 104 of FIG. 1
- server system 104 of FIG. 1 can be used to execute the example process 600.
- a search query is received (602).
- the search query can include search terms related to a specific application or a category of applications.
- Search results are generated (604).
- the search results can include a listing of applications that are identified as corresponding to the search terms.
- the search results are transmitted for display (606).
- the search results can be displayed on a mobile computing device (e.g. the mobile computing device 200).
- User input is received indicating a selection of an application from the search results (608).
- Application data is retrieved (610).
- the application data is retrieved in response to the user selection of the application.
- Suggested application(s) data is retrieved (612).
- the suggested application(s) data corresponds to applications deemed to be sufficiently relevant to the selected application.
- the suggested applications can be identified based on an index of suggested applications, using the selected application as an input.
- the application data and suggested application(s) data is transmitted for display (614). This data can be displayed on a mobile computing device (e.g. the mobile computing device 200
- Implementations of the present disclosure and all of the functional operations provided herein can be realized in digital electronic circuitry, or in computer software, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- Implementations of the present disclosure can be realized as one or more computer program products, i.e., one or more modules of computer program instructions encoded on a computer readable medium for execution by, or to control the operation of, data processing apparatus.
- the computer readable medium can be a machine-readable storage device, a machine-readable storage substrate, a memory device, a composition of matter effecting a machine-readable propagated signal, or a combination of one or more of them.
- data processing apparatus encompasses all apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, or multiple processors or computers.
- the apparatus can include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, or a combination of one or more of them.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, and it can be deployed in any form, including as a stand alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment.
- a computer program does not necessarily correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- the processes and logic flows described in this disclose can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output.
- the processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application specific integrated circuit).
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read only memory or a random access memory or both.
- Elements of a computer can include a processor for performing instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio player, a Global Positioning System (GPS) receiver, to name just a few.
- Computer readable media suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto optical disks; and CD ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- implementations of the present disclosure can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
- implementation can also be provided in multiple implementations separately or in any suitable subcombination.
- features may be described above as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Abstract
Description
Claims
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201161484143P | 2011-05-09 | 2011-05-09 | |
PCT/US2012/037100 WO2012154838A2 (en) | 2011-05-09 | 2012-05-09 | Generating application recommendations based on user installed applications |
Publications (2)
Publication Number | Publication Date |
---|---|
EP2710487A2 true EP2710487A2 (en) | 2014-03-26 |
EP2710487A4 EP2710487A4 (en) | 2015-06-17 |
Family
ID=46125531
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
EP12722249.5A Ceased EP2710487A4 (en) | 2011-05-09 | 2012-05-09 | Generating application recommendations based on user installed applications |
Country Status (3)
Country | Link |
---|---|
US (2) | US8484636B2 (en) |
EP (1) | EP2710487A4 (en) |
WO (1) | WO2012154838A2 (en) |
Families Citing this family (89)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8413052B2 (en) * | 2010-02-17 | 2013-04-02 | Yahoo! Inc. | Bidded marketplace for applications |
US8756488B2 (en) | 2010-06-18 | 2014-06-17 | Sweetlabs, Inc. | Systems and methods for integration of an application runtime environment into a user computing environment |
US9805022B2 (en) | 2010-12-09 | 2017-10-31 | Apple Inc. | Generation of topic-based language models for an app search engine |
EP2712442A1 (en) | 2011-05-09 | 2014-04-02 | Google, Inc. | Recommending applications for mobile devices based on installation histories |
WO2012154856A1 (en) | 2011-05-09 | 2012-11-15 | Google Inc. | Identifying applications of interest based on application metadata |
EP2710487A4 (en) | 2011-05-09 | 2015-06-17 | Google Inc | Generating application recommendations based on user installed applications |
WO2012154843A1 (en) | 2011-05-09 | 2012-11-15 | Google Inc. | Identifying applications of interest based on application market log data |
US8655645B1 (en) * | 2011-05-10 | 2014-02-18 | Google Inc. | Systems and methods for translation of application metadata |
US10089093B1 (en) | 2011-05-24 | 2018-10-02 | BlueStack Systems, Inc. | Apparatuses, systems and methods of switching operating systems |
US8924958B1 (en) * | 2011-05-24 | 2014-12-30 | BlueStack Systems, Inc. | Application player |
JP5533790B2 (en) * | 2011-06-15 | 2014-06-25 | コニカミノルタ株式会社 | Client server system provided with web application, and client device in the client server system |
US9519726B2 (en) | 2011-06-16 | 2016-12-13 | Amit Kumar | Surfacing applications based on browsing activity |
US10791538B1 (en) | 2011-07-06 | 2020-09-29 | BlueStack Systems, Inc. | Cloud-based data synchronization |
US9804864B1 (en) | 2011-10-07 | 2017-10-31 | BlueStack Systems, Inc. | Method of mapping inputs and system thereof |
KR20130057596A (en) * | 2011-11-24 | 2013-06-03 | 삼성전자주식회사 | Display apparatus and control method thereof, apparatus providing application and control method thereof |
US20130185133A1 (en) * | 2012-01-15 | 2013-07-18 | Linda Tong | Recommending virtual reward offers and awarding virtual rewards |
US8762389B1 (en) * | 2012-02-02 | 2014-06-24 | Google Inc. | Synonym identification based on search quality |
US8856168B2 (en) * | 2012-04-30 | 2014-10-07 | Hewlett-Packard Development Company, L.P. | Contextual application recommendations |
US9280789B2 (en) | 2012-08-17 | 2016-03-08 | Google Inc. | Recommending native applications |
US8775925B2 (en) | 2012-08-28 | 2014-07-08 | Sweetlabs, Inc. | Systems and methods for hosted applications |
US20140075428A1 (en) * | 2012-09-11 | 2014-03-13 | Millmobile Bv | Application detection system |
KR20140073258A (en) * | 2012-12-06 | 2014-06-16 | 삼성전자주식회사 | Method for providing application information and mobile terminal |
US9762698B2 (en) | 2012-12-14 | 2017-09-12 | Google Inc. | Computer application promotion |
US20140171116A1 (en) * | 2012-12-14 | 2014-06-19 | Anthony G. LaMarca | Location-aware mobile application management |
US9514478B2 (en) | 2013-01-23 | 2016-12-06 | Facebook, Inc. | Conversion tracking for installation of applications on mobile devices |
US20140214545A1 (en) * | 2013-01-31 | 2014-07-31 | Hao Zhang | Ranking of advertisements for display on a mobile device |
US9111219B1 (en) * | 2013-02-13 | 2015-08-18 | Amazon Technologies, Inc. | Performance based recommendations |
EP3742378A1 (en) * | 2013-02-21 | 2020-11-25 | Sweetlabs, Inc. | Method and system for requesting a cross-platform application |
US20140258308A1 (en) * | 2013-03-06 | 2014-09-11 | Microsoft Corporation | Objective Application Rating |
US9804994B2 (en) * | 2013-03-15 | 2017-10-31 | Microsoft Technology Licensing, Llc | Application architecture supporting multiple services and caching |
US10656800B2 (en) * | 2013-03-29 | 2020-05-19 | Microsoft Technology Licensing, Llc | Visual configuration and activation |
US10452222B2 (en) | 2013-05-29 | 2019-10-22 | Microsoft Technology Licensing, Llc | Coordination of system readiness tasks |
US20140365602A1 (en) * | 2013-06-10 | 2014-12-11 | International Business Machines Corporation | Recommending a mobile application based on environmental factors |
CN105247566B (en) | 2013-06-23 | 2020-10-16 | 英特尔公司 | Method, apparatus, and medium for selectively disclosing information based on context |
CN105247482B (en) * | 2013-06-28 | 2019-10-22 | 三星电子株式会社 | Update the method and apparatus of application |
CN104301360B (en) * | 2013-07-19 | 2019-03-12 | 阿里巴巴集团控股有限公司 | A kind of method of logdata record, log server and system |
US9591003B2 (en) * | 2013-08-28 | 2017-03-07 | Amazon Technologies, Inc. | Dynamic application security verification |
US20150073867A1 (en) * | 2013-09-12 | 2015-03-12 | Upsight, Inc. | Systems and Methods for Predicting User Lifetime Value Using Cohorts |
US9569536B2 (en) | 2013-12-17 | 2017-02-14 | Microsoft Technology Licensing, Llc | Identifying similar applications |
US9749440B2 (en) | 2013-12-31 | 2017-08-29 | Sweetlabs, Inc. | Systems and methods for hosted application marketplaces |
US9600258B2 (en) * | 2014-02-14 | 2017-03-21 | Google Inc. | Suggestions to install and/or open a native application |
US10108675B2 (en) * | 2014-03-19 | 2018-10-23 | Huawei Technologies Co., Ltd. | Application recommending method and system, and server |
US9524347B1 (en) * | 2014-04-01 | 2016-12-20 | Google Inc. | Automatically implementing an application in response to a search query |
US10089098B2 (en) | 2014-05-15 | 2018-10-02 | Sweetlabs, Inc. | Systems and methods for application installation platforms |
US10019247B2 (en) | 2014-05-15 | 2018-07-10 | Sweetlabs, Inc. | Systems and methods for application installation platforms |
US10846772B2 (en) | 2014-08-08 | 2020-11-24 | Microsoft Technology Licensing, Llc | Item maps for app store apps |
US9043333B1 (en) | 2014-08-19 | 2015-05-26 | Adlast, Inc. | Systems and methods for directing access to products and services |
US9467795B2 (en) | 2014-09-11 | 2016-10-11 | Motorola Solutions, Inc. | Method and apparatus for application optimization and collaboration of wearable devices |
US20160124959A1 (en) | 2014-10-31 | 2016-05-05 | Google Inc. | System and method to recommend a bundle of items based on item/user tagging and co-install graph |
US10332184B2 (en) * | 2014-12-15 | 2019-06-25 | Samsung Electronics Co., Ltd. | Personalized application recommendations |
RU2634219C2 (en) * | 2015-02-04 | 2017-10-24 | Общество С Ограниченной Ответственностью "Яндекс" | Method (versions) and server for application download |
US10013490B1 (en) * | 2015-03-13 | 2018-07-03 | Amazon Technologies, Inc. | Application search engine |
JP2018514020A (en) * | 2015-04-07 | 2018-05-31 | インテル コーポレイション | Avatar keyboard |
US20160299977A1 (en) * | 2015-04-13 | 2016-10-13 | Quixey, Inc. | Action-Based App Recommendation Engine |
US10146512B1 (en) | 2015-08-28 | 2018-12-04 | Twitter, Inc. | Feature switching kits |
US9841969B2 (en) * | 2015-09-02 | 2017-12-12 | Google Inc. | Software development and distribution platform |
US10133565B2 (en) * | 2015-10-16 | 2018-11-20 | International Business Machines Corporation | System and method for context aware mobile application installation queuing |
US10091206B2 (en) | 2015-10-30 | 2018-10-02 | Bank Of America Corporation | System for discovery of devices and connections associated with a device |
US9929917B2 (en) | 2015-10-30 | 2018-03-27 | Bank Of America Corporation | System for configuration and device connectivity based on user selection |
US10051015B2 (en) | 2015-10-30 | 2018-08-14 | Bank Of America Corporation | System for configuration, device connectivity and device control based on user selection |
US10031645B2 (en) | 2015-10-30 | 2018-07-24 | Bank Of America Corporation | Application connectivity for aggregation |
USD815107S1 (en) | 2015-10-30 | 2018-04-10 | Bank Of America Corporation | Display screen with a transitional graphical user interface |
US10095497B2 (en) | 2015-10-30 | 2018-10-09 | Bank Of America Corporation | System for discovery of software operable on a device |
USD784403S1 (en) | 2015-10-30 | 2017-04-18 | Bank Of America Corporation | Display screen with a transitional graphical user interface |
US10430025B2 (en) | 2015-10-30 | 2019-10-01 | Bank Of America Corporation | Active selection configuration system with suggested actions |
US10048836B2 (en) | 2015-10-30 | 2018-08-14 | Bank Of America Corporation | Application connectivity for aggregation and for use in data filtering |
US10158535B2 (en) | 2015-10-30 | 2018-12-18 | Bank Of America Corporation | System for active configuration of devices based on user selection |
US9946437B2 (en) | 2015-11-05 | 2018-04-17 | International Business Machines Corporation | Modifying an appearance of a GUI to improve GUI usability |
CN105630503B (en) * | 2015-12-28 | 2018-08-21 | 北京大学 | A kind of application and development mobile device choosing method based on user operation records |
US20170213272A1 (en) * | 2016-01-26 | 2017-07-27 | Microsoft Technology Licensing, Llc | Computer resource ranking for interconnected user profiles |
US10606658B2 (en) * | 2016-03-22 | 2020-03-31 | International Business Machines Corporation | Approach to recommending mashups |
US10672056B2 (en) * | 2016-03-31 | 2020-06-02 | AVAST Software s.r.o. | Systems and methods for recommending software based on user similarity |
US20170353603A1 (en) * | 2016-06-03 | 2017-12-07 | Facebook, Inc. | Recommending applications using social networking information |
US20180089309A1 (en) * | 2016-09-28 | 2018-03-29 | Linkedln Corporation | Term set expansion using textual segments |
US10789150B2 (en) * | 2016-10-07 | 2020-09-29 | Sap Portals Israel Ltd. | Static analysis rules and training data repositories |
US10832167B2 (en) * | 2017-01-03 | 2020-11-10 | Facebook, Inc. | Interest prediction for unresolved users in an online system |
US10310833B2 (en) * | 2017-01-30 | 2019-06-04 | Dell Products L.P. | Parallel diagnostic/software installation system |
US10467029B1 (en) * | 2017-02-21 | 2019-11-05 | Amazon Technologies, Inc. | Predictive graphical user interfaces |
JP6549675B2 (en) * | 2017-11-06 | 2019-07-24 | ヤフー株式会社 | Learning apparatus, learning method and learning program |
CN107832439B (en) * | 2017-11-16 | 2019-03-08 | 百度在线网络技术（北京）有限公司 | Method, system and the terminal device of more wheel state trackings |
US10824412B2 (en) * | 2018-04-27 | 2020-11-03 | Nutanix, Inc. | Method and apparatus for data driven and cluster specific version/update control |
CN108710801B (en) * | 2018-05-29 | 2019-03-22 | 北京迪诺益佳信息科技有限公司 | A kind of behavior management-control method of mobile application dynamically load code |
US11074060B2 (en) | 2018-11-15 | 2021-07-27 | Vmware, Inc. | Automated detection of patch criticality on customer environment |
CN111611143B (en) * | 2020-05-20 | 2023-06-30 | 每日互动股份有限公司 | Data processing method and device, electronic equipment and computer readable storage medium |
CN115803713A (en) * | 2020-06-21 | 2023-03-14 | 苹果公司 | Application library and page hiding |
US20220311834A1 (en) * | 2021-03-24 | 2022-09-29 | Data.Ai Inc. | Fast estimation of downloads for apps at launch |
US11775286B2 (en) * | 2021-10-08 | 2023-10-03 | Adobe, Inc. | Systems industry benchmarking and corporation systems tool recommendation |
CA3235818A1 (en) * | 2021-11-24 | 2023-06-01 | Kendra Vant | Methods and systems for building and/or using a graph data structure |
US11973646B2 (en) * | 2021-12-01 | 2024-04-30 | Motorola Solutions, Inc. | System and method for adapting workflows based on commonality with others |
Family Cites Families (61)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4977598A (en) * | 1989-04-13 | 1990-12-11 | Texas Instruments Incorporated | Efficient pruning algorithm for hidden markov model speech recognition |
US6185543B1 (en) | 1998-05-15 | 2001-02-06 | Marketswitch Corp. | Method and apparatus for determining loan prepayment scores |
US6317722B1 (en) * | 1998-09-18 | 2001-11-13 | Amazon.Com, Inc. | Use of electronic shopping carts to generate personal recommendations |
AU758059B2 (en) | 1999-05-04 | 2003-03-13 | Two Way Media Limited | Interactive applications |
US6675382B1 (en) * | 1999-06-14 | 2004-01-06 | Sun Microsystems, Inc. | Software packaging and distribution system |
US20020152200A1 (en) * | 2000-05-31 | 2002-10-17 | Krichilsky Philip S. | System and method for retrieving information pertaining to product |
US20050120113A1 (en) | 2000-06-28 | 2005-06-02 | Accountability International, Inc. | System and method for monitoring application utilization |
WO2002029682A1 (en) | 2000-10-02 | 2002-04-11 | International Projects Consultancy Services, Inc. | Object-based workflow system and method |
US6957390B2 (en) | 2000-11-30 | 2005-10-18 | Mediacom.Net, Llc | Method and apparatus for providing dynamic information to a user via a visual display |
US6925649B2 (en) | 2001-03-30 | 2005-08-02 | Sharp Laboratories Of America, Inc. | Methods and systems for mass customization of digital television broadcasts in DASE environments |
US7321858B2 (en) | 2001-11-30 | 2008-01-22 | United Negro College Fund, Inc. | Selection of individuals from a pool of candidates in a competition system |
CN1679034A (en) | 2002-04-08 | 2005-10-05 | 托普科德公司 | System and method for soliciting proposals for software development services |
US7698182B2 (en) | 2002-04-29 | 2010-04-13 | Evercom Systems, Inc. | Optimizing profitability in business transactions |
US20040093595A1 (en) | 2002-08-08 | 2004-05-13 | Eric Bilange | Software application framework for network-connected devices |
US8280894B2 (en) | 2003-01-22 | 2012-10-02 | Amazon Technologies, Inc. | Method and system for maintaining item authority |
US8122106B2 (en) | 2003-03-06 | 2012-02-21 | Microsoft Corporation | Integrating design, deployment, and management phases for systems |
US7130734B2 (en) | 2003-10-14 | 2006-10-31 | General Motors Corporation | Two clutch fixed-ratio exit control for multi-mode hybrid drive |
US7685011B2 (en) | 2003-10-25 | 2010-03-23 | Wilson Thomas W | Method and system for optimizing resource allocation based on cohort times |
US7644013B2 (en) | 2003-12-04 | 2010-01-05 | American Express Travel Related Services Company, Inc. | System and method for resource optimization |
US7685012B2 (en) | 2003-12-30 | 2010-03-23 | Wilson Thomas W | Method and system for analyzing resource allocation based on cohort times |
US7594006B2 (en) | 2004-04-27 | 2009-09-22 | Hewlett-Packard Development Company, L.P. | Trending method and apparatus for resource demand in a computing utility |
US7523099B1 (en) | 2004-12-30 | 2009-04-21 | Google Inc. | Category suggestions relating to a search |
JP4698281B2 (en) * | 2005-05-09 | 2011-06-08 | ソニー・エリクソン・モバイルコミュニケーションズ株式会社 | Mobile terminal, information recommendation method and program |
US8245239B2 (en) | 2005-07-06 | 2012-08-14 | Honeywell International Inc. | Deterministic runtime execution environment and method |
US7945545B1 (en) | 2005-10-13 | 2011-05-17 | Hewlett-Packard Development Company, L.P. | Method and system for utilizing user information to provide a network address |
US20070208583A1 (en) | 2006-03-01 | 2007-09-06 | Apple Computer, Inc. | Computing popularity based upon subscriptions |
US20070233782A1 (en) | 2006-03-28 | 2007-10-04 | Silentclick, Inc. | Method & system for acquiring, storing, & managing software applications via a communications network |
US8175802B2 (en) | 2007-06-28 | 2012-05-08 | Apple Inc. | Adaptive route guidance based on preferences |
US20090163183A1 (en) * | 2007-10-04 | 2009-06-25 | O'donoghue Hugh | Recommendation generation systems, apparatus and methods |
US8473325B2 (en) | 2007-10-12 | 2013-06-25 | Pie Digital, Inc. | System and method for automatic configuration and management of home network devices using a hierarchical index model |
US7890870B1 (en) | 2007-12-06 | 2011-02-15 | Sprint Communications Company L.P. | Monitoring network functions concurrently utilizing a performance display |
US7831695B1 (en) | 2008-02-18 | 2010-11-09 | Sprint Communications Company L.P. | System and method for it system migration management |
US8169481B2 (en) | 2008-05-05 | 2012-05-01 | Panasonic Corporation | System architecture and process for assessing multi-perspective multi-context abnormal behavior |
US10255580B2 (en) | 2008-05-05 | 2019-04-09 | Apple Inc. | Network-based distribution of application products |
US8327349B2 (en) | 2008-07-11 | 2012-12-04 | Internationanl Business Machines Corporation | Matching plug-ins to users |
US20100042616A1 (en) | 2008-08-12 | 2010-02-18 | Peter Rinearson | Systems and methods for selecting and presenting representative content of a user |
US9135433B2 (en) | 2008-08-29 | 2015-09-15 | Adobe Systems Incorporated | Identifying reputation and trust information for software |
US8478641B2 (en) | 2008-09-22 | 2013-07-02 | At&T Intellectual Property I, L.P. | Managing advertising services for mobile devices and users |
US8984628B2 (en) | 2008-10-21 | 2015-03-17 | Lookout, Inc. | System and method for adverse mobile application identification |
JP5257311B2 (en) | 2008-12-05 | 2013-08-07 | ソニー株式会社 | Information processing apparatus and information processing method |
US9069908B2 (en) | 2009-03-16 | 2015-06-30 | Apple Inc. | Accessory and mobile computing device communication using an application communication protocol |
US10984397B2 (en) | 2009-03-31 | 2021-04-20 | Ebay Inc. | Application recommendation engine |
US8725745B2 (en) | 2009-04-13 | 2014-05-13 | Microsoft Corporation | Provision of applications to mobile devices |
US20100280892A1 (en) | 2009-04-30 | 2010-11-04 | Alcatel-Lucent Usa Inc. | Method and system for targeted offers to mobile users |
CN102483753A (en) * | 2009-05-27 | 2012-05-30 | 谷歌公司 | Computer Application Data In Search Results |
US9112928B2 (en) | 2009-05-29 | 2015-08-18 | Nokia Technologies Oy | Method and apparatus for automatic loading of applications |
US8346847B2 (en) | 2009-06-03 | 2013-01-01 | Apple Inc. | Installing applications based on a seed application from a separate device |
US20110077951A1 (en) | 2009-09-30 | 2011-03-31 | John Tullis | Mobile Device Including Mobile Application |
US20110087975A1 (en) | 2009-10-13 | 2011-04-14 | Sony Ericsson Mobile Communications Ab | Method and arrangement in a data |
US20110106775A1 (en) | 2009-11-02 | 2011-05-05 | Copyright Clearance Center, Inc. | Method and apparatus for managing multiple document versions in a large scale document repository |
US8559931B2 (en) * | 2009-11-04 | 2013-10-15 | Cellco Partnership | Application suggestions for mobile communication device based on location-based directory information |
US8225001B2 (en) | 2010-01-06 | 2012-07-17 | International Business Machines Corporation | Feature propagation |
US20110307354A1 (en) * | 2010-06-09 | 2011-12-15 | Bilgehan Erman | Method and apparatus for recommending applications to mobile users |
US8396759B2 (en) | 2010-06-18 | 2013-03-12 | Google Inc. | Context-influenced application recommendations |
US20120072283A1 (en) * | 2010-09-16 | 2012-03-22 | Mobilmeme, Inc. | Mobile application recommendation system and method |
US20120316955A1 (en) | 2011-04-06 | 2012-12-13 | Yahoo! Inc. | System and Method for Mobile Application Search |
WO2012154843A1 (en) | 2011-05-09 | 2012-11-15 | Google Inc. | Identifying applications of interest based on application market log data |
EP2712442A1 (en) | 2011-05-09 | 2014-04-02 | Google, Inc. | Recommending applications for mobile devices based on installation histories |
EP2710487A4 (en) | 2011-05-09 | 2015-06-17 | Google Inc | Generating application recommendations based on user installed applications |
WO2012154856A1 (en) | 2011-05-09 | 2012-11-15 | Google Inc. | Identifying applications of interest based on application metadata |
EP2864945A4 (en) | 2012-05-09 | 2016-04-20 | Google Inc | Generating application recommendations based on user feedback |
-
2012
- 2012-05-09 EP EP12722249.5A patent/EP2710487A4/en not_active Ceased
- 2012-05-09 WO PCT/US2012/037100 patent/WO2012154838A2/en active Application Filing
- 2012-06-22 US US13/530,204 patent/US8484636B2/en active Active
-
2013
- 2013-06-05 US US13/910,343 patent/US8924955B2/en active Active
Also Published As
Publication number | Publication date |
---|---|
US20120291022A1 (en) | 2012-11-15 |
WO2012154838A3 (en) | 2013-04-18 |
US8484636B2 (en) | 2013-07-09 |
US8924955B2 (en) | 2014-12-30 |
US20130268397A1 (en) | 2013-10-10 |
EP2710487A4 (en) | 2015-06-17 |
WO2012154838A2 (en) | 2012-11-15 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8924955B2 (en) | Generating application recommendations based on user installed applications | |
US8566173B2 (en) | Using application market log data to identify applications of interest | |
US8825663B2 (en) | Using application metadata to identify applications of interest | |
US8819025B2 (en) | Recommending applications for mobile devices based on installation histories | |
JP5956569B2 (en) | Identify relevant applications based on browsing activity | |
CN110083458B (en) | System and method for facilitating task completion through inter-application communication | |
US8762360B2 (en) | Integrating applications within search results | |
US8290818B1 (en) | System for recommending item bundles | |
US20150227523A1 (en) | Computer Application Data In Search Results | |
US20160117388A1 (en) | Searching and Accessing Application Functionality | |
US20140280015A1 (en) | Serving advertisements for search preview based on user intents | |
US20170097967A1 (en) | Automated Customization of Display Component Data for Search Results | |
EP2864945A2 (en) | Generating application recommendations based on user feedback | |
AU2015301043B2 (en) | Item maps for app store apps | |
US10747792B2 (en) | Streaming events analysis for search recall improvements | |
US20170177706A1 (en) | Category-Based Search System and Method for Providing Application Related Search Results | |
US9946794B2 (en) | Accessing special purpose search systems |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PUAI | Public reference made under article 153(3) epc to a published international application that has entered the european phase |
Free format text: ORIGINAL CODE: 0009012 |
|
17P | Request for examination filed |
Effective date: 20131206 |
|
AK | Designated contracting states |
Kind code of ref document: A2Designated state(s): AL AT BE BG CH CY CZ DE DK EE ES FI FR GB GR HR HU IE IS IT LI LT LU LV MC MK MT NL NO PL PT RO RS SE SI SK SM TR |
|
DAX | Request for extension of the european patent (deleted) | ||
A4 | Supplementary search report drawn up and despatched |
Effective date: 20150520 |
|
RIC1 | Information provided on ipc code assigned before grant |
Ipc: G06F 17/30 20060101AFI20150513BHEPIpc: G06F 9/445 20060101ALI20150513BHEPIpc: G06Q 30/06 20120101ALI20150513BHEPIpc: G06F 15/16 20060101ALI20150513BHEPIpc: G06Q 30/02 20120101ALI20150513BHEP |
|
17Q | First examination report despatched |
Effective date: 20170512 |
|
RAP1 | Party data changed (applicant data changed or rights of an application transferred) |
Owner name: MAHANIOK, IHAROwner name: GOOGLE LLCOwner name: HERNADVOLGYI, ISTVAN T.Owner name: MEHTA, BHASKAR |
|
REG | Reference to a national code |
Ref country code: DERef legal event code: R003 |
|
STAA | Information on the status of an ep patent application or granted ep patent |
Free format text: STATUS: THE APPLICATION HAS BEEN REFUSED |
|
18R | Application refused |
Effective date: 20180702 |
|
P01 | Opt-out of the competence of the unified patent court (upc) registered |
Effective date: 20230519 |
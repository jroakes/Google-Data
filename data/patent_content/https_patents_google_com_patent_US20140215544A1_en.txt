US20140215544A1 - Music on video site - Google Patents
Music on video site Download PDFInfo
- Publication number
- US20140215544A1 US20140215544A1 US14/229,794 US201414229794A US2014215544A1 US 20140215544 A1 US20140215544 A1 US 20140215544A1 US 201414229794 A US201414229794 A US 201414229794A US 2014215544 A1 US2014215544 A1 US 2014215544A1
- Authority
- US
- United States
- Prior art keywords
- list
- client
- server
- user
- music
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Abandoned
Links
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/20—Servers specifically adapted for the distribution of content, e.g. VOD servers; Operations thereof
- H04N21/23—Processing of content or additional data; Elementary server operations; Server middleware
- H04N21/232—Content retrieval operation locally within server, e.g. reading video streams from disk arrays
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/40—Client devices specifically adapted for the reception of or interaction with content, e.g. set-top-box [STB]; Operations thereof
- H04N21/45—Management operations performed by the client for facilitating the reception of or the interaction with the content or administrating data related to the end-user or to the client device itself, e.g. learning user preferences for recommending movies, resolving scheduling conflicts
- H04N21/462—Content or additional data management, e.g. creating a master electronic program guide from data received from the Internet and a Head-end, controlling the complexity of a video stream by scaling the resolution or bit-rate based on the client capabilities
- H04N21/4627—Rights management associated to the content
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/70—Information retrieval; Database structures therefor; File system structures therefor of video data
- G06F16/78—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually
- G06F16/783—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually using metadata automatically derived from the content
- G06F16/7834—Retrieval characterised by using metadata, e.g. metadata not derived from the content or metadata generated manually using metadata automatically derived from the content using audio features
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/40—Client devices specifically adapted for the reception of or interaction with content, e.g. set-top-box [STB]; Operations thereof
- H04N21/47—End-user applications
- H04N21/482—End-user interface for program selection
- H04N21/4826—End-user interface for program selection using recommendation lists, e.g. of programs or channels sorted out according to their score
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/60—Network structure or processes for video distribution between server and client or between remote clients; Control signalling between clients, server and network components; Transmission of management data between server and client, e.g. sending from server to client commands for recording incoming content stream; Communication details between server and client
- H04N21/65—Transmission of management data between client and server
- H04N21/658—Transmission by the client directed to the server
- H04N21/6581—Reference data, e.g. a movie identifier for ordering a movie or a product identifier in a home shopping application
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N21/00—Selective content distribution, e.g. interactive television or video on demand [VOD]
- H04N21/80—Generation or processing of content or additional data by content creator independently of the distribution process; Content per se
- H04N21/81—Monomedia components thereof
- H04N21/8106—Monomedia components thereof involving special audio data, e.g. different tracks for different languages
- H04N21/8113—Monomedia components thereof involving special audio data, e.g. different tracks for different languages comprising music, e.g. song in MP3 format
Definitions
- the disclosure relates to accessing music on internet video sites
- Many computing devices allow users to store songs in digitally encoded media files, for playback by the computing device or for transmission to and playback on another device.
- these devices are personal computers, tablet computers, dedicated music player devices, and mobile telephones.
- Users create libraries of songs that are stored on a device, for example, by purchasing the songs from on-line music stores or by copying the music from compact discs or other media. These songs then are accessible on the device and can be played on demand by the user.
- these devices allow users to create lists of songs that can be executed to play a series of songs in the order they appear in the list, or in a randomized order. This is a popular feature of music playing devices, as it allows users to create different lists of music for different purposes, such as a music playlist for a party or a music playlist for jogging. Users invest significant amounts of time in developing these playlists.
- Some mobile devices such as mobile phones, have the capability to play music, but have limited storage capability. Also, it is inconvenient to transfer music from one device such as a personal computer and store it on other devices.
- Disclosed herein are systems and methods for identifying and playing music on a video site.
- One aspect of the embodiments taught herein is a method that is performed by one or more server computers.
- the method includes receiving, from a client, a plurality of music titles for respective music pieces that a user has the right to listen to; determining, for one of the plurality of music titles, that a matching video stored on the server has the respective music piece for the music title as an audio component of the matching video; adding the matching video to a list of matching videos; and storing the list of matching videos on the one or more server computers so that it is accessible to a user associated with the client.
- the video server includes an object store containing a plurality of videos each having an audio component; a search component that receives a plurality of music titles for respective music pieces that a user has the right to listen to and determines, for one of the plurality of music titles, that a matching video of the plurality of videos in the object store has the respective music piece for the music title as an audio component of the matching video; and a list manager that adds the matching video to a list of matching videos and stores the list of matching videos on the one or more server computers so that it is accessible to a user associated with the client.
- the video server includes an object store containing a plurality of videos each having an audio component; a list store; a search component that receives, from a client, a plurality of music titles for respective music pieces that a user has the right to listen to and determines, for one of the plurality of music titles, that a matching video of the plurality of videos in the object store has the respective music piece for the music title as an audio component of the matching video; and a list manager that adds the matching video to a list of matching videos, associates the list of matching videos with a user account specified by the client, and stores the list of matching videos in the list store so that it is accessible to a user associated with the user account.
- FIG. 1 is block diagram showing an exemplary environment for operation of a system for indentifying and playing music on a video site;
- FIG. 2 is a flow chart showing an exemplary process for indentifying and playing music on a video site
- FIG. 3 is a block diagram showing an exemplary computer system.
- FIG. 1 shows a client 20 , a server 50 , and one or more other devices 100 that are all connected for transmission of data, signals, and other electrical communications with one another by a network 10 , such as the internet.
- the client 20 and the one or more other devices 100 are related to each other in that they are controlled by a common user and/or used to access a single user account that is maintained by the server 50 .
- the client 20 can be a personal computer that is utilized by the user, and the other devices 100 could include an internet connected mobile telephone that is utilized by the user.
- the server 50 In addition to servicing the user that is associated with the client 20 and the other devices 100 , the server 50 also services a large number of other, distributed users, each of which is associated with an additional client that is analogous to the client 20 and optionally with one or more other devices that are analogous to the other devices 100 .
- the client 20 includes a client side object store 30 .
- the client side object store 30 is a computer-readable media that is operable to store data in a form that can be accessed and used by the client 20 .
- the client side object store 30 can be a conventional storage device, such as a hard disk drive, an optical disk, a floppy disk, a memory card, or any other suitable type of storage now known or later developed.
- the client side object store 30 contains a plurality of client side objects 32 and object information 34 that relates to the client side objects 32 .
- the object information 34 can be encoded within each of the client side objects 32 , such that each client side object 32 contains the object information 34 corresponding to the music piece encoded in it, or the object information 34 could be encoded separately from the client side objects 32 .
- the client side objects 32 are music pieces that are encoded in a computer interpretable format.
- music piece refers to an audio recording of definite length, analogous to an audio track.
- a music piece can correspond to a single musical composition.
- music piece can encompass works other than musical compositions, such as an audio book or a portion of an audio book.
- the music pieces that are encoded as the client side objects 32 can be music pieces that the user has the right to listen to, for example, on a music service, by possession of a license to listen to the music pieces, or by virtue of the public domain status of the music pieces.
- the user's right to listen to the respective music pieces can derive from content licenses that are associated with the client 20 .
- the content licenses can be computer readable documents that are stored in the client side object store 30 in association with the client side objects 32 .
- MPEG-1 or MPEG-2 Audio Layer III format which is commonly referred to as MP3 format.
- Other audio encoding formats, public or proprietary, now known or later developed can be utilized as a basis for encoding the music titles as the client side objects 32 .
- the object information 34 is metadata that describes one or more characteristics of the client side objects 32 .
- the object information 34 can be stored in a metadata container that is a portion of each client side object 32 .
- One example of storage of the object information 34 within each client side object 32 is an ID3 format tag, which is commonly appended to MP3 format media files.
- the object information 34 can be in the form of one or more files that are stored separately from the client side objects 32 in the client side object store 30 .
- One example of separate storage of the object information 34 separate from the client side objects 32 is an index file that contains the object information 34 for some or all of the client side objects 32 .
- An XML format file can be used for this purpose.
- an index file in which the object information 34 can be stored is a playlist file that identifies a plurality of the client side objects 32 , such as by file name or music title, and also specifies a play order for the client side objects 32 .
- a playlist file format that can be used to encode the object information 34 is an M3U format playlist file.
- the object information 34 includes music titles for one or more of the music pieces that are encoded as the client side objects 32 .
- the object information 34 can optionally include additional information such as the artist, album, and track number for the music pieces that are encoded as the client side objects 32 .
- music title refers to a title that is used to identify a respective music piece, such as the title of an individual track of an album.
- a music title need not, however, be unique to that music piece.
- a music title that identifies one of the client side objects 32 could also identify other music pieces.
- These other music pieces could be alternative versions of musical composition or other work on which the music piece is based, or could be otherwise unrelated works that coincidentally have the same music title.
- the client 20 also includes a connector application 40 that is operable to send the object information 34 to the server 50 .
- the connector application 40 can be an executable software program that is resident on the client 20 .
- the connector application can compile the object information 34 from various sources on the client, such as from the client side objects 32 themselves or from the object information 34 in the form of an index file, and upload the object information 34 to the server, either in response to a user request, or as a scheduled task that executes periodically.
- the connector application 40 can be a web application that is provided to the client 20 by the server 50 , using web browser software that is resident on and executed by the client.
- the web application either scans the client side object store 30 to compile the object information 42 , or alternatively, is pointed to a specific file, such as an index or a playlist file that contains the object information 34 , by the user.
- the server 50 includes a search component 60 , a server side object store 70 , a list manager 80 , and a list store 90 .
- the server side object store 70 and the list store 90 are storage devices or portions of storage devices.
- a single physical storage device can include both the server side object store 70 and the list store 90 . Any suitable storage device can be utilized, as described in connection with the client side object store 30 .
- the search component 60 and the list manager 80 can be implemented in the form of executable software programs or functions that are resident on the server 50 and are operable to perform the functionality described herein when executed by the server 50 .
- the search component 60 and the list manager 80 are in communication with one another, in that the search component 60 receives input from the list manager 80 and provides output to the list manager in response.
- the list manager 80 is operable to receive the object information 34 that is transmitted to the server 50 from the connector application of the client 20 . Based on the received object information 34 , the list manager 80 formulates search queries and transmits the search queries to the search component 60 .
- the search queries formulated and transmitted by the list manager 80 can be in any suitable form, structured or unstructured. As an example, the queries could be unstructured lists of one or more keywords. As another example, the queries could be structured queries including a keyword to be searched for each of one or more identified search fields, such as title, album, artist name, etc.
- the search component 60 receives search queries from the list manager 80 .
- the search component 60 utilizes the search queries that it receives from the list manager 80 to perform search queries based on the object information 34 that is received from the client 20 to determine whether one or more server side objects 72 that are disposed within the server side object store 70 correspond to the parameters specified by the object information 34 .
- the search can be performed by the search component by comparing the parameters specified by the search queries to server side object information 74 , which is metadata that describes the server side objects 72 .
- the server side objects 72 that are stored in the server side object store 70 of the server 50 are videos that include an audio component.
- the search component 60 determines whether one of the server side objects 72 within the server side object store 70 is a matching video with respect to the music pieces stored as the client side objects 32 , the search component can do so on the basis that the music title specified by the object information 34 corresponds to the music piece that is encoded as the audio component of the video that is stored as the server side object 72 within the server side object store 70 .
- server side object information 74 can be stored within the server side object store 70 , either within the server side objects 72 themselves or separate from the server side objects 72 .
- the search component 60 After the search component 60 executes the search queries, it provides search results to the list manager 80 in the form of an identification of one or more of server side objects 72 that are present within the server side object store 70 . If the search results that are received from the search component 60 indicate that one or more of the server side objects 72 match the client side objects 32 , as described by the object information 34 , the list manager 80 adds the client side objects 32 that are identified as matching to a list 92 of matching objects. The list manager 80 then stores the list of matching objects in the list store 90 .
- the list 92 can be associated with a user account that is specified by the client 20 .
- the list store 90 can be a portion of a profile that is associated with the user account.
- the list 92 can be accessed by the user, using the other devices 100 . This allows the user to access the list 92 from a device other than the client 20 on which the client side objects 32 are stored.
- the server 50 is operable to transmit the server side objects 72 in response to a playback request.
- Transmission of the server side objects 72 can be in the form of a streaming video transmission within a web page or web application.
- the server 50 receives a playback request that is associated with the user account and which designates that list 92 of matching videos, the server 50 transmits one or more of the server side objects 72 that are specified by the list 92 in response to the playback request.
- the playback request can be made by one of the other devices 100 that is associated with the user account, and the server side objects 72 are transmitted to the other device 100 in response to the playback request.
- the list manager 80 can be configured to transmit a verification request to the client 20 in order to verify that the server side objects 72 that were identified as matching by the search component 60 actually correspond to the client side objects 32 .
- the verification request is transmitted to the client 20 by the list manager 80 and identifies at least one of the objects of the list 92 of matching objects.
- the verification request can cause a prompt to be displayed by the client 20 , which requests that the user provide input in the form of either a positive response, which indicates that the server side object 72 is a match to the client side object 32 or a negative response, which indicates that the server side object 72 is not a match to the client side object 32 .
- the response is transmitted to the list manager 80 of the server 50 by the client. If a negative response is received, the list manager 80 removes the reference to the server side object 72 from the list 92 .
- the server 50 can be configured to allow the list 92 to be modified by the client 20 .
- the client 20 can transmit to the server 50 a request to modify the list 92 of matching objects.
- This request could be, for example, in the form of selection, by the user of the client 20 , of a modification command that is present on a screen that is presented to a user of the client 20 , such as in the form of a web page.
- the request to modify the list 92 includes an identification of one or more of the server side objects 72 that is to be added or deleted from the list 92 .
- the list manager 80 modifies the list 92 .
- the updated list 92 is then transmitted to the client 20 .
- Step S 101 the object information 34 is compiled by the connector application 40 .
- the client 20 then transmits the object information 34 to the server 50 over the network 10 in Step S 102 , and the list manager 80 of the server 50 receives the object information 34 .
- transmission can be initiated by list manager 80 .
- the list manager 80 formulates a query based on the object information 34 that was received from the client 20 and transmits the query to the search component 60 .
- the search component 60 then executes the queries regarding the client side objects 32 in Step S 103 .
- Step S 104 the search component 60 identifies one or more server side objects 72 and reports the results to the list manager 80 , which adds an identification of the matching objects of the server side objects 72 to the list 92 in Step S 105 .
- the list manager 80 determines which matching server side object 72 to add to the list 92 (for example by random choice or by choosing an object that matches best).
- the list manager 80 determines which matching server side object 72 to use based at least in part on the identity of the user that uploaded the server side object 72 to the server 50 .
- Certain users could be given status as an “official” or “preferred” uploader, based on quality of the content provided, a certification process, a licensing arrangement, or other circumstance, and this recognition would be given weight be the list manager 80 when selecting between multiple server side objects 72 .
- the list manager 80 determines which matching server side object 72 to use based on the number of times that the server side object 72 has been viewed.
- the image resolution or other measure of quality of the server side object 72 is used by the list manager 80 as a basis for determining which server side object 72 to use.
- the preferences of other users such as indications by other users that they like a particular object or ratings, are used by the list manager 80 as a basis for determining which server side object 72 to use.
- list manager 80 accepts input from a user to choose which of multiple matching objects 72 to use.
- Step S 105 it is determined whether the object information 34 that was received by the server 50 identifies additional client side objects 32 for which search queries must be performed by the search component 60 . If there are additional client side objects 32 for which searches must be performed, Step S 106 evaluates as “yes,” and the process returns to Step S 103 . If there are no more client side objects 32 that are identified by the object information 34 for which additional searches must be performed, Step S 106 evaluates as “no,” and the process proceeds to Step S 107 . In Step S 107 , the completed list 92 is stored in the list store.
- Completed list 92 is, thus, available for the user associated with the client.
- the user can access the video service to access a playlist of videos that have the same musical content as is stored on his client-side device. By playing the video playlist, the user can access his playlist when he is away from his client device.
- Some implementations also allow the user to manage his video playlist to change the order of the videos and to add or delete videos from the playlist.
- Some implementations also allow other users to access the user's playlist, either publicly or with permission of the user, or both.
- a user could use an implementation to create a playlist of videos that have the soundtrack of the songs stored on his personal music device. He could then play that playlist at a location where he did not have access to his personal music device.
- the disclosure herein is made with reference to music pieces as the client side objects 32 and videos having an audio component as the server side objects 72 , the invention can be applied in other contexts.
- the client side objects 32 and the server side objects 72 could be movies, ebooks, contacts, and other types of media or objects.
- the client 20 , the server 50 , the other devices 100 , and other elements of the systems discussed in this disclosure can be implemented in the form of one or more machines or devices capable of performing the described functions. These devices could be or include a processor, a computer, specialized hardware or any other device.
- the described functionality can be embodied in software instructions that are executable by the device or devices.
- the term “computer” means any device of any kind that is capable of processing a signal or other information. Examples of computers include, without limitation, an application-specific integrated circuit (ASIC) a programmable logic array (PLA), a microcontroller, a digital logic controller, a digital signal processor (DSP), a desktop computer, a laptop computer, a tablet computer, and a mobile device such as a mobile telephone.
- a computer does not necessarily include memory or a processor.
- a computer may include software in the form of programmable code, micro code, and or firmware or other hardware embedded logic.
- a computer may include multiple processors which operate in parallel. The processing performed by a computer may be distributed among multiple separate devices, and the term computer encompasses all such devices when configured to perform in accordance with the disclosed embodiments.
- the conventional computer 1000 can be any suitable conventional computer.
- the conventional computer 1000 includes a processor such as a central processing unit (CPU) 1010 and memory such as RAM 1020 and ROM 1030 .
- a storage device 1040 can be provided in the form of any suitable computer readable medium, such as a hard disk drive.
- One or more input devices 1050 such as a keyboard and mouse, a touch screen interface, etc., allow user input to be provided to the CPU 1010 .
- a display 1060 such as a liquid crystal display (LCD) or a cathode-ray tube (CRT), allows output to be presented to the user.
- a communications interface 1070 is any manner of wired or wireless means of communication that is operable to send and receive data or other signals using the network 10 .
- the CPU 1010 , the RAM 1020 , the ROM 1030 , the storage device 1040 , the input devices 1050 , the display 1060 and the communications interface 1070 are all connected to one another by a bus 1080 .
- the client 20 , the server 50 , the other devices 100 , and other elements of the systems discussed in this disclosure can be implemented in the form of a single system or in the form of separate systems. Moreover, each of the client 20 , the server 50 , the other devices 100 , and other elements of the systems discussed in this disclosure can be implemented in the form of multiple computers, processors, or other systems working in concert. As an example, the functions of the server 50 can be distributed among a plurality of conventional computers, such as the computer 1000 , each of which are capable of performing some or all of the functions of the server 50 .
- components of the systems described herein can be connected for communications with one another by networks such as the network 10 .
- the communications functions described herein can be accomplished using any kind of network or communications means capable of transmitting data or signals. Suitable examples include the internet, which is a packet-switched network, a local area network (LAN), wide area network (WAN), virtual private network (VPN), or any other means of transferring data.
- LAN local area network
- WAN wide area network
- VPN virtual private network
- a single network or multiple networks that are connected to one another can be used. It is specifically contemplated that multiple networks of varying types can be connected together and utilized to facilitate the communications contemplated by the systems and elements described in this disclosure.
Abstract
A mobile device is provided that comprises a memory, a processing device, and a connector application. The connector application is, executed from the memory by the processing device to scan, at a scheduled time, a local object store for a plurality of music pieces that a user has the right to listen to, compile object information comprising music titles of the plurality of music pieces found in the local object store, send the object information to a server to identify matching videos having respective music pieces for the music titles in the object information, and receive a list of the matching videos from the server.
Description
- This is a continuation of International Application PCT/US2012/057989, with an international filing date of Sep. 28, 2012.
- The disclosure relates to accessing music on internet video sites
- Many computing devices allow users to store songs in digitally encoded media files, for playback by the computing device or for transmission to and playback on another device. Examples of these devices are personal computers, tablet computers, dedicated music player devices, and mobile telephones. Users create libraries of songs that are stored on a device, for example, by purchasing the songs from on-line music stores or by copying the music from compact discs or other media. These songs then are accessible on the device and can be played on demand by the user. As an extension of this capability, these devices allow users to create lists of songs that can be executed to play a series of songs in the order they appear in the list, or in a randomized order. This is a popular feature of music playing devices, as it allows users to create different lists of music for different purposes, such as a music playlist for a party or a music playlist for jogging. Users invest significant amounts of time in developing these playlists.
- Some mobile devices, such as mobile phones, have the capability to play music, but have limited storage capability. Also, it is inconvenient to transfer music from one device such as a personal computer and store it on other devices.
- Disclosed herein are systems and methods for identifying and playing music on a video site.
- One aspect of the embodiments taught herein is a method that is performed by one or more server computers. The method includes receiving, from a client, a plurality of music titles for respective music pieces that a user has the right to listen to; determining, for one of the plurality of music titles, that a matching video stored on the server has the respective music piece for the music title as an audio component of the matching video; adding the matching video to a list of matching videos; and storing the list of matching videos on the one or more server computers so that it is accessible to a user associated with the client.
- Another aspect of the embodiments taught herein is a video server including one or more server computers. The video server includes an object store containing a plurality of videos each having an audio component; a search component that receives a plurality of music titles for respective music pieces that a user has the right to listen to and determines, for one of the plurality of music titles, that a matching video of the plurality of videos in the object store has the respective music piece for the music title as an audio component of the matching video; and a list manager that adds the matching video to a list of matching videos and stores the list of matching videos on the one or more server computers so that it is accessible to a user associated with the client.
- Another aspect of the embodiments taught herein is a video server including one or more server computers. The video server includes an object store containing a plurality of videos each having an audio component; a list store; a search component that receives, from a client, a plurality of music titles for respective music pieces that a user has the right to listen to and determines, for one of the plurality of music titles, that a matching video of the plurality of videos in the object store has the respective music piece for the music title as an audio component of the matching video; and a list manager that adds the matching video to a list of matching videos, associates the list of matching videos with a user account specified by the client, and stores the list of matching videos in the list store so that it is accessible to a user associated with the user account.
- The description herein makes reference to the accompanying drawings wherein like reference numerals refer to like parts throughout the several views, and wherein:
-
FIG. 1 is block diagram showing an exemplary environment for operation of a system for indentifying and playing music on a video site; -
FIG. 2 is a flow chart showing an exemplary process for indentifying and playing music on a video site; and -
FIG. 3 is a block diagram showing an exemplary computer system. - Publicly available, internet connected video sites have vast libraries of videos with music content. These sites are legally accessible by the public through the internet. Users of the internet are able to access the libraries on these sites and listen to the music by having the music streamed to an internet connected device. However, there is no facility for identifying videos corresponding to user libraries and playlists to allow more convenient access to the music available on these publicly available, internet connected video sites.
-
FIG. 1 shows aclient 20, aserver 50, and one or moreother devices 100 that are all connected for transmission of data, signals, and other electrical communications with one another by anetwork 10, such as the internet. Theclient 20 and the one or moreother devices 100 are related to each other in that they are controlled by a common user and/or used to access a single user account that is maintained by theserver 50. For example, theclient 20 can be a personal computer that is utilized by the user, and theother devices 100 could include an internet connected mobile telephone that is utilized by the user. In addition to servicing the user that is associated with theclient 20 and theother devices 100, theserver 50 also services a large number of other, distributed users, each of which is associated with an additional client that is analogous to theclient 20 and optionally with one or more other devices that are analogous to theother devices 100. - The
client 20 includes a clientside object store 30. The clientside object store 30 is a computer-readable media that is operable to store data in a form that can be accessed and used by theclient 20. The clientside object store 30 can be a conventional storage device, such as a hard disk drive, an optical disk, a floppy disk, a memory card, or any other suitable type of storage now known or later developed. - The client
side object store 30 contains a plurality of client side objects 32 and object information 34 that relates to the client side objects 32. The object information 34 can be encoded within each of the client side objects 32, such that each client side object 32 contains the object information 34 corresponding to the music piece encoded in it, or the object information 34 could be encoded separately from the client side objects 32. - The client side objects 32 are music pieces that are encoded in a computer interpretable format. As used herein, “music piece” refers to an audio recording of definite length, analogous to an audio track. A music piece can correspond to a single musical composition. However, the term “music piece” can encompass works other than musical compositions, such as an audio book or a portion of an audio book.
- The music pieces that are encoded as the client side objects 32 can be music pieces that the user has the right to listen to, for example, on a music service, by possession of a license to listen to the music pieces, or by virtue of the public domain status of the music pieces. The user's right to listen to the respective music pieces can derive from content licenses that are associated with the
client 20. The content licenses can be computer readable documents that are stored in the clientside object store 30 in association with the client side objects 32. - One well-known format by which music pieces can be encoded in a computer interpretable format is the MPEG-1 or MPEG-2 Audio Layer III format, which is commonly referred to as MP3 format. Other audio encoding formats, public or proprietary, now known or later developed can be utilized as a basis for encoding the music titles as the client side objects 32.
- The object information 34 is metadata that describes one or more characteristics of the client side objects 32. The object information 34 can be stored in a metadata container that is a portion of each client side object 32. One example of storage of the object information 34 within each client side object 32 is an ID3 format tag, which is commonly appended to MP3 format media files. As an alternative, the object information 34 can be in the form of one or more files that are stored separately from the client side objects 32 in the client
side object store 30. One example of separate storage of the object information 34 separate from the client side objects 32 is an index file that contains the object information 34 for some or all of the client side objects 32. An XML format file can be used for this purpose. Another example of an index file in which the object information 34 can be stored is a playlist file that identifies a plurality of the client side objects 32, such as by file name or music title, and also specifies a play order for the client side objects 32. One example of a playlist file format that can be used to encode the object information 34 is an M3U format playlist file. - The object information 34 includes music titles for one or more of the music pieces that are encoded as the client side objects 32. In addition to the music title, the object information 34 can optionally include additional information such as the artist, album, and track number for the music pieces that are encoded as the client side objects 32.
- As used herein, the term “music title” refers to a title that is used to identify a respective music piece, such as the title of an individual track of an album. A music title need not, however, be unique to that music piece. On the contrary, a music title that identifies one of the client side objects 32 could also identify other music pieces. These other music pieces could be alternative versions of musical composition or other work on which the music piece is based, or could be otherwise unrelated works that coincidentally have the same music title.
- The
client 20 also includes aconnector application 40 that is operable to send the object information 34 to theserver 50. Theconnector application 40 can be an executable software program that is resident on theclient 20. For example, the connector application can compile the object information 34 from various sources on the client, such as from the client side objects 32 themselves or from the object information 34 in the form of an index file, and upload the object information 34 to the server, either in response to a user request, or as a scheduled task that executes periodically. As an alternative, theconnector application 40 can be a web application that is provided to theclient 20 by theserver 50, using web browser software that is resident on and executed by the client. The web application either scans the clientside object store 30 to compile the object information 42, or alternatively, is pointed to a specific file, such as an index or a playlist file that contains the object information 34, by the user. - The
server 50 includes asearch component 60, a serverside object store 70, alist manager 80, and alist store 90. The serverside object store 70 and thelist store 90 are storage devices or portions of storage devices. A single physical storage device can include both the serverside object store 70 and thelist store 90. Any suitable storage device can be utilized, as described in connection with the clientside object store 30. - The
search component 60 and thelist manager 80 can be implemented in the form of executable software programs or functions that are resident on theserver 50 and are operable to perform the functionality described herein when executed by theserver 50. Thesearch component 60 and thelist manager 80 are in communication with one another, in that thesearch component 60 receives input from thelist manager 80 and provides output to the list manager in response. - The
list manager 80 is operable to receive the object information 34 that is transmitted to theserver 50 from the connector application of theclient 20. Based on the received object information 34, thelist manager 80 formulates search queries and transmits the search queries to thesearch component 60. The search queries formulated and transmitted by thelist manager 80 can be in any suitable form, structured or unstructured. As an example, the queries could be unstructured lists of one or more keywords. As another example, the queries could be structured queries including a keyword to be searched for each of one or more identified search fields, such as title, album, artist name, etc. - The
search component 60 receives search queries from thelist manager 80. Thesearch component 60 utilizes the search queries that it receives from thelist manager 80 to perform search queries based on the object information 34 that is received from theclient 20 to determine whether one or more server side objects 72 that are disposed within the serverside object store 70 correspond to the parameters specified by the object information 34. The search can be performed by the search component by comparing the parameters specified by the search queries to server side object information 74, which is metadata that describes the server side objects 72. - The server side objects 72 that are stored in the server
side object store 70 of theserver 50 are videos that include an audio component. When thesearch component 60 determines whether one of the server side objects 72 within the serverside object store 70 is a matching video with respect to the music pieces stored as the client side objects 32, the search component can do so on the basis that the music title specified by the object information 34 corresponds to the music piece that is encoded as the audio component of the video that is stored as the server side object 72 within the serverside object store 70. In order to allow identification of the server side object 72 by thesearch component 60, server side object information 74 can be stored within the serverside object store 70, either within the server side objects 72 themselves or separate from the server side objects 72. - After the
search component 60 executes the search queries, it provides search results to thelist manager 80 in the form of an identification of one or more of server side objects 72 that are present within the serverside object store 70. If the search results that are received from thesearch component 60 indicate that one or more of the server side objects 72 match the client side objects 32, as described by the object information 34, thelist manager 80 adds the client side objects 32 that are identified as matching to a list 92 of matching objects. Thelist manager 80 then stores the list of matching objects in thelist store 90. - The list 92 can be associated with a user account that is specified by the
client 20. For example, thelist store 90 can be a portion of a profile that is associated with the user account. By associating the list 92 with a user account, the list 92 can be accessed by the user, using theother devices 100. This allows the user to access the list 92 from a device other than theclient 20 on which the client side objects 32 are stored. - The
server 50 is operable to transmit the server side objects 72 in response to a playback request. Transmission of the server side objects 72 can be in the form of a streaming video transmission within a web page or web application. When theserver 50 receives a playback request that is associated with the user account and which designates that list 92 of matching videos, theserver 50 transmits one or more of the server side objects 72 that are specified by the list 92 in response to the playback request. For example, the playback request can be made by one of theother devices 100 that is associated with the user account, and the server side objects 72 are transmitted to theother device 100 in response to the playback request. - Additional related functionality can optionally be provided by the
server 50. As an example, thelist manager 80 can be configured to transmit a verification request to theclient 20 in order to verify that the server side objects 72 that were identified as matching by thesearch component 60 actually correspond to the client side objects 32. The verification request is transmitted to theclient 20 by thelist manager 80 and identifies at least one of the objects of the list 92 of matching objects. The verification request can cause a prompt to be displayed by theclient 20, which requests that the user provide input in the form of either a positive response, which indicates that the server side object 72 is a match to the client side object 32 or a negative response, which indicates that the server side object 72 is not a match to the client side object 32. The response is transmitted to thelist manager 80 of theserver 50 by the client. If a negative response is received, thelist manager 80 removes the reference to the server side object 72 from the list 92. - The
server 50 can be configured to allow the list 92 to be modified by theclient 20. For example, theclient 20 can transmit to the server 50 a request to modify the list 92 of matching objects. This request could be, for example, in the form of selection, by the user of theclient 20, of a modification command that is present on a screen that is presented to a user of theclient 20, such as in the form of a web page. The request to modify the list 92 includes an identification of one or more of the server side objects 72 that is to be added or deleted from the list 92. In response to the request, thelist manager 80 modifies the list 92. The updated list 92 is then transmitted to theclient 20. - An example of a process for playing music on a video site will be explained with reference to
FIG. 2 . - In Step S101, the object information 34 is compiled by the
connector application 40. Theclient 20 then transmits the object information 34 to theserver 50 over thenetwork 10 in Step S102, and thelist manager 80 of theserver 50 receives the object information 34. (In other embodiments, transmission can be initiated bylist manager 80.) Thelist manager 80 formulates a query based on the object information 34 that was received from theclient 20 and transmits the query to thesearch component 60. Thesearch component 60 then executes the queries regarding the client side objects 32 in Step S103. - In Step S104, the
search component 60 identifies one or more server side objects 72 and reports the results to thelist manager 80, which adds an identification of the matching objects of the server side objects 72 to the list 92 in Step S105. In one embodiment, where multiple server side objects 72 are identified in response to a single query, thelist manager 80 determines which matching server side object 72 to add to the list 92 (for example by random choice or by choosing an object that matches best). As one example, thelist manager 80 determines which matching server side object 72 to use based at least in part on the identity of the user that uploaded the server side object 72 to theserver 50. Certain users could be given status as an “official” or “preferred” uploader, based on quality of the content provided, a certification process, a licensing arrangement, or other circumstance, and this recognition would be given weight be thelist manager 80 when selecting between multiple server side objects 72. As another example, thelist manager 80 determines which matching server side object 72 to use based on the number of times that the server side object 72 has been viewed. In a further example the image resolution or other measure of quality of the server side object 72 is used by thelist manager 80 as a basis for determining which server side object 72 to use. In another example, the preferences of other users, such as indications by other users that they like a particular object or ratings, are used by thelist manager 80 as a basis for determining which server side object 72 to use. In other embodiments,list manager 80 accepts input from a user to choose which of multiple matching objects 72 to use. - In Step S105, it is determined whether the object information 34 that was received by the
server 50 identifies additional client side objects 32 for which search queries must be performed by thesearch component 60. If there are additional client side objects 32 for which searches must be performed, Step S106 evaluates as “yes,” and the process returns to Step S103. If there are no more client side objects 32 that are identified by the object information 34 for which additional searches must be performed, Step S106 evaluates as “no,” and the process proceeds to Step S107. In Step S107, the completed list 92 is stored in the list store. - Completed list 92 is, thus, available for the user associated with the client. The user can access the video service to access a playlist of videos that have the same musical content as is stored on his client-side device. By playing the video playlist, the user can access his playlist when he is away from his client device. Some implementations also allow the user to manage his video playlist to change the order of the videos and to add or delete videos from the playlist. Some implementations also allow other users to access the user's playlist, either publicly or with permission of the user, or both.
- Thus, for example, a user could use an implementation to create a playlist of videos that have the soundtrack of the songs stored on his personal music device. He could then play that playlist at a location where he did not have access to his personal music device.
- Although the disclosure herein is made with reference to music pieces as the client side objects 32 and videos having an audio component as the server side objects 72, the invention can be applied in other contexts. For example, in alternative embodiments, the client side objects 32 and the server side objects 72 could be movies, ebooks, contacts, and other types of media or objects.
- The
client 20, theserver 50, theother devices 100, and other elements of the systems discussed in this disclosure can be implemented in the form of one or more machines or devices capable of performing the described functions. These devices could be or include a processor, a computer, specialized hardware or any other device. The described functionality can be embodied in software instructions that are executable by the device or devices. - As used herein, the term “computer” means any device of any kind that is capable of processing a signal or other information. Examples of computers include, without limitation, an application-specific integrated circuit (ASIC) a programmable logic array (PLA), a microcontroller, a digital logic controller, a digital signal processor (DSP), a desktop computer, a laptop computer, a tablet computer, and a mobile device such as a mobile telephone. A computer does not necessarily include memory or a processor. A computer may include software in the form of programmable code, micro code, and or firmware or other hardware embedded logic. A computer may include multiple processors which operate in parallel. The processing performed by a computer may be distributed among multiple separate devices, and the term computer encompasses all such devices when configured to perform in accordance with the disclosed embodiments.
- An example of a device that can be used as a basis for implementing the systems and functionality described herein is a
conventional computer 1000, as shown inFIG. 3 . Theconventional computer 1000 can be any suitable conventional computer. As an example, theconventional computer 1000 includes a processor such as a central processing unit (CPU) 1010 and memory such asRAM 1020 andROM 1030. Astorage device 1040 can be provided in the form of any suitable computer readable medium, such as a hard disk drive. One ormore input devices 1050, such as a keyboard and mouse, a touch screen interface, etc., allow user input to be provided to theCPU 1010. Adisplay 1060, such as a liquid crystal display (LCD) or a cathode-ray tube (CRT), allows output to be presented to the user. Acommunications interface 1070 is any manner of wired or wireless means of communication that is operable to send and receive data or other signals using thenetwork 10. TheCPU 1010, theRAM 1020, theROM 1030, thestorage device 1040, theinput devices 1050, thedisplay 1060 and thecommunications interface 1070 are all connected to one another by abus 1080. - The
client 20, theserver 50, theother devices 100, and other elements of the systems discussed in this disclosure can be implemented in the form of a single system or in the form of separate systems. Moreover, each of theclient 20, theserver 50, theother devices 100, and other elements of the systems discussed in this disclosure can be implemented in the form of multiple computers, processors, or other systems working in concert. As an example, the functions of theserver 50 can be distributed among a plurality of conventional computers, such as thecomputer 1000, each of which are capable of performing some or all of the functions of theserver 50. - As previously noted, components of the systems described herein can be connected for communications with one another by networks such as the
network 10. The communications functions described herein can be accomplished using any kind of network or communications means capable of transmitting data or signals. Suitable examples include the internet, which is a packet-switched network, a local area network (LAN), wide area network (WAN), virtual private network (VPN), or any other means of transferring data. A single network or multiple networks that are connected to one another can be used. It is specifically contemplated that multiple networks of varying types can be connected together and utilized to facilitate the communications contemplated by the systems and elements described in this disclosure. - While this disclosure includes what is presently considered to be the most practical and preferred embodiment, it is to be understood that the disclosure is not to be limited to the disclosed embodiments but, on the contrary, is intended to cover various modifications and equivalent arrangements included within the spirit and scope of the appended claims, which scope is to be accorded the broadest interpretation so as to encompass all such modifications and equivalent structures as is permitted under the law.
Claims (22)
1. A method comprising:
at a scheduled time, scanning, at a client device, a local object store for a plurality of music pieces that a user has the right to listen to;
compiling, at the client device, object information comprising music titles of the plurality of music pieces found in the local object store;
sending, by the client device, the object information to a server to identify matching videos having respective music pieces for the music titles in the object information; and
receiving, at the client device, a list of the matching videos from the server.
2. The method of claim 1 wherein the object information further comprises at least one of an artist, an album or a track number for each of the plurality of music pieces.
3. The method of claim 1 wherein the object information comprises one or more playlists.
4. The method of claim 1 , wherein the plurality of music pieces that the user has the right to listen to correspond to content licenses that are stored on the client device.
5. The method of claim 1 wherein the scanning, the compiling, the sending and the receiving are part of a scheduled task that executed periodically on the client device.
6. The method of claim 1 further comprising:
receiving a verification request identifying at least one of the matching videos;
prompting the user to verify whether the at least one of the matching videos corresponds to any of the plurality of music pieces; and
sending a positive or negative response to the server based on a user response to the prompting.
7. The method of claim 1 , further comprising:
sending a request to modify the list of the matching videos to the server.
8. A mobile device comprising:
a memory;
a processing device, coupled to the memory; and
a connector application, executed from the memory by the processing device, to:
scan, at a scheduled time, a local object store for a plurality of music pieces that a user has the right to listen to;
compile object information comprising music titles of the plurality of music pieces found in the local object store;
send the object information to a server to identify matching videos having respective music pieces for the music titles in the object information; and
receive a list of the matching videos from the server.
9. The mobile device of claim 8 wherein the object information further comprises at least one of an artist, an album or a track number for each of the plurality of music pieces.
10. The mobile device of claim 8 wherein the object information comprises one or more playlists.
11. The mobile device of claim 8 wherein the plurality of music pieces that the user has the right to listen to correspond to content licenses that are stored on the client device.
12. The mobile device of claim 8 wherein the connector application is to periodically execute a scheduled task comprising the scanning, the compiling, the sending and the receiving.
13. The mobile device of claim 8 wherein the connector application is further to:
receive a verification request identifying at least one of the matching videos;
prompt the user to verify whether the at least one of the matching videos corresponds to any of the plurality of music pieces; and
send a positive or negative response to the server based on a user response to the prompting.
14. The mobile device of claim 8 wherein the connector application is further to:
send a request to modify the list of the matching videos to the server.
15. A computer readable medium having instructions stored thereon that, when executed by a processor, cause the processor to perform a method for a server computer, comprising:
receiving, from a client, a plurality of music titles for respective music pieces that a user has the right to listen to;
determining, for one of the plurality of music titles, that a plurality of matching videos stored on the server have a respective music piece for one of the plurality of music titles;
determining an identity of an uploader of each of the plurality of matching videos;
identifying quality of content provided by each identified uploader;
selecting one of the plurality of matching videos based on quality of a respective identified uploader;
adding the selected matching video to a list of matching videos; and
storing the list of matching videos on the one or more server computers in association with a user account of the user.
16. The computer readable medium of claim 15 wherein the respective music pieces that the user has the right to listen to correspond to media files that are stored on the client.
17. The computer readable medium of claim 15 wherein the respective music pieces that the user has the right to listen to correspond to content licenses associated with the client.
18. The computer readable medium of claim 15 wherein the operations further comprise:
associating the list of matching videos with a user account specified by the client.
19. The computer readable medium of claim 18 wherein the operations further comprise:
receiving a playback request that is associated with the user account; and
transmitting one or more matching videos specified by the list of matching videos in response to the playback request.
20. The computer readable medium of claim 19 , wherein the playback request originates from a device that is separate from the client and the one or more matching videos are transmitted to the device.
21. The computer readable medium of claim 15 wherein the operations further comprise:
receiving, from the client, a request to modify the list of matching videos;
modifying the matching videos to produce an updated list of matching videos in response to the request to modify the list of matching videos; and
storing the updated list of matching videos on the one or more server computers so that it is accessible to a user associated with the client.
22. The computer readable medium of claim 15 wherein the operations further comprise:
sending, to the client, a verification request that identifies at least one video of the list of matching videos; and
removing the at least one video identified by the verification request from the list of matching videos if a negative response is received in response to the verification request.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/229,794 US20140215544A1 (en) | 2012-09-28 | 2014-03-28 | Music on video site |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/US2012/057989 WO2013049616A2 (en) | 2011-09-30 | 2012-09-28 | Music on video site |
US14/229,794 US20140215544A1 (en) | 2012-09-28 | 2014-03-28 | Music on video site |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
PCT/US2012/057989 Continuation WO2013049616A2 (en) | 2011-09-30 | 2012-09-28 | Music on video site |
Publications (1)
Publication Number | Publication Date |
---|---|
US20140215544A1 true US20140215544A1 (en) | 2014-07-31 |
Family
ID=51224555
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/229,794 Abandoned US20140215544A1 (en) | 2012-09-28 | 2014-03-28 | Music on video site |
Country Status (1)
Country | Link |
---|---|
US (1) | US20140215544A1 (en) |
Cited By (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN105812835A (en) * | 2014-12-31 | 2016-07-27 | 联想(北京)有限公司 | Information processing method and electronic device |
EP3185566A1 (en) * | 2015-12-22 | 2017-06-28 | Thomson Licensing | Method for playing back a plurality of media titles, adapted media source device, media player device, media delegation device and configurable and adapted computer program |
CN107562745A (en) * | 2016-06-30 | 2018-01-09 | 上海博泰悦臻网络技术服务有限公司 | A kind of generation method of audio playlist, system and a kind of audio frequency broadcast system |
CN108491473A (en) * | 2018-03-08 | 2018-09-04 | 北京金山安全软件有限公司 | Audio file playing method and device, electronic equipment and medium |
Citations (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040264714A1 (en) * | 2003-06-26 | 2004-12-30 | Microsoft Corporation | Method and apparatus for audio normalization |
US20060288112A1 (en) * | 2005-05-25 | 2006-12-21 | Cingular Wireless, Llc | System and methods for storing music selections in network storage and for streaming the selections to a wireless device for playback on the wireless device |
US20080271165A1 (en) * | 2007-04-27 | 2008-10-30 | Microsoft Corporation | Parameter-based interpretation of drm license policy |
US20110022620A1 (en) * | 2009-07-27 | 2011-01-27 | Gemstar Development Corporation | Methods and systems for associating and providing media content of different types which share atrributes |
US7937362B1 (en) * | 2006-04-28 | 2011-05-03 | Roxbeam Media Network Corporation | System and method for facilitating a credit system in a peer-to-peer content delivery network |
US20110225496A1 (en) * | 2010-03-12 | 2011-09-15 | Peter Jeffe | Suggested playlist |
US20120117042A1 (en) * | 2010-11-09 | 2012-05-10 | Microsoft Corporation | Combining song and music video playback using playlists |
US20120232681A1 (en) * | 2011-03-08 | 2012-09-13 | Packetvideo Corporation | System and method for using a list of audio media to create a list of audiovisual media |
US20120246343A1 (en) * | 2011-03-23 | 2012-09-27 | Story Jr Guy A | Synchronizing digital content |
US20130007830A1 (en) * | 2011-06-28 | 2013-01-03 | United Video Properties, Inc. | Systems and methods for efficient allocations of transport streams |
US20130268539A1 (en) * | 2012-04-04 | 2013-10-10 | Gface Gmbh | Inherited user rating |
-
2014
- 2014-03-28 US US14/229,794 patent/US20140215544A1/en not_active Abandoned
Patent Citations (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20040264714A1 (en) * | 2003-06-26 | 2004-12-30 | Microsoft Corporation | Method and apparatus for audio normalization |
US20060288112A1 (en) * | 2005-05-25 | 2006-12-21 | Cingular Wireless, Llc | System and methods for storing music selections in network storage and for streaming the selections to a wireless device for playback on the wireless device |
US7937362B1 (en) * | 2006-04-28 | 2011-05-03 | Roxbeam Media Network Corporation | System and method for facilitating a credit system in a peer-to-peer content delivery network |
US20080271165A1 (en) * | 2007-04-27 | 2008-10-30 | Microsoft Corporation | Parameter-based interpretation of drm license policy |
US20110022620A1 (en) * | 2009-07-27 | 2011-01-27 | Gemstar Development Corporation | Methods and systems for associating and providing media content of different types which share atrributes |
US20110225496A1 (en) * | 2010-03-12 | 2011-09-15 | Peter Jeffe | Suggested playlist |
US20120117042A1 (en) * | 2010-11-09 | 2012-05-10 | Microsoft Corporation | Combining song and music video playback using playlists |
US20120232681A1 (en) * | 2011-03-08 | 2012-09-13 | Packetvideo Corporation | System and method for using a list of audio media to create a list of audiovisual media |
US20120246343A1 (en) * | 2011-03-23 | 2012-09-27 | Story Jr Guy A | Synchronizing digital content |
US20130007830A1 (en) * | 2011-06-28 | 2013-01-03 | United Video Properties, Inc. | Systems and methods for efficient allocations of transport streams |
US20130268539A1 (en) * | 2012-04-04 | 2013-10-10 | Gface Gmbh | Inherited user rating |
Cited By (5)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN105812835A (en) * | 2014-12-31 | 2016-07-27 | 联想(北京)有限公司 | Information processing method and electronic device |
EP3185566A1 (en) * | 2015-12-22 | 2017-06-28 | Thomson Licensing | Method for playing back a plurality of media titles, adapted media source device, media player device, media delegation device and configurable and adapted computer program |
WO2017108384A1 (en) * | 2015-12-22 | 2017-06-29 | Thomson Licensing | Method for playing back a plurality of media titles, adapted media source device, media player device, media delegation device and configurable and adapted computer program |
CN107562745A (en) * | 2016-06-30 | 2018-01-09 | 上海博泰悦臻网络技术服务有限公司 | A kind of generation method of audio playlist, system and a kind of audio frequency broadcast system |
CN108491473A (en) * | 2018-03-08 | 2018-09-04 | 北京金山安全软件有限公司 | Audio file playing method and device, electronic equipment and medium |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9542488B2 (en) | Associating audio tracks with video content | |
US8903843B2 (en) | Historical media recommendation service | |
US8924404B2 (en) | Information processing device, information processing method, and program | |
US8090606B2 (en) | Embedded media recommendations | |
US11200299B2 (en) | Crowd sourcing for file recognition | |
JP4596044B2 (en) | Information processing system and information processing method | |
US9344759B2 (en) | Associating audio tracks of an album with video content | |
JP5005726B2 (en) | Managing media files from multiple sources | |
EP2131366A1 (en) | Information processing device, information processing method and program | |
US20120041967A1 (en) | System and method for associating a media recommendation with a media item | |
US20040019658A1 (en) | Metadata retrieval protocols and namespace identifiers | |
US20230008201A1 (en) | Automated Content Medium Selection | |
WO2009097265A1 (en) | Method and system for deep metadata population of media content | |
US20140215544A1 (en) | Music on video site | |
EP2761572B1 (en) | Music on video site | |
JP5306555B1 (en) | System capable of providing a plurality of digital contents and method using the same | |
US20220188062A1 (en) | Skip behavior analyzer | |
JP2014191822A (en) | System capable of providing a plurality of digital contents and method using the same | |
Allasia et al. | A digital rights aware similarity measure for multimedia documents |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:ROSSETTI, LEONARDO;REEL/FRAME:032730/0847Effective date: 20140422 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044129/0001Effective date: 20170929 |
|
STCB | Information on status: application discontinuation |
Free format text: ABANDONED -- FAILURE TO RESPOND TO AN OFFICE ACTION |
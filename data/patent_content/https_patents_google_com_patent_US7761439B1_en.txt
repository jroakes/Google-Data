US7761439B1 - Systems and methods for performing a directory search - Google Patents
Systems and methods for performing a directory search Download PDFInfo
- Publication number
- US7761439B1 US7761439B1 US10/882,057 US88205704A US7761439B1 US 7761439 B1 US7761439 B1 US 7761439B1 US 88205704 A US88205704 A US 88205704A US 7761439 B1 US7761439 B1 US 7761439B1
- Authority
- US
- United States
- Prior art keywords
- search
- global directory
- query
- program code
- local
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L61/00—Network arrangements, protocols or services for addressing or naming
- H04L61/45—Network directories; Name-to-address mapping
- H04L61/4552—Lookup mechanisms between a plurality of directories; Synchronisation of directories, e.g. metadirectories
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L61/00—Network arrangements, protocols or services for addressing or naming
- H04L61/45—Network directories; Name-to-address mapping
- H04L61/4505—Network directories; Name-to-address mapping using standardised directories; using standardised directory access protocols
- H04L61/4523—Network directories; Name-to-address mapping using standardised directories; using standardised directory access protocols using lightweight directory access protocol [LDAP]
Definitions
- the present invention relates generally to methods and systems for information retrieval.
- the present invention relates particularly to systems and methods for performing a directory search.
- Directory or contact information may be stored in multiple locations and in many varying formats. For example, directory information may be stored in a global directory, such as a Lightweight Directory Access Protocol (LDAP) compliant directory on the Internet or on a local network. Directory information may also be stored in a local data store, such as a database or a contact list.
- LDAP Lightweight Directory Access Protocol
- Directory information may be stored in other forms as well, including formatted and unformatted text.
- many web sites include a “Contact Us” web page that often includes the street address, phone number, and email address of a person or organization.
- a user wishing to find directory or contact information for a person, organization, or other entity may utilize a web-based directory search tool, such as the search tools available on Bigfoot Communication's web site (Bigfoot Communications Limited, www.bigfoot.com). If the user is looking for contact information for one of the user's contacts, the user may use the address book associated with the user's electronic messaging application.
- the user may also utilize a conventional search engine, such as the Google® search engine to locate directory or contact information.
- Embodiments of the present invention provide systems and methods for performing a directory search.
- a computer program such as a query system, receives a first search query and causes the first search query to be executed on a directory.
- the query system also generates a second search query associated with the first search query and causes the second search query to be executed on a local data store.
- the query system obtains a first result from the directory and a second result from the local data store, and generates a result set.
- the result set comprises the first result and the second result.
- a computer-readable medium such as, for example random access memory or a computer disk
- FIG. 1 is a block diagram illustrating an illustrative environment in which one embodiment of the present invention may operate
- FIG. 2 is a flowchart illustrating a process for combining the results of a directory search with the results from a local data store in one embodiment of the present invention
- FIG. 3 is a flowchart illustrating a process for modifying the search and combined result set based on one or more user preferences in one embodiment of the present invention.
- FIG. 4 is a flowchart illustrating a process for modifying a search query and a search result based at least in part on a directory entry.
- Embodiments of the present invention provide systems and methods for performing a directory search. Illustrative embodiments are described below.
- FIG. 1 is a block diagram illustrating an illustrative environment for implementation of an embodiment of the present invention. While the environment shown reflects a client-side search engine architecture embodiment, other embodiments are possible.
- the system 100 shown in FIG. 1 includes multiple client devices 102 a - n in communication with a server device 150 over a wired or wireless network 106 .
- the network 106 shown comprises the Internet. In other embodiments, other networks, such as an intranet, may be used instead. Moreover, methods according to the present invention may operate within a single client device.
- the client devices 102 a - n shown each includes a computer-readable medium 108 .
- the embodiment shown includes a random access memory (RAM) 108 coupled to a processor 110 .
- the processor 110 executes computer-executable program instructions stored in memory 108 .
- Such processors may include a microprocessor, an ASIC, a state machine, or other processor, and can be any of a number of computer processors, such as processors from Intel Corporation of Santa Clara, Calif. and Motorola Corporation of Schaumburg, Ill.
- Such processors include, or may be in communication with, media, for example computer-readable media, which stores instructions that, when executed by the processor, cause the processor to perform the steps described herein.
- Embodiments of computer-readable media include, but are not limited to, an electronic, optical, magnetic, or other storage or transmission device capable of providing a processor, such as the processor 110 of client 102 a , with computer-readable instructions.
- suitable media include, but are not limited to, a floppy disk, CD-ROM, DVD, magnetic disk, memory chip, ROM, RAM, an ASIC, a configured processor, all optical media, all magnetic tape or other magnetic media, or any other medium from which a computer processor can read instructions.
- various other forms of computer-readable media may transmit or carry instructions to a computer, including a router, private or public network, or other transmission device or channel, both wired and wireless.
- the instructions may comprise code from any suitable computer-programming language, including, for example, C, C++, C#, Visual Basic, Java, Python, Perl, and JavaScript.
- Client devices 102 a - n can be connected to a network 106 as shown, or can be stand-alone machines. Client devices 102 a - n may also include a number of external or internal devices such as a mouse, a CD-ROM, DVD, a keyboard, a display, or other input or output devices. Examples of client devices 102 a - n are personal computers, digital assistants, personal digital assistants, cellular phones, mobile phones, smart phones, pagers, digital tablets, laptop computers, Internet appliances, and other processor-based devices. In general, the client devices 102 a - n may be any type of processor-based platform that operates on any operating system, such as Microsoft® Windows® or Linux, capable of supporting one or more client application programs.
- any operating system such as Microsoft® Windows® or Linux
- the client device 102 a shown comprises a personal computer executing client application programs, also known as client applications 120 .
- the client applications 120 can be contained in memory 108 and can include, for example, a word processing application, a spreadsheet application, an e-mail application, an instant messenger application, a presentation application, an Internet browser application, a calendar/organizer application, and any other application or computer program capable of being executed by a client device.
- the user 112 a can interact with the various client applications 120 and articles associated with the client applications 120 via various input and output devices of the client device 102 a .
- Articles include, for example, word processor, spreadsheet, presentation, e-mail, instant messenger, database, contacts, directory entries, and other client application program content files or groups of files, web pages of various formats, such as Hypertext Markup Language (HTML), eXtensible Markup Language (XML), eXtensible Hypertext Markup Language (XHTML), Portable Document Format (PDF) files, and audio files, video files, or any other documents or groups of documents or information of any type whatsoever.
- HTML Hypertext Markup Language
- XML eXtensible Markup Language
- XHTML eXtensible Hypertext Markup Language
- PDF Portable Document Format
- the memory 108 of the client device 102 a shown also contains a capture processor 124 , a queue 126 , and a search engine 122 .
- the client device 102 a shown also contains or is in communication with a data store 140 .
- the search engine 122 can receive an explicit query from the user 112 a or generate an implicit query and retrieve information from the data store 140 in response to the query.
- the search engine 122 shown contains an indexer 130 , a query system 132 , and a formatter 134 . Events, real-time and historical, contextual and indexable, and performance data can be sent by the queue 126 to the query system 132 to provide the query system 132 with information concerning current user context. The query system 132 can use this information to generate an implicit query. The query system 132 can also receive and process explicit queries from the user 112 a.
- the data store 140 can be any type of computer-readable media and can be integrated with the client device 102 a , such as a hard drive, or external to the client device 102 a , such as an external hard drive or on another data storage device accessed through the network 106 .
- the data store 140 may include any one or combination of methods for storing data, including without limitation, arrays, hash tables, lists, and pairs.
- the data store 140 comprises a local index.
- the local index in the embodiment shown in FIG. 1 may comprise information, such as articles, which are associated with the client device 102 a , a user 112 a of the client device 102 a , or a group of users of the client device 102 a .
- the local index in the data store 140 shown in FIG. 1 may comprise an index of articles created, edited, received, or stored by the client user 112 a using the client machine 102 a , or articles otherwise associated with the client user 102 a or the client machine 112 a .
- the local index may be stored in a client machine, such as in data store 140 , in a data store on a local network in a manner accessible by the client machine, on a server accessible to the client machine through the Internet, or in another accessible location.
- a global index may comprise information relevant to many users or many servers, such as, for example, an index of web pages located on multiple servers in communication with the World Wide Web.
- a global index is an index used by the GoogleTM search engine to provide search results in response to a search query.
- a single index may comprise both a local and a global index.
- an index may comprise both local and global information, and include a user or client identifier with the local information so that it may be identified with the user(s) or client(s) to which it pertains.
- an index, local or global may be present in one or multiple logical or physical locations.
- a user 112 a can input an explicit query into a search engine interface displayed on the client device 102 a , which is received by the search engine 122 .
- the search engine 122 can also generate an implicit query based on a current user context or state, which can be determined by the query system 132 from contextual real time events or other means.
- the query system 132 can locate relevant information in the data store 140 or other index and provide a result set.
- the result set comprises article identifiers identifying articles associated with the client applications 120 or client articles.
- the result sets comprise one or more article identifiers.
- An article identifier may be, for example, a Uniform Resource Locator (URL), a file name, a link, an icon, a path for a local file, or anything else that identifies an article.
- an article identifier comprises a URL associated with an article.
- Messaging articles stored in the data store 140 include user's emails, chat messages, and instant messaging messages. Each time a message is received, sent, modified, printed, or otherwise accessed, a record is stored in the data store 140 . This information can later be searched to identify messages that should be displayed in the user interface.
- An embodiment of the present invention may also store message threads in the data store 140 .
- messages are related together by various attributes, including, for example, the sender, recipient, date/time sent and received, the subject, the content, or any other attribute of the message.
- the related messages can then be retrieved as a thread, which may be treated as a document by the display processor 128 .
- the formatter 134 can receive the search result set from the query system 132 of the search engine 122 and can format the results for output to a display processor 128 .
- the formatter 134 formats the results in XML or HTML.
- the display processor 128 can be contained in memory 108 and can control the display of the result set on a display device associated with the client device 102 a .
- the display processor 128 may comprise various components.
- the display processor 128 comprises a Hypertext Transfer Protocol (HTTP) server that receives requests for information and responds by constructing and transmitting HTML pages.
- the HTTP server comprises a scaled-down version of the Apache Web server.
- the functions described herein may be performed by various other components and devices.
- a server device 150 is also coupled to the network 106 .
- the search engine 122 can transmit a search query comprised of an explicit or implicit query or both to the server device 150 .
- the user 112 a can also enter a search query in a search engine interface, which can be transmitted to the server device 150 .
- the query signal may instead be sent to a proxy server (not shown), which then transmits the query signal to server device 150 .
- Other configurations are also possible.
- the server device 150 shown includes a server executing a search engine application program, such as the GoogleTM search engine. Similar to the client devices 102 a - n , the server device 150 shown includes a processor 160 coupled to a computer-readable memory 162 .
- Server device 150 depicted as a single computer system, may be implemented as a network of computer processors. Examples of a server device 150 are servers, mainframe computers, networked computers, a processor-based device, and similar types of systems and devices.
- the server processor 160 can be any of a number of or combination of computer processors, such as processors from Intel Corporation of Santa Clara, Calif. and Motorola Corporation of Schaumburg, Ill.
- Memory 162 contains the search engine application program, also known as a search engine 170 .
- the search engine 170 locates relevant information in response to a search query from a client device 102 a .
- the search engine 122 then provides the result set to the client device 102 a via the network 106 .
- the result set 134 comprises one or more article identifiers.
- An article identifier may be, for example, a URL, a file name, a link, an icon, a path for a local file, or anything else that identifies an article.
- an article identifier comprises a URL associated with an article.
- the result set may include text, audio, video or any other type of content.
- the server device 150 has previously performed a crawl of the network 106 to locate articles, such as web pages, stored at other devices or systems connected to the network 106 , and indexed the articles in memory 162 or on another data storage device.
- a crawl is not performed.
- an index of articles is created manually.
- the search engine 170 is in communication with a directory 180 .
- the directory 180 comprises information about individuals or entities.
- the directory 180 may comprise a list of names and addresses similar to that which is published in a white pages paper directory.
- the directory 180 comprises information generally contained in a yellow pages directory.
- the directory 180 may utilize any structure.
- the directory comprises one or more tables in a relational database, such as an Oracle® relational database.
- the directory comprises a directory utilizing directory service markup language (DSML) and/or one that is compliant with the Lightweight Directory Access Protocol (LDAP).
- DSML directory service markup language
- LDAP Lightweight Directory Access Protocol
- the LDAP protocol allows email programs to access contact information from a server, either locally or on a global network, such as the Internet.
- Other directory structures may also be utilized.
- server device 104 may comprise a single physical or logical server.
- the system 100 shown in FIG. 1 is merely illustrative, and is used to explain the illustrative methods shown in FIGS. 2 and 3 .
- Methods according to the present invention may be implemented by, for example, a processor-executable program code stored on a computer-readable medium.
- a computer program such as a query system 132 , receives a first search query and causes the first search query to be executed on a directory having, for example contact information for individuals or businesses.
- the query system 132 also generates a second search query associated with the first search query.
- the query system 132 then causes the second search query to be executed on a local data store also having, for example, contact information for individuals and businesses.
- the generation of the second search query in one embodiment is accomplished by translating the first search query into a format that facilitates searching of the local data store.
- the query system 132 receives a first result from the directory, receives a second result from the local data store, and generates a result set, the result set comprising the first result and the second result.
- the query system 132 may cause the result set to be output to the user that submitted the search query.
- the directory may utilize any suitable format and storage means.
- the directory comprises an LDAP compliant directory.
- the local data store also may utilize any suitable format and storage means.
- the local data store comprises an address book.
- the local data store comprises an index, such as an event or document index.
- the results from the directory and from the local data store may be returned in various formats.
- the result is returned as a directory entry, such as one compliant with the LDAP.
- the results from the local data store may also be returned in various formats.
- the second result comprises a contact, such as a contact from a Microsoft® Outlook® contacts list.
- the user may enter any acceptable type of information to find a person or entity. In one embodiment, the user enters a telephone number. In another embodiment, the user enters the name of an entity or person.
- the query received by the query system 132 may be explicit or implicit.
- the query system 132 receives a result set comprising one or more search results associated with a search query, the result set comprising a search result.
- the query system 132 also receives a directory entry.
- the query system 132 identifies a discrepancy between the two entries (e.g., the zip code differs).
- the query system 132 outputs an alert associated with the discrepancy.
- the query system may modify the directory entry based at least in part on the discrepancy.
- Embodiments of the present invention may utilize user preferences in formulating queries and/or outputting results.
- the query system 132 receives a user preference and modifies the result set based at least in part on the user preference. Modifying the result set may comprise, for example, filtering or reordering the result set.
- the query system 132 receive a user preference and modifies the first and/or second search queries based at least in part on the user preference.
- the query system 132 may modify a search query, a result set, and/or both based on a directory entry. For instance, the query system 132 may modify the priority, significance, and/or placement of the search results in the result set.
- the query system 132 receives a search query 132 .
- the query system 132 determines a directory entry associated with the search query. For example, the query system may search the user's contacts for a directory entry that matches terms in the search query.
- the query system 132 modifies the search query based at least in part of attributes of the directory entry.
- the query system 132 may add a term to or replace a term in the search query based on an attribute of the directory entry or replace a term in the search query. For instance, if a user performs a search for “John Smith,” and the user's contact file includes an entry for “John Smith,” the query system may add the city attribute of the directory entry as a term to the search query.
- the query system 132 causes the search query to be executed and, in response, receives a result set.
- the query system 132 receives a result set associated with a search query.
- the result set comprises a plurality of results.
- the query system 132 searches a directory to determine a directory entry associated with at least one of the results.
- the query system 132 modifies the search result based at least in part on an attribute of the directory entry.
- the query system 132 may add the attribute to the result or replace a portion of the result with the directory entry attribute. For example, the user may have a contact that has recently moved. When the user executes a search query, a result that includes the contact's address is received.
- the result may include an incorrect address if it has not been recently updated.
- the query system 132 matches the result to the directory and can either display the address information from the user's contact file in conjunction with the information returned or can replace the information returned with the contact file information.
- the query system 132 may give more prominence to information that matches information in the directory, or reduce prominence of information not found in the directory.
- the query system 132 modifies a directory entry based on results from a search.
- the query system receives a result set associated with a search query, determines a directory entry associated with one of the search results in the result set, and modifies an attribute of the directory entry based at least in part on the search result.
- the query system 132 identifies a directory entry attribute to be modified (e.g., address, middle name, phone number) and requests a confirmation to modify the attribute based on discrepancies between search result data and directory data. If the confirmation is received, the query system 132 modifies the entry.
- the query system receives a result set associated with a search query and creates a directory entry based at least in part on the search result.
- the user may enter a search query comprising the terms “john smith palo alto.”
- the query system 132 identifies the pair of terms “john smith” as potentially being a name and “palo alto” as potentially being the name of a city.
- the first result returned in the result set is a white pages entry for John Smith in Palo Alto, Calif.
- the query system 132 extracts the information from the result and creates a directory entry for the user in the user's contact file.
- FIG. 2 is a flowchart illustrating a process for combining the results of a directory search with the results from a local data store in one embodiment of the present invention.
- a computer such as the query system 132 , receives a search query from a user of the system 202 .
- the search query shown in FIG. 2 is being performed to retrieve information regarding a person or entity.
- the search query may be, for example, part of a person's or company's name.
- the search query is identified by the query system 132 as being a search query related to contact or directory information.
- Contact or directory information includes information, such as the name of a person or entity, the address, the city, the state, the phone number, the organization to which a person or entity belongs, and other information related to the person or entity.
- the user may explicitly identify a search query as being related to contact or directory information. For example, in one embodiment, the user selects an option on a user interface, the option specifying that the user is searching for a person.
- the query system 132 identifies the query as a query related to contact or directory information. For example, the query system 132 may identify the terms of the search query as proper nouns, indicating that the user may be searching for contact or directory information.
- the query system 132 causes the search query to be executed on a directory 204 .
- the query system 132 may cause the search query to be submitted to the search engine 170 , which executes the search on the directory 180 .
- the directory may be stored in data store 140 or in some other local memory.
- the query system 132 generates a second query related to the first query 206 .
- the first query may be translated to a format suitable to query a specific type of directory, such as an LDAP-compliant directory.
- the query system 132 uses the first query to generate a second query that can be executed on a local index.
- the query system 132 then causes the second query to be executed on a local index 208 .
- the query system 132 may cause the second query to be executed on an index in the local data store 140 that relates a set of indexed articles also stored in the local data store 140 .
- the articles may include, for example, a resume of a person or a contact web page for an entity.
- the local data store 140 resides on the computer of the user submitting the first query and comprises a user's list of contacts in an address book.
- the query system 132 obtains a query result from the directory 210 . If the directory includes one or more entries that match the first query (for example, that contains the query terms submitted), the result set includes data from those entries. If not, the result set may be empty or may include a single result indicating that no directory entries matched the query.
- the query system 132 also obtains a result from the local data store 212 . If the local data store includes one or more entries that match the second query, the result set includes those entries. If not, the result set may be empty or may include a single result indicating that no directory entries matched the query.
- the query system 132 then combines the result sets from the directory and the local data store into a combined result set for display to the user 214 .
- Combining the result sets may comprise displaying separate result sets in one interface or may comprise performing some other type of combining.
- the query system 132 compares the results from the directory with the results from the local data store to determine how to display the results. If duplicate results are found, e.g., if the name and address of a person or entity is found in both places, only one of the results is displayed to the user.
- the query system 132 uses file date stamps or other data to determine a chronology of entries related to the person or entity. The query system 132 then creates a combined result set that lists a history of the directory entries for the person or entity.
- the query system 132 then causes the combined result set to be displayed to the user.
- the result set may be displayed, for example, as an HTML page or as a small popup displayed on top of another application or in any other manner that provides the information to the user in a meaningful manner.
- FIG. 3 is a flowchart illustrating a process for modifying the search and combined result set based on one or more user preferences.
- the query system 132 receives a search query 302 from a user of the system.
- the query system 132 also receives a user preference associated with the submitter of the search query, which is relevant, directly or indirectly, to the search query 304 .
- the user preference may include a parameter that specifies that search queries related to directory entries include a limitation to the user's home city and/or state.
- the query system 132 modifies the search query based on the user preference 306 .
- the search query 132 is then executed against an LDAP-compliant directory on the Internet.
- the query system 132 adds a filter to the query that specifies that only those addresses in the user's home state be returned by the query.
- the query system 132 receives the result set, e.g., the directory entries 308 .
- the query system 132 then receives a second user preference related to the presentation of a result set 310 .
- the receiving the second preference appears after receiving the result set in FIG. 3
- an embodiment of the present invention may execute the process in alternate ways.
- the query system 132 may receive all user preferences at once and apply the preferences as necessary during the remainder of the process.
- the query system 132 uses the user preference to modify the result set 312 .
- the user prefers that directory entries be sorted in ascending chronological order, i.e., the user wishes to see the oldest directory entries found first.
- the user stores this preference.
- the directory may return the results in any order, e.g., sorted in descending chronological order with the most recent entries listed first.
- the query system 132 notes this second user preference and modifies the result set by reversing the sort order.
- FIG. 4 is a flowchart illustrating a process for modifying a search query and a search result based at least in part on a directory entry.
- the user enters a search query comprising search terms.
- the query system 132 receives the search query 132 .
- the query system 132 determines a directory entry associated with a search term 404 .
- the query system 132 may search an Exchange server's global address list for an entry corresponding to one or more search terms.
- the query system 132 uses the information from the directory entry to modify the search query 406 . For example, if the query system 132 locates an entry in the global address book that corresponds to one or more search terms, the query system 132 may add the address from the directory entry as a term in the search query.
- a computer user wishes to find contact information for a person named “John Smith.”
- the user may have sent emails to John Smith, read an article by John Smith, or performed some other activity that caused an entry in an index in a local data store.
- An entry for John Smith may also exist in the user's list of email contacts.
- the user may wish to search directory information for John Smith because the user's contact information is or may be out of date.
- the user has previously stored preferences, including that the user prefers to perform directory searches limited to the local geographical area, the user wishes to see directory entries in chronological order, and that the user does not wish to see redundant directory entries.
- the user navigates to an HTML page, specifically designed for searching for people or entities, such as a white pages search page.
- the user enters the name “John Smith” in the search field and submits the search query.
- the query system 132 receives the query.
- the query system 132 determines whether or not to apply a personal preference to the query.
- the user in the illustrative embodiment has specified a preference to search only for entries in California.
- the query system 132 modifies the search query to include a term or limitation for California and submits it to a directory.
- the query system 132 may submit the query to an LDAP-compliant directory service on the Internet.
- the directory returns all entries that match the query, including the geographical limitation.
- the directory may return zero, one, or many results.
- a public directly will likely return hundreds and possibly thousands or results.
- the results are sorted in some manner, such as by middle initial, city, zip code, or some other attribute.
- the query system 132 receives these results.
- the query system 132 generates a second query that can be submitted to a local data store, such as a document or event index.
- the query is associated with the search query received by the query system 132 .
- the query system 132 generates a query to be executed against a local index that is formulated to return results related to a person or entity named “John Smith.”
- the query system 132 may also modify the second query based on the user preference. For example, the second query may be limited to California as the first query was.
- the local index returns zero, one, or more results related to “John Smith.”
- Each of the results from the directory is likely to vary in relevance to the user submitting the query.
- the results returned from the local index are also likely to vary in relevance.
- the results from the local index are more likely to be relevant in general than those in the directory since the local index stores information specific to the user.
- the query system 132 combines the two results sets to create information to be displayed to the user.
- the query system 132 may use a user preference to determine how to display the results. For example, the user may specify that they wish only to view one entry, which includes only the most recent information, and that they wish to be able to click a link or other control to display the remaining information in reverse chronological order.
- the query system 132 utilizes this information to generate an output and to cause the output to be presented to the user on the user's computer monitor.
Abstract
Description
Claims (28)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/882,057 US7761439B1 (en) | 2004-06-30 | 2004-06-30 | Systems and methods for performing a directory search |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US10/882,057 US7761439B1 (en) | 2004-06-30 | 2004-06-30 | Systems and methods for performing a directory search |
Publications (1)
Publication Number | Publication Date |
---|---|
US7761439B1 true US7761439B1 (en) | 2010-07-20 |
Family
ID=42332713
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US10/882,057 Active 2026-02-22 US7761439B1 (en) | 2004-06-30 | 2004-06-30 | Systems and methods for performing a directory search |
Country Status (1)
Country | Link |
---|---|
US (1) | US7761439B1 (en) |
Cited By (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060045355A1 (en) * | 2004-08-26 | 2006-03-02 | Kyocera Corporation | Mobile terminal, and computer controlling method and program for use in the same |
US20090150360A1 (en) * | 2007-12-10 | 2009-06-11 | Computer Associates Think, Inc. | A Directory System and Method of Searching Information |
US20100017753A1 (en) * | 2008-07-17 | 2010-01-21 | Li Fuyi | Automatically populating recipients in an instant messaging or other computer communication system |
US20110219005A1 (en) * | 2008-06-26 | 2011-09-08 | Microsoft Corporation | Library description of the user interface for federated search results |
US20130185286A1 (en) * | 2007-10-02 | 2013-07-18 | Boris Galitsky | Searching for associated events in log data |
US20150261836A1 (en) * | 2014-03-17 | 2015-09-17 | Intuit Inc. | Extracting data from communications related to documents |
US20160063410A1 (en) * | 2014-08-28 | 2016-03-03 | Google Inc. | Systems and Methods for Task Assistance by Correlating Task Terms with Specific Entities |
US20160117416A1 (en) * | 2014-10-27 | 2016-04-28 | Joseph Wong | Automatic detection of queries missing order-by via unit test |
US9684693B1 (en) * | 2016-04-05 | 2017-06-20 | Google Inc. | On-device query rewriting |
CN113806595A (en) * | 2021-08-13 | 2021-12-17 | 荣耀终端有限公司 | Code search system generation method, code search method and search server |
Citations (62)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5615367A (en) * | 1993-05-25 | 1997-03-25 | Borland International, Inc. | System and methods including automatic linking of tables for improved relational database modeling with interface |
US5696486A (en) * | 1995-03-29 | 1997-12-09 | Cabletron Systems, Inc. | Method and apparatus for policy-based alarm notification in a distributed network management environment |
WO1998012881A2 (en) | 1996-09-20 | 1998-03-26 | Netbot, Inc. | Method and system for network information access |
US5778377A (en) * | 1994-11-04 | 1998-07-07 | International Business Machines Corporation | Table driven graphical user interface |
US5826261A (en) | 1996-05-10 | 1998-10-20 | Spencer; Graham | System and method for querying multiple, distributed databases by selective sharing of local relative significance information for terms related to the query |
US5850511A (en) * | 1996-10-28 | 1998-12-15 | Hewlett-Packard Company | Computer implemented methods and apparatus for testing a telecommunications management network (TMN) agent |
US5874953A (en) * | 1996-12-31 | 1999-02-23 | International Business Machines Corporation | Database graphical user interface with outline view |
US6006222A (en) | 1997-04-25 | 1999-12-21 | Culliss; Gary | Method for organizing information |
US6014665A (en) | 1997-08-01 | 2000-01-11 | Culliss; Gary | Method for organizing information |
US6052687A (en) * | 1997-06-13 | 2000-04-18 | Fujitsu Limited | Relational database search system and method, and intermediate link table generating method and storage medium |
US6078916A (en) | 1997-08-01 | 2000-06-20 | Culliss; Gary | Method for organizing information |
US6101491A (en) | 1995-07-07 | 2000-08-08 | Sun Microsystems, Inc. | Method and apparatus for distributed indexing and retrieval |
US6128635A (en) * | 1996-05-13 | 2000-10-03 | Oki Electric Industry Co., Ltd. | Document display system and electronic dictionary |
US6147773A (en) * | 1995-09-05 | 2000-11-14 | Hewlett-Packard Company | System and method for a communication system |
US6182068B1 (en) | 1997-08-01 | 2001-01-30 | Ask Jeeves, Inc. | Personalized search methods |
US6195095B1 (en) * | 1994-09-20 | 2001-02-27 | International Business Machines Corporation | Method and apparatus for displaying attributes of a computer work station on a graphical user interface |
WO2001016807A1 (en) | 1999-08-31 | 2001-03-08 | Mindcrossing, Inc. | An internet search system for tracking and ranking selected records from a previous search |
US6311178B1 (en) * | 1997-09-29 | 2001-10-30 | Webplus, Ltd. | Multi-element confidence matching system and the method therefor |
US6345266B1 (en) * | 1998-12-23 | 2002-02-05 | Novell, Inc. | Predicate indexing for locating objects in a distributed directory |
US6349299B1 (en) * | 1998-12-24 | 2002-02-19 | International Business Machines Corporation | System and method for storing electronic contact information into an electronic address book |
US6393464B1 (en) * | 1999-05-10 | 2002-05-21 | Unbound Communications, Inc. | Method for controlling the delivery of electronic mail messages |
US6393253B1 (en) * | 1995-12-02 | 2002-05-21 | Mediafive Corporation | Data processing device |
US20020078004A1 (en) * | 2000-12-18 | 2002-06-20 | International Business Machines Corporation | Extendible access control for lightweight directory access protocol |
US20020143759A1 (en) | 2001-03-27 | 2002-10-03 | Yu Allen Kai-Lang | Computer searches with results prioritized using histories restricted by query context and user community |
US20020147704A1 (en) | 2001-01-24 | 2002-10-10 | International Business Machines Corporation | System and method for searching disparate file systems |
US6477543B1 (en) * | 1998-10-23 | 2002-11-05 | International Business Machines Corporation | Method, apparatus and program storage device for a client and adaptive synchronization and transformation server |
US6523035B1 (en) * | 1999-05-20 | 2003-02-18 | Bmc Software, Inc. | System and method for integrating a plurality of disparate database utilities into a single graphical user interface |
US6523028B1 (en) * | 1998-12-03 | 2003-02-18 | Lockhead Martin Corporation | Method and system for universal querying of distributed databases |
US20030055831A1 (en) | 1998-03-16 | 2003-03-20 | S.L.I. Systems, Inc. | Search engine |
US20030084032A1 (en) | 2001-10-30 | 2003-05-01 | Sukhminder Grewal | Methods and systems for performing a controlled search |
WO2003036520A1 (en) | 2001-10-23 | 2003-05-01 | Visto Corporation | System and method for merging remote and local data in a single user interface |
US6581056B1 (en) | 1996-06-27 | 2003-06-17 | Xerox Corporation | Information retrieval system providing secondary content analysis on collections of information objects |
US6601061B1 (en) * | 1999-06-18 | 2003-07-29 | Surfwax, Inc. | Scalable information search and retrieval including use of special purpose searching resources |
US20030144924A1 (en) | 2002-01-29 | 2003-07-31 | Mcgee Todd | Smart multi-search method and system |
US6611862B2 (en) | 1994-05-31 | 2003-08-26 | Richard R. Reisman | User station software that controls transport and presentation of content from a remote source |
US20030167266A1 (en) | 2001-01-08 | 2003-09-04 | Alexander Saldanha | Creation of structured data from plain text |
US6633873B1 (en) | 1999-02-16 | 2003-10-14 | Fujitsu Limited | Distributed data retrieval system including mechanism for predicting an amount of response data |
US6651054B1 (en) | 1999-10-30 | 2003-11-18 | International Business Machines Corporation | Method, system, and program for merging query search results |
US20040049494A1 (en) | 2002-09-10 | 2004-03-11 | Kottisa Vamsi Mohan | Method, system and computer-readable medium for traversing a list of search results |
US20040103087A1 (en) | 2002-11-25 | 2004-05-27 | Rajat Mukherjee | Method and apparatus for combining multiple search workers |
US20040139106A1 (en) | 2002-12-31 | 2004-07-15 | International Business Machines Corporation | Search engine facility with automated knowledge retrieval generation and maintenance |
US20040143569A1 (en) | 2002-09-03 | 2004-07-22 | William Gross | Apparatus and methods for locating data |
US6772194B1 (en) * | 2000-06-27 | 2004-08-03 | Cisco Technology, Inc. | Directory band shell extension |
US6795820B2 (en) | 2001-06-20 | 2004-09-21 | Nextpage, Inc. | Metasearch technique that ranks documents obtained from multiple collections |
US20040209597A1 (en) * | 2003-02-21 | 2004-10-21 | Schlumberger Technology Corporation | Authentication method for enabling a user of a mobile station to access to private data or services |
US20040215607A1 (en) | 2003-04-25 | 2004-10-28 | Travis Robert L. | Method and system fo blending search engine results from disparate sources into one search result |
US20050021506A1 (en) | 2003-07-08 | 2005-01-27 | Volker Sauermann | Process for performing logical combinations |
US20050033803A1 (en) | 2003-07-02 | 2005-02-10 | Vleet Taylor N. Van | Server architecture and methods for persistently storing and serving event data |
US6895426B1 (en) * | 2000-10-17 | 2005-05-17 | Microsoft Corporation | Addresses as objects for email messages |
US6901410B2 (en) * | 2001-09-10 | 2005-05-31 | Marron Pedro Jose | LDAP-based distributed cache technology for XML |
US20050131866A1 (en) | 2003-12-03 | 2005-06-16 | Badros Gregory J. | Methods and systems for personalized network searching |
US6944610B2 (en) * | 2001-10-31 | 2005-09-13 | Bellsouth Intellectual Property Corporation | System and method for searching heterogeneous electronic directories |
US20050216485A1 (en) * | 2004-03-25 | 2005-09-29 | International Business Machines Corporation | Real-time attribute processor and syntax schema for directory access protocol services |
US6970906B1 (en) * | 2000-10-30 | 2005-11-29 | Nortel Networks Limited | Voice mail caller identification |
US6976053B1 (en) | 1999-10-14 | 2005-12-13 | Arcessa, Inc. | Method for using agents to create a computer index corresponding to the contents of networked computers |
US7020662B2 (en) * | 2001-05-29 | 2006-03-28 | Sun Microsystems, Inc. | Method and system for determining a directory entry's class of service based on the value of a specifier in the entry |
US7076484B2 (en) * | 2002-09-16 | 2006-07-11 | International Business Machines Corporation | Automated research engine |
US7243355B2 (en) * | 2002-04-04 | 2007-07-10 | Verizon Busniess Global Llc | Method, system and computer program product for a lightweight directory access protocol client application program interface |
US7346559B2 (en) * | 2001-02-14 | 2008-03-18 | International Business Machines Corporation | System and method for automating association of retail items to support shopping proposals |
US7457862B2 (en) * | 2001-10-22 | 2008-11-25 | Avaya, Inc. | Real time control protocol session matching |
US7509303B1 (en) * | 2001-09-28 | 2009-03-24 | Oracle International Corporation | Information retrieval system using attribute normalization |
US7516118B1 (en) | 2003-12-31 | 2009-04-07 | Google Inc. | Methods and systems for assisted network browsing |
-
2004
- 2004-06-30 US US10/882,057 patent/US7761439B1/en active Active
Patent Citations (63)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5615367A (en) * | 1993-05-25 | 1997-03-25 | Borland International, Inc. | System and methods including automatic linking of tables for improved relational database modeling with interface |
US6611862B2 (en) | 1994-05-31 | 2003-08-26 | Richard R. Reisman | User station software that controls transport and presentation of content from a remote source |
US6195095B1 (en) * | 1994-09-20 | 2001-02-27 | International Business Machines Corporation | Method and apparatus for displaying attributes of a computer work station on a graphical user interface |
US5778377A (en) * | 1994-11-04 | 1998-07-07 | International Business Machines Corporation | Table driven graphical user interface |
US5696486A (en) * | 1995-03-29 | 1997-12-09 | Cabletron Systems, Inc. | Method and apparatus for policy-based alarm notification in a distributed network management environment |
US6101491A (en) | 1995-07-07 | 2000-08-08 | Sun Microsystems, Inc. | Method and apparatus for distributed indexing and retrieval |
US6147773A (en) * | 1995-09-05 | 2000-11-14 | Hewlett-Packard Company | System and method for a communication system |
US6393253B1 (en) * | 1995-12-02 | 2002-05-21 | Mediafive Corporation | Data processing device |
US5826261A (en) | 1996-05-10 | 1998-10-20 | Spencer; Graham | System and method for querying multiple, distributed databases by selective sharing of local relative significance information for terms related to the query |
US6128635A (en) * | 1996-05-13 | 2000-10-03 | Oki Electric Industry Co., Ltd. | Document display system and electronic dictionary |
US6581056B1 (en) | 1996-06-27 | 2003-06-17 | Xerox Corporation | Information retrieval system providing secondary content analysis on collections of information objects |
WO1998012881A2 (en) | 1996-09-20 | 1998-03-26 | Netbot, Inc. | Method and system for network information access |
US5850511A (en) * | 1996-10-28 | 1998-12-15 | Hewlett-Packard Company | Computer implemented methods and apparatus for testing a telecommunications management network (TMN) agent |
US5874953A (en) * | 1996-12-31 | 1999-02-23 | International Business Machines Corporation | Database graphical user interface with outline view |
US6006222A (en) | 1997-04-25 | 1999-12-21 | Culliss; Gary | Method for organizing information |
US6052687A (en) * | 1997-06-13 | 2000-04-18 | Fujitsu Limited | Relational database search system and method, and intermediate link table generating method and storage medium |
US6014665A (en) | 1997-08-01 | 2000-01-11 | Culliss; Gary | Method for organizing information |
US6078916A (en) | 1997-08-01 | 2000-06-20 | Culliss; Gary | Method for organizing information |
US6182068B1 (en) | 1997-08-01 | 2001-01-30 | Ask Jeeves, Inc. | Personalized search methods |
US6311178B1 (en) * | 1997-09-29 | 2001-10-30 | Webplus, Ltd. | Multi-element confidence matching system and the method therefor |
US20030055831A1 (en) | 1998-03-16 | 2003-03-20 | S.L.I. Systems, Inc. | Search engine |
US6477543B1 (en) * | 1998-10-23 | 2002-11-05 | International Business Machines Corporation | Method, apparatus and program storage device for a client and adaptive synchronization and transformation server |
US6523028B1 (en) * | 1998-12-03 | 2003-02-18 | Lockhead Martin Corporation | Method and system for universal querying of distributed databases |
US6345266B1 (en) * | 1998-12-23 | 2002-02-05 | Novell, Inc. | Predicate indexing for locating objects in a distributed directory |
US6349299B1 (en) * | 1998-12-24 | 2002-02-19 | International Business Machines Corporation | System and method for storing electronic contact information into an electronic address book |
US6633873B1 (en) | 1999-02-16 | 2003-10-14 | Fujitsu Limited | Distributed data retrieval system including mechanism for predicting an amount of response data |
US6393464B1 (en) * | 1999-05-10 | 2002-05-21 | Unbound Communications, Inc. | Method for controlling the delivery of electronic mail messages |
US6523035B1 (en) * | 1999-05-20 | 2003-02-18 | Bmc Software, Inc. | System and method for integrating a plurality of disparate database utilities into a single graphical user interface |
US6601061B1 (en) * | 1999-06-18 | 2003-07-29 | Surfwax, Inc. | Scalable information search and retrieval including use of special purpose searching resources |
WO2001016807A1 (en) | 1999-08-31 | 2001-03-08 | Mindcrossing, Inc. | An internet search system for tracking and ranking selected records from a previous search |
US6976053B1 (en) | 1999-10-14 | 2005-12-13 | Arcessa, Inc. | Method for using agents to create a computer index corresponding to the contents of networked computers |
US6651054B1 (en) | 1999-10-30 | 2003-11-18 | International Business Machines Corporation | Method, system, and program for merging query search results |
US6772194B1 (en) * | 2000-06-27 | 2004-08-03 | Cisco Technology, Inc. | Directory band shell extension |
US6895426B1 (en) * | 2000-10-17 | 2005-05-17 | Microsoft Corporation | Addresses as objects for email messages |
US6970906B1 (en) * | 2000-10-30 | 2005-11-29 | Nortel Networks Limited | Voice mail caller identification |
US20020078004A1 (en) * | 2000-12-18 | 2002-06-20 | International Business Machines Corporation | Extendible access control for lightweight directory access protocol |
US6633872B2 (en) * | 2000-12-18 | 2003-10-14 | International Business Machines Corporation | Extendible access control for lightweight directory access protocol |
US20030167266A1 (en) | 2001-01-08 | 2003-09-04 | Alexander Saldanha | Creation of structured data from plain text |
US20020147704A1 (en) | 2001-01-24 | 2002-10-10 | International Business Machines Corporation | System and method for searching disparate file systems |
US7346559B2 (en) * | 2001-02-14 | 2008-03-18 | International Business Machines Corporation | System and method for automating association of retail items to support shopping proposals |
US20020143759A1 (en) | 2001-03-27 | 2002-10-03 | Yu Allen Kai-Lang | Computer searches with results prioritized using histories restricted by query context and user community |
US7020662B2 (en) * | 2001-05-29 | 2006-03-28 | Sun Microsystems, Inc. | Method and system for determining a directory entry's class of service based on the value of a specifier in the entry |
US6795820B2 (en) | 2001-06-20 | 2004-09-21 | Nextpage, Inc. | Metasearch technique that ranks documents obtained from multiple collections |
US6901410B2 (en) * | 2001-09-10 | 2005-05-31 | Marron Pedro Jose | LDAP-based distributed cache technology for XML |
US7509303B1 (en) * | 2001-09-28 | 2009-03-24 | Oracle International Corporation | Information retrieval system using attribute normalization |
US7457862B2 (en) * | 2001-10-22 | 2008-11-25 | Avaya, Inc. | Real time control protocol session matching |
WO2003036520A1 (en) | 2001-10-23 | 2003-05-01 | Visto Corporation | System and method for merging remote and local data in a single user interface |
US20030084032A1 (en) | 2001-10-30 | 2003-05-01 | Sukhminder Grewal | Methods and systems for performing a controlled search |
US6944610B2 (en) * | 2001-10-31 | 2005-09-13 | Bellsouth Intellectual Property Corporation | System and method for searching heterogeneous electronic directories |
US20030144924A1 (en) | 2002-01-29 | 2003-07-31 | Mcgee Todd | Smart multi-search method and system |
US7243355B2 (en) * | 2002-04-04 | 2007-07-10 | Verizon Busniess Global Llc | Method, system and computer program product for a lightweight directory access protocol client application program interface |
US20040143569A1 (en) | 2002-09-03 | 2004-07-22 | William Gross | Apparatus and methods for locating data |
US20040049494A1 (en) | 2002-09-10 | 2004-03-11 | Kottisa Vamsi Mohan | Method, system and computer-readable medium for traversing a list of search results |
US7076484B2 (en) * | 2002-09-16 | 2006-07-11 | International Business Machines Corporation | Automated research engine |
US20040103087A1 (en) | 2002-11-25 | 2004-05-27 | Rajat Mukherjee | Method and apparatus for combining multiple search workers |
US20040139106A1 (en) | 2002-12-31 | 2004-07-15 | International Business Machines Corporation | Search engine facility with automated knowledge retrieval generation and maintenance |
US20040209597A1 (en) * | 2003-02-21 | 2004-10-21 | Schlumberger Technology Corporation | Authentication method for enabling a user of a mobile station to access to private data or services |
US20040215607A1 (en) | 2003-04-25 | 2004-10-28 | Travis Robert L. | Method and system fo blending search engine results from disparate sources into one search result |
US20050033803A1 (en) | 2003-07-02 | 2005-02-10 | Vleet Taylor N. Van | Server architecture and methods for persistently storing and serving event data |
US20050021506A1 (en) | 2003-07-08 | 2005-01-27 | Volker Sauermann | Process for performing logical combinations |
US20050131866A1 (en) | 2003-12-03 | 2005-06-16 | Badros Gregory J. | Methods and systems for personalized network searching |
US7516118B1 (en) | 2003-12-31 | 2009-04-07 | Google Inc. | Methods and systems for assisted network browsing |
US20050216485A1 (en) * | 2004-03-25 | 2005-09-29 | International Business Machines Corporation | Real-time attribute processor and syntax schema for directory access protocol services |
Non-Patent Citations (42)
Title |
---|
"askSam(TM) Making Information Useful," askSam,-Organize your information with askSam, http://www.asksam.com/brochure.asp, printed Mar. 15, 2004. |
"askSam™ Making Information Useful," askSam,—Organize your information with askSam, http://www.asksam.com/brochure.asp, printed Mar. 15, 2004. |
"Outlook 2000 in a Nutshell" by Bo Leuf and Tom Syroid, sections 3.2, 3.6 and 6. Published by O'Reilly, Apr. 1, 2000. * |
"Overview," Stuff I've Seen-Home Page, http://research.Microsoft.com/adapt/sis/index.htm, pp. 1-2, printed May 26, 2004. |
"Searching for the next Google-New trends are helping nimble startups elbow in to the plundered market," Red Herring-The Business of Technology, Mar. 9, 2004, http://redherring.com/PrintArticle.aspx?a=4782§or=Capital, p. 1-5, printed Mar. 30, 2004. |
"Selecting Task-Relevant Sources for Just-In-Time Retrieval," pp. 1-3, no date. |
"Standardization Priorities for the Directory-Directory Interoperability Forum White Paper," The Open Group, Dec. 2001, pp. 1-21. |
"WhenU Just-In-Time Marketing," http://www.whenu,com, printed Mar. 19, 2004. |
80-20 Software-Products-80-20 One Search, http://www.80-20.com/products/one-search/retriever.asp, printed Mar. 16, 2004. |
Alexa® Web Search-Toolbar Quick Tour, http://pages.alexa.com/prod-serv/quicktour.html, pp. 1-5, printed Mar. 16, 2004. |
Barrett, R. et al., "How to Personalize the Web," IBM Research, http://www.almaden.ibm.com/cs/wbi/papers/chi97/wbipaper.html, pp. 1-13, printed Mar. 16, 2004. |
Battelle, J., CNN.com "When geeks go camping, ideas hatch," http://www.cnn.com/2004/TECH/ptech/01/09/bus2.feat.geek.camp/index.html, pp. 1-3, printed Jan. 13, 2004. |
Boyan, J., et al., "A Machine Learning Architecture for Optimizing Web Search Engines," School of Computer Science, Carnegie Mellon University, May 10, 1996, pp. 1-8. |
Bradenbaugh, F., "Chapter 1 The Client-Side Search Engine," JavaScript Cookbook, 1st Ed., Oct. 1999, O'Reilly(TM) Online Catalog, http://www.oreilly.com/catalog/jscook/chapter/ch01.html, pp. 1-30, printed Dec. 29, 2003. |
Bradenbaugh, F., "Chapter 1 The Client-Side Search Engine," JavaScript Cookbook, 1st Ed., Oct. 1999, O'Reilly™ Online Catalog, http://www.oreilly.com/catalog/jscook/chapter/ch01.html, pp. 1-30, printed Dec. 29, 2003. |
Brin, S., et al, "The Anatomy of a Large-Scale Hypertextual Web Search Engine," http://www7.scu.edu.au/programme/fullpapers/1921/com1921.htm, pp. 1-18, 1998. |
Budzik, J., et al., User Interactions with Everyday Applications as Context for Just-in-time Information Access, Intelligent Information Laboratory, Northwestern University, pp. 1-8, no date. |
DEVONthink, http://www.devon-techonologies.com/products/devonthink.php, printed Mar. 16, 2004. |
dtSearch®-http://www.dtsearch.com/, printed Mar. 15, 2004. |
Dumais, S., et al, "Stuff I've Seen: A System for Personal Information Retrieval and Re-Use," Microsoft Research, SIGIR'03, Jul. 28-Aug. 1, 2003, pp. 1-8. |
Enfish, http://www.enfish.com, printed Mar. 16, 2004. |
Fast Search & Transfer-Home-Enterprise Search, http://solutions.altavista.com/en/news/pr-020402-desktop.shtmu printed Mar. 16, 2004. |
Fertig, S., et al., "Lifestreams: An Alternative to the Desktop Metaphor," http://www.acm.org/sigchi/chi96/proceedings/videos/Fertig/etf.htm, pp. 1-3, printed Mar. 16, 2004. |
Geisler, G., "Enriched Links: A Framework for Improving Web Navigation Using Pop-Up Views," pp. 1-14, 2000. |
Graham, R.Y. Subject no-hits searches in an academic library online catalog: An exploration of two potential ameliorations. College & research libraries. (2004) vol. 65, No. 1, pp. 36-54. * |
International Search Report and Written Opinion, PCT/US2004/039366, Feb. 28, 2005. |
ISYS Search Software-ISYS: desktop, http://www,isysusa.com/products/desktop/index.html, printed Mar. 16, 2004. |
Joachims, T., et al.,"WebWatcher: A Tour Guide for the World Wide Web," 1996. |
Leake et al. "Selecting Task-Relevant Sources for Just-in-Time Retrieval" (1999). Available online at http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.50.2080. * |
Markoff, J., "Google Moves Toward Clash with Microsoft," The New York Times, May 19, 2004, http://www.nytimes.com/2004/5/19/technology/19google.html?ex=1085964389&ei=1&e..., pp. 1-4, printed May 19, 2004. |
Naraine, R., "Future of Search Will Make You Dizzy," Enterprise, May 20, 2004, http://www.internetnews.com/ent-news/article.php/3356831, pp. 1-4, printed May 21, 2004. |
Rhodes, B., "Margin Notes Building a Contextually Aware Associative Memory," The Proceedings of the International Conference on Intelligent User Interfaces (IUI'00), Jan. 9-12, 2000. |
Rhodes, B., et al., "Just-in-time information retrieval agents," Systems Journal, vol. 39, Nos. 3&4, 2000, pp. 685-704. |
Rhodes, B., et al., "Remembrance Agent-A continuously running automated information retrieval system," The Proceedings of the First International Conference on the Practical Application of Intelligent Agents and Multi Agent Technology (PAAM '96), pp. 487-495. |
Rizzo, T., "WinFS 101: Introducing the New Windows File System," Longhorn Developer Center Home: Headline Archive: WinFS 101: Introducing the New . . . , http://msdn.Microsoft.com/Longhorn/archive/default.aspx?pull+/library/en-us/dnwinfs/htm..., pp. 1-5, printed Apr. 21, 2004. |
Sherman, C., "HotBot's New Desktop Search Toolbar," www.searchenginewatch.com, http://searchenginewatch.com/searchday/print.php/34711-339921, pp. 1-3. printed Apr. 14, 2004. |
Sullivan, D., "Alta Vista Releases Search Software," The Search Engine Report, Aug. 4, 1998, pp. 1-2. |
U.S. Appl. No. 10/749,440, filed Dec. 31, 2003, Badros et al. |
WebWatcher Home Page, "Welcome to the WebWatcher Project," http://www-2.cs.cmu.edu/~webwatcher/, printed Oct. 15, 2003. |
WebWatcher Home Page, "Welcome to the WebWatcher Project," http://www-2.cs.cmu.edu/˜webwatcher/, printed Oct. 15, 2003. |
X1 instantly searches files & email. For outlook, Outlook, http://www.x1.com/, printed Mar. 15, 2004. |
Zellweger, P., et al., "Fluid Links for Informed and Incremental Link Transitions," Proceedings of Hypertext'98, Pittsburgh, PA, Jun. 20-24, 1998, pp. 50-57. |
Cited By (19)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20060045355A1 (en) * | 2004-08-26 | 2006-03-02 | Kyocera Corporation | Mobile terminal, and computer controlling method and program for use in the same |
US9171037B2 (en) * | 2007-10-02 | 2015-10-27 | Tibco Software Inc. | Searching for associated events in log data |
US20130185286A1 (en) * | 2007-10-02 | 2013-07-18 | Boris Galitsky | Searching for associated events in log data |
US8909659B2 (en) * | 2007-12-10 | 2014-12-09 | Ca, Inc. | Directory system and method of searching information |
US20090150360A1 (en) * | 2007-12-10 | 2009-06-11 | Computer Associates Think, Inc. | A Directory System and Method of Searching Information |
US20110219005A1 (en) * | 2008-06-26 | 2011-09-08 | Microsoft Corporation | Library description of the user interface for federated search results |
US8423905B2 (en) * | 2008-07-17 | 2013-04-16 | International Business Machines Corporation | Automatically populating recipients in an instant messaging or other computer communication system |
US20100017753A1 (en) * | 2008-07-17 | 2010-01-21 | Li Fuyi | Automatically populating recipients in an instant messaging or other computer communication system |
US9363211B2 (en) | 2008-07-17 | 2016-06-07 | International Business Machines Corporation | Automatically populating recipients in an instant messaging or other computer communication system |
US20150261836A1 (en) * | 2014-03-17 | 2015-09-17 | Intuit Inc. | Extracting data from communications related to documents |
US11042561B2 (en) * | 2014-03-17 | 2021-06-22 | Intuit Inc. | Extracting data from communications related to documents using domain-specific grammars for automatic transaction management |
US20160063410A1 (en) * | 2014-08-28 | 2016-03-03 | Google Inc. | Systems and Methods for Task Assistance by Correlating Task Terms with Specific Entities |
US20160117416A1 (en) * | 2014-10-27 | 2016-04-28 | Joseph Wong | Automatic detection of queries missing order-by via unit test |
US9767219B2 (en) * | 2014-10-27 | 2017-09-19 | Successfactors, Inc. | Automatic detection of queries missing order-by via unit test |
US9684693B1 (en) * | 2016-04-05 | 2017-06-20 | Google Inc. | On-device query rewriting |
US10346493B1 (en) | 2016-04-05 | 2019-07-09 | Google Llc | On-device query rewriting |
US11120090B2 (en) | 2016-04-05 | 2021-09-14 | Google Llc | On-device query rewriting |
CN113806595A (en) * | 2021-08-13 | 2021-12-17 | 荣耀终端有限公司 | Code search system generation method, code search method and search server |
CN113806595B (en) * | 2021-08-13 | 2022-08-12 | 荣耀终端有限公司 | Code search system generation method, code search method and search server |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11860921B2 (en) | Category-based search | |
US7788274B1 (en) | Systems and methods for category-based search | |
US7333976B1 (en) | Methods and systems for processing contact information | |
US7693825B2 (en) | Systems and methods for ranking implicit search results | |
AU2005231112B2 (en) | Methods and systems for structuring event data in a database for location and retrieval | |
US9836544B2 (en) | Methods and systems for prioritizing a crawl | |
US7725508B2 (en) | Methods and systems for information capture and retrieval | |
US7437353B2 (en) | Systems and methods for unification of search results | |
US7873632B2 (en) | Systems and methods for associating a keyword with a user interface area | |
US20080059419A1 (en) | Systems and methods for providing search results | |
US20090276408A1 (en) | Systems And Methods For Generating A User Interface | |
US7707142B1 (en) | Methods and systems for performing an offline search | |
US20080077558A1 (en) | Systems and methods for generating multiple implicit search queries | |
US20040254938A1 (en) | Computer searching with associations | |
US7412708B1 (en) | Methods and systems for capturing information | |
US7089233B2 (en) | Method and system for searching for web content | |
JP2010257453A (en) | System for tagging of document using search query data | |
US7761439B1 (en) | Systems and methods for performing a directory search | |
US7499958B1 (en) | Systems and methods of replicating all or part of a data store | |
US8667013B1 (en) | Systems and methods for determining an article association measure | |
US7581227B1 (en) | Systems and methods of synchronizing indexes | |
CA2339217A1 (en) | Information access |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE, INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:AUERBACH, DAVID BENJAMIN;REEL/FRAME:015881/0404Effective date: 20041007 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044101/0405Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552)Year of fee payment: 8 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
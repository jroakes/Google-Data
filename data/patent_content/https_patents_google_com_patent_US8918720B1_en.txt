US8918720B1 - List of most selected web based application documents - Google Patents
List of most selected web based application documents Download PDFInfo
- Publication number
- US8918720B1 US8918720B1 US13/350,533 US201213350533A US8918720B1 US 8918720 B1 US8918720 B1 US 8918720B1 US 201213350533 A US201213350533 A US 201213350533A US 8918720 B1 US8918720 B1 US 8918720B1
- Authority
- US
- United States
- Prior art keywords
- document
- documents
- web browser
- identifier
- web
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Expired - Fee Related, expires
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
Definitions
- Users search for, refer to, send, edit, etc., numerous emails and documents throughout a day.
- a particular document, email or email thread can be referred to numerous times.
- Some applications provide a user with a list of most recently accessed documents. Users can use this list to refer quickly to a document that was recently accessed. Such a list allows a user to refer to a recently accessed document without requiring the user to search for the document.
- one aspect of the subject matter described in this specification can be embodied in methods for receiving one or more keywords at a web application.
- the one or more keywords are used to search for documents of a first type.
- the documents are accessible by a user via an account of the user based upon user permissions.
- Search results are provided based upon the received one or more keywords and include links to one or more documents of the first type.
- a selection one or more of the links to the one or more documents in the search results is received.
- Selecting the one or more of the links logs data.
- the logged data includes an indication that the one or more documents was selected.
- a request for a list of most or recently selected documents of the first type for the user is received.
- the list of most or recently selected documents of the first type is based upon an aggregation of the logged data, and the list of most selected documents of the first type is provided.
- Other implementations of this aspect include corresponding systems, apparatuses, and computer-readable media configured to perform the actions of the method.
- FIG. 1 illustrates a block diagram of an example of a system for generating lists of selected web-based application documents in accordance with an illustrative implementation.
- FIG. 2 illustrates an example of a most viewed tab in accordance with an illustrative implementation.
- FIG. 3 is a flow diagram of a process for generating a list of most selected web documents in accordance with an illustrative implementation.
- FIG. 4 is a flow diagram of a process for generating lists of selected web based application documents in accordance with an illustrative implementation.
- FIG. 5 is a block diagram of a computer system in accordance with an illustrative implementation.
- Users search for documents e.g., emails, word processing documents, spreadsheets, images, etc., using various tools, such as a keyword search, various folders arranged by topic, manually scanning titles of documents, etc.
- Certain documents can be repeatedly searched for and accessed by a user. The number of times that a document is accessed by a user can be logged. From this logged data, a list of the most accessed documents can be generated and presented to a user.
- various other lists can be generated. For example, a list of most selected documents of a particular type can be generated. Other examples include a list of most printed, most searched, most shared, and/or most edited documents.
- FIG. 1 illustrates a block diagram of an example of a system for generating lists of selected web-based application documents in accordance with an illustrative implementation.
- a client 102 such as a computing device running a web browser, can access various online applications.
- An online or web application is an application that is configured to run on a server and be accessible over a network, such as the internet.
- an email web application allows a user to access an email account over a network.
- a web application can store data remotely from a client device.
- a user can access the web application data from any number of clients.
- a web application 104 can be an online word processing program for editing word processing documents.
- Another web application 106 can allow the creating and editing of spreadsheets.
- web applications are also possible.
- other web applications can include, but are not limited to, a mapping application, a presentation application, an email application, a drawing application, a form application, etc.
- Some applications allow editing/creating of specific types of documents.
- applications can allow editing/creating of spreadsheets, text documents, drawings, etc.
- the client 102 can access one or more online applications using a network, such as the internet.
- An application operating on a server computer such as a web server, can provide a list of documents that can be edited by the client 102 .
- an application can list some or all of the documents of a particular type that a particular user has access to.
- a single interface can provide a list of documents of various types.
- a user must log into an application, after which a list of documents associated with the user can be displayed.
- a user can have an account is associated with a username and password or other credentials. Using the username and credentials, a user can login into a web application.
- Data associated with the user can be stored in a user profile.
- Permissions associated with a user can be used to determine the documents that a user has access to. For example, a document can be created that is only accessible to a particular user. Documents can also be shared, such that a document can be accessed by one or more users. Public documents can also be created, which can be accessed by anyone. Permissions can be used to define the access level each user has. For example, one user may have the ability to view, edit, print, etc. a document, while another user may have the ability to view the document. Accordingly, a user will see only those documents that the user has access to when they log into a web application.
- the client 102 can send the application 104 a reference to a particular text document to begin editing of the text document.
- the client can also access one or more spreadsheets from the application 106 .
- the selection of a particular document can be logged. Logging can be done at various computing devices.
- the applications 104 and 106 can log the selected document received from the client 102 .
- data associated with a user can be logged across multiple clients by the applications.
- the client 102 can log the selection of documents locally.
- a plugin to or an extension of a web browser or the browser itself can store data locally.
- the selection of documents can be sent to a synchronization server 108 .
- each selection of a document can send a request to the corresponding application and also an indication of the selected document to the synchronization server 108 .
- the applications 104 and 106 can send the selection of documents to the synchronization server 108 .
- the indication can include information such as, but not limited to, a user identifier, a session identifier, a document identifier, a document name, a document type, a timestamp, an action identifier, etc.
- Logging of the selection of documents can be done in an unobtrusive way for the user. For example, as part of selecting and displaying a document, the selection can be logged without requiring further input from the user. Enabling of such logging can be configurable. For example, a user can enable/disable the logging of selections of documents through a user preferences interface.
- the data can be aggregated (e.g., summed, grouped, etc.) at one or more of the various computing devices.
- the data can be aggregated to determine how many times each particular document was selected, how many times the document was selected over a period of time (e.g., in the last day, last week, last month, etc.), etc.
- the aggregation of the data can be done at the computing device that logs the data.
- the aggregated data can be sent to the synchronization server 108 .
- a user can request a list of the most selected documents.
- the user can request a list of the most selected documents for various document types. For example, a user can request a list of most selected word processing documents and a list of most selected spreadsheets. Once received, these lists can be displayed within a web browser. In one implementation, the lists can be displayed in a tab of a browser. For example, when the user opens a new web browser tab, the most selected word processing documents and the most selected spreadsheets can be displayed for the user. The displayed list can provide links to the various documents, which upon selecting, retrieve the selected document.
- the displayed list includes a visual preview of each document. For example, a cached version of the document or a newly accessed copy of the document can be displayed as a thumbnail of the document.
- various other lists of documents can be produced based upon the aggregated logged data. For example, each time a user prints a document an indication of the print action can be logged. Another example is editing and/or saving a document. Each time a document is edited or saved, an indication of this action can be logged. Other actions include, but are not limited to, sharing a document, forwarding a document, posting a link to a document to a social networking site, a document being returned in search results, etc.
- the user can request a list of most printed documents, most saved documents, most search documents, most shared documents, etc.
- FIG. 2 illustrates an example of a most viewed tab in accordance with an illustrative implementation.
- a most viewed tab 202 of a browser interface 200 can provide one or more lists of documents.
- a most viewed documents section 204 can provide a list of the most viewed documents.
- the section 204 can include the most selected documents of a particular type.
- the section 204 can include a list of the documents that includes the name of each document.
- a preview of each document can be shown.
- a preview 208 can be shown of an email thread titled Thread1 212 .
- the most viewed tab 202 can also include a second section 206 of documents.
- the section 206 can include a list of the most printed documents.
- each document in the second section 206 can include a preview 210 as well as a name 214 .
- the sections 204 and 206 can include other information, such as the name of each document, an email thread title, the number of times the document was selected/printed, the date of the last action, etc.
- the list of documents can be restricted based upon a time period. For example, the most selected documents within the past day, week, work week, weekend, month, quarter, year, etc., can be requested.
- the logged data includes a timestamp indicating when a particular action took place. This timestamp can be used to determine the number of times a particular action took place in any given time period. For example, selecting a document numerous times six months ago would log data with an indication of the date and/or time each selection took place. Creating a list of the most selected documents within the past week would exclude the selection of these documents based upon the timestamp data.
- a user can configure a most viewed tab to include one or more lists. These lists can be configured by the user. For example, a user can configure the number of lists displayed, a time span for each list, how to display each document in the list, the document type for each list, the type of list, the number of documents within a list, etc. For example, a user can choose the type of list based upon the various logged actions. A user can select to show the most selected, printed, edited, searched, forwarded, shared, etc. documents for a particular list. In addition, the user can select a time span for each list. As an example, a user can configure the most viewed tab to include three lists of documents.
- a first list can include the most viewed documents, regardless of type, over all of the logged data.
- the documents of the first list can be displayed in a list format limited to the top three documents that includes the title of each document at the bottom of the tab.
- a second list can be configured to display the top six word processing documents selected within the last week.
- a preview of each document can be displayed along with the document's title and the number of times the document was selected within the last week.
- the third list can be configured to display the six most searched-for emails over the last month. Each email can be displayed as a preview of the email along with the subject, who sent the email, who received the email, time sent, time received, etc.
- documents searched for by a user can be logged and a list of documents included most often in search results can be generated.
- a user can search through emails using keywords.
- Search results e.g., a list of emails
- Information identifying the emails returned to the user can be logged as being part of search results.
- the keywords can be logged.
- additional information is logged and used to weigh the various returned emails. For example, a selection of an email from search results can be logged.
- the logged data can include information identifying the selection of the email and an indication that the email was part of search results.
- positive user feedback impacts the scoring of emails within a list.
- a list of the most selected emails can be generated. Emails that were part of any search results can be included in this list; however, the ordering of the emails can depend upon whether the emails were selected. For example, an email being returned in a set of search results can be given a particular value. Selecting an email, however, can be given a larger value. The values across all searches/accesses can be summed to determine a score for each email. The emails can then be ranked based upon the score, and the top emails can be selected.
- a user may click on various emails looking for a particular email.
- the last selected email can be presumed to be the email that the user was searching for. Accordingly, in one implementation, the last selected email from a set of search results can be assigned a high value compared to previously selected emails. In yet another example, only the selected emails or last selected email are scored and any unselected emails are essentially ignored. That is, unselected emails in search results are not assigned any value solely for being included in search results.
- an identifier associated with the email can be used to increment a count. For example, a message identifier unique to an email can be used to locate the count. In another implementation, a thread identifier associated with a thread to which the email belongs can be used to locate the count. In yet another implementation, both identifiers are used to store two different counts, one for the email and one for the thread to which the email belongs.
- the identifier can be created and the count set to an initial value, such as 1.
- the data store can be part of the email application, stored locally at a client, or in a synchronization server.
- a user identifier can also be logged along with the email identifier. For example, an email is selected and both an email identifier count is incremented and a thread identifier count is incremented.
- the user can request a list of most selected emails or most selected email threads.
- the browser can request or read from the data store to determine the most selected emails/threads. Document types other than email can also be searched using keywords. Accordingly, the above example regarding email can be applied to word processing documents, spreadsheets, etc.
- FIG. 3 is a flow diagram of a process for generating a list of most selected web documents in accordance with an illustrative implementation.
- the process 300 can be implemented on a computing device.
- the process 300 is encoded on a computer-readable medium that contains instructions that, when executed by a computing device, cause the computing device to perform operations of process 300 .
- a client such as a web browser, can receive one or more keywords from a user. These keywords can be sent to a web application ( 302 ).
- the web application can allow access to documents of one or more types.
- a web application can allow users to edit word processing documents and spreadsheets, which may be stored on a web server computer.
- the keywords can be used to search for documents of a particular type that are accessible to a user via a user account.
- Documents can be accessed by the user based upon user permissions. For example, the user can access documents that they have previously created or a document that has been shared by a different user with the user. One user can grant permission to view, edit, share, delete, etc., or more than one of these permissions to another user on a document-by-document basis.
- Search results are provided based upon the one or more keywords ( 304 ).
- the search results can be provided to the client.
- the search results include links to one or more documents of the one or more types.
- the search results can include links to emails, spreadsheets, word processing documents, etc.
- the user can select one or more of the documents within the search results.
- the web application can receive the selection of one or more links to the selected documents ( 306 ).
- the web application can log that these documents were selected by the user.
- the logged data can include a user identifier, a document identifier, and a timestamp.
- the client or another server such as a synchronization server, can log the selected documents.
- the logged data can be aggregated together and this aggregated data can be used to generate a list of the most selected documents.
- a request for a list of most selected documents of a particular type for the user can be received ( 308 ). For example, the web application can receive this request from the client.
- the list can be based upon all of the aggregated data associated with the user or can be limited to a time period. For example, a user can request the most selected documents within the last day, week, month, etc.
- the list can be provided to the client ( 310 ).
- the client can display the list, for example, in a new tab of a browser.
- FIG. 4 is a flow diagram of a process for generating lists of the selected web-based application documents in accordance with an illustrative implementation.
- the process 400 can be implemented on a computing device.
- the process 400 is encoded on a computer-readable medium that contains instructions that, when executed by a computing device, cause the computing device to perform operations of process 400 .
- a selection of one or more links to one or more documents of a first type is received ( 402 ).
- a user can select a word processing document and edit the word processing document using a web application.
- the user can also select another word processing document and print that document.
- Each selection of the documents can be logged.
- the logged data can include of the user who selected the documents and identifying information regarding which documents were selected. Other data can also be logged, such as, but not limited to, a session identifier, a document identifier, a document name, a document type, a timestamp, an action identifier, etc.
- a selection of one or more links to one or more documents of a second type is received ( 404 ).
- a user can select a spreadsheet for viewing using a web application.
- the user can also select another spreadsheet and share the spreadsheet with another user.
- Each selection of the documents can be logged.
- the logged data can include the user who selected the documents and identifying information regarding which documents were selected.
- Other data can also be logged, such as, but not limited to, a session identifier, a document identifier, a document name, a document type, a timestamp, an action identifier, etc.
- the user can request a list of most selected documents based upon an aggregation of the logged data. For example, the user can request a list of most selected documents of the first type and a list of most selected documents of the second type ( 406 ). In other implementations, the user can request a single list, such as the most selected emails. In addition to the most selected documents, the user can request various other lists. For example, the list can include, but is not limited to, the most shared, the most printed, the most edited, etc. After requesting the lists, the lists are received ( 408 ). Each list can include a list of documents. The list can include information identifying the document and a link to the where the document can be accessed. The lists can be displayed within a browser ( 410 ).
- the lists can be displayed in a tab of the web browser.
- the top five, six, ten, etc. documents from each list of documents can be displayed as links in a tab of a web browser.
- a user can click on any document link to access the document.
- a thumbnail of each document can be displayed and linked to the document.
- FIG. 5 is a block diagram of a computer system in accordance with an illustrative implementation.
- the computer system or computing device 500 can be used to implement a client, web application server, web server, synchronization server, etc.
- the computing system 500 includes a bus 505 or other communication component for communicating information and a processor 510 or processing circuit coupled to the bus 505 for processing information.
- the computing system 500 can also include one or more processors 510 or processing circuits coupled to the bus for processing information.
- the computing system 500 also includes main memory 515 , such as a random access memory (RAM) or other dynamic storage device, coupled to the bus 505 for storing information, and instructions to be executed by the processor 510 .
- main memory 515 such as a random access memory (RAM) or other dynamic storage device
- Main memory 515 can also be used for storing position information, temporary variables, or other intermediate information during execution of instructions by the processor 510 .
- the computing system 500 may further include a read only memory (ROM) 510 or other static storage device coupled to the bus 505 for storing static information and instructions for the processor 510 .
- ROM read only memory
- a storage device 525 such as a solid state device, magnetic disk or optical disk, is coupled to the bus 505 for persistently storing information and instructions.
- the computing system 500 may be coupled via the bus 505 to a display 535 , such as a liquid crystal display, or active matrix display, for displaying information to a user.
- a display 535 such as a liquid crystal display, or active matrix display
- An input device 530 such as a keyboard including alphanumeric and other keys, may be coupled to the bus 505 for communicating information and command selections to the processor 510 .
- the input device 530 has a touch screen display 535 .
- the input device 530 can include a cursor control, such as a mouse, a trackball, or cursor direction keys, for communicating direction information and command selections to the processor 510 and for controlling cursor movement on the display 535 .
- the processes described herein can be implemented by the computing system 500 in response to the processor 510 executing an arrangement of instructions contained in main memory 515 .
- Such instructions can be read into main memory 515 from another computer-readable medium, such as the storage device 525 .
- Execution of the arrangement of instructions contained in main memory 515 causes the computing system 500 to perform the illustrative processes described herein.
- One or more processors in a multi-processing arrangement may also be employed to execute the instructions contained in main memory 515 .
- hard-wired circuitry may be used in place of or in combination with software instructions to effect illustrative implementations. Thus, implementations are not limited to any specific combination of hardware circuitry and software.
- Implementations of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software embodied on a tangible medium, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them.
- the subject matter described in this specification can be implemented as one or more computer programs embodied on a tangible medium, i.e., one or more modules of computer program instructions, encoded on one or more computer storage media for execution by, or to control the operation of, data processing apparatus.
- the program instructions can be encoded on an artificially-generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus for execution by a data processing apparatus.
- a computer storage medium can be, or be included in, a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them.
- a computer storage medium is not a propagated signal, a computer storage medium can be a source or destination of computer program instructions encoded in an artificially-generated propagated signal.
- the computer storage medium can also be, or be included in, one or more separate components or media (e.g., multiple CDs, disks, or other storage devices). Accordingly, the computer storage medium is both tangible and non-transitory.
- the operations described in this specification can be performed by a data processing apparatus on data stored on one or more computer-readable storage devices or received from other sources.
- the term “data processing apparatus” or “computing device” encompasses all kinds of apparatus, devices, and machines for processing data, including by way of example a programmable processor, a computer, a system on a chip, or multiple ones, or combinations of the foregoing
- the apparatus can include special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
- the apparatus can also include, in addition to hardware, code that creates an execution environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them.
- the apparatus and execution environment can realize various different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
- a computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment.
- a computer program may, but need not, correspond to a file in a file system.
- a program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub-programs, or portions of code).
- a computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
- processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer.
- a processor will receive instructions and data from a read-only memory or a random access memory or both.
- the essential elements of a computer are a processor for performing actions in accordance with instructions and one or more memory devices for storing instructions and data.
- a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks.
- a computer need not have such devices.
- a computer can be embedded in another device, e.g., a mobile telephone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a universal serial bus (USB) flash drive), to name just a few.
- Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.
- the processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
- implementations of the subject matter described in this specification can be implemented on a computer having a display device, e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor, for displaying information to the user and a keyboard and a pointing device, e.g., a mouse or a trackball, by which the user can provide input to the computer.
- a display device e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor
- keyboard and a pointing device e.g., a mouse or a trackball
- Other kinds of devices can be used to provide for interaction with a user as well; for example, feedback provided to the user can be any form of sensory feedback, e.g., visual feedback, auditory feedback, or tactile feedback; and input from the user can be received in any form, including acoustic, speech, or tactile input.
Abstract
Description
Claims (20)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/350,533 US8918720B1 (en) | 2012-01-13 | 2012-01-13 | List of most selected web based application documents |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/350,533 US8918720B1 (en) | 2012-01-13 | 2012-01-13 | List of most selected web based application documents |
Publications (1)
Publication Number | Publication Date |
---|---|
US8918720B1 true US8918720B1 (en) | 2014-12-23 |
Family
ID=52101951
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/350,533 Expired - Fee Related US8918720B1 (en) | 2012-01-13 | 2012-01-13 | List of most selected web based application documents |
Country Status (1)
Country | Link |
---|---|
US (1) | US8918720B1 (en) |
Cited By (3)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10209867B1 (en) * | 2015-05-15 | 2019-02-19 | Jordan M. Becker | Electronic documentation integration and viewing system |
US20190129589A1 (en) * | 2017-10-31 | 2019-05-02 | Salesforce.Com, Inc. | Personalized Interaction and Navigation System |
CN112073307A (en) * | 2020-09-10 | 2020-12-11 | 北京字跳网络技术有限公司 | Mail processing method and device, electronic equipment and computer readable medium |
Citations (24)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020120858A1 (en) * | 1996-09-09 | 2002-08-29 | Jack Edward Porter | Method and apparatus for document management utilizing a messaging system |
US6473752B1 (en) * | 1997-12-04 | 2002-10-29 | Micron Technology, Inc. | Method and system for locating documents based on previously accessed documents |
US20030018626A1 (en) * | 2001-07-23 | 2003-01-23 | Kay David B. | System and method for measuring the quality of information retrieval |
US20040012802A1 (en) * | 2002-07-17 | 2004-01-22 | Allen Kram H. | System and method for printing a data file |
US20050097441A1 (en) * | 2003-10-31 | 2005-05-05 | Herbach Jonathan D. | Distributed document version control |
US20050177803A1 (en) * | 2000-06-21 | 2005-08-11 | Microsoft Corporation | Methods and systems of providing information to computer users |
US20050267917A1 (en) * | 2000-06-23 | 2005-12-01 | Microsoft Corporation | Web server document library |
US20070226204A1 (en) * | 2004-12-23 | 2007-09-27 | David Feldman | Content-based user interface for document management |
US20070283011A1 (en) * | 2006-06-02 | 2007-12-06 | Google Inc. | Synchronizing Configuration Information Among Multiple Clients |
US20080033919A1 (en) * | 2006-08-04 | 2008-02-07 | Yan Arrouye | Methods and systems for managing data |
US20080052343A1 (en) * | 2006-07-27 | 2008-02-28 | Wood Charles B | Usage-Based Prioritization |
US20080222238A1 (en) * | 2007-03-08 | 2008-09-11 | Microsoft Corporation | Extending functionality of web-based applications |
US20080229236A1 (en) * | 2007-03-16 | 2008-09-18 | Oracle International Corporation | Non-linear navigation in discussion forums |
US20090024609A1 (en) * | 2007-07-20 | 2009-01-22 | Salesforce.Com Inc. | System and method for storing documents accessed by multiple users in an on-demand service |
US20090037492A1 (en) * | 2007-07-31 | 2009-02-05 | Ahmad Baitalmal | Framework for Synchronizing Applications |
US20090210806A1 (en) * | 2008-02-20 | 2009-08-20 | International Business Machines Corporation | Method and system for predictive browsing |
US20090249453A1 (en) * | 2007-09-28 | 2009-10-01 | The Aspen Equity Group, Inc. | Method and system for hub-and-spoke website browsing and navigation on a multipaned platform for the communication, distribution, and collaboration of information and data |
US20090327913A1 (en) * | 2008-06-27 | 2009-12-31 | Microsoft Corporation | Using web revisitation patterns to support web interaction |
US7664821B1 (en) * | 2006-01-26 | 2010-02-16 | Stratify, Inc. | Systems and methods for determining communication chains based on messages |
US20100115254A1 (en) * | 2008-10-30 | 2010-05-06 | Thomas Deng | Synchronization in Multiple Environments |
US20100287219A1 (en) * | 2009-05-05 | 2010-11-11 | Entangled Media LLC | Method For a Cloud-Based Meta-File System to Virtually Unify Remote and Local Files Across a Range of Devices' Local File Systems |
US20110225249A1 (en) * | 2003-06-23 | 2011-09-15 | Apple Inc. | Threaded Presentation of Electronic Mail |
US20120203733A1 (en) * | 2011-02-09 | 2012-08-09 | Zhang Amy H | Method and system for personal cloud engine |
US20120260192A1 (en) * | 2011-04-11 | 2012-10-11 | Detweiler Sean D | Automated browser mode based on user and access point |
-
2012
- 2012-01-13 US US13/350,533 patent/US8918720B1/en not_active Expired - Fee Related
Patent Citations (24)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20020120858A1 (en) * | 1996-09-09 | 2002-08-29 | Jack Edward Porter | Method and apparatus for document management utilizing a messaging system |
US6473752B1 (en) * | 1997-12-04 | 2002-10-29 | Micron Technology, Inc. | Method and system for locating documents based on previously accessed documents |
US20050177803A1 (en) * | 2000-06-21 | 2005-08-11 | Microsoft Corporation | Methods and systems of providing information to computer users |
US20050267917A1 (en) * | 2000-06-23 | 2005-12-01 | Microsoft Corporation | Web server document library |
US20030018626A1 (en) * | 2001-07-23 | 2003-01-23 | Kay David B. | System and method for measuring the quality of information retrieval |
US20040012802A1 (en) * | 2002-07-17 | 2004-01-22 | Allen Kram H. | System and method for printing a data file |
US20110225249A1 (en) * | 2003-06-23 | 2011-09-15 | Apple Inc. | Threaded Presentation of Electronic Mail |
US20050097441A1 (en) * | 2003-10-31 | 2005-05-05 | Herbach Jonathan D. | Distributed document version control |
US20070226204A1 (en) * | 2004-12-23 | 2007-09-27 | David Feldman | Content-based user interface for document management |
US7664821B1 (en) * | 2006-01-26 | 2010-02-16 | Stratify, Inc. | Systems and methods for determining communication chains based on messages |
US20070283011A1 (en) * | 2006-06-02 | 2007-12-06 | Google Inc. | Synchronizing Configuration Information Among Multiple Clients |
US20080052343A1 (en) * | 2006-07-27 | 2008-02-28 | Wood Charles B | Usage-Based Prioritization |
US20080033919A1 (en) * | 2006-08-04 | 2008-02-07 | Yan Arrouye | Methods and systems for managing data |
US20080222238A1 (en) * | 2007-03-08 | 2008-09-11 | Microsoft Corporation | Extending functionality of web-based applications |
US20080229236A1 (en) * | 2007-03-16 | 2008-09-18 | Oracle International Corporation | Non-linear navigation in discussion forums |
US20090024609A1 (en) * | 2007-07-20 | 2009-01-22 | Salesforce.Com Inc. | System and method for storing documents accessed by multiple users in an on-demand service |
US20090037492A1 (en) * | 2007-07-31 | 2009-02-05 | Ahmad Baitalmal | Framework for Synchronizing Applications |
US20090249453A1 (en) * | 2007-09-28 | 2009-10-01 | The Aspen Equity Group, Inc. | Method and system for hub-and-spoke website browsing and navigation on a multipaned platform for the communication, distribution, and collaboration of information and data |
US20090210806A1 (en) * | 2008-02-20 | 2009-08-20 | International Business Machines Corporation | Method and system for predictive browsing |
US20090327913A1 (en) * | 2008-06-27 | 2009-12-31 | Microsoft Corporation | Using web revisitation patterns to support web interaction |
US20100115254A1 (en) * | 2008-10-30 | 2010-05-06 | Thomas Deng | Synchronization in Multiple Environments |
US20100287219A1 (en) * | 2009-05-05 | 2010-11-11 | Entangled Media LLC | Method For a Cloud-Based Meta-File System to Virtually Unify Remote and Local Files Across a Range of Devices' Local File Systems |
US20120203733A1 (en) * | 2011-02-09 | 2012-08-09 | Zhang Amy H | Method and system for personal cloud engine |
US20120260192A1 (en) * | 2011-04-11 | 2012-10-11 | Detweiler Sean D | Automated browser mode based on user and access point |
Non-Patent Citations (13)
Title |
---|
"A New Approach to Printing," by Jazayeri, Mike. In: The Chromium Blog (Apr. 15, 2010). Available at: http://blog.chromium.org/2010/04/new-approach-to-printing.html. * |
"All Email Messages in Gmail Have a Permanent Web Address," by Agarwal, Amit (Jan. 28, 2009). Available at: http://www.labnol.org/internet/gmail-emails-have-permanent-web-address/6811/. * |
"Chrome 8," by Google (screenshots from Google Chrome v. 8.0.552.224, released Dec. 2010). * |
"Collaborative Technologies and Applications for Interactive Information Design," by Rummler and Ng, pp. 149-166. IGI Global (2010) (screenshots provided). Available at: Safari Books Online. * |
"Coming Soon in Google Docs-Third Party Apps Cloud Printing and Sync," by Chitu, Alex (Nov. 2, 2010). In: Googlesystem.blogspot.com. Available at: http://googlesystem.blogspot.com/2010/11/coming-soon-in-google-docs-third-party.html. * |
"How Google Chrome Stores Web History," by Sarah at lowmanio.co.uk (Jun. 10, 2010). Available at: lowmanio.co.uk/blog/entries/how-google-chrome-stores-web-history/. * |
"Increasing Your Browsing Speed," Getting Started with Opera, Opera Software ASA, 2011, http://www.opera.com/browser/tutorials/intro/speed/. |
"Multiple Profiles-The Chromium Projects," by Chromium.org (wayback machine capture of Dec. 3, 2010). Available at: http://dev.chromium.org/user-experience/multi-profiles http://web.archive.org/web/20101203135417/http://dev.chromium.org/user-experience/multi-profiles. * |
"New Tab page-The Chromium Projects," by CHromium.org (wayback machine capture of Dec. 3, 2010). Available at: http://dev.chromium.org/user-experience/new-tab-page http://web.archive.org/web/20101203143745/http://dev.chromium.org/user-experience/new-tab-page. * |
"New Tab-The King-for Firefox-The Blog," by newtabking.com (Internet Archive capture of Dec. 23, 2010). Available at: http://www.newtabking.com/blog/. * |
"Opera Extensions API: Speed Dial Guide," opera.com Jun. 28, 2011, http://www.opera.com/docs/aps/extension/speeddialguide/. |
"Synchronize Your Mail Calendar and Contacts," Google Sync Services, 2011, http://www.google.com/sync/index.html. |
"Using the New Tab Page," Google Chrome Help, 2001 http://support.google.com/chrome/bin/answer.ph?hl=en&answer=95451. |
Cited By (6)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10209867B1 (en) * | 2015-05-15 | 2019-02-19 | Jordan M. Becker | Electronic documentation integration and viewing system |
US10754510B1 (en) | 2015-05-15 | 2020-08-25 | Jordan M. Becker | Graphical user interface that emulates a multi-fold physical file folder |
US20190129589A1 (en) * | 2017-10-31 | 2019-05-02 | Salesforce.Com, Inc. | Personalized Interaction and Navigation System |
CN112073307A (en) * | 2020-09-10 | 2020-12-11 | 北京字跳网络技术有限公司 | Mail processing method and device, electronic equipment and computer readable medium |
CN112073307B (en) * | 2020-09-10 | 2023-11-14 | 北京字跳网络技术有限公司 | Mail processing method, mail processing device, electronic equipment and computer readable medium |
US11929973B2 (en) | 2020-09-10 | 2024-03-12 | Beijing Zitiao Network Technology Co., Ltd. | Mail processing method and apparatus, and electronic device, and computer readable medium |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11934646B2 (en) | Systems and methods for cross domain service component interaction | |
US10592487B2 (en) | Third party files in an on-demand database service | |
US11281847B2 (en) | Generating content objects using an integrated development environment | |
US9177007B2 (en) | Computer implemented methods and apparatus to interact with records using a publisher of an information feed of an online social network | |
US10147054B2 (en) | Displaying content of an enterprise social network feed on a mobile device | |
US10880257B2 (en) | Combining updates of a social network feed | |
US9460474B2 (en) | Providing access to a private resource in an enterprise social networking system | |
US9495079B2 (en) | Persistent feeder component for displaying feed items received from information feeds of online social networks | |
US9805051B2 (en) | Synchronization and strategic storage of multiple versions of a file | |
US20170068646A1 (en) | Systems and methods for creating custom actions | |
US20140013247A1 (en) | Systems and methods for providing a customized user interface for publishing into a feed | |
US20140317116A1 (en) | Facilitating collaboration on a record among a group of users of a feed-based enterprise network | |
US20230088898A1 (en) | Suggesting actions for evaluating user performance in an enterprise social network | |
WO2014144796A1 (en) | Systems and methods for interacting with records via a publisher and an information feed | |
US20160283947A1 (en) | Sharing knowledge article content via a designated communication channel in an enterprise social networking and customer relationship management (crm) environment | |
US20200097464A1 (en) | Content management system implemented using a database structure | |
US8918720B1 (en) | List of most selected web based application documents |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:WU, PING;LIN, JENNIFER W.;SIGNING DATES FROM 20111205 TO 20111208;REEL/FRAME:027542/0984 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044277/0001Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551)Year of fee payment: 4 |
|
FEPP | Fee payment procedure |
Free format text: MAINTENANCE FEE REMINDER MAILED (ORIGINAL EVENT CODE: REM.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
LAPS | Lapse for failure to pay maintenance fees |
Free format text: PATENT EXPIRED FOR FAILURE TO PAY MAINTENANCE FEES (ORIGINAL EVENT CODE: EXP.); ENTITY STATUS OF PATENT OWNER: LARGE ENTITY |
|
STCH | Information on status: patent discontinuation |
Free format text: PATENT EXPIRED DUE TO NONPAYMENT OF MAINTENANCE FEES UNDER 37 CFR 1.362 |
|
FP | Lapsed due to failure to pay maintenance fee |
Effective date: 20221223 |
US8194991B2 - Out-of-order coding - Google Patents
Out-of-order coding Download PDFInfo
- Publication number
- US8194991B2 US8194991B2 US12/254,819 US25481908A US8194991B2 US 8194991 B2 US8194991 B2 US 8194991B2 US 25481908 A US25481908 A US 25481908A US 8194991 B2 US8194991 B2 US 8194991B2
- Authority
- US
- United States
- Prior art keywords
- image
- blocks
- compression encoded
- target
- target region
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active, expires
Links
- 238000000034 method Methods 0.000 claims description 11
- 230000006835 compression Effects 0.000 claims 35
- 238000007906 compression Methods 0.000 claims 35
- 230000001413 cellular effect Effects 0.000 description 4
- 238000004891 communication Methods 0.000 description 4
- 238000010586 diagram Methods 0.000 description 4
- 230000009466 transformation Effects 0.000 description 3
- 230000006870 function Effects 0.000 description 2
- 238000012952 Resampling Methods 0.000 description 1
- 238000013500 data storage Methods 0.000 description 1
- 230000001419 dependent effect Effects 0.000 description 1
- 238000000605 extraction Methods 0.000 description 1
- 238000012986 modification Methods 0.000 description 1
- 230000004048 modification Effects 0.000 description 1
- 230000004044 response Effects 0.000 description 1
- 238000005070 sampling Methods 0.000 description 1
Images
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/167—Position within a video image, e.g. region of interest [ROI]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/102—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or selection affected or controlled by the adaptive coding
- H04N19/129—Scanning of coding units, e.g. zig-zag scan of transform coefficients or flexible macroblock ordering [FMO]
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/134—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the element, parameter or criterion affecting or controlling the adaptive coding
- H04N19/136—Incoming video signal characteristics or properties
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/10—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding
- H04N19/169—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding
- H04N19/17—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using adaptive coding characterised by the coding unit, i.e. the structural portion or semantic portion of the video signal being the object or the subject of the adaptive coding the unit being an image region, e.g. an object
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/20—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using video object coding
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/42—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals characterised by implementation details or hardware specially adapted for video compression or decompression, e.g. dedicated software implementation
- H04N19/423—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals characterised by implementation details or hardware specially adapted for video compression or decompression, e.g. dedicated software implementation characterised by memory arrangements
- H04N19/426—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals characterised by implementation details or hardware specially adapted for video compression or decompression, e.g. dedicated software implementation characterised by memory arrangements using memory downsizing methods
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/44—Decoders specially adapted therefor, e.g. video decoders which are asymmetric with respect to the encoder
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04N—PICTORIAL COMMUNICATION, e.g. TELEVISION
- H04N19/00—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals
- H04N19/48—Methods or arrangements for coding, decoding, compressing or decompressing digital video signals using compressed domain processing techniques other than decoding, e.g. modification of transform coefficients, variable length coding [VLC] data or run-length data
Definitions
- a user may desire to extract a portion of an encoded image.
- a JPEG-encoded image includes a picture of a child's art work. The picture is sent to the grandparents. The grandparents may want to extract the child's art work from the encoded image.
- an encoded image may include multiple people. A user may want to extract a portion of the image that includes a particular person.
- the entire image must be decoded and stored in a buffer.
- Many devices such as cellular phones, personal digital assistants, etc., have limited memory.
- the requirement of decoding an entire image and storing the entire decoded image in a buffer for extracting a desired portion of the image may not allow these devices of limited memory to perform this function. This is undesirable, because users of devices, such as cellular phones or other portable devices, tend to like having the same functionality on their portable devices as they have with their personal computers.
- FIG. 1 illustrates a data flow diagram for encoding a target region of an image, according to an embodiment
- FIG. 2 illustrates different scan orders for the image and the target region
- FIG. 3 illustrates a system for coding a target region, according to an embodiment
- FIG. 4 illustrates a flow diagram of a method for encoding a target region, according to an embodiment
- FIG. 5 illustrates a computer system that may be used as a platform for the coding system, according to an embodiment.
- a coding system provides for encoding a target region within an image.
- the coding system receives an encoded image and uses a “moving buffer” to partially decode the image. Blocks of the target region in the moving buffer are identified, compressed and re-ordered into a scan order for the target region to create an encoded image of the target region.
- the moving buffer allows less memory to be used for the target region extraction process and also improves performance.
- Scan order is the pattern used to detect, reconstruct and/or store an image. Raster scan is a commonly used scan order.
- the moving buffer may not actually be a buffer.
- the moving buffer may represent a moving window that covers a portion of an image at a time, and moves on to another portion of the image, and so on. Each portion under the window is scanned to identify whether any blocks that are scanned are blocks in the target region. Blocks from the target region are stored in an actual buffer, which may be memory or some other data storage. These blocks are re-ordered and encoded.
- a block may be a macroblock, such as a 16-by-16 block of pixels, or a block of pixels of another size.
- a target region encompasses a region of an image that is smaller in size than the entire image, and the target region may have sides that are misaligned with the sides of the region.
- FIG. 1 illustrates a data flow diagram for a coding system 100 , according to an embodiment.
- An image bit stream is received and decoded, portion-by-portion.
- the image bit stream may include bits for a single encoded image, or bits for multiple encoded images.
- a representation of an image in a received bit stream is shown as image 101 .
- the image 101 includes a target region 102 , which in this example comprises blocks 1 - 9 .
- the target region 102 may be a region of the image 101 that is of interest to a user.
- the target region 102 may be selected by a user. In other examples, the target region 102 may be selected by a computer.
- the image 101 is an encoded image including blocks encoded in a particular scan order, referred to as the image scan order 103 .
- One popular scan order is raster scan order.
- the arrows of the image scan order 103 are representative of a raster scan order.
- Raster scan order of the image 101 goes block-by-block, horizontally along the top edge, left-to-right, row-by-row, for each row of blocks starting at the top left.
- a moving buffer 110 is used to decode the image 101 in the image scan order 103 .
- the moving buffer 110 identifies a portion of the image 101 to be decoded.
- the moving buffer 110 operates as a moving window covering a portion of the image 101 .
- the blocks in the moving buffer 110 are decoded and stored in an input scan buffer 111 .
- the input scan buffer 111 does not need to be so large as to be able to store the entire decoded image.
- the input scan buffer 111 should be large enough to store at least one block.
- the decoded blocks in the moving buffer 110 are shown as B 1 -B n and are stored in the input scan buffer 111 in the image scan order 103 .
- the input scan buffer 110 may be a first-in-first-out buffer.
- the moving buffer 110 moves to another portion of the image, and the blocks in the current portion under the moving buffer 110 fill the input scan buffer 111 over-writing the old blocks.
- the moving buffer 110 may move by covering non-overlapping portions of the image 101 , portion-by-portion, until all blocks from the target region 102 are identified or until all the blocks of the image 101 are decoded. In other embodiments, the moving buffer 110 may move by covering overlapping portions of the image 101 , portion-by-portion.
- a block encoder 120 identifies blocks from the target region 102 that are in the input scan buffer 111 .
- a block encoder encodes blocks one at a time.
- a JPEG encoder is an example of a block encoder.
- the block encoder 120 identifies blocks from the target region 102 in that order. For example, as shown, block 1 of the target region 102 is first identified, then block 4 , then block 2 , then block 7 , etc., until all the blocks of the target region 102 are identified.
- the block encoder 120 encodes them, and stores the encoded blocks in an output buffer 121 in the image scan order 103 .
- the blocks in the output buffer are reordered in a scan order of the target region, referred to as the target region scan order 104 .
- the target region scan order 104 may also be a raster scan order.
- the target region scan order 104 differs from the image scan order 103 , because of the misalignment of the target region 102 with the image 101 .
- the sides of the target region 102 are not parallel with the sides of image 101 , which is the misalignment and results in different scan orders of the same blocks. This is further illustrated with respect to FIG. 2 .
- FIG. 2 shows the image scan order 103 and the target region scan order 104 .
- the block encoder 120 encodes blocks of the target region 102 in the image scan order 103 , as shown in the output buffer 121 .
- those same blocks of the target region need to be in the target region scan order 104 , for example, as a requirement for the type of encoding.
- JPEG and MPEG encoding requiring encoding in raster scan order, starting from the top, left of the image.
- the top, left of the image in the target region 102 is block 1 , because the image in the target region is misaligned with the image 101 .
- the raster scan order of the target region 102 is shown as the target region scan order 104 .
- the target region blocks in the output buffer 121 which are ordered in the image scan order 103 , need to be reordered to the target region scan order 104 , for example, to create a JPEG encoded image bit stream.
- FIG. 1 shows the reordering of the target region blocks to the target region scan order 104 .
- These reordered blocks may be output by the block encoder 120 as an encoded image bit stream.
- the block encoder 120 may also recalculate DC coefficients for the reordered blocks of the target region based on a difference of one or more previous blocks. This recalculation of the DC coefficients may be needed depending on the type of encoding being performed. For example, JPEG encoding creates a DC coefficient for a block that is dependent on the previous block. The DC coefficient data is small compared to the total amount of data in a block.
- FIG. 3 illustrates the coding system 100 , according to an embodiment.
- the coding system 100 is described with respect to FIG. 1 .
- the coding system 100 includes a decoder 200 that receives an image bit stream of one or more encoded images.
- the decoder 200 uses the moving buffer 110 shown in FIG. 1 to decode an image, portion-by-portion, as described above.
- the input scan buffer 111 stores the decoded blocks in the image scan order 103 .
- the block encoder 120 identifies the target region blocks, e.g., blocks 1 - 9 shown in FIG. 1 , from the input scan buffer 111 as the image 101 is decoded portion-by-portion and encodes the blocks.
- the encoded blocks are stored in the output buffer 121 in the image scan order 103 .
- the block encoder 120 reorders the target region blocks into the target region scan order 104 , and outputs an encoded image bit stream.
- the block encoder 120 may include a target region block identifier module 210 , and encoding module 21 1 , a reorder module 212 and an output module 213 . Modules may include software and/or hardware.
- the target region block identifier module 210 identifies target region blocks that are in the input scan buffer 111 .
- a conventional geometric transform can be used to identify blocks from the image 101 that are blocks in the target region 102 . The purpose of the geometric transform is to relate the position of each desired output pixel (i.e, pixels in the target region 102 ) to the corresponding pixels in the original image 101 . Many such transforms exist. For a fairly general example, consider a picture of a road sign taken from a car on the road nearby. Suppose that the sign itself is rectangular.
- the set of m ⁇ n pixels forms a regular grid on the output image and therefore in the coordinate system of the sign.
- a geometric transformation at each output pixel to find out which pixels it relates to in the original. It will be appreciated by those skilled in image signal processing that finding the new pixel color value involves re-sampling, using for instance, a technique like bicubic interpolation. By considering each pixel in any given output image block and finding the corresponding pixels necessary for resampling in the original image, it is easy to enumerate the original image blocks that must be decoded to render the selected output block.
- the encoding module 211 encodes the target region blocks from the input scan buffer 111 in the image scan order 103 , and stores the encoded blocks in the image scan order 103 in the output buffer 121 .
- the reorder module 212 reorders the blocks in the target region scan order 104 .
- the output module 213 recalculates the DC coefficients based on the new order and outputs an encoded image bit stream. This may be a fully compatible JPEG encoded bit stream.
- the reorder module 212 confirms, for example, based on the geometric transformation that the blocks of the target region 102 do not need to be reordered. In one embodiment, the reorder module 212 determines whether the blocks of the target region 102 need to be reordered, for example, based on the geometric transformation. Then, the blocks are reordered in response to determining the blocks are reordered. Otherwise, the blocks are not reordered.
- FIG. 4 illustrates a method 400 for encoding a target region of an image, according to an embodiment.
- FIG. 4 is described with respect to one or more of FIGS. 1-3 by way of example and not limitation.
- a portion of an image is decoded, for example, using the moving buffer 110 shown in FIG. 1 .
- the decoded blocks are stored in the input scan buffer 111 in the image scan order 103 .
- any target region blocks 1 - 9 that may be in the decoded portion of the image are identified from the blocks in the input scan buffer 103 .
- a geometric transform may be used to identify the blocks in the target region.
- the target region blocks are encoded and stored in the output buffer 121 in the image scan order 103 .
- Encoding includes compressing the decoded blocks.
- the encoding may include encoding according to a standard, such as JPEG.
- the encoded blocks are reordered according to the target region scan order 104 .
- An indexing structure or table may be used to reorder the blocks.
- the reordered blocks are output as an encoded image bit stream.
- This encoded bit stream may be a JPEG encoded bit stream or other types of encoded bit stream.
- FIG. 5 illustrates a block diagram of a general purpose computer system 500 that represents a platform for the computer systems in the system 100 described above.
- the computer system 500 represents a platform that may be used for the coding system 100 .
- the computer system 500 includes processing circuitry 502 providing an execution platform for executing software, which may include software for the modules of the encoder 120 and software for the decoder 200 described above. Commands and data from the processing circuitry 502 are communicated over a communication bus 505 .
- the computer system 500 also includes a main memory 506 , such as a Random Access Memory (RAM), where software may reside during runtime, and a secondary memory 508 .
- the input scan buffer 111 and the output buffer 121 may be part of the main memory 506 .
- the secondary memory 508 includes, for example, non-volatile memory, a hard disk drive, and/or a removable storage drive. A copy of the software may be stored in the secondary memory 508 .
- the computer system 500 may include I/O devices 510 .
- the I/O devices 510 may include a display and/or other user interfaces, such as a keyboard, a mouse, a stylus, touchscreen, remote control, and the like.
- a communication interface 512 is provided for communicating with other computer systems.
- the communications interface 512 may facilitate connection to one or more networks.
- the communications interface 512 may represent multiple interfaces, such as an IP network interface, Bluetooth interface, and/or a cellular network interface.
- the computer system 500 may include many other well known components not shown. Also, the computer system 500 be used for a personal computer, cellular phone and other hand held devices, a set top box, and other electronic devices.
- One or more of the methods, other steps and modules described herein are operable to be implemented as software stored on a computer readable medium, such as the memory 506 and/or 508 , and executed on the computer system 500 , for example, by the processing circuitry 502 .
Abstract
Description
Claims (11)
Priority Applications (4)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/254,819 US8194991B2 (en) | 2008-10-20 | 2008-10-20 | Out-of-order coding |
CN2009801414764A CN102187655A (en) | 2008-10-20 | 2009-10-16 | Out-of-order coding |
PCT/US2009/061010 WO2010048055A2 (en) | 2008-10-20 | 2009-10-16 | Out-of-order coding |
EP09822483.5A EP2351348A4 (en) | 2008-10-20 | 2009-10-16 | Out-of-order coding |
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US12/254,819 US8194991B2 (en) | 2008-10-20 | 2008-10-20 | Out-of-order coding |
Publications (2)
Publication Number | Publication Date |
---|---|
US20100098346A1 US20100098346A1 (en) | 2010-04-22 |
US8194991B2 true US8194991B2 (en) | 2012-06-05 |
Family
ID=42108731
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US12/254,819 Active 2031-04-06 US8194991B2 (en) | 2008-10-20 | 2008-10-20 | Out-of-order coding |
Country Status (4)
Country | Link |
---|---|
US (1) | US8194991B2 (en) |
EP (1) | EP2351348A4 (en) |
CN (1) | CN102187655A (en) |
WO (1) | WO2010048055A2 (en) |
Families Citing this family (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10061537B2 (en) * | 2015-08-13 | 2018-08-28 | Microsoft Technology Licensing, Llc | Data reordering using buffers and memory |
EP3185553A1 (en) * | 2015-12-21 | 2017-06-28 | Thomson Licensing | Apparatus, system and method of video compression using smart coding tree unit scanning and corresponding computer program and medium |
Citations (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5319749A (en) | 1988-12-22 | 1994-06-07 | U.S. Philips Corporation | Circuit arrangement for geometric image transformation including a memory storing an assignment between addresses in input and output images |
US6067384A (en) | 1997-09-11 | 2000-05-23 | Canon Kabushiki Kaisha | Fast scaling of JPEG images |
WO2005050567A1 (en) | 2003-11-18 | 2005-06-02 | Scalado Ab | Method for processing a digital image and image representation format |
US20050230487A1 (en) * | 2004-04-02 | 2005-10-20 | Paul Lapstun And Kia Silverbrook | Data storage format for encoding a bit stream on or in a surface |
EP1594314A2 (en) | 2004-05-06 | 2005-11-09 | Seiko Epson Corporation | Memory efficient method and apparatus for compression encoding large overlaid camera images |
KR20060009898A (en) | 2003-05-06 | 2006-02-01 | 코닌클리케 필립스 일렉트로닉스 엔.브이. | Encoding video information using block based adaptive scan order |
JP2006191628A (en) | 2004-12-31 | 2006-07-20 | Microsoft Corp | Adaptive coefficient scan order |
US7146053B1 (en) * | 2000-05-10 | 2006-12-05 | International Business Machines Corporation | Reordering of compressed data |
US20070165955A1 (en) | 2006-01-18 | 2007-07-19 | Hau Hwang | Processing of images in imaging systems |
EP1947605A2 (en) * | 2005-02-25 | 2008-07-23 | Psion Teklogix Systems Inc. | Automatic perspective distortion detection and correction for document imaging |
Family Cites Families (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US7224840B2 (en) * | 2000-10-26 | 2007-05-29 | International Business Machines Corporation | Method, system, and program for error recovery while decoding compressed data |
US20060228030A1 (en) * | 2005-04-08 | 2006-10-12 | Hadady Craig E | Method and system for image compression for use with scanners |
-
2008
- 2008-10-20 US US12/254,819 patent/US8194991B2/en active Active
-
2009
- 2009-10-16 EP EP09822483.5A patent/EP2351348A4/en not_active Withdrawn
- 2009-10-16 WO PCT/US2009/061010 patent/WO2010048055A2/en active Application Filing
- 2009-10-16 CN CN2009801414764A patent/CN102187655A/en active Pending
Patent Citations (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US5319749A (en) | 1988-12-22 | 1994-06-07 | U.S. Philips Corporation | Circuit arrangement for geometric image transformation including a memory storing an assignment between addresses in input and output images |
US6067384A (en) | 1997-09-11 | 2000-05-23 | Canon Kabushiki Kaisha | Fast scaling of JPEG images |
US7146053B1 (en) * | 2000-05-10 | 2006-12-05 | International Business Machines Corporation | Reordering of compressed data |
KR20060009898A (en) | 2003-05-06 | 2006-02-01 | 코닌클리케 필립스 일렉트로닉스 엔.브이. | Encoding video information using block based adaptive scan order |
WO2005050567A1 (en) | 2003-11-18 | 2005-06-02 | Scalado Ab | Method for processing a digital image and image representation format |
US20050230487A1 (en) * | 2004-04-02 | 2005-10-20 | Paul Lapstun And Kia Silverbrook | Data storage format for encoding a bit stream on or in a surface |
EP1594314A2 (en) | 2004-05-06 | 2005-11-09 | Seiko Epson Corporation | Memory efficient method and apparatus for compression encoding large overlaid camera images |
JP2006191628A (en) | 2004-12-31 | 2006-07-20 | Microsoft Corp | Adaptive coefficient scan order |
EP1947605A2 (en) * | 2005-02-25 | 2008-07-23 | Psion Teklogix Systems Inc. | Automatic perspective distortion detection and correction for document imaging |
US20070165955A1 (en) | 2006-01-18 | 2007-07-19 | Hau Hwang | Processing of images in imaging systems |
Non-Patent Citations (1)
Title |
---|
PCT Search Report & Written Opinion, Re: Application # PCT/US2009/061010 Apr. 23, 2010. |
Also Published As
Publication number | Publication date |
---|---|
EP2351348A2 (en) | 2011-08-03 |
CN102187655A (en) | 2011-09-14 |
EP2351348A4 (en) | 2014-04-16 |
WO2010048055A2 (en) | 2010-04-29 |
US20100098346A1 (en) | 2010-04-22 |
WO2010048055A3 (en) | 2010-07-15 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11044478B2 (en) | Compression with multi-level encoding | |
US8031951B2 (en) | 2-dimensional signal encoding/decoding method and device | |
TW201526617A (en) | Method and system for image processing, decoding method, encoder and decoder | |
JP6276199B2 (en) | Significance map coding complexity reduction | |
CN104581177B (en) | Image compression method and device combining block matching and string matching | |
JP2022519462A (en) | Point cloud coding using homography transformation | |
US8194991B2 (en) | Out-of-order coding | |
CN111432213A (en) | Adaptive tile data size coding for video and image compression | |
US9071818B2 (en) | Video compression system and method using differencing and clustering | |
CN113315957A (en) | Screen projection implementation method of projector | |
EP2777288A1 (en) | Binarisation of last position for higher throughput | |
US20230156224A1 (en) | Joint component secondary transform | |
CN109379591B (en) | Image transcoding method, electronic device and computer readable storage medium | |
JP2015211466A (en) | Methods for encoding and decoding picture and corresponding devices | |
CN117242480A (en) | Manhattan layout estimation using geometric and semantic information | |
JP4723543B2 (en) | Image processing apparatus, image processing method, program, and storage medium | |
US8634669B2 (en) | Fast implementation of context selection of significance map | |
US9049432B1 (en) | Motion differential set partition coding for color image sequence compression | |
JP4014085B2 (en) | Image processing apparatus, program, and storage medium | |
US20100266209A1 (en) | Image processing apparatus, image processing method, and program | |
CN112911303B (en) | Image encoding method, decoding method, device, electronic device and storage medium | |
US20230306683A1 (en) | Mesh patch sub-division | |
CN117061759B (en) | Image compression method, device, computer equipment and storage medium | |
US20240161345A1 (en) | Method and apparatus for adaptive quantization for uv attribute in symmetry mesh | |
US20080137975A1 (en) | Decoder, decoding method and computer readable medium |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: MOTOROLA MOBILITY, INC, ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA, INC;REEL/FRAME:025673/0558Effective date: 20100731 |
|
AS | Assignment |
Owner name: MOTOROLA, INC., ILLINOISFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:YU, TIANLI;CRENSHAW, JAMES E.;SIGNING DATES FROM 20081022 TO 20081025;REEL/FRAME:026966/0048 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
AS | Assignment |
Owner name: MOTOROLA MOBILITY LLC, ILLINOISFree format text: CHANGE OF NAME;ASSIGNOR:MOTOROLA MOBILITY, INC.;REEL/FRAME:029216/0282Effective date: 20120622 |
|
AS | Assignment |
Owner name: GOOGLE TECHNOLOGY HOLDINGS LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:MOTOROLA MOBILITY LLC;REEL/FRAME:034301/0001Effective date: 20141028 |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 12TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1553); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 12 |
US8380349B1 - Methods and systems for providing instructions to a robotic device - Google Patents
Methods and systems for providing instructions to a robotic device Download PDFInfo
- Publication number
- US8380349B1 US8380349B1 US13/283,369 US201113283369A US8380349B1 US 8380349 B1 US8380349 B1 US 8380349B1 US 201113283369 A US201113283369 A US 201113283369A US 8380349 B1 US8380349 B1 US 8380349B1
- Authority
- US
- United States
- Prior art keywords
- robot
- robotic device
- data
- cloud
- priority
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- G—PHYSICS
- G05—CONTROLLING; REGULATING
- G05D—SYSTEMS FOR CONTROLLING OR REGULATING NON-ELECTRIC VARIABLES
- G05D1/00—Control of position, course or altitude of land, water, air, or space vehicles, e.g. automatic pilot
- G05D1/02—Control of position or course in two dimensions
- G05D1/021—Control of position or course in two dimensions specially adapted to land vehicles
- G05D1/0231—Control of position or course in two dimensions specially adapted to land vehicles using optical position detecting means
- G05D1/0246—Control of position or course in two dimensions specially adapted to land vehicles using optical position detecting means using a video camera in combination with image processing means
-
- G—PHYSICS
- G05—CONTROLLING; REGULATING
- G05D—SYSTEMS FOR CONTROLLING OR REGULATING NON-ELECTRIC VARIABLES
- G05D1/00—Control of position, course or altitude of land, water, air, or space vehicles, e.g. automatic pilot
- G05D1/02—Control of position or course in two dimensions
- G05D1/021—Control of position or course in two dimensions specially adapted to land vehicles
- G05D1/0268—Control of position or course in two dimensions specially adapted to land vehicles using internal positioning means
- G05D1/0274—Control of position or course in two dimensions specially adapted to land vehicles using internal positioning means using mapping information stored in a memory device
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/01—Protocols
- H04L67/12—Protocols specially adapted for proprietary or special-purpose networking environments, e.g. medical networks, sensor networks, networks in vehicles or remote metering networks
- H04L67/125—Protocols specially adapted for proprietary or special-purpose networking environments, e.g. medical networks, sensor networks, networks in vehicles or remote metering networks involving control of end-device applications over a network
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/2866—Architectures; Arrangements
- H04L67/30—Profiles
- H04L67/303—Terminal profiles
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/60—Scheduling or organising the servicing of application requests, e.g. requests for application data transmissions using the analysis and optimisation of the required network resources
- H04L67/61—Scheduling or organising the servicing of application requests, e.g. requests for application data transmissions using the analysis and optimisation of the required network resources taking into account QoS or priority requirements
-
- G—PHYSICS
- G05—CONTROLLING; REGULATING
- G05D—SYSTEMS FOR CONTROLLING OR REGULATING NON-ELECTRIC VARIABLES
- G05D1/00—Control of position, course or altitude of land, water, air, or space vehicles, e.g. automatic pilot
- G05D1/02—Control of position or course in two dimensions
- G05D1/021—Control of position or course in two dimensions specially adapted to land vehicles
- G05D1/0231—Control of position or course in two dimensions specially adapted to land vehicles using optical position detecting means
- G05D1/0242—Control of position or course in two dimensions specially adapted to land vehicles using optical position detecting means using non-visible light signals, e.g. IR or UV signals
-
- G—PHYSICS
- G05—CONTROLLING; REGULATING
- G05D—SYSTEMS FOR CONTROLLING OR REGULATING NON-ELECTRIC VARIABLES
- G05D1/00—Control of position, course or altitude of land, water, air, or space vehicles, e.g. automatic pilot
- G05D1/02—Control of position or course in two dimensions
- G05D1/021—Control of position or course in two dimensions specially adapted to land vehicles
- G05D1/0276—Control of position or course in two dimensions specially adapted to land vehicles using signals provided by a source external to the vehicle
- G05D1/0278—Control of position or course in two dimensions specially adapted to land vehicles using signals provided by a source external to the vehicle using satellite positioning signals, e.g. GPS
Definitions
- Cloud computing refers to provision of computational resources via a computer network.
- both data and software are fully contained on a user's computer.
- the user's computer may contain relatively little software or data (perhaps a minimal operating system and web browser, for example), and may serve as a display terminal for processes occurring on a network of computers.
- a common shorthand provided for a cloud computing service is “the cloud”.
- Cloud computing has been referred to as “client-server computing”, however, there may be distinctions between general cloud computing and client-server computing.
- client-server computing may include a distributed application structure that partitions tasks or workloads between providers of a resource or service (e.g., servers), and service requesters (e.g., clients).
- Client-server computing generally involves a one-to-one relationship between the server and the client, whereas cloud computing includes generic services that can be accessed by generic clients (e.g., a one-to-one relationship or connection may not be required).
- cloud computing generally includes client-server computing, and additional services and functionality.
- Cloud computing may free users from certain hardware and software installation and maintenance tasks through use of simpler hardware on the user's computer that accesses a vast network of computing resources (e.g., processors, hard drives, etc.). Sharing of resources may reduce cost to individuals.
- any computer connected to the cloud may be connected to the same pool of computing power, applications, and files. Users can store and access personal files such as music, pictures, videos, and bookmarks or play games or use productivity applications on a remote server rather than physically carrying around a storage medium, such as a DVD or thumb drive.
- a user may open a browser and connect to a host of web servers that run user interface software that collect commands from the user and interpret the commands into commands on the servers.
- the servers may handle the computing, and can either store or retrieve information from database servers or file servers and display an updated page to the user.
- cloud computing data across multiple servers can be synchronized around the world allowing for collaborative work on one file or project, from multiple users around the world, for example.
- This disclosure may disclose, inter alia, methods and systems for robot cloud computing.
- Any of the methods described herein may be provided in a form of instructions stored on a non-transitory, computer readable medium, that when executed by a computing device, cause the computing device to perform functions of the method. Further examples may also include articles of manufacture including tangible computer-readable media that have computer-readable instructions encoded thereon, and the instructions may comprise instructions to perform functions of the methods described herein.
- the computer readable medium may include non-transitory computer readable medium, for example, such as computer-readable media that stores data for short periods of time like register memory, processor cache and Random Access Memory (RAM).
- the computer readable medium may also include non-transitory media, such as secondary or persistent long term storage, like read only memory (ROM), optical or magnetic disks, compact-disc read only memory (CD-ROM), for example.
- the computer readable media may also be any other volatile or non-volatile storage systems.
- the computer readable medium may be considered a computer readable storage medium, for example, or a tangible storage medium.
- circuitry may be provided that is wired to perform logical functions in any processes or methods described herein.
- any type of devices may be used or configured to perform logical functions in any processes or methods described herein.
- any type of devices may be used or configured as means for performing functions of any of the methods described herein (or any portions of the methods described herein).
- a method may be executable to receive information from a robotic device that may have a mechanical actuator and determine data responsive to the information, wherein the data may include instructions executable by the robotic device.
- the method may also be executable to determine an order to send the data to the robotic device, where data associated with robot functionality to be performed at a first time may be given a first priority and data associated with robot functionality to be performed at a subsequent time may be given a second priority.
- the first priority may be higher than the second priority.
- the method is further executable to receive information indicating an amount of available memory on the robotic device and to provide the robotic device an amount of the data responsive to the information that is storable in the amount of available memory on the robotic device and in an order such that data that pertains to the first priority is sent first, wherein the providing is performed by a computing system having a processor and memory.
- a system may include a robotic device that may have a mechanical actuator.
- the system may also include a computing system having a non-transitory computer-readable medium.
- the system may also include program instructions stored on the non-transitory computer-readable medium and executable by at least one processor to receive information from a robotic device and determine data responsive to the information.
- the program instructions may also be executable to determine an order to send the data to the robotic device, where data associated with robot functionality to be performed at a first time may be given a first priority and data associated with robot functionality to be performed at a subsequent time may be given a second priority.
- the first priority may be higher than the second priority.
- the program instructions may be further executable to receive information indicating an amount of available memory on the robotic device and to provide the robotic device an amount of the data responsive to the information that is storable in the amount of available memory on the robotic device and in an order such that data that pertains to the first priority is sent first.
- Embodiments may include a non-transitory computer-readable medium having stored thereon instructions executable by a computing device to cause the computing device to perform a number of functions.
- the functions include receiving information from a robotic device and determine data responsive to the information.
- the functions may also include determining an order to send the data to the robotic device, where data associated with robot functionality to be performed at a first time may be given a first priority and data associated with robot functionality to be performed at a subsequent time may be given a second priority.
- the first priority may be higher than the second priority.
- the functions may further include receiving information indicating an amount of available memory on the robotic device and providing the robotic device an amount of the data responsive to the information that is storable in the amount of available memory on the robotic device and in an order such that data that pertains to the first priority is sent first.
- FIG. 1 is an example system for cloud-based computing
- FIG. 2A illustrates an example client device
- FIG. 2B illustrates a graphical example of a robot
- FIG. 2C illustrates another example of a robot
- FIG. 3 illustrates an example of a conceptual robot-cloud interaction
- FIG. 4 is an example system in which robots may interact with the cloud and share information with other cloud computing devices
- FIG. 5 is a block diagram of an example method of a robot interaction with the cloud to facilitate object recognition
- FIG. 6 is an example conceptual illustration of a robot interacting with a cloud to perform object recognition and interaction
- FIG. 7 is an example conceptual illustration of a mapping function
- FIG. 8 is a block diagram of an example method for mapping of objects in an area or mapping an area
- FIGS. 9A-9B are example interfaces illustrating a map of an area, and objects in the map
- FIG. 10 is a block diagram of an example method for mapping of objects in an area and performing inventory of objects
- FIG. 11 is a block diagram of an example method for performing voice recognition/control by a robot, all arranged in accordance with at least some embodiments described herein;
- FIG. 12 is a block diagram of an example method for processing data from a robot.
- FIG. 13 is an example conceptual illustration of a robot navigating through an area
- FIG. 14 is an example system in which robots may interact with the cloud directly or through a computing device.
- cloud-based computing generally refers to networked computer architectures in which application execution and storage may be divided, to some extent, between client and server devices.
- a robot may be any device that has a computing ability and interacts with its surroundings with an actuation capability (e.g., electromechanical capabilities).
- a client device may be configured as a robot including various sensors and devices in the forms of modules, and different modules may be added or removed from robot depending on requirements.
- a robot may be configured to receive a second device, such as mobile phone, that may be configured to function as an accessory or a “brain” of the robot.
- a robot may interact with the cloud to perform any number of actions, such as to share information with other cloud computing devices.
- a robot may interact with the cloud to facilitate object recognition, to perform a mapping function, or to perform navigational functions (i.e., receive a map/navigation pathway previously traversed by another robot).
- a robot may interact with the cloud to perform mapping of objects in an area, to perform inventory of objects, and to perform voice recognition/control by a robot.
- a robot may perform any actions or queries to the cloud as described herein based on contextual or situational information.
- embodiments enable robots to store and access data at an external location, such as on a server and/or computing device.
- the external location may receive data and/or or requests from one or more robots.
- a server may store received data from one or more robots and/or distribute all or part of the stored data to one or more robots so as to create a common knowledge base amongst the robots, where robots can obtain instructions and/or data.
- a robot may request data from the cloud.
- the cloud may respond by sending the requested data. For example, if a robot needs an updated map of an area, the robot may request the updated map from the cloud and, in response, receive the updated map.
- a subset of the map may be sent to the robot based on an area of the map surrounding the robot at the time of the request, for example. In this way, the robot may obtain data that the robot may not have otherwise been able to store in onboard memory. This may allow the robot to function more efficiently by being able to avoid obstacles that may have otherwise hindered the robot's mobility, safety, and/or general operation, for example.
- the cloud may perform one or more steps before responding to a request for data from a robot.
- a robot may request computer-executable instructions to navigate an area.
- the robot may have limited processing capabilities. Therefore, the cloud may determine what computer-executable instructions may be within the robot's processing capabilities and determine an optimal set of computer-executable instructions that the robot may perform.
- the cloud may send instructions to the robot at one time or piecemeal based on how many of the instructions the robot is capable of performing at a given time. For example, the cloud may send the robot high-level data that may be needed right away and wait to send lower-level data until the lower-level data may be needed or until the robot has the capabilities to process the lower-level data.
- FIG. 1 is an example system 100 for cloud-based computing.
- Cloud-based computing generally refers to networked computer architectures in which application execution and storage may be divided, to some extent, between client and server devices.
- a “cloud” may refer to a service or a group of services accessible over a network (e.g., Internet) by client and server devices, for example.
- any computer connected to the cloud may be connected to the same pool of computing power, applications, and files.
- cloud computing enables a shared pool of configurable computing resources (e.g., networks, servers, storage, applications, and services) that can be provisioned and released with minimal management effort or service provider interaction. Users can store and access personal files such as music, pictures, videos, and bookmarks or play games or use productivity applications on a remote server rather than physically carrying around a storage medium.
- a cloud-based application may store copies of data and/or executable program logic at remote server devices, while allowing client devices to download at least some of this data and program logic as needed for execution at the client devices.
- downloaded data and program logic can be tailored to capabilities of specific client devices (e.g., a personal computer, tablet, or mobile phone, or robot) accessing the cloud based application.
- client devices e.g., a personal computer, tablet, or mobile phone, or robot
- dividing application execution and storage between the client and server devices allows more processing to be performed by the server devices taking advantage of server devices processing power and capability, for example.
- Cloud-based computing can also refer to distributed computing architectures in which data and program logic for a cloud-based application are shared between one or more client devices and/or server devices on a near real-time basis. Parts of this data and program logic may be dynamically delivered, as needed or otherwise, to various clients accessing the cloud-based application. Details of the architecture may be transparent to users of client devices. Thus, a PC user or robot client device accessing a cloud-based application may not be aware that the PC or robot downloads program logic and/or data from the server devices, or that the PC or robot offloads processing or storage functions to the server devices, for example.
- a cloud 102 includes a cloud service 104 , a cloud platform 106 , a cloud infrastructure 108 , and a database 110 .
- the cloud 102 may include more of fewer components, and each of the cloud service 104 , the cloud platform 106 , the cloud infrastructure 108 , and the database 110 may comprise multiple elements as well.
- one or more of the described functions of the system 100 may be divided up into additional functional or physical components, or combined into fewer functional or physical components.
- the cloud 102 may represent a networked computer architecture, and in one example, the cloud service 104 represents a queue for handling requests from client devices.
- the cloud platform 106 may include a frontend of the cloud and may be coupled to the cloud service 104 to perform functions to interact with client devices.
- the cloud platform 106 may include applications used to access the cloud 102 via a user interface, such as a web browser.
- the cloud infrastructure 108 may include service application of billing components of the cloud 102 , and thus, may interact with the cloud service 104 .
- the database 110 may represent storage capabilities by the cloud 102 , and thus, may be accessed by any of the cloud service 104 , the cloud platform 106 , and/or the infrastructure 108 .
- the system 100 includes a number of client devices coupled to or configured to be capable of communicating with components of the cloud 102 .
- client devices coupled to or configured to be capable of communicating with components of the cloud 102 .
- a computer 112 a mobile device 114 , a host 116 , and a robot client 118 are shown coupled to the cloud 102 .
- more or fewer client devices may be coupled to the cloud 102 .
- different types of client devices may be coupled to the cloud 102 .
- any of the client devices may generally comprise a display system, memory, and a processor.
- the computer 112 may be any type of computing device (e.g., PC, laptop computer, etc.), and the mobile device 114 may be any type of mobile computing device (e.g., laptop, mobile telephone, cellular telephone, etc.).
- the host 116 may be any type of computing device or transmitter including a laptop computer, a mobile telephone, etc., that is configured to transmit data to the cloud 102 .
- the robot client 118 may comprise any computing device that has connection abilities to the cloud 102 and that has an actuation capability (e.g., electromechanical capabilities). A robot may further be a combination of computing devices. In some examples, the robot 118 may collect data and upload the data to the cloud 102 . The cloud 102 may be configured to perform calculations or analysis on the data and return processed data to the robot client 118 . In some examples, as shown in FIG. 1 , the cloud 102 may include a computer that is not co-located with the robot client 118 . In other examples, the robot client 118 may send data to a second client (e.g., computer 112 ) for processing.
- a second client e.g., computer 112
- the robot client 118 may include one or more sensors, such as a gyroscope or an accelerometer to measure movement of the robot client 118 .
- Other sensors may further include any of Global Positioning System (GPS) receivers, infrared sensors, sonar, optical sensors, biosensors, Radio Frequency identification (RFID) systems, Near Field Communication (NFC) chip, wireless sensors, and/or compasses, among others, for example.
- GPS Global Positioning System
- RFID Radio Frequency identification
- NFC Near Field Communication
- any of the client devices may include an integrated user-interface (UI) that allows a user to interact with the device.
- UI user-interface
- the robot client 118 may include various buttons and/or a touchscreen interface that allow a user to provide input.
- the robot client device 118 may include a microphone configured to receive voice commands from a user.
- the robot client 118 may include one or more interfaces that allow various types of user-interface devices to be connected to the robot client 118 .
- communication links between client devices and the cloud 102 may include wired connections, such as a serial or parallel bus.
- Communication links may also be wireless links, such as link 120 , which may include Bluetooth, IEEE 802.11 (IEEE 802.11 may refer to IEEE 802.11-2007, IEEE 802.11n-2009, or any other IEEE 802.11 revision), or other wireless based communication links.
- IEEE 802.11 may refer to IEEE 802.11-2007, IEEE 802.11n-2009, or any other IEEE 802.11 revision
- the system 100 may include access points through which the client devices may communicate with the cloud 102 .
- Access points may take various forms, for example, an access point may take the form of a wireless access point (WAP) or wireless router.
- WAP wireless access point
- an access point may be a base station in a cellular network that provides Internet connectivity via the cellular network.
- the client devices may include a wired or wireless network interface through which the client devices can connect to the cloud 102 (or access points).
- the client devices may be configured use one or more protocols such as 802.11, 802.16 (WiMAX), LTE, GSM, GPRS, CDMA, EV-DO, and/or HSPDA, among others.
- the client devices may be configured use multiple wired and/or wireless protocols, such as “3G” or “4G” data connectivity using a cellular communication protocol (e.g., CDMA, GSM, or WiMAX, as well as for “WiFi” connectivity using 802.11).
- a cellular communication protocol e.g., CDMA, GSM, or WiMAX, as well as for “WiFi” connectivity using 802.11).
- Other examples are also possible.
- FIG. 2A illustrates an example client device 200 .
- the client device 200 is configured as a robot.
- a robot may contain computer hardware, such as a processor 202 , memory or storage 204 , and sensors 206 .
- a robot controller e.g., processor 202 , computing system, and sensors 206
- the robot may have a link by which the link can access cloud servers (as shown in FIG. 1 ).
- a wired link may include, for example, a parallel bus or a serial bus such as a Universal Serial Bus (USB).
- a wireless link may include, for example, Bluetooth, IEEE 802.11, Cellular (such as GSM, CDMA, UMTS, EV-DO, WiMAX, or LTE), or Zigbee, among other possibilities.
- the storage 204 may be used for compiling data from various sensors 206 of the robot and storing program instructions.
- the processor 202 may be coupled to the storage 204 and may be configured to control the robot based on the program instructions.
- the processor 202 may also be able to interpret data from the various sensors 206 on the robot.
- Example sensors may include, smoke sensors, light sensors, radio sensors, infrared sensors, microphones, speakers, gyroscope, accelerometer, a camera, radar, capacitive sensors and touch sensors, etc.
- the client device 200 may also have components or devices that allow the client device 200 to interact with its environment.
- the client device 200 may have mechanical actuators 208 , such as motors, wheels, movable arms, etc., that enable the client device 200 to move or interact with the environment.
- various sensors and devices on the client device 200 may be modules. Different modules may be added or removed from a client device 200 depending on requirements. For example, in a low power situation, a robot may have fewer modules to reduce power usages. However, additional sensors may be added as needed. To increase an amount of data a robot may be able to collect, additional sensors may be added, for example.
- the client device 200 may be configured to receive a device, such as device 210 , that includes the processor 202 , the storage 204 , and the sensors 206 .
- the client device 200 may be a robot that have a number of mechanical actuators (e.g., a movable base), and the robot may be configured to receive a mobile telephone to function as the “brains” or control components of the robot.
- the device 210 may be considered a module of the robot.
- the device 210 may be physically attached to the robot. For example, a mobile phone may sit on a robot's “chest” and form an interactive display.
- the device 210 may provide a robot with sensors, a wireless link, and processing capabilities, for example.
- the device 210 may allow a user to download new routines for his or her robot from the cloud.
- a laundry folding routine may be stored on the cloud, and a user may be able to select this routine using a mobile phone to download the routine from the cloud, and when the mobile phone is placed into or coupled to the robot, the robot would be able to perform the downloaded action.
- the client device 200 may be coupled to a mobile or cellular telephone to provide additional sensing capabilities.
- the cellular phone may not be physically attached to the robot, but may be coupled to the robot wirelessly.
- a low cost robot may omit a direct connection to the internet.
- This robot may be able to connect to a user's cellular phone via a wireless technology (e.g., Bluetooth) to be able to access the internet.
- the robot may be able to access various sensors and communication means of the cellular phone.
- the robot may not need as many sensors to be physically provided on the robot, however, the robot may be able to keep the same or similar functionality.
- the client device 200 may include mechanical robot features, and may be configured to receive the device 210 (e.g., a mobile phone), which can provide additional peripheral components to the device 200 , such as any of an accelerometer, gyroscope, compass, GPS, camera, WiFi connection, a touch screen, etc., that are included within the device 210 .
- the device 210 e.g., a mobile phone
- additional peripheral components such as any of an accelerometer, gyroscope, compass, GPS, camera, WiFi connection, a touch screen, etc.
- FIG. 2B illustrates a graphical example of a robot 212 .
- the robot 212 is shown as a mechanical form of a person including arms, legs, and a head.
- the robot 212 may be configured to receive any number of modules or components, such a mobile phone, which may be configured to operate the robot.
- a device e.g., robot 212
- a mobile phone e.g., device 210
- Other types of devices that have connectivity to the Internet can be coupled to robot 212 to provide additional functions on the robot 212 .
- the device 210 may be separate from the robot 212 and can be attached or coupled to the robot 212 .
- the robot 212 may be a toy with only limited mechanical functionality, and by connecting device 210 to the robot 212 , the toy robot 212 may now be capable of performing a number of functions with the aid of the device 210 and/or the cloud.
- the robot 212 (or components of a robot) can be attached to a mobile phone to transform the mobile phone into a robot (e.g., with legs/arms) that is connected to a server to cause operation/functions of the robot.
- the mountable device 210 may further be configured to maximize runtime usage of the robot 212 (e.g., if the robot 212 could learn what happens to cause the user to turn the toy off or set the toy down, the device 210 may be configured to perform functions to counteract such occurrences).
- FIG. 2C illustrates another example of a robot 214 .
- the robot 214 includes a computing device 216 , sensors 218 , and a mechanical actuator 220 .
- the computing device 216 may be a laptop computer, which may be coupled to the sensors 218 .
- the sensors 218 may include a camera, infrared projectors, and other motion sensing or vision sensing elements.
- the mechanical actuator 220 may include a base, wheels, and a motor upon which the computing device 216 and the sensors 218 can be positioned, for example.
- Any of the robots illustrated in FIGS. 2A-2C may be configured to operate according to a robot operating system (e.g., an operating system designed for specific functions of the robot).
- a robot operating system may provide libraries and tools (e.g., hardware abstraction, device drivers, visualizers, message-passing, package management, etc.) to enable robot applications.
- robot operating systems include open source software such as ROS (robot operating system), DROS, or ARCOS (advanced robotics control operating system); proprietary software such as the robotic development platform ESRP from Evolution Robotics® and MRDS (Microsoft® Robotics Developer Studio), and other examples also include ROSJAVA.
- a robot operating system may include publish and subscribe functionality, and may also include functionality to control components of the robot, such as head tracking, base movement (e.g., velocity control, navigation framework), etc.
- FIG. 3 illustrates an example of a conceptual robot-cloud interaction.
- a robot such as a robot described and illustrated in FIG. 2 , may connect to a network of computers (e.g., the cloud), and may request data or processing to be performed by the cloud.
- the robot may include a number of sensors and mechanical actuators that may generally provide motor control for the robot.
- Outputs of the sensors such as camera feeds, vision sensors, etc., may be provided to the cloud, which can process the outputs to enable the robot to perform functions.
- the cloud may process a camera feed, for example, to determine a location of a robot, perform object recognition, or to indicate a navigation pathway for the robot.
- FIG. 3 generally illustrates motor controllers in which each module may conceptually represent a computer or node on the cloud that performs processing using motor controller inputs or data from the robot.
- FIG. 3 also generally illustrates sensors in which each module may conceptually represent a computer or node on the cloud that performs processing using sensor inputs or data from the robot.
- FIG. 3 further generally illustrates applications in which each module may conceptually represent a computer or node on the cloud that performs specific functions of a number of applications, e.g., navigation application, mapping application, etc.
- FIG. 3 further generally illustrates planning in which each module may conceptually represent a computer or node on the cloud that performs processing for the robot, such as general planning or computing processing.
- any of the modules may be interconnected, and/or may communicate to receive data or instructions from each other so as to provide a specific output or functionality for the robot.
- the robot may send data to a cloud for data processing, and in another example the robot may receive data from the cloud.
- the data received from the cloud may be in many different forms.
- the received data may be a processed form of data the robot sent to the cloud.
- the received data may also come from sources other than the robot.
- the cloud may have access to other sensors, other robots, and the internet.
- FIG. 4 is an example system 400 in which robots may interact with the cloud and share information with other cloud computing devices.
- the system 400 illustrates robots 402 , 404 , 406 , and 408 (e.g., as conceptual graphical representations) each coupled to a cloud 410 .
- Each robot 402 , 404 , 406 , and 408 may interact with the cloud 410 , and may further interact with each other through the cloud 410 , or through other access points and possibly directly (e.g., as shown between robots 406 and 408 ).
- the cloud 410 may receive input from several robots. Data from each robot may be complied into a larger data set. For example, the robot 402 may take a picture of an object and upload the picture to the cloud 410 .
- An object recognition program on the cloud 410 may be configured to identify the object in the picture and provide data to all the robots connected to the cloud 410 about the recognized object, as well as possibly about other characteristics (e.g., metadata) of the recognized object, such as a location, size, weight, color, etc.
- every robot may be able to know attributes of an object in a photo uploaded by the robot 402 .
- the robots 402 , 404 , 406 and 408 may perform any number of actions with an area, people, other robots, etc.
- each robot 402 , 404 , 406 and 408 has WiFi or other network based connectivity and will upload/publish data to the cloud 410 that can then be shared with any other robot.
- each robot 402 , 404 , 406 and 408 shares experiences with each other to enable learned behaviors.
- the robot 402 may traverse a pathway and encounter an obstacle, and can inform the other robots 404 , 406 , and 408 (through the cloud 410 ) of a location of the obstacle.
- Each robot 402 , 404 , 406 , and 408 will have access to real-time up to date data.
- the robot 404 can download data indicating images seen by the other robots 402 , 406 , and 408 to help the robot 404 identify an object using various views (e.g., in instances in which the robots 402 , 406 , and 408 have captured images of the objects from a different perspective).
- the robot 408 may build a map of an area, and the robot 402 can download the map to have knowledge of the area. Similarly, the robot 402 could update the map created by the robot 408 with new information about the area (e.g., the hallway now has boxes or other obstacles), or with new information collected from sensors that the robot 408 may not have had (e.g., the robot 402 may record and add temperature data to the map if the robot 408 did not have a temperature sensor).
- the robots 402 , 404 , 406 , and 408 may be configured to share data that is collected to enable faster adaptation, such that each robot 402 , 404 , 406 , and 408 can build upon a learned experience of a previous robot.
- Sharing and adaptation capabilities enable a variety of applications based on a variety of inputs/data received from the robots 402 , 404 , 406 , and 408 .
- mapping of a physical location such as providing data regarding a history of where a robot has been, can be provided.
- Another number or type of indicators may be recorded to facilitate mapping/navigational functionality of the robots 402 , 404 , 406 , and 408 (e.g., a scuff mark on a wall can be one of many cues that a robot may record and then rely upon later to orient itself).
- the cloud 410 may include, store, or provide access to a database 412 of information related to objects, and the database 412 may be accessible by all the robots 402 , 404 , 406 , and 408 .
- the database 412 may include information identifying objects, and details of the objects (e.g., mass, properties, shape, instructions for use, etc., any detail that may be associated with the object) that can be accessed by the robots 402 , 404 , 406 , and 408 to perform object recognition.
- information regarding use of an object can include, e.g., such as for a phone, how to pick up a handset, how to answer the phone, location of buttons, how to dial, etc.
- the database 412 may include information about objects that can be used to distinguish objects.
- the database 412 may include general information regarding an object (e.g., such as a computer), and additionally, information regarding a specific computer (e.g., a model number, details or technical specifications of a specific model, etc.).
- Each object may include information in the database 412 including an object name, object details, object distinguishing characteristics, etc., or a tuple space for objects that can be accessed.
- Each object may further include information in the database in an ordered list, for example.
- the database 412 may include a global unique identifier (GUID) for objects identified in the database 412 (e.g., to enable distinguishing between specific objects), and the GUID may be associated with any characteristics or information describing the object.
- GUID global unique identifier
- a robot may be configured to access the database 412 to receive information generally distinguishing objects (e.g., a baseball vs. a computer), and to receive information that may distinguish between specific objects (e.g., two different computers).
- the database 412 may be accessible by all robots through the cloud 410 (or alternatively directly accessible by all robots without communication through the cloud 410 ).
- the database 412 may thus be a shared knowledge-base stored in the cloud 410 .
- robots may share learned behaviors through the cloud 410 .
- the cloud 410 may have a server that stores robot learned activities or behaviors resulting in a shared knowledge-base of behaviors and heuristics for object interactions (e.g., a robot “app store”).
- a given robot may perform actions and builds a map of an area, and then the robot can upload the data to the cloud 410 to share this knowledge with all other robots.
- a transportation of the given robot's “consciousness” can be made through the cloud 410 from one robot to another (e.g., robot “Bob” builds a map, and the knowledge of “Bob” can be downloaded onto another robot to receive knowledge of the map).
- the robots 402 , 404 , 406 , and 408 may share information through the cloud 410 , and may access the database 412 .
- robots may interact with the cloud to perform any number of functions.
- Example functions are described below.
- FIG. 5 is a block diagram of an example method of a robot interaction with the cloud to facilitate object recognition, in accordance with at least some embodiments described herein.
- Method 500 shown in FIG. 5 presents an embodiment of a method that, for example, could be used with the systems 100 and 400 , for example, and may be performed by a device, such as another device illustrated in FIGS. 1-4 , or components of the device.
- Method 500 may include one or more operations, functions, or actions as illustrated by one or more of blocks 502 - 512 .
- the blocks are illustrated in a sequential order, these blocks may also be performed in parallel, and/or in a different order than those described herein.
- the various blocks may be combined into fewer blocks, divided into additional blocks, and/or removed based upon the desired implementation.
- each block may represent a module, a segment, or a portion of program code, which includes one or more instructions executable by a processor for implementing specific logical functions or steps in the process.
- the program code may be stored on any type of computer readable medium, for example, such as a storage device including a disk or hard drive.
- the computer readable medium may include non-transitory computer readable medium, for example, such as computer-readable media that stores data for short periods of time like register memory, processor cache and Random Access Memory (RAM).
- the computer readable medium may also include non-transitory media, such as secondary or persistent long term storage, like read only memory (ROM), optical or magnetic disks, compact-disc read only memory (CD-ROM), for example.
- the computer readable media may also be any other volatile or non-volatile storage systems.
- the computer readable medium may be considered a computer readable storage medium, for example, or a tangible storage device.
- each block in FIG. 5 may represent circuitry that is wired to perform the specific logical functions in the process.
- the method 500 includes capture an image of an object.
- a robot may capture many images of objects using any number of sensors, such as a camera (still pictures or video feeds), infrared projectors, etc.
- the method 500 includes capture information associated with characteristics about the object.
- a robot may optionally determine or record a weight, dimensions, a texture, color, or any type of physical attribute of the object.
- the robot may capture additional data of the object, such as by accessing memory of the object. For instance, if the object has communication capabilities (such as WiFi, Bluetooth, infrared or other wireless or wired methods), the robot may communicate with the object to determine any type of data. Additionally, the object may have serial/parallel ports through which the robot may communicate with the object.
- the object may have communication capabilities (such as WiFi, Bluetooth, infrared or other wireless or wired methods)
- the robot may communicate with the object to determine any type of data.
- the object may have serial/parallel ports through which the robot may communicate with the object.
- the method 500 includes query a computing device with the captured image and/or information.
- the robot may query the cloud with a captured image by sending the captured image to the cloud and requesting information about the image, such as an identity of the image or information associated with characteristics of objects in the image.
- the robot may query another robot directly to request information about the object, such as an image of an alternate view of the object.
- the method 500 includes receive information associated with the object.
- the robot may receive data from the cloud indicating an identity of an object in the image, or other information related to or associated with characteristics about the object.
- the cloud may perform object recognition on the uploaded image or video. For example, if a picture was taken in a living room, the cloud may be able to identify a television. The cloud may even be able to recognize an exact model of television, and provide information regarding instructions for use of the television.
- the method 500 includes store the received information for future recognitions. For example, after receiving the information from the cloud, the robot would be able to recognize the object in the future enabling the robot to learn and adapt.
- the method 500 includes perform an action based on the received information.
- the action may vary based on a type of received information, or the query that is presented by the robot.
- a robot may capture an image of a coffee maker, provide the image to the cloud, and in response receive details about the coffee maker including an identity, model number, and instructions for use. The robot may then perform actions according to the instructions for use to use the coffee maker.
- a robot may open a refrigerator, take inventory of objects inside (e.g., capture images, identify objects), determine/receive recipes for possible meals based on the determined inventory, and suggest a meal based on items in the refrigerator.
- the robot may query the cloud to identify an object and details of the object to enable the robot to interact with the object. If the received information is not fully accurate (e.g., the robot determines a different weight of the object), the robot can share this information with the cloud to update/modify a shared database in the cloud.
- objects may be tagged with a type of identifier (e.g., radio frequency identification (RFID) chip, near field communication chip (NFC), bar code, etc.), so that a robot may include an application enabling the robot to identify the object based on the identifier.
- RFID radio frequency identification
- NFC near field communication chip
- the identifier may provide information about the object including an identification, details of the object (mass, color, type, brand, etc.), a location of the object, etc.
- objects may emit beacons that can be received by the robots to determine existence/identification/location of the object.
- a physical environment may be instrumented with beacons in forms of NFC, RFID, QR codes, etc. to enable a robot to localize and identify objects.
- Beacons may be stationary beacons or moving beacons (RFID in an employee's ID badge) to perform tracking of objects.
- FIG. 6 is an example conceptual illustration of a robot 600 interacting with a cloud 602 to perform object recognition and interaction, or other functions as described in FIG. 5 .
- the robot 600 may interact with an object (such as any of objects 604 ), and interact with the cloud 602 as described above to further interact with the object.
- an object such as any of objects 604
- the method 500 to facilitate object recognition may be a higher-level service (e.g., higher in a software stack), such that details and specifics for how to recognize an object may be performed by the cloud.
- the robot may be configured to perform actions/functions based on a result of object recognition, rather than or in addition to, performing functions regarding recognizing an object.
- the robot may execute software to perform function calls, such as GetObject( ) which may return information associated with an object (e.g., a cereal box), or PickUpObject( ) which may cause the robot to pick up the object. Enabling function calls and operation of robots through the cloud facilitates control and operation of the robot without having to control or operate various sensors/mechanical aspects of the robot, for example.
- FIG. 7 is an example conceptual illustration of a mapping function.
- a robot 700 may interact with a cloud 702 to perform functions as described in FIG. 5 , for example, such as to perform object recognition queries of objects 704 .
- the robot 700 may traverse through an area 706 in any number of pathways so as to map the area.
- the robot 700 may be configured to roam around an area in which the robot 700 is located to create a map of the area 706 (e.g., room of a house) with the aid of cloud processing.
- the robot 700 may relay data collected from various sensors to the cloud 702 .
- the robot 700 may use sensors to return still pictures, video, location information, and distance information to the cloud computing system.
- the robot 700 may traverse through the area 706 capturing images using a range camera, video camera, etc., and send the data to the cloud 702 .
- the robot 700 (or servers in the cloud 702 ) may identify objects within the data and provide annotations (such as mass, shape, material, etc.) of the objects.
- a computerized map may be generated to represent the area 706 , and computer graphics (e.g., low resolution graphics) can be used to represent identified objects.
- computer graphics within the generated map of the area 706 may be replaced with high resolution images of the objects.
- the robot 700 may capture an image of a couch, and the cloud 702 may identify a specific model of the couch, and perform a search within a database to locate/identify a retailer that manufactures/sells the couch.
- a server in the cloud 702 may query a retailer's server to receive a high resolution image of the couch that may also include other metadata indicating characteristics of the couch (e.g., style, material, price, availability, etc.).
- the high resolution image of the identified couch may be inserted into the computer generated map to replace the computer graphics representing the couch.
- an annotated mapping of objects in an area can be generated.
- FIG. 8 is a block diagram of an example method for mapping of objects in an area or mapping an area, in accordance with at least some embodiments described herein.
- Method 800 shown in FIG. 8 presents an embodiment of a method that, for example, could be used with the systems 100 and 400 , for example, and may be performed by a device, such as another devices illustrated in FIGS. 1-4 , or components of the device.
- the various blocks of method 800 may be combined into fewer blocks, divided into additional blocks, and/or removed based upon the desired implementation.
- each block may represent a module, a segment, or a portion of program code, which includes one or more instructions executable by a processor for implementing specific logical functions or steps in the process.
- the program code may be stored on any type of computer readable medium, for example, such as a non-transitory storage device including a disk or hard drive.
- the method 800 includes receive data gathered by a computing device associated with objects in an area.
- a robot may traverse an area and capture raw data (e.g., such as point map data) and images (e.g., still or video feed) using a range camera, video camera, still camera, etc.
- the robot may provide the gathered data to the cloud, which may receive the gathered data.
- the cloud may receive gathered metadata associated with the objects in the area, such as a time the data was collected, a location (e.g., GPS location) at which the data was collected, or other characteristics regarding when/how the data was collected.
- the method 800 includes perform object recognition on the gathered data.
- a server on the cloud may interpret objects, and further, shapes can be matched with a three-dimensional warehouse or database of objects to identify representations of the point maps.
- the server may use any type of object recognition methods, such as by matching edges, colors, variances, etc., of the gathered data to known objects within a database.
- the objects within the database may have associated metadata indicating characteristics of the objects.
- the server can perform object extraction to identify and extract objects from the received data.
- the server can further localize the objects precisely in a map and provide annotations for the objects.
- Example annotations include mass, shape, material, etc. of the object.
- Annotated objects may be stored and shared through a global object database, such as, the database 412 in FIG. 4 .
- the method 800 includes generate a map of the area based on the gathered data.
- the server may use locations of the data collected as well as times the data was collected to interpret a path traversed by the robot and to create a conceptual map.
- the map may be further generated based on circumstantial data of the recognized objects, such as size and shape of the object. If an object has a known size and shape, and the location of the object is known, an estimated area at which the object is present can be determined.
- the method 800 includes insert computer images of the objects into the map.
- the server may retrieve a computer image of the recognized object (e.g., television), and insert the object into the location on the generated map at which the object is present.
- the method 800 includes associate data with the computer images.
- the server may associate any number of metadata with the computer image, or may alternatively, retrieve metadata or other high resolution images representing the object from a retailer's database for insertion into the computer generated map.
- an image of a couch may be captured, and the server may identify a specific model of the couch, and perform a search within a database to locate/identify a retailer that manufactures/sells the couch.
- a server in the cloud may query a retailer's server to receive a high resolution image of the couch that may also include other metadata indicating characteristics of the couch (e.g., style, material, price, availability, etc.).
- the high resolution image of the identified couch may be inserted into the computer generated map to replace the computer graphics representing the couch.
- an annotated mapping of objects in an area can be generated.
- a robot builds shapes and appearances of all objects in a scene and performs object recognition as possible (with the help of the cloud) to provide an annotated map of objects.
- Raw data is gathered (e.g., point map) and used with camera data (e.g., indicates color/texture of objects) to interpret objects, and further, shapes can be matched with a 3D warehouse of objects to identify representations of the point clouds.
- FIGS. 9A-9B are example interfaces illustrating a map of an area, and objects in the map.
- a home has been outlined (e.g., in a blueprint format) to show different rooms in the home. Items in the home may also have been mapped.
- FIG. 9B illustrates an example interface illustrating mapping of objects in a room.
- the interfaces in FIGS. 9A-9B , and methods described herein may enable a user to determine configurations of rooms, and objects in the rooms.
- a user may be in a store and identify a few television stands that the user would like to purchase; however, the user would like to see how the television stands look/fit into the room configuration.
- the user may capture some images of the television stands using a device, cause the device to perform object recognition (e.g., using the method 500 in FIG. 5 ), access the interface in FIG. 9A to select a room in which to place the television stand, and access the interface in FIG. 9B to insert the new television stand in place of an old television stand (e.g., swap out the old television stand with the new television stand and place the television and peripherals into a desired configuration).
- the example interfaces in FIGS. 9A-9B may be used to maneuver computer generated objects in a room, for example.
- the interfaces in FIGS. 9A-9B may provide information (e.g., metadata) regarding rooms or objects in the rooms as determined during a mapping of the room.
- the interface in FIG. 9A may indicate details regarding a ceiling light, such as a brand name, a model number, details regarding light bulbs used by the ceiling light, etc.
- the metadata may provide links to purchase the ceiling light or accessories online, or a link to see the ceiling light in the room, such as a link to the example interface in FIG. 9B .
- the robot 700 may receive instructions to navigate from point A to point B across the area 706 .
- the robot 708 may have completed this navigation previously, and may have uploaded information regarding a possible navigation pathway to the cloud.
- the robot 708 may have documented objects along the pathway, and also, possible obstructions as well.
- the robot 700 may query the cloud requesting navigation instructions to traverse from point A to point B (e.g., a map), and may receive in response, the navigation pathway shown in FIG. 7 as previously traveled by the robot 708 . In this manner, the robots may share information to enable learning of the area 706 .
- the robot 700 may have limited memory, and in one example, to enable and manage updates, a server may include or store data to be provided to the robot 700 .
- the robot 700 may not download “the entire world” of data, but rather, may download data representing immediate surroundings into a local cache to perform actions, such as to traverse through a portion of the area 706 .
- the robot 700 may download additional data when needed.
- downloads can occur from the server to the robot 700 , or through peer-to-peer sharing (e.g., from the robot 708 to the robot 700 ).
- basic instructions for mobility, safety, and general robot operation can be stored on-board the robot 700 , while instructions for higher-level functionality may be stored in the cloud 702 and accessed by the robot 700 as needed.
- the robot 700 can use “Just in Time” downloading where high level data can be downloaded first, followed by lower level data streamed as needed.
- providing business logic stored in the cloud 702 enables fleet-wide upgrades to all robots.
- slug trails may be used for shared information (i.e., information that may be used for object recognition).
- a slug trail may be indicative of previous requests and matching responses.
- the request/response can be cached so that future requests hit an answer sooner in path. For example, if the robot 700 is navigating through the area 706 and notices a hallway is blocked, the robot 700 can publish an update on the pathway so that other robots learn of the obstacle and other problems/constraints, and may request/receive an alternate pathway. Any interaction that the robot 700 experiences can be published to the cloud so that the robot 700 logs interactions to be shared amongst all robots. Specific locations may trigger robots to download new information. For example, when entering a new room, data about the room may be retrieved that was collected by another robot.
- FIG. 10 is a block diagram of an example method for mapping of objects in an area and performing inventory of objects, in accordance with at least some embodiments described herein.
- Method 1000 shown in FIG. 10 presents an embodiment of a method that, for example, could be used with the systems 100 and 400 , for example, and may be performed by a device, such as another devices illustrated in FIGS. 1-4 , or components of the device.
- the various blocks of method 1000 may be combined into fewer blocks, divided into additional blocks, and/or removed based upon the desired implementation.
- each block may represent a module, a segment, or a portion of program code, which includes one or more instructions executable by a processor for implementing specific logical functions or steps in the process.
- the program code may be stored on any type of computer readable medium, for example, such as a non-transitory storage device including a disk or hard drive.
- the method 1000 includes determine mapping of objects in a space according to a navigation pathway.
- a robot may move through an area and perform object recognition and generate a map, as described above using method 500 in FIG. 5 and method 800 in FIG. 8 .
- the robot may be configured to follow a predetermined navigation pathway through an area, or may follow a random navigation pathway through the area.
- the robot may store or associate the navigation pathway with the determined mapping of the area, so that a record is formed of the navigation pathway used to determine the mapping.
- the mapping may be different (e.g., a robot may not map an entirety of an area or take account a full inventory of all objects in an area).
- the mapping of the area may be, in one example, an inventory of objects in the area. As the robot traverses through the area capturing images and performing object recognition, the robot may determine what objects are present, and determine locations of objects in the area.
- the method 1000 includes store mapping and information indicating characteristics of the objects.
- the robot may store the mapping locally on memory of the robot or within the cloud.
- the robot may further store associated information indicating characteristics of the objects with the mapping of the objects, such as, metadata describing details of the objects (weight, color, model number, size, shape, etc.).
- the method 1000 includes perform a second mapping of the objects according to the previous navigation pathway. For example, at a later time, the robot may perform another mapping of the area using the same navigation pathway so as to take an inventory of the area at the later time. The robot may follow the same (or substantially same) navigation pathway previously used so that the same (or substantially same) mapping of the area and objects in the area can be determined.
- the method 1000 includes compare the second mapping to the stored mapping, and at block 1010 , the method 1000 includes identify differences between the second mapping and the stored mapping. By comparing the two mappings, differences between the mappings can be identified to determine differences in the inventoried objects.
- a user may configure an area (e.g., bedroom) into a default configuration (e.g., where all clothes are picked up off the ground, items are arranged and the room is cleaned).
- the user may request the robot to perform a mapping and inventory of objects in the bedroom with the bedroom in the default configuration.
- the user may request the robot to perform a new inventory of the room, and the new inventory can be compared to the default inventory to determine what changes have been made to the bedroom (e.g., what objects are not in the default location).
- a user may configure a stock room at a retail store into a default configuration (e.g., all shelves are fully stocked).
- the user may request the robot to perform a mapping and inventory of objects in the stock room with the room in the default configuration.
- the user may request the robot to perform a new inventory of the stock room to determine what items have been sold.
- the new inventory can be compared to the default inventory to determine what changes have been made to the stock room, such as, to indicate a current supply of items in the stock room that can be used to configure future orders.
- the default inventory map may thus be a benchmark map of the room in a clean state, so that subsequent maps can be performed to determine a differential between the benchmark and a current condition of the room.
- a robot may create an inventory of objects in a room or scene, along with a mapping of the objects to catalog all objects in the space and to store details of the objects (e.g., name, shape, color, last known location, etc.).
- the robot may have a navigation path that is followed to inventory a space, so that the same navigation path can be traversed to identify missing/new objects.
- FIG. 11 is a block diagram of an example method for performing voice recognition/control by a robot, in accordance with at least some embodiments described herein.
- Method 1100 shown in FIG. 11 presents an embodiment of a method that, for example, could be used with the systems 100 and 400 , for example, and may be performed by a device, such as another devices illustrated in FIGS. 1-4 , or components of the device.
- the various blocks of method 1100 may be combined into fewer blocks, divided into additional blocks, and/or removed based upon the desired implementation.
- each block may represent a module, a segment, or a portion of program code, which includes one or more instructions executable by a processor for implementing specific logical functions or steps in the process.
- the program code may be stored on any type of computer readable medium, for example, such as a non-transitory storage device including a disk or hard drive.
- the method 1100 includes record a sample of media.
- a user may interact with a robot by speaking to the robot, and the robot may record the speech of the user.
- the robot may record samples of speech from other areas as well (e.g., televisions, radio, etc.) and of other types of media, such as music, video, live performances, etc.
- the method 1100 includes send the sample of media to a server.
- the robot may be configured to communicate with a server (e.g., the “cloud”), and may send the sample of media using wired or wireless communication to the server.
- a server e.g., the “cloud”
- the method 1100 includes receiving from the server a voice recognition on the sample of media.
- the server may use any number of known techniques for performing voice recognition, and may provide a response to the robot.
- the voice recognition response may include a textual equivalent of the speech, such as when the server performs speech to text processes.
- the method 1100 includes perform an action based on the received information.
- the voice recognition response may also include a command or instructions indicating actions for the robot to perform.
- the server may perform a voice recognition, and may further identify actions to be performed by the robot in response to the voice recognition.
- the user may speak “call John” to the robot.
- the robot may record the speech and send the speech sample to the server.
- the server may recognize the speech, and return a voice recognition response to the robot with instructions for the robot to call a user named John at the phone number 555-1234.
- the robot may then initialize a phone call to John using internal phone capabilities.
- the voice recognition response may further include instructions to the robot for how to initialize the phone call, such as to provide a map to the robot of where a telephone is located, provide a navigation pathway to the robot to instruct the robot how to traverse to the telephone, provide instructions how to use the telephone to the robot, and provide the phone number of John to the robot.
- a robot may perform any actions or queries to the cloud as described herein based on contextual or situational information.
- a robot may have information relating to a local environment in which the robot operates (e.g., a local map, a location, etc.) and this information can be used as constraints for recognition systems that are used to identify objects within captured data by the robot. For example, if the robot is in an office, the robot may access an “office” database of objects within the cloud to perform object or data recognitions. Thus, the robot may send to the cloud a query to determine or identify an object within gathered data, and the query may include contextual information, such as an indication of a location of the robot. The server may use the contextual information to select a database in which to search for a matching object.
- a local environment in which the robot operates e.g., a local map, a location, etc.
- this information can be used as constraints for recognition systems that are used to identify objects within captured data by the robot. For example, if the robot is in an office, the robot may access an “office” database of objects within the cloud to perform object or data recognitions.
- the robot may send to the
- a robot may use location, or possible nearby objects as constraints into recognition systems to provide a context of the environment enabling object recognition to be performed using a subset or a limited set of nouns/verbs/objects to improve recognition accuracy.
- the robot may operate with situational awareness such that a robot may inventory objects in a scene, and if given a command by a user, the robot can determine the content or interpret the meaning of the command based on a situation of the scene or by comparing with objects in the scene (e.g., command is to retrieve a cola from the refrigerator, and robot can use limited database warehouse of objects associated with “house” to quickly identify refrigerator/cola, etc.).
- the robot may be configured to use contextual as well as situational data to help perform decision making.
- a robot may perform actions using contextual/situational data, such as time of day, weather outside, etc. For example, at night a robot may be configured to move more slowly and make less noise to be quiet than as compared to operations during the day. In another example, in the morning a robot may offer coffee to a person as opposed to a soft drink. Other situational examples that may affect configurations of robot actions include if the weather is rainy, the robot may offer an umbrella to the person, or based on what a person is wearing, the robot may offer suggestions as to whether the person will be hot/cold due to weather. Thus, the robot may take context/situation into account, as well as whom the robot is interacting with when determining an appropriate response/function. Still further, a robot may make a sound of presence, intent, state, based on context/situations.
- contextual/situational data such as time of day, weather outside, etc. For example, at night a robot may be configured to move more slowly and make less noise to be quiet than as compared to operations during the day. In another example,
- a voice recognition database (or information from a voice recognition database) may be provided to a client device (e.g., robot) to enable the robot to perform voice/speech recognition locally.
- the voice recognition database may be provided based on a current state of the robot. As an example, if a robot is in an office setting, an office database for voice recognition may be provided to the robot to enable a voice recognition process to be performed more quickly than having the robot search within a database for all settings. Any situational or contextual information of the robot may be used to select a voice recognition database to provide to the robot. As other examples, a time of day, context of a conversation, location of the robot, etc. may be used individually or in combination to select a voice recognition database to provide to the robot.
- FIG. 12 is a block diagram of an example method for processing data from a robot, in accordance with at least some embodiments described herein.
- Method 1200 shown in FIG. 12 , presents an embodiment of a method that, for example, could be used with the systems 100 and 400 , and may be performed by a device, such as another device illustrated in FIGS. 1-4 , or components of the device.
- the various blocks of method 1200 may be combined into fewer blocks, divided into additional blocks, and/or removed based upon the desired implementation.
- each block may represent a module, a segment, or a portion of program code, which includes one or more instructions executable by a processor for implementing specific logical functions or steps in the process.
- the program code may be stored on any type of computer readable medium, for example, such as a non-transitory storage device including a disk or hard drive.
- the method 1200 includes receive data from a robot.
- the type and form of the data that is received can vary in embodiments.
- the received data may be in the form of a request from a robot.
- the request may be for data about the robot's environment or a request for computer-executable instructions that may allow the robot to perform a desired task, for example.
- the received data may also be in the form of information about the robot and/or the robot's environment, for example. Any or all of the data may be received by a server, cloud, or the like at periodic intervals and/or as the data is obtained.
- a robot may have limited memory, and therefore, may only store information about the robot's immediate surroundings. Should the robot venture outside of these immediate surroundings, the robot may not have enough information to continue to operate. Therefore, the robot may request data about the robot's new or changing surroundings from the server, cloud, or the like.
- the robot may need to perform a task.
- Example tasks may include navigating to a location, opening a door, finding an object in an area, etc.
- the robot may not store the instructions onboard to perform the task.
- the robot may, therefore, request computer-executable instructions from to perform the task from the server, cloud, or the like.
- the robot may also send information about the robot and/or the robot's environment to the server, cloud, or the like.
- a robot may send a robot identifier, which identifies the robot.
- Example robot identifiers may include numeric, alphanumeric, or alphabetic identifiers.
- the robot identifier may be unique to an individual robot, model of robot, etc.
- Robot identifiers may be used to identify the robot to the cloud so that the cloud may determine what computer-executable instructions to send to the robot, for example.
- the robot may also send to the server, cloud, or the like, information indicating or associated with one or more robot capabilities.
- Information about the robot capabilities may identify one or more specific characteristics of a robot. For example, information about the robot capabilities may include one or more of an amount of memory on the robot, an amount of available memory on the robot, available processing power at the robot, processing power of the robot, remaining battery life at the robot, latency between the robot and receiving device, etc. Information about the robot capabilities may also be used to identify what resources the robot has available for receiving data from the cloud, for example.
- the robot may also send data about the robot's environment and surroundings in the form of location inputs to the server, cloud, or the like.
- Location inputs may identify the robot's environment including objects within an area, for example.
- the location inputs may be stored, sent to a cloud, and/or distributed to other robots, thereby allowing the robot to share the robot's knowledge with other entities without requiring the robot to store all of the knowledge in onboard memory.
- location inputs may be obtained using any number of sensors such as optical sensors, GPS, microphones, etc.
- the sensors may be in direct or indirect communication with the robot.
- the amount of detail associated with the location data may vary (e.g., based on the sophistication of the sensors, size of the area, amount of memory at the robot for temporarily or permanently storing the location data, etc.)
- the method 1200 includes process the received data.
- the processing may be performed by a server, cloud, or the like and include a determination as to whether the received data is a request for data, such as computer-executable instructions, or is providing information about the robot and/or the robot's location. For example, if the received data is providing information about the robot and/or the robot's location, the processing at block 1204 may involve storing the provided information at the cloud and/or disseminating the information to other robots. If the received data is a request for data, the processing at block 1204 may involve determining what data may or may not be needed to continue the steps of the method 1200 .
- a robot may be approaching a table and may request instructions on how to move around the table.
- the robot may send a robot identifier, such as a robot model number, and may also send location inputs including that the table is of a certain color, size, and is made out of a specific material, for example. Not all of the received data may be necessary for navigating around the table.
- the server, cloud, or the like may process the received data and determine that certain data (e.g., the robot model number, the request for instructions on how to move around the table, and the size of the table) may be needed to continue the steps of the method 1200 .
- the method 1200 includes compare the received data to a manifest.
- the comparison of the received data to the manifest may be performed by a server, cloud, or the like.
- the received data may include a robot identifier.
- the manifest may include robot specific details related to the robot identifier.
- the manifest may include robot specifications related to a processor type, amount of installed memory, storage space, type of operating system, type of sensors available to the robot, what type of wheels are installed on the robot, what direction(s) the robot is able to move, etc.
- a manifest may be stored on the server, and may be created by persons in industry, etc. Moreover, in embodiments, the manifest may be created based on inputs from one or more robots. The server, cloud, or the like may compare any of the received data to robot specific details within the manifest. Thus, for example, a server may compare a robot identifier received from a robot to a robot identifier associated with a manifest. In embodiments, the comparison may result in a match between the robot identifier received from the robot and the robot identifier associated with the manifest.
- the method 1200 includes determine instructions for the robot.
- the instructions may be computer instructions that are executable by the robot.
- the instructions may be determined based at least in part on the data from the manifest.
- Embodiments may store multiple sets of computer-executable instructions at a cloud.
- the computer-executable instructions may be specific or generic.
- Specific computer-executable instructions may be instructions that a robot having a specific operating system, processor type, robot identifier, etc., may perform.
- Generic computer-executable instructions may be instructions that any robot may perform such as how to stop, turn a certain direction, make an audible sound, etc.
- One or more specific and/or generic computer-executable instructions may be combined to accomplish a task.
- location inputs may be received, which indicate that a table is a specific distance in front of the robot.
- This data may be processed by the server, cloud, or the like to determine that the robot should move so as to avoid the table.
- the manifest may indicate that the robot is limited to 16 kilobytes of memory and has the capability of turning in multiple directions.
- the method 1200 may be executable to use this data to determine that there are five different sets or combinations of computer-executable instructions that will allow the robot to avoid the table. These five different sets or combinations may vary in computational complexity, amount of time to perform, amount of processing power, number of instructions, etc.
- the method 1200 may be executable to identify an optimal set or combination of instructions. In this example, the robot has limited memory capabilities; therefore, the set of computer-executable instructions requiring the least amount of memory at the robot may be considered the optimal instructions.
- the method 1200 includes determine robot processing capability.
- the robot's processing capability may relate to a number of computer-executable instructions the robot can perform in an amount of time.
- the processing capability may be determined at least in part by the robot capabilities received at block 1202 .
- the robot capability may indicate the amount of available memory on the robot, available processing power at the robot, remaining battery life at the robot, etc.
- a server, cloud, or the like may determine that a robot having a limited amount of memory may only be capable of performing a certain number of computer-executable instructions at one time.
- the method 1200 includes send the instructions to the robot.
- the entire set of instructions may be sent to the robot.
- the robot may not be able to process the entire set of instructions due to processing limitations, memory limitations, or the like. Therefore, a subset of the instructions may be sent to the robot.
- the determination of how many instructions to send to the robot may be performed at block 1210 or block 1212 .
- any number of the optimal instructions up to, but not exceeding, the 16 kilobyte memory limitation may be sent to the robot.
- additional instructions may be sent to the robot.
- the additional instructions may be sent as soon as any memory becomes available, as soon as at least a predefined percentage or amount of the memory becomes available, or when the entire amount of memory becomes available at the robot. This process may continue until all instructions have been sent, the robot no longer needs to perform the instructions, a different set of instructions is requested based on new or updated robot capabilities or location inputs, etc., for example.
- Embodiments may send computer-executable instructions according to a priority level. For example, a first priority may be given to high-level functions and a second priority may be given to low-level functions.
- High-level functions may involve computer-executable instructions that have a determined or predefined order of operation, for example.
- High-level functions may also include computer-executable instructions which are associated with the surroundings of the robot or which may result in an adverse action if not performed prior to one or more other computer-executable instructions.
- An example may be computer-executable instructions requiring a robot to stop before the robot falls off of a table.
- Low-level functions may involve computer-executable instructions having a lower order of operation than the high-level functions such as having the robot make a beeping sound prior to or while stopping, for example.
- the server may send second priority functions, such as low level functions, to the robot after the first priority functions have been completed or after enough memory at the robot becomes available to store the second priority functions. Memory at the robot may become available when one or more computer-executable instructions are executed by the robot, for example.
- the method 1200 has been described in terms of receiving data from a robot at a server, cloud, or the like.
- one or more intermediate devices may be used as a communication interface between the robot and the server, cloud, or the like.
- Example intermediate devices include a computing device such as cellular telephone, personal digital assistant, desktop computer, tablet computer, laptop computer, etc.
- FIG. 13 shows a conceptual illustration of a robot 1302 navigating through an area 1300 .
- the area 1300 may be a room, as illustrated in FIG. 13 , a grocery store, a state highway system, an outdoor area, etc.
- the robot 1302 may store a map of the area 1300 in memory.
- the map may also be stored in a cloud and/or on a computing device.
- the map may maintain dimensions or boundaries of the area 1300 , a location of objects 1304 , 1306 within the area 1300 , etc.
- One or more robots 1302 may be present in an area 1300 .
- Each robot 1302 may include a robot identifier.
- the robot identifier may include a model of the robot 1302 .
- the model may be a name, number, communication frequency, etc., which identifies the robot 1302 .
- the robot identifier may be in the form of a unique identifier, which uniquely identifies the robot 1302 .
- Each robot 1302 may also include one or more robot capabilities.
- Robot capabilities may include an amount of memory the robot 1302 has available, an available processing power at the robot 1302 , available battery life at the robot 1302 , latency between the robot 1302 and receiving device, etc.
- Memory may be in the form of volatile or non-volatile memory.
- the amount of identified memory may include the amount of memory the robot 1302 has available at the time the robot identifier is sent to a computing device and/or cloud.
- the amount of memory may also include an average amount of memory the robot 1302 has available over a predefined time period.
- the available processor power may be related to the clock speed, number of available cores, number of threads, amount of cache, etc.
- Additional robot capabilities may include a measureable amount of wear and tear on the robot 1302 , an age of the robot 1302 , an amount of time the robot has been operating, a number of operational sensors at the robot, etc.
- One or more of the robot capabilities may be sent to a computing device and/or cloud.
- the battery life of the robot 1302 may be used as a robot capability.
- the battery life may be the amount of battery life remaining when the robot capability is sent to a computing device or cloud.
- the battery life may be a projected amount of battery life based on aggregate, historical, or current activities being performed by the robot 1302 .
- the battery life may be based on an amount of time the robot's battery should last according to the robot's specifications.
- the robot's specifications may be stored in a manifest, for example.
- the robot capability may include a latency.
- Latency may include the amount of delay experienced when sending data between two or more locations.
- the locations may be between the robot 1302 and a computing device and/or cloud.
- the latency may be one-way latency or round-trip latency.
- hardware access time may be included as part of the latency.
- the robot 1302 may send information of all or a subset of the robot capabilities to a computing device and/or cloud. For example, a robot 1302 may send information of a latency between the robot 1302 and receiving device.
- the robot 1302 may also send location inputs to a computing device and/or cloud.
- Location inputs may identify one or more obstacles within an area 1300 or within a predetermined distance 1308 of a robot 1302 , for example.
- Location inputs may be gathered from (e.g., from maps) stored at the robot 1302 .
- location inputs may be gathered by one or more robots 1302 using any number of sensors.
- Example sensors include GPS receivers, infrared sensors, sonar, optical sensors, biosensors, RFID systems, NFC chips, wireless sensors, compasses, etc. One or more of these sensors may be used to gather data related to obstacles 1304 , 1306 .
- the gathered data may be sent from the robot 1302 to a computing device and/or cloud as one or more location inputs.
- a robot 1302 may use an optical sensor to detect and/or gather data about obstacles within a predefined radius 1308 of the robot 1302 .
- the radius 1308 may vary between embodiments and the capabilities of the optical sensor.
- the optical sensor may detect an obstacle 1304 to the right of the robot 1302 and an obstacle 1306 in front of the robot 1302 , for example.
- This location input data may be stored at the robot 1302 or sent to a computing device and/or cloud for storage.
- optical sensor location input data from multiple robots 1302 may be accumulated and even updated at the computing device and/or cloud.
- the location inputs may be the GPS location of a robot 1302 in an area 1300 , for example.
- the GPS location may be one or more coordinates.
- the GPS location may also or alternatively identify what direction the robot 1302 is facing and/or moving.
- the location inputs may be the GPS locations of one or more obstacles 1304 , 1306 in the area 1300 .
- This GPS location input data may be obtained by including GPS devices on one or more obstacles 1304 , 1306 , and transmitting each obstacle's 1304 , 1306 GPS location to the robot, computing device, and/or cloud, for example.
- this GPS location input data may be used in conjunction with a map of the area 1300 to determine where the robot 1302 is relative to one or more of the obstacles 1304 , 1306 .
- Data from the GPS may be stored at the robot 1302 or sent to a computing device and/or cloud for storage.
- GPS location input data or other sensor data from multiple robots 1302 may be accumulated and even updated at the computing device and/or cloud.
- Location inputs may be obtained from audio sensors, such as microphones.
- a robot 1302 may include a microphone capable of receiving audio data including audio commands.
- the robot 1302 , computing device, and/or cloud may use audio data from the microphone to determine the source of the audio, how far the source of the audio is away from the robot 1302 , etc. This information can be used to identify the audio source as an obstacle, for example.
- the audio may be identified as a command that identifies a direction for the robot 1302 to move, such as a left or right turn, or an affirmative command to do or refrain from doing something.
- a person 1310 may speak the word “stop” and the robot 1302 may use the audio to identify where the person 1310 is located and even respond to the audio command by stopping.
- Audio location input sensor data may be stored at the robot 1302 or sent to a computing device and/or cloud for storage. In embodiments, audio location input data from multiple robots 1302 may be accumulated and even updated at the computing device and/or cloud.
- the amount of location inputs gathered and sent to a computing device and/or cloud may vary based on a number of factors. For example, in some embodiments, all location inputs may be gathered and sent to a computing device and/or cloud. Depending on the size of the area 1300 , and the number and breadth of the sensors gathering data, this may result in a large amount of location data. As such, embodiments may limit the amount of location inputs that are collected. Example limitations may be based on, e.g., predetermined distances relative to the robot 1302 . The predetermined distances may be defined in terms of metric or standard distances and may be unidirectional or multidirectional based on an orientation of the robot 1302 , for example.
- the predetermined distances may be a certain number of inches or feet, for example.
- the predetermined distances may be an entire room in a building or area on a map.
- Predetermined distances may also be conceptual.
- predetermined distances may be defined according to the amount of available memory or other processing capabilities a robot 1302 has available for storing location input data on a temporarily or permanent basis.
- the available memory may include any sort of storage accessible by a processor of the robot with no more than the maximum amount of latency by which the robot is constrained to act in, for example.
- the robot 1302 may also send requests for information to a computing device and/or cloud.
- the requests may be in the form of requesting additional data about the robot's 1302 environment.
- the robot 1302 may store a map about an area 1300 , but may not know what is outside of the area 1300 . Therefore, the robot 1302 may request a map of the hallway leading to the area 1300 from a computing device and/or cloud, for example.
- the requested map may replace or supplement the map stored at the robot 1302 .
- the robot 1302 may also send requests for computer-executable instructions to perform a desired task.
- Example tasks may include navigating to a location, opening a door, finding an object in the area 1300 , etc.
- the robot 1302 may sense that the robot is about to run into a table 1306 .
- the robot 1302 may determine that running into the table 1306 is an adverse action (e.g., an action that hinders the mobility, safety, or general operation of the robot 1302 .)
- the robot 1302 may have enough onboard logic to stop moving. However, the robot 1302 may not have enough onboard logic to avoid the table.
- the robot 1302 may identify the task of moving to avoid the table as a desired task and send a request to the computing device and/or cloud requesting computer-executable instructions to perform this task.
- the robot 1302 may send one or more location inputs to the computing device and/or cloud that allow the computing device and/or cloud to deduce the desired task of stopping and/or moving to avoid the table. Both examples may result in a request for computer-executable instructions that will allow the robot 1302 to avoid the table.
- FIG. 14 illustrates a system 1400 in which a robot 1402 may interact with a cloud 1406 directly or indirectly through a computing device 1404 .
- the system 1400 may include more than one robot 1402 .
- the robot 1402 may include a single microcontroller.
- a microcontroller may have fixed or dynamic functionalities.
- the microcontroller may have fixed functionalities that may be defined by limited resources, such as processing capabilities, memory, etc. The limited resources may not be enough to allow the robot 1402 to perform a desired task. Therefore, to accomplish certain tasks, the robot 1402 may interact with one or more other devices, such as a computing device 1404 and/or cloud 1406 . In embodiments, this interaction may be performed using dynamic functionalities at the microprocessor.
- Dynamic functionalities may allow the microcontrollers to be constantly in flux based on a prior history. Dynamic functionalities may also allow the microcontroller to communicate with a cloud 1406 to optimize for latency, available memory, etc. In this way, the computing device 1404 and/or cloud 1406 may act as a central knowledge base for the robot 1402 .
- a computing device 1404 may be any computer, computing machine, information processing system, etc.
- Example computing devices 1404 may include a cellular telephone, personal digital assistant, desktop computer, tablet computer, laptop computer, etc.
- the computing device may replace the microcontroller at the robot 1402 .
- the computing device 1404 is configured to receive data, such as requests for information, requests for computer-executable instructions, robot identifiers, and location inputs, from a robot 1402 .
- the computing device 1404 may send all or part of this information to a cloud 1406 .
- a “cloud” may refer to a service or a group of services accessible over a network (e.g., Internet) by client and server devices, for example.
- FIG. 1 illustrates a cloud in an exemplary system for cloud-based computing.
- the cloud 1406 in FIG. 14 may include a cloud service, cloud platform, infrastructure, and database to perform one or more of the functions and/or processes described herein.
- the cloud 1406 is configured to receive data, such as robot identifiers and location inputs, from a robot 1402 and/or a computing device 1404 .
- the robot 1402 may send data, such as robot identifiers, robot capabilities, and location inputs, etc., to a cloud 1406 directly or indirectly via one or more computing devices 1404 , for example.
- the determination as to whether the data should be sent directly or indirectly to the cloud may be made by a user or dictated by the system architecture.
- some embodiments may include one or more computing devices in the system architecture, whereas, other embodiments may include no computing devices in the system architecture.
- the computing device 1404 may receive, store, and/or filter data that is sent from the robot 1402 . While the cloud 1406 may perform these same operations, using the computing device 1404 as an intermediary may allow the data to be stored at a local location and may reduce the amount of data that the robot 1402 may need to transfer at any given point. Moreover, if a connection to the cloud 1406 were to fail, the robot 1402 may still be able to operate at least in part by communicating with a computing device 1404 .
- a robot 1402 may send a plurality of location inputs identifying what objects are in a room.
- the computing device 1404 may receive the location inputs and store the location inputs in memory at the computing device. Once stored, the robot 1402 may not need to send location inputs again unless there is a change such as the robot 1402 enters a new room, for example. In such circumstances, the robot 1402 may send the computing device 1404 new location inputs, which may be saved by the computing device 1404 . Based on the robot's desired task, all or part of the data stored at the computing device 1404 may be sent to the cloud 1406 , for example.
- the amount of data that is sent to the computing device 1404 and/or cloud 1406 may vary.
- the computing device 1404 and/or cloud 1406 may receive all of the robot identifiers, robot capabilities, and/or location inputs from the robot 1402 .
- the computing device 1404 and/or cloud 1406 may then process the received data to determine how much of the received data is needed, or conversely not needed, to accomplish the steps of method 1200 , for example. Unneeded data may be discarded or stored on a temporary or permanent basis at the computing device 1404 and/or cloud 1406 .
- the computing device 1404 and/or cloud 1406 may aggregate data received from the robot 1402 .
- the robot 1402 may send information indicating that a set of computer-executable instructions that were supposed to route the robot 1402 around a table leg have failed. This failure, along with others, may be aggregated so that the robot 1402 , computing device 1404 , and/or cloud 1406 may deduce the reason for the failure and create a solution set of computer-executable instructions to address the failure.
- the solution may be to have the robot 1402 stop at a farther distance away from the table prior to proceeding onward, for example. In embodiments, this solution may be sent to those robots that have encountered the failure, a random set of robots in a fleet, all robots in a fleet, etc.
- data from the robot 1402 may be aggregated to maintain a map of an area.
- the computing device 1404 and/or cloud 1406 may receive location data from the robot 1402 that are or have been in an area.
- This location data may include the location of one or more obstacles within a room, for example.
- the location input data may be used to update a map of known obstacles within the area.
- This updated map may be shared with the robot 1402 . This allows the robot 1402 to accumulate, store, and/or access knowledge without having to consume limited resources onboard the robot 1402 .
- all or a subset of the data that is received at the computing device 1404 may be sent to the cloud 1406 .
- the process of sending data to the cloud 1406 may be similar to the process of sending data from the robot 1402 to the computing device 1404 .
- the cloud 1406 may compare the received data, such as the robot identifier, to a manifest stored in the cloud 1406 to determine the robot's processor type, amount of installed memory, storage space, type of operating system, type of sensors available to the robot, what type of wheels are installed on the robot, what direction(s) the robot is able to move, etc.
- the cloud 1406 may also determine instructions for a robot 1402 .
- the instructions which may be computer executable, open source, created by users or persons in industry, etc.
- Example computer-executable instructions may include one or more sequential commands to control movement of the robot 1402 , commands to initiate a sensor, commands to request specific robot identifiers and/or location inputs from the robot 1402 , etc.
- computer-executable instructions may not exist for every robot 1402 to accomplish every desired task.
- the cloud 1406 may select a set of computer-executable instructions that accomplish a substantially similar task and/or are substantially similar to a different robot. For example, a robot 1402 may need to decrease in height to avoid an upcoming obstacle. While the robot 1402 may have the motor abilities to decrease in height, there may not be specific computer-executable instructions to accomplish that task for that specific robot 1402 . However, the cloud 1406 may determine that there are multiple generic computer-executable instructions for causing the robot 1402 to decrease in height. The cloud 1406 may, therefore, select generic computer-executable instructions to accomplish the task.
- the generic or specific computer-executable instructions may be modified in order to be executed by the robot 1402 .
- the cloud 1406 , computing device 1404 , and/or robot 1402 may have the ability to modify computer-executable instructions. Modifications may be performed based on a robot's 1402 processor type, amount of installed memory, storage space, type of operating system, type of sensors available to the robot 1402 , what type of wheels are installed on the robot 1402 , what direction(s) the robot 1402 is able to move, etc. In embodiments, modifications may be performed by identifying one or more computer-executable instructions that the robot 1402 is unable to perform.
- the cloud 1406 , computing device 1404 , or robot 1402 may determine if there exists similar or replacement computer-executable instructions. If so, the robot 1402 may use the similar or replacement computer-executable instructions to accomplish the desired task.
- a robot 1402 may need to move around an obstacle.
- the computer-executable instructions for performing this task may require the robot 1402 to make a sharp ninety degree left turn to avoid the obstacle. This requirement may presuppose that the robot 1402 that is going to execute the computer-executable instructions has omni wheels that allow the robot 1402 to move laterally to the left.
- the robot 1402 may only have wheels on a rigid axle. These more rigid wheels may be unable to perform the step of making a sharp ninety degree left turn.
- the cloud 1406 or even the computing device 1404 or robot 1402 , may modify the computer-executable instructions based on the mobility of the robot 1402 , for example. This may result in the robot 1402 moving backward two feet and slowly making a soft ninety degree turn to the left, for example.
- the process of determining which computer-executable instructions to send to the robot 1402 may include ranking one or more sets or combinations of computer-executable instructions.
- the ranking may be based on the computer-executable instructions that require the least number of resources, fewest number of robot components, involve the fewest number of instructions, etc.
- a set of computer-executable instructions that requires the robot 1402 to decrease to a minimum height may be more optimal than a set of computer-executable instructions that requires a robot 1402 to stop, decrease in height by three inches, determine if the obstacle is still a problem, and decrease in height another three inches until the robot 1402 clears the obstacle.
- the computer-executable instructions may vary between the robot 1402 , task, processing capabilities at the robot, etc.
- the cloud 1406 may determine how many of the computer-executable instructions to send to the robot 1402 at one time. In embodiments, the cloud 1406 may send the robot 1402 all of the computer-executable instructions that the robot 1402 may need to complete the desired task. In another embodiment, the cloud 1406 may avoid sending all of the computer-executable instructions because the robot 1402 may be unable to process all of the computer-executable instructions and may, therefore, require multiple communications back and forth with the cloud 1406 . In embodiments, multiple unneeded communications can be avoided when possible.
- the number of computer-executable instructions sent to the robot 1402 at one time may depend on the amount of processing capabilities at the robot 1402 .
- the processing capabilities may vary based on a number of factors including an amount of available memory on the robot, available processing power at the robot, remaining battery life at the robot, what computer-executable instructions are currently being executed, etc. One or more of these factors may be considered when determining how many of the computer-executable instructions to send to the robot 1402 at one time.
- a robot 1402 may have a limited amount of available memory.
- the cloud 1406 may determine how much memory is required to complete the computer-executable instructions. If the computer-executable instructions may be accomplished with the limited amount of available memory, the cloud 1402 may send all of the computer-executable instructions to the robot 1402 . If the robot 1402 does not have enough memory to complete all of the computer-executable instructions, the cloud 1406 may determine how many computer-executable instructions may be sent without exceeding the limited amount of memory. This amount may be the maximum number of computer-executable instructions that the robot 1402 can handle.
- this amount may be based on logical breaks in the computer-executable instructions wherein each logical break includes a subset of the computer-executable instructions that can be handled by the robot 1402 . In embodiments, this amount may be based on what computer-executable instructions may need to be performed first. Those computer-executable instructions that may need to be performed first may be sent to the robot 1402 before those computer-executable instructions that may be performed second, for example.
- the cloud 1406 may send all or a subset of the computer-executable instructions to a computing device 1404 .
- the computing device 1406 may, therefore, perform the duty of determining whether all of the computer-executable instructions may be sent to the robot 1402 or what subset of the computer-executable instructions may be sent to the robot 1402 .
- the computing device 1406 may act as a buffer by downloading and maintaining a backlog of computer-executable instructions so that the robot 1402 may not have to rely on the cloud 1406 for instructions. This may be beneficial if the communication channel between the robot 1402 and cloud 1406 or between the computing device 1404 and cloud 1406 should ever fail.
- the computer-executable instructions may be sent from the cloud 1406 to the robot 1402 directly or indirectly via a computing device 1404 .
- the rate in which the computer-executable instructions are sent to the robot 1402 may depend on the processing capabilities of the robot 1402 , for example.
- the order in which the computer-executable instructions are sent to the robot 1402 may be sequential or may vary based on a priority.
- the priority may relate to the likelihood of the computer-executable instructions causing the robot 1402 to avoid an adverse action, such as an action that hinders the mobility, safety, or general operation of the robot 1402 , for example.
- the cloud 1406 may determine an order or priority in which to send data to the robot 1402 .
- the order may be predefined within the cloud 1406 or may be determined or associated with the robot's 1402 surroundings, for example.
- Each of the levels of priority may include computer-executable instructions related to functionalities that may be performed by the robot 1402 .
- Computer-executable instructions related to a functionality having a first priority may be sent to the robot 1402 first.
- the amount of computer-executable instructions that are sent to the robot 1402 may be storable in the amount of available memory at the robot 1402 .
- a subset of the computer-executable instructions may be sent to the robot 1402 , such that the available memory at the robot 1402 may be capable of storing the entire subset of the computer-executable instructions.
- the cloud 1406 may determine when to send computer-executable instructions related to the second priority.
- the cloud 1406 may send computer-executable instructions related to the second priority when the robot 1402 has completed the computer-executable instructions having the first priority.
- the second priority instructions, or a subset thereof may be sent to the robot 1402 when memory becomes available at the robot 1402 .
- the cloud 1406 may determine when robot 1402 may have available memory by periodically receiving a robot capability from the robot 1402 that may indicate the amount of available memory on the robot 1402 .
- the cloud 1406 may make this determination by estimating how many of the computer-executable instructions the robot 1402 should have executed during a given amount of time and how much memory the executed instructions should have taken on the robot 1402 . From this data, the cloud 1406 may determine how much memory should be available at the robot 1402 to receive computer-executable instructions.
- a robot 1402 may request instructions to move around a table.
- the cloud 1406 may determine computer-executable instructions that may allow the robot 1402 to navigate around the table and may also determine a priority for one or more of the computer-executable instructions. For example, a first priority may be given to stopping the robot 1402 to avoid any immediate damage to the robot. A second priority may be given to having the robot 1402 turn ninety degrees clockwise. A third priority may be given to moving forward two feet, thereby assuring that the robot 1402 has moved away from the table. A fourth priority may be given to turning the robot ninety degrees counterclockwise so that the robot 1402 is facing the original direction. A fifth priority may be given to moving the robot forward three feet to clear the table.
- Computer-executable instructions may be sent to the robot 1402 (or to the computing device 1404 and then to the robot 1402 ) according to the determined priority.
- the robot 1402 may receive and execute one or more of the computer-executable instructions from the computing device 1404 and/or the cloud 1406 .
- the robot 1402 may perform each computer-executable instruction in the order of priority determined by the cloud 1406 and, when finished with one or more of the computer-executable instructions, remove the computer-executable instruction from memory to make room for one or more new computer-executable instructions.
- the robot 1402 may skip the computer-executable instruction and/or request new computer-executable instructions from a computing device 1404 , cloud 1406 , user, etc.
Abstract
Description
Claims (20)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US13/283,369 US8380349B1 (en) | 2011-05-06 | 2011-10-27 | Methods and systems for providing instructions to a robotic device |
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US201161483291P | 2011-05-06 | 2011-05-06 | |
US13/283,369 US8380349B1 (en) | 2011-05-06 | 2011-10-27 | Methods and systems for providing instructions to a robotic device |
Publications (1)
Publication Number | Publication Date |
---|---|
US8380349B1 true US8380349B1 (en) | 2013-02-19 |
Family
ID=47682902
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US13/283,369 Active US8380349B1 (en) | 2011-05-06 | 2011-10-27 | Methods and systems for providing instructions to a robotic device |
Country Status (1)
Country | Link |
---|---|
US (1) | US8380349B1 (en) |
Cited By (66)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US20130290234A1 (en) * | 2012-02-02 | 2013-10-31 | Visa International Service Association | Intelligent Consumer Service Terminal Apparatuses, Methods and Systems |
US20140002253A1 (en) * | 2010-12-21 | 2014-01-02 | Kerim Yilmaz | Motor vehicle |
US20140101465A1 (en) * | 2011-11-02 | 2014-04-10 | Randolph Y. Wang | Extending the capabilities of existing devices without making modifications to the existing devices |
US20150015781A1 (en) * | 2006-01-31 | 2015-01-15 | Andrew Flessas | Robotically controlled video projectors |
US20150148957A1 (en) * | 2012-02-07 | 2015-05-28 | Google Inc. | Systems and Methods for Determining a Status of a Component of a Device |
US20150224648A1 (en) * | 2014-02-13 | 2015-08-13 | GM Global Technology Operations LLC | Robotic system with 3d box location functionality |
US9144905B1 (en) * | 2013-03-13 | 2015-09-29 | Hrl Laboratories, Llc | Device and method to identify functional parts of tools for robotic manipulation |
US9259840B1 (en) * | 2013-03-13 | 2016-02-16 | Hrl Laboratories, Llc | Device and method to localize and control a tool tip with a robot arm |
WO2016073103A1 (en) * | 2014-11-03 | 2016-05-12 | Qualcomm Incorporated | Communicating configurable instruction sets to robots for controlling robot behavior |
US20160246297A1 (en) * | 2015-02-24 | 2016-08-25 | Siemens Corporation | Cloud-based control system for unmanned aerial vehicles |
US20160375579A1 (en) * | 2015-06-26 | 2016-12-29 | Intel Corporation | Robotic system for updating devices |
US9534906B2 (en) | 2015-03-06 | 2017-01-03 | Wal-Mart Stores, Inc. | Shopping space mapping systems, devices and methods |
WO2017049610A1 (en) * | 2015-09-25 | 2017-03-30 | Intel Corporation | Telerobotic controller |
US9613180B1 (en) * | 2011-06-02 | 2017-04-04 | Hrl Laboratories, Llc | Robotic control device and method for manipulating a hand-held tool |
US9794533B2 (en) | 2006-01-31 | 2017-10-17 | Andrew Flessas | Robotically controlled entertainment elements |
US9823693B2 (en) | 2014-08-26 | 2017-11-21 | Andrew Flessas | Robotically controlled convertible display |
US20170337509A1 (en) * | 2016-05-23 | 2017-11-23 | 3Vc Action Apps, Llc | Methods, systems and devices for improved order fulfillment |
US20180056505A1 (en) * | 2014-07-24 | 2018-03-01 | X Development Llc | Methods and Systems for Generating Instructions for a Robotic System to Carry Out a Task |
US9959531B2 (en) | 2011-08-18 | 2018-05-01 | Visa International Service Association | Multi-directional wallet connector apparatuses, methods and systems |
US20180130196A1 (en) * | 2016-11-04 | 2018-05-10 | Loveland Innovations, LLC | Systems and methods for adaptive property analysis via autonomous vehicles |
US9975241B2 (en) * | 2015-12-03 | 2018-05-22 | Intel Corporation | Machine object determination based on human interaction |
US10017322B2 (en) | 2016-04-01 | 2018-07-10 | Wal-Mart Stores, Inc. | Systems and methods for moving pallets via unmanned motorized unit-guided forklifts |
US10089530B2 (en) | 2016-11-04 | 2018-10-02 | Loveland Innovations, LLC | Systems and methods for autonomous perpendicular imaging of test squares |
US10102428B2 (en) | 2017-02-27 | 2018-10-16 | Loveland Innovations, LLC | Systems and methods for surface and subsurface damage assessments, patch scans, and visualization |
US10121129B2 (en) | 2011-07-05 | 2018-11-06 | Visa International Service Association | Electronic wallet checkout platform apparatuses, methods and systems |
US10154084B2 (en) | 2011-07-05 | 2018-12-11 | Visa International Service Association | Hybrid applications utilizing distributed models and views apparatuses, methods and systems |
US10223730B2 (en) | 2011-09-23 | 2019-03-05 | Visa International Service Association | E-wallet store injection search apparatuses, methods and systems |
US10223691B2 (en) | 2011-02-22 | 2019-03-05 | Visa International Service Association | Universal electronic payment apparatuses, methods and systems |
US20190072938A1 (en) * | 2012-03-27 | 2019-03-07 | Sirqul, Inc. | Controlling distributed device operations |
US10242358B2 (en) | 2011-08-18 | 2019-03-26 | Visa International Service Association | Remote decoupled application persistent state apparatuses, methods and systems |
US10262001B2 (en) | 2012-02-02 | 2019-04-16 | Visa International Service Association | Multi-source, multi-dimensional, cross-entity, multimedia merchant analytics database platform apparatuses, methods and systems |
US10259117B2 (en) * | 2016-08-02 | 2019-04-16 | At&T Intellectual Property I, L.P. | On-demand robot virtualization |
US10346794B2 (en) | 2015-03-06 | 2019-07-09 | Walmart Apollo, Llc | Item monitoring system and method |
CN110430976A (en) * | 2017-01-27 | 2019-11-08 | 隆萨有限公司 | Dynamic control automation system |
CN110603571A (en) * | 2017-04-26 | 2019-12-20 | Abb瑞士股份有限公司 | Robot system and method for operating a robot |
US10513038B2 (en) * | 2016-03-16 | 2019-12-24 | Fuji Xerox Co., Ltd. | Robot control system |
US10521664B2 (en) | 2016-11-04 | 2019-12-31 | Loveland Innovations, LLC | Systems and methods for autonomous perpendicular imaging of test squares |
US10586227B2 (en) | 2011-02-16 | 2020-03-10 | Visa International Service Association | Snap mobile payment apparatuses, methods and systems |
US20200234394A1 (en) * | 2015-05-20 | 2020-07-23 | Digimarc Corporation | Image processing methods and arrangements useful in automated store shelf inspections |
US10733443B2 (en) | 2018-08-24 | 2020-08-04 | Loveland Innovations, LLC | Image analysis and estimation of rooftop solar exposure |
US20200246977A1 (en) * | 2017-08-09 | 2020-08-06 | Emotech Ltd. | Robots, methods, computer programs, computer-readable media, arrays of microphones and controllers |
US10825001B2 (en) | 2011-08-18 | 2020-11-03 | Visa International Service Association | Multi-directional wallet connector apparatuses, methods and systems |
US10825346B2 (en) | 2016-11-04 | 2020-11-03 | Loveland Innovations, LLC | Systems and methods for adaptive property analysis via autonomous vehicles |
US10948923B2 (en) * | 2017-02-27 | 2021-03-16 | Vorwerk & Co. Interholding Gmbh | Method for operating a self-traveling robot |
US10984182B2 (en) | 2017-05-12 | 2021-04-20 | Loveland Innovations, LLC | Systems and methods for context-rich annotation and report generation for UAV microscan data |
US20210149372A1 (en) * | 2019-11-14 | 2021-05-20 | Electronics And Telecommunications Research Institute | Robots working in shifts and shift rotation method therefor |
US11037138B2 (en) | 2011-08-18 | 2021-06-15 | Visa International Service Association | Third-party value added wallet features and interfaces apparatuses, methods, and systems |
US11046562B2 (en) | 2015-03-06 | 2021-06-29 | Walmart Apollo, Llc | Shopping facility assistance systems, devices and methods |
US11097841B2 (en) | 2017-10-24 | 2021-08-24 | Loveland Innovations, LLC | Crisscross boustrophedonic flight patterns for UAV scanning and imaging |
US11144066B1 (en) | 2018-01-31 | 2021-10-12 | AI Incorporated | Autonomous refuse bag replacement system |
US11144056B1 (en) | 2018-01-12 | 2021-10-12 | AI Incorporated | Autonomous refuse container replacement system |
US11188095B1 (en) | 2017-07-31 | 2021-11-30 | AI Incorporated | Systems and methods for sending scheduling information to a robotic device |
US11188753B2 (en) * | 2019-09-19 | 2021-11-30 | Lg Electronics Inc. | Method of using a heterogeneous position information acquisition mechanism in an operating space and robot and cloud server implementing the same |
US11205072B2 (en) | 2018-08-24 | 2021-12-21 | Loveland Innovations, LLC | Solar ray mapping via divergent beam modeling |
US11210514B2 (en) | 2018-08-24 | 2021-12-28 | Loveland Innovations, LLC | Image analysis and estimation of rooftop solar exposure via solar ray mapping |
US11240854B2 (en) | 2017-08-22 | 2022-02-01 | AI Incorporated | Methods and systems for pairing mobile robotic device docking stations with a wireless router and cloud service |
US11246004B2 (en) | 2019-04-16 | 2022-02-08 | Milwaukee Electric Tool Corporation | Power tool geofence tracking and dashboard |
US11284048B2 (en) | 2006-01-31 | 2022-03-22 | Andrew Flessas | Robotically controlled display |
US11288661B2 (en) | 2011-02-16 | 2022-03-29 | Visa International Service Association | Snap mobile payment apparatuses, methods and systems |
US11350064B2 (en) | 2019-08-29 | 2022-05-31 | Andrew Flessas | Method and system for moving cameras using robotic mounts |
US11398001B2 (en) * | 2012-05-28 | 2022-07-26 | Tulip.Io Inc. | Order processing systems using picking robots |
US11425308B2 (en) | 2020-12-02 | 2022-08-23 | Andrew Flessas | Robotically movable display synchronously movable with robotically movable camera for displaying captured images in identical orientation |
US11532116B2 (en) | 2020-10-30 | 2022-12-20 | Loveland Innovations, Inc. | Graphical user interface for controlling a solar ray mapping |
US11580454B2 (en) * | 2017-09-12 | 2023-02-14 | Cloudminds Robotics Co., Ltd. | Dynamic learning method and system for robot, robot and cloud server |
US11809200B1 (en) * | 2019-12-06 | 2023-11-07 | Florida A&M University | Machine learning based reconfigurable mobile agents using swarm system manufacturing |
US20230374746A1 (en) * | 2015-03-06 | 2023-11-23 | Walmart Apollo, Llc | Apparatus and method of monitoring product placement within a shopping facility |
Citations (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4130873A (en) * | 1974-12-20 | 1978-12-19 | Societa di Elettronica per l'Automazione -- SEPA Societa per Azioni | Automatic machine with articulated mechanical arm |
US6076025A (en) * | 1997-01-29 | 2000-06-13 | Honda Giken Kogyo K.K. | Mobile robot steering method and control device |
US6529802B1 (en) * | 1998-06-23 | 2003-03-04 | Sony Corporation | Robot and information processing system |
US20060195598A1 (en) | 2003-03-28 | 2006-08-31 | Masahiro Fujita | Information providing device,method, and information providing system |
WO2008070208A2 (en) | 2006-07-05 | 2008-06-12 | Battelle Energy Alliance, Llc | Multi-robot control interface |
US20080243305A1 (en) | 2007-03-30 | 2008-10-02 | Sungkyunkwan University Foundation For Corporate Collaboration | Central information processing system and method for service robot having layered information structure according to recognition and reasoning level |
US20100145512A1 (en) | 2006-01-31 | 2010-06-10 | Andy Flessas | Method and system for transmitting robot control instructions |
US7751936B2 (en) * | 2005-01-10 | 2010-07-06 | Robomation Co., Ltd. | Processing method for playing multimedia content including motion control information in network-based robot system |
US7813835B2 (en) * | 2002-03-15 | 2010-10-12 | Sony Corporation | Robot behavior control system, behavior control method, and robot device |
US7911477B2 (en) * | 2001-01-26 | 2011-03-22 | Access Systems Americas, Inc. | Adaptive content delivery |
US20110077802A1 (en) | 2005-12-02 | 2011-03-31 | Halloran Michael J | Robot System |
-
2011
- 2011-10-27 US US13/283,369 patent/US8380349B1/en active Active
Patent Citations (11)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4130873A (en) * | 1974-12-20 | 1978-12-19 | Societa di Elettronica per l'Automazione -- SEPA Societa per Azioni | Automatic machine with articulated mechanical arm |
US6076025A (en) * | 1997-01-29 | 2000-06-13 | Honda Giken Kogyo K.K. | Mobile robot steering method and control device |
US6529802B1 (en) * | 1998-06-23 | 2003-03-04 | Sony Corporation | Robot and information processing system |
US7911477B2 (en) * | 2001-01-26 | 2011-03-22 | Access Systems Americas, Inc. | Adaptive content delivery |
US7813835B2 (en) * | 2002-03-15 | 2010-10-12 | Sony Corporation | Robot behavior control system, behavior control method, and robot device |
US20060195598A1 (en) | 2003-03-28 | 2006-08-31 | Masahiro Fujita | Information providing device,method, and information providing system |
US7751936B2 (en) * | 2005-01-10 | 2010-07-06 | Robomation Co., Ltd. | Processing method for playing multimedia content including motion control information in network-based robot system |
US20110077802A1 (en) | 2005-12-02 | 2011-03-31 | Halloran Michael J | Robot System |
US20100145512A1 (en) | 2006-01-31 | 2010-06-10 | Andy Flessas | Method and system for transmitting robot control instructions |
WO2008070208A2 (en) | 2006-07-05 | 2008-06-12 | Battelle Energy Alliance, Llc | Multi-robot control interface |
US20080243305A1 (en) | 2007-03-30 | 2008-10-02 | Sungkyunkwan University Foundation For Corporate Collaboration | Central information processing system and method for service robot having layered information structure according to recognition and reasoning level |
Non-Patent Citations (1)
Title |
---|
What is RoboEarth?, http://www.roboearth.org/. |
Cited By (157)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US10764544B2 (en) | 2006-01-31 | 2020-09-01 | Andrew Flessas | Robotically controlled entertainment elements |
US10257479B2 (en) | 2006-01-31 | 2019-04-09 | Andrew Flessas | Robotically controlled entertainment elements |
US20150015781A1 (en) * | 2006-01-31 | 2015-01-15 | Andrew Flessas | Robotically controlled video projectors |
US9497431B2 (en) * | 2006-01-31 | 2016-11-15 | Andrew Flessas | Robotically controlled video projectors |
US11284048B2 (en) | 2006-01-31 | 2022-03-22 | Andrew Flessas | Robotically controlled display |
US11683456B2 (en) | 2006-01-31 | 2023-06-20 | Andrew Flessas | Robotically controlled display |
US9794533B2 (en) | 2006-01-31 | 2017-10-17 | Andrew Flessas | Robotically controlled entertainment elements |
US20140002253A1 (en) * | 2010-12-21 | 2014-01-02 | Kerim Yilmaz | Motor vehicle |
US10586227B2 (en) | 2011-02-16 | 2020-03-10 | Visa International Service Association | Snap mobile payment apparatuses, methods and systems |
US11288661B2 (en) | 2011-02-16 | 2022-03-29 | Visa International Service Association | Snap mobile payment apparatuses, methods and systems |
US10223691B2 (en) | 2011-02-22 | 2019-03-05 | Visa International Service Association | Universal electronic payment apparatuses, methods and systems |
US11023886B2 (en) | 2011-02-22 | 2021-06-01 | Visa International Service Association | Universal electronic payment apparatuses, methods and systems |
US9613180B1 (en) * | 2011-06-02 | 2017-04-04 | Hrl Laboratories, Llc | Robotic control device and method for manipulating a hand-held tool |
US11900359B2 (en) | 2011-07-05 | 2024-02-13 | Visa International Service Association | Electronic wallet checkout platform apparatuses, methods and systems |
US10121129B2 (en) | 2011-07-05 | 2018-11-06 | Visa International Service Association | Electronic wallet checkout platform apparatuses, methods and systems |
US11010753B2 (en) | 2011-07-05 | 2021-05-18 | Visa International Service Association | Electronic wallet checkout platform apparatuses, methods and systems |
US10803449B2 (en) | 2011-07-05 | 2020-10-13 | Visa International Service Association | Electronic wallet checkout platform apparatuses, methods and systems |
US10154084B2 (en) | 2011-07-05 | 2018-12-11 | Visa International Service Association | Hybrid applications utilizing distributed models and views apparatuses, methods and systems |
US10419529B2 (en) | 2011-07-05 | 2019-09-17 | Visa International Service Association | Hybrid applications utilizing distributed models and views apparatuses, methods and systems |
US11397931B2 (en) | 2011-08-18 | 2022-07-26 | Visa International Service Association | Multi-directional wallet connector apparatuses, methods and systems |
US11037138B2 (en) | 2011-08-18 | 2021-06-15 | Visa International Service Association | Third-party value added wallet features and interfaces apparatuses, methods, and systems |
US11803825B2 (en) | 2011-08-18 | 2023-10-31 | Visa International Service Association | Multi-directional wallet connector apparatuses, methods and systems |
US11010756B2 (en) | 2011-08-18 | 2021-05-18 | Visa International Service Association | Remote decoupled application persistent state apparatuses, methods and systems |
US10242358B2 (en) | 2011-08-18 | 2019-03-26 | Visa International Service Association | Remote decoupled application persistent state apparatuses, methods and systems |
US10825001B2 (en) | 2011-08-18 | 2020-11-03 | Visa International Service Association | Multi-directional wallet connector apparatuses, methods and systems |
US10354240B2 (en) | 2011-08-18 | 2019-07-16 | Visa International Service Association | Multi-directional wallet connector apparatuses, methods and systems |
US11763294B2 (en) | 2011-08-18 | 2023-09-19 | Visa International Service Association | Remote decoupled application persistent state apparatuses, methods and systems |
US9959531B2 (en) | 2011-08-18 | 2018-05-01 | Visa International Service Association | Multi-directional wallet connector apparatuses, methods and systems |
US10223730B2 (en) | 2011-09-23 | 2019-03-05 | Visa International Service Association | E-wallet store injection search apparatuses, methods and systems |
US11354723B2 (en) | 2011-09-23 | 2022-06-07 | Visa International Service Association | Smart shopping cart with E-wallet store injection search |
US9753878B2 (en) * | 2011-11-02 | 2017-09-05 | Intel Corporation | Extending the capabilities of existing devices without making modifications to the existing devices |
US20140101465A1 (en) * | 2011-11-02 | 2014-04-10 | Randolph Y. Wang | Extending the capabilities of existing devices without making modifications to the existing devices |
US10430381B2 (en) | 2012-02-02 | 2019-10-01 | Visa International Service Association | Multi-source, multi-dimensional, cross-entity, multimedia centralized personal information database platform apparatuses, methods and systems |
US11036681B2 (en) | 2012-02-02 | 2021-06-15 | Visa International Service Association | Multi-source, multi-dimensional, cross-entity, multimedia analytical model sharing database platform apparatuses, methods and systems |
US11074218B2 (en) | 2012-02-02 | 2021-07-27 | Visa International Service Association | Multi-source, multi-dimensional, cross-entity, multimedia merchant analytics database platform apparatuses, methods and systems |
US10983960B2 (en) | 2012-02-02 | 2021-04-20 | Visa International Service Association | Multi-source, multi-dimensional, cross-entity, multimedia centralized personal information database platform apparatuses, methods and systems |
US10262001B2 (en) | 2012-02-02 | 2019-04-16 | Visa International Service Association | Multi-source, multi-dimensional, cross-entity, multimedia merchant analytics database platform apparatuses, methods and systems |
US20130290234A1 (en) * | 2012-02-02 | 2013-10-31 | Visa International Service Association | Intelligent Consumer Service Terminal Apparatuses, Methods and Systems |
US20150148957A1 (en) * | 2012-02-07 | 2015-05-28 | Google Inc. | Systems and Methods for Determining a Status of a Component of a Device |
US9327404B2 (en) * | 2012-02-07 | 2016-05-03 | Google Inc. | Systems and methods for determining a status of a component of a device |
US9802318B2 (en) | 2012-02-07 | 2017-10-31 | X Development Llc | Systems and methods for determining a status of a component of a device |
US9486922B2 (en) * | 2012-02-07 | 2016-11-08 | X Development Llc | Systems and methods for determining a status of a component of a device |
US20190072938A1 (en) * | 2012-03-27 | 2019-03-07 | Sirqul, Inc. | Controlling distributed device operations |
US11398001B2 (en) * | 2012-05-28 | 2022-07-26 | Tulip.Io Inc. | Order processing systems using picking robots |
US9259840B1 (en) * | 2013-03-13 | 2016-02-16 | Hrl Laboratories, Llc | Device and method to localize and control a tool tip with a robot arm |
US9144905B1 (en) * | 2013-03-13 | 2015-09-29 | Hrl Laboratories, Llc | Device and method to identify functional parts of tools for robotic manipulation |
US9233469B2 (en) * | 2014-02-13 | 2016-01-12 | GM Global Technology Operations LLC | Robotic system with 3D box location functionality |
US20150224648A1 (en) * | 2014-02-13 | 2015-08-13 | GM Global Technology Operations LLC | Robotic system with 3d box location functionality |
US10507577B2 (en) * | 2014-07-24 | 2019-12-17 | X Development Llc | Methods and systems for generating instructions for a robotic system to carry out a task |
CN110232433A (en) * | 2014-07-24 | 2019-09-13 | X开发有限责任公司 | Method and system for generating instructions for a robotic system to perform a task |
US20180056505A1 (en) * | 2014-07-24 | 2018-03-01 | X Development Llc | Methods and Systems for Generating Instructions for a Robotic System to Carry Out a Task |
CN110232433B (en) * | 2014-07-24 | 2023-08-01 | X开发有限责任公司 | Method and system for generating instructions for robotic system to perform tasks |
US10684643B2 (en) | 2014-08-26 | 2020-06-16 | Andrew Flessas | Robotically controlled convertible display |
US11520373B2 (en) | 2014-08-26 | 2022-12-06 | Andrew Flessas | Robotically controlled, convertible staircase |
US9823693B2 (en) | 2014-08-26 | 2017-11-21 | Andrew Flessas | Robotically controlled convertible display |
WO2016073103A1 (en) * | 2014-11-03 | 2016-05-12 | Qualcomm Incorporated | Communicating configurable instruction sets to robots for controlling robot behavior |
US20160246297A1 (en) * | 2015-02-24 | 2016-08-25 | Siemens Corporation | Cloud-based control system for unmanned aerial vehicles |
US10486951B2 (en) | 2015-03-06 | 2019-11-26 | Walmart Apollo, Llc | Trash can monitoring systems and methods |
US11761160B2 (en) * | 2015-03-06 | 2023-09-19 | Walmart Apollo, Llc | Apparatus and method of monitoring product placement within a shopping facility |
US10239739B2 (en) | 2015-03-06 | 2019-03-26 | Walmart Apollo, Llc | Motorized transport unit worker support systems and methods |
US10239740B2 (en) | 2015-03-06 | 2019-03-26 | Walmart Apollo, Llc | Shopping facility assistance system and method having a motorized transport unit that selectively leads or follows a user within a shopping facility |
US9994434B2 (en) | 2015-03-06 | 2018-06-12 | Wal-Mart Stores, Inc. | Overriding control of motorize transport unit systems, devices and methods |
US11034563B2 (en) * | 2015-03-06 | 2021-06-15 | Walmart Apollo, Llc | Apparatus and method of monitoring product placement within a shopping facility |
US11840814B2 (en) | 2015-03-06 | 2023-12-12 | Walmart Apollo, Llc | Overriding control of motorized transport unit systems, devices and methods |
US10280054B2 (en) | 2015-03-06 | 2019-05-07 | Walmart Apollo, Llc | Shopping facility assistance systems, devices and methods |
US10287149B2 (en) | 2015-03-06 | 2019-05-14 | Walmart Apollo, Llc | Assignment of a motorized personal assistance apparatus |
US20190169005A1 (en) * | 2015-03-06 | 2019-06-06 | Walmart Apollo, Llc | Apparatus and method of monitoring product placement within a shopping facility |
US10315897B2 (en) | 2015-03-06 | 2019-06-11 | Walmart Apollo, Llc | Systems, devices and methods for determining item availability in a shopping space |
US10336592B2 (en) | 2015-03-06 | 2019-07-02 | Walmart Apollo, Llc | Shopping facility assistance systems, devices, and methods to facilitate returning items to their respective departments |
US10346794B2 (en) | 2015-03-06 | 2019-07-09 | Walmart Apollo, Llc | Item monitoring system and method |
US10189692B2 (en) | 2015-03-06 | 2019-01-29 | Walmart Apollo, Llc | Systems, devices and methods for restoring shopping space conditions |
US10351399B2 (en) | 2015-03-06 | 2019-07-16 | Walmart Apollo, Llc | Systems, devices and methods of controlling motorized transport units in fulfilling product orders |
US10351400B2 (en) | 2015-03-06 | 2019-07-16 | Walmart Apollo, Llc | Apparatus and method of obtaining location information of a motorized transport unit |
US10358326B2 (en) | 2015-03-06 | 2019-07-23 | Walmart Apollo, Llc | Shopping facility assistance systems, devices and methods |
US10189691B2 (en) | 2015-03-06 | 2019-01-29 | Walmart Apollo, Llc | Shopping facility track system and method of routing motorized transport units |
US10138100B2 (en) | 2015-03-06 | 2018-11-27 | Walmart Apollo, Llc | Recharging apparatus and method |
US10130232B2 (en) | 2015-03-06 | 2018-11-20 | Walmart Apollo, Llc | Shopping facility assistance systems, devices and methods |
US10435279B2 (en) | 2015-03-06 | 2019-10-08 | Walmart Apollo, Llc | Shopping space route guidance systems, devices and methods |
US20230374746A1 (en) * | 2015-03-06 | 2023-11-23 | Walmart Apollo, Llc | Apparatus and method of monitoring product placement within a shopping facility |
US9534906B2 (en) | 2015-03-06 | 2017-01-03 | Wal-Mart Stores, Inc. | Shopping space mapping systems, devices and methods |
US11046562B2 (en) | 2015-03-06 | 2021-06-29 | Walmart Apollo, Llc | Shopping facility assistance systems, devices and methods |
US10508010B2 (en) | 2015-03-06 | 2019-12-17 | Walmart Apollo, Llc | Shopping facility discarded item sorting systems, devices and methods |
US20210269293A1 (en) * | 2015-03-06 | 2021-09-02 | Walmart Apollo, Llc | Apparatus and method of monitoring product placement within a shopping facility |
US10239738B2 (en) * | 2015-03-06 | 2019-03-26 | Walmart Apollo, Llc | Apparatus and method of monitoring product placement within a shopping facility |
US9757002B2 (en) | 2015-03-06 | 2017-09-12 | Wal-Mart Stores, Inc. | Shopping facility assistance systems, devices and methods that employ voice input |
US10570000B2 (en) | 2015-03-06 | 2020-02-25 | Walmart Apollo, Llc | Shopping facility assistance object detection systems, devices and methods |
US9801517B2 (en) | 2015-03-06 | 2017-10-31 | Wal-Mart Stores, Inc. | Shopping facility assistance object detection systems, devices and methods |
US10597270B2 (en) | 2015-03-06 | 2020-03-24 | Walmart Apollo, Llc | Shopping facility track system and method of routing motorized transport units |
US10611614B2 (en) | 2015-03-06 | 2020-04-07 | Walmart Apollo, Llc | Shopping facility assistance systems, devices and methods to drive movable item containers |
US10633231B2 (en) * | 2015-03-06 | 2020-04-28 | Walmart Apollo, Llc | Apparatus and method of monitoring product placement within a shopping facility |
US10669140B2 (en) | 2015-03-06 | 2020-06-02 | Walmart Apollo, Llc | Shopping facility assistance systems, devices and methods to detect and handle incorrectly placed items |
US10081525B2 (en) | 2015-03-06 | 2018-09-25 | Walmart Apollo, Llc | Shopping facility assistance systems, devices and methods to address ground and weather conditions |
US9908760B2 (en) | 2015-03-06 | 2018-03-06 | Wal-Mart Stores, Inc. | Shopping facility assistance systems, devices and methods to drive movable item containers |
US11679969B2 (en) | 2015-03-06 | 2023-06-20 | Walmart Apollo, Llc | Shopping facility assistance systems, devices and methods |
US9896315B2 (en) | 2015-03-06 | 2018-02-20 | Wal-Mart Stores, Inc. | Systems, devices and methods of controlling motorized transport units in fulfilling product orders |
US10071892B2 (en) | 2015-03-06 | 2018-09-11 | Walmart Apollo, Llc | Apparatus and method of obtaining location information of a motorized transport unit |
US10071893B2 (en) | 2015-03-06 | 2018-09-11 | Walmart Apollo, Llc | Shopping facility assistance system and method to retrieve in-store abandoned mobile item containers |
US9875502B2 (en) | 2015-03-06 | 2018-01-23 | Wal-Mart Stores, Inc. | Shopping facility assistance systems, devices, and methods to identify security and safety anomalies |
US10815104B2 (en) | 2015-03-06 | 2020-10-27 | Walmart Apollo, Llc | Recharging apparatus and method |
US10071891B2 (en) | 2015-03-06 | 2018-09-11 | Walmart Apollo, Llc | Systems, devices, and methods for providing passenger transport |
US9875503B2 (en) | 2015-03-06 | 2018-01-23 | Wal-Mart Stores, Inc. | Method and apparatus for transporting a plurality of stacked motorized transport units |
US10875752B2 (en) | 2015-03-06 | 2020-12-29 | Walmart Apollo, Llc | Systems, devices and methods of providing customer support in locating products |
US11587195B2 (en) * | 2015-05-20 | 2023-02-21 | Digimarc Corporation | Image processing methods and arrangements useful in automated store shelf inspections |
US20200234394A1 (en) * | 2015-05-20 | 2020-07-23 | Digimarc Corporation | Image processing methods and arrangements useful in automated store shelf inspections |
US9889559B2 (en) * | 2015-06-26 | 2018-02-13 | Intel Corporation | Robotic system for updating devices |
US20160375579A1 (en) * | 2015-06-26 | 2016-12-29 | Intel Corporation | Robotic system for updating devices |
WO2017049610A1 (en) * | 2015-09-25 | 2017-03-30 | Intel Corporation | Telerobotic controller |
US10254744B2 (en) * | 2015-09-25 | 2019-04-09 | Intel Corporation | Telerobotic controller |
US9975241B2 (en) * | 2015-12-03 | 2018-05-22 | Intel Corporation | Machine object determination based on human interaction |
US10513038B2 (en) * | 2016-03-16 | 2019-12-24 | Fuji Xerox Co., Ltd. | Robot control system |
US10214400B2 (en) | 2016-04-01 | 2019-02-26 | Walmart Apollo, Llc | Systems and methods for moving pallets via unmanned motorized unit-guided forklifts |
US10017322B2 (en) | 2016-04-01 | 2018-07-10 | Wal-Mart Stores, Inc. | Systems and methods for moving pallets via unmanned motorized unit-guided forklifts |
US20170337509A1 (en) * | 2016-05-23 | 2017-11-23 | 3Vc Action Apps, Llc | Methods, systems and devices for improved order fulfillment |
US11103995B2 (en) | 2016-08-02 | 2021-08-31 | At&T Intellectual Property I, L.P. | On-demand robot virtualization |
US10259117B2 (en) * | 2016-08-02 | 2019-04-16 | At&T Intellectual Property I, L.P. | On-demand robot virtualization |
US20180130196A1 (en) * | 2016-11-04 | 2018-05-10 | Loveland Innovations, LLC | Systems and methods for adaptive property analysis via autonomous vehicles |
US11720104B2 (en) | 2016-11-04 | 2023-08-08 | Loveland Innovations, Inc. | Systems and methods for adaptive property analysis via autonomous vehicles |
US10089529B2 (en) | 2016-11-04 | 2018-10-02 | Loveland Innovations, LLC | Systems and methods for adaptive scanning based on calculated shadows |
US10825346B2 (en) | 2016-11-04 | 2020-11-03 | Loveland Innovations, LLC | Systems and methods for adaptive property analysis via autonomous vehicles |
US10089530B2 (en) | 2016-11-04 | 2018-10-02 | Loveland Innovations, LLC | Systems and methods for autonomous perpendicular imaging of test squares |
US10810426B2 (en) | 2016-11-04 | 2020-10-20 | Loveland Innovations, LLC | Systems and methods for autonomous perpendicular imaging of test squares |
US9996746B1 (en) * | 2016-11-04 | 2018-06-12 | Loveland Innovations, LLC | Systems and methods for autonomous perpendicular imaging with a target field of view |
US10521664B2 (en) | 2016-11-04 | 2019-12-31 | Loveland Innovations, LLC | Systems and methods for autonomous perpendicular imaging of test squares |
US10055831B2 (en) * | 2016-11-04 | 2018-08-21 | Loveland Innovations, LLC | Systems and methods for adaptive property analysis via autonomous vehicles |
US20180165503A1 (en) * | 2016-11-04 | 2018-06-14 | Loveland Innovations, LLC | Systems and methods for autonomous perpendicular imaging with a target field of view |
CN110430976B (en) * | 2017-01-27 | 2024-02-06 | 隆萨有限公司 | Dynamic control automation system |
CN110430976A (en) * | 2017-01-27 | 2019-11-08 | 隆萨有限公司 | Dynamic control automation system |
US10102428B2 (en) | 2017-02-27 | 2018-10-16 | Loveland Innovations, LLC | Systems and methods for surface and subsurface damage assessments, patch scans, and visualization |
US10948923B2 (en) * | 2017-02-27 | 2021-03-16 | Vorwerk & Co. Interholding Gmbh | Method for operating a self-traveling robot |
CN110603571B (en) * | 2017-04-26 | 2023-11-03 | Abb瑞士股份有限公司 | Robot system and method for operating a robot |
CN110603571A (en) * | 2017-04-26 | 2019-12-20 | Abb瑞士股份有限公司 | Robot system and method for operating a robot |
US10984182B2 (en) | 2017-05-12 | 2021-04-20 | Loveland Innovations, LLC | Systems and methods for context-rich annotation and report generation for UAV microscan data |
US11188095B1 (en) | 2017-07-31 | 2021-11-30 | AI Incorporated | Systems and methods for sending scheduling information to a robotic device |
US11806862B2 (en) * | 2017-08-09 | 2023-11-07 | Emotech Ltd. | Robots, methods, computer programs, computer-readable media, arrays of microphones and controllers |
US20200246977A1 (en) * | 2017-08-09 | 2020-08-06 | Emotech Ltd. | Robots, methods, computer programs, computer-readable media, arrays of microphones and controllers |
US11240854B2 (en) | 2017-08-22 | 2022-02-01 | AI Incorporated | Methods and systems for pairing mobile robotic device docking stations with a wireless router and cloud service |
US11589402B1 (en) | 2017-08-22 | 2023-02-21 | AI Incorporated | Methods and systems for pairing mobile robotic device docking stations with a wireless router and cloud service |
US11580454B2 (en) * | 2017-09-12 | 2023-02-14 | Cloudminds Robotics Co., Ltd. | Dynamic learning method and system for robot, robot and cloud server |
US11731762B2 (en) | 2017-10-24 | 2023-08-22 | Loveland Innovations, Inc. | Crisscross boustrophedonic flight patterns for UAV scanning and imaging |
US11097841B2 (en) | 2017-10-24 | 2021-08-24 | Loveland Innovations, LLC | Crisscross boustrophedonic flight patterns for UAV scanning and imaging |
US11144056B1 (en) | 2018-01-12 | 2021-10-12 | AI Incorporated | Autonomous refuse container replacement system |
US11144066B1 (en) | 2018-01-31 | 2021-10-12 | AI Incorporated | Autonomous refuse bag replacement system |
US11188751B2 (en) | 2018-08-24 | 2021-11-30 | Loveland Innovations, LLC | Image analysis and estimation of rooftop solar exposure |
US10733443B2 (en) | 2018-08-24 | 2020-08-04 | Loveland Innovations, LLC | Image analysis and estimation of rooftop solar exposure |
US11878797B2 (en) | 2018-08-24 | 2024-01-23 | Loveland Innovations, Inc. | Image analysis and estimation of rooftop solar exposure |
US11783544B2 (en) | 2018-08-24 | 2023-10-10 | Loveland Innovations, Inc. | Solar ray mapping via divergent beam modeling |
US11205072B2 (en) | 2018-08-24 | 2021-12-21 | Loveland Innovations, LLC | Solar ray mapping via divergent beam modeling |
US11210514B2 (en) | 2018-08-24 | 2021-12-28 | Loveland Innovations, LLC | Image analysis and estimation of rooftop solar exposure via solar ray mapping |
US11246004B2 (en) | 2019-04-16 | 2022-02-08 | Milwaukee Electric Tool Corporation | Power tool geofence tracking and dashboard |
US11665504B2 (en) | 2019-04-16 | 2023-05-30 | Milwaukee Electric Tool Corporation | Power tool geofence tracking and dashboard |
US11350064B2 (en) | 2019-08-29 | 2022-05-31 | Andrew Flessas | Method and system for moving cameras using robotic mounts |
US11188753B2 (en) * | 2019-09-19 | 2021-11-30 | Lg Electronics Inc. | Method of using a heterogeneous position information acquisition mechanism in an operating space and robot and cloud server implementing the same |
US20210149372A1 (en) * | 2019-11-14 | 2021-05-20 | Electronics And Telecommunications Research Institute | Robots working in shifts and shift rotation method therefor |
US11809200B1 (en) * | 2019-12-06 | 2023-11-07 | Florida A&M University | Machine learning based reconfigurable mobile agents using swarm system manufacturing |
US11699261B2 (en) | 2020-10-30 | 2023-07-11 | Loveland Innovations, Inc. | Graphical user interface for controlling a solar ray mapping |
US11532116B2 (en) | 2020-10-30 | 2022-12-20 | Loveland Innovations, Inc. | Graphical user interface for controlling a solar ray mapping |
US11425308B2 (en) | 2020-12-02 | 2022-08-23 | Andrew Flessas | Robotically movable display synchronously movable with robotically movable camera for displaying captured images in identical orientation |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US8380349B1 (en) | Methods and systems for providing instructions to a robotic device | |
US9895802B1 (en) | Projection of interactive map data | |
US8386078B1 (en) | Methods and systems for providing a data library for robotic devices | |
US10391633B1 (en) | Systems and methods for inventorying objects | |
US8447863B1 (en) | Systems and methods for object recognition | |
US10168690B2 (en) | Methods and systems for multirobotic management | |
US8478901B1 (en) | Methods and systems for robot cloud computing using slug trails | |
JP6440745B2 (en) | Method and system for augmented reality displaying a virtual representation of the action of a robotic device | |
US9399294B1 (en) | Displaying estimated image data in a user interface | |
US8374421B1 (en) | Methods and systems for extracting still frames from a compressed video | |
US10507577B2 (en) | Methods and systems for generating instructions for a robotic system to carry out a task | |
US8594845B1 (en) | Methods and systems for robotic proactive informational retrieval from ambient context | |
US8428777B1 (en) | Methods and systems for distributing tasks among robotic devices | |
US8525836B1 (en) | Systems and methods for representing information associated with objects in an area | |
US10011013B2 (en) | Cloud-based analysis of robotic system component usage | |
US8947522B1 (en) | Systems and methods to adjust actions based on latency levels | |
US8380652B1 (en) | Methods and systems for autonomous robotic decision making | |
US8307061B1 (en) | System and method for determining manufacturer instructions executable by a robotic device | |
US9116962B1 (en) | Context dependent recognition | |
US10241478B2 (en) | Determining states and modifying environments according to states | |
US8406926B1 (en) | Methods and systems for robotic analysis of environmental conditions and response thereto | |
WO2020015682A1 (en) | System and method for controlling unmanned aerial vehicle | |
US20150153822A1 (en) | Rapidly programmable volumes | |
US8525853B1 (en) | Methods and systems for generating a layered display of a device |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNORS:HICKMAN, RYAN;KOHLER, DAMON;SIGNING DATES FROM 20111014 TO 20111026;REEL/FRAME:027141/0347 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
FPAY | Fee payment |
Year of fee payment: 4 |
|
AS | Assignment |
Owner name: X DEVELOPMENT LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GOOGLE INC.;REEL/FRAME:039900/0610Effective date: 20160901 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044142/0357Effective date: 20170929 |
|
AS | Assignment |
Owner name: X DEVELOPMENT LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:GOOGLE INC.;REEL/FRAME:047631/0671Effective date: 20160901 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CORRECTIVE ASSIGNMENT TO CORRECT THE CORRECTIVE BY NULLIFICATIONTO CORRECT INCORRECTLY RECORDED APPLICATION NUMBERS PREVIOUSLY RECORDED ON REEL 044142 FRAME 0357. ASSIGNOR(S) HEREBY CONFIRMS THE CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:047837/0678Effective date: 20170929 |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 8TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1552); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 8 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:X DEVELOPMENT LLC;REEL/FRAME:064658/0001Effective date: 20230401 |
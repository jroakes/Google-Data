CN108881372A - The transparent upgrading of system service or application - Google Patents
The transparent upgrading of system service or application Download PDFInfo
- Publication number
- CN108881372A CN108881372A CN201810391505.3A CN201810391505A CN108881372A CN 108881372 A CN108881372 A CN 108881372A CN 201810391505 A CN201810391505 A CN 201810391505A CN 108881372 A CN108881372 A CN 108881372A
- Authority
- CN
- China
- Prior art keywords
- application example
- application
- state information
- processor
- activation
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Classifications
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/34—Network arrangements or protocols for supporting network services or applications involving the movement of software or configuration parameters
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F8/00—Arrangements for software engineering
- G06F8/60—Software deployment
- G06F8/65—Updates
- G06F8/656—Updates while running
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F8/00—Arrangements for software engineering
- G06F8/60—Software deployment
- G06F8/65—Updates
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L1/00—Arrangements for detecting or preventing errors in the information received
- H04L1/12—Arrangements for detecting or preventing errors in the information received by using return channel
- H04L1/16—Arrangements for detecting or preventing errors in the information received by using return channel in which the return channel carries supervisory signals, e.g. repetition request signals
- H04L1/1607—Details of the supervisory signal
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L47/00—Traffic control in data switching networks
- H04L47/10—Flow control; Congestion control
- H04L47/19—Flow control; Congestion control at layers above the network layer
- H04L47/193—Flow control; Congestion control at layers above the network layer at the transport layer, e.g. TCP related
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L47/00—Traffic control in data switching networks
- H04L47/10—Flow control; Congestion control
- H04L47/27—Evaluation or update of window size, e.g. using information derived from acknowledged [ACK] packets
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L69/00—Network arrangements, protocols or services independent of the application payload and not provided for in the other groups of this subclass
- H04L69/16—Implementation or adaptation of Internet protocol [IP], of transmission control protocol [TCP] or of user datagram protocol [UDP]
- H04L69/161—Implementation details of TCP/IP or UDP/IP stack architecture; Specification of modified or new header fields
- H04L69/162—Implementation details of TCP/IP or UDP/IP stack architecture; Specification of modified or new header fields involving adaptations of sockets based mechanisms
Abstract
This application involves system service or the transparent upgradings of application.Provide the system and method for the upgrade application in the case where not restarting.Processor still can start the second application example while executing in the first application example.First state information aggregate can be transmitted to the second application example by the first application example.Second application example is able to respond the completion in transmission and states to activate ready.First application example is able to respond to be deactivated in statement.Deactivation includes the second set of state information being transmitted to the second application example from the first application example, and discharge single access resource.Second application example can activate.Activation includes receiving the second set of state information and accessing single access resource.Second application example is able to respond the completion in activation and states activation and complete.First application example is able to respond to be terminated in statement.
Description
Technical field
This application involves system service or the transparent upgradings of application.
Background technique
From the system of long-play, often it is necessary to upgrade services or application to integrate minor error reparation, new spy
Sign and/or performance boost.Traditionally, upgrading is related to making a change, and restart as the stopping service of three different steps
Service.Since the process makes service offline or occupies a period of time, it not is transparent and can bothers so upgrading
User.
Summary of the invention
At least one aspect is directed to a kind of system that application is updated in the case where not restarting.The system includes processor
And the memory with the instruction being stored thereon.The instruction is so that the processor executes the first application example.The instruction makes
It obtains the processor and still starts the second application example while executing in the first application example.Second application example includes first
The more new version of application example.The instruction is so that first state information aggregate is transmitted to from the first application example by the processor
Two application examples.The instruction so that the processor by the second application example in response to being transmitted for first state information aggregate and
Statement activation is ready.The instruction is so that the processor deactivates the first application example.Deactivation includes by the second state
Information aggregate is transmitted to the second application example from the first application example.Deactivation includes discharging single access by the first application example
Resource.The instruction is so that the processor activates the second application example.Activation includes receiving second set of state information and visiting
Ask the single access resource.The instruction is so that activation of the processor by the second application example in response to the second application example is completed
And it states activation and completes.The instruction is so that the processor terminates the first application example.
In some embodiments, the instruction can make the processor execute host applications with coordinate the first application example and
Operation between second application example.The host applications can initiate the starting of the second application example, connect from the second application example
It receives to ready statement is activated, submits to receive to ready statement and indicate that the first application example deactivates,
The notice for deactivating and completing is received from the first application example, submits to receive the notice and indicate that the second application example activates,
And terminate the first application example.In some embodiments, which can coordinate third application example and including
Operation between 4th application example of the update of three application examples, wherein third application example and the 4th application example execute with
First application example and the different service of the second application example.
In some embodiments, the first application example periodically can check reservation place with the presence of example for second
Location or port (socket).
In some embodiments, the first state information aggregate may include it is below at least one：Have connected client
The list at end, the position of shared memory space, filec descriptor, and the access for kernel resources.
In some embodiments, which can be written as the first application example and the second application is real
The intermediate form that example can be explained.
In some embodiments, an at least subset for the first state information aggregate can be related to particular clients
Connection, and the subset can be transferred to the intermediate form different from being used to service the form of particular clients via serialization.
In some embodiments, second set of state information may include it is below at least one：TCP congestion window
Size, the sequence identifier being arbitrarily grouped in transmission, and be received but the still unacknowledged sequence identifier being arbitrarily grouped.
In some embodiments, which can make the processor：It is maintained at and starts to remove the first application example
Activation and completion are to the block period between the activation of the second application example, and first application is real during the block period
Example and the second application example, which will not all input any user, to be responded.
At least one aspect is directed to a kind of method that application is updated in the case where not restarting.This method include by
It manages device and executes the first application example.This method includes still starting second while executing in the first application example by the processor
Application example.Second application example includes the more new version of the first application example.This method includes by the processor by first
Set of state information is transmitted to the second application example from the first application example.This method includes by the second application example in response to
One being transmitted for set of state information and state to activate ready.This method includes by the processor to the first application example
It deactivates.Deactivation includes that the second set of state information is transmitted to the second application example from the first application example.Deactivate packet
It includes and single access resource is discharged by the first application example.This method includes activating the second application example by the processor.Activation packet
It includes and receives second set of state information and access the single access resource.This method include by the second application example in response to
The activation of second application example is completed and states activation and complete.This method includes terminating the first application example by the processor.
In some embodiments, this method includes executing host applications by the processor to coordinate the first application example and the
Operation between two application examples.The host applications can initiate the starting of the second application example, receive from the second application example
To ready statement is activated, submit to receive to ready statement and indicate that the first application example deactivates, from
First application example receives the notice for deactivating and completing, and submits to receive the notice and indicate that the second application example activates, and
And terminate the first application example.In some embodiments, which can coordinate third application example and including third
Operation between 4th application example of the update of application example, wherein third application example and the 4th application example execute and the
One application example and the different service of the second application example.
In some embodiments, the presence that this method can use example for second by first application example
Inspect periodically presumptive address or port.
In some embodiments, the first state information aggregate may include it is below at least one：Have connected client
The list at end, the position of shared memory space, filec descriptor, and the access for kernel resources.
In some embodiments, which can be written as the first application example and the second application is real
The intermediate form that example can be explained.
In some embodiments, an at least subset for the first state information aggregate can be related to particular clients
Connection, and the subset is transferred to the intermediate form different from being used to service the form of particular clients via serialization.
In some embodiments, second set of state information may include it is below at least one：TCP congestion window
Size, the sequence identifier being arbitrarily grouped in transmission, and be received but the still unacknowledged sequence identifier being arbitrarily grouped.
In some embodiments, this method includes the deactivation being maintained at by the processor to the first application example
And complete to the block period between the activation of the second application example, during the block period first application example with
Second application example will not all input any user and respond.
At least one aspect is directed to a kind of system that application is updated in the case where not restarting.The system includes processing dress
It sets and the storage device with the instruction being stored thereon.The instruction is so that the processing unit executes the first application example.It should
Instruction is so that the processing unit still starts the second application example while executing in the first application example.Second application example
More new version including the first application example.The instruction is so that the processing unit is real from the first application by first state information aggregate
Example is transmitted to the second application example.The instruction so that the processing unit by the second application example in response to first state information aggregate
Be transmitted and state to activate ready.The instruction is so that the processing unit deactivates the first application example.It deactivates
Including the second set of state information is transmitted to the second application example from the first application example.Deactivation includes real by the first application
Example discharges single access resource.The instruction is so that the processing unit activates the second application example.Activation includes receiving second shape
State information aggregate and access the single access resource.The instruction so that the processing unit by the second application example in response to second
The activation of application example is completed and states activation and complete.The instruction is so that the processing unit terminates the first application example.
These and other aspect and embodiment are discussed in detail below.Above information and the following detailed description packet
The illustrated examples of various aspects and embodiment are included, and are provided for understanding claimed aspect and embodiment
Attribute and characteristic general introduction or frame.Attached drawing provides the diagram of various aspects and embodiment and is further understood from, and
And it is incorporated into the specification and constitutes its a part.
Detailed description of the invention
Attached drawing is not intended to scale.Same appended drawing reference and the same element of specified instruction in each figure.For
Clear purpose, may not each component in every width figure be labeled.In the accompanying drawings：
Fig. 1 is the block diagram for the system of upgrade application in the case where not restarting according to illustrated embodiment；
Fig. 2 shows the sequences for the event of upgrade application in the case where not restarting according to illustrated embodiment
Column；
Fig. 3 is shown according to illustrated embodiment for being risen using host applications in the case where not restarting
The sequence of the event of grade application；
Fig. 4 is the process according to the exemplary method of the upgrade application in the case where not restarting of illustrated embodiment
Figure；And
Fig. 5 is can be used to implement system and method described and illustrated herein according to illustrated embodiment
Element computer system general framework block diagram.
Specific embodiment
The disclosure relates generally to promote the upgrading of server application without application or Server Restart
System and method.Therefore, for server client, which can be transparent or close to transparent.
Long-term running system service and application need interim or regularly glitch reparation, patch installing, update or upgrading
(commonly referred to as " updating ").Traditionally, it is stopped, updates and restarts using with three different consecutive steps.However, due to
Service is deactivated a period of time, so the update is not transparent and is interfered user.
The system and method proposed are related to the legacy version new version that still starting is applied while running in application.
The new version may include that any application updates.The new version can undertake it can be in legacy version still execution while running
Any initialization.This may include request and/or receives any programming from external source, receive from the legacy version of application
The transmission of status information, and/or any other initialization that can be executed in the case where not conflicting with legacy version.Work as new version
When getting out activation, it can state that its is ready.Legacy version can deactivate.Deactivation may include that closing is required most
Small working set or transfer resource and new version is activated in the case where no any resource contention.Work as legacy version
Deactivation complete when, new version can activate.In some embodiments, activation can be deactivated mirror image.When new
When version completes activation, legacy version can low be terminated；That is, can be related to some great operations termination can between
Or it ground and is executed in a manner of not forming interference with other server operations.
In some embodiments, server can be executed coordinate or execute and be answered using additional " master control " that updates
With.As an example, not a limit, which initiates new version, receives from new version and activates ready message, notifies old edition
This deactivation receives legacy version deactivated message, notice new version activation, and terminates legacy version.Although the master control is simultaneously
Non- is required, but it is capable of providing several benefits.The master control can be relatively simple application, and therefore can be with right and wrong
It is often stable.The master control can provide unity reference point for transmission state.For example, the master control can have thing in related failure
The complete information of the more new state of part.The master control is able to carry out various types of health examination and non-variables checks to ensure that upgrading
Successfully and in a timely mannner carried out.If any step failure in updating, the master control can be back to and apply
In malfunction be what mutually independent rollback or step-by-step upgrade process.In some embodiments, which can assist
It helps to multiple and different application upgrades, and provides unity reference point for all upgradings.
In some embodiments, can be related to for some or all states being written as being capable of legacy version and new for state transfer
The intermediate form that version can be explained.The intermediate form can permit the binary representation of state in legacy version and new edition
It is varied between this or upgrading purpose.The subset of state may include state associated with specific user or client.?
In some embodiments, the User Status can via serialization be transferred to have from different two for servicing user into
The intermediate form of representation processed.
In some embodiments, state transfer can be carried out with multiple stages.This can reduce application availability may
The duration being restricted.The first stage of state transfer can carry out in the initial phase of new opplication.The first stage
May include the transmission of background state information, such as have connected the list of client and between application and client share
The position of storage space.The background state information can also include filec descriptor and the access for kernel resources.With
The starting of the first stage of state transfer, which is used as, to be started, and application can stop and allow the state change of more invasive, such as
Allow new client to be connected to server or receives new memory registration；However, using existing customer end can be continued as
Service, including allowing existing customer end to open new Business Stream.Due to these types tendency of changes then infrequently, so
This interim function reduction will not have unreasonable destructiveness.
The second stage of state transfer can carry out during the deactivation of the legacy version of application.This will include being directed to client
Status information needed for the transparent service at end；As an example, such as TCP congestion window size, which grouping is in flight on the way,
And it in transmission or is received but the TCP state information of sequence identifier being arbitrarily grouped for being not yet identified etc.
About the second extreme time of state transfer, legacy version can be converted to the new version resource that the two can not be shared；For example, answering
The port and port that two versions can not access simultaneously.During this of Resource Exchange and state transfer period, using can
The block period with the grouping that possibly can not be responded therebetween to incoming grouping with it and not transmit own
(blackout period).Therefore, which is remained as short as possible will be advantageous.Status transfer operation is divided
The duration that can aid in the second stage of hold mode transmission for two or more stages is shorter.In some embodiments
In, which can be maintained as being lower than 100ms.
Fig. 1 is the frame for the system 100 of upgrade application in the case where not restarting according to illustrated embodiment
Figure.System 100 includes server 110, interchanger 120 and network 105.Server 110 includes processor 130,140 and of memory
Network interface 150.
Server 110 is that the computer program or equipment of service are provided to client device.The service may include being directed to
The data processing of client is shared.Server 110 is capable of providing application server, database server, file server, postal
The service of one or more of part server, domain name system (DNS) server, game server etc..For example, server 110
Message transport application, network drive application, and the application supported with transport layer support or network layer can be executed.It is other to answer
With may include online always virtual reality or augmented reality system, mobile application, or such as hosts virtual machine class is remote
Journey productivity application.In some embodiments, server 110 can be exchanged via the one or more of such as interchanger 120
Machine is connected to the network of such as network 105.Interchanger 120 can be network it is recessed change planes or including router, modem,
One or more network switch systems of edge switch, cabinet top interchanger (top-of-rack switch) etc..One
In a little embodiments, server 110 can connect via wireless, wired or optics and be connected to network 105.For example, server
110 can be connected to network via honeycomb LTE control tower, mobile access point or satellite.Network 105 can indicate such as data center
The local area network (LAN) of the safety of network, or unsafe wide area network (WAN) of such as internet.
Server 110 includes processor 130, memory 140 and network interface 150.Processor 130 can be microprocessor
Or the system of multi-microprocessor.One or more microprocessors may include single or multiple core framework.Processor 130 can be with
Including customization or programmable integrated circuit (IC), such as specific integrated circuit (ASIC) or field programmable gate array
(FPGA).Processor 130 can execute kernel, operating system and one or more application or service.Using including server
The 110 performed software programs directly or indirectly to be used by client.As a comparison, kernel and operating system management service
The hardware and software resource of device 110, and to using offer service.
Memory 140 may include one of solid-state, magnetical or optical data storage device or their combination.Memory
140 may include random access storage device and directly access data storage, and can be arbitrary volatibility or non-volatile
Type.Memory 140 may include data and/or programming code.Programming code may include operating system and server 110
Performed any application or software service.Memory 140 can be stored in the programming generation of the application executed on processor 130
Code, and the data for being used or being generated by application.
Sometimes, it may be desirable to application upgrade to repair glitch, installation patch or update, or be upgraded to new version
(operation " updated " is referred to generally as herein).Traditionally, this requires to stop application with three different steps, and update is answered
With, and restart application.Before stopping application, server 130 can store checkpoint, and the checkpoint can restart it
It is loaded into updated application afterwards to allow updated application to continue service performed by the application before the update.So
And although the place that can be left at it is picked up, application is still offline whithin a period of time and can not be to visitor
Family end responds.In some cases, it can be possible to using redundant hardware and client is migrated to subsidiary engine device allow host
Device upgrade application in the case where not interfering the service for client.This required additional infrastructure and machine it
Between migrate application state complexity two in terms of both increase the burden of system.Therefore, can in the case where not restarting
Upgrade application will be advantageous on machine.
In order to which in the case where using client the obstruction of minimum level, upgrade application, server 110 can handled
Two application examples are executed on device 130.That is, processor 130 can be performed simultaneously using A 132 and apply B 134.Place
Reason device 130 can execute in the service of one or more clients applies A 132.If it is desire to being updated to application, then
The second example that processor 130 can start the application is used as using B 134.It include for locating using A 132 and application B 134
The programming of the reason mutually agreement of discovery and state transfer.The agreement can define how application example finds each other and exchange shape
State information includes the intermediate form of status data in case of need.Once two application examples are all performed, an energy
It is enough via to such as well known address of Unix domain port etc inspect periodically or poll positions another.Once using A
132 and application B 134 establishes communication link, they can start the status information that transmission is stored in memory 140.It should
Status information includes the information of the state in relation to application example and the information of the service in relation to its client.The status information can
To include background state information and foreground status information.Background state information and foreground status information are to be used to base in the disclosure
In any term that the relative weighting or invasive for status information are distinguish the various aspects of the shape state information.Make
For example rather than limit, background state information may include the list for such as having connected client, application example and client it
Between share storage space position, filec descriptor and the information for the access of kernel resources etc.As example
Rather than limit, foreground status information may include transmission control protocol (TCP) congestion window size, being arbitrarily grouped in transmission
Sequence identifier, and be received but the sequence identifier of still unacknowledged grouping.Generally, changing for foreground status information
Change be intended to be it is conventional and ordinary, have with each sent or receive request, response or be even grouped the change of generation
Change.As a comparison, then it is intended to the configuration variation for indicating that there is broader influence for the change of background state information, such as increases
Add or abandon client, and access or free system resources.
Their status information can be stored in memory 140 by application example.Its state can be believed using A 132
Breath is stored in the memory A 142 of memory 140, and its status information can be stored in memory B using B 134
In 144.Memory A 142 and memory B 144 can indicate the different spaces or deposit in continuous memory hardware segment
Device, or can indicate different memory hardware segments, the memory IC such as separated.In some embodiments, it stores
Device A 142 and memory B 144 can be partially or completely overlapped in shared memory area.Using shared memory space
Embodiment in, the subset of status information may be at all without being transmitted.During state transfer, application example can be mutual
Coordinate status information copying to memory B 144 from memory A 142.
Although two application examples can keep online in same time, may be deposited during status information transmission
The period of some status informations can not all be updated therebetween in any one application example.During those periods, possibility can not
Make configuration variation or the response for incoming request.In order to enable influence of the period of reduction function to client service is most
Smallization, status information can be transmitted to from using A 132 using B 134 in two or more stages.For example, using 132 energy of A
It is enough that background state information is transmitted to using B 134 first.During the transmission of background state information, it can be refused using A 132
(rebuff) changes the trial of background state to prevent background state information from becoming discarded using reproducting periods absolutely.However,
Since the change for background state is relatively infrequent, so client will experience most of clothes during the period
A possibility that interruption of business, is very low.Once background state information has been transmitted to using B 134 using A 132, using B 134
It can be ready to activating to application A 132 statement.Its foreground status information can be transmitted to using B using A 132
134.During the transmission of foreground status information, application example may be unable to maintain that state communication.Client may be in the period
Period experiences block due to ignoring any received grouping using A 132.But since foreground status information indicates
The data of relatively small amount, so the transmission of foreground status information can be carried out relatively quickly.Therefore the block period is able to maintain
Briefly.In some embodiments, which can be maintained as being less than 10ms.In some embodiments, the block
Period can be maintained as being less than 20ms, 50ms or 100ms.It further describes below in relation to Fig. 2 using the operation updated.
In some embodiments, server 110 can additionally execute host applications 136 on processor 130.Master control
136 can coordinate using the operation between A 132 and application B 134.As an example, not a limit, master control 136 can be initiated to answer
It is received with B 134, from application B 134 and gets out activate message, notify to deactivate using A 132, receive and A 132 is applied to be deactivated
Message living, notice are activated using B 134 and are terminated using A 132.Although master control 136 is not for all embodiments
It is all necessary, but it is capable of providing several benefits.Master control 136 can be relatively simple stateless application, and therefore
It can be highly stable.Master control 136 can provide unity reference point for transmission state.For example, master control 136 can have related event
The complete information of more new state in the case of barrier.Master control 136 is able to carry out various types of health examination and non-variables inspection comes
Ensure to upgrade successfully ground and is carried out in a timely mannner.If any step failure in updating, master control 136 can return
It is extremely what mutually independent rollback or step-by-step upgrade process with the malfunction in application.In some embodiments, master control
136 can assist in multiple and different applications or application type upgrading, and provide unity reference point for all upgradings.For example,
Master control 136 can coordinate the operation between third application example and the 4th application example of the update including third application example.
Third application example and the 4th application example execute the service for being different from the first application example and the second application example.Below in relation to
Fig. 3 further describes the operation updated by means of the application of master control 136.
Fig. 2 shows the sequences for the event of upgrade application in the case where not restarting according to illustrated embodiment
Column 200.Sequence 200 describe using A 202, using B 204, memory A 206 and memory B 208 operation and they
Between communication.Using A 202 and using B 204 can be analogous respectively to as above for described in Fig. 1 apply 132 He of A
Using B 134.Similarly, memory A 206 and memory B 208 can be analogous respectively to as above for described in Fig. 1
Memory A 142 and memory B 144.
It in the stage 210, is carrying out using A 202, has been actuated while before, and assume whithin a period of time to be client
End service.
In the stage 212, start using B 204.It is performed simultaneously now using A 202 and using B 204, but applies B
204 is current not to client service.During stage 212, using B 204 will positioning using A 202 (or vice versa).It answers
Mutually it can be found and be connected via the well-known port of such as Unix domain port etc with example.When application example is contacted
When, they can initiate state transfer.
In the stage 214, its background state information is retrieved from memory A 206 using A 202.This may include that retrieval has connected
The list of client, the position of shared memory space, filec descriptor are connect, and discharges kernel resources.The stage 214 it
Afterwards, background state information can not all be made a change using A 202 and using B 204 until application B 204 swashs in the stage 230
It is living.During the period of the reduction function, new connection possibly can not be opened using A 202, or access is passed from application A 202
Transport to certain system resources using B 204.
In the stage 216, background state information is sent to using B 204 using A 202.In some embodiments, it answers
With A 202 background state information can be converted to intermediate form and make using A 202 and application B 204 can to it into
Row is explained.In some embodiments, the subset of at least background state information is associated with particular client device.Using A
202 can will be with particular clients via the different intermediate form of the form for being serialized as from being used to services client end equipment
The associated background state information of equipment is transmitted to using B 204.
In the stage 218, received background state information is stored to memory B208 using B 204.
In the stage 220, state that it is ready to activating using B 204.
It is retrieved from memory A 206 using A 202 in response to receiving the statement from using B 204 in the stage 222
Foreground status information.After the stage 222, foreground status information can not all be made a change directly using A 202 and using B 204
It is activated to application B 204 in the stage 230.During the period, any incoming grouping will be ignored using A 202, this create
Block the period.
In the stage 224, foreground status information is sent to using B 204 using A 202.In some embodiments, it answers
With A 202 foreground status information can be converted to intermediate form and make using A 202 and application B 204 can to it into
Row is explained.In some embodiments, the subset of at least foreground status information is associated with particular client device.Using A
202 can will be with particular clients via the different intermediate form of the form for being serialized as from being used to services client end equipment
The associated foreground status information of equipment is transmitted to using B 204.
In the stage 226, received foreground status information is stored in memory B208 using B 204.
In the stage 228, using 202 free system resources of A.These may include can not be once by more than one application
Or the single user system resource that application example is accessed, such as certain port, peripheral hardware or memory location.It can using B 204
Them are accessed when these resources are discharged using A 202.Once having had accessed all moneys being released using B 204
Source, it just becomes movable application example.
In the stage 230, completed using B 204 to the application statement activation of A 202.Contact can be started to process using B 204
In the business of client, therefore terminate to block the period.
In the stage 232, can be terminated using A 202.Terminate the great operation that may relate to need a large amount of system resources.
It is interfered in order to avoid being formed with the execution of other application, server 110 can low be terminated using A 202；That is,
It is terminated during idle period using low priority.
Each stage of sequence 200 can be carried out with different order and can make multiple stages while carry out, and
It may include the stage more more or fewer than those described above, without departing from the scope of the present disclosure.
Fig. 3, which is shown, to be used for using host applications 310 according to illustrated embodiment so as to the case where not restarting
The sequence 300 of the event of lower upgrade application.Sequence 300 is described using A 302, using B 304, memory A 306, memory
The operation and the communication between them of B 308 and master control 310.It can be analogous respectively to as above using A 302 and using B 304
Text using A 132 and applies B 134 described in Fig. 1.Similarly, memory A 306 and memory B 308 can distinguish
Similar to as above for memory A 142 described in Fig. 1 and memory B 144.Master control 310 can then be similar to above close
The master control 136 described in Fig. 1.
It in the stage 312, is carrying out using A 302, it has been actuated while before, and hypothesis is whithin a period of time
Client service.
In the stage 314, master control 310 is initiated to apply B 304.It is performed simultaneously now using A 302 and using B 304, still
It is not simultaneously client service using B 304.It in some embodiments, can be via such as Unix domain end using B 304
A 302 (or vice versa) is applied in the well-known port discovery of mouth etc.When application example is contacted, they can be initiated
State transfer.In some embodiments, master control 310 will position each application example and pass on communication between them.?
Appropriate time, master control 310 can retrieve its background state from memory A 306 using A 302 to initiate state by instruction
Transmission.
In the stage 316, its background state information is retrieved from memory A 306 using A 302.This may include that retrieval has connected
Connect the list of client, the position of shared memory space, filec descriptor, and release kernel resources.The stage 316 it
Afterwards, background state information cannot all be made a change using A 302 and using B 304 until application B 304 swashs in the stage 336
It is living.During the period of the reduction function, new connection or access possibly can not be opened using A 302 and is passed from application A 302
Transport to certain system resources using B 304.
In the stage 318, background state information is sent to using B 304 using A 302.In some embodiments, it answers
Background state information can be sent to using B 304 with A 302.It in some embodiments, can be via master using A 302
Background state information is sent to using B 304 by control 310.In some embodiments, background state can be believed using A 302
Breath is converted to intermediate form and to explain it using A 302 and using B 304.In some embodiments
In, the subset of at least background state information is associated with particular client device.Using A 302 can via be serialized as with
Be used to the different intermediate form of form of services client end equipment and will background state associated with particular client device
Information is transmitted to using B 304.
In the stage 320, received background state information is stored to memory B 308 using B 304.
In the stage 322, stated using B 304 by sending statement to master control 310 ready to activating.In some realities
It applies in mode, master control 310 can be answered and periodically to signal left by file system poll application B 304 or mark
With the ready state of B 304.
In the stage 324, master control 310 sends instruction to application A 302 to start to deactivate.In some embodiments, it answers
It can be obtained with A 302 and to be used to deactivate and periodically to signal left by file system polling master 310 or mark
Instruction.
In the stage 326, in response to receiving statement instruction from master control 310, retrieved using A 302 from memory A 306
Its foreground status information.After the stage 326, foreground status information can not all be made a change using A 302 and using B 304
Until application B 304 is activated in the stage 336.During the period, any incoming grouping will be ignored using A 302, this creation
Block period.
In the stage 328, foreground status information is sent to using B 304 using A 302.In some embodiments, it answers
Foreground status information can be sent to using B 304 with A 302.It in some embodiments, can be via this using A 302
Foreground status information is sent to using B 304 by master control 310.It in some embodiments, can be by foreground state using A 302
Information is converted to intermediate form and to explain it using A 302 and using B 304.In some embodiments
In, the subset of at least foreground status information is associated with particular client device.It can be via being serialized as and quilt using A 302
It will foreground associated with particular client device state letter for the different intermediate form of the form of services client end equipment
Breath is transmitted to using B 304.
In the stage 330, foreground status information is stored in memory B 308 using B 304.
In the stage 332, using 302 free system resources of A.These may include can not be once by more than one application
Or the single user system resource that application example is accessed, such as certain port, peripheral hardware or memory location.In some embodiments
In, master control 310 can be received from application A 302 can access it when these resources are discharged using A 302 using B 304
Notice.Once having had accessed all resources being released using B 304, it just becomes movable application example.
In the stage 334, the transmission of foreground status information and the release of resource can be notified to master control 310 using A 302
It is completed.
It is completed in the release from the transmission and resource that receive foreground status information using A 302 in the stage 336
When notice, master control 310 can indicate to activate using B.
In the stage 338, state that activation is completed to master control using B 304.It can be started to process using B 304 and be to and from client
The business at end, therefore terminate to block the period.
In the stage 340, the instruction of master control 310 is terminated using A 302.Terminate the weight that may relate to need a large amount of system resources
Big operation.It is interfered in order to avoid being formed with the execution of other application, server 110 can low be terminated using A 302；Also
It is to say, is terminated during section using low priority during idle time.
During application updates, master control 310 can save status information relevant to the state using update.If more
Newly fail in any time point, master control 310 can restart to update from the beginning or from any suitable intermediate stage.Master control
Status information relevant to the state of application update can also be provided to the other application executed on server 110 by 310.?
In some embodiments, master control 310 can serially or simultaneously manage the update for multiple applications.
Each stage of sequence 300 can be carried out with different order and can make multiple stages while carry out, and
It may include the stage more more or fewer than those described above, without departing from the scope of the present disclosure.
Fig. 4 is the stream according to the exemplary method 400 for updating application in the case where not restarting of illustrated embodiment
Cheng Tu.Method 400 includes executing the first application example (stage 410).Method 400 includes when the first application example is still in execution
Starting the second application example (stage 420) simultaneously.Method 400 includes that background state information is transmitted to from the first application example
Two application examples (stage 430).Method 400 includes being transmitted and sound in response to background state information by the second application example
Bright activation ready (stage 440).Method 400 includes deactivating (stage 450) to the first application example.Method 400 includes
Activate the second application example (stage 460).Method 400 includes complete in response to the activation of the second application example by the second application example
At and state activation complete (stage 470).Method 400 includes terminating the first application example (stage 480).
Method 400 includes executing the first application example (stage 410).When method 400 starts, server 110 will located
The first application example is executed on reason device 130.In some embodiments, the first application example can periodically be sought to find that second answers
Use example.First application example can be sought to find the second application example by monitoring well known address.First application example energy
Enough regularly poll well known address, such as each second, every several seconds, or with some other intervals appropriate.
Method 400 includes when the first application example still starts the second application example (stage 420) while executing.Service
Device 110 can still start the execution of the second application example in the first application example while executing on processor 130.Second
Application example includes the updated version of the first application example.That is, the second application example can indicate that the first application is real
The new version of example comprising glitch reparation, patch or software upgrading.First application example and the second application example can pass through
Such as well known address of Unix domain port etc is mutually found and the transmission for state of initiating of reaching an agreement on.In some embodiments,
Second application example can be sought to find the first application example by poll well known address.
Method 400 includes that background state information is transmitted to the second application example (stage 430) from the first application example.?
In some embodiments, the first application example can retrieve its background state information from memory 140 and it is sent to the
Two application examples, second application example store it in the different piece of memory 140 in turn.In some embodiments
In, the control of the memory area comprising background state information can be handed to the second application example by the first application example.?
In some embodiments, the shared combination of data transimission and storage device is able to use to share background state information.In some realities
It applies in mode, background state information may include one or more below：The list for having connected client device, and has connected
The position of the shared storage space of client, filec descriptor, and the access to kernel resources.In some embodiments
In, background state information can be converted to intermediate form by the first application example.The intermediate form make the first application example and
Second application example can explain it.In some embodiments, at least the subset of background state information with it is specific
Client device is associated.First application example can be via the form for being serialized as being different from being used to services client end equipment
Intermediate form and background state information associated with particular client device is transmitted to the second application example.
Method 400 includes stating that activation prepares just in response to being transmitted for background state information by the second application example
Thread (stage 440).In some embodiments, which can be sent to the first application example by the second application example.
Method 400 includes deactivating (stage 450) to the first application example.First application example can be applied from second
Example starts to deactivate when receiving to ready statement.Deactivation may include applying foreground status information from first
Example is transmitted to the second application example.In some embodiments, foreground status information can be for one or more clients
Each of equipment and including one or more below：The sequence mark being arbitrarily grouped in TCP congestion window size, transmission
Knowledge is accorded with and is received but the still unacknowledged identifier being arbitrarily grouped.Deactivation may further include real by the first application
Example discharges single access resource；The system resource that namely once can be only accessed by an application example.Once first answers
Start to deactivate with example, application example is just able to enter the block period, and the first application example and the second application example will therebetween
Ignore any received grouping.The block period can continue to until the second application example starts to activate.
Method 400 includes activation the second application example (stage 460).Activation may include by the second application example from first
Application example receives foreground status information.Activation may further include by real by the first application before the access of the second application example
The single access resource that example is discharged.
Method 400 includes being completed in response to the activation of the second application example by the second application example and being stated activation and complete
(stage 470).Once the second application example has been received foreground status information and has accessed single access resource, second is answered
It can state that activation is completed with example.Once activation is completed, the second application example can be taken over before upgrading by first
Any client service handled by application example, and start to receive new client connection.
Method 400 includes terminating the first application example (stage 480).Receive notice from the second application example or
When person is from the instruction of host applications, the first application example can be not interfere the other application executed on processor 130
The mode of operation terminates.
In some embodiments, host applications can help to coordinate between the first application example and the second application example
Operation.As an example, not a limit, host applications can be in the starting of second application example of the initiation of stage 420.Host applications energy
It is enough to be received from the second application example to the ready statement of activation in the stage 440 and real in first application of the instruction of stage 450
Example deactivates.Master control can receive the notice for deactivating and completing from the first application example in the stage 450, and refer in the stage 460
Show that the second application example activates.Host applications can be after the notice that the activation from the second application example is completed in the stage
480 the first application examples of instruction terminate.Host applications are able to carry out more or fewer operations of method 400 without departing from this
Scope of disclosure.
In some embodiments, host applications can help to coordinate for more than one application or application type more
New operation.For example, host applications can coordinate the 4th application of third application example and the update including third application example
Operation between example.Third application example and the 4th application example execute different from the first application example and the second application example
Service.
Each stage of method 400 can be carried out with different order and can make multiple stages while carry out, and
It may include the stage more more or fewer than those described above, without departing from the scope of the present disclosure.
Fig. 5 is can be used to implement system and method described and illustrated herein according to illustrated embodiment
Element exemplary computing system 900 block diagram.Computing system 900 can implemented shown in Fig. 1-4 in the feelings that do not restart
It is used when updating the system and method for application under condition.
In extensive overview, computing system 910 include for according to instruction execution movement at least one processor 950 with
And for storing instruction with one or more memory devices 970 or 975 of data.Illustrated example computing system 910 is wrapped
Include via bus 915 using at least one network interface controller 920 and be connected to one or more network equipments 924, storage
One or more network interface ports 922 of any other equipment 980 of device 970 and, for example, I/O interface communicated one
A or multiple processors 950.In general, processor 950 will be executed from the received instruction of memory institute.Illustrated processor 950
It is integrated with or is connected directly to cache memory 975.
In more detail, processor 950 can be any logic circuit of process instruction, and described instruction is, for example, from memory
970 or cache 975 acquired by instruction.In many examples, processor 950 is microprocessor unit or dedicated processes
Device.It calculates equipment 900 and is based upon the random processor operated as described herein or processor sets.One
In a little embodiments, processor 950 is able to carry out the method for updating application shown in Fig. 1-4 in the case where not restarting.Place
Reason device 950 can be single or multiple core processor.Processor 950 can be multiple processors.In some embodiments, it handles
Device 950 can be configured as operation multithreading operation.In some embodiments, processor 950 can be with trustship one or more
Virtual machine or container and the supervisory process or container manager of the operation for managing the virtual machine or container.In such reality
It applies in mode, it is real in virtualization that system and method shown in Fig. 1-4 can provide on processor 950 or containerization environment
It applies.
Memory 970 can be the arbitrary equipment for being suitable for storing mechanized data.Memory 970, which can be, to be had admittedly
Surely the equipment stored or the equipment for reading removable storage medium.Example includes the non-volatile memories of form of ownership
Device, medium and memory devices, semiconductor memory devices (for example, EPROM, EEPROM, SDRAM and flash memory device), disk,
Magneto-optic disk and CD (for example, CD ROM, DVD-ROM orDisk).Computing system 900 can have any number of
Memory devices 970.In some embodiments, memory 970 may include with Fig. 1-4 shown in the case where not restarting
The lower corresponding instruction of method for updating application.In some embodiments, the support of memory 970 can be by computing system 910
The memory of the virtualization or containerization of provided virtual machine or the access of container performing environment.
Cache memory 975 is deposited typically to fast read-time close to the computer that processor 950 is disposed
The form of reservoir.In some embodiments, cache memory 975 is a part of processor 950 or is in it
On identical chips.In some embodiments, there are the caches 975 of multiple ranks, such as L2 and L3 cache hierarchy.
Network interface controller 920 manages the data via network interface 922 (sometimes referred to as network interface port)
Exchange.Network interface controller 920 handles the physical and datalink layer in osi model to carry out network communication.Some
In embodiment, the task of some network interface controllers is handled by one or more processors 950.In some embodiments
In, network interface controller 920 is a part of processor 950.In some embodiments, computing system 910 has multiple
Network interface controller 920.Network interface 922 is the tie point for physical network links.In some embodiments, network
Interface controller 920 supports wireless network connection and interface port 922 is wireless receiver/conveyer.In general, calculating equipment
910 exchange data with other network equipments 924 via the physics or Radio Link that arrive network interface 922.In some embodiments
In, network interface controller 920 implements the network protocol of such as Ethernet.
Other network equipments 924 are connected to via network interface port 922 and calculate equipment 910.Other network equipments 924 can
To be peer computing device, the network equipment, or any other calculating equipment with network function.For example, first network is set
Standby 924 can be such as hub, bridge, switch or router the network equipment, equipment 910 will be calculated and be connected to such as
The data network of internet.
Other equipment 980 may include I/O interface, external series device port, and arbitrarily add coprocessor.
For example, computing system 910 may include for connecting input equipment (for example, keyboard, microphone, mouse or other instructions are set
It is standby), output equipment (for example, video display, loudspeaker or printer) or additional memory storage devices are (for example, portable sudden strain of a muscle
Deposit driver or foreign medium driver) interface (for example, universal serial bus (USB) interface).In some embodiments,
Calculate the optional equipment 980 of equipment 900 including such as coprocessor, for example, arithmetic coprocessor can with high precision or
Complicated calculations carry out secondary processor 950.
The theme described in this description and operation can be or tangible to be embodied in Fundamental Digital Circuit to implement
Computer software, firmware or hardware on medium are implemented, which includes the structure and its structure disclosed in the description
Equivalent, or implemented with combination one or more in them.The embodiment of the theme disclosed in the description can be by
It is embodied as being embodied in one or more computer programs on tangible medium, such as in one or more computer storage mediums
It is encoded to execute or control the module for one or more computer program instructions that it is operated by data processing equipment.
Computer storage medium can be computer readable storage devices, computer-readable storage bottom, random or serial access storage
Device array or equipment perhaps one or more combinations or are included in wherein in them.Computer storage medium can also be
One or more individually physical assemblies or media (for example, multiple CD, disk or other storage equipment), or it is included in it
In.Computer storage medium can be tangible and non-transient.
The operation described in this description can be implemented as by data processing equipment to it is coarse you also at one or more
In a computer readable storage devices or the operation performed by the received data in other sources.The operation can be in the data
In the interior execution of the primitive environment of processing unit or one or more virtual machines hosted by the data processing equipment or container
It executes.
Computer program (also referred to as program, software, software application, script or code) can be with any form of programming
Language is write, including compiling or interpretative code, statement or procedural language, and it can be used with arbitrary form, packet
It includes as stand-alone program or as module, component, subprogram, object or the other units for being suitable for using in a computing environment.
Computer program can correspond to the file in file system, but and non-required such.Program can store other in preservation
Among a part of the file of program or data (for example, the one or more scripts stored in marking language document), storage
In the single file for being exclusively used in discussed program, or multiple coordinated files are stored in (for example, storing one or more moulds
The file of block, subprogram or code section) in.Computer program can be deployed as executing on one computer or in place
It is distributed in one place or across multiple places and is executed in the multiple stage computers that are interconnected by communication network.Communication network
Example include local area network (LAN) and wide area network (WAN), internet (for example, internet) and point to point network (for example,
Reciprocity point to point network).
The processing described in this description and logic flow can be implemented by one or more programmable calculators, institute
It states programmable calculator and executes one or more computer programs by being operated and being generated output to input data come real
Row function.The processing and logic flow can also be by such as FPGA (field programmable gate array) or ASIC (dedicated integrated electricity
Road) dedicated logic circuit practiced by, and device can also be implemented as the dedicated logic circuit.
Although the specification include many specific implementation details, these should not be understood to any invention with
And the range of content claimed is limited, but feature as the specific embodiment specific to specific invention is retouched
It states.It also can be in a single embodiment to combine shape using certain features that separate embodiments are described as background in the specification
Formula is implemented.On the contrary, also can be individually or with any appropriate subgroup using the various features that single embodiment is described as background
Conjunction is implemented in various embodiments.Although in addition, feature can hereinbefore be described as carrying out in some combination work and
It is even initially claimed in this way, still the group can be detached from some cases from required combined one or more features
It closes, and required combination can be for the variation of sub-portfolio or sub-portfolio.
Similarly, although operation is described in figure with particular order, this should not be understood to require this
The operation of sample with shown particular order or with consecutive order come execute or all illustrated operations will be performed with
Realize desired result.In some cases, multitask and parallel processing may be advantageous.In addition, reality described above
The division for applying the various system components in example should not be understood to require such division in all embodiments, and
It should be understood that described program assembly and system are usually integrated or are packaged into single software product
In multiple software product.
Inclusive is understood to be to the reference of "or", and any term described using "or" is ok
Indicate single, more than one and all any one of described term.Mark " first ", " second ", " third " etc. simultaneously
It is not necessarily mean that instruction sequence, and is generally only to be used to be distinguish between the same or similar item or element.
Various modifications for embodiment described in the disclosure can be aobvious easily for those skilled in the art
And it is clear to, and rule described herein can be applied to spirit of the other embodiment without departing from the disclosure
And range.Therefore, claim is not intended to be limited to embodiment shown herein, but will according to disclosure phase
Consistent widest range, principles disclosed herein and novel feature.
Claims (20)
1. a kind of system that application is updated in the case where not restarting, including：
Processor；And
Memory with the instruction being stored thereon, described instruction are used for so that the processor：
Execute the first application example；
Still start the second application example while executing in first application example, second application example includes described
The more new version of first application example；
First state information aggregate is transmitted to second application example from first application example；
State that activation prepares in response to being transmitted described in the first state information aggregate as second application example
It is ready；
First application example is deactivated, including：
Second set of state information is transmitted to second application example from first application example；And
Single access resource is discharged by first application example；
Second application example is activated, including：
Receive second set of state information；And
Access the single access resource；
It is completed in response to the activation of second application example by second application example and is stated activation and complete；And
Terminate first application example.
2. system according to claim 1, wherein described instruction makes the processor execute host applications to coordinate
State the operation between the first application example and second application example.
3. system according to claim 2, wherein the host applications：
Initiate the starting of second application example；
It receives from second application example to the ready statement of activation；
It indicates first application example in response to receiving to the ready statement and deactivates；
The notice for deactivating and completing is received from first application example；
The second application example activation is indicated in response to receiving the notice；And
Terminate first application example.
4. system according to claim 2, wherein the host applications coordinate third application example and including the third
Operation between 4th application example of the update of application example, wherein the third application example and the 4th application example
Execute the service different from first application example and second application example.
5. system according to claim 1, wherein first application example is periodically directed to the described second depositing with example
And check presumptive address or port.
6. system according to claim 1, wherein the first state information aggregate include it is below at least one：
The list of client is had connected,
The position of shared memory space,
Filec descriptor, and
For the access of kernel resources.
7. system according to claim 1, wherein the first state information aggregate is written as first application example
The intermediate form that can be explained with second application example.
8. system according to claim 1, wherein：
The subset of at least described first state information aggregate is associated with particular clients；And
The subset is transferred to the intermediate form different from being used to service the form of particular clients via serialization.
9. system according to claim 1, wherein second set of state information include it is below at least one：
TCP congestion window size,
The sequence identifier being arbitrarily grouped in transmission, and
It is received but the still unacknowledged sequence identifier being arbitrarily grouped.
10. system according to claim 1, wherein described instruction makes the processor：
It is maintained at the deactivation started to first application example and completes between the activation of second application example
The period is blocked, first application example and second application example all will not be to any users during the block period
Input responds.
11. a kind of method that application is updated in the case where not restarting, including：
First application example is executed by processor；
Still start the second application example, second application while executing in first application example by the processor
Example includes the more new version of first application example；
First state information aggregate is transmitted to second application example from first application example by the processor；
By second application example being transmitted and state to activate ready in response to the first state information aggregate；
First application example is deactivated by the processor, including：
Second set of state information is transmitted to second application example from first application example；And
Single access resource is discharged by first application example；
Second application example is activated by the processor, including：
Receive second set of state information；And
Access the single access resource；
It is completed in response to the activation of second application example by second application example and is stated activation and complete；And
First application example is terminated by the processor.
12. the method according to claim 11, including：
Host applications are executed to coordinate the behaviour between first application example and second application example by the processor
Make.
13. according to the method for claim 12, wherein the host applications：
Initiate the starting of second application example；
It receives from second application example to the ready statement of activation；
It indicates first application example in response to receiving to the ready statement and deactivates；
The notice for deactivating and completing is received from first application example；
The second application example activation is indicated in response to receiving the notice；And
Terminate first application example.
14. according to the method for claim 12, wherein the host applications coordinate third application example and including described the
Operation between 4th application example of the update of three application examples, wherein the third application example and the 4th application are real
Example executes the service different from first application example and second application example.
15. the method according to claim 11, including：
Presumptive address or port are inspected periodically with the presence of example for described second by first application example.
16. according to the method for claim 11, wherein the first state information aggregate include it is below at least one：
The list of client is had connected,
The position of shared memory space,
Filec descriptor, and
For the access of kernel resources.
17. according to the method for claim 11, wherein the first state information aggregate is written as first application in fact
The intermediate form that example and second application example can be explained.
18. the method according to claim 11, wherein：
An at least subset for the first state information aggregate is associated with particular clients, and the subset is via serialization
It is transferred to the intermediate form different from being used to service the form of particular clients.
19. according to the method for claim 11, wherein second set of state information include it is below at least one：
TCP congestion window size,
The sequence identifier being arbitrarily grouped in transmission, and
It is received but the still unacknowledged sequence identifier being arbitrarily grouped.
20. the method according to claim 11, including：
To the deactivation of first application example and completion to second application example being maintained at by the processor
Activation between the block period, first application example and second application example all will during the block period
Any user input is not responded.
Applications Claiming Priority (2)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/583,849 US10261780B2 (en) | 2017-05-01 | 2017-05-01 | Transparent upgrade of a system service or application |
US15/583,849 | 2017-05-01 |
Publications (1)
Publication Number | Publication Date |
---|---|
CN108881372A true CN108881372A (en) | 2018-11-23 |
Family
ID=61827824
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN201810391505.3A Pending CN108881372A (en) | 2017-05-01 | 2018-04-27 | The transparent upgrading of system service or application |
Country Status (6)
Country | Link |
---|---|
US (1) | US10261780B2 (en) |
EP (1) | EP3399407B1 (en) |
CN (1) | CN108881372A (en) |
DE (2) | DE202018102031U1 (en) |
GB (1) | GB2563312B (en) |
WO (1) | WO2018203969A1 (en) |
Families Citing this family (7)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US11531531B1 (en) * | 2018-03-08 | 2022-12-20 | Amazon Technologies, Inc. | Non-disruptive introduction of live update functionality into long-running applications |
US20220019380A1 (en) * | 2018-11-19 | 2022-01-20 | Telefonaktiebolaget Lm Ericsson (Publ) | Methods providing network service restoration context and related service instance sets and storage resource nodes |
US11019178B1 (en) * | 2019-01-07 | 2021-05-25 | West Corporation | Deployment router based on channel traffic |
US11048549B2 (en) * | 2019-04-04 | 2021-06-29 | Google Llc | Transferral of process state and/or components in computing environments |
US11070621B1 (en) * | 2020-07-21 | 2021-07-20 | Cisco Technology, Inc. | Reuse of execution environments while guaranteeing isolation in serverless computing |
US20220164221A1 (en) * | 2020-11-23 | 2022-05-26 | Motorola Solutions, Inc. | Preserving persistent link connections during a cloud-based service system upgrade |
EP4064045A1 (en) | 2021-03-25 | 2022-09-28 | ABB Schweiz AG | Method for real-time updating of process software |
Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN104395879A (en) * | 2012-06-21 | 2015-03-04 | 微软公司 | Auto-update while running client interface with handshake |
CN104423989A (en) * | 2013-09-02 | 2015-03-18 | 联想(北京)有限公司 | Application updating method and electronic equipment |
US20160092202A1 (en) * | 2014-09-25 | 2016-03-31 | International Business Machines Corporation | Live Operating System Update Mechanisms |
CN105677404A (en) * | 2015-12-31 | 2016-06-15 | 拉扎斯网络科技（上海）有限公司 | Zookeeper based configuration updating method and device |
Family Cites Families (17)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US6360363B1 (en) * | 1997-12-31 | 2002-03-19 | Eternal Systems, Inc. | Live upgrade process for object-oriented programs |
US7155462B1 (en) | 2002-02-01 | 2006-12-26 | Microsoft Corporation | Method and apparatus enabling migration of clients to a specific version of a server-hosted application, where multiple software versions of the server-hosted application are installed on a network |
US7307986B2 (en) * | 2002-02-04 | 2007-12-11 | Intel Corporation | State record processing |
US7000229B2 (en) * | 2002-07-24 | 2006-02-14 | Sun Microsystems, Inc. | Method and system for live operating environment upgrades |
US7555751B1 (en) * | 2004-08-11 | 2009-06-30 | 3Com Corporation | Method and system for performing a live system upgrade |
US8146073B2 (en) | 2004-09-30 | 2012-03-27 | Microsoft Corporation | Updating software while it is running |
US8713556B2 (en) * | 2008-02-25 | 2014-04-29 | Sap Ag | Virtual appliance update method |
US8332848B2 (en) * | 2009-03-12 | 2012-12-11 | Red Hat Israel, Ltd. | Mechanism for staged upgrades of a virtual machine system |
US8819660B2 (en) * | 2011-06-29 | 2014-08-26 | Microsoft Corporation | Virtual machine block substitution |
US9438494B2 (en) * | 2011-12-28 | 2016-09-06 | Avvasi Inc. | Apparatus and methods for optimizing network data transmission |
US20140059534A1 (en) * | 2012-08-22 | 2014-02-27 | General Electric Company | Method and system for software management |
US20140229928A1 (en) * | 2013-02-11 | 2014-08-14 | Claes Göran Edström | Upgrading software in production environments |
US9888059B2 (en) * | 2013-03-15 | 2018-02-06 | Gordon E. Seay | Methods and systems for switching between software applications |
US10007546B2 (en) | 2015-01-19 | 2018-06-26 | Vmware, Inc. | Operating-system exchanges using memory-pointer transfers |
US9734000B2 (en) * | 2015-06-18 | 2017-08-15 | Microsoft Technology Licensing, Llc | Seamless transitions between applications and devices |
US10289398B2 (en) * | 2015-09-26 | 2019-05-14 | Cisco Technology, Inc. | In-service upgrade of kernel loadable modules |
US10404837B2 (en) | 2015-09-30 | 2019-09-03 | International Business Machines Corporation | User datagram protocol (UDP) application handling during live kernel update |
-
2017
- 2017-05-01 US US15/583,849 patent/US10261780B2/en active Active
-
2018
- 2018-03-08 WO PCT/US2018/021542 patent/WO2018203969A1/en active Application Filing
- 2018-03-16 GB GB1804245.7A patent/GB2563312B/en active Active
- 2018-04-13 DE DE202018102031.5U patent/DE202018102031U1/en active Active
- 2018-04-13 DE DE102018108859.0A patent/DE102018108859A1/en active Pending
- 2018-04-13 EP EP18167229.6A patent/EP3399407B1/en active Active
- 2018-04-27 CN CN201810391505.3A patent/CN108881372A/en active Pending
Patent Citations (4)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
CN104395879A (en) * | 2012-06-21 | 2015-03-04 | 微软公司 | Auto-update while running client interface with handshake |
CN104423989A (en) * | 2013-09-02 | 2015-03-18 | 联想(北京)有限公司 | Application updating method and electronic equipment |
US20160092202A1 (en) * | 2014-09-25 | 2016-03-31 | International Business Machines Corporation | Live Operating System Update Mechanisms |
CN105677404A (en) * | 2015-12-31 | 2016-06-15 | 拉扎斯网络科技（上海）有限公司 | Zookeeper based configuration updating method and device |
Also Published As
Publication number | Publication date |
---|---|
DE102018108859A1 (en) | 2018-11-08 |
EP3399407B1 (en) | 2021-12-01 |
US20180314515A1 (en) | 2018-11-01 |
US10261780B2 (en) | 2019-04-16 |
GB201804245D0 (en) | 2018-05-02 |
WO2018203969A1 (en) | 2018-11-08 |
GB2563312A (en) | 2018-12-12 |
GB2563312B (en) | 2021-06-16 |
EP3399407A1 (en) | 2018-11-07 |
DE202018102031U1 (en) | 2018-07-17 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
CN108881372A (en) | The transparent upgrading of system service or application | |
US10496503B2 (en) | Healing cloud services during upgrades | |
EP2630567B1 (en) | Coordinated upgrades in distributed systems | |
US11416342B2 (en) | Automatically configuring boot sequence of container systems for disaster recovery | |
US11294699B2 (en) | Dynamically scaled hyperconverged system establishing minimum supported interoperable communication protocol between clusters in a cluster group | |
CN108027724B (en) | Method and device for upgrading in service of kernel loadable module | |
EP3284213B1 (en) | Managing virtual network functions | |
US20200104222A1 (en) | Systems and methods for managing server cluster environments and providing failure recovery therein | |
US11016761B2 (en) | Container based application reification | |
US10416996B1 (en) | System and method for translating affliction programming interfaces for cloud platforms | |
US20160371108A1 (en) | Reservation for a multi-machine application | |
CN107368353B (en) | Method and device for realizing hot addition of virtual machine memory | |
US11301299B2 (en) | Data based scheduling for horizontally scalable clusters | |
US9183092B1 (en) | Avoidance of dependency issues in network-based service startup workflows | |
US9405605B1 (en) | Correction of dependency issues in network-based service remedial workflows | |
CN106502787B (en) | A kind of dispatching method and device | |
EP4148573A1 (en) | Method to execute a mode-transition in a multi-mode computer system | |
US20240004687A1 (en) | Systems, methods, and apparatus for state convergence associated with high availability application migration in a virtualized environment |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination | ||
REG | Reference to a national code |
Ref country code: HKRef legal event code: DERef document number: 40000627Country of ref document: HK |
|
RJ01 | Rejection of invention patent application after publication | ||
RJ01 | Rejection of invention patent application after publication |
Application publication date: 20181123 |
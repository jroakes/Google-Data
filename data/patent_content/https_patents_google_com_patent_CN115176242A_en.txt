CN115176242A - Automatic user language detection for content selection - Google Patents
Automatic user language detection for content selection Download PDFInfo
- Publication number
- CN115176242A CN115176242A CN202080097492.4A CN202080097492A CN115176242A CN 115176242 A CN115176242 A CN 115176242A CN 202080097492 A CN202080097492 A CN 202080097492A CN 115176242 A CN115176242 A CN 115176242A
- Authority
- CN
- China
- Prior art keywords
- language
- content
- languages
- data processing
- processing system
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/30—Information retrieval; Database structures therefor; File system structures therefor of unstructured textual data
- G06F16/33—Querying
- G06F16/335—Filtering based on additional data, e.g. user or group profiles
- G06F16/337—Profile generation, learning or modification
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/95—Retrieval from the web
- G06F16/953—Querying, e.g. by the use of web search engines
- G06F16/9535—Search customisation based on user profiles and personalisation
Abstract
Systems and methods for determining a language of a user in a networked environment are provided herein. A data processing system having one or more processors coupled with a memory may receive a request from a client device for content identifying an account profile. The data processing system can determine a first set of candidate languages using log records that identify activity of the account profile. The data processing system may identify a plurality of information resources to present. The data processing system may determine the second set of candidate languages from the plurality of languages based on the content in each information resource and the corresponding ranking of each information resource. The data processing system may identify a set of languages included in the first set of candidate languages and the second set of candidate languages.
Description
Background
In a computer networking environment, such as the internet, a content provider may provide content items to be inserted into information resources (e.g., web pages) that are processed and rendered by an application (e.g., web browser) running on a client device.
Disclosure of Invention
At least one aspect relates to systems and methods for automatically detecting a user language for content selection. A data processing system having one or more processors coupled with a memory may receive a request from a client device for content identifying an account profile. The data processing system may determine a first set of candidate languages from the plurality of languages using log records identifying a plurality of activities of the account profile. The data processing system can identify, in response to the request for content, a plurality of information resources to present to the client device according to the ranking. The data processing system may determine the second set of candidate languages from the plurality of languages based on the content in each information resource and the corresponding ranking of each information resource. The data processing system may identify a set of languages included in both the first set of candidate languages and the second set of candidate languages, the set of languages including the first language and the second language from the plurality of languages. The data processing system may store the association between the account profile, the first language, and the second language in one or more data structures.
In some implementations, the data processing system can generate a first confidence score in the first language based on a first number of occurrences of the first language in at least one of a plurality of information resources or a plurality of activities identified in response to the request for content. In some implementations, the data processing system can generate a second confidence score in the second language based on a second number of occurrences in the second language in at least one of the plurality of information resources or the plurality of activities identified in response to the request for content.
In some implementations, the data processing system can include the first language into the first set of candidate languages in response to determining that the first confidence score for the first language is greater than the threshold score. In some implementations, the data processing system can include the second language into the second set of candidate languages in response to determining that the second confidence score for the second language is greater than the threshold score.
In some implementations, the data processing system can identify a first plurality of content items in a first language and a second plurality of content items in a second language. In some implementations, the data processing system can provide a content item selected from one of the first plurality of content items and the second plurality of content items to the client device, the content item being in one of the first language or the second language.
In some implementations, the data processing system can identify a selection value for each of a first plurality of content items in a first language and a second plurality of content items in a second language. In some implementations, the data processing system can select content items from the first plurality of content items and the second plurality of content items to provide to the client device according to a content selection protocol, the content items being in one of the first language or the second language.
In some implementations, the data processing system can identify an information resource associated with a content item in a first language or a second language. In some implementations, the data processing system can determine that the language of the content item corresponds to the language of the information resource. In some implementations, the data processing system can add the content item to a plurality of candidate content items for selection therefrom by the client device in response to determining that the language of the content item corresponds to the language of the information resource.
In some implementations, the data processing system can identify the third set of candidate languages from at least one of a language setting of the account profile, a language configuration of an application running on the client device, or one or more keywords included in the request for content. In some implementations, the data processing system can identify a set of languages included in the first set of candidate languages, the second set of candidate languages, and the third set of candidate languages.
In some implementations, the data processing system can determine, from the plurality of languages, a plurality of activities including at least one of: a search query received from a client device, access of an information resource by the client device, and interaction with an element on the information resource. In some implementations, the data processing system can determine from the plurality of languages based on a frequency in each language of the second set of candidate languages across the plurality of information resources identified in response to the request for content.
In some implementations, a data processing system may receive a query including one or more keywords from a client device. In some implementations, the data processing system can perform a search operation using one or more keywords of the query to identify a plurality of information resources. In some implementations, a data processing system can provide an output including at least one of a plurality of information resources and a content item selected from one of a first plurality of content items in a first language and a second plurality of content items in a second language, the content item being in one of the first language or the second language.
These and other aspects and embodiments are discussed in detail below. The foregoing information and the following detailed description include illustrative examples of various aspects and embodiments, and provide an overview or framework for understanding the nature and character of the claimed aspects and embodiments. The accompanying drawings provide an illustration and a further understanding of the various aspects and embodiments, and are incorporated in and constitute a part of this specification.
Drawings
The drawings are not intended to be drawn to scale. Like reference numbers and designations in the various drawings indicate like elements. For purposes of clarity, not every component may be labeled in every drawing. In the drawings:
FIG. 1 is a block diagram of a system for automatically detecting user language for content selection in accordance with an illustrative embodiment;
FIG. 2 is a sequence diagram of a query processing procedure for a system for automatically detecting user language for content selection in accordance with an illustrative embodiment;
FIG. 3 is a sequence diagram of a language profiling process for a system that automatically detects user language for content selection in accordance with an illustrative embodiment;
FIG. 4 is a sequence diagram of a result evaluation process of a system for automatically detecting user language for content selection in accordance with an illustrative embodiment;
FIG. 5 is a sequence diagram of a content selection process for a system for automatically detecting user language for content selection in accordance with an illustrative embodiment;
FIG. 6 is a sequence diagram of a result providing process of a system for automatically detecting user language for content selection in accordance with an illustrative embodiment;
FIG. 7 is a flowchart of a method of automatically detecting a user language for content selection in accordance with an illustrative embodiment; and
FIG. 8 is a block diagram illustrating a general architecture of a computer system that may be employed to implement elements of the systems and methods described and illustrated herein, according to an illustrative implementation.
Detailed Description
The following is a more detailed description of various concepts and embodiments related to a method, apparatus and system for determining a user language in a networked environment. The various concepts introduced above and discussed in greater detail below may be implemented in any of numerous ways, as the described concepts are not limited to any particular implementation.
The centralized service of the content distribution platform may select content items from various content providers to send to the client device using any number of selection parameters. Each content item may have been configured to present audio, video, or textual content in a particular language (e.g., english). The selection parameters for each content item may be set by the respective content provider to define that the content item is provided to the client device when associated with a particular language identifier. When a request or query for content is received from a client device, the service may identify a language used (use) by a user of the client device. The language may be identified from the language settings of an account associated with the user, the language configuration of an application (e.g., web browser) on the client device, or the text of the query itself. With this identification, the service may select and provide, in response to the request, one of the content items having content in the same language (in) as the language identified for the client device. For example, when the language identified as being used by the user of the requesting client device is also italian, the service may provide content items having video content in italian as specified in the selection parameter.
One drawback of selecting content items in this manner may be that this approach ignores the possibility that the user of the requesting client device may be multilingual (e.g., spanish and italian). This inattention may be further exacerbated by the fact that many users (including most multilingual users) do not report on their own which language they use in an account profile or application setting. Another disadvantage of this approach may be that the accuracy of identifying other languages used by the user is very low, even if the query received is in a different language. This may be because the text of a query is typically short and therefore ambiguous given limited context, where the keywords in the query may be words in multiple languages. For example, a query containing the keyword "taxi" may be ambiguous because it is difficult to determine whether the language the user wants is english or french, or other languages, because all of these languages use this word.
As a result, for such multi-lingual users (e.g., both spanish and italian), the set of candidate content items for potential selection may be limited to one of the languages (e.g., spanish or italian), thereby excluding other languages that the user may be familiar with or versed in. Excluding such content items from use in other languages may result in greater consumption of computing and network resources, as the user may repeat the query to find relevant content. Moreover, excluding content items from other languages may also result in lower human-computer interaction (HCI) quality between the user and the client device, as the content may only use one language, but not other languages familiar to the user.
To address these and other technical challenges, the services of the content distribution platform may determine the language used by the user of the requesting client device based on a mix of various signals of various qualities and degrees of coverage. The service may identify the language declared by the user from the account or application settings and may also derive the language from the keywords of the query itself. In addition to these factors, the service may also build a user linguistic profile from the browsing history of the client device. The service may identify various access activities performed via the client device as identified in the browsing history. The activities may include, for example, accessing an information resource (e.g., a web page), entering an input (e.g., a comment) on a graphical user interface of the information resource, and causing a previous query of the information resource, among other things. Through this identification, the service may determine a language associated with the access activity to build a user linguistic profile. The service may also consider the language identified from the user claims and the keywords of the query itself in the user's linguistic profile. The user language profile may indicate that a user of the client device is predicted to use one or more languages.
In combination, the service may identify the language used by the user of the client device from the search results of the query. In identification, the service may perform a network search operation using one or more keywords of the query to find a set of information resources whose content matches or is related to the keywords. A web search operation may involve using or invoking a search engine with a query and returning a collection of information resources as search results. The set of information resources may be ordered in order based on a ranking indicating relevance of the result information resources to the keywords of the query. The service may parse each information resource to determine a language from content on the information resource. The service may narrow down the number of languages by considering the ranking of the information resources from which the language is derived and the frequency of the determined language in the information resources of the search results.
The service may identify a set of candidate content items in each identified language from the initial set of languages indicated in the constructed user linguistic profile. Each content item may have a selection parameter indicating that the content item is to be selected when the language determined for the user matches a language defined by the content provider. The service may filter the languages in the user profile by identifying intersections between the set of languages in the user profile and the set of languages determined from the search results. By filtering the number of languages predicted for the user, the service may filter, by extension, the set of candidate content items that are eligible to be selected for provision to the client device.
Once the content items are filtered, the service may run a content selection process to select content items to provide to the client device. This may result in the selection of content items in a language different from the language declared by the user in the account profile or application settings. For example, a client device submitting a query may set an account profile to indicate that a user uses english, but the browsing history may indicate that the user frequently visits polish web pages. From the access history and the search results, it may be determined that the user understands both english and polish, and content items in either language may be selected for the pool of eligible content items. From the content selection process, the service may also select content items in either language. Content items provided to the client device may be presented with search results found using keywords of the query. The language of the provided content items may use a language that is different from at least some of the search results and the same as some of the other search results.
By using multiple factors in this manner, the accuracy of predicting the language used by a user may be significantly increased, up to 70% -90%, as compared to using only the language declared by the user or a language derived from the keywords of the query. Furthermore, the set of content items to be selected and provided from may be expanded to include multiple languages determined with greater accuracy and precision. The inclusion of these content items for selection may result in a reduced consumption of computing and network resources, with fewer queries by the user via the client device to find relevant content. In conjunction with the improvement in accuracy of the predicted language, adding content items across multiple languages can result in higher HCI quality between the user and the client device, as the content can be in whatever language the user is determined to know.
The selected content item uses a language familiar to the user, since the first language and the second language have been determined based on both the activity of the account profile and the information resources identified in response to the request for content. Thus, with the methods disclosed herein, a larger pool of understandable content items is provided with high accuracy. The selection of content items provided to the client device is also improved because it is extracted from content items in more than one language. Thus, the method effectively selects content items that the user can understand, as the user's proficiency in more than one language is accurately determined. Thus, the selection of intelligible content data can be made from a larger pool of data than provided by existing methods.
Referring now to FIG. 1, depicted is a block diagram depicting one embodiment of a computer networking environment or system 100 for determining a user language. In general, the system 100 may include at least one network 105 for communication between components of the system 100. The system 100 may include at least one data processing (processing) system 110 to process requests transmitted via the network 105. The data processing system 110 may include, among other things, at least one query processor (handler) 135, at least one query processor 135, at least one profile deriver 140, at least one search evaluator 145, at least one language evaluator 150, and at least one content aggregator 155. The system 100 may comprise at least one content provider 115 to provide content items. The system 100 can include at least one content publisher 120 to provide information resources (e.g., web pages). The system 100 may include at least one client device 125 to communicate via the network 105. The system 100 can include at least one indexing service 130 (sometimes referred to herein as a search engine and web crawler) to find information resources using one or more keywords provided by the client devices 125. Each of the components of system 100 (e.g., network 105, data processing system 110 and components thereof, content provider 115 and components thereof, content publisher 120 and components thereof, and client device 125 and components thereof) may be implemented using the components of computing system 800 described in detail herein in connection with fig. 8.
In more detail, the network 105 of the system 100 may communicatively couple the data processing system 110, the content provider 115, the content publisher 120, and the client device 125 to one another. Each of the data processing system 110, the content provider 115, and the content publisher 120 of the system 100 may include a plurality of servers located in at least one data center or server farm, the servers communicatively coupled to each other via the network 105. The data processing system 110 can communicate with the content provider 115, the content publisher 120, and the client device 125 via the network 105. The content provider 115 may communicate with the data processing system 110, the content publisher 120, and the client device 125 via the network 105. The content publisher 120 may communicate with the data processing system 110, the content publisher 120, and the client device 125 via the network 105. The client device 125 may communicate with the data processing system 110, the content provider 115, and the content publisher 120 via the network 105.
The content provider 115 may include a server or other computing device operated by a content provider entity to provide content items for display on information resources at the client device 125. The content provided by content provider 115 may take any convenient form. For example, the third-party content may include content related to other displayed content, and may be, for example, a website page related to the displayed content. The content may include third-party content items or creatives (e.g., advertisements) for display on information resources, such as information resources that include primary content provided by the content publishers 120. The content items may also be displayed on a search results web page. For example, the content provider 115 may provide or be a source of content items for display in a content slot (e.g., an inline frame element) of an information resource, such as a company's web page where the primary content of the web page is provided by the company, or for display on a search results landing page provided by a search engine. Content items associated with the content provider 115 may be displayed on information resources outside of the web page, such as content displayed as part of the execution of an application on a smartphone or other client device 125.
The content publisher 120 may include a server or other computing device operated by a content publishing entity to provide information resources including primary content for display via the network 105. For example, the content publisher 120 may include a web page operator that provides primary content for display on an information resource. The information resources may include content in addition to content provided by the content publisher 120, and the information resources may include content slots configured to display content items from the content provider 115. For example, the content publisher 120 may operate a website of a company and may provide content about the company for display on a web page of the website. The web page may include a content slot configured to display content items provided by the content provider 115 or by the content publisher 120 itself. In some implementations, the content publisher 120 can include a search engine computing device (e.g., a server) of a search engine operator operating a search engine website. The primary content of the search engine web page (e.g., results or landing web page) can include the results of the search as well as third party content items displayed in content slots of the information resource, such as content items from the content provider 115.
The data processing system 110 may include a server or other computing device operated by a content placement (place) entity to select or identify content items to be inserted into content slots of an information resource via the network 105. In some implementations, the data processing system 110 may include servers and computing devices operated by a search engine operator. In some implementations, the data processing system 110 can include a content placement system (e.g., an online advertising server or other data provider). The data processing system 110 can maintain a manifest of content items to select from for insertion into content slots of information resources provided over the network 105. The manifest may be maintained on a database accessible to the data processing system 110. The content item or an identifier (e.g., address) of the content item may be provided by the content provider 115. In some implementations, the data processing system 110 may include a search engine computing device (e.g., a server) of a search engine operator operating a search engine website. Primary content of the search engine web page (e.g., results or landing web pages) may include results of the search as well as third party content items displayed in content slots of the information resource, such as content items from the content provider 115.
Each client device 125 may include a computing device to communicate over the network 105 to display data. The display content may include content provided by the content publisher 120 (e.g., information resources) and content provided by the content provider 115 (e.g., content items for display on content slots of the information resources), as identified by the data processing system 110. Client devices 125 may include desktop computers, laptop computers, tablet computers, smart phones, personal digital assistants, mobile devices, consumer computing devices, servers, clients, digital video recorders, television set-top boxes, video game consoles, or any other computing devices configured to communicate via network 105.
The indexing service 130 may include a server or other computing device operated by a search engine service to aggregate information resources accessible via the network 105 and provide search results in response to queries to the client devices 125. In some implementations, the indexing service 130 can be part of the data processing system 110 or the content publisher 120. In some implementations, the functionality of the indexing service 130 can be distributed across one or more of the data processing system 110, the content provider 120, or the indexing service 130. The primary content of the search engine web page (e.g., results or landing web page) can include search results and third party content items displayed in content slots of the information resource, such as content items from the content provider 115.
Referring now to FIG. 2, a sequence diagram of a query processing procedure 200 of the system 100 for automatically detecting user language for content selection is depicted. As shown, the client device 125 may run or include at least one application 205. The application 205 may be a program executable on the client device 125 to access resources via the network 105. For example, the application 205 may be a network (web) browser, a web application, a mobile application, a word processing application, or the like. The application 205 may have retrieved or retrieved at least one information resource 210 (e.g., a web page) from the data processing system 110 or the content publisher 120. The information resource 210 can include one or more user interface elements with which the user 160 can interact for input via an I/O device of the client device 125. In some implementations, the information resource 210 can correspond to a search engine web page from the data processing system 110. The search engine web page may include at least one user interface element (e.g., a text box) to enter a query for searching for content. The input to the user interface elements of the information resource 210 can be in accordance with the first language 210A or the second language 210B.
The application 205 may have or be associated with at least one language configuration 215 (sometimes referred to herein as a language setting). The language configuration 215 may define, specify, or otherwise identify one or more languages to be used on the application 205. According to the language configuration 215, the application 205 can send a request for content in a specified language and retrieve one or more information resources (e.g., information resource 210) in the specified language. For example, language configuration 215 may specify that portuguese is to be used. In this example, the application 205 may retrieve the portuguese web page by sending a request for content specifying the portuguese. In some embodiments, the language configuration 215 of the application 215 may be set to a default language. The default language may be based on the geographic region of the client device 125, a language setting of the client device 125 (e.g., specified by an Operating System (OS)), or pre-configured by the application 205.
Further, the application 205, client device 125, or user 160 can be associated with at least one account profile 220. The account profile 220 may correspond to or be associated with the following accounts: the user 160 is authenticated with the account to use the client device 125 or the application 205. For example, the user 160 may log in to use the application 205 using an account identifier and a password for the account to log in. The account profile 220 may be associated with the user 160 via an account identifier. The account profile 220 may be maintained on the client device 125 or a remote service (e.g., data processing system 110) accessible via the application 205. The account profile 220 may define, specify, or otherwise identify one or more languages (e.g., language settings via an account) associated with the user 160 (or extended account), the client device 125, or the application 205. As with language configuration 215, the language specified by account profile 220 may be used to send requests for content and retrieve one or more information resources (e.g., information resource 210).
An application 205 running on the client device 125 can generate and transmit at least one request for content 225 to the data processing system 110 over the network 105. The generation and transmission of the request 225 may be in response to input by the user 160 via an application 205 (e.g., user element) running on the client device 125. The request 225 may identify the account profile 220. In some implementations, the request 225 can include an identifier (e.g., a set of alphanumeric characters in a specified field), an associated account, or account profile 220 that references the user 160. In some implementations, the request 225 may include or may correspond to a search query generated via a search engine web page. For example, request 225 may be generated when a query is entered on a search engine web page loaded on application 205. In some implementations, the request 225 can include or identify a language configuration 215 associated with the application 205 or the client device 125. For example, request 225 may include one or more languages indicated by language configuration 215.
Request 225 may include one or more keywords 230A-N (hereinafter collectively referred to as keywords 230). The input of the one or more keywords 230 of the request 225 may be performed via one or more I/O devices of the client device 125. The one or more keywords 230 of the query 230 may correspond to or include a set of alphanumeric characters in the text input. In some implementations, the keywords 230 of the query 230 can correspond to inputs on elements of the information resource 210 (e.g., a search engine). In some implementations, the input may be audio input via a microphone or another form of transducer for audio input. The one or more keywords 230 of the query 230 may correspond to portions of the audio input that correspond to a set of alphanumeric characters. In some implementations, the application 205 can convert the input audio into a set of alphanumeric characters (e.g., text) using Natural Language Processing (NLP) techniques (e.g., speech recognition) to be included as keywords 230 for the query 230. In some implementations, the input audio can be included in the query 230 to be converted to a set of alphanumeric characters at the data processing system 110.
The query processor 135 running on the data processing system 110 may retrieve, identify, or otherwise receive the request 225 from the client device 125. Upon receipt, query processor 135 may parse query processor 135 to identify keywords 230. In some implementations, query processor 135 may extract the textual input included in or identified in request 225. Using the extracted text, query processor 135 may determine or identify one or more keywords 230. For example, query processor 135 may group or identify a set of alphanumeric characters separated from each other by spaces or line breaks as keyword 230 of request 225. In some implementations, query processor 135 may extract the audio input included or identified in request 225. Query processor 135 may apply NLP techniques (e.g., speech recognition) to identify keywords 230 from one or more portions of the audio input of request 225. When applying NLP techniques, query processor 135 may build, train, and maintain speech recognition models to apply to audio to identify keywords 230.
Using information associated with the request 225 or identified by the request 225, the query processor 135 running on the data processing system 110 can determine or identify candidate languages 235A-N (hereinafter collectively referred to as candidate languages 235) of the candidate set 240. Candidate languages 235 may be one or more candidate languages 325 that are estimated, predicted, or otherwise determined to be used by user 160. The information associated with the request 225 may include the language configuration 215, the account profile 220, and keywords 230. In some implementations, the query processor 135 can determine or identify the candidate language 235 based on the language configuration 215 associated with the application 205 or the client device 125. Query processor 135 may parse request 225 to identify one or more languages defined by language configuration 215 as candidate languages 235. Query processor 135 may add, insert, or include candidate languages 235 identified from language configuration 215 to candidate set 240.
In some implementations, the query processor 135 can determine or identify a set of candidate languages 235 based on the account profile 220. Query processor 135 may parse request 225 to identify account profile 220. For example, the query processor 135 may parse the request 225 to extract an account identifier associated with the account profile 220, and may find the account profile 220 associated with the account identifier. From the account profile 220, the query processor 135 can identify one or more languages defined for use by the user 160. Query processor 135 may add, insert, or insert candidate languages 235 identified from account profile 220 into candidate set 240.
In some implementations, at least one language identification model 245 can be established and maintained by the data processing system 110 to determine the language used in the keywords 230 of the request 225. Language recognition model 245 may be an Artificial Intelligence (AI) algorithm or a Machine Learning (ML) model (e.g., an artificial neural network, an n-gram model, a bayesian network, a random forest, a support vector machine, a decision tree, or the like). In general, language identification model 245 may include a set of inputs, a set of outputs, and a set of weights (sometimes referred to herein as parameters) to correlate the inputs and outputs. The input may include text (e.g., keywords 230 extracted from request 225). The output may include or identify the language 235 in which the text is used. In some implementations, the output can also include a likelihood metric that indicates the confidence of the text for each language 235. The weights may be according to the architecture of the AI algorithm or the ML model.
The language recognition model 245 may be trained (e.g., by the data processing system 110) using the training data set. The training may be according to supervised or unsupervised learning algorithms. The training data set may include a corpus of text in each language 235 labeled as a corpus. By applying the text from each corpus to the language recognition model 245, a result corresponding to one of the languages 235 may be generated from the language recognition model 245. Based on a comparison of the results to the markup language of the corpus of data sets in training, an error may be determined. The error may be a Mean Square Error (MSE), a Root Mean Square Error (RMSE), or a cross entropy error, among others. Using this error, the weights of language identification model 245 may be adjusted or modified. The updating of the weights of language identification model 245 may be repeated until convergence. For example, when it is determined that the change in the weight value is less than the convergence threshold, it may be determined that the weight of language identification model 245 has converged. The building and training of language recognition model 245 may be performed prior to receiving request 225 from one or more client devices 125.
In some implementations, the query processor 135 can identify or determine the candidate languages 235 based on one or more of the keywords 230 of the request 225. The first language 210A may refer to the language used in the keywords 230 of the request 225. To determine, in some implementations, query processor 135 may apply language identification model 245 to keywords 230 of request 225. In application, query processor 135 may feed back keywords 230 of request 225 as input to language identification model 245. Query processor 135 may process the inputs using the weights of language identification model 245 to generate or produce an output. The output of the language identification model 245 may indicate which language 235 the keyword 230 of the request 225 is in. In some implementations, the output can include the language 210 with the corresponding likelihood metric. Query processor 135 may identify language 210 from the output generated by language identification model 245. In some implementations, query processor 135 may identify the language 235 having the highest likelihood metric calculated by language identification model 245. Query processor 135 may add or insert candidate languages 235 determined using language identification model 245 into candidate set 240.
Referring now to fig. 3, a sequence diagram of a language profiling process 300 of the system 100 for automatically detecting a user language for content selection is depicted. As shown, from at least one database 330, the profile exporter 140 can select or identify at least one log record 305 for the account profile 220 identified by the request 225. Log record 305 may be maintained and stored on database 300. Log record 305 includes or identifies one or more activities 310A-N (collectively referred to below as activities 310). In some implementations, the activities 310 of the log record 305 can be arranged using one or more data structures. For example, log record 305 may be maintained using a relational database maintained with a database management system (DBMS) and may include an entry for each activity 310 of log record 305.
A log record 305 may be maintained on the database 300 for a particular client device 125, a particular application 205, or a particular account profile 220 (e.g., as depicted). The activity 310 identified in the log record 305 may correspond to a previous action performed by the client device 125 (or application 205) associated with the account profile 220 via the network 105. Activity 310 may also be associated with or include content. In some implementations, the at least one activity 310 of the log record 305 can include or correspond to a request for content (e.g., a search query) received from the client device 125. For example, a search query including keywords may have been submitted from a client device 125 associated with the account profile 220 to retrieve a web page using the keywords. In some implementations, the at least one activity 310 of the log record 305 can include or correspond to access of an information resource (e.g., a web page) by the client device 125. For example, a cookie can be used to identify a web page accessed by the client device 125 associated with the account profile, and the access of the client device 125 can be recorded on the log record 305. In some implementations, the at least one activity 310 of the log record 305 can include or correspond to an interaction with an element on an information resource performed via the client device 125. For example, a user 165 associated with an account profile 220 may enter a comment on a web page, and the comment may be identified by an activity 310 recorded on a log record 305.
Using one or more activities 310 of log record 305, profile exporter 140 may select, identify, or determine one or more candidate languages 235' A-N (hereinafter collectively referred to as candidate languages 235 ') of candidate set 240'. In some implementations, the profile deriver 140 may select or identify a subset of the activities 310 for determining the candidate languages 235 'of the candidate set 240'. For example, the profile deriver 140 may select a subset of the activities 310 from a time window prior to receiving the request 225. For each activity 310 identified from log record 305, profile exporter 140 may identify or determine candidate languages 235'. Upon determination, the profile deriver 140 may parse the activity 310 to identify an action performed by the client device 125 (or the application 205) via the network.
With this identification, the profile deriver 140 may identify content associated with the action corresponding to the recorded activity 310. The content may include, for example, keywords in a request for content, text on an accessed information resource, and input on one or more user interface elements on an information resource, among others. The profile deriver 140 may apply the language identification model 245 to the content associated with the activity to determine the candidate languages 235' in the manner described above. The process of identifying activity 310 and determining candidate languages 235' from content associated with activity 310 may be repeated through log record 305.
For each candidate language 235' identified from activity 310, profile deriver 140 may calculate, determine, or otherwise generate a confidence score. The confidence score may indicate a probability or certainty that the user 165 actually uses the corresponding candidate language 235'. In the calculation, the profile exporter 140 may identify the number of occurrences of the candidate language 235' from the activities 310 of the log record 305. In some implementations, profile exporter 145 may maintain a counter to track the number of occurrences of candidate languages 235' identified from activities 310 of parsing log records 305. Based on the number of occurrences, the profile deriver 140 may generate a confidence score. In some implementations, the profile deriver 140 can use the frequency of occurrence of the corresponding language 235' to determine a confidence score. The frequency may be based on the number of occurrences of the corresponding candidate language 235 'and the total number of occurrences of all identified candidate languages 235'. In general, the more occurrences, the higher the confidence score may be. Conversely, the fewer occurrences, the lower the confidence score of the corresponding candidate language 235' may be.
Using the confidence scores, the profile deriver 140 may determine whether to add or include a candidate language 235 'in the candidate set 240'. In some implementations, the profile exporter 140 may select the candidate languages 235 'corresponding to the N highest confidence scores to include into the candidate set 240'. In some implementations, the profile deriver 140 can compare the confidence score of the corresponding candidate language 235 'to a threshold score to determine whether to include to the candidate set 240'. The threshold score may delineate or partition the value of the confidence score corresponding to the candidate language 235 'being included in the candidate set 240'. When the confidence score satisfies (e.g., is greater than or equal to) the threshold score, the profile deriver 140 may select the corresponding candidate language 235 'for inclusion into the candidate set 240'. On the other hand, when the confidence score does not satisfy (e.g., is less than) the threshold score, the profile deriver 140 does not select the corresponding candidate language 235 'for inclusion in the candidate set 240'.
Beneficially, by using the confidence scores to determine whether to include the candidate language into the candidate set, the number of different languages in the candidate set may only be increased when the candidate language has been fully used (i.e. meets or exceeds a threshold score). For example, when the confidence score does not meet or exceed a threshold score, it has been determined that the use of candidate languages is insufficient to make such languages part of the candidate set. Because the threshold score is used in this manner, the candidate set may only include languages that a particular user actually understands. This therefore avoids increasing the size of the candidate set and therefore unnecessarily increasing the number of content items identifiable by the method. By limiting the number of content items to exactly those languages that the user can use, the method can more efficiently provide content items in a language understandable to the user.
Referring now to fig. 4, a sequence diagram of a result evaluation process 400 of the system 100 for automatically detecting user language for content selection is depicted. As shown, a search evaluator 145 running on the data processing system 110 can perform, run, or otherwise perform at least one search operation 405 using the keywords 230 of the request 225 to identify at least one query result 410. To perform search operation 405, search evaluator 145 may invoke (invoke) indexing service 130 using the keywords of keywords 230 of request 225. In some implementations, the search evaluator 145 can send or provide the keyword 230 by forwarding the request 230' (also referred to herein as a query). Request 230' may include at least a subset of the keywords 230 of the original request 230. In some implementations, the search evaluator 145 can generate and send a request 225' including the keywords 230 of the original request 225 to provide to the indexing service 130.
The indexing service 130 may aggregate one or more information resources (e.g., web pages) accessible via the network 105 (e.g., the internet). In some implementations, indexing service 130 can conduct or perform an indexing process (also referred to herein as web indexing or crawler (indexing)) through network 105 to identify information resources 420A-N (collectively referred to hereinafter as information resources 420). Each information resource 420 may be uniquely identified or referenced by an identifier (e.g., a Uniform Resource Locator (URL)). Further, each information resource 420 may include content (e.g., text or audiovisual) and may be associated with metadata. The indexing service 130 can parse each identified information resource 420 to extract or identify at least a portion of the content included in the information resource 420 and metadata associated with the information resource 420. With this identification, the indexing service 130 can maintain and store the identifier of the information resource 420, at least the portion of the content, and the metadata on the database 410.
Upon receipt, the indexing service 130 may parse the request 225 '(or the request 225) to extract or identify one or more keywords 230'. Using the keywords 230', the indexing service 130 can identify one or more information resources 420. In some implementations, the indexing service 130 can search the database 410 using the keywords 230' to find one or more information resources 420 aggregated via an indexing process. In recognition, the indexing service 130 can compare the keywords 230 'from the request 225' to the content or metadata of the information resource 420. In some implementations, the indexing service 130 can use or apply Natural Language Processing (NLP) processes to compare the keywords 230' with the content or metadata of the information resources 420. For example, the indexing service 130 may use the semantic knowledge graph to generate additional words and phrases with semantic similarity (e.g., synonyms) as keywords 230 'for the request 225'. The indexing service 130 may then use the additional keywords or phrases to match the content or metadata of the information resources 420. Based on the comparison, the indexing service 130 can determine whether at least a portion of the content or metadata of the information resource 420 matches or corresponds to one or more keywords 230'. In some implementations, the indexing service 130 can determine that the information resource 420 includes content or metadata that matches the keywords 230' or additional associated words and phrases.
Based on this determination, the indexing service 130 may generate at least one query result 415 to provide to the search evaluator 145. The query results 415 may include or identify one or more information resources 420 that are determined to have content or metadata that matches or corresponds to the keywords 230 'of the request 225'. When it is determined that the content or metadata of the information resource 402 does not match or correspond to any of the keywords 230', the indexing service 130 can exclude the information resource 420 from the query results 415. Conversely, when the content or metadata of the information resource 402 is determined to match or correspond to the keyword 230', the indexing service 130 can add or include the information resource 420 to the search query 415.
Through the identification of the one or more information resources 420 to include, the indexing service 130 can determine or generate at least one ranking 425 of the query results 415. The ranking 425 may specify, define, or identify the relevance of the information resources 420 related to the keywords 230 'of the request 225'. The ranking 425 may also identify the order in which the information resources 420 (or identifiers of the information resources 420) are to be presented (e.g., on a search results page). Upon determining, the indexing service 130 can calculate, determine, or generate a relevance score for each identified information resource 420. The calculation of the relevance score may be based on the number of occurrences of the keyword 230' in the content or metadata of the information resource 420. Based on the relevance scores of the identified information resources 420, the indexing service 130 can determine a ranking 425. In general, the higher the relevance score of a given information resource 420 in the query results 415, the higher the information resource 420 may be in the ranking 425. In contrast, the lower the relevance score of a given information resource 420 in the query results 415, the lower the information resource 420 may be in the ranking 425. As generated, the index service 130 may send or provide the query results 415 to the search evaluator 145.
The search evaluator 145 can identify from the search operation 405 information resources 420 ordered according to a ranking 425. In some implementations, the search evaluator 145 can parse the query results 415 received from the indexing service 130 to identify the information resources 420 and the rankings 425. Based on the information resources 420 and the rankings 425, the search evaluator 145 can select, identify, or determine one or more candidate languages 235A-N (collectively referred to below as candidate languages 235 ") of the candidate set 240". For each information resource 420, the search evaluator 145 may identify or determine the candidate language 235 ″ used by the information resource 420. The search evaluator 145 can parse the information resource 420 to extract or identify at least a portion of the content. Search evaluator 145 may apply language identification model 245 to the content of information resource 420 to determine candidate languages 235 "in the manner described above. The process of identifying information resources 420 and candidate languages 235 "may be repeated with query results 415.
In some implementations, the search evaluator 145 can use the candidate set 240' to arrange and generate the candidate set 240 ″. The search evaluator 145 may use the candidate languages 235 'in the candidate set 240' as an initial set of candidate languages 235 "for the candidate set 240". The search evaluator 145 may maintain the candidate languages 235 'from the candidate set 240 "when it determines that the candidate languages 235' are in the one or more information resources 240 of the query results 415. Otherwise, when it is determined that no candidate languages 235 'are found in any of the information resources 240 of the query results 415, the search evaluator 145 may remove the candidate languages 235' from the candidate set 240.
For each candidate language 235 "identified from the information resources 420, the search evaluator 145 may calculate, determine, or otherwise generate a confidence score. The confidence score may indicate a probability or certainty that the user 165 actually uses the corresponding candidate language 235". In the calculation, the search evaluator 145 may identify a number of occurrences of the candidate language 235 ″ from the information resource 420 of the query result 415. In some implementations, the search evaluator 145 can maintain a counter to track the number of occurrences of the candidate languages 235 ″ identified from the information resource 420 that parsed the query results 415. Further, the search evaluator 145 can identify one or more orders of the information resources 420 identified as candidate languages 235 ″ from the rankings 425. As discussed above, the ranking 425 may indicate the relevance of the information resources 420 to the keywords 230, and may identify the order of the information resources 420 in the query results 415.
Based on the order and number of occurrences identified from the rankings 425 of the information resources 420, the search evaluator 145 can generate a confidence score for each candidate language 235". In some implementations, the search evaluator 145 can use the frequency of occurrence of the corresponding language 235 "to determine a confidence score. The frequency may be based on the number of occurrences of the corresponding candidate language 235 "and the total number of occurrences of all identified candidate languages 235". In general, the higher the number of occurrences and the higher the order in the ranking 425, the higher the confidence score of the candidate language 235 "may be. Conversely, the lower the number of occurrences and the lower the order in the ranking 425, the lower the confidence score of the corresponding candidate language 235 "may be.
Using the confidence scores, the search evaluator 145 may determine whether to add or include a candidate language 235 "in the candidate set 240". In some implementations, the search evaluator 145 can select the candidate languages 235 "corresponding to the N highest confidence scores to include to the candidate set 240". In some implementations, the search evaluator 145 can compare the confidence score of the corresponding candidate language 235 ″ to a threshold score to determine whether to include into the candidate set 240 ″. The threshold score may delineate or partition the value of the confidence score corresponding to the candidate language 235 "to be included into the candidate set 240". When the confidence score satisfies (e.g., is greater than or equal to) the threshold score, the search evaluator 145 may select the corresponding candidate language 235 "for inclusion into the candidate set 240". On the other hand, when the confidence score does not satisfy (e.g., is less than) the threshold score, the search evaluator 145 does not select the corresponding candidate language 235 "for inclusion in the candidate set 240".
As already described above, by using the confidence scores to determine whether to include the candidate language into the candidate set, the number of different languages in the candidate set may only be increased when the candidate language has been fully used (i.e. meets or exceeds a threshold score). This therefore avoids increasing the size of the candidate set and therefore the number of content items identifiable by the method unnecessarily. By accurately limiting the number of content items to only those languages that the user can use, the method can more efficiently provide content items in languages that are understandable to the user.
Referring now to fig. 5, a sequence diagram of a content selection process 500 of the system 100 for automatically detecting a user language for content selection is depicted. As shown, the language evaluator 150 running on the data processing system 110 can determine or identify one or more languages (e.g., languages 165A and 165B) of the set of languages 505 used by the user 160 from the candidate languages 235, 235', 235 "of the candidate set 240, 240', 240". In some implementations, the language evaluator 150 may omit the candidate set 240 (and the candidate language 235) from this determination. In some implementations, the language evaluator 150 may determine or identify intersections between the candidate sets 240, 240', 240 "to identify common candidate languages 235, 235', 235". When one or more candidate languages 235, 235 "are found in all candidate sets 240, 240', 240", the language evaluator 150 may identify or determine them as common. In contrast, when one or more candidate languages 235, 235 "are found in less than all of the candidate language sets 240, 240', 240", the language evaluator 150 may identify or determine that they are not common. Based on the intersection, language evaluator 150 may determine or identify common candidate languages 235, 235', 235 "as the languages used by users 160 for language set 505.
The content aggregator 155 running on the data processing system 110 can maintain a collection of content items 510 from one or more content providers 115 on the database 300 (or a separate database). Each content item 510 may correspond to or include text, image, audio, video, or multimedia content to be presented via the client device 125. The content item 510 may correspond to or include an object to be inserted onto an information resource (e.g., information resource 210). According to HTML5, the object can be, for example, an iframe, a text object, an image, an audio object, a canvas object, a video object, or the like. Each content item 510 may be referenced by an identifier, such as a URL or another set of alphanumeric characters.
In some implementations, the content aggregator 155 can retrieve, identify, or receive the content item 510 itself from the content provider 115 via the network 105. Upon receipt, the content aggregator 155 may store and maintain the content items 510 on the database 300. In some implementations, the content aggregator 155 can retrieve, identify, or receive an identifier of the content item 510 from the content provider 115. The identifier of the content item 510 may reference or correspond to a location of the content item 510 stored or maintained by the content provider 115 and may be, for example, a URL or another collection of alphanumeric characters, or the like. Upon receipt, the content aggregator 155 may store and maintain identifiers for the content items 510 on the database 300.
The content items 510 may include content in one or more languages 165 (e.g., the depicted first language 165A and second language 165B). For example, as depicted, content items 510 may include content items 510A-1 through 510A-X (hereinafter collectively referred to as content items 510A) in a first language 165A. Content items 510 may also include content items 510B-1 through 510B-X (hereinafter collectively referred to as content items 510B) in a second language 165B. Each content item 510 may be associated with at least one selection criterion. The selection criteria may specify, define, or identify parameters from which the associated content item 510 is to be selected as a candidate for provision to the client device 125. For example, content item 510 may include text and images of a football provided by "XYZ" corporation. In this example, the associated selection criteria 510 may specify that the client device 125 previously accessed an information resource (e.g., a web page) that contains content related to football or a company. Parameters of the selection criteria may include account segments, geographic areas, device types, and the like. The selection criteria may be configured or set by the content provider 115 that provides the content item 510 to the data processing system 110.
In some implementations, the content item 510 is identified as being available in a language by the content provider 115. For example, when the content item 510 is submitted to the data processing system 110, the content provider 115 may send an indication of the language 165 in which the content item 510 is tagged (e.g., as one of the first language 165A or the second language 165B). In some implementations, the identification of the content item 510 as being in one language 165 can be performed by the language evaluator 140 in the manner described above. For example, upon receiving the content item 510, the content aggregator 155 may apply the language identification model 305 to the content of the content item 510 to determine the language of the content item 510.
In some implementations, the content aggregator 155 can verify or determine that the language of the content item 510 is the same language of the associated information resource. The information resources may be associated via links contained in the content item 510. For example, the associated information resource may be a landing page for content item 510. For verification, the content aggregator 155 may identify an information resource (e.g., via a link) associated with the content item 510. The content aggregator 155 can compare the language used by the content item 510 with the language used by the associated information resource. The content aggregator 155 may determine the language of the content item 510 by applying the language identification model 245 to the content item 510. Further, the content aggregator 155 may determine the language of the associated information resource by applying the language identification model 245 to the information resource. When a language is determined to match or correspond, the content aggregator 155 may include or add the content item 510 to the candidate set for the respective language. Otherwise, when the languages are determined to not match or correspond, the content aggregator 155 may exclude the content item 510 from the candidate set for the respective language.
Referring now to fig. 6, a sequence diagram of a result providing process 600 of the system 100 for automatically detecting user language for content selection is depicted. As shown, the content aggregator 155 can identify or select at least one content item 510' to provide to the client device 125. The selection of content items 510' may be from a set of content items 510A in a first language 165A and a set of content items 510B in a second language 165B. In some implementations, the content aggregator 155 can generate, determine, or identify a selection value for each identified content item 510. The selection value may be used to identify at least one content item 510' to provide to the client device 125 for presentation. The determination of the selection value for content item 510 may be based on a comparison between request 225 and selection criteria for content item 510. For example, the content aggregator 155 may determine the selection value by comparing the keywords 230 in the request 225, the segments of the account profile 202, and the device type and location of the client device 125, among other things, to the selection criteria of the content item 510 that determined the selection value.
Using the selection values of the content items 510, the content aggregator 155 may select the content items 510' from a set of content items 510A in the first language 165A and a set of content items 510B in the second language 165B. In some implementations, the content aggregator 155 can select the content item 510' corresponding to the highest selection value. In some implementations, the content aggregator 155 can select the content item 510' according to a content selection protocol. The content selection protocol may include, for example, a real-time bidding protocol, a head bidding protocol, and the like. The operations of the content selection protocol may be distributed among the data processing system 110, the content provider 115, and the client device 125. In executing the content selection protocol, the content aggregator 155 may retrieve, identify, or receive a bid value (e.g., a bid value) from each content provider 115 having a content item 510 in the candidate set 515A or 515B. In some implementations, the content aggregator 155 can combine the submission value with the selection value of the content item 510 of the content provider 115 to modify or determine the selection value. In combining, the content aggregator 155 may identify or select the content item 510 corresponding to the highest selection value to use as the selected content item 510'. The selected content item 510' may be from a candidate set in the first language 210A or a candidate set in the second language 210B.
With this selection, the content aggregator 155 can send, transmit, or provide the content item 510' to the client device 125. In some implementations, the content aggregator 155 can provide the information resource 420 (or an identifier of the information resource 420) identified from the search operation 405 to the content item 510'. The provision of the content item 510' and the information resource 420 may be via at least one output 605. The application 205 may receive the content item 510' sent from the data processing system 110 via the network 105. Upon receipt, the application 205 may present the content item 510 'on the information resource 215'. In some implementations, the application 205 can present the information resource 420 on the information resource 215' according to the ranking 425. For example, the information resource 215 'can be a search results page and the corresponding identifier of the information resource 420 can be presented along with the content item 510'.
In this manner, system 100 may improve the overall functionality of data processing system 110 and client device 125. By determining that the user 160 of the client device 125 is able to understand multiple languages 165A and 165B in a targeted manner, the candidate sets 515A and 515B can be expanded to include content items in these languages 165A and 165B. Finally, the content item 510' selected from the candidate sets 515A and 515B may be the language 165A or 165B and may be provided for presentation to the user 160 operating the client device 125A. As a result, the information resource 220 'may use the first language 165A, while the content item 510' inserted into the content slot 610 may use the second language 165B. The inclusion of content in multiple languages 165A and 165B may reduce consumption of computing resources at both the client device 125 and the data processing system 110 by eliminating the need to provide separate queries for content in those languages 165. In addition, human-computer interaction (HCI) between the user 160 and the system 100 may be enhanced by presenting content in potentially multiple languages 165.
Referring now to FIG. 7, a flow diagram of a method 700 of automatically detecting a user language for content selection is depicted. Method 700 may be implemented or performed using any of the components described in detail herein in connection with fig. 1-6 and 8. Method 700 may also include the actions, operations, and functions of any of the components described in detail herein in connection with fig. 1-6 and 8. Briefly, a data processing system may receive a request for content (705). The data processing system may determine a candidate language from the request for content (710). The data processing system may determine a candidate language from the log record (715). The data processing system may determine a candidate language from the search results (720). The data processing system may identify the language used (725). The data processing system may select a content item (730). The data processing system provides an output with the content item (735).
In more detail, a data processing system (e.g., data processing system 110) may receive a request (e.g., request 225) for content (705). The request for content may include one or more keywords (e.g., keyword 235) from a client device (e.g., client device 125). The keywords may be part of a search query and may be used to identify indexed information resources. The request may identify or be associated with an account profile (e.g., account profile 220).
The data processing system may determine a candidate language (e.g., candidate language 235) from the request for content (710). The data processing system may parse the request to identify a language configuration of the client device or a language setting of the account profile. In addition, the data processing system may use a model (e.g., language identification model 245) to identify the language in which the keyword is used. Upon parsing, the data processing system may identify candidate languages for inclusion into a candidate set (e.g., candidate set 240).
The data processing system may determine 715 a candidate language (e.g., candidate language 235') from the log record (e.g., log record 305). The data processing system can identify one or more activities maintained on the log records of the client device or account profile. For each identified activity, the data processing system may identify associated content. The data processing system may determine a language in which content associated with the activity is used by applying the model. The data processing system may add the candidate language to a candidate set (e.g., candidate set 240').
The data processing system can determine 720 a candidate language from the search results (e.g., query results 415). Using the keywords of the request for content, the data processing system may perform a search operation (e.g., search operation 405). In accordance with the search operation, the data processing system can identify one or more indexed information resources (e.g., information resource 420). The data processing system may apply the model to determine the language in which the information resource is used. The data processing system may add the candidate language to a candidate set (e.g., candidate set 240 ").
The data processing system may identify the languages used (e.g., languages 165A and 165B) (725). The data processing system may determine an intersection between the candidate sets of languages. The intersection may include one or more languages that are common across the candidate set. Using the intersection, the data processing system may identify the language used by the client device.
The data processing system may select a content item (e.g., content item 510') (730). The content item may be one of the languages identified as being used by the client device. The data processing system may identify the content item according to a content selection protocol. The data processing system may provide an output (e.g., output 605) with the content item (735). The output may include the selected content item, along with the indexed information resources.
Referring now to FIG. 8, a general architecture of an illustrative computer system 800 that may be used to implement any of the computer systems discussed herein (including the data processing system 110 and its components, the content provider 115, the content publisher 120, and the client device 125) is shown, according to some embodiments. Computer system 800 may be used to provide information for display via network 830. The computer system 800 includes one or more processors 820 communicatively coupled with a memory 825, one or more communication interfaces 805 communicatively coupled with at least one network 830 (e.g., network 105), as well as one or more output devices 810 (e.g., one or more display units) and one or more input devices 815.
The processor 820 may include a microprocessor, an Application Specific Integrated Circuit (ASIC), a Field Programmable Gate Array (FPGA), etc., or a combination thereof. The memory may include, but is not limited to, electronic, optical, magnetic, or any other storage or transmission device capable of providing a processor with program instructions. Memory 825 may include any computer-readable storage medium and may store computer instructions, such as processor-executable instructions for implementing the various functions described herein for the various systems, as well as any data associated therewith, generated thereby, or received via a communications interface or input device (if present). The memory 825 may include a floppy disk, a CD-ROM, a DVD, a magnetic disk, a memory chip, an ASIC, an FPGA, a Read Only Memory (ROM), a Random Access Memory (RAM), an electrically erasable ROM (EEPROM), an erasable-programmable ROM (EPROM), a flash memory, an optical medium, or any other suitable memory from which a processor can read instructions. The instructions may comprise code from any suitable computer-programming language.
The processor 820 shown in fig. 8 may be used to execute instructions stored in the memory 825 and, in so doing, may also read from or write to the memory various information processed and/or generated in accordance with the execution of the instructions. A processor 820 coupled with a memory 825 (collectively referred to herein as a processing unit) may be included in the components of the system 100, such as the data processing system 110 (and also the content provider 115, the content publisher 120, the client device 125, and the indexing service 130). For example, the data processing system 110 may include a memory 825 as the database 240. A processor 820 (collectively referred to herein as a processing unit) coupled with a memory 825 may be included in content provider 115. For example, the content provider 115 may include a memory 825 to store the content item 505 or 505'. A processor 820 (collectively referred to herein as a processing unit), coupled to a memory 825 may be included in the content publisher 120. For example, the content publisher 120 can include a memory 825 to store the information resource 210. A processor 820 (collectively referred to herein as a processing unit) coupled to a memory 825 may be included in the client device 125.
The processor 820 of the computer system 800 may also be communicatively coupled to or made to control the communication interface 805 to send or receive various information in accordance with the execution of the instructions. For example, the communication interface 805 may be coupled to a wired or wireless network, bus, or other communication mechanism, and thus may allow the computer system 800 to send information to and receive information from other devices (e.g., other computer systems). Although not explicitly shown in the systems of fig. 1-6, one or more communication interfaces facilitate the flow of information between components of the system 800. In some implementations, the communication interface can be configured (e.g., via various hardware or software components) to provide a website as an access portal to at least some aspects of the computer system 800. Examples of communication interfaces 805 include user interfaces (e.g., applications 215, information resources 220 or 220', and content items 505 or 505') through which a user can communicate with other devices of the system 100.
An output device 810 of the computer system 800 shown in fig. 8 may be provided, for example, to allow various information to be viewed or otherwise perceived in connection with execution of the instructions. For example, an input device 815 may be provided, e.g., to allow a user to make manual adjustments, make selections, input data, or interact with the processor in any of a variety of ways during execution of the instructions. Additional information regarding the general computer system architecture that can be used with the various systems discussed herein is further provided herein.
The network 830 may include a computer network such as the internet, a local area network, a wide area network, a metropolitan area network, or other area network, an intranet, a satellite network, other computer networks such as voice or data mobile telephone communication networks, and combinations thereof. Network 830 may be any form of computer network that relays information between components of system 100, such as data processing system 110 and its components, content provider 115, content publisher 120, client device 125, and indexing service 130. For example, network 830 may include the internet and/or other types of data networks, such as a Local Area Network (LAN), a Wide Area Network (WAN), a cellular network, a satellite network, or other types of data networks. Network 830 may also include any number of computing devices (e.g., computers, servers, routers, network switches, etc.) configured to receive and/or transmit data within network 830. Network 830 may also include any number of hardwired and/or wireless connections. The client device 125 may communicate wirelessly (e.g., via WiFi, cellular, radio, etc.) with a transceiver that is hardwired (e.g., via fiber optic cable, CAT5 cable, etc.) to other computing devices in the network 830.
Embodiments of the subject matter and the operations described in this specification can be implemented in digital electronic circuitry, or in computer software embodied in tangible media, firmware, or hardware, including the structures disclosed in this specification and their structural equivalents, or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer programs, i.e., one or more modules of computer program instructions, encoded on computer storage medium for execution by, or to control the operation of, data processing apparatus. The program instructions may be encoded on an artificially generated propagated signal, e.g., a machine-generated electrical, optical, or electromagnetic signal, that is generated to encode information for transmission to suitable receiver apparatus for execution by data processing apparatus. The computer storage medium may be or be included in a computer-readable storage device, a computer-readable storage substrate, a random or serial access memory array or device, or a combination of one or more of them. Further, although the computer storage medium is not a propagated signal, the computer storage medium can comprise a source or destination of computer program instructions encoded in an artificially generated propagated signal. The computer storage medium may also be or be included in one or more separate physical components or media (e.g., multiple CDs, disks, or other storage devices).
The features disclosed herein may be implemented on a smart television module (or connected television module, hybrid television module, etc.), which may include a processing module configured to integrate an internet connection with a more traditional television program source (e.g., receiving via cable, satellite, wireless, or other signals). The smart television module may be physically incorporated into a television, or may comprise a separate device, such as a set-top box, a blu-ray or other digital media player, a game console, a hotel television system, or other companion device. The smart television module may be configured to allow viewers to search and find videos, movies, photos, and other content on a network, local cable channels, satellite television channels, or stored on a local hard drive. A set-top box (STB) or set-top unit (STU) may include an information appliance device that may contain a tuner and connect to a television set and an external signal source to convert the signal into content that is then displayed on a television screen or other display device. The smart television module may be configured to provide a home screen or top-level screen including icons for a number of different applications, such as a web browser and a number of streaming media services, connected cable or satellite media sources, other network "channels," and so forth. The smart television module may also be configured to provide an electronic program guide to the user. A companion application to the smart television module may operate on the mobile computing device to provide additional information to the user about available programming, to allow the user to control the smart television module, and so on. In some implementations, the features may be implemented on a laptop or other personal computer, smartphone, other mobile phone, handheld computer, tablet personal computer, or other computing device. In some implementations, the features disclosed herein may be implemented on a wearable device or component (e.g., a smart watch) that may include a processing module configured to integrate an internet connection (e.g., with another computing device or network 830).
The operations described in this specification can be implemented as operations performed by data processing apparatus on data stored on one or more computer-readable storage devices or on data received from other sources. The terms "data processing apparatus," "data processing system," "user device," or "computing device" include all types of apparatus, devices, and machines for processing data, including for example, programmable processors, computers, systems on one or more chips, or combinations of the foregoing. The apparatus can comprise special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit). The apparatus can include, in addition to hardware, code that creates a runtime environment for the computer program in question, e.g., code that constitutes processor firmware, a protocol stack, a database management system, an operating system, a cross-platform runtime environment, a virtual machine, or a combination of one or more of them. The apparatus and operating environment may implement a variety of different computing model infrastructures, such as web services, distributed computing and grid computing infrastructures.
A computer program (also known as a program, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, object, or other unit suitable for use in a computing environment. A computer program may, but need not, correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data (e.g., one or more scripts stored in a markup language document), in a single file dedicated to the program in question, or in multiple coordinated files (e.g., files that store one or more modules, sub programs, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.
The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. The processes and logic flows can also be performed by, and apparatus can also be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).
Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for performing actions in accordance with the instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. However, a computer need not have such a device. Further, the computer may be embedded in another device, e.g., a mobile telephone, a Personal Digital Assistant (PDA), a mobile audio or video player, a game console, a Global Positioning System (GPS) receiver, or a portable storage device (e.g., a Universal Serial Bus (USB) flash drive). Devices suitable for storing computer program instructions and data include all forms of non-volatile memory, media and memory devices, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, such as internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in, special purpose logic circuitry.
To provide for interaction with a user, embodiments of the subject matter described in this specification can be implemented on a computer having a display device (e.g., a CRT (cathode ray tube), plasma, or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user can provide input to the computer. Other kinds of devices may also be used to provide for interaction with a user. For example, feedback provided to the user can include any form of sensory feedback, such as visual feedback, auditory feedback, or tactile feedback, and input from the user can be received in any form, including acoustic, speech, or tactile input. Further, the computer may interact with the user by sending and receiving documents to and from the device used by the user, for example, by sending a web page to a web browser on the user's client device in response to a request received from the web browser.
Implementations of the subject matter described in this specification can be implemented in a computing system that includes a back-end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front-end component (e.g., a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described in this specification), or any combination of one or more such back-end, middleware, or front-end components. The components of the system can be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network ("LAN") and a wide area network ("WAN"), the internet (e.g., the internet), and peer-to-peer networks (e.g., ad hoc peer-to-peer networks).
A computing system, such as system 800 or system 100, may include clients and servers. For example, the data processing system 110 and its components of the system 100, the content providers 115, the content publishers 120, the client devices 125, and the indexing service 130 can each include one or more data centers or one or more servers in a server farm. A client (e.g., client device 125) and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some implementations, the server transmits data (e.g., HTML pages) to the client device (e.g., for displaying data to and receiving user input from a user interacting with the client device). Data generated at the client device (e.g., a result of the user interaction) may be received at the server from the client device.
While this specification contains many specific implementation details, these should not be construed as limitations on the scope of any inventions or of what may be claimed, but rather as descriptions of features specific to particular implementations of the systems and methods described herein. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely, various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Furthermore, although features may be described as acting in certain combinations and even initially claimed as such, one or more features from a claimed combination can in some cases be excised from the combination, and the claimed combination may be directed to a subcombination or variation of a subcombination.
Similarly, while operations are depicted in the drawings in a particular order, this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order, or that all illustrated operations be performed, to achieve desirable results. In some cases, the actions recited in the claims can be performed in a different order and still achieve desirable results. Moreover, the processes depicted in the accompanying figures do not necessarily require the particular order shown, or sequential order, to achieve desirable results.
In some cases, multitasking and parallel processing may be advantageous. Moreover, the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments, and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products. For example, the query processor 135, profile deriver 140, search evaluator 145, language evaluator 150, and content aggregator 155 may be part of the data processing system 110, a single module, a logical device with one or more processing modules, or one or more servers.
For the cases where the system discussed herein collects personal information about a user or may make use of personal information, the user may be provided with an opportunity to control whether programs or features of personal information (e.g., information about the user's social network, social actions or activities, the user's preferences, or the user's location) may be collected, or whether or how content is received from a content server or other data processing system that may be more relevant to the user. In addition, some data may be anonymized in one or more ways prior to storage or use, in order to remove personally identifiable information when generating parameters. For example, the identity of the user may be anonymous, such that no personally identifiable information of the user can be determined, or the geographic location of the user may be generalized where location information is obtained (e.g., at the city, zip code, or state level), such that no particular location of the user can be determined. Thus, the user may control how information is collected about him or her and used by the content server.
Having now described some illustrative embodiments, it is apparent that the foregoing is illustrative and not limiting, having been presented by way of example. In particular, although many of the examples presented herein involve specific combinations of method acts or system elements, these acts and those elements may be combined in other ways to accomplish the same objectives. Acts, elements and features discussed only in connection with one embodiment are not intended to be excluded from other embodiments or from a similar role in an embodiment.
The phraseology and terminology used herein is for the purpose of description and should not be regarded as limiting. The use of "including," "comprising," "having," "containing," "involving," "characterized by," and variations thereof herein, is meant to encompass the items listed thereafter and equivalents thereof as well as additional items, as well as alternative embodiments consisting of the items specifically listed thereafter. In one embodiment, the systems and methods described herein consist of one each combination of more than one or all of the described elements, acts or components.
Any reference to an embodiment or element or act of the systems and methods referred to herein in the singular may also include implementations including a plurality of these elements, and any plural reference to any embodiment or element or act herein may also include implementations including only a single element. References in the singular or plural form are not intended to limit the presently disclosed systems or methods, their components, acts or elements to the singular or plural configuration. References to any action or element based on any information, action, or element may include embodiments in which the action or element is based, at least in part, on any information, action, or element.
Any embodiments disclosed herein may be combined with any other embodiments, and references to "an embodiment," "some embodiments," "an alternative embodiment," "various embodiments," "one embodiment," etc. are not necessarily exclusive of one another, and are intended to mean that a particular feature, structure, or characteristic described in connection with the embodiments may be included in at least one embodiment. The terms used herein do not necessarily all refer to the same embodiment. Any embodiment may be combined, inclusively or exclusively, with any other embodiment in any manner consistent with aspects and embodiments disclosed herein.
References to "or" may be construed as inclusive such that any term described using "or" may refer to any single, more than one, or all of the described terms.
Where technical features in the drawings, detailed description or any claim are followed by reference signs, the reference signs have been included for the sole purpose of increasing the intelligibility of the drawings, detailed description, and claims. Neither the reference signs nor their absence therefore have any limiting effect on the scope of any claim element.
The systems and methods described herein may be embodied in other specific forms without departing from the characteristics thereof. Although the examples provided herein relate to selecting content to be provided in a networked environment, the systems and methods described herein may include application to other environments. The foregoing embodiments are illustrative, and not limiting of the described systems and methods. The scope of the systems and methods described herein is, therefore, indicated by the appended claims rather than by the foregoing description, and all changes that come within the meaning and range of equivalency of the claims are intended to be embraced therein.
Claims (20)
1. A method, comprising:
receiving, by a data processing system having one or more processors, a request from a client device for content identifying an account profile;
determining, by the data processing system, a first set of candidate languages from the plurality of languages using the log records identifying the plurality of activities of the account profile;
identifying, by the data processing system, a plurality of information resources to present to the client device in response to the request for content;
determining, by the data processing system, a second set of candidate languages from the plurality of languages based on content in each of the plurality of information resources;
identifying, by a data processing system, a set of languages included in both a first set of candidate languages and a second set of candidate languages, the set of languages including a first language and a second language from a plurality of languages; and
the association between the account profile, the first language, and the second language is stored by the data processing system in one or more data structures.
2. The method of claim 1, further comprising:
generating, by the data processing system, a first confidence score in a first language based on a first number of occurrences of the first language in at least one of a plurality of information resources or a plurality of activities identified in response to a request for content; and
generating, by the data processing system, a second confidence score in the second language based on a second number of occurrences of the second language in at least one of the plurality of information resources or the plurality of activities identified in response to the request for content.
3. The method of claim 1, further comprising:
including, by the data processing system, the first language into a first set of candidate languages in response to determining that the first confidence score for the first language is greater than the threshold score; and
including, by the data processing system, the second language into the second set of candidate languages in response to determining that the second confidence score for the second language is greater than the threshold score.
4. The method of any preceding claim, further comprising:
identifying, by a data processing system, a first plurality of content items in a first language and a second plurality of content items in a second language; and
providing, by the data processing system, a content item selected from one of the first plurality of content items and the second plurality of content items to the client device, the content item being in one of the first language or the second language.
5. The method of any preceding claim, further comprising:
identifying, by the data processing system, a selection value for each of a first plurality of content items in a first language and a second plurality of content items in a second language; and
selecting, by the data processing system, content items from the first plurality of content items and the second plurality of content items to provide to the client device according to a content selection protocol, the content items being in one of the first language or the second language.
6. The method of any preceding claim, further comprising:
identifying, by a data processing system, an information resource associated with a content item in a first language or a second language;
determining, by the data processing system, that the language of the content item corresponds to the language of the information resource; and
adding, by the data processing system, the content item to a plurality of candidate content items for selection therefrom by the client device in response to determining that the language of the content item corresponds to the language of the information resource.
7. The method of any preceding claim, further comprising:
identifying, by the data processing system, a third set of candidate languages from at least one of a language setting of the account profile, a language configuration of an application running on the client device, or one or more keywords included in the request for content; and
wherein identifying the set of languages further comprises identifying a set of languages included in the first set of candidate languages, the second set of candidate languages, and the third set of candidate languages.
8. The method of any of the preceding claims, wherein determining the first set of candidate languages further comprises determining, from the plurality of languages, a plurality of activities comprising at least one of: the search query received from the client device, the client device's access to the information resource, and the interaction with the element on the information resource.
9. The method of any preceding claim, wherein determining a second set of candidate languages further comprises determining from a plurality of languages based on at least one of: a ranking of a plurality of information resources to be presented; or a frequency of each language of the second set of candidate languages across the plurality of information resources identified in response to the request for content.
10. The method of any preceding claim, wherein receiving a request for content further comprises receiving a query comprising one or more keywords; and
wherein identifying the plurality of information resources further comprises performing a search operation using the one or more keywords of the query to identify the plurality of information resources; and further comprising:
providing, by the data processing system, to the client an output including at least one of the plurality of information resources and a content item selected from one of a first plurality of content items in a first language and a second plurality of content items in a second language, the content item being in one of the first language or the second language.
11. A system, comprising:
a data processing system having one or more processors coupled with a memory configured to:
receiving, from a client device, a request for content identifying an account profile;
determining a first set of candidate languages from the plurality of languages using a log record identifying a plurality of activities of the account profile;
identifying, in response to the request for content, a plurality of information resources to present to the client device;
determining a second set of candidate languages from the plurality of languages based on content in each of the plurality of information resources;
identifying a set of languages included in both a first set of candidate languages and a second set of candidate languages, the set of languages including a first language and a second language from a plurality of languages;
the association between the account profile, the first language, and the second language is stored in one or more data structures.
12. The system of claim 11, wherein the data processing system is further configured to:
generating a first confidence score in a first language based on a first number of occurrences of the first language in at least one of a plurality of information resources or a plurality of activities identified in response to a request for content; and
a second confidence score in a second language is generated based on a second number of occurrences of the second language in at least one of a plurality of information resources or a plurality of activities identified in response to the request for content.
13. The system of claim 11, wherein the data processing system is further configured to:
responsive to determining that the first confidence score for the first language is greater than the threshold score, including the first language into a first set of candidate languages; and
in response to determining that the second confidence score for the second language is greater than the threshold score, the second language is included into a second set of candidate languages.
14. The system of any of claims 11 to 13, wherein the data processing system is further configured to:
identifying a first plurality of content items in a first language and a second plurality of content items in a second language; and
providing a content item selected from one of the first plurality of content items and the second plurality of content items to the client device, the content item being in one of the first language or the second language.
15. The system of any of claims 11 to 14, wherein the data processing system is further configured to:
identifying a selection value for each of a first plurality of content items in a first language and a second plurality of content items in a second language; and
in accordance with a content selection protocol, content items are selected from a first plurality of content items and a second plurality of content items to provide to a client device, the content items being in one of a first language or a second language.
16. The system of any of claims 11 to 15, wherein the data processing system is further configured to:
identifying an information resource associated with a content item in a first language or a second language;
determining that the language of the content item corresponds to the language of the information resource; and
in response to determining that the language of the content item corresponds to the language of the information resource, the content item is added to a plurality of candidate content items for selection therefrom by the client device.
17. The system of any of claims 11 to 16, wherein the data processing system is further configured to:
identifying a third set of candidate languages from at least one of a language setting of the account profile, a language configuration of an application running on the client device, or one or more keywords included in the request for content; and
a set of languages included in the first set of candidate languages, the second set of candidate languages, and the third set of candidate languages is identified.
18. The system of any of claims 11 to 17, wherein the data processing system is further configured to determine, based on the plurality of activities identified in the log record, a plurality of activities from a plurality of languages comprising at least one of: the search query received from the client device, the client device's access to the information resource, and the interaction with the element on the information resource.
19. The system of any of claims 11 to 18, wherein the data processing system is further configured to determine from a plurality of languages based on at least one of: a ranking of a plurality of information resources to be presented; or a frequency of each language of the second set of candidate languages across the plurality of information resources identified in response to the request for content.
20. The system of any of claims 11 to 19, wherein the data processing system is further configured to:
receiving a query comprising one or more keywords from a client device;
performing a search operation using one or more keywords of the query to identify a plurality of information resources; and
providing an output to a client device that includes at least one of a plurality of information resources and a content item selected from one of a first plurality of content items in a first language and a second plurality of content items in a second language, the content item being in one of the first language or the second language.
Applications Claiming Priority (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
PCT/US2020/050671 WO2022055506A1 (en) | 2020-09-14 | 2020-09-14 | Automated user language detection for content selection |
Publications (1)
Publication Number | Publication Date |
---|---|
CN115176242A true CN115176242A (en) | 2022-10-11 |
Family
ID=72614054
Family Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
CN202080097492.4A Pending CN115176242A (en) | 2020-09-14 | 2020-09-14 | Automatic user language detection for content selection |
Country Status (5)
Country | Link |
---|---|
US (1) | US20220350851A1 (en) |
EP (1) | EP4211570A1 (en) |
CN (1) | CN115176242A (en) |
CA (1) | CA3166481A1 (en) |
WO (1) | WO2022055506A1 (en) |
Family Cites Families (8)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US8375025B1 (en) * | 2010-12-30 | 2013-02-12 | Google Inc. | Language-specific search results |
US9906621B2 (en) * | 2014-06-03 | 2018-02-27 | Google Llc | Providing language recommendations |
CN105975558B (en) * | 2016-04-29 | 2018-08-10 | 百度在线网络技术（北京）有限公司 | Establish method, the automatic edit methods of sentence and the corresponding intrument of statement editing model |
US10430042B2 (en) * | 2016-09-30 | 2019-10-01 | Sony Interactive Entertainment Inc. | Interaction context-based virtual reality |
US20180366110A1 (en) * | 2017-06-14 | 2018-12-20 | Microsoft Technology Licensing, Llc | Intelligent language selection |
EP3622507B1 (en) * | 2018-04-16 | 2020-10-21 | Google LLC | Automatically determining language for speech recognition of spoken utterance received via an automated assistant interface |
US11507742B1 (en) * | 2019-06-27 | 2022-11-22 | Rapid7, Inc. | Log parsing using language processing |
US11126797B2 (en) * | 2019-07-02 | 2021-09-21 | Spectrum Labs, Inc. | Toxic vector mapping across languages |
-
2020
- 2020-09-14 EP EP20776055.4A patent/EP4211570A1/en active Pending
- 2020-09-14 US US17/623,707 patent/US20220350851A1/en active Pending
- 2020-09-14 CA CA3166481A patent/CA3166481A1/en active Pending
- 2020-09-14 WO PCT/US2020/050671 patent/WO2022055506A1/en active Application Filing
- 2020-09-14 CN CN202080097492.4A patent/CN115176242A/en active Pending
Also Published As
Publication number | Publication date |
---|---|
US20220350851A1 (en) | 2022-11-03 |
EP4211570A1 (en) | 2023-07-19 |
CA3166481A1 (en) | 2022-03-17 |
WO2022055506A1 (en) | 2022-03-17 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US11880398B2 (en) | Method of presenting excluded keyword categories in keyword suggestions | |
US10853360B2 (en) | Searchable index | |
US11004109B2 (en) | Automated creative extension selection for content performance optimization | |
US9405805B2 (en) | Identification and ranking of news stories of interest | |
US11086892B1 (en) | Search result content item enhancement | |
US9600600B2 (en) | Method and system for evaluating query suggestions quality | |
KR101506380B1 (en) | Infinite browse | |
US9679027B1 (en) | Generating related questions for search queries | |
US9275113B1 (en) | Language-specific search results | |
US8548981B1 (en) | Providing relevance- and diversity-influenced advertisements including filtering | |
US11250716B2 (en) | Network system for contextual course recommendation based on third-party content | |
US20150058358A1 (en) | Providing contextual data for selected link units | |
US9916384B2 (en) | Related entities | |
US11789946B2 (en) | Answer facts from structured content | |
US11768844B2 (en) | Artificial intelligence and/or machine learning systems and methods for evaluating audiences in an embedding space based on keywords | |
US10963916B2 (en) | Systems and methods for assessing advertisement | |
US9317487B1 (en) | Expansion of high performing placement criteria | |
US9152701B2 (en) | Query classification | |
US20230325421A1 (en) | Selecting from Arrays of Multilingual Content | |
US20220350851A1 (en) | Automated user language detection for content selection | |
RU2589856C2 (en) | Method of processing target message, method of processing new target message and server (versions) |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
PB01 | Publication | ||
PB01 | Publication | ||
SE01 | Entry into force of request for substantive examination | ||
SE01 | Entry into force of request for substantive examination |
US9934452B2 - Pruning and label selection in hidden Markov model-based OCR - Google Patents
Pruning and label selection in hidden Markov model-based OCR Download PDFInfo
- Publication number
- US9934452B2 US9934452B2 US15/614,491 US201715614491A US9934452B2 US 9934452 B2 US9934452 B2 US 9934452B2 US 201715614491 A US201715614491 A US 201715614491A US 9934452 B2 US9934452 B2 US 9934452B2
- Authority
- US
- United States
- Prior art keywords
- nodes
- frame
- node
- score
- label
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Active
Links
Images
Classifications
-
- G06K9/6297—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F40/00—Handling natural language data
- G06F40/20—Natural language analysis
- G06F40/279—Recognition of textual entities
-
- G06F17/2765—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/29—Graphical models, e.g. Bayesian networks
- G06F18/295—Markov models or related models, e.g. semi-Markov models; Markov random fields; Networks embedding Markov models
-
- G06K9/4604—
-
- G06K9/72—
-
- G06K2209/01—
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06V—IMAGE OR VIDEO RECOGNITION OR UNDERSTANDING
- G06V30/00—Character recognition; Recognising digital ink; Document-oriented image-based pattern recognition
- G06V30/10—Character recognition
Definitions
- Hidden Markov Model-based optical character recognition may need to evaluate a large number of hypotheses, represented by paths through states of the Hidden Markov Model, at the boundaries between characters.
- An optical character recognition system using a Hidden Markov Model may solve both character segmentation, locating the boundaries between characters in input images of text, and classification, predicting labels for the characters segmented from the input image, at the same time. This may result in the OCR system attempting to evaluate and classify all possible characters that the Hidden Markov Model has been trained to recognize at each character boundary, or segmentation point.
- the computational cost of performing OCR may be increased by the large number of fan-out connections at a character boundary, which may make the decoding time unacceptably long, especially for languages which have a large number of characters.
- Hidden Markov Model-based automated speech recognition may operate similarly to Hidden Markov Model-based OCR, with segmentation points and boundaries between words. Both ASR and OCR systems may use time-synchronous Viterbi decoding to decode input using a Hidden Markov Model. In spoken language, sounds may be dependent on surrounding sounds. This may allow ASR systems to use context dependent models to form acoustic models and a trie-based structure which shares prefixes of words to form a decoding network, resulting in a reduction in the number of words an ASR system has to evaluate at word boundaries, decreasing the fan-out.
- OCR systems may use optical models and a linear structure which does not share any prefixes among characters to form a decoding network. OCR systems may not be able to reduce the number of characters considered at a predicted segmentation point in the same manner as an ASR system. Standard beam pruning algorithms may be used with OCR systems, but the decoding speed may still be too slow because of the fan-out at character boundaries.
- a node of a Hidden Markov Model may be received.
- the node may be a label transition node.
- a frame may be received.
- the frame may be a predicted segmentation point.
- the node may be pruned from a possible nodes list with label transition node pruning.
- Label transition node pruning may include scoring the node at the frame to obtain a score, and pruning the node when the score is greater than the sum of a best score at the frame and a beam threshold minus a penalty term.
- a possible nodes list for a subsequent frame may be generated with label selection.
- Label selection may include scoring a label at the subsequent frame to obtain a label score, ranking the label based on the label score to obtain a label rank, and adding the first node of the label to the possible nodes list for the subsequent frame when the label score is less than or equal to a sum of a best label score at the frame and a first parameter or the label rank is less than or equal to a second parameter.
- a second node may be pruned from the possible nodes list for the subsequent frame with early pruning.
- Early pruning may include scoring the second node at the subsequent frame with an observation feature function to obtain an observation score, and pruning the second node when an early pruning score is greater than a sum of the current best score at the subsequent frame and the beam threshold, where the previous node score is a score for a previous node to the second node at a previous frame to the subsequent frame, where the early pruning score is the sum of the observation score and the previous node score.
- Early pruning may also include estimating a parameter based on a transition feature function and adding the parameter to the early pruning score.
- the Hidden Markov Model may be a model for optical character recognition or a model for automated speech recognition.
- the label may include a label name associated with a character from a character set.
- the frame may be a segment of an image of text.
- the label may be scored at the frame using fast-match.
- the possible nodes list may be used in time-synchronous Viterbi decoding.
- the predicted segmentation point may be a character boundary.
- a means for receiving a node of a Hidden Markov Model where the node is a label transition node, a means for receiving a frame, where the frame is a predicted segmentation point, and a means for pruning the node from a possible nodes list with a means for label transition node pruning, where the means for label transition node pruning includes a means for scoring the node at the frame to obtain a score, and a means for pruning the node when the score is greater than the sum of a best score at the frame and a beam threshold minus a penalty term are included.
- a means for generating a possible nodes list for a subsequent frame with a means for label selection where the means for label selection includes a means for scoring a label at the subsequent frame to obtain a label score, a means for ranking the label based on the label score to obtain a label rank, and a means for adding the node to the possible nodes list for the subsequent frame when the label score is less than or equal to a sum of a best label score at the frame and a first parameter or the label rank is less than or equal to a second parameter, a means for pruning a second node from the possible nodes list for the subsequent frame with a means for early pruning, where the means for early pruning includes a means for scoring the second node at the subsequent frame with an observation feature function to obtain an observation score and a means for pruning the second node when an early pruning score is greater than a sum of the current best score at the subsequent frame and the beam threshold, where the previous node score is a score for a previous node to the second node at a previous frame to the subsequent frame,
- FIG. 1 shows an example system suitable for decoding input to a Hidden Markov Model with pruning and label selection according to an implementation of the disclosed subject matter.
- FIG. 2 shows an example of a Hidden Markov Model for a label according to an implementation of the disclosed subject matter.
- FIG. 3 shows an example of emissions for a node according to an implementation of the disclosed subject matter.
- FIG. 4 shows an example of frames of an image of text according to an implementation of the disclosed subject matter.
- FIG. 5 shows an example of a Hidden Markov Model for character recognition for a four character set according to an implementation of the disclosed subject matter.
- FIG. 6 shows an example of a possible nodes list and fan-out at a predicted segmentation point according to an implementation of the disclosed subject matter.
- FIG. 7 shows an example of pruned possible nodes lists and fan-out at a predicted segmentation point according to an implementation of the disclosed subject matter.
- FIG. 9 shows a computer according to an embodiment of the disclosed subject matter.
- FIG. 10 shows a network configuration according to an embodiment of the disclosed subject matter.
- a Hidden Markov Model may be trained.
- the Hidden Markov Model may be trained to perform optical character recognition using images of text.
- the Hidden Markov Model may include nodes, transitions between the nodes, and transition probabilities for the transitions.
- the nodes may each include emissions and emissions probabilities.
- the emissions for a node may be, for example, segments of an image of a character represented in any suitable manner, such as bitmap or vector representation, associated with the node.
- the emissions probability may be the probability with which an emission associated with the node is emitted by the node, which may allow the node to be probabilistically correlated with an observation.
- Groups of nodes in the Hidden Markov Model may be labels in the Hidden Markov Model.
- a label in the Hidden Markov Model may be associated with a label name. For example, in Hidden Markov Model-based OCR, one group of nodes may be a label associated with the label name “A”, for a capital A, while another group of nodes may be associated with a label name “B”, for a capital B.
- the group of nodes for a label may have a first node for the label, where a path through the Hidden Markov Model enters the group of nodes, and a last node for the label, where the path through the Hidden Markov Model exits the group of nodes.
- the last node for the label may be the label transition node for the label.
- Input to be decoded may be divided into frames, with each frame representing an observation that can be correlated to the nodes, or states, in the Hidden Markov Model.
- Hidden Markov Model-based OCR an image of text may be segmented into frames using a sliding window, where the frames may be, for example, the same height and width as each other, and each frame may contain a segment of the image of text.
- Hidden Markov Model-based ASR audio may be segmented into frames, where the frames may contain some length of the audio.
- the frames may be decoded with the Hidden Markov Model to label the input. For example, images of characters in the image of text may be labeled with the proper character name.
- Decoding may be performed by, for example, brute force consideration of all paths through the nodes and transitions of the Hidden Markov Model, or by, for example, time-synchronous Viterbi decoding.
- the decoding may determine a corresponding node in the Hidden Markov Model for each frame of the input.
- a node may correspond to the segment of the image of text within a frame based on the nodes emissions and emission probabilities.
- a sequence of frames that make up an image of a character may be correlated to one of the groups of nodes that form a label in the Hidden Markov Model based on the nodes that correspond to the individual frames.
- the label name which may be a character name, associated with the label may be used to label the image of the character. Labels may be associated with sequences of frames during the decoding of the input.
- a possible nodes list may be used for each frame of the input.
- the possible nodes list for a frame may be a list of nodes in the Hidden Markov Model that may be evaluated to determine whether they correspond to the frame. For example, if the frame is a first frame of the input, all of the nodes in the Hidden Markov Model that are the first node for a label may be on the possible nodes list, as the sequence of frames starting with the first frame may end up being labeled with any label name associated with any label in the Hidden Markov Model.
- the possible nodes list may also include all of the nodes in the Hidden Markov Model that are the first node for a label.
- the predicted segmentation point may be a frame where segmentation, for example, between characters at a character boundary, is predicted to occur during decoding of the input. For example, a predicted segmentation point may occur in a frame that is the last frame of an image of a character.
- the nodes on the possible nodes list at the predicted segmentation point may be label transition nodes, as the nodes may be the last nodes of the labels in the Hidden Markov Model. Because the segmentation point is predicted, the possible nodes list may also include nodes that are not label transition nodes, as the decoding may also evaluate a prediction that the frame is not a segmentation point where a new character begins, but is in the middle of a character.
- any character in the language may be followed by any other character.
- the next frame may be predicted to be the start of a new character which will receive its own label name, and the possible nodes for that next frame may include all of the nodes connected from label transition nodes, which may be the last nodes of the labels in the Hidden Markov Model.
- label transition nodes which may be the last nodes of the labels in the Hidden Markov Model.
- the possible nodes list for a frame after a label transition node may include at least 52 nodes, one for each distinct character in the character set. Additional nodes may be included if a prediction that the previous frame is not a segmentation point is still being evaluated.
- the Hidden Markov Model may have a label for each character in the character set, and each label may have a separate first node. Each of the 52 nodes may need to be evaluated during the decoding of the frame, which may be computationally expensive.
- the number of nodes on the possible nodes list for a frame after a predicted segmentation point may be reduced using label transition node pruning.
- Label transition node pruning may be used when a node is a label transition node.
- the node may be a label transition node when the node is the last node of a label, and may be on the possible nodes list for the frame at the predicted segmentation point.
- the nodes on the possible nodes list for the frame may be scored.
- the score for each node may be based on any suitable heuristics, such as, for example, transition feature functions that generate a transition score, observations feature functions that generate an observation score, and the score for a previous node to the node at a previous frame to the frame.
- the observation feature functions may, for example, include a comparison between the contents of the frame, such as the segment of the image of text in the frame, and the emissions for the node, factoring in the emissions probabilities.
- the transition feature function may, for example, be based on a character-level n-gram language model.
- the score may be an indication of how well the node corresponds to the frame based on features of the node and the frame, properties of the previous node to the node, and the score given to the previous node at a previous frame.
- the previous node may be a possible node for the previous frame that is connected by a transition to the node in the Hidden Markov Model. A lower score may indicate a higher level of correspondence.
- the score may be compared to the scores for all of the other nodes on the possible nodes list for the frame to determine if the node should be pruned from the possible nodes list. Pruning label transition nodes from the possible nodes list for the frame at the predicted segmentation point may reduce the number of nodes that can be on the possible nodes list for the subsequent frame, after the predicted segmentation point.
- the node may be pruned.
- the beam threshold may be a parameter used control how close the node's score must be to the score of the best scoring node from the possible nodes list for the frame in order to not be pruned, and may be applied to pruning both label transition nodes and nodes that are not label transition nodes.
- the penalty term may be a reduction in the beam threshold applied only when the node is a label transition node, and may increase the number of nodes that are pruned. For example, if the score for a node is 0.5, and the score for the best scoring node is 0.3, the node may not be pruned if the beam threshold minus the penalty term is greater than or equal to 0.2.
- the penalty term used when the node is a label transition node may be a product of a label transition penalty factor and the beam threshold.
- the label transition penalty factor may be any suitable value, for example, between 0 and 1 inclusive.
- the label transition penalty factor may be used during pruning in place of the penalty term. For example, if the score for the node is greater than the sum of a score for the best scoring node at the frame and the product of the result of 1 minus the label transition penalty factor and the beam threshold, the node may be pruned.
- the number of nodes on the possible nodes list for the frame after the predicted segmentation point may be reduced using label selection.
- Label selection may be used to reduce the number of nodes connected to a label transition node for the frame after the predicted segmentation point.
- Labels in the Hidden Markov Model may be evaluated to determine which labels may be allowed to be used to predict label names for the sequence of frames starting with the frame after the predicted segmentation point.
- Each label in the Hidden Markov Model may be scored at the frame, for example, using fast-match, or using an optical model that is used in the decoding.
- the label at the frame may also be given a label rank based on the scores for the other labels at the frame. The score and label rank may be used to determine whether the label is allowable, and whether the first node for the label should be pruned from the possible nodes list for the frame after the predicted segmentation point.
- the label may be added to a set of allowable labels when the score for the label is less than or equal to the sum of the best, for example, lowest, score, among all of the scores for labels at the frame and a first parameter, and the label rank for the label is less than or equal to a second parameter.
- the first parameter may be used to control how close the label's score must be to the score of the best scoring label at the frame in order to be added to the set of allowable labels.
- the second parameter may limit the number of labels that can be added to the set of allowable labels.
- the label will be added to the set of allowable labels if the first parameter is greater than or equal to 0.2 and the second parameter is greater than or equal to 5.
- the first node of any label in the Hidden Markov Model that is not added to the set of allowable labels for the frame may be pruned from, or not added to, the possible nodes list for the frame after the predicted segmentation point. Since the label name for the label may not be predicted for the sequence of frames starting after the predicted segmentation point, the first node of the label may not be connected to the label transition node for the frame at the predicted segmentation point. For example, if the frames include an image of text, the labels may correspond to characters in the character set, with each label having a label name identifying one of the characters. Label selection may reduce the possible nodes list at a frame after a character boundary by reducing the number of character names that can be predicted for the character in the frames after the predicted segmentation point, or character boundary.
- the number of nodes on the possible nodes list for any frame in the input, including after the predicted segmentation point, may be reduced using early pruning.
- the nodes on the possible nodes list for the frame may be scored based on observation features, resulting in an observation score for each node.
- the observation score for each node may be based on any suitable heuristic, such as, for example, a comparison between the contents of the frame, such as the segment of the image of text in the frame, and the emissions for the node, factoring in the emissions probabilities.
- the observation score may be an indication of how well the node corresponds to the frame based on features of the node and frame, and a lower observation score may indicate a higher level of correspondence.
- the sum of the observation score and the score for the previous node at the previous frame may be an early pruning score, and may be compared to the current best exact pruning score for all the other nodes on the possible nodes list that have already been evaluated for the frame to determine if the node should be pruned from the possible nodes list. If the node is not pruned from the possible nodes list, the node may receive an exact pruning score, including the transition score.
- the early pruning score may differ from the score used in label transition node pruning because the transition score may not be used, as adding the transition score may always make the resulting score worse. Not calculating the transition score may result in lower computation costs.
- an early pruning score is greater than the sum of the score for the current best scoring node at the frame, where the best scoring node may be the node with the lowest exact pruning score at the frame among already evaluated nodes, and the beam threshold, the node may be pruned.
- the early pruning score may be, for example, the sum of the observation score for the node and the score for the previous node at the previous frame. As a specific example, if the observation score for a node is 0.3, the score for the previous node at the previous frame is 0.2, and the exact pruning score for the current best scoring node is 0.3, the node may not be pruned if the beam threshold greater than or equal to 0.2.
- a node that is not pruned by early pruning may be given an exact pruning score. If the exact pruning score for the node is better, for example, lower, than the current best score at the frame, the node may become the current best scoring node at the frame.
- Early pruning also may use a tunable parameter, which may be an estimation of the transition score for all of the nodes on the possible nodes list.
- the tunable parameter may be added to the early pruning score when determining whether the node should be pruned.
- the early pruning score also may be used to prune the possible nodes list using histogram pruning. Histogram pruning may only retain a preset number of paths through the Hidden Markov Model, and thus only a preset number of nodes on the possible nodes list for the frame. The early pruning score may be used to rank the nodes on the possible nodes list, and retain only the preset number of best scoring nodes.
- the remaining nodes on the possible nodes list may be evaluated during decoding to determine which of the nodes may correspond best to the frame after the predicted segmentation point. For example, standard pruning methods such as beam pruning may also be used by the time-synchronous Viterbi decoding to prune additional nodes from the possible nodes list. Fewer nodes may need to be considered by the decoding, as the fan-out may have been reduced by pruning. For example, if the original fan-out resulted in 52 nodes on the possible nodes list, pruning may reduce the possible nodes list to, for example, 12 nodes. This may reduce the computational costs incurred at predicted segmentation points in the input, such as at character boundaries in the image of text used during Hidden Markov Model-based OCR.
- a possible nodes list for the next frame may then be generated based on the transitions in the Hidden Markov Model for the nodes remaining in the possible nodes list, unless the frame is the last frame of the input, in which case no possible nodes list for a next frame may be needed.
- FIG. 1 shows an example system suitable for decoding input to a Hidden Markov Model with pruning and label selection according to an implementation of the disclosed subject matter.
- a computer 100 may include a Hidden Markov Model decoder 110 and storage 140 .
- the computer 100 may be any suitable device, such as, for example, a computer 20 as described in FIG. 9 , for implementing the Hidden Markov Model decoder 110 , and the storage 140 .
- the computer 100 may be a single computing device, or may include multiple connected computing devices.
- the Hidden Markov Model decoder 110 may include a decoder 111 , a pruner 115 , and a node list generator 113 .
- the decoder 111 may decode an input of frames 142 with a Hidden Markov Model 141 and output predictions for the input using the pruner 115 .
- the pruner 115 may prune nodes from a possible nodes list, and may include a label transition node pruner 116 , a label selector 117 , an early pruner 118 , and a beam pruner 119 .
- the label transition node pruner 116 may use a score for nodes in the Hidden Markov Model 141 to prune the nodes from a possible nodes list used by the decoder 111 when decoding a frame from the frames 142 .
- the label selector 117 may use label scores and label ranks to create a set of allowed labels and prune the nodes from the possible nodes list used by the decoder 111 according to the set of allowed labels.
- the early pruner 118 may use observation scores and transition scores for the nodes in the Hidden Markov Model 141 to prune the nodes from the possible nodes list used by the decoder 111 .
- the beam pruner 119 may use beam pruning to prune the nodes from the possible nodes list used by the decoder 111 .
- the node list generator 113 may generate the possible nodes list for the next frame from the frames 142 after the decoder 111 has decoded the frame.
- the storage 140 may store the Hidden Markov Model 141 and the frames 142 .
- FIG. 2 shows an example of a Hidden Markov Model for a label according to an implementation of the disclosed subject matter.
- a Hidden Markov Model 200 may be used by, for example, a Hidden Markov Model-based OCR system.
- the Hidden Markov Model 200 may be a left-to-right Hidden Markov Model trained to recognize an individual item, such as, for example, an image of character from a character set, and may include nodes 202 , 204 , 206 , and 208 , and transitions 211 , 212 , 213 , 214 , 216 , 217 and 218 .
- Each of the transitions 211 , 212 , 213 , 214 , 216 , 217 and 218 may have an associated transition probability, which may be the probability of transitioning from the node at the beginning of the transition to the node at the end of the transition when changing nodes within the Hidden Markov Model 200 . For example, if the transition probability of transition 212 is 0.75, or 75%, then a transition may be made to the node 204 when the node 202 is the starting node 75% of the time.
- a transition between the nodes 202 , 204 , 206 , and 208 in the Hidden Markov Model 200 may occur when, for example, the decoder 111 moves from one frame of the frames 142 to the next frame of the frames 142 , and evaluates possible paths through the transitions 211 , 212 , 213 , 214 , 216 , 217 and 218 and nodes 202 , 204 , 206 , and 208 of the Hidden Markov Model 200 .
- the Hidden Markov Model 200 may be referred to as a label 200 , and may be associated with a label name based on the item the Hidden Markov Model 200 was trained to recognize.
- the node 202 may be the first node of the label 200
- the node 208 may be the label transition node for the label 200 , and may not have a self-transition or an associated emission.
- FIG. 3 shows an example of emissions for a node according to an implementation of the disclosed subject matter.
- the nodes 202 , 204 , and 206 of the Hidden Markov Model 200 may be associated with emissions, which may be compared with observations in the frames 142 when the decoder 111 is making predictions for the frames 142 .
- the emissions 310 and 320 for the node 204 may be segments of an image of an uppercase A, represented in any suitable manner, including, for example, bitmap and vector representations.
- the emissions 310 and 320 may have associated emission probabilities, which may be the probabilities with which the node 204 emits each of the emissions 310 and 320 .
- FIG. 4 shows an example of frames of an image of text according to an implementation of the disclosed subject matter.
- the frames 142 may be sequential segments of the input for which the decoder 111 will predict labels.
- the frames 142 input to a decoder 111 for a Hidden Markov Model decoder 110 for performing OCR may each include a segment of an image of text, as in the frames 401 , 402 , 403 , 404 , 405 , 406 , 407 , 408 , 409 , 410 , 411 , 412 , 413 , 414 , 415 , 416 , 417 , 418 , 419 , 420 , 421 , 435 , 445 , and 455 , which may be produced using a sliding window.
- the decoder 111 may use the emissions 310 and 320 , and emissions for all other nodes in the Hidden Markov Model 141 , along with emission probabilities, transitions, and transition probabilities, when decoding the frames 142 .
- the frames 435 , 445 , and 455 may be predicted segmentation points in the frames 142 , and may be identified by the decoder 111 as frames in which a new is predicted to character begin.
- the decoder 111 may use the Hidden Markov Model 200 to determine that the sequences of frames 401 , 402 , 403 , 404 , 405 and 406 may be labeled with “A”, and to make frame 406 a predicted segmentation point, or character boundary.
- the frame 406 may be a predicted segmentation point on some paths being evaluated by the decoder 111 , but the decoder 111 may also still be evaluating paths that do not label the sequences of frames ending at the frame 406 with “A” when decoding the frame 435 . On those paths, the frame 435 may be evaluated as part of the sequence of frames beginning at the frame 401 , rather than as being after a character boundary where a new character may begin. The frame 435 may be the frame after the predicted segmentation point.
- FIG. 5 shows an example of a Hidden Markov Model for character recognition for a four character set according to an implementation of the disclosed subject matter.
- Hidden Markov Models trained for recognizing items of the same type, for example, different characters in a character set may be connected together to form a Hidden Markov Model for a set of the items.
- the Hidden Markov Model 200 for the character “A” may be joined with a Hidden Markov Model 500 for the character “B”, a Hidden Markov Model 510 for the character “C”, and a Hidden Markov Model 520 for the character “D”, to form a Hidden Markov Model for the four character set of “A B C D”, which may be the Hidden Markov Model 141 .
- the Hidden Markov Model 500 may include nodes 502 , 504 , 506 , and 508 .
- the Hidden Markov Model 510 may include nodes 512 , 514 , 516 , and 518 .
- the Hidden Markov Model 520 may include nodes 522 , 524 , 526 , and 528 .
- the decoder 111 may use the Hidden Markov Model 141 to decode the frames 142 which may include an image of text with characters from the four character set, and predict labels for the images of characters in the image of text.
- the Hidden Markov Models 500 , 510 , and 520 may be referred to as labels 500 , 510 , and 520 , as each may be associated with a label name for the character the Hidden Markov Model was trained to detect.
- the nodes 208 , 508 , 518 , and 528 may be the label transition nodes of the Hidden Markov Model 141 , as they may be last nodes of the labels 200 , 500 ,
- FIG. 6 shows an example of a possible nodes list and fan-out at a predicted segmentation point according to an implementation of the disclosed subject matter.
- the decoder 111 may decode the individual frames 401 , 402 , 403 , 404 , 405 , 406 , 435 , 407 , 408 , 409 , 410 , 411 , 445 , 412 , 413 , 414 , 415 , 416 , 455 , 417 , 418 , 419 , 420 , 421 , in sequence.
- the decoder 111 may evaluate the nodes of the Hidden Markov Model 141 to determine which nodes best correspond to each individual frame in sequence, constructing a path through the Hidden Markov Model 141 using, for example, time-synchronous Viterbi decoding.
- the decoder 111 may maintain and evaluate multiple paths simultaneously while determining which path, and related set of correspondence between nodes and frames, is best.
- the nodes evaluated by the decoder 111 for each frame may be based on the last nodes in the paths through the Hidden Markov Model 141 kept by the decoder 111 in an immediately preceding frame.
- the decoder 111 may evaluate the nodes 504 , 506 , and 508 at the frame 409 , with the node 506 being evaluated for two separate paths.
- the nodes evaluated by the decoder 111 for each frame may be, for example, kept on a possible nodes list, which may include nodes from the Hidden Markov Model 141 that may possibly correspond to the frame being decoded from the frames 142 .
- the label transition node, the label name for the label may be predicted for the item in the sequence of frames, and the frame may be a predicted segmentation point.
- a new label may begin in the frame after the predicted segmentation point.
- the label transition node may be associated with the segmentation point in the frame, while the image in the frame may be associated with the emission from the node prior to the label transition node.
- the decoder 111 may construct a path through nodes 202 , 202 , 204 , 204 , 206 , and 206 , for the frames 401 , 402 , 403 , 404 , 405 , and 406 .
- the decoder 111 may predict that label for the character in the frames 401 , 402 , 403 , 404 , 405 , and 406 may be the label name for the label 200 , “A”.
- the decoder 111 may also determine that the frame 406 is a predicted segmentation point, or character boundary.
- the frame 406 may be associated with the emission from the node 206 , and the predicted segmentation point at the frame 406 may be associated with the label transition node 208 .
- the predicted path through the Hidden Markov Model 141 for the frames 401 , 402 , 405 , 404 , 405 , and 406 may be through the nodes 202 , 202 , 204 , 204 , 206 , 206 and 208 .
- the decoder 111 reaches one of the frames 142 that is after a predicted segmentation point, the number of nodes on the possible nodes list for that frame that may be evaluated by the decoder 111 may be large, especially if the Hidden Markov Model decoder 110 is being used for OCR.
- any character in the character set may follow any other character, so after the decoder 111 has predicted a label name for a character, every character in the character set may need to be considered as a label for the next character. This may result in large fan-out from the last node for the label of the character with the just-predicted label name to possible nodes for the next frame of the frames 142 .
- the possible nodes list 610 for the previous frame 406 may include the label transition node 208 . All of the nodes in the Hidden Markov Model 141 connected to the node 208 may be on a possible nodes list 620 for the frame 435 . If the Hidden Markov Model decoder 110 is used in OCR, every label in the Hidden Markov Model 141 , such as, for example, the labels 200 , 500 , 510 , and 520 , may have their first node connected to the node 208 , as there may be no linguistic restrictions on which of the labels may apply to the character that is predicted to start at frame 435 .
- the possible nodes list 620 for the frame 435 may include the nodes 202 , 502 , 512 , and 522 , which may the first nodes for each of the labels 200 , 500 , 510 , and 520 in the Hidden Markov Model 141 . Additionally, if the decoder 111 predicted segmentation points for the frame 406 in paths through another label in the Hidden Markov Model 141 , such as the label 510 , the possible nodes list 610 may include the label transition node 518 .
- the possible nodes list 620 for the frame 435 may include the nodes 202 , 502 , 512 , and 522 connected through the label transition node 518 .
- the fan-out may not greatly increase the size of the possible nodes list 620 over the possible nodes list for a frame that is not after a predicted segmentation point.
- larger character sets may result in larger increases in the size of the possible nodes list after a predicted segmentation point.
- a character set of 52 characters may result in a possible nodes list with at least 52 nodes for a frame after a predicted segmentation point. This may be over ten times more nodes than would be on a possible nodes list for a frame that is not after a predicted segmentation point for the same character set. Evaluating 52 nodes with the decoder 111 may incur significant computational costs.
- candidate nodes list 635 may include nodes that may be on possible nodes lists for the frame 407 . Not all of the nodes in the candidates node list 635 may end up on the possible nodes lists, as the decoder 111 may discard nodes during evaluation using, for example, time-synchronous Viterbi decoding.
- FIG. 7 shows an example of pruned possible nodes lists and fan-out at a predicted segmentation point according to an implementation of the disclosed subject matter.
- the number of nodes on the possible nodes list at and after a predicted segmentation point such as the possible nodes list 610 for the frame 406 and the possible nodes list 620 for the frame 435 , may be reduced by pruning and label selection. Pruning may remove nodes from the possible nodes list 620 before the nodes are evaluated by the decoder 111 , saving computation time. For example, when decoding the frame 435 , pruning the nodes 202 and 512 from the possible nodes list 620 may result in the possible nodes list 720 being used by the decoder 111 .
- Pruning may also reduce the number of nodes on candidate nodes lists for subsequent frames. For example, pruning the label transition node 518 from the possible nodes list 610 may reduce the number of nodes on the possible nodes lists 720 for the frame 435 to half of the number on the possible nodes lists 620 , as the decoder 111 may no longer need to evaluate nodes reached through the node 518 when decoding the frame 435 . This may also reduce the number of nodes on the candidate nodes list 735 , reducing the number of nodes that may need to be considered when decoding the frame 407 . Label selection may result in the node 202 being pruned from, or not being added to, the possible nodes list 620 , and early pruning may prune the node 512 . This may result in the possible nodes list 720 having only one-quarter of the nodes as the possible nodes list 620 .
- Nodes may be pruned from the possible nodes list 610 for the frame 406 that is at a predicted segmentation point using label transition node pruning.
- the possible nodes list 610 for the frame 406 which may include label transition nodes 208 and 518 , may be pruned by the label transition node pruner 116 .
- Each of the nodes on the possible nodes list 610 may be scored based on any suitable heuristics, including the transition feature functions, observations feature functions, and the score for a previous node to the node at a previous frame to the frame.
- the score for the node 208 at the frame 406 may be the sum of the score for the node 206 at the frame 406 , the observation score for the node 208 at the frame 406 , and the transition score for the transition to the node 208 at the frame 406 from the node 206 .
- the transition and emission probabilities of the node 206 and the transition probabilities of the node 208 in the Hidden Markov Model 141 may be used in the scoring of the node 208 at the frame 406 .
- the score for each of the nodes on the possible nodes list 610 may then be compared to the scores for all of the other nodes on the possible nodes list 610 for the frame 406 to determine which nodes should be pruned from the possible nodes list 610 .
- the pruning may be done according to: Score( n,t )>Score( ⁇ circumflex over (n) ⁇ ,t )+ ⁇ (2) where Score( ⁇ circumflex over (n) ⁇ , t) represents the best score for a node on the possible node list at the frame t, ⁇ may be the beam threshold, and ⁇ may be the penalty term.
- the beam threshold ⁇ may be a threshold used in a beam search, which may be used to prune nodes that are not label transition nodes.
- a node n may be pruned from the possible node list 610 when (2) is true for the node n, and the node n is a label transition node.
- the best scoring node at the frame may be the node 508 .
- the decoder 111 may not need to consider the nodes at the ends of paths through the nodes 518 and 528 the frame 435 .
- the possible nodes list received by the decoder 111 from the pruner 115 may include, for example, the nodes 202 , 502 , 512 , and 522 as reached through the nodes 208 and 508 , but not through the nodes 518 and 528 . This may preclude the character predicted to end at the frame 406 from being labeled with the labels 510 and 520 , which may have label names of “C” and “D”.
- the possible nodes list 610 may include the label transition nodes 208 and 518 .
- Label transition node pruning may be used to prune the label transition node 518 , producing the possible nodes list 710 for the predicted segmentation point at frame 406 . This may result in fewer nodes on the possible nodes list 720 for the frame 435 , as no paths through the node 518 may need to be evaluated by the decoder 111 .
- the penalty term ⁇ may be a product of a label transition penalty factor ⁇ , where 0 ⁇ 1, and the beam threshold ⁇ .
- the label transition penalty factor ⁇ may be a percentage by which the beam threshold ⁇ is reduced when pruning label transition nodes.
- pruning of the nodes from the possible nodes list 610 may be done according to: Score( n,t )>Score( ⁇ circumflex over (n) ⁇ ,t )+(1 ⁇ ) ⁇ , (3) where the node n may be pruned if (3) is true and the node n is a label transition node.
- the number of nodes on the possible nodes list 620 for the frame 435 that is after a predicted segmentation point may be limited using label selection.
- the possible nodes list 620 for the frame 435 which may include nodes connected from the label transition node 208 and 518 , may be constructed in part by the label selector 117 .
- Labels with a first node connected to the node 208 for the previous frame 406 for example the labels 200 , 500 , 510 , and 520 in the Hidden Markov Model 141 , may be evaluated to determine which of the labels 200 , 500 , 510 , and 520 may be allowed to be used to predict a label name for the sequence of frames starting with the frame 435 after the predicted segmentation point.
- Each of the labels 200 , 500 , 510 , and 520 may be scored at the frame 435 and may be given a label rank based on the scores for the other labels at the frame.
- the scores and label ranks may be used to determine which of the labels 200 , 500 , 510 and 520 may be allowable.
- L t is the set of allowable labels
- Score(l, t) is a score for the label l at frame t
- Score( ⁇ circumflex over (l) ⁇ , t) is a score for the best scoring label the frame t
- ⁇ is a first parameter
- Rank(l, t) is a label rank for the label l at frame t
- ⁇ is a second parameter.
- the first parameter ⁇ controls how close the label l's score must be to the score of the best scoring label ⁇ circumflex over (l) ⁇ at the frame t in order to be added to the set of allowable labels L t .
- the second parameter ⁇ limits the number of labels that can be added to the set of allowable labels L t .
- Score(l, t) may be calculated in any suitable manner, for example, using fast-match, or may be set equal to Q l (0, t), which may be the score of the initial state of the optical model, if the Hidden Markov Model 141 is used in OCR, or acoustic model or any other suitable model for the use of the Hidden Markov Model 141 , for the label l at frame t.
- Score(l, t) may be cached to avoid having to re-compute Q l (0, t) at later frames.
- the best scoring label at the frame 435 may be the label 500 .
- the label 510 may not be an allowable label because, although the score of 0.6 not greater than 0.6, the label rank of 3 is greater than 2.
- the possible nodes list for a frame after a segmentation point may be constructed to include any node that is connected to a label transition node on the possible nodes list for the previous frame and is the first node for a label in the set of allowable labels L t , instead of including all of the first nodes for labels in the Hidden Markov Model 141 .
- the nodes 202 and 512 may not be included in the possible nodes list for the frame after the segmentation point.
- the decoder 111 may not need to consider the nodes 202 and 512 at the frame after the segmentation point, as the nodes 202 and 512 may not be on the possible nodes list received by the decoder 111 from the pruner 115 .
- the possible nodes list 610 may include the label transition nodes 208 and 518 .
- Label transition node pruning may prune the label transition node 518 , resulting in the possible nodes list 710 .
- the possible nodes list 710 may be used to construct the possible nodes list 720 for the frame 435 .
- Label selection may result in the labels 500 and 520 , being selected, while the labels 200 and 510 are not selected.
- the possible nodes list 720 may be constructed to include the nodes 502 , and 522 , as the first nodes of allowable labels connected from the label transition node 208 , but not the nodes 202 and 512 . This may preclude the character predicted to start at the frame 435 from being labeled with the labels 200 and 510 , which may have label names of “A” and “C”.
- Nodes may be pruned from any possible nodes list for any frame using early pruning.
- the possible nodes list 620 for the frame 435 which may include nodes 202 , 502 , 512 , and 522 connected from the nodes 208 and 518 , may be pruned by the early pruner 118 .
- the nodes on the possible nodes list 620 for the frame 435 may each be given an observation score.
- the pruning may be done according to: Score( n′,t ⁇ 1)+ Obs ( n,t )>Score( ⁇ circumflex over (n) ⁇ ,t )+ ⁇ (5)
- Score(n′,t ⁇ 1) is a score of the previous node to the node n at a previous frame
- Obs(n, t) is the observation score of the node n at the frame t
- Score( ⁇ circumflex over (n) ⁇ , t) is the current best score for a node on the possible nodes list at the frame t
- ⁇ is the beam threshold, as used by, for example, the label transition node pruner 116 .
- Score(n′, t ⁇ 1)+Obs(n, t) thus represents an early pruning score for the node n at the frame t.
- a node n may be pruned when (5) is true.
- the current best score may be an exact pruning score, incorporating the transition score as in (1).
- the first node evaluated by early pruning from the possible nodes list may be given an exact pruning score by default.
- the second node evaluated by early pruning may be assigned an early pruning score, which may be compared to the exact pruning score for the first node, as in (5). If (5) is true for the second node, the second node may be pruned from the possible nodes list. If (5) is false, the second node may be given an exact pruning score as in (1).
- the exact pruning score for the second node may become the current best score, so that an early pruning score for a third node may be compared against the exact pruning score for the second node to determine if the third node should be pruned.
- the observation scores for the nodes 202 , 502 , 512 , and 522 at the frame 435 may be 0.2, 0.2, 0.6, and 0.7
- the score for the previous node 208 at the previous frame 406 may be 0.1
- the node 202 may be the first node considered at the frame 435 , and may be given an exact pruning score.
- the node 202 may have a transition score of 0.1, resulting in an exact pruning score of 0.4.
- the node 502 may then be given a transition score, which may be 0.2, and an exact pruning score, which may be 0.5.
- the node 202 may remain the current best scoring node at the frame 435 .
- the node 512 may have an early pruning score of 0.7, which may be equal to the sum of the exact pruning score for the node 202 and the beam threshold, so the node 512 may not be pruned.
- the node 512 may be given an exact pruning score including a transition score.
- the node 522 may have an early pruning score of 0.8. Because 0.8 is greater than 0.7, the node 522 may be pruned, and may not be assigned an exact pruning score. This may preclude the character predicted to start at the frame 435 from being labeled with the label 520 , which may have the label name of “D”.
- Early pruning may also use a tunable parameter ⁇ , which may be an estimation of the transition score Trns(n, n′, t).
- a tunable parameter ⁇ which may be an estimation of the transition score Trns(n, n′, t).
- pruning may be done according to: Score( n′,t ⁇ 1)+ Obs ( n,t )+ ⁇ >Score( ⁇ circumflex over (n) ⁇ ,t )+ ⁇ (6)
- the early pruning score may also be used to prune the possible nodes list using histogram pruning.
- Each of the nodes on the possible nodes list may be given an early pruning score.
- the histogram pruning may have a parameter ⁇ , which may be the number of nodes the histogram pruning will retain on the possible nodes list. The ⁇ best scoring nodes may be retained, while all other nodes may be pruned from the possible nodes list.
- the label transition node pruner 116 , the label selector 117 , and the early pruner 118 may be used in order.
- the label transition node pruner 116 may first prune label transition nodes from a possible nodes list for a frame at a segmentation point.
- the label selector 117 may then construct the possible nodes list for the frame after the segmentation point based on the nodes not pruned from the possible nodes list for the frame at the segmentation point.
- the early pruner 118 may then prune nodes from the possible nodes list for the frame after the segmentation point.
- the early pruner may also be used for nodes at any other frames 142 in the Hidden Markov Model 141 .
- the possible nodes list 620 for the frame 435 after a predicted segmentation point may include nodes that are not connected from label transition nodes.
- the decoder 111 kept more than one node for the frame 406 , such as the node 204 in addition to the node 208
- the possible nodes list 610 for the frame 406 may include the node 204 in addition to the node 208 .
- the node 204 may not be a label transition node, and may be pruned with techniques used for non-label transition nodes, such as, for example, beam search pruning.
- the possible nodes list 620 may include the nodes 204 and 206 , connected from the node 204 .
- the node at the end of a label such as the node 208 at the end of the label 200 , may be connected by transitions to nodes that are not the first node for a label, which may also result in a possible nodes list 620 for the frame 435 at a predicted segmentation point including nodes that are not connected from label transition nodes.
- the possible nodes list 720 which may be the result of pruning the possible nodes list 620 , may be produced during the decoding of the frame 435 by the decoder 111 , which may be using, for, example, time-synchronous Viterbi decoding.
- the decoder 111 may also discard nodes from the possible nodes list 720 during decoding using standard beam pruning. This may result in a final nodes list, which may include nodes from the possible list 720 that were retained during decoding and may correspond to the frame 435 .
- a new possible nodes list may then be generated for the next frame 407 based on the final nodes list by, for example, the node list generator 113 .
- the new possible nodes may include nodes connected by transitions in the Hidden Markov Model 141 to nodes on the final node list. For example, if the final nodes list for the frame 435 includes the nodes 502 and 522 , the possible nodes list generated for the frame 407 may include the nodes 502 , 504 , 522 , and 524 . If the frame decoded by the decoder 111 is the last frame of the input, for example, the frame 421 , it may not be necessary to generate another possible nodes list, as there may be no more input to decode.
- Nodes that have been pruned from a possible nodes list may not be considered during subsequent pruning.
- a node pruned by the early pruner 118 may not need to be considered by the beam pruner 119 .
- FIG. 8 shows an example process for pruning and label selection in Hidden Markov Model-based OCR according to an implementation of the disclosed subject matter.
- a possible nodes list including label transition nodes may be received.
- the pruner 115 may receive the possible nodes list 610 for the frame 406 from the frames 142 .
- the possible nodes list 610 may include nodes not discarded during decoding of the frame 406 by the decoder 111 , including the label transition nodes 208 and 518 .
- the frame 406 may be at a predicted segmentation point in the frames 142 .
- nodes may be pruned from the possible nodes list.
- the pruner 115 may use the label transition node pruner 116 to prune label transition nodes from the possible nodes list 610 .
- the label transition node pruner 116 may use the transitions, transitions probabilities, the emissions, the emissions probabilities and the structure of the labels 200 , 510 , 520 , and 530 from the Hidden Markov Model 141 when scoring nodes during pruning. Pruning nodes from the possible nodes list 610 may reduce the fan-out at the predicted segmentation point of the frame 406 , producing the possible nodes list 710 .
- the label transition node pruner 116 may prune the node 518 from the possible nodes list 610 .
- a possible nodes list may be generated for the next frame.
- the node list generator 113 may use the final node list for the frame 406 , which may be the possible node list 710 , at the segmentation point to generate the possible node list 720 for the frame 435 , after the segmentation point.
- the label selector 117 of the pruner 115 may be used to select labels from the Hidden Markov Model 141 that are allowed to be connected to the label transition node 208 .
- the label selector 117 may, for example, determine that the labels 500 , 510 , and 520 are allowed to be connected to the label transition node 208 from the frame 406 , adding the nodes 502 , 512 , and 522 to the possible nodes list 720 for the frame 435 .
- nodes may be pruned from the possible nodes list for the next frame using early pruning.
- the pruner 115 may use the early pruner 118 to prune nodes from the possible nodes list 720 for the frame 435 .
- the early pruner 115 may prune any node from the possible nodes list 720 , such as, for example, node 512 .
- the early pruner 115 may prune nodes form the possible nodes list 720 based on an early pruning score for the nodes at the frame 435 .
- nodes may be pruned from the possible nodes list for the next frame using beam pruning.
- the pruner 115 may use the beam pruner 119 to prune nodes from the possible nodes list 720 for the frame 435 .
- the beam pruner 119 may use beam pruning or any other standard pruning method used in time-synchronous Viterbi decoding.
- the beam pruner 119 may remove nodes from the possible nodes list 720 , producing a final nodes list for the frame 435 .
- the final nodes list for the frame 435 may be used by, for example, the node list generator 113 , to generate a possible nodes list for the frame 407 .
- FIG. 9 is an example computer system 20 suitable for implementing embodiments of the presently disclosed subject matter.
- the computer 20 includes a bus 21 which interconnects major components of the computer 20 , such as one or more processors 24 , memory 27 such as RAM, ROM, flash RAM, or the like, an input/output controller 28 , and fixed storage 23 such as a hard drive, flash storage, SAN device, or the like.
- a user display such as a display screen via a display adapter
- user input interfaces such as controllers and associated user input devices
- keyboard, mouse, touchscreen, or the like and other components known in the art to use in or in conjunction with general-purpose computing systems.
- the bus 21 allows data communication between the central processor 24 and the memory 27 .
- the RAM is generally the main memory into which the operating system and application programs are loaded.
- the ROM or flash memory can contain, among other code, the Basic Input-Output system (BIOS) which controls basic hardware operation such as the interaction with peripheral components.
- BIOS Basic Input-Output system
- Applications resident with the computer 20 are generally stored on and accessed via a computer readable medium, such as the fixed storage 23 and/or the memory 27 , an optical drive, external storage mechanism, or the like.
- Each component shown may be integral with the computer 20 or may be separate and accessed through other interfaces.
- Other interfaces such as a network interface 29 , may provide a connection to remote systems and devices via a telephone link, wired or wireless local- or wide-area network connection, proprietary network connections, or the like.
- the network interface 29 may allow the computer to communicate with other computers via one or more local, wide-area, or other networks, as shown in FIG. 10 .
- FIG. 9 need not be present to practice the present disclosure.
- the components can be interconnected in different ways from that shown.
- the operation of a computer such as that shown in FIG. 9 is readily known in the art and is not discussed in detail in this application.
- Code to implement the present disclosure can be stored in computer-readable storage media such as one or more of the memory 27 , fixed storage 23 , remote storage locations, or any other storage mechanism known in the art.
- FIG. 10 shows an example arrangement according to an embodiment of the disclosed subject matter.
- One or more clients 10 , 11 such as local computers, smart phones, tablet computing devices, remote services, and the like may connect to other devices via one or more networks 7 .
- the network may be a local network, wide-area network, the Internet, or any other suitable communication network or networks, and may be implemented on any suitable platform including wired and/or wireless networks.
- the clients 10 , 11 may communicate with one or more computer systems, such as processing units 14 , databases 15 , and user interface systems 13 .
- clients 10 , 11 may communicate with a user interface system 13 , which may provide access to one or more other systems such as a database 15 , a processing unit 14 , or the like.
- the user interface 13 may be a user-accessible web page that provides data from one or more other computer systems.
- the user interface 13 may provide different interfaces to different clients, such as where a human-readable web page is provided to web browser clients 10 , and a computer-readable API or other interface is provided to remote service clients 11 .
- the user interface 13 , database 15 , and processing units 14 may be part of an integral system, or may include multiple computer systems communicating via a private network, the Internet, or any other suitable network.
- Processing units 14 may be, for example, part of a distributed system such as a cloud-based computing system, search engine, content delivery system, or the like, which may also include or communicate with a database 15 and/or user interface 13 .
- an analysis system 5 may provide back-end processing, such as where stored or acquired data is pre-processed by the analysis system 5 before delivery to the processing unit 14 , database 15 , and/or user interface 13 .
- a machine learning system 5 may provide various prediction models, data analysis, or the like to one or more other systems 13 , 14 , 15 .
Abstract
Description
Score(n,t)=Score(n′,t−1)+Obs(n,t)+Trns(n,n′,t) (1)
where Score(n, t) is a score for the node n at the frame t, Score(n′, t−1) is a score of a previous node to the node n at the previous frame, Obs(n, t) is an observation score of the node n at the frame t, and Trns(n, n′, t) is a transition score for the transition to the node n at the frame t from the previous node to the node n.
Score(n,t)>Score({circumflex over (n)},t)+θ−η (2)
where Score({circumflex over (n)}, t) represents the best score for a node on the possible node list at the frame t, θ may be the beam threshold, and η may be the penalty term. The beam threshold θ may be a threshold used in a beam search, which may be used to prune nodes that are not label transition nodes. A node n may be pruned from the
Score(n,t)>Score({circumflex over (n)},t)+(1−λ)θ, (3)
where the node n may be pruned if (3) is true and the node n is a label transition node.
L t ={l|Score(l,t)≤Score({circumflex over (l)},t)+αΛRank(l,t)≤β} (4)
where Lt is the set of allowable labels, Score(l, t) is a score for the label l at frame t, Score({circumflex over (l)}, t) is a score for the best scoring label the frame t, α is a first parameter, Rank(l, t) is a label rank for the label l at frame t, and β is a second parameter. As described herein, the first parameter α controls how close the label l's score must be to the score of the best scoring label {circumflex over (l)} at the frame t in order to be added to the set of allowable labels Lt. The second parameter β limits the number of labels that can be added to the set of allowable labels Lt. Score(l, t) may be calculated in any suitable manner, for example, using fast-match, or may be set equal to Ql(0, t), which may be the score of the initial state of the optical model, if the
Score(n′,t−1)+Obs(n,t)>Score({circumflex over (n)},t)+θ (5)
where Score(n′,t−1) is a score of the previous node to the node n at a previous frame, Obs(n, t) is the observation score of the node n at the frame t, Score({circumflex over (n)}, t) is the current best score for a node on the possible nodes list at the frame t, and θ is the beam threshold, as used by, for example, the label
Score(n′,t−1)+Obs(n,t)+∝>Score({circumflex over (n)},t)+θ (6)
Claims (19)
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US15/614,491 US9934452B2 (en) | 2013-12-31 | 2017-06-05 | Pruning and label selection in hidden Markov model-based OCR |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
US14/144,854 US9189708B2 (en) | 2013-12-31 | 2013-12-31 | Pruning and label selection in hidden markov model-based OCR |
US14/941,470 US9672448B2 (en) | 2013-12-31 | 2015-11-13 | Pruning and label selection in Hidden Markov Model-based OCR |
US15/614,491 US9934452B2 (en) | 2013-12-31 | 2017-06-05 | Pruning and label selection in hidden Markov model-based OCR |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/941,470 Continuation US9672448B2 (en) | 2013-12-31 | 2015-11-13 | Pruning and label selection in Hidden Markov Model-based OCR |
Publications (2)
Publication Number | Publication Date |
---|---|
US20170270391A1 US20170270391A1 (en) | 2017-09-21 |
US9934452B2 true US9934452B2 (en) | 2018-04-03 |
Family
ID=53482166
Family Applications (3)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/144,854 Active 2034-05-18 US9189708B2 (en) | 2013-12-31 | 2013-12-31 | Pruning and label selection in hidden markov model-based OCR |
US14/941,470 Active US9672448B2 (en) | 2013-12-31 | 2015-11-13 | Pruning and label selection in Hidden Markov Model-based OCR |
US15/614,491 Active US9934452B2 (en) | 2013-12-31 | 2017-06-05 | Pruning and label selection in hidden Markov model-based OCR |
Family Applications Before (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
US14/144,854 Active 2034-05-18 US9189708B2 (en) | 2013-12-31 | 2013-12-31 | Pruning and label selection in hidden markov model-based OCR |
US14/941,470 Active US9672448B2 (en) | 2013-12-31 | 2015-11-13 | Pruning and label selection in Hidden Markov Model-based OCR |
Country Status (1)
Country | Link |
---|---|
US (3) | US9189708B2 (en) |
Families Citing this family (10)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US9189708B2 (en) * | 2013-12-31 | 2015-11-17 | Google Inc. | Pruning and label selection in hidden markov model-based OCR |
US10540957B2 (en) | 2014-12-15 | 2020-01-21 | Baidu Usa Llc | Systems and methods for speech transcription |
US9418305B1 (en) * | 2015-04-29 | 2016-08-16 | Xerox Corporation | Segmentation free approach to automatic license plate recognition |
US10332509B2 (en) | 2015-11-25 | 2019-06-25 | Baidu USA, LLC | End-to-end speech recognition |
US11010656B2 (en) | 2017-10-30 | 2021-05-18 | Clinc, Inc. | System and method for implementing an artificially intelligent virtual assistant using machine learning |
US10572801B2 (en) | 2017-11-22 | 2020-02-25 | Clinc, Inc. | System and method for implementing an artificially intelligent virtual assistant using machine learning |
WO2019172868A1 (en) * | 2018-03-05 | 2019-09-12 | Clinc, Inc. | Systems and method for automatically configuring machine learning models |
US10303978B1 (en) | 2018-03-26 | 2019-05-28 | Clinc, Inc. | Systems and methods for intelligently curating machine learning training data and improving machine learning model performance |
US10679150B1 (en) | 2018-12-13 | 2020-06-09 | Clinc, Inc. | Systems and methods for automatically configuring training data for training machine learning models of a machine learning-based dialogue system including seeding training samples or curating a corpus of training data based on instances of training data identified as anomalous |
US10956295B1 (en) * | 2020-02-26 | 2021-03-23 | Sap Se | Automatic recognition for smart declaration of user interface elements |
Citations (17)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4977598A (en) * | 1989-04-13 | 1990-12-11 | Texas Instruments Incorporated | Efficient pruning algorithm for hidden markov model speech recognition |
US5528701A (en) * | 1994-09-02 | 1996-06-18 | Panasonic Technologies, Inc. | Trie based method for indexing handwritten databases |
US5542006A (en) * | 1994-06-21 | 1996-07-30 | Eastman Kodak Company | Neural network based character position detector for use in optical character recognition |
US5594809A (en) * | 1995-04-28 | 1997-01-14 | Xerox Corporation | Automatic training of character templates using a text line image, a text line transcription and a line image source model |
US5644652A (en) | 1993-11-23 | 1997-07-01 | International Business Machines Corporation | System and method for automatic handwriting recognition with a writer-independent chirographic label alphabet |
US5727081A (en) * | 1991-12-31 | 1998-03-10 | Lucent Technologies Inc. | System and method for automated interpretation of input expressions using novel a posteriori probability measures and optimally trained information processing networks |
US5825919A (en) | 1992-12-17 | 1998-10-20 | Xerox Corporation | Technique for generating bounding boxes for word spotting in bitmap images |
US5933525A (en) | 1996-04-10 | 1999-08-03 | Bbn Corporation | Language-independent and segmentation-free optical character recognition system and method |
US6243679B1 (en) | 1997-01-21 | 2001-06-05 | At&T Corporation | Systems and methods for determinization and minimization a finite state transducer for speech recognition |
US20020150300A1 (en) * | 1999-04-08 | 2002-10-17 | Dar-Shyang Lee | Extracting information from symbolically compressed document images |
US20030046073A1 (en) | 2001-08-24 | 2003-03-06 | International Business Machines Corporation | Word predicting method, voice recognition method, and voice recognition apparatus and program using the same methods |
US20050259866A1 (en) | 2004-05-20 | 2005-11-24 | Microsoft Corporation | Low resolution OCR for camera acquired documents |
US20090099841A1 (en) | 2007-10-04 | 2009-04-16 | Kubushiki Kaisha Toshiba | Automatic speech recognition method and apparatus |
US20100128985A1 (en) * | 2006-07-27 | 2010-05-27 | Bgn Technologies Ltd. | Online arabic handwriting recognition |
US8335381B2 (en) * | 2008-09-18 | 2012-12-18 | Xerox Corporation | Handwritten word spotter using synthesized typed queries |
US20140079297A1 (en) | 2012-09-17 | 2014-03-20 | Saied Tadayon | Application of Z-Webs and Z-factors to Analytics, Search Engine, Learning, Recognition, Natural Language, and Other Utilities |
US20150186756A1 (en) | 2013-12-31 | 2015-07-02 | Google Inc. | Pruning and label selection in hidden markov model-based ocr |
-
2013
- 2013-12-31 US US14/144,854 patent/US9189708B2/en active Active
-
2015
- 2015-11-13 US US14/941,470 patent/US9672448B2/en active Active
-
2017
- 2017-06-05 US US15/614,491 patent/US9934452B2/en active Active
Patent Citations (23)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
US4977598A (en) * | 1989-04-13 | 1990-12-11 | Texas Instruments Incorporated | Efficient pruning algorithm for hidden markov model speech recognition |
US5727081A (en) * | 1991-12-31 | 1998-03-10 | Lucent Technologies Inc. | System and method for automated interpretation of input expressions using novel a posteriori probability measures and optimally trained information processing networks |
US5825919A (en) | 1992-12-17 | 1998-10-20 | Xerox Corporation | Technique for generating bounding boxes for word spotting in bitmap images |
US5644652A (en) | 1993-11-23 | 1997-07-01 | International Business Machines Corporation | System and method for automatic handwriting recognition with a writer-independent chirographic label alphabet |
US5542006A (en) * | 1994-06-21 | 1996-07-30 | Eastman Kodak Company | Neural network based character position detector for use in optical character recognition |
US5528701A (en) * | 1994-09-02 | 1996-06-18 | Panasonic Technologies, Inc. | Trie based method for indexing handwritten databases |
US5594809A (en) * | 1995-04-28 | 1997-01-14 | Xerox Corporation | Automatic training of character templates using a text line image, a text line transcription and a line image source model |
US5933525A (en) | 1996-04-10 | 1999-08-03 | Bbn Corporation | Language-independent and segmentation-free optical character recognition system and method |
US6243679B1 (en) | 1997-01-21 | 2001-06-05 | At&T Corporation | Systems and methods for determinization and minimization a finite state transducer for speech recognition |
US20020150300A1 (en) * | 1999-04-08 | 2002-10-17 | Dar-Shyang Lee | Extracting information from symbolically compressed document images |
US20030046073A1 (en) | 2001-08-24 | 2003-03-06 | International Business Machines Corporation | Word predicting method, voice recognition method, and voice recognition apparatus and program using the same methods |
US20050259866A1 (en) | 2004-05-20 | 2005-11-24 | Microsoft Corporation | Low resolution OCR for camera acquired documents |
US7499588B2 (en) | 2004-05-20 | 2009-03-03 | Microsoft Corporation | Low resolution OCR for camera acquired documents |
US20100128985A1 (en) * | 2006-07-27 | 2010-05-27 | Bgn Technologies Ltd. | Online arabic handwriting recognition |
US20090099841A1 (en) | 2007-10-04 | 2009-04-16 | Kubushiki Kaisha Toshiba | Automatic speech recognition method and apparatus |
US8311825B2 (en) | 2007-10-04 | 2012-11-13 | Kabushiki Kaisha Toshiba | Automatic speech recognition method and apparatus |
US8335381B2 (en) * | 2008-09-18 | 2012-12-18 | Xerox Corporation | Handwritten word spotter using synthesized typed queries |
US20140079297A1 (en) | 2012-09-17 | 2014-03-20 | Saied Tadayon | Application of Z-Webs and Z-factors to Analytics, Search Engine, Learning, Recognition, Natural Language, and Other Utilities |
US8873813B2 (en) | 2012-09-17 | 2014-10-28 | Z Advanced Computing, Inc. | Application of Z-webs and Z-factors to analytics, search engine, learning, recognition, natural language, and other utilities |
US20150186756A1 (en) | 2013-12-31 | 2015-07-02 | Google Inc. | Pruning and label selection in hidden markov model-based ocr |
US9189708B2 (en) * | 2013-12-31 | 2015-11-17 | Google Inc. | Pruning and label selection in hidden markov model-based OCR |
US20160070992A1 (en) | 2013-12-31 | 2016-03-10 | Google Inc. | Pruning and label selection in hidden markov model-based ocr |
US9672448B2 (en) * | 2013-12-31 | 2017-06-06 | Google Inc. | Pruning and label selection in Hidden Markov Model-based OCR |
Non-Patent Citations (2)
Title |
---|
Cho et al, "Modeling and Recognition of Cursive Words with Hidden Markov Models," Pattern Recognition, (1995) 28(12):1941-1953. |
Elms et al., "The Advantage of Using an HMM-based Approach for Faxed Word Recognition," IJDAR (1998), 1:18-36. |
Also Published As
Publication number | Publication date |
---|---|
US9672448B2 (en) | 2017-06-06 |
US20170270391A1 (en) | 2017-09-21 |
US9189708B2 (en) | 2015-11-17 |
US20160070992A1 (en) | 2016-03-10 |
US20150186756A1 (en) | 2015-07-02 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
US9934452B2 (en) | Pruning and label selection in hidden Markov model-based OCR | |
US20230410796A1 (en) | Encoder-decoder models for sequence to sequence mapping | |
CN109635273B (en) | Text keyword extraction method, device, equipment and storage medium | |
CN107301170B (en) | Method and device for segmenting sentences based on artificial intelligence | |
CN105513589B (en) | Speech recognition method and device | |
JP5901001B1 (en) | Method and device for acoustic language model training | |
CN112800170A (en) | Question matching method and device and question reply method and device | |
CN112528637B (en) | Text processing model training method, device, computer equipment and storage medium | |
CN111108501A (en) | Context-based multi-turn dialogue method, device, equipment and storage medium | |
CN110222328B (en) | Method, device and equipment for labeling participles and parts of speech based on neural network and storage medium | |
CN110309504B (en) | Text processing method, device, equipment and storage medium based on word segmentation | |
CN110633475A (en) | Natural language understanding method, device and system based on computer scene and storage medium | |
CN112818680A (en) | Corpus processing method and device, electronic equipment and computer-readable storage medium | |
CN113053367A (en) | Speech recognition method, model training method and device for speech recognition | |
CN111221936B (en) | Information matching method and device, electronic equipment and storage medium | |
CN111368066B (en) | Method, apparatus and computer readable storage medium for obtaining dialogue abstract | |
CN114973229A (en) | Text recognition model training method, text recognition device, text recognition equipment and medium | |
CN114817478A (en) | Text-based question and answer method and device, computer equipment and storage medium | |
CN110717316B (en) | Topic segmentation method and device for subtitle dialog flow | |
CN115858776B (en) | Variant text classification recognition method, system, storage medium and electronic equipment | |
CN110263345A (en) | Keyword extracting method, device and storage medium | |
CN116129883A (en) | Speech recognition method, device, computer equipment and storage medium | |
CN114780757A (en) | Short media label extraction method and device, computer equipment and storage medium | |
CN113656566A (en) | Intelligent dialogue processing method and device, computer equipment and storage medium | |
CN109144284B (en) | Information display method and device |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
AS | Assignment |
Owner name: GOOGLE INC., CALIFORNIAFree format text: ASSIGNMENT OF ASSIGNORS INTEREST;ASSIGNOR:FUJII, YASUHISA;REEL/FRAME:042619/0382Effective date: 20140121 |
|
AS | Assignment |
Owner name: GOOGLE LLC, CALIFORNIAFree format text: CHANGE OF NAME;ASSIGNOR:GOOGLE INC.;REEL/FRAME:044129/0001Effective date: 20170929 |
|
STCF | Information on status: patent grant |
Free format text: PATENTED CASE |
|
MAFP | Maintenance fee payment |
Free format text: PAYMENT OF MAINTENANCE FEE, 4TH YEAR, LARGE ENTITY (ORIGINAL EVENT CODE: M1551); ENTITY STATUS OF PATENT OWNER: LARGE ENTITYYear of fee payment: 4 |
JP2023021113A - Content provider recommendations to improve targetting and other settings - Google Patents
Content provider recommendations to improve targetting and other settings Download PDFInfo
- Publication number
- JP2023021113A JP2023021113A JP2022180535A JP2022180535A JP2023021113A JP 2023021113 A JP2023021113 A JP 2023021113A JP 2022180535 A JP2022180535 A JP 2022180535A JP 2022180535 A JP2022180535 A JP 2022180535A JP 2023021113 A JP2023021113 A JP 2023021113A
- Authority
- JP
- Japan
- Prior art keywords
- search
- data processing
- processing system
- pruned
- predicted
- Prior art date
- Legal status (The legal status is an assumption and is not a legal conclusion. Google has not performed a legal analysis and makes no representation as to the accuracy of the status listed.)
- Pending
Links
- 238000000034 method Methods 0.000 claims abstract description 92
- 238000013138 pruning Methods 0.000 claims abstract description 16
- 238000012545 processing Methods 0.000 claims description 254
- 230000004044 response Effects 0.000 claims description 9
- 230000015654 memory Effects 0.000 description 49
- 238000004891 communication Methods 0.000 description 15
- 230000008569 process Effects 0.000 description 15
- 239000013598 vector Substances 0.000 description 15
- 238000004590 computer program Methods 0.000 description 13
- 244000141353 Prunus domestica Species 0.000 description 7
- 238000010586 diagram Methods 0.000 description 6
- 230000006870 function Effects 0.000 description 6
- 238000004422 calculation algorithm Methods 0.000 description 5
- 238000007906 compression Methods 0.000 description 4
- 238000012217 deletion Methods 0.000 description 4
- 230000037430 deletion Effects 0.000 description 4
- 230000000694 effects Effects 0.000 description 4
- 238000003780 insertion Methods 0.000 description 4
- 230000037431 insertion Effects 0.000 description 4
- 230000003287 optical effect Effects 0.000 description 4
- 230000008685 targeting Effects 0.000 description 4
- 230000003466 anti-cipated effect Effects 0.000 description 3
- 238000003491 array Methods 0.000 description 3
- 230000005540 biological transmission Effects 0.000 description 3
- 238000004364 calculation method Methods 0.000 description 3
- 230000006872 improvement Effects 0.000 description 3
- 230000000670 limiting effect Effects 0.000 description 3
- 230000000644 propagated effect Effects 0.000 description 3
- 230000001413 cellular effect Effects 0.000 description 2
- 230000006835 compression Effects 0.000 description 2
- 230000003993 interaction Effects 0.000 description 2
- 238000013515 script Methods 0.000 description 2
- 230000008859 change Effects 0.000 description 1
- 238000006243 chemical reaction Methods 0.000 description 1
- 239000000835 fiber Substances 0.000 description 1
- 239000004973 liquid crystal related substance Substances 0.000 description 1
- 239000004065 semiconductor Substances 0.000 description 1
- 230000001953 sensory effect Effects 0.000 description 1
- 238000007619 statistical method Methods 0.000 description 1
- 239000000758 substrate Substances 0.000 description 1
- 230000026676 system process Effects 0.000 description 1
- 238000012546 transfer Methods 0.000 description 1
- 230000003936 working memory Effects 0.000 description 1
Images
Classifications
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/903—Querying
- G06F16/9032—Query formulation
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06Q—INFORMATION AND COMMUNICATION TECHNOLOGY [ICT] SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES; SYSTEMS OR METHODS SPECIALLY ADAPTED FOR ADMINISTRATIVE, COMMERCIAL, FINANCIAL, MANAGERIAL OR SUPERVISORY PURPOSES, NOT OTHERWISE PROVIDED FOR
- G06Q10/00—Administration; Management
- G06Q10/04—Forecasting or optimisation specially adapted for administrative or management purposes, e.g. linear programming or "cutting stock problem"
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F16/00—Information retrieval; Database structures therefor; File system structures therefor
- G06F16/90—Details of database functions independent of the retrieved data types
- G06F16/903—Querying
- G06F16/90335—Query processing
- G06F16/90344—Query processing by using string matching techniques
-
- G—PHYSICS
- G06—COMPUTING; CALCULATING OR COUNTING
- G06F—ELECTRIC DIGITAL DATA PROCESSING
- G06F18/00—Pattern recognition
- G06F18/20—Analysing
- G06F18/22—Matching criteria, e.g. proximity measures
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L47/00—Traffic control in data switching networks
- H04L47/10—Flow control; Congestion control
- H04L47/11—Identifying congestion
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L47/00—Traffic control in data switching networks
- H04L47/10—Flow control; Congestion control
- H04L47/215—Flow control; Congestion control using token-bucket
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L47/00—Traffic control in data switching networks
- H04L47/10—Flow control; Congestion control
- H04L47/29—Flow control; Congestion control using a combination of thresholds
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L65/00—Network arrangements, protocols or services for supporting real-time applications in data packet communication
- H04L65/60—Network streaming of media packets
- H04L65/61—Network streaming of media packets for supporting one-way streaming services, e.g. Internet radio
- H04L65/612—Network streaming of media packets for supporting one-way streaming services, e.g. Internet radio for unicast
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/53—Network services using third party service providers
-
- H—ELECTRICITY
- H04—ELECTRIC COMMUNICATION TECHNIQUE
- H04L—TRANSMISSION OF DIGITAL INFORMATION, e.g. TELEGRAPHIC COMMUNICATION
- H04L67/00—Network arrangements or protocols for supporting network services or applications
- H04L67/50—Network services
- H04L67/60—Scheduling or organising the servicing of application requests, e.g. requests for application data transmissions using the analysis and optimisation of the required network resources
- H04L67/63—Routing a service request depending on the request content or context
Abstract
Description
インターネットなどのコンピュータネットワーク環境においては、第三者のコンテンツプロバイダが、エンドユーザのコンピューティングデバイス上に表示するための第三者のコンテンツアイテムを提供する。これらの第三者のコンテンツアイテム、たとえば、広告は、それぞれのパブリッシャに関連するウェブページ上に表示され得る。これらの第三者のコンテンツアイテムは、コンテンツアイテムを提供した第三者のコンテンツプロバイダを特定するコンテンツを含み得る。 In computer network environments such as the Internet, third party content providers provide third party content items for display on end user computing devices. These third-party content items, such as advertisements, may be displayed on web pages associated with their respective publishers. These third party content items may include content that identifies the third party content provider that provided the content item.
第三者のコンテンツアイテムは、一部の実装においては、肯定的検索トークン(retrieval token)および否定的検索トークンの使用によって選択される可能性がある。肯定的検索トークンは、検索トークンに関連するコンテンツアイテムが肯定的検索トークンの属性に合致する属性を有する情報リソースに挿入されるべきであることをコンテンツ選択プラットフォームに示す可能性がある。対照的に、否定的検索トークンは、関連するコンテンツが否定的検索トークンの属性に合致する属性を有する情報リソースに挿入されるべきでないことをコンテンツ選択プラットフォームに示すことができる。このようにして、コンテンツプロバイダは、肯定的と否定的との両方の検索トークンのリストを使用して、どの情報リソースがそれらのコンテンツプロバイダのコンテンツアイテムを含み得るかを調整することができる。 Third party content items may be selected through the use of positive retrieval tokens and negative retrieval tokens in some implementations. A positive search token may indicate to the content selection platform that the content item associated with the search token should be inserted into an information resource having attributes that match the attributes of the positive search token. In contrast, a negative search token can indicate to the content selection platform that the associated content should not be inserted into information resources that have attributes that match the attributes of the negative search token. In this manner, content providers can use lists of both positive and negative search tokens to coordinate which information resources may contain their content items.
しかし、検索トークンのどの組合せがターゲティング可能な情報リソースを最大化するかを決定することは、計算上難しいタスクであり、それは、その決定がコンテンツプロバイダによって提供される検索トークンのそれぞれの可能な順列(permutation)の影響を推定することを含み得るからである。多くのコンテンツプロバイダは、数百から数千の検索トークンを利用し、各順列の繰り返しの推定を計算上ほぼ実行不可能にし、いかなる人の能力も遙かに超えたものにする。結果として、本明細書において検討されるシステムおよび方法を使用しないコンテンツプロバイダの実装は、検索トークンのどの組合せがどのような効果を有するかについて当て推量するかまたは勘で推測するにとどまる。これは、誤ったコンテンツ選択および望ましくないまたは最適でないコンテンツの送信をもたらし、帯域幅および電力リソースを無駄にする可能性がある。 However, determining which combination of search tokens maximizes the targetable information resource is a computationally difficult task, and that determination depends on each possible permutation of search tokens provided by the content provider. because it may involve estimating the effect of (permutation). Many content providers utilize hundreds to thousands of search tokens, making iterative estimation of each permutation computationally nearly infeasible and well beyond the capabilities of any human being. As a result, content provider implementations that do not use the systems and methods discussed herein are limited to guesswork or guesswork as to which combination of search tokens has what effect. This can lead to erroneous content selection and transmission of undesirable or suboptimal content, wasting bandwidth and power resources.
本明細書において検討されるシステムおよび方法は、データ処理システムが、履歴データに基づく推定技術を使用して情報リソースに挿入するために選択されるコンテンツアイテムの数に対して否定的検索トークンの集合のうちのどの否定的検索トークンが最も大きな影響を与えているのかを特定することによってコンテンツ選択プロセスを自動的に改善することを可能にする。データ処理システムは、情報リソースの同様の集合に関連付けられる、コンテンツプロバイダによって提供されたその他の検索トークンをさらに特定することができる。どの検索トークンがコンテンツ選択プロセスに対して最も大きな影響を与えるのかを特定した後、データ処理システムは、提供された検索トークンからそれらの検索トークンを取り除き、それらのコンテンツアイテムを提供することができる情報リソースの数に改善が見られるかどうかを判定するための推定プロセスを実行することができる。これは、誤ったコンテンツ選択の削減または排除を可能にし、データ処理システムがそのようなコンテンツを伝達することを防止することを可能にし、それによってシステムの帯域幅および電力消費を削減する可能性がある。 The systems and methods discussed herein provide a set of negative search tokens for the number of content items that a data processing system selects for insertion into an information resource using inference techniques based on historical data. automatically improve the content selection process by identifying which of the negative search tokens have the greatest impact. The data processing system can further identify other search tokens provided by content providers that are associated with similar collections of information resources. After identifying which search tokens have the greatest impact on the content selection process, the data processing system removes those search tokens from the provided search tokens and provides information about those content items. An estimation process can be performed to determine if there is an improvement in the number of resources. This can reduce or eliminate erroneous content selection and prevent data processing systems from communicating such content, thereby potentially reducing system bandwidth and power consumption. be.
本開示の少なくとも1つの態様は、文書空間(document space)の関連付けに基づいて選択基準の集合から選択基準を刈り込むための方法を対象とする。方法は、複数の検索トークンをコンテンツプロバイダのコンピューティングシステムから1つまたは複数のプロセッサを含むデータ処理システムによって受信するステップを含み得る。複数の検索トークンの各々は、第2の検索トークンを含み得る。方法は、データ処理システムによって第1の検索トークンの指示を取り出すステップを含み得る。第1の検索トークンは、複数の検索トークンに含まれ得る。方法は、データ処理システムによって複数の検索トークンに基づいて複数の予測される要求(predicted request)を取り出すステップを含み得る。方法は、データ処理システムによって、複数の検索トークンのうちの第1の検索トークンに関する関連する予測される要求を示す第1のデータ構造を構築するステップを含み得る。そのようなデータ構造は、ビット列を含む可能性があり、第1のビット列内の各位置は、複数の予測される要求のうちのそれぞれの予測される要求に対応し、それぞれの予測される要求が第1の検索トークンに対応するかどうかを示す値を有する。一部のそのような実装において、方法は、データ処理システムによって第2のビット列を取り出すステップを含むことが可能であり、第2のビット列は、複数の検索トークンの中の第2の検索トークンに関連付けられ得る。第2のビット列内の各位置は、第1の複数の予測される要求のうちのそれぞれの予測される要求に対応し、それぞれの予測される要求が第2の検索トークンに対応するかどうかを示す値を有することが可能である。方法は、データ処理システムによって、類似性の値を計算するために、第1のデータ構造またはビット列を、(たとえば、複数の検索トークンのうちの第2の検索トークンに関する関連する予測される要求を示す)第2のデータ構造またはビット列と比較するステップを含み得る。方法は、データ処理システムによって、類似性の値が所定の閾値よりも大きいかどうかを判定するステップを含み得る。方法は、データ処理システムによって、類似性の値が所定の閾値よりも大きいと判定することに応じて刈り込まれた複数の検索トークンを生成するために複数の検索トークンから第1の検索トークンおよび第2の検索トークンを削除するステップを含み得る。方法は、データ処理システムによって、刈り込まれた複数の検索トークンをコンテンツプロバイダのコンピューティングデバイスに提供するステップを含み得る。 At least one aspect of the present disclosure is directed to a method for pruning selection criteria from a set of selection criteria based on document space association. The method may include receiving a plurality of search tokens from a content provider's computing system by a data processing system including one or more processors. Each of the plurality of search tokens can include a second search token. The method may include retrieving an indication of the first search token by the data processing system. The first search token may be included in multiple search tokens. The method may include retrieving, by a data processing system, a plurality of predicted requests based on the plurality of search tokens. The method may include constructing, by a data processing system, a first data structure indicating associated predicted requests for a first search token of the plurality of search tokens. Such a data structure may include a bitstring, each position within the first bitstring corresponding to a respective predicted request of the plurality of predicted requests, and a respective predicted request has a value that indicates whether the corresponds to the first search token. In some such implementations, the method can include retrieving a second bit string by the data processing system, the second bit string being applied to a second search token of the plurality of search tokens. can be associated. Each position within the second bit string corresponds to a respective predicted request of the first plurality of predicted requests and indicates whether each predicted request corresponds to the second search token. It can have the value shown. The method includes, by a data processing system, processing a first data structure or bit string (e.g., a related predicted request for a second search token of a plurality of search tokens) to calculate a similarity value. shown) with a second data structure or bit string. The method may include determining, by the data processing system, whether the similarity value is greater than a predetermined threshold. The method includes, by a data processing system, extracting a first search token and a first search token from the plurality of search tokens to generate a plurality of pruned search tokens in response to determining that the similarity value is greater than a predetermined threshold. 2, deleting the search token. The method may include providing, by a data processing system, a plurality of pruned search tokens to a content provider computing device.
一部の実装において、第1のデータ構造および第2のデータ構造は、それぞれビット列を含み、各ビット列内の各位置は、複数の予測される要求のうちの予測される要求に対応し、それぞれの予測される要求がそれぞれの検索トークンに対応するかどうかを示す値を有する。一部のさらなる実装において、方法は、第1の刈り込まれたビット列を生成するために第1のビット列内の位置をビット列選択基準を使用して選択するステップを含み得る。第1の刈り込まれたビット列は、第1のビット列よりも小さい可能性がある。一部の実装において、方法は、第2の刈り込まれたビット列を生成するために第2のビット列内の位置をビット列選択基準を使用して選択するステップを含み得る。第2の刈り込まれたビット列は、第2のビット列よりも小さい可能性がある。一部の実装において、第1のビット列を第2のビット列と比較するステップは、第1の刈り込まれたビット列を第2の刈り込まれたビット列と比較することを含む。 In some implementations, the first data structure and the second data structure each include a bitstring, each position within each bitstring corresponds to a predicted request of the plurality of predicted requests, and of expected requests correspond to the respective search token. In some further implementations, the method may include selecting positions within the first bitstring to generate the first pruned bitstring using a bitstring selection criterion. The first pruned bitstring may be smaller than the first bitstring. In some implementations, the method may include selecting positions within the second bitstream to generate the second pruned bitstream using a bitstream selection criterion. The second pruned bitstring may be smaller than the second bitstring. In some implementations, comparing the first bitstream to the second bitstream includes comparing the first pruned bitstream to the second pruned bitstream.
一部の実装において、第1の刈り込まれたビット列を生成するための選択基準は、擬似ランダムな選択に基づく。一部の実装において、複数の予測される要求を取り出すステップは、複数の重み値を取り出すことをさらに含む。複数の重み値の各々は、それぞれの予測される要求に関する推定されたトラフィック値に対応し得る。一部の実装において、方法は、データ処理システムによって、複数の重み値の各々を所定のトラフィックの閾値と比較するステップを含み得る。一部の実装において、方法は、データ処理システムによって、刈り込まれた複数の予測される要求を選択するステップを含み得る。それぞれの重み値が所定のトラフィックの閾値よりも大きいことに応じて、刈り込まれた複数の予測される要求の各々が、複数の予測される要求から選択される。一部の実装において、方法は、データ処理システムによって第1のビット列を構築するステップを含み得る。第1のビット列内の各位置は、刈り込まれた複数の予測される要求のうちのそれぞれの予測される要求に対応し、それぞれの刈り込まれた予測される要求が第1の検索トークンに対応するかどうかを示す値を有することが可能である。 In some implementations, the selection criteria for generating the first pruned bitstream is based on pseudorandom selection. In some implementations, retrieving a plurality of predicted requests further includes retrieving a plurality of weight values. Each of the multiple weight values may correspond to an estimated traffic value for each predicted demand. In some implementations, the method may include comparing, by the data processing system, each of the plurality of weight values to a predetermined traffic threshold. In some implementations, the method may include selecting, by the data processing system, a plurality of pruned predicted requests. Each of the pruned plurality of predicted requests is selected from the plurality of predicted requests responsive to the respective weight value being greater than a predetermined traffic threshold. In some implementations, the method may include constructing the first bit string by the data processing system. Each position within the first bit string corresponds to a respective predicted request of the pruned plurality of predicted requests, each pruned predicted request corresponding to the first search token. It can have a value indicating whether
一部の実装において、方法は、データ処理システムによって、比較されたビット列を生成するために第1のビット列と第2のビット列との間で論理AND演算を実行するステップを含み得る。一部の実装において、方法は、データ処理システムによって、類似性の値を計算するために所定のマッチ値に等しい比較されたビット列内の位置の数をカウントするステップを含み得る。一部の実装において、方法は、データ処理システムによって、類似性の値が所定の閾値未満であることに応じて刈り込まれた複数の検索トークンを生成するために複数の検索トークンから第1の検索トークンを削除するステップを含み得る。一部の実装において、複数の検索トークンの各々は、コンテンツのレーティング値に関連付けられる。一部の実装において、方法は、複数の検索トークンおよび第1の検索トークンに関連するコンテンツのレーティング値に基づいて複数の予測される要求を取り出すステップを含み得る。一部の実装において、方法は、第1の検索トークンおよび第2の検索トークンの指示を提供するステップを含み得る。一部の実装において、方法は、データ処理システムによって、刈り込まれた複数の検索トークンに基づいて刈り込まれた複数の検索トークンに関する妥当性(relevance)の値を取り出すステップを含み得る。一部の実装において、方法は、データ処理システムによって、刈り込まれた複数の検索トークンに基づく妥当性の値をコンテンツプロバイダのコンピューティングデバイスに提供するステップを含み得る。 In some implementations, the method may include performing, by the data processing system, a logical AND operation between the first bit string and the second bit string to produce a compared bit string. In some implementations, the method may include counting, by the data processing system, the number of positions in the compared bit strings that equal a predetermined match value to calculate a similarity value. In some implementations, the method comprises performing, by a data processing system, a first search from the plurality of search tokens to generate a plurality of pruned search tokens in response to a similarity value being less than a predetermined threshold. Deleting the token may be included. In some implementations, each of the multiple search tokens is associated with a content rating value. In some implementations, the method may include retrieving a plurality of predicted requests based on a plurality of search tokens and a rating value of content associated with the first search token. In some implementations, the method may include providing an indication of the first search token and the second search token. In some implementations, the method may include, by a data processing system, retrieving a relevance value for the pruned search tokens based on the pruned search tokens. In some implementations, the method may include providing, by the data processing system, a relevance value based on the pruned plurality of search tokens to the content provider's computing device.
本開示の少なくとも1つのその他の態様は、1つまたは複数のプロセッサを含むデータ処理システムを含むシステムを対象とする。データ処理システムは、複数の検索トークンをコンテンツプロバイダのコンピューティングシステムから受信し得る。複数の検索トークンは、第2の検索トークンを含み得る。データ処理システムは、第1の検索トークンの指示を取り出すことができ、第1の検索トークンは、複数の検索トークンに含まれる。データ処理システムは、複数の検索トークンに基づいて複数の予測される要求を取り出し得る。データ処理システムは、複数の検索トークンのうちの第1の検索トークンに関する関連する予測される要求を示す第1のデータ構造を構築し得る。そのようなデータ構造は、ビット列を含む可能性があり、第1のビット列内の各位置は、複数の予測される要求のうちのそれぞれの予測される要求に対応し、それぞれの予測される要求が第1の検索トークンに対応するかどうかを示す値を有する。一部のそのような実装において、データ処理システムは、第2のビット列を取り出すことが可能であり、第2のビット列は、複数の検索トークンの中の第2の検索トークンに関連付けられる。第2のビット列内の各位置は、第1の複数の予測される要求のうちのそれぞれの予測される要求に対応することが可能であり、それぞれの予測される要求が第2の検索トークンに対応するかどうかを示す値を有する。データ処理システムは、類似性の値を計算するために、第1のデータ構造またはビット列を、(たとえば、複数の検索トークンのうちの第2の検索トークンに関する関連する予測される要求を示す)第2のデータ構造またはビット列と比較し得る。データ処理システムは、類似性の値が所定の閾値よりも大きいと判定し得る。データ処理システムは、類似性の値が所定の閾値よりも大きいと判定することに応じて刈り込まれた複数の検索トークンを生成するために複数の検索トークンから第1の検索トークンおよび第2の検索トークンを削除し得る。データ処理システムは、刈り込まれた複数の検索トークンをコンテンツプロバイダのコンピューティングデバイスに提供し得る。 At least one other aspect of the disclosure is directed to systems including data processing systems including one or more processors. A data processing system may receive multiple search tokens from a content provider's computing system. Multiple search tokens may include a second search token. A data processing system can retrieve an indication of a first search token, the first search token being included in the plurality of search tokens. A data processing system may retrieve multiple predicted requests based on multiple search tokens. A data processing system may construct a first data structure indicating associated predicted requests for a first search token of a plurality of search tokens. Such a data structure may include a bitstring, each position within the first bitstring corresponding to a respective predicted request of the plurality of predicted requests, and a respective predicted request has a value that indicates whether the corresponds to the first search token. In some such implementations, the data processing system can retrieve a second bit string, the second bit string associated with a second search token of the plurality of search tokens. Each position within the second bit string may correspond to a respective predicted request of the first plurality of predicted requests, each predicted request to the second search token. Has a value that indicates whether it is supported. A data processing system uses a first data structure or bit string (e.g., indicating a related predicted demand for a second search token of a plurality of search tokens) as a second data structure to calculate a similarity value. 2 data structures or bit strings. The data processing system may determine that the similarity value is greater than a predetermined threshold. A data processing system performs a first search token and a second search token from the plurality of search tokens to generate a plurality of pruned search tokens in response to determining that the similarity value is greater than a predetermined threshold. Tokens can be deleted. A data processing system may provide a plurality of pruned search tokens to a content provider's computing device.
一部の実装において、第1のデータ構造および第2のデータ構造は、それぞれビット列を含み、各ビット列内の各位置は、複数の予測される要求のうちの予測される要求に対応し、それぞれの予測される要求がそれぞれの検索トークンに対応するかどうかを示す値を有する。一部のさらなる実装において、データ処理システムは、第1の刈り込まれたビット列を生成するために第1のビット列内の位置をビット列選択基準を使用して選択することが可能であり、第1の刈り込まれたビット列は、第1のビット列よりも小さい。一部の実装において、データ処理システムは、第2の刈り込まれたビット列を生成するために第2のビット列内の位置をビット列選択基準を使用して選択することが可能であり、第2の刈り込まれたビット列は、第2のビット列よりも小さい。一部の実装において、データ処理システムは、第1の刈り込まれたビット列を第2の刈り込まれたビット列と比較することによって第1のビット列を第2のビット列と比較し得る。一部の実装において、第1の刈り込まれたビット列を生成するためのビット列選択基準は、擬似ランダムな選択に基づく。一部の実装において、データ処理システムは、複数の重み値を取り出すことが可能であり、複数の重み値の各々は、それぞれの予測される要求に関する推定されたトラフィック値に対応する。一部の実装において、データ処理システムは、複数の重み値の各々を所定のトラフィックの閾値と比較し得る。 In some implementations, the first data structure and the second data structure each include a bitstring, each position within each bitstring corresponds to a predicted request of the plurality of predicted requests, and of expected requests correspond to the respective search token. In some further implementations, the data processing system is capable of selecting a position within the first bitstring to generate the first pruned bitstring using a bitstring selection criterion; The pruned bitstring is smaller than the first bitstring. In some implementations, the data processing system is capable of selecting locations within the second bitstream using a bitstream selection criterion to generate a second pruned bitstream; The resulting bit string is less than the second bit string. In some implementations, the data processing system may compare the first bitstring to the second bitstring by comparing the first pruned bitstring to the second pruned bitstring. In some implementations, the bitstream selection criteria for generating the first pruned bitstream is based on pseudorandom selection. In some implementations, the data processing system may retrieve multiple weight values, each of the multiple weight values corresponding to an estimated traffic value for a respective predicted demand. In some implementations, the data processing system may compare each of the plurality of weight values to a predetermined traffic threshold.
一部の実装において、データ処理システムは、刈り込まれた複数の予測される要求を選択することが可能であり、それぞれの重み値が所定のトラフィックの閾値よりも大きいことに応じて、刈り込まれた複数の各々が、複数の予測される要求から選択される。一部の実装において、データ処理システムは、第1のビット列を構築することが可能であり、第1のビット列内の各位置は、刈り込まれた複数の予測される要求のうちのそれぞれの予測される要求に対応し、それぞれの刈り込まれた予測される要求が第1の検索トークンに対応するかどうかを示す値を有する。一部の実装において、データ処理システムは、比較されたビット列を生成するために第1のビット列と第2のビット列との間で論理AND演算を実行し得る。一部の実装において、データ処理システムは、類似性の値を計算するために所定のマッチ値に等しい比較されたビット列内の位置の数をカウントし得る。 In some implementations, the data processing system may select a plurality of predicted requests to be pruned and pruned in response to their respective weight values being greater than a predetermined traffic threshold. Each of the plurality is selected from a plurality of expected demands. In some implementations, the data processing system may construct a first bitstring, each position within the first bitstring representing a respective predicted request of the pruned plurality of predicted requests. and has a value indicating whether each pruned expected request corresponds to the first search token. In some implementations, the data processing system may perform a logical AND operation between the first bit string and the second bit string to generate a compared bit string. In some implementations, the data processing system may count the number of positions in the compared bit strings that equal a predetermined match value to calculate a similarity value.
一部の実装において、データ処理システムは、類似性の値が所定の閾値未満であることに応じて刈り込まれた複数の検索トークンを生成するために複数の検索トークンから第1の検索トークンを削除し得る。一部の実装において、複数の検索トークンの各々は、コンテンツのレーティング値に関連付けられ得る。一部の実装において、データ処理システムは、複数の検索トークンおよび第1の検索トークンに関連するコンテンツのレーティング値に基づいて複数の予測される要求を取り出し得る。一部の実装において、データ処理システムは、第1の検索トークンおよび第2の検索トークンの指示を提供し得る。一部の実装において、データ処理システムは、刈り込まれた複数の検索トークンに基づいて刈り込まれた複数の検索トークンに関する妥当性の値を取り出し得る。一部の実装において、データ処理システムは、妥当性の値をコンテンツプロバイダのコンピューティングデバイスに提供し得る。 In some implementations, the data processing system removes a first search token from the plurality of search tokens to generate a plurality of pruned search tokens responsive to a similarity value below a predetermined threshold. can. In some implementations, each of the multiple search tokens may be associated with a content rating value. In some implementations, the data processing system may retrieve multiple predicted requests based on the multiple search tokens and the rating value of the content associated with the first search token. In some implementations, the data processing system may provide an indication of the first search token and the second search token. In some implementations, the data processing system may retrieve validity values for the pruned search tokens based on the pruned search tokens. In some implementations, the data processing system may provide the validity value to the content provider's computing device.
これらのおよびその他の態様および実装が、下で詳細に検討される。上述の情報および下の詳細な説明は、様々な態様および実装の例示的な例を含み、特許請求される態様および実装の本質および特徴を理解するための概要または枠組みを提供する。図面は、様々な態様および実装を例示し、さらに理解させ、本明細書の一部に組み込まれ、本明細書の一部を構成する。態様は、組み合わされることが可能であり、本発明の1つの態様の文脈で説明される特徴は、その他の態様と組み合わされ得ることが容易に理解されるであろう。態様は、任意の都合のよい形態で実装されることが可能である。たとえば、有形の担持媒体(たとえば、ディスク)または無形の担持媒体(たとえば、通信信号)である可能性がある適切な担持媒体(コンピュータ可読媒体)上で運ばれる可能性がある適切なコンピュータプログラムによる。態様は、態様を実装するように構成されたコンピュータプログラムを実行するプログラミング可能なコンピュータの形態をとる可能性がある好適な装置を使用して実装される可能性もある。 These and other aspects and implementations are discussed in detail below. The information above and the detailed description below, including illustrative examples of various aspects and implementations, provide an overview or framework for understanding the nature and characteristics of the claimed aspects and implementations. The drawings illustrate and provide further understanding of various aspects and implementations, and are incorporated in and constitute a part of this specification. It will be readily appreciated that aspects can be combined and features described in the context of one aspect of the invention can be combined with other aspects. Aspects may be implemented in any convenient form. by a suitable computer program, which may be carried on a suitable carrier medium (computer-readable medium), which may be, for example, a tangible carrier medium (e.g., a disc) or an intangible carrier medium (e.g., a communication signal) . Aspects may also be implemented using any suitable apparatus, which may take the form of a programmable computer executing a computer program configured to implement the aspects.
添付の図面は、正しい縮尺で描かれるように意図されていない。様々な図面における同様の参照番号および参照指示は、同様の要素を示す。明瞭にする目的で、あらゆる図面においてあらゆる構成要素がラベル付けされるとは限らない可能性がある。 The accompanying drawings are not intended to be drawn to scale. Like reference numbers and reference designations in the various drawings indicate like elements. Not all components may be labeled in all drawings for the purpose of clarity.
以下は、ユーザ識別子の集合の交わりのプライバシーを保護した決定の方法、装置、およびシステムに関連する様々な概念ならびにそれらの方法、装置、およびシステムの実装の詳細な説明である。上で導入され、下でより詳細に検討される様々な概念は、説明される概念が実装のいかなる特定の方法にも限定されないので、多数の方法のいずれかで実装される可能性がある。 The following is a detailed description of various concepts related to privacy-preserving determination methods, apparatus, and systems of intersection of sets of user identifiers and implementations of those methods, apparatus, and systems. The various concepts introduced above and discussed in more detail below can be implemented in any of a number of ways, as the concepts described are not limited to any particular way of implementation.
コンテンツプロバイダは、とりわけ、ウェブページ、ビデオセグメント、またはモバイルアプリケーションである可能性がある情報リソースに挿入するためにコンテンツ選択システムにコンテンツアイテムを提供することができる。コンテンツ選択システムは、情報リソースのコンテンツに基づいて、コンテンツプロバイダによって提供されたコンテンツアイテムを情報リソースに挿入することができる。たとえば、特定のキーワードが情報リソースに関連付けられる場合、または情報リソースが特定のデモグラフィックス(demographic)情報に関連するユーザのグループによって見られる場合、コンテンツ選択システムは、同様の属性に関連付けられるコンテンツアイテムを選択することができる。したがって、コンテンツプロバイダシステムは、ターゲティングされた情報リソースにコンテンツアイテムを挿入するようにコンテンツ選択システムに指示することができるターゲティング情報を含み得る検索トークンをそれらのコンテンツプロバイダのコンテンツアイテムに関連付けることができる。コンテンツプロバイダによって提供される検索トークンは、とりわけ、言語情報、ユーザのデモグラフィックス情報、ユーザの関心の垂直情報(user interest vertical information)、コンテンツレーティング情報、およびキーワード情報を含み得る。 Content providers can provide content items to the content selection system for insertion into information resources, which can be web pages, video segments, or mobile applications, among others. The content selection system can insert content items provided by content providers into the information resource based on the content of the information resource. For example, if a particular keyword is associated with an information resource, or if the information resource is viewed by a group of users associated with particular demographic information, the content selection system may identify content items associated with similar attributes. can be selected. Accordingly, content provider systems can associate their content items with search tokens that can include targeting information that can direct the content selection system to insert the content item into the targeted information resource. Search tokens provided by content providers may include language information, user demographics information, user interest vertical information, content rating information, and keyword information, among others.
検索トークンは、肯定的性質または否定的性質などの性質も含み得る。肯定的検索トークンは、検索トークンに関連するコンテンツアイテムが肯定的検索トークンの属性に合致する属性を有する情報リソースに挿入されるべきであることをコンテンツ選択プラットフォームに示すことができる。対照的に、否定的検索トークンは、関連するコンテンツが否定的検索トークンの属性に合致する属性を有する情報リソースに挿入されるべきでないことをコンテンツ選択プラットフォームに示すことができる。このようにして、コンテンツプロバイダは、肯定的と否定的との両方の検索トークンのリストを使用して、どの情報リソースがそれらのコンテンツプロバイダのコンテンツアイテムを含み得るかを調整することができる。さらに、特定のコンテンツ選択プラットフォームは、コンテンツプロバイダによって提供されたコンテンツアイテムに関連する検索トークンに基づいてそれらのコンテンツアイテムを含み得る情報リソースの数および性質を推定するためのインターフェースを提供することができる。 Search tokens may also include properties such as positive or negative properties. A positive search token can indicate to the content selection platform that the content item associated with the search token should be inserted into an information resource having attributes that match the attributes of the positive search token. In contrast, a negative search token can indicate to the content selection platform that the associated content should not be inserted into information resources that have attributes that match the attributes of the negative search token. In this manner, content providers can use lists of both positive and negative search tokens to coordinate which information resources may contain their content items. Additionally, certain content selection platforms may provide an interface for estimating the number and nature of information resources that may contain content items based on search tokens associated with the content items provided by content providers. .
しかし、検索トークンのどの組合せがターゲティング可能な情報リソースを最大化するかを決定することは、計算上難しいタスクであり、それは、その決定がコンテンツプロバイダによって提供される検索トークンのそれぞれの可能な順列の影響を推定することを含み得るからである。多くのコンテンツプロバイダは、数百から数千の検索トークンのリストを提供し、各順列の繰り返しの推定を計算上ほぼ実行不可能にする。これらの問題は、多くのコンテンツプロバイダが単純に肯定的および否定的検索トークンの準備された第三者のリストを使用し、それがコンテンツプロバイダのコンテンツアイテムを含み得る情報リソースの数に予期しないおよび意図しない否定的影響を与える可能性があるという事実によって悪化させられる。さらに、コンテンツプロバイダによる推定されたフィードバックに基づく検索トークンの手動調整は、実行不可能なほど時間がかかり得る。 However, determining which combination of search tokens maximizes the targetable information resource is a computationally difficult task, and that determination depends on each possible permutation of search tokens provided by the content provider. because it may involve estimating the impact of Many content providers provide lists of hundreds to thousands of search tokens, making iterative estimation of each permutation computationally nearly infeasible. These problems stem from the fact that many content providers simply use prepared third-party lists of positive and negative search tokens, which can lead to unexpected and unpredictable numbers of information resources that can contain the content provider's content items. compounded by the fact that it can have unintended negative effects. Moreover, manual adjustment of search tokens based on presumed feedback by content providers can be impractically time consuming.
上述の技術的な問題に対処するために、データ処理システムは、履歴データに基づく推定技術を使用して情報リソースに挿入するために選択されるコンテンツアイテムの数に対して否定的検索トークンのうちのどれが最も大きな影響を与えているのかを自動的に特定することができる。データ処理システムは、情報リソースの同様の集合に関連付けられる、コンテンツプロバイダによって提供されたその他の検索トークンをさらに特定することができる。どの検索トークンがコンテンツ選択プロセスに対して最も大きな影響を与えているのかを特定した後、データ処理システムは、提供された検索トークンからそれらの検索トークンを取り除き、それらのコンテンツアイテムを提供することができる情報リソースの数に改善が見られるかどうかを判定するための推定プロセスを実行することができる。 To address the technical problem described above, a data processing system uses inference techniques based on historical data to determine the number of content items selected for insertion into an information resource. can automatically identify which ones have the greatest impact. The data processing system can further identify other search tokens provided by content providers that are associated with similar collections of information resources. After identifying which search tokens have the greatest impact on the content selection process, the data processing system can remove those search tokens from the provided search tokens and serve those content items. An estimation process can be performed to determine if there is an improvement in the number of available information resources.
たとえば、「Go to my channel to see my other videos.」と述べる説明を伴う「Phone Unboxing Video」という題名の情報リソースを考える。したがって、情報リソースは、英語に関連付けられ得る。コンテンツアイテムによってこの情報リソースおよび恐らくはその他の同様の情報リソースにターゲティングしたいコンテンツプロバイダを考える。しかし、コンテンツプロバイダは、とりわけ、否定的なターゲティングの基準(たとえば、否定的検索トークン)「video」、「videos」、および「TV」を意図せず追加した。否定的キーワード「video」がターゲティング可能な情報リソースの数に最も大きな否定的影響を与えていると仮定する。一部の実装においては、キーワード「videos」および「TV」が同様の情報リソースからの同様の履歴的要求に関連付けられているので、データ処理システムは、それらのキーワード「videos」および「TV」もコンテンツプロバイダによって提供された検索トークンのリストから削除されるべきであると判定し得る。したがって、データ処理システムは、同様の履歴的パターンに基づいてすべての同様の検索トークンを代わりに削除することによって、否定的キーワードの各組合せに関する予測される要求の推定を繰り返し削除および実行する必要をなくすことができる。 For example, consider an information resource entitled "Phone Unboxing Video" with a description that states "Go to my channel to see my other videos." Accordingly, information resources may be associated with the English language. Consider a content provider that wants to target this information resource and possibly other similar information resources with content items. However, the content provider unintentionally added negative targeting criteria (eg, negative search tokens) "video", "videos", and "TV", among others. Assume that the negative keyword "video" has the greatest negative impact on the number of targetable information resources. In some implementations, the data processing system may also specify that the keywords "videos" and "TV" are associated with similar historical requests from similar information resources. It may be determined that it should be removed from the list of search tokens provided by the content provider. Thus, the data processing system does not need to iteratively eliminate and perform estimates of expected requests for each combination of negative keywords by instead eliminating all similar search tokens based on similar historical patterns. can be eliminated.
したがって、本明細書において説明される技術的な解決策は、コンテンツアイテムの到達範囲に否定的影響を与える可能性がある不必要なまたは意図されない検索トークンの削除の計算の複雑さを大幅に減らすことができる。さらに、統計分析に基づくビット圧縮技術を適用することによって、データ処理システムは、各検索トークンに関して同様に関連する情報リソースを決定するストレージの要件および計算の複雑さを大幅に減らすことができ、これは、その他の実装に優る改善である。 Thus, the technical solution described herein significantly reduces the computational complexity of removing unnecessary or unintended search tokens that can negatively impact the reach of content items. be able to. Furthermore, by applying bit-compression techniques based on statistical analysis, the data processing system can significantly reduce the storage requirements and computational complexity of determining similarly associated information resources for each search token. is an improvement over other implementations.
図1は、コンテンツプロバイダのプラットフォームのために検索トークンを刈り込むためのシステム100を示す。システム100は、少なくとも1つのコンピュータネットワーク110を含み得る。システム100は、少なくとも1つのコンテンツプロバイダ115を含み得る。システム100は、少なくとも1つのデータ処理システム105を含み得る。データ処理システム105は、少なくとも1つの検索トークンレシーバ125を含み得る。データ処理システム105は、少なくとも1つの予測される要求リトリーバ(predicted request retriever) 130を含み得る。データ処理システム105は、少なくとも1つのビット列コンストラクタ135を含み得る。データ処理システム105は、少なくとも1つのビット列比較モジュール140を含み得る。データ処理システム105は、少なくとも1つの検索トークンプルーナ(retrieval token pruner) 145を含み得る。データ処理システム105は、少なくとも1つの刈り込み済みトークンプロバイダ150を含み得る。システム100は、少なくとも1つのデータベース120を含み得る。一部の実装においては、データ処理システムが、コンテンツプロバイダ115を含み得る。一部の実装においては、データ処理システムが、データベース120を含み得る。
FIG. 1 shows a
システム100の構成要素(たとえば、ネットワーク110、コンテンツプロバイダ115、データ処理システム105、検索トークンレシーバ125、予測される要求リトリーバ130、ビット列コンストラクタ135、ビット列比較モジュール140、検索トークンプルーナ145、刈り込み済みトークンプロバイダ150、データベース120)の各々は、図7に関連して本明細書において詳細に説明されるコンピューティングシステム700のハードウェア構成要素またはソフトウェアとハードウェア構成要素との組合せを使用して実装され得る。たとえば、データ処理システム105は、サーバまたはその他のコンピューティングデバイスを含み得る。コンテンツプロバイダ115も、サーバまたはその他のコンピューティングデバイスを含み得る。データ処理システム105の構成要素の各々は、本明細書において詳細に説明される機能を実行することができる。
Components of system 100 (e.g.,
ネットワーク110は、インターネット、ローカルエリアネットワーク、広域ネットワーク、メトロエリアネットワーク、またはその他のエリアネットワークなどのコンピュータネットワーク、イントラネット、衛星ネットワーク、音声またはデータモバイル電話通信ネットワークなどのその他のコンピュータネットワーク、およびこれらの組合せを含み得る。システム100のデータ処理システム105は、たとえば、少なくとも1つのコンテンツプロバイダ115および少なくとも1つのデータベース120とネットワーク110を介して通信することができる。ネットワーク110は、コンテンツプロバイダ115と、データ処理システム105と、とりわけウェブサーバなどの1つまたは複数のコンテンツソースとの間で情報を中継する任意の形態のコンピュータネットワークである可能性がある。一部の実装において、ネットワーク110は、インターネット、ならびに/またはローカルエリアネットワーク(LAN)、広域ネットワーク(WAN)、セルラネットワーク、衛星ネットワーク、もしくはその他の種類のデータネットワークなどのその他の種類のデータネットワークを含む可能性がある。ネットワーク110は、ネットワーク110内でデータを受信および/または送信するように構成される任意の数のコンピューティングデバイス(たとえば、コンピュータ、サーバ、ルータ、ネットワークスイッチなど)も含む可能性がある。ネットワーク110は、任意の数の有線および/またはワイヤレス接続をさらに含む可能性がある。コンテンツプロバイダ115は、ネットワーク110内のその他のコンピューティングデバイスに(たとえば、光ファイバケーブル、CAT5ケーブルなどによって)結線されるトランシーバと(たとえば、WiFi、セルラ、無線などによって)ワイヤレスで通信する可能性がある。コンテンツプロバイダ115は、プロキシデバイス(たとえば、ルータ、ネットワークスイッチ、またはゲートウェイ)を介してネットワーク110のコンピューティングデバイスとワイヤレスで通信する可能性もある。
データ処理システム105は、少なくとも1つのプロセッサおよびメモリ、すなわち、処理回路を含み得る。メモリは、プロセッサによって実行されるときプロセッサに本明細書において説明される動作のうちの1つまたは複数を実行させるプロセッサが実行可能な命令を記憶する。プロセッサは、マイクロプロセッサ、特定用途向け集積回路(ASIC)、フィールドプログラマブルゲートアレイ(FPGA)など、またはこれらの組合せを含む可能性がある。メモリは、プロセッサにプログラム命令を与えることができる電子、光、磁気、または任意のその他のストレージまたは送信デバイスを含む可能性があるがこれに限定されない。メモリは、フロッピーディスク、CD-ROM、DVD、磁気ディスク、メモリチップ、ASIC、FPGA、読み出し専用メモリ(ROM)、ランダムアクセスメモリ(RAM)、電気的消去可能プログラマブルROM (EEPROM)、消去可能プログラマブルROM (EPROM)、フラッシュメモリ、光学式媒体、またはプロセッサが命令を読むことができる任意のその他の好適なメモリをさらに含む可能性がある。命令は、任意の好適なコンピュータプログラミング言語からのコードを含む可能性がある。データ処理システム105は、様々な機能を実行することができる1つまたは複数のコンピューティングデバイスまたはサーバを含み得る。 Data processing system 105 may include at least one processor and memory, ie, processing circuitry. The memory stores processor-executable instructions that, when executed by the processor, cause the processor to perform one or more of the operations described herein. Processors may include microprocessors, application specific integrated circuits (ASICs), field programmable gate arrays (FPGAs), etc., or combinations thereof. Memory may include, but is not limited to, electronic, optical, magnetic, or any other storage or transmission device capable of providing program instructions to a processor. Memory includes floppy disks, CD-ROMs, DVDs, magnetic disks, memory chips, ASICs, FPGAs, read-only memory (ROM), random access memory (RAM), electrically erasable programmable ROM (EEPROM), erasable programmable ROM (EPROM), flash memory, optical media, or any other suitable memory from which the instructions can be read by the processor. Instructions may include code from any suitable computer programming language. Data processing system 105 may include one or more computing devices or servers capable of performing various functions.
コンテンツプロバイダ115は、情報リソース上に表示するためのコンテンツアイテムを提供するためにコンテンツプロバイダの主体によって運用されるサーバまたはその他のコンピューティングデバイスを含み得る。コンテンツプロバイダ115によって提供されるコンテンツは、主コンテンツ、たとえば、コンテンツプロバイダ115によって提供されるコンテンツを含む情報リソースなどの情報リソース上に表示するための第三者のコンテンツアイテムを含み得る。コンテンツアイテムは、検索結果ウェブページ上にも表示され得る。たとえば、コンテンツプロバイダ115は、ウェブページの主コンテンツが会社によって提供される会社のウェブページなどの情報リソースのコンテンツスロット内に表示するための、または検索エンジンによって提供される検索結果のランディングページ上に表示するためのコンテンツアイテムを提供するかまたはその他のコンテンツアイテムのソースであることが可能である。コンテンツプロバイダ115に関連するコンテンツアイテムは、スマートフォンまたはその他のクライアントデバイス上のアプリケーションの実行の一部として表示されるコンテンツなどの、ウェブページ以外の情報リソース上に表示され得る。システム100との関連で、コンテンツプロバイダ115の機能が以下で説明される。
Content providers 115 may include servers or other computing devices operated by content provider entities to provide content items for display on information resources. Content provided by content provider 115 may include primary content, eg, third-party content items for display on information resources such as information resources that include content provided by content provider 115 . Content items may also be displayed on search results web pages. For example, the content provider 115 may provide the primary content of a web page for display within a content slot of an information resource, such as a company's web page provided by a company, or on the landing page of search results provided by a search engine. It can provide content items for display or be the source of other content items. Content items associated with content provider 115 may be displayed on information resources other than web pages, such as content displayed as part of running an application on a smartphone or other client device. The functionality of content provider 115 is described below in relation to
データベース120は、本明細書において説明される情報のいずれかを記憶および/または保持するように構成されたデータベースであることができる。データベース120は、配列、フラットファイル、区切りファイル(delineated file)、または任意のその他の種類および形態のデータベースファイルなどの任意の適切な種類および形態のデータ構造に記憶され得る。一部の実装において、データベース120は、予測される要求の値を予め投入され得る。予測される要求の値は、履歴データおよび関連する検索トークンに基づいて外部システムによって生成され得る。データベース120は、本明細書において説明される値の各々、複数、または閾値を含むおよび/またはインデックス付けすることができる1つまたは複数のデータ構造を保有し得る。一部の実装において、データベースは、1つまたは複数のメモリアドレスまたはインデックス値を使用してアクセスされる可能性がある。データベース120は、ネットワーク110を介してデータ処理システム105のモジュールまたはコンテンツプロバイダ115によってアクセスされる可能性がある。一部の実装において、データベース120は、データ処理システム105の内部にある。一部の実装において、データベース120は、データ処理システム105の外部にある可能性があり、ネットワーク110を介してアクセスされる可能性がある。一部の実装において、データベース120は、多くの異なるコンピュータシステムまたはストレージ要素に分散される可能性があり、ネットワーク110および/または好適なコンピュータバスインターフェースを介してアクセスされる可能性がある。データ処理システムは、演算、決定、選択、特定、または計算のいずれかまたはすべての結果を適切な値をインデックス付けされた1つまたは複数のデータ構造に記憶することができ、それらのデータ構造の各々は、本明細書において説明される機能のいずれかを実行するためにデータ処理システム105またはコンテンツプロバイダ115によってアクセスされる可能性がある。
Database 120 can be a database configured to store and/or retain any of the information described herein. Database 120 may be stored in any suitable type and form of data structure, such as an array, flat file, delined file, or any other type and form of database file. In some implementations, the database 120 may be pre-populated with expected demand values. A predicted demand value may be generated by an external system based on historical data and associated search tokens. The database 120 may hold one or more data structures that may contain and/or index each, multiple, or threshold values described herein. In some implementations, the database may be accessed using one or more memory addresses or index values. Database 120 may be accessed by modules of data processing system 105 or content provider 115 via
検索トークンレシーバ125は、1つまたは複数のコンテンツプロバイダから検索トークンを受信するためのアプリケーション、サーバ、サービス、デーモン、ルーチン、またはその他の実行可能な論理を含む可能性があり、コンピューティングシステムのプロセッサ、またはコプロセッサ、またはその他のハードウェア(たとえば、ASICもしくはFPGA回路など)によって実行される可能性がある。検索トークンレシーバ125は、コンテンツプロバイダ115から複数の検索トークンを受信することができる。一部の実装において、検索トークンレシーバ125は、複数の検索トークンから検索トークンを刈り込む要求を受信することができる。複数の検索トークンを刈り込むことは、複数の検索トークンに関連するコンテンツアイテムとのインタラクションの回数を増やすことによってコンテンツプロバイダ115のためのコンテンツ選択プロセスを改善することができる。さらに、検索トークンは、コンテンツアイテムの選択および情報リソースへの挿入の見込み(likelihood)を高めるためにそれらのコンテンツアイテムに挿入される可能性がある。検索トークンが情報リソース内に何らかの形で存在する(たとえば、ウェブページ上のキーワードなど)かまたは情報リソースに直接関連する(たとえば、同様の言語、もしくはデモグラフィックス情報などを含む)場合、検索トークンに関連するコンテンツアイテムは、情報リソースに挿入されるより高い見込みを有する可能性がある。検索トークンは、特定の性質に関連付けられる可能性があり、たとえば、肯定的検索トークンまたは否定的検索トークンである可能性がある。肯定的検索トークンは、関連する(たとえば、合致するキーワード、同様のユーザのデモグラフィックスなど)情報リソースにコンテンツアイテムが挿入される見込みを高める可能性がある。対照的に、否定的性質を有する検索トークンは、反対の効果を有する可能性があり、関連するコンテンツアイテムが関連する(たとえば、合致するキーワード、同様のユーザのデモグラフィックスなど)情報リソースに挿入される見込みを下げることができる。否定的検索トークンは、1つまたは複数の情報リソースからコンテンツアイテムを除外する可能性がある。 A search token receiver 125 may include an application, server, service, daemon, routine, or other executable logic for receiving search tokens from one or more content providers, and may be implemented by a computing system's processor. , or by a coprocessor, or other hardware (eg, an ASIC or FPGA circuit, etc.). Search token receiver 125 may receive multiple search tokens from content provider 115 . In some implementations, the search token receiver 125 can receive requests to prune search tokens from multiple search tokens. Pruning search tokens can improve the content selection process for the content provider 115 by increasing the number of interactions with content items associated with the search tokens. Additionally, search tokens may be inserted into content items to increase the likelihood of their selection and insertion into information resources. A search token if it exists in some way within the information resource (e.g., keywords on a web page) or is directly related to the information resource (e.g., contains similar language or demographic information, etc.) Content items related to may have a higher likelihood of being inserted into the information resource. A search token may be associated with a particular disposition, and may be, for example, a positive search token or a negative search token. Positive search tokens may increase the likelihood that the content item will be inserted into relevant (eg, matching keywords, similar user demographics, etc.) information resources. In contrast, search tokens with negative properties can have the opposite effect, inserting them into information resources to which related content items are relevant (e.g., matching keywords, similar user demographics, etc.). can reduce the likelihood of being Negative search tokens may exclude content items from one or more information resources.
コンテンツプロバイダ115は、どの検索トークンが特定のコンテンツアイテムに関連付けられるか、複数の検索トークンの中の各検索トークンのコンテンツおよび性質を指定することができる。検索トークンを使用して、コンテンツプロバイダ115は、コンテンツアイテムに関する特定のターゲティングの基準を提供することができる。たとえば、コンテンツプロバイダ115は、コンテンツアイテムが特定のキーワードまたはフレーズを含む情報リソース上に示されるべきでないと指定する可能性がある。別の例において、コンテンツプロバイダ115は、コンテンツアイテムが別の言語、たとえば、スペイン語の情報リソース上に示されるべきであることを示す検索トークンを提供する可能性がある。一部の実装においては、コンテンツアイテムに関する複数のターゲティングの基準を指定するために、複数の検索トークンが使用され得る。 The content provider 115 can specify which search tokens are associated with particular content items, the content and nature of each search token in the plurality of search tokens. Using search tokens, content providers 115 can provide specific targeting criteria for content items. For example, the content provider 115 may specify that content items should not be shown on information resources that contain certain keywords or phrases. In another example, the content provider 115 may provide a search token that indicates that the content item should be shown on the information resource in another language, eg, Spanish. In some implementations, multiple search tokens may be used to specify multiple targeting criteria for a content item.
一部の実装において、検索トークンは、1つまたは複数の情報リソースおよび/または文書に関連付けられ得る。検索トークンは、デモグラフィックス情報、コンテンツのレーティング、言語、コンテンツの主題、キーワード、フレーズ、または情報リソースに関連するその他の情報のうちの1つまたは複数を含み得る。たとえば、検索トークンは、デモグラフィックス情報を含む。情報リソースは、特定のデモグラフィックスに関連するユーザからより高いトラフィックを有する可能性がある。したがって、それらの検索トークンは、(たとえば、ユーザプロファイル情報などに基づいて)同じデモグラフィックス情報を有するユーザによってアクセスされる情報リソースに関連付けられ得る。別の例においては、情報リソースが、特定のコンテンツのレーティングまたは主題に関連付けられ得る。そのような状況においては、同様なコンテンツのレーティングおよび/またはコンテンツの主題の指示を含む検索トークンが、そのような情報リソースに関連付けられる可能性がある。別の例においては、情報リソースが、1つまたは複数のキーワードまたはフレーズを含み得る。1つまたは複数のキーワードまたはフレーズが情報リソース内に存在する場合、検索トークンは、情報リソースに関連付けられる可能性がある。検索トークンは、コンテンツアイテムが挿入される可能性がある情報リソースに関連するコンテンツアイテムを選択するためにコンテンツ選択プラットフォームによって使用され得る。肯定的検索トークンは、コンテンツプロバイダがコンテンツアイテムを特定のキーワード、デモグラフィックス、およびその他の情報に関連付けられ情報リソースに向けることを可能にし、一方、否定的検索トークンは、コンテンツプロバイダがコンテンツアイテムを関連する情報リソースから逸らすことを可能にする。データ処理システム105は、データベース120の検索トークンに関連する情報リソースにアクセスすることができる。 In some implementations, a search token may be associated with one or more information resources and/or documents. Search tokens may include one or more of demographic information, content ratings, language, content subject matter, keywords, phrases, or other information associated with the information resource. For example, search tokens include demographic information. Information resources may have higher traffic from users associated with a particular demographic. Accordingly, those search tokens may be associated with information resources accessed by users having the same demographic information (eg, based on user profile information, etc.). In another example, an information resource may be associated with a particular content rating or subject matter. In such circumstances, search tokens containing similar content ratings and/or content subject matter indications may be associated with such information resources. In another example, an information resource may include one or more keywords or phrases. A search token may be associated with an information resource if one or more keywords or phrases are present within the information resource. Search tokens may be used by the content selection platform to select content items associated with information resources into which content items may be inserted. Positive search tokens allow content providers to direct content items to information resources associated with specific keywords, demographics, and other information, while negative search tokens allow content providers to target content items to information resources. Allows distraction from relevant information resources. Data processing system 105 can access information resources associated with the search token in database 120 .
予測される要求リトリーバ130は、要求の予測を取り出すためのアプリケーション、サーバ、サービス、デーモン、ルーチン、またはその他の実行可能な論理を含む可能性がある。予測される要求リトリーバ130は、一部の実装において、検索トークンレシーバ125と組み合わされる可能性がある。予測される要求リトリーバ130は、第1の検索トークンの指示を取り出すことができる。第1の検索トークンは、検索トークンレシーバ125によって受信される複数の検索トークンに含まれ得る。第1の検索トークンは、関連するコンテンツアイテムを要求することができる情報リソースの数に対して最も大きな否定的影響を与えると判定されたトークンであることが可能である。たとえば、第1の検索トークンは、関連するコンテンツアイテムがキーワード「ビデオ」を含むいかなる情報リソース上にも表示されないようにすることができる、キーワード「ビデオ」を含む否定的検索トークンであることが可能である。一部の実装において、第1の検索トークンは、データベース120内のデータ構造にアクセスすることによって示され得る。一部の実装において、第1の検索トークンの指示は、複数の検索トークンの中の最上位の否定的検索トークンの要求であることが可能である。たとえば、予測される要求リトリーバ130は、複数のキーワードの各々に関する情報リソースの関連付けを取り出す可能性がある。予測される要求リトリーバ130は、複数の検索トークンのうちのどれが否定的であり、しかも最も多くの情報リソースに関連するかを判定し、それによって、複数の検索トークンから最上位の否定的検索トークンを取り出すことができる。一部の実装において、予測される要求リトリーバ130は、複数の最上位の否定的検索トークンを取り出し、それらの否定的検索トークンをコンテンツプロバイダ115に伝達することができる。コンテンツプロバイダ115は、提供された複数の否定的検索トークンのうちの少なくとも1つの選択を行い、予測される要求リトリーバ130に指示を伝達することができる。 Prediction request retriever 130 may include an application, server, service, daemon, routine, or other executable logic for retrieving predictions of requests. The expected request retriever 130 may be combined with the search token receiver 125 in some implementations. A predicted request retriever 130 can retrieve an indication of the first search token. The first search token may be included in multiple search tokens received by search token receiver 125 . The first search token can be the token determined to have the most negative impact on the number of information resources from which related content items can be requested. For example, the first search token can be a negative search token containing the keyword "video" which can prevent related content items from appearing on any information resource containing the keyword "video". is. In some implementations, the first search token may be indicated by accessing a data structure within database 120 . In some implementations, the first search token indication can be a request for the highest negative search token among the plurality of search tokens. For example, the predicted request retriever 130 may retrieve information resource associations for each of multiple keywords. The predictive request retriever 130 determines which of the plurality of search tokens are negative and associated with the most information resources, thereby retrieving the top negative search tokens from the plurality of search tokens. You can retrieve the token. In some implementations, the prospective request retriever 130 can retrieve multiple top negative search tokens and communicate those negative search tokens to the content provider 115 . The content provider 115 can select at least one of the provided multiple negative search tokens and communicate instructions to the prospective request retriever 130 .
予測される要求リトリーバ130は、データベース120から複数の予測される要求を取り出すことができる。一部の実装において、予測される要求リトリーバ130は、複数の検索トークンの各々に基づいて複数の予測される要求を取り出すことができる。たとえば、第1の検索トークンは、複数の予測される要求の一部またはすべてが記憶されるデータベース120内の位置に対応し得る。一部の実装において、予測される要求リトリーバ130は、第1の検索トークンを使用することなく複数の予測される要求を取り出すためにデータベース120にアクセスすることができる。データベース120は、複数の検索トークンの各々に関連する予測される要求のリストを予め投入され得る。予測される要求リトリーバ130は、検索トークンの各々からの予測される要求を集約して複数の予測される要求を生成することができる。それぞれの予測される要求は、データベース120の履歴的コンテンツアイテム情報に基づいて情報リソースが特定の検索トークンに関連するコンテンツアイテムを要求すると予測されるという指示を含む可能性がある。たとえば、各検索トークンは、コンテンツを情報リソースに挿入させる特定の要求に関連付けられ得る。一部の実装において、予測される要求の各々は、関連するコンテンツのレーティング値を含み得る。コンテンツのレーティング値は、関連する情報リソースのレーティング(たとえば、G、PG、R、ESRBレーティングなど)に対応し得る。データベース120の履歴データに基づいて、予測される要求リトリーバ130は、情報リソースが複数の検索トークンの各々に関連するコンテンツを要求すると予測されるかどうかを取り出すことができる。予測される要求リトリーバ130は、検索トークンに関する予測される要求の数と、要求に関連する情報リソースの各々とを取り出すことができる。たとえば、データベース120に記憶された過去の性能データに基づいて、どの情報リソースが複数の検索トークンの各々に関連するコンテンツを要求したかを示すデータ構造が生成され得る。過去の履歴データは、複数の検索トークンの各々に関して予測される要求の値および予測される要求の情報リソース(たとえば、どれだけの情報リソースが検索トークンに関連するコンテンツを要求する可能性があるかなど)を決定するために季節性データ(seasonality data)およびその他のコンテンツアイテム情報に基づいて外挿され得る。 A predicted demand retriever 130 can retrieve a plurality of predicted demands from the database 120 . In some implementations, the predicted request retriever 130 may retrieve multiple predicted requests based on each of the multiple search tokens. For example, a first search token may correspond to a location within database 120 where some or all of the plurality of predicted requests are stored. In some implementations, the predicted request retriever 130 can access the database 120 to retrieve multiple predicted requests without using the first search token. Database 120 may be pre-populated with a list of expected requests associated with each of a plurality of search tokens. A predicted request retriever 130 may aggregate predicted requests from each of the search tokens to generate a plurality of predicted requests. Each predicted request may include an indication that the information resource is predicted to request content items associated with a particular search token based on historical content item information in database 120 . For example, each search token may be associated with a specific request to have content inserted into the information resource. In some implementations, each expected request may include a rating value for the associated content. The content rating value may correspond to the rating of the associated information resource (eg, G, PG, R, ESRB rating, etc.). Based on historical data in database 120, predicted request retriever 130 can retrieve whether an information resource is predicted to request content associated with each of the plurality of search tokens. A predicted request retriever 130 can retrieve a predicted number of requests for the search token and each of the information resources associated with the requests. For example, based on historical performance data stored in database 120, a data structure may be generated indicating which information resources requested content associated with each of the plurality of search tokens. Past historical data is the expected value of requests for each of multiple search tokens and the information resource of expected requests (e.g., how many information resources are likely to request the content associated with the search token). etc.) may be extrapolated based on seasonality data and other content item information.
ビット列コンストラクタ135は、複数の検索トークンの各々に関連する複数の要求の各々に関するビット列を構築するためのアプリケーション、サーバ、サービス、デーモン、ルーチン、またはその他の実行可能な論理を含む可能性がある。一部の実装において、ビット列コンストラクタ135は、メモリデバイス内の列のビット値をインクリメントするためのハードウェアカウンタ回路を含む可能性がある。ビット列は、複数の検索トークンに関連する予測される要求の各々に関する文書空間を表し得る。予測される要求の各々は、情報リソースに関連付けられ得る。ビット列コンストラクタ135は、検索トークンレシーバ125によって受信された複数の検索トークンの各々に対して動作し得る。一部の実装において、ビット列コンストラクタ135は、複数の検索トークンの各々に関するビットマップを順に(たとえば、一度に1つずつ)構築することができる。一部の実装において、ビット列コンストラクタ135は、複数の検索トークンの各々に関するビット列を並列に構築することができる(たとえば、一部のまたはすべてのビット列が同時に構築されるなど)。検索トークンに関するビット列を構築するために、ビット列コンストラクタ135は、ビット列を記憶するためのメモリの領域を割り当てることができる。一部の実装において、メモリの領域は、データ処理システム105の別の構成要素によって事前に割り当てられ得る。検索トークンに関するビット列の各ビットに関して、ビット列コンストラクタ135は、複数の予測される要求のうちのそれぞれの予測される要求に対応するインデックスインデックスを割り振ることができる。ビット列コンストラクタ135は、それぞれの検索トークンと予測される要求リトリーバ130によって取り出された複数の予測される要求との間の関連付けの集合を取り出すためにデータベース120にアクセスすることができる。複数の予測される要求の各々は、その検索トークンに関するビット列内の位置に対応するインデックス値を含み得る。 Bitstring constructor 135 may include an application, server, service, daemon, routine, or other executable logic for building a bitstring for each of multiple requests associated with each of multiple search tokens. In some implementations, the bit string constructor 135 may include hardware counter circuitry for incrementing bit values of strings within the memory device. A bit string may represent the document space for each expected request associated with multiple search tokens. Each anticipated demand may be associated with an information resource. Bitstring constructor 135 may operate on each of a plurality of search tokens received by search token receiver 125 . In some implementations, bitstring constructor 135 may build bitmaps for each of multiple search tokens in order (eg, one at a time). In some implementations, the bitstring constructor 135 can construct bitstrings for each of multiple search tokens in parallel (eg, some or all bitstrings are constructed simultaneously, etc.). To construct a bitstring for a search token, bitstring constructor 135 may allocate an area of memory for storing the bitstring. In some implementations, regions of memory may be pre-allocated by another component of data processing system 105 . For each bit of the bitstring for the search token, bitstring constructor 135 may allocate an index index corresponding to each predicted request of the plurality of predicted requests. Bitstring constructor 135 can access database 120 to retrieve a set of associations between each search token and multiple predicted requests retrieved by predicted request retriever 130 . Each of the multiple predicted requests may include an index value corresponding to a position within the bitstring for that search token.
ビット列コンストラクタ135は、予測される要求の各々が検索トークンに関連付けられるかどうかを判定するためにデータベース120においてアクセスされる関連付けの各々を分析することができる。予測される要求が検索トークンに対応する場合、ビット列コンストラクタ135は、予測される要求のインデックス値に対応するビット列内のビット位置をマッチ値に設定することができる。一部の実装において、マッチ値は、2進数(たとえば、0または1)であることが可能である。たとえば、予測される要求が検索トークンに対応する場合、マッチ値は、「1」として設定され得る。予測される要求が検索トークンに関連付けられない場合、ビット列コンストラクタ135は、予測される要求のインデックス値に対応するビット列内の位置を非マッチ値に設定することができる。一部の実装において、非マッチ値は、2進数(たとえば、0または1)であることが可能である。たとえば、予測される要求が検索トークンに対応しない場合、ビット列コンストラクタ135は、適切なビット列位置を「0」に設定することができる。一部の実装においては、2進数「0」が、マッチ値であることが可能であり、2進数「1」が、非マッチ値であることが可能である。 Bitstring constructor 135 can analyze each association accessed in database 120 to determine whether each expected request is associated with a search token. If the predicted request corresponds to the search token, bitstring constructor 135 may set the bit position in the bitstring corresponding to the index value of the predicted request to the match value. In some implementations, the match value can be a binary number (eg, 0 or 1). For example, if the expected request corresponds to a search token, the match value can be set as "1." If the predicted request is not associated with the search token, bitstring constructor 135 may set the position in the bitstring corresponding to the index value of the predicted request to a non-match value. In some implementations, the non-match value can be a binary number (eg, 0 or 1). For example, if the expected request does not correspond to the search token, the bitstring constructor 135 can set the appropriate bitstring positions to '0'. In some implementations, a binary "0" can be a match value and a binary "1" can be a non-match value.
検索トークンに関するビット列を構築するプロセスを視覚化するために、ここで図2を参照する。示されるのは、それぞれの予測される要求210A～Nが検索トークン205Aとの関連付けに基づいてビット列215Aを埋めるためにどのように使用され得るかを理解するのを助けるための例示である。示されるように、検索トークン205Aは、予測される要求210A、予測される要求210C、および予測される要求210Nとの関連付けを有する。任意の数の予測される要求が任意のサイズのビット列を構築するために使用され得ることを示すために、点が追加される。検索トークン205Aは、予測される要求210Bに関連付けられない(または予測される要求に否定的に関連付けられる)ことに留意されたい。関連付けおよび非関連付けの各々に基づいて、ビット列の各位置が、特定の予測される要求に対応するように埋められる。たとえば、予測される要求210A、予測される要求210C、および予測される要求210Nに対応するビット列の位置は、すべて「1」に設定され、「1」は、この例においてはマッチ値である。予測される要求210Bが検索トークン205Aに関連付けられないので、ビット列215A内の予測される要求210Bの対応する位置は、非マッチ値に設定され、非マッチ値は、この例においては2進数「0」である。ここで示されるのは単一の検索トークンの関連付けからビット列への変換の1つの例だけであるが、ビット列コンストラクタ135は、予測される要求リトリーバ130によって取り出された複数の予測される要求の各々に関してビット列を構築することができる。多くの実装において、構築されるビット列は、かなり疎らである可能性がある(たとえば、2:1、5:1、10:1、100:1、もしくは任意のその他のそのような値を超える0と1との比率を有するか、および/またはビット列内で複数の否定的データインジケータ(たとえば、0)によって平均して広く隔てられた肯定的データインジケータを有する)。たとえば、一部の実装において、ビット列は、数千個または数万個の位置と、ビット列全体に散らばったわずかに百個以下の正の値とを有する可能性がある。そのようなビット列は、データの疎らな性質が網羅的で非効率的な総当たりプロセスにつながるので、繰り返し処理することが非常に難しい可能性がある。
To visualize the process of building bit strings for search tokens, refer now to FIG. Shown are examples to help understand how each predicted request 210A-N can be used to populate
再び図1を参照して、ビット列コンストラクタ135は、2進ビット列の代わりのフォーマットを用いてビット列を生成し得ることを理解されたい。たとえば、一部の実装において、予測される要求リトリーバ130によって取り出された予測される要求の各々は、それぞれの重み値を含み得る。重み値は、予測される要求がそれぞれの検索トークンとどれだけ密接に関連するのかに対応し得る。一部の実装において、ビット列コンストラクタは、検索トークンに関してそれぞれの予測される要求に対応する重み値をビット列の各位置に投入することができる。一部の実装において、重み値は、対応する予測される要求に関する推定されたトラフィック値に対応し得る。 Referring again to FIG. 1, it should be appreciated that the bitstring constructor 135 may generate bitstrings using alternative formats for binary bitstrings. For example, in some implementations, each predicted request retrieved by predicted request retriever 130 may include a respective weight value. Weight values may correspond to how closely predicted requests are associated with respective search tokens. In some implementations, the bitstring constructor can populate each position of the bitstring with a weight value corresponding to each expected request for the search token. In some implementations, weight values may correspond to estimated traffic values for corresponding predicted requests.
一部の実装において、ビット列コンストラクタ135は、刈り込まれた複数の予測される要求を生成するために予測される要求の各々に関連する重み値に閾値を適用することによってビット列を構築することができる。刈り込まれた複数の予測される要求は、本明細書において上で説明されたようにビット列を構築するために使用され得る。たとえば、特定の予測される要求は、高レベルのトラフィックを示す可能性がある(たとえば、予測される要求は、多くのユーザを有するウェブページに由来する可能性がある)。高レベルのトラフィックを示す予測される要求は、低レベルのトラフィックを示す予測される要求よりもコンテンツプロバイダ115にとって妥当である可能性がある。したがって、ビット列コンストラクタは、所定のトラフィックの閾値未満である推定されたトラフィックの重み値を有する特定の予測される要求を削除し得る。一部の実装において、ビット列コンストラクタ135は、所定のトラフィックの閾値を取り出すためにデータベース120にアクセスすることができる。一部の実装において、ビット列コンストラクタ135は、コンテンツプロバイダ115から所定のトラフィックの閾値を受信することができる。ビット列コンストラクタ135は、複数の予測される要求の各々に含まれる推定されたトラフィック値の各々を所定のトラフィックの閾値と比較して、複数の予測される要求から予測される要求を削除すべきかどうかを判定することができる。一部の実装において、予測される要求に含まれる推定されたトラフィック値が所定のトラフィックの閾値未満である場合、その予測される要求は、複数の予測される要求から削除される可能性がある。予測される要求に含まれる推定されたトラフィック値が所定のトラフィックの閾値以上である場合、その予測される要求は、複数の予測される要求に含まれる可能性がある。ビット列コンストラクタ135は、複数の予測される要求の各々に含まれる推定されたトラフィック値を所定のトラフィックの閾値と繰り返し比較して、刈り込まれた複数の予測される要求を生成することができる。 In some implementations, the bitstring constructor 135 may construct the bitstring by applying a threshold to the weight value associated with each predicted request to generate a pruned plurality of predicted requests. . The pruned multiple predicted requests may be used to construct a bitstream as described herein above. For example, a particular expected request may indicate a high level of traffic (eg, the expected request may come from a web page with many users). A predicted request that indicates a high level of traffic may be more relevant to the content provider 115 than a predicted request that indicates a low level of traffic. Thus, the bitstring constructor may eliminate certain predicted requests that have an estimated traffic weight value that is less than a predetermined traffic threshold. In some implementations, the bitstring constructor 135 can access the database 120 to retrieve a predetermined traffic threshold. In some implementations, bitstream constructor 135 may receive a predetermined traffic threshold from content provider 115 . A bitstring constructor 135 compares each of the estimated traffic values contained in each of the plurality of predicted requests to a predetermined traffic threshold to determine whether to remove the predicted request from the plurality of predicted requests. can be determined. In some implementations, a forecasted request may be removed from multiple forecasted requests if the estimated traffic value contained in the forecasted request is less than a predetermined traffic threshold. . A predicted request may be included in multiple predicted requests if the estimated traffic value included in the predicted request is greater than or equal to a predetermined traffic threshold. Bitstring constructor 135 may repeatedly compare the estimated traffic value included in each of the plurality of predicted requests to a predetermined traffic threshold to generate a pruned plurality of predicted requests.
システムの計算性能を改善するために、ビット列コンストラクタ135は、ストレージフットプリントを削減し、さらなる処理においてビット列を使用するデータ処理システム105のその他のモジュールによって必要とされる計算の量を削減するために、ビット列に対して圧縮処理を実行することができる。ビット列を圧縮するために、ビット列コンストラクタ135は、選択基準に基づいて各ビット列の特定のビットを選択し、ビット列に関連する検索トークンに対応する刈り込まれたビット列を構築するために選択されたビットの各々を使用することができる。たとえば、ビット列コンストラクタ135は、それぞれの刈り込まれたビット列を生成するために各ビット列内の特定の範囲の位置(たとえば、各ビット列の最初の百個の位置)を選択する可能性がある。刈り込まれたビット列は、完全なビット列よりも少ない位置を持ち得る。一部の実装において、選択基準は、データベース120から取り出され得るかまたはコンテンツプロバイダ115から受信され得る。一部の実装において、ビット列コンストラクタ135は、擬似ランダムな選択を選択基準として使用し得る。ビット列コンストラクタ135は、検索トークンレシーバ125によって受信された検索トークンの各々に対応するビット列の各々のために同じ選択基準(たとえば、同じ擬似ランダムに選択された位置)を使用し得る。このようにして、それぞれの刈り込まれたビット列内の位置が予測される要求の同じ集合に対応するとき、刈り込まれたビット列の各々が、本明細書において以下で説明されるように同じ方法で比較され得る。 To improve the computational performance of the system, the bitstring constructor 135 is used to reduce the storage footprint and reduce the amount of computation required by other modules of the data processing system 105 that use the bitstrings in further processing. , the compression process can be performed on the bitstream. To compress the bitstring, bitstring constructor 135 selects specific bits of each bitstring based on selection criteria, and selects bits to construct a pruned bitstring corresponding to the search token associated with the bitstring. Each can be used. For example, the bitstring constructor 135 may select a particular range of positions within each bitstring (eg, the first hundred positions of each bitstring) to generate each pruned bitstring. A pruned bitstring may have fewer positions than a full bitstring. In some implementations, the selection criteria may be retrieved from database 120 or received from content provider 115 . In some implementations, bitstring constructor 135 may use pseudo-random selection as a selection criterion. Bitstring constructor 135 may use the same selection criteria (eg, the same pseudo-randomly selected positions) for each of the bitstrings corresponding to each of the search tokens received by search token receiver 125 . In this way, when the positions within each pruned bitstring correspond to the same set of expected requests, each of the pruned bitstrings is compared in the same manner as described herein below. can be
一部の実装において、ビット列コンストラクタ135は、検索トークンの各々のためまたは検索トークンの組合せのためにブルームフィルタを構築することによって刈り込まれたビット列を生成することができる。たとえば、ビット列コンストラクタ135は、検索トークンに対応するビット列を記憶するためのメモリの領域を割り当てることができる。予測される要求リトリーバ130によって取り出された検索トークンに関連する予測される要求に基づいて、ビット列比較モジュールは、1つまたは複数のハッシュアルゴリズム(たとえば、SHA-1、SHA-2、MD5など)を使用することができ、それらのハッシュアルゴリズムの各々は、予測される要求をビット列内の位置にマッピングすることができる。ビット列コンストラクタ135は、ハッシュアルゴリズムの各々を使用して検索トークンに関連するそれぞれの予測される要求をハッシュして一群のビット位置の値を生成することができる。ビット列コンストラクタ135は、一群のビット位置の値の各々に対応するビット列内の位置の各々をマッチ値(たとえば、2進数「1」)に設定することができる。一部の実装において、割り当てられたビット列内のビット列の位置の数は、検索トークンのすべてに関する予測される要求の総数よりも少ないことが可能であり、したがって、各検索トークンに関するビット列のメモリフットプリントを削減する。一部の実装において、ビット列コンストラクタ135は、同様の予測される要求がブルームフィルタを生成するために使用される場合に結果として得られるビット列がマッチ値に設定された同様のビット位置を持つようにハッシュアルゴリズムを使用してビット列を構築することができる。 In some implementations, bitstring constructor 135 may generate a pruned bitstring by constructing Bloom filters for each of the search tokens or for combinations of search tokens. For example, the bitstring constructor 135 can allocate an area of memory for storing the bitstring corresponding to the search token. Based on the predicted claims associated with the search token retrieved by the predicted claims retriever 130, the bit string comparison module selects one or more hash algorithms (e.g., SHA-1, SHA-2, MD5, etc.). Each of these hashing algorithms can be used to map expected requests to positions within the bitstring. The bitstring constructor 135 can hash each predicted request associated with the search token using each of the hash algorithms to generate a set of bit position values. The bitstring constructor 135 may set each of the positions within the bitstring that correspond to each of the group of bit position values to a match value (eg, binary "1"). In some implementations, the number of bitstring positions in the allocated bitstring can be less than the total number of expected requests for all of the search tokens, thus reducing the memory footprint of the bitstring for each search token. to reduce In some implementations, the bitstring constructor 135 is constructed so that when similar expected requests are used to generate a Bloom filter, the resulting bitstring will have similar bit positions set to match values. A hash algorithm can be used to construct the bit string.
一部の実装において、ビット列コンストラクタ135は、各検索トークンに関して整数値のベクトルを生成するCount Min-Sketchアルゴリズムを使用することによって刈り込まれたビット列を生成することができる。刈り込まれたビット列は、整数値のベクトルを含むことが可能であり、ベクトルの各位置は、ハッシュ値の確率的なカウントであることが可能である。刈り込まれたビット列を生成するために、ビット列コンストラクタ135は、ゼロに初期化されるベクトルのためのメモリの領域を割り当てることができる。一部の実装において、ベクトル内の位置の数は、検索トークンのすべてに関する予測される要求の総数よりも少ないことが可能である。ビット列コンストラクタ135は、ハッシュされた予測される要求の集合を生成するために検索トークンに関する予測される要求の各々をハッシュすることができる。ハッシュされた予測される要求を生成すると、ビット列コンストラクタ135は、それぞれのハッシュされた予測される要求に対応する刈り込まれたビット列ベクトル内の各位置をインクリメントすることができる。たとえば、ハッシュされた予測される要求が3に等しい場合、ビット列コンストラクタは、ベクトルの3番目の位置を1だけインクリメントすることができる。一部の実装において、ビット列コンストラクタ135は、検索トークンに関する複数のベクトルを生成することができ、各ベクトルは、ハッシュ関数に対応する。複数のベクトルの場合、ビット列コンストラクタ135は、ハッシュされた予測される要求に対応する各ベクトルの各位置をインクリメントすることができ、ハッシュされた予測される要求は、そのベクトルのためのそれぞれのハッシュ関数を使用して計算される。 In some implementations, bitstring constructor 135 may generate a pruned bitstring by using a Count Min-Sketch algorithm that generates a vector of integer values for each search token. The pruned bitstring can include a vector of integer values, and each position in the vector can be a probabilistic count of hash values. To generate a pruned bitstring, bitstring constructor 135 may allocate an area of memory for a vector that is initialized to zero. In some implementations, the number of positions in the vector can be less than the expected total number of requests for all of the search tokens. Bitstring constructor 135 can hash each of the predicted claims for the search token to produce a set of hashed predicted claims. Having generated the hashed predicted requests, bitstring constructor 135 may increment each position in the pruned bitstring vector corresponding to each hashed predicted request. For example, if the hashed expected demand equals 3, the bitstring constructor can increment the 3rd position of the vector by 1. In some implementations, bitstring constructor 135 can generate multiple vectors for search tokens, each vector corresponding to a hash function. For multiple vectors, the bitstring constructor 135 may increment each position in each vector corresponding to a hashed predicted request, and the hashed predicted request is a respective hash for that vector. Calculated using functions.
ビット列コンストラクタ135は、複数の検索トークンの各々に関する構築されたビット列をデータベース120に記憶することができる。一部の実装において、ビット列コンストラクタ135は、対応する検索トークンの識別子によってインデックス付けされたデータ構造内の各ビット列を記憶することができる。一部の実装において、記憶されたビット列は、データ処理システム105のその他のモジュール、たとえば、ビット列比較モジュール140によってアクセスされる可能性がある。一部の実装において、ビット列コンストラクタ135によって構築されたビット列は、コンピュータメモリ、たとえば、図7に関連して本明細書において下で説明されるコンピュータシステム700のメモリ725に記憶される可能性がある。一部の実装において、ビット列比較モジュール140は、さらなる計算のために1つまたは複数のビット列を取り出すためにデータベース120にアクセスすることができる。一部の実装において、ビット列コンストラクタ135は、完全なビット列の代わりに刈り込まれたビット列を記憶することが可能であり、これは、本明細書において説明される計算の正確さを損なうことなくシステムのストレージの要件を引き下げることができる。
Bitstring constructor 135 may store the constructed bitstring for each of the plurality of search tokens in database 120 . In some implementations, bitstring constructor 135 may store each bitstring in a data structure indexed by the identifier of the corresponding search token. In some implementations, the stored bitstrings may be accessed by other modules of data processing system 105 , such as
ビット列比較モジュール140は、複数の検索トークンのうちの第1の検索トークンに関連するビット列と比較するためにコンピュータメモリ(たとえば、データベース120)に記憶されたビット列の各々を取り出すことができる。本明細書において上で説明されたように、第1の検索トークンは、最上位の否定的検索トークンであることが可能である。一部の実装において、ビット列比較モジュール140は、1つまたは複数の示された検索トークンの指示を受信する可能性がある。たとえば、ビット列比較モジュール140は、コンテンツプロバイダ115から、データベース120から、データ処理システム105の別のモジュールから、または別の外部コンピューティングデバイスから指示を受信し得る。指示に基づいて、ビット列比較モジュール140は、指示に関連するビット列を取り出すためにデータベース120にアクセスすることができる。ビット列比較モジュール140が示されたビット列を取り出すことを可能にすることは、妥当な検索トークンのみを分析しながら計算の改善をもたらし得る。一部の実装において、ビット列コンストラクタ135は、取り出されたビット列を、ローカルメモリコンピュータメモリ、たとえば、図7に関連して本明細書において説明されるメモリ725に記憶することができる。一部の実装において、ビット列比較モジュール140は、ビット列コンストラクタ135からビット列を取り出すことができる。
Bit
複数の検索トークンのうちのどれが第1の検索トークンと密接に関連する(たとえば、同様の予測される要求に関連付けられる)のかを判定するために、ビット列比較モジュール140は、取り出されたビット列の各々を、広く第1のビット列と呼ばれる第1の検索トークン(たとえば、最上位の否定的検索トークンなど)に対応するビット列と比較することができる。一部の実装において、ビット列比較モジュール140は、取り出されたビット列の各々に関して類似性の値を決定するために取り出されたビット列の各々を第1のビット列と繰り返し比較することができる。類似性の値は、取り出されたビット列の各々が第1のビット列と共通して有する予測される要求の数を表し得る。類似性の値は、0から1までの間の10進値である可能性があり、同様の予測される要求を共有する2つのビット列は、1に近いかまたは1に等しい類似性の値を有する可能性があり、同様の予測される要求を共有しない2つのビット列は、0に近いかまたは0に等しい類似性の値を有する可能性がある。一部の実装において、類似性の値は、2つのビット列によって共有される予測される要求の数に対応する整数値である可能性がある。一部の実装において、ビット列比較モジュール140は、3つ以上のビット列のグループに関する類似性の値を決定することができる。
To determine which of the multiple search tokens are closely related (e.g., associated with similar expected requests) to the first search token, bit
類似性の値を計算することは、1つまたは複数の論理演算または計算に基づくことが可能である。たとえば、ビット列比較モジュール140は、どの予測される要求が2つのビット列の間で共有されるかを判定するために論理AND演算を使用して2つのビット列に対して動作する可能性がある。2つのビット列の論理AND演算を実行することは、両方の列に共通しないビットをマスクすることができる。ビット列の各位置が予測される要求に対応し得るので、結果として得られるANDされたビット列に残るマッチ値は、予測される要求が比較されたビット列に対応する検索トークンに関連付けられることを示し得る。一部の実装において、ビット列比較モジュールは、共有された類似性の値を計算するために3つ以上のビット列に対して論理的なビット毎の演算を実行することができる。ビット列比較モジュール140は、2つ以上のビット列の間のビット毎の論理演算から結果ビット列を計算することができる。結果ビット列内の各位置は、対応する要求される要求が2つ以上の検索トークンの間で共有されることを示し得る。2つ以上のビット列の間で共有される予測される要求の数を判定するために、ビット列比較モジュール140は、結果ビット列内のマッチ値の総数をカウントすることができる。ビット列比較モジュール140は、結果ビットマップ内の各位置を繰り返し比較し、結果ビット列内の位置がマッチ値に等しい度にカウンタレジスタをインクリメントすることができる。ビット列比較モジュールが結果ビット列内の各位置で繰り返されると、カウンタレジスタの値は、結果ビット列を計算するために使用された検索トークンの間の共有される予測される要求の総数に等しくなり得る。
Calculating the similarity value can be based on one or more logical operations or calculations. For example,
ビット列比較モジュール140によって実行されるプロセスの少なくとも一部を視覚化するために、ここで図3を参照されたい。図3に示されるのは、第1のビット列215Aおよび第2のビット列215Bである。第1のおよび第2のビット列の各々は、それぞれ、第1のおよび第2の検索トークンに対応する。この例示において、マッチ値は2進数の1に等しい。したがって、2進数「1」の値を有する各ビット列内の各位置は、対応する予測される要求がそのそれぞれの検索トークン(たとえば、その検索トークンに関連するコンテンツを要求する可能性が高い情報リソース)に関連付けられることを示す。マッチ値が2進数「1」であり、非マッチ値が2進数「0」であるので、ビット列比較モジュール140は、結果ビット列305を決定するために第1のビット列215Aと第2のビット列215Bとの間のビット毎の論理ANDを実行することができる。示されるように、ビット毎の論理AND演算を実行することは、第1のビット列215Aと第2のビット列215Bとの間で共有される予測される要求に対応するビットのみを維持することができる。結果ビット列305を計算した後、ビット列比較モジュール140は、類似性の値310を決定することができる。一部の実装において、ビット列比較モジュールは、マッチ値に等しい結果ビット列305内の位置の数を繰り返し決定することができる。結果ビット列305内の位置の総数は、類似性の値310に等しいことが可能である。一部の実装において、ビット列比較モジュールは、マッチ位置の数を結果ビット列305内の位置の総数によって割ることができる。
To visualize at least part of the process performed by bit
再び図1を参照すると、ビット列比較モジュール140は、2つのビット列の間の類似性の値を決定するためにその他の方法を使用することができる。一部の実装において、第1のビット列および第2のビット列内の各位置は、対応する検索トークンとビット列内のそれぞれの位置に対応する予測される要求との間の妥当性の値に対応し得る重み値に等しい可能性がある。この場合、ビット列は、整数値または浮動小数点値である可能性がある重み値のベクトルである可能性がある。そのようなビット列の間の類似性の値を決定するために、ビット列比較モジュール140は、第1のビット列の各位置の妥当性の値が許容範囲値(たとえば、10%、15%など)以内で第2のビット列のそれぞれの位置に等しいかどうかを判定することができる。一部の実装において、許容範囲値は、データベース120から取り出されるか、コンテンツプロバイダ115から受信されるか、データ処理システム105の別のモジュールから受信されるか、またはネットワーク110を介して別の外部コンピューティングデバイスから受信される可能性がある。2つの値が所定の許容範囲値以内で等しい場合、ビット列比較モジュールは、結果ビット列(たとえば、結果ビット列305)の対応する位置をマッチ値に設定することができる。ビット列比較モジュール140は、完全な結果ビット列を決定するために第1のおよび第2のビット列内の位置の各々を繰り返し比較することができる。そして、ビット列比較モジュール140は、類似性の値を決定するために、結果ビット列内に存在するマッチ値の数を繰り返しカウントして本明細書において上で説明されたように類似性の値を決定することができる。ビット列比較モジュール140は、類似性の値を第1のまたは第2のビット列のうちの少なくとも一方に関連付けることができる。一部の実装において、ビット列比較モジュール140は、類似性の値を、第1のビット列、第2のビット列、第1の検索トークン、または第2の検索トークンのうちの少なくとも1つとともに、データ構造、たとえば、データベース120または別のコンピュータメモリ(たとえば、図7に関連して本明細書において下で説明されるメモリ725)に記憶することができる。
Referring again to FIG. 1,
検索トークンプルーナ145は、対応する検索トークンが複数の検索トークンから削除されるべきであるかどうかを判定するために、ビット列比較モジュール140によって計算された類似性の値の各々を所定の類似性の閾値と比較することができる。一部の実装において、検索トークンプルーナ145は、データベース120にアクセスすることによって所定の類似性の閾値を取り出すことができる。一部の実装において、検索トークンプルーナ145は、コンテンツプロバイダ115から所定の類似性の閾値を受信することができる。検索トークンプルーナ145は、刈り込み値(prune value)を決定するために、検索トークンレシーバ125によって受信された検索トークンの各々に関連するビット列比較モジュール140によって計算された類似性の値の各々を繰り返し比較することができる。刈り込み値は、ブールレジスタ値である可能性があり、2進数「0」または2進数「1」の値を取る可能性がある。一部の実装において、検索トークンプルーナ145は、それぞれの検索トークンに関する類似性の値が所定の類似性の閾値よりも大きいかどうかを判定することができる。類似性の値が所定の閾値よりも大きい場合、検索トークンプルーナ145は、刈り込み値(たとえば、2進値「1」)をそれぞれの検索トークンに関連付けることができる。たとえば、検索トークンプルーナ145は、刈り込み値を、対応する検索トークンまたは検索トークンの識別子を含むデータ構造に(たとえば、データベース120または図7に関連して本明細書において下で説明されるコンピュータメモリ725に)記憶することができる。類似性の値が所定の類似性の閾値よりも小さい場合、検索トークンプルーナ145は、非刈り込み値(non-prune value) (たとえば、2進値「0」など)を、対応する検索トークンまたは対応する検索トークンの識別子を含むデータ構造に(たとえば、データベース120または図7に関連して本明細書において下で説明されるコンピュータメモリ725に)記憶することによって、非刈り込み値をそれぞれの検索トークンに関連付けることができる。一部の実装において、検索トークンプルーナ145は、第1の検索トークン(たとえば、最上位の否定的検索トークン)を刈り込み値「1」に自動的に関連付けることができる。
Search
刈り込み値に基づいて、検索トークンプルーナ145は、複数の検索トークンから指定された検索トークンの各々を削除することができる。一部の実装において、検索トークンプルーナ145は、たとえ複数の検索トークンのうちのいずれも刈り込み値に関連付けられないとしても複数の検索トークンから第1の検索トークン(たとえば、最上位の否定的検索トークン)を削除することができる。検索トークンプルーナは、刈り込み値または非刈り込み値および対応する検索トークンまたは対応する検索トークンの識別子を含むデータ構造にアクセスすることができる。データ構造が刈り込み値を含む場合、検索トークンプルーナは、複数の検索トークンの各々を含むデータ構造から対応する検索トークンを削除し、それによって、刈り込まれた検索トークンのデータ構造を生成することができる。一部の実装において、検索トークンプルーナ145は、刈り込まれた検索トークンを含むデータ構造を生成することができる。検索トークンプルーナ145は、各検索トークンが非刈り込み値に関連付けられるかどうかを繰り返し判定することができる。検索トークンが非刈り込み値に関連付けられる場合、検索トークンプルーナ145は、刈り込まれた検索トークンを含むように生成されたデータ構造に対応する検索トークンを追加することができる。検索トークンがその代わりに刈り込み値に関連付けられる場合、検索トークンプルーナ145は、対応する検索トークンを無視し、刈り込まれた検索トークンを含むように生成されたデータ構造にその対応する検索トークンを追加しないことが可能である。一部の実装において、検索トークンプルーナ145は、どの検索トークンが複数の検索トークンから削除されたかのレコードを保有するために、どの検索トークンが刈り込まれた検索トークンのデータ構造内に存在しないかを示す値のリストを生成することができる。
Based on the pruning value, search
刈り込み済みトークンプロバイダ150は、ネットワーク110を介してコンテンツプロバイダ115に刈り込まれた複数の検索トークンを含むデータ構造を提供することができる。一部の実装において、刈り込み済みトークンプロバイダ150は、刈り込まれた複数の検索トークンの各々に関する妥当性の値を取り出すためにデータベース120にアクセスすることができる。一部の実装において、妥当性の値は、対応する検索トークンに関連する予測される要求の各々に関する推定されたトラフィック値の合計であることが可能である。一部の実装において、刈り込み済みトークンプロバイダ150は、コンテンツプロバイダ115から検索トークンレシーバ125によって受信された要求に対応する値によってインデックス付けされた、刈り込まれた複数の検索トークンを含むデータ構造をデータベース120に記憶することができる。コンテンツプロバイダ115は、刈り込み済みトークンプロバイダ150からの刈り込まれた検索トークンを含むデータ構造を要求することができる。要求に応答して、刈り込み済みトークンプロバイダ150は、データベース120にアクセスし、要求されたデータ構造をネットワークを介してコンテンツプロバイダ115に伝達することができる。一部の実装において、刈り込み済みトークンプロバイダ150は、刈り込まれた検索トークンを含むデータ構造が生成されるとき(たとえば、検索トークンプルーナ145による生成およびデータ投入後)、刈り込まれた検索トークンを含むデータ構造をコンテンツプロバイダ115に伝達することができる。刈り込まれた検索トークンを提供することに加えて、刈り込み済みトークンプロバイダ150は、検索トークンレシーバ125によって受信された複数の検索トークンから削除された検索トークンの各々の指示を提供することができる。
Pruned token provider 150 may provide a data structure containing a plurality of pruned search tokens to content provider 115 over
ここで図4を参照すると、示されるのは、選択基準に基づいて検索トークンの集合から検索トークンを刈り込む例示的な方法400のフローチャートである。方法400は、データ処理システム105、図7に関連して本明細書において説明されるコンピュータシステム700、または本明細書において説明される任意のその他のコンピューティングデバイスによって行われ得るかまたはそうでなければ実行され得る。データ処理システムが、複数の検索トークンを受信し得る(402)。データ処理システムが、第1の検索トークンの指示を取り出し得る(404)。データ処理システムが、複数の予測される要求を取り出し得る(406)。データ処理システムが、第iの検索トークンを選択し得る(407)。データ処理システムが、第iの検索トークンに対応するビット列を構築し得る(408)。データ処理システムが、カウンタレジスタが検索トークンの数nに等しいかどうかを判定し得る(410)。データ処理システムが、カウンタレジスタiをインクリメントし得る(412)。データ処理システムが、複数の検索トークンから検索トークンを選択し、刈り込み得る(414)。データ処理システムが、刈り込まれた検索トークンを提供し得る(416)。
Referring now to FIG. 4, shown is a flowchart of an
データ処理システム(たとえば、データ処理システム105)が、複数の検索トークンを受信し得る(402)。一部の実装においては、データ処理システムが、ネットワーク(たとえば、ネットワーク110)を介してコンテンツプロバイダ(たとえば、コンテンツプロバイダ115)から複数の検索トークンを受信し得る。検索トークンは、デモグラフィックス情報、コンテンツのレーティング、コンテンツの主題、キーワード、フレーズ、または情報リソースに関連するその他の情報のうちの1つまたは複数を含み得る。複数の検索トークンを受信することは、コンテンツプロバイダによって提供されるコンテンツアイテムの性能に影響を与える可能性がある予測される要求に関連付けられる検索トークンを削除する要求を含む可能性がある。一部の実装において、複数の検索トークンを受信することは、検索トークンの総数nを受信することを含み得る。一部の実装において、データ処理システムは、複数の検索トークンを受信した後、検索トークンの総数nを決定し得る。一部の実装において、データ処理システムは、コンピュータメモリ(たとえば、データベース120、図7に関連して本明細書において下で説明されるメモリ725など)から複数の検索トークンを取り出し得る。データ処理システムは、本明細書において説明される値の中でもとりわけ、各検索トークンに関するコンテンツのレーティング情報、推定されたトラフィックの閾値、類似性の閾値などの追加的な構成情報も複数の検索トークンと一緒にコンテンツプロバイダから受信する可能性がある。 A data processing system (eg, data processing system 105) may receive multiple search tokens (402). In some implementations, a data processing system may receive multiple search tokens from a content provider (eg, content provider 115) over a network (eg, network 110). Search tokens may include one or more of demographic information, content ratings, content subject matter, keywords, phrases, or other information associated with the information resource. Receiving multiple search tokens can include requests to remove search tokens associated with anticipated requests that may affect the performance of content items offered by the content provider. In some implementations, receiving multiple search tokens may include receiving a total number of search tokens n. In some implementations, the data processing system may determine the total number of search tokens n after receiving multiple search tokens. In some implementations, the data processing system may retrieve multiple search tokens from computer memory (eg, database 120, memory 725 described herein below in connection with FIG. 7, etc.). The data processing system also processes additional configuration information with multiple search tokens, such as content rating information for each search token, estimated traffic thresholds, similarity thresholds, among other values described herein. may be received from content providers together.
データ処理システムが、複数の検索トークンの中の第1の検索トークンの指示を取り出し得る(404)。指示は、データ処理システムが複数の検索トークンからの第1の検索トークンにアクセスすることを可能にし得る識別子またはその他のデータなどの検索トークンについての情報を含む可能性がある。たとえば、複数の検索トークンは、コンピュータメモリ(たとえば、データベース120または図7に関連して本明細書において下で説明されるメモリ725など)に記憶される可能性がある。指示は、データ処理システムが第1の検索トークンを含むデータ構造内の位置にアクセスすることを可能にするインデックス値である可能性がある。一部の実装において、指示は、検索トークンの性質情報を含む可能性がある。たとえば、第1の検索トークンは、最上位の否定的検索トークンである可能性があり、つまり、第1の検索トークンは、本明細書において上で説明されたように最も多くの予測される要求に否定的に関連付けられる。一部の実装において、指示は、ネットワーク(たとえば、ネットワーク110)を介してコンテンツプロバイダのコンピューティングデバイスからまたは別の外部コンピューティングデバイスから受信され得る。一部の実装において、指示を取り出すことは、2つ以上の検索トークンの指示を取り出すことを含み得る。そのような実装において、本明細書において説明される方法400の各ステップは、示される検索トークンの各々を使用して実行され得る。
A data processing system may retrieve an indication of a first search token among the plurality of search tokens (404). The instructions may include information about the search token, such as an identifier or other data that may allow the data processing system to access a first search token from multiple search tokens. For example, multiple search tokens may be stored in computer memory (eg, database 120 or memory 725, described herein below in connection with FIG. 7, etc.). The indication may be an index value that allows the data processing system to access the location within the data structure that contains the first search token. In some implementations, the indication may include search token disposition information. For example, the first search token may be the top negative search token, i.e. the first search token is the number of expected requests as described hereinabove. negatively associated with In some implementations, the instructions may be received from the content provider's computing device or from another external computing device over a network (eg, network 110). In some implementations, retrieving indications may include retrieving indications of two or more search tokens. In such an implementation, each step of
データ処理システムが、複数の予測される要求を取り出し得る(406)。コンテンツプロバイダから受信された検索トークンの各々は、1つまたは複数の予測される要求に関連付けられ得る。予測される要求は、情報リソースが対応する検索トークンに関連するコンテンツを要求したことを示し得る、コンピュータメモリから取り出された履歴データに基づくことができる。それぞれの予測される要求は、季節性データ(たとえば、時間期間、デモグラフィックス情報など)に基づく可能性がある。一部の実装において、予測される要求は、たとえば、情報リソースがとりわけ1つまたは複数のキーワードもしくはフレーズ、関連する画像、関連する動画、または関連するメタデータを含む場合、情報リソースに基づくことができる。検索トークンに含まれる情報を含む情報リソースは、情報リソースが検索トークンに関連するコンテンツを要求し得ることを示し、その他の要因に基づいてその予測される要求を予測される要求の候補にする可能性がある。一部の実装において、予測される要求は、たとえば、情報リソースが検索トークンに含まれるデモグラフィックス情報に関連付けられるユーザから(たとえば、履歴データに基づいて)定期的に閲覧される場合、デモグラフィックス情報に基づく可能性がある。 A data processing system may retrieve multiple expected requests (406). Each search token received from a content provider may be associated with one or more anticipated requests. The predicted requests can be based on historical data retrieved from computer memory that can indicate that the information resource requested content associated with the corresponding search token. Each forecasted demand may be based on seasonality data (eg, time period, demographic information, etc.). In some implementations, the expected requests may be based on the information resource, for example, if the information resource contains one or more keywords or phrases, related images, related videos, or related metadata, among others. can. An information resource containing information contained in a search token indicates that the information resource may request the content associated with the search token, and may make that expected request a candidate for the expected request based on other factors. have a nature. In some implementations, forecasted requests may be demographic, e.g., if the information resource is viewed regularly (e.g., based on historical data) from users associated with the demographic information included in the search token. information may be based on
データ処理システムが、第iの検索トークンを選択し得る(407)。複数の検索トークンのうちの検索トークンが削除されることを決定するために、ビット列が、検索トークンの各々に関して構築され得る。ビット列は、複数の予測される要求のうちのどれが検索トークンに関連付けられるか、および複数の予測される要求のうちのどれが検索トークンに関連付けられないかを表し得る。一部の実装において、データ処理システムは、カウンタレジスタiに基づいて検索トークンの各々を繰り返しループし得る。検索トークンの各々は、インデックス値(たとえば、インデックス0、インデックス1、インデックス2など)によってデータ構造内でインデックス付けされる可能性がある。検索トークンにアクセスするために、データ処理システムは、カウンタレジスタiに等しいインデックス値を含む検索トークンを選択し得る。それがループの最初の繰り返しである場合、カウンタレジスタiは、第iの検索トークンを選択する前に初期値(たとえば、i = 0)に初期化される可能性がある。検索トークンを選択することは、検索トークンに関連するデータをコンピュータメモリの異なる領域、たとえば、メモリの作業領域(working region)にコピーすることを含み得る。
A data processing system may select an ith search token (407). A bit string may be constructed for each of the search tokens to determine which search tokens of the plurality of search tokens are deleted. A bit string may represent which of the multiple expected requests are associated with the search token and which of the multiple expected requests are not associated with the search token. In some implementations, the data processing system may loop repeatedly through each of the search tokens based on counter register i. Each of the search tokens may be indexed within the data structure by an index value (eg,
データ処理システムが、第iの検索トークンに対応するビット列を構築し得る(408)。ビット列を構築することは、図5に関連して本明細書において下で説明される方法の動作408を実行することを含み得る。一部の実装において、データ処理システムは、コンピュータメモリ(たとえば、データベース120、図7に関連して本明細書において下で説明されるメモリ725など)から複数のビット列を取り出し得る。一部の実装において、データ処理システムは、ネットワーク110を介してコンテンツプロバイダまたは別の外部コンピューティングデバイスからビット列を受信し得る。
A data processing system may construct a bit string corresponding to the i th search token (408). Constructing the bit string may include performing
データ処理システムが、カウンタレジスタが検索トークンの数nに等しいかどうかを判定し得る(410)。データ処理システムがコンテンツプロバイダから受信された検索トークンの各々に関するビット列を生成したかどうかを判定するために、データ処理システムは、各検索トークンを選択するために使用されるカウンタレジスタを検索トークンの総数nと比較することができる。カウンタレジスタiが検索トークンの総数nに等しくない(たとえば、それよりも小さい)場合、データ処理システムは、ステップ(412)を実行し得る。カウンタレジスタiが検索トークンの総数nに等しい(たとえば、それ以上である)場合、データ処理システムは、ステップ(414)を実行し得る。 The data processing system may determine whether the counter register equals the number of search tokens n (410). To determine whether the data processing system has generated a bit string for each of the search tokens received from the content provider, the data processing system stores a counter register used to select each search token from the total number of search tokens. can be compared with n. If the counter register i is not equal to (eg, less than) the total number of search tokens n, the data processing system may perform step (412). If the counter register i is equal to (eg, greater than or equal to) the total number of search tokens n, the data processing system may perform step (414).
データ処理システムが、カウンタレジスタiをインクリメントし得る(412)。一部の実装において、データ処理システムは、複数の検索トークンの中の次の未処理の検索トークンを示すためにレジスタiに1を足すことができる。一部の実装において、データ処理システムは、カウンタレジスタiを次の未処理の検索トークンのメモリアドレス値(たとえば、コンピュータメモリ内の位置)に設定することができる。一部の実装において、次の未処理の検索トークンのメモリアドレス値は、現在の(たとえば、選択された)検索トークンの位置のデータ構造に含まれ得る。カウンタレジスタiの値をインクリメントした後、データ処理システムは、方法400のステップ(407)を実行し得る。
A data processing system may increment a counter register i (412). In some implementations, the data processing system may add 1 to register i to indicate the next outstanding search token in the plurality of search tokens. In some implementations, the data processing system may set a counter register i to the memory address value (eg, location in computer memory) of the next outstanding search token. In some implementations, the memory address value of the next outstanding search token may be included in the current (eg, selected) search token location data structure. After incrementing the value of counter register i, the data processing system may perform step (407) of
データ処理システムが、複数の検索トークンから検索トークンを選択し、刈り込み得る(416)。複数の検索トークンからトークンを選択し、刈り込むことは、図6に関連して本明細書において下で説明される方法の動作414を実行することを含み得る。一部の実装において、データ処理システムは、複数の検索トークンから選択され、刈り込まれる各検索トークンの指示を受信し得る。一部の実装において、データ処理システムは、データベースまたはコンピュータメモリ(たとえば、データベース120または図7に関連して本明細書において説明されるメモリ725)にアクセスし、データ構造から指示を取り出すことによって検索トークンを選択し、削除するための指示を受信し得る。一部の実装において、データ処理システムは、ネットワーク(たとえば、ネットワーク110)を介してコンテンツプロバイダまたは別の外部コンピューティングデバイスから検索トークンを選択し、刈り込むための指示を受信し得る。
A data processing system may select and prune search tokens from a plurality of search tokens (416). Selecting and pruning tokens from the plurality of search tokens may include performing
データ処理システムが、刈り込まれた検索トークンを提供し得る(416)。一部の実装において、刈り込まれた検索トークンは、コンピュータメモリに記憶されるデータ構造へと集約され得る。データ構造は、コンピュータメモリ似記憶された刈り込まれた検索トークンにアクセスし、データ構造をネットワークを介してコンテンツプロバイダに送信することができる。一部の実装において、データ処理システムは、ステップ(402)において受信された複数の検索トークンから削除された検索トークンの各々の指示を送信し得る。一部の実装において、データ処理システムは、それぞれの複数の検索トークンに関連するそれぞれの予測される要求に対応する推定されたトラフィック値に基づいて複数の検索トークンの各々に関する推定されたトラフィック値(たとえば、過去の性能に基づく予測される閲覧、情報リソースの訪問者数など)を提供することができる。 A data processing system may provide a pruned search token (416). In some implementations, the pruned search tokens may be aggregated into a data structure stored in computer memory. The data structure can access the pruned search token stored in computer memory and transmit the data structure over a network to the content provider. In some implementations, the data processing system may send an indication of each of the search tokens deleted from the plurality of search tokens received in step (402). In some implementations, the data processing system generates an estimated traffic value ( For example, predicted views based on past performance, number of visitors to information resources, etc.) can be provided.
ここで図5を参照すると、示されるのは、検索トークンに関するビット列を生成する例示的な方法408が示される。方法408は、図4に関連して本明細書において上で説明された方法400のステップ(408)の一部として実行され得る。方法408は、たとえば、データ処理システム105、図7に関連して本明細書において説明されるコンピュータシステム700、または本明細書において説明される任意のその他のコンピューティングデバイスによって実行され得る。データ処理システムが、第kの予測される要求を選択し得る(502)。データ処理システムが、予測される要求が検索トークンに対応するかどうかを判定し得る(504)。データ処理システムが、第kのビット列の位置を非マッチ値に設定し得る(506)。データ処理システムが、第kのビット列の位置をマッチ値に設定し得る(508)。データ処理システムが、カウンタレジスタkが予測される要求の数mに等しいかどうかを判定し得る(510)。データ処理システムが、カウンタレジスタkをインクリメントし得る(512)。データ処理システムが、ビット列に圧縮を適用し得る(514)。
Referring now to FIG. 5, shown is an
データ処理システムが、第kの予測される要求を選択し得る(502)。それぞれの検索トークンに関するビット列を構築するために、データ処理システムは、図4に関連して本明細書において説明されたステップ(406)において取り出された複数の予測される要求の各々に対して繰り返さなければならない。ビット列は、複数の予測される要求のうちのどれが検索トークンに関連付けられるか、および複数の予測される要求のうちのどれが検索トークンに関連付けられないかを表し得る。一部の実装において、データ処理システムは、カウンタレジスタkに基づいて複数の予測される要求の各々を繰り返しループし得る。複数の予測される要求の各々は、インデックス値(たとえば、インデックス0、インデックス1、インデックス2など)によってデータ構造内でインデックス付けされる可能性がある。予測される要求を処理するために、データ処理システムは、カウンタレジスタkに等しいインデックス値を含む予測される要求を選択し得る。それがループの最初の繰り返しである場合、カウンタレジスタkは、第kの予測される要求を選択する前に初期値(たとえば、k = 0)に初期化される可能性がある。予測される要求を選択することは、予測される要求に関連するデータをコンピュータメモリの異なる領域、たとえば、メモリの作業領域にコピーすることを含み得る。
A data processing system may select the kth predicted request (502). To build a bit string for each search token, the data processing system repeats There must be. A bit string may represent which of the multiple expected requests are associated with the search token and which of the multiple expected requests are not associated with the search token. In some implementations, the data processing system may repeatedly loop through each of the multiple predicted requests based on counter register k. Each of the multiple predicted requests may be indexed within the data structure by an index value (eg,
データ処理システムが、予測される要求が検索トークンに対応するかどうかを判定し得る(504)。予測される要求に関する関連付けを決定するために、データ処理システムは、複数の予測される要求の各々に関する関連付けについての情報を含むコンピュータメモリの領域にアクセスすることができる。データ処理システムは、データベース(たとえば、データベース120)から予測される要求に関する関連付けの各々を取り出すことができる。一部の実装において、データベースは、各検索トークンによってインデックス付けされたルックアップテーブルを含み得る。データ処理システムは、検索トークンをキー値として使用してデータベースにアクセスし、検索トークンに対応する関連する予測される要求のリストを取り出すことができる。選択された予測される要求が関連する予測される要求のリストに含まれる場合、データ処理システムは、ステップ(508)を実行し得る。選択された予測される要求が関連する予測される要求のリストに含まれない場合、データ処理システムは、ステップ(506)を実行し得る。 A data processing system may determine whether the expected request corresponds to the search token (504). To determine associations for predicted requests, the data processing system can access regions of computer memory that contain information about associations for each of a plurality of predicted requests. The data processing system can retrieve each association for the expected request from a database (eg, database 120). In some implementations, the database may contain a lookup table indexed by each search token. A data processing system can use the search token as a key value to access the database and retrieve a list of related predicted requests corresponding to the search token. If the selected predicted demand is included in the list of associated predicted demands, the data processing system may perform step (508). If the selected predicted demand is not included in the list of related predicted demands, the data processing system may perform step (506).
データ処理システムが、第kのビット列の位置を非マッチ値に設定し得る(506)。一部の実装において、データ処理システムは、検索トークンに関連するビット列を表すメモリの領域にアクセスすることができる。ビット列は、コンピュータメモリ(たとえば、データベース120または図7に関連して本明細書において説明されるメモリ725)内のデータ構造内にある可能性がある。一部の実装において、非マッチ値を設定することは、カウンタレジスタkに対応するビット位置を2進値(たとえば、「0」または「1」)に設定することを含み得る。たとえば、非マッチ値が「1」であると決定される場合、データ処理システムは、検索トークンに対応するビット列の第kのビット位置を「1」に設定し得る。非マッチ値が「0」であると決定される場合、データ処理システムは、検索トークンに対応するビット列の第kのビット位置を「0」に設定し得る。一部の実装において、非マッチ値は、予測される要求が検索トークンに関連付けられないことを示す別の種類の値である可能性がある。 A data processing system may set the position of the kth bit string to a non-match value (506). In some implementations, the data processing system can access regions of memory that represent bit strings associated with search tokens. The bit string may be in a data structure in computer memory (eg, database 120 or memory 725 described herein in connection with FIG. 7). In some implementations, setting the non-match value may include setting a bit position corresponding to counter register k to a binary value (eg, '0' or '1'). For example, if the non-match value is determined to be '1', the data processing system may set the kth bit position of the bit string corresponding to the search token to '1'. If the non-match value is determined to be '0', the data processing system may set the kth bit position of the bit string corresponding to the search token to '0'. In some implementations, a non-match value can be another kind of value that indicates that the expected request is not associated with the search token.
データ処理システムが、第kのビット列の位置をマッチ値に設定し得る(508)。一部の実装において、データ処理システムは、検索トークンに関連するビット列を表すメモリの領域にアクセスすることができる。ビット列は、コンピュータメモリ(たとえば、データベース120または図7に関連して本明細書において説明されるメモリ725)内のデータ構造内にある可能性がある。一部の実装において、マッチ値を設定することは、カウンタレジスタkに対応するビット位置を2進値(たとえば、「0」または「1」)に設定することを含み得る。たとえば、マッチ値が「1」であると決定される場合、データ処理システムは、検索トークンに対応するビット列の第kのビット位置を「1」に設定し得る。マッチ値が「0」であると決定される場合、データ処理システムは、検索トークンに対応するビット列の第kのビット位置を「0」に設定し得る。一部の実装において、マッチ値は、1よりも大きな値、たとえば、予測される要求に関連する推定されたトラフィック値であることが可能である。 The data processing system may set the kth bit string position to the match value (508). In some implementations, the data processing system can access regions of memory that represent bit strings associated with search tokens. The bit string may be in a data structure in computer memory (eg, database 120 or memory 725 described herein in connection with FIG. 7). In some implementations, setting the match value may include setting a bit position corresponding to counter register k to a binary value (eg, '0' or '1'). For example, if the match value is determined to be '1', the data processing system may set the kth bit position of the bit string corresponding to the search token to '1'. If the match value is determined to be '0', the data processing system may set the kth bit position of the bit string corresponding to the search token to '0'. In some implementations, the match value can be a value greater than 1, eg, an estimated traffic value associated with the expected request.
データ処理システムが、カウンタレジスタkが予測される要求の数mに等しいかどうかを判定し得る(510)。データ処理システムがそれぞれの予測される要求に関するビット列内のマッチ値または非マッチ値を設定したかどうかを判定するために、データ処理システムは、それぞれの予測される要求を選択するために使用されるカウンタレジスタkを予測される要求の総数mと比較することができる。カウンタレジスタkが予測される要求の総数mに等しくない(たとえば、それよりも小さい)場合、データ処理システムは、ステップ(512)を実行し得る。カウンタレジスタkが予測される要求の総数mに等しい(たとえば、それ以上である)場合、データ処理システムは、ステップ(514)を実行し得る。 The data processing system may determine whether the counter register k is equal to the expected number of requests m (510). The data processing system is used to select each predicted request to determine whether the data processing system has set a match value or a non-match value in the bit string for each predicted request. A counter register k can be compared with the expected total number of requests m. If the counter register k is not equal to (eg, less than) the expected total number of requests m, the data processing system may perform step (512). If the counter register k is equal to (eg, greater than or equal to) the total number of expected requests m, the data processing system may perform step (514).
データ処理システムが、カウンタレジスタkをインクリメントし得る(512)。一部の実装において、データ処理システムは、複数の予測される要求の中の次の未処理の予測される要求を示すためにレジスタkに1を足すことができる。一部の実装において、データ処理システムは、カウンタレジスタkを次の未処理の予測される要求のメモリアドレス値(たとえば、コンピュータメモリ内の位置)に設定することができる。一部の実装において、次の未処理の予測される要求のメモリアドレス値は、現在の(たとえば、選択された)予測される要求の位置のデータ構造に含まれ得る。カウンタレジスタkの値をインクリメントした後、データ処理システムは、方法408のステップ(502)を実行し得る。
A data processing system may increment a counter register k (512). In some implementations, the data processing system may add 1 to register k to indicate the next outstanding predicted request of the plurality of predicted requests. In some implementations, the data processing system may set a counter register k to the memory address value (eg, location in computer memory) of the next outstanding predicted request. In some implementations, the memory address value of the next outstanding predicted request may be included in the current (eg, selected) predicted request location data structure. After incrementing the value of counter register k, the data processing system may perform step (502) of
データ処理システムが、ビット列に圧縮を適用し得る(514)。一部の実装においては、各検索トークンに関する各ビット列を処理するストレージの要件および計算負荷を減らすために、データ処理システムが、刈り込まれたビット列を生成するために選択基準に基づいてビット列の特定の位置を選択し得る。一部の実装において、刈り込まれたビット列は、未圧縮のビット列よりも小さくなり得る。一部の実装において、選択基準は、擬似ランダムな選択に基づくことが可能である。たとえば、データ処理システムは、複数の予測される要求に基づいて検索トークンに関して生成されたビット列から選択するいくつかのビット位置を擬似ランダムに決定する可能性がある。一部の実装において、データ処理システムは、ビット列からの選択された位置を刈り込まれたビット列に挿入することができる。たとえば、データ処理システムは、刈り込まれたビット列を生成するためにビット列の最初の百個(たとえば、位置0から位置99まで)を選択し得る。一部の実装において、刈り込まれたビット列は、図4に関連して本明細書において上で説明された方法400のステップによるおよび図6に関連して本明細書において下で説明される方法414のステップによるさらなる処理のためにビット列の代わりに使用され得る。
A data processing system may apply compression to the bitstream (514). In some implementations, to reduce the storage requirements and computational burden of processing each bitstring for each search token, a data processing system may specify bitstrings based on selection criteria to generate pruned bitstrings. You can choose your location. In some implementations, the pruned bitstream may be smaller than the uncompressed bitstream. In some implementations, the selection criteria can be based on pseudo-random selection. For example, the data processing system may pseudo-randomly determine a number of bit positions to select from the bit string generated for the search token based on multiple expected requests. In some implementations, the data processing system can insert selected positions from the bitstring into the pruned bitstring. For example, the data processing system may select the first hundred (eg, positions 0 through 99) of the bitstring to generate the pruned bitstring. In some implementations, the pruned bit string is processed according to the steps of
ここで図6を参照すると、示されるのは、ビット列に基づいて検索トークンを刈り込む例示的な方法414である。方法414は、図4に関連して本明細書において上で説明された方法400のステップ(414)の一部として実行され得る。方法414は、たとえば、データ処理システム105、図7に関連して本明細書において説明されるコンピュータシステム700、または本明細書において説明される任意のその他のコンピューティングデバイスによって実行され得る。データ処理システムが、示されたビット列を選択し得る(602)。データ処理システムが、第jのビット列を選択し得る(604)。データ処理システムは、示されたビット列と選択されたビット列との間の類似性の値を計算し得る(606)。データ処理システムは、類似性の値が閾値よりも大きいかどうかを判定し得る(608)。データ処理システムが、第jのビット列に対応する検索トークンを削除し得る(610)。データ処理システムが、カウンタレジスタjがビット列の数pに等しいかどうかを判定し得る(612)。データ処理システムが、カウンタレジスタjをインクリメントし得る(614)。データ処理システムが、刈り込まれたトークンを集約し得る(616)。
Referring now to FIG. 6, shown is an
データ処理システムが、示されたビット列を選択し得る(602)。示されたビット列は、図4に関連して本明細書において上で説明された方法400のステップ(404)において示された第1の検索トークン(たとえば、最上位の否定的検索トークン)に関連付けられ得る。一部の実装において、データ処理システムは、ビット列を含むデータ構造にアクセスし、第1の検索トークンに含まれるインデックス値に基づいて示されたビット列を選択することができる。一部の実装において、ビット列を含むデータ構造は、それぞれの関連する検索トークンによってインデックス付けされる可能性があり、したがって、示されたビット列は、第1の検索トークンをインデックス値として使用して選択される可能性がある。示されたビット列を選択することは、示されたビット列をメモリの異なる領域(たとえば、データ処理システム上の作業メモリ)にコピーすることを含み得る。一部の実装において、データ処理システムは、示されたビット列を選択するためにデータベース(たとえば、データベース120)にアクセスすることができる。
A data processing system may select the indicated bit string (602). The indicated bit string is associated with the first search token (eg, the topmost negative search token) indicated in step (404) of
データ処理システムが、第jのビット列を選択し得る(604)。検索トークンが複数の検索トークンから削除され得るかどうかを判定するために、データ処理システムは、図4に関連して本明細書において上で説明されたステップ(402)において受信された各検索トークンに関連する複数のビット列の各々に対して繰り返さなければならない。ビット列は、複数の予測される要求のうちのどれが検索トークンに関連付けられるか、および複数の予測される要求のうちのどれが検索トークンに関連付けられないかを表し得る。一部の実装において、データ処理システムは、カウンタレジスタjに基づいてビット列の各々を繰り返しループし得る。ビット列の各々は、インデックス値(たとえば、インデックス0、インデックス1、インデックス2など)によってデータ構造内でインデックス付けされる可能性がある。ビット列を処理するために、データ処理システムは、カウンタレジスタjに等しいインデックス値を含むビット列を選択し得る。それがループの最初の繰り返しである場合、カウンタレジスタjは、第jの予測される要求を選択する前に初期値(たとえば、j = 0)に初期化される可能性がある。予測される要求を選択することは、予測される要求に関連するデータをコンピュータメモリの異なる領域、たとえば、メモリの作業領域にコピーすることを含み得る。一部の実装においては、第jのビット列が示されたビット列と同じである場合、データ処理システムは、ステップ(614)に関連して本明細書において下で説明されるようにカウンタレジスタjをインクリメントすることができる。カウンタレジスタをインクリメントすることがjの値をビット列の総数p以上にする場合、データ処理システムは、本明細書において下で説明されるステップ(616)を実行することができる。
A data processing system may select the jth bit string (604). To determine whether a search token can be deleted from multiple search tokens, the data processing system processes each search token received in step (402) described hereinabove with reference to FIG. must be repeated for each of the multiple bit strings associated with . A bit string may represent which of the multiple expected requests are associated with the search token and which of the multiple expected requests are not associated with the search token. In some implementations, the data processing system may repeatedly loop through each of the bit strings based on counter register j. Each bit string may be indexed within the data structure by an index value (eg,
データ処理システムは、示されたビット列と選択されたビット列との間の類似性の値を計算し得る(606)。類似性の値を計算することは、示されたビット列および選択されビット列に対してビット毎の論理演算を実行することを含み得る。たとえば、データ処理システムは、結果ビット列を生成するために、選択されたビット列および示されたビット列をオペランドとして使用して論理AND演算を実行することができる。結果ビット列は、第1の検索トークンおよび選択されたビット列に対応する検索トークンに関連付けられる予測される要求の各々の指示を含み得る。データ処理システムは、マッチ値を含む結果ビット列内の位置の数をカウントすることによって示されたビット列と選択されたビット列との間の類似性の値を計算することができる。一部の実装において、第1のビット列および第2のビット列内の各位置は、妥当性の値に等しいことが可能である重み値に等しい可能性がある。妥当性の値は、対応する検索トークンとビット列内のそれぞれの値の予測される要求に関連する情報リソースとの間の妥当性の測定基準を示し得る。この場合、ビット列は、整数値または浮動小数点値である可能性がある重み値のベクトルである可能性がある。2つのそのようなビット列の間の類似性の値を決定するために、ビット列比較モジュール140は、第1のビット列の各位置の妥当性の値が許容範囲値(たとえば、10%、15%など)以内で第2のビット列のそれぞれの位置に等しいかどうかを判定することができる。一部の実装において、許容範囲値は、データベース(たとえば、データベース120)から取り出されるか、コンテンツプロバイダから受信されるか、または別の外部コンピューティングデバイスから受信される可能性がある。2つの値が所定の許容範囲値以内で等しい場合、ビット列比較モジュールは、結果ビット列(たとえば、結果ビット列305)の対応する位置をマッチ値に設定することができる。ビット列比較モジュール140は、完全な結果ビット列を決定するために第1のおよび第2のビット列内の位置の各々を繰り返し比較し、本明細書において上で詳細に説明されたように結果ビット列を使用して類似性の値を計算することができる。
The data processing system may calculate a similarity value between the indicated bit string and the selected bit string (606). Calculating the similarity value may include performing a bitwise logical operation on the indicated bitstring and the selected bitstring. For example, the data processing system may perform a logical AND operation using the selected bitstring and the indicated bitstring as operands to produce the resulting bitstring. The result bitstring may include an indication of each of the predicted requests associated with the first search token and the search token corresponding to the selected bitstring. The data processing system can calculate a similarity value between the indicated bitstring and the selected bitstring by counting the number of positions in the resulting bitstring that contain match values. In some implementations, each position within the first bit string and the second bit string may equal a weight value, which may equal a validity value. Validity values may indicate a metric of validity between the corresponding search token and the information resource associated with the expected request for each value in the bitstring. In this case, the bitstring may be a vector of weight values, which may be integer or floating point values. To determine a similarity value between two such bitstrings,
データ処理システムは、類似性の値が類似性の閾値よりも大きいかどうかを判定し得る(608)。データ処理システムは、コンテンツプロバイダ(たとえば、コンテンツプロバイダ115)から類似性の閾値を受信することができる。一部の実装において、データ処理システムは、類似性の閾値を取り出すためにデータベース(たとえば、データベース120)にアクセスすることができる。データ処理システムが選択されたビット列に関連する類似性の値が類似性の閾値以上であると判定する場合、データ処理システムは、方法414のステップ(610)を実行することができる。データ処理システムが選択されたビット列に関連する類似性の値が類似性の閾値未満であると判定する場合、データ処理システムは、方法414のステップ(612)を実行することができる。
The data processing system may determine whether the similarity value is greater than a similarity threshold (608). A data processing system may receive a similarity threshold from a content provider (eg, content provider 115). In some implementations, the data processing system may access a database (eg, database 120) to retrieve the similarity threshold. If the data processing system determines that the similarity value associated with the selected bit string is greater than or equal to the similarity threshold, then the data processing system may perform step (610) of
データ処理システムが、第jのビット列に対応する検索トークンを削除し得る(610)。示されたビット列との類似性に基づいて、データ処理システムは、p個のビット列の各々を含むデータ構造にアクセスすることによって第jのビット列に対応する検索トークンを削除し得る。データ処理システムは、複数の検索トークンを含むデータ構造から第jのビット列に対応するエントリを削除し得る。たとえば、データ構造が連結リストとして構成される場合、データ処理システムは、前のノード(たとえば、j-1)のポインタを第jのノードのアドレスから第jのノードによって指されるノードのアドレスに変更し得る。データ処理システムは、複数の検索トークンを記憶するためにその他のデータ構造を使用する可能性がある。一部の実装において、データ処理システムは、第jのビット列を含むデータ構造のエントリに削除識別子を記憶し得る。削除識別子は、トークンが刈り込まれた検索トークンの集合へと集約されるべきでないことを示し得る。 A data processing system may delete the search token corresponding to the jth bit string (610). Based on similarity to the indicated bitstrings, the data processing system may delete the search token corresponding to the jth bitstring by accessing a data structure containing each of the p bitstrings. The data processing system may delete the entry corresponding to the jth bit string from the data structure containing multiple search tokens. For example, if the data structure is organized as a linked list, the data processing system moves the pointer of the previous node (eg, j-1) from the address of the jth node to the address of the node pointed to by the jth node. can change. A data processing system may use other data structures to store multiple search tokens. In some implementations, the data processing system may store the deletion identifier in the entry of the data structure containing the jth bit string. The deletion identifier may indicate that the token should not be aggregated into the pruned set of search tokens.
データ処理システムが、カウンタレジスタjがビット列の数pに等しいかどうかを判定し得る(612)。データ処理システムが各ビット列を示されたビット列と比較したかどうかを判定するために、データ処理システムは、各ビット列を選択するために使用されるカウンタレジスタjをビット列の総数pと比較し得る。カウンタレジスタjがビット列の総数pに等しくない(たとえば、それよりも小さい)場合、データ処理システムは、ステップ(614)を実行し得る。カウンタレジスタjがビット列の総数pに等しい(たとえば、それ以上である)場合、データ処理システムは、ステップ(616)を実行し得る。 The data processing system may determine whether the counter register j is equal to the number of bit strings p (612). To determine whether the data processing system compared each bit string to the indicated bit string, the data processing system may compare the counter register j used to select each bit string to the total number of bit strings p. If the counter register j is not equal to (eg, less than) the total number of bit strings p, the data processing system may perform step (614). If the counter register j is equal to (eg, greater than or equal to) the total number of bit strings p, the data processing system may perform step (616).
データ処理システムが、カウンタレジスタjをインクリメントし得る(614)。一部の実装において、データ処理システムは、複数のビット列の中の次の未処理のビット列を示すためにレジスタjに1を足すことができる。一部の実装において、データ処理システムは、カウンタレジスタjを次の未処理のビット列のメモリアドレス値(たとえば、コンピュータメモリ内の位置)に設定することができる。一部の実装において、次の未処理のビット列のメモリアドレス値は、現在の(たとえば、選択された)予測される要求の位置のデータ構造に含まれ得る。カウンタレジスタjの値をインクリメントした後、データ処理システムは、方法414のステップ(604)を実行し得る。
The data processing system may increment a counter register j (614). In some implementations, the data processing system may add 1 to register j to indicate the next unprocessed bitstream in the multiple bitstreams. In some implementations, the data processing system may set a counter register j to the memory address value (eg, location in computer memory) of the next unprocessed bit string. In some implementations, the memory address value of the next unprocessed bit string may be included in the current (eg, selected) predicted request location data structure. After incrementing the value of counter register j, the data processing system may perform step (604) of
データ処理システムが、刈り込まれたトークンを集約し得る(616)。データ処理システムは、ステップ(610)において削除されなかった複数の検索トークンのうちの検索トークンの各々を記憶するためのメモリの領域を割り当てることができる。たとえば、元の複数の検索トークンが5つの検索トークンを含み、2つが方法414の前のステップにおいて削除された場合、データ処理システムは、データ構造が3つの検索トークンを含むためのメモリ領域を割り当てることができる。一部の実装において、データ処理システムは、複数の検索トークンのうちのどれが削除識別子と一緒に記憶されないかを繰り返し判定することができる。データ処理システムは、これらの検索トークンの各々を選択し、それらを刈り込まれた検索トークンを集約するために生成されたデータ構造に記憶することができる。したがって、データ処理システムは、複数の検索トークンのうちの、削除識別子によってフラグを立てられなかった検索トークンのみを挿入することによって刈り込まれた検索トークンのデータ構造を生成することができる。
A data processing system may aggregate the pruned tokens (616). The data processing system may allocate an area of memory for storing each of the search tokens of the plurality of search tokens not deleted in step (610). For example, if the original plurality of search tokens contained 5 search tokens and 2 were deleted in the previous step of
図7は、一部の実装によって本明細書において検討されるコンピュータシステムのいずれかを実装するために使用される可能性がある例示的なコンピュータシステム700の全体的なアーキテクチャを示す。コンピュータシステム700は、表示するためにネットワーク110を介して情報を与えるために使用され得る。図7のコンピュータシステム700は、メモリ725に通信可能なように結合された1つまたは複数のプロセッサ720、1つまたは複数の通信インターフェース705、ならびに1つまたは複数の出力デバイス710 (たとえば、1つまたは複数のディスプレイユニット)および1つまたは複数の入力デバイス715を含む。プロセッサ720は、データ処理システム105またはデータ処理システム105などのシステム700のその他の構成要素に含まれ得る。
FIG. 7 illustrates the general architecture of an exemplary computer system 700 that may be used by some implementations to implement any of the computer systems discussed herein. Computer system 700 can be used to provide information over
図7のコンピュータシステム700において、メモリ725は、任意のコンピュータ可読ストレージ媒体を含む可能性があり、それぞれのシステムのための本明細書において説明された様々な機能を実装するためのプロセッサが実行可能な命令などのコンピュータ命令と、それらのシステムに関連する、それらのシステムによって生成される、または通信インターフェースもしくは入力デバイスを介して受信される任意のデータ(もしあれば)とを記憶する可能性がある。再び図7のシステム700を参照すると、データ処理システムは、とりわけ、ユーザ識別子の集合に関連する情報、生成されたベクトルを記憶するためのメモリ725を含み得る。図7に示されたプロセッサ720は、メモリ725に記憶された命令を実行するために使用される可能性があり、そのようにする際に、命令の実行によって処理および/または生成された様々な情報をメモリから読むかまたはメモリに書き込む可能性もある。
In the computer system 700 of FIG. 7, the memory 725 can include any computer-readable storage medium executable by the processor to implement the various functions described herein for the respective system. and any data (if any) associated with those systems, generated by those systems, or received via a communication interface or input device. be. Referring again to system 700 of FIG. 7, the data processing system may include, among other things, memory 725 for storing information associated with sets of user identifiers, generated vectors.
図7に示されたコンピュータシステム700のプロセッサ720は、命令の実行によって様々な情報を送信または受信するための通信インターフェース705に通信可能なように結合されるかまたは通信インターフェース705を制御する可能性もある。たとえば、通信インターフェース705は、有線もしくはワイヤレスネットワーク、バス、またはその他の通信手段に結合される可能性があり、したがって、コンピュータシステム700がその他のデバイス(たとえば、その他のコンピュータシステム)に情報を送信するかまたはその他のデバイス(たとえば、その他のコンピュータシステム)から情報を受信することを可能にする可能性がある。図7のシステムに明示されていないが、1つまたは複数の通信インターフェースが、システム700の構成要素の間の情報の流れを促進する。一部の実装において、通信インターフェースは、コンピュータシステム700の少なくとも一部の態様にウェブサイトをアクセスポータルとして提供するように(たとえば、様々なハードウェア構成要素またはソフトウェア構成要素によって)構成される可能性がある。通信インターフェース705の例は、ユーザがコンピュータシステム700と通信し得るユーザインターフェース(たとえば、ウェブページ)を含む。
図7に示されたコンピュータシステム700の出力デバイス710は、たとえば、命令の実行に関連して様々な情報が見られるかまたはその他の方法で知覚されることを可能にするために提供される可能性がある。入力デバイス715は、たとえば、ユーザが命令の実行中に手動の調整を行うか、選択を行うか、データを入力するか、またはプロセッサと様々な方法のいずれかでインタラクションすることを可能にするために提供され得る。本明細書において検討される様々なシステムのために使用される可能性がある通常のコンピュータシステムのアーキテクチャに関連する追加的な情報が、本明細書においてさらに提供される。
本明細書に記載の対象の実装および動作は、本明細書で開示される構造およびそれらの構造的均等物を含むデジタル電子回路、または有形の媒体上に具現化されたコンピュータソフトウェア、ファームウェア、もしくはハードウェア、またはそれらのうちの1つもしくは複数の組合せで実装され得る。本明細書に記載の対象の実装は、1つまたは複数のコンピュータプログラム、すなわち、データ処理装置による実行のために、またはデータ処理装置の動作を制御するためにコンピュータストレージ媒体上に符号化されたコンピュータプログラム命令の1つまたは複数の構成要素として実装され得る。プログラム命令は、データ処理装置による実行のために好適な受信機装置に送信するために情報を符号化するように生成される人為的に生成された伝播信号、たとえば、機械によって生成された電気的信号、光学的信号、または電磁的信号上に符号化され得る。コンピュータストレージ媒体は、コンピュータ可読ストレージデバイス、コンピュータ可読ストレージ基板、ランダムもしくはシリアルアクセスメモリアレイもしくはデバイス、またはこれらのうちの1つもしくは複数の組合せであるか、あるいはこれらに含まれることが可能である。さらに、コンピュータストレージ媒体は、伝播信号ではないが、人為的に生成された伝播信号に符号化されたコンピュータプログラム命令の送信元または送信先を含み得る。また、コンピュータストレージ媒体は、1つまたは複数の別個の物理的構成要素または媒体(たとえば、複数のCD、ディスク、もしくはその他のストレージデバイス)であるか、またはこれらに含まれることが可能である。 Implementation and operation of the subject matter described herein may be accomplished using a digital electronic circuit, including the structures disclosed herein and their structural equivalents, or computer software, firmware, or computer software embodied on tangible media. It may be implemented in hardware, or a combination of one or more thereof. An implementation of the subject matter described herein may be one or more computer programs, i.e., encoded on a computer storage medium, for execution by or for controlling the operation of a data processing apparatus. It may be implemented as one or more components of computer program instructions. The program instructions may be an artificially generated propagated signal, e.g., a mechanically generated electrical signal, generated to encode information for transmission to a suitable receiver device for execution by a data processing device. It can be encoded on a signal, optical signal, or electromagnetic signal. A computer storage medium can be or be included in a computer readable storage device, a computer readable storage substrate, a random or serial access memory array or device, or a combination of one or more thereof. Additionally, a computer storage medium may include a source or destination of computer program instructions encoded in an artificially generated propagated signal that is not a propagated signal. Also, a computer storage medium can be or be contained within one or more separate physical components or media (eg, multiple CDs, discs, or other storage devices).
本明細書において開示された特徴は、インターネット接続性を(たとえば、ケーブル、衛星、電波、またはその他の信号によって受け取られる)より旧来型のテレビ番組のソースと統合するように構成された処理モジュールを含む可能性があるスマートテレビモジュール(またはコネクテッドテレビモジュール(connected television module)、ハイブリッドテレビモジュールなど)上に実装される可能性がある。スマートテレビモジュールは、テレビセットに物理的に組み込まれる可能性があり、またはセットトップボックス、ブルーレイもしくはその他のデジタルメディアプレイヤー、ゲームコンソール、ホテルのテレビシステム、およびその他のコンパニオンデバイス(companion device)などの別個のデバイスを含む可能性がある。スマートテレビモジュールは、ウェブ、ローカルケーブルTVチャンネル、衛星TVチャンネルの、またはローカルのハードドライブに記憶されたビデオ、ムービー、写真、およびその他のコンテンツを視聴者が検索し、見つけることを可能にするように構成される可能性がある。セットトップボックス(STB)またはセットトップユニット(STU)は、チューナを含み、テレビセットおよび信号の外部ソースに接続する可能性がある情報家電デバイスを含む可能性があり、信号をコンテンツに変換し、そして、そのコンテンツが、テレビのスクリーンまたはその他のディスプレイデバイス上に表示される。スマートテレビモジュールは、ウェブブラウザなどの複数の異なるアプリケーション、および複数のストリーミングメディアサービス、接続されたケーブルまたは衛星媒体のソース、その他のウェブ「チャンネル」などに関するアイコンを含むホーム画面または最上位の画面を提供するように構成される可能性がある。スマートテレビモジュールは、ユーザに電子番組ガイドを提供するようにさらに構成される可能性がある。スマートテレビモジュールに対するコンパニオンアプリケーション(companion application)は、利用可能な番組についての追加的な情報をユーザに提供すること、ユーザがスマートテレビモジュールを制御することを可能にすることなどのためにモバイルコンピューティングデバイス上で動作し得る可能性がある。代替的な実装において、特徴は、ラップトップコンピュータもしくはその他のパーソナルコンピュータ、スマートフォン、その他のモバイル電話、ハンドヘルドコンピュータ、タブレットPC、またはその他のコンピューティングデバイス上に実装される可能性がある。 Features disclosed herein provide a processing module configured to integrate Internet connectivity with more traditional sources of television programming (e.g., received by cable, satellite, radio waves, or other signals). It may be implemented on a smart TV module (or connected television module, hybrid TV module, etc.) that it may contain. A smart TV module may be physically incorporated into a television set or in a set-top box, Blu-ray or other digital media player, game console, hotel television system, and other companion device. May contain separate devices. Smart TV modules allow viewers to search and find videos, movies, photos, and other content on the web, local cable TV channels, satellite TV channels, or stored on a local hard drive. can be configured to A set-top box (STB) or set-top unit (STU), which includes a tuner and may include a television set and an information appliance device that may connect to an external source of signal, converts the signal into content, The content is then displayed on a television screen or other display device. The smart TV module displays a home screen or top-level screen that contains multiple different applications, such as a web browser, and icons for multiple streaming media services, connected cable or satellite media sources, other web "channels," etc. may be configured to provide The smart TV module may be further configured to provide the user with an electronic program guide. A companion application to the smart TV module is a mobile computing device for providing additional information to the user about available programming, allowing the user to control the smart TV module, etc. It may work on your device. In alternative implementations, features may be implemented on laptop computers or other personal computers, smart phones, other mobile phones, handheld computers, tablet PCs, or other computing devices.
本明細書に記載の動作は、1つもしくは複数のコンピュータ可読ストレージデバイスに記憶された、またはその他のソースから受信されたデータに対してデータ処理装置によって実行される動作として実装され得る。 The operations described herein may be implemented as operations performed by a data processing apparatus on data stored in one or more computer-readable storage devices or received from other sources.
用語「データ処理装置」、「データ処理システム」、「ユーザデバイス」、または「コンピューティングデバイス」は、例として、1つのプログラミング可能なプロセッサ、1台のコンピュータ、1つのシステムオンチップ、またはこれらの複数もしくは組合せを含む、データを処理するためのすべての種類の装置、デバイス、および機械を包含する。装置は、専用の論理回路、たとえば、FPGA (フィールドプログラマブルゲートアレイ)またはASIC (特定用途向け集積回路)を含み得る。装置は、ハードウェアに加えて、問題にしているコンピュータプログラムのための実行環境を作成するコード、たとえば、プロセッサのファームウェア、プロトコルスタック、データベース管理システム、オペレーティングシステム、クロスプラットフォームランタイム環境、仮想マシン、またはこれらのうちの1つもしくは複数の組合せを構成するコードも含み得る。装置および実行環境は、ウェブサービスインフラストラクチャ、分散コンピューティングインフラストラクチャ、およびグリッドコンピューティングインフラストラクチャなどの様々な異なるコンピューティングモデルインフラストラクチャを実現することができる。 The terms "data processing apparatus," "data processing system," "user device," or "computing device" may be used, by way of example, to refer to a programmable processor, computer, system-on-chip, or any of these It encompasses all kinds of apparatus, devices and machines, multiple or in combination, for processing data. The device may contain dedicated logic circuits, such as FPGAs (Field Programmable Gate Arrays) or ASICs (Application Specific Integrated Circuits). The apparatus, in addition to hardware, includes code that creates an execution environment for the computer program in question, e.g., processor firmware, protocol stacks, database management systems, operating systems, cross-platform runtime environments, virtual machines, or Code that constitutes a combination of one or more of these may also be included. Devices and execution environments can implement a variety of different computing model infrastructures, such as web services infrastructures, distributed computing infrastructures, and grid computing infrastructures.
コンピュータプログラム(プログラム、ソフトウェア、ソフトウェアアプリケーション、スクリプト、またはコードとしても知られる)は、コンパイラ型言語もしくはインタープリタ型言語、宣言型言語もしくは手続き型言語を含む任意の形態のプログラミング言語で記述可能であり、独立型プログラムとしての形態、またはモジュール、コンポーネント、サブルーチン、オブジェクト、もしくはコンピューティング環境内での使用に好適なその他の単位としての形態を含む任意の形態で展開され得る。コンピュータプログラムは、ファイルシステム内のファイルに対応する可能性があるが、必ずそうであるとは限らない。プログラムは、その他のプログラムもしくはデータを保持するファイルの一部(たとえば、マークアップ言語の文書に記憶された1つもしくは複数のスクリプト)、問題にしているプログラムに専用の単一のファイル、または複数の組織されたファイル(たとえば、1つもしくは複数のモジュール、サブプログラム、もしくはコードの一部を記憶するファイル)に記憶され得る。コンピュータプログラムは、1つのコンピュータ上で、または1つの場所に置かれるか、もしくは複数の場所に分散され、通信ネットワークによって相互に接続される複数のコンピュータ上で実行されるように展開され得る。 A computer program (also known as a program, software, software application, script, or code) can be written in any form of programming language, including compiled or interpreted languages, declarative or procedural languages; It may be deployed in any form, including as a stand-alone program or as modules, components, subroutines, objects, or other units suitable for use within a computing environment. A computer program may, but does not necessarily, correspond to a file in a file system. A program may be a part of a file holding other programs or data (e.g., one or more scripts stored in a markup language document), a single file dedicated to the program in question, or multiple organized files (eg, files that store one or more modules, subprograms, or portions of code). A computer program can be deployed to be executed on one computer or on multiple computers located at one site or distributed across multiple sites and interconnected by a communication network.
本明細書に記載のプロセスおよび論理フローは、入力データに対して演算を行い、出力を生成することによって行為を行うために1つまたは複数のコンピュータプログラムを1つまたは複数のプログラミング可能なプロセッサが実行することによって実行され得る。また、プロセスおよび論理フローは、専用の論理回路、たとえば、FPGA (フィールドプログラマブルゲートアレイ)またはASIC (特定用途向け集積回路)によって実行されることが可能であり、さらに、装置は、それらの専用の論理回路として実装されることが可能である。 The processes and logic flows described herein involve one or more programmable processors executing one or more computer programs to perform actions by operating on input data and generating output. It can be done by running Also, the processes and logic flows can be performed by dedicated logic circuits, such as FPGAs (Field Programmable Gate Arrays) or ASICs (Application Specific Integrated Circuits), and the device can be It can be implemented as a logic circuit.
コンピュータプログラムの実行に好適なプロセッサは、例として、汎用マイクロプロセッサと専用マイクロプロセッサとの両方、および任意の種類のデジタルコンピュータの任意の1つまたは複数のプロセッサを含む。概して、プロセッサは、読み出し専用メモリ、またはランダムアクセスメモリ、またはこれらの両方から命令およびデータを受け取る。コンピュータの要素は、命令に従って行為を実行するためのプロセッサ、ならびに命令およびデータを記憶するための1つまたは複数のメモリデバイスを含む。また、概してコンピュータは、データを記憶するための1つまたは複数の大容量ストレージデバイス、たとえば、磁気ディスク、光磁気ディスク、もしくは光ディスクを含むか、またはこれらの大容量ストレージデバイスからデータを受け取るか、もしくはこれらの大容量ストレージデバイスにデータを転送するか、もしくはそれら両方を行うために動作可能なように結合される。しかし、コンピュータは、そのようなデバイスを有していなくてもよい。さらに、たとえば、コンピュータは、別のデバイス、たとえば、モバイル電話、携帯情報端末(PDA)、モバイルオーディオもしくはビデオプレイヤー、ゲームコンソール、全地球測位システム(GPS)受信機、またはポータブルストレージデバイス(たとえば、ユニバーサルシリアルバス(USB)フラッシュドライブ)に組み込まれ得る。コンピュータプログラム命令およびデータを記憶するのに好適なデバイスは、例として、半導体メモリデバイス、たとえば、EPROM、EEPROM、およびフラッシュメモリデバイス、磁気ディスク、たとえば、内蔵ハードディスクまたはリムーバブルディスク、光磁気ディスク、ならびにCD-ROMディスクおよびDVD-ROMディスクを含むすべての形態の不揮発性メモリ、媒体、およびメモリデバイスを含む。プロセッサおよびメモリは、専用論理回路によって補完され得るか、または専用論理回路に組み込まれ得る。 Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor receives instructions and data from read-only memory, random-access memory, or both. Elements of a computer include a processor for performing acts in accordance with instructions, and one or more memory devices for storing instructions and data. Computers also generally include, or receive data from, one or more mass storage devices, such as magnetic, magneto-optical, or optical disks, for storing data; or operatively coupled to transfer data to these mass storage devices, or both. However, a computer need not have such devices. Additionally, for example, a computer may be connected to another device, such as a mobile phone, a personal digital assistant (PDA), a mobile audio or video player, a game console, a global positioning system (GPS) receiver, or a portable storage device (e.g., a universal can be embedded in a serial bus (USB flash drive). Devices suitable for storing computer program instructions and data include, by way of example, semiconductor memory devices such as EPROM, EEPROM and flash memory devices, magnetic disks such as internal or removable disks, magneto-optical disks and CDs. - Includes all forms of non-volatile memory, media and memory devices including ROM discs and DVD-ROM discs. The processor and memory may be supplemented by, or incorporated in, dedicated logic circuitry.
ユーザとのインタラクションを行うために、本明細書に記載の対象の実装は、ユーザに対して情報を表示するためのディスプレイデバイス、たとえば、CRT (ブラウン管)、プラズマ、またはLCD (液晶ディスプレイ)モニタ、ならびにユーザがコンピュータに入力を与えることができるキーボードおよびポインティングデバイス、たとえば、マウスまたはトラックボールを有するコンピュータ上に実装され得る。その他の種類のデバイスが、ユーザとのインタラクションを行うためにやはり使用されることが可能であり、たとえば、ユーザに提供されるフィードバックは、任意の形態の感覚フィードバック、たとえば、視覚的フィードバック、聴覚的フィードバック、または触覚的フィードバックを含むことが可能であり、ユーザからの入力は、音響、発話、または触覚による入力を含む任意の形態で受け取られることが可能である。加えて、コンピュータは、ユーザによって使用されるデバイスに文書を送信し、そのデバイスから文書を受信することによって、たとえば、ウェブブラウザから受信された要求に応答してユーザのクライアントデバイス上のウェブブラウザにウェブページを送信することによってユーザとインタラクションすることができる。 To interact with a user, the subject implementations described herein use a display device, such as a CRT (cathode ray tube), plasma, or LCD (liquid crystal display) monitor, for displaying information to the user; and on a computer that has a keyboard and pointing device, such as a mouse or trackball, that allows a user to provide input to the computer. Other types of devices can also be used to interact with the user, e.g., the feedback provided to the user can be any form of sensory feedback, e.g. Feedback, or tactile feedback, may be included, and input from the user may be received in any form, including acoustic, speech, or tactile input. In addition, the computer sends documents to and receives documents from the device used by the user, for example, to the web browser on the user's client device in response to requests received from the web browser. Users can be interacted with by sending web pages.
本明細書に記載の対象の実装は、バックエンド構成要素を、たとえば、データサーバとして含むか、またはミドルウェア構成要素、たとえば、アプリケーションサーバを含むか、またはフロントエンド構成要素、たとえば、ユーザが本明細書に記載の対象の実装とインタラクションすることができるグラフィカルユーザインターフェースもしくはウェブブラウザを有するクライアントコンピュータを含むか、または1つもしくは複数のそのようなバックエンド構成要素、ミドルウェア構成要素、もしくはフロントエンド構成要素の任意の組合せを含むコンピューティングシステムに実装され得る。システムの構成要素は、任意の形態または媒体のデジタルデータ通信、たとえば、通信ネットワークによって相互に接続されることが可能である。通信ネットワークの例は、ローカルエリアネットワーク(「LAN」)および広域ネットワーク(「WAN」)、インターネットワーク(たとえば、インターネット)、ならびにピアツーピアネットワーク(たとえば、アドホックピアツーピアネットワーク)を含む。 Implementations of the subject matter described herein may include back-end components, e.g., as data servers, or may include middleware components, e.g., application servers, or may include front-end components, e.g. includes a client computer having a graphical user interface or web browser capable of interacting with the implementation of the subject matter described therein, or one or more such back-end, middleware, or front-end components; may be implemented in a computing system including any combination of The components of the system can be interconnected by any form or medium of digital data communication, eg, a communication network. Examples of communication networks include local area networks (“LAN”) and wide area networks (“WAN”), internetworks (eg, the Internet), and peer-to-peer networks (eg, ad-hoc peer-to-peer networks).
データ処理システム105などのコンピューティングシステムは、クライアントおよびサーバを含み得る。たとえば、データ処理システム105は、1つまたは複数のデータセンターまたはサーバファーム内の1つまたは複数のサーバを含み得る。クライアントおよびサーバは、概して互いに離れており、通常は通信ネットワークを通じてインタラクションする。クライアントとサーバとの関係は、それぞれのコンピュータ上で実行されており、互いにクライアント-サーバの関係にあるコンピュータプログラムによって生じる。一部の実装において、サーバは、(たとえば、クライアントデバイスとインタラクションするユーザに対してデータを表示し、そのようなユーザからユーザ入力を受信する目的で)クライアントデバイスにデータ(たとえば、HTMLページ)を送信する。クライアントデバイスにおいて生成されたデータ(たとえば、ユーザのインタラクションの結果)が、サーバにおいてクライアントデバイスから受信され得る。 A computing system, such as data processing system 105, can include clients and servers. For example, data processing system 105 may include one or more servers in one or more data centers or server farms. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client-server relationship to each other. In some implementations, a server sends data (e.g., an HTML page) to a client device (e.g., for the purpose of displaying data to a user interacting with the client device and receiving user input from such user). Send. Data generated at the client device (eg, results of user interactions) may be received from the client device at the server.
本明細書は多くの特定の実装の詳細を含むが、これらは、いかなる発明の範囲または特許請求される可能性があるものの範囲に対する限定とも見なされるべきでなく、むしろ、本明細書において説明されたシステムおよび方法の特定の実装に固有の特徴の説明と見なされるべきである。別々の実装に関連して本明細書に記載されている特定の特徴が、単一の実装に組み合わせて実装されことも可能である。反対に、単一の実装に関連して説明されている様々な特徴が、複数の実装に別々に、または任意の適切な部分的組合せで実装されることも可能である。さらに、特徴は、特定の組合せで動作するものとして上で説明されている可能性があり、最初にそのように主張されてさえいる可能性があるが、主張された組合せの1つまたは複数の特徴は、場合によっては組合せから削除されことが可能であり、主張された組合せは、部分的組合せ、または部分的組合せの変形を対象とする可能性がある。 Although this specification contains many specific implementation details, these should not be viewed as limitations on the scope of any invention or what may be claimed, but rather are described herein. should be considered a description of features unique to a particular implementation of the system and method described. Certain features that are described in this specification in the context of separate implementations can also be implemented in combination in a single implementation. Conversely, various features that are described in the context of a single implementation can also be implemented in multiple implementations separately or in any suitable subcombination. Moreover, although features may have been described above as operating in particular combinations, or even claimed to be so in the first place, one or more of the claimed combinations Features may optionally be omitted from combinations, and claimed combinations may cover subcombinations or variations of subcombinations.
同様に、動作が図中に特定の順序で示されているが、これは、そのような動作が示された特定の順序でもしくは逐次的順序で実行されること、または所望の結果を達成するために示されたすべての動作が実行されることを必要とするものと理解されるべきでない。場合によっては、請求項に挙げられた行為は、異なる順序で実行され、それでも所望の結果を達成することができる。加えて、添付の図面に示されたプロセスは、所望の結果を達成するために、必ずしも、示された特定の順序または逐次的順序である必要はない。 Similarly, when acts are shown in the figures in a particular order, it does not mean that such acts are performed in the specific order shown or in any sequential order to achieve the desired result. It should not be understood as requiring that all actions shown for are performed. In some cases, the acts recited in the claims can be performed in a different order and still achieve desired results. Additionally, the processes illustrated in the accompanying drawings need not necessarily be in the specific order shown or sequential order to achieve desired results.
特定の状況においては、マルチタスクおよび並列処理が有利である可能性がある。さらに、上述の実装における様々なシステム構成要素の分割は、すべての実装においてそのような分割を必要とするものと理解されるべきでなく、説明されたプログラム構成要素およびシステムは、概して、単一のソフトウェア製品に一緒に統合されるか、または複数のソフトウェア製品にパッケージングされることが可能であることが理解されるべきである。たとえば、データ処理システム105は、単一のモジュール、1つもしくは複数の処理モジュールを有する論理デバイス、1つもしくは複数のサーバ、または検索エンジンの一部である可能性がある。 Multitasking and parallel processing can be advantageous in certain situations. Furthermore, the division of various system components in the implementations described above should not be understood to require such division in all implementations, and the described program components and system are generally implemented in a single can be integrated together into multiple software products or packaged into multiple software products. For example, data processing system 105 may be a single module, a logical device having one or more processing modules, one or more servers, or part of a search engine.
今やいくつかの例示的な実装および実装を説明したが、以上は例示的であり、限定的でなく、例として提示されたことは明らかである。特に、本明細書において提示された例の多くは方法の行為またはシステムの要素の特定の組合せを含むが、それらの行為およびそれらの要素は、同じ目的を達成するためにその他の方法で組み合わされる可能性がある。1つの実装にのみ関連して検討された行為、要素、および特徴は、その他の実装または実装において同様の役割から除外されるように意図されていない。 Having now described several exemplary implementations and implementations, it should be clear that the foregoing has been presented by way of example, and not by way of limitation. In particular, although many of the examples presented herein involve specific combinations of method acts or system elements, those acts and those elements may be otherwise combined to accomplish the same purpose. there is a possibility. Acts, elements, and features discussed in connection with only one implementation are not intended to be excluded from similar roles in other implementations or implementations.
本明細書において使用された言葉遣いおよび用語は、説明を目的としており、限定と見なされるべきでない。本明細書における「～を含む(including)」、「～を含む(comprising)」、「～を有する」、「～を含む(containing)」、「～を含む(involving)」、「～によって特徴付けられる(characterized by)」、「～ことを特徴とする(characterized in that)」、およびこれらの変化形の使用は、その後に列挙された項目、それらの項目の均等物、および追加的な項目、ならびにその後に列挙された項目だけからなる代替的な実装を包含するように意図される。1つの実装において、本明細書に記載のシステムおよび方法は、説明された要素、行為、または構成要素のうちの1つ、2つ以上のそれぞれの組合せ、またはすべてからなる。 The phraseology and terminology used herein is for the purpose of description and should not be regarded as limiting. "including", "comprising", "having", "containing", "involving", "characterized by" herein The use of "characterized by", "characterized in that", and variations thereof shall apply to the items listed thereafter, equivalents of those items, and additional items. , as well as alternative implementations consisting solely of the items listed thereafter. In one implementation, the systems and methods described herein consist of one, each combination of two or more, or all of the described elements, acts, or components.
本明細書において単数形で言及されたシステムおよび方法の実装または要素または行為へのすべての言及は、複数のこれらの要素を含む実装も包含する可能性があり、本明細書における任意の実装または要素または行為への複数形のすべての言及は、単一の要素のみを含む実装も包含する可能性がある。単数形または複数形の言及は、今開示されたシステムもしくは方法、それらの構成要素、行為、または要素を単一のまたは複数の構成に限定するように意図されていない。任意の情報、行為、または要素に基づいている任意の行為または要素への言及は、行為または要素が任意の情報、行為、または要素に少なくとも部分的に基づく実装を含む可能性がある。 All references to implementations or elements or acts of the systems and methods mentioned herein in the singular may also encompass implementations that include the plural of these elements, and any implementation or All references to an element or act in the plural can also encompass implementations containing only a single element. Singular or plural references are not intended to limit the presently disclosed systems or methods, components, acts, or elements thereof to single or multiple configurations. Reference to any act or element based on any information, act or element may include implementations in which the act or element is based at least in part on any information, act or element.
本明細書において開示された任意の実装は、任意のその他の実装と組み合わされる可能性があり、「実装」、「いくつかの実装」、「代替的な実装」、「様々な実装」、「1つの実装」などの言及は、必ずしも相互排他的ではなく、実装に関連して説明された特定の特徴、構造、または特色が少なくとも1つの実装に含まれる可能性があることを示すように意図される。本明細書において使用されるそのような用語は、必ずしもすべてが同じ実装に言及していない。任意の実装は、本明細書において開示された態様および実装に合致する任意の方法で包括的または排他的に任意のその他の実装と組み合わされる可能性がある。 Any implementation disclosed herein may be combined with any other implementation and is References such as "one implementation" are not necessarily mutually exclusive, but are intended to indicate that at least one implementation may contain a particular feature, structure, or peculiarity described in connection with the implementation. be done. Such terms as used herein do not necessarily all refer to the same implementation. Any implementation may be combined with any other implementation, either inclusively or exclusively, in any way consistent with the aspects and implementations disclosed herein.
「または(or)」との言及は、「または(or)」を使用して記載された任意の項が記載された項のうちの1つ、2つ以上、およびすべてのいずれかを示す可能性があるように包括的であると見なされ得る。 References to "or" may indicate one, more than one, and all of the terms in which any term is written using "or". can be regarded as inclusive as it is.
図面、詳細な説明、または任意の請求項の技術的な特徴が後に参照符号が付されている場合、参照符号は、図面、詳細な説明、および請求項の理解しやすさを高めることのみを目的として含められた。したがって、参照符号があることもないことも、いかなる請求項の要素の範囲に対してのいかなる限定的な効果も持たない。 Where technical features of the drawings, detailed description or any claims are followed by reference signs, such reference signs only facilitate the comprehension of the drawings, detailed description and claims. included for the purpose. Accordingly, neither the presence or absence of any reference signs shall have any limiting effect on the scope of any claim element.
本明細書に記載のシステムおよび方法は、それらの特徴を逸脱することなくその他の特定の形態で具現化される可能性がある。本明細書において提供された例は情報リソースのコンテンツの表示を制御することに関するが、本明細書において説明されたシステムおよび方法は、その他の環境に適用され得る。上述の実装は、説明されたシステムおよび方法の限定ではなく、例示的である。したがって、本明細書に記載のシステムおよび方法の範囲は、上述の説明ではなく添付の請求項によって示され、請求項の均等の意味および範囲内に入る変更は、それに包含される。 The systems and methods described herein may be embodied in other specific forms without departing from their characteristics. Although the examples provided herein relate to controlling the display of content of information resources, the systems and methods described herein can be applied to other environments. The implementations described above are exemplary, rather than limiting, of the systems and methods described. The scope of the systems and methods described herein is, therefore, indicated by the appended claims rather than by the foregoing description, and all changes that come within the meaning and range of equivalency of the claims are embraced therein.
100 システム
105 データ処理システム
110 コンピュータネットワーク
115 コンテンツプロバイダ
120 データベース
125 検索トークンレシーバ
130 予測される要求リトリーバ
135 ビット列コンストラクタ
140 ビット列比較モジュール
145 検索トークンプルーナ
150 刈り込み済みトークンプロバイダ
205A 検索トークン
210A～N 予測される要求
215A ビット列
215B ビット列
305 結果ビット列
310 類似性の値
400 方法
406 方法
408 方法
414 方法
700 コンピュータシステム
705 通信インターフェース
710 出力デバイス
715 入力デバイス
720 プロセッサ
725 メモリ
100 systems
105 Data processing system
110 computer network
115 Content Providers
120 databases
125 Search Token Receiver
130 Predicted Request Retriever
135 bit string constructor
140-bit string comparison module
145 Search Token Pruner
150 Pruned Token Provider
205A Search Token
210A-N Expected demand
215A bit string
215B bit string
305 result bit string
310 similarity value
400 ways
406 method
408 method
414 method
700 computer system
705 communication interface
710 output device
715 Input Devices
720 processor
725 memory
Claims (20)
コンテンツプロバイダのコンピューティングシステムからの1つまたは複数のプロセッサを含むデータ処理システムによって、複数の検索トークンのうちの第1の検索トークンに関する関連する予測される要求を示す第1のデータ構造を構築するステップと、
前記データ処理システムによって、類似性の値を計算するために、前記第1のデータ構造を、前記複数の検索トークンのうちの第2の検索トークンに関する関連する予測される要求を示す第2のデータ構造と比較するステップと、
前記データ処理システムによって、前記類似性の値が所定の閾値よりも大きいと判定するステップと、
前記データ処理システムによって、前記類似性の値が所定の閾値よりも大きいと判定することに応じて刈り込まれた複数の検索トークンを生成するために、前記複数の検索トークンから前記第1の検索トークンおよび前記第2の検索トークンを削除するステップと、
前記データ処理システムによって、前記刈り込まれた複数の検索トークンを前記コンテンツプロバイダのコンピューティングデバイスに提供するステップと
を含む、方法。 A method for pruning selection criteria from a set of selection criteria based on document space association, comprising:
A data processing system including one or more processors from a content provider's computing system builds a first data structure indicating associated predicted requests for a first one of the plurality of search tokens. a step;
second data indicative of an associated predicted demand for a second one of the plurality of search tokens, by the data processing system, for calculating a similarity value; comparing to the structure;
determining, by the data processing system, that the similarity value is greater than a predetermined threshold;
the first search token from the plurality of search tokens to generate a plurality of pruned search tokens by the data processing system in response to determining that the similarity value is greater than a predetermined threshold; and deleting the second search token;
providing, by the data processing system, the pruned plurality of search tokens to a computing device of the content provider.
各ビット列内の各位置が、複数の予測される要求のうちの予測される要求に対応し、それぞれの予測される要求がそれぞれの検索トークンに対応するかどうかを示す値を有する請求項1に記載の方法。 the first data structure and the second data structure each comprise a bit string;
2. Each position within each bit string corresponds to a predicted request of the plurality of predicted requests, and has a value indicating whether each predicted request corresponds to a respective search token. described method.
前記ビット列選択基準を使用して、第2の刈り込まれたビット列を生成するために第2のビット列内の位置を選択するステップであって、前記第2の刈り込まれたビット列が、前記第2のビット列よりも小さい、ステップと
をさらに含み、
前記第1のビット列を前記第2のビット列と比較することが、前記第1の刈り込まれたビット列を前記第2の刈り込まれたビット列と比較することを含む請求項2に記載の方法。 selecting locations within a first bitstring to generate a first pruned bitstring using a bitstring selection criterion, wherein the first pruned bitstring is the first bitstring; a step less than
selecting locations within a second bitstream to generate a second pruned bitstream using the bitstream selection criteria, wherein the second pruned bitstream is a step that is smaller than the bit string, and
3. The method of claim 2, wherein comparing the first bit string to the second bit string comprises comparing the first pruned bit string to the second pruned bit string.
前記第1のデータ構造を構築するステップが、
前記データ処理システムによって、前記複数の重み値の各々を所定のトラフィックの閾値と比較すること、
前記データ処理システムによって、刈り込まれた複数の予測される要求を選択することであって、前記それぞれの重み値が前記所定のトラフィックの閾値よりも大きいことに応じて、前記刈り込まれた複数の各々が前記複数の予測される要求から選択される、選択すること、
前記データ処理システムによって、前記第1のビット列を構築することであって、前記第1のビット列内の各位置が、前記刈り込まれた複数の予測される要求のうちのそれぞれの予測される要求に対応し、前記それぞれの刈り込まれた予測される要求が前記第1の検索トークンに対応するかどうかを示す値を有する、構築すること
をさらに含む請求項1に記載の方法。 each predicted request is associated with a weight value based on a predicted traffic value for the predicted request;
The step of building the first data structure comprises:
comparing, by the data processing system, each of the plurality of weight values to a predetermined traffic threshold;
selecting, by the data processing system, a pruned plurality of predicted requests, each of the pruned plurality responsive to the respective weight value being greater than the predetermined traffic threshold; is selected from the plurality of predicted demands;
constructing, by the data processing system, the first bit string, each position within the first bit string corresponding to a respective predicted request of the pruned plurality of predicted requests; 2. The method of claim 1, further comprising constructing a corresponding and having a value indicating whether the respective pruned predicted request corresponds to the first search token.
前記データ処理システムによって、比較されたビット列を生成するために、前記第1のデータ構造および前記第2のデータ構造のビットの間の論理AND演算を実行するステップと、
前記データ処理システムによって、前記類似性の値を計算するために、所定のマッチ値に等しい前記比較されたビット列内の位置の数をカウントするステップと
を含む請求項1に記載の方法。 Comparing the first data structure to the second data structure comprises:
performing, by said data processing system, a logical AND operation between bits of said first data structure and said second data structure to produce a compared bit string;
and counting, by the data processing system, the number of positions in the compared bit strings that equal a predetermined match value to calculate the similarity value.
前記複数の予測される要求を取り出すことが、前記第1の検索トークンおよび前記第1の検索トークンに関連する前記コンテンツのレーティング値に基づく請求項1に記載の方法。 each of the plurality of search tokens associated with a content rating value;
2. The method of claim 1, wherein retrieving the plurality of predicted requests is based on the first search token and a rating value of the content associated with the first search token.
前記データ処理システムによって、前記刈り込まれた複数の検索トークンに基づいて前記刈り込まれた複数の検索トークンに関する妥当性の値を取り出すステップと、
前記データ処理システムによって、前記刈り込まれた複数の検索トークンに基づく前記妥当性の値を前記コンテンツプロバイダのコンピューティングデバイスに提供するステップと
をさらに含む請求項1に記載の方法。 providing the pruned plurality of search tokens to the content provider's computing device;
retrieving, by the data processing system, a validity value for the pruned search tokens based on the pruned search tokens;
2. The method of claim 1, further comprising providing, by the data processing system, the relevance value based on the pruned plurality of search tokens to a computing device of the content provider.
複数の検索トークンのうちの第1の検索トークンに関する関連する予測される要求を示す第1のデータ構造を構築し、
類似性の値を計算するために、前記第1のデータ構造を、前記複数の検索トークンのうちの第2の検索トークンに関する関連する予測される要求を示す第2のデータ構造と比較し、
前記類似性の値が所定の閾値よりも大きいかどうかを判定し、
前記類似性の値が所定の閾値よりも大きいと判定することに応じて、刈り込まれた複数の検索トークンを生成するために、前記複数の検索トークンから前記第1の検索トークンおよび前記第2の検索トークンを削除し、
前記刈り込まれた複数の検索トークンを前記コンテンツプロバイダのコンピューティングデバイスに提供する
ように構成される、システム。 A system comprising a data processing system comprising one or more processors, said data processing system comprising:
constructing a first data structure indicating associated predicted demands for a first search token of the plurality of search tokens;
comparing the first data structure to a second data structure indicative of an associated predicted demand for a second one of the plurality of search tokens to calculate a similarity value;
determining whether the similarity value is greater than a predetermined threshold;
the first search token and the second search token from the plurality of search tokens to generate a pruned plurality of search tokens in response to determining that the similarity value is greater than a predetermined threshold; remove the search token,
A system configured to provide the plurality of pruned search tokens to a computing device of the content provider.
各ビット列内の各位置が、複数の予測される要求のうちの予測される要求に対応し、それぞれの予測される要求がそれぞれの検索トークンに対応するかどうかを示す値を有する請求項11に記載のシステム。 the first data structure and the second data structure each comprise a bit string;
12. Each position within each bit string corresponds to a predicted request of the plurality of predicted requests, and has a value indicating whether each predicted request corresponds to a respective search token. System as described.
ビット列選択基準を使用して、第1の刈り込まれたビット列を生成するために、第1のビット列内の位置を選択することであって、前記第1の刈り込まれたビット列が、前記第1のビット列よりも小さい、選択することと、
前記ビット列選択基準を使用して、第2の刈り込まれたビット列を生成するために、前記第2のビット列内の位置を選択することであって、前記第2の刈り込まれたビット列が、前記第2のビット列よりも小さい、選択することと
を行うようにさらに構成され、
前記第1のビット列を前記第2のビット列と比較することが、前記第1の刈り込まれたビット列を前記第2の刈り込まれたビット列と比較することを含む請求項12に記載のシステム。 the data processing system comprising:
selecting a position within a first bitstream to generate a first pruned bitstream using a bitstream selection criterion, wherein the first pruned bitstream is the first bitstream; selecting less than the bit string;
selecting locations within the second bitstream to generate a second pruned bitstream using the bitstream selection criteria, wherein the second pruned bitstream is further configured to select a bit string less than 2, and
13. The system of claim 12, wherein comparing the first bitstream to the second bitstream comprises comparing the first pruned bitstream to the second pruned bitstream.
前記複数の重み値の各々を所定のトラフィックの閾値と比較することと、
刈り込まれた複数の予測される要求を選択することであって、前記それぞれの重み値が前記所定のトラフィックの閾値よりも大きいことに応じて、前記刈り込まれた複数の各々が前記複数の予測される要求から選択される、選択することと、
前記第1のビット列を構築することであって、前記第1のビット列内の各位置が、前記刈り込まれた複数の予測される要求のうちのそれぞれの予測される要求に対応し、前記それぞれの刈り込まれた予測される要求が前記第1の検索トークンに対応するかどうかを示す値を有する、構築することと
を行うようにさらに構成される請求項11に記載のシステム。 each predicted request is associated with a weight value based on a predicted traffic value for the predicted request, the data processing system comprising:
comparing each of the plurality of weight values to a predetermined traffic threshold;
selecting a pruned plurality of predicted requests, wherein each of the pruned plurality is selected from the plurality of predicted requests in response to the respective weight value being greater than the predetermined traffic threshold; selected from a request to be selected; and
constructing the first bit string, wherein each position in the first bit string corresponds to a respective predicted demand of the pruned plurality of predicted demands; 12. The system of claim 11, further configured to: construct a value indicating whether a pruned predicted request corresponds to the first search token.
比較されたビット列を生成するために、前記第1のデータ構造と前記第2のデータ構造との間の論理AND演算を実行し、
前記類似性の値を計算するために、所定のマッチ値に等しい前記比較されたビット列内の位置の数をカウントする
ようにさらに構成される請求項11に記載のシステム。 the data processing system comprising:
performing a logical AND operation between the first data structure and the second data structure to produce a compared bit string;
12. The system of claim 11, further configured to count the number of positions in the compared bit strings equal to a predetermined match value to calculate the similarity value.
前記類似性の値が前記所定の閾値未満であることに応じて前記刈り込まれた複数の検索トークンを生成するために、前記複数の検索トークンから前記第1の検索トークンを削除するようにさらに構成される請求項11に記載のシステム。 the data processing system comprising:
Further configured to remove the first search token from the plurality of search tokens to generate the pruned plurality of search tokens responsive to the similarity value being less than the predetermined threshold. 12. The system of claim 11 .
前記データ処理システムが、前記複数の検索トークンおよび前記第1の検索トークンに関連する前記コンテンツのレーティング値に基づいて前記複数の予測される要求を取り出すようにさらに構成される請求項11に記載のシステム。 each of the plurality of search tokens associated with a content rating value;
12. The data processing system of claim 11, wherein the data processing system is further configured to retrieve the plurality of predicted requests based on rating values of the content associated with the plurality of search tokens and the first search token. system.
前記第1の検索トークンおよび前記第2の検索トークンの指示を提供するようにさらに構成される請求項11に記載のシステム。 the data processing system comprising:
12. The system of Claim 11, further configured to provide an indication of the first search token and the second search token.
前記刈り込まれた複数の検索トークンに基づいて前記刈り込まれた複数の検索トークンに関する妥当性の値を取り出し、
前記妥当性の値を前記コンテンツプロバイダのコンピューティングデバイスに提供するようにさらに構成される請求項11に記載のシステム。 data processing system
retrieving a validity value for the pruned search tokens based on the pruned search tokens;
12. The system of claim 11, further configured to provide the validity value to the content provider's computing device.
Priority Applications (1)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
JP2022180535A JP2023021113A (en) | 2019-12-11 | 2022-11-10 | Content provider recommendations to improve targetting and other settings |
Applications Claiming Priority (3)
Application Number | Priority Date | Filing Date | Title |
---|---|---|---|
JP2020520505A JP7177152B2 (en) | 2019-12-11 | 2019-12-11 | Content provider recommendations to improve targeting and other settings |
PCT/US2019/065733 WO2021118559A1 (en) | 2019-12-11 | 2019-12-11 | Content provider recommendations to improve targetting and other settings |
JP2022180535A JP2023021113A (en) | 2019-12-11 | 2022-11-10 | Content provider recommendations to improve targetting and other settings |
Related Parent Applications (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2020520505A Division JP7177152B2 (en) | 2019-12-11 | 2019-12-11 | Content provider recommendations to improve targeting and other settings |
Publications (1)
Publication Number | Publication Date |
---|---|
JP2023021113A true JP2023021113A (en) | 2023-02-09 |
Family
ID=69165580
Family Applications (2)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2020520505A Active JP7177152B2 (en) | 2019-12-11 | 2019-12-11 | Content provider recommendations to improve targeting and other settings |
JP2022180535A Pending JP2023021113A (en) | 2019-12-11 | 2022-11-10 | Content provider recommendations to improve targetting and other settings |
Family Applications Before (1)
Application Number | Title | Priority Date | Filing Date |
---|---|---|---|
JP2020520505A Active JP7177152B2 (en) | 2019-12-11 | 2019-12-11 | Content provider recommendations to improve targeting and other settings |
Country Status (7)
Country | Link |
---|---|
US (1) | US11669784B2 (en) |
EP (1) | EP3853786A1 (en) |
JP (2) | JP7177152B2 (en) |
KR (2) | KR102605598B1 (en) |
CN (1) | CN114616578A (en) |
CA (1) | CA3160683A1 (en) |
WO (1) | WO2021118559A1 (en) |
Families Citing this family (2)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
EP3897017B1 (en) * | 2020-04-17 | 2023-11-01 | Secure Thingz Limited | A provisioning control apparatus, system and method |
US20230325598A1 (en) * | 2022-04-07 | 2023-10-12 | Klarna Bank Ab | Dynamically generating feature vectors for document object model elements |
Family Cites Families (14)
Publication number | Priority date | Publication date | Assignee | Title |
---|---|---|---|---|
GB9802836D0 (en) | 1998-02-10 | 1998-04-08 | Canon Kk | Pattern matching method and apparatus |
US7814104B2 (en) * | 2005-05-04 | 2010-10-12 | Oracle International Corporation | Techniques for partition pruning |
KR100835291B1 (en) | 2007-03-14 | 2008-06-10 | 엔에이치엔(주) | Method and system for query targeting |
JP5480058B2 (en) | 2010-08-03 | 2014-04-23 | ヤフー株式会社 | Advertisement matching apparatus, method and program |
US9197872B2 (en) * | 2013-02-21 | 2015-11-24 | Comcast Cable Communications, LLC. | Managing stored content |
US9600503B2 (en) | 2013-07-25 | 2017-03-21 | Facebook, Inc. | Systems and methods for pruning data by sampling |
US10628418B2 (en) * | 2014-11-13 | 2020-04-21 | Sap Se | Data driven multi-provider pruning for query execution plan |
US10929360B2 (en) * | 2015-10-19 | 2021-02-23 | Oracle International Corporation | Filtered partition maintenance operations |
KR101638127B1 (en) | 2016-01-29 | 2016-07-11 | 박요섭 | Method for providing continuous contents generating and customized contents library service |
US10432722B2 (en) * | 2016-05-06 | 2019-10-01 | Microsoft Technology Licensing, Llc | Cloud storage platform providing performance-based service level agreements |
US11106712B2 (en) * | 2016-10-24 | 2021-08-31 | Google Llc | Systems and methods for measuring the semantic relevance of keywords |
KR102262480B1 (en) * | 2016-12-30 | 2021-06-08 | 구글 엘엘씨 | Hash-based dynamic constraint on information resources |
US10353863B1 (en) | 2018-04-11 | 2019-07-16 | Capital One Services, Llc | Utilizing machine learning to determine data storage pruning parameters |
US11580170B2 (en) | 2018-11-01 | 2023-02-14 | Google Llc | Machine learning based automatic audience segment in ad targeting |
-
2019
- 2019-12-11 EP EP19836731.0A patent/EP3853786A1/en not_active Withdrawn
- 2019-12-11 KR KR1020227010239A patent/KR102605598B1/en active IP Right Grant
- 2019-12-11 JP JP2020520505A patent/JP7177152B2/en active Active
- 2019-12-11 CN CN201980005050.XA patent/CN114616578A/en active Pending
- 2019-12-11 KR KR1020207012451A patent/KR102381330B1/en active IP Right Grant
- 2019-12-11 WO PCT/US2019/065733 patent/WO2021118559A1/en unknown
- 2019-12-11 CA CA3160683A patent/CA3160683A1/en active Pending
- 2019-12-11 US US16/756,347 patent/US11669784B2/en active Active
-
2022
- 2022-11-10 JP JP2022180535A patent/JP2023021113A/en active Pending
Also Published As
Publication number | Publication date |
---|---|
CN114616578A (en) | 2022-06-10 |
KR20210075904A (en) | 2021-06-23 |
WO2021118559A1 (en) | 2021-06-17 |
JP2022517882A (en) | 2022-03-11 |
US20210184976A1 (en) | 2021-06-17 |
KR102381330B1 (en) | 2022-04-01 |
US11669784B2 (en) | 2023-06-06 |
CA3160683A1 (en) | 2021-06-17 |
EP3853786A1 (en) | 2021-07-28 |
KR102605598B1 (en) | 2023-11-23 |
KR20220102133A (en) | 2022-07-19 |
JP7177152B2 (en) | 2022-11-22 |
Similar Documents
Publication | Publication Date | Title |
---|---|---|
JP2023021113A (en) | Content provider recommendations to improve targetting and other settings | |
US10853362B2 (en) | Optimized full-spectrum loglog-based cardinality estimation | |
US11790116B2 (en) | Systems and methods for privacy preserving determination of intersections of sets of user identifiers | |
US20130204905A1 (en) | Remapping locality-sensitive hash vectors to compact bit vectors | |
US11430003B1 (en) | Expansion of high performing placement criteria | |
JP7427119B2 (en) | System and method for cross-media reporting with fast merging of data sources | |
US20200175022A1 (en) | Data retrieval | |
US11068481B2 (en) | Optimized full-spectrum order statistics-based cardinality estimation | |
US20230259837A1 (en) | Content provider recommendations to improve targetting and other settings | |
JP7238109B2 (en) | Systems and methods for generating and selecting local content to improve security and utilization of network resources | |
US20220109672A1 (en) | Systems and methods for secure and privacy preserving device classification | |
JP7479501B2 (en) | Bloom filter meta-estimation with vectors of counts | |
CN111626044A (en) | Text generation method and device, electronic equipment and computer readable storage medium | |
CN112580087A (en) | Encrypted data searching method and device, storage medium and electronic equipment | |
CN109508227B (en) | Application analysis method and device, computing equipment and storage medium |
Legal Events
Date | Code | Title | Description |
---|---|---|---|
A521 | Request for written amendment filed |
Free format text: JAPANESE INTERMEDIATE CODE: A523Effective date: 20221207 |
|
A621 | Written request for application examination |
Free format text: JAPANESE INTERMEDIATE CODE: A621Effective date: 20221207 |
|
A977 | Report on retrieval |
Free format text: JAPANESE INTERMEDIATE CODE: A971007Effective date: 20231213 |
|
A131 | Notification of reasons for refusal |
Free format text: JAPANESE INTERMEDIATE CODE: A131Effective date: 20231218 |
|
A521 | Request for written amendment filed |
Free format text: JAPANESE INTERMEDIATE CODE: A523Effective date: 20240305 |
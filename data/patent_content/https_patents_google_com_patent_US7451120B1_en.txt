BACKGROUND
1. Field of the Invention
Implementations described herein relate generally to document searching and, more particularly, to identifying novel content in searched documents.
2. Description of Related Art
The World Wide Web (“web”) contains a vast amount of information. Locating a desired portion of the information, however, can be challenging. This problem is compounded because the amount of information on the web and the number of new users inexperienced at web searching are growing rapidly.
Search engines attempt to return hyperlinks to web pages in which a user is interested. Generally, search engines base their determination of the user's interest on search terms (called a search query) entered by the user. The goal of the search engine is to provide links to high quality, relevant results (e.g., web pages) to the user based on the search query. Typically, the search engine accomplishes this by matching the terms in the search query to a corpus of pre-stored web pages. Web pages that contain the user's search terms are “hits” and are returned to the user as links. Each “hit” may be ranked by the search engine based on various factors, such as, for example, the relevance of the “hit” to the search query.
SUMMARY
According to one aspect, a method may include determining an ordered sequence of documents and determining an amount of novel content contained in each document of the ordered sequence of documents. The method may further include assigning a novelty score to each document based on the determined amount of novel content.
According to another aspect, a method may include assigning a score to a document of a plurality of documents based on a presence of content in the document that is novel relative to content in other documents of the plurality of documents. The method may further include ranking the document among the other documents of the plurality of documents based on the assigned score.
According to a further aspect, a method may include identifying one or more textual sequences that carry information in a document of a plurality of documents and determining an importance of each of the textual sequences relative to the plurality of documents. The method may further include assigning a score t0 the document based on the determined importance of each of the textual sequences.
BRIEF DESCRIPTION OF THE DRAWINGS
The accompanying drawings, which are incorporated in and constitute a part of this specification, illustrate one or more embodiments of the invention and, together with the description, explain the invention. In the drawings,
FIG. 1 is an exemplary diagram of an overview of an implementation of the invention;
FIG. 2 is an exemplary diagram of a network in which systems and methods consistent with principles of the invention may be implemented;
FIG. 3 is an exemplary diagram of a client or server of FIG. 2 according to an implementation consistent with principles of the invention;
FIGS. 4, 5A and 5B are flowcharts of an exemplary process for determining the existence of novel content in a sequence of documents consistent with principles of the invention;
FIG. 6 is a diagram that illustrates “information nuggets” identified in an exemplary document consistent with an aspect of the invention;
FIG. 7 is a diagram that illustrates the determination of the importance of information nuggets within an exemplary document consistent with an aspect of the invention;
FIG. 8 is a diagram that illustrates the identification of interactions between information nuggets within an exemplary document consistent with an aspect of the invention;
FIG. 9 is a diagram that illustrates the determination of the importance of interactions within an exemplary document consistent with an aspect of the invention;
FIG. 10 is a diagram that illustrates the determination of the importance of information nuggets contained within a sequence of documents consistent with an aspect of the invention;
FIG. 11 is a diagram that illustrates the determination of the importance of interactions contained within a sequence of documents consistent with an aspect of the invention; and
FIG. 12 is a diagram that illustrates the assignment of novelty scores to documents in a sequence of documents consistent with an aspect of the invention.
DETAILED DESCRIPTION
The following detailed description of the invention refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements. Also, the following detailed description does not limit the invention.
Consistent with aspects of the invention, a temporally ordered sequence of documents (e.g., a sequence of news articles on a given topic, or blog posts) may be returned as the result of a search of a corpus of documents by a search engine and then may be analyzed to identify documents that include content that is novel relative to prior content contained in other documents in the sequence. For example, in the context of news-related documents, the novel content may include facts that were missing from earlier articles on a topic. A novelty score may be assigned to each document based on an amount of novel content contained in the document. This novelty score may be used, for example, to rank documents among one another.
News aggregators, such as, for example, Google News, present news content from multiple on-line news sources in the format of a newspaper. For each news story, multiple news articles (e.g., a news cluster) related to a news story may be displayed. Often the articles within a news cluster have considerable redundancy and the same information is conveyed in many articles. Aspects of the invention can rank articles within news clusters in an optimal way so that the reader encounters novel information rather than redundancy.
A “document,” as the term is used herein, is to be broadly interpreted to include any machine-readable and machine-storable work product. A document may include, for example, an e-mail, a website, a business listing, a file, a combination of files, one or more files with embedded links to other files, a news group posting, a blog, a web advertisement, a digital map, etc. In the context of the Internet, a common document is a web page. Documents often include textual information and may include embedded information (such as meta information, images, hyperlinks, etc.) and/or embedded instructions (such as Javascript, etc.). A “link,” as the term is used herein, is to be broadly interpreted to include any reference to/from a document from/to another document or another part of the same document.
Overview
FIG. 1 illustrates an exemplary overview of a document novel content determination and novelty score assignment process consistent with one implementation of the invention. As shown in FIG. 1, a sequence S of documents 100 may be obtained, for example, by searching a corpus of documents based on a search query to obtain a set of documents that are related to the search query. A timestamp (time1, time2, time3, etc.) may be associated with each document of the sequence S of documents 100. The timestamp may, for example, include a time at which an associated document was published.
Each document of sequence S 100 may be analyzed, as further described in detail below, to identify novel content within the document. The novel content may include, for example, text, or other data, that is novel relative to other documents in sequence S 100. Novelty scores 130-1 through 130-n may then be assigned to respective documents A of sequence S 100 based on the existence of novel content within each document. For example, as shown in FIG. 1, document A3 includes novel content 120 and, thus, may be assigned a novelty score 130-3 that is higher than the novelty scores assigned to the other documents of sequence S 100 that do not include novel content.
As is further shown in FIG. 1, the assigned novelty scores 130-1 through 130-n may be used to rank the documents of sequence S 100 to produce ranked documents 140. As can be seen in the illustrative example of FIG. 1, document A3, which contains novel content 120, has a higher novelty score than other documents of sequence S 100 and, thus, is ranked higher than the other documents in ranked documents 140.
Exemplary Network Configuration
FIG. 2 is an exemplary diagram of a network 200 in which systems and methods consistent with the principles of the invention may be implemented. Network 200 may include multiple clients 205 connected to server 210, blog server(s) 220, or news server(s) 230 via a network 240. Two clients 205 and servers 210, 220 and 230 have been illustrated as connected to network 240 for simplicity. In practice, there may be more or fewer clients and servers. Also, in some instances, a client may perform one or more functions of a server and a server may perform one or more functions of a client.
Clients 205 may include devices, such as a personal computer, a wireless telephone, a personal digital assistant (PDA), a lap top, or another type of computation or communication device, a thread or process running on one of these devices, and/or an object executable by one of these devices. Clients 205 may implement a browser for browsing documents stored at servers 210, 220 or 230.
Server 210 may include a server entity that accesses, fetches, aggregates, processes, searches and/or maintains documents. In an implementation consistent with the principles of the invention, server 210 may include a search engine 215 usable by users at clients 205. Server 210 may implement a data aggregation service by crawling a corpus of documents hosted on server(s) 220 or 230, indexing the documents, and storing information associated with these documents in a repository of crawled documents. The aggregation service may be implemented in other ways, such as by agreement with the operator(s) of server(s) 220 or 230 to distribute their documents via the data aggregation service. Search engine 215 may execute a search using a query, received from a user at a client 205, on the corpus of documents stored in the repository of crawled documents. The query may, for example, be directed to searching for documents that include blog content or news-related content. Server 220 may provide, to a user issuing a query, a list of documents related to the blog or news-related content that have been ranked based on an amount of novel content that the documents have relative to one another.
Blog Server 220 may host content posted by users from clients 205. News server(s) 230 may store or maintain news-related documents that may be browsed by clients 205, or that may be crawled and copied by server 210. Such documents may include data related to published news stories, such as, for example, news stories from any type of news source, such as, for example, the Washington Post, the New York Times, Time magazine, or Newsweek. Clients 205 and servers 210, 220 and 230 may connect to network 240 via wired, wireless, and/or optical connections.
While servers 210, 220 and 230 are shown as separate entities, it may be possible for one of servers 210-230 to perform one or more of the functions of the other one of servers 210-230. For example, it may be possible that multiple ones of servers 210-230 are implemented as a single server. It may also be possible for a single one of servers 210-230 to be implemented as two or more separate (and possibly distributed) devices.
Network 240 may include one or more networks of any type, including a local area network (LAN), a wide area network (WAN), a metropolitan area network (MAN), a telephone network, such as the Public Switched Telephone Network (PSTN) or a Public Land Mobile Network (PLMN), an intranet, the Internet, a memory device, or a combination of networks. The PLMN(s) may further include a packet-switched sub-network, such as, for example, General Packet Radio Service (GPRS), Cellular Digital Packet Data (CDPD), or Mobile IP sub-network.
Exemplary Client/Server Architecture
FIG. 3 is an exemplary diagram of a client or server entity (hereinafter called “client/server entity”), which may correspond to one or more of clients 205 and/or servers 210-230, according to an implementation consistent with the principles of the invention. The client/server entity may include a bus 310, a processor 320, a main memory 330, a read only memory (ROM) 340, a storage device 350, an input device 360, an output device 370, and a communication interface 380. Bus 310 may include a path that permits communication among the elements of the client/server entity.
Processor 320 may include a processor, microprocessor, or processing logic that may interpret and execute instructions. Main memory 330 may include a random access memory (RAM) or another type of dynamic storage device that may store information and instructions for execution by processor 320. ROM 340 may include a ROM device or another type of static storage device that may store static information and instructions for use by processor 320. Storage device 350 may include a magnetic and/or optical recording medium and its corresponding drive.
Input device 360 may include a mechanism that permits an operator to input information to the client/server entity, such as a keyboard, a mouse, a pen, voice recognition and/or biometric mechanisms, etc. Output device 370 may include a mechanism that outputs information to the operator, including a display, a printer, a speaker, etc. Communication interface 380 may include any transceiver-like mechanism that enables the client/server entity to communicate with other devices and/or systems. For example, communication interface 380 may include mechanisms for communicating with another device or system via a network, such as network 220.
The client/server entity, consistent with the principles of the invention, may perform certain operations or processes, as will be described in detail below. The client/server entity may perform these operations in response to processor 320 executing software instructions contained in a computer-readable medium, such as memory 330. A computer-readable medium may be defined as a physical or logical memory device and/or carrier wave.
The software instructions may be read into memory 330 from another computer-readable medium, such as data storage device 350, or from another device via communication interface 380. The software instructions contained in memory 330 may cause processor 320 to perform operations or processes that will be described later. Alternatively, hardwired circuitry may be used in place of or in combination with software instructions to implement processes consistent with the principles of the invention. Thus, implementations consistent with the principles of the invention are not limited to any specific combination of hardware circuitry and software.
Exemplary Document Novel Content Determination Process
FIG. 4 is a flowchart of an exemplary process for determining the existence of novel content in a sequence of documents consistent with principles of the invention. The process exemplified by FIG. 4 may be implemented by server 210.
The exemplary process may begin with a determination of a temporally ordered sequence of documents S={A1, A2, A3, . . . , AN} (block 410). Search engine 215 of server 210 may search the repository of crawled documents to, for example, identify documents that are related, or relevant to, a search query. In one implementation, the search query may be provided by a user at a client 205. As a result of the search, search engine 215 may return a sequential set of documents S={A1, A2, A3, . . . , AN}, each of which has an associated time stamp that identifies a respective document's temporal location within the sequence. In one implementation, each of the documents may include a news article, and the sequence of documents S may include a news cluster related to a single news story.
A novelty score (NOVAj) may then be assigned to each of the documents of the sequence S based on an amount of novel content contained in each document Aj (block 420). The identification of novel content, and novelty score assignment based on the identified novel content, is described in further detail below with respect to FIGS. 5A and 5B.
The documents of sequence S may be ranked relative to one another based on the assigned novelty scores (block 430). A novelty score assigned to each document in sequence S may be compared to the novelty scores of other documents in sequence S to rank the documents among one another. Documents with assigned novelty scores that are higher than novelty scores of other documents may be ranked higher in the set of ranked documents.
FIGS. 5A and 5B are a flowchart that provides further details of the document novelty score assignment of block 420 of FIG. 4. Novelty score assignment may begin with the identification of “information nuggets” (t) in each of the documents A of sequence S (block 500). Each information nugget t may include a sequence of text that carries information. For example, each information nugget t may include a named entity, such as a sequence of words that constitute a name (e.g., Richard Nixon, Charles de Gaulle, WMD, Down Syndrome). Named entities may be recognized using various different techniques. For example, named entities may be recognized based on capitalization (e.g., “New York” is a capitalized sequence), by parsing the sentence structure and identifying noun phrases, or by matching against a previously compiled list of names. Named entities may be recognized using other techniques, such as those described in Cucerzan, S. and D. Yarowsky, 1999; Language independent named entity recognition combining morphological and contextual evidence: In Proc. 1999 Joint SIGDAT Conference on EMNLP and VLC; http://citeseer.ist.psu.edu/cucerzan991anguage.html or in Palmer, D. D. and D. S. Day. 1997; A Statistical Profile of the Named Entity Task. In Proc.; http://citeseer.ist.psu.edu/palmer97statistical.html. As another example, an information nugget t may include word sequences (e.g., 1, 2 or 3 word sequences) that appear in the title of a given document. As a further example, an information nugget t may include numbers contained in a given document. The numbers may be quantized suitably (e.g., documents that include content about Mount Everest may mention the mountain's height—some as 29,000 feet and others more precisely as 29,028 feet. These different height values may be determined to be equivalent information nuggets). FIG. 6 illustrates the identification of information nuggets 600 within a textual portion 610 of an exemplary document 620.
A counter j may be set to one (block 505). The counter j may subsequently be used for identifying which document Aj of the sequence of documents S that is being analyzed. An importance value (Na(t, Aj)) of the nugget t to document Aj may be determined for each information nugget t in document Aj (block 510). Importance value Na(t, Aj) may measure the importance of nugget t to document Aj and may be determined using various techniques. In one implementation, importance value Na(t, Aj) may be determined using the relation:
N a(t,A j)=TF(t,A)*IDF(t) Eqn. (1)
where TF(t, A) is the term frequency of information nugget t in document A and may be proportional to a number of occurrences of nugget t in document A (e.g., equal to the number of occurrences of t in A) and IDF(t) is the inverse document frequency of nugget t measured over the sequence S of documents. In another implementation, TF(t, A) in Eqn. (1) may be replaced by WTF(t, A) which represents a depth weighted sum of matches of t in document A:
where “depth of sentence s in A” is the number of sentences before sentence s in A. FIG. 7 illustrates importance values 700-1 through 700-p determined for each information nugget t of the exemplary document 620 of FIG. 6.
Each interaction i between information nuggets (t) in document Aj may be determined (block 515). An interaction i in document Ai may include a pair of information nuggets occurring in close proximity (e.g., within a clause, a sentence or paragraph of one another). In the example, “Prince Charles announced his intention to marry Camilla Parker-Bowles,” “Prince Charles” and “Camilla Parker-Bowles” may represent an “interaction.” FIG. 8 illustrates interactions 810-1 through 810-3 determined for pairs of information nuggets in the exemplary document 620 of FIG. 6.
For each interaction i in document Aj, an importance value (Ia(i, Aj)) of the interaction to the document may be determined (block 520). The importance value Ia(i, Aj) may be determine using various techniques. In one implementation, Ia(i, Aj) may equal TF(i, a), where TF(i, a) is a term frequency of interaction i in document A and is proportional to the number of occurrences of i in document A (e.g., equal to the number of occurrences of i in A). In another implementation, TF(i, A) may be replaced by WTF(i, A) which represents a depth weighted sum of matches of i in document A:
where “depth of sentence s in A” is the number of sentences before sentence s in A. FIG. 9 illustrates interaction importance values 910-1 through 910-3 determined for each of the interactions of the exemplary document 620 of FIG. 8.
A determination may be made whether there is another document in sequence S that has not been analyzed (block 525). If so, counter j may be incremented (I=j+1), and the exemplary process may return to block 510 for analysis of a next document in sequence S. If all documents in sequence S have been analyzed, then, for each information nugget t contained in any of the documents of sequence S, an importance (Ns(t, S)) of nugget t to the sequence of documents S may be determined (block 535). Ns(t, S) may measure the importance of nugget t to a given sequence S of documents and may be computed as one of, or a combination of, the following quantities:
1) frequency: a number of documents in sequence S that contain nugget t;
2) cumulative Na: a sum of Na(t, A) for all documents A in sequence S;
3) cumulative squashed Na: a sum of log(Na(t, A)) for all documents A in sequence S;
4) total interaction importance: a sum of Ia(i, S) over all interactions i that involve nugget t; or
5) max interaction importance: a sum of Ma(i, S) over all interactions i that involve nugget t. Ma(i, S) is the maximum Ia(i, A) over all documents A in sequence S.
FIG. 10 illustrates information nugget importance values 1010-1 through 1010-m, determined for documents of sequence S 1020, that identify 1030 the importance of each respective information nugget t to the sequence of documents S.
For each interaction i contained in any of the documents of sequence S, an importance (Is(i, S)) of the interaction i to the sequence of documents S may be determined (block 540). Is(i, S) may measure the importance of interaction i to a given sequence of documents S and may be computed as one of, or a combination of, the following quantities:
1) frequency: a number of documents in sequence S that contain the interaction i;
2) cumulative Ia: a sum of Ia(i, A) for all documents A in sequence S;
3) cumulative squashed Ia: a sum of log(Ia(i, A)) for all documents A in sequence S;
4) product of nugget importance: Ns(t1, S)*Ns(t2, S) for the interaction between nugget t1 and nugget t2.
FIG. 11 illustrates interaction importance values 1110-1 through 1110-m, determined for documents of sequence S 1120, that identify 1130 the importance of each respective interaction i to the sequence of documents S.
A novelty score (NOVA) for each document A of sequence S may be determined (block 545). The novelty score may measure the importance of document A to sequence S. The novelty score may be computed as one of, or a combination of, the following quantities:
1) sigma Ns(t, S) for all nuggets t that document A introduced for a first time (sigma Ns(t, S) equals the sum of Ns for all nuggets t that document A introduced for a first time);
2) Total improvement of nuggets: a sum of the improvement to all of the nuggets covered in document A. Let S1 be documents in the sequence S of documents that are earlier in the sequence than document A. The improvement to a nugget t for document A may be measured in one of the following ways:
-
- a) delta importance: Ns(t, {S1, A})−Ns(t, S1) over all nuggets t in document A;
- b) normalized delta importance: (Ns(t, {S1,A})−Ns(t, S1))/Ns(t, {S1, A})
- c) normalized delta importance*Ns(t, S)
3) sigma Is(i, S) for all interactions i that document A introduced for a first time;
4) Total improvement of interactions: a sum of the improvement to all of the interactions identified in document A. The improvement to interaction i by document A may be measured in one of, or a combination of, the following ways:
-
- a) delta importance: Is(i, {S1, A})−Is(i, S1) over all interactions i in document A;
- b) normalized delta importance: (Is(i, {S1, A})−Is(i, S1))/Is(t, {S1,A})
- c) normalized delta importance*Is(i, S)
Any combination of the quantities 1) through 4) described above may be used to measure the novelty of a document. For example, in one implementation, the quantities of 2(c) and 4(c) described above may be summed to measure the novelty of a document. FIG. 12 illustrates the assignment of novelty scores 1200 to each respective document of sequence S of documents 1210. The assigned novelty scores may subsequently be used for ranking the documents of the sequence S of documents. The assigned novelty scores may also be used to assess the information content of a respective document, for ranking clusters of documents, or for selecting which document or cluster of documents to display to a user.
In long lasting document sequences (i.e., sequences covering a long time period), information nuggets and interactions seen in documents that are separated by a considerable length of time may not be relevant in estimating the importance of the given document. Thus, when computing the importance of a document to a sequence of documents, the subset of the sequence extending from T1 days before the document to T2 days after the document (e.g., T1=7, T2=7) may be considered.
CONCLUSION
The foregoing description of implementations consistent with principles of the invention provides illustration and description, but is not intended to be exhaustive or to limit the invention to the precise form disclosed. Modifications and variations are possible in light of the above teachings, or may be acquired from practice of the invention. For example, while series of acts have been described with regard to FIGS. 4, 5A and 5B, the order of the acts may be modified in other implementations consistent with the principles of the invention. Further, non-dependent acts may be performed in parallel. Additionally, instead of crediting the document which introduced a given information nugget or interaction, as described above with respect to some aspects of the invention, the credit can be divided over all documents that are within time T of the first introduction (e.g., T=15 minutes).
It will be apparent to one of ordinary skill in the art that aspects of the invention, as described above, may be implemented in many different forms of software, firmware, and hardware in the implementations illustrated in the figures. The actual software code or specialized control hardware used to implement aspects consistent with the principles of the invention is not limiting of the invention. Thus, the operation and behavior of the aspects have been described without reference to the specific software code, it being understood that one of ordinary skill in the art would be able to design software and control hardware to implement the aspects based on the description herein.
No element, act, or instruction used in the present application should be construed as critical or essential to the invention unless explicitly described as such. Also, as used herein, the article “a” is intended to include one or more items. Where only one item is intended, the term “one” or similar language is used. Further, the phrase “based on” is intended to mean “based, at least in part, on” unless explicitly stated otherwise.